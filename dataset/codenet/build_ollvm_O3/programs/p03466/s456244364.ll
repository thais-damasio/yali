; ModuleID = 'build_ollvm/programs/p03466/s456244364.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s456244364.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_Z4readIiEvRT_ = comdat any

$_ZSt4swapIiEvRT_S1_ = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

$_Z6chkmaxIiEvRT_S0_ = comdat any

$_ZSt7reverseIPcEvT_S1_ = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZSt3maxIiERKT_S2_S2_ = comdat any

$_ZSt9__reverseIPcEvT_S1_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_ = comdat any

$_ZSt9iter_swapIPcS0_EvT_T0_ = comdat any

$_ZSt4swapIcEvRT_S1_ = comdat any

$_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@s = global [200005 x i8] zeroinitializer, align 16
@n = global i32 0, align 4
@m = global i32 0, align 4
@l = global i32 0, align 4
@r = global i32 0, align 4
@d = local_unnamed_addr global i32 0, align 4
@len = local_unnamed_addr global i32 0, align 4
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s456244364.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0
@x.15 = common local_unnamed_addr global i32 0
@y.16 = common local_unnamed_addr global i32 0
@x.17 = common local_unnamed_addr global i32 0
@y.18 = common local_unnamed_addr global i32 0
@x.19 = common local_unnamed_addr global i32 0
@y.20 = common local_unnamed_addr global i32 0
@x.21 = common local_unnamed_addr global i32 0
@y.22 = common local_unnamed_addr global i32 0
@x.23 = common local_unnamed_addr global i32 0
@y.24 = common local_unnamed_addr global i32 0
@x.25 = common local_unnamed_addr global i32 0
@y.26 = common local_unnamed_addr global i32 0
@x.27 = common local_unnamed_addr global i32 0
@y.28 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1238179238, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1238179238, label %11
    i32 552956212, label %14
    i32 -589140876, label %25
    i32 1144203533, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 552956212, i32 1144203533
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -589140876, i32 1144203533
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 552956212, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) %7)
  br label %9

9:                                                ; preds = %.backedge, %0
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i8 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.0 = phi i32 [ -1673744548, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1673744548, label %10
    i32 -916074343, label %14
    i32 91909220, label %24
    i32 -1610211850, label %32
    i32 -1877803168, label %42
    i32 -1059876963, label %60
    i32 -1276823224, label %62
    i32 -183208963, label %64
    i32 -110331418, label %67
    i32 867956068, label %77
    i32 -6965461, label %91
    i32 -1011772675, label %93
    i32 187801851, label %97
    i32 -695720675, label %107
    i32 -278677958, label %119
    i32 2005082183, label %120
    i32 39327108, label %121
    i32 -1222951032, label %123
    i32 -598240543, label %124
    i32 1372981996, label %129
    i32 -1445232420, label %132
    i32 -2032813037, label %147
    i32 1364495458, label %148
    i32 -325822024, label %158
    i32 -410726521, label %169
    i32 -1153771886, label %170
    i32 671947326, label %171
    i32 1285788665, label %173
    i32 -1984953527, label %180
    i32 1135529168, label %190
    i32 -2090472204, label %204
    i32 -2039985079, label %206
    i32 -548582074, label %210
    i32 147736991, label %213
    i32 1827346239, label %214
    i32 -177542848, label %224
    i32 1718268812, label %234
    i32 1694368520, label %235
    i32 -463976071, label %245
    i32 -164321497, label %272
    i32 1370361867, label %273
    i32 -1158413757, label %283
    i32 -1390988433, label %295
    i32 -1832756640, label %297
    i32 -1402283100, label %300
    i32 -1410503457, label %304
    i32 657207712, label %309
    i32 -1903575368, label %313
    i32 -1362082029, label %323
    i32 1319805211, label %341
    i32 2077592172, label %343
    i32 -531992433, label %347
    i32 -30484103, label %351
    i32 104247860, label %352
    i32 -797474959, label %353
    i32 1071965637, label %363
    i32 1556301783, label %373
    i32 -1128082054, label %374
    i32 -1998502855, label %376
    i32 -175865443, label %377
    i32 -1835134811, label %380
    i32 1684299102, label %390
    i32 -430995683, label %404
    i32 1024350732, label %405
    i32 -883470612, label %415
    i32 -1700019239, label %427
    i32 -1017842544, label %429
    i32 -925539492, label %435
    i32 2087525734, label %445
    i32 -376914459, label %457
    i32 1453531015, label %458
    i32 -1902230333, label %468
    i32 -2105352438, label %480
    i32 1803978558, label %481
    i32 973395840, label %482
    i32 869938500, label %492
    i32 990616202, label %503
    i32 -2051780318, label %504
    i32 503079200, label %514
    i32 971433888, label %524
    i32 -1864708821, label %525
    i32 -1539587851, label %535
    i32 -491920572, label %549
    i32 1281197251, label %550
    i32 -1539291022, label %551
    i32 1614666647, label %559
    i32 -548219890, label %560
    i32 543944607, label %563
    i32 -1093097098, label %565
    i32 -1322135071, label %566
    i32 1883744325, label %567
    i32 -699300148, label %586
    i32 1290829999, label %587
    i32 -1124784528, label %588
    i32 -1733268417, label %589
    i32 454528402, label %594
    i32 -1212239488, label %595
    i32 -1317821272, label %598
    i32 1672842572, label %601
    i32 -860424463, label %603
    i32 2063888364, label %604
  ]

.backedge:                                        ; preds = %9, %604, %603, %601, %598, %595, %594, %589, %588, %587, %586, %567, %566, %565, %563, %560, %559, %551, %549, %535, %525, %524, %514, %504, %503, %492, %482, %481, %480, %468, %458, %457, %445, %435, %429, %427, %415, %405, %404, %390, %380, %377, %376, %374, %373, %363, %353, %352, %351, %347, %343, %341, %323, %313, %309, %304, %300, %297, %295, %283, %273, %272, %245, %235, %234, %224, %214, %213, %210, %206, %204, %190, %180, %173, %171, %170, %169, %158, %148, %147, %132, %129, %124, %123, %121, %120, %119, %107, %97, %93, %91, %77, %67, %64, %62, %60, %42, %32, %24, %14, %10
  %.081.be = phi i32 [ %.081, %9 ], [ %.081, %604 ], [ %.081, %603 ], [ %.081, %601 ], [ %.081, %598 ], [ %.081, %595 ], [ %.081, %594 ], [ %.081, %589 ], [ %.081, %588 ], [ %.081, %587 ], [ %.081, %586 ], [ %.081, %567 ], [ %.081, %566 ], [ %.081, %565 ], [ %.081, %563 ], [ %.081, %560 ], [ %.081, %559 ], [ %.081, %551 ], [ %.081, %549 ], [ %.081, %535 ], [ %.081, %525 ], [ %.081, %524 ], [ %.081, %514 ], [ %.081, %504 ], [ %.081, %503 ], [ %.081, %492 ], [ %.081, %482 ], [ %.081, %481 ], [ %.081, %480 ], [ %.081, %468 ], [ %.081, %458 ], [ %.081, %457 ], [ %.081, %445 ], [ %.081, %435 ], [ %.081, %429 ], [ %.081, %427 ], [ %.081, %415 ], [ %.081, %405 ], [ %.081, %404 ], [ %.081, %390 ], [ %.081, %380 ], [ %.081, %377 ], [ %.081, %376 ], [ %.081, %374 ], [ %.081, %373 ], [ %.081, %363 ], [ %.081, %353 ], [ %.081, %352 ], [ %.081, %351 ], [ %.081, %347 ], [ %.081, %343 ], [ %.081, %341 ], [ %.081, %323 ], [ %.081, %313 ], [ %.081, %309 ], [ %.081, %304 ], [ %.081, %300 ], [ %.081, %297 ], [ %.081, %295 ], [ %.081, %283 ], [ %.081, %273 ], [ %.081, %272 ], [ %.081, %245 ], [ %.081, %235 ], [ %.081, %234 ], [ %.081, %224 ], [ %.081, %214 ], [ %.081, %213 ], [ %.081, %210 ], [ %.081, %206 ], [ %.081, %204 ], [ %.081, %190 ], [ %.081, %180 ], [ %.081, %173 ], [ %.081, %171 ], [ %.081, %170 ], [ %.081, %169 ], [ %.081, %158 ], [ %.081, %148 ], [ %.081, %147 ], [ %.081, %132 ], [ %.081, %129 ], [ %.081, %124 ], [ %.081, %123 ], [ %122, %121 ], [ %.081, %120 ], [ %.081, %119 ], [ %.081, %107 ], [ %.081, %97 ], [ %.081, %93 ], [ %.081, %91 ], [ %.081, %77 ], [ %.081, %67 ], [ %.081, %64 ], [ %63, %62 ], [ %.081, %60 ], [ %.081, %42 ], [ %.081, %32 ], [ %.081, %24 ], [ %.081, %14 ], [ %.081, %10 ]
  %.079.be = phi i32 [ %.079, %9 ], [ %.079, %604 ], [ %.079, %603 ], [ %.079, %601 ], [ %.079, %598 ], [ %.079, %595 ], [ %.079, %594 ], [ %.079, %589 ], [ %.079, %588 ], [ %.079, %587 ], [ %.079, %586 ], [ %.079, %567 ], [ %.079, %566 ], [ %.079, %565 ], [ %.079, %563 ], [ %.079, %560 ], [ %.079, %559 ], [ %.079, %551 ], [ %.079, %549 ], [ %.079, %535 ], [ %.079, %525 ], [ %.079, %524 ], [ %.079, %514 ], [ %.079, %504 ], [ %.079, %503 ], [ %.079, %492 ], [ %.079, %482 ], [ %.079, %481 ], [ %.079, %480 ], [ %.079, %468 ], [ %.079, %458 ], [ %.079, %457 ], [ %.079, %445 ], [ %.079, %435 ], [ %.079, %429 ], [ %.079, %427 ], [ %.079, %415 ], [ %.079, %405 ], [ %.079, %404 ], [ %.079, %390 ], [ %.079, %380 ], [ %.079, %377 ], [ %.079, %376 ], [ %.079, %374 ], [ %.079, %373 ], [ %.079, %363 ], [ %.079, %353 ], [ %.079, %352 ], [ %.079, %351 ], [ %.079, %347 ], [ %.079, %343 ], [ %.079, %341 ], [ %.079, %323 ], [ %.079, %313 ], [ %.079, %309 ], [ %.079, %304 ], [ %.079, %300 ], [ %.079, %297 ], [ %.079, %295 ], [ %.079, %283 ], [ %.079, %273 ], [ %.079, %272 ], [ %.079, %245 ], [ %.079, %235 ], [ %.079, %234 ], [ %.079, %224 ], [ %.079, %214 ], [ %.079, %213 ], [ %.079, %210 ], [ %.079, %206 ], [ %.079, %204 ], [ %.079, %190 ], [ %.079, %180 ], [ %.079, %173 ], [ %.079, %171 ], [ %.079, %170 ], [ %.079, %169 ], [ %.079, %158 ], [ %.079, %148 ], [ %.075, %147 ], [ %.079, %132 ], [ %.079, %129 ], [ 0, %124 ], [ %.079, %123 ], [ %.079, %121 ], [ %.079, %120 ], [ %.079, %119 ], [ %.079, %107 ], [ %.079, %97 ], [ %.079, %93 ], [ %.079, %91 ], [ %.079, %77 ], [ %.079, %67 ], [ %.079, %64 ], [ %.079, %62 ], [ %.079, %60 ], [ %.079, %42 ], [ %.079, %32 ], [ %.079, %24 ], [ %.079, %14 ], [ %.079, %10 ]
  %.077.be = phi i32 [ %.077, %9 ], [ %.077, %604 ], [ %.077, %603 ], [ %.077, %601 ], [ %.077, %598 ], [ %.077, %595 ], [ %.077, %594 ], [ %.077, %589 ], [ %.077, %588 ], [ %.077, %587 ], [ %.077, %586 ], [ %.077, %567 ], [ %.077, %566 ], [ %.077, %565 ], [ %564, %563 ], [ %.077, %560 ], [ %.077, %559 ], [ %.077, %551 ], [ %.077, %549 ], [ %.077, %535 ], [ %.077, %525 ], [ %.077, %524 ], [ %.077, %514 ], [ %.077, %504 ], [ %.077, %503 ], [ %.077, %492 ], [ %.077, %482 ], [ %.077, %481 ], [ %.077, %480 ], [ %.077, %468 ], [ %.077, %458 ], [ %.077, %457 ], [ %.077, %445 ], [ %.077, %435 ], [ %.077, %429 ], [ %.077, %427 ], [ %.077, %415 ], [ %.077, %405 ], [ %.077, %404 ], [ %.077, %390 ], [ %.077, %380 ], [ %.077, %377 ], [ %.077, %376 ], [ %.077, %374 ], [ %.077, %373 ], [ %.077, %363 ], [ %.077, %353 ], [ %.077, %352 ], [ %.077, %351 ], [ %.077, %347 ], [ %.077, %343 ], [ %.077, %341 ], [ %.077, %323 ], [ %.077, %313 ], [ %.077, %309 ], [ %.077, %304 ], [ %.077, %300 ], [ %.077, %297 ], [ %.077, %295 ], [ %.077, %283 ], [ %.077, %273 ], [ %.077, %272 ], [ %.077, %245 ], [ %.077, %235 ], [ %.077, %234 ], [ %.077, %224 ], [ %.077, %214 ], [ %.077, %213 ], [ %.077, %210 ], [ %.077, %206 ], [ %.077, %204 ], [ %.077, %190 ], [ %.077, %180 ], [ %.077, %173 ], [ %.077, %171 ], [ %.077, %170 ], [ %.077, %169 ], [ %159, %158 ], [ %.077, %148 ], [ %.077, %147 ], [ %.077, %132 ], [ %.077, %129 ], [ %128, %124 ], [ %.077, %123 ], [ %.077, %121 ], [ %.077, %120 ], [ %.077, %119 ], [ %.077, %107 ], [ %.077, %97 ], [ %.077, %93 ], [ %.077, %91 ], [ %.077, %77 ], [ %.077, %67 ], [ %.077, %64 ], [ %.077, %62 ], [ %.077, %60 ], [ %.077, %42 ], [ %.077, %32 ], [ %.077, %24 ], [ %.077, %14 ], [ %.077, %10 ]
  %.075.be = phi i32 [ %.075, %9 ], [ %.075, %604 ], [ %.075, %603 ], [ %.075, %601 ], [ %.075, %598 ], [ %.075, %595 ], [ %.075, %594 ], [ %.075, %589 ], [ %.075, %588 ], [ %.075, %587 ], [ %.075, %586 ], [ %.075, %567 ], [ %.075, %566 ], [ %.075, %565 ], [ %.075, %563 ], [ %.075, %560 ], [ %.075, %559 ], [ %.075, %551 ], [ %.075, %549 ], [ %.075, %535 ], [ %.075, %525 ], [ %.075, %524 ], [ %.075, %514 ], [ %.075, %504 ], [ %.075, %503 ], [ %.075, %492 ], [ %.075, %482 ], [ %.075, %481 ], [ %.075, %480 ], [ %.075, %468 ], [ %.075, %458 ], [ %.075, %457 ], [ %.075, %445 ], [ %.075, %435 ], [ %.075, %429 ], [ %.075, %427 ], [ %.075, %415 ], [ %.075, %405 ], [ %.075, %404 ], [ %.075, %390 ], [ %.075, %380 ], [ %.075, %377 ], [ %.075, %376 ], [ %.075, %374 ], [ %.075, %373 ], [ %.075, %363 ], [ %.075, %353 ], [ %.075, %352 ], [ %.075, %351 ], [ %.075, %347 ], [ %.075, %343 ], [ %.075, %341 ], [ %.075, %323 ], [ %.075, %313 ], [ %.075, %309 ], [ %.075, %304 ], [ %.075, %300 ], [ %.075, %297 ], [ %.075, %295 ], [ %.075, %283 ], [ %.075, %273 ], [ %.075, %272 ], [ %.075, %245 ], [ %.075, %235 ], [ %.075, %234 ], [ %.075, %224 ], [ %.075, %214 ], [ %.075, %213 ], [ %.075, %210 ], [ %.075, %206 ], [ %.075, %204 ], [ %.075, %190 ], [ %.075, %180 ], [ %.075, %173 ], [ %.075, %171 ], [ %.075, %170 ], [ %.075, %169 ], [ %.075, %158 ], [ %.075, %148 ], [ %.075, %147 ], [ %135, %132 ], [ %.075, %129 ], [ %.075, %124 ], [ %.075, %123 ], [ %.075, %121 ], [ %.075, %120 ], [ %.075, %119 ], [ %.075, %107 ], [ %.075, %97 ], [ %.075, %93 ], [ %.075, %91 ], [ %.075, %77 ], [ %.075, %67 ], [ %.075, %64 ], [ %.075, %62 ], [ %.075, %60 ], [ %.075, %42 ], [ %.075, %32 ], [ %.075, %24 ], [ %.075, %14 ], [ %.075, %10 ]
  %.073.be = phi i32 [ %.073, %9 ], [ %.073, %604 ], [ %.073, %603 ], [ %.073, %601 ], [ %.073, %598 ], [ %.073, %595 ], [ %.073, %594 ], [ %.073, %589 ], [ %.073, %588 ], [ %.073, %587 ], [ %.073, %586 ], [ %.073, %567 ], [ %.073, %566 ], [ %.073, %565 ], [ %.073, %563 ], [ %.neg88, %560 ], [ %.073, %559 ], [ 0, %551 ], [ %.073, %549 ], [ %.073, %535 ], [ %.073, %525 ], [ %.073, %524 ], [ %.073, %514 ], [ %.073, %504 ], [ %.073, %503 ], [ %.073, %492 ], [ %.073, %482 ], [ %.073, %481 ], [ %.073, %480 ], [ %.073, %468 ], [ %.073, %458 ], [ %.073, %457 ], [ %.073, %445 ], [ %.073, %435 ], [ %.073, %429 ], [ %.073, %427 ], [ %.073, %415 ], [ %.073, %405 ], [ %.073, %404 ], [ %.073, %390 ], [ %.073, %380 ], [ %.073, %377 ], [ %.073, %376 ], [ %.073, %374 ], [ %.073, %373 ], [ %.073, %363 ], [ %.073, %353 ], [ %.073, %352 ], [ %.073, %351 ], [ %348, %347 ], [ %344, %343 ], [ %.073, %341 ], [ %.073, %323 ], [ %.073, %313 ], [ %310, %309 ], [ %.073, %304 ], [ %301, %300 ], [ %.073, %297 ], [ %.073, %295 ], [ %.073, %283 ], [ %.073, %273 ], [ %.073, %272 ], [ %.073, %245 ], [ %.073, %235 ], [ %.073, %234 ], [ %.073, %224 ], [ %.073, %214 ], [ %.073, %213 ], [ %.neg103, %210 ], [ %207, %206 ], [ %.073, %204 ], [ %.073, %190 ], [ %.073, %180 ], [ %.073, %173 ], [ %.073, %171 ], [ %.073, %170 ], [ %.073, %169 ], [ %.073, %158 ], [ %.073, %148 ], [ %.073, %147 ], [ %.073, %132 ], [ %.073, %129 ], [ %.073, %124 ], [ %.073, %123 ], [ %.073, %121 ], [ %.073, %120 ], [ %.073, %119 ], [ %.neg109, %107 ], [ %.073, %97 ], [ %94, %93 ], [ %.073, %91 ], [ %.073, %77 ], [ %.073, %67 ], [ %.073, %64 ], [ %.073, %62 ], [ %.073, %60 ], [ 0, %42 ], [ %.073, %32 ], [ %.073, %24 ], [ %.073, %14 ], [ %.073, %10 ]
  %.071.be = phi i8 [ %.071, %9 ], [ %.071, %604 ], [ %.071, %603 ], [ %.071, %601 ], [ %.071, %598 ], [ %.071, %595 ], [ %.071, %594 ], [ %.071, %589 ], [ %.071, %588 ], [ %.071, %587 ], [ %.071, %586 ], [ %.071, %567 ], [ %.071, %566 ], [ %.071, %565 ], [ %.071, %563 ], [ %.071, %560 ], [ %.071, %559 ], [ %.071, %551 ], [ %.071, %549 ], [ %.071, %535 ], [ %.071, %525 ], [ %.071, %524 ], [ %.071, %514 ], [ %.071, %504 ], [ %.071, %503 ], [ %.071, %492 ], [ %.071, %482 ], [ %.071, %481 ], [ %.071, %480 ], [ %.071, %468 ], [ %.071, %458 ], [ %.071, %457 ], [ %.071, %445 ], [ %.071, %435 ], [ %.071, %429 ], [ %.071, %427 ], [ %.071, %415 ], [ %.071, %405 ], [ %.071, %404 ], [ %.071, %390 ], [ %.071, %380 ], [ %.071, %377 ], [ %.071, %376 ], [ %.071, %374 ], [ %.071, %373 ], [ %.071, %363 ], [ %.071, %353 ], [ %.071, %352 ], [ %.071, %351 ], [ %.071, %347 ], [ %.071, %343 ], [ %.071, %341 ], [ %.071, %323 ], [ %.071, %313 ], [ %.071, %309 ], [ %.071, %304 ], [ %.071, %300 ], [ %.071, %297 ], [ %.071, %295 ], [ %.071, %283 ], [ %.071, %273 ], [ %.071, %272 ], [ %.071, %245 ], [ %.071, %235 ], [ %.071, %234 ], [ %.071, %224 ], [ %.071, %214 ], [ %.071, %213 ], [ %.071, %210 ], [ %.071, %206 ], [ %.071, %204 ], [ %.071, %190 ], [ %.071, %180 ], [ %.071, %173 ], [ %.071, %171 ], [ %.071, %170 ], [ %.071, %169 ], [ %.071, %158 ], [ %.071, %148 ], [ %.071, %147 ], [ %.071, %132 ], [ %.071, %129 ], [ %.071, %124 ], [ %.071, %123 ], [ %.071, %121 ], [ %.071, %120 ], [ %.071, %119 ], [ %.071, %107 ], [ %.071, %97 ], [ %.071, %93 ], [ %.071, %91 ], [ %.071, %77 ], [ %.071, %67 ], [ %.071, %64 ], [ %.071, %62 ], [ %.071, %60 ], [ %.071, %42 ], [ %.071, %32 ], [ %.071, %24 ], [ %18, %14 ], [ %.071, %10 ]
  %.069.be = phi i32 [ %.069, %9 ], [ %.069, %604 ], [ %.069, %603 ], [ %.069, %601 ], [ %.069, %598 ], [ %.069, %595 ], [ %.069, %594 ], [ %.069, %589 ], [ %.069, %588 ], [ %.069, %587 ], [ %.069, %586 ], [ %.069, %567 ], [ %.neg87, %566 ], [ %.069, %565 ], [ %.069, %563 ], [ %.069, %560 ], [ %.069, %559 ], [ %.069, %551 ], [ %.069, %549 ], [ %.069, %535 ], [ %.069, %525 ], [ %.069, %524 ], [ %.069, %514 ], [ %.069, %504 ], [ %.069, %503 ], [ %.069, %492 ], [ %.069, %482 ], [ %.069, %481 ], [ %.069, %480 ], [ %.069, %468 ], [ %.069, %458 ], [ %.069, %457 ], [ %.069, %445 ], [ %.069, %435 ], [ %.069, %429 ], [ %.069, %427 ], [ %.069, %415 ], [ %.069, %405 ], [ %.069, %404 ], [ %.069, %390 ], [ %.069, %380 ], [ %.069, %377 ], [ %.069, %376 ], [ %.069, %374 ], [ %.069, %373 ], [ %.069, %363 ], [ %.069, %353 ], [ %.069, %352 ], [ %.069, %351 ], [ %.069, %347 ], [ %.069, %343 ], [ %.069, %341 ], [ %.069, %323 ], [ %.069, %313 ], [ %.069, %309 ], [ %.069, %304 ], [ %.069, %300 ], [ %.069, %297 ], [ %.069, %295 ], [ %.069, %283 ], [ %.069, %273 ], [ %.069, %272 ], [ %.069, %245 ], [ %.069, %235 ], [ %.069, %234 ], [ %.neg102, %224 ], [ %.069, %214 ], [ %.069, %213 ], [ %.069, %210 ], [ %.069, %206 ], [ %.069, %204 ], [ %.069, %190 ], [ %.069, %180 ], [ %.069, %173 ], [ %172, %171 ], [ %.069, %170 ], [ %.069, %169 ], [ %.069, %158 ], [ %.069, %148 ], [ %.069, %147 ], [ %.069, %132 ], [ %.069, %129 ], [ %.069, %124 ], [ %.069, %123 ], [ %.069, %121 ], [ %.069, %120 ], [ %.069, %119 ], [ %.069, %107 ], [ %.069, %97 ], [ %.069, %93 ], [ %.069, %91 ], [ %.069, %77 ], [ %.069, %67 ], [ %.069, %64 ], [ %.069, %62 ], [ %.069, %60 ], [ %.069, %42 ], [ %.069, %32 ], [ %.069, %24 ], [ %.069, %14 ], [ %.069, %10 ]
  %.067.be = phi i32 [ %.067, %9 ], [ %.067, %604 ], [ %.067, %603 ], [ %.067, %601 ], [ %.067, %598 ], [ %.067, %595 ], [ %.067, %594 ], [ %.067, %589 ], [ %.067, %588 ], [ %.067, %587 ], [ %.067, %586 ], [ %584, %567 ], [ %.067, %566 ], [ %.067, %565 ], [ %.067, %563 ], [ %.067, %560 ], [ %.067, %559 ], [ %.067, %551 ], [ %.067, %549 ], [ %.067, %535 ], [ %.067, %525 ], [ %.067, %524 ], [ %.067, %514 ], [ %.067, %504 ], [ %.067, %503 ], [ %.067, %492 ], [ %.067, %482 ], [ %.067, %481 ], [ %.067, %480 ], [ %.067, %468 ], [ %.067, %458 ], [ %.067, %457 ], [ %.067, %445 ], [ %.067, %435 ], [ %.067, %429 ], [ %.067, %427 ], [ %.067, %415 ], [ %.067, %405 ], [ %.067, %404 ], [ %.067, %390 ], [ %.067, %380 ], [ %.067, %377 ], [ %.067, %376 ], [ %.067, %374 ], [ %.067, %373 ], [ %.067, %363 ], [ %.067, %353 ], [ %.067, %352 ], [ %.067, %351 ], [ %.067, %347 ], [ %.067, %343 ], [ %.067, %341 ], [ %.067, %323 ], [ %.067, %313 ], [ %.067, %309 ], [ %.067, %304 ], [ %.067, %300 ], [ %.067, %297 ], [ %.067, %295 ], [ %.067, %283 ], [ %.067, %273 ], [ %.067, %272 ], [ %261, %245 ], [ %.067, %235 ], [ %.067, %234 ], [ %.067, %224 ], [ %.067, %214 ], [ %.067, %213 ], [ %.067, %210 ], [ %.067, %206 ], [ %.067, %204 ], [ %.067, %190 ], [ %.067, %180 ], [ %.067, %173 ], [ %.067, %171 ], [ %.067, %170 ], [ %.067, %169 ], [ %.067, %158 ], [ %.067, %148 ], [ %.067, %147 ], [ %.067, %132 ], [ %.067, %129 ], [ %.067, %124 ], [ %.067, %123 ], [ %.067, %121 ], [ %.067, %120 ], [ %.067, %119 ], [ %.067, %107 ], [ %.067, %97 ], [ %.067, %93 ], [ %.067, %91 ], [ %.067, %77 ], [ %.067, %67 ], [ %.067, %64 ], [ %.067, %62 ], [ %.067, %60 ], [ %.067, %42 ], [ %.067, %32 ], [ %.067, %24 ], [ %.067, %14 ], [ %.067, %10 ]
  %.065.be = phi i32 [ %.065, %9 ], [ %.065, %604 ], [ %.065, %603 ], [ %.065, %601 ], [ %.065, %598 ], [ %.065, %595 ], [ %.065, %594 ], [ %.065, %589 ], [ %.065, %588 ], [ %.065, %587 ], [ %.065, %586 ], [ %585, %567 ], [ %.065, %566 ], [ %.065, %565 ], [ %.065, %563 ], [ %.065, %560 ], [ %.065, %559 ], [ %.065, %551 ], [ %.065, %549 ], [ %.065, %535 ], [ %.065, %525 ], [ %.065, %524 ], [ %.065, %514 ], [ %.065, %504 ], [ %.065, %503 ], [ %.065, %492 ], [ %.065, %482 ], [ %.065, %481 ], [ %.065, %480 ], [ %.065, %468 ], [ %.065, %458 ], [ %.065, %457 ], [ %.065, %445 ], [ %.065, %435 ], [ %.065, %429 ], [ %.065, %427 ], [ %.065, %415 ], [ %.065, %405 ], [ %.065, %404 ], [ %.065, %390 ], [ %.065, %380 ], [ %.065, %377 ], [ %.065, %376 ], [ %375, %374 ], [ %.065, %373 ], [ %.065, %363 ], [ %.065, %353 ], [ %.065, %352 ], [ %.065, %351 ], [ %.065, %347 ], [ %.065, %343 ], [ %.065, %341 ], [ %.065, %323 ], [ %.065, %313 ], [ %.065, %309 ], [ %.065, %304 ], [ %.065, %300 ], [ %.065, %297 ], [ %.065, %295 ], [ %.065, %283 ], [ %.065, %273 ], [ %.065, %272 ], [ %262, %245 ], [ %.065, %235 ], [ %.065, %234 ], [ %.065, %224 ], [ %.065, %214 ], [ %.065, %213 ], [ %.065, %210 ], [ %.065, %206 ], [ %.065, %204 ], [ %.065, %190 ], [ %.065, %180 ], [ %.065, %173 ], [ %.065, %171 ], [ %.065, %170 ], [ %.065, %169 ], [ %.065, %158 ], [ %.065, %148 ], [ %.065, %147 ], [ %.065, %132 ], [ %.065, %129 ], [ %.065, %124 ], [ %.065, %123 ], [ %.065, %121 ], [ %.065, %120 ], [ %.065, %119 ], [ %.065, %107 ], [ %.065, %97 ], [ %.065, %93 ], [ %.065, %91 ], [ %.065, %77 ], [ %.065, %67 ], [ %.065, %64 ], [ %.065, %62 ], [ %.065, %60 ], [ %.065, %42 ], [ %.065, %32 ], [ %.065, %24 ], [ %.065, %14 ], [ %.065, %10 ]
  %.063.be = phi i32 [ %.063, %9 ], [ %.063, %604 ], [ %.063, %603 ], [ %602, %601 ], [ %.063, %598 ], [ %.063, %595 ], [ %.063, %594 ], [ 1, %589 ], [ %.063, %588 ], [ %.063, %587 ], [ %.063, %586 ], [ %.063, %567 ], [ %.063, %566 ], [ %.063, %565 ], [ %.063, %563 ], [ %.063, %560 ], [ %.063, %559 ], [ %.063, %551 ], [ %.063, %549 ], [ %.063, %535 ], [ %.063, %525 ], [ %.063, %524 ], [ %.063, %514 ], [ %.063, %504 ], [ %.063, %503 ], [ %493, %492 ], [ %.063, %482 ], [ %.063, %481 ], [ %.063, %480 ], [ %.063, %468 ], [ %.063, %458 ], [ %.063, %457 ], [ %.063, %445 ], [ %.063, %435 ], [ %.063, %429 ], [ %.063, %427 ], [ %.063, %415 ], [ %.063, %405 ], [ %.063, %404 ], [ 1, %390 ], [ %.063, %380 ], [ %.063, %377 ], [ %.063, %376 ], [ %.063, %374 ], [ %.063, %373 ], [ %.063, %363 ], [ %.063, %353 ], [ %.063, %352 ], [ %.063, %351 ], [ %.063, %347 ], [ %.063, %343 ], [ %.063, %341 ], [ %.063, %323 ], [ %.063, %313 ], [ %.063, %309 ], [ %.063, %304 ], [ %.063, %300 ], [ %.063, %297 ], [ %.063, %295 ], [ %.063, %283 ], [ %.063, %273 ], [ %.063, %272 ], [ %.063, %245 ], [ %.063, %235 ], [ %.063, %234 ], [ %.063, %224 ], [ %.063, %214 ], [ %.063, %213 ], [ %.063, %210 ], [ %.063, %206 ], [ %.063, %204 ], [ %.063, %190 ], [ %.063, %180 ], [ %.063, %173 ], [ %.063, %171 ], [ %.063, %170 ], [ %.063, %169 ], [ %.063, %158 ], [ %.063, %148 ], [ %.063, %147 ], [ %.063, %132 ], [ %.063, %129 ], [ %.063, %124 ], [ %.063, %123 ], [ %.063, %121 ], [ %.063, %120 ], [ %.063, %119 ], [ %.063, %107 ], [ %.063, %97 ], [ %.063, %93 ], [ %.063, %91 ], [ %.063, %77 ], [ %.063, %67 ], [ %.063, %64 ], [ %.063, %62 ], [ %.063, %60 ], [ %.063, %42 ], [ %.063, %32 ], [ %.063, %24 ], [ %.063, %14 ], [ %.063, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ -1539587851, %604 ], [ 503079200, %603 ], [ 869938500, %601 ], [ -1902230333, %598 ], [ 2087525734, %595 ], [ -883470612, %594 ], [ 1684299102, %589 ], [ 1071965637, %588 ], [ -1362082029, %587 ], [ -1158413757, %586 ], [ -463976071, %567 ], [ -177542848, %566 ], [ 1135529168, %565 ], [ -325822024, %563 ], [ -695720675, %560 ], [ 867956068, %559 ], [ -1877803168, %551 ], [ -1673744548, %549 ], [ %548, %535 ], [ %534, %525 ], [ -1864708821, %524 ], [ %523, %514 ], [ %513, %504 ], [ 1024350732, %503 ], [ %502, %492 ], [ %491, %482 ], [ 973395840, %481 ], [ 1803978558, %480 ], [ %479, %468 ], [ %467, %458 ], [ 1803978558, %457 ], [ %456, %445 ], [ %444, %435 ], [ %434, %429 ], [ %428, %427 ], [ %426, %415 ], [ %414, %405 ], [ 1024350732, %404 ], [ %403, %390 ], [ %389, %380 ], [ %379, %377 ], [ -175865443, %376 ], [ 1370361867, %374 ], [ -1128082054, %373 ], [ %372, %363 ], [ %362, %353 ], [ -797474959, %352 ], [ 104247860, %351 ], [ -30484103, %347 ], [ -30484103, %343 ], [ %342, %341 ], [ %340, %323 ], [ %322, %313 ], [ 104247860, %309 ], [ %308, %304 ], [ -797474959, %300 ], [ %299, %297 ], [ %296, %295 ], [ %294, %283 ], [ %282, %273 ], [ 1370361867, %272 ], [ %271, %245 ], [ %244, %235 ], [ 1285788665, %234 ], [ %233, %224 ], [ %223, %214 ], [ 1827346239, %213 ], [ 147736991, %210 ], [ 147736991, %206 ], [ %205, %204 ], [ %203, %190 ], [ %189, %180 ], [ %179, %173 ], [ 1285788665, %171 ], [ 1372981996, %170 ], [ -1153771886, %169 ], [ %168, %158 ], [ %157, %148 ], [ -1153771886, %147 ], [ %146, %132 ], [ %131, %129 ], [ 1372981996, %124 ], [ -175865443, %123 ], [ -183208963, %121 ], [ 39327108, %120 ], [ 2005082183, %119 ], [ %118, %107 ], [ %106, %97 ], [ 2005082183, %93 ], [ %92, %91 ], [ %90, %77 ], [ %76, %67 ], [ %66, %64 ], [ -183208963, %62 ], [ %61, %60 ], [ %59, %42 ], [ %41, %32 ], [ -1610211850, %24 ], [ %23, %14 ], [ %13, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* %7, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %7, align 4
  %.not116 = icmp eq i32 %11, 0
  %13 = select i1 %.not116, i32 1281197251, i32 -916074343
  br label %.backedge

14:                                               ; preds = %9
  call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) @n)
  call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) @m)
  %15 = load i32, i32* @n, align 4
  %16 = load i32, i32* @m, align 4
  %17 = icmp slt i32 %15, %16
  %18 = zext i1 %17 to i8
  call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) @l)
  call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) @r)
  %19 = load i32, i32* @r, align 4
  %20 = load i32, i32* @l, align 4
  %21 = add i32 %19, 1
  %22 = sub i32 %21, %20
  store i32 %22, i32* @len, align 4
  %23 = select i1 %17, i32 91909220, i32 -1610211850
  br label %.backedge

24:                                               ; preds = %9
  call void @_ZSt4swapIiEvRT_S1_(i32* nonnull dereferenceable(4) @n, i32* nonnull dereferenceable(4) @m) #7
  %25 = load i32, i32* @n, align 4
  %26 = load i32, i32* @m, align 4
  %27 = add i32 %26, %25
  %28 = load i32, i32* @l, align 4
  %29 = sub i32 1, %28
  %30 = add i32 %29, %27
  store i32 %30, i32* @l, align 4
  %31 = load i32, i32* @r, align 4
  %.neg114 = add i32 %27, 1
  %.neg115 = sub i32 %.neg114, %31
  store i32 %.neg115, i32* @r, align 4
  call void @_ZSt4swapIiEvRT_S1_(i32* nonnull dereferenceable(4) @l, i32* nonnull dereferenceable(4) @r) #7
  br label %.backedge

32:                                               ; preds = %9
  %33 = load i32, i32* @x.1, align 4
  %34 = load i32, i32* @y.2, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 -1877803168, i32 -1539291022
  br label %.backedge

42:                                               ; preds = %9
  %43 = load i32, i32* @n, align 4
  %44 = load i32, i32* @m, align 4
  %45 = add i32 %44, 1
  %46 = sdiv i32 %43, %45
  %47 = srem i32 %43, %45
  %48 = icmp ne i32 %47, 0
  %.neg111.neg = zext i1 %48 to i32
  %.neg112 = add i32 %46, %.neg111.neg
  store i32 %.neg112, i32* @d, align 4
  %49 = mul nsw i32 %.neg112, %44
  %50 = icmp sge i32 %43, %49
  store i1 %50, i1* %6, align 1
  %51 = load i32, i32* @x.1, align 4
  %52 = load i32, i32* @y.2, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 -1059876963, i32 -1539291022
  br label %.backedge

60:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %61 = select i1 %.0..0..0., i32 -1276823224, i32 -598240543
  br label %.backedge

62:                                               ; preds = %9
  %63 = load i32, i32* @l, align 4
  br label %.backedge

64:                                               ; preds = %9
  %65 = load i32, i32* @r, align 4
  %.not110 = icmp sgt i32 %.081, %65
  %66 = select i1 %.not110, i32 -1222951032, i32 -110331418
  br label %.backedge

67:                                               ; preds = %9
  %68 = load i32, i32* @x.1, align 4
  %69 = load i32, i32* @y.2, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 867956068, i32 1614666647
  br label %.backedge

77:                                               ; preds = %9
  %78 = load i32, i32* @d, align 4
  %79 = add i32 %78, 1
  %80 = srem i32 %.081, %79
  %81 = icmp eq i32 %80, 0
  store i1 %81, i1* %5, align 1
  %82 = load i32, i32* @x.1, align 4
  %83 = load i32, i32* @y.2, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 -6965461, i32 1614666647
  br label %.backedge

91:                                               ; preds = %9
  %.0..0..0.58 = load volatile i1, i1* %5, align 1
  %92 = select i1 %.0..0..0.58, i32 -1011772675, i32 187801851
  br label %.backedge

93:                                               ; preds = %9
  %94 = add i32 %.073, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %95
  store i8 66, i8* %96, align 1
  br label %.backedge

97:                                               ; preds = %9
  %98 = load i32, i32* @x.1, align 4
  %99 = load i32, i32* @y.2, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 -695720675, i32 -548219890
  br label %.backedge

107:                                              ; preds = %9
  %.neg109 = add i32 %.073, 1
  %108 = sext i32 %.neg109 to i64
  %109 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %108
  store i8 65, i8* %109, align 1
  %110 = load i32, i32* @x.1, align 4
  %111 = load i32, i32* @y.2, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 -278677958, i32 -548219890
  br label %.backedge

119:                                              ; preds = %9
  br label %.backedge

120:                                              ; preds = %9
  br label %.backedge

121:                                              ; preds = %9
  %122 = add i32 %.081, 1
  br label %.backedge

123:                                              ; preds = %9
  br label %.backedge

124:                                              ; preds = %9
  %125 = load i32, i32* @n, align 4
  %126 = load i32, i32* @d, align 4
  %127 = sdiv i32 %125, %126
  %128 = add i32 %127, -1
  br label %.backedge

129:                                              ; preds = %9
  %130 = icmp slt i32 %.079, %.077
  %131 = select i1 %130, i32 -1445232420, i32 671947326
  br label %.backedge

132:                                              ; preds = %9
  %133 = add i32 %.079, 1
  %134 = add i32 %133, %.077
  %135 = sdiv i32 %134, 2
  %136 = load i32, i32* @n, align 4
  %.neg106.neg = xor i32 %135, -1
  %137 = load i32, i32* @d, align 4
  %.neg107 = mul i32 %137, %.neg106.neg
  %138 = load i32, i32* @m, align 4
  %139 = sub i32 %138, %135
  %140 = add i32 %136, 1
  %141 = add i32 %140, %.neg107
  %142 = sext i32 %141 to i64
  %143 = sext i32 %137 to i64
  %144 = mul nsw i64 %142, %143
  %145 = sext i32 %139 to i64
  %.not108 = icmp slt i64 %144, %145
  %146 = select i1 %.not108, i32 1364495458, i32 -2032813037
  br label %.backedge

147:                                              ; preds = %9
  br label %.backedge

148:                                              ; preds = %9
  %149 = load i32, i32* @x.1, align 4
  %150 = load i32, i32* @y.2, align 4
  %151 = add i32 %149, -1
  %152 = mul i32 %151, %149
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %155, %154
  %157 = select i1 %156, i32 -325822024, i32 543944607
  br label %.backedge

158:                                              ; preds = %9
  %159 = add i32 %.075, -1
  %160 = load i32, i32* @x.1, align 4
  %161 = load i32, i32* @y.2, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -410726521, i32 543944607
  br label %.backedge

169:                                              ; preds = %9
  br label %.backedge

170:                                              ; preds = %9
  br label %.backedge

171:                                              ; preds = %9
  %172 = load i32, i32* @l, align 4
  br label %.backedge

173:                                              ; preds = %9
  %174 = load i32, i32* @d, align 4
  %.neg104 = add i32 %174, 1
  %175 = mul nsw i32 %.neg104, %.079
  %176 = add i32 %175, %174
  store i32 %176, i32* %8, align 4
  %177 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) @r)
  %178 = load i32, i32* %177, align 4
  %.not105 = icmp sgt i32 %.069, %178
  %179 = select i1 %.not105, i32 1694368520, i32 -1984953527
  br label %.backedge

180:                                              ; preds = %9
  %181 = load i32, i32* @x.1, align 4
  %182 = load i32, i32* @y.2, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 1135529168, i32 -1093097098
  br label %.backedge

190:                                              ; preds = %9
  %191 = load i32, i32* @d, align 4
  %192 = add i32 %191, 1
  %193 = srem i32 %.069, %192
  %194 = icmp eq i32 %193, 0
  store i1 %194, i1* %4, align 1
  %195 = load i32, i32* @x.1, align 4
  %196 = load i32, i32* @y.2, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 -2090472204, i32 -1093097098
  br label %.backedge

204:                                              ; preds = %9
  %.0..0..0.59 = load volatile i1, i1* %4, align 1
  %205 = select i1 %.0..0..0.59, i32 -2039985079, i32 -548582074
  br label %.backedge

206:                                              ; preds = %9
  %207 = add i32 %.073, 1
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %208
  store i8 66, i8* %209, align 1
  br label %.backedge

210:                                              ; preds = %9
  %.neg103 = add i32 %.073, 1
  %211 = sext i32 %.neg103 to i64
  %212 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %211
  store i8 65, i8* %212, align 1
  br label %.backedge

213:                                              ; preds = %9
  br label %.backedge

214:                                              ; preds = %9
  %215 = load i32, i32* @x.1, align 4
  %216 = load i32, i32* @y.2, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 -177542848, i32 -1322135071
  br label %.backedge

224:                                              ; preds = %9
  %.neg102 = add i32 %.069, 1
  %225 = load i32, i32* @x.1, align 4
  %226 = load i32, i32* @y.2, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 1718268812, i32 -1322135071
  br label %.backedge

234:                                              ; preds = %9
  br label %.backedge

235:                                              ; preds = %9
  %236 = load i32, i32* @x.1, align 4
  %237 = load i32, i32* @y.2, align 4
  %238 = add i32 %236, -1
  %239 = mul i32 %238, %236
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %242, %241
  %244 = select i1 %243, i32 -463976071, i32 1883744325
  br label %.backedge

245:                                              ; preds = %9
  %246 = load i32, i32* @d, align 4
  %.neg139 = xor i32 %246, -1
  %.neg140 = mul i32 %.079, %.neg139
  %247 = load i32, i32* @l, align 4
  %248 = sub i32 %247, %246
  %249 = add i32 %248, %.neg140
  store i32 %249, i32* @l, align 4
  call void @_Z6chkmaxIiEvRT_S0_(i32* nonnull dereferenceable(4) @l, i32 1)
  %250 = load i32, i32* @d, align 4
  %.neg97.neg = xor i32 %250, -1
  %.neg98 = mul i32 %.079, %.neg97.neg
  %.neg99 = sub i32 %.neg98, %250
  %251 = load i32, i32* @r, align 4
  %252 = add i32 %.neg99, %251
  store i32 %252, i32* @r, align 4
  call void @_Z6chkmaxIiEvRT_S0_(i32* nonnull dereferenceable(4) @r, i32 0)
  %.neg100 = xor i32 %.079, -1
  %253 = load i32, i32* @d, align 4
  %.neg101 = mul i32 %253, %.neg100
  %254 = load i32, i32* @n, align 4
  %255 = add i32 %.neg101, %254
  store i32 %255, i32* @n, align 4
  %256 = load i32, i32* @m, align 4
  %257 = sub i32 958619237, %.079
  %258 = add i32 %257, %256
  %259 = add i32 %258, -958619237
  store i32 %259, i32* @m, align 4
  %260 = add i32 %258, -958619238
  %261 = sdiv i32 %260, %253
  %262 = load i32, i32* @l, align 4
  %263 = load i32, i32* @x.1, align 4
  %264 = load i32, i32* @y.2, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 -164321497, i32 1883744325
  br label %.backedge

272:                                              ; preds = %9
  br label %.backedge

273:                                              ; preds = %9
  %274 = load i32, i32* @x.1, align 4
  %275 = load i32, i32* @y.2, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 -1158413757, i32 -699300148
  br label %.backedge

283:                                              ; preds = %9
  %284 = load i32, i32* @r, align 4
  %285 = icmp sle i32 %.065, %284
  store i1 %285, i1* %3, align 1
  %286 = load i32, i32* @x.1, align 4
  %287 = load i32, i32* @y.2, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 -1390988433, i32 -699300148
  br label %.backedge

295:                                              ; preds = %9
  %.0..0..0.60 = load volatile i1, i1* %3, align 1
  %296 = select i1 %.0..0..0.60, i32 -1832756640, i32 -1998502855
  br label %.backedge

297:                                              ; preds = %9
  %298 = icmp eq i32 %.065, 1
  %299 = select i1 %298, i32 -1402283100, i32 -1410503457
  br label %.backedge

300:                                              ; preds = %9
  %301 = add i32 %.073, 1
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %302
  store i8 66, i8* %303, align 1
  br label %.backedge

304:                                              ; preds = %9
  %305 = load i32, i32* @n, align 4
  %306 = sub i32 1, %.067
  %307 = add i32 %306, %305
  %.not92 = icmp sgt i32 %.065, %307
  %308 = select i1 %.not92, i32 -1903575368, i32 657207712
  br label %.backedge

309:                                              ; preds = %9
  %310 = add i32 %.073, 1
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %311
  store i8 65, i8* %312, align 1
  br label %.backedge

313:                                              ; preds = %9
  %314 = load i32, i32* @x.1, align 4
  %315 = load i32, i32* @y.2, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 -1362082029, i32 1290829999
  br label %.backedge

323:                                              ; preds = %9
  %324 = load i32, i32* @n, align 4
  %325 = load i32, i32* @m, align 4
  %326 = sub i32 1, %.065
  %.neg91.neg = add i32 %326, %324
  %327 = add i32 %.neg91.neg, %325
  %328 = load i32, i32* @d, align 4
  %329 = add i32 %328, 1
  %330 = srem i32 %327, %329
  %331 = icmp eq i32 %330, 0
  store i1 %331, i1* %2, align 1
  %332 = load i32, i32* @x.1, align 4
  %333 = load i32, i32* @y.2, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 1319805211, i32 1290829999
  br label %.backedge

341:                                              ; preds = %9
  %.0..0..0.61 = load volatile i1, i1* %2, align 1
  %342 = select i1 %.0..0..0.61, i32 2077592172, i32 -531992433
  br label %.backedge

343:                                              ; preds = %9
  %344 = add i32 %.073, 1
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %345
  store i8 65, i8* %346, align 1
  br label %.backedge

347:                                              ; preds = %9
  %348 = add i32 %.073, 1
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %349
  store i8 66, i8* %350, align 1
  br label %.backedge

351:                                              ; preds = %9
  br label %.backedge

352:                                              ; preds = %9
  br label %.backedge

353:                                              ; preds = %9
  %354 = load i32, i32* @x.1, align 4
  %355 = load i32, i32* @y.2, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 1071965637, i32 -1124784528
  br label %.backedge

363:                                              ; preds = %9
  %364 = load i32, i32* @x.1, align 4
  %365 = load i32, i32* @y.2, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 1556301783, i32 -1124784528
  br label %.backedge

373:                                              ; preds = %9
  br label %.backedge

374:                                              ; preds = %9
  %375 = add i32 %.065, 1
  br label %.backedge

376:                                              ; preds = %9
  br label %.backedge

377:                                              ; preds = %9
  %378 = and i8 %.071, 1
  %.not = icmp eq i8 %378, 0
  %379 = select i1 %.not, i32 -1864708821, i32 -1835134811
  br label %.backedge

380:                                              ; preds = %9
  %381 = load i32, i32* @x.1, align 4
  %382 = load i32, i32* @y.2, align 4
  %383 = add i32 %381, -1
  %384 = mul i32 %383, %381
  %385 = and i32 %384, 1
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %387, %386
  %389 = select i1 %388, i32 1684299102, i32 -1733268417
  br label %.backedge

390:                                              ; preds = %9
  %391 = load i32, i32* @len, align 4
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %392
  %394 = getelementptr inbounds i8, i8* %393, i64 1
  call void @_ZSt7reverseIPcEvT_S1_(i8* getelementptr inbounds ([200005 x i8], [200005 x i8]* @s, i64 0, i64 1), i8* nonnull %394)
  %395 = load i32, i32* @x.1, align 4
  %396 = load i32, i32* @y.2, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 -430995683, i32 -1733268417
  br label %.backedge

404:                                              ; preds = %9
  br label %.backedge

405:                                              ; preds = %9
  %406 = load i32, i32* @x.1, align 4
  %407 = load i32, i32* @y.2, align 4
  %408 = add i32 %406, -1
  %409 = mul i32 %408, %406
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %412, %411
  %414 = select i1 %413, i32 -883470612, i32 454528402
  br label %.backedge

415:                                              ; preds = %9
  %416 = load i32, i32* @len, align 4
  %417 = icmp sle i32 %.063, %416
  store i1 %417, i1* %1, align 1
  %418 = load i32, i32* @x.1, align 4
  %419 = load i32, i32* @y.2, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 -1700019239, i32 454528402
  br label %.backedge

427:                                              ; preds = %9
  %.0..0..0.62 = load volatile i1, i1* %1, align 1
  %428 = select i1 %.0..0..0.62, i32 -1017842544, i32 -2051780318
  br label %.backedge

429:                                              ; preds = %9
  %430 = sext i32 %.063 to i64
  %431 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %430
  %432 = load i8, i8* %431, align 1
  %433 = icmp eq i8 %432, 65
  %434 = select i1 %433, i32 -925539492, i32 1453531015
  br label %.backedge

435:                                              ; preds = %9
  %436 = load i32, i32* @x.1, align 4
  %437 = load i32, i32* @y.2, align 4
  %438 = add i32 %436, -1
  %439 = mul i32 %438, %436
  %440 = and i32 %439, 1
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %442, %441
  %444 = select i1 %443, i32 2087525734, i32 -1212239488
  br label %.backedge

445:                                              ; preds = %9
  %446 = sext i32 %.063 to i64
  %447 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %446
  store i8 66, i8* %447, align 1
  %448 = load i32, i32* @x.1, align 4
  %449 = load i32, i32* @y.2, align 4
  %450 = add i32 %448, -1
  %451 = mul i32 %450, %448
  %452 = and i32 %451, 1
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %454, %453
  %456 = select i1 %455, i32 -376914459, i32 -1212239488
  br label %.backedge

457:                                              ; preds = %9
  br label %.backedge

458:                                              ; preds = %9
  %459 = load i32, i32* @x.1, align 4
  %460 = load i32, i32* @y.2, align 4
  %461 = add i32 %459, -1
  %462 = mul i32 %461, %459
  %463 = and i32 %462, 1
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %465, %464
  %467 = select i1 %466, i32 -1902230333, i32 -1317821272
  br label %.backedge

468:                                              ; preds = %9
  %469 = sext i32 %.063 to i64
  %470 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %469
  store i8 65, i8* %470, align 1
  %471 = load i32, i32* @x.1, align 4
  %472 = load i32, i32* @y.2, align 4
  %473 = add i32 %471, -1
  %474 = mul i32 %473, %471
  %475 = and i32 %474, 1
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %477, %476
  %479 = select i1 %478, i32 -2105352438, i32 -1317821272
  br label %.backedge

480:                                              ; preds = %9
  br label %.backedge

481:                                              ; preds = %9
  br label %.backedge

482:                                              ; preds = %9
  %483 = load i32, i32* @x.1, align 4
  %484 = load i32, i32* @y.2, align 4
  %485 = add i32 %483, -1
  %486 = mul i32 %485, %483
  %487 = and i32 %486, 1
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %489, %488
  %491 = select i1 %490, i32 869938500, i32 1672842572
  br label %.backedge

492:                                              ; preds = %9
  %493 = add i32 %.063, 1
  %494 = load i32, i32* @x.1, align 4
  %495 = load i32, i32* @y.2, align 4
  %496 = add i32 %494, -1
  %497 = mul i32 %496, %494
  %498 = and i32 %497, 1
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %500, %499
  %502 = select i1 %501, i32 990616202, i32 1672842572
  br label %.backedge

503:                                              ; preds = %9
  br label %.backedge

504:                                              ; preds = %9
  %505 = load i32, i32* @x.1, align 4
  %506 = load i32, i32* @y.2, align 4
  %507 = add i32 %505, -1
  %508 = mul i32 %507, %505
  %509 = and i32 %508, 1
  %510 = icmp eq i32 %509, 0
  %511 = icmp slt i32 %506, 10
  %512 = or i1 %511, %510
  %513 = select i1 %512, i32 503079200, i32 -860424463
  br label %.backedge

514:                                              ; preds = %9
  %515 = load i32, i32* @x.1, align 4
  %516 = load i32, i32* @y.2, align 4
  %517 = add i32 %515, -1
  %518 = mul i32 %517, %515
  %519 = and i32 %518, 1
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %521, %520
  %523 = select i1 %522, i32 971433888, i32 -860424463
  br label %.backedge

524:                                              ; preds = %9
  br label %.backedge

525:                                              ; preds = %9
  %526 = load i32, i32* @x.1, align 4
  %527 = load i32, i32* @y.2, align 4
  %528 = add i32 %526, -1
  %529 = mul i32 %528, %526
  %530 = and i32 %529, 1
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %527, 10
  %533 = or i1 %532, %531
  %534 = select i1 %533, i32 -1539587851, i32 2063888364
  br label %.backedge

535:                                              ; preds = %9
  %536 = load i32, i32* @len, align 4
  %537 = add i32 %536, 1
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %538
  store i8 0, i8* %539, align 1
  %puts90 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([200005 x i8], [200005 x i8]* @s, i64 0, i64 1))
  %540 = load i32, i32* @x.1, align 4
  %541 = load i32, i32* @y.2, align 4
  %542 = add i32 %540, -1
  %543 = mul i32 %542, %540
  %544 = and i32 %543, 1
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %546, %545
  %548 = select i1 %547, i32 -491920572, i32 2063888364
  br label %.backedge

549:                                              ; preds = %9
  br label %.backedge

550:                                              ; preds = %9
  ret i32 0

551:                                              ; preds = %9
  %552 = load i32, i32* @n, align 4
  %553 = load i32, i32* @m, align 4
  %554 = add i32 %553, 1
  %555 = sdiv i32 %552, %554
  %556 = srem i32 %552, %554
  %557 = icmp ne i32 %556, 0
  %.neg89.neg = zext i1 %557 to i32
  %558 = add i32 %555, %.neg89.neg
  store i32 %558, i32* @d, align 4
  br label %.backedge

559:                                              ; preds = %9
  br label %.backedge

560:                                              ; preds = %9
  %.neg88 = add i32 %.073, 1
  %561 = sext i32 %.neg88 to i64
  %562 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %561
  store i8 65, i8* %562, align 1
  br label %.backedge

563:                                              ; preds = %9
  %564 = add i32 %.075, -1
  br label %.backedge

565:                                              ; preds = %9
  br label %.backedge

566:                                              ; preds = %9
  %.neg87 = add i32 %.069, 1
  br label %.backedge

567:                                              ; preds = %9
  %568 = load i32, i32* @d, align 4
  %.neg137 = xor i32 %568, -1
  %.neg138 = mul i32 %.079, %.neg137
  %569 = load i32, i32* @l, align 4
  %570 = sub i32 %569, %568
  %571 = add i32 %570, %.neg138
  store i32 %571, i32* @l, align 4
  call void @_Z6chkmaxIiEvRT_S0_(i32* nonnull dereferenceable(4) @l, i32 1)
  %572 = load i32, i32* @d, align 4
  %.neg = xor i32 %572, -1
  %.neg84 = mul i32 %.079, %.neg
  %573 = sub i32 %.neg84, %572
  %574 = load i32, i32* @r, align 4
  %575 = add i32 %573, %574
  store i32 %575, i32* @r, align 4
  call void @_Z6chkmaxIiEvRT_S0_(i32* nonnull dereferenceable(4) @r, i32 0)
  %.neg85 = xor i32 %.079, -1
  %576 = load i32, i32* @d, align 4
  %.neg86 = mul i32 %576, %.neg85
  %577 = load i32, i32* @n, align 4
  %578 = add i32 %.neg86, %577
  store i32 %578, i32* @n, align 4
  %579 = load i32, i32* @m, align 4
  %580 = sub i32 -1856225132, %.079
  %581 = add i32 %580, %579
  %582 = add i32 %581, 1856225132
  store i32 %582, i32* @m, align 4
  %583 = add i32 %581, 1856225131
  %584 = sdiv i32 %583, %576
  %585 = load i32, i32* @l, align 4
  br label %.backedge

586:                                              ; preds = %9
  br label %.backedge

587:                                              ; preds = %9
  br label %.backedge

588:                                              ; preds = %9
  br label %.backedge

589:                                              ; preds = %9
  %590 = load i32, i32* @len, align 4
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %591
  %593 = getelementptr inbounds i8, i8* %592, i64 1
  call void @_ZSt7reverseIPcEvT_S1_(i8* getelementptr inbounds ([200005 x i8], [200005 x i8]* @s, i64 0, i64 1), i8* nonnull %593)
  br label %.backedge

594:                                              ; preds = %9
  br label %.backedge

595:                                              ; preds = %9
  %596 = sext i32 %.063 to i64
  %597 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %596
  store i8 66, i8* %597, align 1
  br label %.backedge

598:                                              ; preds = %9
  %599 = sext i32 %.063 to i64
  %600 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %599
  store i8 65, i8* %600, align 1
  br label %.backedge

601:                                              ; preds = %9
  %602 = add i32 %.063, 1
  br label %.backedge

603:                                              ; preds = %9
  br label %.backedge

604:                                              ; preds = %9
  %605 = load i32, i32* @len, align 4
  %606 = add i32 %605, 1
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds [200005 x i8], [200005 x i8]* @s, i64 0, i64 %607
  store i8 0, i8* %608, align 1
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([200005 x i8], [200005 x i8]* @s, i64 0, i64 1))
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z4readIiEvRT_(i32* dereferenceable(4) %0) local_unnamed_addr #0 comdat {
  store i32 0, i32* %0, align 4
  %2 = tail call i32 @getchar()
  %3 = trunc i32 %2 to i8
  br label %4

4:                                                ; preds = %.backedge, %1
  %.012 = phi i32 [ 1, %1 ], [ %.012.be, %.backedge ]
  %.010 = phi i8 [ %3, %1 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ -260218189, %1 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -260218189, label %5
    i32 -937646974, label %8
    i32 1784221787, label %11
    i32 1476274775, label %13
    i32 -1898486456, label %14
    i32 1361057630, label %24
    i32 514721740, label %36
    i32 1569396863, label %37
    i32 2054222030, label %47
    i32 -1303188160, label %57
    i32 -2085197113, label %58
    i32 -198138767, label %61
    i32 -1340101146, label %67
    i32 1810665735, label %70
    i32 1231865953, label %73
    i32 1005360639, label %76
  ]

.backedge:                                        ; preds = %4, %76, %73, %67, %61, %58, %57, %47, %37, %36, %24, %14, %13, %11, %8, %5
  %.012.be = phi i32 [ %.012, %4 ], [ %.012, %76 ], [ %.012, %73 ], [ %.012, %67 ], [ %.012, %61 ], [ %.012, %58 ], [ %.012, %57 ], [ %.012, %47 ], [ %.012, %37 ], [ %.012, %36 ], [ %.012, %24 ], [ %.012, %14 ], [ %.012, %13 ], [ %12, %11 ], [ %.012, %8 ], [ %.012, %5 ]
  %.010.be = phi i8 [ %.010, %4 ], [ %.010, %76 ], [ %75, %73 ], [ %69, %67 ], [ %.010, %61 ], [ %.010, %58 ], [ %.010, %57 ], [ %.010, %47 ], [ %.010, %37 ], [ %.010, %36 ], [ %26, %24 ], [ %.010, %14 ], [ %.010, %13 ], [ %.010, %11 ], [ %.010, %8 ], [ %.010, %5 ]
  %.0.be = phi i32 [ %.0, %4 ], [ 2054222030, %76 ], [ 1361057630, %73 ], [ -2085197113, %67 ], [ -1340101146, %61 ], [ %60, %58 ], [ -2085197113, %57 ], [ %56, %47 ], [ %46, %37 ], [ -260218189, %36 ], [ %35, %24 ], [ %23, %14 ], [ -1898486456, %13 ], [ 1476274775, %11 ], [ %10, %8 ], [ %7, %5 ]
  br label %4

5:                                                ; preds = %4
  %6 = sext i8 %.010 to i32
  %isdigittmp14 = add nsw i32 %6, -48
  %isdigit15 = icmp ugt i32 %isdigittmp14, 9
  %7 = select i1 %isdigit15, i32 -937646974, i32 1569396863
  br label %.backedge

8:                                                ; preds = %4
  %9 = icmp eq i8 %.010, 45
  %10 = select i1 %9, i32 1784221787, i32 1476274775
  br label %.backedge

11:                                               ; preds = %4
  %12 = sub i32 0, %.012
  br label %.backedge

13:                                               ; preds = %4
  br label %.backedge

14:                                               ; preds = %4
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1361057630, i32 1231865953
  br label %.backedge

24:                                               ; preds = %4
  %25 = tail call i32 @getchar()
  %26 = trunc i32 %25 to i8
  %27 = load i32, i32* @x.3, align 4
  %28 = load i32, i32* @y.4, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 514721740, i32 1231865953
  br label %.backedge

36:                                               ; preds = %4
  br label %.backedge

37:                                               ; preds = %4
  %38 = load i32, i32* @x.3, align 4
  %39 = load i32, i32* @y.4, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 2054222030, i32 1005360639
  br label %.backedge

47:                                               ; preds = %4
  %48 = load i32, i32* @x.3, align 4
  %49 = load i32, i32* @y.4, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 -1303188160, i32 1005360639
  br label %.backedge

57:                                               ; preds = %4
  br label %.backedge

58:                                               ; preds = %4
  %59 = sext i8 %.010 to i32
  %isdigittmp = add nsw i32 %59, -48
  %isdigit = icmp ult i32 %isdigittmp, 10
  %60 = select i1 %isdigit, i32 -198138767, i32 1810665735
  br label %.backedge

61:                                               ; preds = %4
  %62 = load i32, i32* %0, align 4
  %63 = mul nsw i32 %62, 10
  %64 = sext i8 %.010 to i32
  %65 = add nsw i32 %64, -48
  %66 = add i32 %65, %63
  store i32 %66, i32* %0, align 4
  br label %.backedge

67:                                               ; preds = %4
  %68 = tail call i32 @getchar()
  %69 = trunc i32 %68 to i8
  br label %.backedge

70:                                               ; preds = %4
  %71 = load i32, i32* %0, align 4
  %72 = mul nsw i32 %71, %.012
  store i32 %72, i32* %0, align 4
  ret void

73:                                               ; preds = %4
  %74 = tail call i32 @getchar()
  %75 = trunc i32 %74 to i8
  br label %.backedge

76:                                               ; preds = %4
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIiEvRT_S1_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.5, align 4
  %6 = load i32, i32* @y.6, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ 1645275231, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %12

12:                                               ; preds = %.outer, %12
  switch i32 %.0.ph, label %12 [
    i32 1645275231, label %13
    i32 1487393708, label %16
    i32 1760927744, label %33
    i32 -1651871311, label %34
  ]

13:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %14 = or i1 %.0..0..0., %.0..0..0.1
  %15 = select i1 %14, i32 1487393708, i32 -1651871311
  br label %.outer.backedge

16:                                               ; preds = %12
  %17 = alloca i32, align 4
  %18 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %0) #7
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %1) #7
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %0, align 4
  %22 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %17) #7
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %1, align 4
  %24 = load i32, i32* @x.5, align 4
  %25 = load i32, i32* @y.6, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 1760927744, i32 -1651871311
  br label %.outer.backedge

33:                                               ; preds = %12
  ret void

34:                                               ; preds = %12
  %35 = alloca i32, align 4
  %36 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %0) #7
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %1) #7
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %0, align 4
  %40 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %35) #7
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %1, align 4
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %34, %16, %13
  %.0.ph.be = phi i32 [ %15, %13 ], [ %32, %16 ], [ 1487393708, %34 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.7, align 4
  %8 = load i32, i32* @y.8, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -171447058, i32 916729573
  %16 = select i1 %14, i32 -263099296, i32 916729573
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 2042918825, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 2042918825, label %18
    i32 -1148096237, label %.outer10.backedge
    i32 -263099296, label %.outer.backedge
    i32 -171447058, label %21
    i32 -390801603, label %22
    i32 334317660, label %23
    i32 916729573, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -1148096237, i32 -390801603
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 334317660, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 334317660, %22 ], [ -263099296, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z6chkmaxIiEvRT_S0_(i32* dereferenceable(4) %0, i32 %1) local_unnamed_addr #0 comdat {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %0, i32* nonnull dereferenceable(4) %3)
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %0, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7reverseIPcEvT_S1_(i8* %0, i8* %1) local_unnamed_addr #0 comdat {
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** nonnull dereferenceable(8) %3)
  call void @_ZSt9__reverseIPcEvT_S1_St26random_access_iterator_tag(i8* %0, i8* %1)
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %0) local_unnamed_addr #5 comdat {
  ret i32* %0
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %0, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.15, align 4
  %8 = load i32, i32* @y.16, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1159084900, i32 659281181
  %16 = select i1 %14, i32 -2053297577, i32 659281181
  %17 = select i1 %14, i32 1949913012, i32 -1110936850
  %18 = select i1 %14, i32 -29556942, i32 -1110936850
  br label %19

19:                                               ; preds = %.backedge, %2
  %.09 = phi i32* [ undef, %2 ], [ %.09.be, %.backedge ]
  %.0 = phi i32 [ -1197905914, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1197905914, label %20
    i32 -1406110851, label %23
    i32 -29556942, label %24
    i32 1949913012, label %25
    i32 -163229771, label %26
    i32 -2053297577, label %27
    i32 1159084900, label %28
    i32 -841436644, label %29
    i32 -1110936850, label %30
    i32 659281181, label %31
  ]

.backedge:                                        ; preds = %19, %31, %30, %28, %27, %26, %25, %24, %23, %20
  %.09.be = phi i32* [ %.09, %19 ], [ %0, %31 ], [ %1, %30 ], [ %.09, %28 ], [ %0, %27 ], [ %.09, %26 ], [ %.09, %25 ], [ %1, %24 ], [ %.09, %23 ], [ %.09, %20 ]
  %.0.be = phi i32 [ %.0, %19 ], [ -2053297577, %31 ], [ -29556942, %30 ], [ -841436644, %28 ], [ %15, %27 ], [ %16, %26 ], [ -841436644, %25 ], [ %17, %24 ], [ %18, %23 ], [ %22, %20 ]
  br label %19

20:                                               ; preds = %19
  %.0..0..0.7 = load volatile i32, i32* %4, align 4
  %.0..0..0.8 = load volatile i32, i32* %3, align 4
  %21 = icmp slt i32 %.0..0..0.7, %.0..0..0.8
  %22 = select i1 %21, i32 -1406110851, i32 -163229771
  br label %.backedge

23:                                               ; preds = %19
  br label %.backedge

24:                                               ; preds = %19
  br label %.backedge

25:                                               ; preds = %19
  br label %.backedge

26:                                               ; preds = %19
  br label %.backedge

27:                                               ; preds = %19
  br label %.backedge

28:                                               ; preds = %19
  br label %.backedge

29:                                               ; preds = %19
  ret i32* %.09

30:                                               ; preds = %19
  br label %.backedge

31:                                               ; preds = %19
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9__reverseIPcEvT_S1_St26random_access_iterator_tag(i8* %0, i8* %1) local_unnamed_addr #0 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %3, align 8
  br label %5

5:                                                ; preds = %.backedge, %2
  %.017 = phi i8* [ %0, %2 ], [ %.017.be, %.backedge ]
  %.015 = phi i8* [ %1, %2 ], [ %.015.be, %.backedge ]
  %.0 = phi i32 [ -1488511323, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1488511323, label %6
    i32 1081077853, label %9
    i32 146478893, label %10
    i32 -2081440180, label %12
    i32 1962027533, label %15
    i32 -1323840838, label %25
    i32 230408535, label %37
    i32 1465227477, label %38
    i32 1535550454, label %39
  ]

.backedge:                                        ; preds = %5, %39, %37, %25, %15, %12, %10, %9, %6
  %.017.be = phi i8* [ %.017, %5 ], [ %40, %39 ], [ %.017, %37 ], [ %26, %25 ], [ %.017, %15 ], [ %.017, %12 ], [ %.017, %10 ], [ %.017, %9 ], [ %.017, %6 ]
  %.015.be = phi i8* [ %.015, %5 ], [ %41, %39 ], [ %.015, %37 ], [ %27, %25 ], [ %.015, %15 ], [ %.015, %12 ], [ %11, %10 ], [ %.015, %9 ], [ %.015, %6 ]
  %.0.be = phi i32 [ %.0, %5 ], [ -1323840838, %39 ], [ -2081440180, %37 ], [ %36, %25 ], [ %24, %15 ], [ %14, %12 ], [ -2081440180, %10 ], [ 1465227477, %9 ], [ %8, %6 ]
  br label %5

6:                                                ; preds = %5
  %.0..0..0.13 = load volatile i8*, i8** %4, align 8
  %.0..0..0.14 = load volatile i8*, i8** %3, align 8
  %7 = icmp eq i8* %.0..0..0.13, %.0..0..0.14
  %8 = select i1 %7, i32 1081077853, i32 146478893
  br label %.backedge

9:                                                ; preds = %5
  br label %.backedge

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %.015, i64 -1
  br label %.backedge

12:                                               ; preds = %5
  %13 = icmp ult i8* %.017, %.015
  %14 = select i1 %13, i32 1962027533, i32 1465227477
  br label %.backedge

15:                                               ; preds = %5
  %16 = load i32, i32* @x.17, align 4
  %17 = load i32, i32* @y.18, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1323840838, i32 1535550454
  br label %.backedge

25:                                               ; preds = %5
  tail call void @_ZSt9iter_swapIPcS0_EvT_T0_(i8* %.017, i8* %.015)
  %26 = getelementptr inbounds i8, i8* %.017, i64 1
  %27 = getelementptr inbounds i8, i8* %.015, i64 -1
  %28 = load i32, i32* @x.17, align 4
  %29 = load i32, i32* @y.18, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 230408535, i32 1535550454
  br label %.backedge

37:                                               ; preds = %5
  br label %.backedge

38:                                               ; preds = %5
  ret void

39:                                               ; preds = %5
  tail call void @_ZSt9iter_swapIPcS0_EvT_T0_(i8* %.017, i8* %.015)
  %40 = getelementptr inbounds i8, i8* %.017, i64 1
  %41 = getelementptr inbounds i8, i8* %.015, i64 -1
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** dereferenceable(8) %0) local_unnamed_addr #5 comdat {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9iter_swapIPcS0_EvT_T0_(i8* %0, i8* %1) local_unnamed_addr #5 comdat {
  tail call void @_ZSt4swapIcEvRT_S1_(i8* dereferenceable(1) %0, i8* dereferenceable(1) %1) #7
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIcEvRT_S1_(i8* dereferenceable(1) %0, i8* dereferenceable(1) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.23, align 4
  %6 = load i32, i32* @y.24, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ -787447291, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %12

12:                                               ; preds = %.outer, %12
  switch i32 %.0.ph, label %12 [
    i32 -787447291, label %13
    i32 663765445, label %16
    i32 -1409784985, label %33
    i32 1776815121, label %34
  ]

13:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %14 = or i1 %.0..0..0., %.0..0..0.1
  %15 = select i1 %14, i32 663765445, i32 1776815121
  br label %.outer.backedge

16:                                               ; preds = %12
  %17 = alloca i8, align 1
  %18 = call dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* nonnull dereferenceable(1) %0) #7
  %19 = load i8, i8* %18, align 1
  store i8 %19, i8* %17, align 1
  %20 = call dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* nonnull dereferenceable(1) %1) #7
  %21 = load i8, i8* %20, align 1
  store i8 %21, i8* %0, align 1
  %22 = call dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* nonnull dereferenceable(1) %17) #7
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %1, align 1
  %24 = load i32, i32* @x.23, align 4
  %25 = load i32, i32* @y.24, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -1409784985, i32 1776815121
  br label %.outer.backedge

33:                                               ; preds = %12
  ret void

34:                                               ; preds = %12
  %35 = alloca i8, align 1
  %36 = call dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* nonnull dereferenceable(1) %0) #7
  %37 = load i8, i8* %36, align 1
  store i8 %37, i8* %35, align 1
  %38 = call dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* nonnull dereferenceable(1) %1) #7
  %39 = load i8, i8* %38, align 1
  store i8 %39, i8* %0, align 1
  %40 = call dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* nonnull dereferenceable(1) %35) #7
  %41 = load i8, i8* %40, align 1
  store i8 %41, i8* %1, align 1
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %34, %16, %13
  %.0.ph.be = phi i32 [ %15, %13 ], [ %32, %16 ], [ 663765445, %34 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* dereferenceable(1) %0) local_unnamed_addr #5 comdat {
  %2 = alloca i8*, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.25, align 4
  %6 = load i32, i32* @y.26, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 -1160763466, i32 -584412147
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %1
  %.0.ph = phi i32 [ -801052512, %1 ], [ %.0.ph.be, %.outer.backedge ]
  br label %14

14:                                               ; preds = %.outer, %14
  switch i32 %.0.ph, label %14 [
    i32 -801052512, label %15
    i32 -1223365161, label %.outer.backedge
    i32 -1160763466, label %18
    i32 -584412147, label %19
  ]

15:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %16 = or i1 %.0..0..0., %.0..0..0.1
  %17 = select i1 %16, i32 -1223365161, i32 -584412147
  br label %.outer.backedge

18:                                               ; preds = %14
  store i8* %0, i8** %2, align 8
  %.0..0..0.2 = load volatile i8*, i8** %2, align 8
  ret i8* %.0..0..0.2

19:                                               ; preds = %14
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %14, %19, %15
  %.0.ph.be = phi i32 [ %17, %15 ], [ -1223365161, %19 ], [ %13, %14 ]
  br label %.outer
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s456244364.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
