; ModuleID = 'build_ollvm/programs/p03466/s769711758.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s769711758.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_Z4readv = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

$_ZSt3maxIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@m = local_unnamed_addr global i32 0, align 4
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s769711758.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = tail call i32 @_Z4readv()
  store i32 %8, i32* @m, align 4
  br label %9

9:                                                ; preds = %.backedge, %0
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ 269480867, %0 ], [ %.064.be, %.backedge ]
  %.0 = phi i32 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.064, label %.backedge [
    i32 269480867, label %10
    i32 -1447392195, label %20
    i32 1900264390, label %33
    i32 1043941431, label %35
    i32 -455171758, label %48
    i32 -177222945, label %50
    i32 -403186690, label %60
    i32 1258024847, label %86
    i32 1748197614, label %88
    i32 -1213015080, label %98
    i32 538643509, label %109
    i32 -1134312120, label %110
    i32 -1090844450, label %111
    i32 -1779358095, label %121
    i32 508027138, label %131
    i32 1848325544, label %132
    i32 -2067037260, label %137
    i32 -1137952119, label %140
    i32 1647371699, label %150
    i32 1064933638, label %160
    i32 1592184415, label %161
    i32 -454392576, label %169
    i32 -752232325, label %171
    i32 517605090, label %181
    i32 -1147526879, label %195
    i32 233384305, label %197
    i32 739651850, label %201
    i32 -694673624, label %203
    i32 388645566, label %205
    i32 -289688379, label %208
    i32 -1379700156, label %218
    i32 421453878, label %229
    i32 -2089568001, label %230
    i32 1638164816, label %238
    i32 -625325120, label %239
    i32 -1225319494, label %240
    i32 -166338334, label %241
    i32 831038445, label %243
    i32 1531388229, label %253
    i32 1399309206, label %263
    i32 -1276686630, label %264
    i32 -697961124, label %265
    i32 -1402896666, label %268
    i32 2035893673, label %271
    i32 -1571563682, label %273
    i32 -1248998232, label %274
    i32 -1359907683, label %275
    i32 803742439, label %276
    i32 -525477990, label %278
  ]

.backedge:                                        ; preds = %9, %278, %276, %275, %274, %273, %271, %268, %265, %263, %253, %243, %241, %240, %239, %238, %230, %229, %218, %208, %205, %203, %201, %197, %195, %181, %171, %169, %161, %160, %150, %140, %137, %132, %131, %121, %111, %110, %109, %98, %88, %86, %60, %50, %48, %35, %33, %20, %10
  %.086.be = phi i32 [ %.086, %9 ], [ %.086, %278 ], [ %.086, %276 ], [ %.086, %275 ], [ %.086, %274 ], [ %.086, %273 ], [ %.086, %271 ], [ %.086, %268 ], [ %.086, %265 ], [ %.086, %263 ], [ %.086, %253 ], [ %.086, %243 ], [ %.086, %241 ], [ %.086, %240 ], [ %.086, %239 ], [ %.086, %238 ], [ %.086, %230 ], [ %.086, %229 ], [ %.086, %218 ], [ %.086, %208 ], [ %.086, %205 ], [ %.086, %203 ], [ %.086, %201 ], [ %.086, %197 ], [ %.086, %195 ], [ %.086, %181 ], [ %.086, %171 ], [ %.086, %169 ], [ %.086, %161 ], [ %.086, %160 ], [ %.086, %150 ], [ %.086, %140 ], [ %.086, %137 ], [ %.086, %132 ], [ %.086, %131 ], [ %.086, %121 ], [ %.086, %111 ], [ %.086, %110 ], [ %.086, %109 ], [ %.086, %98 ], [ %.086, %88 ], [ %.086, %86 ], [ %.086, %60 ], [ %.086, %50 ], [ %.086, %48 ], [ %46, %35 ], [ %.086, %33 ], [ %.086, %20 ], [ %.086, %10 ]
  %.084.be = phi i32 [ %.084, %9 ], [ %.084, %278 ], [ %.084, %276 ], [ %.084, %275 ], [ %.084, %274 ], [ %.084, %273 ], [ %.084, %271 ], [ %.084, %268 ], [ %.084, %265 ], [ %.084, %263 ], [ %.084, %253 ], [ %.084, %243 ], [ %.084, %241 ], [ %.084, %240 ], [ %.084, %239 ], [ %.084, %238 ], [ %.084, %230 ], [ %.084, %229 ], [ %.084, %218 ], [ %.084, %208 ], [ %.084, %205 ], [ %.084, %203 ], [ %.084, %201 ], [ %.084, %197 ], [ %.084, %195 ], [ %.084, %181 ], [ %.084, %171 ], [ %.084, %169 ], [ %.084, %161 ], [ %.084, %160 ], [ %.084, %150 ], [ %.084, %140 ], [ %.084, %137 ], [ %.084, %132 ], [ %.084, %131 ], [ %.084, %121 ], [ %.084, %111 ], [ %.neg96, %110 ], [ %.084, %109 ], [ %.084, %98 ], [ %.084, %88 ], [ %.084, %86 ], [ %.084, %60 ], [ %.084, %50 ], [ %.084, %48 ], [ 1, %35 ], [ %.084, %33 ], [ %.084, %20 ], [ %.084, %10 ]
  %.082.be = phi i32 [ %.082, %9 ], [ %.082, %278 ], [ %.082, %276 ], [ %.082, %275 ], [ %.082, %274 ], [ %.082, %273 ], [ %272, %271 ], [ %.082, %268 ], [ %.082, %265 ], [ %.082, %263 ], [ %.082, %253 ], [ %.082, %243 ], [ %.082, %241 ], [ %.082, %240 ], [ %.082, %239 ], [ %.082, %238 ], [ %.082, %230 ], [ %.082, %229 ], [ %.082, %218 ], [ %.082, %208 ], [ %.082, %205 ], [ %.082, %203 ], [ %.082, %201 ], [ %.082, %197 ], [ %.082, %195 ], [ %.082, %181 ], [ %.082, %171 ], [ %.082, %169 ], [ %.082, %161 ], [ %.082, %160 ], [ %.082, %150 ], [ %.082, %140 ], [ %.082, %137 ], [ %.082, %132 ], [ %.082, %131 ], [ %.082, %121 ], [ %.082, %111 ], [ %.082, %110 ], [ %.082, %109 ], [ %99, %98 ], [ %.082, %88 ], [ %.082, %86 ], [ %.082, %60 ], [ %.082, %50 ], [ %.082, %48 ], [ %47, %35 ], [ %.082, %33 ], [ %.082, %20 ], [ %.082, %10 ]
  %.080.be = phi i32 [ %.080, %9 ], [ %.080, %278 ], [ %.080, %276 ], [ %.080, %275 ], [ %.080, %274 ], [ %.080, %273 ], [ %.080, %271 ], [ %270, %268 ], [ %.080, %265 ], [ %.080, %263 ], [ %.080, %253 ], [ %.080, %243 ], [ %.080, %241 ], [ %.080, %240 ], [ %.080, %239 ], [ %.080, %238 ], [ %.080, %230 ], [ %.080, %229 ], [ %.080, %218 ], [ %.080, %208 ], [ %.080, %205 ], [ %.080, %203 ], [ %.080, %201 ], [ %.080, %197 ], [ %.080, %195 ], [ %.080, %181 ], [ %.080, %171 ], [ %.080, %169 ], [ %.080, %161 ], [ %.080, %160 ], [ %.080, %150 ], [ %.080, %140 ], [ %.080, %137 ], [ %.080, %132 ], [ %.080, %131 ], [ %.080, %121 ], [ %.080, %111 ], [ %.080, %110 ], [ %.080, %109 ], [ %.080, %98 ], [ %.080, %88 ], [ %.080, %86 ], [ %62, %60 ], [ %.080, %50 ], [ %.080, %48 ], [ %.080, %35 ], [ %.080, %33 ], [ %.080, %20 ], [ %.080, %10 ]
  %.078.be = phi i32 [ %.078, %9 ], [ %.078, %278 ], [ %.078, %276 ], [ %.078, %275 ], [ %.078, %274 ], [ %.078, %273 ], [ %.078, %271 ], [ %.078, %268 ], [ %.078, %265 ], [ %.078, %263 ], [ %.078, %253 ], [ %.078, %243 ], [ %.078, %241 ], [ %.078, %240 ], [ %.078, %239 ], [ %.078, %238 ], [ %.078, %230 ], [ %.078, %229 ], [ %.078, %218 ], [ %.078, %208 ], [ %.078, %205 ], [ %.078, %203 ], [ %.078, %201 ], [ %.078, %197 ], [ %.078, %195 ], [ %.078, %181 ], [ %.078, %171 ], [ %.078, %169 ], [ %.078, %161 ], [ %.078, %160 ], [ %.078, %150 ], [ %.078, %140 ], [ %.078, %137 ], [ %.078, %132 ], [ %.078, %131 ], [ %.078, %121 ], [ %.078, %111 ], [ %.080, %110 ], [ %.078, %109 ], [ %.078, %98 ], [ %.078, %88 ], [ %.078, %86 ], [ %.078, %60 ], [ %.078, %50 ], [ %.078, %48 ], [ 0, %35 ], [ %.078, %33 ], [ %.078, %20 ], [ %.078, %10 ]
  %.076.be = phi i32 [ %.076, %9 ], [ %.076, %278 ], [ %.076, %276 ], [ %.076, %275 ], [ %.076, %274 ], [ %.076, %273 ], [ %.076, %271 ], [ %.076, %268 ], [ %.076, %265 ], [ %.076, %263 ], [ %.076, %253 ], [ %.076, %243 ], [ %.076, %241 ], [ %.076, %240 ], [ %.076, %239 ], [ %.076, %238 ], [ %.076, %230 ], [ %.076, %229 ], [ %.076, %218 ], [ %.076, %208 ], [ %.076, %205 ], [ %.076, %203 ], [ %.076, %201 ], [ %.076, %197 ], [ %.076, %195 ], [ %.076, %181 ], [ %.076, %171 ], [ %.076, %169 ], [ %.076, %161 ], [ %.076, %160 ], [ %.076, %150 ], [ %.076, %140 ], [ %.076, %137 ], [ %135, %132 ], [ %.076, %131 ], [ %.076, %121 ], [ %.076, %111 ], [ %.076, %110 ], [ %.076, %109 ], [ %.076, %98 ], [ %.076, %88 ], [ %.076, %86 ], [ %.076, %60 ], [ %.076, %50 ], [ %.076, %48 ], [ %.076, %35 ], [ %.076, %33 ], [ %.076, %20 ], [ %.076, %10 ]
  %.074.be = phi i32 [ %.074, %9 ], [ %.074, %278 ], [ %.074, %276 ], [ %.074, %275 ], [ %.074, %274 ], [ %.074, %273 ], [ %.074, %271 ], [ %.074, %268 ], [ %.074, %265 ], [ %.074, %263 ], [ %.074, %253 ], [ %.074, %243 ], [ %.074, %241 ], [ %.074, %240 ], [ %.074, %239 ], [ %.074, %238 ], [ %.074, %230 ], [ %.074, %229 ], [ %.074, %218 ], [ %.074, %208 ], [ %.074, %205 ], [ %.074, %203 ], [ %.074, %201 ], [ %.074, %197 ], [ %.074, %195 ], [ %.074, %181 ], [ %.074, %171 ], [ %.074, %169 ], [ %.0, %161 ], [ %.074, %160 ], [ %.074, %150 ], [ %.074, %140 ], [ %.074, %137 ], [ %.074, %132 ], [ %.074, %131 ], [ %.074, %121 ], [ %.074, %111 ], [ %.074, %110 ], [ %.074, %109 ], [ %.074, %98 ], [ %.074, %88 ], [ %.074, %86 ], [ %.074, %60 ], [ %.074, %50 ], [ %.074, %48 ], [ %.074, %35 ], [ %.074, %33 ], [ %.074, %20 ], [ %.074, %10 ]
  %.072.be = phi i32 [ %.072, %9 ], [ %.072, %278 ], [ %.072, %276 ], [ %.072, %275 ], [ %.072, %274 ], [ %.072, %273 ], [ %.072, %271 ], [ %.072, %268 ], [ %.072, %265 ], [ %.072, %263 ], [ %.072, %253 ], [ %.072, %243 ], [ %.072, %241 ], [ %.072, %240 ], [ %.072, %239 ], [ %.072, %238 ], [ %.072, %230 ], [ %.072, %229 ], [ %.072, %218 ], [ %.072, %208 ], [ %.072, %205 ], [ %.072, %203 ], [ %.072, %201 ], [ %.072, %197 ], [ %.072, %195 ], [ %.072, %181 ], [ %.072, %171 ], [ %.072, %169 ], [ %.072, %161 ], [ %.072, %160 ], [ %.072, %150 ], [ %.072, %140 ], [ %.072, %137 ], [ %.072, %132 ], [ %.072, %131 ], [ %.072, %121 ], [ %.072, %111 ], [ %.072, %110 ], [ %.072, %109 ], [ %.072, %98 ], [ %.072, %88 ], [ %.072, %86 ], [ %.072, %60 ], [ %.072, %50 ], [ %.072, %48 ], [ %39, %35 ], [ %.072, %33 ], [ %.072, %20 ], [ %.072, %10 ]
  %.070.be = phi i32 [ %.070, %9 ], [ %.070, %278 ], [ %.070, %276 ], [ %.070, %275 ], [ %.070, %274 ], [ %.070, %273 ], [ %.070, %271 ], [ %.070, %268 ], [ %.070, %265 ], [ %.070, %263 ], [ %.070, %253 ], [ %.070, %243 ], [ %.070, %241 ], [ %.070, %240 ], [ %.070, %239 ], [ %.070, %238 ], [ %.070, %230 ], [ %.070, %229 ], [ %.070, %218 ], [ %.070, %208 ], [ %.070, %205 ], [ %.070, %203 ], [ %.070, %201 ], [ %.070, %197 ], [ %.070, %195 ], [ %.070, %181 ], [ %.070, %171 ], [ %.070, %169 ], [ %.070, %161 ], [ %.070, %160 ], [ %.070, %150 ], [ %.070, %140 ], [ %.070, %137 ], [ %.070, %132 ], [ %.070, %131 ], [ %.070, %121 ], [ %.070, %111 ], [ %.070, %110 ], [ %.070, %109 ], [ %.070, %98 ], [ %.070, %88 ], [ %.070, %86 ], [ %.070, %60 ], [ %.070, %50 ], [ %.070, %48 ], [ %38, %35 ], [ %.070, %33 ], [ %.070, %20 ], [ %.070, %10 ]
  %.068.be = phi i32 [ %.068, %9 ], [ %.068, %278 ], [ %.068, %276 ], [ %.068, %275 ], [ %.068, %274 ], [ %.068, %273 ], [ %.068, %271 ], [ %.068, %268 ], [ %.068, %265 ], [ %.068, %263 ], [ %.068, %253 ], [ %.068, %243 ], [ %.068, %241 ], [ %.068, %240 ], [ %.068, %239 ], [ %.068, %238 ], [ %.068, %230 ], [ %.068, %229 ], [ %.068, %218 ], [ %.068, %208 ], [ %.068, %205 ], [ %.068, %203 ], [ %.068, %201 ], [ %.068, %197 ], [ %.068, %195 ], [ %.068, %181 ], [ %.068, %171 ], [ %.068, %169 ], [ %168, %161 ], [ %.068, %160 ], [ %.068, %150 ], [ %.068, %140 ], [ %.068, %137 ], [ %.068, %132 ], [ %.068, %131 ], [ %.068, %121 ], [ %.068, %111 ], [ %.068, %110 ], [ %.068, %109 ], [ %.068, %98 ], [ %.068, %88 ], [ %.068, %86 ], [ %.068, %60 ], [ %.068, %50 ], [ %.068, %48 ], [ %.068, %35 ], [ %.068, %33 ], [ %.068, %20 ], [ %.068, %10 ]
  %.066.be = phi i32 [ %.066, %9 ], [ %.066, %278 ], [ %.066, %276 ], [ %.066, %275 ], [ %.066, %274 ], [ %.066, %273 ], [ %.066, %271 ], [ %.066, %268 ], [ %.066, %265 ], [ %.066, %263 ], [ %.066, %253 ], [ %.066, %243 ], [ %242, %241 ], [ %.066, %240 ], [ %.066, %239 ], [ %.066, %238 ], [ %.066, %230 ], [ %.066, %229 ], [ %.066, %218 ], [ %.066, %208 ], [ %.066, %205 ], [ %.066, %203 ], [ %.066, %201 ], [ %.066, %197 ], [ %.066, %195 ], [ %.066, %181 ], [ %.066, %171 ], [ %.066, %169 ], [ %.070, %161 ], [ %.066, %160 ], [ %.066, %150 ], [ %.066, %140 ], [ %.066, %137 ], [ %.066, %132 ], [ %.066, %131 ], [ %.066, %121 ], [ %.066, %111 ], [ %.066, %110 ], [ %.066, %109 ], [ %.066, %98 ], [ %.066, %88 ], [ %.066, %86 ], [ %.066, %60 ], [ %.066, %50 ], [ %.066, %48 ], [ %.066, %35 ], [ %.066, %33 ], [ %.066, %20 ], [ %.066, %10 ]
  %.064.be = phi i32 [ %.064, %9 ], [ 1531388229, %278 ], [ -1379700156, %276 ], [ 517605090, %275 ], [ 1647371699, %274 ], [ -1779358095, %273 ], [ -1213015080, %271 ], [ -403186690, %268 ], [ -1447392195, %265 ], [ 269480867, %263 ], [ %262, %253 ], [ %252, %243 ], [ -454392576, %241 ], [ -166338334, %240 ], [ -1225319494, %239 ], [ -625325120, %238 ], [ 1638164816, %230 ], [ 1638164816, %229 ], [ %228, %218 ], [ %217, %208 ], [ %207, %205 ], [ -625325120, %203 ], [ %202, %201 ], [ -1225319494, %197 ], [ %196, %195 ], [ %194, %181 ], [ %180, %171 ], [ %170, %169 ], [ -454392576, %161 ], [ 1592184415, %160 ], [ %159, %150 ], [ %149, %140 ], [ 1592184415, %137 ], [ %136, %132 ], [ -455171758, %131 ], [ %130, %121 ], [ %120, %111 ], [ -1090844450, %110 ], [ -1090844450, %109 ], [ %108, %98 ], [ %97, %88 ], [ %87, %86 ], [ %85, %60 ], [ %59, %50 ], [ %49, %48 ], [ -455171758, %35 ], [ %34, %33 ], [ %32, %20 ], [ %19, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ %.0, %278 ], [ %.0, %276 ], [ %.0, %275 ], [ %.0, %274 ], [ %.0, %273 ], [ %.0, %271 ], [ %.0, %268 ], [ %.0, %265 ], [ %.0, %263 ], [ %.0, %253 ], [ %.0, %243 ], [ %.0, %241 ], [ %.0, %240 ], [ %.0, %239 ], [ %.0, %238 ], [ %.0, %230 ], [ %.0, %229 ], [ %.0, %218 ], [ %.0, %208 ], [ %.0, %205 ], [ %.0, %203 ], [ %.0, %201 ], [ %.0, %197 ], [ %.0, %195 ], [ %.0, %181 ], [ %.0, %171 ], [ %.0, %169 ], [ %.0, %161 ], [ 0, %160 ], [ %.0, %150 ], [ %.0, %140 ], [ %139, %137 ], [ %.0, %132 ], [ %.0, %131 ], [ %.0, %121 ], [ %.0, %111 ], [ %.0, %110 ], [ %.0, %109 ], [ %.0, %98 ], [ %.0, %88 ], [ %.0, %86 ], [ %.0, %60 ], [ %.0, %50 ], [ %.0, %48 ], [ %.0, %35 ], [ %.0, %33 ], [ %.0, %20 ], [ %.0, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @x.1, align 4
  %12 = load i32, i32* @y.2, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 -1447392195, i32 -697961124
  br label %.backedge

20:                                               ; preds = %9
  %21 = load i32, i32* @m, align 4
  %22 = add i32 %21, -1
  store i32 %22, i32* @m, align 4
  %23 = icmp ne i32 %21, 0
  store i1 %23, i1* %3, align 1
  %24 = load i32, i32* @x.1, align 4
  %25 = load i32, i32* @y.2, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 1900264390, i32 -697961124
  br label %.backedge

33:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %34 = select i1 %.0..0..0., i32 1043941431, i32 -1276686630
  br label %.backedge

35:                                               ; preds = %9
  %36 = call i32 @_Z4readv()
  store i32 %36, i32* %4, align 4
  %37 = call i32 @_Z4readv()
  store i32 %37, i32* %5, align 4
  %38 = call i32 @_Z4readv()
  %39 = call i32 @_Z4readv()
  %40 = load i32, i32* %4, align 4
  %41 = load i32, i32* %5, align 4
  %42 = add i32 %41, %40
  %43 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5)
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = sdiv i32 %42, %45
  %47 = load i32, i32* %4, align 4
  br label %.backedge

48:                                               ; preds = %9
  %.not100 = icmp sgt i32 %.084, %.082
  %49 = select i1 %.not100, i32 1848325544, i32 -177222945
  br label %.backedge

50:                                               ; preds = %9
  %51 = load i32, i32* @x.1, align 4
  %52 = load i32, i32* @y.2, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 -403186690, i32 -1402896666
  br label %.backedge

60:                                               ; preds = %9
  %61 = add i32 %.082, %.084
  %62 = ashr i32 %61, 1
  %63 = add i32 %.086, -1
  %64 = add i32 %63, %62
  %65 = sdiv i32 %64, %.086
  %66 = load i32, i32* %4, align 4
  %67 = sub i32 %66, %62
  %68 = load i32, i32* %5, align 4
  %69 = add i32 %.086, %65
  %70 = sub i32 1, %69
  %71 = add i32 %70, %68
  %72 = sext i32 %67 to i64
  %73 = sext i32 %.086 to i64
  %74 = mul nsw i64 %72, %73
  %75 = sext i32 %71 to i64
  %76 = icmp slt i64 %74, %75
  store i1 %76, i1* %2, align 1
  %77 = load i32, i32* @x.1, align 4
  %78 = load i32, i32* @y.2, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 1258024847, i32 -1402896666
  br label %.backedge

86:                                               ; preds = %9
  %.0..0..0.62 = load volatile i1, i1* %2, align 1
  %87 = select i1 %.0..0..0.62, i32 1748197614, i32 -1134312120
  br label %.backedge

88:                                               ; preds = %9
  %89 = load i32, i32* @x.1, align 4
  %90 = load i32, i32* @y.2, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 -1213015080, i32 2035893673
  br label %.backedge

98:                                               ; preds = %9
  %99 = add i32 %.080, -1
  %100 = load i32, i32* @x.1, align 4
  %101 = load i32, i32* @y.2, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 538643509, i32 2035893673
  br label %.backedge

109:                                              ; preds = %9
  br label %.backedge

110:                                              ; preds = %9
  %.neg96 = add i32 %.080, 1
  br label %.backedge

111:                                              ; preds = %9
  %112 = load i32, i32* @x.1, align 4
  %113 = load i32, i32* @y.2, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 -1779358095, i32 -1571563682
  br label %.backedge

121:                                              ; preds = %9
  %122 = load i32, i32* @x.1, align 4
  %123 = load i32, i32* @y.2, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 508027138, i32 -1571563682
  br label %.backedge

131:                                              ; preds = %9
  br label %.backedge

132:                                              ; preds = %9
  %133 = add i32 %.086, -1
  %134 = add i32 %133, %.078
  %135 = sdiv i32 %134, %.086
  %.not95 = icmp eq i32 %135, 0
  %136 = select i1 %.not95, i32 -1137952119, i32 -2067037260
  br label %.backedge

137:                                              ; preds = %9
  %138 = add i32 %.076, -1
  %139 = add i32 %138, %.078
  br label %.backedge

140:                                              ; preds = %9
  %141 = load i32, i32* @x.1, align 4
  %142 = load i32, i32* @y.2, align 4
  %143 = add i32 %141, -1
  %144 = mul i32 %143, %141
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %147, %146
  %149 = select i1 %148, i32 1647371699, i32 -1248998232
  br label %.backedge

150:                                              ; preds = %9
  %151 = load i32, i32* @x.1, align 4
  %152 = load i32, i32* @y.2, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 1064933638, i32 -1248998232
  br label %.backedge

160:                                              ; preds = %9
  br label %.backedge

161:                                              ; preds = %9
  %162 = load i32, i32* %4, align 4
  %.neg93 = sub i32 %.078, %162
  %163 = load i32, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %164 = add i32 %.076, -1
  store i32 %164, i32* %7, align 4
  %165 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7)
  %166 = load i32, i32* %165, align 4
  %.neg94 = mul i32 %.neg93, %.086
  %167 = add i32 %.neg94, %163
  %168 = sub i32 %167, %166
  br label %.backedge

169:                                              ; preds = %9
  %.not91 = icmp sgt i32 %.066, %.072
  %170 = select i1 %.not91, i32 831038445, i32 -752232325
  br label %.backedge

171:                                              ; preds = %9
  %172 = load i32, i32* @x.1, align 4
  %173 = load i32, i32* @y.2, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 517605090, i32 -1359907683
  br label %.backedge

181:                                              ; preds = %9
  %182 = add i32 %.076, -1
  %183 = add i32 %.086, 1
  %184 = mul nsw i32 %182, %183
  %185 = icmp sle i32 %.066, %184
  store i1 %185, i1* %1, align 1
  %186 = load i32, i32* @x.1, align 4
  %187 = load i32, i32* @y.2, align 4
  %188 = add i32 %186, -1
  %189 = mul i32 %188, %186
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %192, %191
  %194 = select i1 %193, i32 -1147526879, i32 -1359907683
  br label %.backedge

195:                                              ; preds = %9
  %.0..0..0.63 = load volatile i1, i1* %1, align 1
  %196 = select i1 %.0..0..0.63, i32 233384305, i32 739651850
  br label %.backedge

197:                                              ; preds = %9
  %.neg = add i32 %.086, 1
  %198 = srem i32 %.066, %.neg
  %.not90 = icmp eq i32 %198, 0
  %199 = select i1 %.not90, i32 66, i32 65
  %200 = call i32 @putchar(i32 %199)
  br label %.backedge

201:                                              ; preds = %9
  %.not89 = icmp sgt i32 %.066, %.074
  %202 = select i1 %.not89, i32 388645566, i32 -694673624
  br label %.backedge

203:                                              ; preds = %9
  %204 = call i32 @putchar(i32 65)
  br label %.backedge

205:                                              ; preds = %9
  %206 = add i32 %.068, %.074
  %.not = icmp sgt i32 %.066, %206
  %207 = select i1 %.not, i32 -2089568001, i32 -289688379
  br label %.backedge

208:                                              ; preds = %9
  %209 = load i32, i32* @x.1, align 4
  %210 = load i32, i32* @y.2, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 -1379700156, i32 803742439
  br label %.backedge

218:                                              ; preds = %9
  %219 = call i32 @putchar(i32 66)
  %220 = load i32, i32* @x.1, align 4
  %221 = load i32, i32* @y.2, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 421453878, i32 803742439
  br label %.backedge

229:                                              ; preds = %9
  br label %.backedge

230:                                              ; preds = %9
  %231 = add i32 %.068, %.074
  %232 = sub i32 %.066, %231
  %233 = add i32 %.086, 1
  %234 = srem i32 %232, %233
  %235 = icmp eq i32 %234, 1
  %236 = select i1 %235, i32 65, i32 66
  %237 = call i32 @putchar(i32 %236)
  br label %.backedge

238:                                              ; preds = %9
  br label %.backedge

239:                                              ; preds = %9
  br label %.backedge

240:                                              ; preds = %9
  br label %.backedge

241:                                              ; preds = %9
  %242 = add i32 %.066, 1
  br label %.backedge

243:                                              ; preds = %9
  %244 = load i32, i32* @x.1, align 4
  %245 = load i32, i32* @y.2, align 4
  %246 = add i32 %244, -1
  %247 = mul i32 %246, %244
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %250, %249
  %252 = select i1 %251, i32 1531388229, i32 -525477990
  br label %.backedge

253:                                              ; preds = %9
  %putchar88 = call i32 @putchar(i32 10)
  %254 = load i32, i32* @x.1, align 4
  %255 = load i32, i32* @y.2, align 4
  %256 = add i32 %254, -1
  %257 = mul i32 %256, %254
  %258 = and i32 %257, 1
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %260, %259
  %262 = select i1 %261, i32 1399309206, i32 -525477990
  br label %.backedge

263:                                              ; preds = %9
  br label %.backedge

264:                                              ; preds = %9
  ret i32 0

265:                                              ; preds = %9
  %266 = load i32, i32* @m, align 4
  %267 = add i32 %266, -1
  store i32 %267, i32* @m, align 4
  br label %.backedge

268:                                              ; preds = %9
  %269 = add i32 %.082, %.084
  %270 = ashr i32 %269, 1
  br label %.backedge

271:                                              ; preds = %9
  %272 = add i32 %.080, -1
  br label %.backedge

273:                                              ; preds = %9
  br label %.backedge

274:                                              ; preds = %9
  br label %.backedge

275:                                              ; preds = %9
  br label %.backedge

276:                                              ; preds = %9
  %277 = call i32 @putchar(i32 66)
  br label %.backedge

278:                                              ; preds = %9
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readv() local_unnamed_addr #0 comdat {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.3, align 4
  %10 = load i32, i32* @y.4, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %0
  %.028 = phi i32 [ -531404990, %0 ], [ %.028.be, %.backedge ]
  %.026 = phi i1 [ undef, %0 ], [ %.026.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.028, label %.backedge [
    i32 -531404990, label %17
    i32 789237333, label %20
    i32 -1885819315, label %35
    i32 3545738, label %36
    i32 1467187869, label %40
    i32 64525851, label %43
    i32 1472679970, label %53
    i32 1774144504, label %63
    i32 -1880699514, label %65
    i32 -438646704, label %75
    i32 -907243975, label %87
    i32 -2063165015, label %89
    i32 1710902492, label %99
    i32 330393749, label %109
    i32 -1409607122, label %110
    i32 1493111535, label %113
    i32 853132808, label %114
    i32 303203085, label %118
    i32 -117082195, label %128
    i32 2124370397, label %140
    i32 -1029550368, label %141
    i32 -1392365913, label %143
    i32 -1736625026, label %152
    i32 1611880072, label %156
    i32 1315928266, label %158
    i32 -712976276, label %159
    i32 -1904967810, label %160
    i32 -133331525, label %161
  ]

.backedge:                                        ; preds = %16, %161, %160, %159, %158, %156, %143, %141, %140, %128, %118, %114, %113, %110, %109, %99, %89, %87, %75, %65, %63, %53, %43, %40, %36, %35, %20, %17
  %.028.be = phi i32 [ %.028, %16 ], [ -117082195, %161 ], [ 1710902492, %160 ], [ -438646704, %159 ], [ 1472679970, %158 ], [ 789237333, %156 ], [ 853132808, %143 ], [ %142, %141 ], [ -1029550368, %140 ], [ %139, %128 ], [ %127, %118 ], [ %117, %114 ], [ 853132808, %113 ], [ 3545738, %110 ], [ -1409607122, %109 ], [ %108, %99 ], [ %98, %89 ], [ %88, %87 ], [ %86, %75 ], [ %74, %65 ], [ %64, %63 ], [ %62, %53 ], [ %52, %43 ], [ 64525851, %40 ], [ %39, %36 ], [ 3545738, %35 ], [ %34, %20 ], [ %19, %17 ]
  %.026.be = phi i1 [ %.026, %16 ], [ %.026, %161 ], [ %.026, %160 ], [ %.026, %159 ], [ %.026, %158 ], [ %.026, %156 ], [ %.026, %143 ], [ %.026, %141 ], [ %.026, %140 ], [ %.026, %128 ], [ %.026, %118 ], [ %.026, %114 ], [ %.026, %113 ], [ %.026, %110 ], [ %.026, %109 ], [ %.026, %99 ], [ %.026, %89 ], [ %.026, %87 ], [ %.026, %75 ], [ %.026, %65 ], [ %.026, %63 ], [ %.026, %53 ], [ %.026, %43 ], [ %42, %40 ], [ true, %36 ], [ %.026, %35 ], [ %.026, %20 ], [ %.026, %17 ]
  %.0.be = phi i1 [ %.0, %16 ], [ %.0, %161 ], [ %.0, %160 ], [ %.0, %159 ], [ %.0, %158 ], [ %.0, %156 ], [ %.0, %143 ], [ %.0, %141 ], [ %.0..0..0.24, %140 ], [ %.0, %128 ], [ %.0, %118 ], [ false, %114 ], [ %.0, %113 ], [ %.0, %110 ], [ %.0, %109 ], [ %.0, %99 ], [ %.0, %89 ], [ %.0, %87 ], [ %.0, %75 ], [ %.0, %65 ], [ %.0, %63 ], [ %.0, %53 ], [ %.0, %43 ], [ %.0, %40 ], [ %.0, %36 ], [ %.0, %35 ], [ %.0, %20 ], [ %.0, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0.2 = load volatile i1, i1* %8, align 1
  %.0..0..0.3 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0.2, %.0..0..0.3
  %19 = select i1 %18, i32 789237333, i32 1611880072
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i32, align 4
  store i32* %21, i32** %6, align 8
  %22 = alloca i32, align 4
  store i32* %22, i32** %5, align 8
  %23 = alloca i8, align 1
  store i8* %23, i8** %4, align 8
  %.0..0..0.4 = load volatile i32*, i32** %6, align 8
  store i32 0, i32* %.0..0..0.4, align 4
  %.0..0..0.8 = load volatile i32*, i32** %5, align 8
  store i32 1, i32* %.0..0..0.8, align 4
  %24 = call i32 @getchar()
  %25 = trunc i32 %24 to i8
  %.0..0..0.12 = load volatile i8*, i8** %4, align 8
  store i8 %25, i8* %.0..0..0.12, align 1
  %26 = load i32, i32* @x.3, align 4
  %27 = load i32, i32* @y.4, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 -1885819315, i32 1611880072
  br label %.backedge

35:                                               ; preds = %16
  br label %.backedge

36:                                               ; preds = %16
  %.0..0..0.13 = load volatile i8*, i8** %4, align 8
  %37 = load i8, i8* %.0..0..0.13, align 1
  %38 = icmp slt i8 %37, 48
  %39 = select i1 %38, i32 64525851, i32 1467187869
  br label %.backedge

40:                                               ; preds = %16
  %.0..0..0.14 = load volatile i8*, i8** %4, align 8
  %41 = load i8, i8* %.0..0..0.14, align 1
  %42 = icmp sgt i8 %41, 57
  br label %.backedge

43:                                               ; preds = %16
  store i1 %.026, i1* %1, align 1
  %44 = load i32, i32* @x.3, align 4
  %45 = load i32, i32* @y.4, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 1472679970, i32 1315928266
  br label %.backedge

53:                                               ; preds = %16
  %54 = load i32, i32* @x.3, align 4
  %55 = load i32, i32* @y.4, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 1774144504, i32 1315928266
  br label %.backedge

63:                                               ; preds = %16
  %.0..0..0.25 = load volatile i1, i1* %1, align 1
  %64 = select i1 %.0..0..0.25, i32 -1880699514, i32 1493111535
  br label %.backedge

65:                                               ; preds = %16
  %66 = load i32, i32* @x.3, align 4
  %67 = load i32, i32* @y.4, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 -438646704, i32 -712976276
  br label %.backedge

75:                                               ; preds = %16
  %.0..0..0.15 = load volatile i8*, i8** %4, align 8
  %76 = load i8, i8* %.0..0..0.15, align 1
  %77 = icmp eq i8 %76, 45
  store i1 %77, i1* %3, align 1
  %78 = load i32, i32* @x.3, align 4
  %79 = load i32, i32* @y.4, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 -907243975, i32 -712976276
  br label %.backedge

87:                                               ; preds = %16
  %.0..0..0.23 = load volatile i1, i1* %3, align 1
  %88 = select i1 %.0..0..0.23, i32 -2063165015, i32 -1409607122
  br label %.backedge

89:                                               ; preds = %16
  %90 = load i32, i32* @x.3, align 4
  %91 = load i32, i32* @y.4, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 1710902492, i32 -1904967810
  br label %.backedge

99:                                               ; preds = %16
  %.0..0..0.9 = load volatile i32*, i32** %5, align 8
  store i32 -1, i32* %.0..0..0.9, align 4
  %100 = load i32, i32* @x.3, align 4
  %101 = load i32, i32* @y.4, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 330393749, i32 -1904967810
  br label %.backedge

109:                                              ; preds = %16
  br label %.backedge

110:                                              ; preds = %16
  %111 = call i32 @getchar()
  %112 = trunc i32 %111 to i8
  %.0..0..0.16 = load volatile i8*, i8** %4, align 8
  store i8 %112, i8* %.0..0..0.16, align 1
  br label %.backedge

113:                                              ; preds = %16
  br label %.backedge

114:                                              ; preds = %16
  %.0..0..0.17 = load volatile i8*, i8** %4, align 8
  %115 = load i8, i8* %.0..0..0.17, align 1
  %116 = icmp sgt i8 %115, 47
  %117 = select i1 %116, i32 303203085, i32 -1029550368
  br label %.backedge

118:                                              ; preds = %16
  %119 = load i32, i32* @x.3, align 4
  %120 = load i32, i32* @y.4, align 4
  %121 = add i32 %119, -1
  %122 = mul i32 %121, %119
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %125, %124
  %127 = select i1 %126, i32 -117082195, i32 -133331525
  br label %.backedge

128:                                              ; preds = %16
  %.0..0..0.18 = load volatile i8*, i8** %4, align 8
  %129 = load i8, i8* %.0..0..0.18, align 1
  %130 = icmp slt i8 %129, 58
  store i1 %130, i1* %2, align 1
  %131 = load i32, i32* @x.3, align 4
  %132 = load i32, i32* @y.4, align 4
  %133 = add i32 %131, -1
  %134 = mul i32 %133, %131
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %137, %136
  %139 = select i1 %138, i32 2124370397, i32 -133331525
  br label %.backedge

140:                                              ; preds = %16
  %.0..0..0.24 = load volatile i1, i1* %2, align 1
  br label %.backedge

141:                                              ; preds = %16
  %142 = select i1 %.0, i32 -1392365913, i32 -1736625026
  br label %.backedge

143:                                              ; preds = %16
  %.0..0..0.5 = load volatile i32*, i32** %6, align 8
  %144 = load i32, i32* %.0..0..0.5, align 4
  %145 = mul nsw i32 %144, 10
  %.0..0..0.19 = load volatile i8*, i8** %4, align 8
  %146 = load i8, i8* %.0..0..0.19, align 1
  %147 = sext i8 %146 to i32
  %148 = add i32 %145, -48
  %149 = add i32 %148, %147
  %.0..0..0.6 = load volatile i32*, i32** %6, align 8
  store i32 %149, i32* %.0..0..0.6, align 4
  %150 = call i32 @getchar()
  %151 = trunc i32 %150 to i8
  %.0..0..0.20 = load volatile i8*, i8** %4, align 8
  store i8 %151, i8* %.0..0..0.20, align 1
  br label %.backedge

152:                                              ; preds = %16
  %.0..0..0.7 = load volatile i32*, i32** %6, align 8
  %153 = load i32, i32* %.0..0..0.7, align 4
  %.0..0..0.10 = load volatile i32*, i32** %5, align 8
  %154 = load i32, i32* %.0..0..0.10, align 4
  %155 = mul nsw i32 %154, %153
  ret i32 %155

156:                                              ; preds = %16
  %157 = call i32 @getchar()
  br label %.backedge

158:                                              ; preds = %16
  br label %.backedge

159:                                              ; preds = %16
  %.0..0..0.21 = load volatile i8*, i8** %4, align 8
  br label %.backedge

160:                                              ; preds = %16
  %.0..0..0.11 = load volatile i32*, i32** %5, align 8
  store i32 -1, i32* %.0..0..0.11, align 4
  br label %.backedge

161:                                              ; preds = %16
  %.0..0..0.22 = load volatile i8*, i8** %4, align 8
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i32* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -1483293385, %2 ], [ 1340443870, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 -1483293385, label %8
    i32 -754229095, label %.outer.backedge
    i32 -1711651584, label %11
    i32 1340443870, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i32, i32* %4, align 4
  %.0..0..0.6 = load volatile i32, i32* %3, align 4
  %9 = icmp slt i32 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 -754229095, i32 -1711651584
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i32* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i32* %.07.ph
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %0, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.7, align 4
  %8 = load i32, i32* @y.8, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -815357563, i32 807468083
  %16 = select i1 %14, i32 -208873108, i32 807468083
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 718971338, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 718971338, label %18
    i32 -1180128021, label %.outer10.backedge
    i32 -208873108, label %.outer.backedge
    i32 -815357563, label %21
    i32 1399853103, label %22
    i32 -910075588, label %23
    i32 807468083, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -1180128021, i32 1399853103
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -910075588, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ -910075588, %22 ], [ -208873108, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #6

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s769711758.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
