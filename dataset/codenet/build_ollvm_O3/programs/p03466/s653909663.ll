; ModuleID = 'build_ollvm/programs/p03466/s653909663.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s653909663.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt3maxIiERKT_S2_S2_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline nounwind uwtable
define signext i8 @_Z3getiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %8, align 4
  store i32 %1, i32* %9, align 4
  %10 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9)
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = sdiv i32 %11, 2
  %.sext = sext i32 %13 to i64
  %14 = load i32, i32* @x, align 4
  %15 = load i32, i32* @y, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 -1812174463, i32 620731729
  %23 = select i1 %21, i32 1635857015, i32 620731729
  %24 = select i1 %21, i32 -2020694388, i32 610368790
  %25 = select i1 %21, i32 -1583032512, i32 610368790
  %26 = select i1 %21, i32 1710781838, i32 1461987997
  %27 = select i1 %21, i32 -328715063, i32 1461987997
  %28 = select i1 %21, i32 -1883952884, i32 733863496
  %29 = select i1 %21, i32 1519541447, i32 733863496
  %30 = select i1 %21, i32 -6097946, i32 1632117910
  %31 = select i1 %21, i32 -423030054, i32 1632117910
  %32 = select i1 %21, i32 2110595393, i32 -1321899352
  %33 = select i1 %21, i32 2070749795, i32 -1321899352
  br label %34

34:                                               ; preds = %.backedge, %3
  %.091150 = phi i8 [ undef, %3 ], [ %.091150.be, %.backedge ]
  %.0109 = phi i64 [ undef, %3 ], [ %.0109.be, %.backedge ]
  %.0107 = phi i64 [ undef, %3 ], [ %.0107.be, %.backedge ]
  %.0105 = phi i64 [ undef, %3 ], [ %.0105.be, %.backedge ]
  %.0103 = phi i64 [ 0, %3 ], [ %.0103.be, %.backedge ]
  %.0101 = phi i64 [ %12, %3 ], [ %.0101.be, %.backedge ]
  %.099 = phi i64 [ %.sext, %3 ], [ %.099.be, %.backedge ]
  %.097 = phi i32 [ %2, %3 ], [ %.097.be, %.backedge ]
  %.095 = phi i64 [ undef, %3 ], [ %.095.be, %.backedge ]
  %.093 = phi i64 [ undef, %3 ], [ %.093.be, %.backedge ]
  %.091 = phi i8 [ undef, %3 ], [ %.091.be, %.backedge ]
  %.089 = phi i64 [ undef, %3 ], [ %.089.be, %.backedge ]
  %.087 = phi i64 [ undef, %3 ], [ %.087.be, %.backedge ]
  %.0 = phi i32 [ -2080423053, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -2080423053, label %35
    i32 2070749795, label %36
    i32 2110595393, label %39
    i32 582047441, label %41
    i32 1209507168, label %54
    i32 -1236289698, label %58
    i32 -1328164781, label %61
    i32 1518805950, label %64
    i32 -1127554096, label %65
    i32 -2086731679, label %71
    i32 -1949212712, label %75
    i32 -1780169654, label %85
    i32 1242170558, label %88
    i32 790409390, label %92
    i32 1442562901, label %95
    i32 210213498, label %98
    i32 -186277980, label %99
    i32 -776917741, label %105
    i32 595226413, label %111
    i32 1630327503, label %112
    i32 -1857549084, label %113
    i32 -423030054, label %114
    i32 -6097946, label %133
    i32 -1725810184, label %135
    i32 1762377359, label %136
    i32 1519679298, label %148
    i32 -59900464, label %149
    i32 1519541447, label %150
    i32 -1883952884, label %164
    i32 1651999872, label %166
    i32 -328715063, label %167
    i32 1710781838, label %168
    i32 1140432435, label %169
    i32 -1583032512, label %170
    i32 -2020694388, label %171
    i32 525391019, label %172
    i32 1635857015, label %173
    i32 -1812174463, label %174
    i32 -1321899352, label %175
    i32 1632117910, label %176
    i32 733863496, label %192
    i32 1461987997, label %201
    i32 610368790, label %202
    i32 620731729, label %203
  ]

.backedge:                                        ; preds = %34, %203, %202, %201, %192, %176, %175, %173, %172, %171, %170, %169, %168, %167, %166, %164, %150, %149, %148, %136, %135, %133, %114, %113, %112, %111, %105, %99, %98, %95, %92, %88, %85, %75, %71, %65, %64, %61, %58, %54, %41, %39, %36, %35
  %.091150.be = phi i8 [ %.091150, %34 ], [ %.091150, %203 ], [ %.091150, %202 ], [ %.091150, %201 ], [ %.091150, %192 ], [ %.091150, %176 ], [ %.091150, %175 ], [ %.091, %173 ], [ %.091150, %172 ], [ %.091150, %171 ], [ %.091150, %170 ], [ %.091150, %169 ], [ %.091150, %168 ], [ %.091150, %167 ], [ %.091150, %166 ], [ %.091150, %164 ], [ %.091150, %150 ], [ %.091150, %149 ], [ %.091150, %148 ], [ %.091150, %136 ], [ %.091150, %135 ], [ %.091150, %133 ], [ %.091150, %114 ], [ %.091150, %113 ], [ %.091150, %112 ], [ %.091150, %111 ], [ %.091150, %105 ], [ %.091150, %99 ], [ %.091150, %98 ], [ %.091150, %95 ], [ %.091150, %92 ], [ %.091150, %88 ], [ %.091150, %85 ], [ %.091150, %75 ], [ %.091150, %71 ], [ %.091150, %65 ], [ %.091150, %64 ], [ %.091150, %61 ], [ %.091150, %58 ], [ %.091150, %54 ], [ %.091150, %41 ], [ %.091150, %39 ], [ %.091150, %36 ], [ %.091150, %35 ]
  %.0109.be = phi i64 [ %.0109, %34 ], [ %.0109, %203 ], [ %.0109, %202 ], [ %.0109, %201 ], [ %.0109, %192 ], [ %.0109, %176 ], [ %.0109, %175 ], [ %.0109, %173 ], [ %.0109, %172 ], [ %.0109, %171 ], [ %.0109, %170 ], [ %.0109, %169 ], [ %.0109, %168 ], [ %.0109, %167 ], [ %.0109, %166 ], [ %.0109, %164 ], [ %.0109, %150 ], [ %.0109, %149 ], [ %.0109, %148 ], [ %.0109, %136 ], [ %.0109, %135 ], [ %.0109, %133 ], [ %.0109, %114 ], [ %.0109, %113 ], [ %.0109, %112 ], [ %.0109, %111 ], [ %.0109, %105 ], [ %.0109, %99 ], [ %.0109, %98 ], [ %.0109, %95 ], [ %.0109, %92 ], [ %.0109, %88 ], [ %.0109, %85 ], [ %.0109, %75 ], [ %.0109, %71 ], [ %.0101, %65 ], [ %.0109, %64 ], [ %.0109, %61 ], [ %.0109, %58 ], [ %.0109, %54 ], [ %.0109, %41 ], [ %.0109, %39 ], [ %.0109, %36 ], [ %.0109, %35 ]
  %.0107.be = phi i64 [ %.0107, %34 ], [ %.0107, %203 ], [ %.0107, %202 ], [ %.0107, %201 ], [ %.0107, %192 ], [ %.0107, %176 ], [ %.0107, %175 ], [ %.0107, %173 ], [ %.0107, %172 ], [ %.0107, %171 ], [ %.0107, %170 ], [ %.0107, %169 ], [ %.0107, %168 ], [ %.0107, %167 ], [ %.0107, %166 ], [ %.0107, %164 ], [ %.0107, %150 ], [ %.0107, %149 ], [ %.0107, %148 ], [ %.0107, %136 ], [ %.0107, %135 ], [ %.0107, %133 ], [ %.0107, %114 ], [ %.0107, %113 ], [ %.0107, %112 ], [ %.0107, %111 ], [ %.0107, %105 ], [ %.0103, %99 ], [ %.0107, %98 ], [ %.0107, %95 ], [ %.0107, %92 ], [ %.0107, %88 ], [ %.0107, %85 ], [ %.0107, %75 ], [ %.0107, %71 ], [ %.0107, %65 ], [ %.0107, %64 ], [ %.0107, %61 ], [ %.0107, %58 ], [ %.0107, %54 ], [ %.0107, %41 ], [ %.0107, %39 ], [ %.0107, %36 ], [ %.0107, %35 ]
  %.0105.be = phi i64 [ %.0105, %34 ], [ %.0105, %203 ], [ %.0105, %202 ], [ %.0105, %201 ], [ %.0105, %192 ], [ %191, %176 ], [ %.0105, %175 ], [ %.0105, %173 ], [ %.0105, %172 ], [ %.0105, %171 ], [ %.0105, %170 ], [ %.0105, %169 ], [ %.0105, %168 ], [ %.0105, %167 ], [ %.0105, %166 ], [ %.0105, %164 ], [ %.0105, %150 ], [ %.0105, %149 ], [ %.0105, %148 ], [ %.0105, %136 ], [ %.0105, %135 ], [ %.0105, %133 ], [ %128, %114 ], [ %.0105, %113 ], [ %.0105, %112 ], [ %.0105, %111 ], [ %.0105, %105 ], [ %.0105, %99 ], [ %.0105, %98 ], [ %.0105, %95 ], [ %.0105, %92 ], [ %.0105, %88 ], [ %.0105, %85 ], [ %.0105, %75 ], [ %.0105, %71 ], [ %.0105, %65 ], [ %.0105, %64 ], [ %.0105, %61 ], [ %.0105, %58 ], [ %.0105, %54 ], [ %.0105, %41 ], [ %.0105, %39 ], [ %.0105, %36 ], [ %.0105, %35 ]
  %.0103.be = phi i64 [ %.0103, %34 ], [ %.0103, %203 ], [ %.0103, %202 ], [ %.0103, %201 ], [ %.0103, %192 ], [ %.0103, %176 ], [ %.0103, %175 ], [ %.0103, %173 ], [ %.0103, %172 ], [ %.0103, %171 ], [ %.0103, %170 ], [ %.0103, %169 ], [ %.0103, %168 ], [ %.0103, %167 ], [ %.0103, %166 ], [ %.0103, %164 ], [ %.0103, %150 ], [ %.0103, %149 ], [ %.0103, %148 ], [ %.0103, %136 ], [ %.0103, %135 ], [ %.0103, %133 ], [ %.0103, %114 ], [ %.0103, %113 ], [ %.0103, %112 ], [ %.0103, %111 ], [ %.0103, %105 ], [ %.0103, %99 ], [ %.0103, %98 ], [ %.099, %95 ], [ %.0103, %92 ], [ %.0103, %88 ], [ %.0103, %85 ], [ %.0103, %75 ], [ %.0103, %71 ], [ 0, %65 ], [ %.0103, %64 ], [ %.0103, %61 ], [ %.099, %58 ], [ %.0103, %54 ], [ %.0103, %41 ], [ %.0103, %39 ], [ %.0103, %36 ], [ %.0103, %35 ]
  %.0101.be = phi i64 [ %.0101, %34 ], [ %.0101, %203 ], [ %.0101, %202 ], [ %.0101, %201 ], [ %.0101, %192 ], [ %.0101, %176 ], [ %.0101, %175 ], [ %.0101, %173 ], [ %.0101, %172 ], [ %.0101, %171 ], [ %.0101, %170 ], [ %.0101, %169 ], [ %.0101, %168 ], [ %.0101, %167 ], [ %.0101, %166 ], [ %.0101, %164 ], [ %.0101, %150 ], [ %.0101, %149 ], [ %.0101, %148 ], [ %.0101, %136 ], [ %.0101, %135 ], [ %.0101, %133 ], [ %.0101, %114 ], [ %.0101, %113 ], [ %.0101, %112 ], [ %.0101, %111 ], [ %.0101, %105 ], [ %.0101, %99 ], [ %.0101, %98 ], [ %.0101, %95 ], [ %.099, %92 ], [ %.0101, %88 ], [ %.0101, %85 ], [ %.0101, %75 ], [ %.0101, %71 ], [ %69, %65 ], [ %.0101, %64 ], [ %.099, %61 ], [ %.0101, %58 ], [ %.0101, %54 ], [ %.0101, %41 ], [ %.0101, %39 ], [ %.0101, %36 ], [ %.0101, %35 ]
  %.099.be = phi i64 [ %.099, %34 ], [ %.099, %203 ], [ %.099, %202 ], [ %.099, %201 ], [ %.099, %192 ], [ %.099, %176 ], [ %.099, %175 ], [ %.099, %173 ], [ %.099, %172 ], [ %.099, %171 ], [ %.099, %170 ], [ %.099, %169 ], [ %.099, %168 ], [ %.099, %167 ], [ %.099, %166 ], [ %.099, %164 ], [ %.099, %150 ], [ %.099, %149 ], [ %.099, %148 ], [ %.099, %136 ], [ %.099, %135 ], [ %.099, %133 ], [ %.099, %114 ], [ %.099, %113 ], [ %.099, %112 ], [ %.099, %111 ], [ %.099, %105 ], [ %.099, %99 ], [ %.099, %98 ], [ %97, %95 ], [ %94, %92 ], [ %.099, %88 ], [ %.099, %85 ], [ %.099, %75 ], [ %.099, %71 ], [ %70, %65 ], [ %.099, %64 ], [ %63, %61 ], [ %60, %58 ], [ %.099, %54 ], [ %.099, %41 ], [ %.099, %39 ], [ %.099, %36 ], [ %.099, %35 ]
  %.097.be = phi i32 [ %.097, %34 ], [ %.097, %203 ], [ %.097, %202 ], [ %.097, %201 ], [ %200, %192 ], [ %188, %176 ], [ %.097, %175 ], [ %.097, %173 ], [ %.097, %172 ], [ %.097, %171 ], [ %.097, %170 ], [ %.097, %169 ], [ %.097, %168 ], [ %.097, %167 ], [ %.097, %166 ], [ %.097, %164 ], [ %159, %150 ], [ %.097, %149 ], [ %.097, %148 ], [ %.097, %136 ], [ %.097, %135 ], [ %.097, %133 ], [ %125, %114 ], [ %.097, %113 ], [ %.097, %112 ], [ %.097, %111 ], [ %.097, %105 ], [ %.097, %99 ], [ %.097, %98 ], [ %.097, %95 ], [ %.097, %92 ], [ %.097, %88 ], [ %.097, %85 ], [ %.097, %75 ], [ %.097, %71 ], [ %.097, %65 ], [ %.097, %64 ], [ %.097, %61 ], [ %.097, %58 ], [ %.097, %54 ], [ %.097, %41 ], [ %.097, %39 ], [ %.097, %36 ], [ %.097, %35 ]
  %.095.be = phi i64 [ %.095, %34 ], [ %.095, %203 ], [ %.095, %202 ], [ %.095, %201 ], [ %.095, %192 ], [ %.095, %176 ], [ %.095, %175 ], [ %.095, %173 ], [ %.095, %172 ], [ %.095, %171 ], [ %.095, %170 ], [ %.095, %169 ], [ %.095, %168 ], [ %.095, %167 ], [ %.095, %166 ], [ %.095, %164 ], [ %.095, %150 ], [ %.095, %149 ], [ %.095, %148 ], [ %.095, %136 ], [ %.095, %135 ], [ %.095, %133 ], [ %.095, %114 ], [ %.095, %113 ], [ %.095, %112 ], [ %.095, %111 ], [ %.095, %105 ], [ %.095, %99 ], [ %.095, %98 ], [ %.095, %95 ], [ %.095, %92 ], [ %.095, %88 ], [ %.095, %85 ], [ %.095, %75 ], [ %.095, %71 ], [ %.095, %65 ], [ %.095, %64 ], [ %.095, %61 ], [ %.095, %58 ], [ %.095, %54 ], [ %43, %41 ], [ %.095, %39 ], [ %.095, %36 ], [ %.095, %35 ]
  %.093.be = phi i64 [ %.093, %34 ], [ %.093, %203 ], [ %.093, %202 ], [ %.093, %201 ], [ %.093, %192 ], [ %.093, %176 ], [ %.093, %175 ], [ %.093, %173 ], [ %.093, %172 ], [ %.093, %171 ], [ %.093, %170 ], [ %.093, %169 ], [ %.093, %168 ], [ %.093, %167 ], [ %.093, %166 ], [ %.093, %164 ], [ %.093, %150 ], [ %.093, %149 ], [ %.093, %148 ], [ %.093, %136 ], [ %.093, %135 ], [ %.093, %133 ], [ %.093, %114 ], [ %.093, %113 ], [ %.093, %112 ], [ %.093, %111 ], [ %.093, %105 ], [ %.093, %99 ], [ %.093, %98 ], [ %.093, %95 ], [ %.093, %92 ], [ %.093, %88 ], [ %.093, %85 ], [ %.093, %75 ], [ %.093, %71 ], [ %.093, %65 ], [ %.093, %64 ], [ %.093, %61 ], [ %.093, %58 ], [ %.093, %54 ], [ %50, %41 ], [ %.093, %39 ], [ %.093, %36 ], [ %.093, %35 ]
  %.091.be = phi i8 [ %.091, %34 ], [ %.091, %203 ], [ 66, %202 ], [ 65, %201 ], [ %.091, %192 ], [ %.091, %176 ], [ %.091, %175 ], [ %.091, %173 ], [ %.091, %172 ], [ %.091, %171 ], [ 66, %170 ], [ %.091, %169 ], [ %.091, %168 ], [ 65, %167 ], [ %.091, %166 ], [ %.091, %164 ], [ %.091, %150 ], [ %.091, %149 ], [ 66, %148 ], [ %.091, %136 ], [ 65, %135 ], [ %.091, %133 ], [ %.091, %114 ], [ %.091, %113 ], [ 65, %112 ], [ 66, %111 ], [ %.091, %105 ], [ %.091, %99 ], [ %.091, %98 ], [ %.091, %95 ], [ %.091, %92 ], [ %.091, %88 ], [ %.091, %85 ], [ %.091, %75 ], [ %.091, %71 ], [ %.091, %65 ], [ %.091, %64 ], [ %.091, %61 ], [ %.091, %58 ], [ %.091, %54 ], [ %.091, %41 ], [ %.091, %39 ], [ %.091, %36 ], [ %.091, %35 ]
  %.089.be = phi i64 [ %.089, %34 ], [ %.089, %203 ], [ %.089, %202 ], [ %.089, %201 ], [ %.089, %192 ], [ %.089, %176 ], [ %.089, %175 ], [ %.089, %173 ], [ %.089, %172 ], [ %.089, %171 ], [ %.089, %170 ], [ %.089, %169 ], [ %.089, %168 ], [ %.089, %167 ], [ %.089, %166 ], [ %.089, %164 ], [ %.089, %150 ], [ %.089, %149 ], [ %.089, %148 ], [ %.089, %136 ], [ %.089, %135 ], [ %.089, %133 ], [ %.089, %114 ], [ %.089, %113 ], [ %.089, %112 ], [ %.089, %111 ], [ %.089, %105 ], [ %.089, %99 ], [ %.089, %98 ], [ %.089, %95 ], [ %.089, %92 ], [ %.089, %88 ], [ %.089, %85 ], [ %79, %75 ], [ %.089, %71 ], [ %.089, %65 ], [ %.089, %64 ], [ %.089, %61 ], [ %.089, %58 ], [ %.089, %54 ], [ %.089, %41 ], [ %.089, %39 ], [ %.089, %36 ], [ %.089, %35 ]
  %.087.be = phi i64 [ %.087, %34 ], [ %.087, %203 ], [ %.087, %202 ], [ %.087, %201 ], [ %.087, %192 ], [ %.087, %176 ], [ %.087, %175 ], [ %.087, %173 ], [ %.087, %172 ], [ %.087, %171 ], [ %.087, %170 ], [ %.087, %169 ], [ %.087, %168 ], [ %.087, %167 ], [ %.087, %166 ], [ %.087, %164 ], [ %.087, %150 ], [ %.087, %149 ], [ %.087, %148 ], [ %.087, %136 ], [ %.087, %135 ], [ %.087, %133 ], [ %.087, %114 ], [ %.087, %113 ], [ %.087, %112 ], [ %.087, %111 ], [ %.087, %105 ], [ %.087, %99 ], [ %.087, %98 ], [ %.087, %95 ], [ %.087, %92 ], [ %.087, %88 ], [ %.087, %85 ], [ %82, %75 ], [ %.087, %71 ], [ %.087, %65 ], [ %.087, %64 ], [ %.087, %61 ], [ %.087, %58 ], [ %.087, %54 ], [ %.087, %41 ], [ %.087, %39 ], [ %.087, %36 ], [ %.087, %35 ]
  %.0.be = phi i32 [ %.0, %34 ], [ 1635857015, %203 ], [ -1583032512, %202 ], [ -328715063, %201 ], [ 1519541447, %192 ], [ -423030054, %176 ], [ 2070749795, %175 ], [ %22, %173 ], [ %23, %172 ], [ 525391019, %171 ], [ %24, %170 ], [ %25, %169 ], [ 525391019, %168 ], [ %26, %167 ], [ %27, %166 ], [ %165, %164 ], [ %28, %150 ], [ %29, %149 ], [ 525391019, %148 ], [ %147, %136 ], [ 525391019, %135 ], [ %134, %133 ], [ %30, %114 ], [ %31, %113 ], [ 525391019, %112 ], [ 525391019, %111 ], [ %110, %105 ], [ %104, %99 ], [ -2086731679, %98 ], [ 210213498, %95 ], [ 210213498, %92 ], [ %91, %88 ], [ %87, %85 ], [ %84, %75 ], [ %74, %71 ], [ -2086731679, %65 ], [ -2080423053, %64 ], [ 1518805950, %61 ], [ 1518805950, %58 ], [ %57, %54 ], [ %53, %41 ], [ %40, %39 ], [ %32, %36 ], [ %33, %35 ]
  br label %34

35:                                               ; preds = %34
  br label %.backedge

36:                                               ; preds = %34
  %37 = sub i64 %.0101, %.0103
  %38 = icmp sgt i64 %37, 1
  store i1 %38, i1* %7, align 1
  br label %.backedge

39:                                               ; preds = %34
  %.0..0..0. = load volatile i1, i1* %7, align 1
  %40 = select i1 %.0..0..0., i32 582047441, i32 -1127554096
  br label %.backedge

41:                                               ; preds = %34
  %42 = load i32, i32* %8, align 4
  %43 = sext i32 %42 to i64
  %44 = add i64 %.099, -1
  %45 = add i64 %44, %43
  %46 = sdiv i64 %45, %.099
  %47 = load i32, i32* %9, align 4
  %48 = sext i32 %47 to i64
  %49 = add i64 %44, %48
  %50 = sdiv i64 %49, %.099
  %51 = add nsw i64 %48, 1
  %52 = icmp sgt i64 %46, %51
  %53 = select i1 %52, i32 -1236289698, i32 1209507168
  br label %.backedge

54:                                               ; preds = %34
  %55 = add i64 %.095, 1
  %56 = icmp sgt i64 %.093, %55
  %57 = select i1 %56, i32 -1236289698, i32 -1328164781
  br label %.backedge

58:                                               ; preds = %34
  %59 = add i64 %.099, %.0101
  %60 = sdiv i64 %59, 2
  br label %.backedge

61:                                               ; preds = %34
  %62 = add i64 %.099, %.0103
  %63 = sdiv i64 %62, 2
  br label %.backedge

64:                                               ; preds = %34
  br label %.backedge

65:                                               ; preds = %34
  %66 = load i32, i32* %8, align 4
  %67 = sext i32 %66 to i64
  %68 = sdiv i64 %67, %.0101
  %69 = add nsw i64 %68, 1
  %70 = sdiv i64 %69, 2
  br label %.backedge

71:                                               ; preds = %34
  %72 = sub i64 %.0101, %.0103
  %73 = icmp sgt i64 %72, 1
  %74 = select i1 %73, i32 -1949212712, i32 -186277980
  br label %.backedge

75:                                               ; preds = %34
  %76 = load i32, i32* %8, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %.099, %.0109
  %79 = sub i64 %77, %78
  %80 = load i32, i32* %9, align 4
  %81 = sext i32 %80 to i64
  %82 = sub i64 %81, %.099
  %83 = icmp slt i64 %79, 0
  %84 = select i1 %83, i32 790409390, i32 -1780169654
  br label %.backedge

85:                                               ; preds = %34
  %86 = icmp slt i64 %.087, 0
  %87 = select i1 %86, i32 790409390, i32 1242170558
  br label %.backedge

88:                                               ; preds = %34
  %89 = mul nsw i64 %.089, %.0109
  %90 = icmp sgt i64 %.087, %89
  %91 = select i1 %90, i32 790409390, i32 1442562901
  br label %.backedge

92:                                               ; preds = %34
  %93 = add i64 %.099, %.0103
  %94 = sdiv i64 %93, 2
  br label %.backedge

95:                                               ; preds = %34
  %96 = add i64 %.099, %.0101
  %97 = sdiv i64 %96, 2
  br label %.backedge

98:                                               ; preds = %34
  br label %.backedge

99:                                               ; preds = %34
  %100 = sext i32 %.097 to i64
  %101 = add i64 %.0109, 1
  %102 = mul nsw i64 %.0103, %101
  %103 = icmp sgt i64 %102, %100
  %104 = select i1 %103, i32 -776917741, i32 -1857549084
  br label %.backedge

105:                                              ; preds = %34
  %106 = sext i32 %.097 to i64
  %107 = add i64 %.0109, 1
  %108 = srem i64 %106, %107
  %109 = icmp eq i64 %108, %.0109
  %110 = select i1 %109, i32 595226413, i32 1630327503
  br label %.backedge

111:                                              ; preds = %34
  br label %.backedge

112:                                              ; preds = %34
  br label %.backedge

113:                                              ; preds = %34
  br label %.backedge

114:                                              ; preds = %34
  %115 = mul nsw i64 %.0107, %.0109
  %116 = load i32, i32* %8, align 4
  %117 = trunc i64 %115 to i32
  %118 = sub i32 93570424, %117
  %119 = add i32 %118, %116
  %120 = add i32 %119, -93570424
  store i32 %120, i32* %8, align 4
  %121 = load i32, i32* %9, align 4
  %122 = trunc i64 %.0107 to i32
  %123 = sub i32 %121, %122
  store i32 %123, i32* %9, align 4
  %.neg128 = xor i64 %.0109, -1
  %.neg129 = mul i64 %.0107, %.neg128
  %124 = trunc i64 %.neg129 to i32
  %125 = add i32 %.097, %124
  %126 = add i32 %123, -1
  %127 = sext i32 %126 to i64
  %128 = sdiv i64 %127, %.0109
  %129 = sext i32 %125 to i64
  %130 = sext i32 %120 to i64
  %131 = sub nsw i64 %130, %128
  %132 = icmp sgt i64 %131, %129
  store i1 %132, i1* %6, align 1
  br label %.backedge

133:                                              ; preds = %34
  %.0..0..0.84 = load volatile i1, i1* %6, align 1
  %134 = select i1 %.0..0..0.84, i32 -1725810184, i32 1762377359
  br label %.backedge

135:                                              ; preds = %34
  br label %.backedge

136:                                              ; preds = %34
  %137 = sext i32 %.097 to i64
  %138 = load i32, i32* %8, align 4
  %139 = sext i32 %138 to i64
  %140 = load i32, i32* %9, align 4
  %141 = sext i32 %140 to i64
  %142 = mul nsw i64 %.0105, %.0109
  %143 = add i64 %142, %.0105
  %144 = sub i64 %139, %143
  %145 = add i64 %144, %141
  %146 = icmp sgt i64 %145, %137
  %147 = select i1 %146, i32 1519679298, i32 -59900464
  br label %.backedge

148:                                              ; preds = %34
  br label %.backedge

149:                                              ; preds = %34
  br label %.backedge

150:                                              ; preds = %34
  %151 = load i32, i32* %8, align 4
  %152 = zext i32 %151 to i64
  %153 = load i32, i32* %9, align 4
  %154 = zext i32 %153 to i64
  %155 = mul nsw i64 %.0105, %.0109
  %156 = add i64 %155, %.0105
  %157 = add nuw nsw i64 %152, %154
  %.neg127 = sub i64 %156, %157
  %158 = trunc i64 %.neg127 to i32
  %159 = add i32 %.097, %158
  %160 = sext i32 %159 to i64
  %161 = add i64 %.0109, 1
  %162 = srem i64 %160, %161
  %163 = icmp eq i64 %162, 0
  store i1 %163, i1* %5, align 1
  br label %.backedge

164:                                              ; preds = %34
  %.0..0..0.85 = load volatile i1, i1* %5, align 1
  %165 = select i1 %.0..0..0.85, i32 1651999872, i32 1140432435
  br label %.backedge

166:                                              ; preds = %34
  br label %.backedge

167:                                              ; preds = %34
  br label %.backedge

168:                                              ; preds = %34
  br label %.backedge

169:                                              ; preds = %34
  br label %.backedge

170:                                              ; preds = %34
  br label %.backedge

171:                                              ; preds = %34
  br label %.backedge

172:                                              ; preds = %34
  br label %.backedge

173:                                              ; preds = %34
  br label %.backedge

174:                                              ; preds = %34
  store i8 %.091150, i8* %4, align 1
  %.0..0..0.86 = load volatile i8, i8* %4, align 1
  ret i8 %.0..0..0.86

175:                                              ; preds = %34
  br label %.backedge

176:                                              ; preds = %34
  %177 = mul nsw i64 %.0107, %.0109
  %178 = load i32, i32* %8, align 4
  %179 = trunc i64 %177 to i32
  %180 = sub i32 %178, %179
  store i32 %180, i32* %8, align 4
  %181 = load i32, i32* %9, align 4
  %182 = zext i32 %181 to i64
  %183 = sub i64 115794718, %.0107
  %184 = add i64 %183, %182
  %185 = trunc i64 %184 to i32
  %186 = add i32 %185, -115794718
  store i32 %186, i32* %9, align 4
  %.neg123.neg = xor i64 %.0109, -1
  %.neg124 = mul i64 %.0107, %.neg123.neg
  %187 = trunc i64 %.neg124 to i32
  %188 = add i32 %.097, %187
  %189 = shl i64 %184, 32
  %sext = add i64 %189, -497334531154509824
  %190 = ashr exact i64 %sext, 32
  %191 = sdiv i64 %190, %.0109
  br label %.backedge

192:                                              ; preds = %34
  %193 = load i32, i32* %8, align 4
  %194 = zext i32 %193 to i64
  %195 = load i32, i32* %9, align 4
  %196 = zext i32 %195 to i64
  %197 = mul nsw i64 %.0105, %.0109
  %.neg139 = add i64 %.0105, %197
  %198 = add nuw nsw i64 %194, %196
  %.neg = sub i64 %.neg139, %198
  %199 = trunc i64 %.neg to i32
  %200 = add i32 %.097, %199
  br label %.backedge

201:                                              ; preds = %34
  br label %.backedge

202:                                              ; preds = %34
  br label %.backedge

203:                                              ; preds = %34
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.3, align 4
  %9 = load i32, i32* @y.4, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 445224936, i32 1585657025
  %17 = select i1 %15, i32 -677333899, i32 1585657025
  %18 = select i1 %15, i32 1269867710, i32 -834753200
  %19 = select i1 %15, i32 1911225042, i32 -834753200
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i32* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i32* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ -94467853, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -94467853, label %21
    i32 -194811818, label %24
    i32 1911225042, label %25
    i32 1269867710, label %26
    i32 -1520111399, label %27
    i32 933418918, label %28
    i32 -677333899, label %29
    i32 445224936, label %30
    i32 -834753200, label %31
    i32 1585657025, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i32* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i32* [ %.010, %20 ], [ %.010, %32 ], [ %1, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %0, %27 ], [ %.010, %26 ], [ %1, %25 ], [ %.010, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ -677333899, %32 ], [ 1911225042, %31 ], [ %16, %29 ], [ %17, %28 ], [ 933418918, %27 ], [ 933418918, %26 ], [ %18, %25 ], [ %19, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i32, i32* %5, align 4
  %.0..0..0.8 = load volatile i32, i32* %4, align 4
  %22 = icmp slt i32 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 -194811818, i32 -1520111399
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i32* %.01013, i32** %3, align 8
  %.0..0..0.9 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  br label %7

7:                                                ; preds = %.backedge, %0
  %.08 = phi i32 [ 0, %0 ], [ %.08.be, %.backedge ]
  %.06 = phi i32 [ undef, %0 ], [ %.06.be, %.backedge ]
  %.0 = phi i32 [ -236323238, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -236323238, label %8
    i32 1397258645, label %12
    i32 2007973936, label %15
    i32 543767718, label %18
    i32 -1561039962, label %25
    i32 51602848, label %27
    i32 -1445485536, label %28
    i32 1497375698, label %30
    i32 1235001381, label %40
    i32 319224917, label %50
    i32 -949436149, label %51
  ]

.backedge:                                        ; preds = %7, %51, %40, %30, %28, %27, %25, %18, %15, %12, %8
  %.08.be = phi i32 [ %.08, %7 ], [ %.08, %51 ], [ %.08, %40 ], [ %.08, %30 ], [ %29, %28 ], [ %.08, %27 ], [ %.08, %25 ], [ %.08, %18 ], [ %.08, %15 ], [ %.08, %12 ], [ %.08, %8 ]
  %.06.be = phi i32 [ %.06, %7 ], [ %.06, %51 ], [ %.06, %40 ], [ %.06, %30 ], [ %.06, %28 ], [ %.06, %27 ], [ %26, %25 ], [ %.06, %18 ], [ %.06, %15 ], [ %14, %12 ], [ %.06, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ 1235001381, %51 ], [ %49, %40 ], [ %39, %30 ], [ -236323238, %28 ], [ -1445485536, %27 ], [ 2007973936, %25 ], [ -1561039962, %18 ], [ %17, %15 ], [ 2007973936, %12 ], [ %11, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = load i32, i32* %1, align 4
  %10 = icmp slt i32 %.08, %9
  %11 = select i1 %10, i32 1397258645, i32 1497375698
  br label %.backedge

12:                                               ; preds = %7
  %13 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %14 = load i32, i32* %4, align 4
  br label %.backedge

15:                                               ; preds = %7
  %16 = load i32, i32* %5, align 4
  %.not = icmp sgt i32 %.06, %16
  %17 = select i1 %.not, i32 51602848, i32 543767718
  br label %.backedge

18:                                               ; preds = %7
  %19 = load i32, i32* %2, align 4
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %.06, -1
  %22 = call signext i8 @_Z3getiii(i32 %19, i32 %20, i32 %21)
  %23 = sext i8 %22 to i32
  %24 = call i32 @putchar(i32 %23)
  br label %.backedge

25:                                               ; preds = %7
  %26 = add i32 %.06, 1
  br label %.backedge

27:                                               ; preds = %7
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

28:                                               ; preds = %7
  %29 = add i32 %.08, 1
  br label %.backedge

30:                                               ; preds = %7
  %31 = load i32, i32* @x.5, align 4
  %32 = load i32, i32* @y.6, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 1235001381, i32 -949436149
  br label %.backedge

40:                                               ; preds = %7
  %41 = load i32, i32* @x.5, align 4
  %42 = load i32, i32* @y.6, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 319224917, i32 -949436149
  br label %.backedge

50:                                               ; preds = %7
  ret i32 0

51:                                               ; preds = %7
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
