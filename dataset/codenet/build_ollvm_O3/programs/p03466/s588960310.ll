; ModuleID = 'build_ollvm/programs/p03466/s588960310.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s588960310.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZSt3maxIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@t = global i64 0, align 8
@n = local_unnamed_addr global i64 0, align 8
@m = local_unnamed_addr global i64 0, align 8
@i = local_unnamed_addr global i64 0, align 8
@j = local_unnamed_addr global i64 0, align 8
@fr = local_unnamed_addr global [1005 x i64] zeroinitializer, align 16
@x = global i64 0, align 8
@y = global i64 0, align 8
@l = global i64 0, align 8
@r = global i64 0, align 8
@_Z2stB5cxx11 = global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s588960310.cpp, i8* null }]
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@x.12 = common local_unnamed_addr global i32 0
@y.13 = common local_unnamed_addr global i32 0
@x.14 = common local_unnamed_addr global i32 0
@y.15 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @__cxx_global_var_init.1() unnamed_addr #4 section ".text.startup" {
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* nonnull @_Z2stB5cxx11) #6
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_Z2stB5cxx11 to i8*), i8* nonnull @__dso_handle) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %10 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) @t)
  br label %11

11:                                               ; preds = %.backedge, %0
  %.083 = phi i64 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i64 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i64 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i64 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i64 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i64 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i64 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i64 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i64 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i64 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.0 = phi i32 [ -210007764, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -210007764, label %12
    i32 -1685943606, label %16
    i32 478999768, label %26
    i32 -897339639, label %44
    i32 533118211, label %46
    i32 -1762833746, label %48
    i32 850884122, label %52
    i32 305205009, label %56
    i32 -501975218, label %58
    i32 138768827, label %68
    i32 1168606826, label %79
    i32 -767548697, label %80
    i32 1957748167, label %81
    i32 1566954199, label %84
    i32 1845231517, label %86
    i32 128656993, label %92
    i32 412789056, label %94
    i32 -1734229702, label %98
    i32 -1697420295, label %108
    i32 -629404293, label %121
    i32 1403151811, label %123
    i32 -1110929690, label %133
    i32 -285168973, label %144
    i32 110047596, label %145
    i32 315327927, label %147
    i32 -11911680, label %148
    i32 -67293619, label %151
    i32 1788378508, label %153
    i32 1711108658, label %159
    i32 -1873083220, label %169
    i32 -1825978109, label %180
    i32 -1259196374, label %181
    i32 -534920376, label %185
    i32 365784067, label %189
    i32 -1241782763, label %191
    i32 473630339, label %201
    i32 1867101951, label %212
    i32 1666792001, label %213
    i32 -1164502579, label %214
    i32 1872605525, label %217
    i32 830831207, label %227
    i32 398966557, label %238
    i32 -927918713, label %239
    i32 544859113, label %249
    i32 1189003171, label %259
    i32 -1766490938, label %260
    i32 634532831, label %263
    i32 608429443, label %274
    i32 512347875, label %282
    i32 -1774881437, label %284
    i32 417608947, label %294
    i32 524703829, label %304
    i32 -2139716937, label %305
    i32 1183899741, label %306
    i32 -892422114, label %307
    i32 -691782819, label %310
    i32 162712903, label %320
    i32 1550640552, label %342
    i32 -1913943449, label %344
    i32 -313540977, label %354
    i32 1636753032, label %364
    i32 -1910209414, label %365
    i32 -1317521717, label %375
    i32 -502204851, label %388
    i32 1964890280, label %390
    i32 -844755550, label %392
    i32 -1198037476, label %393
    i32 394276297, label %394
    i32 -1205801504, label %404
    i32 580414215, label %414
    i32 -1683037372, label %428
    i32 1658415874, label %430
    i32 929734558, label %436
    i32 -495502509, label %446
    i32 1959755424, label %457
    i32 -1050020023, label %458
    i32 348553437, label %468
    i32 1483750045, label %479
    i32 1697735599, label %480
    i32 420411626, label %490
    i32 688411506, label %500
    i32 -624141824, label %501
    i32 1920460680, label %504
    i32 1268940806, label %509
    i32 -1636510654, label %513
    i32 1902591299, label %523
    i32 1916916983, label %537
    i32 -741247292, label %539
    i32 -38205343, label %541
    i32 1999899927, label %551
    i32 466484494, label %562
    i32 656696988, label %563
    i32 1345089941, label %564
    i32 1586842324, label %574
    i32 -1173769790, label %586
    i32 1611666088, label %587
    i32 1877429211, label %589
    i32 -135708971, label %599
    i32 -911202458, label %609
    i32 -1464314902, label %610
    i32 -309870708, label %616
    i32 -1904457027, label %618
    i32 1097051786, label %619
    i32 -697000258, label %621
    i32 817713198, label %623
    i32 1339545515, label %625
    i32 1490117315, label %627
    i32 -646679967, label %628
    i32 -1905094875, label %629
    i32 1449530155, label %641
    i32 -1049800176, label %643
    i32 -741145018, label %644
    i32 -1543352681, label %646
    i32 -1214880597, label %648
    i32 434053871, label %650
    i32 1867816281, label %651
    i32 -1185660428, label %652
    i32 2074567859, label %654
    i32 -692801617, label %656
  ]

.backedge:                                        ; preds = %11, %656, %654, %652, %651, %650, %648, %646, %644, %643, %641, %629, %628, %627, %625, %623, %621, %619, %618, %616, %610, %599, %589, %587, %586, %574, %564, %563, %562, %551, %541, %539, %537, %523, %513, %509, %504, %501, %500, %490, %480, %479, %468, %458, %457, %446, %436, %430, %428, %414, %404, %394, %393, %392, %390, %388, %375, %365, %364, %354, %344, %342, %320, %310, %307, %306, %305, %304, %294, %284, %282, %274, %263, %260, %259, %249, %239, %238, %227, %217, %214, %213, %212, %201, %191, %189, %185, %181, %180, %169, %159, %153, %151, %148, %147, %145, %144, %133, %123, %121, %108, %98, %94, %92, %86, %84, %81, %80, %79, %68, %58, %56, %52, %48, %46, %44, %26, %16, %12
  %.083.be = phi i64 [ %.083, %11 ], [ %.083, %656 ], [ %.083, %654 ], [ %.083, %652 ], [ %.083, %651 ], [ %.083, %650 ], [ %.083, %648 ], [ %.083, %646 ], [ %.083, %644 ], [ %.083, %643 ], [ %.083, %641 ], [ %.083, %629 ], [ %.083, %628 ], [ 600000000, %627 ], [ %.083, %625 ], [ %.083, %623 ], [ %.083, %621 ], [ %.083, %619 ], [ %.083, %618 ], [ %.083, %616 ], [ %.083, %610 ], [ %.083, %599 ], [ %.083, %589 ], [ %.083, %587 ], [ %.083, %586 ], [ %.083, %574 ], [ %.083, %564 ], [ %.083, %563 ], [ %.083, %562 ], [ %.083, %551 ], [ %.083, %541 ], [ %.083, %539 ], [ %.083, %537 ], [ %.083, %523 ], [ %.083, %513 ], [ %.083, %509 ], [ %.083, %504 ], [ %.083, %501 ], [ %.083, %500 ], [ %.083, %490 ], [ %.083, %480 ], [ %.083, %479 ], [ %.083, %468 ], [ %.083, %458 ], [ %.083, %457 ], [ %.083, %446 ], [ %.083, %436 ], [ %.083, %430 ], [ %.083, %428 ], [ %.083, %414 ], [ %.083, %404 ], [ %.083, %394 ], [ %.083, %393 ], [ %.083, %392 ], [ %.083, %390 ], [ %.083, %388 ], [ %.083, %375 ], [ %.083, %365 ], [ %.083, %364 ], [ %.083, %354 ], [ %.083, %344 ], [ %.083, %342 ], [ %.083, %320 ], [ %.083, %310 ], [ %.083, %307 ], [ %.083, %306 ], [ %.083, %305 ], [ %.083, %304 ], [ %.083, %294 ], [ %.083, %284 ], [ %.081, %282 ], [ %.083, %274 ], [ %.083, %263 ], [ %.083, %260 ], [ %.083, %259 ], [ 600000000, %249 ], [ %.083, %239 ], [ %.083, %238 ], [ %.083, %227 ], [ %.083, %217 ], [ %.083, %214 ], [ %.083, %213 ], [ %.083, %212 ], [ %.083, %201 ], [ %.083, %191 ], [ %.083, %189 ], [ %.083, %185 ], [ %.083, %181 ], [ %.083, %180 ], [ %.083, %169 ], [ %.083, %159 ], [ %.083, %153 ], [ %.083, %151 ], [ %.083, %148 ], [ %.083, %147 ], [ %.083, %145 ], [ %.083, %144 ], [ %.083, %133 ], [ %.083, %123 ], [ %.083, %121 ], [ %.083, %108 ], [ %.083, %98 ], [ %.083, %94 ], [ %.083, %92 ], [ %.083, %86 ], [ %.083, %84 ], [ %.083, %81 ], [ %.083, %80 ], [ %.083, %79 ], [ %.083, %68 ], [ %.083, %58 ], [ %.083, %56 ], [ %.083, %52 ], [ %.083, %48 ], [ %.083, %46 ], [ %.083, %44 ], [ %.083, %26 ], [ %.083, %16 ], [ %.083, %12 ]
  %.081.be = phi i64 [ %.081, %11 ], [ %.081, %656 ], [ %.081, %654 ], [ %.081, %652 ], [ %.081, %651 ], [ %.081, %650 ], [ %.081, %648 ], [ %.081, %646 ], [ %.081, %644 ], [ %.081, %643 ], [ %.081, %641 ], [ %.081, %629 ], [ %.081, %628 ], [ %.081, %627 ], [ %.081, %625 ], [ %.081, %623 ], [ %.081, %621 ], [ %.081, %619 ], [ %.081, %618 ], [ %.081, %616 ], [ %.081, %610 ], [ %.081, %599 ], [ %.081, %589 ], [ %.081, %587 ], [ %.081, %586 ], [ %.081, %574 ], [ %.081, %564 ], [ %.081, %563 ], [ %.081, %562 ], [ %.081, %551 ], [ %.081, %541 ], [ %.081, %539 ], [ %.081, %537 ], [ %.081, %523 ], [ %.081, %513 ], [ %.081, %509 ], [ %.081, %504 ], [ %.081, %501 ], [ %.081, %500 ], [ %.081, %490 ], [ %.081, %480 ], [ %.081, %479 ], [ %.081, %468 ], [ %.081, %458 ], [ %.081, %457 ], [ %.081, %446 ], [ %.081, %436 ], [ %.081, %430 ], [ %.081, %428 ], [ %.081, %414 ], [ %.081, %404 ], [ %.081, %394 ], [ %.081, %393 ], [ %.081, %392 ], [ %.081, %390 ], [ %.081, %388 ], [ %.081, %375 ], [ %.081, %365 ], [ %.081, %364 ], [ %.081, %354 ], [ %.081, %344 ], [ %.081, %342 ], [ %.081, %320 ], [ %.081, %310 ], [ %.081, %307 ], [ %.081, %306 ], [ %.081, %305 ], [ %.081, %304 ], [ %.081, %294 ], [ %.081, %284 ], [ %.081, %282 ], [ %.081, %274 ], [ %266, %263 ], [ %.081, %260 ], [ %.081, %259 ], [ %.081, %249 ], [ %.081, %239 ], [ %.081, %238 ], [ %.081, %227 ], [ %.081, %217 ], [ %.081, %214 ], [ %.081, %213 ], [ %.081, %212 ], [ %.081, %201 ], [ %.081, %191 ], [ %.081, %189 ], [ %.081, %185 ], [ %.081, %181 ], [ %.081, %180 ], [ %.081, %169 ], [ %.081, %159 ], [ %.081, %153 ], [ %.081, %151 ], [ %.081, %148 ], [ %.081, %147 ], [ %.081, %145 ], [ %.081, %144 ], [ %.081, %133 ], [ %.081, %123 ], [ %.081, %121 ], [ %.081, %108 ], [ %.081, %98 ], [ %.081, %94 ], [ %.081, %92 ], [ %.081, %86 ], [ %.081, %84 ], [ %.081, %81 ], [ %.081, %80 ], [ %.081, %79 ], [ %.081, %68 ], [ %.081, %58 ], [ %.081, %56 ], [ %.081, %52 ], [ %.081, %48 ], [ %.081, %46 ], [ %.081, %44 ], [ %.081, %26 ], [ %.081, %16 ], [ %.081, %12 ]
  %.079.be = phi i64 [ %.079, %11 ], [ %.079, %656 ], [ %.079, %654 ], [ %.079, %652 ], [ %.079, %651 ], [ %.079, %650 ], [ %.079, %648 ], [ %.079, %646 ], [ %.079, %644 ], [ %.079, %643 ], [ %.079, %641 ], [ %.079, %629 ], [ %.079, %628 ], [ %.079, %627 ], [ %.079, %625 ], [ %.079, %623 ], [ %.079, %621 ], [ %.079, %619 ], [ %.079, %618 ], [ %.079, %616 ], [ %.079, %610 ], [ %.079, %599 ], [ %.079, %589 ], [ %.079, %587 ], [ %.079, %586 ], [ %.079, %574 ], [ %.079, %564 ], [ %.079, %563 ], [ %.079, %562 ], [ %.079, %551 ], [ %.079, %541 ], [ %.079, %539 ], [ %.079, %537 ], [ %.079, %523 ], [ %.079, %513 ], [ %.079, %509 ], [ %.079, %504 ], [ %.079, %501 ], [ %.079, %500 ], [ %.079, %490 ], [ %.079, %480 ], [ %.079, %479 ], [ %.079, %468 ], [ %.079, %458 ], [ %.079, %457 ], [ %.079, %446 ], [ %.079, %436 ], [ %.079, %430 ], [ %.079, %428 ], [ %.079, %414 ], [ %.079, %404 ], [ %.079, %394 ], [ %.079, %393 ], [ %.079, %392 ], [ %391, %390 ], [ %.079, %388 ], [ %.079, %375 ], [ %.079, %365 ], [ %.079, %364 ], [ %.079, %354 ], [ %.079, %344 ], [ %.079, %342 ], [ %.079, %320 ], [ %.079, %310 ], [ %.079, %307 ], [ 0, %306 ], [ %.079, %305 ], [ %.079, %304 ], [ %.079, %294 ], [ %.079, %284 ], [ %.079, %282 ], [ %.079, %274 ], [ %.079, %263 ], [ %.079, %260 ], [ %.079, %259 ], [ %.079, %249 ], [ %.079, %239 ], [ %.079, %238 ], [ %.079, %227 ], [ %.079, %217 ], [ %.079, %214 ], [ %.079, %213 ], [ %.079, %212 ], [ %.079, %201 ], [ %.079, %191 ], [ %.079, %189 ], [ %.079, %185 ], [ %.079, %181 ], [ %.079, %180 ], [ %.079, %169 ], [ %.079, %159 ], [ %.079, %153 ], [ %.079, %151 ], [ %.079, %148 ], [ %.079, %147 ], [ %.079, %145 ], [ %.079, %144 ], [ %.079, %133 ], [ %.079, %123 ], [ %.079, %121 ], [ %.079, %108 ], [ %.079, %98 ], [ %.079, %94 ], [ %.079, %92 ], [ %.079, %86 ], [ %.079, %84 ], [ %.079, %81 ], [ %.079, %80 ], [ %.079, %79 ], [ %.079, %68 ], [ %.079, %58 ], [ %.079, %56 ], [ %.079, %52 ], [ %.079, %48 ], [ %.079, %46 ], [ %.079, %44 ], [ %.079, %26 ], [ %.079, %16 ], [ %.079, %12 ]
  %.077.be = phi i64 [ %.077, %11 ], [ %.077, %656 ], [ %.077, %654 ], [ %.077, %652 ], [ %.077, %651 ], [ %.077, %650 ], [ %.077, %648 ], [ %.077, %646 ], [ %.077, %644 ], [ %.077, %643 ], [ %.077, %641 ], [ %.077, %629 ], [ %.077, %628 ], [ %.077, %627 ], [ %.077, %625 ], [ %.077, %623 ], [ %.077, %621 ], [ %.077, %619 ], [ %.077, %618 ], [ %.077, %616 ], [ %.077, %610 ], [ %.077, %599 ], [ %.077, %589 ], [ %.077, %587 ], [ %.077, %586 ], [ %.077, %574 ], [ %.077, %564 ], [ %.077, %563 ], [ %.077, %562 ], [ %.077, %551 ], [ %.077, %541 ], [ %.077, %539 ], [ %.077, %537 ], [ %.077, %523 ], [ %.077, %513 ], [ %.077, %509 ], [ %.077, %504 ], [ %.077, %501 ], [ %.077, %500 ], [ %.077, %490 ], [ %.077, %480 ], [ %.077, %479 ], [ %.077, %468 ], [ %.077, %458 ], [ %.077, %457 ], [ %.077, %446 ], [ %.077, %436 ], [ %.077, %430 ], [ %.077, %428 ], [ %.077, %414 ], [ %.077, %404 ], [ %.077, %394 ], [ %.077, %393 ], [ %.075, %392 ], [ %.077, %390 ], [ %.077, %388 ], [ %.077, %375 ], [ %.077, %365 ], [ %.077, %364 ], [ %.077, %354 ], [ %.077, %344 ], [ %.077, %342 ], [ %.077, %320 ], [ %.077, %310 ], [ %.077, %307 ], [ 1000000003, %306 ], [ %.077, %305 ], [ %.077, %304 ], [ %.077, %294 ], [ %.077, %284 ], [ %.077, %282 ], [ %.077, %274 ], [ %.077, %263 ], [ %.077, %260 ], [ %.077, %259 ], [ %.077, %249 ], [ %.077, %239 ], [ %.077, %238 ], [ %.077, %227 ], [ %.077, %217 ], [ %.077, %214 ], [ %.077, %213 ], [ %.077, %212 ], [ %.077, %201 ], [ %.077, %191 ], [ %.077, %189 ], [ %.077, %185 ], [ %.077, %181 ], [ %.077, %180 ], [ %.077, %169 ], [ %.077, %159 ], [ %.077, %153 ], [ %.077, %151 ], [ %.077, %148 ], [ %.077, %147 ], [ %.077, %145 ], [ %.077, %144 ], [ %.077, %133 ], [ %.077, %123 ], [ %.077, %121 ], [ %.077, %108 ], [ %.077, %98 ], [ %.077, %94 ], [ %.077, %92 ], [ %.077, %86 ], [ %.077, %84 ], [ %.077, %81 ], [ %.077, %80 ], [ %.077, %79 ], [ %.077, %68 ], [ %.077, %58 ], [ %.077, %56 ], [ %.077, %52 ], [ %.077, %48 ], [ %.077, %46 ], [ %.077, %44 ], [ %.077, %26 ], [ %.077, %16 ], [ %.077, %12 ]
  %.075.be = phi i64 [ %.075, %11 ], [ %.075, %656 ], [ %.075, %654 ], [ %.075, %652 ], [ %.075, %651 ], [ %.075, %650 ], [ %.075, %648 ], [ %.075, %646 ], [ %.075, %644 ], [ %.075, %643 ], [ %.075, %641 ], [ %631, %629 ], [ %.075, %628 ], [ %.075, %627 ], [ %.075, %625 ], [ %.075, %623 ], [ %.075, %621 ], [ %.075, %619 ], [ %.075, %618 ], [ %.075, %616 ], [ %.075, %610 ], [ %.075, %599 ], [ %.075, %589 ], [ %.075, %587 ], [ %.075, %586 ], [ %.075, %574 ], [ %.075, %564 ], [ %.075, %563 ], [ %.075, %562 ], [ %.075, %551 ], [ %.075, %541 ], [ %.075, %539 ], [ %.075, %537 ], [ %.075, %523 ], [ %.075, %513 ], [ %.075, %509 ], [ %.075, %504 ], [ %.075, %501 ], [ %.075, %500 ], [ %.075, %490 ], [ %.075, %480 ], [ %.075, %479 ], [ %.075, %468 ], [ %.075, %458 ], [ %.075, %457 ], [ %.075, %446 ], [ %.075, %436 ], [ %.075, %430 ], [ %.075, %428 ], [ %.075, %414 ], [ %.075, %404 ], [ %.075, %394 ], [ %.075, %393 ], [ %.075, %392 ], [ %.075, %390 ], [ %.075, %388 ], [ %.075, %375 ], [ %.075, %365 ], [ %.075, %364 ], [ %.075, %354 ], [ %.075, %344 ], [ %.075, %342 ], [ %322, %320 ], [ %.075, %310 ], [ %.075, %307 ], [ %.075, %306 ], [ %.075, %305 ], [ %.075, %304 ], [ %.075, %294 ], [ %.075, %284 ], [ %.075, %282 ], [ %.075, %274 ], [ %.075, %263 ], [ %.075, %260 ], [ %.075, %259 ], [ %.075, %249 ], [ %.075, %239 ], [ %.075, %238 ], [ %.075, %227 ], [ %.075, %217 ], [ %.075, %214 ], [ %.075, %213 ], [ %.075, %212 ], [ %.075, %201 ], [ %.075, %191 ], [ %.075, %189 ], [ %.075, %185 ], [ %.075, %181 ], [ %.075, %180 ], [ %.075, %169 ], [ %.075, %159 ], [ %.075, %153 ], [ %.075, %151 ], [ %.075, %148 ], [ %.075, %147 ], [ %.075, %145 ], [ %.075, %144 ], [ %.075, %133 ], [ %.075, %123 ], [ %.075, %121 ], [ %.075, %108 ], [ %.075, %98 ], [ %.075, %94 ], [ %.075, %92 ], [ %.075, %86 ], [ %.075, %84 ], [ %.075, %81 ], [ %.075, %80 ], [ %.075, %79 ], [ %.075, %68 ], [ %.075, %58 ], [ %.075, %56 ], [ %.075, %52 ], [ %.075, %48 ], [ %.075, %46 ], [ %.075, %44 ], [ %.075, %26 ], [ %.075, %16 ], [ %.075, %12 ]
  %.073.be = phi i64 [ %.073, %11 ], [ %.073, %656 ], [ %.073, %654 ], [ %.073, %652 ], [ %.073, %651 ], [ %.073, %650 ], [ %.073, %648 ], [ %.073, %646 ], [ %.073, %644 ], [ %.073, %643 ], [ %.073, %641 ], [ %638, %629 ], [ %.073, %628 ], [ %.073, %627 ], [ %.073, %625 ], [ %.073, %623 ], [ %.073, %621 ], [ %.073, %619 ], [ %.073, %618 ], [ %.073, %616 ], [ %.073, %610 ], [ %.073, %599 ], [ %.073, %589 ], [ %.073, %587 ], [ %.073, %586 ], [ %.073, %574 ], [ %.073, %564 ], [ %.073, %563 ], [ %.073, %562 ], [ %.073, %551 ], [ %.073, %541 ], [ %.073, %539 ], [ %.073, %537 ], [ %.073, %523 ], [ %.073, %513 ], [ %.073, %509 ], [ %.073, %504 ], [ %.073, %501 ], [ %.073, %500 ], [ %.073, %490 ], [ %.073, %480 ], [ %.073, %479 ], [ %.073, %468 ], [ %.073, %458 ], [ %.073, %457 ], [ %.073, %446 ], [ %.073, %436 ], [ %.073, %430 ], [ %.073, %428 ], [ %.073, %414 ], [ %.073, %404 ], [ %.073, %394 ], [ %.073, %393 ], [ %.073, %392 ], [ %.073, %390 ], [ %.073, %388 ], [ %.073, %375 ], [ %.073, %365 ], [ %.073, %364 ], [ %.073, %354 ], [ %.073, %344 ], [ %.073, %342 ], [ %329, %320 ], [ %.073, %310 ], [ %.073, %307 ], [ %.073, %306 ], [ %.073, %305 ], [ %.073, %304 ], [ %.073, %294 ], [ %.073, %284 ], [ %.073, %282 ], [ %.073, %274 ], [ %.073, %263 ], [ %.073, %260 ], [ %.073, %259 ], [ %.073, %249 ], [ %.073, %239 ], [ %.073, %238 ], [ %.073, %227 ], [ %.073, %217 ], [ %.073, %214 ], [ %.073, %213 ], [ %.073, %212 ], [ %.073, %201 ], [ %.073, %191 ], [ %.073, %189 ], [ %.073, %185 ], [ %.073, %181 ], [ %.073, %180 ], [ %.073, %169 ], [ %.073, %159 ], [ %.073, %153 ], [ %.073, %151 ], [ %.073, %148 ], [ %.073, %147 ], [ %.073, %145 ], [ %.073, %144 ], [ %.073, %133 ], [ %.073, %123 ], [ %.073, %121 ], [ %.073, %108 ], [ %.073, %98 ], [ %.073, %94 ], [ %.073, %92 ], [ %.073, %86 ], [ %.073, %84 ], [ %.073, %81 ], [ %.073, %80 ], [ %.073, %79 ], [ %.073, %68 ], [ %.073, %58 ], [ %.073, %56 ], [ %.073, %52 ], [ %.073, %48 ], [ %.073, %46 ], [ %.073, %44 ], [ %.073, %26 ], [ %.073, %16 ], [ %.073, %12 ]
  %.071.be = phi i64 [ %.071, %11 ], [ %.071, %656 ], [ %.071, %654 ], [ %.071, %652 ], [ %.071, %651 ], [ %.071, %650 ], [ %.071, %648 ], [ %.071, %646 ], [ %.071, %644 ], [ %.071, %643 ], [ %642, %641 ], [ %640, %629 ], [ %.071, %628 ], [ %.071, %627 ], [ %.071, %625 ], [ %.071, %623 ], [ %.071, %621 ], [ %.071, %619 ], [ %.071, %618 ], [ %.071, %616 ], [ %.071, %610 ], [ %.071, %599 ], [ %.071, %589 ], [ %.071, %587 ], [ %.071, %586 ], [ %.071, %574 ], [ %.071, %564 ], [ %.071, %563 ], [ %.071, %562 ], [ %.071, %551 ], [ %.071, %541 ], [ %.071, %539 ], [ %.071, %537 ], [ %.071, %523 ], [ %.071, %513 ], [ %.071, %509 ], [ %.071, %504 ], [ %.071, %501 ], [ %.071, %500 ], [ %.071, %490 ], [ %.071, %480 ], [ %.071, %479 ], [ %.071, %468 ], [ %.071, %458 ], [ %.071, %457 ], [ %.071, %446 ], [ %.071, %436 ], [ %.071, %430 ], [ %.071, %428 ], [ %.071, %414 ], [ %.071, %404 ], [ %.071, %394 ], [ %.071, %393 ], [ %.071, %392 ], [ %.071, %390 ], [ %.071, %388 ], [ %.071, %375 ], [ %.071, %365 ], [ %.071, %364 ], [ %.neg93, %354 ], [ %.071, %344 ], [ %.071, %342 ], [ %331, %320 ], [ %.071, %310 ], [ %.071, %307 ], [ %.071, %306 ], [ %.071, %305 ], [ %.071, %304 ], [ %.071, %294 ], [ %.071, %284 ], [ %.071, %282 ], [ %.071, %274 ], [ %.071, %263 ], [ %.071, %260 ], [ %.071, %259 ], [ %.071, %249 ], [ %.071, %239 ], [ %.071, %238 ], [ %.071, %227 ], [ %.071, %217 ], [ %.071, %214 ], [ %.071, %213 ], [ %.071, %212 ], [ %.071, %201 ], [ %.071, %191 ], [ %.071, %189 ], [ %.071, %185 ], [ %.071, %181 ], [ %.071, %180 ], [ %.071, %169 ], [ %.071, %159 ], [ %.071, %153 ], [ %.071, %151 ], [ %.071, %148 ], [ %.071, %147 ], [ %.071, %145 ], [ %.071, %144 ], [ %.071, %133 ], [ %.071, %123 ], [ %.071, %121 ], [ %.071, %108 ], [ %.071, %98 ], [ %.071, %94 ], [ %.071, %92 ], [ %.071, %86 ], [ %.071, %84 ], [ %.071, %81 ], [ %.071, %80 ], [ %.071, %79 ], [ %.071, %68 ], [ %.071, %58 ], [ %.071, %56 ], [ %.071, %52 ], [ %.071, %48 ], [ %.071, %46 ], [ %.071, %44 ], [ %.071, %26 ], [ %.071, %16 ], [ %.071, %12 ]
  %.069.be = phi i64 [ %.069, %11 ], [ %.069, %656 ], [ %.069, %654 ], [ %.069, %652 ], [ %.069, %651 ], [ %.069, %650 ], [ %.069, %648 ], [ %.069, %646 ], [ %.069, %644 ], [ %.069, %643 ], [ %.069, %641 ], [ %.069, %629 ], [ %.069, %628 ], [ 600000000, %627 ], [ %.069, %625 ], [ %.069, %623 ], [ %.069, %621 ], [ %.069, %619 ], [ %.069, %618 ], [ %.069, %616 ], [ %.069, %610 ], [ %.069, %599 ], [ %.069, %589 ], [ %.069, %587 ], [ %.069, %586 ], [ %.069, %574 ], [ %.069, %564 ], [ %.069, %563 ], [ %.069, %562 ], [ %.069, %551 ], [ %.069, %541 ], [ %.069, %539 ], [ %.069, %537 ], [ %.069, %523 ], [ %.069, %513 ], [ %.069, %509 ], [ %.069, %504 ], [ %.069, %501 ], [ %.069, %500 ], [ %.069, %490 ], [ %.069, %480 ], [ %.069, %479 ], [ %.069, %468 ], [ %.069, %458 ], [ %.069, %457 ], [ %.069, %446 ], [ %.069, %436 ], [ %.069, %430 ], [ %.069, %428 ], [ %.069, %414 ], [ %.069, %404 ], [ %.069, %394 ], [ %.069, %393 ], [ %.069, %392 ], [ %.069, %390 ], [ %.069, %388 ], [ %.069, %375 ], [ %.069, %365 ], [ %.069, %364 ], [ %.069, %354 ], [ %.069, %344 ], [ %.069, %342 ], [ %.069, %320 ], [ %.069, %310 ], [ %.069, %307 ], [ %.069, %306 ], [ %.069, %305 ], [ %.069, %304 ], [ %.069, %294 ], [ %.069, %284 ], [ %283, %282 ], [ %.069, %274 ], [ %.069, %263 ], [ %.069, %260 ], [ %.069, %259 ], [ 600000000, %249 ], [ %.069, %239 ], [ %.069, %238 ], [ %.069, %227 ], [ %.069, %217 ], [ %.069, %214 ], [ %.069, %213 ], [ %.069, %212 ], [ %.069, %201 ], [ %.069, %191 ], [ %.069, %189 ], [ %.069, %185 ], [ %.069, %181 ], [ %.069, %180 ], [ %.069, %169 ], [ %.069, %159 ], [ %.069, %153 ], [ %.069, %151 ], [ %.069, %148 ], [ %.069, %147 ], [ %.069, %145 ], [ %.069, %144 ], [ %.069, %133 ], [ %.069, %123 ], [ %.069, %121 ], [ %.069, %108 ], [ %.069, %98 ], [ %.069, %94 ], [ %.069, %92 ], [ %.069, %86 ], [ %.069, %84 ], [ %.069, %81 ], [ %.069, %80 ], [ %.069, %79 ], [ %.069, %68 ], [ %.069, %58 ], [ %.069, %56 ], [ %.069, %52 ], [ %.069, %48 ], [ %.069, %46 ], [ %.069, %44 ], [ %.069, %26 ], [ %.069, %16 ], [ %.069, %12 ]
  %.067.be = phi i64 [ %.067, %11 ], [ %.067, %656 ], [ %.067, %654 ], [ %.067, %652 ], [ %.067, %651 ], [ %.067, %650 ], [ %.067, %648 ], [ %.067, %646 ], [ %.067, %644 ], [ %.067, %643 ], [ %.067, %641 ], [ %.067, %629 ], [ %.081, %628 ], [ 0, %627 ], [ %.067, %625 ], [ %.067, %623 ], [ %.067, %621 ], [ %.067, %619 ], [ %.067, %618 ], [ %.067, %616 ], [ %.067, %610 ], [ %.067, %599 ], [ %.067, %589 ], [ %.067, %587 ], [ %.067, %586 ], [ %.067, %574 ], [ %.067, %564 ], [ %.067, %563 ], [ %.067, %562 ], [ %.067, %551 ], [ %.067, %541 ], [ %.067, %539 ], [ %.067, %537 ], [ %.067, %523 ], [ %.067, %513 ], [ %.067, %509 ], [ %.067, %504 ], [ %.067, %501 ], [ %.067, %500 ], [ %.067, %490 ], [ %.067, %480 ], [ %.067, %479 ], [ %.067, %468 ], [ %.067, %458 ], [ %.067, %457 ], [ %.067, %446 ], [ %.067, %436 ], [ %.067, %430 ], [ %.067, %428 ], [ %.067, %414 ], [ %.067, %404 ], [ %.067, %394 ], [ %.067, %393 ], [ %.067, %392 ], [ %.067, %390 ], [ %.067, %388 ], [ %.067, %375 ], [ %.067, %365 ], [ %.067, %364 ], [ %.067, %354 ], [ %.067, %344 ], [ %.067, %342 ], [ %.067, %320 ], [ %.067, %310 ], [ %.067, %307 ], [ %.067, %306 ], [ %.067, %305 ], [ %.067, %304 ], [ %.081, %294 ], [ %.067, %284 ], [ %.067, %282 ], [ %.067, %274 ], [ %.067, %263 ], [ %.067, %260 ], [ %.067, %259 ], [ 0, %249 ], [ %.067, %239 ], [ %.067, %238 ], [ %.067, %227 ], [ %.067, %217 ], [ %.067, %214 ], [ %.067, %213 ], [ %.067, %212 ], [ %.067, %201 ], [ %.067, %191 ], [ %.067, %189 ], [ %.067, %185 ], [ %.067, %181 ], [ %.067, %180 ], [ %.067, %169 ], [ %.067, %159 ], [ %.067, %153 ], [ %.067, %151 ], [ %.067, %148 ], [ %.067, %147 ], [ %.067, %145 ], [ %.067, %144 ], [ %.067, %133 ], [ %.067, %123 ], [ %.067, %121 ], [ %.067, %108 ], [ %.067, %98 ], [ %.067, %94 ], [ %.067, %92 ], [ %.067, %86 ], [ %.067, %84 ], [ %.067, %81 ], [ %.067, %80 ], [ %.067, %79 ], [ %.067, %68 ], [ %.067, %58 ], [ %.067, %56 ], [ %.067, %52 ], [ %.067, %48 ], [ %.067, %46 ], [ %.067, %44 ], [ %.067, %26 ], [ %.067, %16 ], [ %.067, %12 ]
  %.065.be = phi i64 [ %.065, %11 ], [ %.065, %656 ], [ %.065, %654 ], [ %.065, %652 ], [ %.065, %651 ], [ %.065, %650 ], [ %.065, %648 ], [ %.065, %646 ], [ %.065, %644 ], [ %.065, %643 ], [ %.065, %641 ], [ %.065, %629 ], [ %.065, %628 ], [ %.065, %627 ], [ %.065, %625 ], [ %.065, %623 ], [ %.065, %621 ], [ %.065, %619 ], [ %.065, %618 ], [ %.065, %616 ], [ %.065, %610 ], [ %.065, %599 ], [ %.065, %589 ], [ %.065, %587 ], [ %.065, %586 ], [ %.065, %574 ], [ %.065, %564 ], [ %.065, %563 ], [ %.065, %562 ], [ %.065, %551 ], [ %.065, %541 ], [ %.065, %539 ], [ %.065, %537 ], [ %.065, %523 ], [ %.065, %513 ], [ %.065, %509 ], [ %.065, %504 ], [ %.065, %501 ], [ %.065, %500 ], [ %.065, %490 ], [ %.065, %480 ], [ %.065, %479 ], [ %.065, %468 ], [ %.065, %458 ], [ %.065, %457 ], [ %.065, %446 ], [ %.065, %436 ], [ %.065, %430 ], [ %.065, %428 ], [ %.065, %414 ], [ %.065, %404 ], [ %402, %394 ], [ %.065, %393 ], [ %.065, %392 ], [ %.065, %390 ], [ %.065, %388 ], [ %.065, %375 ], [ %.065, %365 ], [ %.065, %364 ], [ %.065, %354 ], [ %.065, %344 ], [ %.065, %342 ], [ %.065, %320 ], [ %.065, %310 ], [ %.065, %307 ], [ %.065, %306 ], [ %.065, %305 ], [ %.065, %304 ], [ %.065, %294 ], [ %.065, %284 ], [ %.065, %282 ], [ %.065, %274 ], [ %.065, %263 ], [ %.065, %260 ], [ %.065, %259 ], [ %.065, %249 ], [ %.065, %239 ], [ %.065, %238 ], [ %.065, %227 ], [ %.065, %217 ], [ %.065, %214 ], [ %.065, %213 ], [ %.065, %212 ], [ %.065, %201 ], [ %.065, %191 ], [ %.065, %189 ], [ %.065, %185 ], [ %.065, %181 ], [ %.065, %180 ], [ %.065, %169 ], [ %.065, %159 ], [ %.065, %153 ], [ %.065, %151 ], [ %.065, %148 ], [ %.065, %147 ], [ %.065, %145 ], [ %.065, %144 ], [ %.065, %133 ], [ %.065, %123 ], [ %.065, %121 ], [ %.065, %108 ], [ %.065, %98 ], [ %.065, %94 ], [ %.065, %92 ], [ %.065, %86 ], [ %.065, %84 ], [ %.065, %81 ], [ %.065, %80 ], [ %.065, %79 ], [ %.065, %68 ], [ %.065, %58 ], [ %.065, %56 ], [ %.065, %52 ], [ %.065, %48 ], [ %.065, %46 ], [ %.065, %44 ], [ %.065, %26 ], [ %.065, %16 ], [ %.065, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ -135708971, %656 ], [ 1586842324, %654 ], [ 1999899927, %652 ], [ 1902591299, %651 ], [ 420411626, %650 ], [ 348553437, %648 ], [ -495502509, %646 ], [ 580414215, %644 ], [ -1317521717, %643 ], [ -313540977, %641 ], [ 162712903, %629 ], [ 417608947, %628 ], [ 544859113, %627 ], [ 830831207, %625 ], [ 473630339, %623 ], [ -1873083220, %621 ], [ -1110929690, %619 ], [ -1697420295, %618 ], [ 138768827, %616 ], [ 478999768, %610 ], [ %608, %599 ], [ %598, %589 ], [ -210007764, %587 ], [ 1268940806, %586 ], [ %585, %574 ], [ %573, %564 ], [ 1345089941, %563 ], [ 656696988, %562 ], [ %561, %551 ], [ %550, %541 ], [ 656696988, %539 ], [ %538, %537 ], [ %536, %523 ], [ %522, %513 ], [ %512, %509 ], [ 1268940806, %504 ], [ -1205801504, %501 ], [ -624141824, %500 ], [ %499, %490 ], [ %489, %480 ], [ 1697735599, %479 ], [ %478, %468 ], [ %467, %458 ], [ 1697735599, %457 ], [ %456, %446 ], [ %445, %436 ], [ %435, %430 ], [ %429, %428 ], [ %427, %414 ], [ %413, %404 ], [ -1205801504, %394 ], [ -892422114, %393 ], [ -1198037476, %392 ], [ -1198037476, %390 ], [ %389, %388 ], [ %387, %375 ], [ %374, %365 ], [ -1910209414, %364 ], [ %363, %354 ], [ %353, %344 ], [ %343, %342 ], [ %341, %320 ], [ %319, %310 ], [ %309, %307 ], [ -892422114, %306 ], [ -1766490938, %305 ], [ -2139716937, %304 ], [ %303, %294 ], [ %293, %284 ], [ -2139716937, %282 ], [ %281, %274 ], [ %273, %263 ], [ %262, %260 ], [ -1766490938, %259 ], [ %258, %249 ], [ %248, %239 ], [ -210007764, %238 ], [ %237, %227 ], [ %226, %217 ], [ -1259196374, %214 ], [ -1164502579, %213 ], [ 1666792001, %212 ], [ %211, %201 ], [ %200, %191 ], [ 1666792001, %189 ], [ %188, %185 ], [ %184, %181 ], [ -1259196374, %180 ], [ %179, %169 ], [ %168, %159 ], [ %158, %153 ], [ -210007764, %151 ], [ 412789056, %148 ], [ -11911680, %147 ], [ 315327927, %145 ], [ 315327927, %144 ], [ %143, %133 ], [ %132, %123 ], [ %122, %121 ], [ %120, %108 ], [ %107, %98 ], [ %97, %94 ], [ 412789056, %92 ], [ %91, %86 ], [ -210007764, %84 ], [ -1762833746, %81 ], [ 1957748167, %80 ], [ -767548697, %79 ], [ %78, %68 ], [ %67, %58 ], [ -767548697, %56 ], [ %55, %52 ], [ %51, %48 ], [ -1762833746, %46 ], [ %45, %44 ], [ %43, %26 ], [ %25, %16 ], [ %15, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = load i64, i64* @t, align 8
  %14 = add i64 %13, -1
  store i64 %14, i64* @t, align 8
  %.not104 = icmp eq i64 %13, 0
  %15 = select i1 %.not104, i32 1877429211, i32 -1685943606
  br label %.backedge

16:                                               ; preds = %11
  %17 = load i32, i32* @x.8, align 4
  %18 = load i32, i32* @y.9, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 478999768, i32 -1464314902
  br label %.backedge

26:                                               ; preds = %11
  %27 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) @x)
  %28 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %27, i64* nonnull dereferenceable(8) @y)
  %29 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %28, i64* nonnull dereferenceable(8) @l)
  %30 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %29, i64* nonnull dereferenceable(8) @r)
  %31 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull @_Z2stB5cxx11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0))
  %32 = load i64, i64* @x, align 8
  %33 = load i64, i64* @y, align 8
  %34 = icmp eq i64 %32, %33
  store i1 %34, i1* %6, align 1
  %35 = load i32, i32* @x.8, align 4
  %36 = load i32, i32* @y.9, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -897339639, i32 -1464314902
  br label %.backedge

44:                                               ; preds = %11
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %45 = select i1 %.0..0..0., i32 533118211, i32 1845231517
  br label %.backedge

46:                                               ; preds = %11
  %47 = load i64, i64* @l, align 8
  store i64 %47, i64* @i, align 8
  br label %.backedge

48:                                               ; preds = %11
  %49 = load i64, i64* @i, align 8
  %50 = load i64, i64* @r, align 8
  %.not103 = icmp sgt i64 %49, %50
  %51 = select i1 %.not103, i32 1566954199, i32 850884122
  br label %.backedge

52:                                               ; preds = %11
  %53 = load i64, i64* @i, align 8
  %54 = and i64 %53, 1
  %.not102 = icmp eq i64 %54, 0
  %55 = select i1 %.not102, i32 -501975218, i32 305205009
  br label %.backedge

56:                                               ; preds = %11
  %57 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

58:                                               ; preds = %11
  %59 = load i32, i32* @x.8, align 4
  %60 = load i32, i32* @y.9, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 138768827, i32 -309870708
  br label %.backedge

68:                                               ; preds = %11
  %69 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %70 = load i32, i32* @x.8, align 4
  %71 = load i32, i32* @y.9, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 1168606826, i32 -309870708
  br label %.backedge

79:                                               ; preds = %11
  br label %.backedge

80:                                               ; preds = %11
  br label %.backedge

81:                                               ; preds = %11
  %82 = load i64, i64* @i, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* @i, align 8
  br label %.backedge

84:                                               ; preds = %11
  %85 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

86:                                               ; preds = %11
  %87 = load i64, i64* @x, align 8
  %88 = load i64, i64* @y, align 8
  %89 = add i64 %88, 1
  %90 = icmp eq i64 %87, %89
  %91 = select i1 %90, i32 128656993, i32 1788378508
  br label %.backedge

92:                                               ; preds = %11
  %93 = load i64, i64* @l, align 8
  store i64 %93, i64* @i, align 8
  br label %.backedge

94:                                               ; preds = %11
  %95 = load i64, i64* @i, align 8
  %96 = load i64, i64* @r, align 8
  %.not100 = icmp sgt i64 %95, %96
  %97 = select i1 %.not100, i32 -67293619, i32 -1734229702
  br label %.backedge

98:                                               ; preds = %11
  %99 = load i32, i32* @x.8, align 4
  %100 = load i32, i32* @y.9, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 -1697420295, i32 -1904457027
  br label %.backedge

108:                                              ; preds = %11
  %109 = load i64, i64* @i, align 8
  %110 = and i64 %109, 1
  %111 = icmp ne i64 %110, 0
  store i1 %111, i1* %5, align 1
  %112 = load i32, i32* @x.8, align 4
  %113 = load i32, i32* @y.9, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 -629404293, i32 -1904457027
  br label %.backedge

121:                                              ; preds = %11
  %.0..0..0.60 = load volatile i1, i1* %5, align 1
  %122 = select i1 %.0..0..0.60, i32 1403151811, i32 110047596
  br label %.backedge

123:                                              ; preds = %11
  %124 = load i32, i32* @x.8, align 4
  %125 = load i32, i32* @y.9, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 -1110929690, i32 1097051786
  br label %.backedge

133:                                              ; preds = %11
  %134 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %135 = load i32, i32* @x.8, align 4
  %136 = load i32, i32* @y.9, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 -285168973, i32 1097051786
  br label %.backedge

144:                                              ; preds = %11
  br label %.backedge

145:                                              ; preds = %11
  %146 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

147:                                              ; preds = %11
  br label %.backedge

148:                                              ; preds = %11
  %149 = load i64, i64* @i, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* @i, align 8
  br label %.backedge

151:                                              ; preds = %11
  %152 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

153:                                              ; preds = %11
  %154 = load i64, i64* @x, align 8
  %155 = load i64, i64* @y, align 8
  %156 = add i64 %155, -1
  %157 = icmp eq i64 %154, %156
  %158 = select i1 %157, i32 1711108658, i32 -927918713
  br label %.backedge

159:                                              ; preds = %11
  %160 = load i32, i32* @x.8, align 4
  %161 = load i32, i32* @y.9, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -1873083220, i32 -697000258
  br label %.backedge

169:                                              ; preds = %11
  %170 = load i64, i64* @l, align 8
  store i64 %170, i64* @i, align 8
  %171 = load i32, i32* @x.8, align 4
  %172 = load i32, i32* @y.9, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 -1825978109, i32 -697000258
  br label %.backedge

180:                                              ; preds = %11
  br label %.backedge

181:                                              ; preds = %11
  %182 = load i64, i64* @i, align 8
  %183 = load i64, i64* @r, align 8
  %.not98 = icmp sgt i64 %182, %183
  %184 = select i1 %.not98, i32 1872605525, i32 -534920376
  br label %.backedge

185:                                              ; preds = %11
  %186 = load i64, i64* @i, align 8
  %187 = and i64 %186, 1
  %.not97 = icmp eq i64 %187, 0
  %188 = select i1 %.not97, i32 -1241782763, i32 365784067
  br label %.backedge

189:                                              ; preds = %11
  %190 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

191:                                              ; preds = %11
  %192 = load i32, i32* @x.8, align 4
  %193 = load i32, i32* @y.9, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 473630339, i32 817713198
  br label %.backedge

201:                                              ; preds = %11
  %202 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %203 = load i32, i32* @x.8, align 4
  %204 = load i32, i32* @y.9, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 1867101951, i32 817713198
  br label %.backedge

212:                                              ; preds = %11
  br label %.backedge

213:                                              ; preds = %11
  br label %.backedge

214:                                              ; preds = %11
  %215 = load i64, i64* @i, align 8
  %216 = add i64 %215, 1
  store i64 %216, i64* @i, align 8
  br label %.backedge

217:                                              ; preds = %11
  %218 = load i32, i32* @x.8, align 4
  %219 = load i32, i32* @y.9, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 830831207, i32 1339545515
  br label %.backedge

227:                                              ; preds = %11
  %228 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %229 = load i32, i32* @x.8, align 4
  %230 = load i32, i32* @y.9, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 398966557, i32 1339545515
  br label %.backedge

238:                                              ; preds = %11
  br label %.backedge

239:                                              ; preds = %11
  %240 = load i32, i32* @x.8, align 4
  %241 = load i32, i32* @y.9, align 4
  %242 = add i32 %240, -1
  %243 = mul i32 %242, %240
  %244 = and i32 %243, 1
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %246, %245
  %248 = select i1 %247, i32 544859113, i32 1490117315
  br label %.backedge

249:                                              ; preds = %11
  %250 = load i32, i32* @x.8, align 4
  %251 = load i32, i32* @y.9, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 1189003171, i32 1490117315
  br label %.backedge

259:                                              ; preds = %11
  br label %.backedge

260:                                              ; preds = %11
  %261 = icmp slt i64 %.067, %.069
  %262 = select i1 %261, i32 634532831, i32 1183899741
  br label %.backedge

263:                                              ; preds = %11
  %264 = add i64 %.069, 1
  %265 = add i64 %264, %.067
  %266 = sdiv i64 %265, 2
  %267 = load i64, i64* @y, align 8
  %268 = add nsw i64 %266, -1
  %269 = add i64 %268, %267
  %270 = sdiv i64 %269, %266
  %271 = add i64 %270, -1
  %272 = load i64, i64* @x, align 8
  %.not95 = icmp sgt i64 %271, %272
  %273 = select i1 %.not95, i32 -1774881437, i32 608429443
  br label %.backedge

274:                                              ; preds = %11
  %275 = load i64, i64* @x, align 8
  %276 = add i64 %.081, -1
  %277 = add i64 %276, %275
  %278 = sdiv i64 %277, %.081
  %279 = add i64 %278, -1
  %280 = load i64, i64* @y, align 8
  %.not94 = icmp sgt i64 %279, %280
  %281 = select i1 %.not94, i32 -1774881437, i32 512347875
  br label %.backedge

282:                                              ; preds = %11
  %283 = add i64 %.081, -1
  br label %.backedge

284:                                              ; preds = %11
  %285 = load i32, i32* @x.8, align 4
  %286 = load i32, i32* @y.9, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 417608947, i32 -646679967
  br label %.backedge

294:                                              ; preds = %11
  %295 = load i32, i32* @x.8, align 4
  %296 = load i32, i32* @y.9, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 524703829, i32 -646679967
  br label %.backedge

304:                                              ; preds = %11
  br label %.backedge

305:                                              ; preds = %11
  br label %.backedge

306:                                              ; preds = %11
  store i64 0, i64* %7, align 8
  br label %.backedge

307:                                              ; preds = %11
  %308 = icmp slt i64 %.079, %.077
  %309 = select i1 %308, i32 -691782819, i32 394276297
  br label %.backedge

310:                                              ; preds = %11
  %311 = load i32, i32* @x.8, align 4
  %312 = load i32, i32* @y.9, align 4
  %313 = add i32 %311, -1
  %314 = mul i32 %313, %311
  %315 = and i32 %314, 1
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %317, %316
  %319 = select i1 %318, i32 162712903, i32 -1905094875
  br label %.backedge

320:                                              ; preds = %11
  %321 = add i64 %.077, %.079
  %322 = sdiv i64 %321, 2
  %323 = load i64, i64* @x, align 8
  %324 = add i64 %.083, 1
  %325 = sdiv i64 %322, %324
  %326 = mul nsw i64 %325, %.083
  %327 = srem i64 %322, %324
  %328 = add i64 %327, %326
  %329 = sub i64 %323, %328
  %330 = load i64, i64* @y, align 8
  %331 = sub i64 %330, %325
  %332 = icmp eq i64 %327, 0
  store i1 %332, i1* %4, align 1
  %333 = load i32, i32* @x.8, align 4
  %334 = load i32, i32* @y.9, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 1550640552, i32 -1905094875
  br label %.backedge

342:                                              ; preds = %11
  %.0..0..0.61 = load volatile i1, i1* %4, align 1
  %343 = select i1 %.0..0..0.61, i32 -1913943449, i32 -1910209414
  br label %.backedge

344:                                              ; preds = %11
  %345 = load i32, i32* @x.8, align 4
  %346 = load i32, i32* @y.9, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 -313540977, i32 1449530155
  br label %.backedge

354:                                              ; preds = %11
  %.neg93 = add i64 %.071, 1
  %355 = load i32, i32* @x.8, align 4
  %356 = load i32, i32* @y.9, align 4
  %357 = add i32 %355, -1
  %358 = mul i32 %357, %355
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %361, %360
  %363 = select i1 %362, i32 1636753032, i32 1449530155
  br label %.backedge

364:                                              ; preds = %11
  br label %.backedge

365:                                              ; preds = %11
  %366 = load i32, i32* @x.8, align 4
  %367 = load i32, i32* @y.9, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 -1317521717, i32 -1049800176
  br label %.backedge

375:                                              ; preds = %11
  %376 = add i64 %.073, 1
  %377 = mul nsw i64 %376, %.083
  %378 = icmp sle i64 %.071, %377
  store i1 %378, i1* %3, align 1
  %379 = load i32, i32* @x.8, align 4
  %380 = load i32, i32* @y.9, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 -502204851, i32 -1049800176
  br label %.backedge

388:                                              ; preds = %11
  %.0..0..0.62 = load volatile i1, i1* %3, align 1
  %389 = select i1 %.0..0..0.62, i32 1964890280, i32 -844755550
  br label %.backedge

390:                                              ; preds = %11
  %391 = add i64 %.075, 1
  store i64 %.075, i64* %7, align 8
  br label %.backedge

392:                                              ; preds = %11
  br label %.backedge

393:                                              ; preds = %11
  br label %.backedge

394:                                              ; preds = %11
  %395 = load i64, i64* @x, align 8
  %396 = load i64, i64* %7, align 8
  %.neg86 = add i64 %.083, 1
  %397 = sdiv i64 %396, %.neg86
  %398 = mul nsw i64 %397, %.083
  %399 = srem i64 %396, %.neg86
  %.neg87.neg.neg = sub i64 %399, %395
  %.neg88.neg.neg = add i64 %.neg87.neg.neg, %398
  %400 = load i64, i64* @y, align 8
  %.neg89.neg.neg = mul i64 %.neg88.neg.neg, %.083
  %401 = add i64 %396, 1
  %.neg91.neg = sub i64 %401, %397
  %.neg92.neg = add i64 %.neg91.neg, %400
  %402 = add i64 %.neg92.neg, %.neg89.neg.neg
  %403 = load i64, i64* @l, align 8
  store i64 %403, i64* @i, align 8
  br label %.backedge

404:                                              ; preds = %11
  %405 = load i32, i32* @x.8, align 4
  %406 = load i32, i32* @y.9, align 4
  %407 = add i32 %405, -1
  %408 = mul i32 %407, %405
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %411, %410
  %413 = select i1 %412, i32 580414215, i32 -741145018
  br label %.backedge

414:                                              ; preds = %11
  %415 = load i64, i64* @i, align 8
  %416 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) @r, i64* nonnull dereferenceable(8) %7)
  %417 = load i64, i64* %416, align 8
  %418 = icmp sle i64 %415, %417
  store i1 %418, i1* %2, align 1
  %419 = load i32, i32* @x.8, align 4
  %420 = load i32, i32* @y.9, align 4
  %421 = add i32 %419, -1
  %422 = mul i32 %421, %419
  %423 = and i32 %422, 1
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %425, %424
  %427 = select i1 %426, i32 -1683037372, i32 -741145018
  br label %.backedge

428:                                              ; preds = %11
  %.0..0..0.63 = load volatile i1, i1* %2, align 1
  %429 = select i1 %.0..0..0.63, i32 1658415874, i32 1920460680
  br label %.backedge

430:                                              ; preds = %11
  %431 = load i64, i64* @i, align 8
  %432 = add i64 %.083, 1
  %433 = srem i64 %431, %432
  %434 = icmp eq i64 %433, 0
  %435 = select i1 %434, i32 929734558, i32 -1050020023
  br label %.backedge

436:                                              ; preds = %11
  %437 = load i32, i32* @x.8, align 4
  %438 = load i32, i32* @y.9, align 4
  %439 = add i32 %437, -1
  %440 = mul i32 %439, %437
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %443, %442
  %445 = select i1 %444, i32 -495502509, i32 -1543352681
  br label %.backedge

446:                                              ; preds = %11
  %447 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %448 = load i32, i32* @x.8, align 4
  %449 = load i32, i32* @y.9, align 4
  %450 = add i32 %448, -1
  %451 = mul i32 %450, %448
  %452 = and i32 %451, 1
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %454, %453
  %456 = select i1 %455, i32 1959755424, i32 -1543352681
  br label %.backedge

457:                                              ; preds = %11
  br label %.backedge

458:                                              ; preds = %11
  %459 = load i32, i32* @x.8, align 4
  %460 = load i32, i32* @y.9, align 4
  %461 = add i32 %459, -1
  %462 = mul i32 %461, %459
  %463 = and i32 %462, 1
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %465, %464
  %467 = select i1 %466, i32 348553437, i32 -1214880597
  br label %.backedge

468:                                              ; preds = %11
  %469 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %470 = load i32, i32* @x.8, align 4
  %471 = load i32, i32* @y.9, align 4
  %472 = add i32 %470, -1
  %473 = mul i32 %472, %470
  %474 = and i32 %473, 1
  %475 = icmp eq i32 %474, 0
  %476 = icmp slt i32 %471, 10
  %477 = or i1 %476, %475
  %478 = select i1 %477, i32 1483750045, i32 -1214880597
  br label %.backedge

479:                                              ; preds = %11
  br label %.backedge

480:                                              ; preds = %11
  %481 = load i32, i32* @x.8, align 4
  %482 = load i32, i32* @y.9, align 4
  %483 = add i32 %481, -1
  %484 = mul i32 %483, %481
  %485 = and i32 %484, 1
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %487, %486
  %489 = select i1 %488, i32 420411626, i32 434053871
  br label %.backedge

490:                                              ; preds = %11
  %491 = load i32, i32* @x.8, align 4
  %492 = load i32, i32* @y.9, align 4
  %493 = add i32 %491, -1
  %494 = mul i32 %493, %491
  %495 = and i32 %494, 1
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %497, %496
  %499 = select i1 %498, i32 688411506, i32 434053871
  br label %.backedge

500:                                              ; preds = %11
  br label %.backedge

501:                                              ; preds = %11
  %502 = load i64, i64* @i, align 8
  %503 = add i64 %502, 1
  store i64 %503, i64* @i, align 8
  br label %.backedge

504:                                              ; preds = %11
  %505 = load i64, i64* %7, align 8
  %506 = add i64 %505, 1
  store i64 %506, i64* %8, align 8
  %507 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %8, i64* nonnull dereferenceable(8) @l)
  %508 = load i64, i64* %507, align 8
  store i64 %508, i64* @i, align 8
  br label %.backedge

509:                                              ; preds = %11
  %510 = load i64, i64* @i, align 8
  %511 = load i64, i64* @r, align 8
  %.not = icmp sgt i64 %510, %511
  %512 = select i1 %.not, i32 1611666088, i32 -1636510654
  br label %.backedge

513:                                              ; preds = %11
  %514 = load i32, i32* @x.8, align 4
  %515 = load i32, i32* @y.9, align 4
  %516 = add i32 %514, -1
  %517 = mul i32 %516, %514
  %518 = and i32 %517, 1
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %520, %519
  %522 = select i1 %521, i32 1902591299, i32 1867816281
  br label %.backedge

523:                                              ; preds = %11
  %524 = load i64, i64* @i, align 8
  %525 = sub i64 %524, %.065
  %.neg85 = add i64 %.083, 1
  %526 = srem i64 %525, %.neg85
  %527 = icmp eq i64 %526, 0
  store i1 %527, i1* %1, align 1
  %528 = load i32, i32* @x.8, align 4
  %529 = load i32, i32* @y.9, align 4
  %530 = add i32 %528, -1
  %531 = mul i32 %530, %528
  %532 = and i32 %531, 1
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %534, %533
  %536 = select i1 %535, i32 1916916983, i32 1867816281
  br label %.backedge

537:                                              ; preds = %11
  %.0..0..0.64 = load volatile i1, i1* %1, align 1
  %538 = select i1 %.0..0..0.64, i32 -741247292, i32 -38205343
  br label %.backedge

539:                                              ; preds = %11
  %540 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

541:                                              ; preds = %11
  %542 = load i32, i32* @x.8, align 4
  %543 = load i32, i32* @y.9, align 4
  %544 = add i32 %542, -1
  %545 = mul i32 %544, %542
  %546 = and i32 %545, 1
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %548, %547
  %550 = select i1 %549, i32 1999899927, i32 -1185660428
  br label %.backedge

551:                                              ; preds = %11
  %552 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %553 = load i32, i32* @x.8, align 4
  %554 = load i32, i32* @y.9, align 4
  %555 = add i32 %553, -1
  %556 = mul i32 %555, %553
  %557 = and i32 %556, 1
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %554, 10
  %560 = or i1 %559, %558
  %561 = select i1 %560, i32 466484494, i32 -1185660428
  br label %.backedge

562:                                              ; preds = %11
  br label %.backedge

563:                                              ; preds = %11
  br label %.backedge

564:                                              ; preds = %11
  %565 = load i32, i32* @x.8, align 4
  %566 = load i32, i32* @y.9, align 4
  %567 = add i32 %565, -1
  %568 = mul i32 %567, %565
  %569 = and i32 %568, 1
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %571, %570
  %573 = select i1 %572, i32 1586842324, i32 2074567859
  br label %.backedge

574:                                              ; preds = %11
  %575 = load i64, i64* @i, align 8
  %576 = add i64 %575, 1
  store i64 %576, i64* @i, align 8
  %577 = load i32, i32* @x.8, align 4
  %578 = load i32, i32* @y.9, align 4
  %579 = add i32 %577, -1
  %580 = mul i32 %579, %577
  %581 = and i32 %580, 1
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %578, 10
  %584 = or i1 %583, %582
  %585 = select i1 %584, i32 -1173769790, i32 2074567859
  br label %.backedge

586:                                              ; preds = %11
  br label %.backedge

587:                                              ; preds = %11
  %588 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

589:                                              ; preds = %11
  %590 = load i32, i32* @x.8, align 4
  %591 = load i32, i32* @y.9, align 4
  %592 = add i32 %590, -1
  %593 = mul i32 %592, %590
  %594 = and i32 %593, 1
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %596, %595
  %598 = select i1 %597, i32 -135708971, i32 -692801617
  br label %.backedge

599:                                              ; preds = %11
  %600 = load i32, i32* @x.8, align 4
  %601 = load i32, i32* @y.9, align 4
  %602 = add i32 %600, -1
  %603 = mul i32 %602, %600
  %604 = and i32 %603, 1
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %606, %605
  %608 = select i1 %607, i32 -911202458, i32 -692801617
  br label %.backedge

609:                                              ; preds = %11
  ret i32 0

610:                                              ; preds = %11
  %611 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) @x)
  %612 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %611, i64* nonnull dereferenceable(8) @y)
  %613 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %612, i64* nonnull dereferenceable(8) @l)
  %614 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %613, i64* nonnull dereferenceable(8) @r)
  %615 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull @_Z2stB5cxx11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

616:                                              ; preds = %11
  %617 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

618:                                              ; preds = %11
  br label %.backedge

619:                                              ; preds = %11
  %620 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

621:                                              ; preds = %11
  %622 = load i64, i64* @l, align 8
  store i64 %622, i64* @i, align 8
  br label %.backedge

623:                                              ; preds = %11
  %624 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

625:                                              ; preds = %11
  %626 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

627:                                              ; preds = %11
  br label %.backedge

628:                                              ; preds = %11
  br label %.backedge

629:                                              ; preds = %11
  %630 = add i64 %.077, %.079
  %631 = sdiv i64 %630, 2
  %632 = load i64, i64* @x, align 8
  %633 = add i64 %.083, 1
  %634 = sdiv i64 %631, %633
  %635 = mul nsw i64 %634, %.083
  %636 = srem i64 %631, %633
  %637 = add i64 %636, %635
  %638 = sub i64 %632, %637
  %639 = load i64, i64* @y, align 8
  %640 = sub i64 %639, %634
  br label %.backedge

641:                                              ; preds = %11
  %642 = add i64 %.071, 1
  br label %.backedge

643:                                              ; preds = %11
  br label %.backedge

644:                                              ; preds = %11
  %645 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) @r, i64* nonnull dereferenceable(8) %7)
  br label %.backedge

646:                                              ; preds = %11
  %647 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

648:                                              ; preds = %11
  %649 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

650:                                              ; preds = %11
  br label %.backedge

651:                                              ; preds = %11
  br label %.backedge

652:                                              ; preds = %11
  %653 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

654:                                              ; preds = %11
  %655 = load i64, i64* @i, align 8
  %.neg = add i64 %655, 1
  store i64 %.neg, i64* @i, align 8
  br label %.backedge

656:                                              ; preds = %11
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"*, i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i64**, align 8
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.10, align 4
  %10 = load i32, i32* @y.11, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 209892526, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 209892526, label %17
    i32 1582398206, label %20
    i32 408837620, label %38
    i32 1799760702, label %40
    i32 725100535, label %50
    i32 1621684523, label %61
    i32 1072739740, label %62
    i32 -1692612880, label %64
    i32 -519140471, label %66
    i32 108816009, label %67
  ]

.backedge:                                        ; preds = %16, %67, %66, %62, %61, %50, %40, %38, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ 725100535, %67 ], [ 1582398206, %66 ], [ -1692612880, %62 ], [ -1692612880, %61 ], [ %60, %50 ], [ %49, %40 ], [ %39, %38 ], [ %37, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 1582398206, i32 -519140471
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i64*, align 8
  store i64** %21, i64*** %6, align 8
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %5, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %4, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %5, align 8
  store i64* %0, i64** %.0..0..0.6, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %4, align 8
  store i64* %1, i64** %.0..0..0.9, align 8
  %.0..0..0.10 = load volatile i64**, i64*** %4, align 8
  %24 = load i64*, i64** %.0..0..0.10, align 8
  %25 = load i64, i64* %24, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %5, align 8
  %26 = load i64*, i64** %.0..0..0.7, align 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.10, align 4
  %30 = load i32, i32* @y.11, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 408837620, i32 -519140471
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0.13 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.13, i32 1799760702, i32 1072739740
  br label %.backedge

40:                                               ; preds = %16
  %41 = load i32, i32* @x.10, align 4
  %42 = load i32, i32* @y.11, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 725100535, i32 108816009
  br label %.backedge

50:                                               ; preds = %16
  %.0..0..0.11 = load volatile i64**, i64*** %4, align 8
  %51 = load i64*, i64** %.0..0..0.11, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %6, align 8
  store i64* %51, i64** %.0..0..0.2, align 8
  %52 = load i32, i32* @x.10, align 4
  %53 = load i32, i32* @y.11, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 1621684523, i32 108816009
  br label %.backedge

61:                                               ; preds = %16
  br label %.backedge

62:                                               ; preds = %16
  %.0..0..0.8 = load volatile i64**, i64*** %5, align 8
  %63 = load i64*, i64** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %6, align 8
  store i64* %63, i64** %.0..0..0.3, align 8
  br label %.backedge

64:                                               ; preds = %16
  %.0..0..0.4 = load volatile i64**, i64*** %6, align 8
  %65 = load i64*, i64** %.0..0..0.4, align 8
  ret i64* %65

66:                                               ; preds = %16
  br label %.backedge

67:                                               ; preds = %16
  %.0..0..0.12 = load volatile i64**, i64*** %4, align 8
  %68 = load i64*, i64** %.0..0..0.12, align 8
  %.0..0..0.5 = load volatile i64**, i64*** %6, align 8
  store i64* %68, i64** %.0..0..0.5, align 8
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %3, align 8
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i64* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 148717567, %2 ], [ 1228538985, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 148717567, label %8
    i32 1593364692, label %.outer.backedge
    i32 -715114774, label %11
    i32 1228538985, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %9 = icmp slt i64 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 1593364692, i32 -715114774
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i64* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i64* %.07.ph
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s588960310.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.14, align 4
  %4 = load i32, i32* @y.15, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 2044117830, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 2044117830, label %11
    i32 -492215948, label %14
    i32 1175981596, label %24
    i32 1320983802, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -492215948, i32 1320983802
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  tail call fastcc void @__cxx_global_var_init.1()
  %15 = load i32, i32* @x.14, align 4
  %16 = load i32, i32* @y.15, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1175981596, i32 1320983802
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  tail call fastcc void @__cxx_global_var_init.1()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -492215948, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
