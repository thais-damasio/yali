; ModuleID = 'build_ollvm/programs/p03466/s581389542.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s581389542.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_ZSt3maxIxERKT_S2_S2_ = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"%lld%lld%lld%lld\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s581389542.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %9)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.0108 = phi i64 [ undef, %0 ], [ %.0108.be, %.backedge ]
  %.0106 = phi i64 [ undef, %0 ], [ %.0106.be, %.backedge ]
  %.0104 = phi i64 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i64 [ undef, %0 ], [ %.0102.be, %.backedge ]
  %.0100 = phi i64 [ undef, %0 ], [ %.0100.be, %.backedge ]
  %.098 = phi i64 [ undef, %0 ], [ %.098.be, %.backedge ]
  %.096 = phi i64 [ undef, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i64 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i64 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i64 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i64 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i64 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i64 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i64 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i64 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.0 = phi i32 [ -544241700, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -544241700, label %16
    i32 863384044, label %19
    i32 535204684, label %37
    i32 221291673, label %47
    i32 -1578270966, label %58
    i32 -53315706, label %60
    i32 -1172970934, label %74
    i32 668369414, label %84
    i32 1961514701, label %95
    i32 -1208976269, label %97
    i32 -24304890, label %107
    i32 62333955, label %119
    i32 -834383107, label %121
    i32 583909387, label %123
    i32 1705652951, label %125
    i32 -1310012775, label %126
    i32 1600788452, label %135
    i32 1597818077, label %145
    i32 -743791840, label %157
    i32 -119654245, label %159
    i32 -1880072201, label %162
    i32 1831989862, label %164
    i32 -259632152, label %169
    i32 1974004631, label %179
    i32 -427073777, label %189
    i32 -353931924, label %190
    i32 1285845985, label %191
    i32 1769101712, label %192
    i32 1195847294, label %194
    i32 -987580045, label %196
    i32 647056886, label %206
    i32 -673080288, label %216
    i32 1133863528, label %217
    i32 -1144297655, label %227
    i32 -528430183, label %238
    i32 -842263074, label %240
    i32 820282222, label %250
    i32 1215268848, label %261
    i32 -1435803386, label %263
    i32 -64946502, label %273
    i32 1977642138, label %288
    i32 -88328395, label %290
    i32 -1472483523, label %300
    i32 824477416, label %310
    i32 1645800861, label %311
    i32 1374031431, label %312
    i32 -1548918184, label %313
    i32 80765620, label %314
    i32 234545726, label %315
    i32 -971650936, label %316
    i32 1408931668, label %318
    i32 1714872539, label %319
    i32 -28073891, label %329
    i32 592948918, label %339
    i32 -1345202357, label %340
    i32 241353137, label %341
    i32 437236217, label %342
    i32 1159939005, label %343
    i32 -2073402517, label %344
    i32 1619777689, label %345
    i32 -1742666443, label %346
    i32 -527830867, label %347
    i32 -966635987, label %348
    i32 -2095998331, label %349
    i32 -1017220831, label %350
  ]

.backedge:                                        ; preds = %15, %350, %349, %348, %347, %346, %345, %344, %343, %342, %341, %340, %329, %319, %318, %316, %315, %314, %313, %312, %311, %310, %300, %290, %288, %273, %263, %261, %250, %240, %238, %227, %217, %216, %206, %196, %194, %192, %191, %190, %189, %179, %169, %164, %162, %159, %157, %145, %135, %126, %125, %123, %121, %119, %107, %97, %95, %84, %74, %60, %58, %47, %37, %19, %16
  %.0108.be = phi i64 [ %.0108, %15 ], [ %.0108, %350 ], [ %.0108, %349 ], [ %.0108, %348 ], [ %.0108, %347 ], [ %.0108, %346 ], [ %.0108, %345 ], [ %.0108, %344 ], [ %.0108, %343 ], [ %.0108, %342 ], [ %.0108, %341 ], [ %.0108, %340 ], [ %.0108, %329 ], [ %.0108, %319 ], [ %.0108, %318 ], [ %.0108, %316 ], [ %.0108, %315 ], [ %.0108, %314 ], [ %.0108, %313 ], [ %.0108, %312 ], [ %.0108, %311 ], [ %.0108, %310 ], [ %.0108, %300 ], [ %.0108, %290 ], [ %.0108, %288 ], [ %.0108, %273 ], [ %.0108, %263 ], [ %.0108, %261 ], [ %.0108, %250 ], [ %.0108, %240 ], [ %.0108, %238 ], [ %.0108, %227 ], [ %.0108, %217 ], [ %.0108, %216 ], [ %.0108, %206 ], [ %.0108, %196 ], [ %.0108, %194 ], [ %.0108, %192 ], [ %.0108, %191 ], [ %.0108, %190 ], [ %.0108, %189 ], [ %.0108, %179 ], [ %.0108, %169 ], [ %.0108, %164 ], [ %.0108, %162 ], [ %.0108, %159 ], [ %.0108, %157 ], [ %.0108, %145 ], [ %.0108, %135 ], [ %.0108, %126 ], [ %.0108, %125 ], [ %.0108, %123 ], [ %.0108, %121 ], [ %.0108, %119 ], [ %.0108, %107 ], [ %.0108, %97 ], [ %.0108, %95 ], [ %.0108, %84 ], [ %.0108, %74 ], [ %.0108, %60 ], [ %.0108, %58 ], [ %.0108, %47 ], [ %.0108, %37 ], [ %32, %19 ], [ %.0108, %16 ]
  %.0106.be = phi i64 [ %.0106, %15 ], [ %.0106, %350 ], [ %.0106, %349 ], [ %.0106, %348 ], [ %.0106, %347 ], [ %.0106, %346 ], [ %.0106, %345 ], [ %.0106, %344 ], [ %.0106, %343 ], [ %.0106, %342 ], [ %.0106, %341 ], [ %.0106, %340 ], [ %.0106, %329 ], [ %.0106, %319 ], [ %.0106, %318 ], [ %.0106, %316 ], [ %.0106, %315 ], [ %.0106, %314 ], [ %.0106, %313 ], [ %.0106, %312 ], [ %.0106, %311 ], [ %.0106, %310 ], [ %.0106, %300 ], [ %.0106, %290 ], [ %.0106, %288 ], [ %.0106, %273 ], [ %.0106, %263 ], [ %.0106, %261 ], [ %.0106, %250 ], [ %.0106, %240 ], [ %.0106, %238 ], [ %.0106, %227 ], [ %.0106, %217 ], [ %.0106, %216 ], [ %.0106, %206 ], [ %.0106, %196 ], [ %.0106, %194 ], [ %.0106, %192 ], [ %.0106, %191 ], [ %.0106, %190 ], [ %.0106, %189 ], [ %.0106, %179 ], [ %.0106, %169 ], [ %.0106, %164 ], [ %.0106, %162 ], [ %.0106, %159 ], [ %.0106, %157 ], [ %.0106, %145 ], [ %.0106, %135 ], [ %.0106, %126 ], [ %.0106, %125 ], [ %.0106, %123 ], [ %.0100, %121 ], [ %.0106, %119 ], [ %.0106, %107 ], [ %.0106, %97 ], [ %.0106, %95 ], [ %.0106, %84 ], [ %.0106, %74 ], [ %.0106, %60 ], [ %.0106, %58 ], [ %.0106, %47 ], [ %.0106, %37 ], [ %36, %19 ], [ %.0106, %16 ]
  %.0104.be = phi i64 [ %.0104, %15 ], [ %.0104, %350 ], [ %.0104, %349 ], [ %.0104, %348 ], [ %.0104, %347 ], [ %.0104, %346 ], [ %.0104, %345 ], [ %.0104, %344 ], [ %.0104, %343 ], [ %.0104, %342 ], [ %.0104, %341 ], [ %.0104, %340 ], [ %.0104, %329 ], [ %.0104, %319 ], [ %.0104, %318 ], [ %.0104, %316 ], [ %.0104, %315 ], [ %.0104, %314 ], [ %.0104, %313 ], [ %.0104, %312 ], [ %.0104, %311 ], [ %.0104, %310 ], [ %.0104, %300 ], [ %.0104, %290 ], [ %.0104, %288 ], [ %.0104, %273 ], [ %.0104, %263 ], [ %.0104, %261 ], [ %.0104, %250 ], [ %.0104, %240 ], [ %.0104, %238 ], [ %.0104, %227 ], [ %.0104, %217 ], [ %.0104, %216 ], [ %.0104, %206 ], [ %.0104, %196 ], [ %.0104, %194 ], [ %.0104, %192 ], [ %.0104, %191 ], [ %.0104, %190 ], [ %.0104, %189 ], [ %.0104, %179 ], [ %.0104, %169 ], [ %.0104, %164 ], [ %.0104, %162 ], [ %.0104, %159 ], [ %.0104, %157 ], [ %.0104, %145 ], [ %.0104, %135 ], [ %.0104, %126 ], [ %.0104, %125 ], [ %.0104, %123 ], [ %.098, %121 ], [ %.0104, %119 ], [ %.0104, %107 ], [ %.0104, %97 ], [ %.0104, %95 ], [ %.0104, %84 ], [ %.0104, %74 ], [ %.0104, %60 ], [ %.0104, %58 ], [ %.0104, %47 ], [ %.0104, %37 ], [ %33, %19 ], [ %.0104, %16 ]
  %.0102.be = phi i64 [ %.0102, %15 ], [ %.0102, %350 ], [ %.0102, %349 ], [ %.0102, %348 ], [ %.0102, %347 ], [ %.0102, %346 ], [ %.0102, %345 ], [ %.0102, %344 ], [ %.0102, %343 ], [ %.0102, %342 ], [ %.0102, %341 ], [ %.0102, %340 ], [ %.0102, %329 ], [ %.0102, %319 ], [ %.0102, %318 ], [ %.0102, %316 ], [ %.0102, %315 ], [ %.0102, %314 ], [ %.0102, %313 ], [ %.0102, %312 ], [ %.0102, %311 ], [ %.0102, %310 ], [ %.0102, %300 ], [ %.0102, %290 ], [ %.0102, %288 ], [ %.0102, %273 ], [ %.0102, %263 ], [ %.0102, %261 ], [ %.0102, %250 ], [ %.0102, %240 ], [ %.0102, %238 ], [ %.0102, %227 ], [ %.0102, %217 ], [ %.0102, %216 ], [ %.0102, %206 ], [ %.0102, %196 ], [ %.0102, %194 ], [ %.0102, %192 ], [ %.0102, %191 ], [ %.0102, %190 ], [ %.0102, %189 ], [ %.0102, %179 ], [ %.0102, %169 ], [ %.0102, %164 ], [ %.0102, %162 ], [ %.0102, %159 ], [ %.0102, %157 ], [ %.0102, %145 ], [ %.0102, %135 ], [ %.0102, %126 ], [ %.0102, %125 ], [ %.0102, %123 ], [ %.096, %121 ], [ %.0102, %119 ], [ %.0102, %107 ], [ %.0102, %97 ], [ %.0102, %95 ], [ %.0102, %84 ], [ %.0102, %74 ], [ %.0102, %60 ], [ %.0102, %58 ], [ %.0102, %47 ], [ %.0102, %37 ], [ %34, %19 ], [ %.0102, %16 ]
  %.0100.be = phi i64 [ %.0100, %15 ], [ %.0100, %350 ], [ %.0100, %349 ], [ %.0100, %348 ], [ %.0100, %347 ], [ %.0100, %346 ], [ %.0100, %345 ], [ %.0100, %344 ], [ %.0100, %343 ], [ %.0100, %342 ], [ %.0100, %341 ], [ %.0100, %340 ], [ %.0100, %329 ], [ %.0100, %319 ], [ %.0100, %318 ], [ %.0100, %316 ], [ %.0100, %315 ], [ %.0100, %314 ], [ %.0100, %313 ], [ %.0100, %312 ], [ %.0100, %311 ], [ %.0100, %310 ], [ %.0100, %300 ], [ %.0100, %290 ], [ %.0100, %288 ], [ %.0100, %273 ], [ %.0100, %263 ], [ %.0100, %261 ], [ %.0100, %250 ], [ %.0100, %240 ], [ %.0100, %238 ], [ %.0100, %227 ], [ %.0100, %217 ], [ %.0100, %216 ], [ %.0100, %206 ], [ %.0100, %196 ], [ %.0100, %194 ], [ %.0100, %192 ], [ %.0100, %191 ], [ %.0100, %190 ], [ %.0100, %189 ], [ %.0100, %179 ], [ %.0100, %169 ], [ %.0100, %164 ], [ %.0100, %162 ], [ %.0100, %159 ], [ %.0100, %157 ], [ %.0100, %145 ], [ %.0100, %135 ], [ %.0100, %126 ], [ %.0100, %125 ], [ %.0100, %123 ], [ %.0100, %121 ], [ %.0100, %119 ], [ %.0100, %107 ], [ %.0100, %97 ], [ %.0100, %95 ], [ %.0100, %84 ], [ %.0100, %74 ], [ %62, %60 ], [ %.0100, %58 ], [ %.0100, %47 ], [ %.0100, %37 ], [ %.0100, %19 ], [ %.0100, %16 ]
  %.098.be = phi i64 [ %.098, %15 ], [ %.098, %350 ], [ %.098, %349 ], [ %.098, %348 ], [ %.098, %347 ], [ %.098, %346 ], [ %.098, %345 ], [ %.098, %344 ], [ %.098, %343 ], [ %.098, %342 ], [ %.098, %341 ], [ %.098, %340 ], [ %.098, %329 ], [ %.098, %319 ], [ %.098, %318 ], [ %.098, %316 ], [ %.098, %315 ], [ %.098, %314 ], [ %.098, %313 ], [ %.098, %312 ], [ %.098, %311 ], [ %.098, %310 ], [ %.098, %300 ], [ %.098, %290 ], [ %.098, %288 ], [ %.098, %273 ], [ %.098, %263 ], [ %.098, %261 ], [ %.098, %250 ], [ %.098, %240 ], [ %.098, %238 ], [ %.098, %227 ], [ %.098, %217 ], [ %.098, %216 ], [ %.098, %206 ], [ %.098, %196 ], [ %.098, %194 ], [ %.098, %192 ], [ %.098, %191 ], [ %.098, %190 ], [ %.098, %189 ], [ %.098, %179 ], [ %.098, %169 ], [ %.098, %164 ], [ %.098, %162 ], [ %.098, %159 ], [ %.098, %157 ], [ %.098, %145 ], [ %.098, %135 ], [ %.098, %126 ], [ %.098, %125 ], [ %.098, %123 ], [ %.098, %121 ], [ %.098, %119 ], [ %.098, %107 ], [ %.098, %97 ], [ %.098, %95 ], [ %.098, %84 ], [ %.098, %74 ], [ %70, %60 ], [ %.098, %58 ], [ %.098, %47 ], [ %.098, %37 ], [ %.098, %19 ], [ %.098, %16 ]
  %.096.be = phi i64 [ %.096, %15 ], [ %.096, %350 ], [ %.096, %349 ], [ %.096, %348 ], [ %.096, %347 ], [ %.096, %346 ], [ %.096, %345 ], [ %.096, %344 ], [ %.096, %343 ], [ %.096, %342 ], [ %.096, %341 ], [ %.096, %340 ], [ %.096, %329 ], [ %.096, %319 ], [ %.096, %318 ], [ %.096, %316 ], [ %.096, %315 ], [ %.096, %314 ], [ %.096, %313 ], [ %.096, %312 ], [ %.096, %311 ], [ %.096, %310 ], [ %.096, %300 ], [ %.096, %290 ], [ %.096, %288 ], [ %.096, %273 ], [ %.096, %263 ], [ %.096, %261 ], [ %.096, %250 ], [ %.096, %240 ], [ %.096, %238 ], [ %.096, %227 ], [ %.096, %217 ], [ %.096, %216 ], [ %.096, %206 ], [ %.096, %196 ], [ %.096, %194 ], [ %.096, %192 ], [ %.096, %191 ], [ %.096, %190 ], [ %.096, %189 ], [ %.096, %179 ], [ %.096, %169 ], [ %.096, %164 ], [ %.096, %162 ], [ %.096, %159 ], [ %.096, %157 ], [ %.096, %145 ], [ %.096, %135 ], [ %.096, %126 ], [ %.096, %125 ], [ %.096, %123 ], [ %.096, %121 ], [ %.096, %119 ], [ %.096, %107 ], [ %.096, %97 ], [ %.096, %95 ], [ %.096, %84 ], [ %.096, %74 ], [ %71, %60 ], [ %.096, %58 ], [ %.096, %47 ], [ %.096, %37 ], [ %.096, %19 ], [ %.096, %16 ]
  %.094.be = phi i64 [ %.094, %15 ], [ %.094, %350 ], [ %.094, %349 ], [ %.094, %348 ], [ %.094, %347 ], [ %.094, %346 ], [ %.094, %345 ], [ %.094, %344 ], [ %.094, %343 ], [ %.094, %342 ], [ %.094, %341 ], [ %.094, %340 ], [ %.094, %329 ], [ %.094, %319 ], [ %.094, %318 ], [ %.094, %316 ], [ %.094, %315 ], [ %.094, %314 ], [ %.094, %313 ], [ %.094, %312 ], [ %.094, %311 ], [ %.094, %310 ], [ %.094, %300 ], [ %.094, %290 ], [ %.094, %288 ], [ %.094, %273 ], [ %.094, %263 ], [ %.094, %261 ], [ %.094, %250 ], [ %.094, %240 ], [ %.094, %238 ], [ %.094, %227 ], [ %.094, %217 ], [ %.094, %216 ], [ %.094, %206 ], [ %.094, %196 ], [ %.094, %194 ], [ %.094, %192 ], [ %.094, %191 ], [ %.094, %190 ], [ %.094, %189 ], [ %.094, %179 ], [ %.094, %169 ], [ %.094, %164 ], [ %.094, %162 ], [ %.094, %159 ], [ %.094, %157 ], [ %.094, %145 ], [ %.094, %135 ], [ %.094, %126 ], [ %.094, %125 ], [ %.094, %123 ], [ %122, %121 ], [ %.094, %119 ], [ %.094, %107 ], [ %.094, %97 ], [ %.094, %95 ], [ %.094, %84 ], [ %.094, %74 ], [ %.094, %60 ], [ %.094, %58 ], [ %.094, %47 ], [ %.094, %37 ], [ %23, %19 ], [ %.094, %16 ]
  %.092.be = phi i64 [ %.092, %15 ], [ %.092, %350 ], [ %.092, %349 ], [ %.092, %348 ], [ %.092, %347 ], [ %.092, %346 ], [ %.092, %345 ], [ %.092, %344 ], [ %.092, %343 ], [ %.092, %342 ], [ %.092, %341 ], [ %.092, %340 ], [ %.092, %329 ], [ %.092, %319 ], [ %.092, %318 ], [ %.092, %316 ], [ %.092, %315 ], [ %.092, %314 ], [ %.092, %313 ], [ %.092, %312 ], [ %.092, %311 ], [ %.092, %310 ], [ %.092, %300 ], [ %.092, %290 ], [ %.092, %288 ], [ %.092, %273 ], [ %.092, %263 ], [ %.092, %261 ], [ %.092, %250 ], [ %.092, %240 ], [ %.092, %238 ], [ %.092, %227 ], [ %.092, %217 ], [ %.092, %216 ], [ %.092, %206 ], [ %.092, %196 ], [ %.092, %194 ], [ %.092, %192 ], [ %.092, %191 ], [ %.092, %190 ], [ %.092, %189 ], [ %.092, %179 ], [ %.092, %169 ], [ %.092, %164 ], [ %.092, %162 ], [ %.092, %159 ], [ %.092, %157 ], [ %.092, %145 ], [ %.092, %135 ], [ %.0106, %126 ], [ %.092, %125 ], [ %.092, %123 ], [ %.092, %121 ], [ %.092, %119 ], [ %.092, %107 ], [ %.092, %97 ], [ %.092, %95 ], [ %.092, %84 ], [ %.092, %74 ], [ %.092, %60 ], [ %.092, %58 ], [ %.092, %47 ], [ %.092, %37 ], [ %.092, %19 ], [ %.092, %16 ]
  %.090.be = phi i64 [ %.090, %15 ], [ %.090, %350 ], [ %.090, %349 ], [ %.090, %348 ], [ %.090, %347 ], [ %.090, %346 ], [ %.090, %345 ], [ %.090, %344 ], [ %.090, %343 ], [ %.090, %342 ], [ %.090, %341 ], [ %.090, %340 ], [ %.090, %329 ], [ %.090, %319 ], [ %.090, %318 ], [ %.090, %316 ], [ %.090, %315 ], [ %.090, %314 ], [ %.090, %313 ], [ %.090, %312 ], [ %.090, %311 ], [ %.090, %310 ], [ %.090, %300 ], [ %.090, %290 ], [ %.090, %288 ], [ %.090, %273 ], [ %.090, %263 ], [ %.090, %261 ], [ %.090, %250 ], [ %.090, %240 ], [ %.090, %238 ], [ %.090, %227 ], [ %.090, %217 ], [ %.090, %216 ], [ %.090, %206 ], [ %.090, %196 ], [ %.090, %194 ], [ %.090, %192 ], [ %.090, %191 ], [ %.090, %190 ], [ %.090, %189 ], [ %.090, %179 ], [ %.090, %169 ], [ %.090, %164 ], [ %.090, %162 ], [ %.090, %159 ], [ %.090, %157 ], [ %.090, %145 ], [ %.090, %135 ], [ %127, %126 ], [ %.090, %125 ], [ %.090, %123 ], [ %.090, %121 ], [ %.090, %119 ], [ %.090, %107 ], [ %.090, %97 ], [ %.090, %95 ], [ %.090, %84 ], [ %.090, %74 ], [ %.090, %60 ], [ %.090, %58 ], [ %.090, %47 ], [ %.090, %37 ], [ %.090, %19 ], [ %.090, %16 ]
  %.088.be = phi i64 [ %.088, %15 ], [ %.088, %350 ], [ %.088, %349 ], [ %.088, %348 ], [ %.088, %347 ], [ %.088, %346 ], [ %.088, %345 ], [ %.088, %344 ], [ %.088, %343 ], [ %.088, %342 ], [ %.088, %341 ], [ %.088, %340 ], [ %.088, %329 ], [ %.088, %319 ], [ %.088, %318 ], [ %.088, %316 ], [ %.088, %315 ], [ %.088, %314 ], [ %.088, %313 ], [ %.088, %312 ], [ %.088, %311 ], [ %.088, %310 ], [ %.088, %300 ], [ %.088, %290 ], [ %.088, %288 ], [ %.088, %273 ], [ %.088, %263 ], [ %.088, %261 ], [ %.088, %250 ], [ %.088, %240 ], [ %.088, %238 ], [ %.088, %227 ], [ %.088, %217 ], [ %.088, %216 ], [ %.088, %206 ], [ %.088, %196 ], [ %.088, %194 ], [ %.088, %192 ], [ %.088, %191 ], [ %.088, %190 ], [ %.088, %189 ], [ %.088, %179 ], [ %.088, %169 ], [ %.088, %164 ], [ %.088, %162 ], [ %.088, %159 ], [ %.088, %157 ], [ %.088, %145 ], [ %.088, %135 ], [ %130, %126 ], [ %.088, %125 ], [ %.088, %123 ], [ %.088, %121 ], [ %.088, %119 ], [ %.088, %107 ], [ %.088, %97 ], [ %.088, %95 ], [ %.088, %84 ], [ %.088, %74 ], [ %.088, %60 ], [ %.088, %58 ], [ %.088, %47 ], [ %.088, %37 ], [ %.088, %19 ], [ %.088, %16 ]
  %.086.be = phi i64 [ %.086, %15 ], [ %.086, %350 ], [ %.086, %349 ], [ %.086, %348 ], [ %.086, %347 ], [ %.086, %346 ], [ %.086, %345 ], [ %.086, %344 ], [ %.086, %343 ], [ %.086, %342 ], [ %.086, %341 ], [ %.086, %340 ], [ %.086, %329 ], [ %.086, %319 ], [ %.086, %318 ], [ %.086, %316 ], [ %.086, %315 ], [ %.086, %314 ], [ %.086, %313 ], [ %.086, %312 ], [ %.086, %311 ], [ %.086, %310 ], [ %.086, %300 ], [ %.086, %290 ], [ %.086, %288 ], [ %.086, %273 ], [ %.086, %263 ], [ %.086, %261 ], [ %.086, %250 ], [ %.086, %240 ], [ %.086, %238 ], [ %.086, %227 ], [ %.086, %217 ], [ %.086, %216 ], [ %.086, %206 ], [ %.086, %196 ], [ %.086, %194 ], [ %.086, %192 ], [ %.086, %191 ], [ %.086, %190 ], [ %.086, %189 ], [ %.086, %179 ], [ %.086, %169 ], [ %.086, %164 ], [ %.086, %162 ], [ %.086, %159 ], [ %.086, %157 ], [ %.086, %145 ], [ %.086, %135 ], [ %130, %126 ], [ %.086, %125 ], [ %.086, %123 ], [ %.086, %121 ], [ %.086, %119 ], [ %.086, %107 ], [ %.086, %97 ], [ %.086, %95 ], [ %.086, %84 ], [ %.086, %74 ], [ %.086, %60 ], [ %.086, %58 ], [ %.086, %47 ], [ %.086, %37 ], [ %.086, %19 ], [ %.086, %16 ]
  %.084.be = phi i64 [ %.084, %15 ], [ %.084, %350 ], [ %.084, %349 ], [ %.084, %348 ], [ %.084, %347 ], [ %.084, %346 ], [ %.084, %345 ], [ %.084, %344 ], [ %.084, %343 ], [ %.084, %342 ], [ %.084, %341 ], [ %.084, %340 ], [ %.084, %329 ], [ %.084, %319 ], [ %.084, %318 ], [ %.084, %316 ], [ %.084, %315 ], [ %.084, %314 ], [ %.084, %313 ], [ %.084, %312 ], [ %.084, %311 ], [ %.084, %310 ], [ %.084, %300 ], [ %.084, %290 ], [ %.084, %288 ], [ %.084, %273 ], [ %.084, %263 ], [ %.084, %261 ], [ %.084, %250 ], [ %.084, %240 ], [ %.084, %238 ], [ %.084, %227 ], [ %.084, %217 ], [ %.084, %216 ], [ %.084, %206 ], [ %.084, %196 ], [ %.084, %194 ], [ %.084, %192 ], [ %.084, %191 ], [ %.084, %190 ], [ %.084, %189 ], [ %.084, %179 ], [ %.084, %169 ], [ %.084, %164 ], [ %.084, %162 ], [ %.084, %159 ], [ %.084, %157 ], [ %.084, %145 ], [ %.084, %135 ], [ %133, %126 ], [ %.084, %125 ], [ %.084, %123 ], [ %.084, %121 ], [ %.084, %119 ], [ %.084, %107 ], [ %.084, %97 ], [ %.084, %95 ], [ %.084, %84 ], [ %.084, %74 ], [ %.084, %60 ], [ %.084, %58 ], [ %.084, %47 ], [ %.084, %37 ], [ %.084, %19 ], [ %.084, %16 ]
  %.082.be = phi i64 [ %.082, %15 ], [ %.082, %350 ], [ %.082, %349 ], [ %.082, %348 ], [ %.082, %347 ], [ %.082, %346 ], [ %.082, %345 ], [ %.082, %344 ], [ %.082, %343 ], [ %.082, %342 ], [ %.082, %341 ], [ %.082, %340 ], [ %.082, %329 ], [ %.082, %319 ], [ %.082, %318 ], [ %317, %316 ], [ %.082, %315 ], [ %.082, %314 ], [ %.082, %313 ], [ %.082, %312 ], [ %.082, %311 ], [ %.082, %310 ], [ %.082, %300 ], [ %.082, %290 ], [ %.082, %288 ], [ %.082, %273 ], [ %.082, %263 ], [ %.082, %261 ], [ %.082, %250 ], [ %.082, %240 ], [ %.082, %238 ], [ %.082, %227 ], [ %.082, %217 ], [ %.082, %216 ], [ %.082, %206 ], [ %.082, %196 ], [ %.082, %194 ], [ %.082, %192 ], [ %.082, %191 ], [ %.082, %190 ], [ %.082, %189 ], [ %.082, %179 ], [ %.082, %169 ], [ %.082, %164 ], [ %.082, %162 ], [ %.082, %159 ], [ %.082, %157 ], [ %.082, %145 ], [ %.082, %135 ], [ %134, %126 ], [ %.082, %125 ], [ %.082, %123 ], [ %.082, %121 ], [ %.082, %119 ], [ %.082, %107 ], [ %.082, %97 ], [ %.082, %95 ], [ %.082, %84 ], [ %.082, %74 ], [ %.082, %60 ], [ %.082, %58 ], [ %.082, %47 ], [ %.082, %37 ], [ %.082, %19 ], [ %.082, %16 ]
  %.080.be = phi i64 [ %.080, %15 ], [ %.080, %350 ], [ %.080, %349 ], [ %.080, %348 ], [ %.080, %347 ], [ %.080, %346 ], [ %.080, %345 ], [ %.080, %344 ], [ %.080, %343 ], [ %.080, %342 ], [ %.080, %341 ], [ %.080, %340 ], [ %.080, %329 ], [ %.080, %319 ], [ %.080, %318 ], [ %.080, %316 ], [ %.080, %315 ], [ %.080, %314 ], [ %.080, %313 ], [ %.080, %312 ], [ %.080, %311 ], [ %.080, %310 ], [ %.080, %300 ], [ %.080, %290 ], [ %.080, %288 ], [ %.080, %273 ], [ %.080, %263 ], [ %.080, %261 ], [ %.080, %250 ], [ %.080, %240 ], [ %.080, %238 ], [ %.080, %227 ], [ %.080, %217 ], [ %.080, %216 ], [ %.080, %206 ], [ %.080, %196 ], [ %.080, %194 ], [ %.080, %192 ], [ %.080, %191 ], [ %.080, %190 ], [ %.080, %189 ], [ %.080, %179 ], [ %.080, %169 ], [ %.080, %164 ], [ %.080, %162 ], [ %.080, %159 ], [ %.080, %157 ], [ %.080, %145 ], [ %.080, %135 ], [ %.080, %126 ], [ %.080, %125 ], [ %124, %123 ], [ %.080, %121 ], [ %.080, %119 ], [ %.080, %107 ], [ %.080, %97 ], [ %.080, %95 ], [ %.080, %84 ], [ %.080, %74 ], [ %.080, %60 ], [ %.080, %58 ], [ %.080, %47 ], [ %.080, %37 ], [ 0, %19 ], [ %.080, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ -28073891, %350 ], [ -1472483523, %349 ], [ -64946502, %348 ], [ 820282222, %347 ], [ -1144297655, %346 ], [ 647056886, %345 ], [ 1974004631, %344 ], [ 1597818077, %343 ], [ -24304890, %342 ], [ 668369414, %341 ], [ 221291673, %340 ], [ %338, %329 ], [ %328, %319 ], [ -544241700, %318 ], [ 1600788452, %316 ], [ -971650936, %315 ], [ 234545726, %314 ], [ 80765620, %313 ], [ -1548918184, %312 ], [ 1374031431, %311 ], [ 1374031431, %310 ], [ %309, %300 ], [ %299, %290 ], [ %289, %288 ], [ %287, %273 ], [ %272, %263 ], [ %262, %261 ], [ %260, %250 ], [ %249, %240 ], [ %239, %238 ], [ %237, %227 ], [ %226, %217 ], [ 80765620, %216 ], [ %215, %206 ], [ %205, %196 ], [ %195, %194 ], [ %193, %192 ], [ 234545726, %191 ], [ 1285845985, %190 ], [ 1285845985, %189 ], [ %188, %179 ], [ %178, %169 ], [ %168, %164 ], [ %163, %162 ], [ %161, %159 ], [ %158, %157 ], [ %156, %145 ], [ %144, %135 ], [ 1600788452, %126 ], [ 535204684, %125 ], [ 1705652951, %123 ], [ 1705652951, %121 ], [ %120, %119 ], [ %118, %107 ], [ %106, %97 ], [ %96, %95 ], [ %94, %84 ], [ %83, %74 ], [ %73, %60 ], [ %59, %58 ], [ %57, %47 ], [ %46, %37 ], [ 535204684, %19 ], [ %18, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* %9, align 4
  %.neg121 = add i32 %17, -1
  store i32 %.neg121, i32* %9, align 4
  %.not122 = icmp eq i32 %17, 0
  %18 = select i1 %.not122, i32 1714872539, i32 863384044
  br label %.backedge

19:                                               ; preds = %15
  %20 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64* nonnull %10, i64* nonnull %11, i64* nonnull %12, i64* nonnull %13)
  %21 = load i64, i64* %10, align 8
  %22 = load i64, i64* %11, align 8
  %23 = add i64 %22, %21
  %24 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %10, i64* nonnull dereferenceable(8) %11)
  %25 = load i64, i64* %24, align 8
  %26 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %10, i64* nonnull dereferenceable(8) %11)
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %25
  %29 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %10, i64* nonnull dereferenceable(8) %11)
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  %32 = sdiv i64 %28, %31
  %33 = load i64, i64* %10, align 8
  %34 = load i64, i64* %11, align 8
  %35 = add i64 %33, 1
  %36 = add i64 %35, %34
  br label %.backedge

37:                                               ; preds = %15
  %38 = load i32, i32* @x.5, align 4
  %39 = load i32, i32* @y.6, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 221291673, i32 -1345202357
  br label %.backedge

47:                                               ; preds = %15
  %48 = icmp sle i64 %.080, %.094
  store i1 %48, i1* %8, align 1
  %49 = load i32, i32* @x.5, align 4
  %50 = load i32, i32* @y.6, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 -1578270966, i32 -1345202357
  br label %.backedge

58:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %59 = select i1 %.0..0..0., i32 -53315706, i32 -1310012775
  br label %.backedge

60:                                               ; preds = %15
  %61 = add i64 %.080, %.094
  %62 = sdiv i64 %61, 2
  %63 = load i64, i64* %10, align 8
  %64 = load i64, i64* %11, align 8
  %65 = add i64 %.0108, 1
  %66 = sdiv i64 %62, %65
  %67 = mul nsw i64 %66, %.0108
  %68 = srem i64 %62, %65
  %69 = add i64 %68, %67
  %70 = sub i64 %63, %69
  %71 = sub i64 %64, %66
  %72 = icmp slt i64 %70, 0
  %73 = select i1 %72, i32 -834383107, i32 -1172970934
  br label %.backedge

74:                                               ; preds = %15
  %75 = load i32, i32* @x.5, align 4
  %76 = load i32, i32* @y.6, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 668369414, i32 241353137
  br label %.backedge

84:                                               ; preds = %15
  %85 = icmp slt i64 %.096, 0
  store i1 %85, i1* %7, align 1
  %86 = load i32, i32* @x.5, align 4
  %87 = load i32, i32* @y.6, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 1961514701, i32 241353137
  br label %.backedge

95:                                               ; preds = %15
  %.0..0..0.73 = load volatile i1, i1* %7, align 1
  %96 = select i1 %.0..0..0.73, i32 -834383107, i32 -1208976269
  br label %.backedge

97:                                               ; preds = %15
  %98 = load i32, i32* @x.5, align 4
  %99 = load i32, i32* @y.6, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 -24304890, i32 437236217
  br label %.backedge

107:                                              ; preds = %15
  %108 = mul nsw i64 %.098, %.0108
  %109 = icmp sgt i64 %.096, %108
  store i1 %109, i1* %6, align 1
  %110 = load i32, i32* @x.5, align 4
  %111 = load i32, i32* @y.6, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 62333955, i32 437236217
  br label %.backedge

119:                                              ; preds = %15
  %.0..0..0.74 = load volatile i1, i1* %6, align 1
  %120 = select i1 %.0..0..0.74, i32 -834383107, i32 583909387
  br label %.backedge

121:                                              ; preds = %15
  %122 = add i64 %.0100, -1
  br label %.backedge

123:                                              ; preds = %15
  %124 = add i64 %.0100, 1
  br label %.backedge

125:                                              ; preds = %15
  br label %.backedge

126:                                              ; preds = %15
  %127 = add i64 %.0106, 1
  %128 = add i64 %.0102, %.0106
  %129 = mul nsw i64 %.0104, %.0108
  %130 = sub i64 %128, %129
  %131 = load i64, i64* %10, align 8
  %132 = load i64, i64* %11, align 8
  %133 = add i64 %132, %131
  %134 = load i64, i64* %12, align 8
  br label %.backedge

135:                                              ; preds = %15
  %136 = load i32, i32* @x.5, align 4
  %137 = load i32, i32* @y.6, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 1597818077, i32 1159939005
  br label %.backedge

145:                                              ; preds = %15
  %146 = load i64, i64* %13, align 8
  %147 = icmp sle i64 %.082, %146
  store i1 %147, i1* %5, align 1
  %148 = load i32, i32* @x.5, align 4
  %149 = load i32, i32* @y.6, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 -743791840, i32 1159939005
  br label %.backedge

157:                                              ; preds = %15
  %.0..0..0.75 = load volatile i1, i1* %5, align 1
  %158 = select i1 %.0..0..0.75, i32 -119654245, i32 1408931668
  br label %.backedge

159:                                              ; preds = %15
  %160 = icmp sgt i64 %.082, 0
  %161 = select i1 %160, i32 -1880072201, i32 1769101712
  br label %.backedge

162:                                              ; preds = %15
  %.not119 = icmp sgt i64 %.082, %.092
  %163 = select i1 %.not119, i32 1769101712, i32 1831989862
  br label %.backedge

164:                                              ; preds = %15
  %165 = add i64 %.082, -1
  %.neg = add i64 %.0108, 1
  %166 = srem i64 %165, %.neg
  %167 = icmp eq i64 %166, %.0108
  %168 = select i1 %167, i32 -259632152, i32 -353931924
  br label %.backedge

169:                                              ; preds = %15
  %170 = load i32, i32* @x.5, align 4
  %171 = load i32, i32* @y.6, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 1974004631, i32 -2073402517
  br label %.backedge

179:                                              ; preds = %15
  %putchar118 = call i32 @putchar(i32 66)
  %180 = load i32, i32* @x.5, align 4
  %181 = load i32, i32* @y.6, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 -427073777, i32 -2073402517
  br label %.backedge

189:                                              ; preds = %15
  br label %.backedge

190:                                              ; preds = %15
  %putchar117 = call i32 @putchar(i32 65)
  br label %.backedge

191:                                              ; preds = %15
  br label %.backedge

192:                                              ; preds = %15
  %.not116 = icmp slt i64 %.082, %.090
  %193 = select i1 %.not116, i32 1133863528, i32 1195847294
  br label %.backedge

194:                                              ; preds = %15
  %.not = icmp sgt i64 %.082, %.088
  %195 = select i1 %.not, i32 1133863528, i32 -987580045
  br label %.backedge

196:                                              ; preds = %15
  %197 = load i32, i32* @x.5, align 4
  %198 = load i32, i32* @y.6, align 4
  %199 = add i32 %197, -1
  %200 = mul i32 %199, %197
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %203, %202
  %205 = select i1 %204, i32 647056886, i32 1619777689
  br label %.backedge

206:                                              ; preds = %15
  %putchar115 = call i32 @putchar(i32 66)
  %207 = load i32, i32* @x.5, align 4
  %208 = load i32, i32* @y.6, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -673080288, i32 1619777689
  br label %.backedge

216:                                              ; preds = %15
  br label %.backedge

217:                                              ; preds = %15
  %218 = load i32, i32* @x.5, align 4
  %219 = load i32, i32* @y.6, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -1144297655, i32 -1742666443
  br label %.backedge

227:                                              ; preds = %15
  %228 = icmp sge i64 %.082, %.086
  store i1 %228, i1* %4, align 1
  %229 = load i32, i32* @x.5, align 4
  %230 = load i32, i32* @y.6, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 -528430183, i32 -1742666443
  br label %.backedge

238:                                              ; preds = %15
  %.0..0..0.76 = load volatile i1, i1* %4, align 1
  %239 = select i1 %.0..0..0.76, i32 -842263074, i32 -1548918184
  br label %.backedge

240:                                              ; preds = %15
  %241 = load i32, i32* @x.5, align 4
  %242 = load i32, i32* @y.6, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 820282222, i32 -527830867
  br label %.backedge

250:                                              ; preds = %15
  %251 = icmp sle i64 %.082, %.084
  store i1 %251, i1* %3, align 1
  %252 = load i32, i32* @x.5, align 4
  %253 = load i32, i32* @y.6, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 1215268848, i32 -527830867
  br label %.backedge

261:                                              ; preds = %15
  %.0..0..0.77 = load volatile i1, i1* %3, align 1
  %262 = select i1 %.0..0..0.77, i32 -1435803386, i32 -1548918184
  br label %.backedge

263:                                              ; preds = %15
  %264 = load i32, i32* @x.5, align 4
  %265 = load i32, i32* @y.6, align 4
  %266 = add i32 %264, -1
  %267 = mul i32 %266, %264
  %268 = and i32 %267, 1
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %270, %269
  %272 = select i1 %271, i32 -64946502, i32 -966635987
  br label %.backedge

273:                                              ; preds = %15
  %274 = xor i64 %.088, -1
  %275 = add i64 %.082, %274
  %276 = add i64 %.0108, 1
  %277 = srem i64 %275, %276
  %278 = icmp ne i64 %277, 0
  store i1 %278, i1* %2, align 1
  %279 = load i32, i32* @x.5, align 4
  %280 = load i32, i32* @y.6, align 4
  %281 = add i32 %279, -1
  %282 = mul i32 %281, %279
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %285, %284
  %287 = select i1 %286, i32 1977642138, i32 -966635987
  br label %.backedge

288:                                              ; preds = %15
  %.0..0..0.78 = load volatile i1, i1* %2, align 1
  %289 = select i1 %.0..0..0.78, i32 -88328395, i32 1645800861
  br label %.backedge

290:                                              ; preds = %15
  %291 = load i32, i32* @x.5, align 4
  %292 = load i32, i32* @y.6, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 -1472483523, i32 -2095998331
  br label %.backedge

300:                                              ; preds = %15
  %putchar114 = call i32 @putchar(i32 66)
  %301 = load i32, i32* @x.5, align 4
  %302 = load i32, i32* @y.6, align 4
  %303 = add i32 %301, -1
  %304 = mul i32 %303, %301
  %305 = and i32 %304, 1
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %307, %306
  %309 = select i1 %308, i32 824477416, i32 -2095998331
  br label %.backedge

310:                                              ; preds = %15
  br label %.backedge

311:                                              ; preds = %15
  %putchar113 = call i32 @putchar(i32 65)
  br label %.backedge

312:                                              ; preds = %15
  br label %.backedge

313:                                              ; preds = %15
  br label %.backedge

314:                                              ; preds = %15
  br label %.backedge

315:                                              ; preds = %15
  br label %.backedge

316:                                              ; preds = %15
  %317 = add i64 %.082, 1
  br label %.backedge

318:                                              ; preds = %15
  %putchar112 = call i32 @putchar(i32 10)
  br label %.backedge

319:                                              ; preds = %15
  %320 = load i32, i32* @x.5, align 4
  %321 = load i32, i32* @y.6, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 -28073891, i32 -1017220831
  br label %.backedge

329:                                              ; preds = %15
  store i32 0, i32* %1, align 4
  %330 = load i32, i32* @x.5, align 4
  %331 = load i32, i32* @y.6, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 592948918, i32 -1017220831
  br label %.backedge

339:                                              ; preds = %15
  %.0..0..0.79 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.79

340:                                              ; preds = %15
  br label %.backedge

341:                                              ; preds = %15
  br label %.backedge

342:                                              ; preds = %15
  br label %.backedge

343:                                              ; preds = %15
  br label %.backedge

344:                                              ; preds = %15
  %putchar111 = call i32 @putchar(i32 66)
  br label %.backedge

345:                                              ; preds = %15
  %putchar110 = call i32 @putchar(i32 66)
  br label %.backedge

346:                                              ; preds = %15
  br label %.backedge

347:                                              ; preds = %15
  br label %.backedge

348:                                              ; preds = %15
  br label %.backedge

349:                                              ; preds = %15
  %putchar = call i32 @putchar(i32 66)
  br label %.backedge

350:                                              ; preds = %15
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i64**, align 8
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.7, align 4
  %10 = load i32, i32* @y.8, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 1209845432, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1209845432, label %17
    i32 -1633634868, label %20
    i32 -1584177489, label %38
    i32 -1421523199, label %40
    i32 39201819, label %42
    i32 -902912704, label %52
    i32 2133958344, label %63
    i32 123984120, label %64
    i32 1759299439, label %66
    i32 -1172284582, label %67
  ]

.backedge:                                        ; preds = %16, %67, %66, %63, %52, %42, %40, %38, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ -902912704, %67 ], [ -1633634868, %66 ], [ 123984120, %63 ], [ %62, %52 ], [ %51, %42 ], [ 123984120, %40 ], [ %39, %38 ], [ %37, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 -1633634868, i32 1759299439
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i64*, align 8
  store i64** %21, i64*** %6, align 8
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %5, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %4, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %5, align 8
  store i64* %0, i64** %.0..0..0.6, align 8
  %.0..0..0.10 = load volatile i64**, i64*** %4, align 8
  store i64* %1, i64** %.0..0..0.10, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %5, align 8
  %24 = load i64*, i64** %.0..0..0.7, align 8
  %25 = load i64, i64* %24, align 8
  %.0..0..0.11 = load volatile i64**, i64*** %4, align 8
  %26 = load i64*, i64** %.0..0..0.11, align 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.7, align 4
  %30 = load i32, i32* @y.8, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -1584177489, i32 1759299439
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0.13 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.13, i32 -1421523199, i32 39201819
  br label %.backedge

40:                                               ; preds = %16
  %.0..0..0.12 = load volatile i64**, i64*** %4, align 8
  %41 = load i64*, i64** %.0..0..0.12, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %6, align 8
  store i64* %41, i64** %.0..0..0.2, align 8
  br label %.backedge

42:                                               ; preds = %16
  %43 = load i32, i32* @x.7, align 4
  %44 = load i32, i32* @y.8, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 -902912704, i32 -1172284582
  br label %.backedge

52:                                               ; preds = %16
  %.0..0..0.8 = load volatile i64**, i64*** %5, align 8
  %53 = load i64*, i64** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %6, align 8
  store i64* %53, i64** %.0..0..0.3, align 8
  %54 = load i32, i32* @x.7, align 4
  %55 = load i32, i32* @y.8, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 2133958344, i32 -1172284582
  br label %.backedge

63:                                               ; preds = %16
  br label %.backedge

64:                                               ; preds = %16
  %.0..0..0.4 = load volatile i64**, i64*** %6, align 8
  %65 = load i64*, i64** %.0..0..0.4, align 8
  ret i64* %65

66:                                               ; preds = %16
  br label %.backedge

67:                                               ; preds = %16
  %.0..0..0.9 = load volatile i64**, i64*** %5, align 8
  %68 = load i64*, i64** %.0..0..0.9, align 8
  %.0..0..0.5 = load volatile i64**, i64*** %6, align 8
  store i64* %68, i64** %.0..0..0.5, align 8
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.9, align 4
  %8 = load i32, i32* @y.10, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 392890914, i32 -402272995
  %16 = select i1 %14, i32 -1236843368, i32 -402272995
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1487106630, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 1487106630, label %18
    i32 2058683830, label %.outer.backedge
    i32 1262585902, label %.outer10.backedge
    i32 -1236843368, label %21
    i32 392890914, label %22
    i32 1053598108, label %23
    i32 -402272995, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 2058683830, i32 1262585902
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer.backedge

22:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %22, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 1053598108, %22 ], [ %16, %17 ]
  br label %.outer10

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %21
  %.08.ph.be = phi i64* [ %0, %21 ], [ %0, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ %15, %21 ], [ -1236843368, %24 ], [ 1053598108, %17 ]
  br label %.outer
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s581389542.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
