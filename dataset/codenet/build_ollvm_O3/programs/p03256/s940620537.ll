; ModuleID = 'build_ollvm/programs/p03256/s940620537.ll'
source_filename = "Project_CodeNet_C++1400/p03256/s940620537.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.r = type { i32, i32 }

@n = global i32 0, align 4
@m = global i32 0, align 4
@d = local_unnamed_addr global [200050 x i32] zeroinitializer, align 16
@p = local_unnamed_addr global [200050 x [2 x i32]] zeroinitializer, align 16
@head = local_unnamed_addr global [200050 x i32] zeroinitializer, align 16
@q = local_unnamed_addr global [200050 x i32] zeroinitializer, align 16
@t = local_unnamed_addr global i32 0, align 4
@num = local_unnamed_addr global i32 1, align 4
@vis = local_unnamed_addr global [200050 x i32] zeroinitializer, align 16
@e = local_unnamed_addr global [400050 x %struct.r] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"Yes\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"No\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define void @_Z3addii(i32 %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x, align 4
  %6 = load i32, i32* @y, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = sext i32 %0 to i64
  %13 = getelementptr inbounds [200050 x i32], [200050 x i32]* @head, i64 0, i64 %12
  %14 = or i1 %11, %10
  %15 = select i1 %14, i32 1379982984, i32 118356774
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ -1296832390, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %16

16:                                               ; preds = %.outer, %16
  switch i32 %.0.ph, label %16 [
    i32 -1296832390, label %17
    i32 2102588392, label %20
    i32 1379982984, label %27
    i32 118356774, label %28
  ]

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 2102588392, i32 118356774
  br label %.outer.backedge

20:                                               ; preds = %16
  %21 = load i32, i32* @num, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %22, i32 0
  store i32 %1, i32* %23, align 8
  %24 = load i32, i32* %13, align 4
  %25 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %22, i32 1
  store i32 %24, i32* %25, align 4
  %26 = add i32 %21, 1
  store i32 %26, i32* @num, align 4
  store i32 %21, i32* %13, align 4
  br label %.outer.backedge

27:                                               ; preds = %16
  ret void

28:                                               ; preds = %16
  %29 = load i32, i32* @num, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %30, i32 0
  store i32 %1, i32* %31, align 8
  %32 = load i32, i32* %13, align 4
  %33 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %30, i32 1
  store i32 %32, i32* %33, align 4
  %34 = add i32 %29, 1
  store i32 %34, i32* @num, align 4
  store i32 %29, i32* %13, align 4
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %28, %20, %17
  %.0.ph.be = phi i32 [ %19, %17 ], [ %15, %20 ], [ 2102588392, %28 ]
  br label %.outer
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull @m)
  br label %9

9:                                                ; preds = %.backedge, %0
  %.059 = phi i32 [ 1, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.045 = phi i32 [ -1535165179, %0 ], [ %.045.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.045, label %.backedge [
    i32 -1535165179, label %10
    i32 1066770378, label %13
    i32 1956648436, label %15
    i32 -1620038095, label %25
    i32 -182674204, label %36
    i32 1835786458, label %38
    i32 -719438556, label %48
    i32 -787527388, label %59
    i32 -444811809, label %60
    i32 2058924647, label %62
    i32 -963345907, label %72
    i32 420211850, label %83
    i32 1872200713, label %84
    i32 -2105467465, label %94
    i32 1341118956, label %107
    i32 -480053948, label %108
    i32 -1540922815, label %110
    i32 1545763557, label %111
    i32 -280404912, label %114
    i32 1583014409, label %124
    i32 -1733592193, label %152
    i32 -985247536, label %153
    i32 -987716458, label %155
    i32 1472559177, label %165
    i32 929338715, label %175
    i32 -150686377, label %176
    i32 1784845399, label %179
    i32 -604321497, label %189
    i32 468211666, label %203
    i32 -787266528, label %205
    i32 845884500, label %215
    i32 1798978520, label %229
    i32 -2139200874, label %231
    i32 2062907883, label %238
    i32 2061282568, label %248
    i32 -432292361, label %258
    i32 -701410716, label %259
    i32 -263846759, label %261
    i32 -523145310, label %271
    i32 -2073026103, label %281
    i32 525349094, label %282
    i32 -20653686, label %285
    i32 187357053, label %292
    i32 1566473549, label %294
    i32 1965755840, label %302
    i32 205842668, label %312
    i32 1658992625, label %334
    i32 -998218675, label %336
    i32 -1317706486, label %346
    i32 1669231700, label %347
    i32 -567162843, label %348
    i32 1807103496, label %358
    i32 1683855201, label %371
    i32 614724883, label %372
    i32 -1340663366, label %373
    i32 -248841591, label %375
    i32 509896178, label %380
    i32 -1304754852, label %382
    i32 -1765921742, label %384
    i32 -601205290, label %385
    i32 -2037654622, label %386
    i32 -427433279, label %387
    i32 209013426, label %389
    i32 -1417558603, label %393
    i32 -2031877816, label %412
    i32 1220865056, label %413
    i32 -1907961154, label %414
    i32 -680026206, label %415
    i32 -180710488, label %416
    i32 -771994796, label %417
    i32 2041087994, label %429
  ]

.backedge:                                        ; preds = %9, %429, %417, %416, %415, %414, %413, %412, %393, %389, %387, %386, %385, %382, %380, %375, %373, %372, %371, %358, %348, %347, %346, %336, %334, %312, %302, %294, %292, %285, %282, %281, %271, %261, %259, %258, %248, %238, %231, %229, %215, %205, %203, %189, %179, %176, %175, %165, %155, %153, %152, %124, %114, %111, %110, %108, %107, %94, %84, %83, %72, %62, %60, %59, %48, %38, %36, %25, %15, %13, %10
  %.059.be = phi i32 [ %.059, %9 ], [ %.059, %429 ], [ %.059, %417 ], [ %.059, %416 ], [ %.059, %415 ], [ %.059, %414 ], [ %.059, %413 ], [ %.059, %412 ], [ %.059, %393 ], [ %.059, %389 ], [ %.059, %387 ], [ %.059, %386 ], [ %.059, %385 ], [ %.059, %382 ], [ %.059, %380 ], [ %.059, %375 ], [ %.059, %373 ], [ %.059, %372 ], [ %.059, %371 ], [ %.059, %358 ], [ %.059, %348 ], [ %.059, %347 ], [ %.059, %346 ], [ %.059, %336 ], [ %.059, %334 ], [ %.059, %312 ], [ %.059, %302 ], [ %.059, %294 ], [ %.059, %292 ], [ %.059, %285 ], [ %.059, %282 ], [ %.059, %281 ], [ %.059, %271 ], [ %.059, %261 ], [ %.059, %259 ], [ %.059, %258 ], [ %.059, %248 ], [ %.059, %238 ], [ %.059, %231 ], [ %.059, %229 ], [ %.059, %215 ], [ %.059, %205 ], [ %.059, %203 ], [ %.059, %189 ], [ %.059, %179 ], [ %.059, %176 ], [ %.059, %175 ], [ %.059, %165 ], [ %.059, %155 ], [ %.059, %153 ], [ %.059, %152 ], [ %.059, %124 ], [ %.059, %114 ], [ %.059, %111 ], [ %.059, %110 ], [ %109, %108 ], [ %.059, %107 ], [ %.059, %94 ], [ %.059, %84 ], [ %.059, %83 ], [ %.059, %72 ], [ %.059, %62 ], [ %.059, %60 ], [ %.059, %59 ], [ %.059, %48 ], [ %.059, %38 ], [ %.059, %36 ], [ %.059, %25 ], [ %.059, %15 ], [ %.059, %13 ], [ %.059, %10 ]
  %.057.be = phi i32 [ %.057, %9 ], [ %.057, %429 ], [ %.057, %417 ], [ %.057, %416 ], [ %.057, %415 ], [ %.057, %414 ], [ %.057, %413 ], [ %.057, %412 ], [ %.057, %393 ], [ %.057, %389 ], [ %388, %387 ], [ %.057, %386 ], [ %.057, %385 ], [ %.057, %382 ], [ %.057, %380 ], [ %.057, %375 ], [ %.057, %373 ], [ %.057, %372 ], [ %.057, %371 ], [ %.057, %358 ], [ %.057, %348 ], [ %.057, %347 ], [ %.057, %346 ], [ %.057, %336 ], [ %.057, %334 ], [ %.057, %312 ], [ %.057, %302 ], [ %.057, %294 ], [ %.057, %292 ], [ %.057, %285 ], [ %.057, %282 ], [ %.057, %281 ], [ %.057, %271 ], [ %.057, %261 ], [ %.057, %259 ], [ %.057, %258 ], [ %.057, %248 ], [ %.057, %238 ], [ %.057, %231 ], [ %.057, %229 ], [ %.057, %215 ], [ %.057, %205 ], [ %.057, %203 ], [ %.057, %189 ], [ %.057, %179 ], [ %.057, %176 ], [ %.057, %175 ], [ %.057, %165 ], [ %.057, %155 ], [ %.057, %153 ], [ %.057, %152 ], [ %.057, %124 ], [ %.057, %114 ], [ %.057, %111 ], [ %.057, %110 ], [ %.057, %108 ], [ %.057, %107 ], [ %.057, %94 ], [ %.057, %84 ], [ %.057, %83 ], [ %73, %72 ], [ %.057, %62 ], [ %.057, %60 ], [ %.057, %59 ], [ %.057, %48 ], [ %.057, %38 ], [ %.057, %36 ], [ %.057, %25 ], [ %.057, %15 ], [ %14, %13 ], [ %.057, %10 ]
  %.055.be = phi i32 [ %.055, %9 ], [ %.055, %429 ], [ %.055, %417 ], [ %.055, %416 ], [ %.055, %415 ], [ %.055, %414 ], [ %.055, %413 ], [ %.055, %412 ], [ %.055, %393 ], [ %.055, %389 ], [ %.055, %387 ], [ %.055, %386 ], [ %.055, %385 ], [ %.055, %382 ], [ %.055, %380 ], [ %.055, %375 ], [ %.055, %373 ], [ %.055, %372 ], [ %.055, %371 ], [ %.055, %358 ], [ %.055, %348 ], [ %.055, %347 ], [ %.055, %346 ], [ %.055, %336 ], [ %.055, %334 ], [ %.055, %312 ], [ %.055, %302 ], [ %.055, %294 ], [ %.055, %292 ], [ %.055, %285 ], [ %.055, %282 ], [ %.055, %281 ], [ %.055, %271 ], [ %.055, %261 ], [ %.055, %259 ], [ %.055, %258 ], [ %.055, %248 ], [ %.055, %238 ], [ %.055, %231 ], [ %.055, %229 ], [ %.055, %215 ], [ %.055, %205 ], [ %.055, %203 ], [ %.055, %189 ], [ %.055, %179 ], [ %.055, %176 ], [ %.055, %175 ], [ %.055, %165 ], [ %.055, %155 ], [ %154, %153 ], [ %.055, %152 ], [ %.055, %124 ], [ %.055, %114 ], [ %.055, %111 ], [ 1, %110 ], [ %.055, %108 ], [ %.055, %107 ], [ %.055, %94 ], [ %.055, %84 ], [ %.055, %83 ], [ %.055, %72 ], [ %.055, %62 ], [ %.055, %60 ], [ %.055, %59 ], [ %.055, %48 ], [ %.055, %38 ], [ %.055, %36 ], [ %.055, %25 ], [ %.055, %15 ], [ %.055, %13 ], [ %.055, %10 ]
  %.053.be = phi i32 [ %.053, %9 ], [ %.053, %429 ], [ %.053, %417 ], [ %.053, %416 ], [ %.053, %415 ], [ %.053, %414 ], [ %.053, %413 ], [ 1, %412 ], [ %.053, %393 ], [ %.053, %389 ], [ %.053, %387 ], [ %.053, %386 ], [ %.053, %385 ], [ %.053, %382 ], [ %.053, %380 ], [ %.053, %375 ], [ %.053, %373 ], [ %.053, %372 ], [ %.053, %371 ], [ %.053, %358 ], [ %.053, %348 ], [ %.053, %347 ], [ %.053, %346 ], [ %.053, %336 ], [ %.053, %334 ], [ %.053, %312 ], [ %.053, %302 ], [ %.053, %294 ], [ %.053, %292 ], [ %.053, %285 ], [ %.053, %282 ], [ %.053, %281 ], [ %.053, %271 ], [ %.053, %261 ], [ %260, %259 ], [ %.053, %258 ], [ %.053, %248 ], [ %.053, %238 ], [ %.053, %231 ], [ %.053, %229 ], [ %.053, %215 ], [ %.053, %205 ], [ %.053, %203 ], [ %.053, %189 ], [ %.053, %179 ], [ %.053, %176 ], [ %.053, %175 ], [ 1, %165 ], [ %.053, %155 ], [ %.053, %153 ], [ %.053, %152 ], [ %.053, %124 ], [ %.053, %114 ], [ %.053, %111 ], [ %.053, %110 ], [ %.053, %108 ], [ %.053, %107 ], [ %.053, %94 ], [ %.053, %84 ], [ %.053, %83 ], [ %.053, %72 ], [ %.053, %62 ], [ %.053, %60 ], [ %.053, %59 ], [ %.053, %48 ], [ %.053, %38 ], [ %.053, %36 ], [ %.053, %25 ], [ %.053, %15 ], [ %.053, %13 ], [ %.053, %10 ]
  %.051.be = phi i32 [ %.051, %9 ], [ %.051, %429 ], [ %.051, %417 ], [ 1, %416 ], [ %.051, %415 ], [ %.051, %414 ], [ %.051, %413 ], [ %.051, %412 ], [ %.051, %393 ], [ %.051, %389 ], [ %.051, %387 ], [ %.051, %386 ], [ %.051, %385 ], [ %.051, %382 ], [ %.051, %380 ], [ %.051, %375 ], [ %374, %373 ], [ %.051, %372 ], [ %.051, %371 ], [ %.051, %358 ], [ %.051, %348 ], [ %.051, %347 ], [ %.051, %346 ], [ %.051, %336 ], [ %.051, %334 ], [ %.051, %312 ], [ %.051, %302 ], [ %.051, %294 ], [ %.051, %292 ], [ %.051, %285 ], [ %.051, %282 ], [ %.051, %281 ], [ 1, %271 ], [ %.051, %261 ], [ %.051, %259 ], [ %.051, %258 ], [ %.051, %248 ], [ %.051, %238 ], [ %.051, %231 ], [ %.051, %229 ], [ %.051, %215 ], [ %.051, %205 ], [ %.051, %203 ], [ %.051, %189 ], [ %.051, %179 ], [ %.051, %176 ], [ %.051, %175 ], [ %.051, %165 ], [ %.051, %155 ], [ %.051, %153 ], [ %.051, %152 ], [ %.051, %124 ], [ %.051, %114 ], [ %.051, %111 ], [ %.051, %110 ], [ %.051, %108 ], [ %.051, %107 ], [ %.051, %94 ], [ %.051, %84 ], [ %.051, %83 ], [ %.051, %72 ], [ %.051, %62 ], [ %.051, %60 ], [ %.051, %59 ], [ %.051, %48 ], [ %.051, %38 ], [ %.051, %36 ], [ %.051, %25 ], [ %.051, %15 ], [ %.051, %13 ], [ %.051, %10 ]
  %.049.be = phi i32 [ %.049, %9 ], [ %.049, %429 ], [ %.049, %417 ], [ %.049, %416 ], [ %.049, %415 ], [ %.049, %414 ], [ %.049, %413 ], [ %.049, %412 ], [ %.049, %393 ], [ %.049, %389 ], [ %.049, %387 ], [ %.049, %386 ], [ %.049, %385 ], [ %.049, %382 ], [ %.049, %380 ], [ %.049, %375 ], [ %.049, %373 ], [ %.049, %372 ], [ %.049, %371 ], [ %.049, %358 ], [ %.049, %348 ], [ %.049, %347 ], [ %.049, %346 ], [ %.049, %336 ], [ %.049, %334 ], [ %.049, %312 ], [ %.049, %302 ], [ %.049, %294 ], [ %.049, %292 ], [ %288, %285 ], [ %.049, %282 ], [ %.049, %281 ], [ %.049, %271 ], [ %.049, %261 ], [ %.049, %259 ], [ %.049, %258 ], [ %.049, %248 ], [ %.049, %238 ], [ %.049, %231 ], [ %.049, %229 ], [ %.049, %215 ], [ %.049, %205 ], [ %.049, %203 ], [ %.049, %189 ], [ %.049, %179 ], [ %.049, %176 ], [ %.049, %175 ], [ %.049, %165 ], [ %.049, %155 ], [ %.049, %153 ], [ %.049, %152 ], [ %.049, %124 ], [ %.049, %114 ], [ %.049, %111 ], [ %.049, %110 ], [ %.049, %108 ], [ %.049, %107 ], [ %.049, %94 ], [ %.049, %84 ], [ %.049, %83 ], [ %.049, %72 ], [ %.049, %62 ], [ %.049, %60 ], [ %.049, %59 ], [ %.049, %48 ], [ %.049, %38 ], [ %.049, %36 ], [ %.049, %25 ], [ %.049, %15 ], [ %.049, %13 ], [ %.049, %10 ]
  %.047.be = phi i32 [ %.047, %9 ], [ %432, %429 ], [ %.047, %417 ], [ %.047, %416 ], [ %.047, %415 ], [ %.047, %414 ], [ %.047, %413 ], [ %.047, %412 ], [ %.047, %393 ], [ %.047, %389 ], [ %.047, %387 ], [ %.047, %386 ], [ %.047, %385 ], [ %.047, %382 ], [ %.047, %380 ], [ %.047, %375 ], [ %.047, %373 ], [ %.047, %372 ], [ %.047, %371 ], [ %361, %358 ], [ %.047, %348 ], [ %.047, %347 ], [ %.047, %346 ], [ %.047, %336 ], [ %.047, %334 ], [ %.047, %312 ], [ %.047, %302 ], [ %.047, %294 ], [ %.047, %292 ], [ %291, %285 ], [ %.047, %282 ], [ %.047, %281 ], [ %.047, %271 ], [ %.047, %261 ], [ %.047, %259 ], [ %.047, %258 ], [ %.047, %248 ], [ %.047, %238 ], [ %.047, %231 ], [ %.047, %229 ], [ %.047, %215 ], [ %.047, %205 ], [ %.047, %203 ], [ %.047, %189 ], [ %.047, %179 ], [ %.047, %176 ], [ %.047, %175 ], [ %.047, %165 ], [ %.047, %155 ], [ %.047, %153 ], [ %.047, %152 ], [ %.047, %124 ], [ %.047, %114 ], [ %.047, %111 ], [ %.047, %110 ], [ %.047, %108 ], [ %.047, %107 ], [ %.047, %94 ], [ %.047, %84 ], [ %.047, %83 ], [ %.047, %72 ], [ %.047, %62 ], [ %.047, %60 ], [ %.047, %59 ], [ %.047, %48 ], [ %.047, %38 ], [ %.047, %36 ], [ %.047, %25 ], [ %.047, %15 ], [ %.047, %13 ], [ %.047, %10 ]
  %.045.be = phi i32 [ %.045, %9 ], [ 1807103496, %429 ], [ 205842668, %417 ], [ -523145310, %416 ], [ 2061282568, %415 ], [ 845884500, %414 ], [ -604321497, %413 ], [ 1472559177, %412 ], [ 1583014409, %393 ], [ -2105467465, %389 ], [ -963345907, %387 ], [ -719438556, %386 ], [ -1620038095, %385 ], [ -1765921742, %382 ], [ -1765921742, %380 ], [ %379, %375 ], [ 525349094, %373 ], [ -1340663366, %372 ], [ 187357053, %371 ], [ %370, %358 ], [ %357, %348 ], [ -567162843, %347 ], [ 1669231700, %346 ], [ -1317706486, %336 ], [ %335, %334 ], [ %333, %312 ], [ %311, %302 ], [ %301, %294 ], [ %293, %292 ], [ 187357053, %285 ], [ %284, %282 ], [ 525349094, %281 ], [ %280, %271 ], [ %270, %261 ], [ -150686377, %259 ], [ -701410716, %258 ], [ %257, %248 ], [ %247, %238 ], [ 2062907883, %231 ], [ %230, %229 ], [ %228, %215 ], [ %214, %205 ], [ %204, %203 ], [ %202, %189 ], [ %188, %179 ], [ %178, %176 ], [ -150686377, %175 ], [ %174, %165 ], [ %164, %155 ], [ 1545763557, %153 ], [ -985247536, %152 ], [ %151, %124 ], [ %123, %114 ], [ %113, %111 ], [ 1545763557, %110 ], [ -1535165179, %108 ], [ -480053948, %107 ], [ %106, %94 ], [ %93, %84 ], [ 1956648436, %83 ], [ %82, %72 ], [ %71, %62 ], [ %61, %60 ], [ -444811809, %59 ], [ %58, %48 ], [ %47, %38 ], [ %37, %36 ], [ %35, %25 ], [ %24, %15 ], [ 1956648436, %13 ], [ %12, %10 ]
  %.0.be = phi i1 [ %.0, %9 ], [ %.0, %429 ], [ %.0, %417 ], [ %.0, %416 ], [ %.0, %415 ], [ %.0, %414 ], [ %.0, %413 ], [ %.0, %412 ], [ %.0, %393 ], [ %.0, %389 ], [ %.0, %387 ], [ %.0, %386 ], [ %.0, %385 ], [ %.0, %382 ], [ %.0, %380 ], [ %.0, %375 ], [ %.0, %373 ], [ %.0, %372 ], [ %.0, %371 ], [ %.0, %358 ], [ %.0, %348 ], [ %.0, %347 ], [ %.0, %346 ], [ %.0, %336 ], [ %.0, %334 ], [ %.0, %312 ], [ %.0, %302 ], [ %.0, %294 ], [ %.0, %292 ], [ %.0, %285 ], [ %.0, %282 ], [ %.0, %281 ], [ %.0, %271 ], [ %.0, %261 ], [ %.0, %259 ], [ %.0, %258 ], [ %.0, %248 ], [ %.0, %238 ], [ %.0, %231 ], [ %.0, %229 ], [ %.0, %215 ], [ %.0, %205 ], [ %.0, %203 ], [ %.0, %189 ], [ %.0, %179 ], [ %.0, %176 ], [ %.0, %175 ], [ %.0, %165 ], [ %.0, %155 ], [ %.0, %153 ], [ %.0, %152 ], [ %.0, %124 ], [ %.0, %114 ], [ %.0, %111 ], [ %.0, %110 ], [ %.0, %108 ], [ %.0, %107 ], [ %.0, %94 ], [ %.0, %84 ], [ %.0, %83 ], [ %.0, %72 ], [ %.0, %62 ], [ %.0, %60 ], [ %.0..0..0.41, %59 ], [ %.0, %48 ], [ %.0, %38 ], [ true, %36 ], [ %.0, %25 ], [ %.0, %15 ], [ %.0, %13 ], [ %.0, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @n, align 4
  %.not66 = icmp sgt i32 %.059, %11
  %12 = select i1 %.not66, i32 -1540922815, i32 1066770378
  br label %.backedge

13:                                               ; preds = %9
  %14 = call i32 @getchar()
  br label %.backedge

15:                                               ; preds = %9
  %16 = load i32, i32* @x.3, align 4
  %17 = load i32, i32* @y.4, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1620038095, i32 -601205290
  br label %.backedge

25:                                               ; preds = %9
  %26 = icmp slt i32 %.057, 65
  store i1 %26, i1* %5, align 1
  %27 = load i32, i32* @x.3, align 4
  %28 = load i32, i32* @y.4, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -182674204, i32 -601205290
  br label %.backedge

36:                                               ; preds = %9
  %.0..0..0.40 = load volatile i1, i1* %5, align 1
  %37 = select i1 %.0..0..0.40, i32 -444811809, i32 1835786458
  br label %.backedge

38:                                               ; preds = %9
  %39 = load i32, i32* @x.3, align 4
  %40 = load i32, i32* @y.4, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 -719438556, i32 -2037654622
  br label %.backedge

48:                                               ; preds = %9
  %49 = icmp sgt i32 %.057, 66
  store i1 %49, i1* %4, align 1
  %50 = load i32, i32* @x.3, align 4
  %51 = load i32, i32* @y.4, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -787527388, i32 -2037654622
  br label %.backedge

59:                                               ; preds = %9
  %.0..0..0.41 = load volatile i1, i1* %4, align 1
  br label %.backedge

60:                                               ; preds = %9
  %61 = select i1 %.0, i32 2058924647, i32 1872200713
  br label %.backedge

62:                                               ; preds = %9
  %63 = load i32, i32* @x.3, align 4
  %64 = load i32, i32* @y.4, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -963345907, i32 -427433279
  br label %.backedge

72:                                               ; preds = %9
  %73 = call i32 @getchar()
  %74 = load i32, i32* @x.3, align 4
  %75 = load i32, i32* @y.4, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 420211850, i32 -427433279
  br label %.backedge

83:                                               ; preds = %9
  br label %.backedge

84:                                               ; preds = %9
  %85 = load i32, i32* @x.3, align 4
  %86 = load i32, i32* @y.4, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 -2105467465, i32 209013426
  br label %.backedge

94:                                               ; preds = %9
  %95 = add i32 %.057, -65
  %96 = sext i32 %.059 to i64
  %97 = getelementptr inbounds [200050 x i32], [200050 x i32]* @d, i64 0, i64 %96
  store i32 %95, i32* %97, align 4
  %98 = load i32, i32* @x.3, align 4
  %99 = load i32, i32* @y.4, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 1341118956, i32 209013426
  br label %.backedge

107:                                              ; preds = %9
  br label %.backedge

108:                                              ; preds = %9
  %109 = add i32 %.059, 1
  br label %.backedge

110:                                              ; preds = %9
  br label %.backedge

111:                                              ; preds = %9
  %112 = load i32, i32* @m, align 4
  %.not65 = icmp sgt i32 %.055, %112
  %113 = select i1 %.not65, i32 -987716458, i32 -280404912
  br label %.backedge

114:                                              ; preds = %9
  %115 = load i32, i32* @x.3, align 4
  %116 = load i32, i32* @y.4, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 1583014409, i32 -1417558603
  br label %.backedge

124:                                              ; preds = %9
  %125 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7)
  %126 = load i32, i32* %6, align 4
  %127 = sext i32 %126 to i64
  %128 = load i32, i32* %7, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [200050 x i32], [200050 x i32]* @d, i64 0, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [200050 x [2 x i32]], [200050 x [2 x i32]]* @p, i64 0, i64 %127, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %133, align 4
  %136 = getelementptr inbounds [200050 x i32], [200050 x i32]* @d, i64 0, i64 %127
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [200050 x [2 x i32]], [200050 x [2 x i32]]* @p, i64 0, i64 %129, i64 %138
  %140 = load i32, i32* %139, align 4
  %.neg64 = add i32 %140, 1
  store i32 %.neg64, i32* %139, align 4
  call void @_Z3addii(i32 %126, i32 %128)
  %141 = load i32, i32* %7, align 4
  %142 = load i32, i32* %6, align 4
  call void @_Z3addii(i32 %141, i32 %142)
  %143 = load i32, i32* @x.3, align 4
  %144 = load i32, i32* @y.4, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 -1733592193, i32 -1417558603
  br label %.backedge

152:                                              ; preds = %9
  br label %.backedge

153:                                              ; preds = %9
  %154 = add i32 %.055, 1
  br label %.backedge

155:                                              ; preds = %9
  %156 = load i32, i32* @x.3, align 4
  %157 = load i32, i32* @y.4, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 1472559177, i32 -2031877816
  br label %.backedge

165:                                              ; preds = %9
  %166 = load i32, i32* @x.3, align 4
  %167 = load i32, i32* @y.4, align 4
  %168 = add i32 %166, -1
  %169 = mul i32 %168, %166
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 929338715, i32 -2031877816
  br label %.backedge

175:                                              ; preds = %9
  br label %.backedge

176:                                              ; preds = %9
  %177 = load i32, i32* @n, align 4
  %.not63 = icmp sgt i32 %.053, %177
  %178 = select i1 %.not63, i32 -263846759, i32 1784845399
  br label %.backedge

179:                                              ; preds = %9
  %180 = load i32, i32* @x.3, align 4
  %181 = load i32, i32* @y.4, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 -604321497, i32 1220865056
  br label %.backedge

189:                                              ; preds = %9
  %190 = sext i32 %.053 to i64
  %191 = getelementptr inbounds [200050 x [2 x i32]], [200050 x [2 x i32]]* @p, i64 0, i64 %190, i64 0
  %192 = load i32, i32* %191, align 8
  %193 = icmp ne i32 %192, 0
  store i1 %193, i1* %3, align 1
  %194 = load i32, i32* @x.3, align 4
  %195 = load i32, i32* @y.4, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 468211666, i32 1220865056
  br label %.backedge

203:                                              ; preds = %9
  %.0..0..0.42 = load volatile i1, i1* %3, align 1
  %204 = select i1 %.0..0..0.42, i32 -787266528, i32 -2139200874
  br label %.backedge

205:                                              ; preds = %9
  %206 = load i32, i32* @x.3, align 4
  %207 = load i32, i32* @y.4, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 845884500, i32 -1907961154
  br label %.backedge

215:                                              ; preds = %9
  %216 = sext i32 %.053 to i64
  %217 = getelementptr inbounds [200050 x [2 x i32]], [200050 x [2 x i32]]* @p, i64 0, i64 %216, i64 1
  %218 = load i32, i32* %217, align 4
  %219 = icmp ne i32 %218, 0
  store i1 %219, i1* %2, align 1
  %220 = load i32, i32* @x.3, align 4
  %221 = load i32, i32* @y.4, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 1798978520, i32 -1907961154
  br label %.backedge

229:                                              ; preds = %9
  %.0..0..0.43 = load volatile i1, i1* %2, align 1
  %230 = select i1 %.0..0..0.43, i32 2062907883, i32 -2139200874
  br label %.backedge

231:                                              ; preds = %9
  %232 = load i32, i32* @t, align 4
  %233 = add i32 %232, 1
  store i32 %233, i32* @t, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [200050 x i32], [200050 x i32]* @q, i64 0, i64 %234
  store i32 %.053, i32* %235, align 4
  %236 = sext i32 %.053 to i64
  %237 = getelementptr inbounds [200050 x i32], [200050 x i32]* @vis, i64 0, i64 %236
  store i32 1, i32* %237, align 4
  br label %.backedge

238:                                              ; preds = %9
  %239 = load i32, i32* @x.3, align 4
  %240 = load i32, i32* @y.4, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 2061282568, i32 -680026206
  br label %.backedge

248:                                              ; preds = %9
  %249 = load i32, i32* @x.3, align 4
  %250 = load i32, i32* @y.4, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 -432292361, i32 -680026206
  br label %.backedge

258:                                              ; preds = %9
  br label %.backedge

259:                                              ; preds = %9
  %260 = add i32 %.053, 1
  br label %.backedge

261:                                              ; preds = %9
  %262 = load i32, i32* @x.3, align 4
  %263 = load i32, i32* @y.4, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 -523145310, i32 -180710488
  br label %.backedge

271:                                              ; preds = %9
  %272 = load i32, i32* @x.3, align 4
  %273 = load i32, i32* @y.4, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 -2073026103, i32 -180710488
  br label %.backedge

281:                                              ; preds = %9
  br label %.backedge

282:                                              ; preds = %9
  %283 = load i32, i32* @t, align 4
  %.not62 = icmp sgt i32 %.051, %283
  %284 = select i1 %.not62, i32 -248841591, i32 -20653686
  br label %.backedge

285:                                              ; preds = %9
  %286 = sext i32 %.051 to i64
  %287 = getelementptr inbounds [200050 x i32], [200050 x i32]* @q, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [200050 x i32], [200050 x i32]* @head, i64 0, i64 %289
  %291 = load i32, i32* %290, align 4
  br label %.backedge

292:                                              ; preds = %9
  %.not61 = icmp eq i32 %.047, 0
  %293 = select i1 %.not61, i32 614724883, i32 1566473549
  br label %.backedge

294:                                              ; preds = %9
  %295 = sext i32 %.047 to i64
  %296 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %295, i32 0
  %297 = load i32, i32* %296, align 8
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds [200050 x i32], [200050 x i32]* @vis, i64 0, i64 %298
  %300 = load i32, i32* %299, align 4
  %.not = icmp eq i32 %300, 0
  %301 = select i1 %.not, i32 1965755840, i32 1669231700
  br label %.backedge

302:                                              ; preds = %9
  %303 = load i32, i32* @x.3, align 4
  %304 = load i32, i32* @y.4, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 205842668, i32 -771994796
  br label %.backedge

312:                                              ; preds = %9
  %313 = sext i32 %.047 to i64
  %314 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %313, i32 0
  %315 = load i32, i32* %314, align 8
  %316 = sext i32 %315 to i64
  %317 = sext i32 %.049 to i64
  %318 = getelementptr inbounds [200050 x i32], [200050 x i32]* @d, i64 0, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds [200050 x [2 x i32]], [200050 x [2 x i32]]* @p, i64 0, i64 %316, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = add i32 %322, -1
  store i32 %323, i32* %321, align 4
  %324 = icmp ne i32 %323, 0
  store i1 %324, i1* %1, align 1
  %325 = load i32, i32* @x.3, align 4
  %326 = load i32, i32* @y.4, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 1658992625, i32 -771994796
  br label %.backedge

334:                                              ; preds = %9
  %.0..0..0.44 = load volatile i1, i1* %1, align 1
  %335 = select i1 %.0..0..0.44, i32 -1317706486, i32 -998218675
  br label %.backedge

336:                                              ; preds = %9
  %337 = sext i32 %.047 to i64
  %338 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %337, i32 0
  %339 = load i32, i32* %338, align 8
  %340 = load i32, i32* @t, align 4
  %341 = add i32 %340, 1
  store i32 %341, i32* @t, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [200050 x i32], [200050 x i32]* @q, i64 0, i64 %342
  store i32 %339, i32* %343, align 4
  %344 = sext i32 %339 to i64
  %345 = getelementptr inbounds [200050 x i32], [200050 x i32]* @vis, i64 0, i64 %344
  store i32 1, i32* %345, align 4
  br label %.backedge

346:                                              ; preds = %9
  br label %.backedge

347:                                              ; preds = %9
  br label %.backedge

348:                                              ; preds = %9
  %349 = load i32, i32* @x.3, align 4
  %350 = load i32, i32* @y.4, align 4
  %351 = add i32 %349, -1
  %352 = mul i32 %351, %349
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %355, %354
  %357 = select i1 %356, i32 1807103496, i32 2041087994
  br label %.backedge

358:                                              ; preds = %9
  %359 = sext i32 %.047 to i64
  %360 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %359, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = load i32, i32* @x.3, align 4
  %363 = load i32, i32* @y.4, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 1683855201, i32 2041087994
  br label %.backedge

371:                                              ; preds = %9
  br label %.backedge

372:                                              ; preds = %9
  br label %.backedge

373:                                              ; preds = %9
  %374 = add i32 %.051, 1
  br label %.backedge

375:                                              ; preds = %9
  %376 = load i32, i32* @t, align 4
  %377 = load i32, i32* @n, align 4
  %378 = icmp slt i32 %376, %377
  %379 = select i1 %378, i32 509896178, i32 -1304754852
  br label %.backedge

380:                                              ; preds = %9
  %381 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

382:                                              ; preds = %9
  %383 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

384:                                              ; preds = %9
  ret i32 0

385:                                              ; preds = %9
  br label %.backedge

386:                                              ; preds = %9
  br label %.backedge

387:                                              ; preds = %9
  %388 = call i32 @getchar()
  br label %.backedge

389:                                              ; preds = %9
  %390 = add i32 %.057, -65
  %391 = sext i32 %.059 to i64
  %392 = getelementptr inbounds [200050 x i32], [200050 x i32]* @d, i64 0, i64 %391
  store i32 %390, i32* %392, align 4
  br label %.backedge

393:                                              ; preds = %9
  %394 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7)
  %395 = load i32, i32* %6, align 4
  %396 = sext i32 %395 to i64
  %397 = load i32, i32* %7, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [200050 x i32], [200050 x i32]* @d, i64 0, i64 %398
  %400 = load i32, i32* %399, align 4
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds [200050 x [2 x i32]], [200050 x [2 x i32]]* @p, i64 0, i64 %396, i64 %401
  %403 = load i32, i32* %402, align 4
  %.neg = add i32 %403, 1
  store i32 %.neg, i32* %402, align 4
  %404 = getelementptr inbounds [200050 x i32], [200050 x i32]* @d, i64 0, i64 %396
  %405 = load i32, i32* %404, align 4
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds [200050 x [2 x i32]], [200050 x [2 x i32]]* @p, i64 0, i64 %398, i64 %406
  %408 = load i32, i32* %407, align 4
  %409 = add i32 %408, 1
  store i32 %409, i32* %407, align 4
  call void @_Z3addii(i32 %395, i32 %397)
  %410 = load i32, i32* %7, align 4
  %411 = load i32, i32* %6, align 4
  call void @_Z3addii(i32 %410, i32 %411)
  br label %.backedge

412:                                              ; preds = %9
  br label %.backedge

413:                                              ; preds = %9
  br label %.backedge

414:                                              ; preds = %9
  br label %.backedge

415:                                              ; preds = %9
  br label %.backedge

416:                                              ; preds = %9
  br label %.backedge

417:                                              ; preds = %9
  %418 = sext i32 %.047 to i64
  %419 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %418, i32 0
  %420 = load i32, i32* %419, align 8
  %421 = sext i32 %420 to i64
  %422 = sext i32 %.049 to i64
  %423 = getelementptr inbounds [200050 x i32], [200050 x i32]* @d, i64 0, i64 %422
  %424 = load i32, i32* %423, align 4
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds [200050 x [2 x i32]], [200050 x [2 x i32]]* @p, i64 0, i64 %421, i64 %425
  %427 = load i32, i32* %426, align 4
  %428 = add i32 %427, -1
  store i32 %428, i32* %426, align 4
  br label %.backedge

429:                                              ; preds = %9
  %430 = sext i32 %.047 to i64
  %431 = getelementptr inbounds [400050 x %struct.r], [400050 x %struct.r]* @e, i64 0, i64 %430, i32 1
  %432 = load i32, i32* %431, align 4
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
