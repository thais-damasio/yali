; ModuleID = 'build_ollvm/programs/p03880/s299866068.ll'
source_filename = "Project_CodeNet_C++1400/p03880/s299866068.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main(i32 %0, i8** nocapture readnone %1) local_unnamed_addr #0 {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca [100000 x i32], align 16
  %9 = alloca [100000 x i32], align 16
  %10 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %7)
  %11 = bitcast [100000 x i32]* %9 to i8*
  br label %12

12:                                               ; preds = %.backedge, %2
  %.059 = phi i32 [ 0, %2 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %2 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %2 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %2 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %2 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %2 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %2 ], [ %.047.be, %.backedge ]
  %.045 = phi i32 [ undef, %2 ], [ %.045.be, %.backedge ]
  %.043 = phi i32 [ undef, %2 ], [ %.043.be, %.backedge ]
  %.041 = phi i32 [ undef, %2 ], [ %.041.be, %.backedge ]
  %.0 = phi i32 [ 2068966064, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 2068966064, label %13
    i32 635357149, label %17
    i32 -1556418055, label %21
    i32 520059680, label %31
    i32 -1770540384, label %42
    i32 1777552666, label %43
    i32 -1662316751, label %44
    i32 -1727992055, label %47
    i32 -1740905664, label %50
    i32 -1577808798, label %54
    i32 -979520165, label %59
    i32 1661124252, label %61
    i32 -54145574, label %71
    i32 1162916056, label %83
    i32 -1712928598, label %85
    i32 -1072139717, label %95
    i32 -829445939, label %105
    i32 -361338974, label %106
    i32 -523158171, label %110
    i32 -164465842, label %117
    i32 1365578460, label %127
    i32 -1274411208, label %139
    i32 -1418828543, label %141
    i32 -458451721, label %151
    i32 558531938, label %162
    i32 1928189874, label %164
    i32 787479471, label %165
    i32 -1953056474, label %166
    i32 1430301410, label %176
    i32 -431859422, label %186
    i32 214485201, label %187
    i32 -357157485, label %197
    i32 -467050152, label %208
    i32 1844098677, label %210
    i32 -1501903285, label %216
    i32 1897328580, label %217
    i32 2090759461, label %218
    i32 -471568994, label %219
    i32 363727939, label %221
    i32 694263176, label %231
    i32 283442541, label %242
    i32 419678158, label %243
    i32 -1788631091, label %245
    i32 -312045955, label %246
    i32 -598407222, label %247
    i32 -514305094, label %248
    i32 -892646525, label %249
    i32 -97795621, label %251
    i32 1022081468, label %252
  ]

.backedge:                                        ; preds = %12, %252, %251, %249, %248, %247, %246, %245, %243, %231, %221, %219, %218, %217, %216, %210, %208, %197, %187, %186, %176, %166, %165, %164, %162, %151, %141, %139, %127, %117, %110, %106, %105, %95, %85, %83, %71, %61, %59, %54, %50, %47, %44, %43, %42, %31, %21, %17, %13
  %.059.be = phi i32 [ %.059, %12 ], [ %.059, %252 ], [ %.059, %251 ], [ %.059, %249 ], [ %.059, %248 ], [ %.059, %247 ], [ %.059, %246 ], [ %.059, %245 ], [ %244, %243 ], [ %.059, %231 ], [ %.059, %221 ], [ %.059, %219 ], [ %.059, %218 ], [ %.059, %217 ], [ %.059, %216 ], [ %.059, %210 ], [ %.059, %208 ], [ %.059, %197 ], [ %.059, %187 ], [ %.059, %186 ], [ %.059, %176 ], [ %.059, %166 ], [ %.059, %165 ], [ %.059, %164 ], [ %.059, %162 ], [ %.059, %151 ], [ %.059, %141 ], [ %.059, %139 ], [ %.059, %127 ], [ %.059, %117 ], [ %.059, %110 ], [ %.059, %106 ], [ %.059, %105 ], [ %.059, %95 ], [ %.059, %85 ], [ %.059, %83 ], [ %.059, %71 ], [ %.059, %61 ], [ %.059, %59 ], [ %.059, %54 ], [ %.059, %50 ], [ %.059, %47 ], [ %.059, %44 ], [ %.059, %43 ], [ %.059, %42 ], [ %32, %31 ], [ %.059, %21 ], [ %.059, %17 ], [ %.059, %13 ]
  %.057.be = phi i32 [ %.057, %12 ], [ %.057, %252 ], [ %.057, %251 ], [ %.057, %249 ], [ %.057, %248 ], [ %.057, %247 ], [ %.057, %246 ], [ %.057, %245 ], [ %.057, %243 ], [ %.057, %231 ], [ %.057, %221 ], [ %.057, %219 ], [ %.057, %218 ], [ %.057, %217 ], [ -1, %216 ], [ %215, %210 ], [ %.057, %208 ], [ %.057, %197 ], [ %.057, %187 ], [ %.057, %186 ], [ %.057, %176 ], [ %.057, %166 ], [ %.057, %165 ], [ %.057, %164 ], [ %.057, %162 ], [ %.057, %151 ], [ %.057, %141 ], [ %.057, %139 ], [ %.057, %127 ], [ %.057, %117 ], [ %.057, %110 ], [ %.057, %106 ], [ %.057, %105 ], [ %.057, %95 ], [ %.057, %85 ], [ %.057, %83 ], [ %.057, %71 ], [ %.057, %61 ], [ %.057, %59 ], [ %.057, %54 ], [ %.057, %50 ], [ %.057, %47 ], [ %.057, %44 ], [ 0, %43 ], [ %.057, %42 ], [ %.057, %31 ], [ %.057, %21 ], [ %.057, %17 ], [ %.057, %13 ]
  %.055.be = phi i32 [ %.055, %12 ], [ %.055, %252 ], [ %.055, %251 ], [ %.055, %249 ], [ %.055, %248 ], [ %.055, %247 ], [ %.055, %246 ], [ %.055, %245 ], [ %.055, %243 ], [ %.055, %231 ], [ %.055, %221 ], [ %220, %219 ], [ %.055, %218 ], [ %.055, %217 ], [ %.055, %216 ], [ %.055, %210 ], [ %.055, %208 ], [ %.055, %197 ], [ %.055, %187 ], [ %.055, %186 ], [ %.055, %176 ], [ %.055, %166 ], [ %.055, %165 ], [ %.055, %164 ], [ %.055, %162 ], [ %.055, %151 ], [ %.055, %141 ], [ %.055, %139 ], [ %.055, %127 ], [ %.055, %117 ], [ %.055, %110 ], [ %.055, %106 ], [ %.055, %105 ], [ %.055, %95 ], [ %.055, %85 ], [ %.055, %83 ], [ %.055, %71 ], [ %.055, %61 ], [ %.055, %59 ], [ %.055, %54 ], [ %.055, %50 ], [ %.055, %47 ], [ %.055, %44 ], [ 29, %43 ], [ %.055, %42 ], [ %.055, %31 ], [ %.055, %21 ], [ %.055, %17 ], [ %.055, %13 ]
  %.053.be = phi i32 [ %.053, %12 ], [ %.053, %252 ], [ %.053, %251 ], [ %.053, %249 ], [ %.053, %248 ], [ %.053, %247 ], [ %.053, %246 ], [ %.053, %245 ], [ %.053, %243 ], [ %.053, %231 ], [ %.053, %221 ], [ %.053, %219 ], [ %.053, %218 ], [ %.053, %217 ], [ %.053, %216 ], [ %.053, %210 ], [ %.053, %208 ], [ %.053, %197 ], [ %.053, %187 ], [ %.053, %186 ], [ %.053, %176 ], [ %.053, %166 ], [ %.053, %165 ], [ %.053, %164 ], [ %.053, %162 ], [ %.053, %151 ], [ %.053, %141 ], [ %.053, %139 ], [ %.053, %127 ], [ %.053, %117 ], [ %.053, %110 ], [ %.053, %106 ], [ %.053, %105 ], [ %.053, %95 ], [ %.053, %85 ], [ %.053, %83 ], [ %.053, %71 ], [ %.053, %61 ], [ %.053, %59 ], [ %.053, %54 ], [ %.053, %50 ], [ %48, %47 ], [ %.053, %44 ], [ %.053, %43 ], [ %.053, %42 ], [ %.053, %31 ], [ %.053, %21 ], [ %.053, %17 ], [ %.053, %13 ]
  %.051.be = phi i32 [ %.051, %12 ], [ %.051, %252 ], [ %.051, %251 ], [ %.051, %249 ], [ %.051, %248 ], [ %.051, %247 ], [ %.051, %246 ], [ %.051, %245 ], [ %.051, %243 ], [ %.051, %231 ], [ %.051, %221 ], [ %.051, %219 ], [ %.051, %218 ], [ %.051, %217 ], [ %.051, %216 ], [ %.051, %210 ], [ %.051, %208 ], [ %.051, %197 ], [ %.051, %187 ], [ %.051, %186 ], [ %.051, %176 ], [ %.051, %166 ], [ %.051, %165 ], [ %.051, %164 ], [ %.051, %162 ], [ %.051, %151 ], [ %.051, %141 ], [ %.051, %139 ], [ %.051, %127 ], [ %.051, %117 ], [ %.051, %110 ], [ %.051, %106 ], [ %.051, %105 ], [ %.051, %95 ], [ %.051, %85 ], [ %.051, %83 ], [ %.051, %71 ], [ %.051, %61 ], [ %.051, %59 ], [ %.051, %54 ], [ %.051, %50 ], [ %49, %47 ], [ %.051, %44 ], [ %.051, %43 ], [ %.051, %42 ], [ %.051, %31 ], [ %.051, %21 ], [ %.051, %17 ], [ %.051, %13 ]
  %.049.be = phi i32 [ %.049, %12 ], [ %.049, %252 ], [ %.049, %251 ], [ %.049, %249 ], [ %.049, %248 ], [ %.049, %247 ], [ %.049, %246 ], [ %.049, %245 ], [ %.049, %243 ], [ %.049, %231 ], [ %.049, %221 ], [ %.049, %219 ], [ %.049, %218 ], [ %.049, %217 ], [ %.049, %216 ], [ %.049, %210 ], [ %.049, %208 ], [ %.049, %197 ], [ %.049, %187 ], [ %.049, %186 ], [ %.049, %176 ], [ %.049, %166 ], [ %.049, %165 ], [ %.049, %164 ], [ %.049, %162 ], [ %.049, %151 ], [ %.049, %141 ], [ %.049, %139 ], [ %.049, %127 ], [ %.049, %117 ], [ %.049, %110 ], [ %.049, %106 ], [ %.049, %105 ], [ %.049, %95 ], [ %.049, %85 ], [ %.049, %83 ], [ %.049, %71 ], [ %.049, %61 ], [ %.049, %59 ], [ %58, %54 ], [ %.049, %50 ], [ 0, %47 ], [ %.049, %44 ], [ %.049, %43 ], [ %.049, %42 ], [ %.049, %31 ], [ %.049, %21 ], [ %.049, %17 ], [ %.049, %13 ]
  %.047.be = phi i32 [ %.047, %12 ], [ %.047, %252 ], [ %.047, %251 ], [ %.047, %249 ], [ %.047, %248 ], [ %.047, %247 ], [ %.047, %246 ], [ %.047, %245 ], [ %.047, %243 ], [ %.047, %231 ], [ %.047, %221 ], [ %.047, %219 ], [ %.047, %218 ], [ %.047, %217 ], [ %.047, %216 ], [ %.047, %210 ], [ %.047, %208 ], [ %.047, %197 ], [ %.047, %187 ], [ %.047, %186 ], [ %.047, %176 ], [ %.047, %166 ], [ %.047, %165 ], [ %.047, %164 ], [ %.047, %162 ], [ %.047, %151 ], [ %.047, %141 ], [ %.047, %139 ], [ %.047, %127 ], [ %.047, %117 ], [ %.047, %110 ], [ %.047, %106 ], [ %.047, %105 ], [ %.047, %95 ], [ %.047, %85 ], [ %.047, %83 ], [ %.047, %71 ], [ %.047, %61 ], [ %60, %59 ], [ %.047, %54 ], [ %.047, %50 ], [ 0, %47 ], [ %.047, %44 ], [ %.047, %43 ], [ %.047, %42 ], [ %.047, %31 ], [ %.047, %21 ], [ %.047, %17 ], [ %.047, %13 ]
  %.045.be = phi i32 [ %.045, %12 ], [ %.045, %252 ], [ %.045, %251 ], [ %.045, %249 ], [ %.045, %248 ], [ %.045, %247 ], [ -1, %246 ], [ %.045, %245 ], [ %.045, %243 ], [ %.045, %231 ], [ %.045, %221 ], [ %.045, %219 ], [ %.045, %218 ], [ %.045, %217 ], [ %.045, %216 ], [ %.045, %210 ], [ %.045, %208 ], [ %.045, %197 ], [ %.045, %187 ], [ %.045, %186 ], [ %.045, %176 ], [ %.045, %166 ], [ %.045, %165 ], [ %.043, %164 ], [ %.045, %162 ], [ %.045, %151 ], [ %.045, %141 ], [ %.045, %139 ], [ %.045, %127 ], [ %.045, %117 ], [ %.045, %110 ], [ %.045, %106 ], [ %.045, %105 ], [ -1, %95 ], [ %.045, %85 ], [ %.045, %83 ], [ %.045, %71 ], [ %.045, %61 ], [ %.045, %59 ], [ %.045, %54 ], [ %.045, %50 ], [ %.045, %47 ], [ %.045, %44 ], [ %.045, %43 ], [ %.045, %42 ], [ %.045, %31 ], [ %.045, %21 ], [ %.045, %17 ], [ %.045, %13 ]
  %.043.be = phi i32 [ %.043, %12 ], [ %.043, %252 ], [ %.043, %251 ], [ %250, %249 ], [ %.043, %248 ], [ %.043, %247 ], [ 0, %246 ], [ %.043, %245 ], [ %.043, %243 ], [ %.043, %231 ], [ %.043, %221 ], [ %.043, %219 ], [ %.043, %218 ], [ %.043, %217 ], [ %.043, %216 ], [ %.043, %210 ], [ %.043, %208 ], [ %.043, %197 ], [ %.043, %187 ], [ %.043, %186 ], [ %.neg61, %176 ], [ %.043, %166 ], [ %.043, %165 ], [ %.043, %164 ], [ %.043, %162 ], [ %.043, %151 ], [ %.043, %141 ], [ %.043, %139 ], [ %.043, %127 ], [ %.043, %117 ], [ %.043, %110 ], [ %.043, %106 ], [ %.043, %105 ], [ 0, %95 ], [ %.043, %85 ], [ %.043, %83 ], [ %.043, %71 ], [ %.043, %61 ], [ %.043, %59 ], [ %.043, %54 ], [ %.043, %50 ], [ %.043, %47 ], [ %.043, %44 ], [ %.043, %43 ], [ %.043, %42 ], [ %.043, %31 ], [ %.043, %21 ], [ %.043, %17 ], [ %.043, %13 ]
  %.041.be = phi i32 [ %.041, %12 ], [ %.041, %252 ], [ %.041, %251 ], [ %.041, %249 ], [ %.041, %248 ], [ %.041, %247 ], [ %.041, %246 ], [ %.041, %245 ], [ %.041, %243 ], [ %.041, %231 ], [ %.041, %221 ], [ %.041, %219 ], [ %.041, %218 ], [ %.041, %217 ], [ %.041, %216 ], [ %.041, %210 ], [ %.041, %208 ], [ %.041, %197 ], [ %.041, %187 ], [ %.041, %186 ], [ %.041, %176 ], [ %.041, %166 ], [ %.041, %165 ], [ %.041, %164 ], [ %.041, %162 ], [ %.041, %151 ], [ %.041, %141 ], [ %.041, %139 ], [ %.041, %127 ], [ %.041, %117 ], [ %113, %110 ], [ %.041, %106 ], [ %.041, %105 ], [ %.041, %95 ], [ %.041, %85 ], [ %.041, %83 ], [ %.041, %71 ], [ %.041, %61 ], [ %.041, %59 ], [ %.041, %54 ], [ %.041, %50 ], [ %.041, %47 ], [ %.041, %44 ], [ %.041, %43 ], [ %.041, %42 ], [ %.041, %31 ], [ %.041, %21 ], [ %.041, %17 ], [ %.041, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ 694263176, %252 ], [ -357157485, %251 ], [ 1430301410, %249 ], [ -458451721, %248 ], [ 1365578460, %247 ], [ -1072139717, %246 ], [ -54145574, %245 ], [ 520059680, %243 ], [ %241, %231 ], [ %230, %221 ], [ -1662316751, %219 ], [ -471568994, %218 ], [ 2090759461, %217 ], [ 363727939, %216 ], [ 1897328580, %210 ], [ %209, %208 ], [ %207, %197 ], [ %196, %187 ], [ -361338974, %186 ], [ %185, %176 ], [ %175, %166 ], [ -1953056474, %165 ], [ 214485201, %164 ], [ %163, %162 ], [ %161, %151 ], [ %150, %141 ], [ %140, %139 ], [ %138, %127 ], [ %126, %117 ], [ %116, %110 ], [ %109, %106 ], [ -361338974, %105 ], [ %104, %95 ], [ %94, %85 ], [ %84, %83 ], [ %82, %71 ], [ %70, %61 ], [ -1740905664, %59 ], [ -979520165, %54 ], [ %53, %50 ], [ -1740905664, %47 ], [ %46, %44 ], [ -1662316751, %43 ], [ 2068966064, %42 ], [ %41, %31 ], [ %30, %21 ], [ -1556418055, %17 ], [ %16, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* %7, align 4
  %15 = icmp slt i32 %.059, %14
  %16 = select i1 %15, i32 635357149, i32 1777552666
  br label %.backedge

17:                                               ; preds = %12
  %18 = sext i32 %.059 to i64
  %19 = getelementptr inbounds [100000 x i32], [100000 x i32]* %8, i64 0, i64 %18
  %20 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %19)
  br label %.backedge

21:                                               ; preds = %12
  %22 = load i32, i32* @x, align 4
  %23 = load i32, i32* @y, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 520059680, i32 419678158
  br label %.backedge

31:                                               ; preds = %12
  %32 = add i32 %.059, 1
  %33 = load i32, i32* @x, align 4
  %34 = load i32, i32* @y, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 -1770540384, i32 419678158
  br label %.backedge

42:                                               ; preds = %12
  br label %.backedge

43:                                               ; preds = %12
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(400000) %11, i8 0, i64 400000, i1 false)
  br label %.backedge

44:                                               ; preds = %12
  %45 = icmp sgt i32 %.055, -1
  %46 = select i1 %45, i32 -1727992055, i32 363727939
  br label %.backedge

47:                                               ; preds = %12
  %48 = shl nuw i32 1, %.055
  %49 = add i32 %48, -1
  br label %.backedge

50:                                               ; preds = %12
  %51 = load i32, i32* %7, align 4
  %52 = icmp slt i32 %.047, %51
  %53 = select i1 %52, i32 -1577808798, i32 1661124252
  br label %.backedge

54:                                               ; preds = %12
  %55 = sext i32 %.047 to i64
  %56 = getelementptr inbounds [100000 x i32], [100000 x i32]* %8, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = xor i32 %57, %.049
  br label %.backedge

59:                                               ; preds = %12
  %60 = add i32 %.047, 1
  br label %.backedge

61:                                               ; preds = %12
  %62 = load i32, i32* @x, align 4
  %63 = load i32, i32* @y, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 -54145574, i32 -1788631091
  br label %.backedge

71:                                               ; preds = %12
  %72 = and i32 %.049, %.053
  %73 = icmp ne i32 %72, 0
  store i1 %73, i1* %6, align 1
  %74 = load i32, i32* @x, align 4
  %75 = load i32, i32* @y, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 1162916056, i32 -1788631091
  br label %.backedge

83:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %84 = select i1 %.0..0..0., i32 -1712928598, i32 2090759461
  br label %.backedge

85:                                               ; preds = %12
  %86 = load i32, i32* @x, align 4
  %87 = load i32, i32* @y, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 -1072139717, i32 -312045955
  br label %.backedge

95:                                               ; preds = %12
  %96 = load i32, i32* @x, align 4
  %97 = load i32, i32* @y, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 -829445939, i32 -312045955
  br label %.backedge

105:                                              ; preds = %12
  br label %.backedge

106:                                              ; preds = %12
  %107 = load i32, i32* %7, align 4
  %108 = icmp slt i32 %.043, %107
  %109 = select i1 %108, i32 -523158171, i32 214485201
  br label %.backedge

110:                                              ; preds = %12
  %111 = sext i32 %.043 to i64
  %112 = getelementptr inbounds [100000 x i32], [100000 x i32]* %8, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds [100000 x i32], [100000 x i32]* %9, i64 0, i64 %111
  %115 = load i32, i32* %114, align 4
  %.not = icmp eq i32 %115, 0
  %116 = select i1 %.not, i32 -164465842, i32 787479471
  br label %.backedge

117:                                              ; preds = %12
  %118 = load i32, i32* @x, align 4
  %119 = load i32, i32* @y, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 1365578460, i32 -598407222
  br label %.backedge

127:                                              ; preds = %12
  %128 = and i32 %.041, %.053
  %129 = icmp ne i32 %128, 0
  store i1 %129, i1* %5, align 1
  %130 = load i32, i32* @x, align 4
  %131 = load i32, i32* @y, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -1274411208, i32 -598407222
  br label %.backedge

139:                                              ; preds = %12
  %.0..0..0.38 = load volatile i1, i1* %5, align 1
  %140 = select i1 %.0..0..0.38, i32 -1418828543, i32 787479471
  br label %.backedge

141:                                              ; preds = %12
  %142 = load i32, i32* @x, align 4
  %143 = load i32, i32* @y, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -458451721, i32 -514305094
  br label %.backedge

151:                                              ; preds = %12
  %.demorgan = and i32 %.041, %.051
  %152 = icmp eq i32 %.demorgan, 0
  store i1 %152, i1* %4, align 1
  %153 = load i32, i32* @x, align 4
  %154 = load i32, i32* @y, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 558531938, i32 -514305094
  br label %.backedge

162:                                              ; preds = %12
  %.0..0..0.39 = load volatile i1, i1* %4, align 1
  %163 = select i1 %.0..0..0.39, i32 1928189874, i32 787479471
  br label %.backedge

164:                                              ; preds = %12
  br label %.backedge

165:                                              ; preds = %12
  br label %.backedge

166:                                              ; preds = %12
  %167 = load i32, i32* @x, align 4
  %168 = load i32, i32* @y, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 1430301410, i32 -892646525
  br label %.backedge

176:                                              ; preds = %12
  %.neg61 = add i32 %.043, 1
  %177 = load i32, i32* @x, align 4
  %178 = load i32, i32* @y, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 -431859422, i32 -892646525
  br label %.backedge

186:                                              ; preds = %12
  br label %.backedge

187:                                              ; preds = %12
  %188 = load i32, i32* @x, align 4
  %189 = load i32, i32* @y, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 -357157485, i32 -97795621
  br label %.backedge

197:                                              ; preds = %12
  %198 = icmp sgt i32 %.045, -1
  store i1 %198, i1* %3, align 1
  %199 = load i32, i32* @x, align 4
  %200 = load i32, i32* @y, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 -467050152, i32 -97795621
  br label %.backedge

208:                                              ; preds = %12
  %.0..0..0.40 = load volatile i1, i1* %3, align 1
  %209 = select i1 %.0..0..0.40, i32 1844098677, i32 -1501903285
  br label %.backedge

210:                                              ; preds = %12
  %211 = sext i32 %.045 to i64
  %212 = getelementptr inbounds [100000 x i32], [100000 x i32]* %8, i64 0, i64 %211
  %213 = load i32, i32* %212, align 4
  %.neg = add i32 %213, -1
  store i32 %.neg, i32* %212, align 4
  %214 = getelementptr inbounds [100000 x i32], [100000 x i32]* %9, i64 0, i64 %211
  store i32 1, i32* %214, align 4
  %215 = add i32 %.057, 1
  br label %.backedge

216:                                              ; preds = %12
  br label %.backedge

217:                                              ; preds = %12
  br label %.backedge

218:                                              ; preds = %12
  br label %.backedge

219:                                              ; preds = %12
  %220 = add i32 %.055, -1
  br label %.backedge

221:                                              ; preds = %12
  %222 = load i32, i32* @x, align 4
  %223 = load i32, i32* @y, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 694263176, i32 1022081468
  br label %.backedge

231:                                              ; preds = %12
  %232 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %.057)
  %233 = load i32, i32* @x, align 4
  %234 = load i32, i32* @y, align 4
  %235 = add i32 %233, -1
  %236 = mul i32 %235, %233
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %239, %238
  %241 = select i1 %240, i32 283442541, i32 1022081468
  br label %.backedge

242:                                              ; preds = %12
  ret i32 0

243:                                              ; preds = %12
  %244 = add i32 %.059, 1
  br label %.backedge

245:                                              ; preds = %12
  br label %.backedge

246:                                              ; preds = %12
  br label %.backedge

247:                                              ; preds = %12
  br label %.backedge

248:                                              ; preds = %12
  br label %.backedge

249:                                              ; preds = %12
  %250 = add i32 %.043, 1
  br label %.backedge

251:                                              ; preds = %12
  br label %.backedge

252:                                              ; preds = %12
  %253 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %.057)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
