; ModuleID = 'build_ollvm/programs/p03574/s044244244.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s044244244.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s044244244.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -964676824, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -964676824, label %11
    i32 -1715484530, label %14
    i32 1478248974, label %25
    i32 1512510363, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1715484530, i32 1512510363
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 1478248974, i32 1512510363
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1715484530, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %11)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %13, i32* nonnull dereferenceable(4) %12)
  %15 = load i32, i32* %11, align 4
  %16 = zext i32 %15 to i64
  %17 = load i32, i32* %12, align 4
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %10, align 8
  %.0..0..0.76 = load volatile i64, i64* %10, align 8
  %19 = mul nuw i64 %.0..0..0.76, %16
  %20 = alloca i8, i64 %19, align 16
  br label %21

21:                                               ; preds = %.backedge, %0
  %.0134 = phi i32 [ 0, %0 ], [ %.0134.be, %.backedge ]
  %.0132 = phi i32 [ undef, %0 ], [ %.0132.be, %.backedge ]
  %.0130 = phi i32 [ undef, %0 ], [ %.0130.be, %.backedge ]
  %.0128 = phi i32 [ undef, %0 ], [ %.0128.be, %.backedge ]
  %.0126 = phi i32 [ undef, %0 ], [ %.0126.be, %.backedge ]
  %.0124 = phi i32 [ undef, %0 ], [ %.0124.be, %.backedge ]
  %.0122 = phi i32 [ undef, %0 ], [ %.0122.be, %.backedge ]
  %.0 = phi i32 [ -140257920, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -140257920, label %22
    i32 892906997, label %32
    i32 -1230670662, label %44
    i32 1497519536, label %46
    i32 -524308920, label %56
    i32 1641309699, label %66
    i32 1701728498, label %67
    i32 217159577, label %71
    i32 -842743340, label %77
    i32 1142318253, label %87
    i32 1869454632, label %97
    i32 -127610925, label %98
    i32 -1542100382, label %99
    i32 296253103, label %101
    i32 2136380667, label %102
    i32 651198867, label %106
    i32 387359018, label %116
    i32 937064748, label %126
    i32 1773084950, label %127
    i32 -212474545, label %131
    i32 -643805758, label %139
    i32 1481821004, label %148
    i32 -1342160090, label %150
    i32 534864032, label %160
    i32 -1178703925, label %170
    i32 948813584, label %171
    i32 1058304274, label %180
    i32 -933127567, label %184
    i32 437302005, label %186
    i32 -1559555230, label %196
    i32 842143015, label %213
    i32 438099509, label %215
    i32 970679247, label %217
    i32 1148562791, label %227
    i32 -660362000, label %238
    i32 913378813, label %239
    i32 1084808172, label %247
    i32 -1593112308, label %251
    i32 554337726, label %253
    i32 -1918411063, label %263
    i32 1318161387, label %280
    i32 -317504920, label %282
    i32 1935155024, label %286
    i32 -1184623293, label %288
    i32 -208025482, label %298
    i32 -1590539602, label %300
    i32 1820576273, label %302
    i32 -488705406, label %304
    i32 -1433852640, label %314
    i32 162865297, label %332
    i32 272110260, label %334
    i32 1722505423, label %336
    i32 -766021242, label %340
    i32 -1509448088, label %342
    i32 -89031799, label %352
    i32 -36602130, label %370
    i32 1310709386, label %372
    i32 273665804, label %382
    i32 1530619099, label %393
    i32 -1375236581, label %395
    i32 -1127315283, label %405
    i32 -141446704, label %418
    i32 -1227282121, label %420
    i32 -535885653, label %422
    i32 1540177757, label %429
    i32 -1083969782, label %430
    i32 -2110895469, label %432
    i32 897490254, label %442
    i32 -1217171060, label %452
    i32 -1536119714, label %453
    i32 23054052, label %455
    i32 1774485186, label %456
    i32 115551983, label %466
    i32 266132760, label %478
    i32 187584487, label %480
    i32 223073857, label %490
    i32 1593705051, label %500
    i32 1808660264, label %501
    i32 -12115347, label %511
    i32 686482360, label %523
    i32 1766152679, label %525
    i32 -1980558739, label %532
    i32 756398385, label %542
    i32 -294924768, label %552
    i32 602673737, label %553
    i32 737753787, label %555
    i32 1640209135, label %557
    i32 -1700746278, label %558
    i32 -1613275706, label %559
    i32 1294865957, label %560
    i32 -1107258432, label %562
    i32 -1254138641, label %563
    i32 461999229, label %565
    i32 1710403149, label %566
    i32 1582888706, label %568
    i32 -1436504696, label %569
    i32 1656638494, label %570
    i32 -1334449196, label %571
    i32 -1044971441, label %572
    i32 -559373861, label %573
    i32 1457093503, label %574
    i32 -721737622, label %575
    i32 390822776, label %576
    i32 1698852399, label %577
  ]

.backedge:                                        ; preds = %21, %577, %576, %575, %574, %573, %572, %571, %570, %569, %568, %566, %565, %563, %562, %560, %559, %558, %555, %553, %552, %542, %532, %525, %523, %511, %501, %500, %490, %480, %478, %466, %456, %455, %453, %452, %442, %432, %430, %429, %422, %420, %418, %405, %395, %393, %382, %372, %370, %352, %342, %340, %336, %334, %332, %314, %304, %302, %300, %298, %288, %286, %282, %280, %263, %253, %251, %247, %239, %238, %227, %217, %215, %213, %196, %186, %184, %180, %171, %170, %160, %150, %148, %139, %131, %127, %126, %116, %106, %102, %101, %99, %98, %97, %87, %77, %71, %67, %66, %56, %46, %44, %32, %22
  %.0134.be = phi i32 [ %.0134, %21 ], [ %.0134, %577 ], [ %.0134, %576 ], [ %.0134, %575 ], [ %.0134, %574 ], [ %.0134, %573 ], [ %.0134, %572 ], [ %.0134, %571 ], [ %.0134, %570 ], [ %.0134, %569 ], [ %.0134, %568 ], [ %.0134, %566 ], [ %.0134, %565 ], [ %.0134, %563 ], [ %.0134, %562 ], [ %.0134, %560 ], [ %.0134, %559 ], [ %.0134, %558 ], [ %.0134, %555 ], [ %.0134, %553 ], [ %.0134, %552 ], [ %.0134, %542 ], [ %.0134, %532 ], [ %.0134, %525 ], [ %.0134, %523 ], [ %.0134, %511 ], [ %.0134, %501 ], [ %.0134, %500 ], [ %.0134, %490 ], [ %.0134, %480 ], [ %.0134, %478 ], [ %.0134, %466 ], [ %.0134, %456 ], [ %.0134, %455 ], [ %.0134, %453 ], [ %.0134, %452 ], [ %.0134, %442 ], [ %.0134, %432 ], [ %.0134, %430 ], [ %.0134, %429 ], [ %.0134, %422 ], [ %.0134, %420 ], [ %.0134, %418 ], [ %.0134, %405 ], [ %.0134, %395 ], [ %.0134, %393 ], [ %.0134, %382 ], [ %.0134, %372 ], [ %.0134, %370 ], [ %.0134, %352 ], [ %.0134, %342 ], [ %.0134, %340 ], [ %.0134, %336 ], [ %.0134, %334 ], [ %.0134, %332 ], [ %.0134, %314 ], [ %.0134, %304 ], [ %.0134, %302 ], [ %.0134, %300 ], [ %.0134, %298 ], [ %.0134, %288 ], [ %.0134, %286 ], [ %.0134, %282 ], [ %.0134, %280 ], [ %.0134, %263 ], [ %.0134, %253 ], [ %.0134, %251 ], [ %.0134, %247 ], [ %.0134, %239 ], [ %.0134, %238 ], [ %.0134, %227 ], [ %.0134, %217 ], [ %.0134, %215 ], [ %.0134, %213 ], [ %.0134, %196 ], [ %.0134, %186 ], [ %.0134, %184 ], [ %.0134, %180 ], [ %.0134, %171 ], [ %.0134, %170 ], [ %.0134, %160 ], [ %.0134, %150 ], [ %.0134, %148 ], [ %.0134, %139 ], [ %.0134, %131 ], [ %.0134, %127 ], [ %.0134, %126 ], [ %.0134, %116 ], [ %.0134, %106 ], [ %.0134, %102 ], [ %.0134, %101 ], [ %100, %99 ], [ %.0134, %98 ], [ %.0134, %97 ], [ %.0134, %87 ], [ %.0134, %77 ], [ %.0134, %71 ], [ %.0134, %67 ], [ %.0134, %66 ], [ %.0134, %56 ], [ %.0134, %46 ], [ %.0134, %44 ], [ %.0134, %32 ], [ %.0134, %22 ]
  %.0132.be = phi i32 [ %.0132, %21 ], [ %.0132, %577 ], [ %.0132, %576 ], [ %.0132, %575 ], [ %.0132, %574 ], [ %.0132, %573 ], [ %.0132, %572 ], [ %.0132, %571 ], [ %.0132, %570 ], [ %.0132, %569 ], [ %.0132, %568 ], [ %.0132, %566 ], [ %.0132, %565 ], [ %.0132, %563 ], [ %.0132, %562 ], [ %561, %560 ], [ 0, %559 ], [ %.0132, %558 ], [ %.0132, %555 ], [ %.0132, %553 ], [ %.0132, %552 ], [ %.0132, %542 ], [ %.0132, %532 ], [ %.0132, %525 ], [ %.0132, %523 ], [ %.0132, %511 ], [ %.0132, %501 ], [ %.0132, %500 ], [ %.0132, %490 ], [ %.0132, %480 ], [ %.0132, %478 ], [ %.0132, %466 ], [ %.0132, %456 ], [ %.0132, %455 ], [ %.0132, %453 ], [ %.0132, %452 ], [ %.0132, %442 ], [ %.0132, %432 ], [ %.0132, %430 ], [ %.0132, %429 ], [ %.0132, %422 ], [ %.0132, %420 ], [ %.0132, %418 ], [ %.0132, %405 ], [ %.0132, %395 ], [ %.0132, %393 ], [ %.0132, %382 ], [ %.0132, %372 ], [ %.0132, %370 ], [ %.0132, %352 ], [ %.0132, %342 ], [ %.0132, %340 ], [ %.0132, %336 ], [ %.0132, %334 ], [ %.0132, %332 ], [ %.0132, %314 ], [ %.0132, %304 ], [ %.0132, %302 ], [ %.0132, %300 ], [ %.0132, %298 ], [ %.0132, %288 ], [ %.0132, %286 ], [ %.0132, %282 ], [ %.0132, %280 ], [ %.0132, %263 ], [ %.0132, %253 ], [ %.0132, %251 ], [ %.0132, %247 ], [ %.0132, %239 ], [ %.0132, %238 ], [ %.0132, %227 ], [ %.0132, %217 ], [ %.0132, %215 ], [ %.0132, %213 ], [ %.0132, %196 ], [ %.0132, %186 ], [ %.0132, %184 ], [ %.0132, %180 ], [ %.0132, %171 ], [ %.0132, %170 ], [ %.0132, %160 ], [ %.0132, %150 ], [ %.0132, %148 ], [ %.0132, %139 ], [ %.0132, %131 ], [ %.0132, %127 ], [ %.0132, %126 ], [ %.0132, %116 ], [ %.0132, %106 ], [ %.0132, %102 ], [ %.0132, %101 ], [ %.0132, %99 ], [ %.0132, %98 ], [ %.0132, %97 ], [ %.neg157, %87 ], [ %.0132, %77 ], [ %.0132, %71 ], [ %.0132, %67 ], [ %.0132, %66 ], [ 0, %56 ], [ %.0132, %46 ], [ %.0132, %44 ], [ %.0132, %32 ], [ %.0132, %22 ]
  %.0130.be = phi i32 [ %.0130, %21 ], [ %.0130, %577 ], [ %.0130, %576 ], [ %.0130, %575 ], [ %.0130, %574 ], [ %.0130, %573 ], [ %.0130, %572 ], [ %.0130, %571 ], [ %.0130, %570 ], [ %.0130, %569 ], [ %.0130, %568 ], [ %.0130, %566 ], [ %.0130, %565 ], [ %.0130, %563 ], [ %.0130, %562 ], [ %.0130, %560 ], [ %.0130, %559 ], [ %.0130, %558 ], [ %.0130, %555 ], [ %.0130, %553 ], [ %.0130, %552 ], [ %.0130, %542 ], [ %.0130, %532 ], [ %.0130, %525 ], [ %.0130, %523 ], [ %.0130, %511 ], [ %.0130, %501 ], [ %.0130, %500 ], [ %.0130, %490 ], [ %.0130, %480 ], [ %.0130, %478 ], [ %.0130, %466 ], [ %.0130, %456 ], [ %.0130, %455 ], [ %454, %453 ], [ %.0130, %452 ], [ %.0130, %442 ], [ %.0130, %432 ], [ %.0130, %430 ], [ %.0130, %429 ], [ %.0130, %422 ], [ %.0130, %420 ], [ %.0130, %418 ], [ %.0130, %405 ], [ %.0130, %395 ], [ %.0130, %393 ], [ %.0130, %382 ], [ %.0130, %372 ], [ %.0130, %370 ], [ %.0130, %352 ], [ %.0130, %342 ], [ %.0130, %340 ], [ %.0130, %336 ], [ %.0130, %334 ], [ %.0130, %332 ], [ %.0130, %314 ], [ %.0130, %304 ], [ %.0130, %302 ], [ %.0130, %300 ], [ %.0130, %298 ], [ %.0130, %288 ], [ %.0130, %286 ], [ %.0130, %282 ], [ %.0130, %280 ], [ %.0130, %263 ], [ %.0130, %253 ], [ %.0130, %251 ], [ %.0130, %247 ], [ %.0130, %239 ], [ %.0130, %238 ], [ %.0130, %227 ], [ %.0130, %217 ], [ %.0130, %215 ], [ %.0130, %213 ], [ %.0130, %196 ], [ %.0130, %186 ], [ %.0130, %184 ], [ %.0130, %180 ], [ %.0130, %171 ], [ %.0130, %170 ], [ %.0130, %160 ], [ %.0130, %150 ], [ %.0130, %148 ], [ %.0130, %139 ], [ %.0130, %131 ], [ %.0130, %127 ], [ %.0130, %126 ], [ %.0130, %116 ], [ %.0130, %106 ], [ %.0130, %102 ], [ 0, %101 ], [ %.0130, %99 ], [ %.0130, %98 ], [ %.0130, %97 ], [ %.0130, %87 ], [ %.0130, %77 ], [ %.0130, %71 ], [ %.0130, %67 ], [ %.0130, %66 ], [ %.0130, %56 ], [ %.0130, %46 ], [ %.0130, %44 ], [ %.0130, %32 ], [ %.0130, %22 ]
  %.0128.be = phi i32 [ %.0128, %21 ], [ %.0128, %577 ], [ %.0128, %576 ], [ %.0128, %575 ], [ %.0128, %574 ], [ %.0128, %573 ], [ %.0128, %572 ], [ %.0128, %571 ], [ %.0128, %570 ], [ %.0128, %569 ], [ %.0128, %568 ], [ %.0128, %566 ], [ %.0128, %565 ], [ %.0128, %563 ], [ 0, %562 ], [ %.0128, %560 ], [ %.0128, %559 ], [ %.0128, %558 ], [ %.0128, %555 ], [ %.0128, %553 ], [ %.0128, %552 ], [ %.0128, %542 ], [ %.0128, %532 ], [ %.0128, %525 ], [ %.0128, %523 ], [ %.0128, %511 ], [ %.0128, %501 ], [ %.0128, %500 ], [ %.0128, %490 ], [ %.0128, %480 ], [ %.0128, %478 ], [ %.0128, %466 ], [ %.0128, %456 ], [ %.0128, %455 ], [ %.0128, %453 ], [ %.0128, %452 ], [ %.0128, %442 ], [ %.0128, %432 ], [ %431, %430 ], [ %.0128, %429 ], [ %.0128, %422 ], [ %.0128, %420 ], [ %.0128, %418 ], [ %.0128, %405 ], [ %.0128, %395 ], [ %.0128, %393 ], [ %.0128, %382 ], [ %.0128, %372 ], [ %.0128, %370 ], [ %.0128, %352 ], [ %.0128, %342 ], [ %.0128, %340 ], [ %.0128, %336 ], [ %.0128, %334 ], [ %.0128, %332 ], [ %.0128, %314 ], [ %.0128, %304 ], [ %.0128, %302 ], [ %.0128, %300 ], [ %.0128, %298 ], [ %.0128, %288 ], [ %.0128, %286 ], [ %.0128, %282 ], [ %.0128, %280 ], [ %.0128, %263 ], [ %.0128, %253 ], [ %.0128, %251 ], [ %.0128, %247 ], [ %.0128, %239 ], [ %.0128, %238 ], [ %.0128, %227 ], [ %.0128, %217 ], [ %.0128, %215 ], [ %.0128, %213 ], [ %.0128, %196 ], [ %.0128, %186 ], [ %.0128, %184 ], [ %.0128, %180 ], [ %.0128, %171 ], [ %.0128, %170 ], [ %.0128, %160 ], [ %.0128, %150 ], [ %.0128, %148 ], [ %.0128, %139 ], [ %.0128, %131 ], [ %.0128, %127 ], [ %.0128, %126 ], [ 0, %116 ], [ %.0128, %106 ], [ %.0128, %102 ], [ %.0128, %101 ], [ %.0128, %99 ], [ %.0128, %98 ], [ %.0128, %97 ], [ %.0128, %87 ], [ %.0128, %77 ], [ %.0128, %71 ], [ %.0128, %67 ], [ %.0128, %66 ], [ %.0128, %56 ], [ %.0128, %46 ], [ %.0128, %44 ], [ %.0128, %32 ], [ %.0128, %22 ]
  %.0126.be = phi i32 [ %.0126, %21 ], [ %.0126, %577 ], [ %.0126, %576 ], [ %.0126, %575 ], [ %.0126, %574 ], [ %.0126, %573 ], [ %.0126, %572 ], [ %.0126, %571 ], [ %.0126, %570 ], [ %.0126, %569 ], [ %.0126, %568 ], [ %567, %566 ], [ %.0126, %565 ], [ %564, %563 ], [ %.0126, %562 ], [ %.0126, %560 ], [ %.0126, %559 ], [ %.0126, %558 ], [ %.0126, %555 ], [ %.0126, %553 ], [ %.0126, %552 ], [ %.0126, %542 ], [ %.0126, %532 ], [ %.0126, %525 ], [ %.0126, %523 ], [ %.0126, %511 ], [ %.0126, %501 ], [ %.0126, %500 ], [ %.0126, %490 ], [ %.0126, %480 ], [ %.0126, %478 ], [ %.0126, %466 ], [ %.0126, %456 ], [ %.0126, %455 ], [ %.0126, %453 ], [ %.0126, %452 ], [ %.0126, %442 ], [ %.0126, %432 ], [ %.0126, %430 ], [ %.0126, %429 ], [ %.0126, %422 ], [ %421, %420 ], [ %.0126, %418 ], [ %.0126, %405 ], [ %.0126, %395 ], [ %.0126, %393 ], [ %.0126, %382 ], [ %.0126, %372 ], [ %.0126, %370 ], [ %.0126, %352 ], [ %.0126, %342 ], [ %341, %340 ], [ %.0126, %336 ], [ %.0126, %334 ], [ %.0126, %332 ], [ %.0126, %314 ], [ %.0126, %304 ], [ %303, %302 ], [ %.0126, %300 ], [ %.0126, %298 ], [ %.0126, %288 ], [ %287, %286 ], [ %.0126, %282 ], [ %.0126, %280 ], [ %.0126, %263 ], [ %.0126, %253 ], [ %252, %251 ], [ %.0126, %247 ], [ %.0126, %239 ], [ %.0126, %238 ], [ %228, %227 ], [ %.0126, %217 ], [ %.0126, %215 ], [ %.0126, %213 ], [ %.0126, %196 ], [ %.0126, %186 ], [ %185, %184 ], [ %.0126, %180 ], [ %.0126, %171 ], [ %.0126, %170 ], [ %.neg153, %160 ], [ %.0126, %150 ], [ %.0126, %148 ], [ %.0126, %139 ], [ 0, %131 ], [ %.0126, %127 ], [ %.0126, %126 ], [ %.0126, %116 ], [ %.0126, %106 ], [ %.0126, %102 ], [ %.0126, %101 ], [ %.0126, %99 ], [ %.0126, %98 ], [ %.0126, %97 ], [ %.0126, %87 ], [ %.0126, %77 ], [ %.0126, %71 ], [ %.0126, %67 ], [ %.0126, %66 ], [ %.0126, %56 ], [ %.0126, %46 ], [ %.0126, %44 ], [ %.0126, %32 ], [ %.0126, %22 ]
  %.0124.be = phi i32 [ %.0124, %21 ], [ %.0124, %577 ], [ %.0124, %576 ], [ %.0124, %575 ], [ %.0124, %574 ], [ %.0124, %573 ], [ %.0124, %572 ], [ %.0124, %571 ], [ %.0124, %570 ], [ %.0124, %569 ], [ %.0124, %568 ], [ %.0124, %566 ], [ %.0124, %565 ], [ %.0124, %563 ], [ %.0124, %562 ], [ %.0124, %560 ], [ %.0124, %559 ], [ %.0124, %558 ], [ %556, %555 ], [ %.0124, %553 ], [ %.0124, %552 ], [ %.0124, %542 ], [ %.0124, %532 ], [ %.0124, %525 ], [ %.0124, %523 ], [ %.0124, %511 ], [ %.0124, %501 ], [ %.0124, %500 ], [ %.0124, %490 ], [ %.0124, %480 ], [ %.0124, %478 ], [ %.0124, %466 ], [ %.0124, %456 ], [ 0, %455 ], [ %.0124, %453 ], [ %.0124, %452 ], [ %.0124, %442 ], [ %.0124, %432 ], [ %.0124, %430 ], [ %.0124, %429 ], [ %.0124, %422 ], [ %.0124, %420 ], [ %.0124, %418 ], [ %.0124, %405 ], [ %.0124, %395 ], [ %.0124, %393 ], [ %.0124, %382 ], [ %.0124, %372 ], [ %.0124, %370 ], [ %.0124, %352 ], [ %.0124, %342 ], [ %.0124, %340 ], [ %.0124, %336 ], [ %.0124, %334 ], [ %.0124, %332 ], [ %.0124, %314 ], [ %.0124, %304 ], [ %.0124, %302 ], [ %.0124, %300 ], [ %.0124, %298 ], [ %.0124, %288 ], [ %.0124, %286 ], [ %.0124, %282 ], [ %.0124, %280 ], [ %.0124, %263 ], [ %.0124, %253 ], [ %.0124, %251 ], [ %.0124, %247 ], [ %.0124, %239 ], [ %.0124, %238 ], [ %.0124, %227 ], [ %.0124, %217 ], [ %.0124, %215 ], [ %.0124, %213 ], [ %.0124, %196 ], [ %.0124, %186 ], [ %.0124, %184 ], [ %.0124, %180 ], [ %.0124, %171 ], [ %.0124, %170 ], [ %.0124, %160 ], [ %.0124, %150 ], [ %.0124, %148 ], [ %.0124, %139 ], [ %.0124, %131 ], [ %.0124, %127 ], [ %.0124, %126 ], [ %.0124, %116 ], [ %.0124, %106 ], [ %.0124, %102 ], [ %.0124, %101 ], [ %.0124, %99 ], [ %.0124, %98 ], [ %.0124, %97 ], [ %.0124, %87 ], [ %.0124, %77 ], [ %.0124, %71 ], [ %.0124, %67 ], [ %.0124, %66 ], [ %.0124, %56 ], [ %.0124, %46 ], [ %.0124, %44 ], [ %.0124, %32 ], [ %.0124, %22 ]
  %.0122.be = phi i32 [ %.0122, %21 ], [ %578, %577 ], [ %.0122, %576 ], [ 0, %575 ], [ %.0122, %574 ], [ %.0122, %573 ], [ %.0122, %572 ], [ %.0122, %571 ], [ %.0122, %570 ], [ %.0122, %569 ], [ %.0122, %568 ], [ %.0122, %566 ], [ %.0122, %565 ], [ %.0122, %563 ], [ %.0122, %562 ], [ %.0122, %560 ], [ %.0122, %559 ], [ %.0122, %558 ], [ %.0122, %555 ], [ %.0122, %553 ], [ %.0122, %552 ], [ %.neg, %542 ], [ %.0122, %532 ], [ %.0122, %525 ], [ %.0122, %523 ], [ %.0122, %511 ], [ %.0122, %501 ], [ %.0122, %500 ], [ 0, %490 ], [ %.0122, %480 ], [ %.0122, %478 ], [ %.0122, %466 ], [ %.0122, %456 ], [ %.0122, %455 ], [ %.0122, %453 ], [ %.0122, %452 ], [ %.0122, %442 ], [ %.0122, %432 ], [ %.0122, %430 ], [ %.0122, %429 ], [ %.0122, %422 ], [ %.0122, %420 ], [ %.0122, %418 ], [ %.0122, %405 ], [ %.0122, %395 ], [ %.0122, %393 ], [ %.0122, %382 ], [ %.0122, %372 ], [ %.0122, %370 ], [ %.0122, %352 ], [ %.0122, %342 ], [ %.0122, %340 ], [ %.0122, %336 ], [ %.0122, %334 ], [ %.0122, %332 ], [ %.0122, %314 ], [ %.0122, %304 ], [ %.0122, %302 ], [ %.0122, %300 ], [ %.0122, %298 ], [ %.0122, %288 ], [ %.0122, %286 ], [ %.0122, %282 ], [ %.0122, %280 ], [ %.0122, %263 ], [ %.0122, %253 ], [ %.0122, %251 ], [ %.0122, %247 ], [ %.0122, %239 ], [ %.0122, %238 ], [ %.0122, %227 ], [ %.0122, %217 ], [ %.0122, %215 ], [ %.0122, %213 ], [ %.0122, %196 ], [ %.0122, %186 ], [ %.0122, %184 ], [ %.0122, %180 ], [ %.0122, %171 ], [ %.0122, %170 ], [ %.0122, %160 ], [ %.0122, %150 ], [ %.0122, %148 ], [ %.0122, %139 ], [ %.0122, %131 ], [ %.0122, %127 ], [ %.0122, %126 ], [ %.0122, %116 ], [ %.0122, %106 ], [ %.0122, %102 ], [ %.0122, %101 ], [ %.0122, %99 ], [ %.0122, %98 ], [ %.0122, %97 ], [ %.0122, %87 ], [ %.0122, %77 ], [ %.0122, %71 ], [ %.0122, %67 ], [ %.0122, %66 ], [ %.0122, %56 ], [ %.0122, %46 ], [ %.0122, %44 ], [ %.0122, %32 ], [ %.0122, %22 ]
  %.0.be = phi i32 [ %.0, %21 ], [ 756398385, %577 ], [ -12115347, %576 ], [ 223073857, %575 ], [ 115551983, %574 ], [ 897490254, %573 ], [ -1127315283, %572 ], [ 273665804, %571 ], [ -89031799, %570 ], [ -1433852640, %569 ], [ -1918411063, %568 ], [ 1148562791, %566 ], [ -1559555230, %565 ], [ 534864032, %563 ], [ 387359018, %562 ], [ 1142318253, %560 ], [ -524308920, %559 ], [ 892906997, %558 ], [ 1774485186, %555 ], [ 737753787, %553 ], [ 1808660264, %552 ], [ %551, %542 ], [ %541, %532 ], [ -1980558739, %525 ], [ %524, %523 ], [ %522, %511 ], [ %510, %501 ], [ 1808660264, %500 ], [ %499, %490 ], [ %489, %480 ], [ %479, %478 ], [ %477, %466 ], [ %465, %456 ], [ 1774485186, %455 ], [ 2136380667, %453 ], [ -1536119714, %452 ], [ %451, %442 ], [ %441, %432 ], [ 1773084950, %430 ], [ -1083969782, %429 ], [ 1540177757, %422 ], [ -535885653, %420 ], [ %419, %418 ], [ %417, %405 ], [ %404, %395 ], [ %394, %393 ], [ %392, %382 ], [ %381, %372 ], [ %371, %370 ], [ %369, %352 ], [ %351, %342 ], [ -1509448088, %340 ], [ %339, %336 ], [ %335, %334 ], [ %333, %332 ], [ %331, %314 ], [ %313, %304 ], [ -488705406, %302 ], [ %301, %300 ], [ %299, %298 ], [ %297, %288 ], [ -1184623293, %286 ], [ %285, %282 ], [ %281, %280 ], [ %279, %263 ], [ %262, %253 ], [ 554337726, %251 ], [ %250, %247 ], [ %246, %239 ], [ 913378813, %238 ], [ %237, %227 ], [ %226, %217 ], [ %216, %215 ], [ %214, %213 ], [ %212, %196 ], [ %195, %186 ], [ 437302005, %184 ], [ %183, %180 ], [ %179, %171 ], [ 948813584, %170 ], [ %169, %160 ], [ %159, %150 ], [ %149, %148 ], [ %147, %139 ], [ %138, %131 ], [ %130, %127 ], [ 1773084950, %126 ], [ %125, %116 ], [ %115, %106 ], [ %105, %102 ], [ 2136380667, %101 ], [ -140257920, %99 ], [ -1542100382, %98 ], [ 1701728498, %97 ], [ %96, %87 ], [ %86, %77 ], [ -842743340, %71 ], [ %70, %67 ], [ 1701728498, %66 ], [ %65, %56 ], [ %55, %46 ], [ %45, %44 ], [ %43, %32 ], [ %31, %22 ]
  br label %21

22:                                               ; preds = %21
  %23 = load i32, i32* @x.1, align 4
  %24 = load i32, i32* @y.2, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 892906997, i32 -1700746278
  br label %.backedge

32:                                               ; preds = %21
  %33 = load i32, i32* %11, align 4
  %34 = icmp slt i32 %.0134, %33
  store i1 %34, i1* %9, align 1
  %35 = load i32, i32* @x.1, align 4
  %36 = load i32, i32* @y.2, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1230670662, i32 -1700746278
  br label %.backedge

44:                                               ; preds = %21
  %.0..0..0.113 = load volatile i1, i1* %9, align 1
  %45 = select i1 %.0..0..0.113, i32 1497519536, i32 296253103
  br label %.backedge

46:                                               ; preds = %21
  %47 = load i32, i32* @x.1, align 4
  %48 = load i32, i32* @y.2, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 -524308920, i32 -1613275706
  br label %.backedge

56:                                               ; preds = %21
  %57 = load i32, i32* @x.1, align 4
  %58 = load i32, i32* @y.2, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 1641309699, i32 -1613275706
  br label %.backedge

66:                                               ; preds = %21
  br label %.backedge

67:                                               ; preds = %21
  %68 = load i32, i32* %12, align 4
  %69 = icmp slt i32 %.0132, %68
  %70 = select i1 %69, i32 217159577, i32 -127610925
  br label %.backedge

71:                                               ; preds = %21
  %72 = sext i32 %.0134 to i64
  %.0..0..0.77 = load volatile i64, i64* %10, align 8
  %73 = mul nsw i64 %.0..0..0.77, %72
  %74 = sext i32 %.0132 to i64
  %.idx158 = add nsw i64 %73, %74
  %75 = getelementptr inbounds i8, i8* %20, i64 %.idx158
  %76 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %75)
  br label %.backedge

77:                                               ; preds = %21
  %78 = load i32, i32* @x.1, align 4
  %79 = load i32, i32* @y.2, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 1142318253, i32 1294865957
  br label %.backedge

87:                                               ; preds = %21
  %.neg157 = add i32 %.0132, 1
  %88 = load i32, i32* @x.1, align 4
  %89 = load i32, i32* @y.2, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 1869454632, i32 1294865957
  br label %.backedge

97:                                               ; preds = %21
  br label %.backedge

98:                                               ; preds = %21
  br label %.backedge

99:                                               ; preds = %21
  %100 = add i32 %.0134, 1
  br label %.backedge

101:                                              ; preds = %21
  br label %.backedge

102:                                              ; preds = %21
  %103 = load i32, i32* %11, align 4
  %104 = icmp slt i32 %.0130, %103
  %105 = select i1 %104, i32 651198867, i32 23054052
  br label %.backedge

106:                                              ; preds = %21
  %107 = load i32, i32* @x.1, align 4
  %108 = load i32, i32* @y.2, align 4
  %109 = add i32 %107, -1
  %110 = mul i32 %109, %107
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %113, %112
  %115 = select i1 %114, i32 387359018, i32 -1107258432
  br label %.backedge

116:                                              ; preds = %21
  %117 = load i32, i32* @x.1, align 4
  %118 = load i32, i32* @y.2, align 4
  %119 = add i32 %117, -1
  %120 = mul i32 %119, %117
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %123, %122
  %125 = select i1 %124, i32 937064748, i32 -1107258432
  br label %.backedge

126:                                              ; preds = %21
  br label %.backedge

127:                                              ; preds = %21
  %128 = load i32, i32* %12, align 4
  %129 = icmp slt i32 %.0128, %128
  %130 = select i1 %129, i32 -212474545, i32 -2110895469
  br label %.backedge

131:                                              ; preds = %21
  %132 = sext i32 %.0130 to i64
  %.0..0..0.78 = load volatile i64, i64* %10, align 8
  %133 = mul nsw i64 %.0..0..0.78, %132
  %134 = sext i32 %.0128 to i64
  %.idx156 = add nsw i64 %133, %134
  %135 = getelementptr inbounds i8, i8* %20, i64 %.idx156
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 46
  %138 = select i1 %137, i32 -643805758, i32 1540177757
  br label %.backedge

139:                                              ; preds = %21
  %140 = add i32 %.0130, -1
  %141 = sext i32 %140 to i64
  %.0..0..0.79 = load volatile i64, i64* %10, align 8
  %142 = mul nsw i64 %.0..0..0.79, %141
  %143 = sext i32 %.0128 to i64
  %.idx155 = add nsw i64 %142, %143
  %144 = getelementptr inbounds i8, i8* %20, i64 %.idx155
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 35
  %147 = select i1 %146, i32 1481821004, i32 948813584
  br label %.backedge

148:                                              ; preds = %21
  %.not154 = icmp eq i32 %.0130, 0
  %149 = select i1 %.not154, i32 948813584, i32 -1342160090
  br label %.backedge

150:                                              ; preds = %21
  %151 = load i32, i32* @x.1, align 4
  %152 = load i32, i32* @y.2, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 534864032, i32 -1254138641
  br label %.backedge

160:                                              ; preds = %21
  %.neg153 = add i32 %.0126, 1
  %161 = load i32, i32* @x.1, align 4
  %162 = load i32, i32* @y.2, align 4
  %163 = add i32 %161, -1
  %164 = mul i32 %163, %161
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %167, %166
  %169 = select i1 %168, i32 -1178703925, i32 -1254138641
  br label %.backedge

170:                                              ; preds = %21
  br label %.backedge

171:                                              ; preds = %21
  %172 = add i32 %.0130, 1
  %173 = sext i32 %172 to i64
  %.0..0..0.80 = load volatile i64, i64* %10, align 8
  %174 = mul nsw i64 %.0..0..0.80, %173
  %175 = sext i32 %.0128 to i64
  %.idx152 = add nsw i64 %174, %175
  %176 = getelementptr inbounds i8, i8* %20, i64 %.idx152
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 35
  %179 = select i1 %178, i32 1058304274, i32 437302005
  br label %.backedge

180:                                              ; preds = %21
  %181 = load i32, i32* %11, align 4
  %182 = add i32 %181, -1
  %.not151 = icmp eq i32 %.0130, %182
  %183 = select i1 %.not151, i32 437302005, i32 -933127567
  br label %.backedge

184:                                              ; preds = %21
  %185 = add i32 %.0126, 1
  br label %.backedge

186:                                              ; preds = %21
  %187 = load i32, i32* @x.1, align 4
  %188 = load i32, i32* @y.2, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 -1559555230, i32 461999229
  br label %.backedge

196:                                              ; preds = %21
  %197 = sext i32 %.0130 to i64
  %.0..0..0.81 = load volatile i64, i64* %10, align 8
  %198 = mul nsw i64 %.0..0..0.81, %197
  %199 = add i32 %.0128, -1
  %200 = sext i32 %199 to i64
  %.idx150 = add nsw i64 %198, %200
  %201 = getelementptr inbounds i8, i8* %20, i64 %.idx150
  %202 = load i8, i8* %201, align 1
  %203 = icmp eq i8 %202, 35
  store i1 %203, i1* %8, align 1
  %204 = load i32, i32* @x.1, align 4
  %205 = load i32, i32* @y.2, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 842143015, i32 461999229
  br label %.backedge

213:                                              ; preds = %21
  %.0..0..0.114 = load volatile i1, i1* %8, align 1
  %214 = select i1 %.0..0..0.114, i32 438099509, i32 913378813
  br label %.backedge

215:                                              ; preds = %21
  %.not149 = icmp eq i32 %.0128, 0
  %216 = select i1 %.not149, i32 913378813, i32 970679247
  br label %.backedge

217:                                              ; preds = %21
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 1148562791, i32 1710403149
  br label %.backedge

227:                                              ; preds = %21
  %228 = add i32 %.0126, 1
  %229 = load i32, i32* @x.1, align 4
  %230 = load i32, i32* @y.2, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 -660362000, i32 1710403149
  br label %.backedge

238:                                              ; preds = %21
  br label %.backedge

239:                                              ; preds = %21
  %240 = sext i32 %.0130 to i64
  %.0..0..0.82 = load volatile i64, i64* %10, align 8
  %241 = mul nsw i64 %.0..0..0.82, %240
  %.neg147 = add i32 %.0128, 1
  %242 = sext i32 %.neg147 to i64
  %.idx148 = add nsw i64 %241, %242
  %243 = getelementptr inbounds i8, i8* %20, i64 %.idx148
  %244 = load i8, i8* %243, align 1
  %245 = icmp eq i8 %244, 35
  %246 = select i1 %245, i32 1084808172, i32 554337726
  br label %.backedge

247:                                              ; preds = %21
  %248 = load i32, i32* %12, align 4
  %249 = add i32 %248, -1
  %.not146 = icmp eq i32 %.0128, %249
  %250 = select i1 %.not146, i32 554337726, i32 -1593112308
  br label %.backedge

251:                                              ; preds = %21
  %252 = add i32 %.0126, 1
  br label %.backedge

253:                                              ; preds = %21
  %254 = load i32, i32* @x.1, align 4
  %255 = load i32, i32* @y.2, align 4
  %256 = add i32 %254, -1
  %257 = mul i32 %256, %254
  %258 = and i32 %257, 1
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %260, %259
  %262 = select i1 %261, i32 -1918411063, i32 1582888706
  br label %.backedge

263:                                              ; preds = %21
  %264 = add i32 %.0130, 1
  %265 = sext i32 %264 to i64
  %.0..0..0.83 = load volatile i64, i64* %10, align 8
  %266 = mul nsw i64 %.0..0..0.83, %265
  %.neg144 = add i32 %.0128, 1
  %267 = sext i32 %.neg144 to i64
  %.idx145 = add nsw i64 %266, %267
  %268 = getelementptr inbounds i8, i8* %20, i64 %.idx145
  %269 = load i8, i8* %268, align 1
  %270 = icmp eq i8 %269, 35
  store i1 %270, i1* %7, align 1
  %271 = load i32, i32* @x.1, align 4
  %272 = load i32, i32* @y.2, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 1318161387, i32 1582888706
  br label %.backedge

280:                                              ; preds = %21
  %.0..0..0.115 = load volatile i1, i1* %7, align 1
  %281 = select i1 %.0..0..0.115, i32 -317504920, i32 -1184623293
  br label %.backedge

282:                                              ; preds = %21
  %283 = load i32, i32* %12, align 4
  %284 = add i32 %283, -1
  %.not143 = icmp eq i32 %.0128, %284
  %285 = select i1 %.not143, i32 -1184623293, i32 1935155024
  br label %.backedge

286:                                              ; preds = %21
  %287 = add i32 %.0126, 1
  br label %.backedge

288:                                              ; preds = %21
  %289 = add i32 %.0130, -1
  %290 = sext i32 %289 to i64
  %.0..0..0.84 = load volatile i64, i64* %10, align 8
  %291 = mul nsw i64 %.0..0..0.84, %290
  %292 = add i32 %.0128, -1
  %293 = sext i32 %292 to i64
  %.idx142 = add nsw i64 %291, %293
  %294 = getelementptr inbounds i8, i8* %20, i64 %.idx142
  %295 = load i8, i8* %294, align 1
  %296 = icmp eq i8 %295, 35
  %297 = select i1 %296, i32 -208025482, i32 -488705406
  br label %.backedge

298:                                              ; preds = %21
  %.not141 = icmp eq i32 %.0128, 0
  %299 = select i1 %.not141, i32 -488705406, i32 -1590539602
  br label %.backedge

300:                                              ; preds = %21
  %.not140 = icmp eq i32 %.0130, 0
  %301 = select i1 %.not140, i32 -488705406, i32 1820576273
  br label %.backedge

302:                                              ; preds = %21
  %303 = add i32 %.0126, 1
  br label %.backedge

304:                                              ; preds = %21
  %305 = load i32, i32* @x.1, align 4
  %306 = load i32, i32* @y.2, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 -1433852640, i32 -1436504696
  br label %.backedge

314:                                              ; preds = %21
  %315 = add i32 %.0130, 1
  %316 = sext i32 %315 to i64
  %.0..0..0.85 = load volatile i64, i64* %10, align 8
  %317 = mul nsw i64 %.0..0..0.85, %316
  %318 = add i32 %.0128, -1
  %319 = sext i32 %318 to i64
  %.idx139 = add nsw i64 %317, %319
  %320 = getelementptr inbounds i8, i8* %20, i64 %.idx139
  %321 = load i8, i8* %320, align 1
  %322 = icmp eq i8 %321, 35
  store i1 %322, i1* %6, align 1
  %323 = load i32, i32* @x.1, align 4
  %324 = load i32, i32* @y.2, align 4
  %325 = add i32 %323, -1
  %326 = mul i32 %325, %323
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %329, %328
  %331 = select i1 %330, i32 162865297, i32 -1436504696
  br label %.backedge

332:                                              ; preds = %21
  %.0..0..0.116 = load volatile i1, i1* %6, align 1
  %333 = select i1 %.0..0..0.116, i32 272110260, i32 -1509448088
  br label %.backedge

334:                                              ; preds = %21
  %.not138 = icmp eq i32 %.0128, 0
  %335 = select i1 %.not138, i32 -1509448088, i32 1722505423
  br label %.backedge

336:                                              ; preds = %21
  %337 = load i32, i32* %11, align 4
  %338 = add i32 %337, -1
  %.not = icmp eq i32 %.0130, %338
  %339 = select i1 %.not, i32 -1509448088, i32 -766021242
  br label %.backedge

340:                                              ; preds = %21
  %341 = add i32 %.0126, 1
  br label %.backedge

342:                                              ; preds = %21
  %343 = load i32, i32* @x.1, align 4
  %344 = load i32, i32* @y.2, align 4
  %345 = add i32 %343, -1
  %346 = mul i32 %345, %343
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %349, %348
  %351 = select i1 %350, i32 -89031799, i32 1656638494
  br label %.backedge

352:                                              ; preds = %21
  %353 = add i32 %.0130, -1
  %354 = sext i32 %353 to i64
  %.0..0..0.86 = load volatile i64, i64* %10, align 8
  %355 = mul nsw i64 %.0..0..0.86, %354
  %356 = add i32 %.0128, 1
  %357 = sext i32 %356 to i64
  %.idx137 = add nsw i64 %355, %357
  %358 = getelementptr inbounds i8, i8* %20, i64 %.idx137
  %359 = load i8, i8* %358, align 1
  %360 = icmp eq i8 %359, 35
  store i1 %360, i1* %5, align 1
  %361 = load i32, i32* @x.1, align 4
  %362 = load i32, i32* @y.2, align 4
  %363 = add i32 %361, -1
  %364 = mul i32 %363, %361
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %367, %366
  %369 = select i1 %368, i32 -36602130, i32 1656638494
  br label %.backedge

370:                                              ; preds = %21
  %.0..0..0.117 = load volatile i1, i1* %5, align 1
  %371 = select i1 %.0..0..0.117, i32 1310709386, i32 -535885653
  br label %.backedge

372:                                              ; preds = %21
  %373 = load i32, i32* @x.1, align 4
  %374 = load i32, i32* @y.2, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 273665804, i32 -1334449196
  br label %.backedge

382:                                              ; preds = %21
  %383 = icmp ne i32 %.0130, 0
  store i1 %383, i1* %4, align 1
  %384 = load i32, i32* @x.1, align 4
  %385 = load i32, i32* @y.2, align 4
  %386 = add i32 %384, -1
  %387 = mul i32 %386, %384
  %388 = and i32 %387, 1
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %390, %389
  %392 = select i1 %391, i32 1530619099, i32 -1334449196
  br label %.backedge

393:                                              ; preds = %21
  %.0..0..0.118 = load volatile i1, i1* %4, align 1
  %394 = select i1 %.0..0..0.118, i32 -1375236581, i32 -535885653
  br label %.backedge

395:                                              ; preds = %21
  %396 = load i32, i32* @x.1, align 4
  %397 = load i32, i32* @y.2, align 4
  %398 = add i32 %396, -1
  %399 = mul i32 %398, %396
  %400 = and i32 %399, 1
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %402, %401
  %404 = select i1 %403, i32 -1127315283, i32 -1044971441
  br label %.backedge

405:                                              ; preds = %21
  %406 = load i32, i32* %12, align 4
  %407 = add i32 %406, -1
  %408 = icmp ne i32 %.0128, %407
  store i1 %408, i1* %3, align 1
  %409 = load i32, i32* @x.1, align 4
  %410 = load i32, i32* @y.2, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 -141446704, i32 -1044971441
  br label %.backedge

418:                                              ; preds = %21
  %.0..0..0.119 = load volatile i1, i1* %3, align 1
  %419 = select i1 %.0..0..0.119, i32 -1227282121, i32 -535885653
  br label %.backedge

420:                                              ; preds = %21
  %421 = add i32 %.0126, 1
  br label %.backedge

422:                                              ; preds = %21
  %423 = trunc i32 %.0126 to i8
  %424 = add i8 %423, 48
  %425 = sext i32 %.0130 to i64
  %.0..0..0.87 = load volatile i64, i64* %10, align 8
  %426 = mul nsw i64 %.0..0..0.87, %425
  %427 = sext i32 %.0128 to i64
  %.idx136 = add nsw i64 %426, %427
  %428 = getelementptr inbounds i8, i8* %20, i64 %.idx136
  store i8 %424, i8* %428, align 1
  br label %.backedge

429:                                              ; preds = %21
  br label %.backedge

430:                                              ; preds = %21
  %431 = add i32 %.0128, 1
  br label %.backedge

432:                                              ; preds = %21
  %433 = load i32, i32* @x.1, align 4
  %434 = load i32, i32* @y.2, align 4
  %435 = add i32 %433, -1
  %436 = mul i32 %435, %433
  %437 = and i32 %436, 1
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %439, %438
  %441 = select i1 %440, i32 897490254, i32 -559373861
  br label %.backedge

442:                                              ; preds = %21
  %443 = load i32, i32* @x.1, align 4
  %444 = load i32, i32* @y.2, align 4
  %445 = add i32 %443, -1
  %446 = mul i32 %445, %443
  %447 = and i32 %446, 1
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %449, %448
  %451 = select i1 %450, i32 -1217171060, i32 -559373861
  br label %.backedge

452:                                              ; preds = %21
  br label %.backedge

453:                                              ; preds = %21
  %454 = add i32 %.0130, 1
  br label %.backedge

455:                                              ; preds = %21
  br label %.backedge

456:                                              ; preds = %21
  %457 = load i32, i32* @x.1, align 4
  %458 = load i32, i32* @y.2, align 4
  %459 = add i32 %457, -1
  %460 = mul i32 %459, %457
  %461 = and i32 %460, 1
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %463, %462
  %465 = select i1 %464, i32 115551983, i32 1457093503
  br label %.backedge

466:                                              ; preds = %21
  %467 = load i32, i32* %11, align 4
  %468 = icmp slt i32 %.0124, %467
  store i1 %468, i1* %2, align 1
  %469 = load i32, i32* @x.1, align 4
  %470 = load i32, i32* @y.2, align 4
  %471 = add i32 %469, -1
  %472 = mul i32 %471, %469
  %473 = and i32 %472, 1
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %475, %474
  %477 = select i1 %476, i32 266132760, i32 1457093503
  br label %.backedge

478:                                              ; preds = %21
  %.0..0..0.120 = load volatile i1, i1* %2, align 1
  %479 = select i1 %.0..0..0.120, i32 187584487, i32 1640209135
  br label %.backedge

480:                                              ; preds = %21
  %481 = load i32, i32* @x.1, align 4
  %482 = load i32, i32* @y.2, align 4
  %483 = add i32 %481, -1
  %484 = mul i32 %483, %481
  %485 = and i32 %484, 1
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %487, %486
  %489 = select i1 %488, i32 223073857, i32 -721737622
  br label %.backedge

490:                                              ; preds = %21
  %491 = load i32, i32* @x.1, align 4
  %492 = load i32, i32* @y.2, align 4
  %493 = add i32 %491, -1
  %494 = mul i32 %493, %491
  %495 = and i32 %494, 1
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %497, %496
  %499 = select i1 %498, i32 1593705051, i32 -721737622
  br label %.backedge

500:                                              ; preds = %21
  br label %.backedge

501:                                              ; preds = %21
  %502 = load i32, i32* @x.1, align 4
  %503 = load i32, i32* @y.2, align 4
  %504 = add i32 %502, -1
  %505 = mul i32 %504, %502
  %506 = and i32 %505, 1
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %508, %507
  %510 = select i1 %509, i32 -12115347, i32 390822776
  br label %.backedge

511:                                              ; preds = %21
  %512 = load i32, i32* %12, align 4
  %513 = icmp slt i32 %.0122, %512
  store i1 %513, i1* %1, align 1
  %514 = load i32, i32* @x.1, align 4
  %515 = load i32, i32* @y.2, align 4
  %516 = add i32 %514, -1
  %517 = mul i32 %516, %514
  %518 = and i32 %517, 1
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %520, %519
  %522 = select i1 %521, i32 686482360, i32 390822776
  br label %.backedge

523:                                              ; preds = %21
  %.0..0..0.121 = load volatile i1, i1* %1, align 1
  %524 = select i1 %.0..0..0.121, i32 1766152679, i32 602673737
  br label %.backedge

525:                                              ; preds = %21
  %526 = sext i32 %.0124 to i64
  %.0..0..0.88 = load volatile i64, i64* %10, align 8
  %527 = mul nsw i64 %.0..0..0.88, %526
  %528 = sext i32 %.0122 to i64
  %.idx = add nsw i64 %527, %528
  %529 = getelementptr inbounds i8, i8* %20, i64 %.idx
  %530 = load i8, i8* %529, align 1
  %531 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %530)
  br label %.backedge

532:                                              ; preds = %21
  %533 = load i32, i32* @x.1, align 4
  %534 = load i32, i32* @y.2, align 4
  %535 = add i32 %533, -1
  %536 = mul i32 %535, %533
  %537 = and i32 %536, 1
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %539, %538
  %541 = select i1 %540, i32 756398385, i32 1698852399
  br label %.backedge

542:                                              ; preds = %21
  %.neg = add i32 %.0122, 1
  %543 = load i32, i32* @x.1, align 4
  %544 = load i32, i32* @y.2, align 4
  %545 = add i32 %543, -1
  %546 = mul i32 %545, %543
  %547 = and i32 %546, 1
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %549, %548
  %551 = select i1 %550, i32 -294924768, i32 1698852399
  br label %.backedge

552:                                              ; preds = %21
  br label %.backedge

553:                                              ; preds = %21
  %554 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

555:                                              ; preds = %21
  %556 = add i32 %.0124, 1
  br label %.backedge

557:                                              ; preds = %21
  ret i32 0

558:                                              ; preds = %21
  br label %.backedge

559:                                              ; preds = %21
  br label %.backedge

560:                                              ; preds = %21
  %561 = add i32 %.0132, 1
  br label %.backedge

562:                                              ; preds = %21
  br label %.backedge

563:                                              ; preds = %21
  %564 = add i32 %.0126, 1
  br label %.backedge

565:                                              ; preds = %21
  %.0..0..0.89 = load volatile i64, i64* %10, align 8
  %.0..0..0.90 = load volatile i64, i64* %10, align 8
  br label %.backedge

566:                                              ; preds = %21
  %567 = add i32 %.0126, 1
  br label %.backedge

568:                                              ; preds = %21
  %.0..0..0.91 = load volatile i64, i64* %10, align 8
  %.0..0..0.92 = load volatile i64, i64* %10, align 8
  %.0..0..0.93 = load volatile i64, i64* %10, align 8
  %.0..0..0.94 = load volatile i64, i64* %10, align 8
  %.0..0..0.95 = load volatile i64, i64* %10, align 8
  %.0..0..0.96 = load volatile i64, i64* %10, align 8
  %.0..0..0.97 = load volatile i64, i64* %10, align 8
  %.0..0..0.98 = load volatile i64, i64* %10, align 8
  %.0..0..0.99 = load volatile i64, i64* %10, align 8
  %.0..0..0.100 = load volatile i64, i64* %10, align 8
  br label %.backedge

569:                                              ; preds = %21
  %.0..0..0.101 = load volatile i64, i64* %10, align 8
  %.0..0..0.102 = load volatile i64, i64* %10, align 8
  %.0..0..0.103 = load volatile i64, i64* %10, align 8
  br label %.backedge

570:                                              ; preds = %21
  %.0..0..0.104 = load volatile i64, i64* %10, align 8
  %.0..0..0.105 = load volatile i64, i64* %10, align 8
  %.0..0..0.106 = load volatile i64, i64* %10, align 8
  %.0..0..0.107 = load volatile i64, i64* %10, align 8
  %.0..0..0.108 = load volatile i64, i64* %10, align 8
  %.0..0..0.109 = load volatile i64, i64* %10, align 8
  %.0..0..0.110 = load volatile i64, i64* %10, align 8
  %.0..0..0.111 = load volatile i64, i64* %10, align 8
  %.0..0..0.112 = load volatile i64, i64* %10, align 8
  br label %.backedge

571:                                              ; preds = %21
  br label %.backedge

572:                                              ; preds = %21
  br label %.backedge

573:                                              ; preds = %21
  br label %.backedge

574:                                              ; preds = %21
  br label %.backedge

575:                                              ; preds = %21
  br label %.backedge

576:                                              ; preds = %21
  br label %.backedge

577:                                              ; preds = %21
  %578 = add i32 %.0122, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s044244244.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 314123581, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 314123581, label %11
    i32 -387000673, label %14
    i32 1424035472, label %24
    i32 512221881, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -387000673, i32 512221881
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1424035472, i32 512221881
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -387000673, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
