; ModuleID = 'build_ollvm/programs/p03574/s203945205.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s203945205.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZZ4mainE2dx = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1], align 16
@_ZZ4mainE2dy = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 1, i32 -1, i32 1, i32 -1], align 16
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s203945205.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %9, i32* nonnull dereferenceable(4) %8)
  %11 = load i32, i32* %7, align 4
  %12 = zext i32 %11 to i64
  %13 = load i32, i32* %8, align 4
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %6, align 8
  %.0..0..0.52 = load volatile i64, i64* %6, align 8
  %15 = mul nuw i64 %.0..0..0.52, %12
  %16 = alloca i8, i64 %15, align 16
  br label %17

17:                                               ; preds = %.backedge, %0
  %.096 = phi i32 [ 0, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i32 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i32 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.0 = phi i32 [ -1565520366, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1565520366, label %18
    i32 2113257597, label %28
    i32 -1000318417, label %40
    i32 1413286403, label %42
    i32 918524833, label %52
    i32 -1565582195, label %62
    i32 1318988296, label %63
    i32 1985770102, label %67
    i32 -1817130400, label %73
    i32 -1225526154, label %75
    i32 641459846, label %76
    i32 2010133078, label %77
    i32 1215586325, label %78
    i32 152621831, label %82
    i32 734362640, label %92
    i32 1537283563, label %102
    i32 207728057, label %103
    i32 188038887, label %107
    i32 -1248102414, label %117
    i32 -1986365422, label %133
    i32 -1304782877, label %135
    i32 -524514410, label %145
    i32 -554416682, label %155
    i32 1666627547, label %156
    i32 -1743788545, label %166
    i32 -1256908233, label %176
    i32 -1119677452, label %177
    i32 2031499715, label %180
    i32 673927243, label %190
    i32 162676371, label %209
    i32 41564822, label %211
    i32 -1922006252, label %214
    i32 -190236571, label %217
    i32 -144530400, label %227
    i32 -860885398, label %238
    i32 -754711811, label %240
    i32 946755102, label %241
    i32 -1973895340, label %249
    i32 -1107960385, label %251
    i32 -1142749353, label %252
    i32 -217834621, label %254
    i32 1867602477, label %264
    i32 1063621246, label %280
    i32 -645276579, label %281
    i32 1193281279, label %291
    i32 1970796182, label %302
    i32 -1870535072, label %303
    i32 -1525162075, label %304
    i32 -392853675, label %306
    i32 -187517536, label %307
    i32 1895858535, label %317
    i32 879903412, label %329
    i32 -1259327602, label %331
    i32 -748248394, label %341
    i32 2078145139, label %351
    i32 -1100769242, label %352
    i32 783934181, label %356
    i32 -1626991924, label %363
    i32 140228117, label %373
    i32 -1615521789, label %384
    i32 258446798, label %385
    i32 638637941, label %387
    i32 1484998431, label %397
    i32 -317695174, label %408
    i32 -1864600799, label %409
    i32 -1872576644, label %410
    i32 -231409536, label %411
    i32 -1947451311, label %412
    i32 -1369810534, label %413
    i32 965798518, label %414
    i32 -1261727387, label %415
    i32 403047497, label %416
    i32 656056781, label %424
    i32 -1360053102, label %425
    i32 1539987493, label %432
    i32 961251127, label %434
    i32 1335144905, label %435
    i32 491537453, label %436
    i32 -599478357, label %438
  ]

.backedge:                                        ; preds = %17, %438, %436, %435, %434, %432, %425, %424, %416, %415, %414, %413, %412, %411, %410, %408, %397, %387, %385, %384, %373, %363, %356, %352, %351, %341, %331, %329, %317, %307, %306, %304, %303, %302, %291, %281, %280, %264, %254, %252, %251, %249, %241, %240, %238, %227, %217, %214, %211, %209, %190, %180, %177, %176, %166, %156, %155, %145, %135, %133, %117, %107, %103, %102, %92, %82, %78, %77, %76, %75, %73, %67, %63, %62, %52, %42, %40, %28, %18
  %.096.be = phi i32 [ %.096, %17 ], [ %.096, %438 ], [ %.096, %436 ], [ %.096, %435 ], [ %.096, %434 ], [ %.096, %432 ], [ %.096, %425 ], [ %.096, %424 ], [ %.096, %416 ], [ %.096, %415 ], [ %.096, %414 ], [ %.096, %413 ], [ %.096, %412 ], [ %.096, %411 ], [ %.096, %410 ], [ %.096, %408 ], [ %.096, %397 ], [ %.096, %387 ], [ %.096, %385 ], [ %.096, %384 ], [ %.096, %373 ], [ %.096, %363 ], [ %.096, %356 ], [ %.096, %352 ], [ %.096, %351 ], [ %.096, %341 ], [ %.096, %331 ], [ %.096, %329 ], [ %.096, %317 ], [ %.096, %307 ], [ %.096, %306 ], [ %.096, %304 ], [ %.096, %303 ], [ %.096, %302 ], [ %.096, %291 ], [ %.096, %281 ], [ %.096, %280 ], [ %.096, %264 ], [ %.096, %254 ], [ %.096, %252 ], [ %.096, %251 ], [ %.096, %249 ], [ %.096, %241 ], [ %.096, %240 ], [ %.096, %238 ], [ %.096, %227 ], [ %.096, %217 ], [ %.096, %214 ], [ %.096, %211 ], [ %.096, %209 ], [ %.096, %190 ], [ %.096, %180 ], [ %.096, %177 ], [ %.096, %176 ], [ %.096, %166 ], [ %.096, %156 ], [ %.096, %155 ], [ %.096, %145 ], [ %.096, %135 ], [ %.096, %133 ], [ %.096, %117 ], [ %.096, %107 ], [ %.096, %103 ], [ %.096, %102 ], [ %.096, %92 ], [ %.096, %82 ], [ %.096, %78 ], [ %.096, %77 ], [ %.neg103, %76 ], [ %.096, %75 ], [ %.096, %73 ], [ %.096, %67 ], [ %.096, %63 ], [ %.096, %62 ], [ %.096, %52 ], [ %.096, %42 ], [ %.096, %40 ], [ %.096, %28 ], [ %.096, %18 ]
  %.094.be = phi i32 [ %.094, %17 ], [ %.094, %438 ], [ %.094, %436 ], [ %.094, %435 ], [ %.094, %434 ], [ %.094, %432 ], [ %.094, %425 ], [ %.094, %424 ], [ %.094, %416 ], [ %.094, %415 ], [ %.094, %414 ], [ %.094, %413 ], [ %.094, %412 ], [ 0, %411 ], [ %.094, %410 ], [ %.094, %408 ], [ %.094, %397 ], [ %.094, %387 ], [ %.094, %385 ], [ %.094, %384 ], [ %.094, %373 ], [ %.094, %363 ], [ %.094, %356 ], [ %.094, %352 ], [ %.094, %351 ], [ %.094, %341 ], [ %.094, %331 ], [ %.094, %329 ], [ %.094, %317 ], [ %.094, %307 ], [ %.094, %306 ], [ %.094, %304 ], [ %.094, %303 ], [ %.094, %302 ], [ %.094, %291 ], [ %.094, %281 ], [ %.094, %280 ], [ %.094, %264 ], [ %.094, %254 ], [ %.094, %252 ], [ %.094, %251 ], [ %.094, %249 ], [ %.094, %241 ], [ %.094, %240 ], [ %.094, %238 ], [ %.094, %227 ], [ %.094, %217 ], [ %.094, %214 ], [ %.094, %211 ], [ %.094, %209 ], [ %.094, %190 ], [ %.094, %180 ], [ %.094, %177 ], [ %.094, %176 ], [ %.094, %166 ], [ %.094, %156 ], [ %.094, %155 ], [ %.094, %145 ], [ %.094, %135 ], [ %.094, %133 ], [ %.094, %117 ], [ %.094, %107 ], [ %.094, %103 ], [ %.094, %102 ], [ %.094, %92 ], [ %.094, %82 ], [ %.094, %78 ], [ %.094, %77 ], [ %.094, %76 ], [ %.094, %75 ], [ %74, %73 ], [ %.094, %67 ], [ %.094, %63 ], [ %.094, %62 ], [ 0, %52 ], [ %.094, %42 ], [ %.094, %40 ], [ %.094, %28 ], [ %.094, %18 ]
  %.092.be = phi i32 [ %.092, %17 ], [ %.092, %438 ], [ %.092, %436 ], [ %.092, %435 ], [ %.092, %434 ], [ %.092, %432 ], [ %.092, %425 ], [ %.092, %424 ], [ %.092, %416 ], [ %.092, %415 ], [ %.092, %414 ], [ %.092, %413 ], [ %.092, %412 ], [ %.092, %411 ], [ %.092, %410 ], [ %.092, %408 ], [ %.092, %397 ], [ %.092, %387 ], [ %.092, %385 ], [ %.092, %384 ], [ %.092, %373 ], [ %.092, %363 ], [ %.092, %356 ], [ %.092, %352 ], [ %.092, %351 ], [ %.092, %341 ], [ %.092, %331 ], [ %.092, %329 ], [ %.092, %317 ], [ %.092, %307 ], [ %.092, %306 ], [ %305, %304 ], [ %.092, %303 ], [ %.092, %302 ], [ %.092, %291 ], [ %.092, %281 ], [ %.092, %280 ], [ %.092, %264 ], [ %.092, %254 ], [ %.092, %252 ], [ %.092, %251 ], [ %.092, %249 ], [ %.092, %241 ], [ %.092, %240 ], [ %.092, %238 ], [ %.092, %227 ], [ %.092, %217 ], [ %.092, %214 ], [ %.092, %211 ], [ %.092, %209 ], [ %.092, %190 ], [ %.092, %180 ], [ %.092, %177 ], [ %.092, %176 ], [ %.092, %166 ], [ %.092, %156 ], [ %.092, %155 ], [ %.092, %145 ], [ %.092, %135 ], [ %.092, %133 ], [ %.092, %117 ], [ %.092, %107 ], [ %.092, %103 ], [ %.092, %102 ], [ %.092, %92 ], [ %.092, %82 ], [ %.092, %78 ], [ 0, %77 ], [ %.092, %76 ], [ %.092, %75 ], [ %.092, %73 ], [ %.092, %67 ], [ %.092, %63 ], [ %.092, %62 ], [ %.092, %52 ], [ %.092, %42 ], [ %.092, %40 ], [ %.092, %28 ], [ %.092, %18 ]
  %.090.be = phi i32 [ %.090, %17 ], [ %.090, %438 ], [ %.090, %436 ], [ %.090, %435 ], [ %.090, %434 ], [ %433, %432 ], [ %.090, %425 ], [ %.090, %424 ], [ %.090, %416 ], [ %.090, %415 ], [ %.090, %414 ], [ %.090, %413 ], [ 0, %412 ], [ %.090, %411 ], [ %.090, %410 ], [ %.090, %408 ], [ %.090, %397 ], [ %.090, %387 ], [ %.090, %385 ], [ %.090, %384 ], [ %.090, %373 ], [ %.090, %363 ], [ %.090, %356 ], [ %.090, %352 ], [ %.090, %351 ], [ %.090, %341 ], [ %.090, %331 ], [ %.090, %329 ], [ %.090, %317 ], [ %.090, %307 ], [ %.090, %306 ], [ %.090, %304 ], [ %.090, %303 ], [ %.090, %302 ], [ %292, %291 ], [ %.090, %281 ], [ %.090, %280 ], [ %.090, %264 ], [ %.090, %254 ], [ %.090, %252 ], [ %.090, %251 ], [ %.090, %249 ], [ %.090, %241 ], [ %.090, %240 ], [ %.090, %238 ], [ %.090, %227 ], [ %.090, %217 ], [ %.090, %214 ], [ %.090, %211 ], [ %.090, %209 ], [ %.090, %190 ], [ %.090, %180 ], [ %.090, %177 ], [ %.090, %176 ], [ %.090, %166 ], [ %.090, %156 ], [ %.090, %155 ], [ %.090, %145 ], [ %.090, %135 ], [ %.090, %133 ], [ %.090, %117 ], [ %.090, %107 ], [ %.090, %103 ], [ %.090, %102 ], [ 0, %92 ], [ %.090, %82 ], [ %.090, %78 ], [ %.090, %77 ], [ %.090, %76 ], [ %.090, %75 ], [ %.090, %73 ], [ %.090, %67 ], [ %.090, %63 ], [ %.090, %62 ], [ %.090, %52 ], [ %.090, %42 ], [ %.090, %40 ], [ %.090, %28 ], [ %.090, %18 ]
  %.088.be = phi i32 [ %.088, %17 ], [ %.088, %438 ], [ %.088, %436 ], [ %.088, %435 ], [ %.088, %434 ], [ %.088, %432 ], [ %.088, %425 ], [ %.088, %424 ], [ %.088, %416 ], [ %.088, %415 ], [ %.088, %414 ], [ 0, %413 ], [ %.088, %412 ], [ %.088, %411 ], [ %.088, %410 ], [ %.088, %408 ], [ %.088, %397 ], [ %.088, %387 ], [ %.088, %385 ], [ %.088, %384 ], [ %.088, %373 ], [ %.088, %363 ], [ %.088, %356 ], [ %.088, %352 ], [ %.088, %351 ], [ %.088, %341 ], [ %.088, %331 ], [ %.088, %329 ], [ %.088, %317 ], [ %.088, %307 ], [ %.088, %306 ], [ %.088, %304 ], [ %.088, %303 ], [ %.088, %302 ], [ %.088, %291 ], [ %.088, %281 ], [ %.088, %280 ], [ %.088, %264 ], [ %.088, %254 ], [ %.088, %252 ], [ %.088, %251 ], [ %250, %249 ], [ %.088, %241 ], [ %.088, %240 ], [ %.088, %238 ], [ %.088, %227 ], [ %.088, %217 ], [ %.088, %214 ], [ %.088, %211 ], [ %.088, %209 ], [ %.088, %190 ], [ %.088, %180 ], [ %.088, %177 ], [ %.088, %176 ], [ %.088, %166 ], [ %.088, %156 ], [ %.088, %155 ], [ %.088, %145 ], [ %.088, %135 ], [ %.088, %133 ], [ 0, %117 ], [ %.088, %107 ], [ %.088, %103 ], [ %.088, %102 ], [ %.088, %92 ], [ %.088, %82 ], [ %.088, %78 ], [ %.088, %77 ], [ %.088, %76 ], [ %.088, %75 ], [ %.088, %73 ], [ %.088, %67 ], [ %.088, %63 ], [ %.088, %62 ], [ %.088, %52 ], [ %.088, %42 ], [ %.088, %40 ], [ %.088, %28 ], [ %.088, %18 ]
  %.086.be = phi i32 [ %.086, %17 ], [ %.086, %438 ], [ %.086, %436 ], [ %.086, %435 ], [ %.086, %434 ], [ %.086, %432 ], [ %.086, %425 ], [ %.086, %424 ], [ %.086, %416 ], [ 0, %415 ], [ %.086, %414 ], [ %.086, %413 ], [ %.086, %412 ], [ %.086, %411 ], [ %.086, %410 ], [ %.086, %408 ], [ %.086, %397 ], [ %.086, %387 ], [ %.086, %385 ], [ %.086, %384 ], [ %.086, %373 ], [ %.086, %363 ], [ %.086, %356 ], [ %.086, %352 ], [ %.086, %351 ], [ %.086, %341 ], [ %.086, %331 ], [ %.086, %329 ], [ %.086, %317 ], [ %.086, %307 ], [ %.086, %306 ], [ %.086, %304 ], [ %.086, %303 ], [ %.086, %302 ], [ %.086, %291 ], [ %.086, %281 ], [ %.086, %280 ], [ %.086, %264 ], [ %.086, %254 ], [ %253, %252 ], [ %.086, %251 ], [ %.086, %249 ], [ %.086, %241 ], [ %.086, %240 ], [ %.086, %238 ], [ %.086, %227 ], [ %.086, %217 ], [ %.086, %214 ], [ %.086, %211 ], [ %.086, %209 ], [ %.086, %190 ], [ %.086, %180 ], [ %.086, %177 ], [ %.086, %176 ], [ 0, %166 ], [ %.086, %156 ], [ %.086, %155 ], [ %.086, %145 ], [ %.086, %135 ], [ %.086, %133 ], [ %.086, %117 ], [ %.086, %107 ], [ %.086, %103 ], [ %.086, %102 ], [ %.086, %92 ], [ %.086, %82 ], [ %.086, %78 ], [ %.086, %77 ], [ %.086, %76 ], [ %.086, %75 ], [ %.086, %73 ], [ %.086, %67 ], [ %.086, %63 ], [ %.086, %62 ], [ %.086, %52 ], [ %.086, %42 ], [ %.086, %40 ], [ %.086, %28 ], [ %.086, %18 ]
  %.084.be = phi i32 [ %.084, %17 ], [ %.084, %438 ], [ %.084, %436 ], [ %.084, %435 ], [ %.084, %434 ], [ %.084, %432 ], [ %.084, %425 ], [ %.084, %424 ], [ %420, %416 ], [ %.084, %415 ], [ %.084, %414 ], [ %.084, %413 ], [ %.084, %412 ], [ %.084, %411 ], [ %.084, %410 ], [ %.084, %408 ], [ %.084, %397 ], [ %.084, %387 ], [ %.084, %385 ], [ %.084, %384 ], [ %.084, %373 ], [ %.084, %363 ], [ %.084, %356 ], [ %.084, %352 ], [ %.084, %351 ], [ %.084, %341 ], [ %.084, %331 ], [ %.084, %329 ], [ %.084, %317 ], [ %.084, %307 ], [ %.084, %306 ], [ %.084, %304 ], [ %.084, %303 ], [ %.084, %302 ], [ %.084, %291 ], [ %.084, %281 ], [ %.084, %280 ], [ %.084, %264 ], [ %.084, %254 ], [ %.084, %252 ], [ %.084, %251 ], [ %.084, %249 ], [ %.084, %241 ], [ %.084, %240 ], [ %.084, %238 ], [ %.084, %227 ], [ %.084, %217 ], [ %.084, %214 ], [ %.084, %211 ], [ %.084, %209 ], [ %194, %190 ], [ %.084, %180 ], [ %.084, %177 ], [ %.084, %176 ], [ %.084, %166 ], [ %.084, %156 ], [ %.084, %155 ], [ %.084, %145 ], [ %.084, %135 ], [ %.084, %133 ], [ %.084, %117 ], [ %.084, %107 ], [ %.084, %103 ], [ %.084, %102 ], [ %.084, %92 ], [ %.084, %82 ], [ %.084, %78 ], [ %.084, %77 ], [ %.084, %76 ], [ %.084, %75 ], [ %.084, %73 ], [ %.084, %67 ], [ %.084, %63 ], [ %.084, %62 ], [ %.084, %52 ], [ %.084, %42 ], [ %.084, %40 ], [ %.084, %28 ], [ %.084, %18 ]
  %.082.be = phi i32 [ %.082, %17 ], [ %.082, %438 ], [ %.082, %436 ], [ %.082, %435 ], [ %.082, %434 ], [ %.082, %432 ], [ %.082, %425 ], [ %.082, %424 ], [ %423, %416 ], [ %.082, %415 ], [ %.082, %414 ], [ %.082, %413 ], [ %.082, %412 ], [ %.082, %411 ], [ %.082, %410 ], [ %.082, %408 ], [ %.082, %397 ], [ %.082, %387 ], [ %.082, %385 ], [ %.082, %384 ], [ %.082, %373 ], [ %.082, %363 ], [ %.082, %356 ], [ %.082, %352 ], [ %.082, %351 ], [ %.082, %341 ], [ %.082, %331 ], [ %.082, %329 ], [ %.082, %317 ], [ %.082, %307 ], [ %.082, %306 ], [ %.082, %304 ], [ %.082, %303 ], [ %.082, %302 ], [ %.082, %291 ], [ %.082, %281 ], [ %.082, %280 ], [ %.082, %264 ], [ %.082, %254 ], [ %.082, %252 ], [ %.082, %251 ], [ %.082, %249 ], [ %.082, %241 ], [ %.082, %240 ], [ %.082, %238 ], [ %.082, %227 ], [ %.082, %217 ], [ %.082, %214 ], [ %.082, %211 ], [ %.082, %209 ], [ %197, %190 ], [ %.082, %180 ], [ %.082, %177 ], [ %.082, %176 ], [ %.082, %166 ], [ %.082, %156 ], [ %.082, %155 ], [ %.082, %145 ], [ %.082, %135 ], [ %.082, %133 ], [ %.082, %117 ], [ %.082, %107 ], [ %.082, %103 ], [ %.082, %102 ], [ %.082, %92 ], [ %.082, %82 ], [ %.082, %78 ], [ %.082, %77 ], [ %.082, %76 ], [ %.082, %75 ], [ %.082, %73 ], [ %.082, %67 ], [ %.082, %63 ], [ %.082, %62 ], [ %.082, %52 ], [ %.082, %42 ], [ %.082, %40 ], [ %.082, %28 ], [ %.082, %18 ]
  %.080.be = phi i32 [ %.080, %17 ], [ %.neg, %438 ], [ %.080, %436 ], [ %.080, %435 ], [ %.080, %434 ], [ %.080, %432 ], [ %.080, %425 ], [ %.080, %424 ], [ %.080, %416 ], [ %.080, %415 ], [ %.080, %414 ], [ %.080, %413 ], [ %.080, %412 ], [ %.080, %411 ], [ %.080, %410 ], [ %.080, %408 ], [ %398, %397 ], [ %.080, %387 ], [ %.080, %385 ], [ %.080, %384 ], [ %.080, %373 ], [ %.080, %363 ], [ %.080, %356 ], [ %.080, %352 ], [ %.080, %351 ], [ %.080, %341 ], [ %.080, %331 ], [ %.080, %329 ], [ %.080, %317 ], [ %.080, %307 ], [ 0, %306 ], [ %.080, %304 ], [ %.080, %303 ], [ %.080, %302 ], [ %.080, %291 ], [ %.080, %281 ], [ %.080, %280 ], [ %.080, %264 ], [ %.080, %254 ], [ %.080, %252 ], [ %.080, %251 ], [ %.080, %249 ], [ %.080, %241 ], [ %.080, %240 ], [ %.080, %238 ], [ %.080, %227 ], [ %.080, %217 ], [ %.080, %214 ], [ %.080, %211 ], [ %.080, %209 ], [ %.080, %190 ], [ %.080, %180 ], [ %.080, %177 ], [ %.080, %176 ], [ %.080, %166 ], [ %.080, %156 ], [ %.080, %155 ], [ %.080, %145 ], [ %.080, %135 ], [ %.080, %133 ], [ %.080, %117 ], [ %.080, %107 ], [ %.080, %103 ], [ %.080, %102 ], [ %.080, %92 ], [ %.080, %82 ], [ %.080, %78 ], [ %.080, %77 ], [ %.080, %76 ], [ %.080, %75 ], [ %.080, %73 ], [ %.080, %67 ], [ %.080, %63 ], [ %.080, %62 ], [ %.080, %52 ], [ %.080, %42 ], [ %.080, %40 ], [ %.080, %28 ], [ %.080, %18 ]
  %.078.be = phi i32 [ %.078, %17 ], [ %.078, %438 ], [ %437, %436 ], [ 0, %435 ], [ %.078, %434 ], [ %.078, %432 ], [ %.078, %425 ], [ %.078, %424 ], [ %.078, %416 ], [ %.078, %415 ], [ %.078, %414 ], [ %.078, %413 ], [ %.078, %412 ], [ %.078, %411 ], [ %.078, %410 ], [ %.078, %408 ], [ %.078, %397 ], [ %.078, %387 ], [ %.078, %385 ], [ %.078, %384 ], [ %374, %373 ], [ %.078, %363 ], [ %.078, %356 ], [ %.078, %352 ], [ %.078, %351 ], [ 0, %341 ], [ %.078, %331 ], [ %.078, %329 ], [ %.078, %317 ], [ %.078, %307 ], [ %.078, %306 ], [ %.078, %304 ], [ %.078, %303 ], [ %.078, %302 ], [ %.078, %291 ], [ %.078, %281 ], [ %.078, %280 ], [ %.078, %264 ], [ %.078, %254 ], [ %.078, %252 ], [ %.078, %251 ], [ %.078, %249 ], [ %.078, %241 ], [ %.078, %240 ], [ %.078, %238 ], [ %.078, %227 ], [ %.078, %217 ], [ %.078, %214 ], [ %.078, %211 ], [ %.078, %209 ], [ %.078, %190 ], [ %.078, %180 ], [ %.078, %177 ], [ %.078, %176 ], [ %.078, %166 ], [ %.078, %156 ], [ %.078, %155 ], [ %.078, %145 ], [ %.078, %135 ], [ %.078, %133 ], [ %.078, %117 ], [ %.078, %107 ], [ %.078, %103 ], [ %.078, %102 ], [ %.078, %92 ], [ %.078, %82 ], [ %.078, %78 ], [ %.078, %77 ], [ %.078, %76 ], [ %.078, %75 ], [ %.078, %73 ], [ %.078, %67 ], [ %.078, %63 ], [ %.078, %62 ], [ %.078, %52 ], [ %.078, %42 ], [ %.078, %40 ], [ %.078, %28 ], [ %.078, %18 ]
  %.0.be = phi i32 [ %.0, %17 ], [ 1484998431, %438 ], [ 140228117, %436 ], [ -748248394, %435 ], [ 1895858535, %434 ], [ 1193281279, %432 ], [ 1867602477, %425 ], [ -144530400, %424 ], [ 673927243, %416 ], [ -1743788545, %415 ], [ -524514410, %414 ], [ -1248102414, %413 ], [ 734362640, %412 ], [ 918524833, %411 ], [ 2113257597, %410 ], [ -187517536, %408 ], [ %407, %397 ], [ %396, %387 ], [ 638637941, %385 ], [ -1100769242, %384 ], [ %383, %373 ], [ %372, %363 ], [ -1626991924, %356 ], [ %355, %352 ], [ -1100769242, %351 ], [ %350, %341 ], [ %340, %331 ], [ %330, %329 ], [ %328, %317 ], [ %316, %307 ], [ -187517536, %306 ], [ 1215586325, %304 ], [ -1525162075, %303 ], [ 207728057, %302 ], [ %301, %291 ], [ %290, %281 ], [ -645276579, %280 ], [ %279, %264 ], [ %263, %254 ], [ -1119677452, %252 ], [ -1142749353, %251 ], [ -1107960385, %249 ], [ %248, %241 ], [ -1142749353, %240 ], [ %239, %238 ], [ %237, %227 ], [ %226, %217 ], [ %216, %214 ], [ %213, %211 ], [ %210, %209 ], [ %208, %190 ], [ %189, %180 ], [ %179, %177 ], [ -1119677452, %176 ], [ %175, %166 ], [ %165, %156 ], [ -645276579, %155 ], [ %154, %145 ], [ %144, %135 ], [ %134, %133 ], [ %132, %117 ], [ %116, %107 ], [ %106, %103 ], [ 207728057, %102 ], [ %101, %92 ], [ %91, %82 ], [ %81, %78 ], [ 1215586325, %77 ], [ -1565520366, %76 ], [ 641459846, %75 ], [ 1318988296, %73 ], [ -1817130400, %67 ], [ %66, %63 ], [ 1318988296, %62 ], [ %61, %52 ], [ %51, %42 ], [ %41, %40 ], [ %39, %28 ], [ %27, %18 ]
  br label %17

18:                                               ; preds = %17
  %19 = load i32, i32* @x.1, align 4
  %20 = load i32, i32* @y.2, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 2113257597, i32 -1872576644
  br label %.backedge

28:                                               ; preds = %17
  %29 = load i32, i32* %7, align 4
  %30 = icmp slt i32 %.096, %29
  store i1 %30, i1* %5, align 1
  %31 = load i32, i32* @x.1, align 4
  %32 = load i32, i32* @y.2, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 -1000318417, i32 -1872576644
  br label %.backedge

40:                                               ; preds = %17
  %.0..0..0.73 = load volatile i1, i1* %5, align 1
  %41 = select i1 %.0..0..0.73, i32 1413286403, i32 2010133078
  br label %.backedge

42:                                               ; preds = %17
  %43 = load i32, i32* @x.1, align 4
  %44 = load i32, i32* @y.2, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 918524833, i32 -231409536
  br label %.backedge

52:                                               ; preds = %17
  %53 = load i32, i32* @x.1, align 4
  %54 = load i32, i32* @y.2, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -1565582195, i32 -231409536
  br label %.backedge

62:                                               ; preds = %17
  br label %.backedge

63:                                               ; preds = %17
  %64 = load i32, i32* %8, align 4
  %65 = icmp slt i32 %.094, %64
  %66 = select i1 %65, i32 1985770102, i32 -1225526154
  br label %.backedge

67:                                               ; preds = %17
  %68 = sext i32 %.096 to i64
  %.0..0..0.53 = load volatile i64, i64* %6, align 8
  %69 = mul nsw i64 %.0..0..0.53, %68
  %70 = sext i32 %.094 to i64
  %.idx104 = add nsw i64 %69, %70
  %71 = getelementptr inbounds i8, i8* %16, i64 %.idx104
  %72 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %71)
  br label %.backedge

73:                                               ; preds = %17
  %74 = add i32 %.094, 1
  br label %.backedge

75:                                               ; preds = %17
  br label %.backedge

76:                                               ; preds = %17
  %.neg103 = add i32 %.096, 1
  br label %.backedge

77:                                               ; preds = %17
  br label %.backedge

78:                                               ; preds = %17
  %79 = load i32, i32* %7, align 4
  %80 = icmp slt i32 %.092, %79
  %81 = select i1 %80, i32 152621831, i32 -392853675
  br label %.backedge

82:                                               ; preds = %17
  %83 = load i32, i32* @x.1, align 4
  %84 = load i32, i32* @y.2, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 734362640, i32 -1947451311
  br label %.backedge

92:                                               ; preds = %17
  %93 = load i32, i32* @x.1, align 4
  %94 = load i32, i32* @y.2, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 1537283563, i32 -1947451311
  br label %.backedge

102:                                              ; preds = %17
  br label %.backedge

103:                                              ; preds = %17
  %104 = load i32, i32* %8, align 4
  %105 = icmp slt i32 %.090, %104
  %106 = select i1 %105, i32 188038887, i32 -1870535072
  br label %.backedge

107:                                              ; preds = %17
  %108 = load i32, i32* @x.1, align 4
  %109 = load i32, i32* @y.2, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -1248102414, i32 -1369810534
  br label %.backedge

117:                                              ; preds = %17
  %118 = sext i32 %.092 to i64
  %.0..0..0.54 = load volatile i64, i64* %6, align 8
  %119 = mul nsw i64 %.0..0..0.54, %118
  %120 = sext i32 %.090 to i64
  %.idx102 = add nsw i64 %119, %120
  %121 = getelementptr inbounds i8, i8* %16, i64 %.idx102
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 35
  store i1 %123, i1* %4, align 1
  %124 = load i32, i32* @x.1, align 4
  %125 = load i32, i32* @y.2, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 -1986365422, i32 -1369810534
  br label %.backedge

133:                                              ; preds = %17
  %.0..0..0.74 = load volatile i1, i1* %4, align 1
  %134 = select i1 %.0..0..0.74, i32 -1304782877, i32 1666627547
  br label %.backedge

135:                                              ; preds = %17
  %136 = load i32, i32* @x.1, align 4
  %137 = load i32, i32* @y.2, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 -524514410, i32 965798518
  br label %.backedge

145:                                              ; preds = %17
  %146 = load i32, i32* @x.1, align 4
  %147 = load i32, i32* @y.2, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -554416682, i32 965798518
  br label %.backedge

155:                                              ; preds = %17
  br label %.backedge

156:                                              ; preds = %17
  %157 = load i32, i32* @x.1, align 4
  %158 = load i32, i32* @y.2, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 -1743788545, i32 -1261727387
  br label %.backedge

166:                                              ; preds = %17
  %167 = load i32, i32* @x.1, align 4
  %168 = load i32, i32* @y.2, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 -1256908233, i32 -1261727387
  br label %.backedge

176:                                              ; preds = %17
  br label %.backedge

177:                                              ; preds = %17
  %178 = icmp slt i32 %.086, 8
  %179 = select i1 %178, i32 2031499715, i32 -217834621
  br label %.backedge

180:                                              ; preds = %17
  %181 = load i32, i32* @x.1, align 4
  %182 = load i32, i32* @y.2, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 673927243, i32 403047497
  br label %.backedge

190:                                              ; preds = %17
  %191 = sext i32 %.086 to i64
  %192 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ4mainE2dx, i64 0, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = add i32 %193, %.092
  %195 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ4mainE2dy, i64 0, i64 %191
  %196 = load i32, i32* %195, align 4
  %197 = add i32 %196, %.090
  %198 = load i32, i32* %7, align 4
  %199 = icmp sle i32 %198, %194
  store i1 %199, i1* %3, align 1
  %200 = load i32, i32* @x.1, align 4
  %201 = load i32, i32* @y.2, align 4
  %202 = add i32 %200, -1
  %203 = mul i32 %202, %200
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %206, %205
  %208 = select i1 %207, i32 162676371, i32 403047497
  br label %.backedge

209:                                              ; preds = %17
  %.0..0..0.75 = load volatile i1, i1* %3, align 1
  %210 = select i1 %.0..0..0.75, i32 -754711811, i32 41564822
  br label %.backedge

211:                                              ; preds = %17
  %212 = load i32, i32* %8, align 4
  %.not = icmp sgt i32 %212, %.082
  %213 = select i1 %.not, i32 -1922006252, i32 -754711811
  br label %.backedge

214:                                              ; preds = %17
  %215 = icmp slt i32 %.084, 0
  %216 = select i1 %215, i32 -754711811, i32 -190236571
  br label %.backedge

217:                                              ; preds = %17
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -144530400, i32 656056781
  br label %.backedge

227:                                              ; preds = %17
  %228 = icmp slt i32 %.082, 0
  store i1 %228, i1* %2, align 1
  %229 = load i32, i32* @x.1, align 4
  %230 = load i32, i32* @y.2, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 -860885398, i32 656056781
  br label %.backedge

238:                                              ; preds = %17
  %.0..0..0.76 = load volatile i1, i1* %2, align 1
  %239 = select i1 %.0..0..0.76, i32 -754711811, i32 946755102
  br label %.backedge

240:                                              ; preds = %17
  br label %.backedge

241:                                              ; preds = %17
  %242 = sext i32 %.084 to i64
  %.0..0..0.55 = load volatile i64, i64* %6, align 8
  %243 = mul nsw i64 %.0..0..0.55, %242
  %244 = sext i32 %.082 to i64
  %.idx101 = add nsw i64 %243, %244
  %245 = getelementptr inbounds i8, i8* %16, i64 %.idx101
  %246 = load i8, i8* %245, align 1
  %247 = icmp eq i8 %246, 35
  %248 = select i1 %247, i32 -1973895340, i32 -1107960385
  br label %.backedge

249:                                              ; preds = %17
  %250 = add i32 %.088, 1
  br label %.backedge

251:                                              ; preds = %17
  br label %.backedge

252:                                              ; preds = %17
  %253 = add i32 %.086, 1
  br label %.backedge

254:                                              ; preds = %17
  %255 = load i32, i32* @x.1, align 4
  %256 = load i32, i32* @y.2, align 4
  %257 = add i32 %255, -1
  %258 = mul i32 %257, %255
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %261, %260
  %263 = select i1 %262, i32 1867602477, i32 -1360053102
  br label %.backedge

264:                                              ; preds = %17
  %265 = trunc i32 %.088 to i8
  %266 = add i8 %265, 48
  %267 = sext i32 %.092 to i64
  %.0..0..0.56 = load volatile i64, i64* %6, align 8
  %268 = mul nsw i64 %.0..0..0.56, %267
  %269 = sext i32 %.090 to i64
  %.idx100 = add nsw i64 %268, %269
  %270 = getelementptr inbounds i8, i8* %16, i64 %.idx100
  store i8 %266, i8* %270, align 1
  %271 = load i32, i32* @x.1, align 4
  %272 = load i32, i32* @y.2, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 1063621246, i32 -1360053102
  br label %.backedge

280:                                              ; preds = %17
  br label %.backedge

281:                                              ; preds = %17
  %282 = load i32, i32* @x.1, align 4
  %283 = load i32, i32* @y.2, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 1193281279, i32 1539987493
  br label %.backedge

291:                                              ; preds = %17
  %292 = add i32 %.090, 1
  %293 = load i32, i32* @x.1, align 4
  %294 = load i32, i32* @y.2, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 1970796182, i32 1539987493
  br label %.backedge

302:                                              ; preds = %17
  br label %.backedge

303:                                              ; preds = %17
  br label %.backedge

304:                                              ; preds = %17
  %305 = add i32 %.092, 1
  br label %.backedge

306:                                              ; preds = %17
  br label %.backedge

307:                                              ; preds = %17
  %308 = load i32, i32* @x.1, align 4
  %309 = load i32, i32* @y.2, align 4
  %310 = add i32 %308, -1
  %311 = mul i32 %310, %308
  %312 = and i32 %311, 1
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %314, %313
  %316 = select i1 %315, i32 1895858535, i32 961251127
  br label %.backedge

317:                                              ; preds = %17
  %318 = load i32, i32* %7, align 4
  %319 = icmp slt i32 %.080, %318
  store i1 %319, i1* %1, align 1
  %320 = load i32, i32* @x.1, align 4
  %321 = load i32, i32* @y.2, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 879903412, i32 961251127
  br label %.backedge

329:                                              ; preds = %17
  %.0..0..0.77 = load volatile i1, i1* %1, align 1
  %330 = select i1 %.0..0..0.77, i32 -1259327602, i32 -1864600799
  br label %.backedge

331:                                              ; preds = %17
  %332 = load i32, i32* @x.1, align 4
  %333 = load i32, i32* @y.2, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 -748248394, i32 1335144905
  br label %.backedge

341:                                              ; preds = %17
  %342 = load i32, i32* @x.1, align 4
  %343 = load i32, i32* @y.2, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 2078145139, i32 1335144905
  br label %.backedge

351:                                              ; preds = %17
  br label %.backedge

352:                                              ; preds = %17
  %353 = load i32, i32* %8, align 4
  %354 = icmp slt i32 %.078, %353
  %355 = select i1 %354, i32 783934181, i32 258446798
  br label %.backedge

356:                                              ; preds = %17
  %357 = sext i32 %.080 to i64
  %.0..0..0.57 = load volatile i64, i64* %6, align 8
  %358 = mul nsw i64 %.0..0..0.57, %357
  %359 = sext i32 %.078 to i64
  %.idx99 = add nsw i64 %358, %359
  %360 = getelementptr inbounds i8, i8* %16, i64 %.idx99
  %361 = load i8, i8* %360, align 1
  %362 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %361)
  br label %.backedge

363:                                              ; preds = %17
  %364 = load i32, i32* @x.1, align 4
  %365 = load i32, i32* @y.2, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 140228117, i32 491537453
  br label %.backedge

373:                                              ; preds = %17
  %374 = add i32 %.078, 1
  %375 = load i32, i32* @x.1, align 4
  %376 = load i32, i32* @y.2, align 4
  %377 = add i32 %375, -1
  %378 = mul i32 %377, %375
  %379 = and i32 %378, 1
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %381, %380
  %383 = select i1 %382, i32 -1615521789, i32 491537453
  br label %.backedge

384:                                              ; preds = %17
  br label %.backedge

385:                                              ; preds = %17
  %386 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

387:                                              ; preds = %17
  %388 = load i32, i32* @x.1, align 4
  %389 = load i32, i32* @y.2, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 1484998431, i32 -599478357
  br label %.backedge

397:                                              ; preds = %17
  %398 = add i32 %.080, 1
  %399 = load i32, i32* @x.1, align 4
  %400 = load i32, i32* @y.2, align 4
  %401 = add i32 %399, -1
  %402 = mul i32 %401, %399
  %403 = and i32 %402, 1
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %405, %404
  %407 = select i1 %406, i32 -317695174, i32 -599478357
  br label %.backedge

408:                                              ; preds = %17
  br label %.backedge

409:                                              ; preds = %17
  ret i32 0

410:                                              ; preds = %17
  br label %.backedge

411:                                              ; preds = %17
  br label %.backedge

412:                                              ; preds = %17
  br label %.backedge

413:                                              ; preds = %17
  %.0..0..0.58 = load volatile i64, i64* %6, align 8
  %.0..0..0.59 = load volatile i64, i64* %6, align 8
  %.0..0..0.60 = load volatile i64, i64* %6, align 8
  %.0..0..0.61 = load volatile i64, i64* %6, align 8
  %.0..0..0.62 = load volatile i64, i64* %6, align 8
  %.0..0..0.63 = load volatile i64, i64* %6, align 8
  br label %.backedge

414:                                              ; preds = %17
  br label %.backedge

415:                                              ; preds = %17
  br label %.backedge

416:                                              ; preds = %17
  %417 = sext i32 %.086 to i64
  %418 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ4mainE2dx, i64 0, i64 %417
  %419 = load i32, i32* %418, align 4
  %420 = add i32 %419, %.092
  %421 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ4mainE2dy, i64 0, i64 %417
  %422 = load i32, i32* %421, align 4
  %423 = add i32 %422, %.090
  br label %.backedge

424:                                              ; preds = %17
  br label %.backedge

425:                                              ; preds = %17
  %426 = trunc i32 %.088 to i8
  %427 = add i8 %426, 48
  %428 = sext i32 %.092 to i64
  %.0..0..0.64 = load volatile i64, i64* %6, align 8
  %.0..0..0.65 = load volatile i64, i64* %6, align 8
  %.0..0..0.66 = load volatile i64, i64* %6, align 8
  %.0..0..0.67 = load volatile i64, i64* %6, align 8
  %.0..0..0.68 = load volatile i64, i64* %6, align 8
  %.0..0..0.69 = load volatile i64, i64* %6, align 8
  %.0..0..0.70 = load volatile i64, i64* %6, align 8
  %.0..0..0.71 = load volatile i64, i64* %6, align 8
  %.0..0..0.72 = load volatile i64, i64* %6, align 8
  %429 = mul nsw i64 %.0..0..0.72, %428
  %430 = sext i32 %.090 to i64
  %.idx = add nsw i64 %429, %430
  %431 = getelementptr inbounds i8, i8* %16, i64 %.idx
  store i8 %427, i8* %431, align 1
  br label %.backedge

432:                                              ; preds = %17
  %433 = add i32 %.090, 1
  br label %.backedge

434:                                              ; preds = %17
  br label %.backedge

435:                                              ; preds = %17
  br label %.backedge

436:                                              ; preds = %17
  %437 = add i32 %.078, 1
  br label %.backedge

438:                                              ; preds = %17
  %.neg = add i32 %.080, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s203945205.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
