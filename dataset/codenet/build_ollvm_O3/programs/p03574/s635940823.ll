; ModuleID = 'build_ollvm/programs/p03574/s635940823.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s635940823.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s635940823.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1799616065, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1799616065, label %11
    i32 -1419613067, label %14
    i32 438426246, label %25
    i32 -1193570533, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1419613067, i32 -1193570533
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 438426246, i32 -1193570533
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1419613067, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %11)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %13, i32* nonnull dereferenceable(4) %12)
  %15 = load i32, i32* %11, align 4
  %16 = zext i32 %15 to i64
  %17 = load i32, i32* %12, align 4
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %10, align 8
  %19 = call i8* @llvm.stacksave()
  %.0..0..0.57 = load volatile i64, i64* %10, align 8
  %20 = mul nuw i64 %.0..0..0.57, %16
  %21 = alloca i8, i64 %20, align 16
  br label %22

22:                                               ; preds = %.backedge, %0
  %.0117 = phi i32 [ 0, %0 ], [ %.0117.be, %.backedge ]
  %.0115 = phi i32 [ undef, %0 ], [ %.0115.be, %.backedge ]
  %.0113 = phi i32 [ undef, %0 ], [ %.0113.be, %.backedge ]
  %.0111 = phi i32 [ undef, %0 ], [ %.0111.be, %.backedge ]
  %.0109 = phi i32 [ undef, %0 ], [ %.0109.be, %.backedge ]
  %.0107 = phi i32 [ undef, %0 ], [ %.0107.be, %.backedge ]
  %.0105 = phi i32 [ undef, %0 ], [ %.0105.be, %.backedge ]
  %.0103 = phi i32 [ undef, %0 ], [ %.0103.be, %.backedge ]
  %.0101 = phi i32 [ undef, %0 ], [ %.0101.be, %.backedge ]
  %.0 = phi i32 [ 229119439, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 229119439, label %23
    i32 1384183102, label %27
    i32 594423551, label %37
    i32 -285287962, label %47
    i32 -1734801927, label %48
    i32 1863084645, label %52
    i32 -1888536471, label %62
    i32 -1642025122, label %77
    i32 865652640, label %78
    i32 -950545699, label %80
    i32 730348728, label %81
    i32 -100658326, label %83
    i32 -789326822, label %84
    i32 -515647424, label %94
    i32 -448530852, label %106
    i32 -2015672643, label %108
    i32 535192767, label %109
    i32 913799835, label %113
    i32 759107994, label %123
    i32 -1864818798, label %139
    i32 -2059661189, label %141
    i32 465168775, label %143
    i32 799831122, label %146
    i32 -270361432, label %148
    i32 2103083961, label %151
    i32 -1314928403, label %161
    i32 -1589418494, label %172
    i32 889927451, label %174
    i32 741937160, label %184
    i32 748621484, label %196
    i32 335842285, label %198
    i32 1755914971, label %208
    i32 -1654788205, label %219
    i32 -1998006239, label %221
    i32 -987934128, label %231
    i32 -1870390919, label %243
    i32 206917744, label %245
    i32 52299390, label %246
    i32 -2022602463, label %256
    i32 928241053, label %272
    i32 -1111707741, label %274
    i32 1624710504, label %275
    i32 1970054718, label %276
    i32 394437524, label %278
    i32 175034002, label %279
    i32 -1067759314, label %281
    i32 -1806343094, label %291
    i32 -374820923, label %307
    i32 -229496981, label %308
    i32 -1768796344, label %309
    i32 -906726992, label %311
    i32 1867140366, label %321
    i32 2055943449, label %331
    i32 1203056121, label %332
    i32 879502038, label %342
    i32 -163422577, label %353
    i32 1412668524, label %354
    i32 -135037556, label %364
    i32 -1968942980, label %374
    i32 157109373, label %375
    i32 627200470, label %385
    i32 -1672194089, label %397
    i32 1923921744, label %399
    i32 -62070989, label %400
    i32 -1729720727, label %404
    i32 1668609637, label %411
    i32 371104461, label %421
    i32 526471311, label %432
    i32 -1103045040, label %433
    i32 1382909297, label %435
    i32 -410220763, label %436
    i32 -903582075, label %446
    i32 267002038, label %456
    i32 -244650601, label %457
    i32 -726218467, label %458
    i32 -1564343427, label %464
    i32 540025419, label %465
    i32 -765192435, label %466
    i32 529266611, label %467
    i32 -1675982622, label %468
    i32 2008717276, label %469
    i32 1442408715, label %470
    i32 947806658, label %471
    i32 -139668536, label %478
    i32 1866073873, label %479
    i32 -474565654, label %481
    i32 261143044, label %482
    i32 1503740477, label %483
    i32 -296830606, label %485
  ]

.backedge:                                        ; preds = %22, %485, %483, %482, %481, %479, %478, %471, %470, %469, %468, %467, %466, %465, %464, %458, %457, %446, %436, %435, %433, %432, %421, %411, %404, %400, %399, %397, %385, %375, %374, %364, %354, %353, %342, %332, %331, %321, %311, %309, %308, %307, %291, %281, %279, %278, %276, %275, %274, %272, %256, %246, %245, %243, %231, %221, %219, %208, %198, %196, %184, %174, %172, %161, %151, %148, %146, %143, %141, %139, %123, %113, %109, %108, %106, %94, %84, %83, %81, %80, %78, %77, %62, %52, %48, %47, %37, %27, %23
  %.0117.be = phi i32 [ %.0117, %22 ], [ %.0117, %485 ], [ %.0117, %483 ], [ %.0117, %482 ], [ %.0117, %481 ], [ %.0117, %479 ], [ %.0117, %478 ], [ %.0117, %471 ], [ %.0117, %470 ], [ %.0117, %469 ], [ %.0117, %468 ], [ %.0117, %467 ], [ %.0117, %466 ], [ %.0117, %465 ], [ %.0117, %464 ], [ %.0117, %458 ], [ %.0117, %457 ], [ %.0117, %446 ], [ %.0117, %436 ], [ %.0117, %435 ], [ %.0117, %433 ], [ %.0117, %432 ], [ %.0117, %421 ], [ %.0117, %411 ], [ %.0117, %404 ], [ %.0117, %400 ], [ %.0117, %399 ], [ %.0117, %397 ], [ %.0117, %385 ], [ %.0117, %375 ], [ %.0117, %374 ], [ %.0117, %364 ], [ %.0117, %354 ], [ %.0117, %353 ], [ %.0117, %342 ], [ %.0117, %332 ], [ %.0117, %331 ], [ %.0117, %321 ], [ %.0117, %311 ], [ %.0117, %309 ], [ %.0117, %308 ], [ %.0117, %307 ], [ %.0117, %291 ], [ %.0117, %281 ], [ %.0117, %279 ], [ %.0117, %278 ], [ %.0117, %276 ], [ %.0117, %275 ], [ %.0117, %274 ], [ %.0117, %272 ], [ %.0117, %256 ], [ %.0117, %246 ], [ %.0117, %245 ], [ %.0117, %243 ], [ %.0117, %231 ], [ %.0117, %221 ], [ %.0117, %219 ], [ %.0117, %208 ], [ %.0117, %198 ], [ %.0117, %196 ], [ %.0117, %184 ], [ %.0117, %174 ], [ %.0117, %172 ], [ %.0117, %161 ], [ %.0117, %151 ], [ %.0117, %148 ], [ %.0117, %146 ], [ %.0117, %143 ], [ %.0117, %141 ], [ %.0117, %139 ], [ %.0117, %123 ], [ %.0117, %113 ], [ %.0117, %109 ], [ %.0117, %108 ], [ %.0117, %106 ], [ %.0117, %94 ], [ %.0117, %84 ], [ %.0117, %83 ], [ %82, %81 ], [ %.0117, %80 ], [ %.0117, %78 ], [ %.0117, %77 ], [ %.0117, %62 ], [ %.0117, %52 ], [ %.0117, %48 ], [ %.0117, %47 ], [ %.0117, %37 ], [ %.0117, %27 ], [ %.0117, %23 ]
  %.0115.be = phi i32 [ %.0115, %22 ], [ %.0115, %485 ], [ %.0115, %483 ], [ %.0115, %482 ], [ %.0115, %481 ], [ %.0115, %479 ], [ %.0115, %478 ], [ %.0115, %471 ], [ %.0115, %470 ], [ %.0115, %469 ], [ %.0115, %468 ], [ %.0115, %467 ], [ %.0115, %466 ], [ %.0115, %465 ], [ %.0115, %464 ], [ %.0115, %458 ], [ 0, %457 ], [ %.0115, %446 ], [ %.0115, %436 ], [ %.0115, %435 ], [ %.0115, %433 ], [ %.0115, %432 ], [ %.0115, %421 ], [ %.0115, %411 ], [ %.0115, %404 ], [ %.0115, %400 ], [ %.0115, %399 ], [ %.0115, %397 ], [ %.0115, %385 ], [ %.0115, %375 ], [ %.0115, %374 ], [ %.0115, %364 ], [ %.0115, %354 ], [ %.0115, %353 ], [ %.0115, %342 ], [ %.0115, %332 ], [ %.0115, %331 ], [ %.0115, %321 ], [ %.0115, %311 ], [ %.0115, %309 ], [ %.0115, %308 ], [ %.0115, %307 ], [ %.0115, %291 ], [ %.0115, %281 ], [ %.0115, %279 ], [ %.0115, %278 ], [ %.0115, %276 ], [ %.0115, %275 ], [ %.0115, %274 ], [ %.0115, %272 ], [ %.0115, %256 ], [ %.0115, %246 ], [ %.0115, %245 ], [ %.0115, %243 ], [ %.0115, %231 ], [ %.0115, %221 ], [ %.0115, %219 ], [ %.0115, %208 ], [ %.0115, %198 ], [ %.0115, %196 ], [ %.0115, %184 ], [ %.0115, %174 ], [ %.0115, %172 ], [ %.0115, %161 ], [ %.0115, %151 ], [ %.0115, %148 ], [ %.0115, %146 ], [ %.0115, %143 ], [ %.0115, %141 ], [ %.0115, %139 ], [ %.0115, %123 ], [ %.0115, %113 ], [ %.0115, %109 ], [ %.0115, %108 ], [ %.0115, %106 ], [ %.0115, %94 ], [ %.0115, %84 ], [ %.0115, %83 ], [ %.0115, %81 ], [ %.0115, %80 ], [ %79, %78 ], [ %.0115, %77 ], [ %.0115, %62 ], [ %.0115, %52 ], [ %.0115, %48 ], [ %.0115, %47 ], [ 0, %37 ], [ %.0115, %27 ], [ %.0115, %23 ]
  %.0113.be = phi i32 [ %.0113, %22 ], [ %.0113, %485 ], [ %.0113, %483 ], [ %.0113, %482 ], [ %.0113, %481 ], [ %480, %479 ], [ %.0113, %478 ], [ %.0113, %471 ], [ %.0113, %470 ], [ %.0113, %469 ], [ %.0113, %468 ], [ %.0113, %467 ], [ %.0113, %466 ], [ %.0113, %465 ], [ %.0113, %464 ], [ %.0113, %458 ], [ %.0113, %457 ], [ %.0113, %446 ], [ %.0113, %436 ], [ %.0113, %435 ], [ %.0113, %433 ], [ %.0113, %432 ], [ %.0113, %421 ], [ %.0113, %411 ], [ %.0113, %404 ], [ %.0113, %400 ], [ %.0113, %399 ], [ %.0113, %397 ], [ %.0113, %385 ], [ %.0113, %375 ], [ %.0113, %374 ], [ %.0113, %364 ], [ %.0113, %354 ], [ %.0113, %353 ], [ %343, %342 ], [ %.0113, %332 ], [ %.0113, %331 ], [ %.0113, %321 ], [ %.0113, %311 ], [ %.0113, %309 ], [ %.0113, %308 ], [ %.0113, %307 ], [ %.0113, %291 ], [ %.0113, %281 ], [ %.0113, %279 ], [ %.0113, %278 ], [ %.0113, %276 ], [ %.0113, %275 ], [ %.0113, %274 ], [ %.0113, %272 ], [ %.0113, %256 ], [ %.0113, %246 ], [ %.0113, %245 ], [ %.0113, %243 ], [ %.0113, %231 ], [ %.0113, %221 ], [ %.0113, %219 ], [ %.0113, %208 ], [ %.0113, %198 ], [ %.0113, %196 ], [ %.0113, %184 ], [ %.0113, %174 ], [ %.0113, %172 ], [ %.0113, %161 ], [ %.0113, %151 ], [ %.0113, %148 ], [ %.0113, %146 ], [ %.0113, %143 ], [ %.0113, %141 ], [ %.0113, %139 ], [ %.0113, %123 ], [ %.0113, %113 ], [ %.0113, %109 ], [ %.0113, %108 ], [ %.0113, %106 ], [ %.0113, %94 ], [ %.0113, %84 ], [ 0, %83 ], [ %.0113, %81 ], [ %.0113, %80 ], [ %.0113, %78 ], [ %.0113, %77 ], [ %.0113, %62 ], [ %.0113, %52 ], [ %.0113, %48 ], [ %.0113, %47 ], [ %.0113, %37 ], [ %.0113, %27 ], [ %.0113, %23 ]
  %.0111.be = phi i32 [ %.0111, %22 ], [ %.0111, %485 ], [ %.0111, %483 ], [ %.0111, %482 ], [ %.0111, %481 ], [ %.0111, %479 ], [ %.0111, %478 ], [ %.0111, %471 ], [ %.0111, %470 ], [ %.0111, %469 ], [ %.0111, %468 ], [ %.0111, %467 ], [ %.0111, %466 ], [ %.0111, %465 ], [ %.0111, %464 ], [ %.0111, %458 ], [ %.0111, %457 ], [ %.0111, %446 ], [ %.0111, %436 ], [ %.0111, %435 ], [ %.0111, %433 ], [ %.0111, %432 ], [ %.0111, %421 ], [ %.0111, %411 ], [ %.0111, %404 ], [ %.0111, %400 ], [ %.0111, %399 ], [ %.0111, %397 ], [ %.0111, %385 ], [ %.0111, %375 ], [ %.0111, %374 ], [ %.0111, %364 ], [ %.0111, %354 ], [ %.0111, %353 ], [ %.0111, %342 ], [ %.0111, %332 ], [ %.0111, %331 ], [ %.0111, %321 ], [ %.0111, %311 ], [ %310, %309 ], [ %.0111, %308 ], [ %.0111, %307 ], [ %.0111, %291 ], [ %.0111, %281 ], [ %.0111, %279 ], [ %.0111, %278 ], [ %.0111, %276 ], [ %.0111, %275 ], [ %.0111, %274 ], [ %.0111, %272 ], [ %.0111, %256 ], [ %.0111, %246 ], [ %.0111, %245 ], [ %.0111, %243 ], [ %.0111, %231 ], [ %.0111, %221 ], [ %.0111, %219 ], [ %.0111, %208 ], [ %.0111, %198 ], [ %.0111, %196 ], [ %.0111, %184 ], [ %.0111, %174 ], [ %.0111, %172 ], [ %.0111, %161 ], [ %.0111, %151 ], [ %.0111, %148 ], [ %.0111, %146 ], [ %.0111, %143 ], [ %.0111, %141 ], [ %.0111, %139 ], [ %.0111, %123 ], [ %.0111, %113 ], [ %.0111, %109 ], [ 0, %108 ], [ %.0111, %106 ], [ %.0111, %94 ], [ %.0111, %84 ], [ %.0111, %83 ], [ %.0111, %81 ], [ %.0111, %80 ], [ %.0111, %78 ], [ %.0111, %77 ], [ %.0111, %62 ], [ %.0111, %52 ], [ %.0111, %48 ], [ %.0111, %47 ], [ %.0111, %37 ], [ %.0111, %27 ], [ %.0111, %23 ]
  %.0109.be = phi i32 [ %.0109, %22 ], [ %.0109, %485 ], [ %.0109, %483 ], [ %.0109, %482 ], [ %.0109, %481 ], [ %.0109, %479 ], [ %.0109, %478 ], [ %.0109, %471 ], [ %.0109, %470 ], [ %.0109, %469 ], [ %.0109, %468 ], [ %.0109, %467 ], [ %.0109, %466 ], [ %.0109, %465 ], [ %.0109, %464 ], [ %.0109, %458 ], [ %.0109, %457 ], [ %.0109, %446 ], [ %.0109, %436 ], [ %.0109, %435 ], [ %.0109, %433 ], [ %.0109, %432 ], [ %.0109, %421 ], [ %.0109, %411 ], [ %.0109, %404 ], [ %.0109, %400 ], [ %.0109, %399 ], [ %.0109, %397 ], [ %.0109, %385 ], [ %.0109, %375 ], [ %.0109, %374 ], [ %.0109, %364 ], [ %.0109, %354 ], [ %.0109, %353 ], [ %.0109, %342 ], [ %.0109, %332 ], [ %.0109, %331 ], [ %.0109, %321 ], [ %.0109, %311 ], [ %.0109, %309 ], [ %.0109, %308 ], [ %.0109, %307 ], [ %.0109, %291 ], [ %.0109, %281 ], [ %.0109, %279 ], [ %.0109, %278 ], [ %.0109, %276 ], [ %.0109, %275 ], [ %.neg122, %274 ], [ %.0109, %272 ], [ %.0109, %256 ], [ %.0109, %246 ], [ %.0109, %245 ], [ %.0109, %243 ], [ %.0109, %231 ], [ %.0109, %221 ], [ %.0109, %219 ], [ %.0109, %208 ], [ %.0109, %198 ], [ %.0109, %196 ], [ %.0109, %184 ], [ %.0109, %174 ], [ %.0109, %172 ], [ %.0109, %161 ], [ %.0109, %151 ], [ %.0109, %148 ], [ %.0109, %146 ], [ %.0109, %143 ], [ 0, %141 ], [ %.0109, %139 ], [ %.0109, %123 ], [ %.0109, %113 ], [ %.0109, %109 ], [ %.0109, %108 ], [ %.0109, %106 ], [ %.0109, %94 ], [ %.0109, %84 ], [ %.0109, %83 ], [ %.0109, %81 ], [ %.0109, %80 ], [ %.0109, %78 ], [ %.0109, %77 ], [ %.0109, %62 ], [ %.0109, %52 ], [ %.0109, %48 ], [ %.0109, %47 ], [ %.0109, %37 ], [ %.0109, %27 ], [ %.0109, %23 ]
  %.0107.be = phi i32 [ %.0107, %22 ], [ %.0107, %485 ], [ %.0107, %483 ], [ %.0107, %482 ], [ %.0107, %481 ], [ %.0107, %479 ], [ %.0107, %478 ], [ %.0107, %471 ], [ %.0107, %470 ], [ %.0107, %469 ], [ %.0107, %468 ], [ %.0107, %467 ], [ %.0107, %466 ], [ %.0107, %465 ], [ %.0107, %464 ], [ %.0107, %458 ], [ %.0107, %457 ], [ %.0107, %446 ], [ %.0107, %436 ], [ %.0107, %435 ], [ %.0107, %433 ], [ %.0107, %432 ], [ %.0107, %421 ], [ %.0107, %411 ], [ %.0107, %404 ], [ %.0107, %400 ], [ %.0107, %399 ], [ %.0107, %397 ], [ %.0107, %385 ], [ %.0107, %375 ], [ %.0107, %374 ], [ %.0107, %364 ], [ %.0107, %354 ], [ %.0107, %353 ], [ %.0107, %342 ], [ %.0107, %332 ], [ %.0107, %331 ], [ %.0107, %321 ], [ %.0107, %311 ], [ %.0107, %309 ], [ %.0107, %308 ], [ %.0107, %307 ], [ %.0107, %291 ], [ %.0107, %281 ], [ %280, %279 ], [ %.0107, %278 ], [ %.0107, %276 ], [ %.0107, %275 ], [ %.0107, %274 ], [ %.0107, %272 ], [ %.0107, %256 ], [ %.0107, %246 ], [ %.0107, %245 ], [ %.0107, %243 ], [ %.0107, %231 ], [ %.0107, %221 ], [ %.0107, %219 ], [ %.0107, %208 ], [ %.0107, %198 ], [ %.0107, %196 ], [ %.0107, %184 ], [ %.0107, %174 ], [ %.0107, %172 ], [ %.0107, %161 ], [ %.0107, %151 ], [ %.0107, %148 ], [ %.0107, %146 ], [ %.0107, %143 ], [ %142, %141 ], [ %.0107, %139 ], [ %.0107, %123 ], [ %.0107, %113 ], [ %.0107, %109 ], [ %.0107, %108 ], [ %.0107, %106 ], [ %.0107, %94 ], [ %.0107, %84 ], [ %.0107, %83 ], [ %.0107, %81 ], [ %.0107, %80 ], [ %.0107, %78 ], [ %.0107, %77 ], [ %.0107, %62 ], [ %.0107, %52 ], [ %.0107, %48 ], [ %.0107, %47 ], [ %.0107, %37 ], [ %.0107, %27 ], [ %.0107, %23 ]
  %.0105.be = phi i32 [ %.0105, %22 ], [ %.0105, %485 ], [ %.0105, %483 ], [ %.0105, %482 ], [ %.0105, %481 ], [ %.0105, %479 ], [ %.0105, %478 ], [ %.0105, %471 ], [ %.0105, %470 ], [ %.0105, %469 ], [ %.0105, %468 ], [ %.0105, %467 ], [ %.0105, %466 ], [ %.0105, %465 ], [ %.0105, %464 ], [ %.0105, %458 ], [ %.0105, %457 ], [ %.0105, %446 ], [ %.0105, %436 ], [ %.0105, %435 ], [ %.0105, %433 ], [ %.0105, %432 ], [ %.0105, %421 ], [ %.0105, %411 ], [ %.0105, %404 ], [ %.0105, %400 ], [ %.0105, %399 ], [ %.0105, %397 ], [ %.0105, %385 ], [ %.0105, %375 ], [ %.0105, %374 ], [ %.0105, %364 ], [ %.0105, %354 ], [ %.0105, %353 ], [ %.0105, %342 ], [ %.0105, %332 ], [ %.0105, %331 ], [ %.0105, %321 ], [ %.0105, %311 ], [ %.0105, %309 ], [ %.0105, %308 ], [ %.0105, %307 ], [ %.0105, %291 ], [ %.0105, %281 ], [ %.0105, %279 ], [ %.0105, %278 ], [ %277, %276 ], [ %.0105, %275 ], [ %.0105, %274 ], [ %.0105, %272 ], [ %.0105, %256 ], [ %.0105, %246 ], [ %.0105, %245 ], [ %.0105, %243 ], [ %.0105, %231 ], [ %.0105, %221 ], [ %.0105, %219 ], [ %.0105, %208 ], [ %.0105, %198 ], [ %.0105, %196 ], [ %.0105, %184 ], [ %.0105, %174 ], [ %.0105, %172 ], [ %.0105, %161 ], [ %.0105, %151 ], [ %.0105, %148 ], [ %147, %146 ], [ %.0105, %143 ], [ %.0105, %141 ], [ %.0105, %139 ], [ %.0105, %123 ], [ %.0105, %113 ], [ %.0105, %109 ], [ %.0105, %108 ], [ %.0105, %106 ], [ %.0105, %94 ], [ %.0105, %84 ], [ %.0105, %83 ], [ %.0105, %81 ], [ %.0105, %80 ], [ %.0105, %78 ], [ %.0105, %77 ], [ %.0105, %62 ], [ %.0105, %52 ], [ %.0105, %48 ], [ %.0105, %47 ], [ %.0105, %37 ], [ %.0105, %27 ], [ %.0105, %23 ]
  %.0103.be = phi i32 [ %.0103, %22 ], [ %.0103, %485 ], [ %.0103, %483 ], [ %.0103, %482 ], [ 0, %481 ], [ %.0103, %479 ], [ %.0103, %478 ], [ %.0103, %471 ], [ %.0103, %470 ], [ %.0103, %469 ], [ %.0103, %468 ], [ %.0103, %467 ], [ %.0103, %466 ], [ %.0103, %465 ], [ %.0103, %464 ], [ %.0103, %458 ], [ %.0103, %457 ], [ %.0103, %446 ], [ %.0103, %436 ], [ %.neg, %435 ], [ %.0103, %433 ], [ %.0103, %432 ], [ %.0103, %421 ], [ %.0103, %411 ], [ %.0103, %404 ], [ %.0103, %400 ], [ %.0103, %399 ], [ %.0103, %397 ], [ %.0103, %385 ], [ %.0103, %375 ], [ %.0103, %374 ], [ 0, %364 ], [ %.0103, %354 ], [ %.0103, %353 ], [ %.0103, %342 ], [ %.0103, %332 ], [ %.0103, %331 ], [ %.0103, %321 ], [ %.0103, %311 ], [ %.0103, %309 ], [ %.0103, %308 ], [ %.0103, %307 ], [ %.0103, %291 ], [ %.0103, %281 ], [ %.0103, %279 ], [ %.0103, %278 ], [ %.0103, %276 ], [ %.0103, %275 ], [ %.0103, %274 ], [ %.0103, %272 ], [ %.0103, %256 ], [ %.0103, %246 ], [ %.0103, %245 ], [ %.0103, %243 ], [ %.0103, %231 ], [ %.0103, %221 ], [ %.0103, %219 ], [ %.0103, %208 ], [ %.0103, %198 ], [ %.0103, %196 ], [ %.0103, %184 ], [ %.0103, %174 ], [ %.0103, %172 ], [ %.0103, %161 ], [ %.0103, %151 ], [ %.0103, %148 ], [ %.0103, %146 ], [ %.0103, %143 ], [ %.0103, %141 ], [ %.0103, %139 ], [ %.0103, %123 ], [ %.0103, %113 ], [ %.0103, %109 ], [ %.0103, %108 ], [ %.0103, %106 ], [ %.0103, %94 ], [ %.0103, %84 ], [ %.0103, %83 ], [ %.0103, %81 ], [ %.0103, %80 ], [ %.0103, %78 ], [ %.0103, %77 ], [ %.0103, %62 ], [ %.0103, %52 ], [ %.0103, %48 ], [ %.0103, %47 ], [ %.0103, %37 ], [ %.0103, %27 ], [ %.0103, %23 ]
  %.0101.be = phi i32 [ %.0101, %22 ], [ %.0101, %485 ], [ %484, %483 ], [ %.0101, %482 ], [ %.0101, %481 ], [ %.0101, %479 ], [ %.0101, %478 ], [ %.0101, %471 ], [ %.0101, %470 ], [ %.0101, %469 ], [ %.0101, %468 ], [ %.0101, %467 ], [ %.0101, %466 ], [ %.0101, %465 ], [ %.0101, %464 ], [ %.0101, %458 ], [ %.0101, %457 ], [ %.0101, %446 ], [ %.0101, %436 ], [ %.0101, %435 ], [ %.0101, %433 ], [ %.0101, %432 ], [ %422, %421 ], [ %.0101, %411 ], [ %.0101, %404 ], [ %.0101, %400 ], [ 0, %399 ], [ %.0101, %397 ], [ %.0101, %385 ], [ %.0101, %375 ], [ %.0101, %374 ], [ %.0101, %364 ], [ %.0101, %354 ], [ %.0101, %353 ], [ %.0101, %342 ], [ %.0101, %332 ], [ %.0101, %331 ], [ %.0101, %321 ], [ %.0101, %311 ], [ %.0101, %309 ], [ %.0101, %308 ], [ %.0101, %307 ], [ %.0101, %291 ], [ %.0101, %281 ], [ %.0101, %279 ], [ %.0101, %278 ], [ %.0101, %276 ], [ %.0101, %275 ], [ %.0101, %274 ], [ %.0101, %272 ], [ %.0101, %256 ], [ %.0101, %246 ], [ %.0101, %245 ], [ %.0101, %243 ], [ %.0101, %231 ], [ %.0101, %221 ], [ %.0101, %219 ], [ %.0101, %208 ], [ %.0101, %198 ], [ %.0101, %196 ], [ %.0101, %184 ], [ %.0101, %174 ], [ %.0101, %172 ], [ %.0101, %161 ], [ %.0101, %151 ], [ %.0101, %148 ], [ %.0101, %146 ], [ %.0101, %143 ], [ %.0101, %141 ], [ %.0101, %139 ], [ %.0101, %123 ], [ %.0101, %113 ], [ %.0101, %109 ], [ %.0101, %108 ], [ %.0101, %106 ], [ %.0101, %94 ], [ %.0101, %84 ], [ %.0101, %83 ], [ %.0101, %81 ], [ %.0101, %80 ], [ %.0101, %78 ], [ %.0101, %77 ], [ %.0101, %62 ], [ %.0101, %52 ], [ %.0101, %48 ], [ %.0101, %47 ], [ %.0101, %37 ], [ %.0101, %27 ], [ %.0101, %23 ]
  %.0.be = phi i32 [ %.0, %22 ], [ -903582075, %485 ], [ 371104461, %483 ], [ 627200470, %482 ], [ -135037556, %481 ], [ 879502038, %479 ], [ 1867140366, %478 ], [ -1806343094, %471 ], [ -2022602463, %470 ], [ -987934128, %469 ], [ 1755914971, %468 ], [ 741937160, %467 ], [ -1314928403, %466 ], [ 759107994, %465 ], [ -515647424, %464 ], [ -1888536471, %458 ], [ 594423551, %457 ], [ %455, %446 ], [ %445, %436 ], [ 157109373, %435 ], [ 1382909297, %433 ], [ -62070989, %432 ], [ %431, %421 ], [ %420, %411 ], [ 1668609637, %404 ], [ %403, %400 ], [ -62070989, %399 ], [ %398, %397 ], [ %396, %385 ], [ %384, %375 ], [ 157109373, %374 ], [ %373, %364 ], [ %363, %354 ], [ -789326822, %353 ], [ %352, %342 ], [ %341, %332 ], [ 1203056121, %331 ], [ %330, %321 ], [ %320, %311 ], [ 535192767, %309 ], [ -1768796344, %308 ], [ -229496981, %307 ], [ %306, %291 ], [ %290, %281 ], [ 465168775, %279 ], [ 175034002, %278 ], [ -270361432, %276 ], [ 1970054718, %275 ], [ 1624710504, %274 ], [ %273, %272 ], [ %271, %256 ], [ %255, %246 ], [ 1970054718, %245 ], [ %244, %243 ], [ %242, %231 ], [ %230, %221 ], [ %220, %219 ], [ %218, %208 ], [ %207, %198 ], [ %197, %196 ], [ %195, %184 ], [ %183, %174 ], [ %173, %172 ], [ %171, %161 ], [ %160, %151 ], [ %150, %148 ], [ -270361432, %146 ], [ %145, %143 ], [ 465168775, %141 ], [ %140, %139 ], [ %138, %123 ], [ %122, %113 ], [ %112, %109 ], [ 535192767, %108 ], [ %107, %106 ], [ %105, %94 ], [ %93, %84 ], [ -789326822, %83 ], [ 229119439, %81 ], [ 730348728, %80 ], [ -1734801927, %78 ], [ 865652640, %77 ], [ %76, %62 ], [ %61, %52 ], [ %51, %48 ], [ -1734801927, %47 ], [ %46, %37 ], [ %36, %27 ], [ %26, %23 ]
  br label %22

23:                                               ; preds = %22
  %24 = load i32, i32* %11, align 4
  %25 = icmp slt i32 %.0117, %24
  %26 = select i1 %25, i32 1384183102, i32 -100658326
  br label %.backedge

27:                                               ; preds = %22
  %28 = load i32, i32* @x.1, align 4
  %29 = load i32, i32* @y.2, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 594423551, i32 -244650601
  br label %.backedge

37:                                               ; preds = %22
  %38 = load i32, i32* @x.1, align 4
  %39 = load i32, i32* @y.2, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 -285287962, i32 -244650601
  br label %.backedge

47:                                               ; preds = %22
  br label %.backedge

48:                                               ; preds = %22
  %49 = load i32, i32* %12, align 4
  %50 = icmp slt i32 %.0115, %49
  %51 = select i1 %50, i32 1863084645, i32 -950545699
  br label %.backedge

52:                                               ; preds = %22
  %53 = load i32, i32* @x.1, align 4
  %54 = load i32, i32* @y.2, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -1888536471, i32 -726218467
  br label %.backedge

62:                                               ; preds = %22
  %63 = sext i32 %.0117 to i64
  %.0..0..0.58 = load volatile i64, i64* %10, align 8
  %64 = mul nsw i64 %.0..0..0.58, %63
  %65 = sext i32 %.0115 to i64
  %.idx126 = add nsw i64 %64, %65
  %66 = getelementptr inbounds i8, i8* %21, i64 %.idx126
  %67 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %66)
  %68 = load i32, i32* @x.1, align 4
  %69 = load i32, i32* @y.2, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 -1642025122, i32 -726218467
  br label %.backedge

77:                                               ; preds = %22
  br label %.backedge

78:                                               ; preds = %22
  %79 = add i32 %.0115, 1
  br label %.backedge

80:                                               ; preds = %22
  br label %.backedge

81:                                               ; preds = %22
  %82 = add i32 %.0117, 1
  br label %.backedge

83:                                               ; preds = %22
  br label %.backedge

84:                                               ; preds = %22
  %85 = load i32, i32* @x.1, align 4
  %86 = load i32, i32* @y.2, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 -515647424, i32 -1564343427
  br label %.backedge

94:                                               ; preds = %22
  %95 = load i32, i32* %11, align 4
  %96 = icmp slt i32 %.0113, %95
  store i1 %96, i1* %9, align 1
  %97 = load i32, i32* @x.1, align 4
  %98 = load i32, i32* @y.2, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 -448530852, i32 -1564343427
  br label %.backedge

106:                                              ; preds = %22
  %.0..0..0.92 = load volatile i1, i1* %9, align 1
  %107 = select i1 %.0..0..0.92, i32 -2015672643, i32 1412668524
  br label %.backedge

108:                                              ; preds = %22
  br label %.backedge

109:                                              ; preds = %22
  %110 = load i32, i32* %12, align 4
  %111 = icmp slt i32 %.0111, %110
  %112 = select i1 %111, i32 913799835, i32 -906726992
  br label %.backedge

113:                                              ; preds = %22
  %114 = load i32, i32* @x.1, align 4
  %115 = load i32, i32* @y.2, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 759107994, i32 540025419
  br label %.backedge

123:                                              ; preds = %22
  %124 = sext i32 %.0113 to i64
  %.0..0..0.59 = load volatile i64, i64* %10, align 8
  %125 = mul nsw i64 %.0..0..0.59, %124
  %126 = sext i32 %.0111 to i64
  %.idx125 = add nsw i64 %125, %126
  %127 = getelementptr inbounds i8, i8* %21, i64 %.idx125
  %128 = load i8, i8* %127, align 1
  %129 = icmp eq i8 %128, 46
  store i1 %129, i1* %8, align 1
  %130 = load i32, i32* @x.1, align 4
  %131 = load i32, i32* @y.2, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -1864818798, i32 540025419
  br label %.backedge

139:                                              ; preds = %22
  %.0..0..0.93 = load volatile i1, i1* %8, align 1
  %140 = select i1 %.0..0..0.93, i32 -2059661189, i32 -229496981
  br label %.backedge

141:                                              ; preds = %22
  %142 = add i32 %.0113, -1
  br label %.backedge

143:                                              ; preds = %22
  %144 = add i32 %.0113, 1
  %.not124 = icmp sgt i32 %.0107, %144
  %145 = select i1 %.not124, i32 -1067759314, i32 799831122
  br label %.backedge

146:                                              ; preds = %22
  %147 = add i32 %.0111, -1
  br label %.backedge

148:                                              ; preds = %22
  %149 = add i32 %.0111, 1
  %.not = icmp sgt i32 %.0105, %149
  %150 = select i1 %.not, i32 394437524, i32 2103083961
  br label %.backedge

151:                                              ; preds = %22
  %152 = load i32, i32* @x.1, align 4
  %153 = load i32, i32* @y.2, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 -1314928403, i32 -765192435
  br label %.backedge

161:                                              ; preds = %22
  %162 = icmp slt i32 %.0107, 0
  store i1 %162, i1* %7, align 1
  %163 = load i32, i32* @x.1, align 4
  %164 = load i32, i32* @y.2, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -1589418494, i32 -765192435
  br label %.backedge

172:                                              ; preds = %22
  %.0..0..0.94 = load volatile i1, i1* %7, align 1
  %173 = select i1 %.0..0..0.94, i32 206917744, i32 889927451
  br label %.backedge

174:                                              ; preds = %22
  %175 = load i32, i32* @x.1, align 4
  %176 = load i32, i32* @y.2, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 741937160, i32 529266611
  br label %.backedge

184:                                              ; preds = %22
  %185 = load i32, i32* %11, align 4
  %186 = icmp sge i32 %.0107, %185
  store i1 %186, i1* %6, align 1
  %187 = load i32, i32* @x.1, align 4
  %188 = load i32, i32* @y.2, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 748621484, i32 529266611
  br label %.backedge

196:                                              ; preds = %22
  %.0..0..0.95 = load volatile i1, i1* %6, align 1
  %197 = select i1 %.0..0..0.95, i32 206917744, i32 335842285
  br label %.backedge

198:                                              ; preds = %22
  %199 = load i32, i32* @x.1, align 4
  %200 = load i32, i32* @y.2, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 1755914971, i32 -1675982622
  br label %.backedge

208:                                              ; preds = %22
  %209 = icmp slt i32 %.0105, 0
  store i1 %209, i1* %5, align 1
  %210 = load i32, i32* @x.1, align 4
  %211 = load i32, i32* @y.2, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 -1654788205, i32 -1675982622
  br label %.backedge

219:                                              ; preds = %22
  %.0..0..0.96 = load volatile i1, i1* %5, align 1
  %220 = select i1 %.0..0..0.96, i32 206917744, i32 -1998006239
  br label %.backedge

221:                                              ; preds = %22
  %222 = load i32, i32* @x.1, align 4
  %223 = load i32, i32* @y.2, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 -987934128, i32 2008717276
  br label %.backedge

231:                                              ; preds = %22
  %232 = load i32, i32* %12, align 4
  %233 = icmp sge i32 %.0105, %232
  store i1 %233, i1* %4, align 1
  %234 = load i32, i32* @x.1, align 4
  %235 = load i32, i32* @y.2, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 -1870390919, i32 2008717276
  br label %.backedge

243:                                              ; preds = %22
  %.0..0..0.97 = load volatile i1, i1* %4, align 1
  %244 = select i1 %.0..0..0.97, i32 206917744, i32 52299390
  br label %.backedge

245:                                              ; preds = %22
  br label %.backedge

246:                                              ; preds = %22
  %247 = load i32, i32* @x.1, align 4
  %248 = load i32, i32* @y.2, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 -2022602463, i32 1442408715
  br label %.backedge

256:                                              ; preds = %22
  %257 = sext i32 %.0107 to i64
  %.0..0..0.60 = load volatile i64, i64* %10, align 8
  %258 = mul nsw i64 %.0..0..0.60, %257
  %259 = sext i32 %.0105 to i64
  %.idx123 = add nsw i64 %258, %259
  %260 = getelementptr inbounds i8, i8* %21, i64 %.idx123
  %261 = load i8, i8* %260, align 1
  %262 = icmp eq i8 %261, 35
  store i1 %262, i1* %3, align 1
  %263 = load i32, i32* @x.1, align 4
  %264 = load i32, i32* @y.2, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 928241053, i32 1442408715
  br label %.backedge

272:                                              ; preds = %22
  %.0..0..0.98 = load volatile i1, i1* %3, align 1
  %273 = select i1 %.0..0..0.98, i32 -1111707741, i32 1624710504
  br label %.backedge

274:                                              ; preds = %22
  %.neg122 = add i32 %.0109, 1
  br label %.backedge

275:                                              ; preds = %22
  br label %.backedge

276:                                              ; preds = %22
  %277 = add i32 %.0105, 1
  br label %.backedge

278:                                              ; preds = %22
  br label %.backedge

279:                                              ; preds = %22
  %280 = add i32 %.0107, 1
  br label %.backedge

281:                                              ; preds = %22
  %282 = load i32, i32* @x.1, align 4
  %283 = load i32, i32* @y.2, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 -1806343094, i32 947806658
  br label %.backedge

291:                                              ; preds = %22
  %292 = trunc i32 %.0109 to i8
  %293 = add i8 %292, 48
  %294 = sext i32 %.0113 to i64
  %.0..0..0.61 = load volatile i64, i64* %10, align 8
  %295 = mul nsw i64 %.0..0..0.61, %294
  %296 = sext i32 %.0111 to i64
  %.idx121 = add nsw i64 %295, %296
  %297 = getelementptr inbounds i8, i8* %21, i64 %.idx121
  store i8 %293, i8* %297, align 1
  %298 = load i32, i32* @x.1, align 4
  %299 = load i32, i32* @y.2, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 -374820923, i32 947806658
  br label %.backedge

307:                                              ; preds = %22
  br label %.backedge

308:                                              ; preds = %22
  br label %.backedge

309:                                              ; preds = %22
  %310 = add i32 %.0111, 1
  br label %.backedge

311:                                              ; preds = %22
  %312 = load i32, i32* @x.1, align 4
  %313 = load i32, i32* @y.2, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 1867140366, i32 -139668536
  br label %.backedge

321:                                              ; preds = %22
  %322 = load i32, i32* @x.1, align 4
  %323 = load i32, i32* @y.2, align 4
  %324 = add i32 %322, -1
  %325 = mul i32 %324, %322
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %328, %327
  %330 = select i1 %329, i32 2055943449, i32 -139668536
  br label %.backedge

331:                                              ; preds = %22
  br label %.backedge

332:                                              ; preds = %22
  %333 = load i32, i32* @x.1, align 4
  %334 = load i32, i32* @y.2, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 879502038, i32 1866073873
  br label %.backedge

342:                                              ; preds = %22
  %343 = add i32 %.0113, 1
  %344 = load i32, i32* @x.1, align 4
  %345 = load i32, i32* @y.2, align 4
  %346 = add i32 %344, -1
  %347 = mul i32 %346, %344
  %348 = and i32 %347, 1
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %350, %349
  %352 = select i1 %351, i32 -163422577, i32 1866073873
  br label %.backedge

353:                                              ; preds = %22
  br label %.backedge

354:                                              ; preds = %22
  %355 = load i32, i32* @x.1, align 4
  %356 = load i32, i32* @y.2, align 4
  %357 = add i32 %355, -1
  %358 = mul i32 %357, %355
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %361, %360
  %363 = select i1 %362, i32 -135037556, i32 -474565654
  br label %.backedge

364:                                              ; preds = %22
  %365 = load i32, i32* @x.1, align 4
  %366 = load i32, i32* @y.2, align 4
  %367 = add i32 %365, -1
  %368 = mul i32 %367, %365
  %369 = and i32 %368, 1
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %371, %370
  %373 = select i1 %372, i32 -1968942980, i32 -474565654
  br label %.backedge

374:                                              ; preds = %22
  br label %.backedge

375:                                              ; preds = %22
  %376 = load i32, i32* @x.1, align 4
  %377 = load i32, i32* @y.2, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 627200470, i32 261143044
  br label %.backedge

385:                                              ; preds = %22
  %386 = load i32, i32* %11, align 4
  %387 = icmp slt i32 %.0103, %386
  store i1 %387, i1* %2, align 1
  %388 = load i32, i32* @x.1, align 4
  %389 = load i32, i32* @y.2, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 -1672194089, i32 261143044
  br label %.backedge

397:                                              ; preds = %22
  %.0..0..0.99 = load volatile i1, i1* %2, align 1
  %398 = select i1 %.0..0..0.99, i32 1923921744, i32 -410220763
  br label %.backedge

399:                                              ; preds = %22
  br label %.backedge

400:                                              ; preds = %22
  %401 = load i32, i32* %12, align 4
  %402 = icmp slt i32 %.0101, %401
  %403 = select i1 %402, i32 -1729720727, i32 -1103045040
  br label %.backedge

404:                                              ; preds = %22
  %405 = sext i32 %.0103 to i64
  %.0..0..0.62 = load volatile i64, i64* %10, align 8
  %406 = mul nsw i64 %.0..0..0.62, %405
  %407 = sext i32 %.0101 to i64
  %.idx120 = add nsw i64 %406, %407
  %408 = getelementptr inbounds i8, i8* %21, i64 %.idx120
  %409 = load i8, i8* %408, align 1
  %410 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %409)
  br label %.backedge

411:                                              ; preds = %22
  %412 = load i32, i32* @x.1, align 4
  %413 = load i32, i32* @y.2, align 4
  %414 = add i32 %412, -1
  %415 = mul i32 %414, %412
  %416 = and i32 %415, 1
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %418, %417
  %420 = select i1 %419, i32 371104461, i32 1503740477
  br label %.backedge

421:                                              ; preds = %22
  %422 = add i32 %.0101, 1
  %423 = load i32, i32* @x.1, align 4
  %424 = load i32, i32* @y.2, align 4
  %425 = add i32 %423, -1
  %426 = mul i32 %425, %423
  %427 = and i32 %426, 1
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %429, %428
  %431 = select i1 %430, i32 526471311, i32 1503740477
  br label %.backedge

432:                                              ; preds = %22
  br label %.backedge

433:                                              ; preds = %22
  %434 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

435:                                              ; preds = %22
  %.neg = add i32 %.0103, 1
  br label %.backedge

436:                                              ; preds = %22
  %437 = load i32, i32* @x.1, align 4
  %438 = load i32, i32* @y.2, align 4
  %439 = add i32 %437, -1
  %440 = mul i32 %439, %437
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %443, %442
  %445 = select i1 %444, i32 -903582075, i32 -296830606
  br label %.backedge

446:                                              ; preds = %22
  call void @llvm.stackrestore(i8* %19)
  store i32 0, i32* %1, align 4
  %447 = load i32, i32* @x.1, align 4
  %448 = load i32, i32* @y.2, align 4
  %449 = add i32 %447, -1
  %450 = mul i32 %449, %447
  %451 = and i32 %450, 1
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %453, %452
  %455 = select i1 %454, i32 267002038, i32 -296830606
  br label %.backedge

456:                                              ; preds = %22
  %.0..0..0.100 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.100

457:                                              ; preds = %22
  br label %.backedge

458:                                              ; preds = %22
  %459 = sext i32 %.0117 to i64
  %.0..0..0.63 = load volatile i64, i64* %10, align 8
  %.0..0..0.64 = load volatile i64, i64* %10, align 8
  %.0..0..0.65 = load volatile i64, i64* %10, align 8
  %.0..0..0.66 = load volatile i64, i64* %10, align 8
  %.0..0..0.67 = load volatile i64, i64* %10, align 8
  %460 = mul nsw i64 %.0..0..0.67, %459
  %461 = sext i32 %.0115 to i64
  %.idx119 = add nsw i64 %460, %461
  %462 = getelementptr inbounds i8, i8* %21, i64 %.idx119
  %463 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %462)
  br label %.backedge

464:                                              ; preds = %22
  br label %.backedge

465:                                              ; preds = %22
  %.0..0..0.68 = load volatile i64, i64* %10, align 8
  %.0..0..0.69 = load volatile i64, i64* %10, align 8
  %.0..0..0.70 = load volatile i64, i64* %10, align 8
  %.0..0..0.71 = load volatile i64, i64* %10, align 8
  %.0..0..0.72 = load volatile i64, i64* %10, align 8
  br label %.backedge

466:                                              ; preds = %22
  br label %.backedge

467:                                              ; preds = %22
  br label %.backedge

468:                                              ; preds = %22
  br label %.backedge

469:                                              ; preds = %22
  br label %.backedge

470:                                              ; preds = %22
  %.0..0..0.73 = load volatile i64, i64* %10, align 8
  %.0..0..0.74 = load volatile i64, i64* %10, align 8
  %.0..0..0.75 = load volatile i64, i64* %10, align 8
  %.0..0..0.76 = load volatile i64, i64* %10, align 8
  %.0..0..0.77 = load volatile i64, i64* %10, align 8
  %.0..0..0.78 = load volatile i64, i64* %10, align 8
  %.0..0..0.79 = load volatile i64, i64* %10, align 8
  %.0..0..0.80 = load volatile i64, i64* %10, align 8
  %.0..0..0.81 = load volatile i64, i64* %10, align 8
  %.0..0..0.82 = load volatile i64, i64* %10, align 8
  %.0..0..0.83 = load volatile i64, i64* %10, align 8
  br label %.backedge

471:                                              ; preds = %22
  %472 = trunc i32 %.0109 to i8
  %473 = add i8 %472, 48
  %474 = sext i32 %.0113 to i64
  %.0..0..0.84 = load volatile i64, i64* %10, align 8
  %.0..0..0.85 = load volatile i64, i64* %10, align 8
  %.0..0..0.86 = load volatile i64, i64* %10, align 8
  %.0..0..0.87 = load volatile i64, i64* %10, align 8
  %.0..0..0.88 = load volatile i64, i64* %10, align 8
  %.0..0..0.89 = load volatile i64, i64* %10, align 8
  %.0..0..0.90 = load volatile i64, i64* %10, align 8
  %.0..0..0.91 = load volatile i64, i64* %10, align 8
  %475 = mul nsw i64 %.0..0..0.91, %474
  %476 = sext i32 %.0111 to i64
  %.idx = add nsw i64 %475, %476
  %477 = getelementptr inbounds i8, i8* %21, i64 %.idx
  store i8 %473, i8* %477, align 1
  br label %.backedge

478:                                              ; preds = %22
  br label %.backedge

479:                                              ; preds = %22
  %480 = add i32 %.0113, 1
  br label %.backedge

481:                                              ; preds = %22
  br label %.backedge

482:                                              ; preds = %22
  br label %.backedge

483:                                              ; preds = %22
  %484 = add i32 %.0101, 1
  br label %.backedge

485:                                              ; preds = %22
  call void @llvm.stackrestore(i8* %19)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s635940823.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
