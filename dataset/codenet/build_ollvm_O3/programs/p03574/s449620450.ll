; ModuleID = 'build_ollvm/programs/p03574/s449620450.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s449620450.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@mx = local_unnamed_addr global [8 x i32] [i32 -1, i32 -1, i32 -1, i32 0, i32 0, i32 1, i32 1, i32 1], align 16
@my = local_unnamed_addr global [8 x i32] [i32 1, i32 0, i32 -1, i32 1, i32 -1, i32 1, i32 0, i32 -1], align 16
@.str = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s449620450.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6)
  %8 = load i32, i32* %5, align 4
  %9 = zext i32 %8 to i64
  %10 = load i32, i32* %6, align 4
  %11 = zext i32 %10 to i64
  store i64 %11, i64* %4, align 8
  %.0..0..0.43 = load volatile i64, i64* %4, align 8
  %12 = mul nuw i64 %.0..0..0.43, %9
  %13 = alloca i8, i64 %12, align 16
  br label %14

14:                                               ; preds = %.backedge, %0
  %.070 = phi i32 [ 0, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.0 = phi i32 [ 527701276, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 527701276, label %15
    i32 -871666417, label %25
    i32 1362316263, label %37
    i32 1561863989, label %39
    i32 -1201304548, label %40
    i32 -1811338481, label %44
    i32 1140640947, label %50
    i32 844793089, label %60
    i32 -219980622, label %70
    i32 -2042983720, label %71
    i32 357360983, label %81
    i32 -1128133615, label %91
    i32 2119549739, label %92
    i32 -283659668, label %94
    i32 -630069352, label %104
    i32 577225759, label %114
    i32 2014797362, label %115
    i32 386039523, label %119
    i32 -570375027, label %120
    i32 -1923662556, label %124
    i32 932672892, label %132
    i32 750291006, label %133
    i32 653666750, label %143
    i32 -1453542118, label %153
    i32 -681766810, label %154
    i32 -2123645747, label %157
    i32 -1718725063, label %167
    i32 1755040261, label %177
    i32 -412210412, label %188
    i32 -380829443, label %190
    i32 -2035367201, label %193
    i32 -395682750, label %203
    i32 -200140182, label %215
    i32 -1695989017, label %217
    i32 -244927007, label %227
    i32 421114752, label %237
    i32 205669875, label %238
    i32 1730586673, label %246
    i32 -911474295, label %247
    i32 -520552302, label %248
    i32 -1060403856, label %258
    i32 6817053, label %269
    i32 -2053967568, label %270
    i32 -208974258, label %277
    i32 97358938, label %287
    i32 1698162355, label %297
    i32 -2082826997, label %298
    i32 -1593697551, label %299
    i32 -1414792473, label %301
    i32 -1866704411, label %302
    i32 -1788691126, label %306
    i32 1882691469, label %307
    i32 1775256079, label %311
    i32 -740147819, label %318
    i32 -802558053, label %320
    i32 1946193258, label %330
    i32 -899709561, label %341
    i32 1951844249, label %342
    i32 -1703479018, label %352
    i32 1736489551, label %363
    i32 -645152990, label %364
    i32 350497252, label %365
    i32 1249244461, label %366
    i32 -1168539895, label %368
    i32 1237523266, label %369
    i32 547690899, label %370
    i32 1139739064, label %371
    i32 1113507107, label %372
    i32 323584607, label %373
    i32 1506052173, label %374
    i32 1594829034, label %376
    i32 2055843456, label %377
    i32 1797853604, label %379
  ]

.backedge:                                        ; preds = %14, %379, %377, %376, %374, %373, %372, %371, %370, %369, %368, %366, %365, %363, %352, %342, %341, %330, %320, %318, %311, %307, %306, %302, %301, %299, %298, %297, %287, %277, %270, %269, %258, %248, %247, %246, %238, %237, %227, %217, %215, %203, %193, %190, %188, %177, %167, %157, %154, %153, %143, %133, %132, %124, %120, %119, %115, %114, %104, %94, %92, %91, %81, %71, %70, %60, %50, %44, %40, %39, %37, %25, %15
  %.070.be = phi i32 [ %.070, %14 ], [ %.070, %379 ], [ %.070, %377 ], [ %.070, %376 ], [ %.070, %374 ], [ %.070, %373 ], [ %.070, %372 ], [ %.070, %371 ], [ %.070, %370 ], [ %.070, %369 ], [ %.070, %368 ], [ %.070, %366 ], [ %.070, %365 ], [ %.070, %363 ], [ %.070, %352 ], [ %.070, %342 ], [ %.070, %341 ], [ %.070, %330 ], [ %.070, %320 ], [ %.070, %318 ], [ %.070, %311 ], [ %.070, %307 ], [ %.070, %306 ], [ %.070, %302 ], [ %.070, %301 ], [ %.070, %299 ], [ %.070, %298 ], [ %.070, %297 ], [ %.070, %287 ], [ %.070, %277 ], [ %.070, %270 ], [ %.070, %269 ], [ %.070, %258 ], [ %.070, %248 ], [ %.070, %247 ], [ %.070, %246 ], [ %.070, %238 ], [ %.070, %237 ], [ %.070, %227 ], [ %.070, %217 ], [ %.070, %215 ], [ %.070, %203 ], [ %.070, %193 ], [ %.070, %190 ], [ %.070, %188 ], [ %.070, %177 ], [ %.070, %167 ], [ %.070, %157 ], [ %.070, %154 ], [ %.070, %153 ], [ %.070, %143 ], [ %.070, %133 ], [ %.070, %132 ], [ %.070, %124 ], [ %.070, %120 ], [ %.070, %119 ], [ %.070, %115 ], [ %.070, %114 ], [ %.070, %104 ], [ %.070, %94 ], [ %93, %92 ], [ %.070, %91 ], [ %.070, %81 ], [ %.070, %71 ], [ %.070, %70 ], [ %.070, %60 ], [ %.070, %50 ], [ %.070, %44 ], [ %.070, %40 ], [ %.070, %39 ], [ %.070, %37 ], [ %.070, %25 ], [ %.070, %15 ]
  %.068.be = phi i32 [ %.068, %14 ], [ %.068, %379 ], [ %.068, %377 ], [ %.068, %376 ], [ %.068, %374 ], [ %.068, %373 ], [ %.068, %372 ], [ %.068, %371 ], [ %.068, %370 ], [ %.068, %369 ], [ %.068, %368 ], [ %367, %366 ], [ %.068, %365 ], [ %.068, %363 ], [ %.068, %352 ], [ %.068, %342 ], [ %.068, %341 ], [ %.068, %330 ], [ %.068, %320 ], [ %.068, %318 ], [ %.068, %311 ], [ %.068, %307 ], [ %.068, %306 ], [ %.068, %302 ], [ %.068, %301 ], [ %.068, %299 ], [ %.068, %298 ], [ %.068, %297 ], [ %.068, %287 ], [ %.068, %277 ], [ %.068, %270 ], [ %.068, %269 ], [ %.068, %258 ], [ %.068, %248 ], [ %.068, %247 ], [ %.068, %246 ], [ %.068, %238 ], [ %.068, %237 ], [ %.068, %227 ], [ %.068, %217 ], [ %.068, %215 ], [ %.068, %203 ], [ %.068, %193 ], [ %.068, %190 ], [ %.068, %188 ], [ %.068, %177 ], [ %.068, %167 ], [ %.068, %157 ], [ %.068, %154 ], [ %.068, %153 ], [ %.068, %143 ], [ %.068, %133 ], [ %.068, %132 ], [ %.068, %124 ], [ %.068, %120 ], [ %.068, %119 ], [ %.068, %115 ], [ %.068, %114 ], [ %.068, %104 ], [ %.068, %94 ], [ %.068, %92 ], [ %.068, %91 ], [ %.068, %81 ], [ %.068, %71 ], [ %.068, %70 ], [ %.neg78, %60 ], [ %.068, %50 ], [ %.068, %44 ], [ %.068, %40 ], [ 0, %39 ], [ %.068, %37 ], [ %.068, %25 ], [ %.068, %15 ]
  %.066.be = phi i32 [ %.066, %14 ], [ %.066, %379 ], [ %.066, %377 ], [ %.066, %376 ], [ %.066, %374 ], [ %.066, %373 ], [ %.066, %372 ], [ %.066, %371 ], [ %.066, %370 ], [ 0, %369 ], [ %.066, %368 ], [ %.066, %366 ], [ %.066, %365 ], [ %.066, %363 ], [ %.066, %352 ], [ %.066, %342 ], [ %.066, %341 ], [ %.066, %330 ], [ %.066, %320 ], [ %.066, %318 ], [ %.066, %311 ], [ %.066, %307 ], [ %.066, %306 ], [ %.066, %302 ], [ %.066, %301 ], [ %300, %299 ], [ %.066, %298 ], [ %.066, %297 ], [ %.066, %287 ], [ %.066, %277 ], [ %.066, %270 ], [ %.066, %269 ], [ %.066, %258 ], [ %.066, %248 ], [ %.066, %247 ], [ %.066, %246 ], [ %.066, %238 ], [ %.066, %237 ], [ %.066, %227 ], [ %.066, %217 ], [ %.066, %215 ], [ %.066, %203 ], [ %.066, %193 ], [ %.066, %190 ], [ %.066, %188 ], [ %.066, %177 ], [ %.066, %167 ], [ %.066, %157 ], [ %.066, %154 ], [ %.066, %153 ], [ %.066, %143 ], [ %.066, %133 ], [ %.066, %132 ], [ %.066, %124 ], [ %.066, %120 ], [ %.066, %119 ], [ %.066, %115 ], [ %.066, %114 ], [ 0, %104 ], [ %.066, %94 ], [ %.066, %92 ], [ %.066, %91 ], [ %.066, %81 ], [ %.066, %71 ], [ %.066, %70 ], [ %.066, %60 ], [ %.066, %50 ], [ %.066, %44 ], [ %.066, %40 ], [ %.066, %39 ], [ %.066, %37 ], [ %.066, %25 ], [ %.066, %15 ]
  %.064.be = phi i32 [ %.064, %14 ], [ %.064, %379 ], [ %.064, %377 ], [ %.neg72, %376 ], [ %.064, %374 ], [ %.064, %373 ], [ %.064, %372 ], [ %.064, %371 ], [ %.064, %370 ], [ %.064, %369 ], [ %.064, %368 ], [ %.064, %366 ], [ %.064, %365 ], [ %.064, %363 ], [ %.064, %352 ], [ %.064, %342 ], [ %.064, %341 ], [ %.064, %330 ], [ %.064, %320 ], [ %.064, %318 ], [ %.064, %311 ], [ %.064, %307 ], [ %.064, %306 ], [ %.064, %302 ], [ %.064, %301 ], [ %.064, %299 ], [ %.064, %298 ], [ %.064, %297 ], [ %.neg73, %287 ], [ %.064, %277 ], [ %.064, %270 ], [ %.064, %269 ], [ %.064, %258 ], [ %.064, %248 ], [ %.064, %247 ], [ %.064, %246 ], [ %.064, %238 ], [ %.064, %237 ], [ %.064, %227 ], [ %.064, %217 ], [ %.064, %215 ], [ %.064, %203 ], [ %.064, %193 ], [ %.064, %190 ], [ %.064, %188 ], [ %.064, %177 ], [ %.064, %167 ], [ %.064, %157 ], [ %.064, %154 ], [ %.064, %153 ], [ %.064, %143 ], [ %.064, %133 ], [ %.064, %132 ], [ %.064, %124 ], [ %.064, %120 ], [ 0, %119 ], [ %.064, %115 ], [ %.064, %114 ], [ %.064, %104 ], [ %.064, %94 ], [ %.064, %92 ], [ %.064, %91 ], [ %.064, %81 ], [ %.064, %71 ], [ %.064, %70 ], [ %.064, %60 ], [ %.064, %50 ], [ %.064, %44 ], [ %.064, %40 ], [ %.064, %39 ], [ %.064, %37 ], [ %.064, %25 ], [ %.064, %15 ]
  %.062.be = phi i32 [ %.062, %14 ], [ %.062, %379 ], [ %.062, %377 ], [ %.062, %376 ], [ %.062, %374 ], [ %.062, %373 ], [ %.062, %372 ], [ %.062, %371 ], [ 0, %370 ], [ %.062, %369 ], [ %.062, %368 ], [ %.062, %366 ], [ %.062, %365 ], [ %.062, %363 ], [ %.062, %352 ], [ %.062, %342 ], [ %.062, %341 ], [ %.062, %330 ], [ %.062, %320 ], [ %.062, %318 ], [ %.062, %311 ], [ %.062, %307 ], [ %.062, %306 ], [ %.062, %302 ], [ %.062, %301 ], [ %.062, %299 ], [ %.062, %298 ], [ %.062, %297 ], [ %.062, %287 ], [ %.062, %277 ], [ %.062, %270 ], [ %.062, %269 ], [ %.062, %258 ], [ %.062, %248 ], [ %.062, %247 ], [ %.neg75, %246 ], [ %.062, %238 ], [ %.062, %237 ], [ %.062, %227 ], [ %.062, %217 ], [ %.062, %215 ], [ %.062, %203 ], [ %.062, %193 ], [ %.062, %190 ], [ %.062, %188 ], [ %.062, %177 ], [ %.062, %167 ], [ %.062, %157 ], [ %.062, %154 ], [ %.062, %153 ], [ 0, %143 ], [ %.062, %133 ], [ %.062, %132 ], [ %.062, %124 ], [ %.062, %120 ], [ %.062, %119 ], [ %.062, %115 ], [ %.062, %114 ], [ %.062, %104 ], [ %.062, %94 ], [ %.062, %92 ], [ %.062, %91 ], [ %.062, %81 ], [ %.062, %71 ], [ %.062, %70 ], [ %.062, %60 ], [ %.062, %50 ], [ %.062, %44 ], [ %.062, %40 ], [ %.062, %39 ], [ %.062, %37 ], [ %.062, %25 ], [ %.062, %15 ]
  %.060.be = phi i32 [ %.060, %14 ], [ %.060, %379 ], [ %.060, %377 ], [ %.060, %376 ], [ %375, %374 ], [ %.060, %373 ], [ %.060, %372 ], [ %.060, %371 ], [ 0, %370 ], [ %.060, %369 ], [ %.060, %368 ], [ %.060, %366 ], [ %.060, %365 ], [ %.060, %363 ], [ %.060, %352 ], [ %.060, %342 ], [ %.060, %341 ], [ %.060, %330 ], [ %.060, %320 ], [ %.060, %318 ], [ %.060, %311 ], [ %.060, %307 ], [ %.060, %306 ], [ %.060, %302 ], [ %.060, %301 ], [ %.060, %299 ], [ %.060, %298 ], [ %.060, %297 ], [ %.060, %287 ], [ %.060, %277 ], [ %.060, %270 ], [ %.060, %269 ], [ %259, %258 ], [ %.060, %248 ], [ %.060, %247 ], [ %.060, %246 ], [ %.060, %238 ], [ %.060, %237 ], [ %.060, %227 ], [ %.060, %217 ], [ %.060, %215 ], [ %.060, %203 ], [ %.060, %193 ], [ %.060, %190 ], [ %.060, %188 ], [ %.060, %177 ], [ %.060, %167 ], [ %.060, %157 ], [ %.060, %154 ], [ %.060, %153 ], [ 0, %143 ], [ %.060, %133 ], [ %.060, %132 ], [ %.060, %124 ], [ %.060, %120 ], [ %.060, %119 ], [ %.060, %115 ], [ %.060, %114 ], [ %.060, %104 ], [ %.060, %94 ], [ %.060, %92 ], [ %.060, %91 ], [ %.060, %81 ], [ %.060, %71 ], [ %.060, %70 ], [ %.060, %60 ], [ %.060, %50 ], [ %.060, %44 ], [ %.060, %40 ], [ %.060, %39 ], [ %.060, %37 ], [ %.060, %25 ], [ %.060, %15 ]
  %.058.be = phi i32 [ %.058, %14 ], [ %.058, %379 ], [ %.058, %377 ], [ %.058, %376 ], [ %.058, %374 ], [ %.058, %373 ], [ %.058, %372 ], [ %.058, %371 ], [ %.058, %370 ], [ %.058, %369 ], [ %.058, %368 ], [ %.058, %366 ], [ %.058, %365 ], [ %.058, %363 ], [ %.058, %352 ], [ %.058, %342 ], [ %.058, %341 ], [ %.058, %330 ], [ %.058, %320 ], [ %.058, %318 ], [ %.058, %311 ], [ %.058, %307 ], [ %.058, %306 ], [ %.058, %302 ], [ %.058, %301 ], [ %.058, %299 ], [ %.058, %298 ], [ %.058, %297 ], [ %.058, %287 ], [ %.058, %277 ], [ %.058, %270 ], [ %.058, %269 ], [ %.058, %258 ], [ %.058, %248 ], [ %.058, %247 ], [ %.058, %246 ], [ %.058, %238 ], [ %.058, %237 ], [ %.058, %227 ], [ %.058, %217 ], [ %.058, %215 ], [ %.058, %203 ], [ %.058, %193 ], [ %.058, %190 ], [ %.058, %188 ], [ %.058, %177 ], [ %.058, %167 ], [ %161, %157 ], [ %.058, %154 ], [ %.058, %153 ], [ %.058, %143 ], [ %.058, %133 ], [ %.058, %132 ], [ %.058, %124 ], [ %.058, %120 ], [ %.058, %119 ], [ %.058, %115 ], [ %.058, %114 ], [ %.058, %104 ], [ %.058, %94 ], [ %.058, %92 ], [ %.058, %91 ], [ %.058, %81 ], [ %.058, %71 ], [ %.058, %70 ], [ %.058, %60 ], [ %.058, %50 ], [ %.058, %44 ], [ %.058, %40 ], [ %.058, %39 ], [ %.058, %37 ], [ %.058, %25 ], [ %.058, %15 ]
  %.056.be = phi i32 [ %.056, %14 ], [ %.056, %379 ], [ %.056, %377 ], [ %.056, %376 ], [ %.056, %374 ], [ %.056, %373 ], [ %.056, %372 ], [ %.056, %371 ], [ %.056, %370 ], [ %.056, %369 ], [ %.056, %368 ], [ %.056, %366 ], [ %.056, %365 ], [ %.056, %363 ], [ %.056, %352 ], [ %.056, %342 ], [ %.056, %341 ], [ %.056, %330 ], [ %.056, %320 ], [ %.056, %318 ], [ %.056, %311 ], [ %.056, %307 ], [ %.056, %306 ], [ %.056, %302 ], [ %.056, %301 ], [ %.056, %299 ], [ %.056, %298 ], [ %.056, %297 ], [ %.056, %287 ], [ %.056, %277 ], [ %.056, %270 ], [ %.056, %269 ], [ %.056, %258 ], [ %.056, %248 ], [ %.056, %247 ], [ %.056, %246 ], [ %.056, %238 ], [ %.056, %237 ], [ %.056, %227 ], [ %.056, %217 ], [ %.056, %215 ], [ %.056, %203 ], [ %.056, %193 ], [ %.056, %190 ], [ %.056, %188 ], [ %.056, %177 ], [ %.056, %167 ], [ %164, %157 ], [ %.056, %154 ], [ %.056, %153 ], [ %.056, %143 ], [ %.056, %133 ], [ %.056, %132 ], [ %.056, %124 ], [ %.056, %120 ], [ %.056, %119 ], [ %.056, %115 ], [ %.056, %114 ], [ %.056, %104 ], [ %.056, %94 ], [ %.056, %92 ], [ %.056, %91 ], [ %.056, %81 ], [ %.056, %71 ], [ %.056, %70 ], [ %.056, %60 ], [ %.056, %50 ], [ %.056, %44 ], [ %.056, %40 ], [ %.056, %39 ], [ %.056, %37 ], [ %.056, %25 ], [ %.056, %15 ]
  %.054.be = phi i32 [ %.054, %14 ], [ %.neg, %379 ], [ %.054, %377 ], [ %.054, %376 ], [ %.054, %374 ], [ %.054, %373 ], [ %.054, %372 ], [ %.054, %371 ], [ %.054, %370 ], [ %.054, %369 ], [ %.054, %368 ], [ %.054, %366 ], [ %.054, %365 ], [ %.054, %363 ], [ %353, %352 ], [ %.054, %342 ], [ %.054, %341 ], [ %.054, %330 ], [ %.054, %320 ], [ %.054, %318 ], [ %.054, %311 ], [ %.054, %307 ], [ %.054, %306 ], [ %.054, %302 ], [ 0, %301 ], [ %.054, %299 ], [ %.054, %298 ], [ %.054, %297 ], [ %.054, %287 ], [ %.054, %277 ], [ %.054, %270 ], [ %.054, %269 ], [ %.054, %258 ], [ %.054, %248 ], [ %.054, %247 ], [ %.054, %246 ], [ %.054, %238 ], [ %.054, %237 ], [ %.054, %227 ], [ %.054, %217 ], [ %.054, %215 ], [ %.054, %203 ], [ %.054, %193 ], [ %.054, %190 ], [ %.054, %188 ], [ %.054, %177 ], [ %.054, %167 ], [ %.054, %157 ], [ %.054, %154 ], [ %.054, %153 ], [ %.054, %143 ], [ %.054, %133 ], [ %.054, %132 ], [ %.054, %124 ], [ %.054, %120 ], [ %.054, %119 ], [ %.054, %115 ], [ %.054, %114 ], [ %.054, %104 ], [ %.054, %94 ], [ %.054, %92 ], [ %.054, %91 ], [ %.054, %81 ], [ %.054, %71 ], [ %.054, %70 ], [ %.054, %60 ], [ %.054, %50 ], [ %.054, %44 ], [ %.054, %40 ], [ %.054, %39 ], [ %.054, %37 ], [ %.054, %25 ], [ %.054, %15 ]
  %.052.be = phi i32 [ %.052, %14 ], [ %.052, %379 ], [ %.052, %377 ], [ %.052, %376 ], [ %.052, %374 ], [ %.052, %373 ], [ %.052, %372 ], [ %.052, %371 ], [ %.052, %370 ], [ %.052, %369 ], [ %.052, %368 ], [ %.052, %366 ], [ %.052, %365 ], [ %.052, %363 ], [ %.052, %352 ], [ %.052, %342 ], [ %.052, %341 ], [ %.052, %330 ], [ %.052, %320 ], [ %319, %318 ], [ %.052, %311 ], [ %.052, %307 ], [ 0, %306 ], [ %.052, %302 ], [ %.052, %301 ], [ %.052, %299 ], [ %.052, %298 ], [ %.052, %297 ], [ %.052, %287 ], [ %.052, %277 ], [ %.052, %270 ], [ %.052, %269 ], [ %.052, %258 ], [ %.052, %248 ], [ %.052, %247 ], [ %.052, %246 ], [ %.052, %238 ], [ %.052, %237 ], [ %.052, %227 ], [ %.052, %217 ], [ %.052, %215 ], [ %.052, %203 ], [ %.052, %193 ], [ %.052, %190 ], [ %.052, %188 ], [ %.052, %177 ], [ %.052, %167 ], [ %.052, %157 ], [ %.052, %154 ], [ %.052, %153 ], [ %.052, %143 ], [ %.052, %133 ], [ %.052, %132 ], [ %.052, %124 ], [ %.052, %120 ], [ %.052, %119 ], [ %.052, %115 ], [ %.052, %114 ], [ %.052, %104 ], [ %.052, %94 ], [ %.052, %92 ], [ %.052, %91 ], [ %.052, %81 ], [ %.052, %71 ], [ %.052, %70 ], [ %.052, %60 ], [ %.052, %50 ], [ %.052, %44 ], [ %.052, %40 ], [ %.052, %39 ], [ %.052, %37 ], [ %.052, %25 ], [ %.052, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ -1703479018, %379 ], [ 1946193258, %377 ], [ 97358938, %376 ], [ -1060403856, %374 ], [ -244927007, %373 ], [ -395682750, %372 ], [ 1755040261, %371 ], [ 653666750, %370 ], [ -630069352, %369 ], [ 357360983, %368 ], [ 844793089, %366 ], [ -871666417, %365 ], [ -1866704411, %363 ], [ %362, %352 ], [ %351, %342 ], [ 1951844249, %341 ], [ %340, %330 ], [ %329, %320 ], [ 1882691469, %318 ], [ -740147819, %311 ], [ %310, %307 ], [ 1882691469, %306 ], [ %305, %302 ], [ -1866704411, %301 ], [ 2014797362, %299 ], [ -1593697551, %298 ], [ -570375027, %297 ], [ %296, %287 ], [ %286, %277 ], [ -208974258, %270 ], [ -681766810, %269 ], [ %268, %258 ], [ %257, %248 ], [ -520552302, %247 ], [ -911474295, %246 ], [ %245, %238 ], [ -520552302, %237 ], [ %236, %227 ], [ %226, %217 ], [ %216, %215 ], [ %214, %203 ], [ %202, %193 ], [ %192, %190 ], [ %189, %188 ], [ %187, %177 ], [ %176, %167 ], [ %166, %157 ], [ %156, %154 ], [ -681766810, %153 ], [ %152, %143 ], [ %142, %133 ], [ -208974258, %132 ], [ %131, %124 ], [ %123, %120 ], [ -570375027, %119 ], [ %118, %115 ], [ 2014797362, %114 ], [ %113, %104 ], [ %103, %94 ], [ 527701276, %92 ], [ 2119549739, %91 ], [ %90, %81 ], [ %80, %71 ], [ -1201304548, %70 ], [ %69, %60 ], [ %59, %50 ], [ 1140640947, %44 ], [ %43, %40 ], [ -1201304548, %39 ], [ %38, %37 ], [ %36, %25 ], [ %24, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* @x.1, align 4
  %17 = load i32, i32* @y.2, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -871666417, i32 350497252
  br label %.backedge

25:                                               ; preds = %14
  %26 = load i32, i32* %5, align 4
  %27 = icmp slt i32 %.070, %26
  store i1 %27, i1* %3, align 1
  %28 = load i32, i32* @x.1, align 4
  %29 = load i32, i32* @y.2, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 1362316263, i32 350497252
  br label %.backedge

37:                                               ; preds = %14
  %.0..0..0.49 = load volatile i1, i1* %3, align 1
  %38 = select i1 %.0..0..0.49, i32 1561863989, i32 -283659668
  br label %.backedge

39:                                               ; preds = %14
  br label %.backedge

40:                                               ; preds = %14
  %41 = load i32, i32* %6, align 4
  %42 = icmp slt i32 %.068, %41
  %43 = select i1 %42, i32 -1811338481, i32 -2042983720
  br label %.backedge

44:                                               ; preds = %14
  %45 = sext i32 %.070 to i64
  %.0..0..0.44 = load volatile i64, i64* %4, align 8
  %46 = mul nsw i64 %.0..0..0.44, %45
  %47 = sext i32 %.068 to i64
  %.idx79 = add nsw i64 %46, %47
  %48 = getelementptr inbounds i8, i8* %13, i64 %.idx79
  %49 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %48)
  br label %.backedge

50:                                               ; preds = %14
  %51 = load i32, i32* @x.1, align 4
  %52 = load i32, i32* @y.2, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 844793089, i32 1249244461
  br label %.backedge

60:                                               ; preds = %14
  %.neg78 = add i32 %.068, 1
  %61 = load i32, i32* @x.1, align 4
  %62 = load i32, i32* @y.2, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 -219980622, i32 1249244461
  br label %.backedge

70:                                               ; preds = %14
  br label %.backedge

71:                                               ; preds = %14
  %72 = load i32, i32* @x.1, align 4
  %73 = load i32, i32* @y.2, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 357360983, i32 -1168539895
  br label %.backedge

81:                                               ; preds = %14
  %82 = load i32, i32* @x.1, align 4
  %83 = load i32, i32* @y.2, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 -1128133615, i32 -1168539895
  br label %.backedge

91:                                               ; preds = %14
  br label %.backedge

92:                                               ; preds = %14
  %93 = add i32 %.070, 1
  br label %.backedge

94:                                               ; preds = %14
  %95 = load i32, i32* @x.1, align 4
  %96 = load i32, i32* @y.2, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -630069352, i32 1237523266
  br label %.backedge

104:                                              ; preds = %14
  %105 = load i32, i32* @x.1, align 4
  %106 = load i32, i32* @y.2, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 577225759, i32 1237523266
  br label %.backedge

114:                                              ; preds = %14
  br label %.backedge

115:                                              ; preds = %14
  %116 = load i32, i32* %5, align 4
  %117 = icmp slt i32 %.066, %116
  %118 = select i1 %117, i32 386039523, i32 -1414792473
  br label %.backedge

119:                                              ; preds = %14
  br label %.backedge

120:                                              ; preds = %14
  %121 = load i32, i32* %6, align 4
  %122 = icmp slt i32 %.064, %121
  %123 = select i1 %122, i32 -1923662556, i32 -2082826997
  br label %.backedge

124:                                              ; preds = %14
  %125 = sext i32 %.066 to i64
  %.0..0..0.45 = load volatile i64, i64* %4, align 8
  %126 = mul nsw i64 %.0..0..0.45, %125
  %127 = sext i32 %.064 to i64
  %.idx77 = add nsw i64 %126, %127
  %128 = getelementptr inbounds i8, i8* %13, i64 %.idx77
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 35
  %131 = select i1 %130, i32 932672892, i32 750291006
  br label %.backedge

132:                                              ; preds = %14
  br label %.backedge

133:                                              ; preds = %14
  %134 = load i32, i32* @x.1, align 4
  %135 = load i32, i32* @y.2, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 653666750, i32 547690899
  br label %.backedge

143:                                              ; preds = %14
  %144 = load i32, i32* @x.1, align 4
  %145 = load i32, i32* @y.2, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 -1453542118, i32 547690899
  br label %.backedge

153:                                              ; preds = %14
  br label %.backedge

154:                                              ; preds = %14
  %155 = icmp slt i32 %.060, 8
  %156 = select i1 %155, i32 -2123645747, i32 -2053967568
  br label %.backedge

157:                                              ; preds = %14
  %158 = sext i32 %.060 to i64
  %159 = getelementptr inbounds [8 x i32], [8 x i32]* @mx, i64 0, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = add i32 %160, %.064
  %162 = getelementptr inbounds [8 x i32], [8 x i32]* @my, i64 0, i64 %158
  %163 = load i32, i32* %162, align 4
  %164 = add i32 %163, %.066
  %165 = icmp slt i32 %161, 0
  %166 = select i1 %165, i32 -1695989017, i32 -1718725063
  br label %.backedge

167:                                              ; preds = %14
  %168 = load i32, i32* @x.1, align 4
  %169 = load i32, i32* @y.2, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 1755040261, i32 1139739064
  br label %.backedge

177:                                              ; preds = %14
  %178 = icmp slt i32 %.056, 0
  store i1 %178, i1* %2, align 1
  %179 = load i32, i32* @x.1, align 4
  %180 = load i32, i32* @y.2, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 -412210412, i32 1139739064
  br label %.backedge

188:                                              ; preds = %14
  %.0..0..0.50 = load volatile i1, i1* %2, align 1
  %189 = select i1 %.0..0..0.50, i32 -1695989017, i32 -380829443
  br label %.backedge

190:                                              ; preds = %14
  %191 = load i32, i32* %6, align 4
  %.not = icmp slt i32 %.058, %191
  %192 = select i1 %.not, i32 -2035367201, i32 -1695989017
  br label %.backedge

193:                                              ; preds = %14
  %194 = load i32, i32* @x.1, align 4
  %195 = load i32, i32* @y.2, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 -395682750, i32 1113507107
  br label %.backedge

203:                                              ; preds = %14
  %204 = load i32, i32* %5, align 4
  %205 = icmp sge i32 %.056, %204
  store i1 %205, i1* %1, align 1
  %206 = load i32, i32* @x.1, align 4
  %207 = load i32, i32* @y.2, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 -200140182, i32 1113507107
  br label %.backedge

215:                                              ; preds = %14
  %.0..0..0.51 = load volatile i1, i1* %1, align 1
  %216 = select i1 %.0..0..0.51, i32 -1695989017, i32 205669875
  br label %.backedge

217:                                              ; preds = %14
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -244927007, i32 323584607
  br label %.backedge

227:                                              ; preds = %14
  %228 = load i32, i32* @x.1, align 4
  %229 = load i32, i32* @y.2, align 4
  %230 = add i32 %228, -1
  %231 = mul i32 %230, %228
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %234, %233
  %236 = select i1 %235, i32 421114752, i32 323584607
  br label %.backedge

237:                                              ; preds = %14
  br label %.backedge

238:                                              ; preds = %14
  %239 = sext i32 %.056 to i64
  %.0..0..0.46 = load volatile i64, i64* %4, align 8
  %240 = mul nsw i64 %.0..0..0.46, %239
  %241 = sext i32 %.058 to i64
  %.idx76 = add nsw i64 %240, %241
  %242 = getelementptr inbounds i8, i8* %13, i64 %.idx76
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, 35
  %245 = select i1 %244, i32 1730586673, i32 -911474295
  br label %.backedge

246:                                              ; preds = %14
  %.neg75 = add i32 %.062, 1
  br label %.backedge

247:                                              ; preds = %14
  br label %.backedge

248:                                              ; preds = %14
  %249 = load i32, i32* @x.1, align 4
  %250 = load i32, i32* @y.2, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 -1060403856, i32 1506052173
  br label %.backedge

258:                                              ; preds = %14
  %259 = add i32 %.060, 1
  %260 = load i32, i32* @x.1, align 4
  %261 = load i32, i32* @y.2, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 6817053, i32 1506052173
  br label %.backedge

269:                                              ; preds = %14
  br label %.backedge

270:                                              ; preds = %14
  %271 = trunc i32 %.062 to i8
  %272 = add i8 %271, 48
  %273 = sext i32 %.066 to i64
  %.0..0..0.47 = load volatile i64, i64* %4, align 8
  %274 = mul nsw i64 %.0..0..0.47, %273
  %275 = sext i32 %.064 to i64
  %.idx74 = add nsw i64 %274, %275
  %276 = getelementptr inbounds i8, i8* %13, i64 %.idx74
  store i8 %272, i8* %276, align 1
  br label %.backedge

277:                                              ; preds = %14
  %278 = load i32, i32* @x.1, align 4
  %279 = load i32, i32* @y.2, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 97358938, i32 1594829034
  br label %.backedge

287:                                              ; preds = %14
  %.neg73 = add i32 %.064, 1
  %288 = load i32, i32* @x.1, align 4
  %289 = load i32, i32* @y.2, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 1698162355, i32 1594829034
  br label %.backedge

297:                                              ; preds = %14
  br label %.backedge

298:                                              ; preds = %14
  br label %.backedge

299:                                              ; preds = %14
  %300 = add i32 %.066, 1
  br label %.backedge

301:                                              ; preds = %14
  br label %.backedge

302:                                              ; preds = %14
  %303 = load i32, i32* %5, align 4
  %304 = icmp slt i32 %.054, %303
  %305 = select i1 %304, i32 -1788691126, i32 -645152990
  br label %.backedge

306:                                              ; preds = %14
  br label %.backedge

307:                                              ; preds = %14
  %308 = load i32, i32* %6, align 4
  %309 = icmp slt i32 %.052, %308
  %310 = select i1 %309, i32 1775256079, i32 -802558053
  br label %.backedge

311:                                              ; preds = %14
  %312 = sext i32 %.054 to i64
  %.0..0..0.48 = load volatile i64, i64* %4, align 8
  %313 = mul nsw i64 %.0..0..0.48, %312
  %314 = sext i32 %.052 to i64
  %.idx = add nsw i64 %313, %314
  %315 = getelementptr inbounds i8, i8* %13, i64 %.idx
  %316 = load i8, i8* %315, align 1
  %317 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %316)
  br label %.backedge

318:                                              ; preds = %14
  %319 = add i32 %.052, 1
  br label %.backedge

320:                                              ; preds = %14
  %321 = load i32, i32* @x.1, align 4
  %322 = load i32, i32* @y.2, align 4
  %323 = add i32 %321, -1
  %324 = mul i32 %323, %321
  %325 = and i32 %324, 1
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %327, %326
  %329 = select i1 %328, i32 1946193258, i32 2055843456
  br label %.backedge

330:                                              ; preds = %14
  %331 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %332 = load i32, i32* @x.1, align 4
  %333 = load i32, i32* @y.2, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 -899709561, i32 2055843456
  br label %.backedge

341:                                              ; preds = %14
  br label %.backedge

342:                                              ; preds = %14
  %343 = load i32, i32* @x.1, align 4
  %344 = load i32, i32* @y.2, align 4
  %345 = add i32 %343, -1
  %346 = mul i32 %345, %343
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %349, %348
  %351 = select i1 %350, i32 -1703479018, i32 1797853604
  br label %.backedge

352:                                              ; preds = %14
  %353 = add i32 %.054, 1
  %354 = load i32, i32* @x.1, align 4
  %355 = load i32, i32* @y.2, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 1736489551, i32 1797853604
  br label %.backedge

363:                                              ; preds = %14
  br label %.backedge

364:                                              ; preds = %14
  ret i32 0

365:                                              ; preds = %14
  br label %.backedge

366:                                              ; preds = %14
  %367 = add i32 %.068, 1
  br label %.backedge

368:                                              ; preds = %14
  br label %.backedge

369:                                              ; preds = %14
  br label %.backedge

370:                                              ; preds = %14
  br label %.backedge

371:                                              ; preds = %14
  br label %.backedge

372:                                              ; preds = %14
  br label %.backedge

373:                                              ; preds = %14
  br label %.backedge

374:                                              ; preds = %14
  %375 = add i32 %.060, 1
  br label %.backedge

376:                                              ; preds = %14
  %.neg72 = add i32 %.064, 1
  br label %.backedge

377:                                              ; preds = %14
  %378 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

379:                                              ; preds = %14
  %.neg = add i32 %.054, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s449620450.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
