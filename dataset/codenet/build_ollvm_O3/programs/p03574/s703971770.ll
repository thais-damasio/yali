; ModuleID = 'build_ollvm/programs/p03574/s703971770.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s703971770.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"struct.std::pair" = type { i32, i32 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@directions = global [8 x %"struct.std::pair"] [%"struct.std::pair" { i32 -1, i32 -1 }, %"struct.std::pair" { i32 0, i32 -1 }, %"struct.std::pair" { i32 1, i32 -1 }, %"struct.std::pair" { i32 1, i32 0 }, %"struct.std::pair" { i32 1, i32 1 }, %"struct.std::pair" { i32 0, i32 1 }, %"struct.std::pair" { i32 -1, i32 1 }, %"struct.std::pair" { i32 -1, i32 0 }], align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s703971770.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define zeroext i1 @_Z5validiiii(i32 %0, i32 %1, i32 %2, i32 %3) local_unnamed_addr #4 {
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i32, align 4
  store i32 %0, i32* %8, align 4
  %9 = load i32, i32* @x.1, align 4
  %10 = load i32, i32* @y.2, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 -1933385670, i32 1746878829
  %18 = select i1 %16, i32 -1064507338, i32 1746878829
  %19 = icmp slt i32 %1, %3
  %20 = select i1 %16, i32 -463980118, i32 -1451188600
  %21 = select i1 %16, i32 -728733900, i32 -1451188600
  %22 = icmp slt i32 %0, %2
  %23 = select i1 %16, i32 14790600, i32 -1148222491
  %24 = select i1 %16, i32 326124359, i32 -1148222491
  %25 = icmp sgt i32 %1, -1
  %26 = select i1 %25, i32 -779130953, i32 620562921
  br label %27

27:                                               ; preds = %.backedge, %4
  %.018 = phi i1 [ undef, %4 ], [ %.018.be, %.backedge ]
  %.015 = phi i32 [ -737028102, %4 ], [ %.015.be, %.backedge ]
  %.0 = phi i1 [ undef, %4 ], [ %.0.be, %.backedge ]
  switch i32 %.015, label %.backedge [
    i32 -737028102, label %28
    i32 1198576627, label %31
    i32 -779130953, label %32
    i32 326124359, label %33
    i32 14790600, label %34
    i32 -272727186, label %36
    i32 -728733900, label %37
    i32 -463980118, label %38
    i32 620562921, label %39
    i32 -1064507338, label %40
    i32 -1933385670, label %41
    i32 -1148222491, label %42
    i32 -1451188600, label %43
    i32 1746878829, label %44
  ]

.backedge:                                        ; preds = %27, %44, %43, %42, %40, %39, %38, %37, %36, %34, %33, %32, %31, %28
  %.018.be = phi i1 [ %.018, %27 ], [ %.018, %44 ], [ %.018, %43 ], [ %.018, %42 ], [ %.018, %40 ], [ %.0, %39 ], [ %.018, %38 ], [ %.018, %37 ], [ %.018, %36 ], [ %.018, %34 ], [ %.018, %33 ], [ %.018, %32 ], [ %.018, %31 ], [ %.018, %28 ]
  %.015.be = phi i32 [ %.015, %27 ], [ -1064507338, %44 ], [ -728733900, %43 ], [ 326124359, %42 ], [ %17, %40 ], [ %18, %39 ], [ 620562921, %38 ], [ %20, %37 ], [ %21, %36 ], [ %35, %34 ], [ %23, %33 ], [ %24, %32 ], [ %26, %31 ], [ %30, %28 ]
  %.0.be = phi i1 [ %.0, %27 ], [ %.0, %44 ], [ %.0, %43 ], [ %.0, %42 ], [ %.0, %40 ], [ %.0, %39 ], [ %.0..0..0.13, %38 ], [ %.0, %37 ], [ %.0, %36 ], [ false, %34 ], [ %.0, %33 ], [ %.0, %32 ], [ false, %31 ], [ false, %28 ]
  br label %27

28:                                               ; preds = %27
  %.0..0..0.11 = load volatile i32, i32* %8, align 4
  %29 = icmp sgt i32 %.0..0..0.11, -1
  %30 = select i1 %29, i32 1198576627, i32 620562921
  br label %.backedge

31:                                               ; preds = %27
  br label %.backedge

32:                                               ; preds = %27
  br label %.backedge

33:                                               ; preds = %27
  store i1 %22, i1* %7, align 1
  br label %.backedge

34:                                               ; preds = %27
  %.0..0..0.12 = load volatile i1, i1* %7, align 1
  %35 = select i1 %.0..0..0.12, i32 -272727186, i32 620562921
  br label %.backedge

36:                                               ; preds = %27
  br label %.backedge

37:                                               ; preds = %27
  store i1 %19, i1* %6, align 1
  br label %.backedge

38:                                               ; preds = %27
  %.0..0..0.13 = load volatile i1, i1* %6, align 1
  br label %.backedge

39:                                               ; preds = %27
  br label %.backedge

40:                                               ; preds = %27
  br label %.backedge

41:                                               ; preds = %27
  store i1 %.018, i1* %5, align 1
  %.0..0..0.14 = load volatile i1, i1* %5, align 1
  ret i1 %.0..0..0.14

42:                                               ; preds = %27
  br label %.backedge

43:                                               ; preds = %27
  br label %.backedge

44:                                               ; preds = %27
  br label %.backedge
}

; Function Attrs: noinline uwtable
define void @_Z5solvev() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %8 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %7, i32* nonnull dereferenceable(4) %6)
  %9 = load i32, i32* %5, align 4
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %6, align 4
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %4, align 8
  %13 = call i8* @llvm.stacksave()
  %.0..0..0.59 = load volatile i64, i64* %4, align 8
  %14 = mul nuw i64 %.0..0..0.59, %10
  %15 = alloca i8, i64 %14, align 16
  br label %16

16:                                               ; preds = %.backedge, %0
  %.096 = phi i32 [ undef, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i32 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i32 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi %"struct.std::pair"* [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ 0, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.0 = phi i32 [ -215693468, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -215693468, label %17
    i32 1903585787, label %21
    i32 1397881869, label %31
    i32 223645908, label %41
    i32 -284685606, label %42
    i32 -871680954, label %52
    i32 1222836419, label %64
    i32 1178647658, label %66
    i32 1419333423, label %76
    i32 672861916, label %91
    i32 -206078148, label %92
    i32 965143611, label %102
    i32 -1441703165, label %113
    i32 770010844, label %114
    i32 -369488928, label %115
    i32 1854846045, label %125
    i32 -1966492939, label %135
    i32 -245135308, label %136
    i32 536827158, label %137
    i32 -620079560, label %141
    i32 -206743139, label %151
    i32 1782309888, label %161
    i32 627371232, label %162
    i32 -141043869, label %166
    i32 1158302506, label %173
    i32 -405455067, label %174
    i32 1056612215, label %176
    i32 55773517, label %186
    i32 2103011861, label %201
    i32 1449315971, label %203
    i32 513875643, label %213
    i32 123959800, label %229
    i32 -902704460, label %231
    i32 -1664059074, label %241
    i32 573597607, label %252
    i32 -442083517, label %253
    i32 -55947450, label %254
    i32 1253991873, label %264
    i32 -406481655, label %275
    i32 -1853932736, label %276
    i32 -1792418482, label %286
    i32 1711478662, label %302
    i32 1837223039, label %303
    i32 1422982583, label %304
    i32 -469066569, label %306
    i32 676369451, label %307
    i32 -286597891, label %309
    i32 2013618545, label %310
    i32 -388851094, label %314
    i32 -1699706817, label %315
    i32 -1504197900, label %319
    i32 1386204456, label %326
    i32 -86653590, label %336
    i32 -1428895917, label %347
    i32 -1264755465, label %348
    i32 49181425, label %350
    i32 -2043658434, label %351
    i32 -1721621426, label %361
    i32 -1058532307, label %371
    i32 -893187897, label %372
    i32 1070763786, label %373
    i32 -1879029865, label %374
    i32 -1519474939, label %380
    i32 -1415018401, label %382
    i32 1507322904, label %384
    i32 1911300641, label %385
    i32 1807435343, label %391
    i32 1021453299, label %392
    i32 432256495, label %394
    i32 -1316562406, label %396
    i32 824076712, label %403
    i32 -657618573, label %405
  ]

.backedge:                                        ; preds = %16, %405, %403, %396, %394, %392, %391, %385, %384, %382, %380, %374, %373, %372, %361, %351, %350, %348, %347, %336, %326, %319, %315, %314, %310, %309, %307, %306, %304, %303, %302, %286, %276, %275, %264, %254, %253, %252, %241, %231, %229, %213, %203, %201, %186, %176, %174, %173, %166, %162, %161, %151, %141, %137, %136, %135, %125, %115, %114, %113, %102, %92, %91, %76, %66, %64, %52, %42, %41, %31, %21, %17
  %.096.be = phi i32 [ %.096, %16 ], [ %.096, %405 ], [ %.096, %403 ], [ %.096, %396 ], [ %.096, %394 ], [ %.096, %392 ], [ %.096, %391 ], [ %.096, %385 ], [ %.096, %384 ], [ %.096, %382 ], [ %.096, %380 ], [ %.096, %374 ], [ %.096, %373 ], [ %.096, %372 ], [ %.096, %361 ], [ %.096, %351 ], [ %.096, %350 ], [ %.096, %348 ], [ %.096, %347 ], [ %.096, %336 ], [ %.096, %326 ], [ %.096, %319 ], [ %.096, %315 ], [ %.096, %314 ], [ %.096, %310 ], [ %.096, %309 ], [ %308, %307 ], [ %.096, %306 ], [ %.096, %304 ], [ %.096, %303 ], [ %.096, %302 ], [ %.096, %286 ], [ %.096, %276 ], [ %.096, %275 ], [ %.096, %264 ], [ %.096, %254 ], [ %.096, %253 ], [ %.096, %252 ], [ %.096, %241 ], [ %.096, %231 ], [ %.096, %229 ], [ %.096, %213 ], [ %.096, %203 ], [ %.096, %201 ], [ %.096, %186 ], [ %.096, %176 ], [ %.096, %174 ], [ %.096, %173 ], [ %.096, %166 ], [ %.096, %162 ], [ %.096, %161 ], [ %.096, %151 ], [ %.096, %141 ], [ %.096, %137 ], [ 0, %136 ], [ %.096, %135 ], [ %.096, %125 ], [ %.096, %115 ], [ %.096, %114 ], [ %.096, %113 ], [ %.096, %102 ], [ %.096, %92 ], [ %.096, %91 ], [ %.096, %76 ], [ %.096, %66 ], [ %.096, %64 ], [ %.096, %52 ], [ %.096, %42 ], [ %.096, %41 ], [ %.096, %31 ], [ %.096, %21 ], [ %.096, %17 ]
  %.094.be = phi i32 [ %.094, %16 ], [ %.094, %405 ], [ %.094, %403 ], [ %.094, %396 ], [ %.094, %394 ], [ %.094, %392 ], [ %.094, %391 ], [ %.094, %385 ], [ 0, %384 ], [ %.094, %382 ], [ %.094, %380 ], [ %.094, %374 ], [ %.094, %373 ], [ %.094, %372 ], [ %.094, %361 ], [ %.094, %351 ], [ %.094, %350 ], [ %.094, %348 ], [ %.094, %347 ], [ %.094, %336 ], [ %.094, %326 ], [ %.094, %319 ], [ %.094, %315 ], [ %.094, %314 ], [ %.094, %310 ], [ %.094, %309 ], [ %.094, %307 ], [ %.094, %306 ], [ %305, %304 ], [ %.094, %303 ], [ %.094, %302 ], [ %.094, %286 ], [ %.094, %276 ], [ %.094, %275 ], [ %.094, %264 ], [ %.094, %254 ], [ %.094, %253 ], [ %.094, %252 ], [ %.094, %241 ], [ %.094, %231 ], [ %.094, %229 ], [ %.094, %213 ], [ %.094, %203 ], [ %.094, %201 ], [ %.094, %186 ], [ %.094, %176 ], [ %.094, %174 ], [ %.094, %173 ], [ %.094, %166 ], [ %.094, %162 ], [ %.094, %161 ], [ 0, %151 ], [ %.094, %141 ], [ %.094, %137 ], [ %.094, %136 ], [ %.094, %135 ], [ %.094, %125 ], [ %.094, %115 ], [ %.094, %114 ], [ %.094, %113 ], [ %.094, %102 ], [ %.094, %92 ], [ %.094, %91 ], [ %.094, %76 ], [ %.094, %66 ], [ %.094, %64 ], [ %.094, %52 ], [ %.094, %42 ], [ %.094, %41 ], [ %.094, %31 ], [ %.094, %21 ], [ %.094, %17 ]
  %.092.be = phi i32 [ %.092, %16 ], [ %.092, %405 ], [ %.092, %403 ], [ %.092, %396 ], [ %.092, %394 ], [ %393, %392 ], [ %.092, %391 ], [ %.092, %385 ], [ %.092, %384 ], [ %.092, %382 ], [ %.092, %380 ], [ %.092, %374 ], [ %.092, %373 ], [ %.092, %372 ], [ %.092, %361 ], [ %.092, %351 ], [ %.092, %350 ], [ %.092, %348 ], [ %.092, %347 ], [ %.092, %336 ], [ %.092, %326 ], [ %.092, %319 ], [ %.092, %315 ], [ %.092, %314 ], [ %.092, %310 ], [ %.092, %309 ], [ %.092, %307 ], [ %.092, %306 ], [ %.092, %304 ], [ %.092, %303 ], [ %.092, %302 ], [ %.092, %286 ], [ %.092, %276 ], [ %.092, %275 ], [ %.092, %264 ], [ %.092, %254 ], [ %.092, %253 ], [ %.092, %252 ], [ %242, %241 ], [ %.092, %231 ], [ %.092, %229 ], [ %.092, %213 ], [ %.092, %203 ], [ %.092, %201 ], [ %.092, %186 ], [ %.092, %176 ], [ %.092, %174 ], [ 0, %173 ], [ %.092, %166 ], [ %.092, %162 ], [ %.092, %161 ], [ %.092, %151 ], [ %.092, %141 ], [ %.092, %137 ], [ %.092, %136 ], [ %.092, %135 ], [ %.092, %125 ], [ %.092, %115 ], [ %.092, %114 ], [ %.092, %113 ], [ %.092, %102 ], [ %.092, %92 ], [ %.092, %91 ], [ %.092, %76 ], [ %.092, %66 ], [ %.092, %64 ], [ %.092, %52 ], [ %.092, %42 ], [ %.092, %41 ], [ %.092, %31 ], [ %.092, %21 ], [ %.092, %17 ]
  %.090.be = phi i32 [ %.090, %16 ], [ %.090, %405 ], [ %.090, %403 ], [ %.090, %396 ], [ %.090, %394 ], [ %.090, %392 ], [ %.090, %391 ], [ %.090, %385 ], [ %.090, %384 ], [ %.090, %382 ], [ %381, %380 ], [ %.090, %374 ], [ %.090, %373 ], [ 0, %372 ], [ %.090, %361 ], [ %.090, %351 ], [ %.090, %350 ], [ %.090, %348 ], [ %.090, %347 ], [ %.090, %336 ], [ %.090, %326 ], [ %.090, %319 ], [ %.090, %315 ], [ %.090, %314 ], [ %.090, %310 ], [ %.090, %309 ], [ %.090, %307 ], [ %.090, %306 ], [ %.090, %304 ], [ %.090, %303 ], [ %.090, %302 ], [ %.090, %286 ], [ %.090, %276 ], [ %.090, %275 ], [ %.090, %264 ], [ %.090, %254 ], [ %.090, %253 ], [ %.090, %252 ], [ %.090, %241 ], [ %.090, %231 ], [ %.090, %229 ], [ %.090, %213 ], [ %.090, %203 ], [ %.090, %201 ], [ %.090, %186 ], [ %.090, %176 ], [ %.090, %174 ], [ %.090, %173 ], [ %.090, %166 ], [ %.090, %162 ], [ %.090, %161 ], [ %.090, %151 ], [ %.090, %141 ], [ %.090, %137 ], [ %.090, %136 ], [ %.090, %135 ], [ %.090, %125 ], [ %.090, %115 ], [ %.090, %114 ], [ %.090, %113 ], [ %103, %102 ], [ %.090, %92 ], [ %.090, %91 ], [ %.090, %76 ], [ %.090, %66 ], [ %.090, %64 ], [ %.090, %52 ], [ %.090, %42 ], [ %.090, %41 ], [ 0, %31 ], [ %.090, %21 ], [ %.090, %17 ]
  %.088.be = phi %"struct.std::pair"* [ %.088, %16 ], [ %.088, %405 ], [ %.088, %403 ], [ %.088, %396 ], [ %395, %394 ], [ %.088, %392 ], [ %.088, %391 ], [ %.088, %385 ], [ %.088, %384 ], [ %.088, %382 ], [ %.088, %380 ], [ %.088, %374 ], [ %.088, %373 ], [ %.088, %372 ], [ %.088, %361 ], [ %.088, %351 ], [ %.088, %350 ], [ %.088, %348 ], [ %.088, %347 ], [ %.088, %336 ], [ %.088, %326 ], [ %.088, %319 ], [ %.088, %315 ], [ %.088, %314 ], [ %.088, %310 ], [ %.088, %309 ], [ %.088, %307 ], [ %.088, %306 ], [ %.088, %304 ], [ %.088, %303 ], [ %.088, %302 ], [ %.088, %286 ], [ %.088, %276 ], [ %.088, %275 ], [ %265, %264 ], [ %.088, %254 ], [ %.088, %253 ], [ %.088, %252 ], [ %.088, %241 ], [ %.088, %231 ], [ %.088, %229 ], [ %.088, %213 ], [ %.088, %203 ], [ %.088, %201 ], [ %.088, %186 ], [ %.088, %176 ], [ %.088, %174 ], [ getelementptr inbounds ([8 x %"struct.std::pair"], [8 x %"struct.std::pair"]* @directions, i64 0, i64 0), %173 ], [ %.088, %166 ], [ %.088, %162 ], [ %.088, %161 ], [ %.088, %151 ], [ %.088, %141 ], [ %.088, %137 ], [ %.088, %136 ], [ %.088, %135 ], [ %.088, %125 ], [ %.088, %115 ], [ %.088, %114 ], [ %.088, %113 ], [ %.088, %102 ], [ %.088, %92 ], [ %.088, %91 ], [ %.088, %76 ], [ %.088, %66 ], [ %.088, %64 ], [ %.088, %52 ], [ %.088, %42 ], [ %.088, %41 ], [ %.088, %31 ], [ %.088, %21 ], [ %.088, %17 ]
  %.086.be = phi i32 [ %.086, %16 ], [ %.086, %405 ], [ %.086, %403 ], [ %.086, %396 ], [ %.086, %394 ], [ %.086, %392 ], [ %.086, %391 ], [ %.086, %385 ], [ %.086, %384 ], [ %383, %382 ], [ %.086, %380 ], [ %.086, %374 ], [ %.086, %373 ], [ %.086, %372 ], [ %.086, %361 ], [ %.086, %351 ], [ %.086, %350 ], [ %.086, %348 ], [ %.086, %347 ], [ %.086, %336 ], [ %.086, %326 ], [ %.086, %319 ], [ %.086, %315 ], [ %.086, %314 ], [ %.086, %310 ], [ %.086, %309 ], [ %.086, %307 ], [ %.086, %306 ], [ %.086, %304 ], [ %.086, %303 ], [ %.086, %302 ], [ %.086, %286 ], [ %.086, %276 ], [ %.086, %275 ], [ %.086, %264 ], [ %.086, %254 ], [ %.086, %253 ], [ %.086, %252 ], [ %.086, %241 ], [ %.086, %231 ], [ %.086, %229 ], [ %.086, %213 ], [ %.086, %203 ], [ %.086, %201 ], [ %.086, %186 ], [ %.086, %176 ], [ %.086, %174 ], [ %.086, %173 ], [ %.086, %166 ], [ %.086, %162 ], [ %.086, %161 ], [ %.086, %151 ], [ %.086, %141 ], [ %.086, %137 ], [ %.086, %136 ], [ %.086, %135 ], [ %.neg105, %125 ], [ %.086, %115 ], [ %.086, %114 ], [ %.086, %113 ], [ %.086, %102 ], [ %.086, %92 ], [ %.086, %91 ], [ %.086, %76 ], [ %.086, %66 ], [ %.086, %64 ], [ %.086, %52 ], [ %.086, %42 ], [ %.086, %41 ], [ %.086, %31 ], [ %.086, %21 ], [ %.086, %17 ]
  %.084.be = phi i32 [ %.084, %16 ], [ %.084, %405 ], [ %.084, %403 ], [ %.084, %396 ], [ %.084, %394 ], [ %.084, %392 ], [ %.084, %391 ], [ %386, %385 ], [ %.084, %384 ], [ %.084, %382 ], [ %.084, %380 ], [ %.084, %374 ], [ %.084, %373 ], [ %.084, %372 ], [ %.084, %361 ], [ %.084, %351 ], [ %.084, %350 ], [ %.084, %348 ], [ %.084, %347 ], [ %.084, %336 ], [ %.084, %326 ], [ %.084, %319 ], [ %.084, %315 ], [ %.084, %314 ], [ %.084, %310 ], [ %.084, %309 ], [ %.084, %307 ], [ %.084, %306 ], [ %.084, %304 ], [ %.084, %303 ], [ %.084, %302 ], [ %.084, %286 ], [ %.084, %276 ], [ %.084, %275 ], [ %.084, %264 ], [ %.084, %254 ], [ %.084, %253 ], [ %.084, %252 ], [ %.084, %241 ], [ %.084, %231 ], [ %.084, %229 ], [ %.084, %213 ], [ %.084, %203 ], [ %.084, %201 ], [ %187, %186 ], [ %.084, %176 ], [ %.084, %174 ], [ %.084, %173 ], [ %.084, %166 ], [ %.084, %162 ], [ %.084, %161 ], [ %.084, %151 ], [ %.084, %141 ], [ %.084, %137 ], [ %.084, %136 ], [ %.084, %135 ], [ %.084, %125 ], [ %.084, %115 ], [ %.084, %114 ], [ %.084, %113 ], [ %.084, %102 ], [ %.084, %92 ], [ %.084, %91 ], [ %.084, %76 ], [ %.084, %66 ], [ %.084, %64 ], [ %.084, %52 ], [ %.084, %42 ], [ %.084, %41 ], [ %.084, %31 ], [ %.084, %21 ], [ %.084, %17 ]
  %.082.be = phi i32 [ %.082, %16 ], [ %.082, %405 ], [ %.082, %403 ], [ %.082, %396 ], [ %.082, %394 ], [ %.082, %392 ], [ %.082, %391 ], [ %387, %385 ], [ %.082, %384 ], [ %.082, %382 ], [ %.082, %380 ], [ %.082, %374 ], [ %.082, %373 ], [ %.082, %372 ], [ %.082, %361 ], [ %.082, %351 ], [ %.082, %350 ], [ %.082, %348 ], [ %.082, %347 ], [ %.082, %336 ], [ %.082, %326 ], [ %.082, %319 ], [ %.082, %315 ], [ %.082, %314 ], [ %.082, %310 ], [ %.082, %309 ], [ %.082, %307 ], [ %.082, %306 ], [ %.082, %304 ], [ %.082, %303 ], [ %.082, %302 ], [ %.082, %286 ], [ %.082, %276 ], [ %.082, %275 ], [ %.082, %264 ], [ %.082, %254 ], [ %.082, %253 ], [ %.082, %252 ], [ %.082, %241 ], [ %.082, %231 ], [ %.082, %229 ], [ %.082, %213 ], [ %.082, %203 ], [ %.082, %201 ], [ %188, %186 ], [ %.082, %176 ], [ %.082, %174 ], [ %.082, %173 ], [ %.082, %166 ], [ %.082, %162 ], [ %.082, %161 ], [ %.082, %151 ], [ %.082, %141 ], [ %.082, %137 ], [ %.082, %136 ], [ %.082, %135 ], [ %.082, %125 ], [ %.082, %115 ], [ %.082, %114 ], [ %.082, %113 ], [ %.082, %102 ], [ %.082, %92 ], [ %.082, %91 ], [ %.082, %76 ], [ %.082, %66 ], [ %.082, %64 ], [ %.082, %52 ], [ %.082, %42 ], [ %.082, %41 ], [ %.082, %31 ], [ %.082, %21 ], [ %.082, %17 ]
  %.080.be = phi i32 [ %.080, %16 ], [ %.080, %405 ], [ %.080, %403 ], [ %.080, %396 ], [ %.080, %394 ], [ %.080, %392 ], [ %.080, %391 ], [ %.080, %385 ], [ %.080, %384 ], [ %.080, %382 ], [ %.080, %380 ], [ %.080, %374 ], [ %.080, %373 ], [ %.080, %372 ], [ %.080, %361 ], [ %.080, %351 ], [ %.neg, %350 ], [ %.080, %348 ], [ %.080, %347 ], [ %.080, %336 ], [ %.080, %326 ], [ %.080, %319 ], [ %.080, %315 ], [ %.080, %314 ], [ %.080, %310 ], [ 0, %309 ], [ %.080, %307 ], [ %.080, %306 ], [ %.080, %304 ], [ %.080, %303 ], [ %.080, %302 ], [ %.080, %286 ], [ %.080, %276 ], [ %.080, %275 ], [ %.080, %264 ], [ %.080, %254 ], [ %.080, %253 ], [ %.080, %252 ], [ %.080, %241 ], [ %.080, %231 ], [ %.080, %229 ], [ %.080, %213 ], [ %.080, %203 ], [ %.080, %201 ], [ %.080, %186 ], [ %.080, %176 ], [ %.080, %174 ], [ %.080, %173 ], [ %.080, %166 ], [ %.080, %162 ], [ %.080, %161 ], [ %.080, %151 ], [ %.080, %141 ], [ %.080, %137 ], [ %.080, %136 ], [ %.080, %135 ], [ %.080, %125 ], [ %.080, %115 ], [ %.080, %114 ], [ %.080, %113 ], [ %.080, %102 ], [ %.080, %92 ], [ %.080, %91 ], [ %.080, %76 ], [ %.080, %66 ], [ %.080, %64 ], [ %.080, %52 ], [ %.080, %42 ], [ %.080, %41 ], [ %.080, %31 ], [ %.080, %21 ], [ %.080, %17 ]
  %.078.be = phi i32 [ %.078, %16 ], [ %.078, %405 ], [ %404, %403 ], [ %.078, %396 ], [ %.078, %394 ], [ %.078, %392 ], [ %.078, %391 ], [ %.078, %385 ], [ %.078, %384 ], [ %.078, %382 ], [ %.078, %380 ], [ %.078, %374 ], [ %.078, %373 ], [ %.078, %372 ], [ %.078, %361 ], [ %.078, %351 ], [ %.078, %350 ], [ %.078, %348 ], [ %.078, %347 ], [ %337, %336 ], [ %.078, %326 ], [ %.078, %319 ], [ %.078, %315 ], [ 0, %314 ], [ %.078, %310 ], [ %.078, %309 ], [ %.078, %307 ], [ %.078, %306 ], [ %.078, %304 ], [ %.078, %303 ], [ %.078, %302 ], [ %.078, %286 ], [ %.078, %276 ], [ %.078, %275 ], [ %.078, %264 ], [ %.078, %254 ], [ %.078, %253 ], [ %.078, %252 ], [ %.078, %241 ], [ %.078, %231 ], [ %.078, %229 ], [ %.078, %213 ], [ %.078, %203 ], [ %.078, %201 ], [ %.078, %186 ], [ %.078, %176 ], [ %.078, %174 ], [ %.078, %173 ], [ %.078, %166 ], [ %.078, %162 ], [ %.078, %161 ], [ %.078, %151 ], [ %.078, %141 ], [ %.078, %137 ], [ %.078, %136 ], [ %.078, %135 ], [ %.078, %125 ], [ %.078, %115 ], [ %.078, %114 ], [ %.078, %113 ], [ %.078, %102 ], [ %.078, %92 ], [ %.078, %91 ], [ %.078, %76 ], [ %.078, %66 ], [ %.078, %64 ], [ %.078, %52 ], [ %.078, %42 ], [ %.078, %41 ], [ %.078, %31 ], [ %.078, %21 ], [ %.078, %17 ]
  %.0.be = phi i32 [ %.0, %16 ], [ -1721621426, %405 ], [ -86653590, %403 ], [ -1792418482, %396 ], [ 1253991873, %394 ], [ -1664059074, %392 ], [ 513875643, %391 ], [ 55773517, %385 ], [ -206743139, %384 ], [ 1854846045, %382 ], [ 965143611, %380 ], [ 1419333423, %374 ], [ -871680954, %373 ], [ 1397881869, %372 ], [ %370, %361 ], [ %360, %351 ], [ 2013618545, %350 ], [ 49181425, %348 ], [ -1699706817, %347 ], [ %346, %336 ], [ %335, %326 ], [ 1386204456, %319 ], [ %318, %315 ], [ -1699706817, %314 ], [ %313, %310 ], [ 2013618545, %309 ], [ 536827158, %307 ], [ 676369451, %306 ], [ 627371232, %304 ], [ 1422982583, %303 ], [ 1837223039, %302 ], [ %301, %286 ], [ %285, %276 ], [ -405455067, %275 ], [ %274, %264 ], [ %263, %254 ], [ -55947450, %253 ], [ -442083517, %252 ], [ %251, %241 ], [ %240, %231 ], [ %230, %229 ], [ %228, %213 ], [ %212, %203 ], [ %202, %201 ], [ %200, %186 ], [ %185, %176 ], [ %175, %174 ], [ -405455067, %173 ], [ %172, %166 ], [ %165, %162 ], [ 627371232, %161 ], [ %160, %151 ], [ %150, %141 ], [ %140, %137 ], [ 536827158, %136 ], [ -215693468, %135 ], [ %134, %125 ], [ %124, %115 ], [ -369488928, %114 ], [ -284685606, %113 ], [ %112, %102 ], [ %101, %92 ], [ -206078148, %91 ], [ %90, %76 ], [ %75, %66 ], [ %65, %64 ], [ %63, %52 ], [ %51, %42 ], [ -284685606, %41 ], [ %40, %31 ], [ %30, %21 ], [ %20, %17 ]
  br label %16

17:                                               ; preds = %16
  %18 = load i32, i32* %5, align 4
  %19 = icmp slt i32 %.086, %18
  %20 = select i1 %19, i32 1903585787, i32 -245135308
  br label %.backedge

21:                                               ; preds = %16
  %22 = load i32, i32* @x.3, align 4
  %23 = load i32, i32* @y.4, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 1397881869, i32 -893187897
  br label %.backedge

31:                                               ; preds = %16
  %32 = load i32, i32* @x.3, align 4
  %33 = load i32, i32* @y.4, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 223645908, i32 -893187897
  br label %.backedge

41:                                               ; preds = %16
  br label %.backedge

42:                                               ; preds = %16
  %43 = load i32, i32* @x.3, align 4
  %44 = load i32, i32* @y.4, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 -871680954, i32 1070763786
  br label %.backedge

52:                                               ; preds = %16
  %53 = load i32, i32* %6, align 4
  %54 = icmp slt i32 %.090, %53
  store i1 %54, i1* %3, align 1
  %55 = load i32, i32* @x.3, align 4
  %56 = load i32, i32* @y.4, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 1222836419, i32 1070763786
  br label %.backedge

64:                                               ; preds = %16
  %.0..0..0.75 = load volatile i1, i1* %3, align 1
  %65 = select i1 %.0..0..0.75, i32 1178647658, i32 770010844
  br label %.backedge

66:                                               ; preds = %16
  %67 = load i32, i32* @x.3, align 4
  %68 = load i32, i32* @y.4, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 1419333423, i32 -1879029865
  br label %.backedge

76:                                               ; preds = %16
  %77 = sext i32 %.086 to i64
  %.0..0..0.60 = load volatile i64, i64* %4, align 8
  %78 = mul nsw i64 %.0..0..0.60, %77
  %79 = sext i32 %.090 to i64
  %.idx106 = add nsw i64 %78, %79
  %80 = getelementptr inbounds i8, i8* %15, i64 %.idx106
  %81 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %80)
  %82 = load i32, i32* @x.3, align 4
  %83 = load i32, i32* @y.4, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 672861916, i32 -1879029865
  br label %.backedge

91:                                               ; preds = %16
  br label %.backedge

92:                                               ; preds = %16
  %93 = load i32, i32* @x.3, align 4
  %94 = load i32, i32* @y.4, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 965143611, i32 -1519474939
  br label %.backedge

102:                                              ; preds = %16
  %103 = add i32 %.090, 1
  %104 = load i32, i32* @x.3, align 4
  %105 = load i32, i32* @y.4, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 -1441703165, i32 -1519474939
  br label %.backedge

113:                                              ; preds = %16
  br label %.backedge

114:                                              ; preds = %16
  br label %.backedge

115:                                              ; preds = %16
  %116 = load i32, i32* @x.3, align 4
  %117 = load i32, i32* @y.4, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 1854846045, i32 -1415018401
  br label %.backedge

125:                                              ; preds = %16
  %.neg105 = add i32 %.086, 1
  %126 = load i32, i32* @x.3, align 4
  %127 = load i32, i32* @y.4, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 -1966492939, i32 -1415018401
  br label %.backedge

135:                                              ; preds = %16
  br label %.backedge

136:                                              ; preds = %16
  br label %.backedge

137:                                              ; preds = %16
  %138 = load i32, i32* %5, align 4
  %139 = icmp slt i32 %.096, %138
  %140 = select i1 %139, i32 -620079560, i32 -286597891
  br label %.backedge

141:                                              ; preds = %16
  %142 = load i32, i32* @x.3, align 4
  %143 = load i32, i32* @y.4, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -206743139, i32 1507322904
  br label %.backedge

151:                                              ; preds = %16
  %152 = load i32, i32* @x.3, align 4
  %153 = load i32, i32* @y.4, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 1782309888, i32 1507322904
  br label %.backedge

161:                                              ; preds = %16
  br label %.backedge

162:                                              ; preds = %16
  %163 = load i32, i32* %6, align 4
  %164 = icmp slt i32 %.094, %163
  %165 = select i1 %164, i32 -141043869, i32 -469066569
  br label %.backedge

166:                                              ; preds = %16
  %167 = sext i32 %.096 to i64
  %.0..0..0.61 = load volatile i64, i64* %4, align 8
  %168 = mul nsw i64 %.0..0..0.61, %167
  %169 = sext i32 %.094 to i64
  %.idx103 = add nsw i64 %168, %169
  %170 = getelementptr inbounds i8, i8* %15, i64 %.idx103
  %171 = load i8, i8* %170, align 1
  %.not104 = icmp eq i8 %171, 35
  %172 = select i1 %.not104, i32 1837223039, i32 1158302506
  br label %.backedge

173:                                              ; preds = %16
  br label %.backedge

174:                                              ; preds = %16
  %.not = icmp eq %"struct.std::pair"* %.088, getelementptr inbounds ([8 x %"struct.std::pair"], [8 x %"struct.std::pair"]* @directions, i64 1, i64 0)
  %175 = select i1 %.not, i32 -1853932736, i32 1056612215
  br label %.backedge

176:                                              ; preds = %16
  %177 = load i32, i32* @x.3, align 4
  %178 = load i32, i32* @y.4, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 55773517, i32 1911300641
  br label %.backedge

186:                                              ; preds = %16
  %.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.088, i64 0, i32 0
  %.sroa.0.0.copyload = load i32, i32* %.sroa.0.0..sroa_idx, align 4
  %.sroa.4.0..sroa_idx19 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.088, i64 0, i32 1
  %.sroa.4.0.copyload = load i32, i32* %.sroa.4.0..sroa_idx19, align 4
  %187 = add i32 %.sroa.0.0.copyload, %.096
  %188 = add i32 %.sroa.4.0.copyload, %.094
  %189 = load i32, i32* %5, align 4
  %190 = load i32, i32* %6, align 4
  %191 = call zeroext i1 @_Z5validiiii(i32 %187, i32 %188, i32 %189, i32 %190)
  store i1 %191, i1* %2, align 1
  %192 = load i32, i32* @x.3, align 4
  %193 = load i32, i32* @y.4, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 2103011861, i32 1911300641
  br label %.backedge

201:                                              ; preds = %16
  %.0..0..0.76 = load volatile i1, i1* %2, align 1
  %202 = select i1 %.0..0..0.76, i32 1449315971, i32 -442083517
  br label %.backedge

203:                                              ; preds = %16
  %204 = load i32, i32* @x.3, align 4
  %205 = load i32, i32* @y.4, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 513875643, i32 1807435343
  br label %.backedge

213:                                              ; preds = %16
  %214 = sext i32 %.084 to i64
  %.0..0..0.62 = load volatile i64, i64* %4, align 8
  %215 = mul nsw i64 %.0..0..0.62, %214
  %216 = sext i32 %.082 to i64
  %.idx102 = add nsw i64 %215, %216
  %217 = getelementptr inbounds i8, i8* %15, i64 %.idx102
  %218 = load i8, i8* %217, align 1
  %219 = icmp eq i8 %218, 35
  store i1 %219, i1* %1, align 1
  %220 = load i32, i32* @x.3, align 4
  %221 = load i32, i32* @y.4, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 123959800, i32 1807435343
  br label %.backedge

229:                                              ; preds = %16
  %.0..0..0.77 = load volatile i1, i1* %1, align 1
  %230 = select i1 %.0..0..0.77, i32 -902704460, i32 -442083517
  br label %.backedge

231:                                              ; preds = %16
  %232 = load i32, i32* @x.3, align 4
  %233 = load i32, i32* @y.4, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 -1664059074, i32 1021453299
  br label %.backedge

241:                                              ; preds = %16
  %242 = add i32 %.092, 1
  %243 = load i32, i32* @x.3, align 4
  %244 = load i32, i32* @y.4, align 4
  %245 = add i32 %243, -1
  %246 = mul i32 %245, %243
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %249, %248
  %251 = select i1 %250, i32 573597607, i32 1021453299
  br label %.backedge

252:                                              ; preds = %16
  br label %.backedge

253:                                              ; preds = %16
  br label %.backedge

254:                                              ; preds = %16
  %255 = load i32, i32* @x.3, align 4
  %256 = load i32, i32* @y.4, align 4
  %257 = add i32 %255, -1
  %258 = mul i32 %257, %255
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %261, %260
  %263 = select i1 %262, i32 1253991873, i32 432256495
  br label %.backedge

264:                                              ; preds = %16
  %265 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.088, i64 1
  %266 = load i32, i32* @x.3, align 4
  %267 = load i32, i32* @y.4, align 4
  %268 = add i32 %266, -1
  %269 = mul i32 %268, %266
  %270 = and i32 %269, 1
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %272, %271
  %274 = select i1 %273, i32 -406481655, i32 432256495
  br label %.backedge

275:                                              ; preds = %16
  br label %.backedge

276:                                              ; preds = %16
  %277 = load i32, i32* @x.3, align 4
  %278 = load i32, i32* @y.4, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 -1792418482, i32 -1316562406
  br label %.backedge

286:                                              ; preds = %16
  %287 = trunc i32 %.092 to i8
  %288 = add i8 %287, 48
  %289 = sext i32 %.096 to i64
  %.0..0..0.63 = load volatile i64, i64* %4, align 8
  %290 = mul nsw i64 %.0..0..0.63, %289
  %291 = sext i32 %.094 to i64
  %.idx101 = add nsw i64 %290, %291
  %292 = getelementptr inbounds i8, i8* %15, i64 %.idx101
  store i8 %288, i8* %292, align 1
  %293 = load i32, i32* @x.3, align 4
  %294 = load i32, i32* @y.4, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 1711478662, i32 -1316562406
  br label %.backedge

302:                                              ; preds = %16
  br label %.backedge

303:                                              ; preds = %16
  br label %.backedge

304:                                              ; preds = %16
  %305 = add i32 %.094, 1
  br label %.backedge

306:                                              ; preds = %16
  br label %.backedge

307:                                              ; preds = %16
  %308 = add i32 %.096, 1
  br label %.backedge

309:                                              ; preds = %16
  br label %.backedge

310:                                              ; preds = %16
  %311 = load i32, i32* %5, align 4
  %312 = icmp slt i32 %.080, %311
  %313 = select i1 %312, i32 -388851094, i32 -2043658434
  br label %.backedge

314:                                              ; preds = %16
  br label %.backedge

315:                                              ; preds = %16
  %316 = load i32, i32* %6, align 4
  %317 = icmp slt i32 %.078, %316
  %318 = select i1 %317, i32 -1504197900, i32 -1264755465
  br label %.backedge

319:                                              ; preds = %16
  %320 = sext i32 %.080 to i64
  %.0..0..0.64 = load volatile i64, i64* %4, align 8
  %321 = mul nsw i64 %.0..0..0.64, %320
  %322 = sext i32 %.078 to i64
  %.idx99 = add nsw i64 %321, %322
  %323 = getelementptr inbounds i8, i8* %15, i64 %.idx99
  %324 = load i8, i8* %323, align 1
  %325 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %324)
  br label %.backedge

326:                                              ; preds = %16
  %327 = load i32, i32* @x.3, align 4
  %328 = load i32, i32* @y.4, align 4
  %329 = add i32 %327, -1
  %330 = mul i32 %329, %327
  %331 = and i32 %330, 1
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %333, %332
  %335 = select i1 %334, i32 -86653590, i32 824076712
  br label %.backedge

336:                                              ; preds = %16
  %337 = add i32 %.078, 1
  %338 = load i32, i32* @x.3, align 4
  %339 = load i32, i32* @y.4, align 4
  %340 = add i32 %338, -1
  %341 = mul i32 %340, %338
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %344, %343
  %346 = select i1 %345, i32 -1428895917, i32 824076712
  br label %.backedge

347:                                              ; preds = %16
  br label %.backedge

348:                                              ; preds = %16
  %349 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

350:                                              ; preds = %16
  %.neg = add i32 %.080, 1
  br label %.backedge

351:                                              ; preds = %16
  %352 = load i32, i32* @x.3, align 4
  %353 = load i32, i32* @y.4, align 4
  %354 = add i32 %352, -1
  %355 = mul i32 %354, %352
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %358, %357
  %360 = select i1 %359, i32 -1721621426, i32 -657618573
  br label %.backedge

361:                                              ; preds = %16
  call void @llvm.stackrestore(i8* %13)
  %362 = load i32, i32* @x.3, align 4
  %363 = load i32, i32* @y.4, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 -1058532307, i32 -657618573
  br label %.backedge

371:                                              ; preds = %16
  ret void

372:                                              ; preds = %16
  br label %.backedge

373:                                              ; preds = %16
  br label %.backedge

374:                                              ; preds = %16
  %375 = sext i32 %.086 to i64
  %.0..0..0.65 = load volatile i64, i64* %4, align 8
  %.0..0..0.66 = load volatile i64, i64* %4, align 8
  %.0..0..0.67 = load volatile i64, i64* %4, align 8
  %.0..0..0.68 = load volatile i64, i64* %4, align 8
  %376 = mul nsw i64 %.0..0..0.68, %375
  %377 = sext i32 %.090 to i64
  %.idx98 = add nsw i64 %376, %377
  %378 = getelementptr inbounds i8, i8* %15, i64 %.idx98
  %379 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %378)
  br label %.backedge

380:                                              ; preds = %16
  %381 = add i32 %.090, 1
  br label %.backedge

382:                                              ; preds = %16
  %383 = add i32 %.086, 1
  br label %.backedge

384:                                              ; preds = %16
  br label %.backedge

385:                                              ; preds = %16
  %.sroa.0.0..sroa_idx17 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.088, i64 0, i32 0
  %.sroa.0.0.copyload18 = load i32, i32* %.sroa.0.0..sroa_idx17, align 4
  %.sroa.4.0..sroa_idx20 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.088, i64 0, i32 1
  %.sroa.4.0.copyload21 = load i32, i32* %.sroa.4.0..sroa_idx20, align 4
  %386 = add i32 %.sroa.0.0.copyload18, %.096
  %387 = add i32 %.sroa.4.0.copyload21, %.094
  %388 = load i32, i32* %5, align 4
  %389 = load i32, i32* %6, align 4
  %390 = call zeroext i1 @_Z5validiiii(i32 %386, i32 %387, i32 %388, i32 %389)
  br label %.backedge

391:                                              ; preds = %16
  %.0..0..0.69 = load volatile i64, i64* %4, align 8
  %.0..0..0.70 = load volatile i64, i64* %4, align 8
  %.0..0..0.71 = load volatile i64, i64* %4, align 8
  %.0..0..0.72 = load volatile i64, i64* %4, align 8
  %.0..0..0.73 = load volatile i64, i64* %4, align 8
  br label %.backedge

392:                                              ; preds = %16
  %393 = add i32 %.092, 1
  br label %.backedge

394:                                              ; preds = %16
  %395 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.088, i64 1
  br label %.backedge

396:                                              ; preds = %16
  %397 = trunc i32 %.092 to i8
  %398 = add i8 %397, 48
  %399 = sext i32 %.096 to i64
  %.0..0..0.74 = load volatile i64, i64* %4, align 8
  %400 = mul nsw i64 %.0..0..0.74, %399
  %401 = sext i32 %.094 to i64
  %.idx = add nsw i64 %400, %401
  %402 = getelementptr inbounds i8, i8* %15, i64 %.idx
  store i8 %398, i8* %402, align 1
  br label %.backedge

403:                                              ; preds = %16
  %404 = add i32 %.078, 1
  br label %.backedge

405:                                              ; preds = %16
  call void @llvm.stackrestore(i8* %13)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #6 {
  br label %.outer

.outer:                                           ; preds = %2, %0
  %.03.ph = phi i32 [ %.neg, %2 ], [ 1, %0 ]
  %.0.ph = phi i32 [ %3, %2 ], [ -873832285, %0 ]
  br label %.outer5

.outer5:                                          ; preds = %.outer, %4
  %.0.ph6 = phi i32 [ %.0.ph, %.outer ], [ -873832285, %4 ]
  br label %1

1:                                                ; preds = %.outer5, %1
  switch i32 %.0.ph6, label %1 [
    i32 -873832285, label %2
    i32 960624814, label %4
    i32 -388427055, label %5
  ]

2:                                                ; preds = %1
  %.neg = add i32 %.03.ph, -1
  %.not = icmp eq i32 %.03.ph, 0
  %3 = select i1 %.not, i32 -388427055, i32 960624814
  br label %.outer

4:                                                ; preds = %1
  tail call void @_Z5solvev()
  br label %.outer5

5:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s703971770.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
