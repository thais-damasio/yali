; ModuleID = 'build_ollvm/programs/p03574/s806882803.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s806882803.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s806882803.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1039835633, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1039835633, label %11
    i32 1053987536, label %14
    i32 -427335077, label %25
    i32 -1418469265, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1053987536, i32 -1418469265
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -427335077, i32 -1418469265
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1053987536, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %10, i32* nonnull dereferenceable(4) %9)
  %12 = load i32, i32* %8, align 4
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %9, align 4
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %7, align 8
  %.0..0..0.63 = load volatile i64, i64* %7, align 8
  %16 = mul nuw i64 %.0..0..0.63, %13
  %17 = alloca i8, i64 %16, align 16
  store i64 %15, i64* %6, align 8
  %.0..0..0.71 = load volatile i64, i64* %6, align 8
  %18 = mul nuw i64 %.0..0..0.71, %13
  %19 = alloca i32, i64 %18, align 16
  br label %20

20:                                               ; preds = %.backedge, %0
  %.0119 = phi i32 [ 0, %0 ], [ %.0119.be, %.backedge ]
  %.0117 = phi i32 [ undef, %0 ], [ %.0117.be, %.backedge ]
  %.0115 = phi i32 [ undef, %0 ], [ %.0115.be, %.backedge ]
  %.0113 = phi i32 [ undef, %0 ], [ %.0113.be, %.backedge ]
  %.0111 = phi i32 [ undef, %0 ], [ %.0111.be, %.backedge ]
  %.0109 = phi i32 [ undef, %0 ], [ %.0109.be, %.backedge ]
  %.0 = phi i32 [ 1268191265, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1268191265, label %21
    i32 -37715844, label %25
    i32 446824456, label %26
    i32 2069375743, label %30
    i32 1692324175, label %38
    i32 -228172742, label %39
    i32 -347076734, label %40
    i32 1000847587, label %42
    i32 930024815, label %43
    i32 292527000, label %47
    i32 -289473263, label %48
    i32 -815911415, label %58
    i32 -73867637, label %70
    i32 -2004425670, label %72
    i32 -695029848, label %82
    i32 113233688, label %98
    i32 -64871194, label %100
    i32 -1543817822, label %103
    i32 1996828818, label %113
    i32 1394371119, label %122
    i32 1573187104, label %127
    i32 552082962, label %137
    i32 -72405110, label %155
    i32 1558416589, label %156
    i32 1796861144, label %166
    i32 -1896450434, label %176
    i32 -209023737, label %177
    i32 -1698892202, label %187
    i32 1996056987, label %198
    i32 -1798450818, label %200
    i32 67641322, label %210
    i32 -1679718819, label %227
    i32 -454436991, label %228
    i32 1618671421, label %233
    i32 106317484, label %243
    i32 596021233, label %260
    i32 -838293719, label %261
    i32 1664868880, label %271
    i32 897801290, label %284
    i32 -1460829033, label %286
    i32 -372323507, label %296
    i32 111247319, label %306
    i32 1985009679, label %324
    i32 1768310099, label %325
    i32 1325307975, label %330
    i32 591540909, label %339
    i32 -1461002511, label %340
    i32 -307271614, label %341
    i32 1529347245, label %342
    i32 1115852637, label %344
    i32 1068221877, label %354
    i32 -637985074, label %364
    i32 590350150, label %365
    i32 737103551, label %375
    i32 -1509254670, label %386
    i32 -1256538546, label %387
    i32 251469360, label %397
    i32 -458361496, label %407
    i32 1939772458, label %408
    i32 -506465948, label %418
    i32 1977779134, label %430
    i32 990034932, label %432
    i32 -1986315320, label %442
    i32 -309767072, label %452
    i32 -1823581947, label %453
    i32 232532915, label %457
    i32 -1934561908, label %465
    i32 -1938044045, label %467
    i32 -619937916, label %474
    i32 1341670422, label %484
    i32 562423027, label %494
    i32 868532080, label %495
    i32 1227442387, label %497
    i32 245606831, label %499
    i32 -1497638926, label %500
    i32 -1100379539, label %501
    i32 754340377, label %502
    i32 870209468, label %503
    i32 1100721950, label %512
    i32 -2145496408, label %513
    i32 169218967, label %514
    i32 -907688666, label %522
    i32 -1225377584, label %530
    i32 -2020555012, label %531
    i32 -1063071641, label %540
    i32 321270151, label %541
    i32 527054638, label %543
    i32 -704376332, label %544
    i32 1781833141, label %545
    i32 1443410357, label %546
  ]

.backedge:                                        ; preds = %20, %546, %545, %544, %543, %541, %540, %531, %530, %522, %514, %513, %512, %503, %502, %501, %499, %497, %495, %494, %484, %474, %467, %465, %457, %453, %452, %442, %432, %430, %418, %408, %407, %397, %387, %386, %375, %365, %364, %354, %344, %342, %341, %340, %339, %330, %325, %324, %306, %296, %286, %284, %271, %261, %260, %243, %233, %228, %227, %210, %200, %198, %187, %177, %176, %166, %156, %155, %137, %127, %122, %113, %103, %100, %98, %82, %72, %70, %58, %48, %47, %43, %42, %40, %39, %38, %30, %26, %25, %21
  %.0119.be = phi i32 [ %.0119, %20 ], [ %.0119, %546 ], [ %.0119, %545 ], [ %.0119, %544 ], [ %.0119, %543 ], [ %.0119, %541 ], [ %.0119, %540 ], [ %.0119, %531 ], [ %.0119, %530 ], [ %.0119, %522 ], [ %.0119, %514 ], [ %.0119, %513 ], [ %.0119, %512 ], [ %.0119, %503 ], [ %.0119, %502 ], [ %.0119, %501 ], [ %.0119, %499 ], [ %.0119, %497 ], [ %.0119, %495 ], [ %.0119, %494 ], [ %.0119, %484 ], [ %.0119, %474 ], [ %.0119, %467 ], [ %.0119, %465 ], [ %.0119, %457 ], [ %.0119, %453 ], [ %.0119, %452 ], [ %.0119, %442 ], [ %.0119, %432 ], [ %.0119, %430 ], [ %.0119, %418 ], [ %.0119, %408 ], [ %.0119, %407 ], [ %.0119, %397 ], [ %.0119, %387 ], [ %.0119, %386 ], [ %.0119, %375 ], [ %.0119, %365 ], [ %.0119, %364 ], [ %.0119, %354 ], [ %.0119, %344 ], [ %.0119, %342 ], [ %.0119, %341 ], [ %.0119, %340 ], [ %.0119, %339 ], [ %.0119, %330 ], [ %.0119, %325 ], [ %.0119, %324 ], [ %.0119, %306 ], [ %.0119, %296 ], [ %.0119, %286 ], [ %.0119, %284 ], [ %.0119, %271 ], [ %.0119, %261 ], [ %.0119, %260 ], [ %.0119, %243 ], [ %.0119, %233 ], [ %.0119, %228 ], [ %.0119, %227 ], [ %.0119, %210 ], [ %.0119, %200 ], [ %.0119, %198 ], [ %.0119, %187 ], [ %.0119, %177 ], [ %.0119, %176 ], [ %.0119, %166 ], [ %.0119, %156 ], [ %.0119, %155 ], [ %.0119, %137 ], [ %.0119, %127 ], [ %.0119, %122 ], [ %.0119, %113 ], [ %.0119, %103 ], [ %.0119, %100 ], [ %.0119, %98 ], [ %.0119, %82 ], [ %.0119, %72 ], [ %.0119, %70 ], [ %.0119, %58 ], [ %.0119, %48 ], [ %.0119, %47 ], [ %.0119, %43 ], [ %.0119, %42 ], [ %41, %40 ], [ %.0119, %39 ], [ %.0119, %38 ], [ %.0119, %30 ], [ %.0119, %26 ], [ %.0119, %25 ], [ %.0119, %21 ]
  %.0117.be = phi i32 [ %.0117, %20 ], [ %.0117, %546 ], [ %.0117, %545 ], [ %.0117, %544 ], [ %.0117, %543 ], [ %.0117, %541 ], [ %.0117, %540 ], [ %.0117, %531 ], [ %.0117, %530 ], [ %.0117, %522 ], [ %.0117, %514 ], [ %.0117, %513 ], [ %.0117, %512 ], [ %.0117, %503 ], [ %.0117, %502 ], [ %.0117, %501 ], [ %.0117, %499 ], [ %.0117, %497 ], [ %.0117, %495 ], [ %.0117, %494 ], [ %.0117, %484 ], [ %.0117, %474 ], [ %.0117, %467 ], [ %.0117, %465 ], [ %.0117, %457 ], [ %.0117, %453 ], [ %.0117, %452 ], [ %.0117, %442 ], [ %.0117, %432 ], [ %.0117, %430 ], [ %.0117, %418 ], [ %.0117, %408 ], [ %.0117, %407 ], [ %.0117, %397 ], [ %.0117, %387 ], [ %.0117, %386 ], [ %.0117, %375 ], [ %.0117, %365 ], [ %.0117, %364 ], [ %.0117, %354 ], [ %.0117, %344 ], [ %.0117, %342 ], [ %.0117, %341 ], [ %.0117, %340 ], [ %.0117, %339 ], [ %.0117, %330 ], [ %.0117, %325 ], [ %.0117, %324 ], [ %.0117, %306 ], [ %.0117, %296 ], [ %.0117, %286 ], [ %.0117, %284 ], [ %.0117, %271 ], [ %.0117, %261 ], [ %.0117, %260 ], [ %.0117, %243 ], [ %.0117, %233 ], [ %.0117, %228 ], [ %.0117, %227 ], [ %.0117, %210 ], [ %.0117, %200 ], [ %.0117, %198 ], [ %.0117, %187 ], [ %.0117, %177 ], [ %.0117, %176 ], [ %.0117, %166 ], [ %.0117, %156 ], [ %.0117, %155 ], [ %.0117, %137 ], [ %.0117, %127 ], [ %.0117, %122 ], [ %.0117, %113 ], [ %.0117, %103 ], [ %.0117, %100 ], [ %.0117, %98 ], [ %.0117, %82 ], [ %.0117, %72 ], [ %.0117, %70 ], [ %.0117, %58 ], [ %.0117, %48 ], [ %.0117, %47 ], [ %.0117, %43 ], [ %.0117, %42 ], [ %.0117, %40 ], [ %.0117, %39 ], [ %.neg135, %38 ], [ %.0117, %30 ], [ %.0117, %26 ], [ 0, %25 ], [ %.0117, %21 ]
  %.0115.be = phi i32 [ %.0115, %20 ], [ %.0115, %546 ], [ %.0115, %545 ], [ %.0115, %544 ], [ %.0115, %543 ], [ %542, %541 ], [ %.0115, %540 ], [ %.0115, %531 ], [ %.0115, %530 ], [ %.0115, %522 ], [ %.0115, %514 ], [ %.0115, %513 ], [ %.0115, %512 ], [ %.0115, %503 ], [ %.0115, %502 ], [ %.0115, %501 ], [ %.0115, %499 ], [ %.0115, %497 ], [ %.0115, %495 ], [ %.0115, %494 ], [ %.0115, %484 ], [ %.0115, %474 ], [ %.0115, %467 ], [ %.0115, %465 ], [ %.0115, %457 ], [ %.0115, %453 ], [ %.0115, %452 ], [ %.0115, %442 ], [ %.0115, %432 ], [ %.0115, %430 ], [ %.0115, %418 ], [ %.0115, %408 ], [ %.0115, %407 ], [ %.0115, %397 ], [ %.0115, %387 ], [ %.0115, %386 ], [ %376, %375 ], [ %.0115, %365 ], [ %.0115, %364 ], [ %.0115, %354 ], [ %.0115, %344 ], [ %.0115, %342 ], [ %.0115, %341 ], [ %.0115, %340 ], [ %.0115, %339 ], [ %.0115, %330 ], [ %.0115, %325 ], [ %.0115, %324 ], [ %.0115, %306 ], [ %.0115, %296 ], [ %.0115, %286 ], [ %.0115, %284 ], [ %.0115, %271 ], [ %.0115, %261 ], [ %.0115, %260 ], [ %.0115, %243 ], [ %.0115, %233 ], [ %.0115, %228 ], [ %.0115, %227 ], [ %.0115, %210 ], [ %.0115, %200 ], [ %.0115, %198 ], [ %.0115, %187 ], [ %.0115, %177 ], [ %.0115, %176 ], [ %.0115, %166 ], [ %.0115, %156 ], [ %.0115, %155 ], [ %.0115, %137 ], [ %.0115, %127 ], [ %.0115, %122 ], [ %.0115, %113 ], [ %.0115, %103 ], [ %.0115, %100 ], [ %.0115, %98 ], [ %.0115, %82 ], [ %.0115, %72 ], [ %.0115, %70 ], [ %.0115, %58 ], [ %.0115, %48 ], [ %.0115, %47 ], [ %.0115, %43 ], [ 0, %42 ], [ %.0115, %40 ], [ %.0115, %39 ], [ %.0115, %38 ], [ %.0115, %30 ], [ %.0115, %26 ], [ %.0115, %25 ], [ %.0115, %21 ]
  %.0113.be = phi i32 [ %.0113, %20 ], [ %.0113, %546 ], [ %.0113, %545 ], [ %.0113, %544 ], [ %.0113, %543 ], [ %.0113, %541 ], [ %.0113, %540 ], [ %.0113, %531 ], [ %.0113, %530 ], [ %.0113, %522 ], [ %.0113, %514 ], [ %.0113, %513 ], [ %.0113, %512 ], [ %.0113, %503 ], [ %.0113, %502 ], [ %.0113, %501 ], [ %.0113, %499 ], [ %.0113, %497 ], [ %.0113, %495 ], [ %.0113, %494 ], [ %.0113, %484 ], [ %.0113, %474 ], [ %.0113, %467 ], [ %.0113, %465 ], [ %.0113, %457 ], [ %.0113, %453 ], [ %.0113, %452 ], [ %.0113, %442 ], [ %.0113, %432 ], [ %.0113, %430 ], [ %.0113, %418 ], [ %.0113, %408 ], [ %.0113, %407 ], [ %.0113, %397 ], [ %.0113, %387 ], [ %.0113, %386 ], [ %.0113, %375 ], [ %.0113, %365 ], [ %.0113, %364 ], [ %.0113, %354 ], [ %.0113, %344 ], [ %343, %342 ], [ %.0113, %341 ], [ %.0113, %340 ], [ %.0113, %339 ], [ %.0113, %330 ], [ %.0113, %325 ], [ %.0113, %324 ], [ %.0113, %306 ], [ %.0113, %296 ], [ %.0113, %286 ], [ %.0113, %284 ], [ %.0113, %271 ], [ %.0113, %261 ], [ %.0113, %260 ], [ %.0113, %243 ], [ %.0113, %233 ], [ %.0113, %228 ], [ %.0113, %227 ], [ %.0113, %210 ], [ %.0113, %200 ], [ %.0113, %198 ], [ %.0113, %187 ], [ %.0113, %177 ], [ %.0113, %176 ], [ %.0113, %166 ], [ %.0113, %156 ], [ %.0113, %155 ], [ %.0113, %137 ], [ %.0113, %127 ], [ %.0113, %122 ], [ %.0113, %113 ], [ %.0113, %103 ], [ %.0113, %100 ], [ %.0113, %98 ], [ %.0113, %82 ], [ %.0113, %72 ], [ %.0113, %70 ], [ %.0113, %58 ], [ %.0113, %48 ], [ 0, %47 ], [ %.0113, %43 ], [ %.0113, %42 ], [ %.0113, %40 ], [ %.0113, %39 ], [ %.0113, %38 ], [ %.0113, %30 ], [ %.0113, %26 ], [ %.0113, %25 ], [ %.0113, %21 ]
  %.0111.be = phi i32 [ %.0111, %20 ], [ %.0111, %546 ], [ %.0111, %545 ], [ %.0111, %544 ], [ 0, %543 ], [ %.0111, %541 ], [ %.0111, %540 ], [ %.0111, %531 ], [ %.0111, %530 ], [ %.0111, %522 ], [ %.0111, %514 ], [ %.0111, %513 ], [ %.0111, %512 ], [ %.0111, %503 ], [ %.0111, %502 ], [ %.0111, %501 ], [ %.neg, %499 ], [ %.0111, %497 ], [ %.0111, %495 ], [ %.0111, %494 ], [ %.0111, %484 ], [ %.0111, %474 ], [ %.0111, %467 ], [ %.0111, %465 ], [ %.0111, %457 ], [ %.0111, %453 ], [ %.0111, %452 ], [ %.0111, %442 ], [ %.0111, %432 ], [ %.0111, %430 ], [ %.0111, %418 ], [ %.0111, %408 ], [ %.0111, %407 ], [ 0, %397 ], [ %.0111, %387 ], [ %.0111, %386 ], [ %.0111, %375 ], [ %.0111, %365 ], [ %.0111, %364 ], [ %.0111, %354 ], [ %.0111, %344 ], [ %.0111, %342 ], [ %.0111, %341 ], [ %.0111, %340 ], [ %.0111, %339 ], [ %.0111, %330 ], [ %.0111, %325 ], [ %.0111, %324 ], [ %.0111, %306 ], [ %.0111, %296 ], [ %.0111, %286 ], [ %.0111, %284 ], [ %.0111, %271 ], [ %.0111, %261 ], [ %.0111, %260 ], [ %.0111, %243 ], [ %.0111, %233 ], [ %.0111, %228 ], [ %.0111, %227 ], [ %.0111, %210 ], [ %.0111, %200 ], [ %.0111, %198 ], [ %.0111, %187 ], [ %.0111, %177 ], [ %.0111, %176 ], [ %.0111, %166 ], [ %.0111, %156 ], [ %.0111, %155 ], [ %.0111, %137 ], [ %.0111, %127 ], [ %.0111, %122 ], [ %.0111, %113 ], [ %.0111, %103 ], [ %.0111, %100 ], [ %.0111, %98 ], [ %.0111, %82 ], [ %.0111, %72 ], [ %.0111, %70 ], [ %.0111, %58 ], [ %.0111, %48 ], [ %.0111, %47 ], [ %.0111, %43 ], [ %.0111, %42 ], [ %.0111, %40 ], [ %.0111, %39 ], [ %.0111, %38 ], [ %.0111, %30 ], [ %.0111, %26 ], [ %.0111, %25 ], [ %.0111, %21 ]
  %.0109.be = phi i32 [ %.0109, %20 ], [ %.0109, %546 ], [ 0, %545 ], [ %.0109, %544 ], [ %.0109, %543 ], [ %.0109, %541 ], [ %.0109, %540 ], [ %.0109, %531 ], [ %.0109, %530 ], [ %.0109, %522 ], [ %.0109, %514 ], [ %.0109, %513 ], [ %.0109, %512 ], [ %.0109, %503 ], [ %.0109, %502 ], [ %.0109, %501 ], [ %.0109, %499 ], [ %.0109, %497 ], [ %496, %495 ], [ %.0109, %494 ], [ %.0109, %484 ], [ %.0109, %474 ], [ %.0109, %467 ], [ %.0109, %465 ], [ %.0109, %457 ], [ %.0109, %453 ], [ %.0109, %452 ], [ 0, %442 ], [ %.0109, %432 ], [ %.0109, %430 ], [ %.0109, %418 ], [ %.0109, %408 ], [ %.0109, %407 ], [ %.0109, %397 ], [ %.0109, %387 ], [ %.0109, %386 ], [ %.0109, %375 ], [ %.0109, %365 ], [ %.0109, %364 ], [ %.0109, %354 ], [ %.0109, %344 ], [ %.0109, %342 ], [ %.0109, %341 ], [ %.0109, %340 ], [ %.0109, %339 ], [ %.0109, %330 ], [ %.0109, %325 ], [ %.0109, %324 ], [ %.0109, %306 ], [ %.0109, %296 ], [ %.0109, %286 ], [ %.0109, %284 ], [ %.0109, %271 ], [ %.0109, %261 ], [ %.0109, %260 ], [ %.0109, %243 ], [ %.0109, %233 ], [ %.0109, %228 ], [ %.0109, %227 ], [ %.0109, %210 ], [ %.0109, %200 ], [ %.0109, %198 ], [ %.0109, %187 ], [ %.0109, %177 ], [ %.0109, %176 ], [ %.0109, %166 ], [ %.0109, %156 ], [ %.0109, %155 ], [ %.0109, %137 ], [ %.0109, %127 ], [ %.0109, %122 ], [ %.0109, %113 ], [ %.0109, %103 ], [ %.0109, %100 ], [ %.0109, %98 ], [ %.0109, %82 ], [ %.0109, %72 ], [ %.0109, %70 ], [ %.0109, %58 ], [ %.0109, %48 ], [ %.0109, %47 ], [ %.0109, %43 ], [ %.0109, %42 ], [ %.0109, %40 ], [ %.0109, %39 ], [ %.0109, %38 ], [ %.0109, %30 ], [ %.0109, %26 ], [ %.0109, %25 ], [ %.0109, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 1341670422, %546 ], [ -1986315320, %545 ], [ -506465948, %544 ], [ 251469360, %543 ], [ 737103551, %541 ], [ 1068221877, %540 ], [ 111247319, %531 ], [ 1664868880, %530 ], [ 106317484, %522 ], [ 67641322, %514 ], [ -1698892202, %513 ], [ 1796861144, %512 ], [ 552082962, %503 ], [ -695029848, %502 ], [ -815911415, %501 ], [ 1939772458, %499 ], [ 245606831, %497 ], [ -1823581947, %495 ], [ 868532080, %494 ], [ %493, %484 ], [ %483, %474 ], [ -619937916, %467 ], [ -619937916, %465 ], [ %464, %457 ], [ %456, %453 ], [ -1823581947, %452 ], [ %451, %442 ], [ %441, %432 ], [ %431, %430 ], [ %429, %418 ], [ %417, %408 ], [ 1939772458, %407 ], [ %406, %397 ], [ %396, %387 ], [ 930024815, %386 ], [ %385, %375 ], [ %374, %365 ], [ 590350150, %364 ], [ %363, %354 ], [ %353, %344 ], [ -289473263, %342 ], [ 1529347245, %341 ], [ -307271614, %340 ], [ -1461002511, %339 ], [ 591540909, %330 ], [ %329, %325 ], [ 1768310099, %324 ], [ %323, %306 ], [ %305, %296 ], [ %295, %286 ], [ %285, %284 ], [ %283, %271 ], [ %270, %261 ], [ -838293719, %260 ], [ %259, %243 ], [ %242, %233 ], [ %232, %228 ], [ -454436991, %227 ], [ %226, %210 ], [ %209, %200 ], [ %199, %198 ], [ %197, %187 ], [ %186, %177 ], [ -209023737, %176 ], [ %175, %166 ], [ %165, %156 ], [ 1558416589, %155 ], [ %154, %137 ], [ %136, %127 ], [ %126, %122 ], [ 1394371119, %113 ], [ %112, %103 ], [ %102, %100 ], [ %99, %98 ], [ %97, %82 ], [ %81, %72 ], [ %71, %70 ], [ %69, %58 ], [ %57, %48 ], [ -289473263, %47 ], [ %46, %43 ], [ 930024815, %42 ], [ 1268191265, %40 ], [ -347076734, %39 ], [ 446824456, %38 ], [ 1692324175, %30 ], [ %29, %26 ], [ 446824456, %25 ], [ %24, %21 ]
  br label %20

21:                                               ; preds = %20
  %22 = load i32, i32* %8, align 4
  %23 = icmp slt i32 %.0119, %22
  %24 = select i1 %23, i32 -37715844, i32 1000847587
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  %27 = load i32, i32* %9, align 4
  %28 = icmp slt i32 %.0117, %27
  %29 = select i1 %28, i32 2069375743, i32 -228172742
  br label %.backedge

30:                                               ; preds = %20
  %31 = sext i32 %.0119 to i64
  %.0..0..0.64 = load volatile i64, i64* %7, align 8
  %32 = mul nsw i64 %.0..0..0.64, %31
  %33 = sext i32 %.0117 to i64
  %.idx136 = add nsw i64 %32, %33
  %34 = getelementptr inbounds i8, i8* %17, i64 %.idx136
  %35 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %34)
  %.0..0..0.72 = load volatile i64, i64* %6, align 8
  %36 = mul nsw i64 %.0..0..0.72, %31
  %.idx137 = add nsw i64 %36, %33
  %37 = getelementptr inbounds i32, i32* %19, i64 %.idx137
  store i32 0, i32* %37, align 4
  br label %.backedge

38:                                               ; preds = %20
  %.neg135 = add i32 %.0117, 1
  br label %.backedge

39:                                               ; preds = %20
  br label %.backedge

40:                                               ; preds = %20
  %41 = add i32 %.0119, 1
  br label %.backedge

42:                                               ; preds = %20
  br label %.backedge

43:                                               ; preds = %20
  %44 = load i32, i32* %8, align 4
  %45 = icmp slt i32 %.0115, %44
  %46 = select i1 %45, i32 292527000, i32 -1256538546
  br label %.backedge

47:                                               ; preds = %20
  br label %.backedge

48:                                               ; preds = %20
  %49 = load i32, i32* @x.1, align 4
  %50 = load i32, i32* @y.2, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 -815911415, i32 -1100379539
  br label %.backedge

58:                                               ; preds = %20
  %59 = load i32, i32* %9, align 4
  %60 = icmp slt i32 %.0113, %59
  store i1 %60, i1* %5, align 1
  %61 = load i32, i32* @x.1, align 4
  %62 = load i32, i32* @y.2, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 -73867637, i32 -1100379539
  br label %.backedge

70:                                               ; preds = %20
  %.0..0..0.104 = load volatile i1, i1* %5, align 1
  %71 = select i1 %.0..0..0.104, i32 -2004425670, i32 1115852637
  br label %.backedge

72:                                               ; preds = %20
  %73 = load i32, i32* @x.1, align 4
  %74 = load i32, i32* @y.2, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -695029848, i32 754340377
  br label %.backedge

82:                                               ; preds = %20
  %83 = sext i32 %.0115 to i64
  %.0..0..0.65 = load volatile i64, i64* %7, align 8
  %84 = mul nsw i64 %.0..0..0.65, %83
  %85 = sext i32 %.0113 to i64
  %.idx134 = add nsw i64 %84, %85
  %86 = getelementptr inbounds i8, i8* %17, i64 %.idx134
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 35
  store i1 %88, i1* %4, align 1
  %89 = load i32, i32* @x.1, align 4
  %90 = load i32, i32* @y.2, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 113233688, i32 754340377
  br label %.backedge

98:                                               ; preds = %20
  %.0..0..0.105 = load volatile i1, i1* %4, align 1
  %99 = select i1 %.0..0..0.105, i32 -64871194, i32 -307271614
  br label %.backedge

100:                                              ; preds = %20
  %101 = icmp sgt i32 %.0115, 0
  %102 = select i1 %101, i32 -1543817822, i32 -209023737
  br label %.backedge

103:                                              ; preds = %20
  %104 = add i32 %.0115, -1
  %105 = sext i32 %104 to i64
  %.0..0..0.73 = load volatile i64, i64* %6, align 8
  %106 = mul nsw i64 %.0..0..0.73, %105
  %107 = sext i32 %.0113 to i64
  %.idx133 = add nsw i64 %106, %107
  %108 = getelementptr inbounds i32, i32* %19, i64 %.idx133
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = icmp sgt i32 %.0113, 0
  %112 = select i1 %111, i32 1996828818, i32 1394371119
  br label %.backedge

113:                                              ; preds = %20
  %114 = add i32 %.0115, -1
  %115 = sext i32 %114 to i64
  %.0..0..0.74 = load volatile i64, i64* %6, align 8
  %116 = mul nsw i64 %.0..0..0.74, %115
  %117 = add i32 %.0113, -1
  %118 = sext i32 %117 to i64
  %.idx132 = add nsw i64 %116, %118
  %119 = getelementptr inbounds i32, i32* %19, i64 %.idx132
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %119, align 4
  br label %.backedge

122:                                              ; preds = %20
  %123 = load i32, i32* %9, align 4
  %124 = add i32 %123, -1
  %125 = icmp slt i32 %.0113, %124
  %126 = select i1 %125, i32 1573187104, i32 1558416589
  br label %.backedge

127:                                              ; preds = %20
  %128 = load i32, i32* @x.1, align 4
  %129 = load i32, i32* @y.2, align 4
  %130 = add i32 %128, -1
  %131 = mul i32 %130, %128
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %134, %133
  %136 = select i1 %135, i32 552082962, i32 870209468
  br label %.backedge

137:                                              ; preds = %20
  %138 = add i32 %.0115, -1
  %139 = sext i32 %138 to i64
  %.0..0..0.75 = load volatile i64, i64* %6, align 8
  %140 = mul nsw i64 %.0..0..0.75, %139
  %141 = add i32 %.0113, 1
  %142 = sext i32 %141 to i64
  %.idx131 = add nsw i64 %140, %142
  %143 = getelementptr inbounds i32, i32* %19, i64 %.idx131
  %144 = load i32, i32* %143, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %143, align 4
  %146 = load i32, i32* @x.1, align 4
  %147 = load i32, i32* @y.2, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -72405110, i32 870209468
  br label %.backedge

155:                                              ; preds = %20
  br label %.backedge

156:                                              ; preds = %20
  %157 = load i32, i32* @x.1, align 4
  %158 = load i32, i32* @y.2, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 1796861144, i32 1100721950
  br label %.backedge

166:                                              ; preds = %20
  %167 = load i32, i32* @x.1, align 4
  %168 = load i32, i32* @y.2, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 -1896450434, i32 1100721950
  br label %.backedge

176:                                              ; preds = %20
  br label %.backedge

177:                                              ; preds = %20
  %178 = load i32, i32* @x.1, align 4
  %179 = load i32, i32* @y.2, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 -1698892202, i32 -2145496408
  br label %.backedge

187:                                              ; preds = %20
  %188 = icmp sgt i32 %.0113, 0
  store i1 %188, i1* %3, align 1
  %189 = load i32, i32* @x.1, align 4
  %190 = load i32, i32* @y.2, align 4
  %191 = add i32 %189, -1
  %192 = mul i32 %191, %189
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %195, %194
  %197 = select i1 %196, i32 1996056987, i32 -2145496408
  br label %.backedge

198:                                              ; preds = %20
  %.0..0..0.106 = load volatile i1, i1* %3, align 1
  %199 = select i1 %.0..0..0.106, i32 -1798450818, i32 -454436991
  br label %.backedge

200:                                              ; preds = %20
  %201 = load i32, i32* @x.1, align 4
  %202 = load i32, i32* @y.2, align 4
  %203 = add i32 %201, -1
  %204 = mul i32 %203, %201
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %207, %206
  %209 = select i1 %208, i32 67641322, i32 169218967
  br label %.backedge

210:                                              ; preds = %20
  %211 = sext i32 %.0115 to i64
  %.0..0..0.76 = load volatile i64, i64* %6, align 8
  %212 = mul nsw i64 %.0..0..0.76, %211
  %213 = add i32 %.0113, -1
  %214 = sext i32 %213 to i64
  %.idx130 = add nsw i64 %212, %214
  %215 = getelementptr inbounds i32, i32* %19, i64 %.idx130
  %216 = load i32, i32* %215, align 4
  %217 = add i32 %216, 1
  store i32 %217, i32* %215, align 4
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -1679718819, i32 169218967
  br label %.backedge

227:                                              ; preds = %20
  br label %.backedge

228:                                              ; preds = %20
  %229 = load i32, i32* %9, align 4
  %230 = add i32 %229, -1
  %231 = icmp slt i32 %.0113, %230
  %232 = select i1 %231, i32 1618671421, i32 -838293719
  br label %.backedge

233:                                              ; preds = %20
  %234 = load i32, i32* @x.1, align 4
  %235 = load i32, i32* @y.2, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 106317484, i32 -907688666
  br label %.backedge

243:                                              ; preds = %20
  %244 = sext i32 %.0115 to i64
  %.0..0..0.77 = load volatile i64, i64* %6, align 8
  %245 = mul nsw i64 %.0..0..0.77, %244
  %246 = add i32 %.0113, 1
  %247 = sext i32 %246 to i64
  %.idx129 = add nsw i64 %245, %247
  %248 = getelementptr inbounds i32, i32* %19, i64 %.idx129
  %249 = load i32, i32* %248, align 4
  %250 = add i32 %249, 1
  store i32 %250, i32* %248, align 4
  %251 = load i32, i32* @x.1, align 4
  %252 = load i32, i32* @y.2, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 596021233, i32 -907688666
  br label %.backedge

260:                                              ; preds = %20
  br label %.backedge

261:                                              ; preds = %20
  %262 = load i32, i32* @x.1, align 4
  %263 = load i32, i32* @y.2, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 1664868880, i32 -1225377584
  br label %.backedge

271:                                              ; preds = %20
  %272 = load i32, i32* %8, align 4
  %273 = add i32 %272, -1
  %274 = icmp slt i32 %.0115, %273
  store i1 %274, i1* %2, align 1
  %275 = load i32, i32* @x.1, align 4
  %276 = load i32, i32* @y.2, align 4
  %277 = add i32 %275, -1
  %278 = mul i32 %277, %275
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %281, %280
  %283 = select i1 %282, i32 897801290, i32 -1225377584
  br label %.backedge

284:                                              ; preds = %20
  %.0..0..0.107 = load volatile i1, i1* %2, align 1
  %285 = select i1 %.0..0..0.107, i32 -1460829033, i32 -1461002511
  br label %.backedge

286:                                              ; preds = %20
  %287 = add i32 %.0115, 1
  %288 = sext i32 %287 to i64
  %.0..0..0.78 = load volatile i64, i64* %6, align 8
  %289 = mul nsw i64 %.0..0..0.78, %288
  %290 = sext i32 %.0113 to i64
  %.idx128 = add nsw i64 %289, %290
  %291 = getelementptr inbounds i32, i32* %19, i64 %.idx128
  %292 = load i32, i32* %291, align 4
  %293 = add i32 %292, 1
  store i32 %293, i32* %291, align 4
  %294 = icmp sgt i32 %.0113, 0
  %295 = select i1 %294, i32 -372323507, i32 1768310099
  br label %.backedge

296:                                              ; preds = %20
  %297 = load i32, i32* @x.1, align 4
  %298 = load i32, i32* @y.2, align 4
  %299 = add i32 %297, -1
  %300 = mul i32 %299, %297
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %303, %302
  %305 = select i1 %304, i32 111247319, i32 -2020555012
  br label %.backedge

306:                                              ; preds = %20
  %307 = add i32 %.0115, 1
  %308 = sext i32 %307 to i64
  %.0..0..0.79 = load volatile i64, i64* %6, align 8
  %309 = mul nsw i64 %.0..0..0.79, %308
  %310 = add i32 %.0113, -1
  %311 = sext i32 %310 to i64
  %.idx127 = add nsw i64 %309, %311
  %312 = getelementptr inbounds i32, i32* %19, i64 %.idx127
  %313 = load i32, i32* %312, align 4
  %314 = add i32 %313, 1
  store i32 %314, i32* %312, align 4
  %315 = load i32, i32* @x.1, align 4
  %316 = load i32, i32* @y.2, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 1985009679, i32 -2020555012
  br label %.backedge

324:                                              ; preds = %20
  br label %.backedge

325:                                              ; preds = %20
  %326 = load i32, i32* %9, align 4
  %327 = add i32 %326, -1
  %328 = icmp slt i32 %.0113, %327
  %329 = select i1 %328, i32 1325307975, i32 591540909
  br label %.backedge

330:                                              ; preds = %20
  %331 = add i32 %.0115, 1
  %332 = sext i32 %331 to i64
  %.0..0..0.80 = load volatile i64, i64* %6, align 8
  %333 = mul nsw i64 %.0..0..0.80, %332
  %334 = add i32 %.0113, 1
  %335 = sext i32 %334 to i64
  %.idx126 = add nsw i64 %333, %335
  %336 = getelementptr inbounds i32, i32* %19, i64 %.idx126
  %337 = load i32, i32* %336, align 4
  %338 = add i32 %337, 1
  store i32 %338, i32* %336, align 4
  br label %.backedge

339:                                              ; preds = %20
  br label %.backedge

340:                                              ; preds = %20
  br label %.backedge

341:                                              ; preds = %20
  br label %.backedge

342:                                              ; preds = %20
  %343 = add i32 %.0113, 1
  br label %.backedge

344:                                              ; preds = %20
  %345 = load i32, i32* @x.1, align 4
  %346 = load i32, i32* @y.2, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 1068221877, i32 -1063071641
  br label %.backedge

354:                                              ; preds = %20
  %355 = load i32, i32* @x.1, align 4
  %356 = load i32, i32* @y.2, align 4
  %357 = add i32 %355, -1
  %358 = mul i32 %357, %355
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %361, %360
  %363 = select i1 %362, i32 -637985074, i32 -1063071641
  br label %.backedge

364:                                              ; preds = %20
  br label %.backedge

365:                                              ; preds = %20
  %366 = load i32, i32* @x.1, align 4
  %367 = load i32, i32* @y.2, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 737103551, i32 321270151
  br label %.backedge

375:                                              ; preds = %20
  %376 = add i32 %.0115, 1
  %377 = load i32, i32* @x.1, align 4
  %378 = load i32, i32* @y.2, align 4
  %379 = add i32 %377, -1
  %380 = mul i32 %379, %377
  %381 = and i32 %380, 1
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %383, %382
  %385 = select i1 %384, i32 -1509254670, i32 321270151
  br label %.backedge

386:                                              ; preds = %20
  br label %.backedge

387:                                              ; preds = %20
  %388 = load i32, i32* @x.1, align 4
  %389 = load i32, i32* @y.2, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 251469360, i32 527054638
  br label %.backedge

397:                                              ; preds = %20
  %398 = load i32, i32* @x.1, align 4
  %399 = load i32, i32* @y.2, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 -458361496, i32 527054638
  br label %.backedge

407:                                              ; preds = %20
  br label %.backedge

408:                                              ; preds = %20
  %409 = load i32, i32* @x.1, align 4
  %410 = load i32, i32* @y.2, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 -506465948, i32 -704376332
  br label %.backedge

418:                                              ; preds = %20
  %419 = load i32, i32* %8, align 4
  %420 = icmp slt i32 %.0111, %419
  store i1 %420, i1* %1, align 1
  %421 = load i32, i32* @x.1, align 4
  %422 = load i32, i32* @y.2, align 4
  %423 = add i32 %421, -1
  %424 = mul i32 %423, %421
  %425 = and i32 %424, 1
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %427, %426
  %429 = select i1 %428, i32 1977779134, i32 -704376332
  br label %.backedge

430:                                              ; preds = %20
  %.0..0..0.108 = load volatile i1, i1* %1, align 1
  %431 = select i1 %.0..0..0.108, i32 990034932, i32 -1497638926
  br label %.backedge

432:                                              ; preds = %20
  %433 = load i32, i32* @x.1, align 4
  %434 = load i32, i32* @y.2, align 4
  %435 = add i32 %433, -1
  %436 = mul i32 %435, %433
  %437 = and i32 %436, 1
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %439, %438
  %441 = select i1 %440, i32 -1986315320, i32 1781833141
  br label %.backedge

442:                                              ; preds = %20
  %443 = load i32, i32* @x.1, align 4
  %444 = load i32, i32* @y.2, align 4
  %445 = add i32 %443, -1
  %446 = mul i32 %445, %443
  %447 = and i32 %446, 1
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %449, %448
  %451 = select i1 %450, i32 -309767072, i32 1781833141
  br label %.backedge

452:                                              ; preds = %20
  br label %.backedge

453:                                              ; preds = %20
  %454 = load i32, i32* %9, align 4
  %455 = icmp slt i32 %.0109, %454
  %456 = select i1 %455, i32 232532915, i32 1227442387
  br label %.backedge

457:                                              ; preds = %20
  %458 = sext i32 %.0111 to i64
  %.0..0..0.66 = load volatile i64, i64* %7, align 8
  %459 = mul nsw i64 %.0..0..0.66, %458
  %460 = sext i32 %.0109 to i64
  %.idx125 = add nsw i64 %459, %460
  %461 = getelementptr inbounds i8, i8* %17, i64 %.idx125
  %462 = load i8, i8* %461, align 1
  %463 = icmp eq i8 %462, 35
  %464 = select i1 %463, i32 -1934561908, i32 -1938044045
  br label %.backedge

465:                                              ; preds = %20
  %466 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 35)
  br label %.backedge

467:                                              ; preds = %20
  %468 = sext i32 %.0111 to i64
  %.0..0..0.81 = load volatile i64, i64* %6, align 8
  %469 = mul nsw i64 %.0..0..0.81, %468
  %470 = sext i32 %.0109 to i64
  %.idx124 = add nsw i64 %469, %470
  %471 = getelementptr inbounds i32, i32* %19, i64 %.idx124
  %472 = load i32, i32* %471, align 4
  %473 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %472)
  br label %.backedge

474:                                              ; preds = %20
  %475 = load i32, i32* @x.1, align 4
  %476 = load i32, i32* @y.2, align 4
  %477 = add i32 %475, -1
  %478 = mul i32 %477, %475
  %479 = and i32 %478, 1
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %481, %480
  %483 = select i1 %482, i32 1341670422, i32 1443410357
  br label %.backedge

484:                                              ; preds = %20
  %485 = load i32, i32* @x.1, align 4
  %486 = load i32, i32* @y.2, align 4
  %487 = add i32 %485, -1
  %488 = mul i32 %487, %485
  %489 = and i32 %488, 1
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %491, %490
  %493 = select i1 %492, i32 562423027, i32 1443410357
  br label %.backedge

494:                                              ; preds = %20
  br label %.backedge

495:                                              ; preds = %20
  %496 = add i32 %.0109, 1
  br label %.backedge

497:                                              ; preds = %20
  %498 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

499:                                              ; preds = %20
  %.neg = add i32 %.0111, 1
  br label %.backedge

500:                                              ; preds = %20
  ret i32 0

501:                                              ; preds = %20
  br label %.backedge

502:                                              ; preds = %20
  %.0..0..0.67 = load volatile i64, i64* %7, align 8
  %.0..0..0.68 = load volatile i64, i64* %7, align 8
  %.0..0..0.69 = load volatile i64, i64* %7, align 8
  %.0..0..0.70 = load volatile i64, i64* %7, align 8
  br label %.backedge

503:                                              ; preds = %20
  %504 = add i32 %.0115, -1
  %505 = sext i32 %504 to i64
  %.0..0..0.82 = load volatile i64, i64* %6, align 8
  %.0..0..0.83 = load volatile i64, i64* %6, align 8
  %.0..0..0.84 = load volatile i64, i64* %6, align 8
  %506 = mul nsw i64 %.0..0..0.84, %505
  %507 = add i32 %.0113, 1
  %508 = sext i32 %507 to i64
  %.idx123 = add nsw i64 %506, %508
  %509 = getelementptr inbounds i32, i32* %19, i64 %.idx123
  %510 = load i32, i32* %509, align 4
  %511 = add i32 %510, 1
  store i32 %511, i32* %509, align 4
  br label %.backedge

512:                                              ; preds = %20
  br label %.backedge

513:                                              ; preds = %20
  br label %.backedge

514:                                              ; preds = %20
  %515 = sext i32 %.0115 to i64
  %.0..0..0.85 = load volatile i64, i64* %6, align 8
  %.0..0..0.86 = load volatile i64, i64* %6, align 8
  %.0..0..0.87 = load volatile i64, i64* %6, align 8
  %.0..0..0.88 = load volatile i64, i64* %6, align 8
  %.0..0..0.89 = load volatile i64, i64* %6, align 8
  %516 = mul nsw i64 %.0..0..0.89, %515
  %517 = add i32 %.0113, -1
  %518 = sext i32 %517 to i64
  %.idx122 = add nsw i64 %516, %518
  %519 = getelementptr inbounds i32, i32* %19, i64 %.idx122
  %520 = load i32, i32* %519, align 4
  %521 = add i32 %520, 1
  store i32 %521, i32* %519, align 4
  br label %.backedge

522:                                              ; preds = %20
  %523 = sext i32 %.0115 to i64
  %.0..0..0.90 = load volatile i64, i64* %6, align 8
  %.0..0..0.91 = load volatile i64, i64* %6, align 8
  %.0..0..0.92 = load volatile i64, i64* %6, align 8
  %.0..0..0.93 = load volatile i64, i64* %6, align 8
  %524 = mul nsw i64 %.0..0..0.93, %523
  %525 = add i32 %.0113, 1
  %526 = sext i32 %525 to i64
  %.idx121 = add nsw i64 %524, %526
  %527 = getelementptr inbounds i32, i32* %19, i64 %.idx121
  %528 = load i32, i32* %527, align 4
  %529 = add i32 %528, 1
  store i32 %529, i32* %527, align 4
  br label %.backedge

530:                                              ; preds = %20
  br label %.backedge

531:                                              ; preds = %20
  %532 = add i32 %.0115, 1
  %533 = sext i32 %532 to i64
  %.0..0..0.94 = load volatile i64, i64* %6, align 8
  %.0..0..0.95 = load volatile i64, i64* %6, align 8
  %.0..0..0.96 = load volatile i64, i64* %6, align 8
  %.0..0..0.97 = load volatile i64, i64* %6, align 8
  %.0..0..0.98 = load volatile i64, i64* %6, align 8
  %.0..0..0.99 = load volatile i64, i64* %6, align 8
  %.0..0..0.100 = load volatile i64, i64* %6, align 8
  %.0..0..0.101 = load volatile i64, i64* %6, align 8
  %.0..0..0.102 = load volatile i64, i64* %6, align 8
  %.0..0..0.103 = load volatile i64, i64* %6, align 8
  %534 = mul nsw i64 %.0..0..0.103, %533
  %535 = add i32 %.0113, -1
  %536 = sext i32 %535 to i64
  %.idx = add nsw i64 %534, %536
  %537 = getelementptr inbounds i32, i32* %19, i64 %.idx
  %538 = load i32, i32* %537, align 4
  %539 = add i32 %538, 1
  store i32 %539, i32* %537, align 4
  br label %.backedge

540:                                              ; preds = %20
  br label %.backedge

541:                                              ; preds = %20
  %542 = add i32 %.0115, 1
  br label %.backedge

543:                                              ; preds = %20
  br label %.backedge

544:                                              ; preds = %20
  br label %.backedge

545:                                              ; preds = %20
  br label %.backedge

546:                                              ; preds = %20
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s806882803.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
