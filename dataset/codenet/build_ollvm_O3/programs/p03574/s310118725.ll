; ModuleID = 'build_ollvm/programs/p03574/s310118725.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s310118725.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s310118725.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %9, i32* nonnull dereferenceable(4) %8)
  %11 = load i32, i32* %7, align 4
  %12 = zext i32 %11 to i64
  %13 = load i32, i32* %8, align 4
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %6, align 8
  %15 = call i8* @llvm.stacksave()
  %.0..0..0.51 = load volatile i64, i64* %6, align 8
  %16 = mul nuw i64 %.0..0..0.51, %12
  %17 = alloca i8, i64 %16, align 16
  br label %18

18:                                               ; preds = %.backedge, %0
  %.083 = phi i8 [ 48, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ 0, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.0 = phi i32 [ -1227950361, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1227950361, label %19
    i32 -499083807, label %29
    i32 1479957319, label %41
    i32 1160721617, label %43
    i32 -55974310, label %44
    i32 940977195, label %54
    i32 -1337986507, label %66
    i32 -1900408092, label %68
    i32 1651053813, label %74
    i32 -1828338342, label %76
    i32 -1695326726, label %77
    i32 1290079564, label %87
    i32 -138072273, label %98
    i32 1165423159, label %99
    i32 70780883, label %109
    i32 2054020944, label %119
    i32 -2130249437, label %120
    i32 -1640303035, label %124
    i32 1327755407, label %134
    i32 -2087209131, label %144
    i32 -2061066407, label %145
    i32 94360206, label %149
    i32 530933095, label %157
    i32 730441938, label %167
    i32 -242045081, label %177
    i32 -1323312606, label %178
    i32 725171772, label %181
    i32 -1871644217, label %182
    i32 -984793597, label %185
    i32 -222738033, label %189
    i32 -1324983175, label %194
    i32 -908650032, label %198
    i32 600689358, label %203
    i32 1491923257, label %213
    i32 1447934429, label %231
    i32 55112698, label %233
    i32 83868332, label %243
    i32 1098735607, label %254
    i32 1350948052, label %255
    i32 1985469068, label %256
    i32 1252280446, label %257
    i32 1537143618, label %258
    i32 523844913, label %259
    i32 -1085228703, label %261
    i32 98715948, label %266
    i32 -1380274640, label %267
    i32 -2137183421, label %269
    i32 -1209876518, label %279
    i32 571809003, label %289
    i32 478267428, label %290
    i32 -2103104045, label %292
    i32 -1575936646, label %293
    i32 308345572, label %303
    i32 1537925928, label %315
    i32 -171921894, label %317
    i32 -953865818, label %327
    i32 -710488516, label %337
    i32 758799418, label %338
    i32 907029655, label %342
    i32 -1433158797, label %349
    i32 -109370864, label %350
    i32 494883832, label %352
    i32 -1671310229, label %353
    i32 -1905824910, label %363
    i32 -1776896331, label %373
    i32 1710087127, label %374
    i32 784715365, label %375
    i32 29748961, label %376
    i32 -327807483, label %378
    i32 161655706, label %379
    i32 1809853215, label %380
    i32 545545309, label %381
    i32 1634329326, label %382
    i32 -1976566786, label %384
    i32 947145769, label %385
    i32 1401660744, label %386
    i32 -1805154706, label %387
  ]

.backedge:                                        ; preds = %18, %387, %386, %385, %384, %382, %381, %380, %379, %378, %376, %375, %374, %363, %353, %352, %350, %349, %342, %338, %337, %327, %317, %315, %303, %293, %292, %290, %289, %279, %269, %267, %266, %261, %259, %258, %257, %256, %255, %254, %243, %233, %231, %213, %203, %198, %194, %189, %185, %182, %181, %178, %177, %167, %157, %149, %145, %144, %134, %124, %120, %119, %109, %99, %98, %87, %77, %76, %74, %68, %66, %54, %44, %43, %41, %29, %19
  %.083.be = phi i8 [ %.083, %18 ], [ %.083, %387 ], [ %.083, %386 ], [ %.083, %385 ], [ %.083, %384 ], [ %383, %382 ], [ %.083, %381 ], [ %.083, %380 ], [ %.083, %379 ], [ %.083, %378 ], [ %.083, %376 ], [ %.083, %375 ], [ %.083, %374 ], [ %.083, %363 ], [ %.083, %353 ], [ %.083, %352 ], [ %.083, %350 ], [ %.083, %349 ], [ %.083, %342 ], [ %.083, %338 ], [ %.083, %337 ], [ %.083, %327 ], [ %.083, %317 ], [ %.083, %315 ], [ %.083, %303 ], [ %.083, %293 ], [ %.083, %292 ], [ %.083, %290 ], [ %.083, %289 ], [ %.083, %279 ], [ %.083, %269 ], [ %.083, %267 ], [ %.083, %266 ], [ 48, %261 ], [ %.083, %259 ], [ %.083, %258 ], [ %.083, %257 ], [ %.083, %256 ], [ %.083, %255 ], [ %.083, %254 ], [ %244, %243 ], [ %.083, %233 ], [ %.083, %231 ], [ %.083, %213 ], [ %.083, %203 ], [ %.083, %198 ], [ %.083, %194 ], [ %.083, %189 ], [ %.083, %185 ], [ %.083, %182 ], [ %.083, %181 ], [ %.083, %178 ], [ %.083, %177 ], [ %.083, %167 ], [ %.083, %157 ], [ %.083, %149 ], [ %.083, %145 ], [ %.083, %144 ], [ %.083, %134 ], [ %.083, %124 ], [ %.083, %120 ], [ %.083, %119 ], [ %.083, %109 ], [ %.083, %99 ], [ %.083, %98 ], [ %.083, %87 ], [ %.083, %77 ], [ %.083, %76 ], [ %.083, %74 ], [ %.083, %68 ], [ %.083, %66 ], [ %.083, %54 ], [ %.083, %44 ], [ %.083, %43 ], [ %.083, %41 ], [ %.083, %29 ], [ %.083, %19 ]
  %.081.be = phi i32 [ %.081, %18 ], [ %.081, %387 ], [ %.081, %386 ], [ %.081, %385 ], [ %.081, %384 ], [ %.081, %382 ], [ %.081, %381 ], [ %.081, %380 ], [ %.081, %379 ], [ %.081, %378 ], [ %377, %376 ], [ %.081, %375 ], [ %.081, %374 ], [ %.081, %363 ], [ %.081, %353 ], [ %.081, %352 ], [ %.081, %350 ], [ %.081, %349 ], [ %.081, %342 ], [ %.081, %338 ], [ %.081, %337 ], [ %.081, %327 ], [ %.081, %317 ], [ %.081, %315 ], [ %.081, %303 ], [ %.081, %293 ], [ %.081, %292 ], [ %.081, %290 ], [ %.081, %289 ], [ %.081, %279 ], [ %.081, %269 ], [ %.081, %267 ], [ %.081, %266 ], [ %.081, %261 ], [ %.081, %259 ], [ %.081, %258 ], [ %.081, %257 ], [ %.081, %256 ], [ %.081, %255 ], [ %.081, %254 ], [ %.081, %243 ], [ %.081, %233 ], [ %.081, %231 ], [ %.081, %213 ], [ %.081, %203 ], [ %.081, %198 ], [ %.081, %194 ], [ %.081, %189 ], [ %.081, %185 ], [ %.081, %182 ], [ %.081, %181 ], [ %.081, %178 ], [ %.081, %177 ], [ %.081, %167 ], [ %.081, %157 ], [ %.081, %149 ], [ %.081, %145 ], [ %.081, %144 ], [ %.081, %134 ], [ %.081, %124 ], [ %.081, %120 ], [ %.081, %119 ], [ %.081, %109 ], [ %.081, %99 ], [ %.081, %98 ], [ %88, %87 ], [ %.081, %77 ], [ %.081, %76 ], [ %.081, %74 ], [ %.081, %68 ], [ %.081, %66 ], [ %.081, %54 ], [ %.081, %44 ], [ %.081, %43 ], [ %.081, %41 ], [ %.081, %29 ], [ %.081, %19 ]
  %.079.be = phi i32 [ %.079, %18 ], [ %.079, %387 ], [ %.079, %386 ], [ %.079, %385 ], [ %.079, %384 ], [ %.079, %382 ], [ %.079, %381 ], [ %.079, %380 ], [ %.079, %379 ], [ %.079, %378 ], [ %.079, %376 ], [ %.079, %375 ], [ %.079, %374 ], [ %.079, %363 ], [ %.079, %353 ], [ %.079, %352 ], [ %.079, %350 ], [ %.079, %349 ], [ %.079, %342 ], [ %.079, %338 ], [ %.079, %337 ], [ %.079, %327 ], [ %.079, %317 ], [ %.079, %315 ], [ %.079, %303 ], [ %.079, %293 ], [ %.079, %292 ], [ %.079, %290 ], [ %.079, %289 ], [ %.079, %279 ], [ %.079, %269 ], [ %.079, %267 ], [ %.079, %266 ], [ %.079, %261 ], [ %.079, %259 ], [ %.079, %258 ], [ %.079, %257 ], [ %.079, %256 ], [ %.079, %255 ], [ %.079, %254 ], [ %.079, %243 ], [ %.079, %233 ], [ %.079, %231 ], [ %.079, %213 ], [ %.079, %203 ], [ %.079, %198 ], [ %.079, %194 ], [ %.079, %189 ], [ %.079, %185 ], [ %.079, %182 ], [ %.079, %181 ], [ %.079, %178 ], [ %.079, %177 ], [ %.079, %167 ], [ %.079, %157 ], [ %.079, %149 ], [ %.079, %145 ], [ %.079, %144 ], [ %.079, %134 ], [ %.079, %124 ], [ %.079, %120 ], [ %.079, %119 ], [ %.079, %109 ], [ %.079, %99 ], [ %.079, %98 ], [ %.079, %87 ], [ %.079, %77 ], [ %.079, %76 ], [ %75, %74 ], [ %.079, %68 ], [ %.079, %66 ], [ %.079, %54 ], [ %.079, %44 ], [ 0, %43 ], [ %.079, %41 ], [ %.079, %29 ], [ %.079, %19 ]
  %.077.be = phi i32 [ %.077, %18 ], [ %.077, %387 ], [ %.077, %386 ], [ %.077, %385 ], [ %.077, %384 ], [ %.077, %382 ], [ %.077, %381 ], [ %.077, %380 ], [ %.077, %379 ], [ 0, %378 ], [ %.077, %376 ], [ %.077, %375 ], [ %.077, %374 ], [ %.077, %363 ], [ %.077, %353 ], [ %.077, %352 ], [ %.077, %350 ], [ %.077, %349 ], [ %.077, %342 ], [ %.077, %338 ], [ %.077, %337 ], [ %.077, %327 ], [ %.077, %317 ], [ %.077, %315 ], [ %.077, %303 ], [ %.077, %293 ], [ %.077, %292 ], [ %291, %290 ], [ %.077, %289 ], [ %.077, %279 ], [ %.077, %269 ], [ %.077, %267 ], [ %.077, %266 ], [ %.077, %261 ], [ %.077, %259 ], [ %.077, %258 ], [ %.077, %257 ], [ %.077, %256 ], [ %.077, %255 ], [ %.077, %254 ], [ %.077, %243 ], [ %.077, %233 ], [ %.077, %231 ], [ %.077, %213 ], [ %.077, %203 ], [ %.077, %198 ], [ %.077, %194 ], [ %.077, %189 ], [ %.077, %185 ], [ %.077, %182 ], [ %.077, %181 ], [ %.077, %178 ], [ %.077, %177 ], [ %.077, %167 ], [ %.077, %157 ], [ %.077, %149 ], [ %.077, %145 ], [ %.077, %144 ], [ %.077, %134 ], [ %.077, %124 ], [ %.077, %120 ], [ %.077, %119 ], [ 0, %109 ], [ %.077, %99 ], [ %.077, %98 ], [ %.077, %87 ], [ %.077, %77 ], [ %.077, %76 ], [ %.077, %74 ], [ %.077, %68 ], [ %.077, %66 ], [ %.077, %54 ], [ %.077, %44 ], [ %.077, %43 ], [ %.077, %41 ], [ %.077, %29 ], [ %.077, %19 ]
  %.075.be = phi i32 [ %.075, %18 ], [ %.075, %387 ], [ %.075, %386 ], [ %.075, %385 ], [ %.075, %384 ], [ %.075, %382 ], [ %.075, %381 ], [ %.075, %380 ], [ 0, %379 ], [ %.075, %378 ], [ %.075, %376 ], [ %.075, %375 ], [ %.075, %374 ], [ %.075, %363 ], [ %.075, %353 ], [ %.075, %352 ], [ %.075, %350 ], [ %.075, %349 ], [ %.075, %342 ], [ %.075, %338 ], [ %.075, %337 ], [ %.075, %327 ], [ %.075, %317 ], [ %.075, %315 ], [ %.075, %303 ], [ %.075, %293 ], [ %.075, %292 ], [ %.075, %290 ], [ %.075, %289 ], [ %.075, %279 ], [ %.075, %269 ], [ %268, %267 ], [ %.075, %266 ], [ %.075, %261 ], [ %.075, %259 ], [ %.075, %258 ], [ %.075, %257 ], [ %.075, %256 ], [ %.075, %255 ], [ %.075, %254 ], [ %.075, %243 ], [ %.075, %233 ], [ %.075, %231 ], [ %.075, %213 ], [ %.075, %203 ], [ %.075, %198 ], [ %.075, %194 ], [ %.075, %189 ], [ %.075, %185 ], [ %.075, %182 ], [ %.075, %181 ], [ %.075, %178 ], [ %.075, %177 ], [ %.075, %167 ], [ %.075, %157 ], [ %.075, %149 ], [ %.075, %145 ], [ %.075, %144 ], [ 0, %134 ], [ %.075, %124 ], [ %.075, %120 ], [ %.075, %119 ], [ %.075, %109 ], [ %.075, %99 ], [ %.075, %98 ], [ %.075, %87 ], [ %.075, %77 ], [ %.075, %76 ], [ %.075, %74 ], [ %.075, %68 ], [ %.075, %66 ], [ %.075, %54 ], [ %.075, %44 ], [ %.075, %43 ], [ %.075, %41 ], [ %.075, %29 ], [ %.075, %19 ]
  %.073.be = phi i32 [ %.073, %18 ], [ %.073, %387 ], [ %.073, %386 ], [ %.073, %385 ], [ %.073, %384 ], [ %.073, %382 ], [ %.073, %381 ], [ -1, %380 ], [ %.073, %379 ], [ %.073, %378 ], [ %.073, %376 ], [ %.073, %375 ], [ %.073, %374 ], [ %.073, %363 ], [ %.073, %353 ], [ %.073, %352 ], [ %.073, %350 ], [ %.073, %349 ], [ %.073, %342 ], [ %.073, %338 ], [ %.073, %337 ], [ %.073, %327 ], [ %.073, %317 ], [ %.073, %315 ], [ %.073, %303 ], [ %.073, %293 ], [ %.073, %292 ], [ %.073, %290 ], [ %.073, %289 ], [ %.073, %279 ], [ %.073, %269 ], [ %.073, %267 ], [ %.073, %266 ], [ %.073, %261 ], [ %260, %259 ], [ %.073, %258 ], [ %.073, %257 ], [ %.073, %256 ], [ %.073, %255 ], [ %.073, %254 ], [ %.073, %243 ], [ %.073, %233 ], [ %.073, %231 ], [ %.073, %213 ], [ %.073, %203 ], [ %.073, %198 ], [ %.073, %194 ], [ %.073, %189 ], [ %.073, %185 ], [ %.073, %182 ], [ %.073, %181 ], [ %.073, %178 ], [ %.073, %177 ], [ -1, %167 ], [ %.073, %157 ], [ %.073, %149 ], [ %.073, %145 ], [ %.073, %144 ], [ %.073, %134 ], [ %.073, %124 ], [ %.073, %120 ], [ %.073, %119 ], [ %.073, %109 ], [ %.073, %99 ], [ %.073, %98 ], [ %.073, %87 ], [ %.073, %77 ], [ %.073, %76 ], [ %.073, %74 ], [ %.073, %68 ], [ %.073, %66 ], [ %.073, %54 ], [ %.073, %44 ], [ %.073, %43 ], [ %.073, %41 ], [ %.073, %29 ], [ %.073, %19 ]
  %.071.be = phi i32 [ %.071, %18 ], [ %.071, %387 ], [ %.071, %386 ], [ %.071, %385 ], [ %.071, %384 ], [ %.071, %382 ], [ %.071, %381 ], [ %.071, %380 ], [ %.071, %379 ], [ %.071, %378 ], [ %.071, %376 ], [ %.071, %375 ], [ %.071, %374 ], [ %.071, %363 ], [ %.071, %353 ], [ %.071, %352 ], [ %.071, %350 ], [ %.071, %349 ], [ %.071, %342 ], [ %.071, %338 ], [ %.071, %337 ], [ %.071, %327 ], [ %.071, %317 ], [ %.071, %315 ], [ %.071, %303 ], [ %.071, %293 ], [ %.071, %292 ], [ %.071, %290 ], [ %.071, %289 ], [ %.071, %279 ], [ %.071, %269 ], [ %.071, %267 ], [ %.071, %266 ], [ %.071, %261 ], [ %.071, %259 ], [ %.071, %258 ], [ %.neg87, %257 ], [ %.071, %256 ], [ %.071, %255 ], [ %.071, %254 ], [ %.071, %243 ], [ %.071, %233 ], [ %.071, %231 ], [ %.071, %213 ], [ %.071, %203 ], [ %.071, %198 ], [ %.071, %194 ], [ %.071, %189 ], [ %.071, %185 ], [ %.071, %182 ], [ -1, %181 ], [ %.071, %178 ], [ %.071, %177 ], [ %.071, %167 ], [ %.071, %157 ], [ %.071, %149 ], [ %.071, %145 ], [ %.071, %144 ], [ %.071, %134 ], [ %.071, %124 ], [ %.071, %120 ], [ %.071, %119 ], [ %.071, %109 ], [ %.071, %99 ], [ %.071, %98 ], [ %.071, %87 ], [ %.071, %77 ], [ %.071, %76 ], [ %.071, %74 ], [ %.071, %68 ], [ %.071, %66 ], [ %.071, %54 ], [ %.071, %44 ], [ %.071, %43 ], [ %.071, %41 ], [ %.071, %29 ], [ %.071, %19 ]
  %.069.be = phi i32 [ %.069, %18 ], [ %.069, %387 ], [ %.069, %386 ], [ %.069, %385 ], [ %.069, %384 ], [ %.069, %382 ], [ %.069, %381 ], [ %.069, %380 ], [ %.069, %379 ], [ %.069, %378 ], [ %.069, %376 ], [ %.069, %375 ], [ %.069, %374 ], [ %.069, %363 ], [ %.069, %353 ], [ %.neg, %352 ], [ %.069, %350 ], [ %.069, %349 ], [ %.069, %342 ], [ %.069, %338 ], [ %.069, %337 ], [ %.069, %327 ], [ %.069, %317 ], [ %.069, %315 ], [ %.069, %303 ], [ %.069, %293 ], [ 0, %292 ], [ %.069, %290 ], [ %.069, %289 ], [ %.069, %279 ], [ %.069, %269 ], [ %.069, %267 ], [ %.069, %266 ], [ %.069, %261 ], [ %.069, %259 ], [ %.069, %258 ], [ %.069, %257 ], [ %.069, %256 ], [ %.069, %255 ], [ %.069, %254 ], [ %.069, %243 ], [ %.069, %233 ], [ %.069, %231 ], [ %.069, %213 ], [ %.069, %203 ], [ %.069, %198 ], [ %.069, %194 ], [ %.069, %189 ], [ %.069, %185 ], [ %.069, %182 ], [ %.069, %181 ], [ %.069, %178 ], [ %.069, %177 ], [ %.069, %167 ], [ %.069, %157 ], [ %.069, %149 ], [ %.069, %145 ], [ %.069, %144 ], [ %.069, %134 ], [ %.069, %124 ], [ %.069, %120 ], [ %.069, %119 ], [ %.069, %109 ], [ %.069, %99 ], [ %.069, %98 ], [ %.069, %87 ], [ %.069, %77 ], [ %.069, %76 ], [ %.069, %74 ], [ %.069, %68 ], [ %.069, %66 ], [ %.069, %54 ], [ %.069, %44 ], [ %.069, %43 ], [ %.069, %41 ], [ %.069, %29 ], [ %.069, %19 ]
  %.067.be = phi i32 [ %.067, %18 ], [ %.067, %387 ], [ 0, %386 ], [ %.067, %385 ], [ %.067, %384 ], [ %.067, %382 ], [ %.067, %381 ], [ %.067, %380 ], [ %.067, %379 ], [ %.067, %378 ], [ %.067, %376 ], [ %.067, %375 ], [ %.067, %374 ], [ %.067, %363 ], [ %.067, %353 ], [ %.067, %352 ], [ %.067, %350 ], [ %.neg85, %349 ], [ %.067, %342 ], [ %.067, %338 ], [ %.067, %337 ], [ 0, %327 ], [ %.067, %317 ], [ %.067, %315 ], [ %.067, %303 ], [ %.067, %293 ], [ %.067, %292 ], [ %.067, %290 ], [ %.067, %289 ], [ %.067, %279 ], [ %.067, %269 ], [ %.067, %267 ], [ %.067, %266 ], [ %.067, %261 ], [ %.067, %259 ], [ %.067, %258 ], [ %.067, %257 ], [ %.067, %256 ], [ %.067, %255 ], [ %.067, %254 ], [ %.067, %243 ], [ %.067, %233 ], [ %.067, %231 ], [ %.067, %213 ], [ %.067, %203 ], [ %.067, %198 ], [ %.067, %194 ], [ %.067, %189 ], [ %.067, %185 ], [ %.067, %182 ], [ %.067, %181 ], [ %.067, %178 ], [ %.067, %177 ], [ %.067, %167 ], [ %.067, %157 ], [ %.067, %149 ], [ %.067, %145 ], [ %.067, %144 ], [ %.067, %134 ], [ %.067, %124 ], [ %.067, %120 ], [ %.067, %119 ], [ %.067, %109 ], [ %.067, %99 ], [ %.067, %98 ], [ %.067, %87 ], [ %.067, %77 ], [ %.067, %76 ], [ %.067, %74 ], [ %.067, %68 ], [ %.067, %66 ], [ %.067, %54 ], [ %.067, %44 ], [ %.067, %43 ], [ %.067, %41 ], [ %.067, %29 ], [ %.067, %19 ]
  %.0.be = phi i32 [ %.0, %18 ], [ -1905824910, %387 ], [ -953865818, %386 ], [ 308345572, %385 ], [ -1209876518, %384 ], [ 83868332, %382 ], [ 1491923257, %381 ], [ 730441938, %380 ], [ 1327755407, %379 ], [ 70780883, %378 ], [ 1290079564, %376 ], [ 940977195, %375 ], [ -499083807, %374 ], [ %372, %363 ], [ %362, %353 ], [ -1575936646, %352 ], [ 494883832, %350 ], [ 758799418, %349 ], [ -1433158797, %342 ], [ %341, %338 ], [ 758799418, %337 ], [ %336, %327 ], [ %326, %317 ], [ %316, %315 ], [ %314, %303 ], [ %302, %293 ], [ -1575936646, %292 ], [ -2130249437, %290 ], [ 478267428, %289 ], [ %288, %279 ], [ %278, %269 ], [ -2061066407, %267 ], [ -1380274640, %266 ], [ 98715948, %261 ], [ -1323312606, %259 ], [ 523844913, %258 ], [ -1871644217, %257 ], [ 1252280446, %256 ], [ 1985469068, %255 ], [ 1350948052, %254 ], [ %253, %243 ], [ %242, %233 ], [ %232, %231 ], [ %230, %213 ], [ %212, %203 ], [ %202, %198 ], [ %197, %194 ], [ %193, %189 ], [ %188, %185 ], [ %184, %182 ], [ -1871644217, %181 ], [ %180, %178 ], [ -1323312606, %177 ], [ %176, %167 ], [ %166, %157 ], [ %156, %149 ], [ %148, %145 ], [ -2061066407, %144 ], [ %143, %134 ], [ %133, %124 ], [ %123, %120 ], [ -2130249437, %119 ], [ %118, %109 ], [ %108, %99 ], [ -1227950361, %98 ], [ %97, %87 ], [ %86, %77 ], [ -1695326726, %76 ], [ -55974310, %74 ], [ 1651053813, %68 ], [ %67, %66 ], [ %65, %54 ], [ %53, %44 ], [ -55974310, %43 ], [ %42, %41 ], [ %40, %29 ], [ %28, %19 ]
  br label %18

19:                                               ; preds = %18
  %20 = load i32, i32* @x.1, align 4
  %21 = load i32, i32* @y.2, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -499083807, i32 1710087127
  br label %.backedge

29:                                               ; preds = %18
  %30 = load i32, i32* %7, align 4
  %31 = icmp slt i32 %.081, %30
  store i1 %31, i1* %5, align 1
  %32 = load i32, i32* @x.1, align 4
  %33 = load i32, i32* @y.2, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 1479957319, i32 1710087127
  br label %.backedge

41:                                               ; preds = %18
  %.0..0..0.62 = load volatile i1, i1* %5, align 1
  %42 = select i1 %.0..0..0.62, i32 1160721617, i32 1165423159
  br label %.backedge

43:                                               ; preds = %18
  br label %.backedge

44:                                               ; preds = %18
  %45 = load i32, i32* @x.1, align 4
  %46 = load i32, i32* @y.2, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 940977195, i32 784715365
  br label %.backedge

54:                                               ; preds = %18
  %55 = load i32, i32* %8, align 4
  %56 = icmp slt i32 %.079, %55
  store i1 %56, i1* %4, align 1
  %57 = load i32, i32* @x.1, align 4
  %58 = load i32, i32* @y.2, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 -1337986507, i32 784715365
  br label %.backedge

66:                                               ; preds = %18
  %.0..0..0.63 = load volatile i1, i1* %4, align 1
  %67 = select i1 %.0..0..0.63, i32 -1900408092, i32 -1828338342
  br label %.backedge

68:                                               ; preds = %18
  %69 = sext i32 %.081 to i64
  %.0..0..0.52 = load volatile i64, i64* %6, align 8
  %70 = mul nsw i64 %.0..0..0.52, %69
  %71 = sext i32 %.079 to i64
  %.idx90 = add nsw i64 %70, %71
  %72 = getelementptr inbounds i8, i8* %17, i64 %.idx90
  %73 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %72)
  br label %.backedge

74:                                               ; preds = %18
  %75 = add i32 %.079, 1
  br label %.backedge

76:                                               ; preds = %18
  br label %.backedge

77:                                               ; preds = %18
  %78 = load i32, i32* @x.1, align 4
  %79 = load i32, i32* @y.2, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 1290079564, i32 29748961
  br label %.backedge

87:                                               ; preds = %18
  %88 = add i32 %.081, 1
  %89 = load i32, i32* @x.1, align 4
  %90 = load i32, i32* @y.2, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 -138072273, i32 29748961
  br label %.backedge

98:                                               ; preds = %18
  br label %.backedge

99:                                               ; preds = %18
  %100 = load i32, i32* @x.1, align 4
  %101 = load i32, i32* @y.2, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 70780883, i32 -327807483
  br label %.backedge

109:                                              ; preds = %18
  %110 = load i32, i32* @x.1, align 4
  %111 = load i32, i32* @y.2, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 2054020944, i32 -327807483
  br label %.backedge

119:                                              ; preds = %18
  br label %.backedge

120:                                              ; preds = %18
  %121 = load i32, i32* %7, align 4
  %122 = icmp slt i32 %.077, %121
  %123 = select i1 %122, i32 -1640303035, i32 -2103104045
  br label %.backedge

124:                                              ; preds = %18
  %125 = load i32, i32* @x.1, align 4
  %126 = load i32, i32* @y.2, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 1327755407, i32 161655706
  br label %.backedge

134:                                              ; preds = %18
  %135 = load i32, i32* @x.1, align 4
  %136 = load i32, i32* @y.2, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 -2087209131, i32 161655706
  br label %.backedge

144:                                              ; preds = %18
  br label %.backedge

145:                                              ; preds = %18
  %146 = load i32, i32* %8, align 4
  %147 = icmp slt i32 %.075, %146
  %148 = select i1 %147, i32 94360206, i32 -2137183421
  br label %.backedge

149:                                              ; preds = %18
  %150 = sext i32 %.077 to i64
  %.0..0..0.53 = load volatile i64, i64* %6, align 8
  %151 = mul nsw i64 %.0..0..0.53, %150
  %152 = sext i32 %.075 to i64
  %.idx89 = add nsw i64 %151, %152
  %153 = getelementptr inbounds i8, i8* %17, i64 %.idx89
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 46
  %156 = select i1 %155, i32 530933095, i32 98715948
  br label %.backedge

157:                                              ; preds = %18
  %158 = load i32, i32* @x.1, align 4
  %159 = load i32, i32* @y.2, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 730441938, i32 1809853215
  br label %.backedge

167:                                              ; preds = %18
  %168 = load i32, i32* @x.1, align 4
  %169 = load i32, i32* @y.2, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -242045081, i32 1809853215
  br label %.backedge

177:                                              ; preds = %18
  br label %.backedge

178:                                              ; preds = %18
  %179 = icmp slt i32 %.073, 2
  %180 = select i1 %179, i32 725171772, i32 -1085228703
  br label %.backedge

181:                                              ; preds = %18
  br label %.backedge

182:                                              ; preds = %18
  %183 = icmp slt i32 %.071, 2
  %184 = select i1 %183, i32 -984793597, i32 1537143618
  br label %.backedge

185:                                              ; preds = %18
  %186 = add i32 %.073, %.077
  %187 = icmp sgt i32 %186, -1
  %188 = select i1 %187, i32 -222738033, i32 1985469068
  br label %.backedge

189:                                              ; preds = %18
  %190 = add i32 %.073, %.077
  %191 = load i32, i32* %7, align 4
  %192 = icmp slt i32 %190, %191
  %193 = select i1 %192, i32 -1324983175, i32 1985469068
  br label %.backedge

194:                                              ; preds = %18
  %195 = add i32 %.071, %.075
  %196 = icmp sgt i32 %195, -1
  %197 = select i1 %196, i32 -908650032, i32 1985469068
  br label %.backedge

198:                                              ; preds = %18
  %199 = add i32 %.071, %.075
  %200 = load i32, i32* %8, align 4
  %201 = icmp slt i32 %199, %200
  %202 = select i1 %201, i32 600689358, i32 1985469068
  br label %.backedge

203:                                              ; preds = %18
  %204 = load i32, i32* @x.1, align 4
  %205 = load i32, i32* @y.2, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 1491923257, i32 545545309
  br label %.backedge

213:                                              ; preds = %18
  %214 = add i32 %.073, %.077
  %215 = sext i32 %214 to i64
  %.0..0..0.54 = load volatile i64, i64* %6, align 8
  %216 = mul nsw i64 %.0..0..0.54, %215
  %217 = add i32 %.071, %.075
  %218 = sext i32 %217 to i64
  %.idx88 = add nsw i64 %216, %218
  %219 = getelementptr inbounds i8, i8* %17, i64 %.idx88
  %220 = load i8, i8* %219, align 1
  %221 = icmp eq i8 %220, 35
  store i1 %221, i1* %3, align 1
  %222 = load i32, i32* @x.1, align 4
  %223 = load i32, i32* @y.2, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 1447934429, i32 545545309
  br label %.backedge

231:                                              ; preds = %18
  %.0..0..0.64 = load volatile i1, i1* %3, align 1
  %232 = select i1 %.0..0..0.64, i32 55112698, i32 1350948052
  br label %.backedge

233:                                              ; preds = %18
  %234 = load i32, i32* @x.1, align 4
  %235 = load i32, i32* @y.2, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 83868332, i32 1634329326
  br label %.backedge

243:                                              ; preds = %18
  %244 = add i8 %.083, 1
  %245 = load i32, i32* @x.1, align 4
  %246 = load i32, i32* @y.2, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 1098735607, i32 1634329326
  br label %.backedge

254:                                              ; preds = %18
  br label %.backedge

255:                                              ; preds = %18
  br label %.backedge

256:                                              ; preds = %18
  br label %.backedge

257:                                              ; preds = %18
  %.neg87 = add i32 %.071, 1
  br label %.backedge

258:                                              ; preds = %18
  br label %.backedge

259:                                              ; preds = %18
  %260 = add i32 %.073, 1
  br label %.backedge

261:                                              ; preds = %18
  %262 = sext i32 %.077 to i64
  %.0..0..0.55 = load volatile i64, i64* %6, align 8
  %263 = mul nsw i64 %.0..0..0.55, %262
  %264 = sext i32 %.075 to i64
  %.idx86 = add nsw i64 %263, %264
  %265 = getelementptr inbounds i8, i8* %17, i64 %.idx86
  store i8 %.083, i8* %265, align 1
  br label %.backedge

266:                                              ; preds = %18
  br label %.backedge

267:                                              ; preds = %18
  %268 = add i32 %.075, 1
  br label %.backedge

269:                                              ; preds = %18
  %270 = load i32, i32* @x.1, align 4
  %271 = load i32, i32* @y.2, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 -1209876518, i32 -1976566786
  br label %.backedge

279:                                              ; preds = %18
  %280 = load i32, i32* @x.1, align 4
  %281 = load i32, i32* @y.2, align 4
  %282 = add i32 %280, -1
  %283 = mul i32 %282, %280
  %284 = and i32 %283, 1
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %286, %285
  %288 = select i1 %287, i32 571809003, i32 -1976566786
  br label %.backedge

289:                                              ; preds = %18
  br label %.backedge

290:                                              ; preds = %18
  %291 = add i32 %.077, 1
  br label %.backedge

292:                                              ; preds = %18
  br label %.backedge

293:                                              ; preds = %18
  %294 = load i32, i32* @x.1, align 4
  %295 = load i32, i32* @y.2, align 4
  %296 = add i32 %294, -1
  %297 = mul i32 %296, %294
  %298 = and i32 %297, 1
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %300, %299
  %302 = select i1 %301, i32 308345572, i32 947145769
  br label %.backedge

303:                                              ; preds = %18
  %304 = load i32, i32* %7, align 4
  %305 = icmp slt i32 %.069, %304
  store i1 %305, i1* %2, align 1
  %306 = load i32, i32* @x.1, align 4
  %307 = load i32, i32* @y.2, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 1537925928, i32 947145769
  br label %.backedge

315:                                              ; preds = %18
  %.0..0..0.65 = load volatile i1, i1* %2, align 1
  %316 = select i1 %.0..0..0.65, i32 -171921894, i32 -1671310229
  br label %.backedge

317:                                              ; preds = %18
  %318 = load i32, i32* @x.1, align 4
  %319 = load i32, i32* @y.2, align 4
  %320 = add i32 %318, -1
  %321 = mul i32 %320, %318
  %322 = and i32 %321, 1
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %324, %323
  %326 = select i1 %325, i32 -953865818, i32 1401660744
  br label %.backedge

327:                                              ; preds = %18
  %328 = load i32, i32* @x.1, align 4
  %329 = load i32, i32* @y.2, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 -710488516, i32 1401660744
  br label %.backedge

337:                                              ; preds = %18
  br label %.backedge

338:                                              ; preds = %18
  %339 = load i32, i32* %8, align 4
  %340 = icmp slt i32 %.067, %339
  %341 = select i1 %340, i32 907029655, i32 -109370864
  br label %.backedge

342:                                              ; preds = %18
  %343 = sext i32 %.069 to i64
  %.0..0..0.56 = load volatile i64, i64* %6, align 8
  %344 = mul nsw i64 %.0..0..0.56, %343
  %345 = sext i32 %.067 to i64
  %.idx = add nsw i64 %344, %345
  %346 = getelementptr inbounds i8, i8* %17, i64 %.idx
  %347 = load i8, i8* %346, align 1
  %348 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %347)
  br label %.backedge

349:                                              ; preds = %18
  %.neg85 = add i32 %.067, 1
  br label %.backedge

350:                                              ; preds = %18
  %351 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

352:                                              ; preds = %18
  %.neg = add i32 %.069, 1
  br label %.backedge

353:                                              ; preds = %18
  %354 = load i32, i32* @x.1, align 4
  %355 = load i32, i32* @y.2, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 -1905824910, i32 -1805154706
  br label %.backedge

363:                                              ; preds = %18
  call void @llvm.stackrestore(i8* %15)
  store i32 0, i32* %1, align 4
  %364 = load i32, i32* @x.1, align 4
  %365 = load i32, i32* @y.2, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 -1776896331, i32 -1805154706
  br label %.backedge

373:                                              ; preds = %18
  %.0..0..0.66 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.66

374:                                              ; preds = %18
  br label %.backedge

375:                                              ; preds = %18
  br label %.backedge

376:                                              ; preds = %18
  %377 = add i32 %.081, 1
  br label %.backedge

378:                                              ; preds = %18
  br label %.backedge

379:                                              ; preds = %18
  br label %.backedge

380:                                              ; preds = %18
  br label %.backedge

381:                                              ; preds = %18
  %.0..0..0.57 = load volatile i64, i64* %6, align 8
  %.0..0..0.58 = load volatile i64, i64* %6, align 8
  %.0..0..0.59 = load volatile i64, i64* %6, align 8
  %.0..0..0.60 = load volatile i64, i64* %6, align 8
  %.0..0..0.61 = load volatile i64, i64* %6, align 8
  br label %.backedge

382:                                              ; preds = %18
  %383 = add i8 %.083, 1
  br label %.backedge

384:                                              ; preds = %18
  br label %.backedge

385:                                              ; preds = %18
  br label %.backedge

386:                                              ; preds = %18
  br label %.backedge

387:                                              ; preds = %18
  call void @llvm.stackrestore(i8* %15)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s310118725.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
