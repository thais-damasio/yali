; ModuleID = 'build_ollvm/programs/p03574/s755345677.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s755345677.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@arr = global [60 x [60 x i8]] zeroinitializer, align 16
@ans = local_unnamed_addr global [60 x [60 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s755345677.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7)
  br label %9

9:                                                ; preds = %.backedge, %0
  %.073 = phi i32 [ 0, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.0 = phi i32 [ -307070674, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -307070674, label %10
    i32 1522198738, label %20
    i32 240254484, label %32
    i32 -1829224785, label %34
    i32 -1258750948, label %35
    i32 -1630265854, label %45
    i32 7762817, label %57
    i32 504224098, label %59
    i32 903959578, label %64
    i32 1034908479, label %74
    i32 -638778768, label %85
    i32 1322961429, label %86
    i32 -679942273, label %96
    i32 134974669, label %106
    i32 -1213573653, label %107
    i32 -1138297039, label %117
    i32 93149666, label %128
    i32 -1416438615, label %129
    i32 -484788358, label %139
    i32 -1078284849, label %149
    i32 -1906145659, label %150
    i32 -1093671482, label %154
    i32 -1062865562, label %155
    i32 1020623647, label %159
    i32 -9328830, label %166
    i32 -1345144736, label %167
    i32 -1485550380, label %170
    i32 -376157557, label %180
    i32 145290989, label %190
    i32 521170667, label %191
    i32 -622802825, label %194
    i32 -282515622, label %204
    i32 32483096, label %216
    i32 -1097636202, label %218
    i32 -1327078832, label %223
    i32 881240209, label %227
    i32 -1860726013, label %232
    i32 -824482349, label %241
    i32 -1065983430, label %251
    i32 1447784820, label %266
    i32 967307151, label %267
    i32 -1618962781, label %268
    i32 -59360899, label %278
    i32 2070533520, label %288
    i32 -632013869, label %289
    i32 -1867159320, label %290
    i32 231278053, label %291
    i32 157549774, label %293
    i32 -487721049, label %294
    i32 663631620, label %295
    i32 -1298093100, label %305
    i32 -1237171018, label %316
    i32 1107598781, label %317
    i32 1976434954, label %318
    i32 -465775391, label %320
    i32 604174065, label %321
    i32 -1346657260, label %325
    i32 -161855836, label %326
    i32 -1342306314, label %336
    i32 512905446, label %348
    i32 349173075, label %350
    i32 1595748656, label %357
    i32 1418939804, label %363
    i32 -450548324, label %369
    i32 2024738179, label %379
    i32 -2023607002, label %389
    i32 -840285186, label %390
    i32 -526939149, label %400
    i32 254297594, label %411
    i32 105749322, label %412
    i32 -839677761, label %413
    i32 -1221894313, label %423
    i32 -2121810503, label %433
    i32 -864787994, label %434
    i32 1110668869, label %444
    i32 -668916994, label %454
    i32 22315326, label %455
    i32 243822876, label %456
    i32 -1965337947, label %457
    i32 -1160702423, label %458
    i32 1216880358, label %459
    i32 1335136778, label %461
    i32 -209054683, label %462
    i32 -862501302, label %463
    i32 1787926204, label %464
    i32 -2129245814, label %470
    i32 387356084, label %471
    i32 -1988983622, label %473
    i32 -1273289898, label %474
    i32 -905409005, label %475
    i32 -460295030, label %477
    i32 -185166436, label %478
  ]

.backedge:                                        ; preds = %9, %478, %477, %475, %474, %473, %471, %470, %464, %463, %462, %461, %459, %458, %457, %456, %455, %444, %434, %433, %423, %413, %412, %411, %400, %390, %389, %379, %369, %363, %357, %350, %348, %336, %326, %325, %321, %320, %318, %317, %316, %305, %295, %294, %293, %291, %290, %289, %288, %278, %268, %267, %266, %251, %241, %232, %227, %223, %218, %216, %204, %194, %191, %190, %180, %170, %167, %166, %159, %155, %154, %150, %149, %139, %129, %128, %117, %107, %106, %96, %86, %85, %74, %64, %59, %57, %45, %35, %34, %32, %20, %10
  %.073.be = phi i32 [ %.073, %9 ], [ %.073, %478 ], [ %.073, %477 ], [ %.073, %475 ], [ %.073, %474 ], [ %.073, %473 ], [ %.073, %471 ], [ %.073, %470 ], [ %.073, %464 ], [ %.073, %463 ], [ %.073, %462 ], [ %.073, %461 ], [ %460, %459 ], [ %.073, %458 ], [ %.073, %457 ], [ %.073, %456 ], [ %.073, %455 ], [ %.073, %444 ], [ %.073, %434 ], [ %.073, %433 ], [ %.073, %423 ], [ %.073, %413 ], [ %.073, %412 ], [ %.073, %411 ], [ %.073, %400 ], [ %.073, %390 ], [ %.073, %389 ], [ %.073, %379 ], [ %.073, %369 ], [ %.073, %363 ], [ %.073, %357 ], [ %.073, %350 ], [ %.073, %348 ], [ %.073, %336 ], [ %.073, %326 ], [ %.073, %325 ], [ %.073, %321 ], [ %.073, %320 ], [ %.073, %318 ], [ %.073, %317 ], [ %.073, %316 ], [ %.073, %305 ], [ %.073, %295 ], [ %.073, %294 ], [ %.073, %293 ], [ %.073, %291 ], [ %.073, %290 ], [ %.073, %289 ], [ %.073, %288 ], [ %.073, %278 ], [ %.073, %268 ], [ %.073, %267 ], [ %.073, %266 ], [ %.073, %251 ], [ %.073, %241 ], [ %.073, %232 ], [ %.073, %227 ], [ %.073, %223 ], [ %.073, %218 ], [ %.073, %216 ], [ %.073, %204 ], [ %.073, %194 ], [ %.073, %191 ], [ %.073, %190 ], [ %.073, %180 ], [ %.073, %170 ], [ %.073, %167 ], [ %.073, %166 ], [ %.073, %159 ], [ %.073, %155 ], [ %.073, %154 ], [ %.073, %150 ], [ %.073, %149 ], [ %.073, %139 ], [ %.073, %129 ], [ %.073, %128 ], [ %118, %117 ], [ %.073, %107 ], [ %.073, %106 ], [ %.073, %96 ], [ %.073, %86 ], [ %.073, %85 ], [ %.073, %74 ], [ %.073, %64 ], [ %.073, %59 ], [ %.073, %57 ], [ %.073, %45 ], [ %.073, %35 ], [ %.073, %34 ], [ %.073, %32 ], [ %.073, %20 ], [ %.073, %10 ]
  %.071.be = phi i32 [ %.071, %9 ], [ %.071, %478 ], [ %.071, %477 ], [ %.071, %475 ], [ %.071, %474 ], [ %.071, %473 ], [ %.071, %471 ], [ %.071, %470 ], [ %.071, %464 ], [ %.071, %463 ], [ %.071, %462 ], [ %.071, %461 ], [ %.071, %459 ], [ %.071, %458 ], [ %.neg75, %457 ], [ %.071, %456 ], [ %.071, %455 ], [ %.071, %444 ], [ %.071, %434 ], [ %.071, %433 ], [ %.071, %423 ], [ %.071, %413 ], [ %.071, %412 ], [ %.071, %411 ], [ %.071, %400 ], [ %.071, %390 ], [ %.071, %389 ], [ %.071, %379 ], [ %.071, %369 ], [ %.071, %363 ], [ %.071, %357 ], [ %.071, %350 ], [ %.071, %348 ], [ %.071, %336 ], [ %.071, %326 ], [ %.071, %325 ], [ %.071, %321 ], [ %.071, %320 ], [ %.071, %318 ], [ %.071, %317 ], [ %.071, %316 ], [ %.071, %305 ], [ %.071, %295 ], [ %.071, %294 ], [ %.071, %293 ], [ %.071, %291 ], [ %.071, %290 ], [ %.071, %289 ], [ %.071, %288 ], [ %.071, %278 ], [ %.071, %268 ], [ %.071, %267 ], [ %.071, %266 ], [ %.071, %251 ], [ %.071, %241 ], [ %.071, %232 ], [ %.071, %227 ], [ %.071, %223 ], [ %.071, %218 ], [ %.071, %216 ], [ %.071, %204 ], [ %.071, %194 ], [ %.071, %191 ], [ %.071, %190 ], [ %.071, %180 ], [ %.071, %170 ], [ %.071, %167 ], [ %.071, %166 ], [ %.071, %159 ], [ %.071, %155 ], [ %.071, %154 ], [ %.071, %150 ], [ %.071, %149 ], [ %.071, %139 ], [ %.071, %129 ], [ %.071, %128 ], [ %.071, %117 ], [ %.071, %107 ], [ %.071, %106 ], [ %.071, %96 ], [ %.071, %86 ], [ %.071, %85 ], [ %75, %74 ], [ %.071, %64 ], [ %.071, %59 ], [ %.071, %57 ], [ %.071, %45 ], [ %.071, %35 ], [ 0, %34 ], [ %.071, %32 ], [ %.071, %20 ], [ %.071, %10 ]
  %.069.be = phi i32 [ %.069, %9 ], [ %.069, %478 ], [ %.069, %477 ], [ %.069, %475 ], [ %.069, %474 ], [ %.069, %473 ], [ %.069, %471 ], [ %.069, %470 ], [ %.069, %464 ], [ %.069, %463 ], [ %.069, %462 ], [ 0, %461 ], [ %.069, %459 ], [ %.069, %458 ], [ %.069, %457 ], [ %.069, %456 ], [ %.069, %455 ], [ %.069, %444 ], [ %.069, %434 ], [ %.069, %433 ], [ %.069, %423 ], [ %.069, %413 ], [ %.069, %412 ], [ %.069, %411 ], [ %.069, %400 ], [ %.069, %390 ], [ %.069, %389 ], [ %.069, %379 ], [ %.069, %369 ], [ %.069, %363 ], [ %.069, %357 ], [ %.069, %350 ], [ %.069, %348 ], [ %.069, %336 ], [ %.069, %326 ], [ %.069, %325 ], [ %.069, %321 ], [ %.069, %320 ], [ %319, %318 ], [ %.069, %317 ], [ %.069, %316 ], [ %.069, %305 ], [ %.069, %295 ], [ %.069, %294 ], [ %.069, %293 ], [ %.069, %291 ], [ %.069, %290 ], [ %.069, %289 ], [ %.069, %288 ], [ %.069, %278 ], [ %.069, %268 ], [ %.069, %267 ], [ %.069, %266 ], [ %.069, %251 ], [ %.069, %241 ], [ %.069, %232 ], [ %.069, %227 ], [ %.069, %223 ], [ %.069, %218 ], [ %.069, %216 ], [ %.069, %204 ], [ %.069, %194 ], [ %.069, %191 ], [ %.069, %190 ], [ %.069, %180 ], [ %.069, %170 ], [ %.069, %167 ], [ %.069, %166 ], [ %.069, %159 ], [ %.069, %155 ], [ %.069, %154 ], [ %.069, %150 ], [ %.069, %149 ], [ 0, %139 ], [ %.069, %129 ], [ %.069, %128 ], [ %.069, %117 ], [ %.069, %107 ], [ %.069, %106 ], [ %.069, %96 ], [ %.069, %86 ], [ %.069, %85 ], [ %.069, %74 ], [ %.069, %64 ], [ %.069, %59 ], [ %.069, %57 ], [ %.069, %45 ], [ %.069, %35 ], [ %.069, %34 ], [ %.069, %32 ], [ %.069, %20 ], [ %.069, %10 ]
  %.067.be = phi i32 [ %.067, %9 ], [ %.067, %478 ], [ %.067, %477 ], [ %.067, %475 ], [ %.067, %474 ], [ %.067, %473 ], [ %472, %471 ], [ %.067, %470 ], [ %.067, %464 ], [ %.067, %463 ], [ %.067, %462 ], [ %.067, %461 ], [ %.067, %459 ], [ %.067, %458 ], [ %.067, %457 ], [ %.067, %456 ], [ %.067, %455 ], [ %.067, %444 ], [ %.067, %434 ], [ %.067, %433 ], [ %.067, %423 ], [ %.067, %413 ], [ %.067, %412 ], [ %.067, %411 ], [ %.067, %400 ], [ %.067, %390 ], [ %.067, %389 ], [ %.067, %379 ], [ %.067, %369 ], [ %.067, %363 ], [ %.067, %357 ], [ %.067, %350 ], [ %.067, %348 ], [ %.067, %336 ], [ %.067, %326 ], [ %.067, %325 ], [ %.067, %321 ], [ %.067, %320 ], [ %.067, %318 ], [ %.067, %317 ], [ %.067, %316 ], [ %306, %305 ], [ %.067, %295 ], [ %.067, %294 ], [ %.067, %293 ], [ %.067, %291 ], [ %.067, %290 ], [ %.067, %289 ], [ %.067, %288 ], [ %.067, %278 ], [ %.067, %268 ], [ %.067, %267 ], [ %.067, %266 ], [ %.067, %251 ], [ %.067, %241 ], [ %.067, %232 ], [ %.067, %227 ], [ %.067, %223 ], [ %.067, %218 ], [ %.067, %216 ], [ %.067, %204 ], [ %.067, %194 ], [ %.067, %191 ], [ %.067, %190 ], [ %.067, %180 ], [ %.067, %170 ], [ %.067, %167 ], [ %.067, %166 ], [ %.067, %159 ], [ %.067, %155 ], [ 0, %154 ], [ %.067, %150 ], [ %.067, %149 ], [ %.067, %139 ], [ %.067, %129 ], [ %.067, %128 ], [ %.067, %117 ], [ %.067, %107 ], [ %.067, %106 ], [ %.067, %96 ], [ %.067, %86 ], [ %.067, %85 ], [ %.067, %74 ], [ %.067, %64 ], [ %.067, %59 ], [ %.067, %57 ], [ %.067, %45 ], [ %.067, %35 ], [ %.067, %34 ], [ %.067, %32 ], [ %.067, %20 ], [ %.067, %10 ]
  %.065.be = phi i32 [ %.065, %9 ], [ %.065, %478 ], [ %.065, %477 ], [ %.065, %475 ], [ %.065, %474 ], [ %.065, %473 ], [ %.065, %471 ], [ %.065, %470 ], [ %.065, %464 ], [ %.065, %463 ], [ %.065, %462 ], [ %.065, %461 ], [ %.065, %459 ], [ %.065, %458 ], [ %.065, %457 ], [ %.065, %456 ], [ %.065, %455 ], [ %.065, %444 ], [ %.065, %434 ], [ %.065, %433 ], [ %.065, %423 ], [ %.065, %413 ], [ %.065, %412 ], [ %.065, %411 ], [ %.065, %400 ], [ %.065, %390 ], [ %.065, %389 ], [ %.065, %379 ], [ %.065, %369 ], [ %.065, %363 ], [ %.065, %357 ], [ %.065, %350 ], [ %.065, %348 ], [ %.065, %336 ], [ %.065, %326 ], [ %.065, %325 ], [ %.065, %321 ], [ %.065, %320 ], [ %.065, %318 ], [ %.065, %317 ], [ %.065, %316 ], [ %.065, %305 ], [ %.065, %295 ], [ %.065, %294 ], [ %.065, %293 ], [ %292, %291 ], [ %.065, %290 ], [ %.065, %289 ], [ %.065, %288 ], [ %.065, %278 ], [ %.065, %268 ], [ %.065, %267 ], [ %.065, %266 ], [ %.065, %251 ], [ %.065, %241 ], [ %.065, %232 ], [ %.065, %227 ], [ %.065, %223 ], [ %.065, %218 ], [ %.065, %216 ], [ %.065, %204 ], [ %.065, %194 ], [ %.065, %191 ], [ %.065, %190 ], [ %.065, %180 ], [ %.065, %170 ], [ %.065, %167 ], [ -1, %166 ], [ %.065, %159 ], [ %.065, %155 ], [ %.065, %154 ], [ %.065, %150 ], [ %.065, %149 ], [ %.065, %139 ], [ %.065, %129 ], [ %.065, %128 ], [ %.065, %117 ], [ %.065, %107 ], [ %.065, %106 ], [ %.065, %96 ], [ %.065, %86 ], [ %.065, %85 ], [ %.065, %74 ], [ %.065, %64 ], [ %.065, %59 ], [ %.065, %57 ], [ %.065, %45 ], [ %.065, %35 ], [ %.065, %34 ], [ %.065, %32 ], [ %.065, %20 ], [ %.065, %10 ]
  %.063.be = phi i32 [ %.063, %9 ], [ %.063, %478 ], [ %.063, %477 ], [ %.063, %475 ], [ %.063, %474 ], [ %.063, %473 ], [ %.063, %471 ], [ %.063, %470 ], [ %.063, %464 ], [ %.063, %463 ], [ -1, %462 ], [ %.063, %461 ], [ %.063, %459 ], [ %.063, %458 ], [ %.063, %457 ], [ %.063, %456 ], [ %.063, %455 ], [ %.063, %444 ], [ %.063, %434 ], [ %.063, %433 ], [ %.063, %423 ], [ %.063, %413 ], [ %.063, %412 ], [ %.063, %411 ], [ %.063, %400 ], [ %.063, %390 ], [ %.063, %389 ], [ %.063, %379 ], [ %.063, %369 ], [ %.063, %363 ], [ %.063, %357 ], [ %.063, %350 ], [ %.063, %348 ], [ %.063, %336 ], [ %.063, %326 ], [ %.063, %325 ], [ %.063, %321 ], [ %.063, %320 ], [ %.063, %318 ], [ %.063, %317 ], [ %.063, %316 ], [ %.063, %305 ], [ %.063, %295 ], [ %.063, %294 ], [ %.063, %293 ], [ %.063, %291 ], [ %.063, %290 ], [ %.neg77, %289 ], [ %.063, %288 ], [ %.063, %278 ], [ %.063, %268 ], [ %.063, %267 ], [ %.063, %266 ], [ %.063, %251 ], [ %.063, %241 ], [ %.063, %232 ], [ %.063, %227 ], [ %.063, %223 ], [ %.063, %218 ], [ %.063, %216 ], [ %.063, %204 ], [ %.063, %194 ], [ %.063, %191 ], [ %.063, %190 ], [ -1, %180 ], [ %.063, %170 ], [ %.063, %167 ], [ %.063, %166 ], [ %.063, %159 ], [ %.063, %155 ], [ %.063, %154 ], [ %.063, %150 ], [ %.063, %149 ], [ %.063, %139 ], [ %.063, %129 ], [ %.063, %128 ], [ %.063, %117 ], [ %.063, %107 ], [ %.063, %106 ], [ %.063, %96 ], [ %.063, %86 ], [ %.063, %85 ], [ %.063, %74 ], [ %.063, %64 ], [ %.063, %59 ], [ %.063, %57 ], [ %.063, %45 ], [ %.063, %35 ], [ %.063, %34 ], [ %.063, %32 ], [ %.063, %20 ], [ %.063, %10 ]
  %.061.be = phi i32 [ %.061, %9 ], [ %.061, %478 ], [ %.neg, %477 ], [ %.061, %475 ], [ %.061, %474 ], [ %.061, %473 ], [ %.061, %471 ], [ %.061, %470 ], [ %.061, %464 ], [ %.061, %463 ], [ %.061, %462 ], [ %.061, %461 ], [ %.061, %459 ], [ %.061, %458 ], [ %.061, %457 ], [ %.061, %456 ], [ %.061, %455 ], [ %.061, %444 ], [ %.061, %434 ], [ %.061, %433 ], [ %.neg76, %423 ], [ %.061, %413 ], [ %.061, %412 ], [ %.061, %411 ], [ %.061, %400 ], [ %.061, %390 ], [ %.061, %389 ], [ %.061, %379 ], [ %.061, %369 ], [ %.061, %363 ], [ %.061, %357 ], [ %.061, %350 ], [ %.061, %348 ], [ %.061, %336 ], [ %.061, %326 ], [ %.061, %325 ], [ %.061, %321 ], [ 0, %320 ], [ %.061, %318 ], [ %.061, %317 ], [ %.061, %316 ], [ %.061, %305 ], [ %.061, %295 ], [ %.061, %294 ], [ %.061, %293 ], [ %.061, %291 ], [ %.061, %290 ], [ %.061, %289 ], [ %.061, %288 ], [ %.061, %278 ], [ %.061, %268 ], [ %.061, %267 ], [ %.061, %266 ], [ %.061, %251 ], [ %.061, %241 ], [ %.061, %232 ], [ %.061, %227 ], [ %.061, %223 ], [ %.061, %218 ], [ %.061, %216 ], [ %.061, %204 ], [ %.061, %194 ], [ %.061, %191 ], [ %.061, %190 ], [ %.061, %180 ], [ %.061, %170 ], [ %.061, %167 ], [ %.061, %166 ], [ %.061, %159 ], [ %.061, %155 ], [ %.061, %154 ], [ %.061, %150 ], [ %.061, %149 ], [ %.061, %139 ], [ %.061, %129 ], [ %.061, %128 ], [ %.061, %117 ], [ %.061, %107 ], [ %.061, %106 ], [ %.061, %96 ], [ %.061, %86 ], [ %.061, %85 ], [ %.061, %74 ], [ %.061, %64 ], [ %.061, %59 ], [ %.061, %57 ], [ %.061, %45 ], [ %.061, %35 ], [ %.061, %34 ], [ %.061, %32 ], [ %.061, %20 ], [ %.061, %10 ]
  %.059.be = phi i32 [ %.059, %9 ], [ %.059, %478 ], [ %.059, %477 ], [ %476, %475 ], [ %.059, %474 ], [ %.059, %473 ], [ %.059, %471 ], [ %.059, %470 ], [ %.059, %464 ], [ %.059, %463 ], [ %.059, %462 ], [ %.059, %461 ], [ %.059, %459 ], [ %.059, %458 ], [ %.059, %457 ], [ %.059, %456 ], [ %.059, %455 ], [ %.059, %444 ], [ %.059, %434 ], [ %.059, %433 ], [ %.059, %423 ], [ %.059, %413 ], [ %.059, %412 ], [ %.059, %411 ], [ %401, %400 ], [ %.059, %390 ], [ %.059, %389 ], [ %.059, %379 ], [ %.059, %369 ], [ %.059, %363 ], [ %.059, %357 ], [ %.059, %350 ], [ %.059, %348 ], [ %.059, %336 ], [ %.059, %326 ], [ 0, %325 ], [ %.059, %321 ], [ %.059, %320 ], [ %.059, %318 ], [ %.059, %317 ], [ %.059, %316 ], [ %.059, %305 ], [ %.059, %295 ], [ %.059, %294 ], [ %.059, %293 ], [ %.059, %291 ], [ %.059, %290 ], [ %.059, %289 ], [ %.059, %288 ], [ %.059, %278 ], [ %.059, %268 ], [ %.059, %267 ], [ %.059, %266 ], [ %.059, %251 ], [ %.059, %241 ], [ %.059, %232 ], [ %.059, %227 ], [ %.059, %223 ], [ %.059, %218 ], [ %.059, %216 ], [ %.059, %204 ], [ %.059, %194 ], [ %.059, %191 ], [ %.059, %190 ], [ %.059, %180 ], [ %.059, %170 ], [ %.059, %167 ], [ %.059, %166 ], [ %.059, %159 ], [ %.059, %155 ], [ %.059, %154 ], [ %.059, %150 ], [ %.059, %149 ], [ %.059, %139 ], [ %.059, %129 ], [ %.059, %128 ], [ %.059, %117 ], [ %.059, %107 ], [ %.059, %106 ], [ %.059, %96 ], [ %.059, %86 ], [ %.059, %85 ], [ %.059, %74 ], [ %.059, %64 ], [ %.059, %59 ], [ %.059, %57 ], [ %.059, %45 ], [ %.059, %35 ], [ %.059, %34 ], [ %.059, %32 ], [ %.059, %20 ], [ %.059, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ 1110668869, %478 ], [ -1221894313, %477 ], [ -526939149, %475 ], [ 2024738179, %474 ], [ -1342306314, %473 ], [ -1298093100, %471 ], [ -59360899, %470 ], [ -1065983430, %464 ], [ -282515622, %463 ], [ -376157557, %462 ], [ -484788358, %461 ], [ -1138297039, %459 ], [ -679942273, %458 ], [ 1034908479, %457 ], [ -1630265854, %456 ], [ 1522198738, %455 ], [ %453, %444 ], [ %443, %434 ], [ 604174065, %433 ], [ %432, %423 ], [ %422, %413 ], [ -839677761, %412 ], [ -161855836, %411 ], [ %410, %400 ], [ %399, %390 ], [ -840285186, %389 ], [ %388, %379 ], [ %378, %369 ], [ -450548324, %363 ], [ -450548324, %357 ], [ %356, %350 ], [ %349, %348 ], [ %347, %336 ], [ %335, %326 ], [ -161855836, %325 ], [ %324, %321 ], [ 604174065, %320 ], [ -1906145659, %318 ], [ 1976434954, %317 ], [ -1062865562, %316 ], [ %315, %305 ], [ %304, %295 ], [ 663631620, %294 ], [ -487721049, %293 ], [ -1345144736, %291 ], [ 231278053, %290 ], [ 521170667, %289 ], [ -632013869, %288 ], [ %287, %278 ], [ %277, %268 ], [ -1618962781, %267 ], [ 967307151, %266 ], [ %265, %251 ], [ %250, %241 ], [ %240, %232 ], [ %231, %227 ], [ %226, %223 ], [ %222, %218 ], [ %217, %216 ], [ %215, %204 ], [ %203, %194 ], [ %193, %191 ], [ 521170667, %190 ], [ %189, %180 ], [ %179, %170 ], [ %169, %167 ], [ -1345144736, %166 ], [ %165, %159 ], [ %158, %155 ], [ -1062865562, %154 ], [ %153, %150 ], [ -1906145659, %149 ], [ %148, %139 ], [ %138, %129 ], [ -307070674, %128 ], [ %127, %117 ], [ %116, %107 ], [ -1213573653, %106 ], [ %105, %96 ], [ %95, %86 ], [ -1258750948, %85 ], [ %84, %74 ], [ %73, %64 ], [ 903959578, %59 ], [ %58, %57 ], [ %56, %45 ], [ %44, %35 ], [ -1258750948, %34 ], [ %33, %32 ], [ %31, %20 ], [ %19, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @x.2, align 4
  %12 = load i32, i32* @y.3, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 1522198738, i32 22315326
  br label %.backedge

20:                                               ; preds = %9
  %21 = load i32, i32* %6, align 4
  %22 = icmp slt i32 %.073, %21
  store i1 %22, i1* %5, align 1
  %23 = load i32, i32* @x.2, align 4
  %24 = load i32, i32* @y.3, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 240254484, i32 22315326
  br label %.backedge

32:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %33 = select i1 %.0..0..0., i32 -1829224785, i32 -1416438615
  br label %.backedge

34:                                               ; preds = %9
  br label %.backedge

35:                                               ; preds = %9
  %36 = load i32, i32* @x.2, align 4
  %37 = load i32, i32* @y.3, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 -1630265854, i32 243822876
  br label %.backedge

45:                                               ; preds = %9
  %46 = load i32, i32* %7, align 4
  %47 = icmp slt i32 %.071, %46
  store i1 %47, i1* %4, align 1
  %48 = load i32, i32* @x.2, align 4
  %49 = load i32, i32* @y.3, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 7762817, i32 243822876
  br label %.backedge

57:                                               ; preds = %9
  %.0..0..0.55 = load volatile i1, i1* %4, align 1
  %58 = select i1 %.0..0..0.55, i32 504224098, i32 1322961429
  br label %.backedge

59:                                               ; preds = %9
  %60 = sext i32 %.073 to i64
  %61 = sext i32 %.071 to i64
  %62 = getelementptr inbounds [60 x [60 x i8]], [60 x [60 x i8]]* @arr, i64 0, i64 %60, i64 %61
  %63 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %62)
  br label %.backedge

64:                                               ; preds = %9
  %65 = load i32, i32* @x.2, align 4
  %66 = load i32, i32* @y.3, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 1034908479, i32 -1965337947
  br label %.backedge

74:                                               ; preds = %9
  %75 = add i32 %.071, 1
  %76 = load i32, i32* @x.2, align 4
  %77 = load i32, i32* @y.3, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 -638778768, i32 -1965337947
  br label %.backedge

85:                                               ; preds = %9
  br label %.backedge

86:                                               ; preds = %9
  %87 = load i32, i32* @x.2, align 4
  %88 = load i32, i32* @y.3, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 -679942273, i32 -1160702423
  br label %.backedge

96:                                               ; preds = %9
  %97 = load i32, i32* @x.2, align 4
  %98 = load i32, i32* @y.3, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 134974669, i32 -1160702423
  br label %.backedge

106:                                              ; preds = %9
  br label %.backedge

107:                                              ; preds = %9
  %108 = load i32, i32* @x.2, align 4
  %109 = load i32, i32* @y.3, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -1138297039, i32 1216880358
  br label %.backedge

117:                                              ; preds = %9
  %118 = add i32 %.073, 1
  %119 = load i32, i32* @x.2, align 4
  %120 = load i32, i32* @y.3, align 4
  %121 = add i32 %119, -1
  %122 = mul i32 %121, %119
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %125, %124
  %127 = select i1 %126, i32 93149666, i32 1216880358
  br label %.backedge

128:                                              ; preds = %9
  br label %.backedge

129:                                              ; preds = %9
  %130 = load i32, i32* @x.2, align 4
  %131 = load i32, i32* @y.3, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -484788358, i32 1335136778
  br label %.backedge

139:                                              ; preds = %9
  %140 = load i32, i32* @x.2, align 4
  %141 = load i32, i32* @y.3, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 -1078284849, i32 1335136778
  br label %.backedge

149:                                              ; preds = %9
  br label %.backedge

150:                                              ; preds = %9
  %151 = load i32, i32* %6, align 4
  %152 = icmp slt i32 %.069, %151
  %153 = select i1 %152, i32 -1093671482, i32 -465775391
  br label %.backedge

154:                                              ; preds = %9
  br label %.backedge

155:                                              ; preds = %9
  %156 = load i32, i32* %7, align 4
  %157 = icmp slt i32 %.067, %156
  %158 = select i1 %157, i32 1020623647, i32 1107598781
  br label %.backedge

159:                                              ; preds = %9
  %160 = sext i32 %.069 to i64
  %161 = sext i32 %.067 to i64
  %162 = getelementptr inbounds [60 x [60 x i8]], [60 x [60 x i8]]* @arr, i64 0, i64 %160, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = icmp eq i8 %163, 46
  %165 = select i1 %164, i32 -9328830, i32 -487721049
  br label %.backedge

166:                                              ; preds = %9
  br label %.backedge

167:                                              ; preds = %9
  %168 = icmp slt i32 %.065, 2
  %169 = select i1 %168, i32 -1485550380, i32 157549774
  br label %.backedge

170:                                              ; preds = %9
  %171 = load i32, i32* @x.2, align 4
  %172 = load i32, i32* @y.3, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 -376157557, i32 -209054683
  br label %.backedge

180:                                              ; preds = %9
  %181 = load i32, i32* @x.2, align 4
  %182 = load i32, i32* @y.3, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 145290989, i32 -209054683
  br label %.backedge

190:                                              ; preds = %9
  br label %.backedge

191:                                              ; preds = %9
  %192 = icmp slt i32 %.063, 2
  %193 = select i1 %192, i32 -622802825, i32 -1867159320
  br label %.backedge

194:                                              ; preds = %9
  %195 = load i32, i32* @x.2, align 4
  %196 = load i32, i32* @y.3, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 -282515622, i32 -862501302
  br label %.backedge

204:                                              ; preds = %9
  %205 = add i32 %.065, %.069
  %206 = icmp sgt i32 %205, -1
  store i1 %206, i1* %3, align 1
  %207 = load i32, i32* @x.2, align 4
  %208 = load i32, i32* @y.3, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 32483096, i32 -862501302
  br label %.backedge

216:                                              ; preds = %9
  %.0..0..0.56 = load volatile i1, i1* %3, align 1
  %217 = select i1 %.0..0..0.56, i32 -1097636202, i32 -1618962781
  br label %.backedge

218:                                              ; preds = %9
  %219 = add i32 %.065, %.069
  %220 = load i32, i32* %6, align 4
  %221 = icmp slt i32 %219, %220
  %222 = select i1 %221, i32 -1327078832, i32 -1618962781
  br label %.backedge

223:                                              ; preds = %9
  %224 = add i32 %.063, %.067
  %225 = icmp sgt i32 %224, -1
  %226 = select i1 %225, i32 881240209, i32 -1618962781
  br label %.backedge

227:                                              ; preds = %9
  %228 = add i32 %.063, %.067
  %229 = load i32, i32* %7, align 4
  %230 = icmp slt i32 %228, %229
  %231 = select i1 %230, i32 -1860726013, i32 -1618962781
  br label %.backedge

232:                                              ; preds = %9
  %233 = add i32 %.065, %.069
  %234 = sext i32 %233 to i64
  %235 = add i32 %.063, %.067
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [60 x [60 x i8]], [60 x [60 x i8]]* @arr, i64 0, i64 %234, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = icmp eq i8 %238, 35
  %240 = select i1 %239, i32 -824482349, i32 967307151
  br label %.backedge

241:                                              ; preds = %9
  %242 = load i32, i32* @x.2, align 4
  %243 = load i32, i32* @y.3, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 -1065983430, i32 1787926204
  br label %.backedge

251:                                              ; preds = %9
  %252 = sext i32 %.069 to i64
  %253 = sext i32 %.067 to i64
  %254 = getelementptr inbounds [60 x [60 x i32]], [60 x [60 x i32]]* @ans, i64 0, i64 %252, i64 %253
  %255 = load i32, i32* %254, align 4
  %256 = add i32 %255, 1
  store i32 %256, i32* %254, align 4
  %257 = load i32, i32* @x.2, align 4
  %258 = load i32, i32* @y.3, align 4
  %259 = add i32 %257, -1
  %260 = mul i32 %259, %257
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %263, %262
  %265 = select i1 %264, i32 1447784820, i32 1787926204
  br label %.backedge

266:                                              ; preds = %9
  br label %.backedge

267:                                              ; preds = %9
  br label %.backedge

268:                                              ; preds = %9
  %269 = load i32, i32* @x.2, align 4
  %270 = load i32, i32* @y.3, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 -59360899, i32 -2129245814
  br label %.backedge

278:                                              ; preds = %9
  %279 = load i32, i32* @x.2, align 4
  %280 = load i32, i32* @y.3, align 4
  %281 = add i32 %279, -1
  %282 = mul i32 %281, %279
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %285, %284
  %287 = select i1 %286, i32 2070533520, i32 -2129245814
  br label %.backedge

288:                                              ; preds = %9
  br label %.backedge

289:                                              ; preds = %9
  %.neg77 = add i32 %.063, 1
  br label %.backedge

290:                                              ; preds = %9
  br label %.backedge

291:                                              ; preds = %9
  %292 = add i32 %.065, 1
  br label %.backedge

293:                                              ; preds = %9
  br label %.backedge

294:                                              ; preds = %9
  br label %.backedge

295:                                              ; preds = %9
  %296 = load i32, i32* @x.2, align 4
  %297 = load i32, i32* @y.3, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 -1298093100, i32 387356084
  br label %.backedge

305:                                              ; preds = %9
  %306 = add i32 %.067, 1
  %307 = load i32, i32* @x.2, align 4
  %308 = load i32, i32* @y.3, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -1237171018, i32 387356084
  br label %.backedge

316:                                              ; preds = %9
  br label %.backedge

317:                                              ; preds = %9
  br label %.backedge

318:                                              ; preds = %9
  %319 = add i32 %.069, 1
  br label %.backedge

320:                                              ; preds = %9
  br label %.backedge

321:                                              ; preds = %9
  %322 = load i32, i32* %6, align 4
  %323 = icmp slt i32 %.061, %322
  %324 = select i1 %323, i32 -1346657260, i32 -864787994
  br label %.backedge

325:                                              ; preds = %9
  br label %.backedge

326:                                              ; preds = %9
  %327 = load i32, i32* @x.2, align 4
  %328 = load i32, i32* @y.3, align 4
  %329 = add i32 %327, -1
  %330 = mul i32 %329, %327
  %331 = and i32 %330, 1
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %333, %332
  %335 = select i1 %334, i32 -1342306314, i32 -1988983622
  br label %.backedge

336:                                              ; preds = %9
  %337 = load i32, i32* %7, align 4
  %338 = icmp slt i32 %.059, %337
  store i1 %338, i1* %2, align 1
  %339 = load i32, i32* @x.2, align 4
  %340 = load i32, i32* @y.3, align 4
  %341 = add i32 %339, -1
  %342 = mul i32 %341, %339
  %343 = and i32 %342, 1
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %345, %344
  %347 = select i1 %346, i32 512905446, i32 -1988983622
  br label %.backedge

348:                                              ; preds = %9
  %.0..0..0.57 = load volatile i1, i1* %2, align 1
  %349 = select i1 %.0..0..0.57, i32 349173075, i32 105749322
  br label %.backedge

350:                                              ; preds = %9
  %351 = sext i32 %.061 to i64
  %352 = sext i32 %.059 to i64
  %353 = getelementptr inbounds [60 x [60 x i8]], [60 x [60 x i8]]* @arr, i64 0, i64 %351, i64 %352
  %354 = load i8, i8* %353, align 1
  %355 = icmp eq i8 %354, 35
  %356 = select i1 %355, i32 1595748656, i32 1418939804
  br label %.backedge

357:                                              ; preds = %9
  %358 = sext i32 %.061 to i64
  %359 = sext i32 %.059 to i64
  %360 = getelementptr inbounds [60 x [60 x i8]], [60 x [60 x i8]]* @arr, i64 0, i64 %358, i64 %359
  %361 = load i8, i8* %360, align 1
  %362 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %361)
  br label %.backedge

363:                                              ; preds = %9
  %364 = sext i32 %.061 to i64
  %365 = sext i32 %.059 to i64
  %366 = getelementptr inbounds [60 x [60 x i32]], [60 x [60 x i32]]* @ans, i64 0, i64 %364, i64 %365
  %367 = load i32, i32* %366, align 4
  %368 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %367)
  br label %.backedge

369:                                              ; preds = %9
  %370 = load i32, i32* @x.2, align 4
  %371 = load i32, i32* @y.3, align 4
  %372 = add i32 %370, -1
  %373 = mul i32 %372, %370
  %374 = and i32 %373, 1
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %376, %375
  %378 = select i1 %377, i32 2024738179, i32 -1273289898
  br label %.backedge

379:                                              ; preds = %9
  %380 = load i32, i32* @x.2, align 4
  %381 = load i32, i32* @y.3, align 4
  %382 = add i32 %380, -1
  %383 = mul i32 %382, %380
  %384 = and i32 %383, 1
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %386, %385
  %388 = select i1 %387, i32 -2023607002, i32 -1273289898
  br label %.backedge

389:                                              ; preds = %9
  br label %.backedge

390:                                              ; preds = %9
  %391 = load i32, i32* @x.2, align 4
  %392 = load i32, i32* @y.3, align 4
  %393 = add i32 %391, -1
  %394 = mul i32 %393, %391
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %397, %396
  %399 = select i1 %398, i32 -526939149, i32 -905409005
  br label %.backedge

400:                                              ; preds = %9
  %401 = add i32 %.059, 1
  %402 = load i32, i32* @x.2, align 4
  %403 = load i32, i32* @y.3, align 4
  %404 = add i32 %402, -1
  %405 = mul i32 %404, %402
  %406 = and i32 %405, 1
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %408, %407
  %410 = select i1 %409, i32 254297594, i32 -905409005
  br label %.backedge

411:                                              ; preds = %9
  br label %.backedge

412:                                              ; preds = %9
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

413:                                              ; preds = %9
  %414 = load i32, i32* @x.2, align 4
  %415 = load i32, i32* @y.3, align 4
  %416 = add i32 %414, -1
  %417 = mul i32 %416, %414
  %418 = and i32 %417, 1
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %420, %419
  %422 = select i1 %421, i32 -1221894313, i32 -460295030
  br label %.backedge

423:                                              ; preds = %9
  %.neg76 = add i32 %.061, 1
  %424 = load i32, i32* @x.2, align 4
  %425 = load i32, i32* @y.3, align 4
  %426 = add i32 %424, -1
  %427 = mul i32 %426, %424
  %428 = and i32 %427, 1
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %430, %429
  %432 = select i1 %431, i32 -2121810503, i32 -460295030
  br label %.backedge

433:                                              ; preds = %9
  br label %.backedge

434:                                              ; preds = %9
  %435 = load i32, i32* @x.2, align 4
  %436 = load i32, i32* @y.3, align 4
  %437 = add i32 %435, -1
  %438 = mul i32 %437, %435
  %439 = and i32 %438, 1
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %441, %440
  %443 = select i1 %442, i32 1110668869, i32 -185166436
  br label %.backedge

444:                                              ; preds = %9
  store i32 0, i32* %1, align 4
  %445 = load i32, i32* @x.2, align 4
  %446 = load i32, i32* @y.3, align 4
  %447 = add i32 %445, -1
  %448 = mul i32 %447, %445
  %449 = and i32 %448, 1
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %451, %450
  %453 = select i1 %452, i32 -668916994, i32 -185166436
  br label %.backedge

454:                                              ; preds = %9
  %.0..0..0.58 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.58

455:                                              ; preds = %9
  br label %.backedge

456:                                              ; preds = %9
  br label %.backedge

457:                                              ; preds = %9
  %.neg75 = add i32 %.071, 1
  br label %.backedge

458:                                              ; preds = %9
  br label %.backedge

459:                                              ; preds = %9
  %460 = add i32 %.073, 1
  br label %.backedge

461:                                              ; preds = %9
  br label %.backedge

462:                                              ; preds = %9
  br label %.backedge

463:                                              ; preds = %9
  br label %.backedge

464:                                              ; preds = %9
  %465 = sext i32 %.069 to i64
  %466 = sext i32 %.067 to i64
  %467 = getelementptr inbounds [60 x [60 x i32]], [60 x [60 x i32]]* @ans, i64 0, i64 %465, i64 %466
  %468 = load i32, i32* %467, align 4
  %469 = add i32 %468, 1
  store i32 %469, i32* %467, align 4
  br label %.backedge

470:                                              ; preds = %9
  br label %.backedge

471:                                              ; preds = %9
  %472 = add i32 %.067, 1
  br label %.backedge

473:                                              ; preds = %9
  br label %.backedge

474:                                              ; preds = %9
  br label %.backedge

475:                                              ; preds = %9
  %476 = add i32 %.059, 1
  br label %.backedge

477:                                              ; preds = %9
  %.neg = add i32 %.061, 1
  br label %.backedge

478:                                              ; preds = %9
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s755345677.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
