; ModuleID = 'build_ollvm/programs/p03574/s665592524.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s665592524.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s665592524.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 364462646, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 364462646, label %11
    i32 -476378510, label %14
    i32 -2007412015, label %25
    i32 -1270523554, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -476378510, i32 -1270523554
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -2007412015, i32 -1270523554
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -476378510, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i1, align 1
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %13 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %16
  %18 = bitcast i8* %17 to %"class.std::basic_ios"*
  %19 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %18, %"class.std::basic_ostream"* null)
  %20 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %23
  %25 = bitcast i8* %24 to %"class.std::basic_ios"*
  %26 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %25, %"class.std::basic_ostream"* null)
  %27 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %10)
  %28 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %27, i32* nonnull dereferenceable(4) %11)
  %29 = load i32, i32* %10, align 4
  %30 = zext i32 %29 to i64
  %31 = load i32, i32* %11, align 4
  %32 = zext i32 %31 to i64
  store i64 %32, i64* %9, align 8
  %.0..0..0.71 = load volatile i64, i64* %9, align 8
  %33 = mul nuw i64 %.0..0..0.71, %30
  %34 = alloca i8, i64 %33, align 16
  br label %35

35:                                               ; preds = %.backedge, %0
  %.0152 = phi i32 [ 0, %0 ], [ %.0152.be, %.backedge ]
  %.0150 = phi i32 [ undef, %0 ], [ %.0150.be, %.backedge ]
  %.0148 = phi i32 [ undef, %0 ], [ %.0148.be, %.backedge ]
  %.0146 = phi i32 [ undef, %0 ], [ %.0146.be, %.backedge ]
  %.0144 = phi i32 [ undef, %0 ], [ %.0144.be, %.backedge ]
  %.0142 = phi i32 [ undef, %0 ], [ %.0142.be, %.backedge ]
  %.0140 = phi i32 [ undef, %0 ], [ %.0140.be, %.backedge ]
  %.0138 = phi i32 [ undef, %0 ], [ %.0138.be, %.backedge ]
  %.0 = phi i32 [ 34555331, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 34555331, label %36
    i32 -862964754, label %40
    i32 -1131651481, label %41
    i32 -2072053034, label %51
    i32 -143539789, label %63
    i32 1446887884, label %65
    i32 -791092049, label %71
    i32 1261015044, label %73
    i32 1524035330, label %83
    i32 -1151484503, label %93
    i32 2034818796, label %94
    i32 1054622457, label %104
    i32 1538972231, label %115
    i32 -1574338150, label %116
    i32 1312322719, label %123
    i32 972604754, label %127
    i32 -1703627406, label %128
    i32 1479737327, label %138
    i32 -1367965143, label %150
    i32 -1061571963, label %152
    i32 448950315, label %162
    i32 2031479215, label %176
    i32 839137570, label %177
    i32 -1913112444, label %187
    i32 2055926772, label %198
    i32 -96584073, label %199
    i32 -473664970, label %200
    i32 1554523754, label %202
    i32 366529194, label %203
    i32 813501179, label %207
    i32 2046435505, label %208
    i32 931967186, label %212
    i32 -984193072, label %222
    i32 312202048, label %238
    i32 1608229543, label %240
    i32 -1242730265, label %250
    i32 -501475232, label %262
    i32 1000843950, label %264
    i32 -1643798009, label %276
    i32 -66653493, label %286
    i32 -242320062, label %304
    i32 1515267698, label %305
    i32 -579816053, label %309
    i32 -256320419, label %318
    i32 -30247731, label %319
    i32 1700050419, label %323
    i32 2047603895, label %330
    i32 2026860865, label %335
    i32 364395603, label %345
    i32 -2029527949, label %365
    i32 -486427207, label %367
    i32 416078469, label %374
    i32 -1156780941, label %378
    i32 463055798, label %388
    i32 1152546286, label %406
    i32 -133239221, label %407
    i32 1457200936, label %408
    i32 755726544, label %412
    i32 849015220, label %420
    i32 1939793249, label %421
    i32 -1668788536, label %422
    i32 -679951957, label %423
    i32 -2026881859, label %433
    i32 1772575115, label %443
    i32 -1379199959, label %444
    i32 154838744, label %445
    i32 266472189, label %446
    i32 2048446816, label %450
    i32 1120811973, label %451
    i32 1615288869, label %461
    i32 1858883721, label %473
    i32 -1223092377, label %475
    i32 -1564978930, label %483
    i32 -222806909, label %490
    i32 86110927, label %492
    i32 -72625607, label %502
    i32 12259065, label %512
    i32 2141818201, label %513
    i32 -35722243, label %523
    i32 360021980, label %533
    i32 -983685609, label %534
    i32 526748212, label %544
    i32 1580805696, label %555
    i32 893001744, label %556
    i32 767758085, label %566
    i32 -627277963, label %577
    i32 1185548930, label %578
    i32 -126404712, label %579
    i32 479176719, label %580
    i32 2082108939, label %581
    i32 -2127760758, label %582
    i32 531196969, label %583
    i32 1227926625, label %588
    i32 -877814745, label %589
    i32 236810254, label %590
    i32 -1702007195, label %591
    i32 -274440764, label %600
    i32 -1804004064, label %607
    i32 721948209, label %615
    i32 861061736, label %616
    i32 -134746670, label %617
    i32 1903542572, label %618
    i32 -1444683711, label %620
    i32 1654652069, label %622
  ]

.backedge:                                        ; preds = %35, %622, %620, %618, %617, %616, %615, %607, %600, %591, %590, %589, %588, %583, %582, %581, %580, %579, %577, %566, %556, %555, %544, %534, %533, %523, %513, %512, %502, %492, %490, %483, %475, %473, %461, %451, %450, %446, %445, %444, %443, %433, %423, %422, %421, %420, %412, %408, %407, %406, %388, %378, %374, %367, %365, %345, %335, %330, %323, %319, %318, %309, %305, %304, %286, %276, %264, %262, %250, %240, %238, %222, %212, %208, %207, %203, %202, %200, %199, %198, %187, %177, %176, %162, %152, %150, %138, %128, %127, %123, %116, %115, %104, %94, %93, %83, %73, %71, %65, %63, %51, %41, %40, %36
  %.0152.be = phi i32 [ %.0152, %35 ], [ %.0152, %622 ], [ %.0152, %620 ], [ %.0152, %618 ], [ %.0152, %617 ], [ %.0152, %616 ], [ %.0152, %615 ], [ %.0152, %607 ], [ %.0152, %600 ], [ %.0152, %591 ], [ %.0152, %590 ], [ %.0152, %589 ], [ %.0152, %588 ], [ %.0152, %583 ], [ %.0152, %582 ], [ %.neg160, %581 ], [ %.0152, %580 ], [ %.0152, %579 ], [ %.0152, %577 ], [ %.0152, %566 ], [ %.0152, %556 ], [ %.0152, %555 ], [ %.0152, %544 ], [ %.0152, %534 ], [ %.0152, %533 ], [ %.0152, %523 ], [ %.0152, %513 ], [ %.0152, %512 ], [ %.0152, %502 ], [ %.0152, %492 ], [ %.0152, %490 ], [ %.0152, %483 ], [ %.0152, %475 ], [ %.0152, %473 ], [ %.0152, %461 ], [ %.0152, %451 ], [ %.0152, %450 ], [ %.0152, %446 ], [ %.0152, %445 ], [ %.0152, %444 ], [ %.0152, %443 ], [ %.0152, %433 ], [ %.0152, %423 ], [ %.0152, %422 ], [ %.0152, %421 ], [ %.0152, %420 ], [ %.0152, %412 ], [ %.0152, %408 ], [ %.0152, %407 ], [ %.0152, %406 ], [ %.0152, %388 ], [ %.0152, %378 ], [ %.0152, %374 ], [ %.0152, %367 ], [ %.0152, %365 ], [ %.0152, %345 ], [ %.0152, %335 ], [ %.0152, %330 ], [ %.0152, %323 ], [ %.0152, %319 ], [ %.0152, %318 ], [ %.0152, %309 ], [ %.0152, %305 ], [ %.0152, %304 ], [ %.0152, %286 ], [ %.0152, %276 ], [ %.0152, %264 ], [ %.0152, %262 ], [ %.0152, %250 ], [ %.0152, %240 ], [ %.0152, %238 ], [ %.0152, %222 ], [ %.0152, %212 ], [ %.0152, %208 ], [ %.0152, %207 ], [ %.0152, %203 ], [ %.0152, %202 ], [ %.0152, %200 ], [ %.0152, %199 ], [ %.0152, %198 ], [ %.0152, %187 ], [ %.0152, %177 ], [ %.0152, %176 ], [ %.0152, %162 ], [ %.0152, %152 ], [ %.0152, %150 ], [ %.0152, %138 ], [ %.0152, %128 ], [ %.0152, %127 ], [ %.0152, %123 ], [ %.0152, %116 ], [ %.0152, %115 ], [ %105, %104 ], [ %.0152, %94 ], [ %.0152, %93 ], [ %.0152, %83 ], [ %.0152, %73 ], [ %.0152, %71 ], [ %.0152, %65 ], [ %.0152, %63 ], [ %.0152, %51 ], [ %.0152, %41 ], [ %.0152, %40 ], [ %.0152, %36 ]
  %.0150.be = phi i32 [ %.0150, %35 ], [ %.0150, %622 ], [ %.0150, %620 ], [ %.0150, %618 ], [ %.0150, %617 ], [ %.0150, %616 ], [ %.0150, %615 ], [ %.0150, %607 ], [ %.0150, %600 ], [ %.0150, %591 ], [ %.0150, %590 ], [ %.0150, %589 ], [ %.0150, %588 ], [ %.0150, %583 ], [ %.0150, %582 ], [ %.0150, %581 ], [ %.0150, %580 ], [ %.0150, %579 ], [ %.0150, %577 ], [ %.0150, %566 ], [ %.0150, %556 ], [ %.0150, %555 ], [ %.0150, %544 ], [ %.0150, %534 ], [ %.0150, %533 ], [ %.0150, %523 ], [ %.0150, %513 ], [ %.0150, %512 ], [ %.0150, %502 ], [ %.0150, %492 ], [ %.0150, %490 ], [ %.0150, %483 ], [ %.0150, %475 ], [ %.0150, %473 ], [ %.0150, %461 ], [ %.0150, %451 ], [ %.0150, %450 ], [ %.0150, %446 ], [ %.0150, %445 ], [ %.0150, %444 ], [ %.0150, %443 ], [ %.0150, %433 ], [ %.0150, %423 ], [ %.0150, %422 ], [ %.0150, %421 ], [ %.0150, %420 ], [ %.0150, %412 ], [ %.0150, %408 ], [ %.0150, %407 ], [ %.0150, %406 ], [ %.0150, %388 ], [ %.0150, %378 ], [ %.0150, %374 ], [ %.0150, %367 ], [ %.0150, %365 ], [ %.0150, %345 ], [ %.0150, %335 ], [ %.0150, %330 ], [ %.0150, %323 ], [ %.0150, %319 ], [ %.0150, %318 ], [ %.0150, %309 ], [ %.0150, %305 ], [ %.0150, %304 ], [ %.0150, %286 ], [ %.0150, %276 ], [ %.0150, %264 ], [ %.0150, %262 ], [ %.0150, %250 ], [ %.0150, %240 ], [ %.0150, %238 ], [ %.0150, %222 ], [ %.0150, %212 ], [ %.0150, %208 ], [ %.0150, %207 ], [ %.0150, %203 ], [ %.0150, %202 ], [ %.0150, %200 ], [ %.0150, %199 ], [ %.0150, %198 ], [ %.0150, %187 ], [ %.0150, %177 ], [ %.0150, %176 ], [ %.0150, %162 ], [ %.0150, %152 ], [ %.0150, %150 ], [ %.0150, %138 ], [ %.0150, %128 ], [ %.0150, %127 ], [ %.0150, %123 ], [ %.0150, %116 ], [ %.0150, %115 ], [ %.0150, %104 ], [ %.0150, %94 ], [ %.0150, %93 ], [ %.0150, %83 ], [ %.0150, %73 ], [ %72, %71 ], [ %.0150, %65 ], [ %.0150, %63 ], [ %.0150, %51 ], [ %.0150, %41 ], [ 0, %40 ], [ %.0150, %36 ]
  %.0148.be = phi i32 [ %.0148, %35 ], [ %.0148, %622 ], [ %.0148, %620 ], [ %.0148, %618 ], [ %.0148, %617 ], [ %.0148, %616 ], [ %.0148, %615 ], [ %.0148, %607 ], [ %.0148, %600 ], [ %.0148, %591 ], [ %.0148, %590 ], [ %.0148, %589 ], [ %.0148, %588 ], [ %.0148, %583 ], [ %.0148, %582 ], [ %.0148, %581 ], [ %.0148, %580 ], [ %.0148, %579 ], [ %.0148, %577 ], [ %.0148, %566 ], [ %.0148, %556 ], [ %.0148, %555 ], [ %.0148, %544 ], [ %.0148, %534 ], [ %.0148, %533 ], [ %.0148, %523 ], [ %.0148, %513 ], [ %.0148, %512 ], [ %.0148, %502 ], [ %.0148, %492 ], [ %.0148, %490 ], [ %.0148, %483 ], [ %.0148, %475 ], [ %.0148, %473 ], [ %.0148, %461 ], [ %.0148, %451 ], [ %.0148, %450 ], [ %.0148, %446 ], [ %.0148, %445 ], [ %.0148, %444 ], [ %.0148, %443 ], [ %.0148, %433 ], [ %.0148, %423 ], [ %.0148, %422 ], [ %.0148, %421 ], [ %.0148, %420 ], [ %.0148, %412 ], [ %.0148, %408 ], [ %.0148, %407 ], [ %.0148, %406 ], [ %.0148, %388 ], [ %.0148, %378 ], [ %.0148, %374 ], [ %.0148, %367 ], [ %.0148, %365 ], [ %.0148, %345 ], [ %.0148, %335 ], [ %.0148, %330 ], [ %.0148, %323 ], [ %.0148, %319 ], [ %.0148, %318 ], [ %.0148, %309 ], [ %.0148, %305 ], [ %.0148, %304 ], [ %.0148, %286 ], [ %.0148, %276 ], [ %.0148, %264 ], [ %.0148, %262 ], [ %.0148, %250 ], [ %.0148, %240 ], [ %.0148, %238 ], [ %.0148, %222 ], [ %.0148, %212 ], [ %.0148, %208 ], [ %.0148, %207 ], [ %.0148, %203 ], [ %.0148, %202 ], [ %201, %200 ], [ %.0148, %199 ], [ %.0148, %198 ], [ %.0148, %187 ], [ %.0148, %177 ], [ %.0148, %176 ], [ %.0148, %162 ], [ %.0148, %152 ], [ %.0148, %150 ], [ %.0148, %138 ], [ %.0148, %128 ], [ %.0148, %127 ], [ %.0148, %123 ], [ 0, %116 ], [ %.0148, %115 ], [ %.0148, %104 ], [ %.0148, %94 ], [ %.0148, %93 ], [ %.0148, %83 ], [ %.0148, %73 ], [ %.0148, %71 ], [ %.0148, %65 ], [ %.0148, %63 ], [ %.0148, %51 ], [ %.0148, %41 ], [ %.0148, %40 ], [ %.0148, %36 ]
  %.0146.be = phi i32 [ %.0146, %35 ], [ %.0146, %622 ], [ %.0146, %620 ], [ %.0146, %618 ], [ %.0146, %617 ], [ %.0146, %616 ], [ %.0146, %615 ], [ %.0146, %607 ], [ %.0146, %600 ], [ %.0146, %591 ], [ %.0146, %590 ], [ %.0146, %589 ], [ %.neg158, %588 ], [ %.0146, %583 ], [ %.0146, %582 ], [ %.0146, %581 ], [ %.0146, %580 ], [ %.0146, %579 ], [ %.0146, %577 ], [ %.0146, %566 ], [ %.0146, %556 ], [ %.0146, %555 ], [ %.0146, %544 ], [ %.0146, %534 ], [ %.0146, %533 ], [ %.0146, %523 ], [ %.0146, %513 ], [ %.0146, %512 ], [ %.0146, %502 ], [ %.0146, %492 ], [ %.0146, %490 ], [ %.0146, %483 ], [ %.0146, %475 ], [ %.0146, %473 ], [ %.0146, %461 ], [ %.0146, %451 ], [ %.0146, %450 ], [ %.0146, %446 ], [ %.0146, %445 ], [ %.0146, %444 ], [ %.0146, %443 ], [ %.0146, %433 ], [ %.0146, %423 ], [ %.0146, %422 ], [ %.0146, %421 ], [ %.0146, %420 ], [ %.0146, %412 ], [ %.0146, %408 ], [ %.0146, %407 ], [ %.0146, %406 ], [ %.0146, %388 ], [ %.0146, %378 ], [ %.0146, %374 ], [ %.0146, %367 ], [ %.0146, %365 ], [ %.0146, %345 ], [ %.0146, %335 ], [ %.0146, %330 ], [ %.0146, %323 ], [ %.0146, %319 ], [ %.0146, %318 ], [ %.0146, %309 ], [ %.0146, %305 ], [ %.0146, %304 ], [ %.0146, %286 ], [ %.0146, %276 ], [ %.0146, %264 ], [ %.0146, %262 ], [ %.0146, %250 ], [ %.0146, %240 ], [ %.0146, %238 ], [ %.0146, %222 ], [ %.0146, %212 ], [ %.0146, %208 ], [ %.0146, %207 ], [ %.0146, %203 ], [ %.0146, %202 ], [ %.0146, %200 ], [ %.0146, %199 ], [ %.0146, %198 ], [ %188, %187 ], [ %.0146, %177 ], [ %.0146, %176 ], [ %.0146, %162 ], [ %.0146, %152 ], [ %.0146, %150 ], [ %.0146, %138 ], [ %.0146, %128 ], [ 0, %127 ], [ %.0146, %123 ], [ %.0146, %116 ], [ %.0146, %115 ], [ %.0146, %104 ], [ %.0146, %94 ], [ %.0146, %93 ], [ %.0146, %83 ], [ %.0146, %73 ], [ %.0146, %71 ], [ %.0146, %65 ], [ %.0146, %63 ], [ %.0146, %51 ], [ %.0146, %41 ], [ %.0146, %40 ], [ %.0146, %36 ]
  %.0144.be = phi i32 [ %.0144, %35 ], [ %.0144, %622 ], [ %.0144, %620 ], [ %.0144, %618 ], [ %.0144, %617 ], [ %.0144, %616 ], [ %.0144, %615 ], [ %.0144, %607 ], [ %.0144, %600 ], [ %.0144, %591 ], [ %.0144, %590 ], [ %.0144, %589 ], [ %.0144, %588 ], [ %.0144, %583 ], [ %.0144, %582 ], [ %.0144, %581 ], [ %.0144, %580 ], [ %.0144, %579 ], [ %.0144, %577 ], [ %.0144, %566 ], [ %.0144, %556 ], [ %.0144, %555 ], [ %.0144, %544 ], [ %.0144, %534 ], [ %.0144, %533 ], [ %.0144, %523 ], [ %.0144, %513 ], [ %.0144, %512 ], [ %.0144, %502 ], [ %.0144, %492 ], [ %.0144, %490 ], [ %.0144, %483 ], [ %.0144, %475 ], [ %.0144, %473 ], [ %.0144, %461 ], [ %.0144, %451 ], [ %.0144, %450 ], [ %.0144, %446 ], [ %.0144, %445 ], [ %.neg164, %444 ], [ %.0144, %443 ], [ %.0144, %433 ], [ %.0144, %423 ], [ %.0144, %422 ], [ %.0144, %421 ], [ %.0144, %420 ], [ %.0144, %412 ], [ %.0144, %408 ], [ %.0144, %407 ], [ %.0144, %406 ], [ %.0144, %388 ], [ %.0144, %378 ], [ %.0144, %374 ], [ %.0144, %367 ], [ %.0144, %365 ], [ %.0144, %345 ], [ %.0144, %335 ], [ %.0144, %330 ], [ %.0144, %323 ], [ %.0144, %319 ], [ %.0144, %318 ], [ %.0144, %309 ], [ %.0144, %305 ], [ %.0144, %304 ], [ %.0144, %286 ], [ %.0144, %276 ], [ %.0144, %264 ], [ %.0144, %262 ], [ %.0144, %250 ], [ %.0144, %240 ], [ %.0144, %238 ], [ %.0144, %222 ], [ %.0144, %212 ], [ %.0144, %208 ], [ %.0144, %207 ], [ %.0144, %203 ], [ 0, %202 ], [ %.0144, %200 ], [ %.0144, %199 ], [ %.0144, %198 ], [ %.0144, %187 ], [ %.0144, %177 ], [ %.0144, %176 ], [ %.0144, %162 ], [ %.0144, %152 ], [ %.0144, %150 ], [ %.0144, %138 ], [ %.0144, %128 ], [ %.0144, %127 ], [ %.0144, %123 ], [ %.0144, %116 ], [ %.0144, %115 ], [ %.0144, %104 ], [ %.0144, %94 ], [ %.0144, %93 ], [ %.0144, %83 ], [ %.0144, %73 ], [ %.0144, %71 ], [ %.0144, %65 ], [ %.0144, %63 ], [ %.0144, %51 ], [ %.0144, %41 ], [ %.0144, %40 ], [ %.0144, %36 ]
  %.0142.be = phi i32 [ %.0142, %35 ], [ %.0142, %622 ], [ %.0142, %620 ], [ %.0142, %618 ], [ %.0142, %617 ], [ %.0142, %616 ], [ %.0142, %615 ], [ %.0142, %607 ], [ %.0142, %600 ], [ %.0142, %591 ], [ %.0142, %590 ], [ %.0142, %589 ], [ %.0142, %588 ], [ %.0142, %583 ], [ %.0142, %582 ], [ %.0142, %581 ], [ %.0142, %580 ], [ %.0142, %579 ], [ %.0142, %577 ], [ %.0142, %566 ], [ %.0142, %556 ], [ %.0142, %555 ], [ %.0142, %544 ], [ %.0142, %534 ], [ %.0142, %533 ], [ %.0142, %523 ], [ %.0142, %513 ], [ %.0142, %512 ], [ %.0142, %502 ], [ %.0142, %492 ], [ %.0142, %490 ], [ %.0142, %483 ], [ %.0142, %475 ], [ %.0142, %473 ], [ %.0142, %461 ], [ %.0142, %451 ], [ %.0142, %450 ], [ %.0142, %446 ], [ %.0142, %445 ], [ %.0142, %444 ], [ %.0142, %443 ], [ %.0142, %433 ], [ %.0142, %423 ], [ %.neg165, %422 ], [ %.0142, %421 ], [ %.0142, %420 ], [ %.0142, %412 ], [ %.0142, %408 ], [ %.0142, %407 ], [ %.0142, %406 ], [ %.0142, %388 ], [ %.0142, %378 ], [ %.0142, %374 ], [ %.0142, %367 ], [ %.0142, %365 ], [ %.0142, %345 ], [ %.0142, %335 ], [ %.0142, %330 ], [ %.0142, %323 ], [ %.0142, %319 ], [ %.0142, %318 ], [ %.0142, %309 ], [ %.0142, %305 ], [ %.0142, %304 ], [ %.0142, %286 ], [ %.0142, %276 ], [ %.0142, %264 ], [ %.0142, %262 ], [ %.0142, %250 ], [ %.0142, %240 ], [ %.0142, %238 ], [ %.0142, %222 ], [ %.0142, %212 ], [ %.0142, %208 ], [ 0, %207 ], [ %.0142, %203 ], [ %.0142, %202 ], [ %.0142, %200 ], [ %.0142, %199 ], [ %.0142, %198 ], [ %.0142, %187 ], [ %.0142, %177 ], [ %.0142, %176 ], [ %.0142, %162 ], [ %.0142, %152 ], [ %.0142, %150 ], [ %.0142, %138 ], [ %.0142, %128 ], [ %.0142, %127 ], [ %.0142, %123 ], [ %.0142, %116 ], [ %.0142, %115 ], [ %.0142, %104 ], [ %.0142, %94 ], [ %.0142, %93 ], [ %.0142, %83 ], [ %.0142, %73 ], [ %.0142, %71 ], [ %.0142, %65 ], [ %.0142, %63 ], [ %.0142, %51 ], [ %.0142, %41 ], [ %.0142, %40 ], [ %.0142, %36 ]
  %.0140.be = phi i32 [ %.0140, %35 ], [ %.neg, %622 ], [ %.0140, %620 ], [ %.0140, %618 ], [ %.0140, %617 ], [ %.0140, %616 ], [ %.0140, %615 ], [ %.0140, %607 ], [ %.0140, %600 ], [ %.0140, %591 ], [ %.0140, %590 ], [ %.0140, %589 ], [ %.0140, %588 ], [ %.0140, %583 ], [ %.0140, %582 ], [ %.0140, %581 ], [ %.0140, %580 ], [ %.0140, %579 ], [ %.0140, %577 ], [ %567, %566 ], [ %.0140, %556 ], [ %.0140, %555 ], [ %.0140, %544 ], [ %.0140, %534 ], [ %.0140, %533 ], [ %.0140, %523 ], [ %.0140, %513 ], [ %.0140, %512 ], [ %.0140, %502 ], [ %.0140, %492 ], [ %.0140, %490 ], [ %.0140, %483 ], [ %.0140, %475 ], [ %.0140, %473 ], [ %.0140, %461 ], [ %.0140, %451 ], [ %.0140, %450 ], [ %.0140, %446 ], [ 0, %445 ], [ %.0140, %444 ], [ %.0140, %443 ], [ %.0140, %433 ], [ %.0140, %423 ], [ %.0140, %422 ], [ %.0140, %421 ], [ %.0140, %420 ], [ %.0140, %412 ], [ %.0140, %408 ], [ %.0140, %407 ], [ %.0140, %406 ], [ %.0140, %388 ], [ %.0140, %378 ], [ %.0140, %374 ], [ %.0140, %367 ], [ %.0140, %365 ], [ %.0140, %345 ], [ %.0140, %335 ], [ %.0140, %330 ], [ %.0140, %323 ], [ %.0140, %319 ], [ %.0140, %318 ], [ %.0140, %309 ], [ %.0140, %305 ], [ %.0140, %304 ], [ %.0140, %286 ], [ %.0140, %276 ], [ %.0140, %264 ], [ %.0140, %262 ], [ %.0140, %250 ], [ %.0140, %240 ], [ %.0140, %238 ], [ %.0140, %222 ], [ %.0140, %212 ], [ %.0140, %208 ], [ %.0140, %207 ], [ %.0140, %203 ], [ %.0140, %202 ], [ %.0140, %200 ], [ %.0140, %199 ], [ %.0140, %198 ], [ %.0140, %187 ], [ %.0140, %177 ], [ %.0140, %176 ], [ %.0140, %162 ], [ %.0140, %152 ], [ %.0140, %150 ], [ %.0140, %138 ], [ %.0140, %128 ], [ %.0140, %127 ], [ %.0140, %123 ], [ %.0140, %116 ], [ %.0140, %115 ], [ %.0140, %104 ], [ %.0140, %94 ], [ %.0140, %93 ], [ %.0140, %83 ], [ %.0140, %73 ], [ %.0140, %71 ], [ %.0140, %65 ], [ %.0140, %63 ], [ %.0140, %51 ], [ %.0140, %41 ], [ %.0140, %40 ], [ %.0140, %36 ]
  %.0138.be = phi i32 [ %.0138, %35 ], [ %.0138, %622 ], [ %.0138, %620 ], [ %619, %618 ], [ %.0138, %617 ], [ %.0138, %616 ], [ %.0138, %615 ], [ %.0138, %607 ], [ %.0138, %600 ], [ %.0138, %591 ], [ %.0138, %590 ], [ %.0138, %589 ], [ %.0138, %588 ], [ %.0138, %583 ], [ %.0138, %582 ], [ %.0138, %581 ], [ %.0138, %580 ], [ %.0138, %579 ], [ %.0138, %577 ], [ %.0138, %566 ], [ %.0138, %556 ], [ %.0138, %555 ], [ %.0138, %544 ], [ %.0138, %534 ], [ %.0138, %533 ], [ %.neg161, %523 ], [ %.0138, %513 ], [ %.0138, %512 ], [ %.0138, %502 ], [ %.0138, %492 ], [ %.0138, %490 ], [ %.0138, %483 ], [ %.0138, %475 ], [ %.0138, %473 ], [ %.0138, %461 ], [ %.0138, %451 ], [ 0, %450 ], [ %.0138, %446 ], [ %.0138, %445 ], [ %.0138, %444 ], [ %.0138, %443 ], [ %.0138, %433 ], [ %.0138, %423 ], [ %.0138, %422 ], [ %.0138, %421 ], [ %.0138, %420 ], [ %.0138, %412 ], [ %.0138, %408 ], [ %.0138, %407 ], [ %.0138, %406 ], [ %.0138, %388 ], [ %.0138, %378 ], [ %.0138, %374 ], [ %.0138, %367 ], [ %.0138, %365 ], [ %.0138, %345 ], [ %.0138, %335 ], [ %.0138, %330 ], [ %.0138, %323 ], [ %.0138, %319 ], [ %.0138, %318 ], [ %.0138, %309 ], [ %.0138, %305 ], [ %.0138, %304 ], [ %.0138, %286 ], [ %.0138, %276 ], [ %.0138, %264 ], [ %.0138, %262 ], [ %.0138, %250 ], [ %.0138, %240 ], [ %.0138, %238 ], [ %.0138, %222 ], [ %.0138, %212 ], [ %.0138, %208 ], [ %.0138, %207 ], [ %.0138, %203 ], [ %.0138, %202 ], [ %.0138, %200 ], [ %.0138, %199 ], [ %.0138, %198 ], [ %.0138, %187 ], [ %.0138, %177 ], [ %.0138, %176 ], [ %.0138, %162 ], [ %.0138, %152 ], [ %.0138, %150 ], [ %.0138, %138 ], [ %.0138, %128 ], [ %.0138, %127 ], [ %.0138, %123 ], [ %.0138, %116 ], [ %.0138, %115 ], [ %.0138, %104 ], [ %.0138, %94 ], [ %.0138, %93 ], [ %.0138, %83 ], [ %.0138, %73 ], [ %.0138, %71 ], [ %.0138, %65 ], [ %.0138, %63 ], [ %.0138, %51 ], [ %.0138, %41 ], [ %.0138, %40 ], [ %.0138, %36 ]
  %.0.be = phi i32 [ %.0, %35 ], [ 767758085, %622 ], [ 526748212, %620 ], [ -35722243, %618 ], [ -72625607, %617 ], [ 1615288869, %616 ], [ -2026881859, %615 ], [ 463055798, %607 ], [ 364395603, %600 ], [ -66653493, %591 ], [ -1242730265, %590 ], [ -984193072, %589 ], [ -1913112444, %588 ], [ 448950315, %583 ], [ 1479737327, %582 ], [ 1054622457, %581 ], [ 1524035330, %580 ], [ -2072053034, %579 ], [ 266472189, %577 ], [ %576, %566 ], [ %565, %556 ], [ 893001744, %555 ], [ %554, %544 ], [ %543, %534 ], [ 1120811973, %533 ], [ %532, %523 ], [ %522, %513 ], [ 2141818201, %512 ], [ %511, %502 ], [ %501, %492 ], [ 86110927, %490 ], [ 86110927, %483 ], [ %482, %475 ], [ %474, %473 ], [ %472, %461 ], [ %460, %451 ], [ 1120811973, %450 ], [ %449, %446 ], [ 266472189, %445 ], [ 366529194, %444 ], [ -1379199959, %443 ], [ %442, %433 ], [ %432, %423 ], [ 2046435505, %422 ], [ -1668788536, %421 ], [ 1939793249, %420 ], [ 849015220, %412 ], [ %411, %408 ], [ 1457200936, %407 ], [ -133239221, %406 ], [ %405, %388 ], [ %387, %378 ], [ %377, %374 ], [ 416078469, %367 ], [ %366, %365 ], [ %364, %345 ], [ %344, %335 ], [ %334, %330 ], [ 2047603895, %323 ], [ %322, %319 ], [ -30247731, %318 ], [ -256320419, %309 ], [ %308, %305 ], [ 1515267698, %304 ], [ %303, %286 ], [ %285, %276 ], [ %275, %264 ], [ %263, %262 ], [ %261, %250 ], [ %249, %240 ], [ %239, %238 ], [ %237, %222 ], [ %221, %212 ], [ %211, %208 ], [ 2046435505, %207 ], [ %206, %203 ], [ 366529194, %202 ], [ 1312322719, %200 ], [ -473664970, %199 ], [ -1703627406, %198 ], [ %197, %187 ], [ %186, %177 ], [ 839137570, %176 ], [ %175, %162 ], [ %161, %152 ], [ %151, %150 ], [ %149, %138 ], [ %137, %128 ], [ -1703627406, %127 ], [ %126, %123 ], [ 1312322719, %116 ], [ 34555331, %115 ], [ %114, %104 ], [ %103, %94 ], [ 2034818796, %93 ], [ %92, %83 ], [ %82, %73 ], [ -1131651481, %71 ], [ -791092049, %65 ], [ %64, %63 ], [ %62, %51 ], [ %50, %41 ], [ -1131651481, %40 ], [ %39, %36 ]
  br label %35

36:                                               ; preds = %35
  %37 = load i32, i32* %10, align 4
  %38 = icmp slt i32 %.0152, %37
  %39 = select i1 %38, i32 -862964754, i32 -1574338150
  br label %.backedge

40:                                               ; preds = %35
  br label %.backedge

41:                                               ; preds = %35
  %42 = load i32, i32* @x.1, align 4
  %43 = load i32, i32* @y.2, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -2072053034, i32 -126404712
  br label %.backedge

51:                                               ; preds = %35
  %52 = load i32, i32* %11, align 4
  %53 = icmp slt i32 %.0150, %52
  store i1 %53, i1* %8, align 1
  %54 = load i32, i32* @x.1, align 4
  %55 = load i32, i32* @y.2, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -143539789, i32 -126404712
  br label %.backedge

63:                                               ; preds = %35
  %.0..0..0.83 = load volatile i1, i1* %8, align 1
  %64 = select i1 %.0..0..0.83, i32 1446887884, i32 1261015044
  br label %.backedge

65:                                               ; preds = %35
  %66 = sext i32 %.0152 to i64
  %.0..0..0.72 = load volatile i64, i64* %9, align 8
  %67 = mul nsw i64 %.0..0..0.72, %66
  %68 = sext i32 %.0150 to i64
  %.idx180 = add nsw i64 %67, %68
  %69 = getelementptr inbounds i8, i8* %34, i64 %.idx180
  %70 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %69)
  br label %.backedge

71:                                               ; preds = %35
  %72 = add i32 %.0150, 1
  br label %.backedge

73:                                               ; preds = %35
  %74 = load i32, i32* @x.1, align 4
  %75 = load i32, i32* @y.2, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 1524035330, i32 479176719
  br label %.backedge

83:                                               ; preds = %35
  %84 = load i32, i32* @x.1, align 4
  %85 = load i32, i32* @y.2, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 -1151484503, i32 479176719
  br label %.backedge

93:                                               ; preds = %35
  br label %.backedge

94:                                               ; preds = %35
  %95 = load i32, i32* @x.1, align 4
  %96 = load i32, i32* @y.2, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 1054622457, i32 2082108939
  br label %.backedge

104:                                              ; preds = %35
  %105 = add i32 %.0152, 1
  %106 = load i32, i32* @x.1, align 4
  %107 = load i32, i32* @y.2, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 1538972231, i32 2082108939
  br label %.backedge

115:                                              ; preds = %35
  br label %.backedge

116:                                              ; preds = %35
  %117 = load i32, i32* %10, align 4
  %118 = zext i32 %117 to i64
  %119 = load i32, i32* %11, align 4
  %120 = zext i32 %119 to i64
  store i64 %120, i64* %7, align 8
  %.0..0..0.84 = load volatile i64, i64* %7, align 8
  %121 = mul nuw i64 %.0..0..0.84, %118
  %122 = alloca i32, i64 %121, align 16
  store i32* %122, i32** %6, align 8
  br label %.backedge

123:                                              ; preds = %35
  %124 = load i32, i32* %10, align 4
  %125 = icmp slt i32 %.0148, %124
  %126 = select i1 %125, i32 972604754, i32 1554523754
  br label %.backedge

127:                                              ; preds = %35
  br label %.backedge

128:                                              ; preds = %35
  %129 = load i32, i32* @x.1, align 4
  %130 = load i32, i32* @y.2, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 1479737327, i32 -2127760758
  br label %.backedge

138:                                              ; preds = %35
  %139 = load i32, i32* %11, align 4
  %140 = icmp slt i32 %.0146, %139
  store i1 %140, i1* %5, align 1
  %141 = load i32, i32* @x.1, align 4
  %142 = load i32, i32* @y.2, align 4
  %143 = add i32 %141, -1
  %144 = mul i32 %143, %141
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %147, %146
  %149 = select i1 %148, i32 -1367965143, i32 -2127760758
  br label %.backedge

150:                                              ; preds = %35
  %.0..0..0.133 = load volatile i1, i1* %5, align 1
  %151 = select i1 %.0..0..0.133, i32 -1061571963, i32 -96584073
  br label %.backedge

152:                                              ; preds = %35
  %153 = load i32, i32* @x.1, align 4
  %154 = load i32, i32* @y.2, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 448950315, i32 531196969
  br label %.backedge

162:                                              ; preds = %35
  %163 = sext i32 %.0148 to i64
  %.0..0..0.85 = load volatile i64, i64* %7, align 8
  %164 = mul nsw i64 %.0..0..0.85, %163
  %.0..0..0.119 = load volatile i32*, i32** %6, align 8
  %165 = sext i32 %.0146 to i64
  %.idx179 = add nsw i64 %164, %165
  %166 = getelementptr inbounds i32, i32* %.0..0..0.119, i64 %.idx179
  store i32 0, i32* %166, align 4
  %167 = load i32, i32* @x.1, align 4
  %168 = load i32, i32* @y.2, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 2031479215, i32 531196969
  br label %.backedge

176:                                              ; preds = %35
  br label %.backedge

177:                                              ; preds = %35
  %178 = load i32, i32* @x.1, align 4
  %179 = load i32, i32* @y.2, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 -1913112444, i32 1227926625
  br label %.backedge

187:                                              ; preds = %35
  %188 = add i32 %.0146, 1
  %189 = load i32, i32* @x.1, align 4
  %190 = load i32, i32* @y.2, align 4
  %191 = add i32 %189, -1
  %192 = mul i32 %191, %189
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %195, %194
  %197 = select i1 %196, i32 2055926772, i32 1227926625
  br label %.backedge

198:                                              ; preds = %35
  br label %.backedge

199:                                              ; preds = %35
  br label %.backedge

200:                                              ; preds = %35
  %201 = add i32 %.0148, 1
  br label %.backedge

202:                                              ; preds = %35
  br label %.backedge

203:                                              ; preds = %35
  %204 = load i32, i32* %10, align 4
  %205 = icmp slt i32 %.0144, %204
  %206 = select i1 %205, i32 813501179, i32 154838744
  br label %.backedge

207:                                              ; preds = %35
  br label %.backedge

208:                                              ; preds = %35
  %209 = load i32, i32* %11, align 4
  %210 = icmp slt i32 %.0142, %209
  %211 = select i1 %210, i32 931967186, i32 -679951957
  br label %.backedge

212:                                              ; preds = %35
  %213 = load i32, i32* @x.1, align 4
  %214 = load i32, i32* @y.2, align 4
  %215 = add i32 %213, -1
  %216 = mul i32 %215, %213
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %219, %218
  %221 = select i1 %220, i32 -984193072, i32 -877814745
  br label %.backedge

222:                                              ; preds = %35
  %223 = sext i32 %.0144 to i64
  %.0..0..0.73 = load volatile i64, i64* %9, align 8
  %224 = mul nsw i64 %.0..0..0.73, %223
  %225 = sext i32 %.0142 to i64
  %.idx178 = add nsw i64 %224, %225
  %226 = getelementptr inbounds i8, i8* %34, i64 %.idx178
  %227 = load i8, i8* %226, align 1
  %228 = icmp eq i8 %227, 35
  store i1 %228, i1* %4, align 1
  %229 = load i32, i32* @x.1, align 4
  %230 = load i32, i32* @y.2, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 312202048, i32 -877814745
  br label %.backedge

238:                                              ; preds = %35
  %.0..0..0.134 = load volatile i1, i1* %4, align 1
  %239 = select i1 %.0..0..0.134, i32 1608229543, i32 1939793249
  br label %.backedge

240:                                              ; preds = %35
  %241 = load i32, i32* @x.1, align 4
  %242 = load i32, i32* @y.2, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 -1242730265, i32 236810254
  br label %.backedge

250:                                              ; preds = %35
  %251 = add i32 %.0144, -1
  %252 = icmp sgt i32 %251, -1
  store i1 %252, i1* %3, align 1
  %253 = load i32, i32* @x.1, align 4
  %254 = load i32, i32* @y.2, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 -501475232, i32 236810254
  br label %.backedge

262:                                              ; preds = %35
  %.0..0..0.135 = load volatile i1, i1* %3, align 1
  %263 = select i1 %.0..0..0.135, i32 1000843950, i32 -30247731
  br label %.backedge

264:                                              ; preds = %35
  %265 = add i32 %.0144, -1
  %266 = sext i32 %265 to i64
  %.0..0..0.86 = load volatile i64, i64* %7, align 8
  %267 = mul nsw i64 %.0..0..0.86, %266
  %.0..0..0.120 = load volatile i32*, i32** %6, align 8
  %268 = sext i32 %.0142 to i64
  %.idx177 = add nsw i64 %267, %268
  %269 = getelementptr inbounds i32, i32* %.0..0..0.120, i64 %.idx177
  %270 = load i32, i32* %269, align 4
  %271 = add i32 %270, 1
  store i32 %271, i32* %269, align 4
  %272 = add i32 %.0142, 1
  %273 = load i32, i32* %11, align 4
  %274 = icmp slt i32 %272, %273
  %275 = select i1 %274, i32 -1643798009, i32 1515267698
  br label %.backedge

276:                                              ; preds = %35
  %277 = load i32, i32* @x.1, align 4
  %278 = load i32, i32* @y.2, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 -66653493, i32 -1702007195
  br label %.backedge

286:                                              ; preds = %35
  %287 = add i32 %.0144, -1
  %288 = sext i32 %287 to i64
  %.0..0..0.87 = load volatile i64, i64* %7, align 8
  %289 = mul nsw i64 %.0..0..0.87, %288
  %.0..0..0.121 = load volatile i32*, i32** %6, align 8
  %290 = add i32 %.0142, 1
  %291 = sext i32 %290 to i64
  %.idx176 = add nsw i64 %289, %291
  %292 = getelementptr inbounds i32, i32* %.0..0..0.121, i64 %.idx176
  %293 = load i32, i32* %292, align 4
  %294 = add i32 %293, 1
  store i32 %294, i32* %292, align 4
  %295 = load i32, i32* @x.1, align 4
  %296 = load i32, i32* @y.2, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 -242320062, i32 -1702007195
  br label %.backedge

304:                                              ; preds = %35
  br label %.backedge

305:                                              ; preds = %35
  %306 = add i32 %.0142, -1
  %307 = icmp sgt i32 %306, -1
  %308 = select i1 %307, i32 -579816053, i32 -256320419
  br label %.backedge

309:                                              ; preds = %35
  %310 = add i32 %.0144, -1
  %311 = sext i32 %310 to i64
  %.0..0..0.88 = load volatile i64, i64* %7, align 8
  %312 = mul nsw i64 %.0..0..0.88, %311
  %.0..0..0.122 = load volatile i32*, i32** %6, align 8
  %313 = add i32 %.0142, -1
  %314 = sext i32 %313 to i64
  %.idx175 = add nsw i64 %312, %314
  %315 = getelementptr inbounds i32, i32* %.0..0..0.122, i64 %.idx175
  %316 = load i32, i32* %315, align 4
  %317 = add i32 %316, 1
  store i32 %317, i32* %315, align 4
  br label %.backedge

318:                                              ; preds = %35
  br label %.backedge

319:                                              ; preds = %35
  %320 = add i32 %.0142, -1
  %321 = icmp sgt i32 %320, -1
  %322 = select i1 %321, i32 1700050419, i32 2047603895
  br label %.backedge

323:                                              ; preds = %35
  %324 = sext i32 %.0144 to i64
  %.0..0..0.89 = load volatile i64, i64* %7, align 8
  %325 = mul nsw i64 %.0..0..0.89, %324
  %.0..0..0.123 = load volatile i32*, i32** %6, align 8
  %326 = add i32 %.0142, -1
  %327 = sext i32 %326 to i64
  %.idx173 = add nsw i64 %325, %327
  %328 = getelementptr inbounds i32, i32* %.0..0..0.123, i64 %.idx173
  %329 = load i32, i32* %328, align 4
  %.neg174 = add i32 %329, 1
  store i32 %.neg174, i32* %328, align 4
  br label %.backedge

330:                                              ; preds = %35
  %331 = add i32 %.0144, 1
  %332 = load i32, i32* %10, align 4
  %333 = icmp slt i32 %331, %332
  %334 = select i1 %333, i32 2026860865, i32 1457200936
  br label %.backedge

335:                                              ; preds = %35
  %336 = load i32, i32* @x.1, align 4
  %337 = load i32, i32* @y.2, align 4
  %338 = add i32 %336, -1
  %339 = mul i32 %338, %336
  %340 = and i32 %339, 1
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %342, %341
  %344 = select i1 %343, i32 364395603, i32 -274440764
  br label %.backedge

345:                                              ; preds = %35
  %346 = add i32 %.0144, 1
  %347 = sext i32 %346 to i64
  %.0..0..0.90 = load volatile i64, i64* %7, align 8
  %348 = mul nsw i64 %.0..0..0.90, %347
  %.0..0..0.124 = load volatile i32*, i32** %6, align 8
  %349 = sext i32 %.0142 to i64
  %.idx172 = add nsw i64 %348, %349
  %350 = getelementptr inbounds i32, i32* %.0..0..0.124, i64 %.idx172
  %351 = load i32, i32* %350, align 4
  %352 = add i32 %351, 1
  store i32 %352, i32* %350, align 4
  %353 = add i32 %.0142, 1
  %354 = load i32, i32* %11, align 4
  %355 = icmp slt i32 %353, %354
  store i1 %355, i1* %2, align 1
  %356 = load i32, i32* @x.1, align 4
  %357 = load i32, i32* @y.2, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 -2029527949, i32 -274440764
  br label %.backedge

365:                                              ; preds = %35
  %.0..0..0.136 = load volatile i1, i1* %2, align 1
  %366 = select i1 %.0..0..0.136, i32 -486427207, i32 416078469
  br label %.backedge

367:                                              ; preds = %35
  %368 = add i32 %.0144, 1
  %369 = sext i32 %368 to i64
  %.0..0..0.91 = load volatile i64, i64* %7, align 8
  %370 = mul nsw i64 %.0..0..0.91, %369
  %.0..0..0.125 = load volatile i32*, i32** %6, align 8
  %.neg169 = add i32 %.0142, 1
  %371 = sext i32 %.neg169 to i64
  %.idx170 = add nsw i64 %370, %371
  %372 = getelementptr inbounds i32, i32* %.0..0..0.125, i64 %.idx170
  %373 = load i32, i32* %372, align 4
  %.neg171 = add i32 %373, 1
  store i32 %.neg171, i32* %372, align 4
  br label %.backedge

374:                                              ; preds = %35
  %375 = add i32 %.0142, -1
  %376 = icmp sgt i32 %375, -1
  %377 = select i1 %376, i32 -1156780941, i32 -133239221
  br label %.backedge

378:                                              ; preds = %35
  %379 = load i32, i32* @x.1, align 4
  %380 = load i32, i32* @y.2, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 463055798, i32 -1804004064
  br label %.backedge

388:                                              ; preds = %35
  %389 = add i32 %.0144, 1
  %390 = sext i32 %389 to i64
  %.0..0..0.92 = load volatile i64, i64* %7, align 8
  %391 = mul nsw i64 %.0..0..0.92, %390
  %.0..0..0.126 = load volatile i32*, i32** %6, align 8
  %392 = add i32 %.0142, -1
  %393 = sext i32 %392 to i64
  %.idx168 = add nsw i64 %391, %393
  %394 = getelementptr inbounds i32, i32* %.0..0..0.126, i64 %.idx168
  %395 = load i32, i32* %394, align 4
  %396 = add i32 %395, 1
  store i32 %396, i32* %394, align 4
  %397 = load i32, i32* @x.1, align 4
  %398 = load i32, i32* @y.2, align 4
  %399 = add i32 %397, -1
  %400 = mul i32 %399, %397
  %401 = and i32 %400, 1
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %403, %402
  %405 = select i1 %404, i32 1152546286, i32 -1804004064
  br label %.backedge

406:                                              ; preds = %35
  br label %.backedge

407:                                              ; preds = %35
  br label %.backedge

408:                                              ; preds = %35
  %.neg167 = add i32 %.0142, 1
  %409 = load i32, i32* %11, align 4
  %410 = icmp slt i32 %.neg167, %409
  %411 = select i1 %410, i32 755726544, i32 849015220
  br label %.backedge

412:                                              ; preds = %35
  %413 = sext i32 %.0144 to i64
  %.0..0..0.93 = load volatile i64, i64* %7, align 8
  %414 = mul nsw i64 %.0..0..0.93, %413
  %.0..0..0.127 = load volatile i32*, i32** %6, align 8
  %415 = add i32 %.0142, 1
  %416 = sext i32 %415 to i64
  %.idx166 = add nsw i64 %414, %416
  %417 = getelementptr inbounds i32, i32* %.0..0..0.127, i64 %.idx166
  %418 = load i32, i32* %417, align 4
  %419 = add i32 %418, 1
  store i32 %419, i32* %417, align 4
  br label %.backedge

420:                                              ; preds = %35
  br label %.backedge

421:                                              ; preds = %35
  br label %.backedge

422:                                              ; preds = %35
  %.neg165 = add i32 %.0142, 1
  br label %.backedge

423:                                              ; preds = %35
  %424 = load i32, i32* @x.1, align 4
  %425 = load i32, i32* @y.2, align 4
  %426 = add i32 %424, -1
  %427 = mul i32 %426, %424
  %428 = and i32 %427, 1
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %430, %429
  %432 = select i1 %431, i32 -2026881859, i32 721948209
  br label %.backedge

433:                                              ; preds = %35
  %434 = load i32, i32* @x.1, align 4
  %435 = load i32, i32* @y.2, align 4
  %436 = add i32 %434, -1
  %437 = mul i32 %436, %434
  %438 = and i32 %437, 1
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %440, %439
  %442 = select i1 %441, i32 1772575115, i32 721948209
  br label %.backedge

443:                                              ; preds = %35
  br label %.backedge

444:                                              ; preds = %35
  %.neg164 = add i32 %.0144, 1
  br label %.backedge

445:                                              ; preds = %35
  br label %.backedge

446:                                              ; preds = %35
  %447 = load i32, i32* %10, align 4
  %448 = icmp slt i32 %.0140, %447
  %449 = select i1 %448, i32 2048446816, i32 1185548930
  br label %.backedge

450:                                              ; preds = %35
  br label %.backedge

451:                                              ; preds = %35
  %452 = load i32, i32* @x.1, align 4
  %453 = load i32, i32* @y.2, align 4
  %454 = add i32 %452, -1
  %455 = mul i32 %454, %452
  %456 = and i32 %455, 1
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %458, %457
  %460 = select i1 %459, i32 1615288869, i32 861061736
  br label %.backedge

461:                                              ; preds = %35
  %462 = load i32, i32* %11, align 4
  %463 = icmp slt i32 %.0138, %462
  store i1 %463, i1* %1, align 1
  %464 = load i32, i32* @x.1, align 4
  %465 = load i32, i32* @y.2, align 4
  %466 = add i32 %464, -1
  %467 = mul i32 %466, %464
  %468 = and i32 %467, 1
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %470, %469
  %472 = select i1 %471, i32 1858883721, i32 861061736
  br label %.backedge

473:                                              ; preds = %35
  %.0..0..0.137 = load volatile i1, i1* %1, align 1
  %474 = select i1 %.0..0..0.137, i32 -1223092377, i32 -983685609
  br label %.backedge

475:                                              ; preds = %35
  %476 = sext i32 %.0140 to i64
  %.0..0..0.74 = load volatile i64, i64* %9, align 8
  %477 = mul nsw i64 %.0..0..0.74, %476
  %478 = sext i32 %.0138 to i64
  %.idx163 = add nsw i64 %477, %478
  %479 = getelementptr inbounds i8, i8* %34, i64 %.idx163
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 46
  %482 = select i1 %481, i32 -1564978930, i32 -222806909
  br label %.backedge

483:                                              ; preds = %35
  %484 = sext i32 %.0140 to i64
  %.0..0..0.94 = load volatile i64, i64* %7, align 8
  %485 = mul nsw i64 %.0..0..0.94, %484
  %.0..0..0.128 = load volatile i32*, i32** %6, align 8
  %486 = sext i32 %.0138 to i64
  %.idx162 = add nsw i64 %485, %486
  %487 = getelementptr inbounds i32, i32* %.0..0..0.128, i64 %.idx162
  %488 = load i32, i32* %487, align 4
  %489 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %488)
  br label %.backedge

490:                                              ; preds = %35
  %491 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 35)
  br label %.backedge

492:                                              ; preds = %35
  %493 = load i32, i32* @x.1, align 4
  %494 = load i32, i32* @y.2, align 4
  %495 = add i32 %493, -1
  %496 = mul i32 %495, %493
  %497 = and i32 %496, 1
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %499, %498
  %501 = select i1 %500, i32 -72625607, i32 -134746670
  br label %.backedge

502:                                              ; preds = %35
  %503 = load i32, i32* @x.1, align 4
  %504 = load i32, i32* @y.2, align 4
  %505 = add i32 %503, -1
  %506 = mul i32 %505, %503
  %507 = and i32 %506, 1
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %509, %508
  %511 = select i1 %510, i32 12259065, i32 -134746670
  br label %.backedge

512:                                              ; preds = %35
  br label %.backedge

513:                                              ; preds = %35
  %514 = load i32, i32* @x.1, align 4
  %515 = load i32, i32* @y.2, align 4
  %516 = add i32 %514, -1
  %517 = mul i32 %516, %514
  %518 = and i32 %517, 1
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %520, %519
  %522 = select i1 %521, i32 -35722243, i32 1903542572
  br label %.backedge

523:                                              ; preds = %35
  %.neg161 = add i32 %.0138, 1
  %524 = load i32, i32* @x.1, align 4
  %525 = load i32, i32* @y.2, align 4
  %526 = add i32 %524, -1
  %527 = mul i32 %526, %524
  %528 = and i32 %527, 1
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %525, 10
  %531 = or i1 %530, %529
  %532 = select i1 %531, i32 360021980, i32 1903542572
  br label %.backedge

533:                                              ; preds = %35
  br label %.backedge

534:                                              ; preds = %35
  %535 = load i32, i32* @x.1, align 4
  %536 = load i32, i32* @y.2, align 4
  %537 = add i32 %535, -1
  %538 = mul i32 %537, %535
  %539 = and i32 %538, 1
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %541, %540
  %543 = select i1 %542, i32 526748212, i32 -1444683711
  br label %.backedge

544:                                              ; preds = %35
  %545 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %546 = load i32, i32* @x.1, align 4
  %547 = load i32, i32* @y.2, align 4
  %548 = add i32 %546, -1
  %549 = mul i32 %548, %546
  %550 = and i32 %549, 1
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %552, %551
  %554 = select i1 %553, i32 1580805696, i32 -1444683711
  br label %.backedge

555:                                              ; preds = %35
  br label %.backedge

556:                                              ; preds = %35
  %557 = load i32, i32* @x.1, align 4
  %558 = load i32, i32* @y.2, align 4
  %559 = add i32 %557, -1
  %560 = mul i32 %559, %557
  %561 = and i32 %560, 1
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %563, %562
  %565 = select i1 %564, i32 767758085, i32 1654652069
  br label %.backedge

566:                                              ; preds = %35
  %567 = add i32 %.0140, 1
  %568 = load i32, i32* @x.1, align 4
  %569 = load i32, i32* @y.2, align 4
  %570 = add i32 %568, -1
  %571 = mul i32 %570, %568
  %572 = and i32 %571, 1
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %574, %573
  %576 = select i1 %575, i32 -627277963, i32 1654652069
  br label %.backedge

577:                                              ; preds = %35
  br label %.backedge

578:                                              ; preds = %35
  ret i32 0

579:                                              ; preds = %35
  br label %.backedge

580:                                              ; preds = %35
  br label %.backedge

581:                                              ; preds = %35
  %.neg160 = add i32 %.0152, 1
  br label %.backedge

582:                                              ; preds = %35
  br label %.backedge

583:                                              ; preds = %35
  %584 = sext i32 %.0148 to i64
  %.0..0..0.95 = load volatile i64, i64* %7, align 8
  %.0..0..0.96 = load volatile i64, i64* %7, align 8
  %.0..0..0.97 = load volatile i64, i64* %7, align 8
  %.0..0..0.98 = load volatile i64, i64* %7, align 8
  %.0..0..0.99 = load volatile i64, i64* %7, align 8
  %.0..0..0.100 = load volatile i64, i64* %7, align 8
  %585 = mul nsw i64 %.0..0..0.100, %584
  %.0..0..0.129 = load volatile i32*, i32** %6, align 8
  %586 = sext i32 %.0146 to i64
  %.idx159 = add nsw i64 %585, %586
  %587 = getelementptr inbounds i32, i32* %.0..0..0.129, i64 %.idx159
  store i32 0, i32* %587, align 4
  br label %.backedge

588:                                              ; preds = %35
  %.neg158 = add i32 %.0146, 1
  br label %.backedge

589:                                              ; preds = %35
  %.0..0..0.75 = load volatile i64, i64* %9, align 8
  %.0..0..0.76 = load volatile i64, i64* %9, align 8
  %.0..0..0.77 = load volatile i64, i64* %9, align 8
  %.0..0..0.78 = load volatile i64, i64* %9, align 8
  %.0..0..0.79 = load volatile i64, i64* %9, align 8
  %.0..0..0.80 = load volatile i64, i64* %9, align 8
  %.0..0..0.81 = load volatile i64, i64* %9, align 8
  %.0..0..0.82 = load volatile i64, i64* %9, align 8
  br label %.backedge

590:                                              ; preds = %35
  br label %.backedge

591:                                              ; preds = %35
  %592 = add i32 %.0144, -1
  %593 = sext i32 %592 to i64
  %.0..0..0.101 = load volatile i64, i64* %7, align 8
  %.0..0..0.102 = load volatile i64, i64* %7, align 8
  %.0..0..0.103 = load volatile i64, i64* %7, align 8
  %.0..0..0.104 = load volatile i64, i64* %7, align 8
  %.0..0..0.105 = load volatile i64, i64* %7, align 8
  %.0..0..0.106 = load volatile i64, i64* %7, align 8
  %.0..0..0.107 = load volatile i64, i64* %7, align 8
  %.0..0..0.108 = load volatile i64, i64* %7, align 8
  %594 = mul nsw i64 %.0..0..0.108, %593
  %.0..0..0.130 = load volatile i32*, i32** %6, align 8
  %595 = add i32 %.0142, 1
  %596 = sext i32 %595 to i64
  %.idx157 = add nsw i64 %594, %596
  %597 = getelementptr inbounds i32, i32* %.0..0..0.130, i64 %.idx157
  %598 = load i32, i32* %597, align 4
  %599 = add i32 %598, 1
  store i32 %599, i32* %597, align 4
  br label %.backedge

600:                                              ; preds = %35
  %601 = add i32 %.0144, 1
  %602 = sext i32 %601 to i64
  %.0..0..0.109 = load volatile i64, i64* %7, align 8
  %.0..0..0.110 = load volatile i64, i64* %7, align 8
  %.0..0..0.111 = load volatile i64, i64* %7, align 8
  %603 = mul nsw i64 %.0..0..0.111, %602
  %.0..0..0.131 = load volatile i32*, i32** %6, align 8
  %604 = sext i32 %.0142 to i64
  %.idx155 = add nsw i64 %603, %604
  %605 = getelementptr inbounds i32, i32* %.0..0..0.131, i64 %.idx155
  %606 = load i32, i32* %605, align 4
  %.neg156 = add i32 %606, 1
  store i32 %.neg156, i32* %605, align 4
  br label %.backedge

607:                                              ; preds = %35
  %.neg154 = add i32 %.0144, 1
  %608 = sext i32 %.neg154 to i64
  %.0..0..0.112 = load volatile i64, i64* %7, align 8
  %.0..0..0.113 = load volatile i64, i64* %7, align 8
  %.0..0..0.114 = load volatile i64, i64* %7, align 8
  %.0..0..0.115 = load volatile i64, i64* %7, align 8
  %.0..0..0.116 = load volatile i64, i64* %7, align 8
  %.0..0..0.117 = load volatile i64, i64* %7, align 8
  %.0..0..0.118 = load volatile i64, i64* %7, align 8
  %609 = mul nsw i64 %.0..0..0.118, %608
  %.0..0..0.132 = load volatile i32*, i32** %6, align 8
  %610 = add i32 %.0142, -1
  %611 = sext i32 %610 to i64
  %.idx = add nsw i64 %609, %611
  %612 = getelementptr inbounds i32, i32* %.0..0..0.132, i64 %.idx
  %613 = load i32, i32* %612, align 4
  %614 = add i32 %613, 1
  store i32 %614, i32* %612, align 4
  br label %.backedge

615:                                              ; preds = %35
  br label %.backedge

616:                                              ; preds = %35
  br label %.backedge

617:                                              ; preds = %35
  br label %.backedge

618:                                              ; preds = %35
  %619 = add i32 %.0138, 1
  br label %.backedge

620:                                              ; preds = %35
  %621 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

622:                                              ; preds = %35
  %.neg = add i32 %.0140, 1
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s665592524.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1536260865, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1536260865, label %11
    i32 2120426248, label %14
    i32 -140164075, label %24
    i32 424795920, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 2120426248, i32 424795920
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -140164075, i32 424795920
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 2120426248, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
