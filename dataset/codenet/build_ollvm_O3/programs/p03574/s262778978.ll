; ModuleID = 'build_ollvm/programs/p03574/s262778978.ll'
source_filename = "Project_CodeNet_C++1400/p03574/s262778978.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s262778978.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %10 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %13
  %15 = bitcast i8* %14 to %"class.std::basic_ios"*
  %16 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %15, %"class.std::basic_ostream"* null)
  %17 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %18 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %17, i32* nonnull dereferenceable(4) %8)
  %19 = load i32, i32* %7, align 4
  %.neg = add i32 %19, 2
  %20 = zext i32 %.neg to i64
  %21 = load i32, i32* %8, align 4
  %22 = add i32 %21, 2
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %6, align 8
  %24 = call i8* @llvm.stacksave()
  %.0..0..0.59 = load volatile i64, i64* %6, align 8
  %25 = mul nuw i64 %.0..0..0.59, %20
  %26 = alloca i8, i64 %25, align 16
  br label %27

27:                                               ; preds = %.backedge, %0
  %.0103 = phi i32 [ 0, %0 ], [ %.0103.be, %.backedge ]
  %.0101 = phi i32 [ undef, %0 ], [ %.0101.be, %.backedge ]
  %.099 = phi i32 [ undef, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i32 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.0 = phi i32 [ 166282824, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 166282824, label %28
    i32 1571995529, label %32
    i32 -1558344542, label %33
    i32 1005564856, label %38
    i32 1742852755, label %43
    i32 -752236429, label %53
    i32 1363471013, label %64
    i32 -1821332123, label %65
    i32 -1000980063, label %66
    i32 2143631802, label %68
    i32 438187760, label %69
    i32 -2039591727, label %72
    i32 -1476395971, label %82
    i32 762377194, label %92
    i32 1179576337, label %93
    i32 728470073, label %103
    i32 906764774, label %115
    i32 1140658562, label %117
    i32 -145719993, label %123
    i32 -631664492, label %133
    i32 1739995259, label %144
    i32 674722107, label %145
    i32 -1422498839, label %155
    i32 -152816305, label %165
    i32 1326552555, label %166
    i32 -475230970, label %176
    i32 -1147269892, label %187
    i32 -1100477961, label %188
    i32 -1673606994, label %198
    i32 221865956, label %208
    i32 -1000967897, label %209
    i32 -1531276161, label %212
    i32 -2006075443, label %213
    i32 -570452300, label %223
    i32 -1129131827, label %235
    i32 -546416538, label %237
    i32 880623202, label %245
    i32 625156187, label %247
    i32 69885550, label %250
    i32 -1137448738, label %252
    i32 -686039470, label %255
    i32 1817187488, label %263
    i32 1021982134, label %265
    i32 899914273, label %266
    i32 -1202653302, label %268
    i32 -1770784235, label %278
    i32 1848076321, label %288
    i32 472516338, label %289
    i32 2008615930, label %299
    i32 -949901211, label %309
    i32 2127025963, label %310
    i32 -1922235580, label %320
    i32 -840477946, label %335
    i32 -13607727, label %336
    i32 -309265478, label %346
    i32 654543328, label %356
    i32 -1052649531, label %357
    i32 -866111359, label %359
    i32 -1601922495, label %360
    i32 -590822110, label %362
    i32 -84330981, label %363
    i32 -1123345942, label %373
    i32 -489125637, label %385
    i32 -2002056217, label %387
    i32 1392005097, label %388
    i32 1868205632, label %398
    i32 2027878131, label %410
    i32 -1941496182, label %412
    i32 1806127738, label %419
    i32 -250836521, label %427
    i32 1671999451, label %434
    i32 424379478, label %435
    i32 1193347232, label %445
    i32 1724459192, label %456
    i32 1624697085, label %457
    i32 -9180686, label %459
    i32 -1916482753, label %469
    i32 -1513951476, label %480
    i32 541195025, label %481
    i32 405068687, label %491
    i32 -838759733, label %501
    i32 837098696, label %502
    i32 -1722592682, label %504
    i32 -1373479805, label %505
    i32 1978607368, label %506
    i32 2127275508, label %508
    i32 75916800, label %509
    i32 -1700992431, label %510
    i32 232056246, label %511
    i32 1871466592, label %512
    i32 191361315, label %513
    i32 1465542157, label %515
    i32 -929482655, label %521
    i32 -1692279972, label %522
    i32 -440842673, label %523
    i32 8883945, label %524
    i32 -1844810035, label %526
    i32 645377418, label %528
  ]

.backedge:                                        ; preds = %27, %528, %526, %524, %523, %522, %521, %515, %513, %512, %511, %510, %509, %508, %506, %505, %504, %502, %491, %481, %480, %469, %459, %457, %456, %445, %435, %434, %427, %419, %412, %410, %398, %388, %387, %385, %373, %363, %362, %360, %359, %357, %356, %346, %336, %335, %320, %310, %309, %299, %289, %288, %278, %268, %266, %265, %263, %255, %252, %250, %247, %245, %237, %235, %223, %213, %212, %209, %208, %198, %188, %187, %176, %166, %165, %155, %145, %144, %133, %123, %117, %115, %103, %93, %92, %82, %72, %69, %68, %66, %65, %64, %53, %43, %38, %33, %32, %28
  %.0103.be = phi i32 [ %.0103, %27 ], [ %.0103, %528 ], [ %.0103, %526 ], [ %.0103, %524 ], [ %.0103, %523 ], [ %.0103, %522 ], [ %.0103, %521 ], [ %.0103, %515 ], [ %.0103, %513 ], [ %.0103, %512 ], [ %.0103, %511 ], [ %.0103, %510 ], [ %.0103, %509 ], [ %.0103, %508 ], [ %.0103, %506 ], [ %.0103, %505 ], [ %.0103, %504 ], [ %.0103, %502 ], [ %.0103, %491 ], [ %.0103, %481 ], [ %.0103, %480 ], [ %.0103, %469 ], [ %.0103, %459 ], [ %.0103, %457 ], [ %.0103, %456 ], [ %.0103, %445 ], [ %.0103, %435 ], [ %.0103, %434 ], [ %.0103, %427 ], [ %.0103, %419 ], [ %.0103, %412 ], [ %.0103, %410 ], [ %.0103, %398 ], [ %.0103, %388 ], [ %.0103, %387 ], [ %.0103, %385 ], [ %.0103, %373 ], [ %.0103, %363 ], [ %.0103, %362 ], [ %.0103, %360 ], [ %.0103, %359 ], [ %.0103, %357 ], [ %.0103, %356 ], [ %.0103, %346 ], [ %.0103, %336 ], [ %.0103, %335 ], [ %.0103, %320 ], [ %.0103, %310 ], [ %.0103, %309 ], [ %.0103, %299 ], [ %.0103, %289 ], [ %.0103, %288 ], [ %.0103, %278 ], [ %.0103, %268 ], [ %.0103, %266 ], [ %.0103, %265 ], [ %.0103, %263 ], [ %.0103, %255 ], [ %.0103, %252 ], [ %.0103, %250 ], [ %.0103, %247 ], [ %.0103, %245 ], [ %.0103, %237 ], [ %.0103, %235 ], [ %.0103, %223 ], [ %.0103, %213 ], [ %.0103, %212 ], [ %.0103, %209 ], [ %.0103, %208 ], [ %.0103, %198 ], [ %.0103, %188 ], [ %.0103, %187 ], [ %.0103, %176 ], [ %.0103, %166 ], [ %.0103, %165 ], [ %.0103, %155 ], [ %.0103, %145 ], [ %.0103, %144 ], [ %.0103, %133 ], [ %.0103, %123 ], [ %.0103, %117 ], [ %.0103, %115 ], [ %.0103, %103 ], [ %.0103, %93 ], [ %.0103, %92 ], [ %.0103, %82 ], [ %.0103, %72 ], [ %.0103, %69 ], [ %.0103, %68 ], [ %67, %66 ], [ %.0103, %65 ], [ %.0103, %64 ], [ %.0103, %53 ], [ %.0103, %43 ], [ %.0103, %38 ], [ %.0103, %33 ], [ %.0103, %32 ], [ %.0103, %28 ]
  %.0101.be = phi i32 [ %.0101, %27 ], [ %.0101, %528 ], [ %.0101, %526 ], [ %.0101, %524 ], [ %.0101, %523 ], [ %.0101, %522 ], [ %.0101, %521 ], [ %.0101, %515 ], [ %.0101, %513 ], [ %.0101, %512 ], [ %.0101, %511 ], [ %.0101, %510 ], [ %.0101, %509 ], [ %.0101, %508 ], [ %.0101, %506 ], [ %.0101, %505 ], [ %.0101, %504 ], [ %503, %502 ], [ %.0101, %491 ], [ %.0101, %481 ], [ %.0101, %480 ], [ %.0101, %469 ], [ %.0101, %459 ], [ %.0101, %457 ], [ %.0101, %456 ], [ %.0101, %445 ], [ %.0101, %435 ], [ %.0101, %434 ], [ %.0101, %427 ], [ %.0101, %419 ], [ %.0101, %412 ], [ %.0101, %410 ], [ %.0101, %398 ], [ %.0101, %388 ], [ %.0101, %387 ], [ %.0101, %385 ], [ %.0101, %373 ], [ %.0101, %363 ], [ %.0101, %362 ], [ %.0101, %360 ], [ %.0101, %359 ], [ %.0101, %357 ], [ %.0101, %356 ], [ %.0101, %346 ], [ %.0101, %336 ], [ %.0101, %335 ], [ %.0101, %320 ], [ %.0101, %310 ], [ %.0101, %309 ], [ %.0101, %299 ], [ %.0101, %289 ], [ %.0101, %288 ], [ %.0101, %278 ], [ %.0101, %268 ], [ %.0101, %266 ], [ %.0101, %265 ], [ %.0101, %263 ], [ %.0101, %255 ], [ %.0101, %252 ], [ %.0101, %250 ], [ %.0101, %247 ], [ %.0101, %245 ], [ %.0101, %237 ], [ %.0101, %235 ], [ %.0101, %223 ], [ %.0101, %213 ], [ %.0101, %212 ], [ %.0101, %209 ], [ %.0101, %208 ], [ %.0101, %198 ], [ %.0101, %188 ], [ %.0101, %187 ], [ %.0101, %176 ], [ %.0101, %166 ], [ %.0101, %165 ], [ %.0101, %155 ], [ %.0101, %145 ], [ %.0101, %144 ], [ %.0101, %133 ], [ %.0101, %123 ], [ %.0101, %117 ], [ %.0101, %115 ], [ %.0101, %103 ], [ %.0101, %93 ], [ %.0101, %92 ], [ %.0101, %82 ], [ %.0101, %72 ], [ %.0101, %69 ], [ %.0101, %68 ], [ %.0101, %66 ], [ %.0101, %65 ], [ %.0101, %64 ], [ %54, %53 ], [ %.0101, %43 ], [ %.0101, %38 ], [ %.0101, %33 ], [ 0, %32 ], [ %.0101, %28 ]
  %.099.be = phi i32 [ %.099, %27 ], [ %.099, %528 ], [ %.099, %526 ], [ %.099, %524 ], [ %.099, %523 ], [ %.099, %522 ], [ %.099, %521 ], [ %.099, %515 ], [ %.099, %513 ], [ %.099, %512 ], [ %.099, %511 ], [ %.099, %510 ], [ %.neg105, %509 ], [ %.099, %508 ], [ %.099, %506 ], [ %.099, %505 ], [ %.099, %504 ], [ %.099, %502 ], [ %.099, %491 ], [ %.099, %481 ], [ %.099, %480 ], [ %.099, %469 ], [ %.099, %459 ], [ %.099, %457 ], [ %.099, %456 ], [ %.099, %445 ], [ %.099, %435 ], [ %.099, %434 ], [ %.099, %427 ], [ %.099, %419 ], [ %.099, %412 ], [ %.099, %410 ], [ %.099, %398 ], [ %.099, %388 ], [ %.099, %387 ], [ %.099, %385 ], [ %.099, %373 ], [ %.099, %363 ], [ %.099, %362 ], [ %.099, %360 ], [ %.099, %359 ], [ %.099, %357 ], [ %.099, %356 ], [ %.099, %346 ], [ %.099, %336 ], [ %.099, %335 ], [ %.099, %320 ], [ %.099, %310 ], [ %.099, %309 ], [ %.099, %299 ], [ %.099, %289 ], [ %.099, %288 ], [ %.099, %278 ], [ %.099, %268 ], [ %.099, %266 ], [ %.099, %265 ], [ %.099, %263 ], [ %.099, %255 ], [ %.099, %252 ], [ %.099, %250 ], [ %.099, %247 ], [ %.099, %245 ], [ %.099, %237 ], [ %.099, %235 ], [ %.099, %223 ], [ %.099, %213 ], [ %.099, %212 ], [ %.099, %209 ], [ %.099, %208 ], [ %.099, %198 ], [ %.099, %188 ], [ %.099, %187 ], [ %177, %176 ], [ %.099, %166 ], [ %.099, %165 ], [ %.099, %155 ], [ %.099, %145 ], [ %.099, %144 ], [ %.099, %133 ], [ %.099, %123 ], [ %.099, %117 ], [ %.099, %115 ], [ %.099, %103 ], [ %.099, %93 ], [ %.099, %92 ], [ %.099, %82 ], [ %.099, %72 ], [ %.099, %69 ], [ 1, %68 ], [ %.099, %66 ], [ %.099, %65 ], [ %.099, %64 ], [ %.099, %53 ], [ %.099, %43 ], [ %.099, %38 ], [ %.099, %33 ], [ %.099, %32 ], [ %.099, %28 ]
  %.097.be = phi i32 [ %.097, %27 ], [ %.097, %528 ], [ %.097, %526 ], [ %.097, %524 ], [ %.097, %523 ], [ %.097, %522 ], [ %.097, %521 ], [ %.097, %515 ], [ %.097, %513 ], [ %.097, %512 ], [ %.097, %511 ], [ %.097, %510 ], [ %.097, %509 ], [ %.097, %508 ], [ %507, %506 ], [ %.097, %505 ], [ 1, %504 ], [ %.097, %502 ], [ %.097, %491 ], [ %.097, %481 ], [ %.097, %480 ], [ %.097, %469 ], [ %.097, %459 ], [ %.097, %457 ], [ %.097, %456 ], [ %.097, %445 ], [ %.097, %435 ], [ %.097, %434 ], [ %.097, %427 ], [ %.097, %419 ], [ %.097, %412 ], [ %.097, %410 ], [ %.097, %398 ], [ %.097, %388 ], [ %.097, %387 ], [ %.097, %385 ], [ %.097, %373 ], [ %.097, %363 ], [ %.097, %362 ], [ %.097, %360 ], [ %.097, %359 ], [ %.097, %357 ], [ %.097, %356 ], [ %.097, %346 ], [ %.097, %336 ], [ %.097, %335 ], [ %.097, %320 ], [ %.097, %310 ], [ %.097, %309 ], [ %.097, %299 ], [ %.097, %289 ], [ %.097, %288 ], [ %.097, %278 ], [ %.097, %268 ], [ %.097, %266 ], [ %.097, %265 ], [ %.097, %263 ], [ %.097, %255 ], [ %.097, %252 ], [ %.097, %250 ], [ %.097, %247 ], [ %.097, %245 ], [ %.097, %237 ], [ %.097, %235 ], [ %.097, %223 ], [ %.097, %213 ], [ %.097, %212 ], [ %.097, %209 ], [ %.097, %208 ], [ %.097, %198 ], [ %.097, %188 ], [ %.097, %187 ], [ %.097, %176 ], [ %.097, %166 ], [ %.097, %165 ], [ %.097, %155 ], [ %.097, %145 ], [ %.097, %144 ], [ %134, %133 ], [ %.097, %123 ], [ %.097, %117 ], [ %.097, %115 ], [ %.097, %103 ], [ %.097, %93 ], [ %.097, %92 ], [ 1, %82 ], [ %.097, %72 ], [ %.097, %69 ], [ %.097, %68 ], [ %.097, %66 ], [ %.097, %65 ], [ %.097, %64 ], [ %.097, %53 ], [ %.097, %43 ], [ %.097, %38 ], [ %.097, %33 ], [ %.097, %32 ], [ %.097, %28 ]
  %.095.be = phi i32 [ %.095, %27 ], [ %.095, %528 ], [ %.095, %526 ], [ %.095, %524 ], [ %.095, %523 ], [ %.095, %522 ], [ %.095, %521 ], [ %.095, %515 ], [ %.095, %513 ], [ %.095, %512 ], [ %.095, %511 ], [ 1, %510 ], [ %.095, %509 ], [ %.095, %508 ], [ %.095, %506 ], [ %.095, %505 ], [ %.095, %504 ], [ %.095, %502 ], [ %.095, %491 ], [ %.095, %481 ], [ %.095, %480 ], [ %.095, %469 ], [ %.095, %459 ], [ %.095, %457 ], [ %.095, %456 ], [ %.095, %445 ], [ %.095, %435 ], [ %.095, %434 ], [ %.095, %427 ], [ %.095, %419 ], [ %.095, %412 ], [ %.095, %410 ], [ %.095, %398 ], [ %.095, %388 ], [ %.095, %387 ], [ %.095, %385 ], [ %.095, %373 ], [ %.095, %363 ], [ %.095, %362 ], [ %361, %360 ], [ %.095, %359 ], [ %.095, %357 ], [ %.095, %356 ], [ %.095, %346 ], [ %.095, %336 ], [ %.095, %335 ], [ %.095, %320 ], [ %.095, %310 ], [ %.095, %309 ], [ %.095, %299 ], [ %.095, %289 ], [ %.095, %288 ], [ %.095, %278 ], [ %.095, %268 ], [ %.095, %266 ], [ %.095, %265 ], [ %.095, %263 ], [ %.095, %255 ], [ %.095, %252 ], [ %.095, %250 ], [ %.095, %247 ], [ %.095, %245 ], [ %.095, %237 ], [ %.095, %235 ], [ %.095, %223 ], [ %.095, %213 ], [ %.095, %212 ], [ %.095, %209 ], [ %.095, %208 ], [ 1, %198 ], [ %.095, %188 ], [ %.095, %187 ], [ %.095, %176 ], [ %.095, %166 ], [ %.095, %165 ], [ %.095, %155 ], [ %.095, %145 ], [ %.095, %144 ], [ %.095, %133 ], [ %.095, %123 ], [ %.095, %117 ], [ %.095, %115 ], [ %.095, %103 ], [ %.095, %93 ], [ %.095, %92 ], [ %.095, %82 ], [ %.095, %72 ], [ %.095, %69 ], [ %.095, %68 ], [ %.095, %66 ], [ %.095, %65 ], [ %.095, %64 ], [ %.095, %53 ], [ %.095, %43 ], [ %.095, %38 ], [ %.095, %33 ], [ %.095, %32 ], [ %.095, %28 ]
  %.093.be = phi i32 [ %.093, %27 ], [ %.093, %528 ], [ %.093, %526 ], [ %.093, %524 ], [ %.093, %523 ], [ %.093, %522 ], [ %.093, %521 ], [ %.093, %515 ], [ %.093, %513 ], [ %.093, %512 ], [ %.093, %511 ], [ %.093, %510 ], [ %.093, %509 ], [ %.093, %508 ], [ %.093, %506 ], [ %.093, %505 ], [ %.093, %504 ], [ %.093, %502 ], [ %.093, %491 ], [ %.093, %481 ], [ %.093, %480 ], [ %.093, %469 ], [ %.093, %459 ], [ %.093, %457 ], [ %.093, %456 ], [ %.093, %445 ], [ %.093, %435 ], [ %.093, %434 ], [ %.093, %427 ], [ %.093, %419 ], [ %.093, %412 ], [ %.093, %410 ], [ %.093, %398 ], [ %.093, %388 ], [ %.093, %387 ], [ %.093, %385 ], [ %.093, %373 ], [ %.093, %363 ], [ %.093, %362 ], [ %.093, %360 ], [ %.093, %359 ], [ %358, %357 ], [ %.093, %356 ], [ %.093, %346 ], [ %.093, %336 ], [ %.093, %335 ], [ %.093, %320 ], [ %.093, %310 ], [ %.093, %309 ], [ %.093, %299 ], [ %.093, %289 ], [ %.093, %288 ], [ %.093, %278 ], [ %.093, %268 ], [ %.093, %266 ], [ %.093, %265 ], [ %.093, %263 ], [ %.093, %255 ], [ %.093, %252 ], [ %.093, %250 ], [ %.093, %247 ], [ %.093, %245 ], [ %.093, %237 ], [ %.093, %235 ], [ %.093, %223 ], [ %.093, %213 ], [ 1, %212 ], [ %.093, %209 ], [ %.093, %208 ], [ %.093, %198 ], [ %.093, %188 ], [ %.093, %187 ], [ %.093, %176 ], [ %.093, %166 ], [ %.093, %165 ], [ %.093, %155 ], [ %.093, %145 ], [ %.093, %144 ], [ %.093, %133 ], [ %.093, %123 ], [ %.093, %117 ], [ %.093, %115 ], [ %.093, %103 ], [ %.093, %93 ], [ %.093, %92 ], [ %.093, %82 ], [ %.093, %72 ], [ %.093, %69 ], [ %.093, %68 ], [ %.093, %66 ], [ %.093, %65 ], [ %.093, %64 ], [ %.093, %53 ], [ %.093, %43 ], [ %.093, %38 ], [ %.093, %33 ], [ %.093, %32 ], [ %.093, %28 ]
  %.091.be = phi i32 [ %.091, %27 ], [ %.091, %528 ], [ %.091, %526 ], [ %.091, %524 ], [ %.091, %523 ], [ %.091, %522 ], [ %.091, %521 ], [ %.091, %515 ], [ %.091, %513 ], [ %.091, %512 ], [ %.091, %511 ], [ %.091, %510 ], [ %.091, %509 ], [ %.091, %508 ], [ %.091, %506 ], [ %.091, %505 ], [ %.091, %504 ], [ %.091, %502 ], [ %.091, %491 ], [ %.091, %481 ], [ %.091, %480 ], [ %.091, %469 ], [ %.091, %459 ], [ %.091, %457 ], [ %.091, %456 ], [ %.091, %445 ], [ %.091, %435 ], [ %.091, %434 ], [ %.091, %427 ], [ %.091, %419 ], [ %.091, %412 ], [ %.091, %410 ], [ %.091, %398 ], [ %.091, %388 ], [ %.091, %387 ], [ %.091, %385 ], [ %.091, %373 ], [ %.091, %363 ], [ %.091, %362 ], [ %.091, %360 ], [ %.091, %359 ], [ %.091, %357 ], [ %.091, %356 ], [ %.091, %346 ], [ %.091, %336 ], [ %.091, %335 ], [ %.091, %320 ], [ %.091, %310 ], [ %.091, %309 ], [ %.091, %299 ], [ %.091, %289 ], [ %.091, %288 ], [ %.091, %278 ], [ %.091, %268 ], [ %.091, %266 ], [ %.091, %265 ], [ %264, %263 ], [ %.091, %255 ], [ %.091, %252 ], [ %.091, %250 ], [ %.091, %247 ], [ %.091, %245 ], [ 0, %237 ], [ %.091, %235 ], [ %.091, %223 ], [ %.091, %213 ], [ %.091, %212 ], [ %.091, %209 ], [ %.091, %208 ], [ %.091, %198 ], [ %.091, %188 ], [ %.091, %187 ], [ %.091, %176 ], [ %.091, %166 ], [ %.091, %165 ], [ %.091, %155 ], [ %.091, %145 ], [ %.091, %144 ], [ %.091, %133 ], [ %.091, %123 ], [ %.091, %117 ], [ %.091, %115 ], [ %.091, %103 ], [ %.091, %93 ], [ %.091, %92 ], [ %.091, %82 ], [ %.091, %72 ], [ %.091, %69 ], [ %.091, %68 ], [ %.091, %66 ], [ %.091, %65 ], [ %.091, %64 ], [ %.091, %53 ], [ %.091, %43 ], [ %.091, %38 ], [ %.091, %33 ], [ %.091, %32 ], [ %.091, %28 ]
  %.089.be = phi i32 [ %.089, %27 ], [ %.089, %528 ], [ %.089, %526 ], [ %.089, %524 ], [ %.089, %523 ], [ %.089, %522 ], [ %.089, %521 ], [ %.089, %515 ], [ %514, %513 ], [ %.089, %512 ], [ %.089, %511 ], [ %.089, %510 ], [ %.089, %509 ], [ %.089, %508 ], [ %.089, %506 ], [ %.089, %505 ], [ %.089, %504 ], [ %.089, %502 ], [ %.089, %491 ], [ %.089, %481 ], [ %.089, %480 ], [ %.089, %469 ], [ %.089, %459 ], [ %.089, %457 ], [ %.089, %456 ], [ %.089, %445 ], [ %.089, %435 ], [ %.089, %434 ], [ %.089, %427 ], [ %.089, %419 ], [ %.089, %412 ], [ %.089, %410 ], [ %.089, %398 ], [ %.089, %388 ], [ %.089, %387 ], [ %.089, %385 ], [ %.089, %373 ], [ %.089, %363 ], [ %.089, %362 ], [ %.089, %360 ], [ %.089, %359 ], [ %.089, %357 ], [ %.089, %356 ], [ %.089, %346 ], [ %.089, %336 ], [ %.089, %335 ], [ %.089, %320 ], [ %.089, %310 ], [ %.089, %309 ], [ %.neg110, %299 ], [ %.089, %289 ], [ %.089, %288 ], [ %.089, %278 ], [ %.089, %268 ], [ %.089, %266 ], [ %.089, %265 ], [ %.089, %263 ], [ %.089, %255 ], [ %.089, %252 ], [ %.089, %250 ], [ %.089, %247 ], [ %246, %245 ], [ %.089, %237 ], [ %.089, %235 ], [ %.089, %223 ], [ %.089, %213 ], [ %.089, %212 ], [ %.089, %209 ], [ %.089, %208 ], [ %.089, %198 ], [ %.089, %188 ], [ %.089, %187 ], [ %.089, %176 ], [ %.089, %166 ], [ %.089, %165 ], [ %.089, %155 ], [ %.089, %145 ], [ %.089, %144 ], [ %.089, %133 ], [ %.089, %123 ], [ %.089, %117 ], [ %.089, %115 ], [ %.089, %103 ], [ %.089, %93 ], [ %.089, %92 ], [ %.089, %82 ], [ %.089, %72 ], [ %.089, %69 ], [ %.089, %68 ], [ %.089, %66 ], [ %.089, %65 ], [ %.089, %64 ], [ %.089, %53 ], [ %.089, %43 ], [ %.089, %38 ], [ %.089, %33 ], [ %.089, %32 ], [ %.089, %28 ]
  %.087.be = phi i32 [ %.087, %27 ], [ %.087, %528 ], [ %.087, %526 ], [ %.087, %524 ], [ %.087, %523 ], [ %.087, %522 ], [ %.087, %521 ], [ %.087, %515 ], [ %.087, %513 ], [ %.087, %512 ], [ %.087, %511 ], [ %.087, %510 ], [ %.087, %509 ], [ %.087, %508 ], [ %.087, %506 ], [ %.087, %505 ], [ %.087, %504 ], [ %.087, %502 ], [ %.087, %491 ], [ %.087, %481 ], [ %.087, %480 ], [ %.087, %469 ], [ %.087, %459 ], [ %.087, %457 ], [ %.087, %456 ], [ %.087, %445 ], [ %.087, %435 ], [ %.087, %434 ], [ %.087, %427 ], [ %.087, %419 ], [ %.087, %412 ], [ %.087, %410 ], [ %.087, %398 ], [ %.087, %388 ], [ %.087, %387 ], [ %.087, %385 ], [ %.087, %373 ], [ %.087, %363 ], [ %.087, %362 ], [ %.087, %360 ], [ %.087, %359 ], [ %.087, %357 ], [ %.087, %356 ], [ %.087, %346 ], [ %.087, %336 ], [ %.087, %335 ], [ %.087, %320 ], [ %.087, %310 ], [ %.087, %309 ], [ %.087, %299 ], [ %.087, %289 ], [ %.087, %288 ], [ %.087, %278 ], [ %.087, %268 ], [ %267, %266 ], [ %.087, %265 ], [ %.087, %263 ], [ %.087, %255 ], [ %.087, %252 ], [ %251, %250 ], [ %.087, %247 ], [ %.087, %245 ], [ %.087, %237 ], [ %.087, %235 ], [ %.087, %223 ], [ %.087, %213 ], [ %.087, %212 ], [ %.087, %209 ], [ %.087, %208 ], [ %.087, %198 ], [ %.087, %188 ], [ %.087, %187 ], [ %.087, %176 ], [ %.087, %166 ], [ %.087, %165 ], [ %.087, %155 ], [ %.087, %145 ], [ %.087, %144 ], [ %.087, %133 ], [ %.087, %123 ], [ %.087, %117 ], [ %.087, %115 ], [ %.087, %103 ], [ %.087, %93 ], [ %.087, %92 ], [ %.087, %82 ], [ %.087, %72 ], [ %.087, %69 ], [ %.087, %68 ], [ %.087, %66 ], [ %.087, %65 ], [ %.087, %64 ], [ %.087, %53 ], [ %.087, %43 ], [ %.087, %38 ], [ %.087, %33 ], [ %.087, %32 ], [ %.087, %28 ]
  %.085.be = phi i32 [ %.085, %27 ], [ %.085, %528 ], [ %527, %526 ], [ %.085, %524 ], [ %.085, %523 ], [ %.085, %522 ], [ %.085, %521 ], [ %.085, %515 ], [ %.085, %513 ], [ %.085, %512 ], [ %.085, %511 ], [ %.085, %510 ], [ %.085, %509 ], [ %.085, %508 ], [ %.085, %506 ], [ %.085, %505 ], [ %.085, %504 ], [ %.085, %502 ], [ %.085, %491 ], [ %.085, %481 ], [ %.085, %480 ], [ %470, %469 ], [ %.085, %459 ], [ %.085, %457 ], [ %.085, %456 ], [ %.085, %445 ], [ %.085, %435 ], [ %.085, %434 ], [ %.085, %427 ], [ %.085, %419 ], [ %.085, %412 ], [ %.085, %410 ], [ %.085, %398 ], [ %.085, %388 ], [ %.085, %387 ], [ %.085, %385 ], [ %.085, %373 ], [ %.085, %363 ], [ 1, %362 ], [ %.085, %360 ], [ %.085, %359 ], [ %.085, %357 ], [ %.085, %356 ], [ %.085, %346 ], [ %.085, %336 ], [ %.085, %335 ], [ %.085, %320 ], [ %.085, %310 ], [ %.085, %309 ], [ %.085, %299 ], [ %.085, %289 ], [ %.085, %288 ], [ %.085, %278 ], [ %.085, %268 ], [ %.085, %266 ], [ %.085, %265 ], [ %.085, %263 ], [ %.085, %255 ], [ %.085, %252 ], [ %.085, %250 ], [ %.085, %247 ], [ %.085, %245 ], [ %.085, %237 ], [ %.085, %235 ], [ %.085, %223 ], [ %.085, %213 ], [ %.085, %212 ], [ %.085, %209 ], [ %.085, %208 ], [ %.085, %198 ], [ %.085, %188 ], [ %.085, %187 ], [ %.085, %176 ], [ %.085, %166 ], [ %.085, %165 ], [ %.085, %155 ], [ %.085, %145 ], [ %.085, %144 ], [ %.085, %133 ], [ %.085, %123 ], [ %.085, %117 ], [ %.085, %115 ], [ %.085, %103 ], [ %.085, %93 ], [ %.085, %92 ], [ %.085, %82 ], [ %.085, %72 ], [ %.085, %69 ], [ %.085, %68 ], [ %.085, %66 ], [ %.085, %65 ], [ %.085, %64 ], [ %.085, %53 ], [ %.085, %43 ], [ %.085, %38 ], [ %.085, %33 ], [ %.085, %32 ], [ %.085, %28 ]
  %.083.be = phi i32 [ %.083, %27 ], [ %.083, %528 ], [ %.083, %526 ], [ %525, %524 ], [ %.083, %523 ], [ %.083, %522 ], [ %.083, %521 ], [ %.083, %515 ], [ %.083, %513 ], [ %.083, %512 ], [ %.083, %511 ], [ %.083, %510 ], [ %.083, %509 ], [ %.083, %508 ], [ %.083, %506 ], [ %.083, %505 ], [ %.083, %504 ], [ %.083, %502 ], [ %.083, %491 ], [ %.083, %481 ], [ %.083, %480 ], [ %.083, %469 ], [ %.083, %459 ], [ %.083, %457 ], [ %.083, %456 ], [ %446, %445 ], [ %.083, %435 ], [ %.083, %434 ], [ %.083, %427 ], [ %.083, %419 ], [ %.083, %412 ], [ %.083, %410 ], [ %.083, %398 ], [ %.083, %388 ], [ 1, %387 ], [ %.083, %385 ], [ %.083, %373 ], [ %.083, %363 ], [ %.083, %362 ], [ %.083, %360 ], [ %.083, %359 ], [ %.083, %357 ], [ %.083, %356 ], [ %.083, %346 ], [ %.083, %336 ], [ %.083, %335 ], [ %.083, %320 ], [ %.083, %310 ], [ %.083, %309 ], [ %.083, %299 ], [ %.083, %289 ], [ %.083, %288 ], [ %.083, %278 ], [ %.083, %268 ], [ %.083, %266 ], [ %.083, %265 ], [ %.083, %263 ], [ %.083, %255 ], [ %.083, %252 ], [ %.083, %250 ], [ %.083, %247 ], [ %.083, %245 ], [ %.083, %237 ], [ %.083, %235 ], [ %.083, %223 ], [ %.083, %213 ], [ %.083, %212 ], [ %.083, %209 ], [ %.083, %208 ], [ %.083, %198 ], [ %.083, %188 ], [ %.083, %187 ], [ %.083, %176 ], [ %.083, %166 ], [ %.083, %165 ], [ %.083, %155 ], [ %.083, %145 ], [ %.083, %144 ], [ %.083, %133 ], [ %.083, %123 ], [ %.083, %117 ], [ %.083, %115 ], [ %.083, %103 ], [ %.083, %93 ], [ %.083, %92 ], [ %.083, %82 ], [ %.083, %72 ], [ %.083, %69 ], [ %.083, %68 ], [ %.083, %66 ], [ %.083, %65 ], [ %.083, %64 ], [ %.083, %53 ], [ %.083, %43 ], [ %.083, %38 ], [ %.083, %33 ], [ %.083, %32 ], [ %.083, %28 ]
  %.0.be = phi i32 [ %.0, %27 ], [ 405068687, %528 ], [ -1916482753, %526 ], [ 1193347232, %524 ], [ 1868205632, %523 ], [ -1123345942, %522 ], [ -309265478, %521 ], [ -1922235580, %515 ], [ 2008615930, %513 ], [ -1770784235, %512 ], [ -570452300, %511 ], [ -1673606994, %510 ], [ -475230970, %509 ], [ -1422498839, %508 ], [ -631664492, %506 ], [ 728470073, %505 ], [ -1476395971, %504 ], [ -752236429, %502 ], [ %500, %491 ], [ %490, %481 ], [ -84330981, %480 ], [ %479, %469 ], [ %468, %459 ], [ -9180686, %457 ], [ 1392005097, %456 ], [ %455, %445 ], [ %444, %435 ], [ 424379478, %434 ], [ 1671999451, %427 ], [ 1671999451, %419 ], [ %418, %412 ], [ %411, %410 ], [ %409, %398 ], [ %397, %388 ], [ 1392005097, %387 ], [ %386, %385 ], [ %384, %373 ], [ %372, %363 ], [ -84330981, %362 ], [ -1000967897, %360 ], [ -1601922495, %359 ], [ -2006075443, %357 ], [ -1052649531, %356 ], [ %355, %346 ], [ %345, %336 ], [ -13607727, %335 ], [ %334, %320 ], [ %319, %310 ], [ 625156187, %309 ], [ %308, %299 ], [ %298, %289 ], [ 472516338, %288 ], [ %287, %278 ], [ %277, %268 ], [ -1137448738, %266 ], [ 899914273, %265 ], [ 1021982134, %263 ], [ %262, %255 ], [ %254, %252 ], [ -1137448738, %250 ], [ %249, %247 ], [ 625156187, %245 ], [ %244, %237 ], [ %236, %235 ], [ %234, %223 ], [ %222, %213 ], [ -2006075443, %212 ], [ %211, %209 ], [ -1000967897, %208 ], [ %207, %198 ], [ %197, %188 ], [ 438187760, %187 ], [ %186, %176 ], [ %175, %166 ], [ 1326552555, %165 ], [ %164, %155 ], [ %154, %145 ], [ 1179576337, %144 ], [ %143, %133 ], [ %132, %123 ], [ -145719993, %117 ], [ %116, %115 ], [ %114, %103 ], [ %102, %93 ], [ 1179576337, %92 ], [ %91, %82 ], [ %81, %72 ], [ %71, %69 ], [ 438187760, %68 ], [ 166282824, %66 ], [ -1000980063, %65 ], [ -1558344542, %64 ], [ %63, %53 ], [ %52, %43 ], [ 1742852755, %38 ], [ %37, %33 ], [ -1558344542, %32 ], [ %31, %28 ]
  br label %27

28:                                               ; preds = %27
  %29 = load i32, i32* %7, align 4
  %.neg119 = add i32 %29, 2
  %30 = icmp slt i32 %.0103, %.neg119
  %31 = select i1 %30, i32 1571995529, i32 2143631802
  br label %.backedge

32:                                               ; preds = %27
  br label %.backedge

33:                                               ; preds = %27
  %34 = load i32, i32* %8, align 4
  %35 = add i32 %34, 2
  %36 = icmp slt i32 %.0101, %35
  %37 = select i1 %36, i32 1005564856, i32 -1821332123
  br label %.backedge

38:                                               ; preds = %27
  %39 = sext i32 %.0103 to i64
  %.0..0..0.60 = load volatile i64, i64* %6, align 8
  %40 = mul nsw i64 %.0..0..0.60, %39
  %41 = sext i32 %.0101 to i64
  %.idx118 = add nsw i64 %40, %41
  %42 = getelementptr inbounds i8, i8* %26, i64 %.idx118
  store i8 120, i8* %42, align 1
  br label %.backedge

43:                                               ; preds = %27
  %44 = load i32, i32* @x.1, align 4
  %45 = load i32, i32* @y.2, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 -752236429, i32 837098696
  br label %.backedge

53:                                               ; preds = %27
  %54 = add i32 %.0101, 1
  %55 = load i32, i32* @x.1, align 4
  %56 = load i32, i32* @y.2, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 1363471013, i32 837098696
  br label %.backedge

64:                                               ; preds = %27
  br label %.backedge

65:                                               ; preds = %27
  br label %.backedge

66:                                               ; preds = %27
  %67 = add i32 %.0103, 1
  br label %.backedge

68:                                               ; preds = %27
  br label %.backedge

69:                                               ; preds = %27
  %70 = load i32, i32* %7, align 4
  %.not117 = icmp sgt i32 %.099, %70
  %71 = select i1 %.not117, i32 -1100477961, i32 -2039591727
  br label %.backedge

72:                                               ; preds = %27
  %73 = load i32, i32* @x.1, align 4
  %74 = load i32, i32* @y.2, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -1476395971, i32 -1722592682
  br label %.backedge

82:                                               ; preds = %27
  %83 = load i32, i32* @x.1, align 4
  %84 = load i32, i32* @y.2, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 762377194, i32 -1722592682
  br label %.backedge

92:                                               ; preds = %27
  br label %.backedge

93:                                               ; preds = %27
  %94 = load i32, i32* @x.1, align 4
  %95 = load i32, i32* @y.2, align 4
  %96 = add i32 %94, -1
  %97 = mul i32 %96, %94
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %100, %99
  %102 = select i1 %101, i32 728470073, i32 -1373479805
  br label %.backedge

103:                                              ; preds = %27
  %104 = load i32, i32* %8, align 4
  %105 = icmp sle i32 %.097, %104
  store i1 %105, i1* %5, align 1
  %106 = load i32, i32* @x.1, align 4
  %107 = load i32, i32* @y.2, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 906764774, i32 -1373479805
  br label %.backedge

115:                                              ; preds = %27
  %.0..0..0.78 = load volatile i1, i1* %5, align 1
  %116 = select i1 %.0..0..0.78, i32 1140658562, i32 674722107
  br label %.backedge

117:                                              ; preds = %27
  %118 = sext i32 %.099 to i64
  %.0..0..0.61 = load volatile i64, i64* %6, align 8
  %119 = mul nsw i64 %.0..0..0.61, %118
  %120 = sext i32 %.097 to i64
  %.idx116 = add nsw i64 %119, %120
  %121 = getelementptr inbounds i8, i8* %26, i64 %.idx116
  %122 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %121)
  br label %.backedge

123:                                              ; preds = %27
  %124 = load i32, i32* @x.1, align 4
  %125 = load i32, i32* @y.2, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 -631664492, i32 1978607368
  br label %.backedge

133:                                              ; preds = %27
  %134 = add i32 %.097, 1
  %135 = load i32, i32* @x.1, align 4
  %136 = load i32, i32* @y.2, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 1739995259, i32 1978607368
  br label %.backedge

144:                                              ; preds = %27
  br label %.backedge

145:                                              ; preds = %27
  %146 = load i32, i32* @x.1, align 4
  %147 = load i32, i32* @y.2, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -1422498839, i32 2127275508
  br label %.backedge

155:                                              ; preds = %27
  %156 = load i32, i32* @x.1, align 4
  %157 = load i32, i32* @y.2, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 -152816305, i32 2127275508
  br label %.backedge

165:                                              ; preds = %27
  br label %.backedge

166:                                              ; preds = %27
  %167 = load i32, i32* @x.1, align 4
  %168 = load i32, i32* @y.2, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 -475230970, i32 75916800
  br label %.backedge

176:                                              ; preds = %27
  %177 = add i32 %.099, 1
  %178 = load i32, i32* @x.1, align 4
  %179 = load i32, i32* @y.2, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 -1147269892, i32 75916800
  br label %.backedge

187:                                              ; preds = %27
  br label %.backedge

188:                                              ; preds = %27
  %189 = load i32, i32* @x.1, align 4
  %190 = load i32, i32* @y.2, align 4
  %191 = add i32 %189, -1
  %192 = mul i32 %191, %189
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %195, %194
  %197 = select i1 %196, i32 -1673606994, i32 -1700992431
  br label %.backedge

198:                                              ; preds = %27
  %199 = load i32, i32* @x.1, align 4
  %200 = load i32, i32* @y.2, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 221865956, i32 -1700992431
  br label %.backedge

208:                                              ; preds = %27
  br label %.backedge

209:                                              ; preds = %27
  %210 = load i32, i32* %7, align 4
  %.not115 = icmp sgt i32 %.095, %210
  %211 = select i1 %.not115, i32 -590822110, i32 -1531276161
  br label %.backedge

212:                                              ; preds = %27
  br label %.backedge

213:                                              ; preds = %27
  %214 = load i32, i32* @x.1, align 4
  %215 = load i32, i32* @y.2, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 -570452300, i32 232056246
  br label %.backedge

223:                                              ; preds = %27
  %224 = load i32, i32* %8, align 4
  %225 = icmp sle i32 %.093, %224
  store i1 %225, i1* %4, align 1
  %226 = load i32, i32* @x.1, align 4
  %227 = load i32, i32* @y.2, align 4
  %228 = add i32 %226, -1
  %229 = mul i32 %228, %226
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %232, %231
  %234 = select i1 %233, i32 -1129131827, i32 232056246
  br label %.backedge

235:                                              ; preds = %27
  %.0..0..0.79 = load volatile i1, i1* %4, align 1
  %236 = select i1 %.0..0..0.79, i32 -546416538, i32 -866111359
  br label %.backedge

237:                                              ; preds = %27
  %238 = sext i32 %.095 to i64
  %.0..0..0.62 = load volatile i64, i64* %6, align 8
  %239 = mul nsw i64 %.0..0..0.62, %238
  %240 = sext i32 %.093 to i64
  %.idx114 = add nsw i64 %239, %240
  %241 = getelementptr inbounds i8, i8* %26, i64 %.idx114
  %242 = load i8, i8* %241, align 1
  %243 = icmp eq i8 %242, 46
  %244 = select i1 %243, i32 880623202, i32 -13607727
  br label %.backedge

245:                                              ; preds = %27
  %246 = add i32 %.095, -1
  br label %.backedge

247:                                              ; preds = %27
  %248 = add i32 %.095, 1
  %.not113 = icmp sgt i32 %.089, %248
  %249 = select i1 %.not113, i32 2127025963, i32 69885550
  br label %.backedge

250:                                              ; preds = %27
  %251 = add i32 %.093, -1
  br label %.backedge

252:                                              ; preds = %27
  %253 = add i32 %.093, 1
  %.not112 = icmp sgt i32 %.087, %253
  %254 = select i1 %.not112, i32 -1202653302, i32 -686039470
  br label %.backedge

255:                                              ; preds = %27
  %256 = sext i32 %.089 to i64
  %.0..0..0.63 = load volatile i64, i64* %6, align 8
  %257 = mul nsw i64 %.0..0..0.63, %256
  %258 = sext i32 %.087 to i64
  %.idx111 = add nsw i64 %257, %258
  %259 = getelementptr inbounds i8, i8* %26, i64 %.idx111
  %260 = load i8, i8* %259, align 1
  %261 = icmp eq i8 %260, 35
  %262 = select i1 %261, i32 1817187488, i32 1021982134
  br label %.backedge

263:                                              ; preds = %27
  %264 = add i32 %.091, 1
  br label %.backedge

265:                                              ; preds = %27
  br label %.backedge

266:                                              ; preds = %27
  %267 = add i32 %.087, 1
  br label %.backedge

268:                                              ; preds = %27
  %269 = load i32, i32* @x.1, align 4
  %270 = load i32, i32* @y.2, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 -1770784235, i32 1871466592
  br label %.backedge

278:                                              ; preds = %27
  %279 = load i32, i32* @x.1, align 4
  %280 = load i32, i32* @y.2, align 4
  %281 = add i32 %279, -1
  %282 = mul i32 %281, %279
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %285, %284
  %287 = select i1 %286, i32 1848076321, i32 1871466592
  br label %.backedge

288:                                              ; preds = %27
  br label %.backedge

289:                                              ; preds = %27
  %290 = load i32, i32* @x.1, align 4
  %291 = load i32, i32* @y.2, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 2008615930, i32 191361315
  br label %.backedge

299:                                              ; preds = %27
  %.neg110 = add i32 %.089, 1
  %300 = load i32, i32* @x.1, align 4
  %301 = load i32, i32* @y.2, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 -949901211, i32 191361315
  br label %.backedge

309:                                              ; preds = %27
  br label %.backedge

310:                                              ; preds = %27
  %311 = load i32, i32* @x.1, align 4
  %312 = load i32, i32* @y.2, align 4
  %313 = add i32 %311, -1
  %314 = mul i32 %313, %311
  %315 = and i32 %314, 1
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %317, %316
  %319 = select i1 %318, i32 -1922235580, i32 1465542157
  br label %.backedge

320:                                              ; preds = %27
  %321 = trunc i32 %.091 to i8
  %322 = sext i32 %.095 to i64
  %.0..0..0.64 = load volatile i64, i64* %6, align 8
  %323 = mul nsw i64 %.0..0..0.64, %322
  %324 = sext i32 %.093 to i64
  %.idx109 = add nsw i64 %323, %324
  %325 = getelementptr inbounds i8, i8* %26, i64 %.idx109
  store i8 %321, i8* %325, align 1
  %326 = load i32, i32* @x.1, align 4
  %327 = load i32, i32* @y.2, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 -840477946, i32 1465542157
  br label %.backedge

335:                                              ; preds = %27
  br label %.backedge

336:                                              ; preds = %27
  %337 = load i32, i32* @x.1, align 4
  %338 = load i32, i32* @y.2, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 -309265478, i32 -929482655
  br label %.backedge

346:                                              ; preds = %27
  %347 = load i32, i32* @x.1, align 4
  %348 = load i32, i32* @y.2, align 4
  %349 = add i32 %347, -1
  %350 = mul i32 %349, %347
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %353, %352
  %355 = select i1 %354, i32 654543328, i32 -929482655
  br label %.backedge

356:                                              ; preds = %27
  br label %.backedge

357:                                              ; preds = %27
  %358 = add i32 %.093, 1
  br label %.backedge

359:                                              ; preds = %27
  br label %.backedge

360:                                              ; preds = %27
  %361 = add i32 %.095, 1
  br label %.backedge

362:                                              ; preds = %27
  br label %.backedge

363:                                              ; preds = %27
  %364 = load i32, i32* @x.1, align 4
  %365 = load i32, i32* @y.2, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 -1123345942, i32 -1692279972
  br label %.backedge

373:                                              ; preds = %27
  %374 = load i32, i32* %7, align 4
  %375 = icmp sle i32 %.085, %374
  store i1 %375, i1* %3, align 1
  %376 = load i32, i32* @x.1, align 4
  %377 = load i32, i32* @y.2, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 -489125637, i32 -1692279972
  br label %.backedge

385:                                              ; preds = %27
  %.0..0..0.80 = load volatile i1, i1* %3, align 1
  %386 = select i1 %.0..0..0.80, i32 -2002056217, i32 541195025
  br label %.backedge

387:                                              ; preds = %27
  br label %.backedge

388:                                              ; preds = %27
  %389 = load i32, i32* @x.1, align 4
  %390 = load i32, i32* @y.2, align 4
  %391 = add i32 %389, -1
  %392 = mul i32 %391, %389
  %393 = and i32 %392, 1
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %395, %394
  %397 = select i1 %396, i32 1868205632, i32 -440842673
  br label %.backedge

398:                                              ; preds = %27
  %399 = load i32, i32* %8, align 4
  %400 = icmp sle i32 %.083, %399
  store i1 %400, i1* %2, align 1
  %401 = load i32, i32* @x.1, align 4
  %402 = load i32, i32* @y.2, align 4
  %403 = add i32 %401, -1
  %404 = mul i32 %403, %401
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %407, %406
  %409 = select i1 %408, i32 2027878131, i32 -440842673
  br label %.backedge

410:                                              ; preds = %27
  %.0..0..0.81 = load volatile i1, i1* %2, align 1
  %411 = select i1 %.0..0..0.81, i32 -1941496182, i32 1624697085
  br label %.backedge

412:                                              ; preds = %27
  %413 = sext i32 %.085 to i64
  %.0..0..0.65 = load volatile i64, i64* %6, align 8
  %414 = mul nsw i64 %.0..0..0.65, %413
  %415 = sext i32 %.083 to i64
  %.idx108 = add nsw i64 %414, %415
  %416 = getelementptr inbounds i8, i8* %26, i64 %.idx108
  %417 = load i8, i8* %416, align 1
  %.not = icmp eq i8 %417, 35
  %418 = select i1 %.not, i32 -250836521, i32 1806127738
  br label %.backedge

419:                                              ; preds = %27
  %420 = sext i32 %.085 to i64
  %.0..0..0.66 = load volatile i64, i64* %6, align 8
  %421 = mul nsw i64 %.0..0..0.66, %420
  %422 = sext i32 %.083 to i64
  %.idx107 = add nsw i64 %421, %422
  %423 = getelementptr inbounds i8, i8* %26, i64 %.idx107
  %424 = load i8, i8* %423, align 1
  %425 = sext i8 %424 to i32
  %426 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %425)
  br label %.backedge

427:                                              ; preds = %27
  %428 = sext i32 %.085 to i64
  %.0..0..0.67 = load volatile i64, i64* %6, align 8
  %429 = mul nsw i64 %.0..0..0.67, %428
  %430 = sext i32 %.083 to i64
  %.idx106 = add nsw i64 %429, %430
  %431 = getelementptr inbounds i8, i8* %26, i64 %.idx106
  %432 = load i8, i8* %431, align 1
  %433 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %432)
  br label %.backedge

434:                                              ; preds = %27
  br label %.backedge

435:                                              ; preds = %27
  %436 = load i32, i32* @x.1, align 4
  %437 = load i32, i32* @y.2, align 4
  %438 = add i32 %436, -1
  %439 = mul i32 %438, %436
  %440 = and i32 %439, 1
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %442, %441
  %444 = select i1 %443, i32 1193347232, i32 8883945
  br label %.backedge

445:                                              ; preds = %27
  %446 = add i32 %.083, 1
  %447 = load i32, i32* @x.1, align 4
  %448 = load i32, i32* @y.2, align 4
  %449 = add i32 %447, -1
  %450 = mul i32 %449, %447
  %451 = and i32 %450, 1
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %453, %452
  %455 = select i1 %454, i32 1724459192, i32 8883945
  br label %.backedge

456:                                              ; preds = %27
  br label %.backedge

457:                                              ; preds = %27
  %458 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 10)
  br label %.backedge

459:                                              ; preds = %27
  %460 = load i32, i32* @x.1, align 4
  %461 = load i32, i32* @y.2, align 4
  %462 = add i32 %460, -1
  %463 = mul i32 %462, %460
  %464 = and i32 %463, 1
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %466, %465
  %468 = select i1 %467, i32 -1916482753, i32 -1844810035
  br label %.backedge

469:                                              ; preds = %27
  %470 = add i32 %.085, 1
  %471 = load i32, i32* @x.1, align 4
  %472 = load i32, i32* @y.2, align 4
  %473 = add i32 %471, -1
  %474 = mul i32 %473, %471
  %475 = and i32 %474, 1
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %477, %476
  %479 = select i1 %478, i32 -1513951476, i32 -1844810035
  br label %.backedge

480:                                              ; preds = %27
  br label %.backedge

481:                                              ; preds = %27
  %482 = load i32, i32* @x.1, align 4
  %483 = load i32, i32* @y.2, align 4
  %484 = add i32 %482, -1
  %485 = mul i32 %484, %482
  %486 = and i32 %485, 1
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %488, %487
  %490 = select i1 %489, i32 405068687, i32 645377418
  br label %.backedge

491:                                              ; preds = %27
  call void @llvm.stackrestore(i8* %24)
  store i32 0, i32* %1, align 4
  %492 = load i32, i32* @x.1, align 4
  %493 = load i32, i32* @y.2, align 4
  %494 = add i32 %492, -1
  %495 = mul i32 %494, %492
  %496 = and i32 %495, 1
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %498, %497
  %500 = select i1 %499, i32 -838759733, i32 645377418
  br label %.backedge

501:                                              ; preds = %27
  %.0..0..0.82 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.82

502:                                              ; preds = %27
  %503 = add i32 %.0101, 1
  br label %.backedge

504:                                              ; preds = %27
  br label %.backedge

505:                                              ; preds = %27
  br label %.backedge

506:                                              ; preds = %27
  %507 = add i32 %.097, 1
  br label %.backedge

508:                                              ; preds = %27
  br label %.backedge

509:                                              ; preds = %27
  %.neg105 = add i32 %.099, 1
  br label %.backedge

510:                                              ; preds = %27
  br label %.backedge

511:                                              ; preds = %27
  br label %.backedge

512:                                              ; preds = %27
  br label %.backedge

513:                                              ; preds = %27
  %514 = add i32 %.089, 1
  br label %.backedge

515:                                              ; preds = %27
  %516 = trunc i32 %.091 to i8
  %517 = sext i32 %.095 to i64
  %.0..0..0.68 = load volatile i64, i64* %6, align 8
  %.0..0..0.69 = load volatile i64, i64* %6, align 8
  %.0..0..0.70 = load volatile i64, i64* %6, align 8
  %.0..0..0.71 = load volatile i64, i64* %6, align 8
  %.0..0..0.72 = load volatile i64, i64* %6, align 8
  %.0..0..0.73 = load volatile i64, i64* %6, align 8
  %.0..0..0.74 = load volatile i64, i64* %6, align 8
  %.0..0..0.75 = load volatile i64, i64* %6, align 8
  %.0..0..0.76 = load volatile i64, i64* %6, align 8
  %.0..0..0.77 = load volatile i64, i64* %6, align 8
  %518 = mul nsw i64 %.0..0..0.77, %517
  %519 = sext i32 %.093 to i64
  %.idx = add nsw i64 %518, %519
  %520 = getelementptr inbounds i8, i8* %26, i64 %.idx
  store i8 %516, i8* %520, align 1
  br label %.backedge

521:                                              ; preds = %27
  br label %.backedge

522:                                              ; preds = %27
  br label %.backedge

523:                                              ; preds = %27
  br label %.backedge

524:                                              ; preds = %27
  %525 = add i32 %.083, 1
  br label %.backedge

526:                                              ; preds = %27
  %527 = add i32 %.085, 1
  br label %.backedge

528:                                              ; preds = %27
  call void @llvm.stackrestore(i8* %24)
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s262778978.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
