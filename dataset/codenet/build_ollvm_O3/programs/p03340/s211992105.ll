; ModuleID = 'build_ollvm/programs/p03340/s211992105.ll'
source_filename = "Project_CodeNet_C++1400/p03340/s211992105.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z5checkiiPPi(i32 %0, i32 %1, i32** nocapture readonly %2) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x, align 4
  %7 = load i32, i32* @y, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 -1949556245, i32 -1536182364
  %15 = select i1 %13, i32 499819122, i32 -1536182364
  %16 = select i1 %13, i32 -1400187064, i32 881823779
  %17 = select i1 %13, i32 -343144305, i32 881823779
  %18 = select i1 %13, i32 -1477702483, i32 -964056158
  %19 = select i1 %13, i32 1964611514, i32 -964056158
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds i32*, i32** %2, i64 %20
  %22 = sext i32 %0 to i64
  %23 = getelementptr inbounds i32*, i32** %2, i64 %22
  %24 = select i1 %13, i32 -2814259, i32 1391116943
  %25 = select i1 %13, i32 -328796264, i32 1391116943
  br label %26

26:                                               ; preds = %.backedge, %3
  %.016 = phi i32 [ undef, %3 ], [ %.016.be, %.backedge ]
  %.014 = phi i32 [ 0, %3 ], [ %.014.be, %.backedge ]
  %.0 = phi i32 [ 515883729, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 515883729, label %27
    i32 -328796264, label %28
    i32 -2814259, label %30
    i32 440691382, label %32
    i32 800585073, label %43
    i32 1964611514, label %44
    i32 -1477702483, label %45
    i32 572518247, label %46
    i32 220181481, label %47
    i32 -343144305, label %48
    i32 -1400187064, label %50
    i32 1237069544, label %51
    i32 1526787581, label %52
    i32 499819122, label %53
    i32 -1949556245, label %54
    i32 1391116943, label %55
    i32 -964056158, label %56
    i32 881823779, label %57
    i32 -1536182364, label %59
  ]

.backedge:                                        ; preds = %26, %59, %57, %56, %55, %53, %52, %51, %50, %48, %47, %46, %45, %44, %43, %32, %30, %28, %27
  %.016.be = phi i32 [ %.016, %26 ], [ %.016, %59 ], [ %.016, %57 ], [ 0, %56 ], [ %.016, %55 ], [ %.016, %53 ], [ %.016, %52 ], [ 1, %51 ], [ %.016, %50 ], [ %.016, %48 ], [ %.016, %47 ], [ %.016, %46 ], [ %.016, %45 ], [ 0, %44 ], [ %.016, %43 ], [ %.016, %32 ], [ %.016, %30 ], [ %.016, %28 ], [ %.016, %27 ]
  %.014.be = phi i32 [ %.014, %26 ], [ %.014, %59 ], [ %58, %57 ], [ %.014, %56 ], [ %.014, %55 ], [ %.014, %53 ], [ %.014, %52 ], [ %.014, %51 ], [ %.014, %50 ], [ %49, %48 ], [ %.014, %47 ], [ %.014, %46 ], [ %.014, %45 ], [ %.014, %44 ], [ %.014, %43 ], [ %.014, %32 ], [ %.014, %30 ], [ %.014, %28 ], [ %.014, %27 ]
  %.0.be = phi i32 [ %.0, %26 ], [ 499819122, %59 ], [ -343144305, %57 ], [ 1964611514, %56 ], [ -328796264, %55 ], [ %14, %53 ], [ %15, %52 ], [ 1526787581, %51 ], [ 515883729, %50 ], [ %16, %48 ], [ %17, %47 ], [ 220181481, %46 ], [ 1526787581, %45 ], [ %18, %44 ], [ %19, %43 ], [ %42, %32 ], [ %31, %30 ], [ %24, %28 ], [ %25, %27 ]
  br label %26

27:                                               ; preds = %26
  br label %.backedge

28:                                               ; preds = %26
  %29 = icmp slt i32 %.014, 20
  store i1 %29, i1* %5, align 1
  br label %.backedge

30:                                               ; preds = %26
  %.0..0..0.12 = load volatile i1, i1* %5, align 1
  %31 = select i1 %.0..0..0.12, i32 440691382, i32 1237069544
  br label %.backedge

32:                                               ; preds = %26
  %33 = load i32*, i32** %21, align 8
  %34 = sext i32 %.014 to i64
  %35 = getelementptr inbounds i32, i32* %33, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = load i32*, i32** %23, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %34
  %39 = load i32, i32* %38, align 4
  %40 = sub i32 %36, %39
  %41 = icmp sgt i32 %40, 1
  %42 = select i1 %41, i32 800585073, i32 572518247
  br label %.backedge

43:                                               ; preds = %26
  br label %.backedge

44:                                               ; preds = %26
  br label %.backedge

45:                                               ; preds = %26
  br label %.backedge

46:                                               ; preds = %26
  br label %.backedge

47:                                               ; preds = %26
  br label %.backedge

48:                                               ; preds = %26
  %49 = add i32 %.014, 1
  br label %.backedge

50:                                               ; preds = %26
  br label %.backedge

51:                                               ; preds = %26
  br label %.backedge

52:                                               ; preds = %26
  br label %.backedge

53:                                               ; preds = %26
  store i32 %.016, i32* %4, align 4
  br label %.backedge

54:                                               ; preds = %26
  %.0..0..0.13 = load volatile i32, i32* %4, align 4
  ret i32 %.0..0..0.13

55:                                               ; preds = %26
  br label %.backedge

56:                                               ; preds = %26
  br label %.backedge

57:                                               ; preds = %26
  %58 = add i32 %.014, 1
  br label %.backedge

59:                                               ; preds = %26
  br label %.backedge
}

; Function Attrs: nofree noinline nounwind uwtable
define i32 @_Z6bisectiiiPPi(i32 %0, i32 %1, i32 %2, i32** %3) local_unnamed_addr #1 {
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32*, align 8
  %8 = alloca i32***, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i1, align 1
  %14 = alloca i1, align 1
  %15 = load i32, i32* @x.2, align 4
  %16 = load i32, i32* @y.3, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %14, align 1
  %21 = icmp slt i32 %16, 10
  store i1 %21, i1* %13, align 1
  br label %22

22:                                               ; preds = %.backedge, %4
  %.0 = phi i32 [ 797479022, %4 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 797479022, label %23
    i32 -704162741, label %26
    i32 -119884504, label %46
    i32 1892096879, label %48
    i32 1816535377, label %50
    i32 79120461, label %60
    i32 207792834, label %81
    i32 1326037271, label %83
    i32 1665913679, label %89
    i32 -1445937742, label %95
    i32 1129583857, label %97
    i32 1282601811, label %98
  ]

.backedge:                                        ; preds = %22, %98, %97, %89, %83, %81, %60, %50, %48, %46, %26, %23
  %.0.be = phi i32 [ %.0, %22 ], [ 79120461, %98 ], [ -704162741, %97 ], [ -1445937742, %89 ], [ -1445937742, %83 ], [ %82, %81 ], [ %80, %60 ], [ %59, %50 ], [ -1445937742, %48 ], [ %47, %46 ], [ %45, %26 ], [ %25, %23 ]
  br label %22

23:                                               ; preds = %22
  %.0..0..0. = load volatile i1, i1* %14, align 1
  %.0..0..0.1 = load volatile i1, i1* %13, align 1
  %24 = or i1 %.0..0..0., %.0..0..0.1
  %25 = select i1 %24, i32 -704162741, i32 1129583857
  br label %.backedge

26:                                               ; preds = %22
  %27 = alloca i32, align 4
  store i32* %27, i32** %12, align 8
  %28 = alloca i32, align 4
  store i32* %28, i32** %11, align 8
  %29 = alloca i32, align 4
  store i32* %29, i32** %10, align 8
  %30 = alloca i32, align 4
  store i32* %30, i32** %9, align 8
  %31 = alloca i32**, align 8
  store i32*** %31, i32**** %8, align 8
  %32 = alloca i32, align 4
  store i32* %32, i32** %7, align 8
  %.0..0..0.6 = load volatile i32*, i32** %11, align 8
  store i32 %0, i32* %.0..0..0.6, align 4
  %.0..0..0.11 = load volatile i32*, i32** %10, align 8
  store i32 %1, i32* %.0..0..0.11, align 4
  %.0..0..0.19 = load volatile i32*, i32** %9, align 8
  store i32 %2, i32* %.0..0..0.19, align 4
  %.0..0..0.24 = load volatile i32***, i32**** %8, align 8
  store i32** %3, i32*** %.0..0..0.24, align 8
  %.0..0..0.20 = load volatile i32*, i32** %9, align 8
  %33 = load i32, i32* %.0..0..0.20, align 4
  %.0..0..0.12 = load volatile i32*, i32** %10, align 8
  %34 = load i32, i32* %.0..0..0.12, align 4
  %35 = sub i32 %33, %34
  %36 = icmp eq i32 %35, 1
  store i1 %36, i1* %6, align 1
  %37 = load i32, i32* @x.2, align 4
  %38 = load i32, i32* @y.3, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 -119884504, i32 1129583857
  br label %.backedge

46:                                               ; preds = %22
  %.0..0..0.35 = load volatile i1, i1* %6, align 1
  %47 = select i1 %.0..0..0.35, i32 1892096879, i32 1816535377
  br label %.backedge

48:                                               ; preds = %22
  %.0..0..0.13 = load volatile i32*, i32** %10, align 8
  %49 = load i32, i32* %.0..0..0.13, align 4
  %.0..0..0.2 = load volatile i32*, i32** %12, align 8
  store i32 %49, i32* %.0..0..0.2, align 4
  br label %.backedge

50:                                               ; preds = %22
  %51 = load i32, i32* @x.2, align 4
  %52 = load i32, i32* @y.3, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 79120461, i32 1282601811
  br label %.backedge

60:                                               ; preds = %22
  %.0..0..0.21 = load volatile i32*, i32** %9, align 8
  %61 = load i32, i32* %.0..0..0.21, align 4
  %.0..0..0.14 = load volatile i32*, i32** %10, align 8
  %62 = load i32, i32* %.0..0..0.14, align 4
  %63 = sub i32 %61, %62
  %64 = sdiv i32 %63, 2
  %.0..0..0.15 = load volatile i32*, i32** %10, align 8
  %65 = load i32, i32* %.0..0..0.15, align 4
  %66 = add i32 %64, %65
  %.0..0..0.29 = load volatile i32*, i32** %7, align 8
  store i32 %66, i32* %.0..0..0.29, align 4
  %.0..0..0.7 = load volatile i32*, i32** %11, align 8
  %67 = load i32, i32* %.0..0..0.7, align 4
  %.0..0..0.30 = load volatile i32*, i32** %7, align 8
  %68 = load i32, i32* %.0..0..0.30, align 4
  %.0..0..0.25 = load volatile i32***, i32**** %8, align 8
  %69 = load i32**, i32*** %.0..0..0.25, align 8
  %70 = call i32 @_Z5checkiiPPi(i32 %67, i32 %68, i32** %69)
  %71 = icmp ne i32 %70, 0
  store i1 %71, i1* %5, align 1
  %72 = load i32, i32* @x.2, align 4
  %73 = load i32, i32* @y.3, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 207792834, i32 1282601811
  br label %.backedge

81:                                               ; preds = %22
  %.0..0..0.36 = load volatile i1, i1* %5, align 1
  %82 = select i1 %.0..0..0.36, i32 1326037271, i32 1665913679
  br label %.backedge

83:                                               ; preds = %22
  %.0..0..0.8 = load volatile i32*, i32** %11, align 8
  %84 = load i32, i32* %.0..0..0.8, align 4
  %.0..0..0.31 = load volatile i32*, i32** %7, align 8
  %85 = load i32, i32* %.0..0..0.31, align 4
  %.0..0..0.22 = load volatile i32*, i32** %9, align 8
  %86 = load i32, i32* %.0..0..0.22, align 4
  %.0..0..0.26 = load volatile i32***, i32**** %8, align 8
  %87 = load i32**, i32*** %.0..0..0.26, align 8
  %88 = call i32 @_Z6bisectiiiPPi(i32 %84, i32 %85, i32 %86, i32** %87)
  %.0..0..0.3 = load volatile i32*, i32** %12, align 8
  store i32 %88, i32* %.0..0..0.3, align 4
  br label %.backedge

89:                                               ; preds = %22
  %.0..0..0.9 = load volatile i32*, i32** %11, align 8
  %90 = load i32, i32* %.0..0..0.9, align 4
  %.0..0..0.16 = load volatile i32*, i32** %10, align 8
  %91 = load i32, i32* %.0..0..0.16, align 4
  %.0..0..0.32 = load volatile i32*, i32** %7, align 8
  %92 = load i32, i32* %.0..0..0.32, align 4
  %.0..0..0.27 = load volatile i32***, i32**** %8, align 8
  %93 = load i32**, i32*** %.0..0..0.27, align 8
  %94 = call i32 @_Z6bisectiiiPPi(i32 %90, i32 %91, i32 %92, i32** %93)
  %.0..0..0.4 = load volatile i32*, i32** %12, align 8
  store i32 %94, i32* %.0..0..0.4, align 4
  br label %.backedge

95:                                               ; preds = %22
  %.0..0..0.5 = load volatile i32*, i32** %12, align 8
  %96 = load i32, i32* %.0..0..0.5, align 4
  ret i32 %96

97:                                               ; preds = %22
  br label %.backedge

98:                                               ; preds = %22
  %.0..0..0.23 = load volatile i32*, i32** %9, align 8
  %99 = load i32, i32* %.0..0..0.23, align 4
  %.0..0..0.17 = load volatile i32*, i32** %10, align 8
  %100 = load i32, i32* %.0..0..0.17, align 4
  %101 = sub i32 %99, %100
  %102 = sdiv i32 %101, 2
  %.0..0..0.18 = load volatile i32*, i32** %10, align 8
  %103 = load i32, i32* %.0..0..0.18, align 4
  %104 = add i32 %102, %103
  %.0..0..0.33 = load volatile i32*, i32** %7, align 8
  store i32 %104, i32* %.0..0..0.33, align 4
  %.0..0..0.10 = load volatile i32*, i32** %11, align 8
  %105 = load i32, i32* %.0..0..0.10, align 4
  %.0..0..0.34 = load volatile i32*, i32** %7, align 8
  %106 = load i32, i32* %.0..0..0.34, align 4
  %.0..0..0.28 = load volatile i32***, i32**** %8, align 8
  %107 = load i32**, i32*** %.0..0..0.28, align 8
  %108 = call i32 @_Z5checkiiPPi(i32 %105, i32 %106, i32** %107)
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %6)
  %8 = load i32, i32* %6, align 4
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 2
  %11 = call noalias i8* @malloc(i64 %10) #5
  %12 = bitcast i8* %11 to i32*
  br label %13

13:                                               ; preds = %.backedge, %0
  %.071 = phi i32 [ 0, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32** [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i64 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.0 = phi i32 [ 1858589312, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1858589312, label %14
    i32 302405908, label %24
    i32 -340606339, label %36
    i32 1322866132, label %38
    i32 -932501051, label %48
    i32 719166743, label %61
    i32 -66856953, label %62
    i32 391952717, label %72
    i32 -687137736, label %83
    i32 -1478754385, label %84
    i32 571151778, label %91
    i32 -2010224042, label %101
    i32 -589657422, label %114
    i32 -1398168852, label %116
    i32 -48604935, label %126
    i32 1849513563, label %140
    i32 40346889, label %141
    i32 -37974270, label %151
    i32 -1762118970, label %162
    i32 2091290098, label %163
    i32 411654633, label %164
    i32 -1856809940, label %168
    i32 1999907153, label %169
    i32 -460302091, label %179
    i32 1384206354, label %190
    i32 -716670766, label %192
    i32 -808604113, label %204
    i32 2050314389, label %206
    i32 1712042361, label %207
    i32 -219059754, label %209
    i32 -2016221620, label %210
    i32 -735605587, label %214
    i32 -1045203411, label %215
    i32 1025284878, label %225
    i32 -1836118003, label %236
    i32 -1173480326, label %238
    i32 -1849366896, label %251
    i32 1148476038, label %253
    i32 942710572, label %254
    i32 1899774399, label %256
    i32 549024215, label %257
    i32 -388361496, label %261
    i32 1080044832, label %268
    i32 -608104525, label %278
    i32 -1744243988, label %288
    i32 -862769069, label %289
    i32 1819047210, label %299
    i32 -1820762661, label %310
    i32 1871964524, label %311
    i32 -180967682, label %312
    i32 -1661886275, label %316
    i32 1115831527, label %317
    i32 -1423879309, label %318
    i32 240121144, label %323
    i32 49748865, label %325
    i32 175156884, label %326
    i32 1077824854, label %327
    i32 -846054955, label %329
  ]

.backedge:                                        ; preds = %13, %329, %327, %326, %325, %323, %318, %317, %316, %312, %311, %299, %289, %288, %278, %268, %261, %257, %256, %254, %253, %251, %238, %236, %225, %215, %214, %210, %209, %207, %206, %204, %192, %190, %179, %169, %168, %164, %163, %162, %151, %141, %140, %126, %116, %114, %101, %91, %84, %83, %72, %62, %61, %48, %38, %36, %24, %14
  %.071.be = phi i32 [ %.071, %13 ], [ %.071, %329 ], [ %.071, %327 ], [ %.071, %326 ], [ %.071, %325 ], [ %.071, %323 ], [ %.071, %318 ], [ %.071, %317 ], [ %.neg, %316 ], [ %.071, %312 ], [ %.071, %311 ], [ %.071, %299 ], [ %.071, %289 ], [ %.071, %288 ], [ %.071, %278 ], [ %.071, %268 ], [ %.071, %261 ], [ %.071, %257 ], [ %.071, %256 ], [ %.071, %254 ], [ %.071, %253 ], [ %.071, %251 ], [ %.071, %238 ], [ %.071, %236 ], [ %.071, %225 ], [ %.071, %215 ], [ %.071, %214 ], [ %.071, %210 ], [ %.071, %209 ], [ %.071, %207 ], [ %.071, %206 ], [ %.071, %204 ], [ %.071, %192 ], [ %.071, %190 ], [ %.071, %179 ], [ %.071, %169 ], [ %.071, %168 ], [ %.071, %164 ], [ %.071, %163 ], [ %.071, %162 ], [ %.071, %151 ], [ %.071, %141 ], [ %.071, %140 ], [ %.071, %126 ], [ %.071, %116 ], [ %.071, %114 ], [ %.071, %101 ], [ %.071, %91 ], [ %.071, %84 ], [ %.071, %83 ], [ %73, %72 ], [ %.071, %62 ], [ %.071, %61 ], [ %.071, %48 ], [ %.071, %38 ], [ %.071, %36 ], [ %.071, %24 ], [ %.071, %14 ]
  %.069.be = phi i32** [ %.069, %13 ], [ %.069, %329 ], [ %.069, %327 ], [ %.069, %326 ], [ %.069, %325 ], [ %.069, %323 ], [ %.069, %318 ], [ %.069, %317 ], [ %.069, %316 ], [ %.069, %312 ], [ %.069, %311 ], [ %.069, %299 ], [ %.069, %289 ], [ %.069, %288 ], [ %.069, %278 ], [ %.069, %268 ], [ %.069, %261 ], [ %.069, %257 ], [ %.069, %256 ], [ %.069, %254 ], [ %.069, %253 ], [ %.069, %251 ], [ %.069, %238 ], [ %.069, %236 ], [ %.069, %225 ], [ %.069, %215 ], [ %.069, %214 ], [ %.069, %210 ], [ %.069, %209 ], [ %.069, %207 ], [ %.069, %206 ], [ %.069, %204 ], [ %.069, %192 ], [ %.069, %190 ], [ %.069, %179 ], [ %.069, %169 ], [ %.069, %168 ], [ %.069, %164 ], [ %.069, %163 ], [ %.069, %162 ], [ %.069, %151 ], [ %.069, %141 ], [ %.069, %140 ], [ %.069, %126 ], [ %.069, %116 ], [ %.069, %114 ], [ %.069, %101 ], [ %.069, %91 ], [ %90, %84 ], [ %.069, %83 ], [ %.069, %72 ], [ %.069, %62 ], [ %.069, %61 ], [ %.069, %48 ], [ %.069, %38 ], [ %.069, %36 ], [ %.069, %24 ], [ %.069, %14 ]
  %.067.be = phi i32 [ %.067, %13 ], [ %.067, %329 ], [ %.067, %327 ], [ %.067, %326 ], [ %.067, %325 ], [ %324, %323 ], [ %.067, %318 ], [ %.067, %317 ], [ %.067, %316 ], [ %.067, %312 ], [ %.067, %311 ], [ %.067, %299 ], [ %.067, %289 ], [ %.067, %288 ], [ %.067, %278 ], [ %.067, %268 ], [ %.067, %261 ], [ %.067, %257 ], [ %.067, %256 ], [ %.067, %254 ], [ %.067, %253 ], [ %.067, %251 ], [ %.067, %238 ], [ %.067, %236 ], [ %.067, %225 ], [ %.067, %215 ], [ %.067, %214 ], [ %.067, %210 ], [ %.067, %209 ], [ %.067, %207 ], [ %.067, %206 ], [ %.067, %204 ], [ %.067, %192 ], [ %.067, %190 ], [ %.067, %179 ], [ %.067, %169 ], [ %.067, %168 ], [ %.067, %164 ], [ %.067, %163 ], [ %.067, %162 ], [ %152, %151 ], [ %.067, %141 ], [ %.067, %140 ], [ %.067, %126 ], [ %.067, %116 ], [ %.067, %114 ], [ %.067, %101 ], [ %.067, %91 ], [ 0, %84 ], [ %.067, %83 ], [ %.067, %72 ], [ %.067, %62 ], [ %.067, %61 ], [ %.067, %48 ], [ %.067, %38 ], [ %.067, %36 ], [ %.067, %24 ], [ %.067, %14 ]
  %.065.be = phi i32 [ %.065, %13 ], [ %.065, %329 ], [ %.065, %327 ], [ %.065, %326 ], [ %.065, %325 ], [ %.065, %323 ], [ %.065, %318 ], [ %.065, %317 ], [ %.065, %316 ], [ %.065, %312 ], [ %.065, %311 ], [ %.065, %299 ], [ %.065, %289 ], [ %.065, %288 ], [ %.065, %278 ], [ %.065, %268 ], [ %.065, %261 ], [ %.065, %257 ], [ %.065, %256 ], [ %.065, %254 ], [ %.065, %253 ], [ %.065, %251 ], [ %.065, %238 ], [ %.065, %236 ], [ %.065, %225 ], [ %.065, %215 ], [ %.065, %214 ], [ %.065, %210 ], [ %.065, %209 ], [ %208, %207 ], [ %.065, %206 ], [ %.065, %204 ], [ %.065, %192 ], [ %.065, %190 ], [ %.065, %179 ], [ %.065, %169 ], [ %.065, %168 ], [ %.065, %164 ], [ 0, %163 ], [ %.065, %162 ], [ %.065, %151 ], [ %.065, %141 ], [ %.065, %140 ], [ %.065, %126 ], [ %.065, %116 ], [ %.065, %114 ], [ %.065, %101 ], [ %.065, %91 ], [ %.065, %84 ], [ %.065, %83 ], [ %.065, %72 ], [ %.065, %62 ], [ %.065, %61 ], [ %.065, %48 ], [ %.065, %38 ], [ %.065, %36 ], [ %.065, %24 ], [ %.065, %14 ]
  %.063.be = phi i32 [ %.063, %13 ], [ %.063, %329 ], [ %.063, %327 ], [ %.063, %326 ], [ %.063, %325 ], [ %.063, %323 ], [ %.063, %318 ], [ %.063, %317 ], [ %.063, %316 ], [ %.063, %312 ], [ %.063, %311 ], [ %.063, %299 ], [ %.063, %289 ], [ %.063, %288 ], [ %.063, %278 ], [ %.063, %268 ], [ %.063, %261 ], [ %.063, %257 ], [ %.063, %256 ], [ %.063, %254 ], [ %.063, %253 ], [ %.063, %251 ], [ %.063, %238 ], [ %.063, %236 ], [ %.063, %225 ], [ %.063, %215 ], [ %.063, %214 ], [ %.063, %210 ], [ %.063, %209 ], [ %.063, %207 ], [ %.063, %206 ], [ %205, %204 ], [ %.063, %192 ], [ %.063, %190 ], [ %.063, %179 ], [ %.063, %169 ], [ 0, %168 ], [ %.063, %164 ], [ %.063, %163 ], [ %.063, %162 ], [ %.063, %151 ], [ %.063, %141 ], [ %.063, %140 ], [ %.063, %126 ], [ %.063, %116 ], [ %.063, %114 ], [ %.063, %101 ], [ %.063, %91 ], [ %.063, %84 ], [ %.063, %83 ], [ %.063, %72 ], [ %.063, %62 ], [ %.063, %61 ], [ %.063, %48 ], [ %.063, %38 ], [ %.063, %36 ], [ %.063, %24 ], [ %.063, %14 ]
  %.061.be = phi i32 [ %.061, %13 ], [ %.061, %329 ], [ %.061, %327 ], [ %.061, %326 ], [ %.061, %325 ], [ %.061, %323 ], [ %.061, %318 ], [ %.061, %317 ], [ %.061, %316 ], [ %.061, %312 ], [ %.061, %311 ], [ %.061, %299 ], [ %.061, %289 ], [ %.061, %288 ], [ %.061, %278 ], [ %.061, %268 ], [ %.061, %261 ], [ %.061, %257 ], [ %.061, %256 ], [ %255, %254 ], [ %.061, %253 ], [ %.061, %251 ], [ %.061, %238 ], [ %.061, %236 ], [ %.061, %225 ], [ %.061, %215 ], [ %.061, %214 ], [ %.061, %210 ], [ 1, %209 ], [ %.061, %207 ], [ %.061, %206 ], [ %.061, %204 ], [ %.061, %192 ], [ %.061, %190 ], [ %.061, %179 ], [ %.061, %169 ], [ %.061, %168 ], [ %.061, %164 ], [ %.061, %163 ], [ %.061, %162 ], [ %.061, %151 ], [ %.061, %141 ], [ %.061, %140 ], [ %.061, %126 ], [ %.061, %116 ], [ %.061, %114 ], [ %.061, %101 ], [ %.061, %91 ], [ %.061, %84 ], [ %.061, %83 ], [ %.061, %72 ], [ %.061, %62 ], [ %.061, %61 ], [ %.061, %48 ], [ %.061, %38 ], [ %.061, %36 ], [ %.061, %24 ], [ %.061, %14 ]
  %.059.be = phi i32 [ %.059, %13 ], [ %.059, %329 ], [ %.059, %327 ], [ %.059, %326 ], [ %.059, %325 ], [ %.059, %323 ], [ %.059, %318 ], [ %.059, %317 ], [ %.059, %316 ], [ %.059, %312 ], [ %.059, %311 ], [ %.059, %299 ], [ %.059, %289 ], [ %.059, %288 ], [ %.059, %278 ], [ %.059, %268 ], [ %.059, %261 ], [ %.059, %257 ], [ %.059, %256 ], [ %.059, %254 ], [ %.059, %253 ], [ %252, %251 ], [ %.059, %238 ], [ %.059, %236 ], [ %.059, %225 ], [ %.059, %215 ], [ 0, %214 ], [ %.059, %210 ], [ %.059, %209 ], [ %.059, %207 ], [ %.059, %206 ], [ %.059, %204 ], [ %.059, %192 ], [ %.059, %190 ], [ %.059, %179 ], [ %.059, %169 ], [ %.059, %168 ], [ %.059, %164 ], [ %.059, %163 ], [ %.059, %162 ], [ %.059, %151 ], [ %.059, %141 ], [ %.059, %140 ], [ %.059, %126 ], [ %.059, %116 ], [ %.059, %114 ], [ %.059, %101 ], [ %.059, %91 ], [ %.059, %84 ], [ %.059, %83 ], [ %.059, %72 ], [ %.059, %62 ], [ %.059, %61 ], [ %.059, %48 ], [ %.059, %38 ], [ %.059, %36 ], [ %.059, %24 ], [ %.059, %14 ]
  %.057.be = phi i64 [ %.057, %13 ], [ %.057, %329 ], [ %.057, %327 ], [ %.057, %326 ], [ %.057, %325 ], [ %.057, %323 ], [ %.057, %318 ], [ %.057, %317 ], [ %.057, %316 ], [ %.057, %312 ], [ %.057, %311 ], [ %.057, %299 ], [ %.057, %289 ], [ %.057, %288 ], [ %.057, %278 ], [ %.057, %268 ], [ %267, %261 ], [ %.057, %257 ], [ 0, %256 ], [ %.057, %254 ], [ %.057, %253 ], [ %.057, %251 ], [ %.057, %238 ], [ %.057, %236 ], [ %.057, %225 ], [ %.057, %215 ], [ %.057, %214 ], [ %.057, %210 ], [ %.057, %209 ], [ %.057, %207 ], [ %.057, %206 ], [ %.057, %204 ], [ %.057, %192 ], [ %.057, %190 ], [ %.057, %179 ], [ %.057, %169 ], [ %.057, %168 ], [ %.057, %164 ], [ %.057, %163 ], [ %.057, %162 ], [ %.057, %151 ], [ %.057, %141 ], [ %.057, %140 ], [ %.057, %126 ], [ %.057, %116 ], [ %.057, %114 ], [ %.057, %101 ], [ %.057, %91 ], [ %.057, %84 ], [ %.057, %83 ], [ %.057, %72 ], [ %.057, %62 ], [ %.057, %61 ], [ %.057, %48 ], [ %.057, %38 ], [ %.057, %36 ], [ %.057, %24 ], [ %.057, %14 ]
  %.055.be = phi i32 [ %.055, %13 ], [ %.055, %329 ], [ %328, %327 ], [ %.055, %326 ], [ %.055, %325 ], [ %.055, %323 ], [ %.055, %318 ], [ %.055, %317 ], [ %.055, %316 ], [ %.055, %312 ], [ %.055, %311 ], [ %.055, %299 ], [ %.055, %289 ], [ %.055, %288 ], [ %.neg73, %278 ], [ %.055, %268 ], [ %.055, %261 ], [ %.055, %257 ], [ 0, %256 ], [ %.055, %254 ], [ %.055, %253 ], [ %.055, %251 ], [ %.055, %238 ], [ %.055, %236 ], [ %.055, %225 ], [ %.055, %215 ], [ %.055, %214 ], [ %.055, %210 ], [ %.055, %209 ], [ %.055, %207 ], [ %.055, %206 ], [ %.055, %204 ], [ %.055, %192 ], [ %.055, %190 ], [ %.055, %179 ], [ %.055, %169 ], [ %.055, %168 ], [ %.055, %164 ], [ %.055, %163 ], [ %.055, %162 ], [ %.055, %151 ], [ %.055, %141 ], [ %.055, %140 ], [ %.055, %126 ], [ %.055, %116 ], [ %.055, %114 ], [ %.055, %101 ], [ %.055, %91 ], [ %.055, %84 ], [ %.055, %83 ], [ %.055, %72 ], [ %.055, %62 ], [ %.055, %61 ], [ %.055, %48 ], [ %.055, %38 ], [ %.055, %36 ], [ %.055, %24 ], [ %.055, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ 1819047210, %329 ], [ -608104525, %327 ], [ 1025284878, %326 ], [ -460302091, %325 ], [ -37974270, %323 ], [ -48604935, %318 ], [ -2010224042, %317 ], [ 391952717, %316 ], [ -932501051, %312 ], [ 302405908, %311 ], [ %309, %299 ], [ %298, %289 ], [ 549024215, %288 ], [ %287, %278 ], [ %277, %268 ], [ 1080044832, %261 ], [ %260, %257 ], [ 549024215, %256 ], [ -2016221620, %254 ], [ 942710572, %253 ], [ -1045203411, %251 ], [ -1849366896, %238 ], [ %237, %236 ], [ %235, %225 ], [ %224, %215 ], [ -1045203411, %214 ], [ %213, %210 ], [ -2016221620, %209 ], [ 411654633, %207 ], [ 1712042361, %206 ], [ 1999907153, %204 ], [ -808604113, %192 ], [ %191, %190 ], [ %189, %179 ], [ %178, %169 ], [ 1999907153, %168 ], [ %167, %164 ], [ 411654633, %163 ], [ 571151778, %162 ], [ %161, %151 ], [ %150, %141 ], [ 40346889, %140 ], [ %139, %126 ], [ %125, %116 ], [ %115, %114 ], [ %113, %101 ], [ %100, %91 ], [ 571151778, %84 ], [ 1858589312, %83 ], [ %82, %72 ], [ %71, %62 ], [ -66856953, %61 ], [ %60, %48 ], [ %47, %38 ], [ %37, %36 ], [ %35, %24 ], [ %23, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = load i32, i32* @x.4, align 4
  %16 = load i32, i32* @y.5, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 302405908, i32 1871964524
  br label %.backedge

24:                                               ; preds = %13
  %25 = load i32, i32* %6, align 4
  %26 = icmp slt i32 %.071, %25
  store i1 %26, i1* %5, align 1
  %27 = load i32, i32* @x.4, align 4
  %28 = load i32, i32* @y.5, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -340606339, i32 1871964524
  br label %.backedge

36:                                               ; preds = %13
  %.0..0..0.50 = load volatile i1, i1* %5, align 1
  %37 = select i1 %.0..0..0.50, i32 1322866132, i32 -1478754385
  br label %.backedge

38:                                               ; preds = %13
  %39 = load i32, i32* @x.4, align 4
  %40 = load i32, i32* @y.5, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 -932501051, i32 -180967682
  br label %.backedge

48:                                               ; preds = %13
  %49 = sext i32 %.071 to i64
  %50 = getelementptr inbounds i32, i32* %12, i64 %49
  %51 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %50)
  %52 = load i32, i32* @x.4, align 4
  %53 = load i32, i32* @y.5, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 719166743, i32 -180967682
  br label %.backedge

61:                                               ; preds = %13
  br label %.backedge

62:                                               ; preds = %13
  %63 = load i32, i32* @x.4, align 4
  %64 = load i32, i32* @y.5, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 391952717, i32 -1661886275
  br label %.backedge

72:                                               ; preds = %13
  %73 = add i32 %.071, 1
  %74 = load i32, i32* @x.4, align 4
  %75 = load i32, i32* @y.5, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 -687137736, i32 -1661886275
  br label %.backedge

83:                                               ; preds = %13
  br label %.backedge

84:                                               ; preds = %13
  %85 = load i32, i32* %6, align 4
  %86 = add i32 %85, 1
  %87 = sext i32 %86 to i64
  %88 = shl nsw i64 %87, 3
  %89 = call noalias i8* @malloc(i64 %88) #5
  %90 = bitcast i8* %89 to i32**
  br label %.backedge

91:                                               ; preds = %13
  %92 = load i32, i32* @x.4, align 4
  %93 = load i32, i32* @y.5, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 -2010224042, i32 1115831527
  br label %.backedge

101:                                              ; preds = %13
  %102 = load i32, i32* %6, align 4
  %103 = add i32 %102, 1
  %104 = icmp slt i32 %.067, %103
  store i1 %104, i1* %4, align 1
  %105 = load i32, i32* @x.4, align 4
  %106 = load i32, i32* @y.5, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 -589657422, i32 1115831527
  br label %.backedge

114:                                              ; preds = %13
  %.0..0..0.51 = load volatile i1, i1* %4, align 1
  %115 = select i1 %.0..0..0.51, i32 -1398168852, i32 2091290098
  br label %.backedge

116:                                              ; preds = %13
  %117 = load i32, i32* @x.4, align 4
  %118 = load i32, i32* @y.5, align 4
  %119 = add i32 %117, -1
  %120 = mul i32 %119, %117
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %123, %122
  %125 = select i1 %124, i32 -48604935, i32 -1423879309
  br label %.backedge

126:                                              ; preds = %13
  %127 = call noalias dereferenceable_or_null(80) i8* @calloc(i64 20, i64 4) #5
  %128 = sext i32 %.067 to i64
  %129 = getelementptr inbounds i32*, i32** %.069, i64 %128
  %130 = bitcast i32** %129 to i8**
  store i8* %127, i8** %130, align 8
  %131 = load i32, i32* @x.4, align 4
  %132 = load i32, i32* @y.5, align 4
  %133 = add i32 %131, -1
  %134 = mul i32 %133, %131
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %137, %136
  %139 = select i1 %138, i32 1849513563, i32 -1423879309
  br label %.backedge

140:                                              ; preds = %13
  br label %.backedge

141:                                              ; preds = %13
  %142 = load i32, i32* @x.4, align 4
  %143 = load i32, i32* @y.5, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -37974270, i32 240121144
  br label %.backedge

151:                                              ; preds = %13
  %152 = add i32 %.067, 1
  %153 = load i32, i32* @x.4, align 4
  %154 = load i32, i32* @y.5, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 -1762118970, i32 240121144
  br label %.backedge

162:                                              ; preds = %13
  br label %.backedge

163:                                              ; preds = %13
  br label %.backedge

164:                                              ; preds = %13
  %165 = load i32, i32* %6, align 4
  %166 = icmp slt i32 %.065, %165
  %167 = select i1 %166, i32 -1856809940, i32 -219059754
  br label %.backedge

168:                                              ; preds = %13
  br label %.backedge

169:                                              ; preds = %13
  %170 = load i32, i32* @x.4, align 4
  %171 = load i32, i32* @y.5, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 -460302091, i32 49748865
  br label %.backedge

179:                                              ; preds = %13
  %180 = icmp slt i32 %.063, 20
  store i1 %180, i1* %3, align 1
  %181 = load i32, i32* @x.4, align 4
  %182 = load i32, i32* @y.5, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 1384206354, i32 49748865
  br label %.backedge

190:                                              ; preds = %13
  %.0..0..0.52 = load volatile i1, i1* %3, align 1
  %191 = select i1 %.0..0..0.52, i32 -716670766, i32 2050314389
  br label %.backedge

192:                                              ; preds = %13
  %193 = sext i32 %.065 to i64
  %194 = getelementptr inbounds i32, i32* %12, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = lshr i32 %195, %.063
  %197 = and i32 %196, 1
  %198 = add i32 %.065, 1
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i32*, i32** %.069, i64 %199
  %201 = load i32*, i32** %200, align 8
  %202 = sext i32 %.063 to i64
  %203 = getelementptr inbounds i32, i32* %201, i64 %202
  store i32 %197, i32* %203, align 4
  br label %.backedge

204:                                              ; preds = %13
  %205 = add i32 %.063, 1
  br label %.backedge

206:                                              ; preds = %13
  br label %.backedge

207:                                              ; preds = %13
  %208 = add i32 %.065, 1
  br label %.backedge

209:                                              ; preds = %13
  br label %.backedge

210:                                              ; preds = %13
  %211 = load i32, i32* %6, align 4
  %212 = icmp slt i32 %.061, %211
  %213 = select i1 %212, i32 -735605587, i32 1899774399
  br label %.backedge

214:                                              ; preds = %13
  br label %.backedge

215:                                              ; preds = %13
  %216 = load i32, i32* @x.4, align 4
  %217 = load i32, i32* @y.5, align 4
  %218 = add i32 %216, -1
  %219 = mul i32 %218, %216
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %222, %221
  %224 = select i1 %223, i32 1025284878, i32 175156884
  br label %.backedge

225:                                              ; preds = %13
  %226 = icmp slt i32 %.059, 20
  store i1 %226, i1* %2, align 1
  %227 = load i32, i32* @x.4, align 4
  %228 = load i32, i32* @y.5, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 -1836118003, i32 175156884
  br label %.backedge

236:                                              ; preds = %13
  %.0..0..0.53 = load volatile i1, i1* %2, align 1
  %237 = select i1 %.0..0..0.53, i32 -1173480326, i32 1148476038
  br label %.backedge

238:                                              ; preds = %13
  %239 = sext i32 %.061 to i64
  %240 = getelementptr inbounds i32*, i32** %.069, i64 %239
  %241 = load i32*, i32** %240, align 8
  %242 = sext i32 %.059 to i64
  %243 = getelementptr inbounds i32, i32* %241, i64 %242
  %244 = load i32, i32* %243, align 4
  %.neg74 = add i32 %.061, 1
  %245 = sext i32 %.neg74 to i64
  %246 = getelementptr inbounds i32*, i32** %.069, i64 %245
  %247 = load i32*, i32** %246, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 %242
  %249 = load i32, i32* %248, align 4
  %250 = add i32 %249, %244
  store i32 %250, i32* %248, align 4
  br label %.backedge

251:                                              ; preds = %13
  %252 = add i32 %.059, 1
  br label %.backedge

253:                                              ; preds = %13
  br label %.backedge

254:                                              ; preds = %13
  %255 = add i32 %.061, 1
  br label %.backedge

256:                                              ; preds = %13
  br label %.backedge

257:                                              ; preds = %13
  %258 = load i32, i32* %6, align 4
  %259 = icmp slt i32 %.055, %258
  %260 = select i1 %259, i32 -388361496, i32 -862769069
  br label %.backedge

261:                                              ; preds = %13
  %262 = load i32, i32* %6, align 4
  %263 = add i32 %262, 1
  %264 = call i32 @_Z6bisectiiiPPi(i32 %.055, i32 %.055, i32 %263, i32** %.069)
  %265 = sub i32 %264, %.055
  %266 = sext i32 %265 to i64
  %267 = add i64 %.057, %266
  br label %.backedge

268:                                              ; preds = %13
  %269 = load i32, i32* @x.4, align 4
  %270 = load i32, i32* @y.5, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 -608104525, i32 1077824854
  br label %.backedge

278:                                              ; preds = %13
  %.neg73 = add i32 %.055, 1
  %279 = load i32, i32* @x.4, align 4
  %280 = load i32, i32* @y.5, align 4
  %281 = add i32 %279, -1
  %282 = mul i32 %281, %279
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %285, %284
  %287 = select i1 %286, i32 -1744243988, i32 1077824854
  br label %.backedge

288:                                              ; preds = %13
  br label %.backedge

289:                                              ; preds = %13
  %290 = load i32, i32* @x.4, align 4
  %291 = load i32, i32* @y.5, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 1819047210, i32 -846054955
  br label %.backedge

299:                                              ; preds = %13
  %300 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 %.057)
  store i32 0, i32* %1, align 4
  %301 = load i32, i32* @x.4, align 4
  %302 = load i32, i32* @y.5, align 4
  %303 = add i32 %301, -1
  %304 = mul i32 %303, %301
  %305 = and i32 %304, 1
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %307, %306
  %309 = select i1 %308, i32 -1820762661, i32 -846054955
  br label %.backedge

310:                                              ; preds = %13
  %.0..0..0.54 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.54

311:                                              ; preds = %13
  br label %.backedge

312:                                              ; preds = %13
  %313 = sext i32 %.071 to i64
  %314 = getelementptr inbounds i32, i32* %12, i64 %313
  %315 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %314)
  br label %.backedge

316:                                              ; preds = %13
  %.neg = add i32 %.071, 1
  br label %.backedge

317:                                              ; preds = %13
  br label %.backedge

318:                                              ; preds = %13
  %319 = call noalias dereferenceable_or_null(80) i8* @calloc(i64 20, i64 4) #5
  %320 = sext i32 %.067 to i64
  %321 = getelementptr inbounds i32*, i32** %.069, i64 %320
  %322 = bitcast i32** %321 to i8**
  store i8* %319, i8** %322, align 8
  br label %.backedge

323:                                              ; preds = %13
  %324 = add i32 %.067, 1
  br label %.backedge

325:                                              ; preds = %13
  br label %.backedge

326:                                              ; preds = %13
  br label %.backedge

327:                                              ; preds = %13
  %328 = add i32 %.055, 1
  br label %.backedge

329:                                              ; preds = %13
  %330 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 %.057)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn
declare noalias noundef i8* @malloc(i64 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn
declare noalias noundef i8* @calloc(i64 noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inaccessiblememonly mustprogress nofree nounwind willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nofree nounwind willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
