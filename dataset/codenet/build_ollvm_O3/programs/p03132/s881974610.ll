; ModuleID = 'build_ollvm/programs/p03132/s881974610.ll'
source_filename = "Project_CodeNet_C++1400/p03132/s881974610.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca i1, align 1
  %3 = alloca i64, align 8
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i64, align 8
  %11 = alloca i1, align 1
  %12 = alloca i64, align 8
  %13 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64* nonnull %12)
  %14 = load i64, i64* %12, align 8
  %15 = alloca [5 x i64], i64 %14, align 16
  %16 = alloca i64, i64 %14, align 16
  %17 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 0, i64 3
  %18 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 0, i64 1
  %19 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 0, i64 2
  %20 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 0, i64 4
  %21 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 0, i64 0
  br label %22

22:                                               ; preds = %.backedge, %0
  %.0114 = phi i64 [ 0, %0 ], [ %.0114.be, %.backedge ]
  %.0112 = phi i64 [ undef, %0 ], [ %.0112.be, %.backedge ]
  %.0110 = phi i64 [ undef, %0 ], [ %.0110.be, %.backedge ]
  %.0108 = phi i64 [ 1000000000000000000, %0 ], [ %.0108.be, %.backedge ]
  %.0106 = phi i32 [ -1659324483, %0 ], [ %.0106.be, %.backedge ]
  %.0104 = phi i64 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i64 [ undef, %0 ], [ %.0102.be, %.backedge ]
  %.0 = phi i64 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0106, label %.backedge [
    i32 -1659324483, label %23
    i32 1355167944, label %27
    i32 823120211, label %30
    i32 123087055, label %31
    i32 -1547554421, label %32
    i32 -50939491, label %36
    i32 887816930, label %46
    i32 -768991090, label %56
    i32 -1036412136, label %57
    i32 679257329, label %67
    i32 -1799823268, label %78
    i32 -26905885, label %80
    i32 -1020560749, label %82
    i32 -266946893, label %92
    i32 -2018053713, label %103
    i32 1877706152, label %104
    i32 1362426339, label %105
    i32 742442361, label %106
    i32 -688900118, label %109
    i32 453475753, label %119
    i32 -1126889685, label %131
    i32 749080103, label %132
    i32 98379773, label %142
    i32 1992128921, label %152
    i32 1640040454, label %153
    i32 -1213353347, label %157
    i32 815647212, label %161
    i32 -743028850, label %162
    i32 -1247976310, label %165
    i32 2007107853, label %175
    i32 -1699795626, label %185
    i32 -937092811, label %186
    i32 325042763, label %196
    i32 2105851977, label %207
    i32 -31126609, label %209
    i32 525285649, label %219
    i32 790629280, label %230
    i32 -880973000, label %232
    i32 990824530, label %235
    i32 288033164, label %246
    i32 1201447849, label %254
    i32 -1721504845, label %264
    i32 1682451117, label %274
    i32 -477167922, label %275
    i32 -76606016, label %278
    i32 -2105734020, label %281
    i32 -788436880, label %290
    i32 1154131876, label %294
    i32 -1183724657, label %304
    i32 -1855511171, label %314
    i32 -1070874038, label %315
    i32 98209136, label %319
    i32 287164114, label %329
    i32 235067563, label %345
    i32 -1078397128, label %347
    i32 1688323656, label %357
    i32 2092636211, label %370
    i32 -925938182, label %371
    i32 -1997047599, label %372
    i32 -195741170, label %382
    i32 1435309582, label %394
    i32 340652081, label %395
    i32 -113050364, label %396
    i32 1730184180, label %408
    i32 -943176414, label %418
    i32 -1759186480, label %419
    i32 511524693, label %429
    i32 1849337190, label %439
    i32 1784860439, label %440
    i32 652462684, label %450
    i32 1021021492, label %460
    i32 1170324418, label %461
    i32 1257496652, label %471
    i32 -206260780, label %482
    i32 -861964699, label %483
    i32 -1275185950, label %484
    i32 -1794761812, label %486
    i32 2117557857, label %487
    i32 -1947143804, label %489
    i32 1852784487, label %490
    i32 582360945, label %500
    i32 -1240638117, label %511
    i32 -892306354, label %513
    i32 -878040567, label %520
    i32 1546163026, label %530
    i32 -1657462137, label %544
    i32 961848830, label %545
    i32 -668871658, label %546
    i32 -1768770005, label %547
    i32 -946799339, label %549
    i32 -407091819, label %550
    i32 -1504862239, label %551
    i32 6781411, label %553
    i32 1197467347, label %554
    i32 -1740954216, label %555
    i32 -187238192, label %556
    i32 1653407662, label %557
    i32 -1174309857, label %558
    i32 1846039786, label %559
    i32 -52574948, label %560
    i32 -266516360, label %561
    i32 -493097992, label %562
    i32 1829315483, label %565
    i32 -1426953310, label %566
    i32 -1131208573, label %567
    i32 -1266927211, label %569
    i32 80785798, label %570
  ]

.backedge:                                        ; preds = %22, %570, %569, %567, %566, %565, %562, %561, %560, %559, %558, %557, %556, %555, %554, %553, %551, %550, %549, %546, %545, %544, %530, %520, %513, %511, %500, %490, %489, %487, %486, %484, %483, %482, %471, %461, %460, %450, %440, %439, %429, %419, %418, %408, %396, %395, %394, %382, %372, %371, %370, %357, %347, %345, %329, %319, %315, %314, %304, %294, %290, %281, %278, %275, %274, %264, %254, %246, %235, %232, %230, %219, %209, %207, %196, %186, %185, %175, %165, %162, %161, %157, %153, %152, %142, %132, %131, %119, %109, %106, %105, %104, %103, %92, %82, %80, %78, %67, %57, %56, %46, %36, %32, %31, %30, %27, %23
  %.0114.be = phi i64 [ %.0114, %22 ], [ %.0114, %570 ], [ %.0114, %569 ], [ %.0114, %567 ], [ %.0114, %566 ], [ %.0114, %565 ], [ %.0114, %562 ], [ %.0114, %561 ], [ %.0114, %560 ], [ %.0114, %559 ], [ %.0114, %558 ], [ %.0114, %557 ], [ %.0114, %556 ], [ %.0114, %555 ], [ %.0114, %554 ], [ %.0114, %553 ], [ %.0114, %551 ], [ %.0114, %550 ], [ %.0114, %549 ], [ %.neg, %546 ], [ %.0114, %545 ], [ %.0114, %544 ], [ %.0114, %530 ], [ %.0114, %520 ], [ %.0114, %513 ], [ %.0114, %511 ], [ %.0114, %500 ], [ %.0114, %490 ], [ 0, %489 ], [ %488, %487 ], [ %.0114, %486 ], [ %.0114, %484 ], [ %.0114, %483 ], [ %.0114, %482 ], [ %.0114, %471 ], [ %.0114, %461 ], [ %.0114, %460 ], [ %.0114, %450 ], [ %.0114, %440 ], [ %.0114, %439 ], [ %.0114, %429 ], [ %.0114, %419 ], [ %.0114, %418 ], [ %.0114, %408 ], [ %.0114, %396 ], [ %.0114, %395 ], [ %.0114, %394 ], [ %.0114, %382 ], [ %.0114, %372 ], [ %.0114, %371 ], [ %.0114, %370 ], [ %.0114, %357 ], [ %.0114, %347 ], [ %.0114, %345 ], [ %.0114, %329 ], [ %.0114, %319 ], [ %.0114, %315 ], [ %.0114, %314 ], [ %.0114, %304 ], [ %.0114, %294 ], [ %.0114, %290 ], [ %.0114, %281 ], [ %.0114, %278 ], [ %.0114, %275 ], [ %.0114, %274 ], [ %.0114, %264 ], [ %.0114, %254 ], [ %.0114, %246 ], [ %.0114, %235 ], [ %.0114, %232 ], [ %.0114, %230 ], [ %.0114, %219 ], [ %.0114, %209 ], [ %.0114, %207 ], [ %.0114, %196 ], [ %.0114, %186 ], [ %.0114, %185 ], [ %.0114, %175 ], [ %.0114, %165 ], [ %.0114, %162 ], [ %.0114, %161 ], [ %.0114, %157 ], [ 1, %153 ], [ %.0114, %152 ], [ %.0114, %142 ], [ %.0114, %132 ], [ %.0114, %131 ], [ %.0114, %119 ], [ %.0114, %109 ], [ %.0114, %106 ], [ %.neg119, %105 ], [ %.0114, %104 ], [ %.0114, %103 ], [ %.0114, %92 ], [ %.0114, %82 ], [ %.0114, %80 ], [ %.0114, %78 ], [ %.0114, %67 ], [ %.0114, %57 ], [ %.0114, %56 ], [ %.0114, %46 ], [ %.0114, %36 ], [ %.0114, %32 ], [ 0, %31 ], [ %.neg120, %30 ], [ %.0114, %27 ], [ %.0114, %23 ]
  %.0112.be = phi i64 [ %.0112, %22 ], [ %.0112, %570 ], [ %.0112, %569 ], [ %.0112, %567 ], [ %.0112, %566 ], [ %.0112, %565 ], [ %.0112, %562 ], [ %.0112, %561 ], [ %.0112, %560 ], [ %.0112, %559 ], [ %.0112, %558 ], [ %.0112, %557 ], [ %.0112, %556 ], [ %.0112, %555 ], [ %.0112, %554 ], [ %.0112, %553 ], [ %552, %551 ], [ %.0112, %550 ], [ 0, %549 ], [ %.0112, %546 ], [ %.0112, %545 ], [ %.0112, %544 ], [ %.0112, %530 ], [ %.0112, %520 ], [ %.0112, %513 ], [ %.0112, %511 ], [ %.0112, %500 ], [ %.0112, %490 ], [ %.0112, %489 ], [ %.0112, %487 ], [ %.0112, %486 ], [ %485, %484 ], [ %.0112, %483 ], [ %.0112, %482 ], [ %.0112, %471 ], [ %.0112, %461 ], [ %.0112, %460 ], [ %.0112, %450 ], [ %.0112, %440 ], [ %.0112, %439 ], [ %.0112, %429 ], [ %.0112, %419 ], [ %.0112, %418 ], [ %.0112, %408 ], [ %.0112, %396 ], [ %.0112, %395 ], [ %.0112, %394 ], [ %.0112, %382 ], [ %.0112, %372 ], [ %.0112, %371 ], [ %.0112, %370 ], [ %.0112, %357 ], [ %.0112, %347 ], [ %.0112, %345 ], [ %.0112, %329 ], [ %.0112, %319 ], [ %.0112, %315 ], [ %.0112, %314 ], [ %.0112, %304 ], [ %.0112, %294 ], [ %.0112, %290 ], [ %.0112, %281 ], [ %.0112, %278 ], [ %.0112, %275 ], [ %.0112, %274 ], [ %.0112, %264 ], [ %.0112, %254 ], [ %.0112, %246 ], [ %.0112, %235 ], [ %.0112, %232 ], [ %.0112, %230 ], [ %.0112, %219 ], [ %.0112, %209 ], [ %.0112, %207 ], [ %.0112, %196 ], [ %.0112, %186 ], [ %.0112, %185 ], [ %.0112, %175 ], [ %.0112, %165 ], [ %.0112, %162 ], [ 0, %161 ], [ %.0112, %157 ], [ %.0112, %153 ], [ %.0112, %152 ], [ %.0112, %142 ], [ %.0112, %132 ], [ %.0112, %131 ], [ %.0112, %119 ], [ %.0112, %109 ], [ %.0112, %106 ], [ %.0112, %105 ], [ %.0112, %104 ], [ %.0112, %103 ], [ %93, %92 ], [ %.0112, %82 ], [ %.0112, %80 ], [ %.0112, %78 ], [ %.0112, %67 ], [ %.0112, %57 ], [ %.0112, %56 ], [ 0, %46 ], [ %.0112, %36 ], [ %.0112, %32 ], [ %.0112, %31 ], [ %.0112, %30 ], [ %.0112, %27 ], [ %.0112, %23 ]
  %.0110.be = phi i64 [ %.0110, %22 ], [ %.0110, %570 ], [ %.0110, %569 ], [ %568, %567 ], [ %.0110, %566 ], [ %.0110, %565 ], [ %.0110, %562 ], [ %.0110, %561 ], [ %.0110, %560 ], [ %.0110, %559 ], [ %.0110, %558 ], [ %.0110, %557 ], [ %.0110, %556 ], [ %.0112, %555 ], [ %.0110, %554 ], [ %.0110, %553 ], [ %.0110, %551 ], [ %.0110, %550 ], [ %.0110, %549 ], [ %.0110, %546 ], [ %.0110, %545 ], [ %.0110, %544 ], [ %.0110, %530 ], [ %.0110, %520 ], [ %.0110, %513 ], [ %.0110, %511 ], [ %.0110, %500 ], [ %.0110, %490 ], [ %.0110, %489 ], [ %.0110, %487 ], [ %.0110, %486 ], [ %.0110, %484 ], [ %.0110, %483 ], [ %.0110, %482 ], [ %472, %471 ], [ %.0110, %461 ], [ %.0110, %460 ], [ %.0110, %450 ], [ %.0110, %440 ], [ %.0110, %439 ], [ %.0110, %429 ], [ %.0110, %419 ], [ %.0110, %418 ], [ %.0110, %408 ], [ %.0110, %396 ], [ %.0110, %395 ], [ %.0110, %394 ], [ %.0110, %382 ], [ %.0110, %372 ], [ %.0110, %371 ], [ %.0110, %370 ], [ %.0110, %357 ], [ %.0110, %347 ], [ %.0110, %345 ], [ %.0110, %329 ], [ %.0110, %319 ], [ %.0110, %315 ], [ %.0110, %314 ], [ %.0110, %304 ], [ %.0110, %294 ], [ %.0110, %290 ], [ %.0110, %281 ], [ %.0110, %278 ], [ %.0110, %275 ], [ %.0110, %274 ], [ %.0110, %264 ], [ %.0110, %254 ], [ %.0110, %246 ], [ %.0110, %235 ], [ %.0110, %232 ], [ %.0110, %230 ], [ %.0110, %219 ], [ %.0110, %209 ], [ %.0110, %207 ], [ %.0110, %196 ], [ %.0110, %186 ], [ %.0110, %185 ], [ %.0112, %175 ], [ %.0110, %165 ], [ %.0110, %162 ], [ %.0110, %161 ], [ %.0110, %157 ], [ %.0110, %153 ], [ %.0110, %152 ], [ %.0110, %142 ], [ %.0110, %132 ], [ %.0110, %131 ], [ %.0110, %119 ], [ %.0110, %109 ], [ %.0110, %106 ], [ %.0110, %105 ], [ %.0110, %104 ], [ %.0110, %103 ], [ %.0110, %92 ], [ %.0110, %82 ], [ %.0110, %80 ], [ %.0110, %78 ], [ %.0110, %67 ], [ %.0110, %57 ], [ %.0110, %56 ], [ %.0110, %46 ], [ %.0110, %36 ], [ %.0110, %32 ], [ %.0110, %31 ], [ %.0110, %30 ], [ %.0110, %27 ], [ %.0110, %23 ]
  %.0108.be = phi i64 [ %.0108, %22 ], [ %574, %570 ], [ %.0108, %569 ], [ %.0108, %567 ], [ %.0108, %566 ], [ %.0108, %565 ], [ %.0108, %562 ], [ %.0108, %561 ], [ %.0108, %560 ], [ %.0108, %559 ], [ %.0108, %558 ], [ %.0108, %557 ], [ %.0108, %556 ], [ %.0108, %555 ], [ %.0108, %554 ], [ %.0108, %553 ], [ %.0108, %551 ], [ %.0108, %550 ], [ %.0108, %549 ], [ %.0108, %546 ], [ %.0108, %545 ], [ %.0108, %544 ], [ %534, %530 ], [ %.0108, %520 ], [ %.0108, %513 ], [ %.0108, %511 ], [ %.0108, %500 ], [ %.0108, %490 ], [ %.0108, %489 ], [ %.0108, %487 ], [ %.0108, %486 ], [ %.0108, %484 ], [ %.0108, %483 ], [ %.0108, %482 ], [ %.0108, %471 ], [ %.0108, %461 ], [ %.0108, %460 ], [ %.0108, %450 ], [ %.0108, %440 ], [ %.0108, %439 ], [ %.0108, %429 ], [ %.0108, %419 ], [ %.0108, %418 ], [ %.0108, %408 ], [ %.0108, %396 ], [ %.0108, %395 ], [ %.0108, %394 ], [ %.0108, %382 ], [ %.0108, %372 ], [ %.0108, %371 ], [ %.0108, %370 ], [ %.0108, %357 ], [ %.0108, %347 ], [ %.0108, %345 ], [ %.0108, %329 ], [ %.0108, %319 ], [ %.0108, %315 ], [ %.0108, %314 ], [ %.0108, %304 ], [ %.0108, %294 ], [ %.0108, %290 ], [ %.0108, %281 ], [ %.0108, %278 ], [ %.0108, %275 ], [ %.0108, %274 ], [ %.0108, %264 ], [ %.0108, %254 ], [ %.0108, %246 ], [ %.0108, %235 ], [ %.0108, %232 ], [ %.0108, %230 ], [ %.0108, %219 ], [ %.0108, %209 ], [ %.0108, %207 ], [ %.0108, %196 ], [ %.0108, %186 ], [ %.0108, %185 ], [ %.0108, %175 ], [ %.0108, %165 ], [ %.0108, %162 ], [ %.0108, %161 ], [ %.0108, %157 ], [ %.0108, %153 ], [ %.0108, %152 ], [ %.0108, %142 ], [ %.0108, %132 ], [ %.0108, %131 ], [ %.0108, %119 ], [ %.0108, %109 ], [ %.0108, %106 ], [ %.0108, %105 ], [ %.0108, %104 ], [ %.0108, %103 ], [ %.0108, %92 ], [ %.0108, %82 ], [ %.0108, %80 ], [ %.0108, %78 ], [ %.0108, %67 ], [ %.0108, %57 ], [ %.0108, %56 ], [ %.0108, %46 ], [ %.0108, %36 ], [ %.0108, %32 ], [ %.0108, %31 ], [ %.0108, %30 ], [ %.0108, %27 ], [ %.0108, %23 ]
  %.0106.be = phi i32 [ %.0106, %22 ], [ 1546163026, %570 ], [ 582360945, %569 ], [ 1257496652, %567 ], [ 652462684, %566 ], [ 511524693, %565 ], [ -195741170, %562 ], [ 1688323656, %561 ], [ 287164114, %560 ], [ -1183724657, %559 ], [ -1721504845, %558 ], [ 525285649, %557 ], [ 325042763, %556 ], [ 2007107853, %555 ], [ 98379773, %554 ], [ 453475753, %553 ], [ -266946893, %551 ], [ 679257329, %550 ], [ 887816930, %549 ], [ 1852784487, %546 ], [ -668871658, %545 ], [ 961848830, %544 ], [ %543, %530 ], [ %529, %520 ], [ %519, %513 ], [ %512, %511 ], [ %510, %500 ], [ %499, %490 ], [ 1852784487, %489 ], [ -1213353347, %487 ], [ 2117557857, %486 ], [ -743028850, %484 ], [ -1275185950, %483 ], [ -937092811, %482 ], [ %481, %471 ], [ %470, %461 ], [ 1170324418, %460 ], [ %459, %450 ], [ %449, %440 ], [ 1784860439, %439 ], [ %438, %429 ], [ %428, %419 ], [ -1759186480, %418 ], [ -943176414, %408 ], [ %407, %396 ], [ -1759186480, %395 ], [ 340652081, %394 ], [ %393, %382 ], [ %381, %372 ], [ -1997047599, %371 ], [ -1997047599, %370 ], [ %369, %357 ], [ %356, %347 ], [ %346, %345 ], [ %344, %329 ], [ %328, %319 ], [ %318, %315 ], [ -1070874038, %314 ], [ %313, %304 ], [ %303, %294 ], [ -1070874038, %290 ], [ %289, %281 ], [ %280, %278 ], [ %277, %275 ], [ 1784860439, %274 ], [ %273, %264 ], [ %263, %254 ], [ 1201447849, %246 ], [ %245, %235 ], [ %234, %232 ], [ %231, %230 ], [ %229, %219 ], [ %218, %209 ], [ %208, %207 ], [ %206, %196 ], [ %195, %186 ], [ -937092811, %185 ], [ %184, %175 ], [ %174, %165 ], [ %164, %162 ], [ -743028850, %161 ], [ %160, %157 ], [ -1213353347, %153 ], [ 1640040454, %152 ], [ %151, %142 ], [ %141, %132 ], [ 1640040454, %131 ], [ %130, %119 ], [ %118, %109 ], [ %108, %106 ], [ -1547554421, %105 ], [ 1362426339, %104 ], [ -1036412136, %103 ], [ %102, %92 ], [ %91, %82 ], [ -1020560749, %80 ], [ %79, %78 ], [ %77, %67 ], [ %66, %57 ], [ -1036412136, %56 ], [ %55, %46 ], [ %45, %36 ], [ %35, %32 ], [ -1547554421, %31 ], [ -1659324483, %30 ], [ 823120211, %27 ], [ %26, %23 ]
  %.0104.be = phi i64 [ %.0104, %22 ], [ %.0104, %570 ], [ %.0104, %569 ], [ %.0104, %567 ], [ %.0104, %566 ], [ %.0104, %565 ], [ %.0104, %562 ], [ %.0104, %561 ], [ %.0104, %560 ], [ %.0104, %559 ], [ %.0104, %558 ], [ %.0104, %557 ], [ %.0104, %556 ], [ %.0104, %555 ], [ %.0104, %554 ], [ %.0104, %553 ], [ %.0104, %551 ], [ %.0104, %550 ], [ %.0104, %549 ], [ %.0104, %546 ], [ %.0104, %545 ], [ %.0104, %544 ], [ %.0104, %530 ], [ %.0104, %520 ], [ %.0104, %513 ], [ %.0104, %511 ], [ %.0104, %500 ], [ %.0104, %490 ], [ %.0104, %489 ], [ %.0104, %487 ], [ %.0104, %486 ], [ %.0104, %484 ], [ %.0104, %483 ], [ %.0104, %482 ], [ %.0104, %471 ], [ %.0104, %461 ], [ %.0104, %460 ], [ %.0104, %450 ], [ %.0104, %440 ], [ %.0104, %439 ], [ %.0104, %429 ], [ %.0104, %419 ], [ %.0104, %418 ], [ %.0104, %408 ], [ %.0104, %396 ], [ %.0104, %395 ], [ %.0104, %394 ], [ %.0104, %382 ], [ %.0104, %372 ], [ %.0104, %371 ], [ %.0104, %370 ], [ %.0104, %357 ], [ %.0104, %347 ], [ %.0104, %345 ], [ %.0104, %329 ], [ %.0104, %319 ], [ %.0104, %315 ], [ %.0104, %314 ], [ %.0104, %304 ], [ %.0104, %294 ], [ %.0104, %290 ], [ %.0104, %281 ], [ %.0104, %278 ], [ %.0104, %275 ], [ %.0104, %274 ], [ %.0104, %264 ], [ %.0104, %254 ], [ %.0104, %246 ], [ %.0104, %235 ], [ %.0104, %232 ], [ %.0104, %230 ], [ %.0104, %219 ], [ %.0104, %209 ], [ %.0104, %207 ], [ %.0104, %196 ], [ %.0104, %186 ], [ %.0104, %185 ], [ %.0104, %175 ], [ %.0104, %165 ], [ %.0104, %162 ], [ %.0104, %161 ], [ %.0104, %157 ], [ %.0104, %153 ], [ 2, %152 ], [ %.0104, %142 ], [ %.0104, %132 ], [ %.0..0..0.78, %131 ], [ %.0104, %119 ], [ %.0104, %109 ], [ %.0104, %106 ], [ %.0104, %105 ], [ %.0104, %104 ], [ %.0104, %103 ], [ %.0104, %92 ], [ %.0104, %82 ], [ %.0104, %80 ], [ %.0104, %78 ], [ %.0104, %67 ], [ %.0104, %57 ], [ %.0104, %56 ], [ %.0104, %46 ], [ %.0104, %36 ], [ %.0104, %32 ], [ %.0104, %31 ], [ %.0104, %30 ], [ %.0104, %27 ], [ %.0104, %23 ]
  %.0102.be = phi i64 [ %.0102, %22 ], [ %.0102, %570 ], [ %.0102, %569 ], [ %.0102, %567 ], [ %.0102, %566 ], [ %.0102, %565 ], [ %.0102, %562 ], [ %.0102, %561 ], [ %.0102, %560 ], [ %.0102, %559 ], [ %.0102, %558 ], [ %.0102, %557 ], [ %.0102, %556 ], [ %.0102, %555 ], [ %.0102, %554 ], [ %.0102, %553 ], [ %.0102, %551 ], [ %.0102, %550 ], [ %.0102, %549 ], [ %.0102, %546 ], [ %.0102, %545 ], [ %.0102, %544 ], [ %.0102, %530 ], [ %.0102, %520 ], [ %.0102, %513 ], [ %.0102, %511 ], [ %.0102, %500 ], [ %.0102, %490 ], [ %.0102, %489 ], [ %.0102, %487 ], [ %.0102, %486 ], [ %.0102, %484 ], [ %.0102, %483 ], [ %.0102, %482 ], [ %.0102, %471 ], [ %.0102, %461 ], [ %.0102, %460 ], [ %.0102, %450 ], [ %.0102, %440 ], [ %.0102, %439 ], [ %.0102, %429 ], [ %.0102, %419 ], [ %.0102, %418 ], [ %.0102, %408 ], [ %.0102, %396 ], [ %.0102, %395 ], [ %.0102, %394 ], [ %.0102, %382 ], [ %.0102, %372 ], [ %.0102, %371 ], [ %.0102, %370 ], [ %.0102, %357 ], [ %.0102, %347 ], [ %.0102, %345 ], [ %.0102, %329 ], [ %.0102, %319 ], [ %.0102, %315 ], [ 2, %314 ], [ %.0102, %304 ], [ %.0102, %294 ], [ %293, %290 ], [ %.0102, %281 ], [ %.0102, %278 ], [ %.0102, %275 ], [ %.0102, %274 ], [ %.0102, %264 ], [ %.0102, %254 ], [ %.0102, %246 ], [ %.0102, %235 ], [ %.0102, %232 ], [ %.0102, %230 ], [ %.0102, %219 ], [ %.0102, %209 ], [ %.0102, %207 ], [ %.0102, %196 ], [ %.0102, %186 ], [ %.0102, %185 ], [ %.0102, %175 ], [ %.0102, %165 ], [ %.0102, %162 ], [ %.0102, %161 ], [ %.0102, %157 ], [ %.0102, %153 ], [ %.0102, %152 ], [ %.0102, %142 ], [ %.0102, %132 ], [ %.0102, %131 ], [ %.0102, %119 ], [ %.0102, %109 ], [ %.0102, %106 ], [ %.0102, %105 ], [ %.0102, %104 ], [ %.0102, %103 ], [ %.0102, %92 ], [ %.0102, %82 ], [ %.0102, %80 ], [ %.0102, %78 ], [ %.0102, %67 ], [ %.0102, %57 ], [ %.0102, %56 ], [ %.0102, %46 ], [ %.0102, %36 ], [ %.0102, %32 ], [ %.0102, %31 ], [ %.0102, %30 ], [ %.0102, %27 ], [ %.0102, %23 ]
  %.0.be = phi i64 [ %.0, %22 ], [ %.0, %570 ], [ %.0, %569 ], [ %.0, %567 ], [ %.0, %566 ], [ %.0, %565 ], [ %.0, %562 ], [ %.0, %561 ], [ %.0, %560 ], [ %.0, %559 ], [ %.0, %558 ], [ %.0, %557 ], [ %.0, %556 ], [ %.0, %555 ], [ %.0, %554 ], [ %.0, %553 ], [ %.0, %551 ], [ %.0, %550 ], [ %.0, %549 ], [ %.0, %546 ], [ %.0, %545 ], [ %.0, %544 ], [ %.0, %530 ], [ %.0, %520 ], [ %.0, %513 ], [ %.0, %511 ], [ %.0, %500 ], [ %.0, %490 ], [ %.0, %489 ], [ %.0, %487 ], [ %.0, %486 ], [ %.0, %484 ], [ %.0, %483 ], [ %.0, %482 ], [ %.0, %471 ], [ %.0, %461 ], [ %.0, %460 ], [ %.0, %450 ], [ %.0, %440 ], [ %.0, %439 ], [ %.0, %429 ], [ %.0, %419 ], [ %.0, %418 ], [ %.0, %408 ], [ %.0, %396 ], [ %.0, %395 ], [ %.0, %394 ], [ %.0, %382 ], [ %.0, %372 ], [ 2, %371 ], [ %.0..0..0.91, %370 ], [ %.0, %357 ], [ %.0, %347 ], [ %.0, %345 ], [ %.0, %329 ], [ %.0, %319 ], [ %.0, %315 ], [ %.0, %314 ], [ %.0, %304 ], [ %.0, %294 ], [ %.0, %290 ], [ %.0, %281 ], [ %.0, %278 ], [ %.0, %275 ], [ %.0, %274 ], [ %.0, %264 ], [ %.0, %254 ], [ %.0, %246 ], [ %.0, %235 ], [ %.0, %232 ], [ %.0, %230 ], [ %.0, %219 ], [ %.0, %209 ], [ %.0, %207 ], [ %.0, %196 ], [ %.0, %186 ], [ %.0, %185 ], [ %.0, %175 ], [ %.0, %165 ], [ %.0, %162 ], [ %.0, %161 ], [ %.0, %157 ], [ %.0, %153 ], [ %.0, %152 ], [ %.0, %142 ], [ %.0, %132 ], [ %.0, %131 ], [ %.0, %119 ], [ %.0, %109 ], [ %.0, %106 ], [ %.0, %105 ], [ %.0, %104 ], [ %.0, %103 ], [ %.0, %92 ], [ %.0, %82 ], [ %.0, %80 ], [ %.0, %78 ], [ %.0, %67 ], [ %.0, %57 ], [ %.0, %56 ], [ %.0, %46 ], [ %.0, %36 ], [ %.0, %32 ], [ %.0, %31 ], [ %.0, %30 ], [ %.0, %27 ], [ %.0, %23 ]
  br label %22

23:                                               ; preds = %22
  %24 = load i64, i64* %12, align 8
  %25 = icmp slt i64 %.0114, %24
  %26 = select i1 %25, i32 1355167944, i32 123087055
  br label %.backedge

27:                                               ; preds = %22
  %28 = getelementptr inbounds i64, i64* %16, i64 %.0114
  %29 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64* nonnull %28)
  br label %.backedge

30:                                               ; preds = %22
  %.neg120 = add i64 %.0114, 1
  br label %.backedge

31:                                               ; preds = %22
  br label %.backedge

32:                                               ; preds = %22
  %33 = load i64, i64* %12, align 8
  %34 = icmp slt i64 %.0114, %33
  %35 = select i1 %34, i32 -50939491, i32 742442361
  br label %.backedge

36:                                               ; preds = %22
  %37 = load i32, i32* @x, align 4
  %38 = load i32, i32* @y, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 887816930, i32 -946799339
  br label %.backedge

46:                                               ; preds = %22
  %47 = load i32, i32* @x, align 4
  %48 = load i32, i32* @y, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 -768991090, i32 -946799339
  br label %.backedge

56:                                               ; preds = %22
  br label %.backedge

57:                                               ; preds = %22
  %58 = load i32, i32* @x, align 4
  %59 = load i32, i32* @y, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 679257329, i32 -407091819
  br label %.backedge

67:                                               ; preds = %22
  %68 = icmp slt i64 %.0112, 5
  store i1 %68, i1* %11, align 1
  %69 = load i32, i32* @x, align 4
  %70 = load i32, i32* @y, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 -1799823268, i32 -407091819
  br label %.backedge

78:                                               ; preds = %22
  %.0..0..0.77 = load volatile i1, i1* %11, align 1
  %79 = select i1 %.0..0..0.77, i32 -26905885, i32 1877706152
  br label %.backedge

80:                                               ; preds = %22
  %81 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %.0114, i64 %.0112
  store i64 1000000000000000000, i64* %81, align 8
  br label %.backedge

82:                                               ; preds = %22
  %83 = load i32, i32* @x, align 4
  %84 = load i32, i32* @y, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -266946893, i32 -1504862239
  br label %.backedge

92:                                               ; preds = %22
  %93 = add i64 %.0112, 1
  %94 = load i32, i32* @x, align 4
  %95 = load i32, i32* @y, align 4
  %96 = add i32 %94, -1
  %97 = mul i32 %96, %94
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %100, %99
  %102 = select i1 %101, i32 -2018053713, i32 -1504862239
  br label %.backedge

103:                                              ; preds = %22
  br label %.backedge

104:                                              ; preds = %22
  br label %.backedge

105:                                              ; preds = %22
  %.neg119 = add i64 %.0114, 1
  br label %.backedge

106:                                              ; preds = %22
  %107 = load i64, i64* %16, align 16
  store i64 %107, i64* %20, align 16
  store i64 %107, i64* %21, align 16
  %.not118 = icmp eq i64 %107, 0
  %108 = select i1 %.not118, i32 749080103, i32 -688900118
  br label %.backedge

109:                                              ; preds = %22
  %110 = load i32, i32* @x, align 4
  %111 = load i32, i32* @y, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 453475753, i32 6781411
  br label %.backedge

119:                                              ; preds = %22
  %120 = load i64, i64* %16, align 16
  %121 = srem i64 %120, 2
  store i64 %121, i64* %10, align 8
  %122 = load i32, i32* @x, align 4
  %123 = load i32, i32* @y, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 -1126889685, i32 6781411
  br label %.backedge

131:                                              ; preds = %22
  %.0..0..0.78 = load volatile i64, i64* %10, align 8
  br label %.backedge

132:                                              ; preds = %22
  %133 = load i32, i32* @x, align 4
  %134 = load i32, i32* @y, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 98379773, i32 1197467347
  br label %.backedge

142:                                              ; preds = %22
  %143 = load i32, i32* @x, align 4
  %144 = load i32, i32* @y, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 1992128921, i32 1197467347
  br label %.backedge

152:                                              ; preds = %22
  br label %.backedge

153:                                              ; preds = %22
  store i64 %.0104, i64* %17, align 8
  store i64 %.0104, i64* %18, align 8
  %154 = load i64, i64* %16, align 16
  %155 = and i64 %154, 1
  %156 = xor i64 %155, 1
  store i64 %156, i64* %19, align 16
  br label %.backedge

157:                                              ; preds = %22
  %158 = load i64, i64* %12, align 8
  %159 = icmp slt i64 %.0114, %158
  %160 = select i1 %159, i32 815647212, i32 -1947143804
  br label %.backedge

161:                                              ; preds = %22
  br label %.backedge

162:                                              ; preds = %22
  %163 = icmp slt i64 %.0112, 5
  %164 = select i1 %163, i32 -1247976310, i32 -1794761812
  br label %.backedge

165:                                              ; preds = %22
  %166 = load i32, i32* @x, align 4
  %167 = load i32, i32* @y, align 4
  %168 = add i32 %166, -1
  %169 = mul i32 %168, %166
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 2007107853, i32 -1740954216
  br label %.backedge

175:                                              ; preds = %22
  %176 = load i32, i32* @x, align 4
  %177 = load i32, i32* @y, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 -1699795626, i32 -1740954216
  br label %.backedge

185:                                              ; preds = %22
  br label %.backedge

186:                                              ; preds = %22
  %187 = load i32, i32* @x, align 4
  %188 = load i32, i32* @y, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 325042763, i32 -187238192
  br label %.backedge

196:                                              ; preds = %22
  %197 = icmp slt i64 %.0110, 5
  store i1 %197, i1* %9, align 1
  %198 = load i32, i32* @x, align 4
  %199 = load i32, i32* @y, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 2105851977, i32 -187238192
  br label %.backedge

207:                                              ; preds = %22
  %.0..0..0.79 = load volatile i1, i1* %9, align 1
  %208 = select i1 %.0..0..0.79, i32 -31126609, i32 -861964699
  br label %.backedge

209:                                              ; preds = %22
  %210 = load i32, i32* @x, align 4
  %211 = load i32, i32* @y, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 525285649, i32 1653407662
  br label %.backedge

219:                                              ; preds = %22
  %220 = icmp ne i64 %.0110, 0
  store i1 %220, i1* %8, align 1
  %221 = load i32, i32* @x, align 4
  %222 = load i32, i32* @y, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 790629280, i32 1653407662
  br label %.backedge

230:                                              ; preds = %22
  %.0..0..0.80 = load volatile i1, i1* %8, align 1
  %231 = select i1 %.0..0..0.80, i32 -880973000, i32 990824530
  br label %.backedge

232:                                              ; preds = %22
  %233 = icmp eq i64 %.0110, 4
  %234 = select i1 %233, i32 990824530, i32 -477167922
  br label %.backedge

235:                                              ; preds = %22
  %236 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %.0114, i64 %.0110
  %237 = load i64, i64* %236, align 8
  %238 = add i64 %.0114, -1
  %239 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %238, i64 %.0112
  %240 = load i64, i64* %239, align 8
  %241 = getelementptr inbounds i64, i64* %16, i64 %.0114
  %242 = load i64, i64* %241, align 8
  %243 = add i64 %242, %240
  %244 = icmp sgt i64 %237, %243
  %245 = select i1 %244, i32 288033164, i32 1201447849
  br label %.backedge

246:                                              ; preds = %22
  %247 = add i64 %.0114, -1
  %248 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %247, i64 %.0112
  %249 = load i64, i64* %248, align 8
  %250 = getelementptr inbounds i64, i64* %16, i64 %.0114
  %251 = load i64, i64* %250, align 8
  %252 = add i64 %251, %249
  %253 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %.0114, i64 %.0110
  store i64 %252, i64* %253, align 8
  br label %.backedge

254:                                              ; preds = %22
  %255 = load i32, i32* @x, align 4
  %256 = load i32, i32* @y, align 4
  %257 = add i32 %255, -1
  %258 = mul i32 %257, %255
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %261, %260
  %263 = select i1 %262, i32 -1721504845, i32 -1174309857
  br label %.backedge

264:                                              ; preds = %22
  %265 = load i32, i32* @x, align 4
  %266 = load i32, i32* @y, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 1682451117, i32 -1174309857
  br label %.backedge

274:                                              ; preds = %22
  br label %.backedge

275:                                              ; preds = %22
  %276 = icmp eq i64 %.0110, 1
  %277 = select i1 %276, i32 -2105734020, i32 -76606016
  br label %.backedge

278:                                              ; preds = %22
  %279 = icmp eq i64 %.0110, 3
  %280 = select i1 %279, i32 -2105734020, i32 -113050364
  br label %.backedge

281:                                              ; preds = %22
  %282 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %.0114, i64 %.0110
  %283 = load i64, i64* %282, align 8
  store i64 %283, i64* %7, align 8
  %284 = add i64 %.0114, -1
  %285 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %284, i64 %.0112
  %286 = load i64, i64* %285, align 8
  store i64 %286, i64* %6, align 8
  %287 = getelementptr inbounds i64, i64* %16, i64 %.0114
  %288 = load i64, i64* %287, align 8
  %.not = icmp eq i64 %288, 0
  %289 = select i1 %.not, i32 1154131876, i32 -788436880
  br label %.backedge

290:                                              ; preds = %22
  %291 = getelementptr inbounds i64, i64* %16, i64 %.0114
  %292 = load i64, i64* %291, align 8
  %293 = srem i64 %292, 2
  br label %.backedge

294:                                              ; preds = %22
  %295 = load i32, i32* @x, align 4
  %296 = load i32, i32* @y, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 -1183724657, i32 1846039786
  br label %.backedge

304:                                              ; preds = %22
  %305 = load i32, i32* @x, align 4
  %306 = load i32, i32* @y, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 -1855511171, i32 1846039786
  br label %.backedge

314:                                              ; preds = %22
  br label %.backedge

315:                                              ; preds = %22
  %.0..0..0.82 = load volatile i64, i64* %6, align 8
  %316 = add i64 %.0..0..0.82, %.0102
  %.0..0..0.81 = load volatile i64, i64* %7, align 8
  %317 = icmp sgt i64 %.0..0..0.81, %316
  %318 = select i1 %317, i32 98209136, i32 340652081
  br label %.backedge

319:                                              ; preds = %22
  %320 = load i32, i32* @x, align 4
  %321 = load i32, i32* @y, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 287164114, i32 -52574948
  br label %.backedge

329:                                              ; preds = %22
  %330 = add i64 %.0114, -1
  %331 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %330, i64 %.0112
  %332 = load i64, i64* %331, align 8
  store i64 %332, i64* %5, align 8
  %333 = getelementptr inbounds i64, i64* %16, i64 %.0114
  %334 = load i64, i64* %333, align 8
  %335 = icmp ne i64 %334, 0
  store i1 %335, i1* %4, align 1
  %336 = load i32, i32* @x, align 4
  %337 = load i32, i32* @y, align 4
  %338 = add i32 %336, -1
  %339 = mul i32 %338, %336
  %340 = and i32 %339, 1
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %342, %341
  %344 = select i1 %343, i32 235067563, i32 -52574948
  br label %.backedge

345:                                              ; preds = %22
  %.0..0..0.90 = load volatile i1, i1* %4, align 1
  %346 = select i1 %.0..0..0.90, i32 -1078397128, i32 -925938182
  br label %.backedge

347:                                              ; preds = %22
  %348 = load i32, i32* @x, align 4
  %349 = load i32, i32* @y, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 1688323656, i32 -266516360
  br label %.backedge

357:                                              ; preds = %22
  %358 = getelementptr inbounds i64, i64* %16, i64 %.0114
  %359 = load i64, i64* %358, align 8
  %360 = srem i64 %359, 2
  store i64 %360, i64* %3, align 8
  %361 = load i32, i32* @x, align 4
  %362 = load i32, i32* @y, align 4
  %363 = add i32 %361, -1
  %364 = mul i32 %363, %361
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %367, %366
  %369 = select i1 %368, i32 2092636211, i32 -266516360
  br label %.backedge

370:                                              ; preds = %22
  %.0..0..0.91 = load volatile i64, i64* %3, align 8
  br label %.backedge

371:                                              ; preds = %22
  br label %.backedge

372:                                              ; preds = %22
  store i64 %.0, i64* %1, align 8
  %373 = load i32, i32* @x, align 4
  %374 = load i32, i32* @y, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 -195741170, i32 -493097992
  br label %.backedge

382:                                              ; preds = %22
  %.0..0..0.83 = load volatile i64, i64* %5, align 8
  %.0..0..0.93 = load volatile i64, i64* %1, align 8
  %383 = add i64 %.0..0..0.93, %.0..0..0.83
  %384 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %.0114, i64 %.0110
  store i64 %383, i64* %384, align 8
  %385 = load i32, i32* @x, align 4
  %386 = load i32, i32* @y, align 4
  %387 = add i32 %385, -1
  %388 = mul i32 %387, %385
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %391, %390
  %393 = select i1 %392, i32 1435309582, i32 -493097992
  br label %.backedge

394:                                              ; preds = %22
  br label %.backedge

395:                                              ; preds = %22
  br label %.backedge

396:                                              ; preds = %22
  %397 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %.0114, i64 %.0110
  %398 = load i64, i64* %397, align 8
  %399 = add i64 %.0114, -1
  %400 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %399, i64 %.0112
  %401 = load i64, i64* %400, align 8
  %402 = getelementptr inbounds i64, i64* %16, i64 %.0114
  %403 = load i64, i64* %402, align 8
  %404 = or i64 %403, -2
  %.neg116.neg = xor i64 %404, -1
  %405 = add i64 %401, %.neg116.neg
  %406 = icmp sgt i64 %398, %405
  %407 = select i1 %406, i32 1730184180, i32 -943176414
  br label %.backedge

408:                                              ; preds = %22
  %409 = add i64 %.0114, -1
  %410 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %409, i64 %.0112
  %411 = load i64, i64* %410, align 8
  %412 = getelementptr inbounds i64, i64* %16, i64 %.0114
  %413 = load i64, i64* %412, align 8
  %414 = and i64 %413, 1
  %415 = xor i64 %414, 1
  %416 = add i64 %415, %411
  %417 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %.0114, i64 %.0110
  store i64 %416, i64* %417, align 8
  br label %.backedge

418:                                              ; preds = %22
  br label %.backedge

419:                                              ; preds = %22
  %420 = load i32, i32* @x, align 4
  %421 = load i32, i32* @y, align 4
  %422 = add i32 %420, -1
  %423 = mul i32 %422, %420
  %424 = and i32 %423, 1
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %426, %425
  %428 = select i1 %427, i32 511524693, i32 1829315483
  br label %.backedge

429:                                              ; preds = %22
  %430 = load i32, i32* @x, align 4
  %431 = load i32, i32* @y, align 4
  %432 = add i32 %430, -1
  %433 = mul i32 %432, %430
  %434 = and i32 %433, 1
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %436, %435
  %438 = select i1 %437, i32 1849337190, i32 1829315483
  br label %.backedge

439:                                              ; preds = %22
  br label %.backedge

440:                                              ; preds = %22
  %441 = load i32, i32* @x, align 4
  %442 = load i32, i32* @y, align 4
  %443 = add i32 %441, -1
  %444 = mul i32 %443, %441
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %447, %446
  %449 = select i1 %448, i32 652462684, i32 -1426953310
  br label %.backedge

450:                                              ; preds = %22
  %451 = load i32, i32* @x, align 4
  %452 = load i32, i32* @y, align 4
  %453 = add i32 %451, -1
  %454 = mul i32 %453, %451
  %455 = and i32 %454, 1
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %457, %456
  %459 = select i1 %458, i32 1021021492, i32 -1426953310
  br label %.backedge

460:                                              ; preds = %22
  br label %.backedge

461:                                              ; preds = %22
  %462 = load i32, i32* @x, align 4
  %463 = load i32, i32* @y, align 4
  %464 = add i32 %462, -1
  %465 = mul i32 %464, %462
  %466 = and i32 %465, 1
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %468, %467
  %470 = select i1 %469, i32 1257496652, i32 -1131208573
  br label %.backedge

471:                                              ; preds = %22
  %472 = add i64 %.0110, 1
  %473 = load i32, i32* @x, align 4
  %474 = load i32, i32* @y, align 4
  %475 = add i32 %473, -1
  %476 = mul i32 %475, %473
  %477 = and i32 %476, 1
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %479, %478
  %481 = select i1 %480, i32 -206260780, i32 -1131208573
  br label %.backedge

482:                                              ; preds = %22
  br label %.backedge

483:                                              ; preds = %22
  br label %.backedge

484:                                              ; preds = %22
  %485 = add i64 %.0112, 1
  br label %.backedge

486:                                              ; preds = %22
  br label %.backedge

487:                                              ; preds = %22
  %488 = add i64 %.0114, 1
  br label %.backedge

489:                                              ; preds = %22
  br label %.backedge

490:                                              ; preds = %22
  %491 = load i32, i32* @x, align 4
  %492 = load i32, i32* @y, align 4
  %493 = add i32 %491, -1
  %494 = mul i32 %493, %491
  %495 = and i32 %494, 1
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %497, %496
  %499 = select i1 %498, i32 582360945, i32 -1266927211
  br label %.backedge

500:                                              ; preds = %22
  %501 = icmp slt i64 %.0114, 5
  store i1 %501, i1* %2, align 1
  %502 = load i32, i32* @x, align 4
  %503 = load i32, i32* @y, align 4
  %504 = add i32 %502, -1
  %505 = mul i32 %504, %502
  %506 = and i32 %505, 1
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %508, %507
  %510 = select i1 %509, i32 -1240638117, i32 -1266927211
  br label %.backedge

511:                                              ; preds = %22
  %.0..0..0.92 = load volatile i1, i1* %2, align 1
  %512 = select i1 %.0..0..0.92, i32 -892306354, i32 -1768770005
  br label %.backedge

513:                                              ; preds = %22
  %514 = load i64, i64* %12, align 8
  %515 = add i64 %514, -1
  %516 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %515, i64 %.0114
  %517 = load i64, i64* %516, align 8
  %518 = icmp sgt i64 %.0108, %517
  %519 = select i1 %518, i32 -878040567, i32 961848830
  br label %.backedge

520:                                              ; preds = %22
  %521 = load i32, i32* @x, align 4
  %522 = load i32, i32* @y, align 4
  %523 = add i32 %521, -1
  %524 = mul i32 %523, %521
  %525 = and i32 %524, 1
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %527, %526
  %529 = select i1 %528, i32 1546163026, i32 80785798
  br label %.backedge

530:                                              ; preds = %22
  %531 = load i64, i64* %12, align 8
  %532 = add i64 %531, -1
  %533 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %532, i64 %.0114
  %534 = load i64, i64* %533, align 8
  %535 = load i32, i32* @x, align 4
  %536 = load i32, i32* @y, align 4
  %537 = add i32 %535, -1
  %538 = mul i32 %537, %535
  %539 = and i32 %538, 1
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %541, %540
  %543 = select i1 %542, i32 -1657462137, i32 80785798
  br label %.backedge

544:                                              ; preds = %22
  br label %.backedge

545:                                              ; preds = %22
  br label %.backedge

546:                                              ; preds = %22
  %.neg = add i64 %.0114, 1
  br label %.backedge

547:                                              ; preds = %22
  %548 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 %.0108)
  ret i32 0

549:                                              ; preds = %22
  br label %.backedge

550:                                              ; preds = %22
  br label %.backedge

551:                                              ; preds = %22
  %552 = add i64 %.0112, 1
  br label %.backedge

553:                                              ; preds = %22
  br label %.backedge

554:                                              ; preds = %22
  br label %.backedge

555:                                              ; preds = %22
  br label %.backedge

556:                                              ; preds = %22
  br label %.backedge

557:                                              ; preds = %22
  br label %.backedge

558:                                              ; preds = %22
  br label %.backedge

559:                                              ; preds = %22
  br label %.backedge

560:                                              ; preds = %22
  br label %.backedge

561:                                              ; preds = %22
  br label %.backedge

562:                                              ; preds = %22
  %.0..0..0.84 = load volatile i64, i64* %5, align 8
  %.0..0..0.94 = load volatile i64, i64* %1, align 8
  %.0..0..0.85 = load volatile i64, i64* %5, align 8
  %.0..0..0.95 = load volatile i64, i64* %1, align 8
  %.0..0..0.86 = load volatile i64, i64* %5, align 8
  %.0..0..0.96 = load volatile i64, i64* %1, align 8
  %.0..0..0.97 = load volatile i64, i64* %1, align 8
  %.0..0..0.87 = load volatile i64, i64* %5, align 8
  %.0..0..0.98 = load volatile i64, i64* %1, align 8
  %.0..0..0.88 = load volatile i64, i64* %5, align 8
  %.0..0..0.99 = load volatile i64, i64* %1, align 8
  %.0..0..0.100 = load volatile i64, i64* %1, align 8
  %.0..0..0.89 = load volatile i64, i64* %5, align 8
  %.0..0..0.101 = load volatile i64, i64* %1, align 8
  %563 = add i64 %.0..0..0.101, %.0..0..0.89
  %564 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %.0114, i64 %.0110
  store i64 %563, i64* %564, align 8
  br label %.backedge

565:                                              ; preds = %22
  br label %.backedge

566:                                              ; preds = %22
  br label %.backedge

567:                                              ; preds = %22
  %568 = add i64 %.0110, 1
  br label %.backedge

569:                                              ; preds = %22
  br label %.backedge

570:                                              ; preds = %22
  %571 = load i64, i64* %12, align 8
  %572 = add i64 %571, -1
  %573 = getelementptr inbounds [5 x i64], [5 x i64]* %15, i64 %572, i64 %.0114
  %574 = load i64, i64* %573, align 8
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
