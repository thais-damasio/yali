; ModuleID = 'build_ollvm/programs/p03247/s527643828.ll'
source_filename = "Project_CodeNet_C++1400/p03247/s527643828.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3absx = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i64 0, align 8
@x = global [10005 x i64] zeroinitializer, align 16
@y = global [10005 x i64] zeroinitializer, align 16
@d = local_unnamed_addr global [1000 x i64] zeroinitializer, align 16
@flag = local_unnamed_addr global i8 0, align 1
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s527643828.cpp, i8* null }]
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define i64 @_Z3disxxxx(i64 %0, i64 %1, i64 %2, i64 %3) local_unnamed_addr #4 {
  %5 = sub i64 %0, %2
  %6 = tail call i64 @_ZSt3absx(i64 %5)
  %7 = sub i64 %1, %3
  %8 = tail call i64 @_ZSt3absx(i64 %7)
  %9 = add i64 %8, %6
  ret i64 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt3absx(i64 %0) local_unnamed_addr #4 comdat {
  %2 = alloca i64, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.5, align 4
  %6 = load i32, i32* @y.6, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 -1199523174, i32 334067788
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %1
  %.0.ph = phi i32 [ -267238037, %1 ], [ %.0.ph.be, %.outer.backedge ]
  br label %14

14:                                               ; preds = %.outer, %14
  switch i32 %.0.ph, label %14 [
    i32 -267238037, label %15
    i32 2011866185, label %.outer.backedge
    i32 -1199523174, label %18
    i32 334067788, label %20
  ]

15:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %16 = or i1 %.0..0..0., %.0..0..0.1
  %17 = select i1 %16, i32 2011866185, i32 334067788
  br label %.outer.backedge

18:                                               ; preds = %14
  %19 = tail call i64 @llvm.abs.i64(i64 %0, i1 false)
  store i64 %19, i64* %2, align 8
  %.0..0..0.2 = load volatile i64, i64* %2, align 8
  ret i64 %.0..0..0.2

20:                                               ; preds = %14
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %14, %20, %15
  %.0.ph.be = phi i32 [ %17, %15 ], [ 2011866185, %20 ], [ %13, %14 ]
  br label %.outer
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %7 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %8 = getelementptr i8, i8* %7, i64 -24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %10
  %12 = bitcast i8* %11 to %"class.std::basic_ios"*
  %13 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %12, %"class.std::basic_ostream"* null)
  %14 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) @n)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.0120 = phi i64 [ 1, %0 ], [ %.0120.be, %.backedge ]
  %.0118 = phi i64 [ undef, %0 ], [ %.0118.be, %.backedge ]
  %.0116 = phi i64 [ undef, %0 ], [ %.0116.be, %.backedge ]
  %.0114 = phi i64 [ undef, %0 ], [ %.0114.be, %.backedge ]
  %.0112 = phi i64 [ undef, %0 ], [ %.0112.be, %.backedge ]
  %.0110 = phi i64 [ undef, %0 ], [ %.0110.be, %.backedge ]
  %.0108 = phi i64 [ undef, %0 ], [ %.0108.be, %.backedge ]
  %.0106 = phi i8 [ undef, %0 ], [ %.0106.be, %.backedge ]
  %.0104 = phi i64 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0 = phi i32 [ 1632012511, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1632012511, label %16
    i32 -2046654419, label %19
    i32 -278003612, label %29
    i32 -52121235, label %43
    i32 -1765398834, label %44
    i32 -184034969, label %46
    i32 -2121140223, label %53
    i32 -559871243, label %63
    i32 -836130402, label %75
    i32 -135961862, label %77
    i32 -1855279773, label %87
    i32 2035317869, label %108
    i32 332423696, label %110
    i32 -1514270349, label %113
    i32 -1159413931, label %114
    i32 523910218, label %116
    i32 -1572487355, label %126
    i32 1360862480, label %141
    i32 449945177, label %142
    i32 1165800560, label %152
    i32 243672785, label %163
    i32 1731375457, label %165
    i32 -402510385, label %172
    i32 -54399148, label %174
    i32 -731217689, label %178
    i32 -1235628060, label %181
    i32 1704220283, label %183
    i32 -1615042801, label %184
    i32 -1647164861, label %187
    i32 1732150240, label %197
    i32 1807566237, label %210
    i32 930986209, label %212
    i32 -1153033835, label %213
    i32 801754608, label %214
    i32 -1702868593, label %217
    i32 1295614188, label %227
    i32 1524256925, label %237
    i32 -431919847, label %255
    i32 -222438843, label %256
    i32 1096155726, label %267
    i32 -1643358036, label %276
    i32 1295889459, label %287
    i32 1791079147, label %297
    i32 1379807574, label %315
    i32 524728009, label %316
    i32 -1208949202, label %327
    i32 1499684001, label %337
    i32 -245557095, label %355
    i32 235277926, label %356
    i32 1816283741, label %366
    i32 -368839160, label %377
    i32 -1151685735, label %379
    i32 -593349079, label %383
    i32 -786456110, label %386
    i32 -1677621453, label %390
    i32 1413729172, label %393
    i32 432807358, label %397
    i32 -1662122399, label %400
    i32 -1782852321, label %410
    i32 -15809730, label %423
    i32 -1206610011, label %424
    i32 -1743904842, label %426
    i32 1290203745, label %428
    i32 1618896355, label %432
    i32 1236832893, label %434
    i32 287715022, label %444
    i32 1743318510, label %455
    i32 302759040, label %456
    i32 346259237, label %466
    i32 -242440558, label %477
    i32 1625302245, label %478
    i32 -311135250, label %479
    i32 -1118170372, label %480
    i32 -1569390189, label %485
    i32 -436066938, label %486
    i32 -1346539639, label %493
    i32 -992788190, label %499
    i32 -2019539436, label %500
    i32 -1052042916, label %501
    i32 -1988481996, label %510
    i32 -804096918, label %519
    i32 -968892922, label %528
    i32 -1159965580, label %529
    i32 -889033542, label %533
    i32 -263473837, label %535
  ]

.backedge:                                        ; preds = %15, %535, %533, %529, %528, %519, %510, %501, %500, %499, %493, %486, %485, %480, %478, %477, %466, %456, %455, %444, %434, %432, %428, %426, %424, %423, %410, %400, %397, %393, %390, %386, %383, %379, %377, %366, %356, %355, %337, %327, %316, %315, %297, %287, %276, %267, %256, %255, %237, %227, %217, %214, %213, %212, %210, %197, %187, %184, %183, %181, %178, %174, %172, %165, %163, %152, %142, %141, %126, %116, %114, %113, %110, %108, %87, %77, %75, %63, %53, %46, %44, %43, %29, %19, %16
  %.0120.be = phi i64 [ %.0120, %15 ], [ %.0120, %535 ], [ %.0120, %533 ], [ %.0120, %529 ], [ %.0120, %528 ], [ %.0120, %519 ], [ %.0120, %510 ], [ %.0120, %501 ], [ %.0120, %500 ], [ %.0120, %499 ], [ %.0120, %493 ], [ %.0120, %486 ], [ %.0120, %485 ], [ %.0120, %480 ], [ %.0120, %478 ], [ %.0120, %477 ], [ %.0120, %466 ], [ %.0120, %456 ], [ %.0120, %455 ], [ %.0120, %444 ], [ %.0120, %434 ], [ %.0120, %432 ], [ %.0120, %428 ], [ %.0120, %426 ], [ %.0120, %424 ], [ %.0120, %423 ], [ %.0120, %410 ], [ %.0120, %400 ], [ %.0120, %397 ], [ %.0120, %393 ], [ %.0120, %390 ], [ %.0120, %386 ], [ %.0120, %383 ], [ %.0120, %379 ], [ %.0120, %377 ], [ %.0120, %366 ], [ %.0120, %356 ], [ %.0120, %355 ], [ %.0120, %337 ], [ %.0120, %327 ], [ %.0120, %316 ], [ %.0120, %315 ], [ %.0120, %297 ], [ %.0120, %287 ], [ %.0120, %276 ], [ %.0120, %267 ], [ %.0120, %256 ], [ %.0120, %255 ], [ %.0120, %237 ], [ %.0120, %227 ], [ %.0120, %217 ], [ %.0120, %214 ], [ %.0120, %213 ], [ %.0120, %212 ], [ %.0120, %210 ], [ %.0120, %197 ], [ %.0120, %187 ], [ %.0120, %184 ], [ %.0120, %183 ], [ %.0120, %181 ], [ %.0120, %178 ], [ %.0120, %174 ], [ %.0120, %172 ], [ %.0120, %165 ], [ %.0120, %163 ], [ %.0120, %152 ], [ %.0120, %142 ], [ %.0120, %141 ], [ %.0120, %126 ], [ %.0120, %116 ], [ %.0120, %114 ], [ %.0120, %113 ], [ %.0120, %110 ], [ %.0120, %108 ], [ %.0120, %87 ], [ %.0120, %77 ], [ %.0120, %75 ], [ %.0120, %63 ], [ %.0120, %53 ], [ %.0120, %46 ], [ %45, %44 ], [ %.0120, %43 ], [ %.0120, %29 ], [ %.0120, %19 ], [ %.0120, %16 ]
  %.0118.be = phi i64 [ %.0118, %15 ], [ %.0118, %535 ], [ %.0118, %533 ], [ %.0118, %529 ], [ %.0118, %528 ], [ %.0118, %519 ], [ %.0118, %510 ], [ %.0118, %501 ], [ %.0118, %500 ], [ %.0118, %499 ], [ %.0118, %493 ], [ %.0118, %486 ], [ %.0118, %485 ], [ %.0118, %480 ], [ %.0118, %478 ], [ %.0118, %477 ], [ %.0118, %466 ], [ %.0118, %456 ], [ %.0118, %455 ], [ %.0118, %444 ], [ %.0118, %434 ], [ %.0118, %432 ], [ %.0118, %428 ], [ %.0118, %426 ], [ %.0118, %424 ], [ %.0118, %423 ], [ %.0118, %410 ], [ %.0118, %400 ], [ %.0118, %397 ], [ %.0118, %393 ], [ %.0118, %390 ], [ %.0118, %386 ], [ %.0118, %383 ], [ %.0118, %379 ], [ %.0118, %377 ], [ %.0118, %366 ], [ %.0118, %356 ], [ %.0118, %355 ], [ %.0118, %337 ], [ %.0118, %327 ], [ %.0118, %316 ], [ %.0118, %315 ], [ %.0118, %297 ], [ %.0118, %287 ], [ %.0118, %276 ], [ %.0118, %267 ], [ %.0118, %256 ], [ %.0118, %255 ], [ %.0118, %237 ], [ %.0118, %227 ], [ %.0118, %217 ], [ %.0118, %214 ], [ %.0118, %213 ], [ %.0118, %212 ], [ %.0118, %210 ], [ %.0118, %197 ], [ %.0118, %187 ], [ %.0118, %184 ], [ %.0118, %183 ], [ %.0118, %181 ], [ %.0118, %178 ], [ %.0118, %174 ], [ %.0118, %172 ], [ %.0118, %165 ], [ %.0118, %163 ], [ %.0118, %152 ], [ %.0118, %142 ], [ %.0118, %141 ], [ %.0118, %126 ], [ %.0118, %116 ], [ %115, %114 ], [ %.0118, %113 ], [ %.0118, %110 ], [ %.0118, %108 ], [ %.0118, %87 ], [ %.0118, %77 ], [ %.0118, %75 ], [ %.0118, %63 ], [ %.0118, %53 ], [ 1, %46 ], [ %.0118, %44 ], [ %.0118, %43 ], [ %.0118, %29 ], [ %.0118, %19 ], [ %.0118, %16 ]
  %.0116.be = phi i64 [ %.0116, %15 ], [ %.0116, %535 ], [ %.0116, %533 ], [ %.0116, %529 ], [ %.0116, %528 ], [ %.0116, %519 ], [ %.0116, %510 ], [ %.0116, %501 ], [ %.0116, %500 ], [ %.0116, %499 ], [ 1, %493 ], [ %.0116, %486 ], [ %.0116, %485 ], [ %.0116, %480 ], [ %.0116, %478 ], [ %.0116, %477 ], [ %.0116, %466 ], [ %.0116, %456 ], [ %.0116, %455 ], [ %.0116, %444 ], [ %.0116, %434 ], [ %.0116, %432 ], [ %.0116, %428 ], [ %.0116, %426 ], [ %.0116, %424 ], [ %.0116, %423 ], [ %.0116, %410 ], [ %.0116, %400 ], [ %.0116, %397 ], [ %.0116, %393 ], [ %.0116, %390 ], [ %.0116, %386 ], [ %.0116, %383 ], [ %.0116, %379 ], [ %.0116, %377 ], [ %.0116, %366 ], [ %.0116, %356 ], [ %.0116, %355 ], [ %.0116, %337 ], [ %.0116, %327 ], [ %.0116, %316 ], [ %.0116, %315 ], [ %.0116, %297 ], [ %.0116, %287 ], [ %.0116, %276 ], [ %.0116, %267 ], [ %.0116, %256 ], [ %.0116, %255 ], [ %.0116, %237 ], [ %.0116, %227 ], [ %.0116, %217 ], [ %.0116, %214 ], [ %.0116, %213 ], [ %.0116, %212 ], [ %.0116, %210 ], [ %.0116, %197 ], [ %.0116, %187 ], [ %.0116, %184 ], [ %.0116, %183 ], [ %.0116, %181 ], [ %.0116, %178 ], [ %.0116, %174 ], [ %173, %172 ], [ %.0116, %165 ], [ %.0116, %163 ], [ %.0116, %152 ], [ %.0116, %142 ], [ %.0116, %141 ], [ 1, %126 ], [ %.0116, %116 ], [ %.0116, %114 ], [ %.0116, %113 ], [ %.0116, %110 ], [ %.0116, %108 ], [ %.0116, %87 ], [ %.0116, %77 ], [ %.0116, %75 ], [ %.0116, %63 ], [ %.0116, %53 ], [ %.0116, %46 ], [ %.0116, %44 ], [ %.0116, %43 ], [ %.0116, %29 ], [ %.0116, %19 ], [ %.0116, %16 ]
  %.0114.be = phi i64 [ %.0114, %15 ], [ %.neg, %535 ], [ %.0114, %533 ], [ %.0114, %529 ], [ %.0114, %528 ], [ %.0114, %519 ], [ %.0114, %510 ], [ %.0114, %501 ], [ %.0114, %500 ], [ %.0114, %499 ], [ %.0114, %493 ], [ %.0114, %486 ], [ %.0114, %485 ], [ %.0114, %480 ], [ %.0114, %478 ], [ %.0114, %477 ], [ %467, %466 ], [ %.0114, %456 ], [ %.0114, %455 ], [ %.0114, %444 ], [ %.0114, %434 ], [ %.0114, %432 ], [ %.0114, %428 ], [ %.0114, %426 ], [ %.0114, %424 ], [ %.0114, %423 ], [ %.0114, %410 ], [ %.0114, %400 ], [ %.0114, %397 ], [ %.0114, %393 ], [ %.0114, %390 ], [ %.0114, %386 ], [ %.0114, %383 ], [ %.0114, %379 ], [ %.0114, %377 ], [ %.0114, %366 ], [ %.0114, %356 ], [ %.0114, %355 ], [ %.0114, %337 ], [ %.0114, %327 ], [ %.0114, %316 ], [ %.0114, %315 ], [ %.0114, %297 ], [ %.0114, %287 ], [ %.0114, %276 ], [ %.0114, %267 ], [ %.0114, %256 ], [ %.0114, %255 ], [ %.0114, %237 ], [ %.0114, %227 ], [ %.0114, %217 ], [ %.0114, %214 ], [ %.0114, %213 ], [ %.0114, %212 ], [ %.0114, %210 ], [ %.0114, %197 ], [ %.0114, %187 ], [ %.0114, %184 ], [ 1, %183 ], [ %.0114, %181 ], [ %.0114, %178 ], [ %.0114, %174 ], [ %.0114, %172 ], [ %.0114, %165 ], [ %.0114, %163 ], [ %.0114, %152 ], [ %.0114, %142 ], [ %.0114, %141 ], [ %.0114, %126 ], [ %.0114, %116 ], [ %.0114, %114 ], [ %.0114, %113 ], [ %.0114, %110 ], [ %.0114, %108 ], [ %.0114, %87 ], [ %.0114, %77 ], [ %.0114, %75 ], [ %.0114, %63 ], [ %.0114, %53 ], [ %.0114, %46 ], [ %.0114, %44 ], [ %.0114, %43 ], [ %.0114, %29 ], [ %.0114, %19 ], [ %.0114, %16 ]
  %.0112.be = phi i64 [ %.0112, %15 ], [ %.0112, %535 ], [ %.0112, %533 ], [ %.0112, %529 ], [ %.0112, %528 ], [ %.0112, %519 ], [ %.0112, %510 ], [ %.0112, %501 ], [ 0, %500 ], [ %.0112, %499 ], [ %.0112, %493 ], [ %.0112, %486 ], [ %.0112, %485 ], [ %.0112, %480 ], [ %.0112, %478 ], [ %.0112, %477 ], [ %.0112, %466 ], [ %.0112, %456 ], [ %.0112, %455 ], [ %.0112, %444 ], [ %.0112, %434 ], [ %.0112, %432 ], [ %.0112, %428 ], [ %.0112, %426 ], [ %.0112, %424 ], [ %.0112, %423 ], [ %.0112, %410 ], [ %.0112, %400 ], [ %.0112, %397 ], [ %.0112, %393 ], [ %.0112, %390 ], [ %389, %386 ], [ %.0112, %383 ], [ %382, %379 ], [ %.0112, %377 ], [ %.0112, %366 ], [ %.0112, %356 ], [ %.0112, %355 ], [ %.0112, %337 ], [ %.0112, %327 ], [ %.0112, %316 ], [ %.0112, %315 ], [ %.0112, %297 ], [ %.0112, %287 ], [ %.0112, %276 ], [ %.0112, %267 ], [ %.0112, %256 ], [ %.0112, %255 ], [ %.0112, %237 ], [ %.0112, %227 ], [ %.0112, %217 ], [ %.0112, %214 ], [ %.0112, %213 ], [ 1, %212 ], [ %.0112, %210 ], [ 0, %197 ], [ %.0112, %187 ], [ %.0112, %184 ], [ %.0112, %183 ], [ %.0112, %181 ], [ %.0112, %178 ], [ %.0112, %174 ], [ %.0112, %172 ], [ %.0112, %165 ], [ %.0112, %163 ], [ %.0112, %152 ], [ %.0112, %142 ], [ %.0112, %141 ], [ %.0112, %126 ], [ %.0112, %116 ], [ %.0112, %114 ], [ %.0112, %113 ], [ %.0112, %110 ], [ %.0112, %108 ], [ %.0112, %87 ], [ %.0112, %77 ], [ %.0112, %75 ], [ %.0112, %63 ], [ %.0112, %53 ], [ %.0112, %46 ], [ %.0112, %44 ], [ %.0112, %43 ], [ %.0112, %29 ], [ %.0112, %19 ], [ %.0112, %16 ]
  %.0110.be = phi i64 [ %.0110, %15 ], [ %.0110, %535 ], [ %.0110, %533 ], [ %532, %529 ], [ %.0110, %528 ], [ %.0110, %519 ], [ %.0110, %510 ], [ %.0110, %501 ], [ 0, %500 ], [ %.0110, %499 ], [ %.0110, %493 ], [ %.0110, %486 ], [ %.0110, %485 ], [ %.0110, %480 ], [ %.0110, %478 ], [ %.0110, %477 ], [ %.0110, %466 ], [ %.0110, %456 ], [ %.0110, %455 ], [ %.0110, %444 ], [ %.0110, %434 ], [ %.0110, %432 ], [ %.0110, %428 ], [ %.0110, %426 ], [ %.0110, %424 ], [ %.0110, %423 ], [ %413, %410 ], [ %.0110, %400 ], [ %.0110, %397 ], [ %396, %393 ], [ %.0110, %390 ], [ %.0110, %386 ], [ %.0110, %383 ], [ %.0110, %379 ], [ %.0110, %377 ], [ %.0110, %366 ], [ %.0110, %356 ], [ %.0110, %355 ], [ %.0110, %337 ], [ %.0110, %327 ], [ %.0110, %316 ], [ %.0110, %315 ], [ %.0110, %297 ], [ %.0110, %287 ], [ %.0110, %276 ], [ %.0110, %267 ], [ %.0110, %256 ], [ %.0110, %255 ], [ %.0110, %237 ], [ %.0110, %227 ], [ %.0110, %217 ], [ %.0110, %214 ], [ %.0110, %213 ], [ %.0110, %212 ], [ %.0110, %210 ], [ 0, %197 ], [ %.0110, %187 ], [ %.0110, %184 ], [ %.0110, %183 ], [ %.0110, %181 ], [ %.0110, %178 ], [ %.0110, %174 ], [ %.0110, %172 ], [ %.0110, %165 ], [ %.0110, %163 ], [ %.0110, %152 ], [ %.0110, %142 ], [ %.0110, %141 ], [ %.0110, %126 ], [ %.0110, %116 ], [ %.0110, %114 ], [ %.0110, %113 ], [ %.0110, %110 ], [ %.0110, %108 ], [ %.0110, %87 ], [ %.0110, %77 ], [ %.0110, %75 ], [ %.0110, %63 ], [ %.0110, %53 ], [ %.0110, %46 ], [ %.0110, %44 ], [ %.0110, %43 ], [ %.0110, %29 ], [ %.0110, %19 ], [ %.0110, %16 ]
  %.0108.be = phi i64 [ %.0108, %15 ], [ %.0108, %535 ], [ %.0108, %533 ], [ %.0108, %529 ], [ %.0108, %528 ], [ %.0108, %519 ], [ %.0108, %510 ], [ %.0108, %501 ], [ %.0108, %500 ], [ %.0108, %499 ], [ %.0108, %493 ], [ %.0108, %486 ], [ %.0108, %485 ], [ %.0108, %480 ], [ %.0108, %478 ], [ %.0108, %477 ], [ %.0108, %466 ], [ %.0108, %456 ], [ %.0108, %455 ], [ %.0108, %444 ], [ %.0108, %434 ], [ %.0108, %432 ], [ %.0108, %428 ], [ %427, %426 ], [ %.0108, %424 ], [ %.0108, %423 ], [ %.0108, %410 ], [ %.0108, %400 ], [ %.0108, %397 ], [ %.0108, %393 ], [ %.0108, %390 ], [ %.0108, %386 ], [ %.0108, %383 ], [ %.0108, %379 ], [ %.0108, %377 ], [ %.0108, %366 ], [ %.0108, %356 ], [ %.0108, %355 ], [ %.0108, %337 ], [ %.0108, %327 ], [ %.0108, %316 ], [ %.0108, %315 ], [ %.0108, %297 ], [ %.0108, %287 ], [ %.0108, %276 ], [ %.0108, %267 ], [ %.0108, %256 ], [ %.0108, %255 ], [ %.0108, %237 ], [ %.0108, %227 ], [ %.0108, %217 ], [ %.0108, %214 ], [ 1, %213 ], [ %.0108, %212 ], [ %.0108, %210 ], [ %.0108, %197 ], [ %.0108, %187 ], [ %.0108, %184 ], [ %.0108, %183 ], [ %.0108, %181 ], [ %.0108, %178 ], [ %.0108, %174 ], [ %.0108, %172 ], [ %.0108, %165 ], [ %.0108, %163 ], [ %.0108, %152 ], [ %.0108, %142 ], [ %.0108, %141 ], [ %.0108, %126 ], [ %.0108, %116 ], [ %.0108, %114 ], [ %.0108, %113 ], [ %.0108, %110 ], [ %.0108, %108 ], [ %.0108, %87 ], [ %.0108, %77 ], [ %.0108, %75 ], [ %.0108, %63 ], [ %.0108, %53 ], [ %.0108, %46 ], [ %.0108, %44 ], [ %.0108, %43 ], [ %.0108, %29 ], [ %.0108, %19 ], [ %.0108, %16 ]
  %.0106.be = phi i8 [ %.0106, %15 ], [ %.0106, %535 ], [ %.0106, %533 ], [ %.0106, %529 ], [ %.0106, %528 ], [ 68, %519 ], [ 85, %510 ], [ 82, %501 ], [ %.0106, %500 ], [ %.0106, %499 ], [ %.0106, %493 ], [ %.0106, %486 ], [ %.0106, %485 ], [ %.0106, %480 ], [ %.0106, %478 ], [ %.0106, %477 ], [ %.0106, %466 ], [ %.0106, %456 ], [ %.0106, %455 ], [ %.0106, %444 ], [ %.0106, %434 ], [ %.0106, %432 ], [ %.0106, %428 ], [ %.0106, %426 ], [ %.0106, %424 ], [ %.0106, %423 ], [ %.0106, %410 ], [ %.0106, %400 ], [ %.0106, %397 ], [ %.0106, %393 ], [ %.0106, %390 ], [ %.0106, %386 ], [ %.0106, %383 ], [ %.0106, %379 ], [ %.0106, %377 ], [ %.0106, %366 ], [ %.0106, %356 ], [ %.0106, %355 ], [ 68, %337 ], [ %.0106, %327 ], [ %.0106, %316 ], [ %.0106, %315 ], [ 85, %297 ], [ %.0106, %287 ], [ %.0106, %276 ], [ 76, %267 ], [ %.0106, %256 ], [ %.0106, %255 ], [ 82, %237 ], [ %.0106, %227 ], [ %.0106, %217 ], [ %.0106, %214 ], [ %.0106, %213 ], [ %.0106, %212 ], [ %.0106, %210 ], [ %.0106, %197 ], [ %.0106, %187 ], [ %.0106, %184 ], [ %.0106, %183 ], [ %.0106, %181 ], [ %.0106, %178 ], [ %.0106, %174 ], [ %.0106, %172 ], [ %.0106, %165 ], [ %.0106, %163 ], [ %.0106, %152 ], [ %.0106, %142 ], [ %.0106, %141 ], [ %.0106, %126 ], [ %.0106, %116 ], [ %.0106, %114 ], [ %.0106, %113 ], [ %.0106, %110 ], [ %.0106, %108 ], [ %.0106, %87 ], [ %.0106, %77 ], [ %.0106, %75 ], [ %.0106, %63 ], [ %.0106, %53 ], [ %.0106, %46 ], [ %.0106, %44 ], [ %.0106, %43 ], [ %.0106, %29 ], [ %.0106, %19 ], [ %.0106, %16 ]
  %.0104.be = phi i64 [ %.0104, %15 ], [ %.0104, %535 ], [ %.0104, %533 ], [ %.0104, %529 ], [ %.0104, %528 ], [ %527, %519 ], [ %518, %510 ], [ %509, %501 ], [ %.0104, %500 ], [ %.0104, %499 ], [ %.0104, %493 ], [ %.0104, %486 ], [ %.0104, %485 ], [ %.0104, %480 ], [ %.0104, %478 ], [ %.0104, %477 ], [ %.0104, %466 ], [ %.0104, %456 ], [ %.0104, %455 ], [ %.0104, %444 ], [ %.0104, %434 ], [ %.0104, %432 ], [ %.0104, %428 ], [ %.0104, %426 ], [ %.0104, %424 ], [ %.0104, %423 ], [ %.0104, %410 ], [ %.0104, %400 ], [ %.0104, %397 ], [ %.0104, %393 ], [ %.0104, %390 ], [ %.0104, %386 ], [ %.0104, %383 ], [ %.0104, %379 ], [ %.0104, %377 ], [ %.0104, %366 ], [ %.0104, %356 ], [ %.0104, %355 ], [ %345, %337 ], [ %.0104, %327 ], [ %.0104, %316 ], [ %.0104, %315 ], [ %305, %297 ], [ %.0104, %287 ], [ %.0104, %276 ], [ %275, %267 ], [ %.0104, %256 ], [ %.0104, %255 ], [ %245, %237 ], [ %.0104, %227 ], [ 9223372036854775807, %217 ], [ %.0104, %214 ], [ %.0104, %213 ], [ %.0104, %212 ], [ %.0104, %210 ], [ %.0104, %197 ], [ %.0104, %187 ], [ %.0104, %184 ], [ %.0104, %183 ], [ %.0104, %181 ], [ %.0104, %178 ], [ %.0104, %174 ], [ %.0104, %172 ], [ %.0104, %165 ], [ %.0104, %163 ], [ %.0104, %152 ], [ %.0104, %142 ], [ %.0104, %141 ], [ %.0104, %126 ], [ %.0104, %116 ], [ %.0104, %114 ], [ %.0104, %113 ], [ %.0104, %110 ], [ %.0104, %108 ], [ %.0104, %87 ], [ %.0104, %77 ], [ %.0104, %75 ], [ %.0104, %63 ], [ %.0104, %53 ], [ %.0104, %46 ], [ %.0104, %44 ], [ %.0104, %43 ], [ %.0104, %29 ], [ %.0104, %19 ], [ %.0104, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ 346259237, %535 ], [ 287715022, %533 ], [ -1782852321, %529 ], [ 1816283741, %528 ], [ 1499684001, %519 ], [ 1791079147, %510 ], [ 1524256925, %501 ], [ 1732150240, %500 ], [ 1165800560, %499 ], [ -1572487355, %493 ], [ -1855279773, %486 ], [ -559871243, %485 ], [ -278003612, %480 ], [ -311135250, %478 ], [ -1615042801, %477 ], [ %476, %466 ], [ %465, %456 ], [ 302759040, %455 ], [ %454, %444 ], [ %443, %434 ], [ 1236832893, %432 ], [ %431, %428 ], [ 801754608, %426 ], [ -1743904842, %424 ], [ -1206610011, %423 ], [ %422, %410 ], [ %409, %400 ], [ %399, %397 ], [ 432807358, %393 ], [ %392, %390 ], [ -1677621453, %386 ], [ %385, %383 ], [ -593349079, %379 ], [ %378, %377 ], [ %376, %366 ], [ %365, %356 ], [ 235277926, %355 ], [ %354, %337 ], [ %336, %327 ], [ %326, %316 ], [ 524728009, %315 ], [ %314, %297 ], [ %296, %287 ], [ %286, %276 ], [ -1643358036, %267 ], [ %266, %256 ], [ -222438843, %255 ], [ %254, %237 ], [ %236, %227 ], [ %226, %217 ], [ %216, %214 ], [ 801754608, %213 ], [ -1153033835, %212 ], [ %211, %210 ], [ %209, %197 ], [ %196, %187 ], [ %186, %184 ], [ -1615042801, %183 ], [ 1704220283, %181 ], [ 1704220283, %178 ], [ %177, %174 ], [ 449945177, %172 ], [ -402510385, %165 ], [ %164, %163 ], [ %162, %152 ], [ %151, %142 ], [ 449945177, %141 ], [ %140, %126 ], [ %125, %116 ], [ -2121140223, %114 ], [ -1159413931, %113 ], [ -311135250, %110 ], [ %109, %108 ], [ %107, %87 ], [ %86, %77 ], [ %76, %75 ], [ %74, %63 ], [ %62, %53 ], [ -2121140223, %46 ], [ 1632012511, %44 ], [ -1765398834, %43 ], [ %42, %29 ], [ %28, %19 ], [ %18, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i64, i64* @n, align 8
  %.not130 = icmp sgt i64 %.0120, %17
  %18 = select i1 %.not130, i32 -184034969, i32 -2046654419
  br label %.backedge

19:                                               ; preds = %15
  %20 = load i32, i32* @x.7, align 4
  %21 = load i32, i32* @y.8, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -278003612, i32 -1118170372
  br label %.backedge

29:                                               ; preds = %15
  %30 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0120
  %31 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %30)
  %32 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0120
  %33 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %31, i64* nonnull dereferenceable(8) %32)
  %34 = load i32, i32* @x.7, align 4
  %35 = load i32, i32* @y.8, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 -52121235, i32 -1118170372
  br label %.backedge

43:                                               ; preds = %15
  br label %.backedge

44:                                               ; preds = %15
  %45 = add i64 %.0120, 1
  br label %.backedge

46:                                               ; preds = %15
  %47 = load i64, i64* getelementptr inbounds ([10005 x i64], [10005 x i64]* @x, i64 0, i64 1), align 8
  %48 = load i64, i64* getelementptr inbounds ([10005 x i64], [10005 x i64]* @y, i64 0, i64 1), align 8
  %49 = add i64 %48, %47
  %50 = tail call i64 @_ZSt3absx(i64 %49)
  %51 = trunc i64 %50 to i8
  %52 = and i8 %51, 1
  store i8 %52, i8* @flag, align 1
  br label %.backedge

53:                                               ; preds = %15
  %54 = load i32, i32* @x.7, align 4
  %55 = load i32, i32* @y.8, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -559871243, i32 -1569390189
  br label %.backedge

63:                                               ; preds = %15
  %64 = load i64, i64* @n, align 8
  %65 = icmp sle i64 %.0118, %64
  store i1 %65, i1* %5, align 1
  %66 = load i32, i32* @x.7, align 4
  %67 = load i32, i32* @y.8, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 -836130402, i32 -1569390189
  br label %.backedge

75:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %76 = select i1 %.0..0..0., i32 -135961862, i32 523910218
  br label %.backedge

77:                                               ; preds = %15
  %78 = load i32, i32* @x.7, align 4
  %79 = load i32, i32* @y.8, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 -1855279773, i32 -436066938
  br label %.backedge

87:                                               ; preds = %15
  %88 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0118
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0118
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, %89
  %93 = tail call i64 @_ZSt3absx(i64 %92)
  %94 = and i64 %93, 1
  %95 = load i8, i8* @flag, align 1
  %96 = and i8 %95, 1
  %97 = zext i8 %96 to i64
  %98 = icmp ne i64 %94, %97
  store i1 %98, i1* %4, align 1
  %99 = load i32, i32* @x.7, align 4
  %100 = load i32, i32* @y.8, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 2035317869, i32 -436066938
  br label %.backedge

108:                                              ; preds = %15
  %.0..0..0.100 = load volatile i1, i1* %4, align 1
  %109 = select i1 %.0..0..0.100, i32 332423696, i32 -1514270349
  br label %.backedge

110:                                              ; preds = %15
  %111 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 -1)
  %112 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %111, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

113:                                              ; preds = %15
  br label %.backedge

114:                                              ; preds = %15
  %115 = add i64 %.0118, 1
  br label %.backedge

116:                                              ; preds = %15
  %117 = load i32, i32* @x.7, align 4
  %118 = load i32, i32* @y.8, align 4
  %119 = add i32 %117, -1
  %120 = mul i32 %119, %117
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %123, %122
  %125 = select i1 %124, i32 -1572487355, i32 -1346539639
  br label %.backedge

126:                                              ; preds = %15
  %127 = load i8, i8* @flag, align 1
  %128 = and i8 %127, 1
  %.not128 = icmp eq i8 %128, 0
  %129 = select i1 %.not128, i32 32, i32 31
  %130 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %129)
  %131 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %130, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %132 = load i32, i32* @x.7, align 4
  %133 = load i32, i32* @y.8, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 1360862480, i32 -1346539639
  br label %.backedge

141:                                              ; preds = %15
  br label %.backedge

142:                                              ; preds = %15
  %143 = load i32, i32* @x.7, align 4
  %144 = load i32, i32* @y.8, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 1165800560, i32 -992788190
  br label %.backedge

152:                                              ; preds = %15
  %153 = icmp slt i64 %.0116, 32
  store i1 %153, i1* %3, align 1
  %154 = load i32, i32* @x.7, align 4
  %155 = load i32, i32* @y.8, align 4
  %156 = add i32 %154, -1
  %157 = mul i32 %156, %154
  %158 = and i32 %157, 1
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %160, %159
  %162 = select i1 %161, i32 243672785, i32 -992788190
  br label %.backedge

163:                                              ; preds = %15
  %.0..0..0.101 = load volatile i1, i1* %3, align 1
  %164 = select i1 %.0..0..0.101, i32 1731375457, i32 -54399148
  br label %.backedge

165:                                              ; preds = %15
  %166 = trunc i64 %.0116 to i32
  %167 = lshr i32 -2147483648, %166
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0116
  store i64 %168, i64* %169, align 8
  %170 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %168)
  %171 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %170, i8 signext 32)
  br label %.backedge

172:                                              ; preds = %15
  %173 = add i64 %.0116, 1
  br label %.backedge

174:                                              ; preds = %15
  %175 = load i8, i8* @flag, align 1
  %176 = and i8 %175, 1
  %.not127 = icmp eq i8 %176, 0
  %177 = select i1 %.not127, i32 -731217689, i32 -1235628060
  br label %.backedge

178:                                              ; preds = %15
  store i64 1, i64* getelementptr inbounds ([1000 x i64], [1000 x i64]* @d, i64 0, i64 32), align 16
  %179 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 1)
  %180 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %179, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

181:                                              ; preds = %15
  %182 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

183:                                              ; preds = %15
  br label %.backedge

184:                                              ; preds = %15
  %185 = load i64, i64* @n, align 8
  %.not126 = icmp sgt i64 %.0114, %185
  %186 = select i1 %.not126, i32 1625302245, i32 -1647164861
  br label %.backedge

187:                                              ; preds = %15
  %188 = load i32, i32* @x.7, align 4
  %189 = load i32, i32* @y.8, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 1732150240, i32 -2019539436
  br label %.backedge

197:                                              ; preds = %15
  %198 = load i8, i8* @flag, align 1
  %199 = and i8 %198, 1
  %200 = icmp ne i8 %199, 0
  store i1 %200, i1* %2, align 1
  %201 = load i32, i32* @x.7, align 4
  %202 = load i32, i32* @y.8, align 4
  %203 = add i32 %201, -1
  %204 = mul i32 %203, %201
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %207, %206
  %209 = select i1 %208, i32 1807566237, i32 -2019539436
  br label %.backedge

210:                                              ; preds = %15
  %.0..0..0.102 = load volatile i1, i1* %2, align 1
  %211 = select i1 %.0..0..0.102, i32 -1153033835, i32 930986209
  br label %.backedge

212:                                              ; preds = %15
  br label %.backedge

213:                                              ; preds = %15
  br label %.backedge

214:                                              ; preds = %15
  %215 = icmp slt i64 %.0108, 32
  %216 = select i1 %215, i32 -1702868593, i32 1290203745
  br label %.backedge

217:                                              ; preds = %15
  %218 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %219 = load i64, i64* %218, align 8
  %220 = add i64 %219, %.0112
  %221 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %224 = load i64, i64* %223, align 8
  %225 = tail call i64 @_Z3disxxxx(i64 %220, i64 %.0110, i64 %222, i64 %224)
  %.not125 = icmp eq i64 %225, 9223372036854775807
  %226 = select i1 %.not125, i32 -222438843, i32 1295614188
  br label %.backedge

227:                                              ; preds = %15
  %228 = load i32, i32* @x.7, align 4
  %229 = load i32, i32* @y.8, align 4
  %230 = add i32 %228, -1
  %231 = mul i32 %230, %228
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %234, %233
  %236 = select i1 %235, i32 1524256925, i32 -1052042916
  br label %.backedge

237:                                              ; preds = %15
  %238 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %239 = load i64, i64* %238, align 8
  %240 = add i64 %239, %.0112
  %241 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %242 = load i64, i64* %241, align 8
  %243 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %244 = load i64, i64* %243, align 8
  %245 = tail call i64 @_Z3disxxxx(i64 %240, i64 %.0110, i64 %242, i64 %244)
  %246 = load i32, i32* @x.7, align 4
  %247 = load i32, i32* @y.8, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 -431919847, i32 -1052042916
  br label %.backedge

255:                                              ; preds = %15
  br label %.backedge

256:                                              ; preds = %15
  %257 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %258 = load i64, i64* %257, align 8
  %259 = sub i64 %.0112, %258
  %260 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %263 = load i64, i64* %262, align 8
  %264 = tail call i64 @_Z3disxxxx(i64 %259, i64 %.0110, i64 %261, i64 %263)
  %265 = icmp slt i64 %264, %.0104
  %266 = select i1 %265, i32 1096155726, i32 -1643358036
  br label %.backedge

267:                                              ; preds = %15
  %268 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %269 = load i64, i64* %268, align 8
  %270 = sub i64 %.0112, %269
  %271 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %272 = load i64, i64* %271, align 8
  %273 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %274 = load i64, i64* %273, align 8
  %275 = tail call i64 @_Z3disxxxx(i64 %270, i64 %.0110, i64 %272, i64 %274)
  br label %.backedge

276:                                              ; preds = %15
  %277 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %278 = load i64, i64* %277, align 8
  %279 = add i64 %278, %.0110
  %280 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %281 = load i64, i64* %280, align 8
  %282 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %283 = load i64, i64* %282, align 8
  %284 = tail call i64 @_Z3disxxxx(i64 %.0112, i64 %279, i64 %281, i64 %283)
  %285 = icmp slt i64 %284, %.0104
  %286 = select i1 %285, i32 1295889459, i32 524728009
  br label %.backedge

287:                                              ; preds = %15
  %288 = load i32, i32* @x.7, align 4
  %289 = load i32, i32* @y.8, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 1791079147, i32 -1988481996
  br label %.backedge

297:                                              ; preds = %15
  %298 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %299 = load i64, i64* %298, align 8
  %300 = add i64 %299, %.0110
  %301 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %302 = load i64, i64* %301, align 8
  %303 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %304 = load i64, i64* %303, align 8
  %305 = tail call i64 @_Z3disxxxx(i64 %.0112, i64 %300, i64 %302, i64 %304)
  %306 = load i32, i32* @x.7, align 4
  %307 = load i32, i32* @y.8, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 1379807574, i32 -1988481996
  br label %.backedge

315:                                              ; preds = %15
  br label %.backedge

316:                                              ; preds = %15
  %317 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %318 = load i64, i64* %317, align 8
  %319 = sub i64 %.0110, %318
  %320 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %321 = load i64, i64* %320, align 8
  %322 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %323 = load i64, i64* %322, align 8
  %324 = tail call i64 @_Z3disxxxx(i64 %.0112, i64 %319, i64 %321, i64 %323)
  %325 = icmp slt i64 %324, %.0104
  %326 = select i1 %325, i32 -1208949202, i32 235277926
  br label %.backedge

327:                                              ; preds = %15
  %328 = load i32, i32* @x.7, align 4
  %329 = load i32, i32* @y.8, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 1499684001, i32 -804096918
  br label %.backedge

337:                                              ; preds = %15
  %338 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %339 = load i64, i64* %338, align 8
  %340 = sub i64 %.0110, %339
  %341 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %342 = load i64, i64* %341, align 8
  %343 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %344 = load i64, i64* %343, align 8
  %345 = tail call i64 @_Z3disxxxx(i64 %.0112, i64 %340, i64 %342, i64 %344)
  %346 = load i32, i32* @x.7, align 4
  %347 = load i32, i32* @y.8, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 -245557095, i32 -804096918
  br label %.backedge

355:                                              ; preds = %15
  br label %.backedge

356:                                              ; preds = %15
  %357 = load i32, i32* @x.7, align 4
  %358 = load i32, i32* @y.8, align 4
  %359 = add i32 %357, -1
  %360 = mul i32 %359, %357
  %361 = and i32 %360, 1
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %363, %362
  %365 = select i1 %364, i32 1816283741, i32 -968892922
  br label %.backedge

366:                                              ; preds = %15
  %367 = icmp eq i8 %.0106, 82
  store i1 %367, i1* %1, align 1
  %368 = load i32, i32* @x.7, align 4
  %369 = load i32, i32* @y.8, align 4
  %370 = add i32 %368, -1
  %371 = mul i32 %370, %368
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %374, %373
  %376 = select i1 %375, i32 -368839160, i32 -968892922
  br label %.backedge

377:                                              ; preds = %15
  %.0..0..0.103 = load volatile i1, i1* %1, align 1
  %378 = select i1 %.0..0..0.103, i32 -1151685735, i32 -593349079
  br label %.backedge

379:                                              ; preds = %15
  %380 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %381 = load i64, i64* %380, align 8
  %382 = add i64 %381, %.0112
  br label %.backedge

383:                                              ; preds = %15
  %384 = icmp eq i8 %.0106, 76
  %385 = select i1 %384, i32 -786456110, i32 -1677621453
  br label %.backedge

386:                                              ; preds = %15
  %387 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %388 = load i64, i64* %387, align 8
  %389 = sub i64 %.0112, %388
  br label %.backedge

390:                                              ; preds = %15
  %391 = icmp eq i8 %.0106, 85
  %392 = select i1 %391, i32 1413729172, i32 432807358
  br label %.backedge

393:                                              ; preds = %15
  %394 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %395 = load i64, i64* %394, align 8
  %396 = add i64 %395, %.0110
  br label %.backedge

397:                                              ; preds = %15
  %398 = icmp eq i8 %.0106, 68
  %399 = select i1 %398, i32 -1662122399, i32 -1206610011
  br label %.backedge

400:                                              ; preds = %15
  %401 = load i32, i32* @x.7, align 4
  %402 = load i32, i32* @y.8, align 4
  %403 = add i32 %401, -1
  %404 = mul i32 %403, %401
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %407, %406
  %409 = select i1 %408, i32 -1782852321, i32 -1159965580
  br label %.backedge

410:                                              ; preds = %15
  %411 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %412 = load i64, i64* %411, align 8
  %413 = sub i64 %.0110, %412
  %414 = load i32, i32* @x.7, align 4
  %415 = load i32, i32* @y.8, align 4
  %416 = add i32 %414, -1
  %417 = mul i32 %416, %414
  %418 = and i32 %417, 1
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %420, %419
  %422 = select i1 %421, i32 -15809730, i32 -1159965580
  br label %.backedge

423:                                              ; preds = %15
  br label %.backedge

424:                                              ; preds = %15
  %425 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %.0106)
  br label %.backedge

426:                                              ; preds = %15
  %427 = add i64 %.0108, 1
  br label %.backedge

428:                                              ; preds = %15
  %429 = load i8, i8* @flag, align 1
  %430 = and i8 %429, 1
  %.not124 = icmp eq i8 %430, 0
  %431 = select i1 %.not124, i32 1618896355, i32 1236832893
  br label %.backedge

432:                                              ; preds = %15
  %433 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 82)
  br label %.backedge

434:                                              ; preds = %15
  %435 = load i32, i32* @x.7, align 4
  %436 = load i32, i32* @y.8, align 4
  %437 = add i32 %435, -1
  %438 = mul i32 %437, %435
  %439 = and i32 %438, 1
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %441, %440
  %443 = select i1 %442, i32 287715022, i32 -889033542
  br label %.backedge

444:                                              ; preds = %15
  %445 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %446 = load i32, i32* @x.7, align 4
  %447 = load i32, i32* @y.8, align 4
  %448 = add i32 %446, -1
  %449 = mul i32 %448, %446
  %450 = and i32 %449, 1
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %452, %451
  %454 = select i1 %453, i32 1743318510, i32 -889033542
  br label %.backedge

455:                                              ; preds = %15
  br label %.backedge

456:                                              ; preds = %15
  %457 = load i32, i32* @x.7, align 4
  %458 = load i32, i32* @y.8, align 4
  %459 = add i32 %457, -1
  %460 = mul i32 %459, %457
  %461 = and i32 %460, 1
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %463, %462
  %465 = select i1 %464, i32 346259237, i32 -263473837
  br label %.backedge

466:                                              ; preds = %15
  %467 = add i64 %.0114, 1
  %468 = load i32, i32* @x.7, align 4
  %469 = load i32, i32* @y.8, align 4
  %470 = add i32 %468, -1
  %471 = mul i32 %470, %468
  %472 = and i32 %471, 1
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %474, %473
  %476 = select i1 %475, i32 -242440558, i32 -263473837
  br label %.backedge

477:                                              ; preds = %15
  br label %.backedge

478:                                              ; preds = %15
  br label %.backedge

479:                                              ; preds = %15
  ret i32 0

480:                                              ; preds = %15
  %481 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0120
  %482 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %481)
  %483 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0120
  %484 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %482, i64* nonnull dereferenceable(8) %483)
  br label %.backedge

485:                                              ; preds = %15
  br label %.backedge

486:                                              ; preds = %15
  %487 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0118
  %488 = load i64, i64* %487, align 8
  %489 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0118
  %490 = load i64, i64* %489, align 8
  %491 = add i64 %490, %488
  %492 = tail call i64 @_ZSt3absx(i64 %491)
  br label %.backedge

493:                                              ; preds = %15
  %494 = load i8, i8* @flag, align 1
  %495 = and i8 %494, 1
  %.not = icmp eq i8 %495, 0
  %496 = select i1 %.not, i32 32, i32 31
  %497 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %496)
  %498 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %497, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

499:                                              ; preds = %15
  br label %.backedge

500:                                              ; preds = %15
  br label %.backedge

501:                                              ; preds = %15
  %502 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %503 = load i64, i64* %502, align 8
  %504 = add i64 %503, %.0112
  %505 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %506 = load i64, i64* %505, align 8
  %507 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %508 = load i64, i64* %507, align 8
  %509 = tail call i64 @_Z3disxxxx(i64 %504, i64 %.0110, i64 %506, i64 %508)
  br label %.backedge

510:                                              ; preds = %15
  %511 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %512 = load i64, i64* %511, align 8
  %513 = add i64 %512, %.0110
  %514 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %515 = load i64, i64* %514, align 8
  %516 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %517 = load i64, i64* %516, align 8
  %518 = tail call i64 @_Z3disxxxx(i64 %.0112, i64 %513, i64 %515, i64 %517)
  br label %.backedge

519:                                              ; preds = %15
  %520 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %521 = load i64, i64* %520, align 8
  %522 = sub i64 %.0110, %521
  %523 = getelementptr inbounds [10005 x i64], [10005 x i64]* @x, i64 0, i64 %.0114
  %524 = load i64, i64* %523, align 8
  %525 = getelementptr inbounds [10005 x i64], [10005 x i64]* @y, i64 0, i64 %.0114
  %526 = load i64, i64* %525, align 8
  %527 = tail call i64 @_Z3disxxxx(i64 %.0112, i64 %522, i64 %524, i64 %526)
  br label %.backedge

528:                                              ; preds = %15
  br label %.backedge

529:                                              ; preds = %15
  %530 = getelementptr inbounds [1000 x i64], [1000 x i64]* @d, i64 0, i64 %.0108
  %531 = load i64, i64* %530, align 8
  %532 = sub i64 %.0110, %531
  br label %.backedge

533:                                              ; preds = %15
  %534 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

535:                                              ; preds = %15
  %.neg = add i64 %.0114, 1
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s527643828.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #6

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
