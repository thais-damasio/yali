; ModuleID = 'build_ollvm/programs/p03247/s969709083.ll'
source_filename = "Project_CodeNet_C++1400/p03247/s969709083.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3absx = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s969709083.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -678874788, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -678874788, label %11
    i32 -1481764734, label %14
    i32 1017731703, label %25
    i32 -2042373435, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1481764734, i32 -2042373435
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 1017731703, i32 -2042373435
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1481764734, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %9)
  %13 = load i64, i64* %9, align 8
  %14 = call i8* @llvm.stacksave()
  %15 = alloca i64, i64 %13, align 16
  %16 = load i64, i64* %9, align 8
  %17 = alloca i64, i64 %16, align 16
  br label %18

18:                                               ; preds = %.backedge, %0
  %.0105 = phi i64 [ 0, %0 ], [ %.0105.be, %.backedge ]
  %.0103 = phi i64 [ undef, %0 ], [ %.0103.be, %.backedge ]
  %.099 = phi i64 [ undef, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i64 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i64 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i64 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i64 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i64 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.0 = phi i32 [ 26149174, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 26149174, label %19
    i32 -2130640041, label %29
    i32 1650688459, label %41
    i32 1283905724, label %43
    i32 591274092, label %52
    i32 202409822, label %62
    i32 842720947, label %73
    i32 -1718978136, label %74
    i32 1300456115, label %84
    i32 1621207438, label %94
    i32 -745875292, label %95
    i32 -1470182789, label %105
    i32 -1136835360, label %117
    i32 -469083115, label %119
    i32 -1107989781, label %128
    i32 -1999458237, label %138
    i32 306864382, label %150
    i32 1882069105, label %151
    i32 2087437957, label %152
    i32 286723991, label %162
    i32 1490552119, label %173
    i32 -351102626, label %174
    i32 736762669, label %184
    i32 1343136067, label %197
    i32 -1024738783, label %199
    i32 398583409, label %202
    i32 -1147646406, label %205
    i32 -46538892, label %215
    i32 1456635059, label %228
    i32 2053758327, label %229
    i32 -450186412, label %239
    i32 -654570885, label %250
    i32 1706565565, label %251
    i32 -1840455466, label %254
    i32 1202558970, label %258
    i32 2118837257, label %259
    i32 503510935, label %262
    i32 -90313748, label %267
    i32 1716532691, label %275
    i32 -774000278, label %280
    i32 1744630731, label %284
    i32 -971944297, label %285
    i32 295879756, label %294
    i32 -1875208486, label %299
    i32 1960571312, label %304
    i32 -1759979296, label %305
    i32 748662962, label %315
    i32 -556881187, label %325
    i32 1085544748, label %326
    i32 -839758570, label %328
    i32 883053193, label %338
    i32 -1109351610, label %351
    i32 767123378, label %353
    i32 1490930649, label %361
    i32 1759166088, label %371
    i32 176668717, label %385
    i32 -1940306275, label %386
    i32 855876207, label %396
    i32 -1301154429, label %410
    i32 807033798, label %411
    i32 297962241, label %412
    i32 1727523033, label %422
    i32 -2084642687, label %437
    i32 1467390134, label %439
    i32 -1944283133, label %449
    i32 -711079611, label %463
    i32 -930256020, label %464
    i32 130341112, label %474
    i32 1923876492, label %488
    i32 -661241360, label %489
    i32 1632671304, label %490
    i32 -760856326, label %492
    i32 -1590237797, label %493
    i32 876275685, label %494
    i32 -1941307258, label %504
    i32 -2144230485, label %516
    i32 -1073851390, label %517
    i32 874741084, label %520
    i32 -1532799659, label %524
    i32 774316793, label %526
    i32 -2131813470, label %528
    i32 1491166402, label %538
    i32 -437213793, label %550
    i32 -2095006632, label %552
    i32 -1472188302, label %553
    i32 -1822572886, label %556
    i32 1212850051, label %561
    i32 152125779, label %571
    i32 -1681953, label %587
    i32 -532020860, label %589
    i32 -2132845074, label %594
    i32 -635357329, label %598
    i32 -1976486807, label %599
    i32 -1071332281, label %608
    i32 -1449810511, label %613
    i32 -2087743036, label %618
    i32 2119268649, label %619
    i32 -1948873716, label %620
    i32 441578631, label %622
    i32 1648654830, label %632
    i32 1252771198, label %643
    i32 -1707193709, label %644
    i32 -1735751540, label %645
    i32 1777241422, label %655
    i32 -648336159, label %665
    i32 1278422866, label %666
    i32 -1395727391, label %667
    i32 1497018872, label %668
    i32 1470829343, label %678
    i32 299896443, label %688
    i32 -26123881, label %743
    i32 -1342820760, label %689
    i32 47630492, label %690
    i32 1761597711, label %692
    i32 111726709, label %693
    i32 1899927873, label %694
    i32 926519019, label %697
    i32 -708984394, label %699
    i32 -191164421, label %700
    i32 2010227253, label %704
    i32 -184769377, label %706
    i32 772128556, label %707
    i32 86715377, label %708
    i32 1880665077, label %713
    i32 1193638527, label %718
    i32 -1578464365, label %722
    i32 -1610898097, label %727
    i32 -226691334, label %732
    i32 2028325588, label %735
    i32 920168475, label %736
    i32 1828009812, label %740
    i32 1131375110, label %742
  ]

.backedge:                                        ; preds = %18, %743, %742, %740, %736, %735, %732, %727, %722, %718, %713, %708, %707, %706, %704, %700, %699, %697, %694, %693, %692, %690, %689, %678, %668, %667, %666, %665, %655, %645, %644, %643, %632, %622, %620, %619, %618, %613, %608, %599, %598, %594, %589, %587, %571, %561, %556, %553, %552, %550, %538, %528, %526, %524, %520, %517, %516, %504, %494, %493, %492, %490, %489, %488, %474, %464, %463, %449, %439, %437, %422, %412, %411, %410, %396, %386, %385, %371, %361, %353, %351, %338, %328, %326, %325, %315, %305, %304, %299, %294, %285, %284, %280, %275, %267, %262, %259, %258, %254, %251, %250, %239, %229, %228, %215, %205, %202, %199, %197, %184, %174, %173, %162, %152, %151, %150, %138, %128, %119, %117, %105, %95, %94, %84, %74, %73, %62, %52, %43, %41, %29, %19
  %.0105.be = phi i64 [ %.0105, %18 ], [ %.0105, %742 ], [ %.0105, %740 ], [ %.0105, %736 ], [ %.0105, %735 ], [ %.0105, %732 ], [ %.0105, %727 ], [ %.0105, %722 ], [ %.0105, %718 ], [ %.0105, %713 ], [ %.0105, %708 ], [ %.0105, %707 ], [ %.0105, %706 ], [ %.0105, %704 ], [ %.0105, %700 ], [ %.0105, %699 ], [ %.0105, %697 ], [ %.0105, %694 ], [ %.0105, %693 ], [ %.0105, %692 ], [ %691, %690 ], [ %.0105, %689 ], [ %.0105, %743 ], [ %.0105, %678 ], [ %.0105, %668 ], [ %.0105, %667 ], [ %.0105, %666 ], [ %.0105, %665 ], [ %.0105, %655 ], [ %.0105, %645 ], [ %.0105, %644 ], [ %.0105, %643 ], [ %.0105, %632 ], [ %.0105, %622 ], [ %.0105, %620 ], [ %.0105, %619 ], [ %.0105, %618 ], [ %.0105, %613 ], [ %.0105, %608 ], [ %.0105, %599 ], [ %.0105, %598 ], [ %.0105, %594 ], [ %.0105, %589 ], [ %.0105, %587 ], [ %.0105, %571 ], [ %.0105, %561 ], [ %.0105, %556 ], [ %.0105, %553 ], [ %.0105, %552 ], [ %.0105, %550 ], [ %.0105, %538 ], [ %.0105, %528 ], [ %.0105, %526 ], [ %.0105, %524 ], [ %.0105, %520 ], [ %.0105, %517 ], [ %.0105, %516 ], [ %.0105, %504 ], [ %.0105, %494 ], [ %.0105, %493 ], [ %.0105, %492 ], [ %.0105, %490 ], [ %.0105, %489 ], [ %.0105, %488 ], [ %.0105, %474 ], [ %.0105, %464 ], [ %.0105, %463 ], [ %.0105, %449 ], [ %.0105, %439 ], [ %.0105, %437 ], [ %.0105, %422 ], [ %.0105, %412 ], [ %.0105, %411 ], [ %.0105, %410 ], [ %.0105, %396 ], [ %.0105, %386 ], [ %.0105, %385 ], [ %.0105, %371 ], [ %.0105, %361 ], [ %.0105, %353 ], [ %.0105, %351 ], [ %.0105, %338 ], [ %.0105, %328 ], [ %.0105, %326 ], [ %.0105, %325 ], [ %.0105, %315 ], [ %.0105, %305 ], [ %.0105, %304 ], [ %.0105, %299 ], [ %.0105, %294 ], [ %.0105, %285 ], [ %.0105, %284 ], [ %.0105, %280 ], [ %.0105, %275 ], [ %.0105, %267 ], [ %.0105, %262 ], [ %.0105, %259 ], [ %.0105, %258 ], [ %.0105, %254 ], [ %.0105, %251 ], [ %.0105, %250 ], [ %.0105, %239 ], [ %.0105, %229 ], [ %.0105, %228 ], [ %.0105, %215 ], [ %.0105, %205 ], [ %.0105, %202 ], [ %.0105, %199 ], [ %.0105, %197 ], [ %.0105, %184 ], [ %.0105, %174 ], [ %.0105, %173 ], [ %.0105, %162 ], [ %.0105, %152 ], [ %.0105, %151 ], [ %.0105, %150 ], [ %.0105, %138 ], [ %.0105, %128 ], [ %.0105, %119 ], [ %.0105, %117 ], [ %.0105, %105 ], [ %.0105, %95 ], [ %.0105, %94 ], [ %.0105, %84 ], [ %.0105, %74 ], [ %.0105, %73 ], [ %63, %62 ], [ %.0105, %52 ], [ %.0105, %43 ], [ %.0105, %41 ], [ %.0105, %29 ], [ %.0105, %19 ]
  %.0103.be = phi i64 [ %.0103, %18 ], [ %.0103, %742 ], [ %.0103, %740 ], [ %.0103, %736 ], [ %.0103, %735 ], [ %.0103, %732 ], [ %.0103, %727 ], [ %.0103, %722 ], [ %.0103, %718 ], [ %.0103, %713 ], [ %.0103, %708 ], [ %.0103, %707 ], [ %.0103, %706 ], [ %.0103, %704 ], [ %.0103, %700 ], [ %.0103, %699 ], [ %698, %697 ], [ %.0103, %694 ], [ %.0103, %693 ], [ 1, %692 ], [ %.0103, %690 ], [ %.0103, %689 ], [ %.0103, %743 ], [ %.0103, %678 ], [ %.0103, %668 ], [ %.0103, %667 ], [ %.0103, %666 ], [ %.0103, %665 ], [ %.0103, %655 ], [ %.0103, %645 ], [ %.0103, %644 ], [ %.0103, %643 ], [ %.0103, %632 ], [ %.0103, %622 ], [ %.0103, %620 ], [ %.0103, %619 ], [ %.0103, %618 ], [ %.0103, %613 ], [ %.0103, %608 ], [ %.0103, %599 ], [ %.0103, %598 ], [ %.0103, %594 ], [ %.0103, %589 ], [ %.0103, %587 ], [ %.0103, %571 ], [ %.0103, %561 ], [ %.0103, %556 ], [ %.0103, %553 ], [ %.0103, %552 ], [ %.0103, %550 ], [ %.0103, %538 ], [ %.0103, %528 ], [ %.0103, %526 ], [ %.0103, %524 ], [ %.0103, %520 ], [ %.0103, %517 ], [ %.0103, %516 ], [ %.0103, %504 ], [ %.0103, %494 ], [ %.0103, %493 ], [ %.0103, %492 ], [ %.0103, %490 ], [ %.0103, %489 ], [ %.0103, %488 ], [ %.0103, %474 ], [ %.0103, %464 ], [ %.0103, %463 ], [ %.0103, %449 ], [ %.0103, %439 ], [ %.0103, %437 ], [ %.0103, %422 ], [ %.0103, %412 ], [ %.0103, %411 ], [ %.0103, %410 ], [ %.0103, %396 ], [ %.0103, %386 ], [ %.0103, %385 ], [ %.0103, %371 ], [ %.0103, %361 ], [ %.0103, %353 ], [ %.0103, %351 ], [ %.0103, %338 ], [ %.0103, %328 ], [ %.0103, %326 ], [ %.0103, %325 ], [ %.0103, %315 ], [ %.0103, %305 ], [ %.0103, %304 ], [ %.0103, %299 ], [ %.0103, %294 ], [ %.0103, %285 ], [ %.0103, %284 ], [ %.0103, %280 ], [ %.0103, %275 ], [ %.0103, %267 ], [ %.0103, %262 ], [ %.0103, %259 ], [ %.0103, %258 ], [ %.0103, %254 ], [ %.0103, %251 ], [ %.0103, %250 ], [ %.0103, %239 ], [ %.0103, %229 ], [ %.0103, %228 ], [ %.0103, %215 ], [ %.0103, %205 ], [ %.0103, %202 ], [ %.0103, %199 ], [ %.0103, %197 ], [ %.0103, %184 ], [ %.0103, %174 ], [ %.0103, %173 ], [ %163, %162 ], [ %.0103, %152 ], [ %.0103, %151 ], [ %.0103, %150 ], [ %.0103, %138 ], [ %.0103, %128 ], [ %.0103, %119 ], [ %.0103, %117 ], [ %.0103, %105 ], [ %.0103, %95 ], [ %.0103, %94 ], [ 1, %84 ], [ %.0103, %74 ], [ %.0103, %73 ], [ %.0103, %62 ], [ %.0103, %52 ], [ %.0103, %43 ], [ %.0103, %41 ], [ %.0103, %29 ], [ %.0103, %19 ]
  %.099.be = phi i64 [ %.099, %18 ], [ %.099, %742 ], [ %.099, %740 ], [ %.099, %736 ], [ %.099, %735 ], [ %.099, %732 ], [ %.099, %727 ], [ %.099, %722 ], [ %.099, %718 ], [ %.099, %713 ], [ %.099, %708 ], [ %.099, %707 ], [ %.099, %706 ], [ %705, %704 ], [ %.099, %700 ], [ %.099, %699 ], [ %.099, %697 ], [ %.099, %694 ], [ %.099, %693 ], [ %.099, %692 ], [ %.099, %690 ], [ %.099, %689 ], [ %.099, %743 ], [ %.099, %678 ], [ %.099, %668 ], [ %.099, %667 ], [ %.099, %666 ], [ %.099, %665 ], [ %.099, %655 ], [ %.099, %645 ], [ %.099, %644 ], [ %.099, %643 ], [ %.099, %632 ], [ %.099, %622 ], [ %.099, %620 ], [ %.099, %619 ], [ %.099, %618 ], [ %.099, %613 ], [ %.099, %608 ], [ %.099, %599 ], [ %.099, %598 ], [ %.099, %594 ], [ %.099, %589 ], [ %.099, %587 ], [ %.099, %571 ], [ %.099, %561 ], [ %.099, %556 ], [ %.099, %553 ], [ %.099, %552 ], [ %.099, %550 ], [ %.099, %538 ], [ %.099, %528 ], [ %.099, %526 ], [ %.099, %524 ], [ %.099, %520 ], [ %.099, %517 ], [ %.099, %516 ], [ %.099, %504 ], [ %.099, %494 ], [ %.099, %493 ], [ %.099, %492 ], [ %.099, %490 ], [ %.099, %489 ], [ %.099, %488 ], [ %.099, %474 ], [ %.099, %464 ], [ %.099, %463 ], [ %.099, %449 ], [ %.099, %439 ], [ %.099, %437 ], [ %.099, %422 ], [ %.099, %412 ], [ %.099, %411 ], [ %.099, %410 ], [ %.099, %396 ], [ %.099, %386 ], [ %.099, %385 ], [ %.099, %371 ], [ %.099, %361 ], [ %.099, %353 ], [ %.099, %351 ], [ %.099, %338 ], [ %.099, %328 ], [ %.099, %326 ], [ %.099, %325 ], [ %.099, %315 ], [ %.099, %305 ], [ %.099, %304 ], [ %.099, %299 ], [ %.099, %294 ], [ %.099, %285 ], [ %.099, %284 ], [ %.099, %280 ], [ %.099, %275 ], [ %.099, %267 ], [ %.099, %262 ], [ %.099, %259 ], [ %.099, %258 ], [ %.099, %254 ], [ %.099, %251 ], [ %.099, %250 ], [ %240, %239 ], [ %.099, %229 ], [ %.099, %228 ], [ %.099, %215 ], [ %.099, %205 ], [ %.099, %202 ], [ 30, %199 ], [ %.099, %197 ], [ %.099, %184 ], [ %.099, %174 ], [ %.099, %173 ], [ %.099, %162 ], [ %.099, %152 ], [ %.099, %151 ], [ %.099, %150 ], [ %.099, %138 ], [ %.099, %128 ], [ %.099, %119 ], [ %.099, %117 ], [ %.099, %105 ], [ %.099, %95 ], [ %.099, %94 ], [ %.099, %84 ], [ %.099, %74 ], [ %.099, %73 ], [ %.099, %62 ], [ %.099, %52 ], [ %.099, %43 ], [ %.099, %41 ], [ %.099, %29 ], [ %.099, %19 ]
  %.097.be = phi i64 [ %.097, %18 ], [ %.097, %742 ], [ %.097, %740 ], [ %.097, %736 ], [ %.097, %735 ], [ %.097, %732 ], [ %.097, %727 ], [ %.097, %722 ], [ %.097, %718 ], [ %.097, %713 ], [ %.097, %708 ], [ %.097, %707 ], [ %.097, %706 ], [ %.097, %704 ], [ %.097, %700 ], [ %.097, %699 ], [ %.097, %697 ], [ %.097, %694 ], [ %.097, %693 ], [ %.097, %692 ], [ %.097, %690 ], [ %.097, %689 ], [ %.097, %743 ], [ %.097, %678 ], [ %.097, %668 ], [ %.097, %667 ], [ %.097, %666 ], [ %.097, %665 ], [ %.097, %655 ], [ %.097, %645 ], [ %.097, %644 ], [ %.097, %643 ], [ %.097, %632 ], [ %.097, %622 ], [ %.097, %620 ], [ %.097, %619 ], [ %.097, %618 ], [ %.097, %613 ], [ %.097, %608 ], [ %.097, %599 ], [ %.097, %598 ], [ %.097, %594 ], [ %.097, %589 ], [ %.097, %587 ], [ %.097, %571 ], [ %.097, %561 ], [ %.097, %556 ], [ %.097, %553 ], [ %.097, %552 ], [ %.097, %550 ], [ %.097, %538 ], [ %.097, %528 ], [ %.097, %526 ], [ %.097, %524 ], [ %.097, %520 ], [ %.097, %517 ], [ %.097, %516 ], [ %.097, %504 ], [ %.097, %494 ], [ %.097, %493 ], [ %.neg116, %492 ], [ %.097, %490 ], [ %.097, %489 ], [ %.097, %488 ], [ %.097, %474 ], [ %.097, %464 ], [ %.097, %463 ], [ %.097, %449 ], [ %.097, %439 ], [ %.097, %437 ], [ %.097, %422 ], [ %.097, %412 ], [ %.097, %411 ], [ %.097, %410 ], [ %.097, %396 ], [ %.097, %386 ], [ %.097, %385 ], [ %.097, %371 ], [ %.097, %361 ], [ %.097, %353 ], [ %.097, %351 ], [ %.097, %338 ], [ %.097, %328 ], [ %.097, %326 ], [ %.097, %325 ], [ %.097, %315 ], [ %.097, %305 ], [ %.097, %304 ], [ %.097, %299 ], [ %.097, %294 ], [ %.097, %285 ], [ %.097, %284 ], [ %.097, %280 ], [ %.097, %275 ], [ %.097, %267 ], [ %.097, %262 ], [ %.097, %259 ], [ %.097, %258 ], [ %.097, %254 ], [ 0, %251 ], [ %.097, %250 ], [ %.097, %239 ], [ %.097, %229 ], [ %.097, %228 ], [ %.097, %215 ], [ %.097, %205 ], [ %.097, %202 ], [ %.097, %199 ], [ %.097, %197 ], [ %.097, %184 ], [ %.097, %174 ], [ %.097, %173 ], [ %.097, %162 ], [ %.097, %152 ], [ %.097, %151 ], [ %.097, %150 ], [ %.097, %138 ], [ %.097, %128 ], [ %.097, %119 ], [ %.097, %117 ], [ %.097, %105 ], [ %.097, %95 ], [ %.097, %94 ], [ %.097, %84 ], [ %.097, %74 ], [ %.097, %73 ], [ %.097, %62 ], [ %.097, %52 ], [ %.097, %43 ], [ %.097, %41 ], [ %.097, %29 ], [ %.097, %19 ]
  %.095.be = phi i64 [ %.095, %18 ], [ %.095, %742 ], [ %.095, %740 ], [ %.095, %736 ], [ %.095, %735 ], [ %.095, %732 ], [ %.095, %727 ], [ %.095, %722 ], [ %.095, %718 ], [ %.095, %713 ], [ %.095, %708 ], [ %.095, %707 ], [ %.095, %706 ], [ %.095, %704 ], [ %.095, %700 ], [ %.095, %699 ], [ %.095, %697 ], [ %.095, %694 ], [ %.095, %693 ], [ %.095, %692 ], [ %.095, %690 ], [ %.095, %689 ], [ %.095, %743 ], [ %.095, %678 ], [ %.095, %668 ], [ %.095, %667 ], [ %.095, %666 ], [ %.095, %665 ], [ %.095, %655 ], [ %.095, %645 ], [ %.095, %644 ], [ %.095, %643 ], [ %.095, %632 ], [ %.095, %622 ], [ %.095, %620 ], [ %.095, %619 ], [ %.095, %618 ], [ %.095, %613 ], [ %.095, %608 ], [ %.095, %599 ], [ %.095, %598 ], [ %.095, %594 ], [ %.095, %589 ], [ %.095, %587 ], [ %.095, %571 ], [ %.095, %561 ], [ %.095, %556 ], [ %.095, %553 ], [ %.095, %552 ], [ %.095, %550 ], [ %.095, %538 ], [ %.095, %528 ], [ %.095, %526 ], [ %.095, %524 ], [ %.095, %520 ], [ %.095, %517 ], [ %.095, %516 ], [ %.095, %504 ], [ %.095, %494 ], [ %.095, %493 ], [ %.095, %492 ], [ %.095, %490 ], [ %.095, %489 ], [ %.095, %488 ], [ %.095, %474 ], [ %.095, %464 ], [ %.095, %463 ], [ %.095, %449 ], [ %.095, %439 ], [ %.095, %437 ], [ %.095, %422 ], [ %.095, %412 ], [ %.095, %411 ], [ %.095, %410 ], [ %.095, %396 ], [ %.095, %386 ], [ %.095, %385 ], [ %.095, %371 ], [ %.095, %361 ], [ %.095, %353 ], [ %.095, %351 ], [ %.095, %338 ], [ %.095, %328 ], [ %327, %326 ], [ %.095, %325 ], [ %.095, %315 ], [ %.095, %305 ], [ %.095, %304 ], [ %.095, %299 ], [ %.095, %294 ], [ %.095, %285 ], [ %.095, %284 ], [ %.095, %280 ], [ %.095, %275 ], [ %.095, %267 ], [ %.095, %262 ], [ %.095, %259 ], [ 30, %258 ], [ %.095, %254 ], [ %.095, %251 ], [ %.095, %250 ], [ %.095, %239 ], [ %.095, %229 ], [ %.095, %228 ], [ %.095, %215 ], [ %.095, %205 ], [ %.095, %202 ], [ %.095, %199 ], [ %.095, %197 ], [ %.095, %184 ], [ %.095, %174 ], [ %.095, %173 ], [ %.095, %162 ], [ %.095, %152 ], [ %.095, %151 ], [ %.095, %150 ], [ %.095, %138 ], [ %.095, %128 ], [ %.095, %119 ], [ %.095, %117 ], [ %.095, %105 ], [ %.095, %95 ], [ %.095, %94 ], [ %.095, %84 ], [ %.095, %74 ], [ %.095, %73 ], [ %.095, %62 ], [ %.095, %52 ], [ %.095, %43 ], [ %.095, %41 ], [ %.095, %29 ], [ %.095, %19 ]
  %.093.be = phi i64 [ %.093, %18 ], [ %.093, %742 ], [ %.093, %740 ], [ %.093, %736 ], [ %.093, %735 ], [ 30, %732 ], [ %.093, %727 ], [ %.093, %722 ], [ %.093, %718 ], [ %.093, %713 ], [ %.093, %708 ], [ %.093, %707 ], [ %.093, %706 ], [ %.093, %704 ], [ %.093, %700 ], [ %.093, %699 ], [ %.093, %697 ], [ %.093, %694 ], [ %.093, %693 ], [ %.093, %692 ], [ %.093, %690 ], [ %.093, %689 ], [ %.093, %743 ], [ %.093, %678 ], [ %.093, %668 ], [ %.093, %667 ], [ %.093, %666 ], [ %.093, %665 ], [ %.093, %655 ], [ %.093, %645 ], [ %.093, %644 ], [ %.093, %643 ], [ %.093, %632 ], [ %.093, %622 ], [ %.093, %620 ], [ %.093, %619 ], [ %.093, %618 ], [ %.093, %613 ], [ %.093, %608 ], [ %.093, %599 ], [ %.093, %598 ], [ %.093, %594 ], [ %.093, %589 ], [ %.093, %587 ], [ %.093, %571 ], [ %.093, %561 ], [ %.093, %556 ], [ %.093, %553 ], [ %.093, %552 ], [ %.093, %550 ], [ %.093, %538 ], [ %.093, %528 ], [ %.093, %526 ], [ %525, %524 ], [ %.093, %520 ], [ %.093, %517 ], [ %.093, %516 ], [ 30, %504 ], [ %.093, %494 ], [ %.093, %493 ], [ %.093, %492 ], [ %.093, %490 ], [ %.093, %489 ], [ %.093, %488 ], [ %.093, %474 ], [ %.093, %464 ], [ %.093, %463 ], [ %.093, %449 ], [ %.093, %439 ], [ %.093, %437 ], [ %.093, %422 ], [ %.093, %412 ], [ %.093, %411 ], [ %.093, %410 ], [ %.093, %396 ], [ %.093, %386 ], [ %.093, %385 ], [ %.093, %371 ], [ %.093, %361 ], [ %.093, %353 ], [ %.093, %351 ], [ %.093, %338 ], [ %.093, %328 ], [ %.093, %326 ], [ %.093, %325 ], [ %.093, %315 ], [ %.093, %305 ], [ %.093, %304 ], [ %.093, %299 ], [ %.093, %294 ], [ %.093, %285 ], [ %.093, %284 ], [ %.093, %280 ], [ %.093, %275 ], [ %.093, %267 ], [ %.093, %262 ], [ %.093, %259 ], [ %.093, %258 ], [ %.093, %254 ], [ %.093, %251 ], [ %.093, %250 ], [ %.093, %239 ], [ %.093, %229 ], [ %.093, %228 ], [ %.093, %215 ], [ %.093, %205 ], [ %.093, %202 ], [ %.093, %199 ], [ %.093, %197 ], [ %.093, %184 ], [ %.093, %174 ], [ %.093, %173 ], [ %.093, %162 ], [ %.093, %152 ], [ %.093, %151 ], [ %.093, %150 ], [ %.093, %138 ], [ %.093, %128 ], [ %.093, %119 ], [ %.093, %117 ], [ %.093, %105 ], [ %.093, %95 ], [ %.093, %94 ], [ %.093, %84 ], [ %.093, %74 ], [ %.093, %73 ], [ %.093, %62 ], [ %.093, %52 ], [ %.093, %43 ], [ %.093, %41 ], [ %.093, %29 ], [ %.093, %19 ]
  %.091.be = phi i64 [ %.091, %18 ], [ %.091, %742 ], [ %.091, %740 ], [ %.091, %736 ], [ %.091, %735 ], [ %.091, %732 ], [ %.091, %727 ], [ %.091, %722 ], [ %.091, %718 ], [ %.091, %713 ], [ %.091, %708 ], [ %.091, %707 ], [ %.091, %706 ], [ %.091, %704 ], [ %.091, %700 ], [ %.091, %699 ], [ %.091, %697 ], [ %.091, %694 ], [ %.091, %693 ], [ %.091, %692 ], [ %.091, %690 ], [ %.091, %689 ], [ %.091, %743 ], [ %.091, %678 ], [ %.091, %668 ], [ %.091, %667 ], [ %.091, %666 ], [ %.091, %665 ], [ %.091, %655 ], [ %.091, %645 ], [ %.neg109, %644 ], [ %.091, %643 ], [ %.091, %632 ], [ %.091, %622 ], [ %.091, %620 ], [ %.091, %619 ], [ %.091, %618 ], [ %.091, %613 ], [ %.091, %608 ], [ %.091, %599 ], [ %.091, %598 ], [ %.091, %594 ], [ %.091, %589 ], [ %.091, %587 ], [ %.091, %571 ], [ %.091, %561 ], [ %.091, %556 ], [ %.091, %553 ], [ %.091, %552 ], [ %.091, %550 ], [ %.091, %538 ], [ %.091, %528 ], [ 0, %526 ], [ %.091, %524 ], [ %.091, %520 ], [ %.091, %517 ], [ %.091, %516 ], [ %.091, %504 ], [ %.091, %494 ], [ %.091, %493 ], [ %.091, %492 ], [ %.091, %490 ], [ %.091, %489 ], [ %.091, %488 ], [ %.091, %474 ], [ %.091, %464 ], [ %.091, %463 ], [ %.091, %449 ], [ %.091, %439 ], [ %.091, %437 ], [ %.091, %422 ], [ %.091, %412 ], [ %.091, %411 ], [ %.091, %410 ], [ %.091, %396 ], [ %.091, %386 ], [ %.091, %385 ], [ %.091, %371 ], [ %.091, %361 ], [ %.091, %353 ], [ %.091, %351 ], [ %.091, %338 ], [ %.091, %328 ], [ %.091, %326 ], [ %.091, %325 ], [ %.091, %315 ], [ %.091, %305 ], [ %.091, %304 ], [ %.091, %299 ], [ %.091, %294 ], [ %.091, %285 ], [ %.091, %284 ], [ %.091, %280 ], [ %.091, %275 ], [ %.091, %267 ], [ %.091, %262 ], [ %.091, %259 ], [ %.091, %258 ], [ %.091, %254 ], [ %.091, %251 ], [ %.091, %250 ], [ %.091, %239 ], [ %.091, %229 ], [ %.091, %228 ], [ %.091, %215 ], [ %.091, %205 ], [ %.091, %202 ], [ %.091, %199 ], [ %.091, %197 ], [ %.091, %184 ], [ %.091, %174 ], [ %.091, %173 ], [ %.091, %162 ], [ %.091, %152 ], [ %.091, %151 ], [ %.091, %150 ], [ %.091, %138 ], [ %.091, %128 ], [ %.091, %119 ], [ %.091, %117 ], [ %.091, %105 ], [ %.091, %95 ], [ %.091, %94 ], [ %.091, %84 ], [ %.091, %74 ], [ %.091, %73 ], [ %.091, %62 ], [ %.091, %52 ], [ %.091, %43 ], [ %.091, %41 ], [ %.091, %29 ], [ %.091, %19 ]
  %.089.be = phi i64 [ %.089, %18 ], [ %.089, %742 ], [ %.089, %740 ], [ %.089, %736 ], [ %.089, %735 ], [ %.089, %732 ], [ %.089, %727 ], [ %.089, %722 ], [ %.089, %718 ], [ %.089, %713 ], [ %.089, %708 ], [ %.089, %707 ], [ %.089, %706 ], [ %.089, %704 ], [ %.089, %700 ], [ %.089, %699 ], [ %.089, %697 ], [ %.089, %694 ], [ %.089, %693 ], [ %.089, %692 ], [ %.089, %690 ], [ %.089, %689 ], [ %.089, %743 ], [ %.089, %678 ], [ %.089, %668 ], [ %.089, %667 ], [ %.089, %666 ], [ %.089, %665 ], [ %.089, %655 ], [ %.089, %645 ], [ %.089, %644 ], [ %.089, %643 ], [ %.089, %632 ], [ %.089, %622 ], [ %621, %620 ], [ %.089, %619 ], [ %.089, %618 ], [ %.089, %613 ], [ %.089, %608 ], [ %.089, %599 ], [ %.089, %598 ], [ %.089, %594 ], [ %.089, %589 ], [ %.089, %587 ], [ %.089, %571 ], [ %.089, %561 ], [ %.089, %556 ], [ %.089, %553 ], [ 30, %552 ], [ %.089, %550 ], [ %.089, %538 ], [ %.089, %528 ], [ %.089, %526 ], [ %.089, %524 ], [ %.089, %520 ], [ %.089, %517 ], [ %.089, %516 ], [ %.089, %504 ], [ %.089, %494 ], [ %.089, %493 ], [ %.089, %492 ], [ %.089, %490 ], [ %.089, %489 ], [ %.089, %488 ], [ %.089, %474 ], [ %.089, %464 ], [ %.089, %463 ], [ %.089, %449 ], [ %.089, %439 ], [ %.089, %437 ], [ %.089, %422 ], [ %.089, %412 ], [ %.089, %411 ], [ %.089, %410 ], [ %.089, %396 ], [ %.089, %386 ], [ %.089, %385 ], [ %.089, %371 ], [ %.089, %361 ], [ %.089, %353 ], [ %.089, %351 ], [ %.089, %338 ], [ %.089, %328 ], [ %.089, %326 ], [ %.089, %325 ], [ %.089, %315 ], [ %.089, %305 ], [ %.089, %304 ], [ %.089, %299 ], [ %.089, %294 ], [ %.089, %285 ], [ %.089, %284 ], [ %.089, %280 ], [ %.089, %275 ], [ %.089, %267 ], [ %.089, %262 ], [ %.089, %259 ], [ %.089, %258 ], [ %.089, %254 ], [ %.089, %251 ], [ %.089, %250 ], [ %.089, %239 ], [ %.089, %229 ], [ %.089, %228 ], [ %.089, %215 ], [ %.089, %205 ], [ %.089, %202 ], [ %.089, %199 ], [ %.089, %197 ], [ %.089, %184 ], [ %.089, %174 ], [ %.089, %173 ], [ %.089, %162 ], [ %.089, %152 ], [ %.089, %151 ], [ %.089, %150 ], [ %.089, %138 ], [ %.089, %128 ], [ %.089, %119 ], [ %.089, %117 ], [ %.089, %105 ], [ %.089, %95 ], [ %.089, %94 ], [ %.089, %84 ], [ %.089, %74 ], [ %.089, %73 ], [ %.089, %62 ], [ %.089, %52 ], [ %.089, %43 ], [ %.089, %41 ], [ %.089, %29 ], [ %.089, %19 ]
  %.0.be = phi i32 [ %.0, %18 ], [ 1777241422, %742 ], [ 1648654830, %740 ], [ 152125779, %736 ], [ 1491166402, %735 ], [ -1941307258, %732 ], [ 130341112, %727 ], [ -1944283133, %722 ], [ 1727523033, %718 ], [ 855876207, %713 ], [ 1759166088, %708 ], [ 883053193, %707 ], [ 748662962, %706 ], [ -450186412, %704 ], [ -46538892, %700 ], [ 736762669, %699 ], [ 286723991, %697 ], [ -1999458237, %694 ], [ -1470182789, %693 ], [ 1300456115, %692 ], [ 202409822, %690 ], [ -2130640041, %689 ], [ 1470829343, %743 ], [ %687, %678 ], [ %677, %668 ], [ 1497018872, %667 ], [ -1395727391, %666 ], [ 1278422866, %665 ], [ %664, %655 ], [ %654, %645 ], [ -2131813470, %644 ], [ -1707193709, %643 ], [ %642, %632 ], [ %631, %622 ], [ -1472188302, %620 ], [ -1948873716, %619 ], [ 2119268649, %618 ], [ -2087743036, %613 ], [ -2087743036, %608 ], [ %607, %599 ], [ 2119268649, %598 ], [ -635357329, %594 ], [ -635357329, %589 ], [ %588, %587 ], [ %586, %571 ], [ %570, %561 ], [ %560, %556 ], [ %555, %553 ], [ -1472188302, %552 ], [ %551, %550 ], [ %549, %538 ], [ %537, %528 ], [ -2131813470, %526 ], [ -1073851390, %524 ], [ -1532799659, %520 ], [ %519, %517 ], [ -1073851390, %516 ], [ %515, %504 ], [ %503, %494 ], [ 1278422866, %493 ], [ -1840455466, %492 ], [ -760856326, %490 ], [ 1632671304, %489 ], [ -661241360, %488 ], [ %487, %474 ], [ %473, %464 ], [ -661241360, %463 ], [ %462, %449 ], [ %448, %439 ], [ %438, %437 ], [ %436, %422 ], [ %421, %412 ], [ 1632671304, %411 ], [ 807033798, %410 ], [ %409, %396 ], [ %395, %386 ], [ 807033798, %385 ], [ %384, %371 ], [ %370, %361 ], [ %360, %353 ], [ %352, %351 ], [ %350, %338 ], [ %337, %328 ], [ 2118837257, %326 ], [ 1085544748, %325 ], [ %324, %315 ], [ %314, %305 ], [ -1759979296, %304 ], [ 1960571312, %299 ], [ 1960571312, %294 ], [ %293, %285 ], [ -1759979296, %284 ], [ 1744630731, %280 ], [ 1744630731, %275 ], [ %274, %267 ], [ %266, %262 ], [ %261, %259 ], [ 2118837257, %258 ], [ %257, %254 ], [ -1840455466, %251 ], [ 398583409, %250 ], [ %249, %239 ], [ %238, %229 ], [ 2053758327, %228 ], [ %227, %215 ], [ %214, %205 ], [ %204, %202 ], [ 398583409, %199 ], [ %198, %197 ], [ %196, %184 ], [ %183, %174 ], [ -745875292, %173 ], [ %172, %162 ], [ %161, %152 ], [ 2087437957, %151 ], [ -1395727391, %150 ], [ %149, %138 ], [ %137, %128 ], [ %127, %119 ], [ %118, %117 ], [ %116, %105 ], [ %104, %95 ], [ -745875292, %94 ], [ %93, %84 ], [ %83, %74 ], [ 26149174, %73 ], [ %72, %62 ], [ %61, %52 ], [ 591274092, %43 ], [ %42, %41 ], [ %40, %29 ], [ %28, %19 ]
  br label %18

19:                                               ; preds = %18
  %20 = load i32, i32* @x.1, align 4
  %21 = load i32, i32* @y.2, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -2130640041, i32 -1342820760
  br label %.backedge

29:                                               ; preds = %18
  %30 = load i64, i64* %9, align 8
  %31 = icmp slt i64 %.0105, %30
  store i1 %31, i1* %8, align 1
  %32 = load i32, i32* @x.1, align 4
  %33 = load i32, i32* @y.2, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 1650688459, i32 -1342820760
  br label %.backedge

41:                                               ; preds = %18
  %.0..0..0.81 = load volatile i1, i1* %8, align 1
  %42 = select i1 %.0..0..0.81, i32 1283905724, i32 -1718978136
  br label %.backedge

43:                                               ; preds = %18
  %44 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %10)
  %45 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %44, i64* nonnull dereferenceable(8) %11)
  %46 = load i64, i64* %10, align 8
  %47 = load i64, i64* %11, align 8
  %48 = add i64 %47, %46
  %49 = getelementptr inbounds i64, i64* %15, i64 %.0105
  store i64 %48, i64* %49, align 8
  %50 = sub i64 %46, %47
  %51 = getelementptr inbounds i64, i64* %17, i64 %.0105
  store i64 %50, i64* %51, align 8
  br label %.backedge

52:                                               ; preds = %18
  %53 = load i32, i32* @x.1, align 4
  %54 = load i32, i32* @y.2, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 202409822, i32 47630492
  br label %.backedge

62:                                               ; preds = %18
  %63 = add i64 %.0105, 1
  %64 = load i32, i32* @x.1, align 4
  %65 = load i32, i32* @y.2, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 842720947, i32 47630492
  br label %.backedge

73:                                               ; preds = %18
  br label %.backedge

74:                                               ; preds = %18
  %75 = load i32, i32* @x.1, align 4
  %76 = load i32, i32* @y.2, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 1300456115, i32 1761597711
  br label %.backedge

84:                                               ; preds = %18
  %85 = load i32, i32* @x.1, align 4
  %86 = load i32, i32* @y.2, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 1621207438, i32 1761597711
  br label %.backedge

94:                                               ; preds = %18
  br label %.backedge

95:                                               ; preds = %18
  %96 = load i32, i32* @x.1, align 4
  %97 = load i32, i32* @y.2, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 -1470182789, i32 111726709
  br label %.backedge

105:                                              ; preds = %18
  %106 = load i64, i64* %9, align 8
  %107 = icmp slt i64 %.0103, %106
  store i1 %107, i1* %7, align 1
  %108 = load i32, i32* @x.1, align 4
  %109 = load i32, i32* @y.2, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -1136835360, i32 111726709
  br label %.backedge

117:                                              ; preds = %18
  %.0..0..0.82 = load volatile i1, i1* %7, align 1
  %118 = select i1 %.0..0..0.82, i32 -469083115, i32 -351102626
  br label %.backedge

119:                                              ; preds = %18
  %120 = getelementptr inbounds i64, i64* %15, i64 %.0103
  %121 = load i64, i64* %120, align 8
  %122 = call i64 @_ZSt3absx(i64 %121)
  %123 = srem i64 %122, 2
  %124 = load i64, i64* %15, align 16
  %125 = call i64 @_ZSt3absx(i64 %124)
  %126 = srem i64 %125, 2
  %.not = icmp eq i64 %123, %126
  %127 = select i1 %.not, i32 1882069105, i32 -1107989781
  br label %.backedge

128:                                              ; preds = %18
  %129 = load i32, i32* @x.1, align 4
  %130 = load i32, i32* @y.2, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 -1999458237, i32 1899927873
  br label %.backedge

138:                                              ; preds = %18
  %139 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 -1)
  %140 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %139, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %141 = load i32, i32* @x.1, align 4
  %142 = load i32, i32* @y.2, align 4
  %143 = add i32 %141, -1
  %144 = mul i32 %143, %141
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %147, %146
  %149 = select i1 %148, i32 306864382, i32 1899927873
  br label %.backedge

150:                                              ; preds = %18
  br label %.backedge

151:                                              ; preds = %18
  br label %.backedge

152:                                              ; preds = %18
  %153 = load i32, i32* @x.1, align 4
  %154 = load i32, i32* @y.2, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 286723991, i32 926519019
  br label %.backedge

162:                                              ; preds = %18
  %163 = add i64 %.0103, 1
  %164 = load i32, i32* @x.1, align 4
  %165 = load i32, i32* @y.2, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 1490552119, i32 926519019
  br label %.backedge

173:                                              ; preds = %18
  br label %.backedge

174:                                              ; preds = %18
  %175 = load i32, i32* @x.1, align 4
  %176 = load i32, i32* @y.2, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 736762669, i32 -708984394
  br label %.backedge

184:                                              ; preds = %18
  %185 = load i64, i64* %15, align 16
  %186 = and i64 %185, 1
  %187 = icmp eq i64 %186, 0
  store i1 %187, i1* %6, align 1
  %188 = load i32, i32* @x.1, align 4
  %189 = load i32, i32* @y.2, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 1343136067, i32 -708984394
  br label %.backedge

197:                                              ; preds = %18
  %.0..0..0.83 = load volatile i1, i1* %6, align 1
  %198 = select i1 %.0..0..0.83, i32 -1024738783, i32 876275685
  br label %.backedge

199:                                              ; preds = %18
  %200 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 32)
  %201 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %200, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

202:                                              ; preds = %18
  %203 = icmp sgt i64 %.099, -1
  %204 = select i1 %203, i32 -1147646406, i32 1706565565
  br label %.backedge

205:                                              ; preds = %18
  %206 = load i32, i32* @x.1, align 4
  %207 = load i32, i32* @y.2, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 -46538892, i32 -191164421
  br label %.backedge

215:                                              ; preds = %18
  %216 = shl nuw i64 1, %.099
  %217 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %216)
  %218 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %217, i8 signext 32)
  %219 = load i32, i32* @x.1, align 4
  %220 = load i32, i32* @y.2, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 1456635059, i32 -191164421
  br label %.backedge

228:                                              ; preds = %18
  br label %.backedge

229:                                              ; preds = %18
  %230 = load i32, i32* @x.1, align 4
  %231 = load i32, i32* @y.2, align 4
  %232 = add i32 %230, -1
  %233 = mul i32 %232, %230
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %236, %235
  %238 = select i1 %237, i32 -450186412, i32 2010227253
  br label %.backedge

239:                                              ; preds = %18
  %240 = add i64 %.099, -1
  %241 = load i32, i32* @x.1, align 4
  %242 = load i32, i32* @y.2, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 -654570885, i32 2010227253
  br label %.backedge

250:                                              ; preds = %18
  br label %.backedge

251:                                              ; preds = %18
  %252 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 1)
  %253 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %252, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

254:                                              ; preds = %18
  %255 = load i64, i64* %9, align 8
  %256 = icmp slt i64 %.097, %255
  %257 = select i1 %256, i32 1202558970, i32 -1590237797
  br label %.backedge

258:                                              ; preds = %18
  br label %.backedge

259:                                              ; preds = %18
  %260 = icmp sgt i64 %.095, -1
  %261 = select i1 %260, i32 503510935, i32 -839758570
  br label %.backedge

262:                                              ; preds = %18
  %263 = getelementptr inbounds i64, i64* %15, i64 %.097
  %264 = load i64, i64* %263, align 8
  %265 = icmp sgt i64 %264, -1
  %266 = select i1 %265, i32 -90313748, i32 -971944297
  br label %.backedge

267:                                              ; preds = %18
  %.neg123 = shl nsw i64 -1, %.095
  %268 = getelementptr inbounds i64, i64* %15, i64 %.097
  %269 = load i64, i64* %268, align 8
  %270 = add i64 %269, %.neg123
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds i64, i64* %17, i64 %.097
  %272 = load i64, i64* %271, align 8
  %273 = icmp sgt i64 %272, -1
  %274 = select i1 %273, i32 1716532691, i32 -774000278
  br label %.backedge

275:                                              ; preds = %18
  %276 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 82)
  %.neg122 = shl nsw i64 -1, %.095
  %277 = getelementptr inbounds i64, i64* %17, i64 %.097
  %278 = load i64, i64* %277, align 8
  %279 = add i64 %278, %.neg122
  store i64 %279, i64* %277, align 8
  br label %.backedge

280:                                              ; preds = %18
  %281 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 85)
  %.neg120.neg = shl nuw i64 1, %.095
  %282 = getelementptr inbounds i64, i64* %17, i64 %.097
  %283 = load i64, i64* %282, align 8
  %.neg121 = add i64 %283, %.neg120.neg
  store i64 %.neg121, i64* %282, align 8
  br label %.backedge

284:                                              ; preds = %18
  br label %.backedge

285:                                              ; preds = %18
  %286 = shl nuw i64 1, %.095
  %287 = getelementptr inbounds i64, i64* %15, i64 %.097
  %288 = load i64, i64* %287, align 8
  %289 = add i64 %288, %286
  store i64 %289, i64* %287, align 8
  %290 = getelementptr inbounds i64, i64* %17, i64 %.097
  %291 = load i64, i64* %290, align 8
  %292 = icmp sgt i64 %291, -1
  %293 = select i1 %292, i32 295879756, i32 -1875208486
  br label %.backedge

294:                                              ; preds = %18
  %295 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 68)
  %.neg119 = shl nsw i64 -1, %.095
  %296 = getelementptr inbounds i64, i64* %17, i64 %.097
  %297 = load i64, i64* %296, align 8
  %298 = add i64 %297, %.neg119
  store i64 %298, i64* %296, align 8
  br label %.backedge

299:                                              ; preds = %18
  %300 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 76)
  %.neg118.neg = shl nuw i64 1, %.095
  %301 = getelementptr inbounds i64, i64* %17, i64 %.097
  %302 = load i64, i64* %301, align 8
  %303 = add i64 %302, %.neg118.neg
  store i64 %303, i64* %301, align 8
  br label %.backedge

304:                                              ; preds = %18
  br label %.backedge

305:                                              ; preds = %18
  %306 = load i32, i32* @x.1, align 4
  %307 = load i32, i32* @y.2, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 748662962, i32 -184769377
  br label %.backedge

315:                                              ; preds = %18
  %316 = load i32, i32* @x.1, align 4
  %317 = load i32, i32* @y.2, align 4
  %318 = add i32 %316, -1
  %319 = mul i32 %318, %316
  %320 = and i32 %319, 1
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %322, %321
  %324 = select i1 %323, i32 -556881187, i32 -184769377
  br label %.backedge

325:                                              ; preds = %18
  br label %.backedge

326:                                              ; preds = %18
  %327 = add i64 %.095, -1
  br label %.backedge

328:                                              ; preds = %18
  %329 = load i32, i32* @x.1, align 4
  %330 = load i32, i32* @y.2, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 883053193, i32 772128556
  br label %.backedge

338:                                              ; preds = %18
  %339 = getelementptr inbounds i64, i64* %15, i64 %.097
  %340 = load i64, i64* %339, align 8
  %341 = icmp sgt i64 %340, -1
  store i1 %341, i1* %5, align 1
  %342 = load i32, i32* @x.1, align 4
  %343 = load i32, i32* @y.2, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 -1109351610, i32 772128556
  br label %.backedge

351:                                              ; preds = %18
  %.0..0..0.84 = load volatile i1, i1* %5, align 1
  %352 = select i1 %.0..0..0.84, i32 767123378, i32 297962241
  br label %.backedge

353:                                              ; preds = %18
  %354 = getelementptr inbounds i64, i64* %15, i64 %.097
  %355 = load i64, i64* %354, align 8
  %356 = add i64 %355, -1
  store i64 %356, i64* %354, align 8
  %357 = getelementptr inbounds i64, i64* %17, i64 %.097
  %358 = load i64, i64* %357, align 8
  %359 = icmp sgt i64 %358, -1
  %360 = select i1 %359, i32 1490930649, i32 -1940306275
  br label %.backedge

361:                                              ; preds = %18
  %362 = load i32, i32* @x.1, align 4
  %363 = load i32, i32* @y.2, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 1759166088, i32 86715377
  br label %.backedge

371:                                              ; preds = %18
  %372 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 82)
  %373 = getelementptr inbounds i64, i64* %17, i64 %.097
  %374 = load i64, i64* %373, align 8
  %375 = add i64 %374, -1
  store i64 %375, i64* %373, align 8
  %376 = load i32, i32* @x.1, align 4
  %377 = load i32, i32* @y.2, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 176668717, i32 86715377
  br label %.backedge

385:                                              ; preds = %18
  br label %.backedge

386:                                              ; preds = %18
  %387 = load i32, i32* @x.1, align 4
  %388 = load i32, i32* @y.2, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 855876207, i32 1880665077
  br label %.backedge

396:                                              ; preds = %18
  %397 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 85)
  %398 = getelementptr inbounds i64, i64* %17, i64 %.097
  %399 = load i64, i64* %398, align 8
  %400 = add i64 %399, 1
  store i64 %400, i64* %398, align 8
  %401 = load i32, i32* @x.1, align 4
  %402 = load i32, i32* @y.2, align 4
  %403 = add i32 %401, -1
  %404 = mul i32 %403, %401
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %407, %406
  %409 = select i1 %408, i32 -1301154429, i32 1880665077
  br label %.backedge

410:                                              ; preds = %18
  br label %.backedge

411:                                              ; preds = %18
  br label %.backedge

412:                                              ; preds = %18
  %413 = load i32, i32* @x.1, align 4
  %414 = load i32, i32* @y.2, align 4
  %415 = add i32 %413, -1
  %416 = mul i32 %415, %413
  %417 = and i32 %416, 1
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %419, %418
  %421 = select i1 %420, i32 1727523033, i32 1193638527
  br label %.backedge

422:                                              ; preds = %18
  %423 = getelementptr inbounds i64, i64* %15, i64 %.097
  %424 = load i64, i64* %423, align 8
  %.neg117 = add i64 %424, 1
  store i64 %.neg117, i64* %423, align 8
  %425 = getelementptr inbounds i64, i64* %17, i64 %.097
  %426 = load i64, i64* %425, align 8
  %427 = icmp sgt i64 %426, -1
  store i1 %427, i1* %4, align 1
  %428 = load i32, i32* @x.1, align 4
  %429 = load i32, i32* @y.2, align 4
  %430 = add i32 %428, -1
  %431 = mul i32 %430, %428
  %432 = and i32 %431, 1
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %434, %433
  %436 = select i1 %435, i32 -2084642687, i32 1193638527
  br label %.backedge

437:                                              ; preds = %18
  %.0..0..0.85 = load volatile i1, i1* %4, align 1
  %438 = select i1 %.0..0..0.85, i32 1467390134, i32 -930256020
  br label %.backedge

439:                                              ; preds = %18
  %440 = load i32, i32* @x.1, align 4
  %441 = load i32, i32* @y.2, align 4
  %442 = add i32 %440, -1
  %443 = mul i32 %442, %440
  %444 = and i32 %443, 1
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %446, %445
  %448 = select i1 %447, i32 -1944283133, i32 -1578464365
  br label %.backedge

449:                                              ; preds = %18
  %450 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 68)
  %451 = getelementptr inbounds i64, i64* %17, i64 %.097
  %452 = load i64, i64* %451, align 8
  %453 = add i64 %452, -1
  store i64 %453, i64* %451, align 8
  %454 = load i32, i32* @x.1, align 4
  %455 = load i32, i32* @y.2, align 4
  %456 = add i32 %454, -1
  %457 = mul i32 %456, %454
  %458 = and i32 %457, 1
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %460, %459
  %462 = select i1 %461, i32 -711079611, i32 -1578464365
  br label %.backedge

463:                                              ; preds = %18
  br label %.backedge

464:                                              ; preds = %18
  %465 = load i32, i32* @x.1, align 4
  %466 = load i32, i32* @y.2, align 4
  %467 = add i32 %465, -1
  %468 = mul i32 %467, %465
  %469 = and i32 %468, 1
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %471, %470
  %473 = select i1 %472, i32 130341112, i32 -1610898097
  br label %.backedge

474:                                              ; preds = %18
  %475 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 76)
  %476 = getelementptr inbounds i64, i64* %17, i64 %.097
  %477 = load i64, i64* %476, align 8
  %478 = add i64 %477, 1
  store i64 %478, i64* %476, align 8
  %479 = load i32, i32* @x.1, align 4
  %480 = load i32, i32* @y.2, align 4
  %481 = add i32 %479, -1
  %482 = mul i32 %481, %479
  %483 = and i32 %482, 1
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %480, 10
  %486 = or i1 %485, %484
  %487 = select i1 %486, i32 1923876492, i32 -1610898097
  br label %.backedge

488:                                              ; preds = %18
  br label %.backedge

489:                                              ; preds = %18
  br label %.backedge

490:                                              ; preds = %18
  %491 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

492:                                              ; preds = %18
  %.neg116 = add i64 %.097, 1
  br label %.backedge

493:                                              ; preds = %18
  br label %.backedge

494:                                              ; preds = %18
  %495 = load i32, i32* @x.1, align 4
  %496 = load i32, i32* @y.2, align 4
  %497 = add i32 %495, -1
  %498 = mul i32 %497, %495
  %499 = and i32 %498, 1
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %501, %500
  %503 = select i1 %502, i32 -1941307258, i32 -226691334
  br label %.backedge

504:                                              ; preds = %18
  %505 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 31)
  %506 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %505, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %507 = load i32, i32* @x.1, align 4
  %508 = load i32, i32* @y.2, align 4
  %509 = add i32 %507, -1
  %510 = mul i32 %509, %507
  %511 = and i32 %510, 1
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %513, %512
  %515 = select i1 %514, i32 -2144230485, i32 -226691334
  br label %.backedge

516:                                              ; preds = %18
  br label %.backedge

517:                                              ; preds = %18
  %518 = icmp sgt i64 %.093, -1
  %519 = select i1 %518, i32 874741084, i32 774316793
  br label %.backedge

520:                                              ; preds = %18
  %521 = shl nuw i64 1, %.093
  %522 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %521)
  %523 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %522, i8 signext 32)
  br label %.backedge

524:                                              ; preds = %18
  %525 = add i64 %.093, -1
  br label %.backedge

526:                                              ; preds = %18
  %527 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

528:                                              ; preds = %18
  %529 = load i32, i32* @x.1, align 4
  %530 = load i32, i32* @y.2, align 4
  %531 = add i32 %529, -1
  %532 = mul i32 %531, %529
  %533 = and i32 %532, 1
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %535, %534
  %537 = select i1 %536, i32 1491166402, i32 2028325588
  br label %.backedge

538:                                              ; preds = %18
  %539 = load i64, i64* %9, align 8
  %540 = icmp slt i64 %.091, %539
  store i1 %540, i1* %3, align 1
  %541 = load i32, i32* @x.1, align 4
  %542 = load i32, i32* @y.2, align 4
  %543 = add i32 %541, -1
  %544 = mul i32 %543, %541
  %545 = and i32 %544, 1
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %547, %546
  %549 = select i1 %548, i32 -437213793, i32 2028325588
  br label %.backedge

550:                                              ; preds = %18
  %.0..0..0.86 = load volatile i1, i1* %3, align 1
  %551 = select i1 %.0..0..0.86, i32 -2095006632, i32 -1735751540
  br label %.backedge

552:                                              ; preds = %18
  br label %.backedge

553:                                              ; preds = %18
  %554 = icmp sgt i64 %.089, -1
  %555 = select i1 %554, i32 -1822572886, i32 441578631
  br label %.backedge

556:                                              ; preds = %18
  %557 = getelementptr inbounds i64, i64* %15, i64 %.091
  %558 = load i64, i64* %557, align 8
  %559 = icmp sgt i64 %558, -1
  %560 = select i1 %559, i32 1212850051, i32 -1976486807
  br label %.backedge

561:                                              ; preds = %18
  %562 = load i32, i32* @x.1, align 4
  %563 = load i32, i32* @y.2, align 4
  %564 = add i32 %562, -1
  %565 = mul i32 %564, %562
  %566 = and i32 %565, 1
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %568, %567
  %570 = select i1 %569, i32 152125779, i32 920168475
  br label %.backedge

571:                                              ; preds = %18
  %.neg115 = shl nsw i64 -1, %.089
  %572 = getelementptr inbounds i64, i64* %15, i64 %.091
  %573 = load i64, i64* %572, align 8
  %574 = add i64 %573, %.neg115
  store i64 %574, i64* %572, align 8
  %575 = getelementptr inbounds i64, i64* %17, i64 %.091
  %576 = load i64, i64* %575, align 8
  %577 = icmp sgt i64 %576, -1
  store i1 %577, i1* %2, align 1
  %578 = load i32, i32* @x.1, align 4
  %579 = load i32, i32* @y.2, align 4
  %580 = add i32 %578, -1
  %581 = mul i32 %580, %578
  %582 = and i32 %581, 1
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %584, %583
  %586 = select i1 %585, i32 -1681953, i32 920168475
  br label %.backedge

587:                                              ; preds = %18
  %.0..0..0.87 = load volatile i1, i1* %2, align 1
  %588 = select i1 %.0..0..0.87, i32 -532020860, i32 -2132845074
  br label %.backedge

589:                                              ; preds = %18
  %590 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 82)
  %.neg114 = shl nsw i64 -1, %.089
  %591 = getelementptr inbounds i64, i64* %17, i64 %.091
  %592 = load i64, i64* %591, align 8
  %593 = add i64 %592, %.neg114
  store i64 %593, i64* %591, align 8
  br label %.backedge

594:                                              ; preds = %18
  %595 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 85)
  %.neg112.neg = shl nuw i64 1, %.089
  %596 = getelementptr inbounds i64, i64* %17, i64 %.091
  %597 = load i64, i64* %596, align 8
  %.neg113 = add i64 %597, %.neg112.neg
  store i64 %.neg113, i64* %596, align 8
  br label %.backedge

598:                                              ; preds = %18
  br label %.backedge

599:                                              ; preds = %18
  %600 = shl nuw i64 1, %.089
  %601 = getelementptr inbounds i64, i64* %15, i64 %.091
  %602 = load i64, i64* %601, align 8
  %603 = add i64 %602, %600
  store i64 %603, i64* %601, align 8
  %604 = getelementptr inbounds i64, i64* %17, i64 %.091
  %605 = load i64, i64* %604, align 8
  %606 = icmp sgt i64 %605, -1
  %607 = select i1 %606, i32 -1071332281, i32 -1449810511
  br label %.backedge

608:                                              ; preds = %18
  %609 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 68)
  %.neg111 = shl nsw i64 -1, %.089
  %610 = getelementptr inbounds i64, i64* %17, i64 %.091
  %611 = load i64, i64* %610, align 8
  %612 = add i64 %611, %.neg111
  store i64 %612, i64* %610, align 8
  br label %.backedge

613:                                              ; preds = %18
  %614 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 76)
  %.neg110.neg = shl nuw i64 1, %.089
  %615 = getelementptr inbounds i64, i64* %17, i64 %.091
  %616 = load i64, i64* %615, align 8
  %617 = add i64 %616, %.neg110.neg
  store i64 %617, i64* %615, align 8
  br label %.backedge

618:                                              ; preds = %18
  br label %.backedge

619:                                              ; preds = %18
  br label %.backedge

620:                                              ; preds = %18
  %621 = add i64 %.089, -1
  br label %.backedge

622:                                              ; preds = %18
  %623 = load i32, i32* @x.1, align 4
  %624 = load i32, i32* @y.2, align 4
  %625 = add i32 %623, -1
  %626 = mul i32 %625, %623
  %627 = and i32 %626, 1
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %629, %628
  %631 = select i1 %630, i32 1648654830, i32 1828009812
  br label %.backedge

632:                                              ; preds = %18
  %633 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %634 = load i32, i32* @x.1, align 4
  %635 = load i32, i32* @y.2, align 4
  %636 = add i32 %634, -1
  %637 = mul i32 %636, %634
  %638 = and i32 %637, 1
  %639 = icmp eq i32 %638, 0
  %640 = icmp slt i32 %635, 10
  %641 = or i1 %640, %639
  %642 = select i1 %641, i32 1252771198, i32 1828009812
  br label %.backedge

643:                                              ; preds = %18
  br label %.backedge

644:                                              ; preds = %18
  %.neg109 = add i64 %.091, 1
  br label %.backedge

645:                                              ; preds = %18
  %646 = load i32, i32* @x.1, align 4
  %647 = load i32, i32* @y.2, align 4
  %648 = add i32 %646, -1
  %649 = mul i32 %648, %646
  %650 = and i32 %649, 1
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %647, 10
  %653 = or i1 %652, %651
  %654 = select i1 %653, i32 1777241422, i32 1131375110
  br label %.backedge

655:                                              ; preds = %18
  %656 = load i32, i32* @x.1, align 4
  %657 = load i32, i32* @y.2, align 4
  %658 = add i32 %656, -1
  %659 = mul i32 %658, %656
  %660 = and i32 %659, 1
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %657, 10
  %663 = or i1 %662, %661
  %664 = select i1 %663, i32 -648336159, i32 1131375110
  br label %.backedge

665:                                              ; preds = %18
  br label %.backedge

666:                                              ; preds = %18
  br label %.backedge

667:                                              ; preds = %18
  call void @llvm.stackrestore(i8* %14)
  br label %.backedge

668:                                              ; preds = %18
  %669 = load i32, i32* @x.1, align 4
  %670 = load i32, i32* @y.2, align 4
  %671 = add i32 %669, -1
  %672 = mul i32 %671, %669
  %673 = and i32 %672, 1
  %674 = icmp eq i32 %673, 0
  %675 = icmp slt i32 %670, 10
  %676 = or i1 %675, %674
  %677 = select i1 %676, i32 1470829343, i32 -26123881
  br label %.backedge

678:                                              ; preds = %18
  store i32 0, i32* %1, align 4
  %679 = load i32, i32* @x.1, align 4
  %680 = load i32, i32* @y.2, align 4
  %681 = add i32 %679, -1
  %682 = mul i32 %681, %679
  %683 = and i32 %682, 1
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %685, %684
  %687 = select i1 %686, i32 299896443, i32 -26123881
  br label %.backedge

688:                                              ; preds = %18
  %.0..0..0.88 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.88

689:                                              ; preds = %18
  br label %.backedge

690:                                              ; preds = %18
  %691 = add i64 %.0105, 1
  br label %.backedge

692:                                              ; preds = %18
  br label %.backedge

693:                                              ; preds = %18
  br label %.backedge

694:                                              ; preds = %18
  %695 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 -1)
  %696 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %695, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

697:                                              ; preds = %18
  %698 = add i64 %.0103, 1
  br label %.backedge

699:                                              ; preds = %18
  br label %.backedge

700:                                              ; preds = %18
  %701 = shl nuw i64 1, %.099
  %702 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %701)
  %703 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %702, i8 signext 32)
  br label %.backedge

704:                                              ; preds = %18
  %705 = add i64 %.099, -1
  br label %.backedge

706:                                              ; preds = %18
  br label %.backedge

707:                                              ; preds = %18
  br label %.backedge

708:                                              ; preds = %18
  %709 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 82)
  %710 = getelementptr inbounds i64, i64* %17, i64 %.097
  %711 = load i64, i64* %710, align 8
  %712 = add i64 %711, -1
  store i64 %712, i64* %710, align 8
  br label %.backedge

713:                                              ; preds = %18
  %714 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 85)
  %715 = getelementptr inbounds i64, i64* %17, i64 %.097
  %716 = load i64, i64* %715, align 8
  %717 = add i64 %716, 1
  store i64 %717, i64* %715, align 8
  br label %.backedge

718:                                              ; preds = %18
  %719 = getelementptr inbounds i64, i64* %15, i64 %.097
  %720 = load i64, i64* %719, align 8
  %721 = add i64 %720, 1
  store i64 %721, i64* %719, align 8
  br label %.backedge

722:                                              ; preds = %18
  %723 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 68)
  %724 = getelementptr inbounds i64, i64* %17, i64 %.097
  %725 = load i64, i64* %724, align 8
  %726 = add i64 %725, -1
  store i64 %726, i64* %724, align 8
  br label %.backedge

727:                                              ; preds = %18
  %728 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 76)
  %729 = getelementptr inbounds i64, i64* %17, i64 %.097
  %730 = load i64, i64* %729, align 8
  %731 = add i64 %730, 1
  store i64 %731, i64* %729, align 8
  br label %.backedge

732:                                              ; preds = %18
  %733 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 31)
  %734 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %733, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

735:                                              ; preds = %18
  br label %.backedge

736:                                              ; preds = %18
  %.neg = shl nsw i64 -1, %.089
  %737 = getelementptr inbounds i64, i64* %15, i64 %.091
  %738 = load i64, i64* %737, align 8
  %739 = add i64 %738, %.neg
  store i64 %739, i64* %737, align 8
  br label %.backedge

740:                                              ; preds = %18
  %741 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

742:                                              ; preds = %18
  br label %.backedge

743:                                              ; preds = %18
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt3absx(i64 %0) local_unnamed_addr #6 comdat {
  %2 = tail call i64 @llvm.abs.i64(i64 %0, i1 false)
  ret i64 %2
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s969709083.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.5, align 4
  %4 = load i32, i32* @y.6, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -531110236, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -531110236, label %11
    i32 138356696, label %14
    i32 -1937568742, label %24
    i32 1834701595, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 138356696, i32 1834701595
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1937568742, i32 1834701595
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 138356696, %25 ]
  br label %.outer
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #7

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
