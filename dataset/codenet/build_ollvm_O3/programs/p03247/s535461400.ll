; ModuleID = 'build_ollvm/programs/p03247/s535461400.ll'
source_filename = "Project_CodeNet_C++1400/p03247/s535461400.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_Z2upRii = comdat any

$_ZSt4__lgi = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@L = global i32 0, align 4
@X = global [1054 x i32] zeroinitializer, align 16
@Y = global [1054 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"-1\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%d%c\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s535461400.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #9
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i1, align 1
  %17 = alloca i1, align 1
  %18 = load i32, i32* @x.5, align 4
  %19 = load i32, i32* @y.6, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  store i1 %23, i1* %17, align 1
  %24 = icmp slt i32 %19, 10
  store i1 %24, i1* %16, align 1
  br label %25

25:                                               ; preds = %.backedge, %0
  %.0120 = phi i32 [ 714990746, %0 ], [ %.0120.be, %.backedge ]
  %.0118 = phi i32 [ undef, %0 ], [ %.0118.be, %.backedge ]
  %.0116 = phi i1 [ undef, %0 ], [ %.0116.be, %.backedge ]
  %.0114 = phi i32 [ undef, %0 ], [ %.0114.be, %.backedge ]
  %.0112 = phi i32 [ undef, %0 ], [ %.0112.be, %.backedge ]
  %.0 = phi i32 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0120, label %.backedge [
    i32 714990746, label %26
    i32 439021787, label %29
    i32 -499258479, label %46
    i32 -1300884234, label %47
    i32 1979469374, label %52
    i32 1869059500, label %62
    i32 230385730, label %91
    i32 -269453311, label %92
    i32 -228845921, label %102
    i32 1887925933, label %113
    i32 -1401500833, label %114
    i32 1343152874, label %117
    i32 -891270081, label %121
    i32 -292641452, label %131
    i32 972494031, label %142
    i32 -445918835, label %143
    i32 71105616, label %153
    i32 -283689363, label %165
    i32 -214190183, label %167
    i32 1974698818, label %177
    i32 1897522000, label %187
    i32 947802032, label %188
    i32 -1181527113, label %198
    i32 1210469653, label %211
    i32 -56220685, label %213
    i32 1087486781, label %223
    i32 -430194969, label %233
    i32 -400530592, label %234
    i32 -379881293, label %241
    i32 783960957, label %242
    i32 -897662096, label %252
    i32 1218070604, label %262
    i32 -1206069447, label %263
    i32 1835143074, label %268
    i32 -227741588, label %280
    i32 -225301025, label %290
    i32 -1290366150, label %302
    i32 -1516604236, label %303
    i32 77394758, label %313
    i32 -71691639, label %325
    i32 -1145607136, label %327
    i32 -215304330, label %337
    i32 320705425, label %350
    i32 1131539272, label %351
    i32 1143808542, label %361
    i32 -692025351, label %371
    i32 1747486424, label %372
    i32 2009613150, label %377
    i32 1235547524, label %381
    i32 2130485563, label %386
    i32 703167940, label %389
    i32 -80557, label %392
    i32 -1336896559, label %395
    i32 -1648759792, label %398
    i32 322524989, label %401
    i32 2040005512, label %411
    i32 655546221, label %421
    i32 1141143076, label %422
    i32 1595755350, label %427
    i32 -745332772, label %437
    i32 932212912, label %457
    i32 685868009, label %458
    i32 51627634, label %468
    i32 225673218, label %480
    i32 362822158, label %482
    i32 720791053, label %489
    i32 1029370476, label %492
    i32 953705007, label %497
    i32 -248113754, label %501
    i32 -159042595, label %511
    i32 1184362900, label %521
    i32 792122629, label %522
    i32 -622461998, label %532
    i32 -1374497550, label %544
    i32 359092803, label %546
    i32 449256125, label %556
    i32 -5760053, label %568
    i32 600728106, label %569
    i32 446589375, label %579
    i32 -940715839, label %592
    i32 -515943278, label %593
    i32 -1598729786, label %594
    i32 -1953079409, label %596
    i32 -155917060, label %599
    i32 1513766563, label %602
    i32 1835644431, label %604
    i32 420224292, label %614
    i32 1927796160, label %624
    i32 316435561, label %625
    i32 -1144359297, label %629
    i32 2103652770, label %630
    i32 780722942, label %640
    i32 1906315487, label %651
    i32 -618188882, label %652
    i32 1878024730, label %654
    i32 1171633925, label %674
    i32 66114371, label %677
    i32 -1370649332, label %679
    i32 2138790830, label %680
    i32 -498986195, label %681
    i32 -948551640, label %682
    i32 2015456203, label %683
    i32 2034014767, label %684
    i32 -908665282, label %687
    i32 -643533093, label %688
    i32 307052509, label %691
    i32 -1062927313, label %692
    i32 1338010366, label %693
    i32 1488072448, label %704
    i32 1840725737, label %705
    i32 943956824, label %706
    i32 -1237567486, label %707
    i32 649061059, label %711
    i32 -1618949809, label %715
    i32 1381182610, label %716
  ]

.backedge:                                        ; preds = %25, %716, %715, %711, %707, %706, %705, %704, %693, %692, %691, %688, %687, %684, %683, %682, %681, %680, %679, %677, %674, %654, %652, %640, %630, %629, %625, %624, %614, %604, %602, %599, %596, %594, %593, %592, %579, %569, %568, %556, %546, %544, %532, %522, %521, %511, %501, %497, %492, %489, %482, %480, %468, %458, %457, %437, %427, %422, %421, %411, %401, %398, %395, %392, %389, %386, %381, %377, %372, %371, %361, %351, %350, %337, %327, %325, %313, %303, %302, %290, %280, %268, %263, %262, %252, %242, %241, %234, %233, %223, %213, %211, %198, %188, %187, %177, %167, %165, %153, %143, %142, %131, %121, %117, %114, %113, %102, %92, %91, %62, %52, %47, %46, %29, %26
  %.0120.be = phi i32 [ %.0120, %25 ], [ 780722942, %716 ], [ 420224292, %715 ], [ 446589375, %711 ], [ 449256125, %707 ], [ -622461998, %706 ], [ -159042595, %705 ], [ 51627634, %704 ], [ -745332772, %693 ], [ 2040005512, %692 ], [ 1143808542, %691 ], [ -215304330, %688 ], [ 77394758, %687 ], [ -225301025, %684 ], [ -897662096, %683 ], [ 1087486781, %682 ], [ -1181527113, %681 ], [ 1974698818, %680 ], [ 71105616, %679 ], [ -292641452, %677 ], [ -228845921, %674 ], [ 1869059500, %654 ], [ 439021787, %652 ], [ %650, %640 ], [ %639, %630 ], [ 2103652770, %629 ], [ 1141143076, %625 ], [ 316435561, %624 ], [ %623, %614 ], [ %613, %604 ], [ 1835644431, %602 ], [ %601, %599 ], [ 685868009, %596 ], [ -1953079409, %594 ], [ -1598729786, %593 ], [ -515943278, %592 ], [ %591, %579 ], [ %578, %569 ], [ -515943278, %568 ], [ %567, %556 ], [ %555, %546 ], [ %545, %544 ], [ %543, %532 ], [ %531, %522 ], [ -1598729786, %521 ], [ %520, %511 ], [ %510, %501 ], [ -248113754, %497 ], [ -248113754, %492 ], [ %491, %489 ], [ %488, %482 ], [ %481, %480 ], [ %479, %468 ], [ %467, %458 ], [ 685868009, %457 ], [ %456, %437 ], [ %436, %427 ], [ %426, %422 ], [ 1141143076, %421 ], [ %420, %411 ], [ %410, %401 ], [ 322524989, %398 ], [ %397, %395 ], [ 2009613150, %392 ], [ -80557, %389 ], [ 703167940, %386 ], [ %385, %381 ], [ %380, %377 ], [ 2009613150, %372 ], [ 1747486424, %371 ], [ %370, %361 ], [ %360, %351 ], [ 1747486424, %350 ], [ %349, %337 ], [ %336, %327 ], [ %326, %325 ], [ %324, %313 ], [ %312, %303 ], [ -1206069447, %302 ], [ %301, %290 ], [ %289, %280 ], [ -227741588, %268 ], [ %267, %263 ], [ -1206069447, %262 ], [ %261, %252 ], [ %251, %242 ], [ 783960957, %241 ], [ 947802032, %234 ], [ -400530592, %233 ], [ %232, %223 ], [ %222, %213 ], [ %212, %211 ], [ %210, %198 ], [ %197, %188 ], [ 947802032, %187 ], [ %186, %177 ], [ %176, %167 ], [ %166, %165 ], [ %164, %153 ], [ %152, %143 ], [ 2103652770, %142 ], [ %141, %131 ], [ %130, %121 ], [ %120, %117 ], [ %116, %114 ], [ -1300884234, %113 ], [ %112, %102 ], [ %101, %92 ], [ -269453311, %91 ], [ %90, %62 ], [ %61, %52 ], [ %51, %47 ], [ -1300884234, %46 ], [ %45, %29 ], [ %28, %26 ]
  %.0118.be = phi i32 [ %.0118, %25 ], [ %.0118, %716 ], [ %.0118, %715 ], [ %.0118, %711 ], [ %.0118, %707 ], [ %.0118, %706 ], [ %.0118, %705 ], [ %.0118, %704 ], [ %.0118, %693 ], [ %.0118, %692 ], [ %.0118, %691 ], [ %.0118, %688 ], [ %.0118, %687 ], [ %.0118, %684 ], [ %.0118, %683 ], [ %.0118, %682 ], [ %.0118, %681 ], [ %.0118, %680 ], [ %.0118, %679 ], [ %.0118, %677 ], [ %.0118, %674 ], [ %.0118, %654 ], [ %.0118, %652 ], [ %.0118, %640 ], [ %.0118, %630 ], [ %.0118, %629 ], [ %.0118, %625 ], [ %.0118, %624 ], [ %.0118, %614 ], [ %.0118, %604 ], [ %.0118, %602 ], [ %.0118, %599 ], [ %.0118, %596 ], [ %.0118, %594 ], [ %.0118, %593 ], [ %.0118, %592 ], [ %.0118, %579 ], [ %.0118, %569 ], [ %.0118, %568 ], [ %.0118, %556 ], [ %.0118, %546 ], [ %.0118, %544 ], [ %.0118, %532 ], [ %.0118, %522 ], [ %.0118, %521 ], [ %.0118, %511 ], [ %.0118, %501 ], [ %.0118, %497 ], [ %.0118, %492 ], [ %.0118, %489 ], [ %.0118, %482 ], [ %.0118, %480 ], [ %.0118, %468 ], [ %.0118, %458 ], [ %.0118, %457 ], [ %.0118, %437 ], [ %.0118, %427 ], [ %.0118, %422 ], [ %.0118, %421 ], [ %.0118, %411 ], [ %.0118, %401 ], [ %.0118, %398 ], [ %.0118, %395 ], [ %.0118, %392 ], [ %.0118, %389 ], [ %.0118, %386 ], [ %.0118, %381 ], [ %.0118, %377 ], [ %.0118, %372 ], [ 0, %371 ], [ %.0118, %361 ], [ %.0118, %351 ], [ %.0..0..0.106, %350 ], [ %.0118, %337 ], [ %.0118, %327 ], [ %.0118, %325 ], [ %.0118, %313 ], [ %.0118, %303 ], [ %.0118, %302 ], [ %.0118, %290 ], [ %.0118, %280 ], [ %.0118, %268 ], [ %.0118, %263 ], [ %.0118, %262 ], [ %.0118, %252 ], [ %.0118, %242 ], [ %.0118, %241 ], [ %.0118, %234 ], [ %.0118, %233 ], [ %.0118, %223 ], [ %.0118, %213 ], [ %.0118, %211 ], [ %.0118, %198 ], [ %.0118, %188 ], [ %.0118, %187 ], [ %.0118, %177 ], [ %.0118, %167 ], [ %.0118, %165 ], [ %.0118, %153 ], [ %.0118, %143 ], [ %.0118, %142 ], [ %.0118, %131 ], [ %.0118, %121 ], [ %.0118, %117 ], [ %.0118, %114 ], [ %.0118, %113 ], [ %.0118, %102 ], [ %.0118, %92 ], [ %.0118, %91 ], [ %.0118, %62 ], [ %.0118, %52 ], [ %.0118, %47 ], [ %.0118, %46 ], [ %.0118, %29 ], [ %.0118, %26 ]
  %.0116.be = phi i1 [ %.0116, %25 ], [ %.0116, %716 ], [ %.0116, %715 ], [ %.0116, %711 ], [ %.0116, %707 ], [ %.0116, %706 ], [ %.0116, %705 ], [ %.0116, %704 ], [ %.0116, %693 ], [ %.0116, %692 ], [ %.0116, %691 ], [ %.0116, %688 ], [ %.0116, %687 ], [ %.0116, %684 ], [ %.0116, %683 ], [ %.0116, %682 ], [ %.0116, %681 ], [ %.0116, %680 ], [ %.0116, %679 ], [ %.0116, %677 ], [ %.0116, %674 ], [ %.0116, %654 ], [ %.0116, %652 ], [ %.0116, %640 ], [ %.0116, %630 ], [ %.0116, %629 ], [ %.0116, %625 ], [ %.0116, %624 ], [ %.0116, %614 ], [ %.0116, %604 ], [ %.0116, %602 ], [ %.0116, %599 ], [ %.0116, %596 ], [ %.0116, %594 ], [ %.0116, %593 ], [ %.0116, %592 ], [ %.0116, %579 ], [ %.0116, %569 ], [ %.0116, %568 ], [ %.0116, %556 ], [ %.0116, %546 ], [ %.0116, %544 ], [ %.0116, %532 ], [ %.0116, %522 ], [ %.0116, %521 ], [ %.0116, %511 ], [ %.0116, %501 ], [ %.0116, %497 ], [ %.0116, %492 ], [ %.0116, %489 ], [ %.0116, %482 ], [ %.0116, %480 ], [ %.0116, %468 ], [ %.0116, %458 ], [ %.0116, %457 ], [ %.0116, %437 ], [ %.0116, %427 ], [ %.0116, %422 ], [ %.0116, %421 ], [ %.0116, %411 ], [ %.0116, %401 ], [ %.0116, %398 ], [ %.0116, %395 ], [ %.0116, %392 ], [ %.0116, %389 ], [ %388, %386 ], [ false, %381 ], [ %.0116, %377 ], [ %.0116, %372 ], [ %.0116, %371 ], [ %.0116, %361 ], [ %.0116, %351 ], [ %.0116, %350 ], [ %.0116, %337 ], [ %.0116, %327 ], [ %.0116, %325 ], [ %.0116, %313 ], [ %.0116, %303 ], [ %.0116, %302 ], [ %.0116, %290 ], [ %.0116, %280 ], [ %.0116, %268 ], [ %.0116, %263 ], [ %.0116, %262 ], [ %.0116, %252 ], [ %.0116, %242 ], [ %.0116, %241 ], [ %.0116, %234 ], [ %.0116, %233 ], [ %.0116, %223 ], [ %.0116, %213 ], [ %.0116, %211 ], [ %.0116, %198 ], [ %.0116, %188 ], [ %.0116, %187 ], [ %.0116, %177 ], [ %.0116, %167 ], [ %.0116, %165 ], [ %.0116, %153 ], [ %.0116, %143 ], [ %.0116, %142 ], [ %.0116, %131 ], [ %.0116, %121 ], [ %.0116, %117 ], [ %.0116, %114 ], [ %.0116, %113 ], [ %.0116, %102 ], [ %.0116, %92 ], [ %.0116, %91 ], [ %.0116, %62 ], [ %.0116, %52 ], [ %.0116, %47 ], [ %.0116, %46 ], [ %.0116, %29 ], [ %.0116, %26 ]
  %.0114.be = phi i32 [ %.0114, %25 ], [ %.0114, %716 ], [ %.0114, %715 ], [ %.0114, %711 ], [ %.0114, %707 ], [ %.0114, %706 ], [ %.0114, %705 ], [ %.0114, %704 ], [ %.0114, %693 ], [ %.0114, %692 ], [ %.0114, %691 ], [ %.0114, %688 ], [ %.0114, %687 ], [ %.0114, %684 ], [ %.0114, %683 ], [ %.0114, %682 ], [ %.0114, %681 ], [ %.0114, %680 ], [ %.0114, %679 ], [ %.0114, %677 ], [ %.0114, %674 ], [ %.0114, %654 ], [ %.0114, %652 ], [ %.0114, %640 ], [ %.0114, %630 ], [ %.0114, %629 ], [ %.0114, %625 ], [ %.0114, %624 ], [ %.0114, %614 ], [ %.0114, %604 ], [ %.0114, %602 ], [ %.0114, %599 ], [ %.0114, %596 ], [ %.0114, %594 ], [ %.0114, %593 ], [ %.0114, %592 ], [ %.0114, %579 ], [ %.0114, %569 ], [ %.0114, %568 ], [ %.0114, %556 ], [ %.0114, %546 ], [ %.0114, %544 ], [ %.0114, %532 ], [ %.0114, %522 ], [ %.0114, %521 ], [ %.0114, %511 ], [ %.0114, %501 ], [ 85, %497 ], [ 68, %492 ], [ %.0114, %489 ], [ %.0114, %482 ], [ %.0114, %480 ], [ %.0114, %468 ], [ %.0114, %458 ], [ %.0114, %457 ], [ %.0114, %437 ], [ %.0114, %427 ], [ %.0114, %422 ], [ %.0114, %421 ], [ %.0114, %411 ], [ %.0114, %401 ], [ %.0114, %398 ], [ %.0114, %395 ], [ %.0114, %392 ], [ %.0114, %389 ], [ %.0114, %386 ], [ %.0114, %381 ], [ %.0114, %377 ], [ %.0114, %372 ], [ %.0114, %371 ], [ %.0114, %361 ], [ %.0114, %351 ], [ %.0114, %350 ], [ %.0114, %337 ], [ %.0114, %327 ], [ %.0114, %325 ], [ %.0114, %313 ], [ %.0114, %303 ], [ %.0114, %302 ], [ %.0114, %290 ], [ %.0114, %280 ], [ %.0114, %268 ], [ %.0114, %263 ], [ %.0114, %262 ], [ %.0114, %252 ], [ %.0114, %242 ], [ %.0114, %241 ], [ %.0114, %234 ], [ %.0114, %233 ], [ %.0114, %223 ], [ %.0114, %213 ], [ %.0114, %211 ], [ %.0114, %198 ], [ %.0114, %188 ], [ %.0114, %187 ], [ %.0114, %177 ], [ %.0114, %167 ], [ %.0114, %165 ], [ %.0114, %153 ], [ %.0114, %143 ], [ %.0114, %142 ], [ %.0114, %131 ], [ %.0114, %121 ], [ %.0114, %117 ], [ %.0114, %114 ], [ %.0114, %113 ], [ %.0114, %102 ], [ %.0114, %92 ], [ %.0114, %91 ], [ %.0114, %62 ], [ %.0114, %52 ], [ %.0114, %47 ], [ %.0114, %46 ], [ %.0114, %29 ], [ %.0114, %26 ]
  %.0112.be = phi i32 [ %.0112, %25 ], [ %.0112, %716 ], [ %.0112, %715 ], [ %.0112, %711 ], [ %.0112, %707 ], [ %.0112, %706 ], [ %.0112, %705 ], [ %.0112, %704 ], [ %.0112, %693 ], [ %.0112, %692 ], [ %.0112, %691 ], [ %.0112, %688 ], [ %.0112, %687 ], [ %.0112, %684 ], [ %.0112, %683 ], [ %.0112, %682 ], [ %.0112, %681 ], [ %.0112, %680 ], [ %.0112, %679 ], [ %.0112, %677 ], [ %.0112, %674 ], [ %.0112, %654 ], [ %.0112, %652 ], [ %.0112, %640 ], [ %.0112, %630 ], [ %.0112, %629 ], [ %.0112, %625 ], [ %.0112, %624 ], [ %.0112, %614 ], [ %.0112, %604 ], [ %.0112, %602 ], [ %.0112, %599 ], [ %.0112, %596 ], [ %.0112, %594 ], [ %.0112, %593 ], [ 82, %592 ], [ %.0112, %579 ], [ %.0112, %569 ], [ 76, %568 ], [ %.0112, %556 ], [ %.0112, %546 ], [ %.0112, %544 ], [ %.0112, %532 ], [ %.0112, %522 ], [ %.0112, %521 ], [ %.0112, %511 ], [ %.0112, %501 ], [ %.0112, %497 ], [ %.0112, %492 ], [ %.0112, %489 ], [ %.0112, %482 ], [ %.0112, %480 ], [ %.0112, %468 ], [ %.0112, %458 ], [ %.0112, %457 ], [ %.0112, %437 ], [ %.0112, %427 ], [ %.0112, %422 ], [ %.0112, %421 ], [ %.0112, %411 ], [ %.0112, %401 ], [ %.0112, %398 ], [ %.0112, %395 ], [ %.0112, %392 ], [ %.0112, %389 ], [ %.0112, %386 ], [ %.0112, %381 ], [ %.0112, %377 ], [ %.0112, %372 ], [ %.0112, %371 ], [ %.0112, %361 ], [ %.0112, %351 ], [ %.0112, %350 ], [ %.0112, %337 ], [ %.0112, %327 ], [ %.0112, %325 ], [ %.0112, %313 ], [ %.0112, %303 ], [ %.0112, %302 ], [ %.0112, %290 ], [ %.0112, %280 ], [ %.0112, %268 ], [ %.0112, %263 ], [ %.0112, %262 ], [ %.0112, %252 ], [ %.0112, %242 ], [ %.0112, %241 ], [ %.0112, %234 ], [ %.0112, %233 ], [ %.0112, %223 ], [ %.0112, %213 ], [ %.0112, %211 ], [ %.0112, %198 ], [ %.0112, %188 ], [ %.0112, %187 ], [ %.0112, %177 ], [ %.0112, %167 ], [ %.0112, %165 ], [ %.0112, %153 ], [ %.0112, %143 ], [ %.0112, %142 ], [ %.0112, %131 ], [ %.0112, %121 ], [ %.0112, %117 ], [ %.0112, %114 ], [ %.0112, %113 ], [ %.0112, %102 ], [ %.0112, %92 ], [ %.0112, %91 ], [ %.0112, %62 ], [ %.0112, %52 ], [ %.0112, %47 ], [ %.0112, %46 ], [ %.0112, %29 ], [ %.0112, %26 ]
  %.0.be = phi i32 [ %.0, %25 ], [ %.0, %716 ], [ %.0, %715 ], [ %.0, %711 ], [ %.0, %707 ], [ %.0, %706 ], [ %.0, %705 ], [ %.0, %704 ], [ %.0, %693 ], [ %.0, %692 ], [ %.0, %691 ], [ %.0, %688 ], [ %.0, %687 ], [ %.0, %684 ], [ %.0, %683 ], [ %.0, %682 ], [ %.0, %681 ], [ %.0, %680 ], [ %.0, %679 ], [ %.0, %677 ], [ %.0, %674 ], [ %.0, %654 ], [ %.0, %652 ], [ %.0, %640 ], [ %.0, %630 ], [ %.0, %629 ], [ %.0, %625 ], [ %.0, %624 ], [ %.0, %614 ], [ %.0, %604 ], [ %.0, %602 ], [ %.0, %599 ], [ %.0, %596 ], [ %.0, %594 ], [ %.0112, %593 ], [ %.0, %592 ], [ %.0, %579 ], [ %.0, %569 ], [ %.0, %568 ], [ %.0, %556 ], [ %.0, %546 ], [ %.0, %544 ], [ %.0, %532 ], [ %.0, %522 ], [ %.0..0..0.111, %521 ], [ %.0, %511 ], [ %.0, %501 ], [ %.0, %497 ], [ %.0, %492 ], [ %.0, %489 ], [ %.0, %482 ], [ %.0, %480 ], [ %.0, %468 ], [ %.0, %458 ], [ %.0, %457 ], [ %.0, %437 ], [ %.0, %427 ], [ %.0, %422 ], [ %.0, %421 ], [ %.0, %411 ], [ %.0, %401 ], [ %.0, %398 ], [ %.0, %395 ], [ %.0, %392 ], [ %.0, %389 ], [ %.0, %386 ], [ %.0, %381 ], [ %.0, %377 ], [ %.0, %372 ], [ %.0, %371 ], [ %.0, %361 ], [ %.0, %351 ], [ %.0, %350 ], [ %.0, %337 ], [ %.0, %327 ], [ %.0, %325 ], [ %.0, %313 ], [ %.0, %303 ], [ %.0, %302 ], [ %.0, %290 ], [ %.0, %280 ], [ %.0, %268 ], [ %.0, %263 ], [ %.0, %262 ], [ %.0, %252 ], [ %.0, %242 ], [ %.0, %241 ], [ %.0, %234 ], [ %.0, %233 ], [ %.0, %223 ], [ %.0, %213 ], [ %.0, %211 ], [ %.0, %198 ], [ %.0, %188 ], [ %.0, %187 ], [ %.0, %177 ], [ %.0, %167 ], [ %.0, %165 ], [ %.0, %153 ], [ %.0, %143 ], [ %.0, %142 ], [ %.0, %131 ], [ %.0, %121 ], [ %.0, %117 ], [ %.0, %114 ], [ %.0, %113 ], [ %.0, %102 ], [ %.0, %92 ], [ %.0, %91 ], [ %.0, %62 ], [ %.0, %52 ], [ %.0, %47 ], [ %.0, %46 ], [ %.0, %29 ], [ %.0, %26 ]
  br label %25

26:                                               ; preds = %25
  %.0..0..0.5 = load volatile i1, i1* %17, align 1
  %.0..0..0.6 = load volatile i1, i1* %16, align 1
  %27 = or i1 %.0..0..0.5, %.0..0..0.6
  %28 = select i1 %27, i32 439021787, i32 -618188882
  br label %.backedge

29:                                               ; preds = %25
  %30 = alloca i32, align 4
  store i32* %30, i32** %15, align 8
  %31 = alloca i32, align 4
  store i32* %31, i32** %14, align 8
  %32 = alloca i32, align 4
  store i32* %32, i32** %13, align 8
  %33 = alloca i32, align 4
  store i32* %33, i32** %12, align 8
  %34 = alloca i32, align 4
  store i32* %34, i32** %11, align 8
  %35 = alloca i32, align 4
  store i32* %35, i32** %10, align 8
  %.0..0..0.7 = load volatile i32*, i32** %15, align 8
  store i32 0, i32* %.0..0..0.7, align 4
  %.0..0..0.90 = load volatile i32*, i32** %10, align 8
  store i32 0, i32* %.0..0..0.90, align 4
  %36 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull @n)
  %.0..0..0.13 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.13, align 4
  %37 = load i32, i32* @x.5, align 4
  %38 = load i32, i32* @y.6, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 -499258479, i32 -618188882
  br label %.backedge

46:                                               ; preds = %25
  br label %.backedge

47:                                               ; preds = %25
  %.0..0..0.14 = load volatile i32*, i32** %14, align 8
  %48 = load i32, i32* %.0..0..0.14, align 4
  %49 = load i32, i32* @n, align 4
  %50 = icmp slt i32 %48, %49
  %51 = select i1 %50, i32 1979469374, i32 -1401500833
  br label %.backedge

52:                                               ; preds = %25
  %53 = load i32, i32* @x.5, align 4
  %54 = load i32, i32* @y.6, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 1869059500, i32 1878024730
  br label %.backedge

62:                                               ; preds = %25
  %.0..0..0.15 = load volatile i32*, i32** %14, align 8
  %63 = load i32, i32* %.0..0..0.15, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [1054 x i32], [1054 x i32]* @X, i64 0, i64 %64
  %.0..0..0.16 = load volatile i32*, i32** %14, align 8
  %66 = load i32, i32* %.0..0..0.16, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [1054 x i32], [1054 x i32]* @Y, i64 0, i64 %67
  %69 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %65, i32* nonnull %68)
  %.0..0..0.17 = load volatile i32*, i32** %14, align 8
  %70 = load i32, i32* %.0..0..0.17, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [1054 x i32], [1054 x i32]* @X, i64 0, i64 %71
  %73 = load i32, i32* %72, align 4
  %.0..0..0.18 = load volatile i32*, i32** %14, align 8
  %74 = load i32, i32* %.0..0..0.18, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [1054 x i32], [1054 x i32]* @Y, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = xor i32 %77, %73
  %79 = and i32 %78, 1
  %.0..0..0.91 = load volatile i32*, i32** %10, align 8
  %80 = load i32, i32* %.0..0..0.91, align 4
  %81 = add i32 %80, %79
  %.0..0..0.92 = load volatile i32*, i32** %10, align 8
  store i32 %81, i32* %.0..0..0.92, align 4
  %82 = load i32, i32* @x.5, align 4
  %83 = load i32, i32* @y.6, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 230385730, i32 1878024730
  br label %.backedge

91:                                               ; preds = %25
  br label %.backedge

92:                                               ; preds = %25
  %93 = load i32, i32* @x.5, align 4
  %94 = load i32, i32* @y.6, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 -228845921, i32 1171633925
  br label %.backedge

102:                                              ; preds = %25
  %.0..0..0.19 = load volatile i32*, i32** %14, align 8
  %103 = load i32, i32* %.0..0..0.19, align 4
  %.neg135 = add i32 %103, 1
  %.0..0..0.20 = load volatile i32*, i32** %14, align 8
  store i32 %.neg135, i32* %.0..0..0.20, align 4
  %104 = load i32, i32* @x.5, align 4
  %105 = load i32, i32* @y.6, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 1887925933, i32 1171633925
  br label %.backedge

113:                                              ; preds = %25
  br label %.backedge

114:                                              ; preds = %25
  %.0..0..0.93 = load volatile i32*, i32** %10, align 8
  %115 = load i32, i32* %.0..0..0.93, align 4
  %.not134 = icmp eq i32 %115, 0
  %116 = select i1 %.not134, i32 -445918835, i32 1343152874
  br label %.backedge

117:                                              ; preds = %25
  %.0..0..0.94 = load volatile i32*, i32** %10, align 8
  %118 = load i32, i32* %.0..0..0.94, align 4
  %119 = load i32, i32* @n, align 4
  %.not133 = icmp eq i32 %118, %119
  %120 = select i1 %.not133, i32 -445918835, i32 -891270081
  br label %.backedge

121:                                              ; preds = %25
  %122 = load i32, i32* @x.5, align 4
  %123 = load i32, i32* @y.6, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 -292641452, i32 66114371
  br label %.backedge

131:                                              ; preds = %25
  %132 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %.0..0..0.8 = load volatile i32*, i32** %15, align 8
  store i32 0, i32* %.0..0..0.8, align 4
  %133 = load i32, i32* @x.5, align 4
  %134 = load i32, i32* @y.6, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 972494031, i32 66114371
  br label %.backedge

142:                                              ; preds = %25
  br label %.backedge

143:                                              ; preds = %25
  %144 = load i32, i32* @x.5, align 4
  %145 = load i32, i32* @y.6, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 71105616, i32 -1370649332
  br label %.backedge

153:                                              ; preds = %25
  %.0..0..0.95 = load volatile i32*, i32** %10, align 8
  %154 = load i32, i32* %.0..0..0.95, align 4
  %155 = icmp ne i32 %154, 0
  store i1 %155, i1* %9, align 1
  %156 = load i32, i32* @x.5, align 4
  %157 = load i32, i32* @y.6, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 -283689363, i32 -1370649332
  br label %.backedge

165:                                              ; preds = %25
  %.0..0..0.103 = load volatile i1, i1* %9, align 1
  %166 = select i1 %.0..0..0.103, i32 783960957, i32 -214190183
  br label %.backedge

167:                                              ; preds = %25
  %168 = load i32, i32* @x.5, align 4
  %169 = load i32, i32* @y.6, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 1974698818, i32 2138790830
  br label %.backedge

177:                                              ; preds = %25
  %.0..0..0.21 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.21, align 4
  %178 = load i32, i32* @x.5, align 4
  %179 = load i32, i32* @y.6, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 1897522000, i32 2138790830
  br label %.backedge

187:                                              ; preds = %25
  br label %.backedge

188:                                              ; preds = %25
  %189 = load i32, i32* @x.5, align 4
  %190 = load i32, i32* @y.6, align 4
  %191 = add i32 %189, -1
  %192 = mul i32 %191, %189
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %195, %194
  %197 = select i1 %196, i32 -1181527113, i32 -498986195
  br label %.backedge

198:                                              ; preds = %25
  %.0..0..0.22 = load volatile i32*, i32** %14, align 8
  %199 = load i32, i32* %.0..0..0.22, align 4
  %200 = load i32, i32* @n, align 4
  %201 = icmp slt i32 %199, %200
  store i1 %201, i1* %8, align 1
  %202 = load i32, i32* @x.5, align 4
  %203 = load i32, i32* @y.6, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 1210469653, i32 -498986195
  br label %.backedge

211:                                              ; preds = %25
  %.0..0..0.104 = load volatile i1, i1* %8, align 1
  %212 = select i1 %.0..0..0.104, i32 -56220685, i32 -379881293
  br label %.backedge

213:                                              ; preds = %25
  %214 = load i32, i32* @x.5, align 4
  %215 = load i32, i32* @y.6, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 1087486781, i32 -948551640
  br label %.backedge

223:                                              ; preds = %25
  %224 = load i32, i32* @x.5, align 4
  %225 = load i32, i32* @y.6, align 4
  %226 = add i32 %224, -1
  %227 = mul i32 %226, %224
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %230, %229
  %232 = select i1 %231, i32 -430194969, i32 -948551640
  br label %.backedge

233:                                              ; preds = %25
  br label %.backedge

234:                                              ; preds = %25
  %.0..0..0.23 = load volatile i32*, i32** %14, align 8
  %235 = load i32, i32* %.0..0..0.23, align 4
  %236 = add i32 %235, 1
  %.0..0..0.24 = load volatile i32*, i32** %14, align 8
  store i32 %236, i32* %.0..0..0.24, align 4
  %237 = sext i32 %235 to i64
  %238 = getelementptr inbounds [1054 x i32], [1054 x i32]* @X, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = add i32 %239, -1
  store i32 %240, i32* %238, align 4
  br label %.backedge

241:                                              ; preds = %25
  br label %.backedge

242:                                              ; preds = %25
  %243 = load i32, i32* @x.5, align 4
  %244 = load i32, i32* @y.6, align 4
  %245 = add i32 %243, -1
  %246 = mul i32 %245, %243
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %249, %248
  %251 = select i1 %250, i32 -897662096, i32 2015456203
  br label %.backedge

252:                                              ; preds = %25
  %.0..0..0.25 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.25, align 4
  %253 = load i32, i32* @x.5, align 4
  %254 = load i32, i32* @y.6, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 1218070604, i32 2015456203
  br label %.backedge

262:                                              ; preds = %25
  br label %.backedge

263:                                              ; preds = %25
  %.0..0..0.26 = load volatile i32*, i32** %14, align 8
  %264 = load i32, i32* %.0..0..0.26, align 4
  %265 = load i32, i32* @n, align 4
  %266 = icmp slt i32 %264, %265
  %267 = select i1 %266, i32 1835143074, i32 -1516604236
  br label %.backedge

268:                                              ; preds = %25
  %.0..0..0.27 = load volatile i32*, i32** %14, align 8
  %269 = load i32, i32* %.0..0..0.27, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [1054 x i32], [1054 x i32]* @X, i64 0, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = call i32 @llvm.abs.i32(i32 %272, i1 true)
  %.0..0..0.28 = load volatile i32*, i32** %14, align 8
  %274 = load i32, i32* %.0..0..0.28, align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds [1054 x i32], [1054 x i32]* @Y, i64 0, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = call i32 @llvm.abs.i32(i32 %277, i1 true)
  %279 = add nuw i32 %278, %273
  call void @_Z2upRii(i32* nonnull dereferenceable(4) @L, i32 %279)
  br label %.backedge

280:                                              ; preds = %25
  %281 = load i32, i32* @x.5, align 4
  %282 = load i32, i32* @y.6, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 -225301025, i32 2034014767
  br label %.backedge

290:                                              ; preds = %25
  %.0..0..0.29 = load volatile i32*, i32** %14, align 8
  %291 = load i32, i32* %.0..0..0.29, align 4
  %292 = add i32 %291, 1
  %.0..0..0.30 = load volatile i32*, i32** %14, align 8
  store i32 %292, i32* %.0..0..0.30, align 4
  %293 = load i32, i32* @x.5, align 4
  %294 = load i32, i32* @y.6, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 -1290366150, i32 2034014767
  br label %.backedge

302:                                              ; preds = %25
  br label %.backedge

303:                                              ; preds = %25
  %304 = load i32, i32* @x.5, align 4
  %305 = load i32, i32* @y.6, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 77394758, i32 -908665282
  br label %.backedge

313:                                              ; preds = %25
  %314 = load i32, i32* @L, align 4
  %315 = icmp ne i32 %314, 0
  store i1 %315, i1* %7, align 1
  %316 = load i32, i32* @x.5, align 4
  %317 = load i32, i32* @y.6, align 4
  %318 = add i32 %316, -1
  %319 = mul i32 %318, %316
  %320 = and i32 %319, 1
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %322, %321
  %324 = select i1 %323, i32 -71691639, i32 -908665282
  br label %.backedge

325:                                              ; preds = %25
  %.0..0..0.105 = load volatile i1, i1* %7, align 1
  %326 = select i1 %.0..0..0.105, i32 -1145607136, i32 1131539272
  br label %.backedge

327:                                              ; preds = %25
  %328 = load i32, i32* @x.5, align 4
  %329 = load i32, i32* @y.6, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 -215304330, i32 -643533093
  br label %.backedge

337:                                              ; preds = %25
  %338 = load i32, i32* @L, align 4
  %339 = call i32 @_ZSt4__lgi(i32 %338)
  %340 = add i32 %339, 1
  store i32 %340, i32* %6, align 4
  %341 = load i32, i32* @x.5, align 4
  %342 = load i32, i32* @y.6, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 320705425, i32 -643533093
  br label %.backedge

350:                                              ; preds = %25
  %.0..0..0.106 = load volatile i32, i32* %6, align 4
  br label %.backedge

351:                                              ; preds = %25
  %352 = load i32, i32* @x.5, align 4
  %353 = load i32, i32* @y.6, align 4
  %354 = add i32 %352, -1
  %355 = mul i32 %354, %352
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %358, %357
  %360 = select i1 %359, i32 1143808542, i32 307052509
  br label %.backedge

361:                                              ; preds = %25
  %362 = load i32, i32* @x.5, align 4
  %363 = load i32, i32* @y.6, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 -692025351, i32 307052509
  br label %.backedge

371:                                              ; preds = %25
  br label %.backedge

372:                                              ; preds = %25
  store i32 %.0118, i32* @L, align 4
  %.0..0..0.96 = load volatile i32*, i32** %10, align 8
  %373 = load i32, i32* %.0..0..0.96, align 4
  %.not130 = icmp eq i32 %373, 0
  %.neg131.neg = zext i1 %.not130 to i32
  %.neg132 = add i32 %.0118, %.neg131.neg
  %374 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %.neg132)
  %375 = load i32, i32* @L, align 4
  %376 = add i32 %375, -1
  %.0..0..0.31 = load volatile i32*, i32** %14, align 8
  store i32 %376, i32* %.0..0..0.31, align 4
  br label %.backedge

377:                                              ; preds = %25
  %.0..0..0.32 = load volatile i32*, i32** %14, align 8
  %378 = load i32, i32* %.0..0..0.32, align 4
  %379 = icmp sgt i32 %378, -1
  %380 = select i1 %379, i32 1235547524, i32 -1336896559
  br label %.backedge

381:                                              ; preds = %25
  %.0..0..0.33 = load volatile i32*, i32** %14, align 8
  %382 = load i32, i32* %.0..0..0.33, align 4
  %383 = shl nuw i32 1, %382
  store i32 %383, i32* %5, align 4
  %.0..0..0.34 = load volatile i32*, i32** %14, align 8
  %384 = load i32, i32* %.0..0..0.34, align 4
  %.not129 = icmp eq i32 %384, 0
  %385 = select i1 %.not129, i32 2130485563, i32 703167940
  br label %.backedge

386:                                              ; preds = %25
  %.0..0..0.97 = load volatile i32*, i32** %10, align 8
  %387 = load i32, i32* %.0..0..0.97, align 4
  %388 = icmp ne i32 %387, 0
  br label %.backedge

389:                                              ; preds = %25
  %390 = select i1 %.0116, i32 10, i32 32
  %.0..0..0.107 = load volatile i32, i32* %5, align 4
  %391 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i32 %.0..0..0.107, i32 %390)
  br label %.backedge

392:                                              ; preds = %25
  %.0..0..0.35 = load volatile i32*, i32** %14, align 8
  %393 = load i32, i32* %.0..0..0.35, align 4
  %394 = add i32 %393, -1
  %.0..0..0.36 = load volatile i32*, i32** %14, align 8
  store i32 %394, i32* %.0..0..0.36, align 4
  br label %.backedge

395:                                              ; preds = %25
  %.0..0..0.98 = load volatile i32*, i32** %10, align 8
  %396 = load i32, i32* %.0..0..0.98, align 4
  %.not128 = icmp eq i32 %396, 0
  %397 = select i1 %.not128, i32 -1648759792, i32 322524989
  br label %.backedge

398:                                              ; preds = %25
  %399 = call i32 @putchar(i32 49)
  %400 = call i32 @putchar(i32 10)
  br label %.backedge

401:                                              ; preds = %25
  %402 = load i32, i32* @x.5, align 4
  %403 = load i32, i32* @y.6, align 4
  %404 = add i32 %402, -1
  %405 = mul i32 %404, %402
  %406 = and i32 %405, 1
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %408, %407
  %410 = select i1 %409, i32 2040005512, i32 -1062927313
  br label %.backedge

411:                                              ; preds = %25
  %.0..0..0.37 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.37, align 4
  %412 = load i32, i32* @x.5, align 4
  %413 = load i32, i32* @y.6, align 4
  %414 = add i32 %412, -1
  %415 = mul i32 %414, %412
  %416 = and i32 %415, 1
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %418, %417
  %420 = select i1 %419, i32 655546221, i32 -1062927313
  br label %.backedge

421:                                              ; preds = %25
  br label %.backedge

422:                                              ; preds = %25
  %.0..0..0.38 = load volatile i32*, i32** %14, align 8
  %423 = load i32, i32* %.0..0..0.38, align 4
  %424 = load i32, i32* @n, align 4
  %425 = icmp slt i32 %423, %424
  %426 = select i1 %425, i32 1595755350, i32 -1144359297
  br label %.backedge

427:                                              ; preds = %25
  %428 = load i32, i32* @x.5, align 4
  %429 = load i32, i32* @y.6, align 4
  %430 = add i32 %428, -1
  %431 = mul i32 %430, %428
  %432 = and i32 %431, 1
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %434, %433
  %436 = select i1 %435, i32 -745332772, i32 1338010366
  br label %.backedge

437:                                              ; preds = %25
  %.0..0..0.39 = load volatile i32*, i32** %14, align 8
  %438 = load i32, i32* %.0..0..0.39, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds [1054 x i32], [1054 x i32]* @X, i64 0, i64 %439
  %441 = load i32, i32* %440, align 4
  %.0..0..0.69 = load volatile i32*, i32** %12, align 8
  store i32 %441, i32* %.0..0..0.69, align 4
  %.0..0..0.40 = load volatile i32*, i32** %14, align 8
  %442 = load i32, i32* %.0..0..0.40, align 4
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [1054 x i32], [1054 x i32]* @Y, i64 0, i64 %443
  %445 = load i32, i32* %444, align 4
  %.0..0..0.82 = load volatile i32*, i32** %11, align 8
  store i32 %445, i32* %.0..0..0.82, align 4
  %446 = load i32, i32* @L, align 4
  %447 = add i32 %446, -1
  %.0..0..0.57 = load volatile i32*, i32** %13, align 8
  store i32 %447, i32* %.0..0..0.57, align 4
  %448 = load i32, i32* @x.5, align 4
  %449 = load i32, i32* @y.6, align 4
  %450 = add i32 %448, -1
  %451 = mul i32 %450, %448
  %452 = and i32 %451, 1
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %454, %453
  %456 = select i1 %455, i32 932212912, i32 1338010366
  br label %.backedge

457:                                              ; preds = %25
  br label %.backedge

458:                                              ; preds = %25
  %459 = load i32, i32* @x.5, align 4
  %460 = load i32, i32* @y.6, align 4
  %461 = add i32 %459, -1
  %462 = mul i32 %461, %459
  %463 = and i32 %462, 1
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %465, %464
  %467 = select i1 %466, i32 51627634, i32 1488072448
  br label %.backedge

468:                                              ; preds = %25
  %.0..0..0.58 = load volatile i32*, i32** %13, align 8
  %469 = load i32, i32* %.0..0..0.58, align 4
  %470 = icmp sgt i32 %469, -1
  store i1 %470, i1* %4, align 1
  %471 = load i32, i32* @x.5, align 4
  %472 = load i32, i32* @y.6, align 4
  %473 = add i32 %471, -1
  %474 = mul i32 %473, %471
  %475 = and i32 %474, 1
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %477, %476
  %479 = select i1 %478, i32 225673218, i32 1488072448
  br label %.backedge

480:                                              ; preds = %25
  %.0..0..0.108 = load volatile i1, i1* %4, align 1
  %481 = select i1 %.0..0..0.108, i32 362822158, i32 -155917060
  br label %.backedge

482:                                              ; preds = %25
  %.0..0..0.70 = load volatile i32*, i32** %12, align 8
  %483 = load i32, i32* %.0..0..0.70, align 4
  %484 = call i32 @llvm.abs.i32(i32 %483, i1 true)
  %.0..0..0.83 = load volatile i32*, i32** %11, align 8
  %485 = load i32, i32* %.0..0..0.83, align 4
  %486 = call i32 @llvm.abs.i32(i32 %485, i1 true)
  %487 = icmp ult i32 %484, %486
  %488 = select i1 %487, i32 720791053, i32 792122629
  br label %.backedge

489:                                              ; preds = %25
  %.0..0..0.84 = load volatile i32*, i32** %11, align 8
  %490 = load i32, i32* %.0..0..0.84, align 4
  %.not127 = icmp sgt i32 %490, -1
  %491 = select i1 %.not127, i32 953705007, i32 1029370476
  br label %.backedge

492:                                              ; preds = %25
  %.0..0..0.59 = load volatile i32*, i32** %13, align 8
  %493 = load i32, i32* %.0..0..0.59, align 4
  %494 = shl nuw i32 1, %493
  %.0..0..0.85 = load volatile i32*, i32** %11, align 8
  %495 = load i32, i32* %.0..0..0.85, align 4
  %496 = add i32 %495, %494
  %.0..0..0.86 = load volatile i32*, i32** %11, align 8
  store i32 %496, i32* %.0..0..0.86, align 4
  br label %.backedge

497:                                              ; preds = %25
  %.0..0..0.60 = load volatile i32*, i32** %13, align 8
  %498 = load i32, i32* %.0..0..0.60, align 4
  %.neg126 = shl nsw i32 -1, %498
  %.0..0..0.87 = load volatile i32*, i32** %11, align 8
  %499 = load i32, i32* %.0..0..0.87, align 4
  %500 = add i32 %499, %.neg126
  %.0..0..0.88 = load volatile i32*, i32** %11, align 8
  store i32 %500, i32* %.0..0..0.88, align 4
  br label %.backedge

501:                                              ; preds = %25
  store i32 %.0114, i32* %1, align 4
  %502 = load i32, i32* @x.5, align 4
  %503 = load i32, i32* @y.6, align 4
  %504 = add i32 %502, -1
  %505 = mul i32 %504, %502
  %506 = and i32 %505, 1
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %508, %507
  %510 = select i1 %509, i32 -159042595, i32 1840725737
  br label %.backedge

511:                                              ; preds = %25
  %512 = load i32, i32* @x.5, align 4
  %513 = load i32, i32* @y.6, align 4
  %514 = add i32 %512, -1
  %515 = mul i32 %514, %512
  %516 = and i32 %515, 1
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %518, %517
  %520 = select i1 %519, i32 1184362900, i32 1840725737
  br label %.backedge

521:                                              ; preds = %25
  %.0..0..0.111 = load volatile i32, i32* %1, align 4
  br label %.backedge

522:                                              ; preds = %25
  %523 = load i32, i32* @x.5, align 4
  %524 = load i32, i32* @y.6, align 4
  %525 = add i32 %523, -1
  %526 = mul i32 %525, %523
  %527 = and i32 %526, 1
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %529, %528
  %531 = select i1 %530, i32 -622461998, i32 943956824
  br label %.backedge

532:                                              ; preds = %25
  %.0..0..0.71 = load volatile i32*, i32** %12, align 8
  %533 = load i32, i32* %.0..0..0.71, align 4
  %534 = icmp slt i32 %533, 0
  store i1 %534, i1* %3, align 1
  %535 = load i32, i32* @x.5, align 4
  %536 = load i32, i32* @y.6, align 4
  %537 = add i32 %535, -1
  %538 = mul i32 %537, %535
  %539 = and i32 %538, 1
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %541, %540
  %543 = select i1 %542, i32 -1374497550, i32 943956824
  br label %.backedge

544:                                              ; preds = %25
  %.0..0..0.109 = load volatile i1, i1* %3, align 1
  %545 = select i1 %.0..0..0.109, i32 359092803, i32 600728106
  br label %.backedge

546:                                              ; preds = %25
  %547 = load i32, i32* @x.5, align 4
  %548 = load i32, i32* @y.6, align 4
  %549 = add i32 %547, -1
  %550 = mul i32 %549, %547
  %551 = and i32 %550, 1
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %553, %552
  %555 = select i1 %554, i32 449256125, i32 -1237567486
  br label %.backedge

556:                                              ; preds = %25
  %.0..0..0.61 = load volatile i32*, i32** %13, align 8
  %557 = load i32, i32* %.0..0..0.61, align 4
  %.neg124.neg = shl nuw i32 1, %557
  %.0..0..0.72 = load volatile i32*, i32** %12, align 8
  %558 = load i32, i32* %.0..0..0.72, align 4
  %.neg125 = add i32 %558, %.neg124.neg
  %.0..0..0.73 = load volatile i32*, i32** %12, align 8
  store i32 %.neg125, i32* %.0..0..0.73, align 4
  %559 = load i32, i32* @x.5, align 4
  %560 = load i32, i32* @y.6, align 4
  %561 = add i32 %559, -1
  %562 = mul i32 %561, %559
  %563 = and i32 %562, 1
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %565, %564
  %567 = select i1 %566, i32 -5760053, i32 -1237567486
  br label %.backedge

568:                                              ; preds = %25
  br label %.backedge

569:                                              ; preds = %25
  %570 = load i32, i32* @x.5, align 4
  %571 = load i32, i32* @y.6, align 4
  %572 = add i32 %570, -1
  %573 = mul i32 %572, %570
  %574 = and i32 %573, 1
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %571, 10
  %577 = or i1 %576, %575
  %578 = select i1 %577, i32 446589375, i32 649061059
  br label %.backedge

579:                                              ; preds = %25
  %.0..0..0.62 = load volatile i32*, i32** %13, align 8
  %580 = load i32, i32* %.0..0..0.62, align 4
  %.neg123 = shl nsw i32 -1, %580
  %.0..0..0.74 = load volatile i32*, i32** %12, align 8
  %581 = load i32, i32* %.0..0..0.74, align 4
  %582 = add i32 %581, %.neg123
  %.0..0..0.75 = load volatile i32*, i32** %12, align 8
  store i32 %582, i32* %.0..0..0.75, align 4
  %583 = load i32, i32* @x.5, align 4
  %584 = load i32, i32* @y.6, align 4
  %585 = add i32 %583, -1
  %586 = mul i32 %585, %583
  %587 = and i32 %586, 1
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %589, %588
  %591 = select i1 %590, i32 -940715839, i32 649061059
  br label %.backedge

592:                                              ; preds = %25
  br label %.backedge

593:                                              ; preds = %25
  br label %.backedge

594:                                              ; preds = %25
  %595 = call i32 @putchar(i32 %.0)
  br label %.backedge

596:                                              ; preds = %25
  %.0..0..0.63 = load volatile i32*, i32** %13, align 8
  %597 = load i32, i32* %.0..0..0.63, align 4
  %598 = add i32 %597, -1
  %.0..0..0.64 = load volatile i32*, i32** %13, align 8
  store i32 %598, i32* %.0..0..0.64, align 4
  br label %.backedge

599:                                              ; preds = %25
  %.0..0..0.99 = load volatile i32*, i32** %10, align 8
  %600 = load i32, i32* %.0..0..0.99, align 4
  %.not = icmp eq i32 %600, 0
  %601 = select i1 %.not, i32 1513766563, i32 1835644431
  br label %.backedge

602:                                              ; preds = %25
  %603 = call i32 @putchar(i32 82)
  br label %.backedge

604:                                              ; preds = %25
  %605 = load i32, i32* @x.5, align 4
  %606 = load i32, i32* @y.6, align 4
  %607 = add i32 %605, -1
  %608 = mul i32 %607, %605
  %609 = and i32 %608, 1
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %611, %610
  %613 = select i1 %612, i32 420224292, i32 -1618949809
  br label %.backedge

614:                                              ; preds = %25
  %615 = load i32, i32* @x.5, align 4
  %616 = load i32, i32* @y.6, align 4
  %617 = add i32 %615, -1
  %618 = mul i32 %617, %615
  %619 = and i32 %618, 1
  %620 = icmp eq i32 %619, 0
  %621 = icmp slt i32 %616, 10
  %622 = or i1 %621, %620
  %623 = select i1 %622, i32 1927796160, i32 -1618949809
  br label %.backedge

624:                                              ; preds = %25
  br label %.backedge

625:                                              ; preds = %25
  %.0..0..0.41 = load volatile i32*, i32** %14, align 8
  %626 = load i32, i32* %.0..0..0.41, align 4
  %627 = add i32 %626, 1
  %.0..0..0.42 = load volatile i32*, i32** %14, align 8
  store i32 %627, i32* %.0..0..0.42, align 4
  %628 = call i32 @putchar(i32 10)
  br label %.backedge

629:                                              ; preds = %25
  %.0..0..0.9 = load volatile i32*, i32** %15, align 8
  store i32 0, i32* %.0..0..0.9, align 4
  br label %.backedge

630:                                              ; preds = %25
  %631 = load i32, i32* @x.5, align 4
  %632 = load i32, i32* @y.6, align 4
  %633 = add i32 %631, -1
  %634 = mul i32 %633, %631
  %635 = and i32 %634, 1
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %637, %636
  %639 = select i1 %638, i32 780722942, i32 1381182610
  br label %.backedge

640:                                              ; preds = %25
  %.0..0..0.10 = load volatile i32*, i32** %15, align 8
  %641 = load i32, i32* %.0..0..0.10, align 4
  store i32 %641, i32* %2, align 4
  %642 = load i32, i32* @x.5, align 4
  %643 = load i32, i32* @y.6, align 4
  %644 = add i32 %642, -1
  %645 = mul i32 %644, %642
  %646 = and i32 %645, 1
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %643, 10
  %649 = or i1 %648, %647
  %650 = select i1 %649, i32 1906315487, i32 1381182610
  br label %.backedge

651:                                              ; preds = %25
  %.0..0..0.110 = load volatile i32, i32* %2, align 4
  ret i32 %.0..0..0.110

652:                                              ; preds = %25
  %653 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull @n)
  br label %.backedge

654:                                              ; preds = %25
  %.0..0..0.43 = load volatile i32*, i32** %14, align 8
  %655 = load i32, i32* %.0..0..0.43, align 4
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds [1054 x i32], [1054 x i32]* @X, i64 0, i64 %656
  %.0..0..0.44 = load volatile i32*, i32** %14, align 8
  %658 = load i32, i32* %.0..0..0.44, align 4
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds [1054 x i32], [1054 x i32]* @Y, i64 0, i64 %659
  %661 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %657, i32* nonnull %660)
  %.0..0..0.45 = load volatile i32*, i32** %14, align 8
  %662 = load i32, i32* %.0..0..0.45, align 4
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds [1054 x i32], [1054 x i32]* @X, i64 0, i64 %663
  %665 = load i32, i32* %664, align 4
  %.0..0..0.46 = load volatile i32*, i32** %14, align 8
  %666 = load i32, i32* %.0..0..0.46, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds [1054 x i32], [1054 x i32]* @Y, i64 0, i64 %667
  %669 = load i32, i32* %668, align 4
  %670 = xor i32 %669, %665
  %671 = and i32 %670, 1
  %.0..0..0.100 = load volatile i32*, i32** %10, align 8
  %672 = load i32, i32* %.0..0..0.100, align 4
  %673 = add i32 %672, %671
  %.0..0..0.101 = load volatile i32*, i32** %10, align 8
  store i32 %673, i32* %.0..0..0.101, align 4
  br label %.backedge

674:                                              ; preds = %25
  %.0..0..0.47 = load volatile i32*, i32** %14, align 8
  %675 = load i32, i32* %.0..0..0.47, align 4
  %676 = add i32 %675, 1
  %.0..0..0.48 = load volatile i32*, i32** %14, align 8
  store i32 %676, i32* %.0..0..0.48, align 4
  br label %.backedge

677:                                              ; preds = %25
  %678 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %.0..0..0.11 = load volatile i32*, i32** %15, align 8
  store i32 0, i32* %.0..0..0.11, align 4
  br label %.backedge

679:                                              ; preds = %25
  %.0..0..0.102 = load volatile i32*, i32** %10, align 8
  br label %.backedge

680:                                              ; preds = %25
  %.0..0..0.49 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.49, align 4
  br label %.backedge

681:                                              ; preds = %25
  %.0..0..0.50 = load volatile i32*, i32** %14, align 8
  br label %.backedge

682:                                              ; preds = %25
  br label %.backedge

683:                                              ; preds = %25
  %.0..0..0.51 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.51, align 4
  br label %.backedge

684:                                              ; preds = %25
  %.0..0..0.52 = load volatile i32*, i32** %14, align 8
  %685 = load i32, i32* %.0..0..0.52, align 4
  %686 = add i32 %685, 1
  %.0..0..0.53 = load volatile i32*, i32** %14, align 8
  store i32 %686, i32* %.0..0..0.53, align 4
  br label %.backedge

687:                                              ; preds = %25
  br label %.backedge

688:                                              ; preds = %25
  %689 = load i32, i32* @L, align 4
  %690 = call i32 @_ZSt4__lgi(i32 %689)
  br label %.backedge

691:                                              ; preds = %25
  br label %.backedge

692:                                              ; preds = %25
  %.0..0..0.54 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.54, align 4
  br label %.backedge

693:                                              ; preds = %25
  %.0..0..0.55 = load volatile i32*, i32** %14, align 8
  %694 = load i32, i32* %.0..0..0.55, align 4
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds [1054 x i32], [1054 x i32]* @X, i64 0, i64 %695
  %697 = load i32, i32* %696, align 4
  %.0..0..0.76 = load volatile i32*, i32** %12, align 8
  store i32 %697, i32* %.0..0..0.76, align 4
  %.0..0..0.56 = load volatile i32*, i32** %14, align 8
  %698 = load i32, i32* %.0..0..0.56, align 4
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds [1054 x i32], [1054 x i32]* @Y, i64 0, i64 %699
  %701 = load i32, i32* %700, align 4
  %.0..0..0.89 = load volatile i32*, i32** %11, align 8
  store i32 %701, i32* %.0..0..0.89, align 4
  %702 = load i32, i32* @L, align 4
  %703 = add i32 %702, -1
  %.0..0..0.65 = load volatile i32*, i32** %13, align 8
  store i32 %703, i32* %.0..0..0.65, align 4
  br label %.backedge

704:                                              ; preds = %25
  %.0..0..0.66 = load volatile i32*, i32** %13, align 8
  br label %.backedge

705:                                              ; preds = %25
  br label %.backedge

706:                                              ; preds = %25
  %.0..0..0.77 = load volatile i32*, i32** %12, align 8
  br label %.backedge

707:                                              ; preds = %25
  %.0..0..0.67 = load volatile i32*, i32** %13, align 8
  %708 = load i32, i32* %.0..0..0.67, align 4
  %.neg122.neg = shl nuw i32 1, %708
  %.0..0..0.78 = load volatile i32*, i32** %12, align 8
  %709 = load i32, i32* %.0..0..0.78, align 4
  %710 = add i32 %709, %.neg122.neg
  %.0..0..0.79 = load volatile i32*, i32** %12, align 8
  store i32 %710, i32* %.0..0..0.79, align 4
  br label %.backedge

711:                                              ; preds = %25
  %.0..0..0.68 = load volatile i32*, i32** %13, align 8
  %712 = load i32, i32* %.0..0..0.68, align 4
  %.neg = shl nsw i32 -1, %712
  %.0..0..0.80 = load volatile i32*, i32** %12, align 8
  %713 = load i32, i32* %.0..0..0.80, align 4
  %714 = add i32 %713, %.neg
  %.0..0..0.81 = load volatile i32*, i32** %12, align 8
  store i32 %714, i32* %.0..0..0.81, align 4
  br label %.backedge

715:                                              ; preds = %25
  br label %.backedge

716:                                              ; preds = %25
  %.0..0..0.12 = load volatile i32*, i32** %15, align 8
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_Z2upRii(i32* dereferenceable(4) %0, i32 %1) local_unnamed_addr #6 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %0, align 4
  store i32 %5, i32* %4, align 4
  store i32 %1, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ 1896666090, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %6

6:                                                ; preds = %.outer, %6
  switch i32 %.0.ph, label %6 [
    i32 1896666090, label %7
    i32 -662676396, label %10
    i32 -1510269117, label %11
    i32 1466835566, label %21
    i32 -519427800, label %.outer.backedge
    i32 -1043322609, label %31
    i32 -536035292, label %32
  ]

7:                                                ; preds = %6
  %.0..0..0.4 = load volatile i32, i32* %4, align 4
  %.0..0..0.5 = load volatile i32, i32* %3, align 4
  %8 = icmp slt i32 %.0..0..0.4, %.0..0..0.5
  %9 = select i1 %8, i32 -662676396, i32 -1510269117
  br label %.outer.backedge

10:                                               ; preds = %6
  store i32 %1, i32* %0, align 4
  br label %.outer.backedge

11:                                               ; preds = %6
  %12 = load i32, i32* @x.7, align 4
  %13 = load i32, i32* @y.8, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 1466835566, i32 -536035292
  br label %.outer.backedge

21:                                               ; preds = %6
  %22 = load i32, i32* @x.7, align 4
  %23 = load i32, i32* @y.8, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 -519427800, i32 -536035292
  br label %.outer.backedge

31:                                               ; preds = %6
  ret void

32:                                               ; preds = %6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %6, %32, %21, %11, %10, %7
  %.0.ph.be = phi i32 [ %9, %7 ], [ -1043322609, %10 ], [ %20, %11 ], [ %30, %21 ], [ 1466835566, %32 ], [ -1043322609, %6 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZSt4__lgi(i32 %0) local_unnamed_addr #6 comdat {
  %2 = alloca i32, align 4
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.9, align 4
  %6 = load i32, i32* @y.10, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 -426235221, i32 1241236057
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %1
  %.0.ph = phi i32 [ -1369720630, %1 ], [ %.0.ph.be, %.outer.backedge ]
  br label %14

14:                                               ; preds = %.outer, %14
  switch i32 %.0.ph, label %14 [
    i32 -1369720630, label %15
    i32 1075618580, label %.outer.backedge
    i32 -426235221, label %18
    i32 1241236057, label %21
  ]

15:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %16 = or i1 %.0..0..0., %.0..0..0.1
  %17 = select i1 %16, i32 1075618580, i32 1241236057
  br label %.outer.backedge

18:                                               ; preds = %14
  %19 = tail call i32 @llvm.ctlz.i32(i32 %0, i1 true), !range !1
  %20 = xor i32 %19, 31
  store i32 %20, i32* %2, align 4
  %.0..0..0.2 = load volatile i32, i32* %2, align 4
  ret i32 %.0..0..0.2

21:                                               ; preds = %14
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %14, %21, %15
  %.0.ph.be = phi i32 [ %17, %15 ], [ 1075618580, %21 ], [ %13, %14 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s535461400.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.11, align 4
  %4 = load i32, i32* @y.12, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1009401019, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1009401019, label %11
    i32 918561134, label %14
    i32 721857577, label %24
    i32 -1294607590, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 918561134, i32 -1294607590
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.11, align 4
  %16 = load i32, i32* @y.12, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 721857577, i32 -1294607590
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 918561134, %25 ]
  br label %.outer
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #8

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
!1 = !{i32 0, i32 33}
