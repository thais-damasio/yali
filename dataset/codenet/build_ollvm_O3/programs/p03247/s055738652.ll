; ModuleID = 'build_ollvm/programs/p03247/s055738652.ll'
source_filename = "Project_CodeNet_C++1400/p03247/s055738652.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3absx = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i64 0, align 8
@x = global [1000 x i64] zeroinitializer, align 16
@y = global [1000 x i64] zeroinitializer, align 16
@d = local_unnamed_addr global [35 x i64] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [3 x i8] c"-1\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s055738652.cpp, i8* null }]
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@x.12 = common local_unnamed_addr global i32 0
@y.13 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.6, align 4
  %4 = load i32, i32* @y.7, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 365696741, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 365696741, label %11
    i32 -1752394018, label %14
    i32 858665814, label %25
    i32 1776255129, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1752394018, i32 1776255129
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  %16 = load i32, i32* @x.6, align 4
  %17 = load i32, i32* @y.7, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 858665814, i32 1776255129
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1752394018, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) @n)
  br label %7

7:                                                ; preds = %.backedge, %0
  %.086 = phi i64 [ 0, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i64 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i64 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i64 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i64 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i64 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i64 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i64 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.0 = phi i32 [ 1913662985, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1913662985, label %8
    i32 8601566, label %12
    i32 -1817622428, label %22
    i32 1830029140, label %36
    i32 1721121863, label %37
    i32 514666752, label %39
    i32 1597234677, label %49
    i32 -915841832, label %65
    i32 571027453, label %66
    i32 1608762958, label %76
    i32 1088016053, label %88
    i32 47712076, label %90
    i32 -2016018682, label %101
    i32 611121552, label %111
    i32 -1320634530, label %123
    i32 792781074, label %124
    i32 -1560808382, label %134
    i32 -1561181190, label %144
    i32 -1247975805, label %145
    i32 2080438607, label %146
    i32 -691549215, label %149
    i32 -1064533134, label %150
    i32 -214899502, label %153
    i32 -344692607, label %157
    i32 -1446532846, label %159
    i32 678673283, label %160
    i32 906594756, label %161
    i32 -867027289, label %164
    i32 2141547622, label %168
    i32 2123868618, label %178
    i32 -987904985, label %189
    i32 421731811, label %190
    i32 1513062913, label %192
    i32 -1551756373, label %202
    i32 -209738505, label %214
    i32 -183075021, label %215
    i32 1623617163, label %218
    i32 -1304087772, label %228
    i32 -405633328, label %243
    i32 506553821, label %245
    i32 -2028169786, label %247
    i32 286929125, label %257
    i32 955154674, label %267
    i32 2102725158, label %268
    i32 -278625355, label %270
    i32 1081080238, label %280
    i32 245754731, label %291
    i32 -740813110, label %292
    i32 -1741264777, label %296
    i32 -1016803311, label %303
    i32 -1260256583, label %308
    i32 -2076176790, label %318
    i32 1750048599, label %336
    i32 -778371307, label %338
    i32 -1324334252, label %341
    i32 1295030555, label %351
    i32 -1466547622, label %362
    i32 416794453, label %363
    i32 65642123, label %373
    i32 210139260, label %384
    i32 -1714115456, label %386
    i32 783168826, label %389
    i32 -1466298218, label %391
    i32 -1777578215, label %401
    i32 -1678354296, label %412
    i32 1137795093, label %414
    i32 -1302683732, label %417
    i32 -231354987, label %419
    i32 -1871060668, label %422
    i32 -723318297, label %425
    i32 1978475171, label %427
    i32 136282922, label %428
    i32 1375036400, label %430
    i32 151476645, label %434
    i32 -1055237795, label %436
    i32 -451020064, label %446
    i32 -356992986, label %457
    i32 1527106447, label %458
    i32 -221405186, label %460
    i32 -837661665, label %461
    i32 -411287549, label %462
    i32 -1817716151, label %467
    i32 1779816563, label %474
    i32 660530425, label %475
    i32 834569127, label %478
    i32 -1074126266, label %479
    i32 -1703867020, label %481
    i32 109550986, label %484
    i32 2025444722, label %488
    i32 905776589, label %489
    i32 -402460284, label %491
    i32 -1268577134, label %499
    i32 1605301089, label %501
    i32 1575530269, label %502
    i32 -92496076, label %503
  ]

.backedge:                                        ; preds = %7, %503, %502, %501, %499, %491, %489, %488, %484, %481, %479, %478, %475, %474, %467, %462, %460, %458, %457, %446, %436, %434, %430, %428, %427, %425, %422, %419, %417, %414, %412, %401, %391, %389, %386, %384, %373, %363, %362, %351, %341, %338, %336, %318, %308, %303, %296, %292, %291, %280, %270, %268, %267, %257, %247, %245, %243, %228, %218, %215, %214, %202, %192, %190, %189, %178, %168, %164, %161, %160, %159, %157, %153, %150, %149, %146, %145, %144, %134, %124, %123, %111, %101, %90, %88, %76, %66, %65, %49, %39, %37, %36, %22, %12, %8
  %.086.be = phi i64 [ %.086, %7 ], [ %.086, %503 ], [ %.086, %502 ], [ %.086, %501 ], [ %.086, %499 ], [ %.086, %491 ], [ 0, %489 ], [ %.086, %488 ], [ %.086, %484 ], [ 0, %481 ], [ %480, %479 ], [ %.086, %478 ], [ %.086, %475 ], [ %.086, %474 ], [ 0, %467 ], [ %.086, %462 ], [ %.086, %460 ], [ %459, %458 ], [ %.086, %457 ], [ %.086, %446 ], [ %.086, %436 ], [ %.086, %434 ], [ %.086, %430 ], [ %.086, %428 ], [ %.086, %427 ], [ %.086, %425 ], [ %.086, %422 ], [ %.086, %419 ], [ %.086, %417 ], [ %.086, %414 ], [ %.086, %412 ], [ %.086, %401 ], [ %.086, %391 ], [ %.086, %389 ], [ %.086, %386 ], [ %.086, %384 ], [ %.086, %373 ], [ %.086, %363 ], [ %.086, %362 ], [ %.086, %351 ], [ %.086, %341 ], [ %.086, %338 ], [ %.086, %336 ], [ %.086, %318 ], [ %.086, %308 ], [ %.086, %303 ], [ %.086, %296 ], [ %.086, %292 ], [ %.086, %291 ], [ 0, %280 ], [ %.086, %270 ], [ %269, %268 ], [ %.086, %267 ], [ %.086, %257 ], [ %.086, %247 ], [ %.086, %245 ], [ %.086, %243 ], [ %.086, %228 ], [ %.086, %218 ], [ %.086, %215 ], [ %.086, %214 ], [ 0, %202 ], [ %.086, %192 ], [ %.086, %190 ], [ %.086, %189 ], [ %179, %178 ], [ %.086, %168 ], [ %.086, %164 ], [ %.086, %161 ], [ 0, %160 ], [ %.086, %159 ], [ %158, %157 ], [ %.086, %153 ], [ %.086, %150 ], [ 0, %149 ], [ %.086, %146 ], [ %.neg91, %145 ], [ %.086, %144 ], [ %.086, %134 ], [ %.086, %124 ], [ %.086, %123 ], [ %.086, %111 ], [ %.086, %101 ], [ %.086, %90 ], [ %.086, %88 ], [ %.086, %76 ], [ %.086, %66 ], [ %.086, %65 ], [ 0, %49 ], [ %.086, %39 ], [ %38, %37 ], [ %.086, %36 ], [ %.086, %22 ], [ %.086, %12 ], [ %.086, %8 ]
  %.084.be = phi i64 [ %.084, %7 ], [ %.084, %503 ], [ %.084, %502 ], [ %.084, %501 ], [ %.084, %499 ], [ %.084, %491 ], [ %.084, %489 ], [ %.084, %488 ], [ %.084, %484 ], [ %.084, %481 ], [ %.084, %479 ], [ %.084, %478 ], [ %.084, %475 ], [ %.084, %474 ], [ %.084, %467 ], [ %.084, %462 ], [ %.084, %460 ], [ %.084, %458 ], [ %.084, %457 ], [ %.084, %446 ], [ %.084, %436 ], [ %.084, %434 ], [ %.084, %430 ], [ %429, %428 ], [ %.084, %427 ], [ %.084, %425 ], [ %.084, %422 ], [ %.084, %419 ], [ %.084, %417 ], [ %.084, %414 ], [ %.084, %412 ], [ %.084, %401 ], [ %.084, %391 ], [ %.084, %389 ], [ %.084, %386 ], [ %.084, %384 ], [ %.084, %373 ], [ %.084, %363 ], [ %.084, %362 ], [ %.084, %351 ], [ %.084, %341 ], [ %.084, %338 ], [ %.084, %336 ], [ %.084, %318 ], [ %.084, %308 ], [ %.084, %303 ], [ 0, %296 ], [ %.084, %292 ], [ %.084, %291 ], [ %.084, %280 ], [ %.084, %270 ], [ %.084, %268 ], [ %.084, %267 ], [ %.084, %257 ], [ %.084, %247 ], [ %.084, %245 ], [ %.084, %243 ], [ %.084, %228 ], [ %.084, %218 ], [ %.084, %215 ], [ %.084, %214 ], [ %.084, %202 ], [ %.084, %192 ], [ %.084, %190 ], [ %.084, %189 ], [ %.084, %178 ], [ %.084, %168 ], [ %.084, %164 ], [ %.084, %161 ], [ %.084, %160 ], [ %.084, %159 ], [ %.084, %157 ], [ %.084, %153 ], [ %.084, %150 ], [ %.084, %149 ], [ %.084, %146 ], [ %.084, %145 ], [ %.084, %144 ], [ %.084, %134 ], [ %.084, %124 ], [ %.084, %123 ], [ %.084, %111 ], [ %.084, %101 ], [ %.084, %90 ], [ %.084, %88 ], [ %.084, %76 ], [ %.084, %66 ], [ %.084, %65 ], [ %.084, %49 ], [ %.084, %39 ], [ %.084, %37 ], [ %.084, %36 ], [ %.084, %22 ], [ %.084, %12 ], [ %.084, %8 ]
  %.082.be = phi i64 [ %.082, %7 ], [ %.082, %503 ], [ %.082, %502 ], [ %.082, %501 ], [ %.082, %499 ], [ %.082, %491 ], [ %.082, %489 ], [ %.082, %488 ], [ %.082, %484 ], [ %.082, %481 ], [ %.082, %479 ], [ %.082, %478 ], [ %.082, %475 ], [ %.082, %474 ], [ %473, %467 ], [ %.082, %462 ], [ %.082, %460 ], [ %.082, %458 ], [ %.082, %457 ], [ %.082, %446 ], [ %.082, %436 ], [ %.082, %434 ], [ %.082, %430 ], [ %.082, %428 ], [ %.082, %427 ], [ %.082, %425 ], [ %.082, %422 ], [ %.082, %419 ], [ %.082, %417 ], [ %.082, %414 ], [ %.082, %412 ], [ %.082, %401 ], [ %.082, %391 ], [ %.082, %389 ], [ %.082, %386 ], [ %.082, %384 ], [ %.082, %373 ], [ %.082, %363 ], [ %.082, %362 ], [ %.082, %351 ], [ %.082, %341 ], [ %.082, %338 ], [ %.082, %336 ], [ %.082, %318 ], [ %.082, %308 ], [ %.082, %303 ], [ %.082, %296 ], [ %.082, %292 ], [ %.082, %291 ], [ %.082, %280 ], [ %.082, %270 ], [ %.082, %268 ], [ %.082, %267 ], [ %.082, %257 ], [ %.082, %247 ], [ %.082, %245 ], [ %.082, %243 ], [ %.082, %228 ], [ %.082, %218 ], [ %.082, %215 ], [ %.082, %214 ], [ %.082, %202 ], [ %.082, %192 ], [ %.082, %190 ], [ %.082, %189 ], [ %.082, %178 ], [ %.082, %168 ], [ %.082, %164 ], [ %.082, %161 ], [ %.082, %160 ], [ %.082, %159 ], [ %.082, %157 ], [ %.082, %153 ], [ %.082, %150 ], [ %.082, %149 ], [ %.082, %146 ], [ %.082, %145 ], [ %.082, %144 ], [ %.082, %134 ], [ %.082, %124 ], [ %.082, %123 ], [ %.082, %111 ], [ %.082, %101 ], [ %.082, %90 ], [ %.082, %88 ], [ %.082, %76 ], [ %.082, %66 ], [ %.082, %65 ], [ %55, %49 ], [ %.082, %39 ], [ %.082, %37 ], [ %.082, %36 ], [ %.082, %22 ], [ %.082, %12 ], [ %.082, %8 ]
  %.080.be = phi i64 [ %.080, %7 ], [ %.080, %503 ], [ %.080, %502 ], [ %.080, %501 ], [ %.080, %499 ], [ %.080, %491 ], [ %.080, %489 ], [ %.080, %488 ], [ %.080, %484 ], [ %.080, %481 ], [ %.080, %479 ], [ %.080, %478 ], [ %.080, %475 ], [ %.080, %474 ], [ %.080, %467 ], [ %.080, %462 ], [ %.080, %460 ], [ %.080, %458 ], [ %.080, %457 ], [ %.080, %446 ], [ %.080, %436 ], [ %.080, %434 ], [ %.080, %430 ], [ %.080, %428 ], [ %.080, %427 ], [ %.080, %425 ], [ %.080, %422 ], [ %.080, %419 ], [ %.080, %417 ], [ %.080, %414 ], [ %.080, %412 ], [ %.080, %401 ], [ %.080, %391 ], [ %.080, %389 ], [ %.080, %386 ], [ %.080, %384 ], [ %.080, %373 ], [ %.080, %363 ], [ %.080, %362 ], [ %.080, %351 ], [ %.080, %341 ], [ %.080, %338 ], [ %.080, %336 ], [ %.080, %318 ], [ %.080, %308 ], [ %.080, %303 ], [ %.080, %296 ], [ %.080, %292 ], [ %.080, %291 ], [ %.080, %280 ], [ %.080, %270 ], [ %.080, %268 ], [ %.080, %267 ], [ %.080, %257 ], [ %.080, %247 ], [ %.080, %245 ], [ %.080, %243 ], [ %.080, %228 ], [ %.080, %218 ], [ %.080, %215 ], [ %.080, %214 ], [ %.080, %202 ], [ %.080, %192 ], [ %191, %190 ], [ %.080, %189 ], [ %.080, %178 ], [ %.080, %168 ], [ %167, %164 ], [ %.080, %161 ], [ %.080, %160 ], [ %.080, %159 ], [ %.080, %157 ], [ %156, %153 ], [ %.080, %150 ], [ %.080, %149 ], [ 0, %146 ], [ %.080, %145 ], [ %.080, %144 ], [ %.080, %134 ], [ %.080, %124 ], [ %.080, %123 ], [ %.080, %111 ], [ %.080, %101 ], [ %.080, %90 ], [ %.080, %88 ], [ %.080, %76 ], [ %.080, %66 ], [ %.080, %65 ], [ %.080, %49 ], [ %.080, %39 ], [ %.080, %37 ], [ %.080, %36 ], [ %.080, %22 ], [ %.080, %12 ], [ %.080, %8 ]
  %.078.be = phi i64 [ %.078, %7 ], [ %.078, %503 ], [ %.078, %502 ], [ %.078, %501 ], [ %.078, %499 ], [ %.078, %491 ], [ %.078, %489 ], [ %.078, %488 ], [ %.078, %484 ], [ %.078, %481 ], [ %.078, %479 ], [ %.078, %478 ], [ %.078, %475 ], [ %.078, %474 ], [ %.078, %467 ], [ %.078, %462 ], [ %.078, %460 ], [ %.078, %458 ], [ %.078, %457 ], [ %.078, %446 ], [ %.078, %436 ], [ %.078, %434 ], [ %.078, %430 ], [ %.078, %428 ], [ %.078, %427 ], [ %.078, %425 ], [ %.078, %422 ], [ %.078, %419 ], [ %.078, %417 ], [ %.078, %414 ], [ %.078, %412 ], [ %.078, %401 ], [ %.078, %391 ], [ %.078, %389 ], [ %.078, %386 ], [ %.078, %384 ], [ %.078, %373 ], [ %.078, %363 ], [ %.078, %362 ], [ %.078, %351 ], [ %.078, %341 ], [ %.078, %338 ], [ %.078, %336 ], [ %.078, %318 ], [ %.078, %308 ], [ %.078, %303 ], [ %301, %296 ], [ %.078, %292 ], [ %.078, %291 ], [ %.078, %280 ], [ %.078, %270 ], [ %.078, %268 ], [ %.078, %267 ], [ %.078, %257 ], [ %.078, %247 ], [ %.078, %245 ], [ %.078, %243 ], [ %.078, %228 ], [ %.078, %218 ], [ %.078, %215 ], [ %.078, %214 ], [ %.078, %202 ], [ %.078, %192 ], [ %.078, %190 ], [ %.078, %189 ], [ %.078, %178 ], [ %.078, %168 ], [ %.078, %164 ], [ %.078, %161 ], [ %.078, %160 ], [ %.078, %159 ], [ %.078, %157 ], [ %.078, %153 ], [ %.078, %150 ], [ %.078, %149 ], [ %.078, %146 ], [ %.078, %145 ], [ %.078, %144 ], [ %.078, %134 ], [ %.078, %124 ], [ %.078, %123 ], [ %.078, %111 ], [ %.078, %101 ], [ %.078, %90 ], [ %.078, %88 ], [ %.078, %76 ], [ %.078, %66 ], [ %.078, %65 ], [ %.078, %49 ], [ %.078, %39 ], [ %.078, %37 ], [ %.078, %36 ], [ %.078, %22 ], [ %.078, %12 ], [ %.078, %8 ]
  %.076.be = phi i64 [ %.076, %7 ], [ %.076, %503 ], [ %.076, %502 ], [ %.076, %501 ], [ %.076, %499 ], [ %.076, %491 ], [ %.076, %489 ], [ %.076, %488 ], [ %.076, %484 ], [ %.076, %481 ], [ %.076, %479 ], [ %.076, %478 ], [ %.076, %475 ], [ %.076, %474 ], [ %.076, %467 ], [ %.076, %462 ], [ %.076, %460 ], [ %.076, %458 ], [ %.076, %457 ], [ %.076, %446 ], [ %.076, %436 ], [ %.076, %434 ], [ %.076, %430 ], [ %.076, %428 ], [ %.076, %427 ], [ %.076, %425 ], [ %.076, %422 ], [ %.076, %419 ], [ %.076, %417 ], [ %.076, %414 ], [ %.076, %412 ], [ %.076, %401 ], [ %.076, %391 ], [ %.076, %389 ], [ %.076, %386 ], [ %.076, %384 ], [ %.076, %373 ], [ %.076, %363 ], [ %.076, %362 ], [ %.076, %351 ], [ %.076, %341 ], [ %.076, %338 ], [ %.076, %336 ], [ %.076, %318 ], [ %.076, %308 ], [ %.076, %303 ], [ %302, %296 ], [ %.076, %292 ], [ %.076, %291 ], [ %.076, %280 ], [ %.076, %270 ], [ %.076, %268 ], [ %.076, %267 ], [ %.076, %257 ], [ %.076, %247 ], [ %.076, %245 ], [ %.076, %243 ], [ %.076, %228 ], [ %.076, %218 ], [ %.076, %215 ], [ %.076, %214 ], [ %.076, %202 ], [ %.076, %192 ], [ %.076, %190 ], [ %.076, %189 ], [ %.076, %178 ], [ %.076, %168 ], [ %.076, %164 ], [ %.076, %161 ], [ %.076, %160 ], [ %.076, %159 ], [ %.076, %157 ], [ %.076, %153 ], [ %.076, %150 ], [ %.076, %149 ], [ %.076, %146 ], [ %.076, %145 ], [ %.076, %144 ], [ %.076, %134 ], [ %.076, %124 ], [ %.076, %123 ], [ %.076, %111 ], [ %.076, %101 ], [ %.076, %90 ], [ %.076, %88 ], [ %.076, %76 ], [ %.076, %66 ], [ %.076, %65 ], [ %.076, %49 ], [ %.076, %39 ], [ %.076, %37 ], [ %.076, %36 ], [ %.076, %22 ], [ %.076, %12 ], [ %.076, %8 ]
  %.074.be = phi i64 [ %.074, %7 ], [ %.074, %503 ], [ %.074, %502 ], [ %.074, %501 ], [ %.074, %499 ], [ %495, %491 ], [ %.074, %489 ], [ %.074, %488 ], [ %.074, %484 ], [ %.074, %481 ], [ %.074, %479 ], [ %.074, %478 ], [ %.074, %475 ], [ %.074, %474 ], [ %.074, %467 ], [ %.074, %462 ], [ %.074, %460 ], [ %.074, %458 ], [ %.074, %457 ], [ %.074, %446 ], [ %.074, %436 ], [ %.074, %434 ], [ %.074, %430 ], [ %.074, %428 ], [ %.074, %427 ], [ %.074, %425 ], [ %.074, %422 ], [ %.074, %419 ], [ %.074, %417 ], [ %.074, %414 ], [ %.074, %412 ], [ %.074, %401 ], [ %.074, %391 ], [ %.074, %389 ], [ %.074, %386 ], [ %.074, %384 ], [ %.074, %373 ], [ %.074, %363 ], [ %.074, %362 ], [ %.074, %351 ], [ %.074, %341 ], [ %.074, %338 ], [ %.074, %336 ], [ %322, %318 ], [ %.074, %308 ], [ %.074, %303 ], [ %.074, %296 ], [ %.074, %292 ], [ %.074, %291 ], [ %.074, %280 ], [ %.074, %270 ], [ %.074, %268 ], [ %.074, %267 ], [ %.074, %257 ], [ %.074, %247 ], [ %.074, %245 ], [ %.074, %243 ], [ %.074, %228 ], [ %.074, %218 ], [ %.074, %215 ], [ %.074, %214 ], [ %.074, %202 ], [ %.074, %192 ], [ %.074, %190 ], [ %.074, %189 ], [ %.074, %178 ], [ %.074, %168 ], [ %.074, %164 ], [ %.074, %161 ], [ %.074, %160 ], [ %.074, %159 ], [ %.074, %157 ], [ %.074, %153 ], [ %.074, %150 ], [ %.074, %149 ], [ %.074, %146 ], [ %.074, %145 ], [ %.074, %144 ], [ %.074, %134 ], [ %.074, %124 ], [ %.074, %123 ], [ %.074, %111 ], [ %.074, %101 ], [ %.074, %90 ], [ %.074, %88 ], [ %.074, %76 ], [ %.074, %66 ], [ %.074, %65 ], [ %.074, %49 ], [ %.074, %39 ], [ %.074, %37 ], [ %.074, %36 ], [ %.074, %22 ], [ %.074, %12 ], [ %.074, %8 ]
  %.072.be = phi i64 [ %.072, %7 ], [ %.072, %503 ], [ %.072, %502 ], [ %.072, %501 ], [ %.072, %499 ], [ %498, %491 ], [ %.072, %489 ], [ %.072, %488 ], [ %.072, %484 ], [ %.072, %481 ], [ %.072, %479 ], [ %.072, %478 ], [ %.072, %475 ], [ %.072, %474 ], [ %.072, %467 ], [ %.072, %462 ], [ %.072, %460 ], [ %.072, %458 ], [ %.072, %457 ], [ %.072, %446 ], [ %.072, %436 ], [ %.072, %434 ], [ %.072, %430 ], [ %.072, %428 ], [ %.072, %427 ], [ %.072, %425 ], [ %.072, %422 ], [ %.072, %419 ], [ %.072, %417 ], [ %.072, %414 ], [ %.072, %412 ], [ %.072, %401 ], [ %.072, %391 ], [ %.072, %389 ], [ %.072, %386 ], [ %.072, %384 ], [ %.072, %373 ], [ %.072, %363 ], [ %.072, %362 ], [ %.072, %351 ], [ %.072, %341 ], [ %.072, %338 ], [ %.072, %336 ], [ %325, %318 ], [ %.072, %308 ], [ %.072, %303 ], [ %.072, %296 ], [ %.072, %292 ], [ %.072, %291 ], [ %.072, %280 ], [ %.072, %270 ], [ %.072, %268 ], [ %.072, %267 ], [ %.072, %257 ], [ %.072, %247 ], [ %.072, %245 ], [ %.072, %243 ], [ %.072, %228 ], [ %.072, %218 ], [ %.072, %215 ], [ %.072, %214 ], [ %.072, %202 ], [ %.072, %192 ], [ %.072, %190 ], [ %.072, %189 ], [ %.072, %178 ], [ %.072, %168 ], [ %.072, %164 ], [ %.072, %161 ], [ %.072, %160 ], [ %.072, %159 ], [ %.072, %157 ], [ %.072, %153 ], [ %.072, %150 ], [ %.072, %149 ], [ %.072, %146 ], [ %.072, %145 ], [ %.072, %144 ], [ %.072, %134 ], [ %.072, %124 ], [ %.072, %123 ], [ %.072, %111 ], [ %.072, %101 ], [ %.072, %90 ], [ %.072, %88 ], [ %.072, %76 ], [ %.072, %66 ], [ %.072, %65 ], [ %.072, %49 ], [ %.072, %39 ], [ %.072, %37 ], [ %.072, %36 ], [ %.072, %22 ], [ %.072, %12 ], [ %.072, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ -451020064, %503 ], [ -1777578215, %502 ], [ 65642123, %501 ], [ 1295030555, %499 ], [ -2076176790, %491 ], [ 1081080238, %489 ], [ 286929125, %488 ], [ -1304087772, %484 ], [ -1551756373, %481 ], [ 2123868618, %479 ], [ -1560808382, %478 ], [ 611121552, %475 ], [ 1608762958, %474 ], [ 1597234677, %467 ], [ -1817622428, %462 ], [ -837661665, %460 ], [ -740813110, %458 ], [ 1527106447, %457 ], [ %456, %446 ], [ %445, %436 ], [ -1055237795, %434 ], [ %433, %430 ], [ -1016803311, %428 ], [ 136282922, %427 ], [ 1978475171, %425 ], [ %424, %422 ], [ %421, %419 ], [ -231354987, %417 ], [ %416, %414 ], [ %413, %412 ], [ %411, %401 ], [ %400, %391 ], [ -1466298218, %389 ], [ %388, %386 ], [ %385, %384 ], [ %383, %373 ], [ %372, %363 ], [ 416794453, %362 ], [ %361, %351 ], [ %350, %341 ], [ %340, %338 ], [ %337, %336 ], [ %335, %318 ], [ %317, %308 ], [ %307, %303 ], [ -1016803311, %296 ], [ %295, %292 ], [ -740813110, %291 ], [ %290, %280 ], [ %279, %270 ], [ -183075021, %268 ], [ 2102725158, %267 ], [ %266, %257 ], [ %256, %247 ], [ -2028169786, %245 ], [ %244, %243 ], [ %242, %228 ], [ %227, %218 ], [ %217, %215 ], [ -183075021, %214 ], [ %213, %202 ], [ %201, %192 ], [ 1513062913, %190 ], [ 906594756, %189 ], [ %188, %178 ], [ %177, %168 ], [ 2141547622, %164 ], [ %163, %161 ], [ 906594756, %160 ], [ 1513062913, %159 ], [ -1064533134, %157 ], [ -344692607, %153 ], [ %152, %150 ], [ -1064533134, %149 ], [ %148, %146 ], [ 571027453, %145 ], [ -1247975805, %144 ], [ %143, %134 ], [ %133, %124 ], [ -837661665, %123 ], [ %122, %111 ], [ %110, %101 ], [ %100, %90 ], [ %89, %88 ], [ %87, %76 ], [ %75, %66 ], [ 571027453, %65 ], [ %64, %49 ], [ %48, %39 ], [ 1913662985, %37 ], [ 1721121863, %36 ], [ %35, %22 ], [ %21, %12 ], [ %11, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = load i64, i64* @n, align 8
  %10 = icmp slt i64 %.086, %9
  %11 = select i1 %10, i32 8601566, i32 514666752
  br label %.backedge

12:                                               ; preds = %7
  %13 = load i32, i32* @x.8, align 4
  %14 = load i32, i32* @y.9, align 4
  %15 = add i32 %13, -1
  %16 = mul i32 %15, %13
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %19, %18
  %21 = select i1 %20, i32 -1817622428, i32 -411287549
  br label %.backedge

22:                                               ; preds = %7
  %23 = getelementptr inbounds [1000 x i64], [1000 x i64]* @x, i64 0, i64 %.086
  %24 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %23)
  %25 = getelementptr inbounds [1000 x i64], [1000 x i64]* @y, i64 0, i64 %.086
  %26 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %24, i64* nonnull dereferenceable(8) %25)
  %27 = load i32, i32* @x.8, align 4
  %28 = load i32, i32* @y.9, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 1830029140, i32 -411287549
  br label %.backedge

36:                                               ; preds = %7
  br label %.backedge

37:                                               ; preds = %7
  %38 = add i64 %.086, 1
  br label %.backedge

39:                                               ; preds = %7
  %40 = load i32, i32* @x.8, align 4
  %41 = load i32, i32* @y.9, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 1597234677, i32 -1817716151
  br label %.backedge

49:                                               ; preds = %7
  %50 = load i64, i64* getelementptr inbounds ([1000 x i64], [1000 x i64]* @x, i64 0, i64 0), align 16
  %51 = tail call i64 @_ZSt3absx(i64 %50)
  %52 = load i64, i64* getelementptr inbounds ([1000 x i64], [1000 x i64]* @y, i64 0, i64 0), align 16
  %53 = tail call i64 @_ZSt3absx(i64 %52)
  %54 = add i64 %53, %51
  %55 = srem i64 %54, 2
  %56 = load i32, i32* @x.8, align 4
  %57 = load i32, i32* @y.9, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 -915841832, i32 -1817716151
  br label %.backedge

65:                                               ; preds = %7
  br label %.backedge

66:                                               ; preds = %7
  %67 = load i32, i32* @x.8, align 4
  %68 = load i32, i32* @y.9, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 1608762958, i32 1779816563
  br label %.backedge

76:                                               ; preds = %7
  %77 = load i64, i64* @n, align 8
  %78 = icmp slt i64 %.086, %77
  store i1 %78, i1* %5, align 1
  %79 = load i32, i32* @x.8, align 4
  %80 = load i32, i32* @y.9, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 1088016053, i32 1779816563
  br label %.backedge

88:                                               ; preds = %7
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %89 = select i1 %.0..0..0., i32 47712076, i32 2080438607
  br label %.backedge

90:                                               ; preds = %7
  %91 = srem i64 %.082, 2
  %92 = getelementptr inbounds [1000 x i64], [1000 x i64]* @x, i64 0, i64 %.086
  %93 = load i64, i64* %92, align 8
  %94 = tail call i64 @_ZSt3absx(i64 %93)
  %95 = getelementptr inbounds [1000 x i64], [1000 x i64]* @y, i64 0, i64 %.086
  %96 = load i64, i64* %95, align 8
  %97 = tail call i64 @_ZSt3absx(i64 %96)
  %98 = add i64 %97, %94
  %99 = srem i64 %98, 2
  %.not92 = icmp eq i64 %91, %99
  %100 = select i1 %.not92, i32 792781074, i32 -2016018682
  br label %.backedge

101:                                              ; preds = %7
  %102 = load i32, i32* @x.8, align 4
  %103 = load i32, i32* @y.9, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 611121552, i32 660530425
  br label %.backedge

111:                                              ; preds = %7
  %112 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %113 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %112, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %114 = load i32, i32* @x.8, align 4
  %115 = load i32, i32* @y.9, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 -1320634530, i32 660530425
  br label %.backedge

123:                                              ; preds = %7
  br label %.backedge

124:                                              ; preds = %7
  %125 = load i32, i32* @x.8, align 4
  %126 = load i32, i32* @y.9, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 -1560808382, i32 834569127
  br label %.backedge

134:                                              ; preds = %7
  %135 = load i32, i32* @x.8, align 4
  %136 = load i32, i32* @y.9, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 -1561181190, i32 834569127
  br label %.backedge

144:                                              ; preds = %7
  br label %.backedge

145:                                              ; preds = %7
  %.neg91 = add i64 %.086, 1
  br label %.backedge

146:                                              ; preds = %7
  %147 = and i64 %.082, 1
  %.not = icmp eq i64 %147, 0
  %148 = select i1 %.not, i32 678673283, i32 -691549215
  br label %.backedge

149:                                              ; preds = %7
  br label %.backedge

150:                                              ; preds = %7
  %151 = icmp slt i64 %.086, 35
  %152 = select i1 %151, i32 -214899502, i32 -1446532846
  br label %.backedge

153:                                              ; preds = %7
  %154 = shl nuw i64 1, %.086
  %155 = getelementptr inbounds [35 x i64], [35 x i64]* @d, i64 0, i64 %.086
  store i64 %154, i64* %155, align 8
  %156 = add i64 %.080, %154
  br label %.backedge

157:                                              ; preds = %7
  %158 = add i64 %.086, 1
  br label %.backedge

159:                                              ; preds = %7
  br label %.backedge

160:                                              ; preds = %7
  br label %.backedge

161:                                              ; preds = %7
  %162 = icmp slt i64 %.086, 34
  %163 = select i1 %162, i32 -867027289, i32 421731811
  br label %.backedge

164:                                              ; preds = %7
  %165 = shl nuw i64 1, %.086
  %166 = getelementptr inbounds [35 x i64], [35 x i64]* @d, i64 0, i64 %.086
  store i64 %165, i64* %166, align 8
  %167 = add i64 %.080, %165
  br label %.backedge

168:                                              ; preds = %7
  %169 = load i32, i32* @x.8, align 4
  %170 = load i32, i32* @y.9, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 2123868618, i32 -1074126266
  br label %.backedge

178:                                              ; preds = %7
  %179 = add i64 %.086, 1
  %180 = load i32, i32* @x.8, align 4
  %181 = load i32, i32* @y.9, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 -987904985, i32 -1074126266
  br label %.backedge

189:                                              ; preds = %7
  br label %.backedge

190:                                              ; preds = %7
  store i64 1, i64* getelementptr inbounds ([35 x i64], [35 x i64]* @d, i64 0, i64 34), align 16
  %191 = add i64 %.080, 1
  br label %.backedge

192:                                              ; preds = %7
  %193 = load i32, i32* @x.8, align 4
  %194 = load i32, i32* @y.9, align 4
  %195 = add i32 %193, -1
  %196 = mul i32 %195, %193
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %199, %198
  %201 = select i1 %200, i32 -1551756373, i32 -1703867020
  br label %.backedge

202:                                              ; preds = %7
  %203 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 35)
  %204 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %203, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %205 = load i32, i32* @x.8, align 4
  %206 = load i32, i32* @y.9, align 4
  %207 = add i32 %205, -1
  %208 = mul i32 %207, %205
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %211, %210
  %213 = select i1 %212, i32 -209738505, i32 -1703867020
  br label %.backedge

214:                                              ; preds = %7
  br label %.backedge

215:                                              ; preds = %7
  %216 = icmp slt i64 %.086, 35
  %217 = select i1 %216, i32 1623617163, i32 -278625355
  br label %.backedge

218:                                              ; preds = %7
  %219 = load i32, i32* @x.8, align 4
  %220 = load i32, i32* @y.9, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 -1304087772, i32 109550986
  br label %.backedge

228:                                              ; preds = %7
  %229 = getelementptr inbounds [35 x i64], [35 x i64]* @d, i64 0, i64 %.086
  %230 = load i64, i64* %229, align 8
  %231 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %230)
  %232 = add i64 %.086, 1
  %233 = icmp slt i64 %232, 35
  store i1 %233, i1* %4, align 1
  %234 = load i32, i32* @x.8, align 4
  %235 = load i32, i32* @y.9, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 -405633328, i32 109550986
  br label %.backedge

243:                                              ; preds = %7
  %.0..0..0.68 = load volatile i1, i1* %4, align 1
  %244 = select i1 %.0..0..0.68, i32 506553821, i32 -2028169786
  br label %.backedge

245:                                              ; preds = %7
  %246 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

247:                                              ; preds = %7
  %248 = load i32, i32* @x.8, align 4
  %249 = load i32, i32* @y.9, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 286929125, i32 2025444722
  br label %.backedge

257:                                              ; preds = %7
  %258 = load i32, i32* @x.8, align 4
  %259 = load i32, i32* @y.9, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 955154674, i32 2025444722
  br label %.backedge

267:                                              ; preds = %7
  br label %.backedge

268:                                              ; preds = %7
  %269 = add i64 %.086, 1
  br label %.backedge

270:                                              ; preds = %7
  %271 = load i32, i32* @x.8, align 4
  %272 = load i32, i32* @y.9, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 1081080238, i32 905776589
  br label %.backedge

280:                                              ; preds = %7
  %281 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %282 = load i32, i32* @x.8, align 4
  %283 = load i32, i32* @y.9, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 245754731, i32 905776589
  br label %.backedge

291:                                              ; preds = %7
  br label %.backedge

292:                                              ; preds = %7
  %293 = load i64, i64* @n, align 8
  %294 = icmp slt i64 %.086, %293
  %295 = select i1 %294, i32 -1741264777, i32 -221405186
  br label %.backedge

296:                                              ; preds = %7
  %297 = getelementptr inbounds [1000 x i64], [1000 x i64]* @x, i64 0, i64 %.086
  %298 = load i64, i64* %297, align 8
  %299 = getelementptr inbounds [1000 x i64], [1000 x i64]* @y, i64 0, i64 %.086
  %300 = load i64, i64* %299, align 8
  %301 = sub i64 %298, %300
  %302 = add i64 %300, %298
  br label %.backedge

303:                                              ; preds = %7
  %304 = or i64 %.082, -2
  %305 = add nsw i64 %304, 36
  %306 = icmp slt i64 %.084, %305
  %307 = select i1 %306, i32 -1260256583, i32 1375036400
  br label %.backedge

308:                                              ; preds = %7
  %309 = load i32, i32* @x.8, align 4
  %310 = load i32, i32* @y.9, align 4
  %311 = add i32 %309, -1
  %312 = mul i32 %311, %309
  %313 = and i32 %312, 1
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %315, %314
  %317 = select i1 %316, i32 -2076176790, i32 -402460284
  br label %.backedge

318:                                              ; preds = %7
  %319 = sub i64 %.080, %.078
  %320 = add i64 %.084, 1
  %321 = ashr i64 %319, %320
  %322 = srem i64 %321, 2
  %323 = sub i64 %.080, %.076
  %324 = ashr i64 %323, %320
  %325 = srem i64 %324, 2
  %326 = icmp eq i64 %322, 0
  store i1 %326, i1* %3, align 1
  %327 = load i32, i32* @x.8, align 4
  %328 = load i32, i32* @y.9, align 4
  %329 = add i32 %327, -1
  %330 = mul i32 %329, %327
  %331 = and i32 %330, 1
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %333, %332
  %335 = select i1 %334, i32 1750048599, i32 -402460284
  br label %.backedge

336:                                              ; preds = %7
  %.0..0..0.69 = load volatile i1, i1* %3, align 1
  %337 = select i1 %.0..0..0.69, i32 -778371307, i32 416794453
  br label %.backedge

338:                                              ; preds = %7
  %339 = icmp eq i64 %.072, 0
  %340 = select i1 %339, i32 -1324334252, i32 416794453
  br label %.backedge

341:                                              ; preds = %7
  %342 = load i32, i32* @x.8, align 4
  %343 = load i32, i32* @y.9, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 1295030555, i32 -1268577134
  br label %.backedge

351:                                              ; preds = %7
  %352 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %353 = load i32, i32* @x.8, align 4
  %354 = load i32, i32* @y.9, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 -1466547622, i32 -1268577134
  br label %.backedge

362:                                              ; preds = %7
  br label %.backedge

363:                                              ; preds = %7
  %364 = load i32, i32* @x.8, align 4
  %365 = load i32, i32* @y.9, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 65642123, i32 1605301089
  br label %.backedge

373:                                              ; preds = %7
  %374 = icmp eq i64 %.074, 0
  store i1 %374, i1* %2, align 1
  %375 = load i32, i32* @x.8, align 4
  %376 = load i32, i32* @y.9, align 4
  %377 = add i32 %375, -1
  %378 = mul i32 %377, %375
  %379 = and i32 %378, 1
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %381, %380
  %383 = select i1 %382, i32 210139260, i32 1605301089
  br label %.backedge

384:                                              ; preds = %7
  %.0..0..0.70 = load volatile i1, i1* %2, align 1
  %385 = select i1 %.0..0..0.70, i32 -1714115456, i32 -1466298218
  br label %.backedge

386:                                              ; preds = %7
  %387 = icmp eq i64 %.072, 1
  %388 = select i1 %387, i32 783168826, i32 -1466298218
  br label %.backedge

389:                                              ; preds = %7
  %390 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

391:                                              ; preds = %7
  %392 = load i32, i32* @x.8, align 4
  %393 = load i32, i32* @y.9, align 4
  %394 = add i32 %392, -1
  %395 = mul i32 %394, %392
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %398, %397
  %400 = select i1 %399, i32 -1777578215, i32 1575530269
  br label %.backedge

401:                                              ; preds = %7
  %402 = icmp eq i64 %.074, 1
  store i1 %402, i1* %1, align 1
  %403 = load i32, i32* @x.8, align 4
  %404 = load i32, i32* @y.9, align 4
  %405 = add i32 %403, -1
  %406 = mul i32 %405, %403
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %409, %408
  %411 = select i1 %410, i32 -1678354296, i32 1575530269
  br label %.backedge

412:                                              ; preds = %7
  %.0..0..0.71 = load volatile i1, i1* %1, align 1
  %413 = select i1 %.0..0..0.71, i32 1137795093, i32 -231354987
  br label %.backedge

414:                                              ; preds = %7
  %415 = icmp eq i64 %.072, 0
  %416 = select i1 %415, i32 -1302683732, i32 -231354987
  br label %.backedge

417:                                              ; preds = %7
  %418 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  br label %.backedge

419:                                              ; preds = %7
  %420 = icmp eq i64 %.074, 1
  %421 = select i1 %420, i32 -1871060668, i32 1978475171
  br label %.backedge

422:                                              ; preds = %7
  %423 = icmp eq i64 %.072, 1
  %424 = select i1 %423, i32 -723318297, i32 1978475171
  br label %.backedge

425:                                              ; preds = %7
  %426 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %.backedge

427:                                              ; preds = %7
  br label %.backedge

428:                                              ; preds = %7
  %429 = add i64 %.084, 1
  br label %.backedge

430:                                              ; preds = %7
  %431 = and i64 %.082, 1
  %432 = icmp eq i64 %431, 0
  %433 = select i1 %432, i32 151476645, i32 -1055237795
  br label %.backedge

434:                                              ; preds = %7
  %435 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

436:                                              ; preds = %7
  %437 = load i32, i32* @x.8, align 4
  %438 = load i32, i32* @y.9, align 4
  %439 = add i32 %437, -1
  %440 = mul i32 %439, %437
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %443, %442
  %445 = select i1 %444, i32 -451020064, i32 -92496076
  br label %.backedge

446:                                              ; preds = %7
  %447 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %448 = load i32, i32* @x.8, align 4
  %449 = load i32, i32* @y.9, align 4
  %450 = add i32 %448, -1
  %451 = mul i32 %450, %448
  %452 = and i32 %451, 1
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %454, %453
  %456 = select i1 %455, i32 -356992986, i32 -92496076
  br label %.backedge

457:                                              ; preds = %7
  br label %.backedge

458:                                              ; preds = %7
  %459 = add i64 %.086, 1
  br label %.backedge

460:                                              ; preds = %7
  br label %.backedge

461:                                              ; preds = %7
  ret i32 0

462:                                              ; preds = %7
  %463 = getelementptr inbounds [1000 x i64], [1000 x i64]* @x, i64 0, i64 %.086
  %464 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %463)
  %465 = getelementptr inbounds [1000 x i64], [1000 x i64]* @y, i64 0, i64 %.086
  %466 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %464, i64* nonnull dereferenceable(8) %465)
  br label %.backedge

467:                                              ; preds = %7
  %468 = load i64, i64* getelementptr inbounds ([1000 x i64], [1000 x i64]* @x, i64 0, i64 0), align 16
  %469 = tail call i64 @_ZSt3absx(i64 %468)
  %470 = load i64, i64* getelementptr inbounds ([1000 x i64], [1000 x i64]* @y, i64 0, i64 0), align 16
  %471 = tail call i64 @_ZSt3absx(i64 %470)
  %472 = add i64 %471, %469
  %473 = srem i64 %472, 2
  br label %.backedge

474:                                              ; preds = %7
  br label %.backedge

475:                                              ; preds = %7
  %476 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %477 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %476, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

478:                                              ; preds = %7
  br label %.backedge

479:                                              ; preds = %7
  %480 = add i64 %.086, 1
  br label %.backedge

481:                                              ; preds = %7
  %482 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 35)
  %483 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %482, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

484:                                              ; preds = %7
  %485 = getelementptr inbounds [35 x i64], [35 x i64]* @d, i64 0, i64 %.086
  %486 = load i64, i64* %485, align 8
  %487 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %486)
  br label %.backedge

488:                                              ; preds = %7
  br label %.backedge

489:                                              ; preds = %7
  %490 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

491:                                              ; preds = %7
  %492 = sub i64 %.080, %.078
  %493 = add i64 %.084, 1
  %494 = ashr i64 %492, %493
  %495 = srem i64 %494, 2
  %496 = sub i64 %.080, %.076
  %497 = ashr i64 %496, %493
  %498 = srem i64 %497, 2
  br label %.backedge

499:                                              ; preds = %7
  %500 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

501:                                              ; preds = %7
  br label %.backedge

502:                                              ; preds = %7
  br label %.backedge

503:                                              ; preds = %7
  %504 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt3absx(i64 %0) local_unnamed_addr #5 comdat {
  %2 = alloca i64, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.10, align 4
  %6 = load i32, i32* @y.11, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 147898830, i32 -1170754655
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %1
  %.0.ph = phi i32 [ 707063876, %1 ], [ %.0.ph.be, %.outer.backedge ]
  br label %14

14:                                               ; preds = %.outer, %14
  switch i32 %.0.ph, label %14 [
    i32 707063876, label %15
    i32 1411555892, label %.outer.backedge
    i32 147898830, label %18
    i32 -1170754655, label %20
  ]

15:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %16 = or i1 %.0..0..0., %.0..0..0.1
  %17 = select i1 %16, i32 1411555892, i32 -1170754655
  br label %.outer.backedge

18:                                               ; preds = %14
  %19 = tail call i64 @llvm.abs.i64(i64 %0, i1 false)
  store i64 %19, i64* %2, align 8
  %.0..0..0.2 = load volatile i64, i64* %2, align 8
  ret i64 %.0..0..0.2

20:                                               ; preds = %14
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %14, %20, %15
  %.0.ph.be = phi i32 [ %17, %15 ], [ 1411555892, %20 ], [ %13, %14 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s055738652.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #6

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
