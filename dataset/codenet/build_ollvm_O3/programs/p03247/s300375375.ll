; ModuleID = 'build_ollvm/programs/p03247/s300375375.ll'
source_filename = "Project_CodeNet_C++1400/p03247/s300375375.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt7reverseIPxEvT_S1_ = comdat any

$_ZSt9__reverseIPxEvT_S1_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPxENSt15iterator_traitsIT_E17iterator_categoryERKS2_ = comdat any

$_ZSt9iter_swapIPxS0_EvT_T0_ = comdat any

$_ZSt4swapIxEvRT_S1_ = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [4 x i8] c"-1\0A\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s300375375.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@x.12 = common local_unnamed_addr global i32 0
@y.13 = common local_unnamed_addr global i32 0
@x.14 = common local_unnamed_addr global i32 0
@y.15 = common local_unnamed_addr global i32 0
@x.16 = common local_unnamed_addr global i32 0
@y.17 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main(i32 %0, i8** nocapture readnone %1) local_unnamed_addr #4 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %10 = load i32, i32* %6, align 4
  %11 = zext i32 %10 to i64
  %12 = alloca i64, i64 %11, align 16
  %13 = alloca i64, i64 %11, align 16
  br label %14

14:                                               ; preds = %.backedge, %2
  %.0125 = phi i32 [ 0, %2 ], [ %.0125.be, %.backedge ]
  %.0123 = phi i64 [ undef, %2 ], [ %.0123.be, %.backedge ]
  %.0121 = phi i32 [ undef, %2 ], [ %.0121.be, %.backedge ]
  %.0119 = phi i32 [ undef, %2 ], [ %.0119.be, %.backedge ]
  %.0117 = phi i32 [ undef, %2 ], [ %.0117.be, %.backedge ]
  %.0115 = phi i32 [ undef, %2 ], [ %.0115.be, %.backedge ]
  %.0113 = phi i32 [ undef, %2 ], [ %.0113.be, %.backedge ]
  %.0111 = phi i8* [ undef, %2 ], [ %.0111.be, %.backedge ]
  %.0109 = phi i64 [ undef, %2 ], [ %.0109.be, %.backedge ]
  %.0107 = phi i64 [ undef, %2 ], [ %.0107.be, %.backedge ]
  %.0105 = phi i32 [ undef, %2 ], [ %.0105.be, %.backedge ]
  %.0103 = phi i32 [ undef, %2 ], [ %.0103.be, %.backedge ]
  %.0 = phi i32 [ -322680085, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -322680085, label %15
    i32 -1175043442, label %19
    i32 1676441748, label %29
    i32 -2036792846, label %31
    i32 -1400717782, label %34
    i32 1944797163, label %38
    i32 32165478, label %44
    i32 -3341356, label %46
    i32 4050314, label %47
    i32 2044512328, label %48
    i32 599799972, label %51
    i32 -849689951, label %61
    i32 -1224978331, label %71
    i32 -1730481961, label %72
    i32 146447648, label %77
    i32 190290480, label %80
    i32 1084334012, label %83
    i32 105741905, label %86
    i32 -889162378, label %96
    i32 2041121912, label %108
    i32 -1347150391, label %109
    i32 -848541544, label %117
    i32 -25618041, label %127
    i32 676889978, label %138
    i32 -181781677, label %139
    i32 884275508, label %144
    i32 -909424512, label %147
    i32 -816339548, label %157
    i32 2107642477, label %172
    i32 509809223, label %173
    i32 -952325485, label %175
    i32 -1541578515, label %185
    i32 -770915721, label %196
    i32 -2046783890, label %197
    i32 1110284702, label %201
    i32 -722095049, label %205
    i32 -1305760140, label %208
    i32 -1190950209, label %218
    i32 963619198, label %232
    i32 501152395, label %234
    i32 2113285837, label %240
    i32 912240621, label %249
    i32 970452642, label %259
    i32 -1615567598, label %277
    i32 -1584652411, label %278
    i32 2047050942, label %279
    i32 -1183677398, label %285
    i32 -841437214, label %294
    i32 1136546640, label %303
    i32 -460325958, label %304
    i32 1371568952, label %314
    i32 -1055342023, label %324
    i32 117188332, label %325
    i32 -965386715, label %327
    i32 1674117097, label %328
    i32 -1302448663, label %331
    i32 1017626872, label %341
    i32 2019844169, label %355
    i32 2083533235, label %356
    i32 225322216, label %358
    i32 -892134518, label %360
    i32 529209055, label %370
    i32 -2032307591, label %381
    i32 -1884923104, label %382
    i32 948889434, label %383
    i32 293158926, label %384
    i32 -234071666, label %385
    i32 741374914, label %388
    i32 -1684966444, label %389
    i32 -1193297038, label %395
    i32 1903429018, label %397
    i32 1799286902, label %398
    i32 1735054604, label %407
    i32 955245748, label %408
    i32 557719391, label %413
  ]

.backedge:                                        ; preds = %14, %413, %408, %407, %398, %397, %395, %389, %388, %385, %384, %382, %381, %370, %360, %358, %356, %355, %341, %331, %328, %327, %325, %324, %314, %304, %303, %294, %285, %279, %278, %277, %259, %249, %240, %234, %232, %218, %208, %205, %201, %197, %196, %185, %175, %173, %172, %157, %147, %144, %139, %138, %127, %117, %109, %108, %96, %86, %83, %80, %77, %72, %71, %61, %51, %48, %47, %46, %44, %38, %34, %31, %29, %19, %15
  %.0125.be = phi i32 [ %.0125, %14 ], [ %.0125, %413 ], [ %.0125, %408 ], [ %.0125, %407 ], [ %.0125, %398 ], [ %.0125, %397 ], [ %.0125, %395 ], [ %.0125, %389 ], [ %.0125, %388 ], [ %.0125, %385 ], [ %.0125, %384 ], [ %.0125, %382 ], [ %.0125, %381 ], [ %.0125, %370 ], [ %.0125, %360 ], [ %.0125, %358 ], [ %.0125, %356 ], [ %.0125, %355 ], [ %.0125, %341 ], [ %.0125, %331 ], [ %.0125, %328 ], [ %.0125, %327 ], [ %.0125, %325 ], [ %.0125, %324 ], [ %.0125, %314 ], [ %.0125, %304 ], [ %.0125, %303 ], [ %.0125, %294 ], [ %.0125, %285 ], [ %.0125, %279 ], [ %.0125, %278 ], [ %.0125, %277 ], [ %.0125, %259 ], [ %.0125, %249 ], [ %.0125, %240 ], [ %.0125, %234 ], [ %.0125, %232 ], [ %.0125, %218 ], [ %.0125, %208 ], [ %.0125, %205 ], [ %.0125, %201 ], [ %.0125, %197 ], [ %.0125, %196 ], [ %.0125, %185 ], [ %.0125, %175 ], [ %.0125, %173 ], [ %.0125, %172 ], [ %.0125, %157 ], [ %.0125, %147 ], [ %.0125, %144 ], [ %.0125, %139 ], [ %.0125, %138 ], [ %.0125, %127 ], [ %.0125, %117 ], [ %.0125, %109 ], [ %.0125, %108 ], [ %.0125, %96 ], [ %.0125, %86 ], [ %.0125, %83 ], [ %.0125, %80 ], [ %.0125, %77 ], [ %.0125, %72 ], [ %.0125, %71 ], [ %.0125, %61 ], [ %.0125, %51 ], [ %.0125, %48 ], [ %.0125, %47 ], [ %.0125, %46 ], [ %.0125, %44 ], [ %.0125, %38 ], [ %.0125, %34 ], [ %.0125, %31 ], [ %30, %29 ], [ %.0125, %19 ], [ %.0125, %15 ]
  %.0123.be = phi i64 [ %.0123, %14 ], [ %.0123, %413 ], [ %.0123, %408 ], [ %.0123, %407 ], [ %.0123, %398 ], [ %.0123, %397 ], [ %.0123, %395 ], [ %.0123, %389 ], [ %.0123, %388 ], [ %.0123, %385 ], [ %.0123, %384 ], [ %.0123, %382 ], [ %.0123, %381 ], [ %.0123, %370 ], [ %.0123, %360 ], [ %.0123, %358 ], [ %.0123, %356 ], [ %.0123, %355 ], [ %.0123, %341 ], [ %.0123, %331 ], [ %.0123, %328 ], [ %.0123, %327 ], [ %.0123, %325 ], [ %.0123, %324 ], [ %.0123, %314 ], [ %.0123, %304 ], [ %.0123, %303 ], [ %.0123, %294 ], [ %.0123, %285 ], [ %.0123, %279 ], [ %.0123, %278 ], [ %.0123, %277 ], [ %.0123, %259 ], [ %.0123, %249 ], [ %.0123, %240 ], [ %.0123, %234 ], [ %.0123, %232 ], [ %.0123, %218 ], [ %.0123, %208 ], [ %.0123, %205 ], [ %.0123, %201 ], [ %.0123, %197 ], [ %.0123, %196 ], [ %.0123, %185 ], [ %.0123, %175 ], [ %.0123, %173 ], [ %.0123, %172 ], [ %.0123, %157 ], [ %.0123, %147 ], [ %.0123, %144 ], [ %.0123, %139 ], [ %.0123, %138 ], [ %.0123, %127 ], [ %.0123, %117 ], [ %.0123, %109 ], [ %.0123, %108 ], [ %.0123, %96 ], [ %.0123, %86 ], [ %.0123, %83 ], [ %.0123, %80 ], [ %.0123, %77 ], [ %.0123, %72 ], [ %.0123, %71 ], [ %.0123, %61 ], [ %.0123, %51 ], [ %.0123, %48 ], [ %.0123, %47 ], [ %.0123, %46 ], [ %.0123, %44 ], [ %.0123, %38 ], [ %.0123, %34 ], [ %33, %31 ], [ %.0123, %29 ], [ %.0123, %19 ], [ %.0123, %15 ]
  %.0121.be = phi i32 [ %.0121, %14 ], [ %.0121, %413 ], [ %.0121, %408 ], [ %.0121, %407 ], [ %.0121, %398 ], [ %.0121, %397 ], [ %.0121, %395 ], [ %.0121, %389 ], [ %.0121, %388 ], [ %.0121, %385 ], [ %.0121, %384 ], [ %.0121, %382 ], [ %.0121, %381 ], [ %.0121, %370 ], [ %.0121, %360 ], [ %.0121, %358 ], [ %.0121, %356 ], [ %.0121, %355 ], [ %.0121, %341 ], [ %.0121, %331 ], [ %.0121, %328 ], [ %.0121, %327 ], [ %.0121, %325 ], [ %.0121, %324 ], [ %.0121, %314 ], [ %.0121, %304 ], [ %.0121, %303 ], [ %.0121, %294 ], [ %.0121, %285 ], [ %.0121, %279 ], [ %.0121, %278 ], [ %.0121, %277 ], [ %.0121, %259 ], [ %.0121, %249 ], [ %.0121, %240 ], [ %.0121, %234 ], [ %.0121, %232 ], [ %.0121, %218 ], [ %.0121, %208 ], [ %.0121, %205 ], [ %.0121, %201 ], [ %.0121, %197 ], [ %.0121, %196 ], [ %.0121, %185 ], [ %.0121, %175 ], [ %.0121, %173 ], [ %.0121, %172 ], [ %.0121, %157 ], [ %.0121, %147 ], [ %.0121, %144 ], [ %.0121, %139 ], [ %.0121, %138 ], [ %.0121, %127 ], [ %.0121, %117 ], [ %.0121, %109 ], [ %.0121, %108 ], [ %.0121, %96 ], [ %.0121, %86 ], [ %.0121, %83 ], [ %.0121, %80 ], [ %.0121, %77 ], [ %.0121, %72 ], [ %.0121, %71 ], [ %.0121, %61 ], [ %.0121, %51 ], [ %.0121, %48 ], [ %.neg130, %47 ], [ %.0121, %46 ], [ %.0121, %44 ], [ %.0121, %38 ], [ %.0121, %34 ], [ 1, %31 ], [ %.0121, %29 ], [ %.0121, %19 ], [ %.0121, %15 ]
  %.0119.be = phi i32 [ %.0119, %14 ], [ %.0119, %413 ], [ %.0119, %408 ], [ %.0119, %407 ], [ %.0119, %398 ], [ %.0119, %397 ], [ %.0119, %395 ], [ %.0119, %389 ], [ %.0119, %388 ], [ %.0119, %385 ], [ 32, %384 ], [ %.0119, %382 ], [ %.0119, %381 ], [ %.0119, %370 ], [ %.0119, %360 ], [ %.0119, %358 ], [ %.0119, %356 ], [ %.0119, %355 ], [ %.0119, %341 ], [ %.0119, %331 ], [ %.0119, %328 ], [ %.0119, %327 ], [ %.0119, %325 ], [ %.0119, %324 ], [ %.0119, %314 ], [ %.0119, %304 ], [ %.0119, %303 ], [ %.0119, %294 ], [ %.0119, %285 ], [ %.0119, %279 ], [ %.0119, %278 ], [ %.0119, %277 ], [ %.0119, %259 ], [ %.0119, %249 ], [ %.0119, %240 ], [ %.0119, %234 ], [ %.0119, %232 ], [ %.0119, %218 ], [ %.0119, %208 ], [ %.0119, %205 ], [ %.0119, %201 ], [ %.0119, %197 ], [ %.0119, %196 ], [ %.0119, %185 ], [ %.0119, %175 ], [ %.0119, %173 ], [ %.0119, %172 ], [ %.0119, %157 ], [ %.0119, %147 ], [ %.0119, %144 ], [ %.0119, %139 ], [ %.0119, %138 ], [ %.0119, %127 ], [ %.0119, %117 ], [ %.0119, %109 ], [ %.0119, %108 ], [ %.0119, %96 ], [ %.0119, %86 ], [ %.0119, %83 ], [ %.0119, %80 ], [ %.0119, %77 ], [ %.0119, %72 ], [ %.0119, %71 ], [ 32, %61 ], [ %.0119, %51 ], [ 31, %48 ], [ %.0119, %47 ], [ %.0119, %46 ], [ %.0119, %44 ], [ %.0119, %38 ], [ %.0119, %34 ], [ %.0119, %31 ], [ %.0119, %29 ], [ %.0119, %19 ], [ %.0119, %15 ]
  %.0117.be = phi i32 [ %.0117, %14 ], [ %.0117, %413 ], [ %.0117, %408 ], [ %.0117, %407 ], [ %.0117, %398 ], [ %.0117, %397 ], [ %.0117, %395 ], [ %.0117, %389 ], [ %.neg129, %388 ], [ %387, %385 ], [ %.0117, %384 ], [ %.0117, %382 ], [ %.0117, %381 ], [ %.0117, %370 ], [ %.0117, %360 ], [ %.0117, %358 ], [ %.0117, %356 ], [ %.0117, %355 ], [ %.0117, %341 ], [ %.0117, %331 ], [ %.0117, %328 ], [ %.0117, %327 ], [ %.0117, %325 ], [ %.0117, %324 ], [ %.0117, %314 ], [ %.0117, %304 ], [ %.0117, %303 ], [ %.0117, %294 ], [ %.0117, %285 ], [ %.0117, %279 ], [ %.0117, %278 ], [ %.0117, %277 ], [ %.0117, %259 ], [ %.0117, %249 ], [ %.0117, %240 ], [ %.0117, %234 ], [ %.0117, %232 ], [ %.0117, %218 ], [ %.0117, %208 ], [ %.0117, %205 ], [ %.0117, %201 ], [ %.0117, %197 ], [ %.0117, %196 ], [ %.0117, %185 ], [ %.0117, %175 ], [ %.0117, %173 ], [ %.0117, %172 ], [ %.0117, %157 ], [ %.0117, %147 ], [ %.0117, %144 ], [ %.0117, %139 ], [ %.0117, %138 ], [ %128, %127 ], [ %.0117, %117 ], [ %.0117, %109 ], [ %.0117, %108 ], [ %98, %96 ], [ %.0117, %86 ], [ %.0117, %83 ], [ %.0117, %80 ], [ %.0117, %77 ], [ 1, %72 ], [ %.0117, %71 ], [ %.0117, %61 ], [ %.0117, %51 ], [ %.0117, %48 ], [ %.0117, %47 ], [ %.0117, %46 ], [ %.0117, %44 ], [ %.0117, %38 ], [ %.0117, %34 ], [ %.0117, %31 ], [ %.0117, %29 ], [ %.0117, %19 ], [ %.0117, %15 ]
  %.0115.be = phi i32 [ %.0115, %14 ], [ %.0115, %413 ], [ %.0115, %408 ], [ %.0115, %407 ], [ %.0115, %398 ], [ %.0115, %397 ], [ %.0115, %395 ], [ %.0115, %389 ], [ %.0115, %388 ], [ %.0115, %385 ], [ %.0115, %384 ], [ %.0115, %382 ], [ %.0115, %381 ], [ %.0115, %370 ], [ %.0115, %360 ], [ %.0115, %358 ], [ %.0115, %356 ], [ %.0115, %355 ], [ %.0115, %341 ], [ %.0115, %331 ], [ %.0115, %328 ], [ %.0115, %327 ], [ %.0115, %325 ], [ %.0115, %324 ], [ %.0115, %314 ], [ %.0115, %304 ], [ %.0115, %303 ], [ %.0115, %294 ], [ %.0115, %285 ], [ %.0115, %279 ], [ %.0115, %278 ], [ %.0115, %277 ], [ %.0115, %259 ], [ %.0115, %249 ], [ %.0115, %240 ], [ %.0115, %234 ], [ %.0115, %232 ], [ %.0115, %218 ], [ %.0115, %208 ], [ %.0115, %205 ], [ %.0115, %201 ], [ %.0115, %197 ], [ %.0115, %196 ], [ %.0115, %185 ], [ %.0115, %175 ], [ %174, %173 ], [ %.0115, %172 ], [ %.0115, %157 ], [ %.0115, %147 ], [ %.0115, %144 ], [ 1, %139 ], [ %.0115, %138 ], [ %.0115, %127 ], [ %.0115, %117 ], [ %.0115, %109 ], [ %.0115, %108 ], [ %.0115, %96 ], [ %.0115, %86 ], [ %.0115, %83 ], [ %.0115, %80 ], [ %.0115, %77 ], [ %.0115, %72 ], [ %.0115, %71 ], [ %.0115, %61 ], [ %.0115, %51 ], [ %.0115, %48 ], [ %.0115, %47 ], [ %.0115, %46 ], [ %.0115, %44 ], [ %.0115, %38 ], [ %.0115, %34 ], [ %.0115, %31 ], [ %.0115, %29 ], [ %.0115, %19 ], [ %.0115, %15 ]
  %.0113.be = phi i32 [ %.0113, %14 ], [ %.neg, %413 ], [ %.0113, %408 ], [ %.0113, %407 ], [ %.0113, %398 ], [ %.0113, %397 ], [ 0, %395 ], [ %.0113, %389 ], [ %.0113, %388 ], [ %.0113, %385 ], [ %.0113, %384 ], [ %.0113, %382 ], [ %.0113, %381 ], [ %371, %370 ], [ %.0113, %360 ], [ %.0113, %358 ], [ %.0113, %356 ], [ %.0113, %355 ], [ %.0113, %341 ], [ %.0113, %331 ], [ %.0113, %328 ], [ %.0113, %327 ], [ %.0113, %325 ], [ %.0113, %324 ], [ %.0113, %314 ], [ %.0113, %304 ], [ %.0113, %303 ], [ %.0113, %294 ], [ %.0113, %285 ], [ %.0113, %279 ], [ %.0113, %278 ], [ %.0113, %277 ], [ %.0113, %259 ], [ %.0113, %249 ], [ %.0113, %240 ], [ %.0113, %234 ], [ %.0113, %232 ], [ %.0113, %218 ], [ %.0113, %208 ], [ %.0113, %205 ], [ %.0113, %201 ], [ %.0113, %197 ], [ %.0113, %196 ], [ 0, %185 ], [ %.0113, %175 ], [ %.0113, %173 ], [ %.0113, %172 ], [ %.0113, %157 ], [ %.0113, %147 ], [ %.0113, %144 ], [ %.0113, %139 ], [ %.0113, %138 ], [ %.0113, %127 ], [ %.0113, %117 ], [ %.0113, %109 ], [ %.0113, %108 ], [ %.0113, %96 ], [ %.0113, %86 ], [ %.0113, %83 ], [ %.0113, %80 ], [ %.0113, %77 ], [ %.0113, %72 ], [ %.0113, %71 ], [ %.0113, %61 ], [ %.0113, %51 ], [ %.0113, %48 ], [ %.0113, %47 ], [ %.0113, %46 ], [ %.0113, %44 ], [ %.0113, %38 ], [ %.0113, %34 ], [ %.0113, %31 ], [ %.0113, %29 ], [ %.0113, %19 ], [ %.0113, %15 ]
  %.0111.be = phi i8* [ %.0111, %14 ], [ %.0111, %413 ], [ %.0111, %408 ], [ %.0111, %407 ], [ %.0111, %398 ], [ %.0111, %397 ], [ %.0111, %395 ], [ %.0111, %389 ], [ %.0111, %388 ], [ %.0111, %385 ], [ %.0111, %384 ], [ %.0111, %382 ], [ %.0111, %381 ], [ %.0111, %370 ], [ %.0111, %360 ], [ %.0111, %358 ], [ %.0111, %356 ], [ %.0111, %355 ], [ %.0111, %341 ], [ %.0111, %331 ], [ %.0111, %328 ], [ %.0111, %327 ], [ %.0111, %325 ], [ %.0111, %324 ], [ %.0111, %314 ], [ %.0111, %304 ], [ %.0111, %303 ], [ %.0111, %294 ], [ %.0111, %285 ], [ %.0111, %279 ], [ %.0111, %278 ], [ %.0111, %277 ], [ %.0111, %259 ], [ %.0111, %249 ], [ %.0111, %240 ], [ %.0111, %234 ], [ %.0111, %232 ], [ %.0111, %218 ], [ %.0111, %208 ], [ %.0111, %205 ], [ %203, %201 ], [ %.0111, %197 ], [ %.0111, %196 ], [ %.0111, %185 ], [ %.0111, %175 ], [ %.0111, %173 ], [ %.0111, %172 ], [ %.0111, %157 ], [ %.0111, %147 ], [ %.0111, %144 ], [ %.0111, %139 ], [ %.0111, %138 ], [ %.0111, %127 ], [ %.0111, %117 ], [ %.0111, %109 ], [ %.0111, %108 ], [ %.0111, %96 ], [ %.0111, %86 ], [ %.0111, %83 ], [ %.0111, %80 ], [ %.0111, %77 ], [ %.0111, %72 ], [ %.0111, %71 ], [ %.0111, %61 ], [ %.0111, %51 ], [ %.0111, %48 ], [ %.0111, %47 ], [ %.0111, %46 ], [ %.0111, %44 ], [ %.0111, %38 ], [ %.0111, %34 ], [ %.0111, %31 ], [ %.0111, %29 ], [ %.0111, %19 ], [ %.0111, %15 ]
  %.0109.be = phi i64 [ %.0109, %14 ], [ %.0109, %413 ], [ %.0109, %408 ], [ %.0109, %407 ], [ %403, %398 ], [ %.0109, %397 ], [ %.0109, %395 ], [ %.0109, %389 ], [ %.0109, %388 ], [ %.0109, %385 ], [ %.0109, %384 ], [ %.0109, %382 ], [ %.0109, %381 ], [ %.0109, %370 ], [ %.0109, %360 ], [ %.0109, %358 ], [ %.0109, %356 ], [ %.0109, %355 ], [ %.0109, %341 ], [ %.0109, %331 ], [ %.0109, %328 ], [ %.0109, %327 ], [ %.0109, %325 ], [ %.0109, %324 ], [ %.0109, %314 ], [ %.0109, %304 ], [ %.0109, %303 ], [ %299, %294 ], [ %290, %285 ], [ %.0109, %279 ], [ %.0109, %278 ], [ %.0109, %277 ], [ %264, %259 ], [ %.0109, %249 ], [ %245, %240 ], [ %.0109, %234 ], [ %.0109, %232 ], [ %.0109, %218 ], [ %.0109, %208 ], [ %.0109, %205 ], [ 0, %201 ], [ %.0109, %197 ], [ %.0109, %196 ], [ %.0109, %185 ], [ %.0109, %175 ], [ %.0109, %173 ], [ %.0109, %172 ], [ %.0109, %157 ], [ %.0109, %147 ], [ %.0109, %144 ], [ %.0109, %139 ], [ %.0109, %138 ], [ %.0109, %127 ], [ %.0109, %117 ], [ %.0109, %109 ], [ %.0109, %108 ], [ %.0109, %96 ], [ %.0109, %86 ], [ %.0109, %83 ], [ %.0109, %80 ], [ %.0109, %77 ], [ %.0109, %72 ], [ %.0109, %71 ], [ %.0109, %61 ], [ %.0109, %51 ], [ %.0109, %48 ], [ %.0109, %47 ], [ %.0109, %46 ], [ %.0109, %44 ], [ %.0109, %38 ], [ %.0109, %34 ], [ %.0109, %31 ], [ %.0109, %29 ], [ %.0109, %19 ], [ %.0109, %15 ]
  %.0107.be = phi i64 [ %.0107, %14 ], [ %.0107, %413 ], [ %.0107, %408 ], [ %.0107, %407 ], [ %406, %398 ], [ %.0107, %397 ], [ %.0107, %395 ], [ %.0107, %389 ], [ %.0107, %388 ], [ %.0107, %385 ], [ %.0107, %384 ], [ %.0107, %382 ], [ %.0107, %381 ], [ %.0107, %370 ], [ %.0107, %360 ], [ %.0107, %358 ], [ %.0107, %356 ], [ %.0107, %355 ], [ %.0107, %341 ], [ %.0107, %331 ], [ %.0107, %328 ], [ %.0107, %327 ], [ %.0107, %325 ], [ %.0107, %324 ], [ %.0107, %314 ], [ %.0107, %304 ], [ %.0107, %303 ], [ %302, %294 ], [ %293, %285 ], [ %.0107, %279 ], [ %.0107, %278 ], [ %.0107, %277 ], [ %267, %259 ], [ %.0107, %249 ], [ %248, %240 ], [ %.0107, %234 ], [ %.0107, %232 ], [ %.0107, %218 ], [ %.0107, %208 ], [ %.0107, %205 ], [ 0, %201 ], [ %.0107, %197 ], [ %.0107, %196 ], [ %.0107, %185 ], [ %.0107, %175 ], [ %.0107, %173 ], [ %.0107, %172 ], [ %.0107, %157 ], [ %.0107, %147 ], [ %.0107, %144 ], [ %.0107, %139 ], [ %.0107, %138 ], [ %.0107, %127 ], [ %.0107, %117 ], [ %.0107, %109 ], [ %.0107, %108 ], [ %.0107, %96 ], [ %.0107, %86 ], [ %.0107, %83 ], [ %.0107, %80 ], [ %.0107, %77 ], [ %.0107, %72 ], [ %.0107, %71 ], [ %.0107, %61 ], [ %.0107, %51 ], [ %.0107, %48 ], [ %.0107, %47 ], [ %.0107, %46 ], [ %.0107, %44 ], [ %.0107, %38 ], [ %.0107, %34 ], [ %.0107, %31 ], [ %.0107, %29 ], [ %.0107, %19 ], [ %.0107, %15 ]
  %.0105.be = phi i32 [ %.0105, %14 ], [ %.0105, %413 ], [ %.0105, %408 ], [ %.0105, %407 ], [ %.0105, %398 ], [ %.0105, %397 ], [ %.0105, %395 ], [ %.0105, %389 ], [ %.0105, %388 ], [ %.0105, %385 ], [ %.0105, %384 ], [ %.0105, %382 ], [ %.0105, %381 ], [ %.0105, %370 ], [ %.0105, %360 ], [ %.0105, %358 ], [ %.0105, %356 ], [ %.0105, %355 ], [ %.0105, %341 ], [ %.0105, %331 ], [ %.0105, %328 ], [ %.0105, %327 ], [ %326, %325 ], [ %.0105, %324 ], [ %.0105, %314 ], [ %.0105, %304 ], [ %.0105, %303 ], [ %.0105, %294 ], [ %.0105, %285 ], [ %.0105, %279 ], [ %.0105, %278 ], [ %.0105, %277 ], [ %.0105, %259 ], [ %.0105, %249 ], [ %.0105, %240 ], [ %.0105, %234 ], [ %.0105, %232 ], [ %.0105, %218 ], [ %.0105, %208 ], [ %.0105, %205 ], [ 0, %201 ], [ %.0105, %197 ], [ %.0105, %196 ], [ %.0105, %185 ], [ %.0105, %175 ], [ %.0105, %173 ], [ %.0105, %172 ], [ %.0105, %157 ], [ %.0105, %147 ], [ %.0105, %144 ], [ %.0105, %139 ], [ %.0105, %138 ], [ %.0105, %127 ], [ %.0105, %117 ], [ %.0105, %109 ], [ %.0105, %108 ], [ %.0105, %96 ], [ %.0105, %86 ], [ %.0105, %83 ], [ %.0105, %80 ], [ %.0105, %77 ], [ %.0105, %72 ], [ %.0105, %71 ], [ %.0105, %61 ], [ %.0105, %51 ], [ %.0105, %48 ], [ %.0105, %47 ], [ %.0105, %46 ], [ %.0105, %44 ], [ %.0105, %38 ], [ %.0105, %34 ], [ %.0105, %31 ], [ %.0105, %29 ], [ %.0105, %19 ], [ %.0105, %15 ]
  %.0103.be = phi i32 [ %.0103, %14 ], [ %.0103, %413 ], [ %.0103, %408 ], [ %.0103, %407 ], [ %.0103, %398 ], [ %.0103, %397 ], [ %.0103, %395 ], [ %.0103, %389 ], [ %.0103, %388 ], [ %.0103, %385 ], [ %.0103, %384 ], [ %.0103, %382 ], [ %.0103, %381 ], [ %.0103, %370 ], [ %.0103, %360 ], [ %.0103, %358 ], [ %357, %356 ], [ %.0103, %355 ], [ %.0103, %341 ], [ %.0103, %331 ], [ %.0103, %328 ], [ 0, %327 ], [ %.0103, %325 ], [ %.0103, %324 ], [ %.0103, %314 ], [ %.0103, %304 ], [ %.0103, %303 ], [ %.0103, %294 ], [ %.0103, %285 ], [ %.0103, %279 ], [ %.0103, %278 ], [ %.0103, %277 ], [ %.0103, %259 ], [ %.0103, %249 ], [ %.0103, %240 ], [ %.0103, %234 ], [ %.0103, %232 ], [ %.0103, %218 ], [ %.0103, %208 ], [ %.0103, %205 ], [ %.0103, %201 ], [ %.0103, %197 ], [ %.0103, %196 ], [ %.0103, %185 ], [ %.0103, %175 ], [ %.0103, %173 ], [ %.0103, %172 ], [ %.0103, %157 ], [ %.0103, %147 ], [ %.0103, %144 ], [ %.0103, %139 ], [ %.0103, %138 ], [ %.0103, %127 ], [ %.0103, %117 ], [ %.0103, %109 ], [ %.0103, %108 ], [ %.0103, %96 ], [ %.0103, %86 ], [ %.0103, %83 ], [ %.0103, %80 ], [ %.0103, %77 ], [ %.0103, %72 ], [ %.0103, %71 ], [ %.0103, %61 ], [ %.0103, %51 ], [ %.0103, %48 ], [ %.0103, %47 ], [ %.0103, %46 ], [ %.0103, %44 ], [ %.0103, %38 ], [ %.0103, %34 ], [ %.0103, %31 ], [ %.0103, %29 ], [ %.0103, %19 ], [ %.0103, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ 529209055, %413 ], [ 1017626872, %408 ], [ 1371568952, %407 ], [ 970452642, %398 ], [ -1190950209, %397 ], [ -1541578515, %395 ], [ -816339548, %389 ], [ -25618041, %388 ], [ -889162378, %385 ], [ -849689951, %384 ], [ 948889434, %382 ], [ -2046783890, %381 ], [ %380, %370 ], [ %369, %360 ], [ -892134518, %358 ], [ 1674117097, %356 ], [ 2083533235, %355 ], [ %354, %341 ], [ %340, %331 ], [ %330, %328 ], [ 1674117097, %327 ], [ -722095049, %325 ], [ 117188332, %324 ], [ %323, %314 ], [ %313, %304 ], [ -460325958, %303 ], [ 1136546640, %294 ], [ 1136546640, %285 ], [ %284, %279 ], [ -460325958, %278 ], [ -1584652411, %277 ], [ %276, %259 ], [ %258, %249 ], [ -1584652411, %240 ], [ %239, %234 ], [ %233, %232 ], [ %231, %218 ], [ %217, %208 ], [ %207, %205 ], [ -722095049, %201 ], [ %200, %197 ], [ -2046783890, %196 ], [ %195, %185 ], [ %184, %175 ], [ 884275508, %173 ], [ 509809223, %172 ], [ %171, %157 ], [ %156, %147 ], [ %146, %144 ], [ 884275508, %139 ], [ 146447648, %138 ], [ %137, %127 ], [ %126, %117 ], [ -848541544, %109 ], [ -1347150391, %108 ], [ %107, %96 ], [ %95, %86 ], [ %85, %83 ], [ %82, %80 ], [ %79, %77 ], [ 146447648, %72 ], [ -1730481961, %71 ], [ %70, %61 ], [ %60, %51 ], [ %50, %48 ], [ -1400717782, %47 ], [ 4050314, %46 ], [ 948889434, %44 ], [ %43, %38 ], [ %37, %34 ], [ -1400717782, %31 ], [ -322680085, %29 ], [ 1676441748, %19 ], [ %18, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* %6, align 4
  %17 = icmp slt i32 %.0125, %16
  %18 = select i1 %17, i32 -1175043442, i32 -2036792846
  br label %.backedge

19:                                               ; preds = %14
  %20 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %7)
  %21 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %20, i64* nonnull dereferenceable(8) %8)
  %22 = load i64, i64* %7, align 8
  %23 = load i64, i64* %8, align 8
  %24 = add i64 %23, %22
  %25 = sext i32 %.0125 to i64
  %26 = getelementptr inbounds i64, i64* %12, i64 %25
  store i64 %24, i64* %26, align 8
  %27 = sub i64 %22, %23
  %28 = getelementptr inbounds i64, i64* %13, i64 %25
  store i64 %27, i64* %28, align 8
  br label %.backedge

29:                                               ; preds = %14
  %30 = add i32 %.0125, 1
  br label %.backedge

31:                                               ; preds = %14
  %32 = load i64, i64* %12, align 16
  %33 = and i64 %32, 1
  br label %.backedge

34:                                               ; preds = %14
  %35 = load i32, i32* %6, align 4
  %36 = icmp slt i32 %.0121, %35
  %37 = select i1 %36, i32 1944797163, i32 2044512328
  br label %.backedge

38:                                               ; preds = %14
  %39 = sext i32 %.0121 to i64
  %40 = getelementptr inbounds i64, i64* %12, i64 %39
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 1
  %.not = icmp eq i64 %.0123, %42
  %43 = select i1 %.not, i32 -3341356, i32 32165478
  br label %.backedge

44:                                               ; preds = %14
  %45 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

46:                                               ; preds = %14
  br label %.backedge

47:                                               ; preds = %14
  %.neg130 = add i32 %.0121, 1
  br label %.backedge

48:                                               ; preds = %14
  %49 = icmp eq i64 %.0123, 0
  %50 = select i1 %49, i32 599799972, i32 -1730481961
  br label %.backedge

51:                                               ; preds = %14
  %52 = load i32, i32* @x.2, align 4
  %53 = load i32, i32* @y.3, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 -849689951, i32 293158926
  br label %.backedge

61:                                               ; preds = %14
  %62 = load i32, i32* @x.2, align 4
  %63 = load i32, i32* @y.3, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 -1224978331, i32 293158926
  br label %.backedge

71:                                               ; preds = %14
  br label %.backedge

72:                                               ; preds = %14
  %73 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.0119)
  %74 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %73, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %75 = zext i32 %.0119 to i64
  %76 = alloca i64, i64 %75, align 16
  store i64* %76, i64** %5, align 8
  %.0..0..0.75 = load volatile i64*, i64** %5, align 8
  store i64 1, i64* %.0..0..0.75, align 16
  br label %.backedge

77:                                               ; preds = %14
  %78 = icmp slt i32 %.0117, %.0119
  %79 = select i1 %78, i32 190290480, i32 -181781677
  br label %.backedge

80:                                               ; preds = %14
  %81 = icmp eq i32 %.0117, 1
  %82 = select i1 %81, i32 1084334012, i32 -1347150391
  br label %.backedge

83:                                               ; preds = %14
  %84 = icmp eq i64 %.0123, 0
  %85 = select i1 %84, i32 105741905, i32 -1347150391
  br label %.backedge

86:                                               ; preds = %14
  %87 = load i32, i32* @x.2, align 4
  %88 = load i32, i32* @y.3, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 -889162378, i32 -234071666
  br label %.backedge

96:                                               ; preds = %14
  %.0..0..0.76 = load volatile i64*, i64** %5, align 8
  %97 = getelementptr inbounds i64, i64* %.0..0..0.76, i64 1
  store i64 1, i64* %97, align 8
  %98 = add i32 %.0117, 1
  %99 = load i32, i32* @x.2, align 4
  %100 = load i32, i32* @y.3, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 2041121912, i32 -234071666
  br label %.backedge

108:                                              ; preds = %14
  br label %.backedge

109:                                              ; preds = %14
  %110 = add i32 %.0117, -1
  %111 = sext i32 %110 to i64
  %.0..0..0.77 = load volatile i64*, i64** %5, align 8
  %112 = getelementptr inbounds i64, i64* %.0..0..0.77, i64 %111
  %113 = load i64, i64* %112, align 8
  %114 = shl nsw i64 %113, 1
  %115 = sext i32 %.0117 to i64
  %.0..0..0.78 = load volatile i64*, i64** %5, align 8
  %116 = getelementptr inbounds i64, i64* %.0..0..0.78, i64 %115
  store i64 %114, i64* %116, align 8
  br label %.backedge

117:                                              ; preds = %14
  %118 = load i32, i32* @x.2, align 4
  %119 = load i32, i32* @y.3, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 -25618041, i32 741374914
  br label %.backedge

127:                                              ; preds = %14
  %128 = add i32 %.0117, 1
  %129 = load i32, i32* @x.2, align 4
  %130 = load i32, i32* @y.3, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 676889978, i32 741374914
  br label %.backedge

138:                                              ; preds = %14
  br label %.backedge

139:                                              ; preds = %14
  %140 = sext i32 %.0119 to i64
  %.0..0..0.79 = load volatile i64*, i64** %5, align 8
  %141 = getelementptr inbounds i64, i64* %.0..0..0.79, i64 %140
  %.0..0..0.80 = load volatile i64*, i64** %5, align 8
  call void @_ZSt7reverseIPxEvT_S1_(i64* %.0..0..0.80, i64* %141)
  %.0..0..0.81 = load volatile i64*, i64** %5, align 8
  %142 = load i64, i64* %.0..0..0.81, align 16
  %143 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %142)
  br label %.backedge

144:                                              ; preds = %14
  %145 = icmp slt i32 %.0115, %.0119
  %146 = select i1 %145, i32 -909424512, i32 -952325485
  br label %.backedge

147:                                              ; preds = %14
  %148 = load i32, i32* @x.2, align 4
  %149 = load i32, i32* @y.3, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 -816339548, i32 -1684966444
  br label %.backedge

157:                                              ; preds = %14
  %158 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %159 = sext i32 %.0115 to i64
  %.0..0..0.82 = load volatile i64*, i64** %5, align 8
  %160 = getelementptr inbounds i64, i64* %.0..0..0.82, i64 %159
  %161 = load i64, i64* %160, align 8
  %162 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull %158, i64 %161)
  %163 = load i32, i32* @x.2, align 4
  %164 = load i32, i32* @y.3, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 2107642477, i32 -1684966444
  br label %.backedge

172:                                              ; preds = %14
  br label %.backedge

173:                                              ; preds = %14
  %174 = add i32 %.0115, 1
  br label %.backedge

175:                                              ; preds = %14
  %176 = load i32, i32* @x.2, align 4
  %177 = load i32, i32* @y.3, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 -1541578515, i32 -1193297038
  br label %.backedge

185:                                              ; preds = %14
  %186 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %187 = load i32, i32* @x.2, align 4
  %188 = load i32, i32* @y.3, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 -770915721, i32 -1193297038
  br label %.backedge

196:                                              ; preds = %14
  br label %.backedge

197:                                              ; preds = %14
  %198 = load i32, i32* %6, align 4
  %199 = icmp slt i32 %.0113, %198
  %200 = select i1 %199, i32 1110284702, i32 -1884923104
  br label %.backedge

201:                                              ; preds = %14
  %202 = zext i32 %.0119 to i64
  %203 = call i8* @llvm.stacksave()
  %204 = alloca i8, i64 %202, align 16
  store i8* %204, i8** %4, align 8
  br label %.backedge

205:                                              ; preds = %14
  %206 = icmp slt i32 %.0105, %.0119
  %207 = select i1 %206, i32 -1305760140, i32 -965386715
  br label %.backedge

208:                                              ; preds = %14
  %209 = load i32, i32* @x.2, align 4
  %210 = load i32, i32* @y.3, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 -1190950209, i32 1903429018
  br label %.backedge

218:                                              ; preds = %14
  %219 = sext i32 %.0113 to i64
  %220 = getelementptr inbounds i64, i64* %12, i64 %219
  %221 = load i64, i64* %220, align 8
  %222 = icmp sgt i64 %.0109, %221
  store i1 %222, i1* %3, align 1
  %223 = load i32, i32* @x.2, align 4
  %224 = load i32, i32* @y.3, align 4
  %225 = add i32 %223, -1
  %226 = mul i32 %225, %223
  %227 = and i32 %226, 1
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %229, %228
  %231 = select i1 %230, i32 963619198, i32 1903429018
  br label %.backedge

232:                                              ; preds = %14
  %.0..0..0.102 = load volatile i1, i1* %3, align 1
  %233 = select i1 %.0..0..0.102, i32 501152395, i32 2047050942
  br label %.backedge

234:                                              ; preds = %14
  %235 = sext i32 %.0113 to i64
  %236 = getelementptr inbounds i64, i64* %13, i64 %235
  %237 = load i64, i64* %236, align 8
  %238 = icmp sgt i64 %.0107, %237
  %239 = select i1 %238, i32 2113285837, i32 912240621
  br label %.backedge

240:                                              ; preds = %14
  %241 = sext i32 %.0105 to i64
  %.0..0..0.95 = load volatile i8*, i8** %4, align 8
  %242 = getelementptr inbounds i8, i8* %.0..0..0.95, i64 %241
  store i8 76, i8* %242, align 1
  %.0..0..0.83 = load volatile i64*, i64** %5, align 8
  %243 = getelementptr inbounds i64, i64* %.0..0..0.83, i64 %241
  %244 = load i64, i64* %243, align 8
  %245 = sub i64 %.0109, %244
  %.0..0..0.84 = load volatile i64*, i64** %5, align 8
  %246 = getelementptr inbounds i64, i64* %.0..0..0.84, i64 %241
  %247 = load i64, i64* %246, align 8
  %248 = sub i64 %.0107, %247
  br label %.backedge

249:                                              ; preds = %14
  %250 = load i32, i32* @x.2, align 4
  %251 = load i32, i32* @y.3, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 970452642, i32 1799286902
  br label %.backedge

259:                                              ; preds = %14
  %260 = sext i32 %.0105 to i64
  %.0..0..0.96 = load volatile i8*, i8** %4, align 8
  %261 = getelementptr inbounds i8, i8* %.0..0..0.96, i64 %260
  store i8 68, i8* %261, align 1
  %.0..0..0.85 = load volatile i64*, i64** %5, align 8
  %262 = getelementptr inbounds i64, i64* %.0..0..0.85, i64 %260
  %263 = load i64, i64* %262, align 8
  %264 = sub i64 %.0109, %263
  %.0..0..0.86 = load volatile i64*, i64** %5, align 8
  %265 = getelementptr inbounds i64, i64* %.0..0..0.86, i64 %260
  %266 = load i64, i64* %265, align 8
  %267 = add i64 %266, %.0107
  %268 = load i32, i32* @x.2, align 4
  %269 = load i32, i32* @y.3, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 -1615567598, i32 1799286902
  br label %.backedge

277:                                              ; preds = %14
  br label %.backedge

278:                                              ; preds = %14
  br label %.backedge

279:                                              ; preds = %14
  %280 = sext i32 %.0113 to i64
  %281 = getelementptr inbounds i64, i64* %13, i64 %280
  %282 = load i64, i64* %281, align 8
  %283 = icmp sgt i64 %.0107, %282
  %284 = select i1 %283, i32 -1183677398, i32 -841437214
  br label %.backedge

285:                                              ; preds = %14
  %286 = sext i32 %.0105 to i64
  %.0..0..0.97 = load volatile i8*, i8** %4, align 8
  %287 = getelementptr inbounds i8, i8* %.0..0..0.97, i64 %286
  store i8 85, i8* %287, align 1
  %.0..0..0.87 = load volatile i64*, i64** %5, align 8
  %288 = getelementptr inbounds i64, i64* %.0..0..0.87, i64 %286
  %289 = load i64, i64* %288, align 8
  %290 = add i64 %289, %.0109
  %.0..0..0.88 = load volatile i64*, i64** %5, align 8
  %291 = getelementptr inbounds i64, i64* %.0..0..0.88, i64 %286
  %292 = load i64, i64* %291, align 8
  %293 = sub i64 %.0107, %292
  br label %.backedge

294:                                              ; preds = %14
  %295 = sext i32 %.0105 to i64
  %.0..0..0.98 = load volatile i8*, i8** %4, align 8
  %296 = getelementptr inbounds i8, i8* %.0..0..0.98, i64 %295
  store i8 82, i8* %296, align 1
  %.0..0..0.89 = load volatile i64*, i64** %5, align 8
  %297 = getelementptr inbounds i64, i64* %.0..0..0.89, i64 %295
  %298 = load i64, i64* %297, align 8
  %299 = add i64 %298, %.0109
  %.0..0..0.90 = load volatile i64*, i64** %5, align 8
  %300 = getelementptr inbounds i64, i64* %.0..0..0.90, i64 %295
  %301 = load i64, i64* %300, align 8
  %302 = add i64 %301, %.0107
  br label %.backedge

303:                                              ; preds = %14
  br label %.backedge

304:                                              ; preds = %14
  %305 = load i32, i32* @x.2, align 4
  %306 = load i32, i32* @y.3, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 1371568952, i32 1735054604
  br label %.backedge

314:                                              ; preds = %14
  %315 = load i32, i32* @x.2, align 4
  %316 = load i32, i32* @y.3, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 -1055342023, i32 1735054604
  br label %.backedge

324:                                              ; preds = %14
  br label %.backedge

325:                                              ; preds = %14
  %326 = add i32 %.0105, 1
  br label %.backedge

327:                                              ; preds = %14
  br label %.backedge

328:                                              ; preds = %14
  %329 = icmp slt i32 %.0103, %.0119
  %330 = select i1 %329, i32 -1302448663, i32 225322216
  br label %.backedge

331:                                              ; preds = %14
  %332 = load i32, i32* @x.2, align 4
  %333 = load i32, i32* @y.3, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 1017626872, i32 955245748
  br label %.backedge

341:                                              ; preds = %14
  %342 = sext i32 %.0103 to i64
  %.0..0..0.99 = load volatile i8*, i8** %4, align 8
  %343 = getelementptr inbounds i8, i8* %.0..0..0.99, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %344)
  %346 = load i32, i32* @x.2, align 4
  %347 = load i32, i32* @y.3, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 2019844169, i32 955245748
  br label %.backedge

355:                                              ; preds = %14
  br label %.backedge

356:                                              ; preds = %14
  %357 = add i32 %.0103, 1
  br label %.backedge

358:                                              ; preds = %14
  %359 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  call void @llvm.stackrestore(i8* %.0111)
  br label %.backedge

360:                                              ; preds = %14
  %361 = load i32, i32* @x.2, align 4
  %362 = load i32, i32* @y.3, align 4
  %363 = add i32 %361, -1
  %364 = mul i32 %363, %361
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %367, %366
  %369 = select i1 %368, i32 529209055, i32 557719391
  br label %.backedge

370:                                              ; preds = %14
  %371 = add i32 %.0113, 1
  %372 = load i32, i32* @x.2, align 4
  %373 = load i32, i32* @y.3, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 -2032307591, i32 557719391
  br label %.backedge

381:                                              ; preds = %14
  br label %.backedge

382:                                              ; preds = %14
  br label %.backedge

383:                                              ; preds = %14
  ret i32 0

384:                                              ; preds = %14
  br label %.backedge

385:                                              ; preds = %14
  %.0..0..0.91 = load volatile i64*, i64** %5, align 8
  %386 = getelementptr inbounds i64, i64* %.0..0..0.91, i64 1
  store i64 1, i64* %386, align 8
  %387 = add i32 %.0117, 1
  br label %.backedge

388:                                              ; preds = %14
  %.neg129 = add i32 %.0117, 1
  br label %.backedge

389:                                              ; preds = %14
  %390 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %391 = sext i32 %.0115 to i64
  %.0..0..0.92 = load volatile i64*, i64** %5, align 8
  %392 = getelementptr inbounds i64, i64* %.0..0..0.92, i64 %391
  %393 = load i64, i64* %392, align 8
  %394 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull %390, i64 %393)
  br label %.backedge

395:                                              ; preds = %14
  %396 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

397:                                              ; preds = %14
  br label %.backedge

398:                                              ; preds = %14
  %399 = sext i32 %.0105 to i64
  %.0..0..0.100 = load volatile i8*, i8** %4, align 8
  %400 = getelementptr inbounds i8, i8* %.0..0..0.100, i64 %399
  store i8 68, i8* %400, align 1
  %.0..0..0.93 = load volatile i64*, i64** %5, align 8
  %401 = getelementptr inbounds i64, i64* %.0..0..0.93, i64 %399
  %402 = load i64, i64* %401, align 8
  %403 = sub i64 %.0109, %402
  %.0..0..0.94 = load volatile i64*, i64** %5, align 8
  %404 = getelementptr inbounds i64, i64* %.0..0..0.94, i64 %399
  %405 = load i64, i64* %404, align 8
  %406 = add i64 %405, %.0107
  br label %.backedge

407:                                              ; preds = %14
  br label %.backedge

408:                                              ; preds = %14
  %409 = sext i32 %.0103 to i64
  %.0..0..0.101 = load volatile i8*, i8** %4, align 8
  %410 = getelementptr inbounds i8, i8* %.0..0..0.101, i64 %409
  %411 = load i8, i8* %410, align 1
  %412 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %411)
  br label %.backedge

413:                                              ; preds = %14
  %.neg = add i32 %.0113, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7reverseIPxEvT_S1_(i64* %0, i64* %1) local_unnamed_addr #0 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.4, align 4
  %6 = load i32, i32* @y.5, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ -1705242631, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %12

12:                                               ; preds = %.outer, %12
  switch i32 %.0.ph, label %12 [
    i32 -1705242631, label %13
    i32 1875445483, label %16
    i32 1509357401, label %27
    i32 -1619618783, label %28
  ]

13:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %14 = or i1 %.0..0..0., %.0..0..0.1
  %15 = select i1 %14, i32 1875445483, i32 -1619618783
  br label %.outer.backedge

16:                                               ; preds = %12
  %17 = alloca i64*, align 8
  store i64* %0, i64** %17, align 8
  call void @_ZSt19__iterator_categoryIPxENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i64** nonnull dereferenceable(8) %17)
  call void @_ZSt9__reverseIPxEvT_S1_St26random_access_iterator_tag(i64* %0, i64* %1)
  %18 = load i32, i32* @x.4, align 4
  %19 = load i32, i32* @y.5, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 1509357401, i32 -1619618783
  br label %.outer.backedge

27:                                               ; preds = %12
  ret void

28:                                               ; preds = %12
  %29 = alloca i64*, align 8
  store i64* %0, i64** %29, align 8
  call void @_ZSt19__iterator_categoryIPxENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i64** nonnull dereferenceable(8) %29)
  call void @_ZSt9__reverseIPxEvT_S1_St26random_access_iterator_tag(i64* %0, i64* %1)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %28, %16, %13
  %.0.ph.be = phi i32 [ %15, %13 ], [ %26, %16 ], [ 1875445483, %28 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9__reverseIPxEvT_S1_St26random_access_iterator_tag(i64* %0, i64* %1) local_unnamed_addr #0 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %4, align 8
  br label %6

6:                                                ; preds = %.backedge, %2
  %.017 = phi i64* [ %0, %2 ], [ %.017.be, %.backedge ]
  %.015 = phi i64* [ %1, %2 ], [ %.015.be, %.backedge ]
  %.0 = phi i32 [ -714422871, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -714422871, label %7
    i32 -1215585498, label %10
    i32 -672449795, label %11
    i32 914108417, label %21
    i32 753808022, label %32
    i32 -889608026, label %33
    i32 -1368018713, label %43
    i32 560178487, label %54
    i32 406085581, label %56
    i32 1001843559, label %59
    i32 -2123041069, label %60
    i32 -378397518, label %62
  ]

.backedge:                                        ; preds = %6, %62, %60, %56, %54, %43, %33, %32, %21, %11, %10, %7
  %.017.be = phi i64* [ %.017, %6 ], [ %.017, %62 ], [ %.017, %60 ], [ %57, %56 ], [ %.017, %54 ], [ %.017, %43 ], [ %.017, %33 ], [ %.017, %32 ], [ %.017, %21 ], [ %.017, %11 ], [ %.017, %10 ], [ %.017, %7 ]
  %.015.be = phi i64* [ %.015, %6 ], [ %.015, %62 ], [ %61, %60 ], [ %58, %56 ], [ %.015, %54 ], [ %.015, %43 ], [ %.015, %33 ], [ %.015, %32 ], [ %22, %21 ], [ %.015, %11 ], [ %.015, %10 ], [ %.015, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ -1368018713, %62 ], [ 914108417, %60 ], [ -889608026, %56 ], [ %55, %54 ], [ %53, %43 ], [ %42, %33 ], [ -889608026, %32 ], [ %31, %21 ], [ %20, %11 ], [ 1001843559, %10 ], [ %9, %7 ]
  br label %6

7:                                                ; preds = %6
  %.0..0..0.12 = load volatile i64*, i64** %5, align 8
  %.0..0..0.13 = load volatile i64*, i64** %4, align 8
  %8 = icmp eq i64* %.0..0..0.12, %.0..0..0.13
  %9 = select i1 %8, i32 -1215585498, i32 -672449795
  br label %.backedge

10:                                               ; preds = %6
  br label %.backedge

11:                                               ; preds = %6
  %12 = load i32, i32* @x.6, align 4
  %13 = load i32, i32* @y.7, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 914108417, i32 -2123041069
  br label %.backedge

21:                                               ; preds = %6
  %22 = getelementptr inbounds i64, i64* %.015, i64 -1
  %23 = load i32, i32* @x.6, align 4
  %24 = load i32, i32* @y.7, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 753808022, i32 -2123041069
  br label %.backedge

32:                                               ; preds = %6
  br label %.backedge

33:                                               ; preds = %6
  %34 = load i32, i32* @x.6, align 4
  %35 = load i32, i32* @y.7, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 -1368018713, i32 -378397518
  br label %.backedge

43:                                               ; preds = %6
  %44 = icmp ult i64* %.017, %.015
  store i1 %44, i1* %3, align 1
  %45 = load i32, i32* @x.6, align 4
  %46 = load i32, i32* @y.7, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 560178487, i32 -378397518
  br label %.backedge

54:                                               ; preds = %6
  %.0..0..0.14 = load volatile i1, i1* %3, align 1
  %55 = select i1 %.0..0..0.14, i32 406085581, i32 1001843559
  br label %.backedge

56:                                               ; preds = %6
  tail call void @_ZSt9iter_swapIPxS0_EvT_T0_(i64* %.017, i64* %.015)
  %57 = getelementptr inbounds i64, i64* %.017, i64 1
  %58 = getelementptr inbounds i64, i64* %.015, i64 -1
  br label %.backedge

59:                                               ; preds = %6
  ret void

60:                                               ; preds = %6
  %61 = getelementptr inbounds i64, i64* %.015, i64 -1
  br label %.backedge

62:                                               ; preds = %6
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPxENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i64** dereferenceable(8) %0) local_unnamed_addr #6 comdat {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9iter_swapIPxS0_EvT_T0_(i64* %0, i64* %1) local_unnamed_addr #6 comdat {
  tail call void @_ZSt4swapIxEvRT_S1_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) #7
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIxEvRT_S1_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i64, align 8
  %4 = tail call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* nonnull dereferenceable(8) %0) #7
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = tail call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* nonnull dereferenceable(8) %1) #7
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %0, align 8
  %8 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* nonnull dereferenceable(8) %3) #7
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %1, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %0) local_unnamed_addr #6 comdat {
  ret i64* %0
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s300375375.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
