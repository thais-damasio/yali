; ModuleID = 'build_ollvm/programs/p03247/s594620813.ll'
source_filename = "Project_CodeNet_C++1400/p03247/s594620813.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@pos = local_unnamed_addr global [2 x [100005 x i64]] zeroinitializer, align 16
@ch = global [45 x i8] zeroinitializer, align 16
@x = global [100005 x i64] zeroinitializer, align 16
@y = global [100005 x i64] zeroinitializer, align 16
@exs = local_unnamed_addr global [2 x i64] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s594620813.cpp, i8* null }]
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define void @_Z5solvexx(i64 %0, i64 %1) local_unnamed_addr #4 {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64, align 8
  store i64 %1, i64* %6, align 8
  %7 = sub i64 0, %1
  %8 = load i32, i32* @x.3, align 4
  %9 = load i32, i32* @y.4, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -1475243064, i32 -372065079
  %17 = select i1 %15, i32 -1962383408, i32 -372065079
  %18 = select i1 %15, i32 1878014509, i32 -1629757386
  %19 = select i1 %15, i32 949058166, i32 -1629757386
  %20 = select i1 %15, i32 1082738396, i32 1919138861
  %21 = select i1 %15, i32 1568651672, i32 1919138861
  %22 = select i1 %15, i32 -400109456, i32 1539210879
  %23 = select i1 %15, i32 -497703941, i32 1539210879
  %24 = select i1 %15, i32 1771113428, i32 1280560440
  %25 = select i1 %15, i32 -126748798, i32 1280560440
  %26 = select i1 %15, i32 1723248270, i32 -947174384
  %27 = select i1 %15, i32 -1344773534, i32 -947174384
  %28 = select i1 %15, i32 2112746565, i32 -1954319730
  %29 = select i1 %15, i32 1392434676, i32 -1954319730
  br label %30

30:                                               ; preds = %.backedge, %2
  %.067 = phi i64 [ 1, %2 ], [ %.067.be, %.backedge ]
  %.065 = phi i64 [ %1, %2 ], [ %.065.be, %.backedge ]
  %.063 = phi i64 [ undef, %2 ], [ %.063.be, %.backedge ]
  %.061 = phi i64 [ undef, %2 ], [ %.061.be, %.backedge ]
  %.059 = phi i64 [ undef, %2 ], [ %.059.be, %.backedge ]
  %.0 = phi i32 [ -636146663, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -636146663, label %31
    i32 1042492405, label %34
    i32 1392434676, label %35
    i32 2112746565, label %36
    i32 -472544715, label %37
    i32 1368039579, label %38
    i32 -1344773534, label %39
    i32 1723248270, label %41
    i32 -849480294, label %43
    i32 1977844840, label %47
    i32 -1100693865, label %49
    i32 -1124441029, label %50
    i32 756400191, label %53
    i32 -126748798, label %54
    i32 1771113428, label %58
    i32 1393321289, label %60
    i32 1368348093, label %65
    i32 -497703941, label %66
    i32 -400109456, label %76
    i32 -1580934044, label %77
    i32 1568651672, label %78
    i32 1082738396, label %82
    i32 -1954499011, label %84
    i32 1584303349, label %89
    i32 -408082606, label %97
    i32 949058166, label %98
    i32 1878014509, label %99
    i32 1210514474, label %100
    i32 1918319951, label %101
    i32 -248627508, label %103
    i32 -1883540308, label %104
    i32 -968510859, label %107
    i32 -1962383408, label %108
    i32 -1475243064, label %112
    i32 1755686065, label %113
    i32 1088649544, label %115
    i32 -1954319730, label %116
    i32 -947174384, label %117
    i32 1280560440, label %118
    i32 1539210879, label %119
    i32 1919138861, label %127
    i32 -1629757386, label %128
    i32 -372065079, label %129
  ]

.backedge:                                        ; preds = %30, %129, %128, %127, %119, %118, %117, %116, %113, %112, %108, %107, %104, %103, %101, %100, %99, %98, %97, %89, %84, %82, %78, %77, %76, %66, %65, %60, %58, %54, %53, %50, %49, %47, %43, %41, %39, %38, %37, %36, %35, %34, %31
  %.067.be = phi i64 [ %.067, %30 ], [ %.067, %129 ], [ %.067, %128 ], [ %.067, %127 ], [ %.067, %119 ], [ %.067, %118 ], [ %.067, %117 ], [ -1, %116 ], [ %.067, %113 ], [ %.067, %112 ], [ %.067, %108 ], [ %.067, %107 ], [ %.067, %104 ], [ %.067, %103 ], [ %.067, %101 ], [ %.067, %100 ], [ %.067, %99 ], [ %.067, %98 ], [ %.067, %97 ], [ %.067, %89 ], [ %.067, %84 ], [ %.067, %82 ], [ %.067, %78 ], [ %.067, %77 ], [ %.067, %76 ], [ %.067, %66 ], [ %.067, %65 ], [ %.067, %60 ], [ %.067, %58 ], [ %.067, %54 ], [ %.067, %53 ], [ %.067, %50 ], [ %.067, %49 ], [ %.067, %47 ], [ %.067, %43 ], [ %.067, %41 ], [ %.067, %39 ], [ %.067, %38 ], [ %.067, %37 ], [ %.067, %36 ], [ -1, %35 ], [ %.067, %34 ], [ %.067, %31 ]
  %.065.be = phi i64 [ %.065, %30 ], [ %.065, %129 ], [ %.065, %128 ], [ %.065, %127 ], [ %.065, %119 ], [ %.065, %118 ], [ %.065, %117 ], [ %7, %116 ], [ %.065, %113 ], [ %.065, %112 ], [ %.065, %108 ], [ %.065, %107 ], [ %.065, %104 ], [ %.065, %103 ], [ %.065, %101 ], [ %.065, %100 ], [ %.065, %99 ], [ %.065, %98 ], [ %.065, %97 ], [ %.065, %89 ], [ %.065, %84 ], [ %.065, %82 ], [ %.065, %78 ], [ %.065, %77 ], [ %.065, %76 ], [ %.065, %66 ], [ %.065, %65 ], [ %.065, %60 ], [ %.065, %58 ], [ %.065, %54 ], [ %.065, %53 ], [ %.065, %50 ], [ %.065, %49 ], [ %.065, %47 ], [ %46, %43 ], [ %.065, %41 ], [ %.065, %39 ], [ %.065, %38 ], [ %.065, %37 ], [ %.065, %36 ], [ %7, %35 ], [ %.065, %34 ], [ %.065, %31 ]
  %.063.be = phi i64 [ %.063, %30 ], [ %.063, %129 ], [ %.063, %128 ], [ %.063, %127 ], [ %.063, %119 ], [ %.063, %118 ], [ %.063, %117 ], [ %.063, %116 ], [ %.063, %113 ], [ %.063, %112 ], [ %.063, %108 ], [ %.063, %107 ], [ %.063, %104 ], [ %.063, %103 ], [ %.063, %101 ], [ %.063, %100 ], [ %.063, %99 ], [ %.063, %98 ], [ %.063, %97 ], [ %.063, %89 ], [ %.063, %84 ], [ %.063, %82 ], [ %.063, %78 ], [ %.063, %77 ], [ %.063, %76 ], [ %.063, %66 ], [ %.063, %65 ], [ %.063, %60 ], [ %.063, %58 ], [ %.063, %54 ], [ %.063, %53 ], [ %.063, %50 ], [ %.063, %49 ], [ %48, %47 ], [ %.063, %43 ], [ %.063, %41 ], [ %.063, %39 ], [ %.063, %38 ], [ 0, %37 ], [ %.063, %36 ], [ %.063, %35 ], [ %.063, %34 ], [ %.063, %31 ]
  %.061.be = phi i64 [ %.061, %30 ], [ %.061, %129 ], [ %.061, %128 ], [ %.061, %127 ], [ %.061, %119 ], [ %.061, %118 ], [ %.061, %117 ], [ %.061, %116 ], [ %.061, %113 ], [ %.061, %112 ], [ %.061, %108 ], [ %.061, %107 ], [ %.061, %104 ], [ %.061, %103 ], [ %102, %101 ], [ %.061, %100 ], [ %.061, %99 ], [ %.061, %98 ], [ %.061, %97 ], [ %.061, %89 ], [ %.061, %84 ], [ %.061, %82 ], [ %.061, %78 ], [ %.061, %77 ], [ %.061, %76 ], [ %.061, %66 ], [ %.061, %65 ], [ %.061, %60 ], [ %.061, %58 ], [ %.061, %54 ], [ %.061, %53 ], [ %.061, %50 ], [ 0, %49 ], [ %.061, %47 ], [ %.061, %43 ], [ %.061, %41 ], [ %.061, %39 ], [ %.061, %38 ], [ %.061, %37 ], [ %.061, %36 ], [ %.061, %35 ], [ %.061, %34 ], [ %.061, %31 ]
  %.059.be = phi i64 [ %.059, %30 ], [ %.059, %129 ], [ %.059, %128 ], [ %.059, %127 ], [ %.059, %119 ], [ %.059, %118 ], [ %.059, %117 ], [ %.059, %116 ], [ %114, %113 ], [ %.059, %112 ], [ %.059, %108 ], [ %.059, %107 ], [ %.059, %104 ], [ 0, %103 ], [ %.059, %101 ], [ %.059, %100 ], [ %.059, %99 ], [ %.059, %98 ], [ %.059, %97 ], [ %.059, %89 ], [ %.059, %84 ], [ %.059, %82 ], [ %.059, %78 ], [ %.059, %77 ], [ %.059, %76 ], [ %.059, %66 ], [ %.059, %65 ], [ %.059, %60 ], [ %.059, %58 ], [ %.059, %54 ], [ %.059, %53 ], [ %.059, %50 ], [ %.059, %49 ], [ %.059, %47 ], [ %.059, %43 ], [ %.059, %41 ], [ %.059, %39 ], [ %.059, %38 ], [ %.059, %37 ], [ %.059, %36 ], [ %.059, %35 ], [ %.059, %34 ], [ %.059, %31 ]
  %.0.be = phi i32 [ %.0, %30 ], [ -1962383408, %129 ], [ 949058166, %128 ], [ 1568651672, %127 ], [ -497703941, %119 ], [ -126748798, %118 ], [ -1344773534, %117 ], [ 1392434676, %116 ], [ -1883540308, %113 ], [ 1755686065, %112 ], [ %16, %108 ], [ %17, %107 ], [ %106, %104 ], [ -1883540308, %103 ], [ -1124441029, %101 ], [ 1918319951, %100 ], [ 1210514474, %99 ], [ %18, %98 ], [ %19, %97 ], [ -408082606, %89 ], [ %88, %84 ], [ %83, %82 ], [ %20, %78 ], [ %21, %77 ], [ 1210514474, %76 ], [ %22, %66 ], [ %23, %65 ], [ %64, %60 ], [ %59, %58 ], [ %24, %54 ], [ %25, %53 ], [ %52, %50 ], [ -1124441029, %49 ], [ 1368039579, %47 ], [ 1977844840, %43 ], [ %42, %41 ], [ %26, %39 ], [ %27, %38 ], [ 1368039579, %37 ], [ -472544715, %36 ], [ %28, %35 ], [ %29, %34 ], [ %33, %31 ]
  br label %30

31:                                               ; preds = %30
  %.0..0..0. = load volatile i64, i64* %6, align 8
  %32 = icmp slt i64 %.0..0..0., 0
  %33 = select i1 %32, i32 1042492405, i32 -472544715
  br label %.backedge

34:                                               ; preds = %30
  br label %.backedge

35:                                               ; preds = %30
  br label %.backedge

36:                                               ; preds = %30
  br label %.backedge

37:                                               ; preds = %30
  br label %.backedge

38:                                               ; preds = %30
  br label %.backedge

39:                                               ; preds = %30
  %40 = icmp slt i64 %.063, 20
  store i1 %40, i1* %5, align 1
  br label %.backedge

41:                                               ; preds = %30
  %.0..0..0.56 = load volatile i1, i1* %5, align 1
  %42 = select i1 %.0..0..0.56, i32 -849480294, i32 -1100693865
  br label %.backedge

43:                                               ; preds = %30
  %44 = srem i64 %.065, 3
  %45 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.063
  store i64 %44, i64* %45, align 8
  %46 = sdiv i64 %.065, 3
  br label %.backedge

47:                                               ; preds = %30
  %48 = add i64 %.063, 1
  br label %.backedge

49:                                               ; preds = %30
  br label %.backedge

50:                                               ; preds = %30
  %51 = icmp slt i64 %.061, 20
  %52 = select i1 %51, i32 756400191, i32 -248627508
  br label %.backedge

53:                                               ; preds = %30
  br label %.backedge

54:                                               ; preds = %30
  %55 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.061
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 2
  store i1 %57, i1* %4, align 1
  br label %.backedge

58:                                               ; preds = %30
  %.0..0..0.57 = load volatile i1, i1* %4, align 1
  %59 = select i1 %.0..0..0.57, i32 1368348093, i32 1393321289
  br label %.backedge

60:                                               ; preds = %30
  %61 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.061
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, -2
  %64 = select i1 %63, i32 1368348093, i32 -1580934044
  br label %.backedge

65:                                               ; preds = %30
  br label %.backedge

66:                                               ; preds = %30
  %67 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.061
  %68 = load i64, i64* %67, align 8
  %69 = sdiv i64 %68, 2
  %70 = add i64 %.061, 1
  %71 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %70
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %69
  store i64 %73, i64* %71, align 8
  %74 = sub i64 0, %68
  %75 = sdiv i64 %74, 2
  store i64 %75, i64* %67, align 8
  br label %.backedge

76:                                               ; preds = %30
  br label %.backedge

77:                                               ; preds = %30
  br label %.backedge

78:                                               ; preds = %30
  %79 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.061
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 3
  store i1 %81, i1* %3, align 1
  br label %.backedge

82:                                               ; preds = %30
  %.0..0..0.58 = load volatile i1, i1* %3, align 1
  %83 = select i1 %.0..0..0.58, i32 1584303349, i32 -1954499011
  br label %.backedge

84:                                               ; preds = %30
  %85 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.061
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, -3
  %88 = select i1 %87, i32 1584303349, i32 -408082606
  br label %.backedge

89:                                               ; preds = %30
  %90 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.061
  %91 = load i64, i64* %90, align 8
  %92 = sdiv i64 %91, 3
  %93 = add i64 %.061, 1
  %94 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %93
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, %92
  store i64 %96, i64* %94, align 8
  store i64 0, i64* %90, align 8
  br label %.backedge

97:                                               ; preds = %30
  br label %.backedge

98:                                               ; preds = %30
  br label %.backedge

99:                                               ; preds = %30
  br label %.backedge

100:                                              ; preds = %30
  br label %.backedge

101:                                              ; preds = %30
  %102 = add i64 %.061, 1
  br label %.backedge

103:                                              ; preds = %30
  br label %.backedge

104:                                              ; preds = %30
  %105 = icmp slt i64 %.059, 20
  %106 = select i1 %105, i32 -968510859, i32 1088649544
  br label %.backedge

107:                                              ; preds = %30
  br label %.backedge

108:                                              ; preds = %30
  %109 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.059
  %110 = load i64, i64* %109, align 8
  %111 = mul nsw i64 %110, %.067
  store i64 %111, i64* %109, align 8
  br label %.backedge

112:                                              ; preds = %30
  br label %.backedge

113:                                              ; preds = %30
  %114 = add i64 %.059, 1
  br label %.backedge

115:                                              ; preds = %30
  ret void

116:                                              ; preds = %30
  br label %.backedge

117:                                              ; preds = %30
  br label %.backedge

118:                                              ; preds = %30
  br label %.backedge

119:                                              ; preds = %30
  %120 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.061
  %121 = load i64, i64* %120, align 8
  %.neg.neg = sdiv i64 %121, 2
  %122 = add i64 %.061, 1
  %123 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %122
  %124 = load i64, i64* %123, align 8
  %.neg69 = add i64 %.neg.neg, %124
  store i64 %.neg69, i64* %123, align 8
  %125 = sub i64 0, %121
  %126 = sdiv i64 %125, 2
  store i64 %126, i64* %120, align 8
  br label %.backedge

127:                                              ; preds = %30
  br label %.backedge

128:                                              ; preds = %30
  br label %.backedge

129:                                              ; preds = %30
  %130 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 %0, i64 %.059
  %131 = load i64, i64* %130, align 8
  %132 = mul nsw i64 %131, %.067
  store i64 %132, i64* %130, align 8
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nosync nounwind readonly uwtable
define i64 @_Z3pwrxx(i64 %0, i64 %1) local_unnamed_addr #5 {
  %3 = load i32, i32* @x.5, align 4
  %4 = load i32, i32* @y.6, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %9, %8
  %11 = select i1 %10, i32 -1888679368, i32 1054883330
  %12 = select i1 %10, i32 1287040828, i32 1054883330
  br label %.outer

.outer:                                           ; preds = %14, %2
  %.09.ph = phi i64 [ %.neg, %14 ], [ %1, %2 ]
  %.07.ph = phi i64 [ %.07.ph12, %14 ], [ 1, %2 ]
  %.0.ph = phi i32 [ %15, %14 ], [ 415446991, %2 ]
  br label %.outer11

.outer11:                                         ; preds = %.outer11.backedge, %.outer
  %.07.ph12 = phi i64 [ %.07.ph, %.outer ], [ %.07.ph12.be, %.outer11.backedge ]
  %.0.ph13 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph13.be, %.outer11.backedge ]
  br label %.outer14

.outer14:                                         ; preds = %.outer14.backedge, %.outer11
  %.0.ph15 = phi i32 [ %.0.ph13, %.outer11 ], [ %.0.ph15.be, %.outer14.backedge ]
  br label %13

13:                                               ; preds = %.outer14, %13
  switch i32 %.0.ph15, label %13 [
    i32 415446991, label %14
    i32 1757086613, label %.outer14.backedge
    i32 1287040828, label %.outer11.backedge
    i32 -1888679368, label %16
    i32 1750982481, label %17
    i32 1054883330, label %18
  ]

14:                                               ; preds = %13
  %.neg = add i64 %.09.ph, -1
  %.not = icmp eq i64 %.09.ph, 0
  %15 = select i1 %.not, i32 1750982481, i32 1757086613
  br label %.outer

16:                                               ; preds = %13
  br label %.outer14.backedge

.outer14.backedge:                                ; preds = %13, %16
  %.0.ph15.be = phi i32 [ 415446991, %16 ], [ %12, %13 ]
  br label %.outer14

17:                                               ; preds = %13
  ret i64 %.07.ph12

18:                                               ; preds = %13
  br label %.outer11.backedge

.outer11.backedge:                                ; preds = %13, %18
  %.0.ph13.be = phi i32 [ 1287040828, %18 ], [ %11, %13 ]
  %.07.ph12.be = mul nsw i64 %.07.ph12, %0
  br label %.outer11
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #6 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = alloca i1, align 1
  %12 = alloca i64, align 8
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %12)
  br label %14

14:                                               ; preds = %.backedge, %0
  %.0110 = phi i64 [ 1, %0 ], [ %.0110.be, %.backedge ]
  %.0108 = phi i64 [ undef, %0 ], [ %.0108.be, %.backedge ]
  %.0106 = phi i64 [ undef, %0 ], [ %.0106.be, %.backedge ]
  %.0104 = phi i64 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i64 [ undef, %0 ], [ %.0102.be, %.backedge ]
  %.0 = phi i32 [ 1525536376, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1525536376, label %15
    i32 -194908530, label %18
    i32 -1401835317, label %28
    i32 1614011552, label %47
    i32 500575319, label %48
    i32 -1418899545, label %50
    i32 167414254, label %53
    i32 -1131353739, label %63
    i32 -1396569465, label %75
    i32 -601627096, label %77
    i32 -1787287467, label %80
    i32 -1106222705, label %83
    i32 -1341250389, label %86
    i32 157367072, label %89
    i32 -539980297, label %98
    i32 -1664343963, label %100
    i32 453026763, label %101
    i32 1166492848, label %104
    i32 1995141000, label %107
    i32 765150420, label %110
    i32 1287625852, label %120
    i32 596208856, label %136
    i32 -3892209, label %137
    i32 -274594436, label %138
    i32 1927211053, label %142
    i32 -712631030, label %143
    i32 1456501772, label %153
    i32 -2117244290, label %165
    i32 563469625, label %167
    i32 261788878, label %172
    i32 -2042458019, label %175
    i32 553209763, label %180
    i32 1750935506, label %190
    i32 610500391, label %205
    i32 -1549948313, label %206
    i32 -1262585552, label %211
    i32 -183856135, label %217
    i32 -1665306867, label %227
    i32 -731104922, label %240
    i32 162078687, label %242
    i32 1961049452, label %252
    i32 1487126530, label %267
    i32 981546943, label %268
    i32 -65302033, label %273
    i32 831029783, label %283
    i32 1513484739, label %297
    i32 -1015117905, label %298
    i32 -1698692972, label %302
    i32 -1785126371, label %306
    i32 1769374125, label %319
    i32 1032342107, label %323
    i32 502288190, label %333
    i32 -1674339277, label %346
    i32 -45938623, label %348
    i32 -1949128376, label %353
    i32 -625998941, label %363
    i32 -357913163, label %376
    i32 1264291548, label %378
    i32 -1932319104, label %382
    i32 -23380650, label %387
    i32 -163036518, label %396
    i32 1894178340, label %406
    i32 -568824836, label %419
    i32 -1862893567, label %421
    i32 -714747571, label %431
    i32 -1530842846, label %449
    i32 213205591, label %450
    i32 707851499, label %451
    i32 -1075273294, label %461
    i32 1031346682, label %474
    i32 942398815, label %476
    i32 -694544030, label %480
    i32 790472415, label %485
    i32 311998344, label %494
    i32 1379986695, label %499
    i32 1013124667, label %507
    i32 1530669971, label %508
    i32 -505060109, label %509
    i32 -1022754410, label %510
    i32 1204786271, label %513
    i32 -1604961807, label %516
    i32 -656047189, label %520
    i32 -184568866, label %523
    i32 -1823337173, label %533
    i32 -1118097816, label %545
    i32 -748607254, label %547
    i32 671667351, label %557
    i32 -1050471294, label %570
    i32 480159608, label %571
    i32 -1411483530, label %574
    i32 1369575696, label %584
    i32 -1509737802, label %596
    i32 582421226, label %598
    i32 989711835, label %599
    i32 -1851066359, label %602
    i32 -1421178464, label %612
    i32 1976243969, label %624
    i32 1656600675, label %626
    i32 -1998290281, label %633
    i32 832635869, label %636
    i32 -261412309, label %637
    i32 -736926483, label %647
    i32 -905045553, label %657
    i32 -1181911889, label %658
    i32 -2138720644, label %668
    i32 314953150, label %678
    i32 790074509, label %679
    i32 -279928195, label %689
    i32 -1274329533, label %690
    i32 215919825, label %697
    i32 866008764, label %698
    i32 1915497570, label %704
    i32 1552772828, label %705
    i32 -803807112, label %710
    i32 1190613995, label %715
    i32 585902780, label %716
    i32 36069352, label %717
    i32 -258461720, label %718
    i32 1746145909, label %728
    i32 -29526957, label %729
    i32 1199387706, label %730
    i32 -271338466, label %734
    i32 -664520363, label %735
    i32 -651400001, label %736
    i32 1880832450, label %737
  ]

.backedge:                                        ; preds = %14, %737, %736, %735, %734, %730, %729, %728, %718, %717, %716, %715, %710, %705, %704, %698, %697, %690, %689, %679, %668, %658, %657, %647, %637, %636, %633, %626, %624, %612, %602, %599, %598, %596, %584, %574, %571, %570, %557, %547, %545, %533, %523, %520, %516, %513, %510, %509, %508, %507, %499, %494, %485, %480, %476, %474, %461, %451, %450, %449, %431, %421, %419, %406, %396, %387, %382, %378, %376, %363, %353, %348, %346, %333, %323, %319, %306, %302, %298, %297, %283, %273, %268, %267, %252, %242, %240, %227, %217, %211, %206, %205, %190, %180, %175, %172, %167, %165, %153, %143, %142, %138, %137, %136, %120, %110, %107, %104, %101, %100, %98, %89, %86, %83, %80, %77, %75, %63, %53, %50, %48, %47, %28, %18, %15
  %.0110.be = phi i64 [ %.0110, %14 ], [ %.0110, %737 ], [ %.0110, %736 ], [ %.0110, %735 ], [ %.0110, %734 ], [ %.0110, %730 ], [ %.0110, %729 ], [ %.0110, %728 ], [ %.0110, %718 ], [ %.0110, %717 ], [ %.0110, %716 ], [ %.0110, %715 ], [ %.0110, %710 ], [ %.0110, %705 ], [ %.0110, %704 ], [ %.0110, %698 ], [ %.0110, %697 ], [ %.0110, %690 ], [ %.0110, %689 ], [ %.0110, %679 ], [ %.0110, %668 ], [ %.0110, %658 ], [ %.0110, %657 ], [ %.0110, %647 ], [ %.0110, %637 ], [ %.0110, %636 ], [ %.0110, %633 ], [ %.0110, %626 ], [ %.0110, %624 ], [ %.0110, %612 ], [ %.0110, %602 ], [ %.0110, %599 ], [ %.0110, %598 ], [ %.0110, %596 ], [ %.0110, %584 ], [ %.0110, %574 ], [ %.0110, %571 ], [ %.0110, %570 ], [ %.0110, %557 ], [ %.0110, %547 ], [ %.0110, %545 ], [ %.0110, %533 ], [ %.0110, %523 ], [ %.0110, %520 ], [ %.0110, %516 ], [ %.0110, %513 ], [ %.0110, %510 ], [ %.0110, %509 ], [ %.0110, %508 ], [ %.0110, %507 ], [ %.0110, %499 ], [ %.0110, %494 ], [ %.0110, %485 ], [ %.0110, %480 ], [ %.0110, %476 ], [ %.0110, %474 ], [ %.0110, %461 ], [ %.0110, %451 ], [ %.0110, %450 ], [ %.0110, %449 ], [ %.0110, %431 ], [ %.0110, %421 ], [ %.0110, %419 ], [ %.0110, %406 ], [ %.0110, %396 ], [ %.0110, %387 ], [ %.0110, %382 ], [ %.0110, %378 ], [ %.0110, %376 ], [ %.0110, %363 ], [ %.0110, %353 ], [ %.0110, %348 ], [ %.0110, %346 ], [ %.0110, %333 ], [ %.0110, %323 ], [ %.0110, %319 ], [ %.0110, %306 ], [ %.0110, %302 ], [ %.0110, %298 ], [ %.0110, %297 ], [ %.0110, %283 ], [ %.0110, %273 ], [ %.0110, %268 ], [ %.0110, %267 ], [ %.0110, %252 ], [ %.0110, %242 ], [ %.0110, %240 ], [ %.0110, %227 ], [ %.0110, %217 ], [ %.0110, %211 ], [ %.0110, %206 ], [ %.0110, %205 ], [ %.0110, %190 ], [ %.0110, %180 ], [ %.0110, %175 ], [ %.0110, %172 ], [ %.0110, %167 ], [ %.0110, %165 ], [ %.0110, %153 ], [ %.0110, %143 ], [ %.0110, %142 ], [ %.0110, %138 ], [ %.0110, %137 ], [ %.0110, %136 ], [ %.0110, %120 ], [ %.0110, %110 ], [ %.0110, %107 ], [ %.0110, %104 ], [ %.0110, %101 ], [ %.0110, %100 ], [ %.0110, %98 ], [ %.0110, %89 ], [ %.0110, %86 ], [ %.0110, %83 ], [ %.0110, %80 ], [ %.0110, %77 ], [ %.0110, %75 ], [ %.0110, %63 ], [ %.0110, %53 ], [ %.0110, %50 ], [ %49, %48 ], [ %.0110, %47 ], [ %.0110, %28 ], [ %.0110, %18 ], [ %.0110, %15 ]
  %.0108.be = phi i64 [ %.0108, %14 ], [ %.0108, %737 ], [ %.0108, %736 ], [ %.0108, %735 ], [ %.0108, %734 ], [ %.0108, %730 ], [ %.0108, %729 ], [ %.0108, %728 ], [ %.0108, %718 ], [ %.0108, %717 ], [ %.0108, %716 ], [ %.0108, %715 ], [ %.0108, %710 ], [ %.0108, %705 ], [ %.0108, %704 ], [ %.0108, %698 ], [ %.0108, %697 ], [ %.0108, %690 ], [ %.0108, %689 ], [ %.0108, %679 ], [ %.0108, %668 ], [ %.0108, %658 ], [ %.0108, %657 ], [ %.0108, %647 ], [ %.0108, %637 ], [ %.0108, %636 ], [ %.0108, %633 ], [ %.0108, %626 ], [ %.0108, %624 ], [ %.0108, %612 ], [ %.0108, %602 ], [ %.0108, %599 ], [ %.0108, %598 ], [ %.0108, %596 ], [ %.0108, %584 ], [ %.0108, %574 ], [ %.0108, %571 ], [ %.0108, %570 ], [ %.0108, %557 ], [ %.0108, %547 ], [ %.0108, %545 ], [ %.0108, %533 ], [ %.0108, %523 ], [ %.0108, %520 ], [ %.0108, %516 ], [ %.0108, %513 ], [ %.0108, %510 ], [ %.0108, %509 ], [ %.0108, %508 ], [ %.0108, %507 ], [ %.0108, %499 ], [ %.0108, %494 ], [ %.0108, %485 ], [ %.0108, %480 ], [ %.0108, %476 ], [ %.0108, %474 ], [ %.0108, %461 ], [ %.0108, %451 ], [ %.0108, %450 ], [ %.0108, %449 ], [ %.0108, %431 ], [ %.0108, %421 ], [ %.0108, %419 ], [ %.0108, %406 ], [ %.0108, %396 ], [ %.0108, %387 ], [ %.0108, %382 ], [ %.0108, %378 ], [ %.0108, %376 ], [ %.0108, %363 ], [ %.0108, %353 ], [ %.0108, %348 ], [ %.0108, %346 ], [ %.0108, %333 ], [ %.0108, %323 ], [ %.0108, %319 ], [ %.0108, %306 ], [ %.0108, %302 ], [ %.0108, %298 ], [ %.0108, %297 ], [ %.0108, %283 ], [ %.0108, %273 ], [ %.0108, %268 ], [ %.0108, %267 ], [ %.0108, %252 ], [ %.0108, %242 ], [ %.0108, %240 ], [ %.0108, %227 ], [ %.0108, %217 ], [ %.0108, %211 ], [ %.0108, %206 ], [ %.0108, %205 ], [ %.0108, %190 ], [ %.0108, %180 ], [ %.0108, %175 ], [ %.0108, %172 ], [ %.0108, %167 ], [ %.0108, %165 ], [ %.0108, %153 ], [ %.0108, %143 ], [ %.0108, %142 ], [ %.0108, %138 ], [ %.0108, %137 ], [ %.0108, %136 ], [ %.0108, %120 ], [ %.0108, %110 ], [ %.0108, %107 ], [ %.0108, %104 ], [ %.0108, %101 ], [ %.0108, %100 ], [ %99, %98 ], [ %.0108, %89 ], [ %.0108, %86 ], [ 0, %83 ], [ %.0108, %80 ], [ %.0108, %77 ], [ %.0108, %75 ], [ %.0108, %63 ], [ %.0108, %53 ], [ %.0108, %50 ], [ %.0108, %48 ], [ %.0108, %47 ], [ %.0108, %28 ], [ %.0108, %18 ], [ %.0108, %15 ]
  %.0106.be = phi i64 [ %.0106, %14 ], [ %.0106, %737 ], [ %.0106, %736 ], [ %.0106, %735 ], [ %.0106, %734 ], [ %.0106, %730 ], [ %.0106, %729 ], [ %.0106, %728 ], [ %.0106, %718 ], [ %.0106, %717 ], [ %.0106, %716 ], [ %.0106, %715 ], [ %.0106, %710 ], [ %.0106, %705 ], [ %.0106, %704 ], [ %.0106, %698 ], [ %.0106, %697 ], [ %.0106, %690 ], [ %.0106, %689 ], [ %.0106, %679 ], [ %.0106, %668 ], [ %.0106, %658 ], [ %.0106, %657 ], [ %.0106, %647 ], [ %.0106, %637 ], [ %.0106, %636 ], [ %.0106, %633 ], [ %.0106, %626 ], [ %.0106, %624 ], [ %.0106, %612 ], [ %.0106, %602 ], [ %.0106, %599 ], [ %.0106, %598 ], [ %.0106, %596 ], [ %.0106, %584 ], [ %.0106, %574 ], [ %.0106, %571 ], [ %.0106, %570 ], [ %.0106, %557 ], [ %.0106, %547 ], [ %.0106, %545 ], [ %.0106, %533 ], [ %.0106, %523 ], [ %.0106, %520 ], [ %.0106, %516 ], [ %.0106, %513 ], [ %.0106, %510 ], [ %.0106, %509 ], [ %.0106, %508 ], [ %.0106, %507 ], [ %.0106, %499 ], [ %.0106, %494 ], [ %.0106, %485 ], [ %.0106, %480 ], [ %.0106, %476 ], [ %.0106, %474 ], [ %.0106, %461 ], [ %.0106, %451 ], [ %.0106, %450 ], [ %.0106, %449 ], [ %.0106, %431 ], [ %.0106, %421 ], [ %.0106, %419 ], [ %.0106, %406 ], [ %.0106, %396 ], [ %.0106, %387 ], [ %.0106, %382 ], [ %.0106, %378 ], [ %.0106, %376 ], [ %.0106, %363 ], [ %.0106, %353 ], [ %.0106, %348 ], [ %.0106, %346 ], [ %.0106, %333 ], [ %.0106, %323 ], [ %.0106, %319 ], [ %.0106, %306 ], [ %.0106, %302 ], [ %.0106, %298 ], [ %.0106, %297 ], [ %.0106, %283 ], [ %.0106, %273 ], [ %.0106, %268 ], [ %.0106, %267 ], [ %.0106, %252 ], [ %.0106, %242 ], [ %.0106, %240 ], [ %.0106, %227 ], [ %.0106, %217 ], [ %.0106, %211 ], [ %.0106, %206 ], [ %.0106, %205 ], [ %.0106, %190 ], [ %.0106, %180 ], [ %.0106, %175 ], [ %.0106, %172 ], [ %.0106, %167 ], [ %.0106, %165 ], [ %.0106, %153 ], [ %.0106, %143 ], [ %.0106, %142 ], [ %.0106, %138 ], [ %.neg132, %137 ], [ %.0106, %136 ], [ %.0106, %120 ], [ %.0106, %110 ], [ %.0106, %107 ], [ 0, %104 ], [ %.0106, %101 ], [ %.0106, %100 ], [ %.0106, %98 ], [ %.0106, %89 ], [ %.0106, %86 ], [ %.0106, %83 ], [ %.0106, %80 ], [ %.0106, %77 ], [ %.0106, %75 ], [ %.0106, %63 ], [ %.0106, %53 ], [ %.0106, %50 ], [ %.0106, %48 ], [ %.0106, %47 ], [ %.0106, %28 ], [ %.0106, %18 ], [ %.0106, %15 ]
  %.0104.be = phi i64 [ %.0104, %14 ], [ %.0104, %737 ], [ %.0104, %736 ], [ %.0104, %735 ], [ %.0104, %734 ], [ %.0104, %730 ], [ %.0104, %729 ], [ %.0104, %728 ], [ %.0104, %718 ], [ %.0104, %717 ], [ %.0104, %716 ], [ %.0104, %715 ], [ %.0104, %710 ], [ %.0104, %705 ], [ %.0104, %704 ], [ %.0104, %698 ], [ %.0104, %697 ], [ %.0104, %690 ], [ %.0104, %689 ], [ %.0104, %679 ], [ %.0104, %668 ], [ %.0104, %658 ], [ %.0104, %657 ], [ %.0104, %647 ], [ %.0104, %637 ], [ %.neg115, %636 ], [ %.0104, %633 ], [ %.0104, %626 ], [ %.0104, %624 ], [ %.0104, %612 ], [ %.0104, %602 ], [ %.0104, %599 ], [ %.0104, %598 ], [ %.0104, %596 ], [ %.0104, %584 ], [ %.0104, %574 ], [ %.0104, %571 ], [ %.0104, %570 ], [ %.0104, %557 ], [ %.0104, %547 ], [ %.0104, %545 ], [ %.0104, %533 ], [ %.0104, %523 ], [ %.0104, %520 ], [ %.0104, %516 ], [ %.0104, %513 ], [ %.0104, %510 ], [ %.0104, %509 ], [ %.0104, %508 ], [ %.0104, %507 ], [ %.0104, %499 ], [ %.0104, %494 ], [ %.0104, %485 ], [ %.0104, %480 ], [ %.0104, %476 ], [ %.0104, %474 ], [ %.0104, %461 ], [ %.0104, %451 ], [ %.0104, %450 ], [ %.0104, %449 ], [ %.0104, %431 ], [ %.0104, %421 ], [ %.0104, %419 ], [ %.0104, %406 ], [ %.0104, %396 ], [ %.0104, %387 ], [ %.0104, %382 ], [ %.0104, %378 ], [ %.0104, %376 ], [ %.0104, %363 ], [ %.0104, %353 ], [ %.0104, %348 ], [ %.0104, %346 ], [ %.0104, %333 ], [ %.0104, %323 ], [ %.0104, %319 ], [ %.0104, %306 ], [ %.0104, %302 ], [ %.0104, %298 ], [ %.0104, %297 ], [ %.0104, %283 ], [ %.0104, %273 ], [ %.0104, %268 ], [ %.0104, %267 ], [ %.0104, %252 ], [ %.0104, %242 ], [ %.0104, %240 ], [ %.0104, %227 ], [ %.0104, %217 ], [ %.0104, %211 ], [ %.0104, %206 ], [ %.0104, %205 ], [ %.0104, %190 ], [ %.0104, %180 ], [ %.0104, %175 ], [ %.0104, %172 ], [ %.0104, %167 ], [ %.0104, %165 ], [ %.0104, %153 ], [ %.0104, %143 ], [ 1, %142 ], [ %.0104, %138 ], [ %.0104, %137 ], [ %.0104, %136 ], [ %.0104, %120 ], [ %.0104, %110 ], [ %.0104, %107 ], [ %.0104, %104 ], [ %.0104, %101 ], [ %.0104, %100 ], [ %.0104, %98 ], [ %.0104, %89 ], [ %.0104, %86 ], [ %.0104, %83 ], [ %.0104, %80 ], [ %.0104, %77 ], [ %.0104, %75 ], [ %.0104, %63 ], [ %.0104, %53 ], [ %.0104, %50 ], [ %.0104, %48 ], [ %.0104, %47 ], [ %.0104, %28 ], [ %.0104, %18 ], [ %.0104, %15 ]
  %.0102.be = phi i64 [ %.0102, %14 ], [ %.0102, %737 ], [ %.0102, %736 ], [ %.0102, %735 ], [ %.0102, %734 ], [ %.0102, %730 ], [ %.0102, %729 ], [ %.0102, %728 ], [ %.0102, %718 ], [ %.0102, %717 ], [ %.0102, %716 ], [ %.0102, %715 ], [ %.0102, %710 ], [ %.0102, %705 ], [ %.0102, %704 ], [ %.0102, %698 ], [ %.0102, %697 ], [ %.0102, %690 ], [ %.0102, %689 ], [ %.0102, %679 ], [ %.0102, %668 ], [ %.0102, %658 ], [ %.0102, %657 ], [ %.0102, %647 ], [ %.0102, %637 ], [ %.0102, %636 ], [ %.0102, %633 ], [ %.0102, %626 ], [ %.0102, %624 ], [ %.0102, %612 ], [ %.0102, %602 ], [ %.0102, %599 ], [ %.0102, %598 ], [ %.0102, %596 ], [ %.0102, %584 ], [ %.0102, %574 ], [ %.0102, %571 ], [ %.0102, %570 ], [ %.0102, %557 ], [ %.0102, %547 ], [ %.0102, %545 ], [ %.0102, %533 ], [ %.0102, %523 ], [ %.0102, %520 ], [ %.0102, %516 ], [ %.0102, %513 ], [ %.0102, %510 ], [ %.neg120, %509 ], [ %.0102, %508 ], [ %.0102, %507 ], [ %.0102, %499 ], [ %.0102, %494 ], [ %.0102, %485 ], [ %.0102, %480 ], [ %.0102, %476 ], [ %.0102, %474 ], [ %.0102, %461 ], [ %.0102, %451 ], [ %.0102, %450 ], [ %.0102, %449 ], [ %.0102, %431 ], [ %.0102, %421 ], [ %.0102, %419 ], [ %.0102, %406 ], [ %.0102, %396 ], [ %.0102, %387 ], [ %.0102, %382 ], [ %.0102, %378 ], [ %.0102, %376 ], [ %.0102, %363 ], [ %.0102, %353 ], [ %.0102, %348 ], [ %.0102, %346 ], [ %.0102, %333 ], [ %.0102, %323 ], [ %.0102, %319 ], [ %.0102, %306 ], [ %.0102, %302 ], [ %.0102, %298 ], [ %.0102, %297 ], [ %.0102, %283 ], [ %.0102, %273 ], [ %.0102, %268 ], [ %.0102, %267 ], [ %.0102, %252 ], [ %.0102, %242 ], [ %.0102, %240 ], [ %.0102, %227 ], [ %.0102, %217 ], [ %.0102, %211 ], [ %.0102, %206 ], [ %.0102, %205 ], [ %.0102, %190 ], [ %.0102, %180 ], [ %.0102, %175 ], [ %.0102, %172 ], [ 0, %167 ], [ %.0102, %165 ], [ %.0102, %153 ], [ %.0102, %143 ], [ %.0102, %142 ], [ %.0102, %138 ], [ %.0102, %137 ], [ %.0102, %136 ], [ %.0102, %120 ], [ %.0102, %110 ], [ %.0102, %107 ], [ %.0102, %104 ], [ %.0102, %101 ], [ %.0102, %100 ], [ %.0102, %98 ], [ %.0102, %89 ], [ %.0102, %86 ], [ %.0102, %83 ], [ %.0102, %80 ], [ %.0102, %77 ], [ %.0102, %75 ], [ %.0102, %63 ], [ %.0102, %53 ], [ %.0102, %50 ], [ %.0102, %48 ], [ %.0102, %47 ], [ %.0102, %28 ], [ %.0102, %18 ], [ %.0102, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ -2138720644, %737 ], [ -736926483, %736 ], [ -1421178464, %735 ], [ 1369575696, %734 ], [ 671667351, %730 ], [ -1823337173, %729 ], [ -1075273294, %728 ], [ -714747571, %718 ], [ 1894178340, %717 ], [ -625998941, %716 ], [ 502288190, %715 ], [ 831029783, %710 ], [ 1961049452, %705 ], [ -1665306867, %704 ], [ 1750935506, %698 ], [ 1456501772, %697 ], [ 1287625852, %690 ], [ -1131353739, %689 ], [ -1401835317, %679 ], [ %677, %668 ], [ %667, %658 ], [ -1181911889, %657 ], [ %656, %647 ], [ %646, %637 ], [ -712631030, %636 ], [ 832635869, %633 ], [ -1998290281, %626 ], [ %625, %624 ], [ %623, %612 ], [ %611, %602 ], [ %601, %599 ], [ 989711835, %598 ], [ %597, %596 ], [ %595, %584 ], [ %583, %574 ], [ %573, %571 ], [ 480159608, %570 ], [ %569, %557 ], [ %556, %547 ], [ %546, %545 ], [ %544, %533 ], [ %532, %523 ], [ %522, %520 ], [ -656047189, %516 ], [ %515, %513 ], [ %512, %510 ], [ 261788878, %509 ], [ -505060109, %508 ], [ 1530669971, %507 ], [ 1013124667, %499 ], [ %498, %494 ], [ 311998344, %485 ], [ %484, %480 ], [ %479, %476 ], [ %475, %474 ], [ %473, %461 ], [ %460, %451 ], [ 707851499, %450 ], [ 213205591, %449 ], [ %448, %431 ], [ %430, %421 ], [ %420, %419 ], [ %418, %406 ], [ %405, %396 ], [ -163036518, %387 ], [ %386, %382 ], [ %381, %378 ], [ %377, %376 ], [ %375, %363 ], [ %362, %353 ], [ -1949128376, %348 ], [ %347, %346 ], [ %345, %333 ], [ %332, %323 ], [ %322, %319 ], [ 1769374125, %306 ], [ %305, %302 ], [ %301, %298 ], [ -1015117905, %297 ], [ %296, %283 ], [ %282, %273 ], [ %272, %268 ], [ 981546943, %267 ], [ %266, %252 ], [ %251, %242 ], [ %241, %240 ], [ %239, %227 ], [ %226, %217 ], [ -183856135, %211 ], [ %210, %206 ], [ -1549948313, %205 ], [ %204, %190 ], [ %189, %180 ], [ %179, %175 ], [ %174, %172 ], [ 261788878, %167 ], [ %166, %165 ], [ %164, %153 ], [ %152, %143 ], [ -712631030, %142 ], [ 1927211053, %138 ], [ 1995141000, %137 ], [ -3892209, %136 ], [ %135, %120 ], [ %119, %110 ], [ %109, %107 ], [ 1995141000, %104 ], [ %103, %101 ], [ 453026763, %100 ], [ -1341250389, %98 ], [ -539980297, %89 ], [ %88, %86 ], [ -1341250389, %83 ], [ %82, %80 ], [ -1181911889, %77 ], [ %76, %75 ], [ %74, %63 ], [ %62, %53 ], [ %52, %50 ], [ 1525536376, %48 ], [ 500575319, %47 ], [ %46, %28 ], [ %27, %18 ], [ %17, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i64, i64* %12, align 8
  %.not137 = icmp sgt i64 %.0110, %16
  %17 = select i1 %.not137, i32 -1418899545, i32 -194908530
  br label %.backedge

18:                                               ; preds = %14
  %19 = load i32, i32* @x.7, align 4
  %20 = load i32, i32* @y.8, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 -1401835317, i32 790074509
  br label %.backedge

28:                                               ; preds = %14
  %29 = getelementptr inbounds [100005 x i64], [100005 x i64]* @x, i64 0, i64 %.0110
  %30 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %29)
  %31 = getelementptr inbounds [100005 x i64], [100005 x i64]* @y, i64 0, i64 %.0110
  %32 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %30, i64* nonnull dereferenceable(8) %31)
  %33 = load i64, i64* %29, align 8
  %34 = load i64, i64* %31, align 8
  %35 = add i64 %34, %33
  %36 = and i64 %35, 1
  %37 = getelementptr inbounds [2 x i64], [2 x i64]* @exs, i64 0, i64 %36
  store i64 1, i64* %37, align 8
  %38 = load i32, i32* @x.7, align 4
  %39 = load i32, i32* @y.8, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 1614011552, i32 790074509
  br label %.backedge

47:                                               ; preds = %14
  br label %.backedge

48:                                               ; preds = %14
  %49 = add i64 %.0110, 1
  br label %.backedge

50:                                               ; preds = %14
  %51 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @exs, i64 0, i64 0), align 16
  %.not135 = icmp eq i64 %51, 0
  %52 = select i1 %.not135, i32 -1787287467, i32 167414254
  br label %.backedge

53:                                               ; preds = %14
  %54 = load i32, i32* @x.7, align 4
  %55 = load i32, i32* @y.8, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -1131353739, i32 -279928195
  br label %.backedge

63:                                               ; preds = %14
  %64 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @exs, i64 0, i64 1), align 8
  %65 = icmp ne i64 %64, 0
  store i1 %65, i1* %11, align 1
  %66 = load i32, i32* @x.7, align 4
  %67 = load i32, i32* @y.8, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 -1396569465, i32 -279928195
  br label %.backedge

75:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %11, align 1
  %76 = select i1 %.0..0..0., i32 -601627096, i32 -1787287467
  br label %.backedge

77:                                               ; preds = %14
  %78 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 -1)
  %79 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %78, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

80:                                               ; preds = %14
  %81 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @exs, i64 0, i64 0), align 16
  %.not134 = icmp eq i64 %81, 0
  %82 = select i1 %.not134, i32 453026763, i32 -1106222705
  br label %.backedge

83:                                               ; preds = %14
  %84 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 40)
  %85 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %84, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

86:                                               ; preds = %14
  %87 = icmp slt i64 %.0108, 20
  %88 = select i1 %87, i32 157367072, i32 -1664343963
  br label %.backedge

89:                                               ; preds = %14
  %90 = call i64 @_Z3pwrxx(i64 3, i64 %.0108)
  %91 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %90)
  %92 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %91, i8 signext 32)
  %93 = call i64 @_Z3pwrxx(i64 3, i64 %.0108)
  %94 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull %92, i64 %93)
  %95 = icmp eq i64 %.0108, 19
  %96 = select i1 %95, i8 10, i8 32
  %97 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %94, i8 signext %96)
  br label %.backedge

98:                                               ; preds = %14
  %99 = add i64 %.0108, 1
  br label %.backedge

100:                                              ; preds = %14
  br label %.backedge

101:                                              ; preds = %14
  %102 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @exs, i64 0, i64 1), align 8
  %.not133 = icmp eq i64 %102, 0
  %103 = select i1 %.not133, i32 1927211053, i32 1166492848
  br label %.backedge

104:                                              ; preds = %14
  %105 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 39)
  %106 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %105, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

107:                                              ; preds = %14
  %108 = icmp slt i64 %.0106, 19
  %109 = select i1 %108, i32 765150420, i32 -274594436
  br label %.backedge

110:                                              ; preds = %14
  %111 = load i32, i32* @x.7, align 4
  %112 = load i32, i32* @y.8, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 1287625852, i32 -1274329533
  br label %.backedge

120:                                              ; preds = %14
  %121 = call i64 @_Z3pwrxx(i64 3, i64 %.0106)
  %122 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %121)
  %123 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %122, i8 signext 32)
  %124 = call i64 @_Z3pwrxx(i64 3, i64 %.0106)
  %125 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull %123, i64 %124)
  %126 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %125, i8 signext 32)
  %127 = load i32, i32* @x.7, align 4
  %128 = load i32, i32* @y.8, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 596208856, i32 -1274329533
  br label %.backedge

136:                                              ; preds = %14
  br label %.backedge

137:                                              ; preds = %14
  %.neg132 = add i64 %.0106, 1
  br label %.backedge

138:                                              ; preds = %14
  %139 = call i64 @_Z3pwrxx(i64 3, i64 19)
  %140 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %139)
  %141 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %140, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

142:                                              ; preds = %14
  br label %.backedge

143:                                              ; preds = %14
  %144 = load i32, i32* @x.7, align 4
  %145 = load i32, i32* @y.8, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 1456501772, i32 215919825
  br label %.backedge

153:                                              ; preds = %14
  %154 = load i64, i64* %12, align 8
  %155 = icmp sle i64 %.0104, %154
  store i1 %155, i1* %10, align 1
  %156 = load i32, i32* @x.7, align 4
  %157 = load i32, i32* @y.8, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 -2117244290, i32 215919825
  br label %.backedge

165:                                              ; preds = %14
  %.0..0..0.92 = load volatile i1, i1* %10, align 1
  %166 = select i1 %.0..0..0.92, i32 563469625, i32 -261412309
  br label %.backedge

167:                                              ; preds = %14
  %168 = getelementptr inbounds [100005 x i64], [100005 x i64]* @x, i64 0, i64 %.0104
  %169 = load i64, i64* %168, align 8
  call void @_Z5solvexx(i64 0, i64 %169)
  %170 = getelementptr inbounds [100005 x i64], [100005 x i64]* @y, i64 0, i64 %.0104
  %171 = load i64, i64* %170, align 8
  call void @_Z5solvexx(i64 1, i64 %171)
  br label %.backedge

172:                                              ; preds = %14
  %173 = icmp slt i64 %.0102, 19
  %174 = select i1 %173, i32 -2042458019, i32 -1022754410
  br label %.backedge

175:                                              ; preds = %14
  %176 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, -2
  %179 = select i1 %178, i32 553209763, i32 -1549948313
  br label %.backedge

180:                                              ; preds = %14
  %181 = load i32, i32* @x.7, align 4
  %182 = load i32, i32* @y.8, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 1750935506, i32 866008764
  br label %.backedge

190:                                              ; preds = %14
  %191 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  store i64 1, i64* %191, align 8
  %192 = add i64 %.0102, 1
  %193 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %192
  %194 = load i64, i64* %193, align 8
  %195 = add i64 %194, -1
  store i64 %195, i64* %193, align 8
  %196 = load i32, i32* @x.7, align 4
  %197 = load i32, i32* @y.8, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 610500391, i32 866008764
  br label %.backedge

205:                                              ; preds = %14
  br label %.backedge

206:                                              ; preds = %14
  %207 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  %208 = load i64, i64* %207, align 8
  %209 = icmp eq i64 %208, -2
  %210 = select i1 %209, i32 -1262585552, i32 -183856135
  br label %.backedge

211:                                              ; preds = %14
  %212 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  store i64 1, i64* %212, align 8
  %213 = add i64 %.0102, 1
  %214 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %213
  %215 = load i64, i64* %214, align 8
  %216 = add i64 %215, -1
  store i64 %216, i64* %214, align 8
  br label %.backedge

217:                                              ; preds = %14
  %218 = load i32, i32* @x.7, align 4
  %219 = load i32, i32* @y.8, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -1665306867, i32 1915497570
  br label %.backedge

227:                                              ; preds = %14
  %228 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  %229 = load i64, i64* %228, align 8
  %230 = icmp eq i64 %229, 2
  store i1 %230, i1* %9, align 1
  %231 = load i32, i32* @x.7, align 4
  %232 = load i32, i32* @y.8, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 -731104922, i32 1915497570
  br label %.backedge

240:                                              ; preds = %14
  %.0..0..0.93 = load volatile i1, i1* %9, align 1
  %241 = select i1 %.0..0..0.93, i32 162078687, i32 981546943
  br label %.backedge

242:                                              ; preds = %14
  %243 = load i32, i32* @x.7, align 4
  %244 = load i32, i32* @y.8, align 4
  %245 = add i32 %243, -1
  %246 = mul i32 %245, %243
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %249, %248
  %251 = select i1 %250, i32 1961049452, i32 1552772828
  br label %.backedge

252:                                              ; preds = %14
  %253 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  store i64 -1, i64* %253, align 8
  %254 = add i64 %.0102, 1
  %255 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %254
  %256 = load i64, i64* %255, align 8
  %257 = add i64 %256, 1
  store i64 %257, i64* %255, align 8
  %258 = load i32, i32* @x.7, align 4
  %259 = load i32, i32* @y.8, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 1487126530, i32 1552772828
  br label %.backedge

267:                                              ; preds = %14
  br label %.backedge

268:                                              ; preds = %14
  %269 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  %270 = load i64, i64* %269, align 8
  %271 = icmp eq i64 %270, 2
  %272 = select i1 %271, i32 -65302033, i32 -1015117905
  br label %.backedge

273:                                              ; preds = %14
  %274 = load i32, i32* @x.7, align 4
  %275 = load i32, i32* @y.8, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 831029783, i32 -803807112
  br label %.backedge

283:                                              ; preds = %14
  %284 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  store i64 -1, i64* %284, align 8
  %285 = add i64 %.0102, 1
  %286 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %285
  %287 = load i64, i64* %286, align 8
  %.neg131 = add i64 %287, 1
  store i64 %.neg131, i64* %286, align 8
  %288 = load i32, i32* @x.7, align 4
  %289 = load i32, i32* @y.8, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 1513484739, i32 -803807112
  br label %.backedge

297:                                              ; preds = %14
  br label %.backedge

298:                                              ; preds = %14
  %299 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  %300 = load i64, i64* %299, align 8
  %.not130 = icmp eq i64 %300, 0
  %301 = select i1 %.not130, i32 1769374125, i32 -1698692972
  br label %.backedge

302:                                              ; preds = %14
  %303 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  %304 = load i64, i64* %303, align 8
  %.not129 = icmp eq i64 %304, 0
  %305 = select i1 %.not129, i32 1769374125, i32 -1785126371
  br label %.backedge

306:                                              ; preds = %14
  %307 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  %308 = load i64, i64* %307, align 8
  %309 = icmp eq i64 %308, 1
  %310 = select i1 %309, i8 82, i8 76
  %311 = shl i64 %.0102, 1
  %312 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %311
  store i8 %310, i8* %312, align 2
  %313 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  %314 = load i64, i64* %313, align 8
  %315 = icmp eq i64 %314, 1
  %316 = select i1 %315, i8 85, i8 68
  %317 = or i64 %311, 1
  %318 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %317
  store i8 %316, i8* %318, align 1
  br label %.backedge

319:                                              ; preds = %14
  %320 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  %321 = load i64, i64* %320, align 8
  %.not128 = icmp eq i64 %321, 0
  %322 = select i1 %.not128, i32 1032342107, i32 -1949128376
  br label %.backedge

323:                                              ; preds = %14
  %324 = load i32, i32* @x.7, align 4
  %325 = load i32, i32* @y.8, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 502288190, i32 1190613995
  br label %.backedge

333:                                              ; preds = %14
  %334 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  %335 = load i64, i64* %334, align 8
  %336 = icmp ne i64 %335, 0
  store i1 %336, i1* %8, align 1
  %337 = load i32, i32* @x.7, align 4
  %338 = load i32, i32* @y.8, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 -1674339277, i32 1190613995
  br label %.backedge

346:                                              ; preds = %14
  %.0..0..0.94 = load volatile i1, i1* %8, align 1
  %347 = select i1 %.0..0..0.94, i32 -1949128376, i32 -45938623
  br label %.backedge

348:                                              ; preds = %14
  %349 = shl i64 %.0102, 1
  %350 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %349
  store i8 76, i8* %350, align 2
  %351 = or i64 %349, 1
  %352 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %351
  store i8 82, i8* %352, align 1
  br label %.backedge

353:                                              ; preds = %14
  %354 = load i32, i32* @x.7, align 4
  %355 = load i32, i32* @y.8, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 -625998941, i32 585902780
  br label %.backedge

363:                                              ; preds = %14
  %364 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  %365 = load i64, i64* %364, align 8
  %366 = icmp ne i64 %365, 0
  store i1 %366, i1* %7, align 1
  %367 = load i32, i32* @x.7, align 4
  %368 = load i32, i32* @y.8, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 -357913163, i32 585902780
  br label %.backedge

376:                                              ; preds = %14
  %.0..0..0.95 = load volatile i1, i1* %7, align 1
  %377 = select i1 %.0..0..0.95, i32 1264291548, i32 707851499
  br label %.backedge

378:                                              ; preds = %14
  %379 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  %380 = load i64, i64* %379, align 8
  %.not127 = icmp eq i64 %380, 0
  %381 = select i1 %.not127, i32 -1932319104, i32 707851499
  br label %.backedge

382:                                              ; preds = %14
  %383 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  %384 = load i64, i64* %383, align 8
  %385 = icmp eq i64 %384, 1
  %386 = select i1 %385, i32 -23380650, i32 -163036518
  br label %.backedge

387:                                              ; preds = %14
  %388 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  store i64 -2, i64* %388, align 8
  %.neg126 = add i64 %.0102, 1
  %389 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.neg126
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, 1
  store i64 %391, i64* %389, align 8
  %392 = shl i64 %.0102, 1
  %393 = or i64 %392, 1
  %394 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %393
  store i8 76, i8* %394, align 1
  %395 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %392
  store i8 76, i8* %395, align 2
  br label %.backedge

396:                                              ; preds = %14
  %397 = load i32, i32* @x.7, align 4
  %398 = load i32, i32* @y.8, align 4
  %399 = add i32 %397, -1
  %400 = mul i32 %399, %397
  %401 = and i32 %400, 1
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %403, %402
  %405 = select i1 %404, i32 1894178340, i32 36069352
  br label %.backedge

406:                                              ; preds = %14
  %407 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  %408 = load i64, i64* %407, align 8
  %409 = icmp eq i64 %408, -1
  store i1 %409, i1* %6, align 1
  %410 = load i32, i32* @x.7, align 4
  %411 = load i32, i32* @y.8, align 4
  %412 = add i32 %410, -1
  %413 = mul i32 %412, %410
  %414 = and i32 %413, 1
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %416, %415
  %418 = select i1 %417, i32 -568824836, i32 36069352
  br label %.backedge

419:                                              ; preds = %14
  %.0..0..0.96 = load volatile i1, i1* %6, align 1
  %420 = select i1 %.0..0..0.96, i32 -1862893567, i32 213205591
  br label %.backedge

421:                                              ; preds = %14
  %422 = load i32, i32* @x.7, align 4
  %423 = load i32, i32* @y.8, align 4
  %424 = add i32 %422, -1
  %425 = mul i32 %424, %422
  %426 = and i32 %425, 1
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %428, %427
  %430 = select i1 %429, i32 -714747571, i32 -258461720
  br label %.backedge

431:                                              ; preds = %14
  %432 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  store i64 2, i64* %432, align 8
  %433 = add i64 %.0102, 1
  %434 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %433
  %435 = load i64, i64* %434, align 8
  %.neg125 = add i64 %435, -1
  store i64 %.neg125, i64* %434, align 8
  %436 = shl i64 %.0102, 1
  %437 = or i64 %436, 1
  %438 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %437
  store i8 82, i8* %438, align 1
  %439 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %436
  store i8 82, i8* %439, align 2
  %440 = load i32, i32* @x.7, align 4
  %441 = load i32, i32* @y.8, align 4
  %442 = add i32 %440, -1
  %443 = mul i32 %442, %440
  %444 = and i32 %443, 1
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %446, %445
  %448 = select i1 %447, i32 -1530842846, i32 -258461720
  br label %.backedge

449:                                              ; preds = %14
  br label %.backedge

450:                                              ; preds = %14
  br label %.backedge

451:                                              ; preds = %14
  %452 = load i32, i32* @x.7, align 4
  %453 = load i32, i32* @y.8, align 4
  %454 = add i32 %452, -1
  %455 = mul i32 %454, %452
  %456 = and i32 %455, 1
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %458, %457
  %460 = select i1 %459, i32 -1075273294, i32 1746145909
  br label %.backedge

461:                                              ; preds = %14
  %462 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  %463 = load i64, i64* %462, align 8
  %464 = icmp ne i64 %463, 0
  store i1 %464, i1* %5, align 1
  %465 = load i32, i32* @x.7, align 4
  %466 = load i32, i32* @y.8, align 4
  %467 = add i32 %465, -1
  %468 = mul i32 %467, %465
  %469 = and i32 %468, 1
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %471, %470
  %473 = select i1 %472, i32 1031346682, i32 1746145909
  br label %.backedge

474:                                              ; preds = %14
  %.0..0..0.97 = load volatile i1, i1* %5, align 1
  %475 = select i1 %.0..0..0.97, i32 1530669971, i32 942398815
  br label %.backedge

476:                                              ; preds = %14
  %477 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  %478 = load i64, i64* %477, align 8
  %.not124 = icmp eq i64 %478, 0
  %479 = select i1 %.not124, i32 1530669971, i32 -694544030
  br label %.backedge

480:                                              ; preds = %14
  %481 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  %482 = load i64, i64* %481, align 8
  %483 = icmp eq i64 %482, 1
  %484 = select i1 %483, i32 790472415, i32 311998344
  br label %.backedge

485:                                              ; preds = %14
  %486 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  store i64 -2, i64* %486, align 8
  %487 = add i64 %.0102, 1
  %488 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %487
  %489 = load i64, i64* %488, align 8
  %.neg123 = add i64 %489, 1
  store i64 %.neg123, i64* %488, align 8
  %490 = shl i64 %.0102, 1
  %491 = or i64 %490, 1
  %492 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %491
  store i8 68, i8* %492, align 1
  %493 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %490
  store i8 68, i8* %493, align 2
  br label %.backedge

494:                                              ; preds = %14
  %495 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  %496 = load i64, i64* %495, align 8
  %497 = icmp eq i64 %496, -1
  %498 = select i1 %497, i32 1379986695, i32 1013124667
  br label %.backedge

499:                                              ; preds = %14
  %500 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  store i64 2, i64* %500, align 8
  %501 = add i64 %.0102, 1
  %502 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %501
  %503 = load i64, i64* %502, align 8
  %.neg121 = add i64 %503, -1
  store i64 %.neg121, i64* %502, align 8
  %504 = shl i64 %.0102, 1
  %.neg122 = or i64 %504, 1
  %505 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %.neg122
  store i8 85, i8* %505, align 1
  %506 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %504
  store i8 85, i8* %506, align 2
  br label %.backedge

507:                                              ; preds = %14
  br label %.backedge

508:                                              ; preds = %14
  br label %.backedge

509:                                              ; preds = %14
  %.neg120 = add i64 %.0102, 1
  br label %.backedge

510:                                              ; preds = %14
  %511 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 19), align 8
  %.not119 = icmp eq i64 %511, 0
  %512 = select i1 %.not119, i32 -656047189, i32 1204786271
  br label %.backedge

513:                                              ; preds = %14
  %514 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 19), align 16
  %.not118 = icmp eq i64 %514, 0
  %515 = select i1 %.not118, i32 -1604961807, i32 -656047189
  br label %.backedge

516:                                              ; preds = %14
  %517 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 19), align 8
  %518 = icmp eq i64 %517, 1
  %519 = select i1 %518, i8 82, i8 76
  store i8 %519, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @ch, i64 0, i64 38), align 2
  br label %.backedge

520:                                              ; preds = %14
  %521 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 19), align 8
  %.not117 = icmp eq i64 %521, 0
  %522 = select i1 %.not117, i32 -184568866, i32 480159608
  br label %.backedge

523:                                              ; preds = %14
  %524 = load i32, i32* @x.7, align 4
  %525 = load i32, i32* @y.8, align 4
  %526 = add i32 %524, -1
  %527 = mul i32 %526, %524
  %528 = and i32 %527, 1
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %525, 10
  %531 = or i1 %530, %529
  %532 = select i1 %531, i32 -1823337173, i32 -29526957
  br label %.backedge

533:                                              ; preds = %14
  %534 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 19), align 16
  %535 = icmp ne i64 %534, 0
  store i1 %535, i1* %4, align 1
  %536 = load i32, i32* @x.7, align 4
  %537 = load i32, i32* @y.8, align 4
  %538 = add i32 %536, -1
  %539 = mul i32 %538, %536
  %540 = and i32 %539, 1
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %537, 10
  %543 = or i1 %542, %541
  %544 = select i1 %543, i32 -1118097816, i32 -29526957
  br label %.backedge

545:                                              ; preds = %14
  %.0..0..0.98 = load volatile i1, i1* %4, align 1
  %546 = select i1 %.0..0..0.98, i32 -748607254, i32 480159608
  br label %.backedge

547:                                              ; preds = %14
  %548 = load i32, i32* @x.7, align 4
  %549 = load i32, i32* @y.8, align 4
  %550 = add i32 %548, -1
  %551 = mul i32 %550, %548
  %552 = and i32 %551, 1
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %554, %553
  %556 = select i1 %555, i32 671667351, i32 1199387706
  br label %.backedge

557:                                              ; preds = %14
  %558 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 19), align 16
  %559 = icmp eq i64 %558, 1
  %560 = select i1 %559, i8 85, i8 68
  store i8 %560, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @ch, i64 0, i64 38), align 2
  %561 = load i32, i32* @x.7, align 4
  %562 = load i32, i32* @y.8, align 4
  %563 = add i32 %561, -1
  %564 = mul i32 %563, %561
  %565 = and i32 %564, 1
  %566 = icmp eq i32 %565, 0
  %567 = icmp slt i32 %562, 10
  %568 = or i1 %567, %566
  %569 = select i1 %568, i32 -1050471294, i32 1199387706
  br label %.backedge

570:                                              ; preds = %14
  br label %.backedge

571:                                              ; preds = %14
  %572 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 19), align 8
  %.not116 = icmp eq i64 %572, 0
  %573 = select i1 %.not116, i32 -1411483530, i32 989711835
  br label %.backedge

574:                                              ; preds = %14
  %575 = load i32, i32* @x.7, align 4
  %576 = load i32, i32* @y.8, align 4
  %577 = add i32 %575, -1
  %578 = mul i32 %577, %575
  %579 = and i32 %578, 1
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %581, %580
  %583 = select i1 %582, i32 1369575696, i32 -271338466
  br label %.backedge

584:                                              ; preds = %14
  %585 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 19), align 16
  %586 = icmp ne i64 %585, 0
  store i1 %586, i1* %3, align 1
  %587 = load i32, i32* @x.7, align 4
  %588 = load i32, i32* @y.8, align 4
  %589 = add i32 %587, -1
  %590 = mul i32 %589, %587
  %591 = and i32 %590, 1
  %592 = icmp eq i32 %591, 0
  %593 = icmp slt i32 %588, 10
  %594 = or i1 %593, %592
  %595 = select i1 %594, i32 -1509737802, i32 -271338466
  br label %.backedge

596:                                              ; preds = %14
  %.0..0..0.99 = load volatile i1, i1* %3, align 1
  %597 = select i1 %.0..0..0.99, i32 989711835, i32 582421226
  br label %.backedge

598:                                              ; preds = %14
  store i8 82, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @ch, i64 0, i64 38), align 2
  store i8 76, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @ch, i64 0, i64 39), align 1
  br label %.backedge

599:                                              ; preds = %14
  %600 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 19), align 8
  %.not = icmp eq i64 %600, 0
  %601 = select i1 %.not, i32 -1998290281, i32 -1851066359
  br label %.backedge

602:                                              ; preds = %14
  %603 = load i32, i32* @x.7, align 4
  %604 = load i32, i32* @y.8, align 4
  %605 = add i32 %603, -1
  %606 = mul i32 %605, %603
  %607 = and i32 %606, 1
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %604, 10
  %610 = or i1 %609, %608
  %611 = select i1 %610, i32 -1421178464, i32 -664520363
  br label %.backedge

612:                                              ; preds = %14
  %613 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 19), align 16
  %614 = icmp ne i64 %613, 0
  store i1 %614, i1* %2, align 1
  %615 = load i32, i32* @x.7, align 4
  %616 = load i32, i32* @y.8, align 4
  %617 = add i32 %615, -1
  %618 = mul i32 %617, %615
  %619 = and i32 %618, 1
  %620 = icmp eq i32 %619, 0
  %621 = icmp slt i32 %616, 10
  %622 = or i1 %621, %620
  %623 = select i1 %622, i32 1976243969, i32 -664520363
  br label %.backedge

624:                                              ; preds = %14
  %.0..0..0.100 = load volatile i1, i1* %2, align 1
  %625 = select i1 %.0..0..0.100, i32 1656600675, i32 -1998290281
  br label %.backedge

626:                                              ; preds = %14
  %627 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 19), align 8
  %628 = icmp eq i64 %627, 1
  %629 = select i1 %628, i8 82, i8 76
  store i8 %629, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @ch, i64 0, i64 38), align 2
  %630 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 19), align 16
  %631 = icmp eq i64 %630, 1
  %632 = select i1 %631, i8 85, i8 68
  store i8 %632, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @ch, i64 0, i64 39), align 1
  br label %.backedge

633:                                              ; preds = %14
  %634 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @ch, i64 0, i64 0))
  %635 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %634, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

636:                                              ; preds = %14
  %.neg115 = add i64 %.0104, 1
  br label %.backedge

637:                                              ; preds = %14
  %638 = load i32, i32* @x.7, align 4
  %639 = load i32, i32* @y.8, align 4
  %640 = add i32 %638, -1
  %641 = mul i32 %640, %638
  %642 = and i32 %641, 1
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %644, %643
  %646 = select i1 %645, i32 -736926483, i32 -651400001
  br label %.backedge

647:                                              ; preds = %14
  %648 = load i32, i32* @x.7, align 4
  %649 = load i32, i32* @y.8, align 4
  %650 = add i32 %648, -1
  %651 = mul i32 %650, %648
  %652 = and i32 %651, 1
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %649, 10
  %655 = or i1 %654, %653
  %656 = select i1 %655, i32 -905045553, i32 -651400001
  br label %.backedge

657:                                              ; preds = %14
  br label %.backedge

658:                                              ; preds = %14
  %659 = load i32, i32* @x.7, align 4
  %660 = load i32, i32* @y.8, align 4
  %661 = add i32 %659, -1
  %662 = mul i32 %661, %659
  %663 = and i32 %662, 1
  %664 = icmp eq i32 %663, 0
  %665 = icmp slt i32 %660, 10
  %666 = or i1 %665, %664
  %667 = select i1 %666, i32 -2138720644, i32 1880832450
  br label %.backedge

668:                                              ; preds = %14
  store i32 0, i32* %1, align 4
  %669 = load i32, i32* @x.7, align 4
  %670 = load i32, i32* @y.8, align 4
  %671 = add i32 %669, -1
  %672 = mul i32 %671, %669
  %673 = and i32 %672, 1
  %674 = icmp eq i32 %673, 0
  %675 = icmp slt i32 %670, 10
  %676 = or i1 %675, %674
  %677 = select i1 %676, i32 314953150, i32 1880832450
  br label %.backedge

678:                                              ; preds = %14
  %.0..0..0.101 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.101

679:                                              ; preds = %14
  %680 = getelementptr inbounds [100005 x i64], [100005 x i64]* @x, i64 0, i64 %.0110
  %681 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %680)
  %682 = getelementptr inbounds [100005 x i64], [100005 x i64]* @y, i64 0, i64 %.0110
  %683 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %681, i64* nonnull dereferenceable(8) %682)
  %684 = load i64, i64* %680, align 8
  %685 = load i64, i64* %682, align 8
  %686 = add i64 %685, %684
  %687 = and i64 %686, 1
  %688 = getelementptr inbounds [2 x i64], [2 x i64]* @exs, i64 0, i64 %687
  store i64 1, i64* %688, align 8
  br label %.backedge

689:                                              ; preds = %14
  br label %.backedge

690:                                              ; preds = %14
  %691 = call i64 @_Z3pwrxx(i64 3, i64 %.0106)
  %692 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %691)
  %693 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %692, i8 signext 32)
  %694 = call i64 @_Z3pwrxx(i64 3, i64 %.0106)
  %695 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull %693, i64 %694)
  %696 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %695, i8 signext 32)
  br label %.backedge

697:                                              ; preds = %14
  br label %.backedge

698:                                              ; preds = %14
  %699 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  store i64 1, i64* %699, align 8
  %700 = add i64 %.0102, 1
  %701 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %700
  %702 = load i64, i64* %701, align 8
  %703 = add i64 %702, -1
  store i64 %703, i64* %701, align 8
  br label %.backedge

704:                                              ; preds = %14
  br label %.backedge

705:                                              ; preds = %14
  %706 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  store i64 -1, i64* %706, align 8
  %707 = add i64 %.0102, 1
  %708 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %707
  %709 = load i64, i64* %708, align 8
  %.neg114 = add i64 %709, 1
  store i64 %.neg114, i64* %708, align 8
  br label %.backedge

710:                                              ; preds = %14
  %711 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.0102
  store i64 -1, i64* %711, align 8
  %.neg = add i64 %.0102, 1
  %712 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 %.neg
  %713 = load i64, i64* %712, align 8
  %714 = add i64 %713, 1
  store i64 %714, i64* %712, align 8
  br label %.backedge

715:                                              ; preds = %14
  br label %.backedge

716:                                              ; preds = %14
  br label %.backedge

717:                                              ; preds = %14
  br label %.backedge

718:                                              ; preds = %14
  %719 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %.0102
  store i64 2, i64* %719, align 8
  %720 = add i64 %.0102, 1
  %721 = getelementptr inbounds [2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 0, i64 %720
  %722 = load i64, i64* %721, align 8
  %723 = add i64 %722, -1
  store i64 %723, i64* %721, align 8
  %724 = shl i64 %.0102, 1
  %725 = or i64 %724, 1
  %726 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %725
  store i8 82, i8* %726, align 1
  %727 = getelementptr inbounds [45 x i8], [45 x i8]* @ch, i64 0, i64 %724
  store i8 82, i8* %727, align 2
  br label %.backedge

728:                                              ; preds = %14
  br label %.backedge

729:                                              ; preds = %14
  br label %.backedge

730:                                              ; preds = %14
  %731 = load i64, i64* getelementptr inbounds ([2 x [100005 x i64]], [2 x [100005 x i64]]* @pos, i64 0, i64 1, i64 19), align 16
  %732 = icmp eq i64 %731, 1
  %733 = select i1 %732, i8 85, i8 68
  store i8 %733, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @ch, i64 0, i64 38), align 2
  br label %.backedge

734:                                              ; preds = %14
  br label %.backedge

735:                                              ; preds = %14
  br label %.backedge

736:                                              ; preds = %14
  br label %.backedge

737:                                              ; preds = %14
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s594620813.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.9, align 4
  %4 = load i32, i32* @y.10, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1794977489, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1794977489, label %11
    i32 994423005, label %14
    i32 -1764611498, label %24
    i32 -251501325, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 994423005, i32 -251501325
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.9, align 4
  %16 = load i32, i32* @y.10, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1764611498, i32 -251501325
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 994423005, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree noinline norecurse nosync nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
