; ModuleID = 'build_ollvm/programs/p03247/s316590153.ll'
source_filename = "Project_CodeNet_C++1400/p03247/s316590153.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@x = global [1005 x i64] zeroinitializer, align 16
@y = global [1005 x i64] zeroinitializer, align 16
@len = local_unnamed_addr global [1005 x i64] zeroinitializer, align 16
@mx = global [1005 x [1005 x i64]] zeroinitializer, align 16
@my = global [1005 x [1005 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s316590153.cpp, i8* null }]
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define void @_Z1fPxPA1005_xx(i64* nocapture readonly %0, [1005 x i64]* %1, i64 %2) local_unnamed_addr #4 {
  %4 = alloca i1, align 1
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca [1005 x i64]**, align 8
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = load i32, i32* @x.4, align 4
  %12 = load i32, i32* @y.5, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %10, align 1
  %17 = icmp slt i32 %12, 10
  store i1 %17, i1* %9, align 1
  br label %18

18:                                               ; preds = %.backedge, %3
  %.0 = phi i32 [ -523313551, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -523313551, label %19
    i32 -351518413, label %22
    i32 178552526, label %39
    i32 2075844268, label %40
    i32 1078996466, label %44
    i32 1622956356, label %54
    i32 -1752975821, label %66
    i32 -290878556, label %68
    i32 -1161893380, label %78
    i32 1085739696, label %97
    i32 -1288394285, label %98
    i32 -1247326826, label %108
    i32 -245940986, label %127
    i32 -1616490204, label %128
    i32 1400974490, label %129
    i32 -634472796, label %139
    i32 -158829391, label %151
    i32 1808083412, label %152
    i32 338235921, label %162
    i32 -1090101633, label %172
    i32 -822137683, label %173
    i32 -1951022511, label %174
    i32 1174056965, label %175
    i32 -1133168552, label %185
    i32 73176675, label %195
    i32 -504378363, label %198
  ]

.backedge:                                        ; preds = %18, %198, %195, %185, %175, %174, %173, %162, %152, %151, %139, %129, %128, %127, %108, %98, %97, %78, %68, %66, %54, %44, %40, %39, %22, %19
  %.0.be = phi i32 [ %.0, %18 ], [ 338235921, %198 ], [ -634472796, %195 ], [ -1247326826, %185 ], [ -1161893380, %175 ], [ 1622956356, %174 ], [ -351518413, %173 ], [ %171, %162 ], [ %161, %152 ], [ 2075844268, %151 ], [ %150, %139 ], [ %138, %129 ], [ 1400974490, %128 ], [ -1616490204, %127 ], [ %126, %108 ], [ %107, %98 ], [ -1616490204, %97 ], [ %96, %78 ], [ %77, %68 ], [ %67, %66 ], [ %65, %54 ], [ %53, %44 ], [ %43, %40 ], [ 2075844268, %39 ], [ %38, %22 ], [ %21, %19 ]
  br label %18

19:                                               ; preds = %18
  %.0..0..0. = load volatile i1, i1* %10, align 1
  %.0..0..0.1 = load volatile i1, i1* %9, align 1
  %20 = or i1 %.0..0..0., %.0..0..0.1
  %21 = select i1 %20, i32 -351518413, i32 -822137683
  br label %.backedge

22:                                               ; preds = %18
  %23 = alloca [1005 x i64]*, align 8
  store [1005 x i64]** %23, [1005 x i64]*** %8, align 8
  %24 = alloca i64, align 8
  store i64* %24, i64** %7, align 8
  %25 = alloca i64, align 8
  store i64* %25, i64** %6, align 8
  %26 = alloca i64, align 8
  store i64* %26, i64** %5, align 8
  %.0..0..0.2 = load volatile [1005 x i64]**, [1005 x i64]*** %8, align 8
  store [1005 x i64]* %1, [1005 x i64]** %.0..0..0.2, align 8
  %.0..0..0.7 = load volatile i64*, i64** %7, align 8
  store i64 %2, i64* %.0..0..0.7, align 8
  %.0..0..0.8 = load volatile i64*, i64** %7, align 8
  %27 = load i64, i64* %.0..0..0.8, align 8
  %28 = getelementptr inbounds i64, i64* %0, i64 %27
  %29 = load i64, i64* %28, align 8
  %.0..0..0.13 = load volatile i64*, i64** %6, align 8
  store i64 %29, i64* %.0..0..0.13, align 8
  %.0..0..0.24 = load volatile i64*, i64** %5, align 8
  store i64 35, i64* %.0..0..0.24, align 8
  %30 = load i32, i32* @x.4, align 4
  %31 = load i32, i32* @y.5, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 178552526, i32 -822137683
  br label %.backedge

39:                                               ; preds = %18
  br label %.backedge

40:                                               ; preds = %18
  %.0..0..0.25 = load volatile i64*, i64** %5, align 8
  %41 = load i64, i64* %.0..0..0.25, align 8
  %42 = icmp sgt i64 %41, -1
  %43 = select i1 %42, i32 1078996466, i32 1808083412
  br label %.backedge

44:                                               ; preds = %18
  %45 = load i32, i32* @x.4, align 4
  %46 = load i32, i32* @y.5, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 1622956356, i32 -1951022511
  br label %.backedge

54:                                               ; preds = %18
  %.0..0..0.14 = load volatile i64*, i64** %6, align 8
  %55 = load i64, i64* %.0..0..0.14, align 8
  %56 = icmp sgt i64 %55, 0
  store i1 %56, i1* %4, align 1
  %57 = load i32, i32* @x.4, align 4
  %58 = load i32, i32* @y.5, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 -1752975821, i32 -1951022511
  br label %.backedge

66:                                               ; preds = %18
  %.0..0..0.38 = load volatile i1, i1* %4, align 1
  %67 = select i1 %.0..0..0.38, i32 -290878556, i32 -1288394285
  br label %.backedge

68:                                               ; preds = %18
  %69 = load i32, i32* @x.4, align 4
  %70 = load i32, i32* @y.5, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 -1161893380, i32 1174056965
  br label %.backedge

78:                                               ; preds = %18
  %.0..0..0.3 = load volatile [1005 x i64]**, [1005 x i64]*** %8, align 8
  %79 = load [1005 x i64]*, [1005 x i64]** %.0..0..0.3, align 8
  %.0..0..0.9 = load volatile i64*, i64** %7, align 8
  %80 = load i64, i64* %.0..0..0.9, align 8
  %.0..0..0.26 = load volatile i64*, i64** %5, align 8
  %81 = load i64, i64* %.0..0..0.26, align 8
  %82 = getelementptr inbounds [1005 x i64], [1005 x i64]* %79, i64 %80, i64 %81
  store i64 -1, i64* %82, align 8
  %.0..0..0.27 = load volatile i64*, i64** %5, align 8
  %83 = load i64, i64* %.0..0..0.27, align 8
  %84 = getelementptr inbounds [1005 x i64], [1005 x i64]* @len, i64 0, i64 %83
  %85 = load i64, i64* %84, align 8
  %.0..0..0.15 = load volatile i64*, i64** %6, align 8
  %86 = load i64, i64* %.0..0..0.15, align 8
  %87 = sub i64 %86, %85
  %.0..0..0.16 = load volatile i64*, i64** %6, align 8
  store i64 %87, i64* %.0..0..0.16, align 8
  %88 = load i32, i32* @x.4, align 4
  %89 = load i32, i32* @y.5, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 1085739696, i32 1174056965
  br label %.backedge

97:                                               ; preds = %18
  br label %.backedge

98:                                               ; preds = %18
  %99 = load i32, i32* @x.4, align 4
  %100 = load i32, i32* @y.5, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 -1247326826, i32 -1133168552
  br label %.backedge

108:                                              ; preds = %18
  %.0..0..0.4 = load volatile [1005 x i64]**, [1005 x i64]*** %8, align 8
  %109 = load [1005 x i64]*, [1005 x i64]** %.0..0..0.4, align 8
  %.0..0..0.10 = load volatile i64*, i64** %7, align 8
  %110 = load i64, i64* %.0..0..0.10, align 8
  %.0..0..0.28 = load volatile i64*, i64** %5, align 8
  %111 = load i64, i64* %.0..0..0.28, align 8
  %112 = getelementptr inbounds [1005 x i64], [1005 x i64]* %109, i64 %110, i64 %111
  store i64 1, i64* %112, align 8
  %.0..0..0.29 = load volatile i64*, i64** %5, align 8
  %113 = load i64, i64* %.0..0..0.29, align 8
  %114 = getelementptr inbounds [1005 x i64], [1005 x i64]* @len, i64 0, i64 %113
  %115 = load i64, i64* %114, align 8
  %.0..0..0.17 = load volatile i64*, i64** %6, align 8
  %116 = load i64, i64* %.0..0..0.17, align 8
  %117 = add i64 %116, %115
  %.0..0..0.18 = load volatile i64*, i64** %6, align 8
  store i64 %117, i64* %.0..0..0.18, align 8
  %118 = load i32, i32* @x.4, align 4
  %119 = load i32, i32* @y.5, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 -245940986, i32 -1133168552
  br label %.backedge

127:                                              ; preds = %18
  br label %.backedge

128:                                              ; preds = %18
  br label %.backedge

129:                                              ; preds = %18
  %130 = load i32, i32* @x.4, align 4
  %131 = load i32, i32* @y.5, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -634472796, i32 73176675
  br label %.backedge

139:                                              ; preds = %18
  %.0..0..0.30 = load volatile i64*, i64** %5, align 8
  %140 = load i64, i64* %.0..0..0.30, align 8
  %141 = add i64 %140, -1
  %.0..0..0.31 = load volatile i64*, i64** %5, align 8
  store i64 %141, i64* %.0..0..0.31, align 8
  %142 = load i32, i32* @x.4, align 4
  %143 = load i32, i32* @y.5, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -158829391, i32 73176675
  br label %.backedge

151:                                              ; preds = %18
  br label %.backedge

152:                                              ; preds = %18
  %153 = load i32, i32* @x.4, align 4
  %154 = load i32, i32* @y.5, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 338235921, i32 -504378363
  br label %.backedge

162:                                              ; preds = %18
  %163 = load i32, i32* @x.4, align 4
  %164 = load i32, i32* @y.5, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -1090101633, i32 -504378363
  br label %.backedge

172:                                              ; preds = %18
  ret void

173:                                              ; preds = %18
  br label %.backedge

174:                                              ; preds = %18
  %.0..0..0.19 = load volatile i64*, i64** %6, align 8
  br label %.backedge

175:                                              ; preds = %18
  %.0..0..0.5 = load volatile [1005 x i64]**, [1005 x i64]*** %8, align 8
  %176 = load [1005 x i64]*, [1005 x i64]** %.0..0..0.5, align 8
  %.0..0..0.11 = load volatile i64*, i64** %7, align 8
  %177 = load i64, i64* %.0..0..0.11, align 8
  %.0..0..0.32 = load volatile i64*, i64** %5, align 8
  %178 = load i64, i64* %.0..0..0.32, align 8
  %179 = getelementptr inbounds [1005 x i64], [1005 x i64]* %176, i64 %177, i64 %178
  store i64 -1, i64* %179, align 8
  %.0..0..0.33 = load volatile i64*, i64** %5, align 8
  %180 = load i64, i64* %.0..0..0.33, align 8
  %181 = getelementptr inbounds [1005 x i64], [1005 x i64]* @len, i64 0, i64 %180
  %182 = load i64, i64* %181, align 8
  %.0..0..0.20 = load volatile i64*, i64** %6, align 8
  %183 = load i64, i64* %.0..0..0.20, align 8
  %184 = sub i64 %183, %182
  %.0..0..0.21 = load volatile i64*, i64** %6, align 8
  store i64 %184, i64* %.0..0..0.21, align 8
  br label %.backedge

185:                                              ; preds = %18
  %.0..0..0.6 = load volatile [1005 x i64]**, [1005 x i64]*** %8, align 8
  %186 = load [1005 x i64]*, [1005 x i64]** %.0..0..0.6, align 8
  %.0..0..0.12 = load volatile i64*, i64** %7, align 8
  %187 = load i64, i64* %.0..0..0.12, align 8
  %.0..0..0.34 = load volatile i64*, i64** %5, align 8
  %188 = load i64, i64* %.0..0..0.34, align 8
  %189 = getelementptr inbounds [1005 x i64], [1005 x i64]* %186, i64 %187, i64 %188
  store i64 1, i64* %189, align 8
  %.0..0..0.35 = load volatile i64*, i64** %5, align 8
  %190 = load i64, i64* %.0..0..0.35, align 8
  %191 = getelementptr inbounds [1005 x i64], [1005 x i64]* @len, i64 0, i64 %190
  %192 = load i64, i64* %191, align 8
  %.0..0..0.22 = load volatile i64*, i64** %6, align 8
  %193 = load i64, i64* %.0..0..0.22, align 8
  %194 = add i64 %193, %192
  %.0..0..0.23 = load volatile i64*, i64** %6, align 8
  store i64 %194, i64* %.0..0..0.23, align 8
  br label %.backedge

195:                                              ; preds = %18
  %.0..0..0.36 = load volatile i64*, i64** %5, align 8
  %196 = load i64, i64* %.0..0..0.36, align 8
  %197 = add i64 %196, -1
  %.0..0..0.37 = load volatile i64*, i64** %5, align 8
  store i64 %197, i64* %.0..0..0.37, align 8
  br label %.backedge

198:                                              ; preds = %18
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define signext i8 @_Z1gxx(i64 %0, i64 %1) local_unnamed_addr #4 {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds [1005 x [1005 x i64]], [1005 x [1005 x i64]]* @mx, i64 0, i64 %0, i64 %1
  %7 = load i64, i64* %6, align 8
  %8 = shl nsw i64 %7, 1
  %9 = getelementptr inbounds [1005 x [1005 x i64]], [1005 x [1005 x i64]]* @my, i64 0, i64 %0, i64 %1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %8, %10
  store i64 %11, i64* %5, align 8
  %12 = icmp eq i64 %11, -1
  %13 = load i32, i32* @x.6, align 4
  %14 = load i32, i32* @y.7, align 4
  %15 = add i32 %13, -1
  %16 = mul i32 %15, %13
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %19, %18
  %21 = select i1 %20, i32 -990094879, i32 -1015303516
  %22 = select i1 %20, i32 86512047, i32 -1015303516
  %23 = select i1 %20, i32 1694779658, i32 1365639454
  %24 = select i1 %20, i32 237214547, i32 1365639454
  %25 = icmp eq i64 %11, 1
  %26 = select i1 %20, i32 1346849003, i32 482993921
  %27 = select i1 %20, i32 -809137434, i32 482993921
  br label %28

28:                                               ; preds = %.backedge, %2
  %.013 = phi i8 [ undef, %2 ], [ %.013.be, %.backedge ]
  %.0 = phi i32 [ 1297865864, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1297865864, label %29
    i32 -1962301154, label %32
    i32 -393832482, label %33
    i32 -809137434, label %34
    i32 1346849003, label %35
    i32 265304488, label %37
    i32 237214547, label %38
    i32 1694779658, label %39
    i32 -1463735623, label %40
    i32 86512047, label %41
    i32 -990094879, label %42
    i32 -1260554766, label %44
    i32 1454509269, label %45
    i32 -319743108, label %46
    i32 482993921, label %47
    i32 1365639454, label %48
    i32 -1015303516, label %49
  ]

.backedge:                                        ; preds = %28, %49, %48, %47, %45, %44, %42, %41, %40, %39, %38, %37, %35, %34, %33, %32, %29
  %.013.be = phi i8 [ %.013, %28 ], [ %.013, %49 ], [ 85, %48 ], [ %.013, %47 ], [ 82, %45 ], [ 68, %44 ], [ %.013, %42 ], [ %.013, %41 ], [ %.013, %40 ], [ %.013, %39 ], [ 85, %38 ], [ %.013, %37 ], [ %.013, %35 ], [ %.013, %34 ], [ %.013, %33 ], [ 76, %32 ], [ %.013, %29 ]
  %.0.be = phi i32 [ %.0, %28 ], [ 86512047, %49 ], [ 237214547, %48 ], [ -809137434, %47 ], [ -319743108, %45 ], [ -319743108, %44 ], [ %43, %42 ], [ %21, %41 ], [ %22, %40 ], [ -319743108, %39 ], [ %23, %38 ], [ %24, %37 ], [ %36, %35 ], [ %26, %34 ], [ %27, %33 ], [ -319743108, %32 ], [ %31, %29 ]
  br label %28

29:                                               ; preds = %28
  %.0..0..0. = load volatile i64, i64* %5, align 8
  %30 = icmp eq i64 %.0..0..0., 3
  %31 = select i1 %30, i32 -1962301154, i32 -393832482
  br label %.backedge

32:                                               ; preds = %28
  br label %.backedge

33:                                               ; preds = %28
  br label %.backedge

34:                                               ; preds = %28
  store i1 %25, i1* %4, align 1
  br label %.backedge

35:                                               ; preds = %28
  %.0..0..0.11 = load volatile i1, i1* %4, align 1
  %36 = select i1 %.0..0..0.11, i32 265304488, i32 -1463735623
  br label %.backedge

37:                                               ; preds = %28
  br label %.backedge

38:                                               ; preds = %28
  br label %.backedge

39:                                               ; preds = %28
  br label %.backedge

40:                                               ; preds = %28
  br label %.backedge

41:                                               ; preds = %28
  store i1 %12, i1* %3, align 1
  br label %.backedge

42:                                               ; preds = %28
  %.0..0..0.12 = load volatile i1, i1* %3, align 1
  %43 = select i1 %.0..0..0.12, i32 -1260554766, i32 1454509269
  br label %.backedge

44:                                               ; preds = %28
  br label %.backedge

45:                                               ; preds = %28
  br label %.backedge

46:                                               ; preds = %28
  ret i8 %.013

47:                                               ; preds = %28
  br label %.backedge

48:                                               ; preds = %28
  br label %.backedge

49:                                               ; preds = %28
  br label %.backedge
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %14
  %16 = bitcast i8* %15 to %"class.std::basic_ios"*
  %17 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %16, %"class.std::basic_ostream"* null)
  %18 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %8)
  br label %19

19:                                               ; preds = %.backedge, %0
  %.065 = phi i64 [ 1, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i64 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i8 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i64 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i64 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i64 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i64 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i64 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.0 = phi i32 [ 1849171592, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1849171592, label %20
    i32 -759540084, label %23
    i32 2062603488, label %37
    i32 1343534588, label %40
    i32 -538897225, label %41
    i32 -753031309, label %43
    i32 -1444447456, label %44
    i32 -8349051, label %54
    i32 1114514419, label %65
    i32 -510089156, label %67
    i32 260877418, label %70
    i32 578842094, label %72
    i32 1394419390, label %77
    i32 -386126094, label %87
    i32 2097766350, label %97
    i32 1093155588, label %98
    i32 581882240, label %108
    i32 -225962729, label %120
    i32 -96850994, label %122
    i32 1514843067, label %132
    i32 -1999962002, label %147
    i32 -304816109, label %148
    i32 -1731896006, label %150
    i32 -627994795, label %151
    i32 1975892300, label %152
    i32 1091532551, label %155
    i32 -1432549343, label %165
    i32 -1578334729, label %175
    i32 -980923745, label %176
    i32 1942947248, label %178
    i32 -1814293304, label %184
    i32 -550891402, label %194
    i32 165579379, label %205
    i32 1237116654, label %207
    i32 -217461925, label %213
    i32 1337216375, label %223
    i32 217667102, label %234
    i32 412131885, label %235
    i32 -1417480875, label %245
    i32 933263015, label %255
    i32 679651632, label %256
    i32 -1491763480, label %266
    i32 2094998519, label %277
    i32 -485021461, label %278
    i32 -1951567468, label %288
    i32 1593090887, label %300
    i32 1051838865, label %302
    i32 -1412931397, label %312
    i32 2051853063, label %324
    i32 -817761856, label %325
    i32 -1748578157, label %327
    i32 1966151261, label %337
    i32 -49181316, label %349
    i32 614255421, label %351
    i32 722026729, label %352
    i32 -1849321592, label %362
    i32 -1373985379, label %373
    i32 -1001831795, label %375
    i32 -405009932, label %378
    i32 1804069303, label %388
    i32 -541184177, label %399
    i32 -451402718, label %400
    i32 1032221061, label %410
    i32 -899056942, label %422
    i32 1089262337, label %424
    i32 1848920487, label %426
    i32 1153587775, label %436
    i32 252370361, label %447
    i32 904347217, label %448
    i32 -1072138758, label %450
    i32 233106931, label %451
    i32 -366684653, label %452
    i32 1909032967, label %453
    i32 32314354, label %454
    i32 -1146312341, label %460
    i32 1667135699, label %461
    i32 745359985, label %462
    i32 1110468153, label %464
    i32 2043086264, label %465
    i32 297363854, label %467
    i32 841410952, label %468
    i32 -381238396, label %471
    i32 -1009176653, label %472
    i32 829313533, label %473
    i32 1371749341, label %475
    i32 2050489486, label %476
  ]

.backedge:                                        ; preds = %19, %476, %475, %473, %472, %471, %468, %467, %465, %464, %462, %461, %460, %454, %453, %452, %451, %448, %447, %436, %426, %424, %422, %410, %400, %399, %388, %378, %375, %373, %362, %352, %351, %349, %337, %327, %325, %324, %312, %302, %300, %288, %278, %277, %266, %256, %255, %245, %235, %234, %223, %213, %207, %205, %194, %184, %178, %176, %175, %165, %155, %152, %151, %150, %148, %147, %132, %122, %120, %108, %98, %97, %87, %77, %72, %70, %67, %65, %54, %44, %43, %41, %40, %37, %23, %20
  %.065.be = phi i64 [ %.065, %19 ], [ %.065, %476 ], [ %.065, %475 ], [ %.065, %473 ], [ %.065, %472 ], [ %.065, %471 ], [ %.065, %468 ], [ %.065, %467 ], [ %.065, %465 ], [ %.065, %464 ], [ %.065, %462 ], [ %.065, %461 ], [ %.065, %460 ], [ %.065, %454 ], [ %.065, %453 ], [ %.065, %452 ], [ %.065, %451 ], [ %.065, %448 ], [ %.065, %447 ], [ %.065, %436 ], [ %.065, %426 ], [ %.065, %424 ], [ %.065, %422 ], [ %.065, %410 ], [ %.065, %400 ], [ %.065, %399 ], [ %.065, %388 ], [ %.065, %378 ], [ %.065, %375 ], [ %.065, %373 ], [ %.065, %362 ], [ %.065, %352 ], [ %.065, %351 ], [ %.065, %349 ], [ %.065, %337 ], [ %.065, %327 ], [ %.065, %325 ], [ %.065, %324 ], [ %.065, %312 ], [ %.065, %302 ], [ %.065, %300 ], [ %.065, %288 ], [ %.065, %278 ], [ %.065, %277 ], [ %.065, %266 ], [ %.065, %256 ], [ %.065, %255 ], [ %.065, %245 ], [ %.065, %235 ], [ %.065, %234 ], [ %.065, %223 ], [ %.065, %213 ], [ %.065, %207 ], [ %.065, %205 ], [ %.065, %194 ], [ %.065, %184 ], [ %.065, %178 ], [ %.065, %176 ], [ %.065, %175 ], [ %.065, %165 ], [ %.065, %155 ], [ %.065, %152 ], [ %.065, %151 ], [ %.065, %150 ], [ %.065, %148 ], [ %.065, %147 ], [ %.065, %132 ], [ %.065, %122 ], [ %.065, %120 ], [ %.065, %108 ], [ %.065, %98 ], [ %.065, %97 ], [ %.065, %87 ], [ %.065, %77 ], [ %.065, %72 ], [ %.065, %70 ], [ %.065, %67 ], [ %.065, %65 ], [ %.065, %54 ], [ %.065, %44 ], [ %.065, %43 ], [ %42, %41 ], [ %.065, %40 ], [ %.065, %37 ], [ %.065, %23 ], [ %.065, %20 ]
  %.063.be = phi i64 [ %.063, %19 ], [ %.063, %476 ], [ %.063, %475 ], [ %.063, %473 ], [ %.063, %472 ], [ %.063, %471 ], [ %.063, %468 ], [ %.063, %467 ], [ %.063, %465 ], [ %.063, %464 ], [ %.063, %462 ], [ %.063, %461 ], [ %.063, %460 ], [ %.063, %454 ], [ %.063, %453 ], [ %.063, %452 ], [ %.063, %451 ], [ %.063, %448 ], [ %.063, %447 ], [ %.063, %436 ], [ %.063, %426 ], [ %.063, %424 ], [ %.063, %422 ], [ %.063, %410 ], [ %.063, %400 ], [ %.063, %399 ], [ %.063, %388 ], [ %.063, %378 ], [ %.063, %375 ], [ %.063, %373 ], [ %.063, %362 ], [ %.063, %352 ], [ %.063, %351 ], [ %.063, %349 ], [ %.063, %337 ], [ %.063, %327 ], [ %.063, %325 ], [ %.063, %324 ], [ %.063, %312 ], [ %.063, %302 ], [ %.063, %300 ], [ %.063, %288 ], [ %.063, %278 ], [ %.063, %277 ], [ %.063, %266 ], [ %.063, %256 ], [ %.063, %255 ], [ %.063, %245 ], [ %.063, %235 ], [ %.063, %234 ], [ %.063, %223 ], [ %.063, %213 ], [ %.063, %207 ], [ %.063, %205 ], [ %.063, %194 ], [ %.063, %184 ], [ %.063, %178 ], [ %.063, %176 ], [ %.063, %175 ], [ %.063, %165 ], [ %.063, %155 ], [ %.063, %152 ], [ %.063, %151 ], [ %.063, %150 ], [ %.063, %148 ], [ %.063, %147 ], [ %.063, %132 ], [ %.063, %122 ], [ %.063, %120 ], [ %.063, %108 ], [ %.063, %98 ], [ %.063, %97 ], [ %.063, %87 ], [ %.063, %77 ], [ %.063, %72 ], [ %71, %70 ], [ %.063, %67 ], [ %.063, %65 ], [ %.063, %54 ], [ %.063, %44 ], [ 0, %43 ], [ %.063, %41 ], [ %.063, %40 ], [ %.063, %37 ], [ %.063, %23 ], [ %.063, %20 ]
  %.061.be = phi i8 [ %.061, %19 ], [ %.061, %476 ], [ %.061, %475 ], [ %.061, %473 ], [ %.061, %472 ], [ %.061, %471 ], [ %.061, %468 ], [ %.061, %467 ], [ %.061, %465 ], [ %.061, %464 ], [ %.061, %462 ], [ %.061, %461 ], [ %.061, %460 ], [ %.061, %454 ], [ %.061, %453 ], [ 1, %452 ], [ %.061, %451 ], [ %.061, %448 ], [ %.061, %447 ], [ %.061, %436 ], [ %.061, %426 ], [ %.061, %424 ], [ %.061, %422 ], [ %.061, %410 ], [ %.061, %400 ], [ %.061, %399 ], [ %.061, %388 ], [ %.061, %378 ], [ %.061, %375 ], [ %.061, %373 ], [ %.061, %362 ], [ %.061, %352 ], [ %.061, %351 ], [ %.061, %349 ], [ %.061, %337 ], [ %.061, %327 ], [ %.061, %325 ], [ %.061, %324 ], [ %.061, %312 ], [ %.061, %302 ], [ %.061, %300 ], [ %.061, %288 ], [ %.061, %278 ], [ %.061, %277 ], [ %.061, %266 ], [ %.061, %256 ], [ %.061, %255 ], [ %.061, %245 ], [ %.061, %235 ], [ %.061, %234 ], [ %.061, %223 ], [ %.061, %213 ], [ %.061, %207 ], [ %.061, %205 ], [ %.061, %194 ], [ %.061, %184 ], [ %.061, %178 ], [ %.061, %176 ], [ %.061, %175 ], [ %.061, %165 ], [ %.061, %155 ], [ %.061, %152 ], [ %.061, %151 ], [ %.061, %150 ], [ %.061, %148 ], [ %.061, %147 ], [ %.061, %132 ], [ %.061, %122 ], [ %.061, %120 ], [ %.061, %108 ], [ %.061, %98 ], [ %.061, %97 ], [ 1, %87 ], [ %.061, %77 ], [ 0, %72 ], [ %.061, %70 ], [ %.061, %67 ], [ %.061, %65 ], [ %.061, %54 ], [ %.061, %44 ], [ %.061, %43 ], [ %.061, %41 ], [ %.061, %40 ], [ %.061, %37 ], [ %.061, %23 ], [ %.061, %20 ]
  %.059.be = phi i64 [ %.059, %19 ], [ %.059, %476 ], [ %.059, %475 ], [ %.059, %473 ], [ %.059, %472 ], [ %.059, %471 ], [ %.059, %468 ], [ %.059, %467 ], [ %.059, %465 ], [ %.059, %464 ], [ %.059, %462 ], [ %.059, %461 ], [ %.059, %460 ], [ %.059, %454 ], [ %.059, %453 ], [ 1, %452 ], [ %.059, %451 ], [ %.059, %448 ], [ %.059, %447 ], [ %.059, %436 ], [ %.059, %426 ], [ %.059, %424 ], [ %.059, %422 ], [ %.059, %410 ], [ %.059, %400 ], [ %.059, %399 ], [ %.059, %388 ], [ %.059, %378 ], [ %.059, %375 ], [ %.059, %373 ], [ %.059, %362 ], [ %.059, %352 ], [ %.059, %351 ], [ %.059, %349 ], [ %.059, %337 ], [ %.059, %327 ], [ %.059, %325 ], [ %.059, %324 ], [ %.059, %312 ], [ %.059, %302 ], [ %.059, %300 ], [ %.059, %288 ], [ %.059, %278 ], [ %.059, %277 ], [ %.059, %266 ], [ %.059, %256 ], [ %.059, %255 ], [ %.059, %245 ], [ %.059, %235 ], [ %.059, %234 ], [ %.059, %223 ], [ %.059, %213 ], [ %.059, %207 ], [ %.059, %205 ], [ %.059, %194 ], [ %.059, %184 ], [ %.059, %178 ], [ %.059, %176 ], [ %.059, %175 ], [ %.059, %165 ], [ %.059, %155 ], [ %.059, %152 ], [ %.059, %151 ], [ %.059, %150 ], [ %149, %148 ], [ %.059, %147 ], [ %.059, %132 ], [ %.059, %122 ], [ %.059, %120 ], [ %.059, %108 ], [ %.059, %98 ], [ %.059, %97 ], [ 1, %87 ], [ %.059, %77 ], [ %.059, %72 ], [ %.059, %70 ], [ %.059, %67 ], [ %.059, %65 ], [ %.059, %54 ], [ %.059, %44 ], [ %.059, %43 ], [ %.059, %41 ], [ %.059, %40 ], [ %.059, %37 ], [ %.059, %23 ], [ %.059, %20 ]
  %.057.be = phi i64 [ %.057, %19 ], [ %.057, %476 ], [ %.057, %475 ], [ %.057, %473 ], [ %.057, %472 ], [ %.057, %471 ], [ %.057, %468 ], [ %.057, %467 ], [ %.057, %465 ], [ %.057, %464 ], [ %.057, %462 ], [ %.057, %461 ], [ %.057, %460 ], [ %.057, %454 ], [ %.057, %453 ], [ %.057, %452 ], [ %.057, %451 ], [ %.057, %448 ], [ %.057, %447 ], [ %.057, %436 ], [ %.057, %426 ], [ %.057, %424 ], [ %.057, %422 ], [ %.057, %410 ], [ %.057, %400 ], [ %.057, %399 ], [ %.057, %388 ], [ %.057, %378 ], [ %.057, %375 ], [ %.057, %373 ], [ %.057, %362 ], [ %.057, %352 ], [ %.057, %351 ], [ %.057, %349 ], [ %.057, %337 ], [ %.057, %327 ], [ %.057, %325 ], [ %.057, %324 ], [ %.057, %312 ], [ %.057, %302 ], [ %.057, %300 ], [ %.057, %288 ], [ %.057, %278 ], [ %.057, %277 ], [ %.057, %266 ], [ %.057, %256 ], [ %.057, %255 ], [ %.057, %245 ], [ %.057, %235 ], [ %.057, %234 ], [ %.057, %223 ], [ %.057, %213 ], [ %.057, %207 ], [ %.057, %205 ], [ %.057, %194 ], [ %.057, %184 ], [ %.057, %178 ], [ %177, %176 ], [ %.057, %175 ], [ %.057, %165 ], [ %.057, %155 ], [ %.057, %152 ], [ 1, %151 ], [ %.057, %150 ], [ %.057, %148 ], [ %.057, %147 ], [ %.057, %132 ], [ %.057, %122 ], [ %.057, %120 ], [ %.057, %108 ], [ %.057, %98 ], [ %.057, %97 ], [ %.057, %87 ], [ %.057, %77 ], [ %.057, %72 ], [ %.057, %70 ], [ %.057, %67 ], [ %.057, %65 ], [ %.057, %54 ], [ %.057, %44 ], [ %.057, %43 ], [ %.057, %41 ], [ %.057, %40 ], [ %.057, %37 ], [ %.057, %23 ], [ %.057, %20 ]
  %.055.be = phi i64 [ %.055, %19 ], [ %.055, %476 ], [ %.055, %475 ], [ %.055, %473 ], [ %.055, %472 ], [ %.055, %471 ], [ %.055, %468 ], [ %.055, %467 ], [ %466, %465 ], [ %.055, %464 ], [ %.055, %462 ], [ %.055, %461 ], [ %.055, %460 ], [ %.055, %454 ], [ %.055, %453 ], [ %.055, %452 ], [ %.055, %451 ], [ %.055, %448 ], [ %.055, %447 ], [ %.055, %436 ], [ %.055, %426 ], [ %.055, %424 ], [ %.055, %422 ], [ %.055, %410 ], [ %.055, %400 ], [ %.055, %399 ], [ %.055, %388 ], [ %.055, %378 ], [ %.055, %375 ], [ %.055, %373 ], [ %.055, %362 ], [ %.055, %352 ], [ %.055, %351 ], [ %.055, %349 ], [ %.055, %337 ], [ %.055, %327 ], [ %.055, %325 ], [ %.055, %324 ], [ %.055, %312 ], [ %.055, %302 ], [ %.055, %300 ], [ %.055, %288 ], [ %.055, %278 ], [ %.055, %277 ], [ %267, %266 ], [ %.055, %256 ], [ %.055, %255 ], [ %.055, %245 ], [ %.055, %235 ], [ %.055, %234 ], [ %.055, %223 ], [ %.055, %213 ], [ %.055, %207 ], [ %.055, %205 ], [ %.055, %194 ], [ %.055, %184 ], [ 0, %178 ], [ %.055, %176 ], [ %.055, %175 ], [ %.055, %165 ], [ %.055, %155 ], [ %.055, %152 ], [ %.055, %151 ], [ %.055, %150 ], [ %.055, %148 ], [ %.055, %147 ], [ %.055, %132 ], [ %.055, %122 ], [ %.055, %120 ], [ %.055, %108 ], [ %.055, %98 ], [ %.055, %97 ], [ %.055, %87 ], [ %.055, %77 ], [ %.055, %72 ], [ %.055, %70 ], [ %.055, %67 ], [ %.055, %65 ], [ %.055, %54 ], [ %.055, %44 ], [ %.055, %43 ], [ %.055, %41 ], [ %.055, %40 ], [ %.055, %37 ], [ %.055, %23 ], [ %.055, %20 ]
  %.053.be = phi i64 [ %.053, %19 ], [ %.053, %476 ], [ %.053, %475 ], [ %.053, %473 ], [ %.053, %472 ], [ %.053, %471 ], [ %.053, %468 ], [ %.053, %467 ], [ %.053, %465 ], [ %.053, %464 ], [ %.053, %462 ], [ %.053, %461 ], [ %.053, %460 ], [ %.053, %454 ], [ %.053, %453 ], [ %.053, %452 ], [ %.053, %451 ], [ %449, %448 ], [ %.053, %447 ], [ %.053, %436 ], [ %.053, %426 ], [ %.053, %424 ], [ %.053, %422 ], [ %.053, %410 ], [ %.053, %400 ], [ %.053, %399 ], [ %.053, %388 ], [ %.053, %378 ], [ %.053, %375 ], [ %.053, %373 ], [ %.053, %362 ], [ %.053, %352 ], [ %.053, %351 ], [ %.053, %349 ], [ %.053, %337 ], [ %.053, %327 ], [ 1, %325 ], [ %.053, %324 ], [ %.053, %312 ], [ %.053, %302 ], [ %.053, %300 ], [ %.053, %288 ], [ %.053, %278 ], [ %.053, %277 ], [ %.053, %266 ], [ %.053, %256 ], [ %.053, %255 ], [ %.053, %245 ], [ %.053, %235 ], [ %.053, %234 ], [ %.053, %223 ], [ %.053, %213 ], [ %.053, %207 ], [ %.053, %205 ], [ %.053, %194 ], [ %.053, %184 ], [ %.053, %178 ], [ %.053, %176 ], [ %.053, %175 ], [ %.053, %165 ], [ %.053, %155 ], [ %.053, %152 ], [ %.053, %151 ], [ %.053, %150 ], [ %.053, %148 ], [ %.053, %147 ], [ %.053, %132 ], [ %.053, %122 ], [ %.053, %120 ], [ %.053, %108 ], [ %.053, %98 ], [ %.053, %97 ], [ %.053, %87 ], [ %.053, %77 ], [ %.053, %72 ], [ %.053, %70 ], [ %.053, %67 ], [ %.053, %65 ], [ %.053, %54 ], [ %.053, %44 ], [ %.053, %43 ], [ %.053, %41 ], [ %.053, %40 ], [ %.053, %37 ], [ %.053, %23 ], [ %.053, %20 ]
  %.051.be = phi i64 [ %.051, %19 ], [ %.051, %476 ], [ %.051, %475 ], [ %474, %473 ], [ %.051, %472 ], [ %.051, %471 ], [ %.051, %468 ], [ %.051, %467 ], [ %.051, %465 ], [ %.051, %464 ], [ %.051, %462 ], [ %.051, %461 ], [ %.051, %460 ], [ %.051, %454 ], [ %.051, %453 ], [ %.051, %452 ], [ %.051, %451 ], [ %.051, %448 ], [ %.051, %447 ], [ %.051, %436 ], [ %.051, %426 ], [ %.051, %424 ], [ %.051, %422 ], [ %.051, %410 ], [ %.051, %400 ], [ %.051, %399 ], [ %389, %388 ], [ %.051, %378 ], [ %.051, %375 ], [ %.051, %373 ], [ %.051, %362 ], [ %.051, %352 ], [ 0, %351 ], [ %.051, %349 ], [ %.051, %337 ], [ %.051, %327 ], [ %.051, %325 ], [ %.051, %324 ], [ %.051, %312 ], [ %.051, %302 ], [ %.051, %300 ], [ %.051, %288 ], [ %.051, %278 ], [ %.051, %277 ], [ %.051, %266 ], [ %.051, %256 ], [ %.051, %255 ], [ %.051, %245 ], [ %.051, %235 ], [ %.051, %234 ], [ %.051, %223 ], [ %.051, %213 ], [ %.051, %207 ], [ %.051, %205 ], [ %.051, %194 ], [ %.051, %184 ], [ %.051, %178 ], [ %.051, %176 ], [ %.051, %175 ], [ %.051, %165 ], [ %.051, %155 ], [ %.051, %152 ], [ %.051, %151 ], [ %.051, %150 ], [ %.051, %148 ], [ %.051, %147 ], [ %.051, %132 ], [ %.051, %122 ], [ %.051, %120 ], [ %.051, %108 ], [ %.051, %98 ], [ %.051, %97 ], [ %.051, %87 ], [ %.051, %77 ], [ %.051, %72 ], [ %.051, %70 ], [ %.051, %67 ], [ %.051, %65 ], [ %.051, %54 ], [ %.051, %44 ], [ %.051, %43 ], [ %.051, %41 ], [ %.051, %40 ], [ %.051, %37 ], [ %.051, %23 ], [ %.051, %20 ]
  %.0.be = phi i32 [ %.0, %19 ], [ 1153587775, %476 ], [ 1032221061, %475 ], [ 1804069303, %473 ], [ -1849321592, %472 ], [ 1966151261, %471 ], [ -1412931397, %468 ], [ -1951567468, %467 ], [ -1491763480, %465 ], [ -1417480875, %464 ], [ 1337216375, %462 ], [ -550891402, %461 ], [ -1432549343, %460 ], [ 1514843067, %454 ], [ 581882240, %453 ], [ -386126094, %452 ], [ -8349051, %451 ], [ -1748578157, %448 ], [ 904347217, %447 ], [ %446, %436 ], [ %435, %426 ], [ 1848920487, %424 ], [ %423, %422 ], [ %421, %410 ], [ %409, %400 ], [ 722026729, %399 ], [ %398, %388 ], [ %387, %378 ], [ -405009932, %375 ], [ %374, %373 ], [ %372, %362 ], [ %361, %352 ], [ 722026729, %351 ], [ %350, %349 ], [ %348, %337 ], [ %336, %327 ], [ -1748578157, %325 ], [ -817761856, %324 ], [ %323, %312 ], [ %311, %302 ], [ %301, %300 ], [ %299, %288 ], [ %287, %278 ], [ -1814293304, %277 ], [ %276, %266 ], [ %265, %256 ], [ 679651632, %255 ], [ %254, %245 ], [ %244, %235 ], [ 412131885, %234 ], [ %233, %223 ], [ %222, %213 ], [ %212, %207 ], [ %206, %205 ], [ %204, %194 ], [ %193, %184 ], [ -1814293304, %178 ], [ 1975892300, %176 ], [ -980923745, %175 ], [ %174, %165 ], [ %164, %155 ], [ %154, %152 ], [ 1975892300, %151 ], [ -627994795, %150 ], [ 1093155588, %148 ], [ -304816109, %147 ], [ %146, %132 ], [ %131, %122 ], [ %121, %120 ], [ %119, %108 ], [ %107, %98 ], [ 1093155588, %97 ], [ %96, %87 ], [ %86, %77 ], [ %76, %72 ], [ -1444447456, %70 ], [ 260877418, %67 ], [ %66, %65 ], [ %64, %54 ], [ %53, %44 ], [ -1444447456, %43 ], [ 1849171592, %41 ], [ -538897225, %40 ], [ -1072138758, %37 ], [ %36, %23 ], [ %22, %20 ]
  br label %19

20:                                               ; preds = %19
  %21 = load i64, i64* %8, align 8
  %.not70 = icmp sgt i64 %.065, %21
  %22 = select i1 %.not70, i32 -753031309, i32 -759540084
  br label %.backedge

23:                                               ; preds = %19
  %24 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %9)
  %25 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %24, i64* nonnull dereferenceable(8) %10)
  %26 = load i64, i64* %9, align 8
  %27 = load i64, i64* %10, align 8
  %28 = sub i64 %26, %27
  %29 = getelementptr inbounds [1005 x i64], [1005 x i64]* @x, i64 0, i64 %.065
  store i64 %28, i64* %29, align 8
  %30 = add i64 %27, %26
  %31 = getelementptr inbounds [1005 x i64], [1005 x i64]* @y, i64 0, i64 %.065
  store i64 %30, i64* %31, align 8
  %32 = load i64, i64* getelementptr inbounds ([1005 x i64], [1005 x i64]* @x, i64 0, i64 1), align 8
  %33 = add i64 %32, %28
  %34 = srem i64 %33, 2
  %35 = icmp eq i64 %34, 1
  %36 = select i1 %35, i32 2062603488, i32 1343534588
  br label %.backedge

37:                                               ; preds = %19
  %38 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 -1)
  %39 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %38, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

40:                                               ; preds = %19
  br label %.backedge

41:                                               ; preds = %19
  %42 = add i64 %.065, 1
  br label %.backedge

43:                                               ; preds = %19
  br label %.backedge

44:                                               ; preds = %19
  %45 = load i32, i32* @x.8, align 4
  %46 = load i32, i32* @y.9, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 -8349051, i32 233106931
  br label %.backedge

54:                                               ; preds = %19
  %55 = icmp slt i64 %.063, 36
  store i1 %55, i1* %7, align 1
  %56 = load i32, i32* @x.8, align 4
  %57 = load i32, i32* @y.9, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 1114514419, i32 233106931
  br label %.backedge

65:                                               ; preds = %19
  %.0..0..0. = load volatile i1, i1* %7, align 1
  %66 = select i1 %.0..0..0., i32 -510089156, i32 578842094
  br label %.backedge

67:                                               ; preds = %19
  %68 = shl nuw i64 1, %.063
  %69 = getelementptr inbounds [1005 x i64], [1005 x i64]* @len, i64 0, i64 %.063
  store i64 %68, i64* %69, align 8
  br label %.backedge

70:                                               ; preds = %19
  %71 = add i64 %.063, 1
  br label %.backedge

72:                                               ; preds = %19
  %73 = load i64, i64* getelementptr inbounds ([1005 x i64], [1005 x i64]* @x, i64 0, i64 1), align 8
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  %76 = select i1 %75, i32 1394419390, i32 -627994795
  br label %.backedge

77:                                               ; preds = %19
  %78 = load i32, i32* @x.8, align 4
  %79 = load i32, i32* @y.9, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 -386126094, i32 -366684653
  br label %.backedge

87:                                               ; preds = %19
  %88 = load i32, i32* @x.8, align 4
  %89 = load i32, i32* @y.9, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 2097766350, i32 -366684653
  br label %.backedge

97:                                               ; preds = %19
  br label %.backedge

98:                                               ; preds = %19
  %99 = load i32, i32* @x.8, align 4
  %100 = load i32, i32* @y.9, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 581882240, i32 1909032967
  br label %.backedge

108:                                              ; preds = %19
  %109 = load i64, i64* %8, align 8
  %110 = icmp sle i64 %.059, %109
  store i1 %110, i1* %6, align 1
  %111 = load i32, i32* @x.8, align 4
  %112 = load i32, i32* @y.9, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -225962729, i32 1909032967
  br label %.backedge

120:                                              ; preds = %19
  %.0..0..0.45 = load volatile i1, i1* %6, align 1
  %121 = select i1 %.0..0..0.45, i32 -96850994, i32 -1731896006
  br label %.backedge

122:                                              ; preds = %19
  %123 = load i32, i32* @x.8, align 4
  %124 = load i32, i32* @y.9, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 1514843067, i32 32314354
  br label %.backedge

132:                                              ; preds = %19
  %133 = getelementptr inbounds [1005 x i64], [1005 x i64]* @x, i64 0, i64 %.059
  %134 = load i64, i64* %133, align 8
  %.neg69 = add i64 %134, 1
  store i64 %.neg69, i64* %133, align 8
  %135 = getelementptr inbounds [1005 x i64], [1005 x i64]* @y, i64 0, i64 %.059
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %135, align 8
  %138 = load i32, i32* @x.8, align 4
  %139 = load i32, i32* @y.9, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 -1999962002, i32 32314354
  br label %.backedge

147:                                              ; preds = %19
  br label %.backedge

148:                                              ; preds = %19
  %149 = add i64 %.059, 1
  br label %.backedge

150:                                              ; preds = %19
  br label %.backedge

151:                                              ; preds = %19
  br label %.backedge

152:                                              ; preds = %19
  %153 = load i64, i64* %8, align 8
  %.not = icmp sgt i64 %.057, %153
  %154 = select i1 %.not, i32 1942947248, i32 1091532551
  br label %.backedge

155:                                              ; preds = %19
  %156 = load i32, i32* @x.8, align 4
  %157 = load i32, i32* @y.9, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 -1432549343, i32 -1146312341
  br label %.backedge

165:                                              ; preds = %19
  call void @_Z1fPxPA1005_xx(i64* getelementptr inbounds ([1005 x i64], [1005 x i64]* @x, i64 0, i64 0), [1005 x i64]* getelementptr inbounds ([1005 x [1005 x i64]], [1005 x [1005 x i64]]* @mx, i64 0, i64 0), i64 %.057)
  call void @_Z1fPxPA1005_xx(i64* getelementptr inbounds ([1005 x i64], [1005 x i64]* @y, i64 0, i64 0), [1005 x i64]* getelementptr inbounds ([1005 x [1005 x i64]], [1005 x [1005 x i64]]* @my, i64 0, i64 0), i64 %.057)
  %166 = load i32, i32* @x.8, align 4
  %167 = load i32, i32* @y.9, align 4
  %168 = add i32 %166, -1
  %169 = mul i32 %168, %166
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 -1578334729, i32 -1146312341
  br label %.backedge

175:                                              ; preds = %19
  br label %.backedge

176:                                              ; preds = %19
  %177 = add i64 %.057, 1
  br label %.backedge

178:                                              ; preds = %19
  %179 = and i8 %.061, 1
  %180 = or i8 %179, 36
  %181 = zext i8 %180 to i64
  %182 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %181)
  %183 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %182, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

184:                                              ; preds = %19
  %185 = load i32, i32* @x.8, align 4
  %186 = load i32, i32* @y.9, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 -550891402, i32 1667135699
  br label %.backedge

194:                                              ; preds = %19
  %195 = icmp slt i64 %.055, 36
  store i1 %195, i1* %5, align 1
  %196 = load i32, i32* @x.8, align 4
  %197 = load i32, i32* @y.9, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 165579379, i32 1667135699
  br label %.backedge

205:                                              ; preds = %19
  %.0..0..0.46 = load volatile i1, i1* %5, align 1
  %206 = select i1 %.0..0..0.46, i32 1237116654, i32 -485021461
  br label %.backedge

207:                                              ; preds = %19
  %208 = getelementptr inbounds [1005 x i64], [1005 x i64]* @len, i64 0, i64 %.055
  %209 = load i64, i64* %208, align 8
  %210 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %209)
  %211 = icmp slt i64 %.055, 35
  %212 = select i1 %211, i32 -217461925, i32 412131885
  br label %.backedge

213:                                              ; preds = %19
  %214 = load i32, i32* @x.8, align 4
  %215 = load i32, i32* @y.9, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 1337216375, i32 745359985
  br label %.backedge

223:                                              ; preds = %19
  %224 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %225 = load i32, i32* @x.8, align 4
  %226 = load i32, i32* @y.9, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 217667102, i32 745359985
  br label %.backedge

234:                                              ; preds = %19
  br label %.backedge

235:                                              ; preds = %19
  %236 = load i32, i32* @x.8, align 4
  %237 = load i32, i32* @y.9, align 4
  %238 = add i32 %236, -1
  %239 = mul i32 %238, %236
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %242, %241
  %244 = select i1 %243, i32 -1417480875, i32 1110468153
  br label %.backedge

245:                                              ; preds = %19
  %246 = load i32, i32* @x.8, align 4
  %247 = load i32, i32* @y.9, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 933263015, i32 1110468153
  br label %.backedge

255:                                              ; preds = %19
  br label %.backedge

256:                                              ; preds = %19
  %257 = load i32, i32* @x.8, align 4
  %258 = load i32, i32* @y.9, align 4
  %259 = add i32 %257, -1
  %260 = mul i32 %259, %257
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %263, %262
  %265 = select i1 %264, i32 -1491763480, i32 2043086264
  br label %.backedge

266:                                              ; preds = %19
  %267 = add i64 %.055, 1
  %268 = load i32, i32* @x.8, align 4
  %269 = load i32, i32* @y.9, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 2094998519, i32 2043086264
  br label %.backedge

277:                                              ; preds = %19
  br label %.backedge

278:                                              ; preds = %19
  %279 = load i32, i32* @x.8, align 4
  %280 = load i32, i32* @y.9, align 4
  %281 = add i32 %279, -1
  %282 = mul i32 %281, %279
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %285, %284
  %287 = select i1 %286, i32 -1951567468, i32 297363854
  br label %.backedge

288:                                              ; preds = %19
  %289 = and i8 %.061, 1
  %290 = icmp ne i8 %289, 0
  store i1 %290, i1* %4, align 1
  %291 = load i32, i32* @x.8, align 4
  %292 = load i32, i32* @y.9, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 1593090887, i32 297363854
  br label %.backedge

300:                                              ; preds = %19
  %.0..0..0.47 = load volatile i1, i1* %4, align 1
  %301 = select i1 %.0..0..0.47, i32 1051838865, i32 -817761856
  br label %.backedge

302:                                              ; preds = %19
  %303 = load i32, i32* @x.8, align 4
  %304 = load i32, i32* @y.9, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 -1412931397, i32 841410952
  br label %.backedge

312:                                              ; preds = %19
  %313 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %314 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %313, i32 1)
  %315 = load i32, i32* @x.8, align 4
  %316 = load i32, i32* @y.9, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 2051853063, i32 841410952
  br label %.backedge

324:                                              ; preds = %19
  br label %.backedge

325:                                              ; preds = %19
  %326 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

327:                                              ; preds = %19
  %328 = load i32, i32* @x.8, align 4
  %329 = load i32, i32* @y.9, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 1966151261, i32 -381238396
  br label %.backedge

337:                                              ; preds = %19
  %338 = load i64, i64* %8, align 8
  %339 = icmp sle i64 %.053, %338
  store i1 %339, i1* %3, align 1
  %340 = load i32, i32* @x.8, align 4
  %341 = load i32, i32* @y.9, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 -49181316, i32 -381238396
  br label %.backedge

349:                                              ; preds = %19
  %.0..0..0.48 = load volatile i1, i1* %3, align 1
  %350 = select i1 %.0..0..0.48, i32 614255421, i32 -1072138758
  br label %.backedge

351:                                              ; preds = %19
  br label %.backedge

352:                                              ; preds = %19
  %353 = load i32, i32* @x.8, align 4
  %354 = load i32, i32* @y.9, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 -1849321592, i32 -1009176653
  br label %.backedge

362:                                              ; preds = %19
  %363 = icmp slt i64 %.051, 36
  store i1 %363, i1* %2, align 1
  %364 = load i32, i32* @x.8, align 4
  %365 = load i32, i32* @y.9, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 -1373985379, i32 -1009176653
  br label %.backedge

373:                                              ; preds = %19
  %.0..0..0.49 = load volatile i1, i1* %2, align 1
  %374 = select i1 %.0..0..0.49, i32 -1001831795, i32 -451402718
  br label %.backedge

375:                                              ; preds = %19
  %376 = call signext i8 @_Z1gxx(i64 %.053, i64 %.051)
  %377 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %376)
  br label %.backedge

378:                                              ; preds = %19
  %379 = load i32, i32* @x.8, align 4
  %380 = load i32, i32* @y.9, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 1804069303, i32 829313533
  br label %.backedge

388:                                              ; preds = %19
  %389 = add i64 %.051, 1
  %390 = load i32, i32* @x.8, align 4
  %391 = load i32, i32* @y.9, align 4
  %392 = add i32 %390, -1
  %393 = mul i32 %392, %390
  %394 = and i32 %393, 1
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %396, %395
  %398 = select i1 %397, i32 -541184177, i32 829313533
  br label %.backedge

399:                                              ; preds = %19
  br label %.backedge

400:                                              ; preds = %19
  %401 = load i32, i32* @x.8, align 4
  %402 = load i32, i32* @y.9, align 4
  %403 = add i32 %401, -1
  %404 = mul i32 %403, %401
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %407, %406
  %409 = select i1 %408, i32 1032221061, i32 1371749341
  br label %.backedge

410:                                              ; preds = %19
  %411 = and i8 %.061, 1
  %412 = icmp ne i8 %411, 0
  store i1 %412, i1* %1, align 1
  %413 = load i32, i32* @x.8, align 4
  %414 = load i32, i32* @y.9, align 4
  %415 = add i32 %413, -1
  %416 = mul i32 %415, %413
  %417 = and i32 %416, 1
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %419, %418
  %421 = select i1 %420, i32 -899056942, i32 1371749341
  br label %.backedge

422:                                              ; preds = %19
  %.0..0..0.50 = load volatile i1, i1* %1, align 1
  %423 = select i1 %.0..0..0.50, i32 1089262337, i32 1848920487
  br label %.backedge

424:                                              ; preds = %19
  %425 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

426:                                              ; preds = %19
  %427 = load i32, i32* @x.8, align 4
  %428 = load i32, i32* @y.9, align 4
  %429 = add i32 %427, -1
  %430 = mul i32 %429, %427
  %431 = and i32 %430, 1
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %433, %432
  %435 = select i1 %434, i32 1153587775, i32 2050489486
  br label %.backedge

436:                                              ; preds = %19
  %437 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %438 = load i32, i32* @x.8, align 4
  %439 = load i32, i32* @y.9, align 4
  %440 = add i32 %438, -1
  %441 = mul i32 %440, %438
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %444, %443
  %446 = select i1 %445, i32 252370361, i32 2050489486
  br label %.backedge

447:                                              ; preds = %19
  br label %.backedge

448:                                              ; preds = %19
  %449 = add i64 %.053, 1
  br label %.backedge

450:                                              ; preds = %19
  ret i32 0

451:                                              ; preds = %19
  br label %.backedge

452:                                              ; preds = %19
  br label %.backedge

453:                                              ; preds = %19
  br label %.backedge

454:                                              ; preds = %19
  %455 = getelementptr inbounds [1005 x i64], [1005 x i64]* @x, i64 0, i64 %.059
  %456 = load i64, i64* %455, align 8
  %.neg = add i64 %456, 1
  store i64 %.neg, i64* %455, align 8
  %457 = getelementptr inbounds [1005 x i64], [1005 x i64]* @y, i64 0, i64 %.059
  %458 = load i64, i64* %457, align 8
  %459 = add i64 %458, 1
  store i64 %459, i64* %457, align 8
  br label %.backedge

460:                                              ; preds = %19
  call void @_Z1fPxPA1005_xx(i64* getelementptr inbounds ([1005 x i64], [1005 x i64]* @x, i64 0, i64 0), [1005 x i64]* getelementptr inbounds ([1005 x [1005 x i64]], [1005 x [1005 x i64]]* @mx, i64 0, i64 0), i64 %.057)
  call void @_Z1fPxPA1005_xx(i64* getelementptr inbounds ([1005 x i64], [1005 x i64]* @y, i64 0, i64 0), [1005 x i64]* getelementptr inbounds ([1005 x [1005 x i64]], [1005 x [1005 x i64]]* @my, i64 0, i64 0), i64 %.057)
  br label %.backedge

461:                                              ; preds = %19
  br label %.backedge

462:                                              ; preds = %19
  %463 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

464:                                              ; preds = %19
  br label %.backedge

465:                                              ; preds = %19
  %466 = add i64 %.055, 1
  br label %.backedge

467:                                              ; preds = %19
  br label %.backedge

468:                                              ; preds = %19
  %469 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %470 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %469, i32 1)
  br label %.backedge

471:                                              ; preds = %19
  br label %.backedge

472:                                              ; preds = %19
  br label %.backedge

473:                                              ; preds = %19
  %474 = add i64 %.051, 1
  br label %.backedge

475:                                              ; preds = %19
  br label %.backedge

476:                                              ; preds = %19
  %477 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s316590153.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
