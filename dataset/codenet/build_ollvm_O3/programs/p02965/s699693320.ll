; ModuleID = 'build_ollvm/programs/p02965/s699693320.ll'
source_filename = "Project_CodeNet_C++1400/p02965/s699693320.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@m = global i32 0, align 4
@fac = local_unnamed_addr global [2000010 x i32] zeroinitializer, align 16
@ifac = local_unnamed_addr global [2000010 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s699693320.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #9
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nosync nounwind readonly uwtable
define i32 @_Z5powerii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = load i32, i32* @x.2, align 4
  %4 = load i32, i32* @y.3, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %9, %8
  %11 = select i1 %10, i32 -11175640, i32 1115191423
  %12 = select i1 %10, i32 83800954, i32 1115191423
  br label %13

13:                                               ; preds = %.backedge, %2
  %.016 = phi i32 [ %0, %2 ], [ %.016.be, %.backedge ]
  %.014 = phi i32 [ %1, %2 ], [ %.014.be, %.backedge ]
  %.012 = phi i32 [ 1, %2 ], [ %.012.be, %.backedge ]
  %.0 = phi i32 [ -67808095, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -67808095, label %14
    i32 1731596649, label %16
    i32 1275290051, label %19
    i32 433355200, label %25
    i32 954318030, label %26
    i32 83800954, label %27
    i32 -11175640, label %33
    i32 1428965516, label %34
    i32 1115191423, label %35
  ]

.backedge:                                        ; preds = %13, %35, %33, %27, %26, %25, %19, %16, %14
  %.016.be = phi i32 [ %.016, %13 ], [ %40, %35 ], [ %.016, %33 ], [ %32, %27 ], [ %.016, %26 ], [ %.016, %25 ], [ %.016, %19 ], [ %.016, %16 ], [ %.016, %14 ]
  %.014.be = phi i32 [ %.014, %13 ], [ %36, %35 ], [ %.014, %33 ], [ %28, %27 ], [ %.014, %26 ], [ %.014, %25 ], [ %.014, %19 ], [ %.014, %16 ], [ %.014, %14 ]
  %.012.be = phi i32 [ %.012, %13 ], [ %.012, %35 ], [ %.012, %33 ], [ %.012, %27 ], [ %.012, %26 ], [ %.012, %25 ], [ %24, %19 ], [ %.012, %16 ], [ %.012, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ 83800954, %35 ], [ -67808095, %33 ], [ %11, %27 ], [ %12, %26 ], [ 954318030, %25 ], [ 433355200, %19 ], [ %18, %16 ], [ %15, %14 ]
  br label %13

14:                                               ; preds = %13
  %.not18 = icmp eq i32 %.014, 0
  %15 = select i1 %.not18, i32 1428965516, i32 1731596649
  br label %.backedge

16:                                               ; preds = %13
  %17 = and i32 %.014, 1
  %.not = icmp eq i32 %17, 0
  %18 = select i1 %.not, i32 433355200, i32 1275290051
  br label %.backedge

19:                                               ; preds = %13
  %20 = sext i32 %.012 to i64
  %21 = sext i32 %.016 to i64
  %22 = mul nsw i64 %20, %21
  %23 = srem i64 %22, 998244353
  %24 = trunc i64 %23 to i32
  br label %.backedge

25:                                               ; preds = %13
  br label %.backedge

26:                                               ; preds = %13
  br label %.backedge

27:                                               ; preds = %13
  %28 = ashr i32 %.014, 1
  %29 = sext i32 %.016 to i64
  %30 = mul nsw i64 %29, %29
  %31 = urem i64 %30, 998244353
  %32 = trunc i64 %31 to i32
  br label %.backedge

33:                                               ; preds = %13
  br label %.backedge

34:                                               ; preds = %13
  ret i32 %.012

35:                                               ; preds = %13
  %36 = ashr i32 %.014, 1
  %37 = sext i32 %.016 to i64
  %38 = mul nsw i64 %37, %37
  %39 = urem i64 %38, 998244353
  %40 = trunc i64 %39 to i32
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z5binomii(i32 %0, i32 %1) local_unnamed_addr #5 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i1, align 1
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.4, align 4
  %11 = load i32, i32* @y.5, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %2
  %18 = phi i32 [ %11, %2 ], [ %.be, %.backedge ]
  %19 = phi i32 [ %10, %2 ], [ %.be18, %.backedge ]
  %20 = phi i32 [ %11, %2 ], [ %.be19, %.backedge ]
  %21 = phi i32 [ %10, %2 ], [ %.be20, %.backedge ]
  %22 = phi i32 [ %11, %2 ], [ %.be21, %.backedge ]
  %23 = phi i32 [ %10, %2 ], [ %.be22, %.backedge ]
  %24 = phi i32 [ %11, %2 ], [ %.be23, %.backedge ]
  %25 = phi i32 [ %10, %2 ], [ %.be24, %.backedge ]
  %.016 = phi i32 [ -1445924592, %2 ], [ %.016.be, %.backedge ]
  %.0 = phi i64 [ undef, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.016, label %.backedge [
    i32 -1445924592, label %26
    i32 -1284800649, label %29
    i32 -1928251626, label %44
    i32 526487642, label %46
    i32 -755465023, label %50
    i32 -420426199, label %58
    i32 1015258523, label %66
    i32 -384115819, label %67
    i32 42647730, label %89
    i32 237614213, label %97
    i32 1527202432, label %106
    i32 181806034, label %107
    i32 -1556367591, label %108
    i32 -1641287216, label %109
  ]

.backedge:                                        ; preds = %17, %109, %108, %107, %97, %89, %67, %66, %58, %50, %46, %44, %29, %26
  %.be = phi i32 [ %18, %17 ], [ %18, %109 ], [ %18, %108 ], [ %18, %107 ], [ %18, %97 ], [ %18, %89 ], [ %18, %67 ], [ %18, %66 ], [ %18, %58 ], [ %18, %50 ], [ %18, %46 ], [ %18, %44 ], [ %36, %29 ], [ %18, %26 ]
  %.be18 = phi i32 [ %19, %17 ], [ %19, %109 ], [ %19, %108 ], [ %19, %107 ], [ %19, %97 ], [ %19, %89 ], [ %19, %67 ], [ %19, %66 ], [ %19, %58 ], [ %19, %50 ], [ %19, %46 ], [ %19, %44 ], [ %35, %29 ], [ %19, %26 ]
  %.be19 = phi i32 [ %20, %17 ], [ %20, %109 ], [ %20, %108 ], [ %20, %107 ], [ %20, %97 ], [ %20, %89 ], [ %20, %67 ], [ %20, %66 ], [ %20, %58 ], [ %18, %50 ], [ %20, %46 ], [ %20, %44 ], [ %36, %29 ], [ %20, %26 ]
  %.be20 = phi i32 [ %21, %17 ], [ %21, %109 ], [ %21, %108 ], [ %21, %107 ], [ %21, %97 ], [ %21, %89 ], [ %21, %67 ], [ %21, %66 ], [ %21, %58 ], [ %19, %50 ], [ %21, %46 ], [ %21, %44 ], [ %35, %29 ], [ %21, %26 ]
  %.be21 = phi i32 [ %22, %17 ], [ %22, %109 ], [ %22, %108 ], [ %22, %107 ], [ %22, %97 ], [ %22, %89 ], [ %22, %67 ], [ %22, %66 ], [ %20, %58 ], [ %18, %50 ], [ %22, %46 ], [ %22, %44 ], [ %36, %29 ], [ %22, %26 ]
  %.be22 = phi i32 [ %23, %17 ], [ %23, %109 ], [ %23, %108 ], [ %23, %107 ], [ %23, %97 ], [ %23, %89 ], [ %23, %67 ], [ %23, %66 ], [ %21, %58 ], [ %19, %50 ], [ %23, %46 ], [ %23, %44 ], [ %35, %29 ], [ %23, %26 ]
  %.be23 = phi i32 [ %24, %17 ], [ %24, %109 ], [ %24, %108 ], [ %24, %107 ], [ %24, %97 ], [ %22, %89 ], [ %24, %67 ], [ %24, %66 ], [ %20, %58 ], [ %18, %50 ], [ %24, %46 ], [ %24, %44 ], [ %36, %29 ], [ %24, %26 ]
  %.be24 = phi i32 [ %25, %17 ], [ %25, %109 ], [ %25, %108 ], [ %25, %107 ], [ %25, %97 ], [ %23, %89 ], [ %25, %67 ], [ %25, %66 ], [ %21, %58 ], [ %19, %50 ], [ %25, %46 ], [ %25, %44 ], [ %35, %29 ], [ %25, %26 ]
  %.016.be = phi i32 [ %.016, %17 ], [ 237614213, %109 ], [ -420426199, %108 ], [ -1284800649, %107 ], [ %105, %97 ], [ %96, %89 ], [ 42647730, %67 ], [ 42647730, %66 ], [ %65, %58 ], [ %57, %50 ], [ %49, %46 ], [ %45, %44 ], [ %43, %29 ], [ %28, %26 ]
  %.0.be = phi i64 [ %.0, %17 ], [ %.0, %109 ], [ %.0, %108 ], [ %.0, %107 ], [ %.0, %97 ], [ %.0, %89 ], [ %88, %67 ], [ 0, %66 ], [ %.0, %58 ], [ %.0, %50 ], [ %.0, %46 ], [ %.0, %44 ], [ %.0, %29 ], [ %.0, %26 ]
  br label %17

26:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %.0..0..0.2 = load volatile i1, i1* %8, align 1
  %27 = or i1 %.0..0..0., %.0..0..0.2
  %28 = select i1 %27, i32 -1284800649, i32 181806034
  br label %.backedge

29:                                               ; preds = %17
  %30 = alloca i32, align 4
  store i32* %30, i32** %7, align 8
  %31 = alloca i32, align 4
  store i32* %31, i32** %6, align 8
  %.0..0..0.3 = load volatile i32*, i32** %7, align 8
  store i32 %0, i32* %.0..0..0.3, align 4
  %.0..0..0.7 = load volatile i32*, i32** %6, align 8
  store i32 %1, i32* %.0..0..0.7, align 4
  %.0..0..0.4 = load volatile i32*, i32** %7, align 8
  %32 = load i32, i32* %.0..0..0.4, align 4
  %.0..0..0.8 = load volatile i32*, i32** %6, align 8
  %33 = load i32, i32* %.0..0..0.8, align 4
  %34 = icmp slt i32 %32, %33
  store i1 %34, i1* %5, align 1
  %35 = load i32, i32* @x.4, align 4
  %36 = load i32, i32* @y.5, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1928251626, i32 181806034
  br label %.backedge

44:                                               ; preds = %17
  %.0..0..0.12 = load volatile i1, i1* %5, align 1
  %45 = select i1 %.0..0..0.12, i32 -755465023, i32 526487642
  br label %.backedge

46:                                               ; preds = %17
  %.0..0..0.9 = load volatile i32*, i32** %6, align 8
  %47 = load i32, i32* %.0..0..0.9, align 4
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -755465023, i32 -384115819
  br label %.backedge

50:                                               ; preds = %17
  %51 = add i32 %19, -1
  %52 = mul i32 %51, %19
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %18, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 -420426199, i32 -1556367591
  br label %.backedge

58:                                               ; preds = %17
  %59 = add i32 %21, -1
  %60 = mul i32 %59, %21
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %20, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 1015258523, i32 -1556367591
  br label %.backedge

66:                                               ; preds = %17
  br label %.backedge

67:                                               ; preds = %17
  %.0..0..0.5 = load volatile i32*, i32** %7, align 8
  %68 = load i32, i32* %.0..0..0.5, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [2000010 x i32], [2000010 x i32]* @fac, i64 0, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %.0..0..0.10 = load volatile i32*, i32** %6, align 8
  %73 = load i32, i32* %.0..0..0.10, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [2000010 x i32], [2000010 x i32]* @ifac, i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %77, %72
  %79 = srem i64 %78, 998244353
  %.0..0..0.6 = load volatile i32*, i32** %7, align 8
  %80 = load i32, i32* %.0..0..0.6, align 4
  %.0..0..0.11 = load volatile i32*, i32** %6, align 8
  %81 = load i32, i32* %.0..0..0.11, align 4
  %82 = sub i32 %80, %81
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [2000010 x i32], [2000010 x i32]* @ifac, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = mul nsw i64 %79, %86
  %88 = srem i64 %87, 998244353
  br label %.backedge

89:                                               ; preds = %17
  store i64 %.0, i64* %3, align 8
  %90 = add i32 %23, -1
  %91 = mul i32 %90, %23
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %22, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 237614213, i32 -1641287216
  br label %.backedge

97:                                               ; preds = %17
  %.0..0..0.14 = load volatile i64, i64* %3, align 8
  %98 = trunc i64 %.0..0..0.14 to i32
  store i32 %98, i32* %4, align 4
  %99 = add i32 %25, -1
  %100 = mul i32 %99, %25
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %24, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 1527202432, i32 -1641287216
  br label %.backedge

106:                                              ; preds = %17
  %.0..0..0.13 = load volatile i32, i32* %4, align 4
  ret i32 %.0..0..0.13

107:                                              ; preds = %17
  br label %.backedge

108:                                              ; preds = %17
  br label %.backedge

109:                                              ; preds = %17
  %.0..0..0.15 = load volatile i64, i64* %3, align 8
  br label %.backedge
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #6 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull @m)
  %12 = load i32, i32* @m, align 4
  %13 = mul nsw i32 %12, 3
  %14 = sdiv i32 %13, 2
  %15 = load i32, i32* @n, align 4
  %16 = add i32 %14, %15
  store i32 1, i32* getelementptr inbounds ([2000010 x i32], [2000010 x i32]* @fac, i64 0, i64 0), align 16
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [2000010 x i32], [2000010 x i32]* @fac, i64 0, i64 %17
  %19 = getelementptr inbounds [2000010 x i32], [2000010 x i32]* @ifac, i64 0, i64 %17
  br label %20

20:                                               ; preds = %.backedge, %0
  %.073 = phi i32 [ 1, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ -1604443061, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i1 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i1 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.061, label %.backedge [
    i32 -1604443061, label %21
    i32 -1505883261, label %31
    i32 1349101851, label %42
    i32 1262249704, label %44
    i32 1456223837, label %55
    i32 44055131, label %57
    i32 1055787550, label %60
    i32 1613875090, label %70
    i32 362408472, label %81
    i32 1492005423, label %83
    i32 636993433, label %94
    i32 -1262012389, label %104
    i32 -1424978357, label %115
    i32 -1485891539, label %116
    i32 858746277, label %119
    i32 1994151954, label %129
    i32 -1945942647, label %142
    i32 1536619969, label %144
    i32 357876313, label %154
    i32 1409694264, label %167
    i32 -1041912207, label %168
    i32 -1291133201, label %170
    i32 -1237794469, label %177
    i32 -597700778, label %187
    i32 1429342704, label %200
    i32 -481837699, label %202
    i32 -1586316994, label %208
    i32 1605950786, label %210
    i32 -592706545, label %220
    i32 -64781133, label %230
    i32 615537911, label %231
    i32 881228753, label %241
    i32 576764870, label %256
    i32 737002001, label %258
    i32 582168264, label %267
    i32 -1602794814, label %269
    i32 1734470784, label %279
    i32 605142200, label %324
    i32 1488506819, label %325
    i32 753714008, label %335
    i32 143139250, label %346
    i32 1414103764, label %347
    i32 146760976, label %357
    i32 -2093175107, label %367
    i32 482294303, label %368
    i32 -93545073, label %370
    i32 -1362832923, label %371
    i32 2131773875, label %381
    i32 1467531997, label %392
    i32 701299504, label %393
    i32 -1144842503, label %397
    i32 507610792, label %398
    i32 -170013194, label %399
    i32 -1747017898, label %400
    i32 -334449680, label %401
    i32 -204206986, label %402
    i32 -330425755, label %404
    i32 90882065, label %405
    i32 1509597793, label %409
    i32 1914753773, label %445
    i32 97893053, label %447
    i32 -623529574, label %448
  ]

.backedge:                                        ; preds = %20, %448, %447, %445, %409, %405, %404, %402, %401, %400, %399, %398, %397, %392, %381, %371, %370, %368, %367, %357, %347, %346, %335, %325, %324, %279, %269, %267, %258, %256, %241, %231, %230, %220, %210, %208, %202, %200, %187, %177, %170, %168, %167, %154, %144, %142, %129, %119, %116, %115, %104, %94, %83, %81, %70, %60, %57, %55, %44, %42, %31, %21
  %.073.be = phi i32 [ %.073, %20 ], [ %.073, %448 ], [ %.073, %447 ], [ %.073, %445 ], [ %.073, %409 ], [ %.073, %405 ], [ %.073, %404 ], [ %.073, %402 ], [ %.073, %401 ], [ %.073, %400 ], [ %.073, %399 ], [ %.073, %398 ], [ %.073, %397 ], [ %.073, %392 ], [ %.073, %381 ], [ %.073, %371 ], [ %.073, %370 ], [ %.073, %368 ], [ %.073, %367 ], [ %.073, %357 ], [ %.073, %347 ], [ %.073, %346 ], [ %.073, %335 ], [ %.073, %325 ], [ %.073, %324 ], [ %.073, %279 ], [ %.073, %269 ], [ %.073, %267 ], [ %.073, %258 ], [ %.073, %256 ], [ %.073, %241 ], [ %.073, %231 ], [ %.073, %230 ], [ %.073, %220 ], [ %.073, %210 ], [ %.073, %208 ], [ %.073, %202 ], [ %.073, %200 ], [ %.073, %187 ], [ %.073, %177 ], [ %.073, %170 ], [ %.073, %168 ], [ %.073, %167 ], [ %.073, %154 ], [ %.073, %144 ], [ %.073, %142 ], [ %.073, %129 ], [ %.073, %119 ], [ %.073, %116 ], [ %.073, %115 ], [ %.073, %104 ], [ %.073, %94 ], [ %.073, %83 ], [ %.073, %81 ], [ %.073, %70 ], [ %.073, %60 ], [ %.073, %57 ], [ %56, %55 ], [ %.073, %44 ], [ %.073, %42 ], [ %.073, %31 ], [ %.073, %21 ]
  %.071.be = phi i32 [ %.071, %20 ], [ %.071, %448 ], [ %.071, %447 ], [ %.071, %445 ], [ %.071, %409 ], [ %.071, %405 ], [ %.071, %404 ], [ %.071, %402 ], [ %.071, %401 ], [ %.071, %400 ], [ %.neg77, %399 ], [ %.071, %398 ], [ %.071, %397 ], [ %.071, %392 ], [ %.071, %381 ], [ %.071, %371 ], [ %.071, %370 ], [ %.071, %368 ], [ %.071, %367 ], [ %.071, %357 ], [ %.071, %347 ], [ %.071, %346 ], [ %.071, %335 ], [ %.071, %325 ], [ %.071, %324 ], [ %.071, %279 ], [ %.071, %269 ], [ %.071, %267 ], [ %.071, %258 ], [ %.071, %256 ], [ %.071, %241 ], [ %.071, %231 ], [ %.071, %230 ], [ %.071, %220 ], [ %.071, %210 ], [ %.071, %208 ], [ %.071, %202 ], [ %.071, %200 ], [ %.071, %187 ], [ %.071, %177 ], [ %.071, %170 ], [ %.071, %168 ], [ %.071, %167 ], [ %.071, %154 ], [ %.071, %144 ], [ %.071, %142 ], [ %.071, %129 ], [ %.071, %119 ], [ %.071, %116 ], [ %.071, %115 ], [ %105, %104 ], [ %.071, %94 ], [ %.071, %83 ], [ %.071, %81 ], [ %.071, %70 ], [ %.071, %60 ], [ %16, %57 ], [ %.071, %55 ], [ %.071, %44 ], [ %.071, %42 ], [ %.071, %31 ], [ %.071, %21 ]
  %.069.be = phi i32 [ %.069, %20 ], [ %.069, %448 ], [ %.069, %447 ], [ %.069, %445 ], [ %444, %409 ], [ %.069, %405 ], [ %.069, %404 ], [ %.069, %402 ], [ %.069, %401 ], [ %.069, %400 ], [ %.069, %399 ], [ %.069, %398 ], [ %.069, %397 ], [ %.069, %392 ], [ %.069, %381 ], [ %.069, %371 ], [ %.069, %370 ], [ %.069, %368 ], [ %.069, %367 ], [ %.069, %357 ], [ %.069, %347 ], [ %.069, %346 ], [ %.069, %335 ], [ %.069, %325 ], [ %.069, %324 ], [ %314, %279 ], [ %.069, %269 ], [ %.069, %267 ], [ %.069, %258 ], [ %.069, %256 ], [ %.069, %241 ], [ %.069, %231 ], [ %.069, %230 ], [ %.069, %220 ], [ %.069, %210 ], [ %.069, %208 ], [ %.069, %202 ], [ %.069, %200 ], [ %.069, %187 ], [ %.069, %177 ], [ %.069, %170 ], [ %.069, %168 ], [ %.069, %167 ], [ %.069, %154 ], [ %.069, %144 ], [ %.069, %142 ], [ %.069, %129 ], [ %.069, %119 ], [ 0, %116 ], [ %.069, %115 ], [ %.069, %104 ], [ %.069, %94 ], [ %.069, %83 ], [ %.069, %81 ], [ %.069, %70 ], [ %.069, %60 ], [ %.069, %57 ], [ %.069, %55 ], [ %.069, %44 ], [ %.069, %42 ], [ %.069, %31 ], [ %.069, %21 ]
  %.067.be = phi i32 [ %.067, %20 ], [ %.067, %448 ], [ %.067, %447 ], [ %.067, %445 ], [ %.067, %409 ], [ %.067, %405 ], [ %.067, %404 ], [ %.067, %402 ], [ %.067, %401 ], [ %.067, %400 ], [ %.067, %399 ], [ %.067, %398 ], [ %.067, %397 ], [ %.067, %392 ], [ %.067, %381 ], [ %.067, %371 ], [ %.067, %370 ], [ %.067, %368 ], [ %.067, %367 ], [ %.067, %357 ], [ %.067, %347 ], [ %.067, %346 ], [ %.067, %335 ], [ %.067, %325 ], [ %.067, %324 ], [ %.067, %279 ], [ %.067, %269 ], [ %.067, %267 ], [ %.067, %258 ], [ %.067, %256 ], [ %.067, %241 ], [ %.067, %231 ], [ %.067, %230 ], [ %.067, %220 ], [ %.067, %210 ], [ %.067, %208 ], [ %.067, %202 ], [ %.067, %200 ], [ %.067, %187 ], [ %.067, %177 ], [ %176, %170 ], [ %.067, %168 ], [ %.067, %167 ], [ %.067, %154 ], [ %.067, %144 ], [ %.067, %142 ], [ %.067, %129 ], [ %.067, %119 ], [ %.067, %116 ], [ %.067, %115 ], [ %.067, %104 ], [ %.067, %94 ], [ %.067, %83 ], [ %.067, %81 ], [ %.067, %70 ], [ %.067, %60 ], [ %.067, %57 ], [ %.067, %55 ], [ %.067, %44 ], [ %.067, %42 ], [ %.067, %31 ], [ %.067, %21 ]
  %.065.be = phi i32 [ %.065, %20 ], [ %.065, %448 ], [ %.065, %447 ], [ %.065, %445 ], [ %.065, %409 ], [ %.065, %405 ], [ %.065, %404 ], [ %.065, %402 ], [ %.065, %401 ], [ %.065, %400 ], [ %.065, %399 ], [ %.065, %398 ], [ %.065, %397 ], [ %.065, %392 ], [ %.065, %381 ], [ %.065, %371 ], [ %.065, %370 ], [ %369, %368 ], [ %.065, %367 ], [ %.065, %357 ], [ %.065, %347 ], [ %.065, %346 ], [ %.065, %335 ], [ %.065, %325 ], [ %.065, %324 ], [ %.065, %279 ], [ %.065, %269 ], [ %.065, %267 ], [ %.065, %258 ], [ %.065, %256 ], [ %.065, %241 ], [ %.065, %231 ], [ %.065, %230 ], [ %.065, %220 ], [ %.065, %210 ], [ %.065, %208 ], [ %.065, %202 ], [ %.065, %200 ], [ %.065, %187 ], [ %.065, %177 ], [ 0, %170 ], [ %.065, %168 ], [ %.065, %167 ], [ %.065, %154 ], [ %.065, %144 ], [ %.065, %142 ], [ %.065, %129 ], [ %.065, %119 ], [ %.065, %116 ], [ %.065, %115 ], [ %.065, %104 ], [ %.065, %94 ], [ %.065, %83 ], [ %.065, %81 ], [ %.065, %70 ], [ %.065, %60 ], [ %.065, %57 ], [ %.065, %55 ], [ %.065, %44 ], [ %.065, %42 ], [ %.065, %31 ], [ %.065, %21 ]
  %.063.be = phi i32 [ %.063, %20 ], [ %.063, %448 ], [ %.063, %447 ], [ %446, %445 ], [ %.063, %409 ], [ %.063, %405 ], [ 0, %404 ], [ %.063, %402 ], [ %.063, %401 ], [ %.063, %400 ], [ %.063, %399 ], [ %.063, %398 ], [ %.063, %397 ], [ %.063, %392 ], [ %.063, %381 ], [ %.063, %371 ], [ %.063, %370 ], [ %.063, %368 ], [ %.063, %367 ], [ %.063, %357 ], [ %.063, %347 ], [ %.063, %346 ], [ %336, %335 ], [ %.063, %325 ], [ %.063, %324 ], [ %.063, %279 ], [ %.063, %269 ], [ %.063, %267 ], [ %.063, %258 ], [ %.063, %256 ], [ %.063, %241 ], [ %.063, %231 ], [ %.063, %230 ], [ 0, %220 ], [ %.063, %210 ], [ %.063, %208 ], [ %.063, %202 ], [ %.063, %200 ], [ %.063, %187 ], [ %.063, %177 ], [ %.063, %170 ], [ %.063, %168 ], [ %.063, %167 ], [ %.063, %154 ], [ %.063, %144 ], [ %.063, %142 ], [ %.063, %129 ], [ %.063, %119 ], [ %.063, %116 ], [ %.063, %115 ], [ %.063, %104 ], [ %.063, %94 ], [ %.063, %83 ], [ %.063, %81 ], [ %.063, %70 ], [ %.063, %60 ], [ %.063, %57 ], [ %.063, %55 ], [ %.063, %44 ], [ %.063, %42 ], [ %.063, %31 ], [ %.063, %21 ]
  %.061.be = phi i32 [ %.061, %20 ], [ 2131773875, %448 ], [ 146760976, %447 ], [ 753714008, %445 ], [ 1734470784, %409 ], [ 881228753, %405 ], [ -592706545, %404 ], [ -597700778, %402 ], [ 357876313, %401 ], [ 1994151954, %400 ], [ -1262012389, %399 ], [ 1613875090, %398 ], [ -1505883261, %397 ], [ 858746277, %392 ], [ %391, %381 ], [ %380, %371 ], [ -1362832923, %370 ], [ -1237794469, %368 ], [ 482294303, %367 ], [ %366, %357 ], [ %356, %347 ], [ 615537911, %346 ], [ %345, %335 ], [ %334, %325 ], [ 1488506819, %324 ], [ %323, %279 ], [ %278, %269 ], [ %268, %267 ], [ 582168264, %258 ], [ %257, %256 ], [ %255, %241 ], [ %240, %231 ], [ 615537911, %230 ], [ %229, %220 ], [ %219, %210 ], [ %209, %208 ], [ -1586316994, %202 ], [ %201, %200 ], [ %199, %187 ], [ %186, %177 ], [ -1237794469, %170 ], [ %169, %168 ], [ -1041912207, %167 ], [ %166, %154 ], [ %153, %144 ], [ %143, %142 ], [ %141, %129 ], [ %128, %119 ], [ 858746277, %116 ], [ 1055787550, %115 ], [ %114, %104 ], [ %103, %94 ], [ 636993433, %83 ], [ %82, %81 ], [ %80, %70 ], [ %69, %60 ], [ 1055787550, %57 ], [ -1604443061, %55 ], [ 1456223837, %44 ], [ %43, %42 ], [ %41, %31 ], [ %30, %21 ]
  %.059.be = phi i1 [ %.059, %20 ], [ %.059, %448 ], [ %.059, %447 ], [ %.059, %445 ], [ %.059, %409 ], [ %.059, %405 ], [ %.059, %404 ], [ %.059, %402 ], [ %.059, %401 ], [ %.059, %400 ], [ %.059, %399 ], [ %.059, %398 ], [ %.059, %397 ], [ %.059, %392 ], [ %.059, %381 ], [ %.059, %371 ], [ %.059, %370 ], [ %.059, %368 ], [ %.059, %367 ], [ %.059, %357 ], [ %.059, %347 ], [ %.059, %346 ], [ %.059, %335 ], [ %.059, %325 ], [ %.059, %324 ], [ %.059, %279 ], [ %.059, %269 ], [ %.059, %267 ], [ %.059, %258 ], [ %.059, %256 ], [ %.059, %241 ], [ %.059, %231 ], [ %.059, %230 ], [ %.059, %220 ], [ %.059, %210 ], [ %.059, %208 ], [ %.059, %202 ], [ %.059, %200 ], [ %.059, %187 ], [ %.059, %177 ], [ %.059, %170 ], [ %.059, %168 ], [ %.0..0..0.54, %167 ], [ %.059, %154 ], [ %.059, %144 ], [ false, %142 ], [ %.059, %129 ], [ %.059, %119 ], [ %.059, %116 ], [ %.059, %115 ], [ %.059, %104 ], [ %.059, %94 ], [ %.059, %83 ], [ %.059, %81 ], [ %.059, %70 ], [ %.059, %60 ], [ %.059, %57 ], [ %.059, %55 ], [ %.059, %44 ], [ %.059, %42 ], [ %.059, %31 ], [ %.059, %21 ]
  %.057.be = phi i1 [ %.057, %20 ], [ %.057, %448 ], [ %.057, %447 ], [ %.057, %445 ], [ %.057, %409 ], [ %.057, %405 ], [ %.057, %404 ], [ %.057, %402 ], [ %.057, %401 ], [ %.057, %400 ], [ %.057, %399 ], [ %.057, %398 ], [ %.057, %397 ], [ %.057, %392 ], [ %.057, %381 ], [ %.057, %371 ], [ %.057, %370 ], [ %.057, %368 ], [ %.057, %367 ], [ %.057, %357 ], [ %.057, %347 ], [ %.057, %346 ], [ %.057, %335 ], [ %.057, %325 ], [ %.057, %324 ], [ %.057, %279 ], [ %.057, %269 ], [ %.057, %267 ], [ %.057, %258 ], [ %.057, %256 ], [ %.057, %241 ], [ %.057, %231 ], [ %.057, %230 ], [ %.057, %220 ], [ %.057, %210 ], [ %.057, %208 ], [ %207, %202 ], [ false, %200 ], [ %.057, %187 ], [ %.057, %177 ], [ %.057, %170 ], [ %.057, %168 ], [ %.057, %167 ], [ %.057, %154 ], [ %.057, %144 ], [ %.057, %142 ], [ %.057, %129 ], [ %.057, %119 ], [ %.057, %116 ], [ %.057, %115 ], [ %.057, %104 ], [ %.057, %94 ], [ %.057, %83 ], [ %.057, %81 ], [ %.057, %70 ], [ %.057, %60 ], [ %.057, %57 ], [ %.057, %55 ], [ %.057, %44 ], [ %.057, %42 ], [ %.057, %31 ], [ %.057, %21 ]
  %.0.be = phi i1 [ %.0, %20 ], [ %.0, %448 ], [ %.0, %447 ], [ %.0, %445 ], [ %.0, %409 ], [ %.0, %405 ], [ %.0, %404 ], [ %.0, %402 ], [ %.0, %401 ], [ %.0, %400 ], [ %.0, %399 ], [ %.0, %398 ], [ %.0, %397 ], [ %.0, %392 ], [ %.0, %381 ], [ %.0, %371 ], [ %.0, %370 ], [ %.0, %368 ], [ %.0, %367 ], [ %.0, %357 ], [ %.0, %347 ], [ %.0, %346 ], [ %.0, %335 ], [ %.0, %325 ], [ %.0, %324 ], [ %.0, %279 ], [ %.0, %269 ], [ %.0, %267 ], [ %266, %258 ], [ false, %256 ], [ %.0, %241 ], [ %.0, %231 ], [ %.0, %230 ], [ %.0, %220 ], [ %.0, %210 ], [ %.0, %208 ], [ %.0, %202 ], [ %.0, %200 ], [ %.0, %187 ], [ %.0, %177 ], [ %.0, %170 ], [ %.0, %168 ], [ %.0, %167 ], [ %.0, %154 ], [ %.0, %144 ], [ %.0, %142 ], [ %.0, %129 ], [ %.0, %119 ], [ %.0, %116 ], [ %.0, %115 ], [ %.0, %104 ], [ %.0, %94 ], [ %.0, %83 ], [ %.0, %81 ], [ %.0, %70 ], [ %.0, %60 ], [ %.0, %57 ], [ %.0, %55 ], [ %.0, %44 ], [ %.0, %42 ], [ %.0, %31 ], [ %.0, %21 ]
  br label %20

21:                                               ; preds = %20
  %22 = load i32, i32* @x.6, align 4
  %23 = load i32, i32* @y.7, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 -1505883261, i32 -1144842503
  br label %.backedge

31:                                               ; preds = %20
  %32 = icmp sle i32 %.073, %16
  store i1 %32, i1* %6, align 1
  %33 = load i32, i32* @x.6, align 4
  %34 = load i32, i32* @y.7, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 1349101851, i32 -1144842503
  br label %.backedge

42:                                               ; preds = %20
  %.0..0..0.51 = load volatile i1, i1* %6, align 1
  %43 = select i1 %.0..0..0.51, i32 1262249704, i32 44055131
  br label %.backedge

44:                                               ; preds = %20
  %45 = add i32 %.073, -1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [2000010 x i32], [2000010 x i32]* @fac, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = sext i32 %.073 to i64
  %51 = mul nsw i64 %49, %50
  %52 = srem i64 %51, 998244353
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds [2000010 x i32], [2000010 x i32]* @fac, i64 0, i64 %50
  store i32 %53, i32* %54, align 4
  br label %.backedge

55:                                               ; preds = %20
  %56 = add i32 %.073, 1
  br label %.backedge

57:                                               ; preds = %20
  %58 = load i32, i32* %18, align 4
  %59 = call i32 @_Z5powerii(i32 %58, i32 998244351)
  store i32 %59, i32* %19, align 4
  br label %.backedge

60:                                               ; preds = %20
  %61 = load i32, i32* @x.6, align 4
  %62 = load i32, i32* @y.7, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 1613875090, i32 507610792
  br label %.backedge

70:                                               ; preds = %20
  %71 = icmp ne i32 %.071, 0
  store i1 %71, i1* %5, align 1
  %72 = load i32, i32* @x.6, align 4
  %73 = load i32, i32* @y.7, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 362408472, i32 507610792
  br label %.backedge

81:                                               ; preds = %20
  %.0..0..0.52 = load volatile i1, i1* %5, align 1
  %82 = select i1 %.0..0..0.52, i32 1492005423, i32 -1485891539
  br label %.backedge

83:                                               ; preds = %20
  %84 = sext i32 %.071 to i64
  %85 = getelementptr inbounds [2000010 x i32], [2000010 x i32]* @ifac, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = mul nsw i64 %87, %84
  %89 = srem i64 %88, 998244353
  %90 = trunc i64 %89 to i32
  %91 = add i32 %.071, -1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [2000010 x i32], [2000010 x i32]* @ifac, i64 0, i64 %92
  store i32 %90, i32* %93, align 4
  br label %.backedge

94:                                               ; preds = %20
  %95 = load i32, i32* @x.6, align 4
  %96 = load i32, i32* @y.7, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -1262012389, i32 -170013194
  br label %.backedge

104:                                              ; preds = %20
  %105 = add i32 %.071, -1
  %106 = load i32, i32* @x.6, align 4
  %107 = load i32, i32* @y.7, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 -1424978357, i32 -170013194
  br label %.backedge

115:                                              ; preds = %20
  br label %.backedge

116:                                              ; preds = %20
  %117 = load i32, i32* @m, align 4
  %118 = and i32 %117, 1
  store i32 %118, i32* %7, align 4
  br label %.backedge

119:                                              ; preds = %20
  %120 = load i32, i32* @x.6, align 4
  %121 = load i32, i32* @y.7, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 1994151954, i32 -1747017898
  br label %.backedge

129:                                              ; preds = %20
  %130 = load i32, i32* %7, align 4
  %131 = load i32, i32* @n, align 4
  %132 = icmp sle i32 %130, %131
  store i1 %132, i1* %4, align 1
  %133 = load i32, i32* @x.6, align 4
  %134 = load i32, i32* @y.7, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 -1945942647, i32 -1747017898
  br label %.backedge

142:                                              ; preds = %20
  %.0..0..0.53 = load volatile i1, i1* %4, align 1
  %143 = select i1 %.0..0..0.53, i32 1536619969, i32 -1041912207
  br label %.backedge

144:                                              ; preds = %20
  %145 = load i32, i32* @x.6, align 4
  %146 = load i32, i32* @y.7, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 357876313, i32 -334449680
  br label %.backedge

154:                                              ; preds = %20
  %155 = load i32, i32* %7, align 4
  %156 = load i32, i32* @m, align 4
  %157 = icmp sle i32 %155, %156
  store i1 %157, i1* %3, align 1
  %158 = load i32, i32* @x.6, align 4
  %159 = load i32, i32* @y.7, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 1409694264, i32 -334449680
  br label %.backedge

167:                                              ; preds = %20
  %.0..0..0.54 = load volatile i1, i1* %3, align 1
  br label %.backedge

168:                                              ; preds = %20
  %169 = select i1 %.059, i32 -1291133201, i32 701299504
  br label %.backedge

170:                                              ; preds = %20
  %171 = load i32, i32* @m, align 4
  %.neg82.neg = mul i32 %171, 3
  %172 = load i32, i32* @n, align 4
  %.neg83.neg = shl i32 %172, 1
  %173 = load i32, i32* %7, align 4
  %174 = add i32 %.neg83.neg, %.neg82.neg
  %175 = sub i32 %174, %173
  %176 = sdiv i32 %175, 2
  br label %.backedge

177:                                              ; preds = %20
  %178 = load i32, i32* @x.6, align 4
  %179 = load i32, i32* @y.7, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 -597700778, i32 -204206986
  br label %.backedge

187:                                              ; preds = %20
  store i32 1, i32* %8, align 4
  %188 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %7)
  %189 = load i32, i32* %188, align 4
  %190 = icmp sle i32 %.065, %189
  store i1 %190, i1* %2, align 1
  %191 = load i32, i32* @x.6, align 4
  %192 = load i32, i32* @y.7, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 1429342704, i32 -204206986
  br label %.backedge

200:                                              ; preds = %20
  %.0..0..0.55 = load volatile i1, i1* %2, align 1
  %201 = select i1 %.0..0..0.55, i32 -481837699, i32 -1586316994
  br label %.backedge

202:                                              ; preds = %20
  %203 = load i32, i32* @m, align 4
  %204 = mul nsw i32 %203, %.065
  %205 = load i32, i32* @n, align 4
  %206 = sub i32 %.067, %205
  %207 = icmp sle i32 %204, %206
  br label %.backedge

208:                                              ; preds = %20
  %209 = select i1 %.057, i32 1605950786, i32 -93545073
  br label %.backedge

210:                                              ; preds = %20
  %211 = load i32, i32* @x.6, align 4
  %212 = load i32, i32* @y.7, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 -592706545, i32 -330425755
  br label %.backedge

220:                                              ; preds = %20
  %221 = load i32, i32* @x.6, align 4
  %222 = load i32, i32* @y.7, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 -64781133, i32 -330425755
  br label %.backedge

230:                                              ; preds = %20
  br label %.backedge

231:                                              ; preds = %20
  %232 = load i32, i32* @x.6, align 4
  %233 = load i32, i32* @y.7, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 881228753, i32 90882065
  br label %.backedge

241:                                              ; preds = %20
  %242 = load i32, i32* @n, align 4
  %243 = add i32 %242, -1
  store i32 %243, i32* %9, align 4
  store i32 1, i32* %10, align 4
  %244 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10)
  %245 = load i32, i32* %244, align 4
  %246 = icmp sle i32 %.063, %245
  store i1 %246, i1* %1, align 1
  %247 = load i32, i32* @x.6, align 4
  %248 = load i32, i32* @y.7, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 576764870, i32 90882065
  br label %.backedge

256:                                              ; preds = %20
  %.0..0..0.56 = load volatile i1, i1* %1, align 1
  %257 = select i1 %.0..0..0.56, i32 737002001, i32 582168264
  br label %.backedge

258:                                              ; preds = %20
  %259 = load i32, i32* @m, align 4
  %260 = mul nsw i32 %259, %.065
  %261 = add i32 %259, 1
  %262 = mul nsw i32 %261, %.063
  %263 = add i32 %262, %260
  %264 = load i32, i32* @n, align 4
  %265 = sub i32 %.067, %264
  %266 = icmp sle i32 %263, %265
  br label %.backedge

267:                                              ; preds = %20
  %268 = select i1 %.0, i32 -1602794814, i32 1414103764
  br label %.backedge

269:                                              ; preds = %20
  %270 = load i32, i32* @x.6, align 4
  %271 = load i32, i32* @y.7, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 1734470784, i32 1509597793
  br label %.backedge

279:                                              ; preds = %20
  %280 = sext i32 %.069 to i64
  %281 = xor i32 %.063, %.065
  %282 = and i32 %281, 1
  %.not79 = icmp eq i32 %282, 0
  %283 = load i32, i32* @n, align 4
  %284 = load i32, i32* %7, align 4
  %285 = call i32 @_Z5binomii(i32 %283, i32 %284)
  %286 = sext i32 %285 to i64
  %287 = sub nsw i64 0, %286
  %288 = select i1 %.not79, i64 %286, i64 %287
  %289 = srem i64 %288, 998244353
  %290 = load i32, i32* %7, align 4
  %291 = call i32 @_Z5binomii(i32 %290, i32 %.065)
  %292 = sext i32 %291 to i64
  %293 = mul nsw i64 %289, %292
  %294 = srem i64 %293, 998244353
  %295 = load i32, i32* @n, align 4
  %296 = load i32, i32* %7, align 4
  %297 = sub i32 %295, %296
  %298 = call i32 @_Z5binomii(i32 %297, i32 %.063)
  %299 = sext i32 %298 to i64
  %300 = mul nsw i64 %294, %299
  %301 = srem i64 %300, 998244353
  %302 = load i32, i32* @m, align 4
  %303 = mul nsw i32 %302, %.065
  %.neg80 = xor i32 %302, -1
  %.neg81 = mul i32 %.063, %.neg80
  %304 = add i32 %.067, -1
  %305 = add i32 %304, %.neg81
  %306 = sub i32 %305, %303
  %307 = load i32, i32* @n, align 4
  %308 = add i32 %307, -1
  %309 = call i32 @_Z5binomii(i32 %306, i32 %308)
  %310 = sext i32 %309 to i64
  %311 = mul nsw i64 %301, %310
  %312 = add nsw i64 %311, %280
  %313 = srem i64 %312, 998244353
  %314 = trunc i64 %313 to i32
  %315 = load i32, i32* @x.6, align 4
  %316 = load i32, i32* @y.7, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 605142200, i32 1509597793
  br label %.backedge

324:                                              ; preds = %20
  br label %.backedge

325:                                              ; preds = %20
  %326 = load i32, i32* @x.6, align 4
  %327 = load i32, i32* @y.7, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 753714008, i32 1914753773
  br label %.backedge

335:                                              ; preds = %20
  %336 = add i32 %.063, 1
  %337 = load i32, i32* @x.6, align 4
  %338 = load i32, i32* @y.7, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 143139250, i32 1914753773
  br label %.backedge

346:                                              ; preds = %20
  br label %.backedge

347:                                              ; preds = %20
  %348 = load i32, i32* @x.6, align 4
  %349 = load i32, i32* @y.7, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 146760976, i32 97893053
  br label %.backedge

357:                                              ; preds = %20
  %358 = load i32, i32* @x.6, align 4
  %359 = load i32, i32* @y.7, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 -2093175107, i32 97893053
  br label %.backedge

367:                                              ; preds = %20
  br label %.backedge

368:                                              ; preds = %20
  %369 = add i32 %.065, 1
  br label %.backedge

370:                                              ; preds = %20
  br label %.backedge

371:                                              ; preds = %20
  %372 = load i32, i32* @x.6, align 4
  %373 = load i32, i32* @y.7, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 2131773875, i32 -623529574
  br label %.backedge

381:                                              ; preds = %20
  %382 = load i32, i32* %7, align 4
  %.neg78 = add i32 %382, 2
  store i32 %.neg78, i32* %7, align 4
  %383 = load i32, i32* @x.6, align 4
  %384 = load i32, i32* @y.7, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 1467531997, i32 -623529574
  br label %.backedge

392:                                              ; preds = %20
  br label %.backedge

393:                                              ; preds = %20
  %394 = add i32 %.069, 998244353
  %395 = srem i32 %394, 998244353
  %396 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %395)
  ret i32 0

397:                                              ; preds = %20
  br label %.backedge

398:                                              ; preds = %20
  br label %.backedge

399:                                              ; preds = %20
  %.neg77 = add i32 %.071, -1
  br label %.backedge

400:                                              ; preds = %20
  br label %.backedge

401:                                              ; preds = %20
  br label %.backedge

402:                                              ; preds = %20
  store i32 1, i32* %8, align 4
  %403 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %7)
  br label %.backedge

404:                                              ; preds = %20
  br label %.backedge

405:                                              ; preds = %20
  %406 = load i32, i32* @n, align 4
  %407 = add i32 %406, -1
  store i32 %407, i32* %9, align 4
  store i32 1, i32* %10, align 4
  %408 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10)
  br label %.backedge

409:                                              ; preds = %20
  %410 = sext i32 %.069 to i64
  %411 = xor i32 %.063, %.065
  %412 = and i32 %411, 1
  %.not = icmp eq i32 %412, 0
  %413 = load i32, i32* @n, align 4
  %414 = load i32, i32* %7, align 4
  %415 = call i32 @_Z5binomii(i32 %413, i32 %414)
  %416 = sext i32 %415 to i64
  %417 = sub nsw i64 0, %416
  %418 = select i1 %.not, i64 %416, i64 %417
  %419 = srem i64 %418, 998244353
  %420 = load i32, i32* %7, align 4
  %421 = call i32 @_Z5binomii(i32 %420, i32 %.065)
  %422 = sext i32 %421 to i64
  %423 = mul nsw i64 %419, %422
  %424 = srem i64 %423, 998244353
  %425 = load i32, i32* @n, align 4
  %426 = load i32, i32* %7, align 4
  %427 = sub i32 %425, %426
  %428 = call i32 @_Z5binomii(i32 %427, i32 %.063)
  %429 = sext i32 %428 to i64
  %430 = mul nsw i64 %424, %429
  %431 = srem i64 %430, 998244353
  %432 = load i32, i32* @m, align 4
  %433 = mul nsw i32 %432, %.065
  %.neg75.neg = xor i32 %432, -1
  %.neg76 = mul i32 %.063, %.neg75.neg
  %434 = add i32 %.067, -1
  %435 = add i32 %434, %.neg76
  %436 = sub i32 %435, %433
  %437 = load i32, i32* @n, align 4
  %438 = add i32 %437, -1
  %439 = call i32 @_Z5binomii(i32 %436, i32 %438)
  %440 = sext i32 %439 to i64
  %441 = mul nsw i64 %431, %440
  %442 = add nsw i64 %441, %410
  %443 = srem i64 %442, 998244353
  %444 = trunc i64 %443 to i32
  br label %.backedge

445:                                              ; preds = %20
  %446 = add i32 %.063, 1
  br label %.backedge

447:                                              ; preds = %20
  br label %.backedge

448:                                              ; preds = %20
  %449 = load i32, i32* %7, align 4
  %.neg = add i32 %449, 2
  store i32 %.neg, i32* %7, align 4
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #8 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.8, align 4
  %9 = load i32, i32* @y.9, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 1280855183, i32 -610779294
  %17 = select i1 %15, i32 1380564256, i32 -610779294
  %18 = select i1 %15, i32 1925830629, i32 -1653909102
  %19 = select i1 %15, i32 -1916974183, i32 -1653909102
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i32* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i32* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ 158230422, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 158230422, label %21
    i32 864246802, label %24
    i32 -1916974183, label %25
    i32 1925830629, label %26
    i32 642177642, label %27
    i32 314499909, label %28
    i32 1380564256, label %29
    i32 1280855183, label %30
    i32 -1653909102, label %31
    i32 -610779294, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i32* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i32* [ %.010, %20 ], [ %.010, %32 ], [ %1, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %0, %27 ], [ %.010, %26 ], [ %1, %25 ], [ %.010, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 1380564256, %32 ], [ -1916974183, %31 ], [ %16, %29 ], [ %17, %28 ], [ 314499909, %27 ], [ 314499909, %26 ], [ %18, %25 ], [ %19, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i32, i32* %5, align 4
  %.0..0..0.8 = load volatile i32, i32* %4, align 4
  %22 = icmp slt i32 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 864246802, i32 642177642
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i32* %.01013, i32** %3, align 8
  %.0..0..0.9 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s699693320.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.10, align 4
  %4 = load i32, i32* @y.11, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1521842648, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1521842648, label %11
    i32 885284537, label %14
    i32 474939300, label %24
    i32 1506165669, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 885284537, i32 1506165669
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.10, align 4
  %16 = load i32, i32* @y.11, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 474939300, i32 1506165669
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 885284537, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nosync nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
