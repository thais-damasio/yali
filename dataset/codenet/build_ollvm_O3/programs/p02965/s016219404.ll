; ModuleID = 'build_ollvm/programs/p02965/s016219404.ll'
source_filename = "Project_CodeNet_C++1400/p02965/s016219404.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@m = global i32 0, align 4
@fac = local_unnamed_addr global [2000005 x i32] zeroinitializer, align 16
@ifac = local_unnamed_addr global [2000005 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s016219404.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z4powMii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.2, align 4
  %10 = load i32, i32* @y.3, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 1916831908, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1916831908, label %17
    i32 1516607201, label %20
    i32 494077395, label %33
    i32 -1786498645, label %34
    i32 -178439094, label %37
    i32 69857090, label %41
    i32 861188228, label %51
    i32 2008248135, label %68
    i32 776298729, label %69
    i32 285158491, label %79
    i32 499492432, label %98
    i32 -763025438, label %99
    i32 1703672487, label %109
    i32 -2000720854, label %120
    i32 -2079756654, label %121
    i32 -320044913, label %122
    i32 414035361, label %130
    i32 -1426558412, label %140
  ]

.backedge:                                        ; preds = %16, %140, %130, %122, %121, %109, %99, %98, %79, %69, %68, %51, %41, %37, %34, %33, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ 1703672487, %140 ], [ 285158491, %130 ], [ 861188228, %122 ], [ 1516607201, %121 ], [ %119, %109 ], [ %108, %99 ], [ -1786498645, %98 ], [ %97, %79 ], [ %78, %69 ], [ 776298729, %68 ], [ %67, %51 ], [ %50, %41 ], [ %40, %37 ], [ %36, %34 ], [ -1786498645, %33 ], [ %32, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 1516607201, i32 -2079756654
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i32, align 4
  store i32* %21, i32** %6, align 8
  %22 = alloca i32, align 4
  store i32* %22, i32** %5, align 8
  %23 = alloca i32, align 4
  store i32* %23, i32** %4, align 8
  %.0..0..0.2 = load volatile i32*, i32** %6, align 8
  store i32 %0, i32* %.0..0..0.2, align 4
  %.0..0..0.11 = load volatile i32*, i32** %5, align 8
  store i32 %1, i32* %.0..0..0.11, align 4
  %.0..0..0.18 = load volatile i32*, i32** %4, align 8
  store i32 1, i32* %.0..0..0.18, align 4
  %24 = load i32, i32* @x.2, align 4
  %25 = load i32, i32* @y.3, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 494077395, i32 -2079756654
  br label %.backedge

33:                                               ; preds = %16
  br label %.backedge

34:                                               ; preds = %16
  %.0..0..0.12 = load volatile i32*, i32** %5, align 8
  %35 = load i32, i32* %.0..0..0.12, align 4
  %.not26 = icmp eq i32 %35, 0
  %36 = select i1 %.not26, i32 -763025438, i32 -178439094
  br label %.backedge

37:                                               ; preds = %16
  %.0..0..0.13 = load volatile i32*, i32** %5, align 8
  %38 = load i32, i32* %.0..0..0.13, align 4
  %39 = and i32 %38, 1
  %.not = icmp eq i32 %39, 0
  %40 = select i1 %.not, i32 776298729, i32 69857090
  br label %.backedge

41:                                               ; preds = %16
  %42 = load i32, i32* @x.2, align 4
  %43 = load i32, i32* @y.3, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 861188228, i32 -320044913
  br label %.backedge

51:                                               ; preds = %16
  %.0..0..0.19 = load volatile i32*, i32** %4, align 8
  %52 = load i32, i32* %.0..0..0.19, align 4
  %53 = sext i32 %52 to i64
  %.0..0..0.3 = load volatile i32*, i32** %6, align 8
  %54 = load i32, i32* %.0..0..0.3, align 4
  %55 = sext i32 %54 to i64
  %56 = mul nsw i64 %55, %53
  %57 = srem i64 %56, 998244353
  %58 = trunc i64 %57 to i32
  %.0..0..0.20 = load volatile i32*, i32** %4, align 8
  store i32 %58, i32* %.0..0..0.20, align 4
  %59 = load i32, i32* @x.2, align 4
  %60 = load i32, i32* @y.3, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 2008248135, i32 -320044913
  br label %.backedge

68:                                               ; preds = %16
  br label %.backedge

69:                                               ; preds = %16
  %70 = load i32, i32* @x.2, align 4
  %71 = load i32, i32* @y.3, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 285158491, i32 414035361
  br label %.backedge

79:                                               ; preds = %16
  %.0..0..0.14 = load volatile i32*, i32** %5, align 8
  %80 = load i32, i32* %.0..0..0.14, align 4
  %81 = ashr i32 %80, 1
  %.0..0..0.15 = load volatile i32*, i32** %5, align 8
  store i32 %81, i32* %.0..0..0.15, align 4
  %.0..0..0.4 = load volatile i32*, i32** %6, align 8
  %82 = load i32, i32* %.0..0..0.4, align 4
  %83 = sext i32 %82 to i64
  %.0..0..0.5 = load volatile i32*, i32** %6, align 8
  %84 = load i32, i32* %.0..0..0.5, align 4
  %85 = sext i32 %84 to i64
  %86 = mul nsw i64 %85, %83
  %87 = srem i64 %86, 998244353
  %88 = trunc i64 %87 to i32
  %.0..0..0.6 = load volatile i32*, i32** %6, align 8
  store i32 %88, i32* %.0..0..0.6, align 4
  %89 = load i32, i32* @x.2, align 4
  %90 = load i32, i32* @y.3, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 499492432, i32 414035361
  br label %.backedge

98:                                               ; preds = %16
  br label %.backedge

99:                                               ; preds = %16
  %100 = load i32, i32* @x.2, align 4
  %101 = load i32, i32* @y.3, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 1703672487, i32 -1426558412
  br label %.backedge

109:                                              ; preds = %16
  %.0..0..0.21 = load volatile i32*, i32** %4, align 8
  %110 = load i32, i32* %.0..0..0.21, align 4
  store i32 %110, i32* %3, align 4
  %111 = load i32, i32* @x.2, align 4
  %112 = load i32, i32* @y.3, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -2000720854, i32 -1426558412
  br label %.backedge

120:                                              ; preds = %16
  %.0..0..0.25 = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.25

121:                                              ; preds = %16
  br label %.backedge

122:                                              ; preds = %16
  %.0..0..0.22 = load volatile i32*, i32** %4, align 8
  %123 = load i32, i32* %.0..0..0.22, align 4
  %124 = sext i32 %123 to i64
  %.0..0..0.7 = load volatile i32*, i32** %6, align 8
  %125 = load i32, i32* %.0..0..0.7, align 4
  %126 = sext i32 %125 to i64
  %127 = mul nsw i64 %126, %124
  %128 = srem i64 %127, 998244353
  %129 = trunc i64 %128 to i32
  %.0..0..0.23 = load volatile i32*, i32** %4, align 8
  store i32 %129, i32* %.0..0..0.23, align 4
  br label %.backedge

130:                                              ; preds = %16
  %.0..0..0.16 = load volatile i32*, i32** %5, align 8
  %131 = load i32, i32* %.0..0..0.16, align 4
  %132 = ashr i32 %131, 1
  %.0..0..0.17 = load volatile i32*, i32** %5, align 8
  store i32 %132, i32* %.0..0..0.17, align 4
  %.0..0..0.8 = load volatile i32*, i32** %6, align 8
  %133 = load i32, i32* %.0..0..0.8, align 4
  %134 = sext i32 %133 to i64
  %.0..0..0.9 = load volatile i32*, i32** %6, align 8
  %135 = load i32, i32* %.0..0..0.9, align 4
  %136 = sext i32 %135 to i64
  %137 = mul nsw i64 %136, %134
  %138 = srem i64 %137, 998244353
  %139 = trunc i64 %138 to i32
  %.0..0..0.10 = load volatile i32*, i32** %6, align 8
  store i32 %139, i32* %.0..0..0.10, align 4
  br label %.backedge

140:                                              ; preds = %16
  %.0..0..0.24 = load volatile i32*, i32** %4, align 8
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z1Cii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.4, align 4
  %11 = load i32, i32* @y.5, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 1183910080, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1183910080, label %18
    i32 364104310, label %21
    i32 1931210209, label %37
    i32 -2098716916, label %39
    i32 316783321, label %49
    i32 1759971003, label %59
    i32 958239892, label %60
    i32 -1703978268, label %70
    i32 -1861383715, label %82
    i32 -1621837026, label %84
    i32 1204631898, label %85
    i32 65645894, label %95
    i32 1893053333, label %127
    i32 201149467, label %128
    i32 32727714, label %130
    i32 1108528326, label %131
    i32 -1317006460, label %132
    i32 629053829, label %133
  ]

.backedge:                                        ; preds = %17, %133, %132, %131, %130, %127, %95, %85, %84, %82, %70, %60, %59, %49, %39, %37, %21, %18
  %.0.be = phi i32 [ %.0, %17 ], [ 65645894, %133 ], [ -1703978268, %132 ], [ 316783321, %131 ], [ 364104310, %130 ], [ 201149467, %127 ], [ %126, %95 ], [ %94, %85 ], [ 201149467, %84 ], [ %83, %82 ], [ %81, %70 ], [ %69, %60 ], [ 201149467, %59 ], [ %58, %49 ], [ %48, %39 ], [ %38, %37 ], [ %36, %21 ], [ %20, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %.0..0..0.1 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0., %.0..0..0.1
  %20 = select i1 %19, i32 364104310, i32 32727714
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i32, align 4
  store i32* %22, i32** %7, align 8
  %23 = alloca i32, align 4
  store i32* %23, i32** %6, align 8
  %24 = alloca i32, align 4
  store i32* %24, i32** %5, align 8
  %.0..0..0.8 = load volatile i32*, i32** %6, align 8
  store i32 %0, i32* %.0..0..0.8, align 4
  %.0..0..0.14 = load volatile i32*, i32** %5, align 8
  store i32 %1, i32* %.0..0..0.14, align 4
  %.0..0..0.9 = load volatile i32*, i32** %6, align 8
  %25 = load i32, i32* %.0..0..0.9, align 4
  %.0..0..0.15 = load volatile i32*, i32** %5, align 8
  %26 = load i32, i32* %.0..0..0.15, align 4
  %27 = icmp slt i32 %25, %26
  store i1 %27, i1* %4, align 1
  %28 = load i32, i32* @x.4, align 4
  %29 = load i32, i32* @y.5, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 1931210209, i32 32727714
  br label %.backedge

37:                                               ; preds = %17
  %.0..0..0.22 = load volatile i1, i1* %4, align 1
  %38 = select i1 %.0..0..0.22, i32 -2098716916, i32 958239892
  br label %.backedge

39:                                               ; preds = %17
  %40 = load i32, i32* @x.4, align 4
  %41 = load i32, i32* @y.5, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 316783321, i32 1108528326
  br label %.backedge

49:                                               ; preds = %17
  %.0..0..0.2 = load volatile i32*, i32** %7, align 8
  store i32 0, i32* %.0..0..0.2, align 4
  %50 = load i32, i32* @x.4, align 4
  %51 = load i32, i32* @y.5, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 1759971003, i32 1108528326
  br label %.backedge

59:                                               ; preds = %17
  br label %.backedge

60:                                               ; preds = %17
  %61 = load i32, i32* @x.4, align 4
  %62 = load i32, i32* @y.5, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 -1703978268, i32 -1317006460
  br label %.backedge

70:                                               ; preds = %17
  %.0..0..0.16 = load volatile i32*, i32** %5, align 8
  %71 = load i32, i32* %.0..0..0.16, align 4
  %72 = icmp ne i32 %71, 0
  store i1 %72, i1* %3, align 1
  %73 = load i32, i32* @x.4, align 4
  %74 = load i32, i32* @y.5, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -1861383715, i32 -1317006460
  br label %.backedge

82:                                               ; preds = %17
  %.0..0..0.23 = load volatile i1, i1* %3, align 1
  %83 = select i1 %.0..0..0.23, i32 1204631898, i32 -1621837026
  br label %.backedge

84:                                               ; preds = %17
  %.0..0..0.3 = load volatile i32*, i32** %7, align 8
  store i32 1, i32* %.0..0..0.3, align 4
  br label %.backedge

85:                                               ; preds = %17
  %86 = load i32, i32* @x.4, align 4
  %87 = load i32, i32* @y.5, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 65645894, i32 629053829
  br label %.backedge

95:                                               ; preds = %17
  %.0..0..0.10 = load volatile i32*, i32** %6, align 8
  %96 = load i32, i32* %.0..0..0.10, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @fac, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %99 to i64
  %.0..0..0.17 = load volatile i32*, i32** %5, align 8
  %101 = load i32, i32* %.0..0..0.17, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @ifac, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %105, %100
  %107 = srem i64 %106, 998244353
  %.0..0..0.11 = load volatile i32*, i32** %6, align 8
  %108 = load i32, i32* %.0..0..0.11, align 4
  %.0..0..0.18 = load volatile i32*, i32** %5, align 8
  %109 = load i32, i32* %.0..0..0.18, align 4
  %110 = sub i32 %108, %109
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @ifac, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = sext i32 %113 to i64
  %115 = mul nsw i64 %107, %114
  %116 = srem i64 %115, 998244353
  %117 = trunc i64 %116 to i32
  %.0..0..0.4 = load volatile i32*, i32** %7, align 8
  store i32 %117, i32* %.0..0..0.4, align 4
  %118 = load i32, i32* @x.4, align 4
  %119 = load i32, i32* @y.5, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 1893053333, i32 629053829
  br label %.backedge

127:                                              ; preds = %17
  br label %.backedge

128:                                              ; preds = %17
  %.0..0..0.5 = load volatile i32*, i32** %7, align 8
  %129 = load i32, i32* %.0..0..0.5, align 4
  ret i32 %129

130:                                              ; preds = %17
  br label %.backedge

131:                                              ; preds = %17
  %.0..0..0.6 = load volatile i32*, i32** %7, align 8
  store i32 0, i32* %.0..0..0.6, align 4
  br label %.backedge

132:                                              ; preds = %17
  %.0..0..0.19 = load volatile i32*, i32** %5, align 8
  br label %.backedge

133:                                              ; preds = %17
  %.0..0..0.12 = load volatile i32*, i32** %6, align 8
  %134 = load i32, i32* %.0..0..0.12, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @fac, i64 0, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %.0..0..0.20 = load volatile i32*, i32** %5, align 8
  %139 = load i32, i32* %.0..0..0.20, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @ifac, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = sext i32 %142 to i64
  %144 = mul nsw i64 %143, %138
  %145 = srem i64 %144, 998244353
  %.0..0..0.13 = load volatile i32*, i32** %6, align 8
  %146 = load i32, i32* %.0..0..0.13, align 4
  %.0..0..0.21 = load volatile i32*, i32** %5, align 8
  %147 = load i32, i32* %.0..0..0.21, align 4
  %148 = sub i32 %146, %147
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @ifac, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %145, %152
  %154 = srem i64 %153, 998244353
  %155 = trunc i64 %154 to i32
  %.0..0..0.7 = load volatile i32*, i32** %7, align 8
  store i32 %155, i32* %.0..0..0.7, align 4
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull @m)
  store i32 1, i32* getelementptr inbounds ([2000005 x i32], [2000005 x i32]* @fac, i64 0, i64 0), align 16
  br label %5

5:                                                ; preds = %.backedge, %0
  %.075 = phi i32 [ 1, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ 1031543867, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i1 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.063, label %.backedge [
    i32 1031543867, label %6
    i32 771228261, label %9
    i32 -1003507323, label %19
    i32 -2011708089, label %39
    i32 639163809, label %40
    i32 632100917, label %50
    i32 -812505415, label %60
    i32 1105964148, label %61
    i32 -956614722, label %64
    i32 -243026672, label %67
    i32 -1273691491, label %77
    i32 -1791175305, label %97
    i32 1471952659, label %98
    i32 262760576, label %108
    i32 385442035, label %119
    i32 -155488307, label %120
    i32 672580276, label %122
    i32 -509748448, label %125
    i32 -319142110, label %135
    i32 1433425904, label %149
    i32 1342824800, label %151
    i32 -1778816834, label %161
    i32 2054320300, label %171
    i32 1306666420, label %172
    i32 -710843316, label %176
    i32 1209523625, label %186
    i32 1957418198, label %196
    i32 -532145878, label %197
    i32 -348485960, label %198
    i32 -1322674442, label %208
    i32 -1639140895, label %219
    i32 246702406, label %221
    i32 1830833538, label %231
    i32 51139670, label %244
    i32 1861032804, label %245
    i32 -1834297648, label %247
    i32 -1542836716, label %248
    i32 -1265275704, label %251
    i32 -1026898971, label %253
    i32 -985131827, label %255
    i32 1011073102, label %261
    i32 1816875269, label %271
    i32 -37969755, label %281
    i32 1722387930, label %282
    i32 -428290721, label %312
    i32 -636653219, label %319
    i32 -950674283, label %329
    i32 -1081869849, label %341
    i32 -1057830908, label %342
    i32 1232764185, label %343
    i32 1428453815, label %353
    i32 365588344, label %363
    i32 -1679460169, label %364
    i32 -245624002, label %365
    i32 1695969868, label %367
    i32 549346080, label %369
    i32 56395735, label %371
    i32 858674220, label %373
    i32 956820881, label %384
    i32 121413287, label %386
    i32 -1197489331, label %397
    i32 1928193998, label %398
    i32 1191196800, label %399
    i32 -1618217491, label %400
    i32 1520239419, label %401
    i32 2022622859, label %402
    i32 -220749250, label %403
    i32 -726258933, label %404
    i32 218740811, label %407
  ]

.backedge:                                        ; preds = %5, %407, %404, %403, %402, %401, %400, %399, %398, %397, %386, %384, %373, %369, %367, %365, %364, %363, %353, %343, %342, %341, %329, %319, %312, %282, %281, %271, %261, %255, %253, %251, %248, %247, %245, %244, %231, %221, %219, %208, %198, %197, %196, %186, %176, %172, %171, %161, %151, %149, %135, %125, %122, %120, %119, %108, %98, %97, %77, %67, %64, %61, %60, %50, %40, %39, %19, %9, %6
  %.075.be = phi i32 [ %.075, %5 ], [ %.075, %407 ], [ %.075, %404 ], [ %.075, %403 ], [ %.075, %402 ], [ %.075, %401 ], [ %.075, %400 ], [ %.075, %399 ], [ %.075, %398 ], [ %.neg, %397 ], [ %.075, %386 ], [ %385, %384 ], [ %.075, %373 ], [ %370, %369 ], [ %.075, %367 ], [ %.075, %365 ], [ %.075, %364 ], [ %.075, %363 ], [ %.075, %353 ], [ %.075, %343 ], [ %.075, %342 ], [ %.075, %341 ], [ %.075, %329 ], [ %.075, %319 ], [ %.075, %312 ], [ %.075, %282 ], [ %.075, %281 ], [ %.075, %271 ], [ %.075, %261 ], [ %.075, %255 ], [ %.075, %253 ], [ %.075, %251 ], [ %.075, %248 ], [ %.075, %247 ], [ %.075, %245 ], [ %.075, %244 ], [ %.075, %231 ], [ %.075, %221 ], [ %.075, %219 ], [ %.075, %208 ], [ %.075, %198 ], [ %.075, %197 ], [ %.075, %196 ], [ %.075, %186 ], [ %.075, %176 ], [ %.075, %172 ], [ %.075, %171 ], [ %.075, %161 ], [ %.075, %151 ], [ %.075, %149 ], [ %.075, %135 ], [ %.075, %125 ], [ %.075, %122 ], [ %121, %120 ], [ %.075, %119 ], [ %109, %108 ], [ %.075, %98 ], [ %.075, %97 ], [ %.075, %77 ], [ %.075, %67 ], [ %.075, %64 ], [ 2000000, %61 ], [ %.075, %60 ], [ %.neg85, %50 ], [ %.075, %40 ], [ %.075, %39 ], [ %.075, %19 ], [ %.075, %9 ], [ %.075, %6 ]
  %.073.be = phi i32 [ %.073, %5 ], [ %.073, %407 ], [ %.073, %404 ], [ %.073, %403 ], [ %.073, %402 ], [ %.073, %401 ], [ %.073, %400 ], [ %.073, %399 ], [ %.073, %398 ], [ %.073, %397 ], [ %.073, %386 ], [ %.073, %384 ], [ %.073, %373 ], [ %.073, %369 ], [ %.073, %367 ], [ %366, %365 ], [ %.073, %364 ], [ %.073, %363 ], [ %.073, %353 ], [ %.073, %343 ], [ %.073, %342 ], [ %.073, %341 ], [ %.073, %329 ], [ %.073, %319 ], [ %.073, %312 ], [ %.073, %282 ], [ %.073, %281 ], [ %.073, %271 ], [ %.073, %261 ], [ %.073, %255 ], [ %.073, %253 ], [ %.073, %251 ], [ %.073, %248 ], [ %.073, %247 ], [ %.073, %245 ], [ %.073, %244 ], [ %.073, %231 ], [ %.073, %221 ], [ %.073, %219 ], [ %.073, %208 ], [ %.073, %198 ], [ 0, %197 ], [ %.073, %196 ], [ %.073, %186 ], [ %.073, %176 ], [ %.073, %172 ], [ %.073, %171 ], [ %.073, %161 ], [ %.073, %151 ], [ %.073, %149 ], [ %.073, %135 ], [ %.073, %125 ], [ %.073, %122 ], [ %.073, %120 ], [ %.073, %119 ], [ %.073, %108 ], [ %.073, %98 ], [ %.073, %97 ], [ %.073, %77 ], [ %.073, %67 ], [ %.073, %64 ], [ %.073, %61 ], [ %.073, %60 ], [ %.073, %50 ], [ %.073, %40 ], [ %.073, %39 ], [ %.073, %19 ], [ %.073, %9 ], [ %.073, %6 ]
  %.071.be = phi i32 [ %.071, %5 ], [ %408, %407 ], [ %.071, %404 ], [ %.071, %403 ], [ %.071, %402 ], [ %.071, %401 ], [ %.071, %400 ], [ %.071, %399 ], [ %.071, %398 ], [ %.071, %397 ], [ %.071, %386 ], [ %.071, %384 ], [ %.071, %373 ], [ %.071, %369 ], [ %.071, %367 ], [ %.071, %365 ], [ %.071, %364 ], [ %.071, %363 ], [ %.neg77, %353 ], [ %.071, %343 ], [ %.071, %342 ], [ %.071, %341 ], [ %.071, %329 ], [ %.071, %319 ], [ %.071, %312 ], [ %.071, %282 ], [ %.071, %281 ], [ %.071, %271 ], [ %.071, %261 ], [ %.071, %255 ], [ %.071, %253 ], [ %.071, %251 ], [ %.071, %248 ], [ 0, %247 ], [ %.071, %245 ], [ %.071, %244 ], [ %.071, %231 ], [ %.071, %221 ], [ %.071, %219 ], [ %.071, %208 ], [ %.071, %198 ], [ %.071, %197 ], [ %.071, %196 ], [ %.071, %186 ], [ %.071, %176 ], [ %.071, %172 ], [ %.071, %171 ], [ %.071, %161 ], [ %.071, %151 ], [ %.071, %149 ], [ %.071, %135 ], [ %.071, %125 ], [ %.071, %122 ], [ %.071, %120 ], [ %.071, %119 ], [ %.071, %108 ], [ %.071, %98 ], [ %.071, %97 ], [ %.071, %77 ], [ %.071, %67 ], [ %.071, %64 ], [ %.071, %61 ], [ %.071, %60 ], [ %.071, %50 ], [ %.071, %40 ], [ %.071, %39 ], [ %.071, %19 ], [ %.071, %9 ], [ %.071, %6 ]
  %.069.be = phi i32 [ %.069, %5 ], [ %.069, %407 ], [ %406, %404 ], [ %.069, %403 ], [ %.069, %402 ], [ %.069, %401 ], [ %.069, %400 ], [ %.069, %399 ], [ %.069, %398 ], [ %.069, %397 ], [ %.069, %386 ], [ %.069, %384 ], [ %.069, %373 ], [ %.069, %369 ], [ %368, %367 ], [ %.069, %365 ], [ %.069, %364 ], [ %.069, %363 ], [ %.069, %353 ], [ %.069, %343 ], [ %.069, %342 ], [ %.069, %341 ], [ %331, %329 ], [ %.069, %319 ], [ %318, %312 ], [ %.069, %282 ], [ %.069, %281 ], [ %.069, %271 ], [ %.069, %261 ], [ %.069, %255 ], [ %.069, %253 ], [ %.069, %251 ], [ %.069, %248 ], [ %.069, %247 ], [ %.069, %245 ], [ %.069, %244 ], [ %.069, %231 ], [ %.069, %221 ], [ %.069, %219 ], [ %.069, %208 ], [ %.069, %198 ], [ %.069, %197 ], [ %.069, %196 ], [ %.069, %186 ], [ %.069, %176 ], [ %.069, %172 ], [ %.069, %171 ], [ %.069, %161 ], [ %.069, %151 ], [ %.069, %149 ], [ %.069, %135 ], [ %.069, %125 ], [ %.069, %122 ], [ 0, %120 ], [ %.069, %119 ], [ %.069, %108 ], [ %.069, %98 ], [ %.069, %97 ], [ %.069, %77 ], [ %.069, %67 ], [ %.069, %64 ], [ %.069, %61 ], [ %.069, %60 ], [ %.069, %50 ], [ %.069, %40 ], [ %.069, %39 ], [ %.069, %19 ], [ %.069, %9 ], [ %.069, %6 ]
  %.067.be = phi i32 [ %.067, %5 ], [ %.067, %407 ], [ %.067, %404 ], [ %.067, %403 ], [ %.067, %402 ], [ %.067, %401 ], [ %.067, %400 ], [ %.067, %399 ], [ %.067, %398 ], [ %.067, %397 ], [ %.067, %386 ], [ %.067, %384 ], [ %.067, %373 ], [ %.067, %369 ], [ %.067, %367 ], [ %.067, %365 ], [ %.067, %364 ], [ %.067, %363 ], [ %.067, %353 ], [ %.067, %343 ], [ %.067, %342 ], [ %.067, %341 ], [ %.067, %329 ], [ %.067, %319 ], [ %.067, %312 ], [ %.067, %282 ], [ %.067, %281 ], [ %.067, %271 ], [ %.067, %261 ], [ %257, %255 ], [ %.067, %253 ], [ %.067, %251 ], [ %.067, %248 ], [ %.067, %247 ], [ %.067, %245 ], [ %.067, %244 ], [ %.067, %231 ], [ %.067, %221 ], [ %.067, %219 ], [ %.067, %208 ], [ %.067, %198 ], [ %.067, %197 ], [ %.067, %196 ], [ %.067, %186 ], [ %.067, %176 ], [ %.067, %172 ], [ %.067, %171 ], [ %.067, %161 ], [ %.067, %151 ], [ %.067, %149 ], [ %.067, %135 ], [ %.067, %125 ], [ %.067, %122 ], [ %.067, %120 ], [ %.067, %119 ], [ %.067, %108 ], [ %.067, %98 ], [ %.067, %97 ], [ %.067, %77 ], [ %.067, %67 ], [ %.067, %64 ], [ %.067, %61 ], [ %.067, %60 ], [ %.067, %50 ], [ %.067, %40 ], [ %.067, %39 ], [ %.067, %19 ], [ %.067, %9 ], [ %.067, %6 ]
  %.065.be = phi i32 [ %.065, %5 ], [ %.065, %407 ], [ %.065, %404 ], [ %.065, %403 ], [ %.065, %402 ], [ %.065, %401 ], [ %.065, %400 ], [ %.065, %399 ], [ %.065, %398 ], [ %.065, %397 ], [ %.065, %386 ], [ %.065, %384 ], [ %.065, %373 ], [ %.065, %369 ], [ %.065, %367 ], [ %.065, %365 ], [ %.065, %364 ], [ %.065, %363 ], [ %.065, %353 ], [ %.065, %343 ], [ %.065, %342 ], [ %.065, %341 ], [ %.065, %329 ], [ %.065, %319 ], [ %.065, %312 ], [ %308, %282 ], [ %.065, %281 ], [ %.065, %271 ], [ %.065, %261 ], [ %.065, %255 ], [ %.065, %253 ], [ %.065, %251 ], [ %.065, %248 ], [ %.065, %247 ], [ %.065, %245 ], [ %.065, %244 ], [ %.065, %231 ], [ %.065, %221 ], [ %.065, %219 ], [ %.065, %208 ], [ %.065, %198 ], [ %.065, %197 ], [ %.065, %196 ], [ %.065, %186 ], [ %.065, %176 ], [ %.065, %172 ], [ %.065, %171 ], [ %.065, %161 ], [ %.065, %151 ], [ %.065, %149 ], [ %.065, %135 ], [ %.065, %125 ], [ %.065, %122 ], [ %.065, %120 ], [ %.065, %119 ], [ %.065, %108 ], [ %.065, %98 ], [ %.065, %97 ], [ %.065, %77 ], [ %.065, %67 ], [ %.065, %64 ], [ %.065, %61 ], [ %.065, %60 ], [ %.065, %50 ], [ %.065, %40 ], [ %.065, %39 ], [ %.065, %19 ], [ %.065, %9 ], [ %.065, %6 ]
  %.063.be = phi i32 [ %.063, %5 ], [ 1428453815, %407 ], [ -950674283, %404 ], [ 1816875269, %403 ], [ 1830833538, %402 ], [ -1322674442, %401 ], [ 1209523625, %400 ], [ -1778816834, %399 ], [ -319142110, %398 ], [ 262760576, %397 ], [ -1273691491, %386 ], [ 632100917, %384 ], [ -1003507323, %373 ], [ 672580276, %369 ], [ 549346080, %367 ], [ -348485960, %365 ], [ -245624002, %364 ], [ -1542836716, %363 ], [ %362, %353 ], [ %352, %343 ], [ 1232764185, %342 ], [ -1057830908, %341 ], [ %340, %329 ], [ %328, %319 ], [ -1057830908, %312 ], [ %311, %282 ], [ 1232764185, %281 ], [ %280, %271 ], [ %270, %261 ], [ %260, %255 ], [ %254, %253 ], [ -1026898971, %251 ], [ %250, %248 ], [ -1542836716, %247 ], [ %246, %245 ], [ 1861032804, %244 ], [ %243, %231 ], [ %230, %221 ], [ %220, %219 ], [ %218, %208 ], [ %207, %198 ], [ -348485960, %197 ], [ 549346080, %196 ], [ %195, %186 ], [ %185, %176 ], [ %175, %172 ], [ 549346080, %171 ], [ %170, %161 ], [ %160, %151 ], [ %150, %149 ], [ %148, %135 ], [ %134, %125 ], [ %124, %122 ], [ 672580276, %120 ], [ -956614722, %119 ], [ %118, %108 ], [ %107, %98 ], [ 1471952659, %97 ], [ %96, %77 ], [ %76, %67 ], [ %66, %64 ], [ -956614722, %61 ], [ 1031543867, %60 ], [ %59, %50 ], [ %49, %40 ], [ 639163809, %39 ], [ %38, %19 ], [ %18, %9 ], [ %8, %6 ]
  %.061.be = phi i1 [ %.061, %5 ], [ %.061, %407 ], [ %.061, %404 ], [ %.061, %403 ], [ %.061, %402 ], [ %.061, %401 ], [ %.061, %400 ], [ %.061, %399 ], [ %.061, %398 ], [ %.061, %397 ], [ %.061, %386 ], [ %.061, %384 ], [ %.061, %373 ], [ %.061, %369 ], [ %.061, %367 ], [ %.061, %365 ], [ %.061, %364 ], [ %.061, %363 ], [ %.061, %353 ], [ %.061, %343 ], [ %.061, %342 ], [ %.061, %341 ], [ %.061, %329 ], [ %.061, %319 ], [ %.061, %312 ], [ %.061, %282 ], [ %.061, %281 ], [ %.061, %271 ], [ %.061, %261 ], [ %.061, %255 ], [ %.061, %253 ], [ %.061, %251 ], [ %.061, %248 ], [ %.061, %247 ], [ %.061, %245 ], [ %.0..0..0.60, %244 ], [ %.061, %231 ], [ %.061, %221 ], [ false, %219 ], [ %.061, %208 ], [ %.061, %198 ], [ %.061, %197 ], [ %.061, %196 ], [ %.061, %186 ], [ %.061, %176 ], [ %.061, %172 ], [ %.061, %171 ], [ %.061, %161 ], [ %.061, %151 ], [ %.061, %149 ], [ %.061, %135 ], [ %.061, %125 ], [ %.061, %122 ], [ %.061, %120 ], [ %.061, %119 ], [ %.061, %108 ], [ %.061, %98 ], [ %.061, %97 ], [ %.061, %77 ], [ %.061, %67 ], [ %.061, %64 ], [ %.061, %61 ], [ %.061, %60 ], [ %.061, %50 ], [ %.061, %40 ], [ %.061, %39 ], [ %.061, %19 ], [ %.061, %9 ], [ %.061, %6 ]
  %.0.be = phi i1 [ %.0, %5 ], [ %.0, %407 ], [ %.0, %404 ], [ %.0, %403 ], [ %.0, %402 ], [ %.0, %401 ], [ %.0, %400 ], [ %.0, %399 ], [ %.0, %398 ], [ %.0, %397 ], [ %.0, %386 ], [ %.0, %384 ], [ %.0, %373 ], [ %.0, %369 ], [ %.0, %367 ], [ %.0, %365 ], [ %.0, %364 ], [ %.0, %363 ], [ %.0, %353 ], [ %.0, %343 ], [ %.0, %342 ], [ %.0, %341 ], [ %.0, %329 ], [ %.0, %319 ], [ %.0, %312 ], [ %.0, %282 ], [ %.0, %281 ], [ %.0, %271 ], [ %.0, %261 ], [ %.0, %255 ], [ %.0, %253 ], [ %252, %251 ], [ false, %248 ], [ %.0, %247 ], [ %.0, %245 ], [ %.0, %244 ], [ %.0, %231 ], [ %.0, %221 ], [ %.0, %219 ], [ %.0, %208 ], [ %.0, %198 ], [ %.0, %197 ], [ %.0, %196 ], [ %.0, %186 ], [ %.0, %176 ], [ %.0, %172 ], [ %.0, %171 ], [ %.0, %161 ], [ %.0, %151 ], [ %.0, %149 ], [ %.0, %135 ], [ %.0, %125 ], [ %.0, %122 ], [ %.0, %120 ], [ %.0, %119 ], [ %.0, %108 ], [ %.0, %98 ], [ %.0, %97 ], [ %.0, %77 ], [ %.0, %67 ], [ %.0, %64 ], [ %.0, %61 ], [ %.0, %60 ], [ %.0, %50 ], [ %.0, %40 ], [ %.0, %39 ], [ %.0, %19 ], [ %.0, %9 ], [ %.0, %6 ]
  br label %5

6:                                                ; preds = %5
  %7 = icmp slt i32 %.075, 2000002
  %8 = select i1 %7, i32 771228261, i32 1105964148
  br label %.backedge

9:                                                ; preds = %5
  %10 = load i32, i32* @x.6, align 4
  %11 = load i32, i32* @y.7, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %16, %15
  %18 = select i1 %17, i32 -1003507323, i32 858674220
  br label %.backedge

19:                                               ; preds = %5
  %20 = add i32 %.075, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @fac, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sext i32 %.075 to i64
  %26 = mul nsw i64 %24, %25
  %27 = srem i64 %26, 998244353
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @fac, i64 0, i64 %25
  store i32 %28, i32* %29, align 4
  %30 = load i32, i32* @x.6, align 4
  %31 = load i32, i32* @y.7, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -2011708089, i32 858674220
  br label %.backedge

39:                                               ; preds = %5
  br label %.backedge

40:                                               ; preds = %5
  %41 = load i32, i32* @x.6, align 4
  %42 = load i32, i32* @y.7, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 632100917, i32 956820881
  br label %.backedge

50:                                               ; preds = %5
  %.neg85 = add i32 %.075, 1
  %51 = load i32, i32* @x.6, align 4
  %52 = load i32, i32* @y.7, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 -812505415, i32 956820881
  br label %.backedge

60:                                               ; preds = %5
  br label %.backedge

61:                                               ; preds = %5
  %62 = load i32, i32* getelementptr inbounds ([2000005 x i32], [2000005 x i32]* @fac, i64 0, i64 2000001), align 4
  %63 = tail call i32 @_Z4powMii(i32 %62, i32 998244351)
  store i32 %63, i32* getelementptr inbounds ([2000005 x i32], [2000005 x i32]* @ifac, i64 0, i64 2000001), align 4
  br label %.backedge

64:                                               ; preds = %5
  %65 = icmp sgt i32 %.075, -1
  %66 = select i1 %65, i32 -243026672, i32 -155488307
  br label %.backedge

67:                                               ; preds = %5
  %68 = load i32, i32* @x.6, align 4
  %69 = load i32, i32* @y.7, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 -1273691491, i32 121413287
  br label %.backedge

77:                                               ; preds = %5
  %78 = add i32 %.075, 1
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @ifac, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %81 to i64
  %83 = mul nsw i64 %82, %79
  %84 = srem i64 %83, 998244353
  %85 = trunc i64 %84 to i32
  %86 = sext i32 %.075 to i64
  %87 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @ifac, i64 0, i64 %86
  store i32 %85, i32* %87, align 4
  %88 = load i32, i32* @x.6, align 4
  %89 = load i32, i32* @y.7, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -1791175305, i32 121413287
  br label %.backedge

97:                                               ; preds = %5
  br label %.backedge

98:                                               ; preds = %5
  %99 = load i32, i32* @x.6, align 4
  %100 = load i32, i32* @y.7, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 262760576, i32 -1197489331
  br label %.backedge

108:                                              ; preds = %5
  %109 = add i32 %.075, -1
  %110 = load i32, i32* @x.6, align 4
  %111 = load i32, i32* @y.7, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 385442035, i32 -1197489331
  br label %.backedge

119:                                              ; preds = %5
  br label %.backedge

120:                                              ; preds = %5
  %121 = load i32, i32* @n, align 4
  br label %.backedge

122:                                              ; preds = %5
  %123 = icmp sgt i32 %.075, -1
  %124 = select i1 %123, i32 -509748448, i32 56395735
  br label %.backedge

125:                                              ; preds = %5
  %126 = load i32, i32* @x.6, align 4
  %127 = load i32, i32* @y.7, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 -319142110, i32 1928193998
  br label %.backedge

135:                                              ; preds = %5
  %136 = load i32, i32* @m, align 4
  %137 = xor i32 %136, %.075
  %138 = and i32 %137, 1
  %139 = icmp ne i32 %138, 0
  store i1 %139, i1* %3, align 1
  %140 = load i32, i32* @x.6, align 4
  %141 = load i32, i32* @y.7, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 1433425904, i32 1928193998
  br label %.backedge

149:                                              ; preds = %5
  %.0..0..0.58 = load volatile i1, i1* %3, align 1
  %150 = select i1 %.0..0..0.58, i32 1342824800, i32 1306666420
  br label %.backedge

151:                                              ; preds = %5
  %152 = load i32, i32* @x.6, align 4
  %153 = load i32, i32* @y.7, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 -1778816834, i32 1191196800
  br label %.backedge

161:                                              ; preds = %5
  %162 = load i32, i32* @x.6, align 4
  %163 = load i32, i32* @y.7, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 2054320300, i32 1191196800
  br label %.backedge

171:                                              ; preds = %5
  br label %.backedge

172:                                              ; preds = %5
  %173 = load i32, i32* @m, align 4
  %174 = icmp sgt i32 %.075, %173
  %175 = select i1 %174, i32 -710843316, i32 -532145878
  br label %.backedge

176:                                              ; preds = %5
  %177 = load i32, i32* @x.6, align 4
  %178 = load i32, i32* @y.7, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 1209523625, i32 -1618217491
  br label %.backedge

186:                                              ; preds = %5
  %187 = load i32, i32* @x.6, align 4
  %188 = load i32, i32* @y.7, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1957418198, i32 -1618217491
  br label %.backedge

196:                                              ; preds = %5
  br label %.backedge

197:                                              ; preds = %5
  br label %.backedge

198:                                              ; preds = %5
  %199 = load i32, i32* @x.6, align 4
  %200 = load i32, i32* @y.7, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 -1322674442, i32 1520239419
  br label %.backedge

208:                                              ; preds = %5
  %209 = icmp slt i32 %.073, 4
  store i1 %209, i1* %2, align 1
  %210 = load i32, i32* @x.6, align 4
  %211 = load i32, i32* @y.7, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 -1639140895, i32 1520239419
  br label %.backedge

219:                                              ; preds = %5
  %.0..0..0.59 = load volatile i1, i1* %2, align 1
  %220 = select i1 %.0..0..0.59, i32 246702406, i32 1861032804
  br label %.backedge

221:                                              ; preds = %5
  %222 = load i32, i32* @x.6, align 4
  %223 = load i32, i32* @y.7, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 1830833538, i32 2022622859
  br label %.backedge

231:                                              ; preds = %5
  %232 = load i32, i32* @n, align 4
  %233 = sub i32 %232, %.075
  %234 = icmp sle i32 %.073, %233
  store i1 %234, i1* %1, align 1
  %235 = load i32, i32* @x.6, align 4
  %236 = load i32, i32* @y.7, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 51139670, i32 2022622859
  br label %.backedge

244:                                              ; preds = %5
  %.0..0..0.60 = load volatile i1, i1* %1, align 1
  br label %.backedge

245:                                              ; preds = %5
  %246 = select i1 %.061, i32 -1834297648, i32 1695969868
  br label %.backedge

247:                                              ; preds = %5
  br label %.backedge

248:                                              ; preds = %5
  %249 = icmp slt i32 %.071, 4
  %250 = select i1 %249, i32 -1265275704, i32 -1026898971
  br label %.backedge

251:                                              ; preds = %5
  %252 = icmp sle i32 %.071, %.075
  br label %.backedge

253:                                              ; preds = %5
  %254 = select i1 %.0, i32 -985131827, i32 -1679460169
  br label %.backedge

255:                                              ; preds = %5
  %256 = load i32, i32* @m, align 4
  %.neg79 = xor i32 %256, -1
  %.neg80 = mul i32 %.073, %.neg79
  %.neg82 = mul i32 %256, %.071
  %reass.add = sub i32 %.neg80, %.neg82
  %reass.mul = shl i32 %reass.add, 1
  %257 = sub i32 0, %reass.mul
  %.neg83 = sub i32 %.075, %reass.mul
  %258 = mul nsw i32 %256, 3
  %259 = icmp sgt i32 %.neg83, %258
  %260 = select i1 %259, i32 1011073102, i32 1722387930
  br label %.backedge

261:                                              ; preds = %5
  %262 = load i32, i32* @x.6, align 4
  %263 = load i32, i32* @y.7, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 1816875269, i32 -220749250
  br label %.backedge

271:                                              ; preds = %5
  %272 = load i32, i32* @x.6, align 4
  %273 = load i32, i32* @y.7, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 -37969755, i32 -220749250
  br label %.backedge

281:                                              ; preds = %5
  br label %.backedge

282:                                              ; preds = %5
  %283 = load i32, i32* @n, align 4
  %284 = tail call i32 @_Z1Cii(i32 %283, i32 %.075)
  %285 = sext i32 %284 to i64
  %286 = load i32, i32* @m, align 4
  %287 = mul nsw i32 %286, 3
  %288 = add i32 %.067, %.075
  %289 = sub i32 %287, %288
  %290 = sdiv i32 %289, 2
  %291 = load i32, i32* @n, align 4
  %292 = add i32 %291, -1
  %293 = add i32 %292, %290
  %294 = tail call i32 @_Z1Cii(i32 %293, i32 %292)
  %295 = sext i32 %294 to i64
  %296 = mul nsw i64 %295, %285
  %297 = srem i64 %296, 998244353
  %298 = tail call i32 @_Z1Cii(i32 %.075, i32 %.071)
  %299 = sext i32 %298 to i64
  %300 = mul nsw i64 %297, %299
  %301 = srem i64 %300, 998244353
  %302 = load i32, i32* @n, align 4
  %303 = sub i32 %302, %.075
  %304 = tail call i32 @_Z1Cii(i32 %303, i32 %.073)
  %305 = sext i32 %304 to i64
  %306 = mul nsw i64 %301, %305
  %307 = srem i64 %306, 998244353
  %308 = trunc i64 %307 to i32
  %309 = add i32 %.071, %.073
  %310 = and i32 %309, 1
  %.not = icmp eq i32 %310, 0
  %311 = select i1 %.not, i32 -636653219, i32 -428290721
  br label %.backedge

312:                                              ; preds = %5
  %313 = sext i32 %.069 to i64
  %314 = sext i32 %.065 to i64
  %315 = add nsw i64 %313, 998244353
  %316 = sub nsw i64 %315, %314
  %317 = srem i64 %316, 998244353
  %318 = trunc i64 %317 to i32
  br label %.backedge

319:                                              ; preds = %5
  %320 = load i32, i32* @x.6, align 4
  %321 = load i32, i32* @y.7, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 -950674283, i32 -726258933
  br label %.backedge

329:                                              ; preds = %5
  %330 = add i32 %.065, %.069
  %331 = srem i32 %330, 998244353
  %332 = load i32, i32* @x.6, align 4
  %333 = load i32, i32* @y.7, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 -1081869849, i32 -726258933
  br label %.backedge

341:                                              ; preds = %5
  br label %.backedge

342:                                              ; preds = %5
  br label %.backedge

343:                                              ; preds = %5
  %344 = load i32, i32* @x.6, align 4
  %345 = load i32, i32* @y.7, align 4
  %346 = add i32 %344, -1
  %347 = mul i32 %346, %344
  %348 = and i32 %347, 1
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %350, %349
  %352 = select i1 %351, i32 1428453815, i32 218740811
  br label %.backedge

353:                                              ; preds = %5
  %.neg77 = add i32 %.071, 1
  %354 = load i32, i32* @x.6, align 4
  %355 = load i32, i32* @y.7, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 365588344, i32 218740811
  br label %.backedge

363:                                              ; preds = %5
  br label %.backedge

364:                                              ; preds = %5
  br label %.backedge

365:                                              ; preds = %5
  %366 = add i32 %.073, 1
  br label %.backedge

367:                                              ; preds = %5
  %368 = srem i32 %.069, 998244353
  br label %.backedge

369:                                              ; preds = %5
  %370 = add i32 %.075, -1
  br label %.backedge

371:                                              ; preds = %5
  %372 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %.069)
  ret i32 0

373:                                              ; preds = %5
  %374 = add i32 %.075, -1
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @fac, i64 0, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = sext i32 %377 to i64
  %379 = sext i32 %.075 to i64
  %380 = mul nsw i64 %378, %379
  %381 = srem i64 %380, 998244353
  %382 = trunc i64 %381 to i32
  %383 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @fac, i64 0, i64 %379
  store i32 %382, i32* %383, align 4
  br label %.backedge

384:                                              ; preds = %5
  %385 = add i32 %.075, 1
  br label %.backedge

386:                                              ; preds = %5
  %387 = add i32 %.075, 1
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @ifac, i64 0, i64 %388
  %390 = load i32, i32* %389, align 4
  %391 = sext i32 %390 to i64
  %392 = mul nsw i64 %391, %388
  %393 = srem i64 %392, 998244353
  %394 = trunc i64 %393 to i32
  %395 = sext i32 %.075 to i64
  %396 = getelementptr inbounds [2000005 x i32], [2000005 x i32]* @ifac, i64 0, i64 %395
  store i32 %394, i32* %396, align 4
  br label %.backedge

397:                                              ; preds = %5
  %.neg = add i32 %.075, -1
  br label %.backedge

398:                                              ; preds = %5
  br label %.backedge

399:                                              ; preds = %5
  br label %.backedge

400:                                              ; preds = %5
  br label %.backedge

401:                                              ; preds = %5
  br label %.backedge

402:                                              ; preds = %5
  br label %.backedge

403:                                              ; preds = %5
  br label %.backedge

404:                                              ; preds = %5
  %405 = add i32 %.065, %.069
  %406 = srem i32 %405, 998244353
  br label %.backedge

407:                                              ; preds = %5
  %408 = add i32 %.071, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s016219404.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
