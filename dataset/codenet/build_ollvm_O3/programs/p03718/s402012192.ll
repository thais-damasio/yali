; ModuleID = 'build_ollvm/programs/p03718/s402012192.ll'
source_filename = "Project_CodeNet_C++1400/p03718/s402012192.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@s = global [105 x [105 x i8]] zeroinitializer, align 16
@id = local_unnamed_addr global [105 x [105 x i32]] zeroinitializer, align 16
@ct = local_unnamed_addr global i32 0, align 4
@he = local_unnamed_addr global [20005 x i32] zeroinitializer, align 16
@ver = local_unnamed_addr global [8002000 x i32] zeroinitializer, align 16
@nex = local_unnamed_addr global [8002000 x i32] zeroinitializer, align 16
@C = global [8002000 x i32] zeroinitializer, align 16
@tot = local_unnamed_addr global i32 0, align 4
@d = local_unnamed_addr global [20005 x i32] zeroinitializer, align 16
@q = local_unnamed_addr global [20005 x i32] zeroinitializer, align 16
@l = local_unnamed_addr global i32 0, align 4
@r = local_unnamed_addr global i32 0, align 4
@S = local_unnamed_addr global i32 0, align 4
@T = local_unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"-1\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s402012192.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@x.12 = common local_unnamed_addr global i32 0
@y.13 = common local_unnamed_addr global i32 0
@x.14 = common local_unnamed_addr global i32 0
@y.15 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 395213950, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 395213950, label %11
    i32 1379209009, label %14
    i32 -1808118636, label %25
    i32 -1587252262, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1379209009, i32 -1587252262
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1808118636, i32 -1587252262
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1379209009, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6)
  br label %8

8:                                                ; preds = %.backedge, %0
  %.0122 = phi i32 [ 1, %0 ], [ %.0122.be, %.backedge ]
  %.sroa.492.0 = phi i32 [ undef, %0 ], [ %.sroa.492.0.be, %.backedge ]
  %.sroa.090.0 = phi i32 [ undef, %0 ], [ %.sroa.090.0.be, %.backedge ]
  %.sroa.4.0 = phi i32 [ undef, %0 ], [ %.sroa.4.0.be, %.backedge ]
  %.sroa.0.0 = phi i32 [ undef, %0 ], [ %.sroa.0.0.be, %.backedge ]
  %.0120 = phi i32 [ undef, %0 ], [ %.0120.be, %.backedge ]
  %.0118 = phi i32 [ undef, %0 ], [ %.0118.be, %.backedge ]
  %.0116 = phi i32 [ undef, %0 ], [ %.0116.be, %.backedge ]
  %.0114 = phi i32 [ undef, %0 ], [ %.0114.be, %.backedge ]
  %.0112 = phi i32 [ undef, %0 ], [ %.0112.be, %.backedge ]
  %.0110 = phi i32 [ undef, %0 ], [ %.0110.be, %.backedge ]
  %.0108 = phi i32 [ undef, %0 ], [ %.0108.be, %.backedge ]
  %.0106 = phi i32 [ undef, %0 ], [ %.0106.be, %.backedge ]
  %.0104 = phi i32 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i32 [ undef, %0 ], [ %.0102.be, %.backedge ]
  %.0 = phi i32 [ 413777893, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 413777893, label %9
    i32 -24303075, label %12
    i32 1850227481, label %16
    i32 -237529761, label %26
    i32 -41700573, label %36
    i32 -1751171648, label %37
    i32 1313965292, label %38
    i32 -107179496, label %41
    i32 -1114529740, label %42
    i32 -822522358, label %45
    i32 45469250, label %52
    i32 1014906406, label %62
    i32 699776246, label %72
    i32 1915243062, label %73
    i32 839039196, label %83
    i32 763241953, label %98
    i32 339838296, label %100
    i32 -489380800, label %101
    i32 1520711265, label %102
    i32 597021476, label %103
    i32 2046367705, label %105
    i32 -1150927131, label %115
    i32 -432277000, label %125
    i32 -546190603, label %126
    i32 1558541572, label %128
    i32 -749258576, label %131
    i32 751160988, label %134
    i32 -1303248630, label %136
    i32 144013169, label %137
    i32 2093786825, label %147
    i32 -1746869897, label %159
    i32 726482210, label %161
    i32 1227418988, label %162
    i32 186829363, label %165
    i32 849252172, label %174
    i32 669689866, label %184
    i32 213299375, label %207
    i32 1557945273, label %208
    i32 -2102771589, label %209
    i32 92981591, label %211
    i32 -606878994, label %212
    i32 1646088368, label %214
    i32 1976385321, label %215
    i32 -1576714837, label %218
    i32 1861577757, label %219
    i32 -265040276, label %222
    i32 -113786669, label %229
    i32 2119151101, label %230
    i32 243391654, label %232
    i32 433050550, label %242
    i32 -438185419, label %254
    i32 1767263959, label %256
    i32 -487555225, label %262
    i32 1586895542, label %276
    i32 -1566078728, label %277
    i32 -1137824698, label %279
    i32 1257226, label %281
    i32 -2084878327, label %284
    i32 1077307090, label %294
    i32 299276227, label %309
    i32 -1360326414, label %311
    i32 -116325019, label %321
    i32 21673403, label %344
    i32 328239296, label %345
    i32 -749438120, label %346
    i32 -278179484, label %348
    i32 189076038, label %349
    i32 -665063864, label %350
    i32 -1206553411, label %351
    i32 1228793387, label %353
    i32 814568162, label %354
    i32 1703247782, label %365
    i32 -1387301317, label %368
    i32 1386622087, label %369
    i32 1783175693, label %373
    i32 567877051, label %375
    i32 1154688110, label %385
    i32 -911716285, label %395
    i32 1148527769, label %396
    i32 -1401167591, label %398
    i32 1167657028, label %399
    i32 -1473489385, label %401
    i32 -1310201764, label %402
    i32 -1875572469, label %403
    i32 1493032991, label %404
    i32 966921250, label %405
    i32 -875570205, label %419
    i32 1836136159, label %420
    i32 -1258935120, label %421
    i32 389760732, label %435
  ]

.backedge:                                        ; preds = %8, %435, %421, %420, %419, %405, %404, %403, %402, %401, %399, %396, %395, %385, %375, %373, %369, %368, %365, %354, %353, %351, %350, %349, %348, %346, %345, %344, %321, %311, %309, %294, %284, %281, %279, %277, %276, %262, %256, %254, %242, %232, %230, %229, %222, %219, %218, %215, %214, %212, %211, %209, %208, %207, %184, %174, %165, %162, %161, %159, %147, %137, %136, %134, %131, %128, %126, %125, %115, %105, %103, %102, %101, %100, %98, %83, %73, %72, %62, %52, %45, %42, %41, %38, %37, %36, %26, %16, %12, %9
  %.0122.be = phi i32 [ %.0122, %8 ], [ %.0122, %435 ], [ %.0122, %421 ], [ %.0122, %420 ], [ %.0122, %419 ], [ %.0122, %405 ], [ %.0122, %404 ], [ %.0122, %403 ], [ %.0122, %402 ], [ %.0122, %401 ], [ %400, %399 ], [ %.0122, %396 ], [ %.0122, %395 ], [ %.0122, %385 ], [ %.0122, %375 ], [ %.0122, %373 ], [ %.0122, %369 ], [ %.0122, %368 ], [ %.0122, %365 ], [ %.0122, %354 ], [ %.0122, %353 ], [ %.0122, %351 ], [ %.0122, %350 ], [ %.0122, %349 ], [ %.0122, %348 ], [ %.0122, %346 ], [ %.0122, %345 ], [ %.0122, %344 ], [ %.0122, %321 ], [ %.0122, %311 ], [ %.0122, %309 ], [ %.0122, %294 ], [ %.0122, %284 ], [ %.0122, %281 ], [ %.0122, %279 ], [ %.0122, %277 ], [ %.0122, %276 ], [ %.0122, %262 ], [ %.0122, %256 ], [ %.0122, %254 ], [ %.0122, %242 ], [ %.0122, %232 ], [ %.0122, %230 ], [ %.0122, %229 ], [ %.0122, %222 ], [ %.0122, %219 ], [ %.0122, %218 ], [ %.0122, %215 ], [ %.0122, %214 ], [ %.0122, %212 ], [ %.0122, %211 ], [ %.0122, %209 ], [ %.0122, %208 ], [ %.0122, %207 ], [ %.0122, %184 ], [ %.0122, %174 ], [ %.0122, %165 ], [ %.0122, %162 ], [ %.0122, %161 ], [ %.0122, %159 ], [ %.0122, %147 ], [ %.0122, %137 ], [ %.0122, %136 ], [ %.0122, %134 ], [ %.0122, %131 ], [ %.0122, %128 ], [ %.0122, %126 ], [ %.0122, %125 ], [ %.0122, %115 ], [ %.0122, %105 ], [ %.0122, %103 ], [ %.0122, %102 ], [ %.0122, %101 ], [ %.0122, %100 ], [ %.0122, %98 ], [ %.0122, %83 ], [ %.0122, %73 ], [ %.0122, %72 ], [ %.0122, %62 ], [ %.0122, %52 ], [ %.0122, %45 ], [ %.0122, %42 ], [ %.0122, %41 ], [ %.0122, %38 ], [ %.0122, %37 ], [ %.0122, %36 ], [ %.neg134, %26 ], [ %.0122, %16 ], [ %.0122, %12 ], [ %.0122, %9 ]
  %.sroa.492.0.be = phi i32 [ %.sroa.492.0, %8 ], [ %.sroa.492.0, %435 ], [ %.sroa.492.0, %421 ], [ %.sroa.492.0, %420 ], [ %.sroa.492.0, %419 ], [ %.sroa.492.0, %405 ], [ %.sroa.492.0, %404 ], [ %.sroa.492.0, %403 ], [ %.sroa.492.0, %402 ], [ %.sroa.492.0, %401 ], [ %.sroa.492.0, %399 ], [ %.sroa.492.0, %396 ], [ %.sroa.492.0, %395 ], [ %.sroa.492.0, %385 ], [ %.sroa.492.0, %375 ], [ %.sroa.492.0, %373 ], [ %.sroa.492.0, %369 ], [ %.sroa.492.0, %368 ], [ %.sroa.492.0, %365 ], [ %.sroa.492.0, %354 ], [ %.sroa.492.0, %353 ], [ %.sroa.492.0, %351 ], [ %.sroa.492.0, %350 ], [ %.sroa.492.0, %349 ], [ %.sroa.492.0, %348 ], [ %.sroa.492.0, %346 ], [ %.sroa.492.0, %345 ], [ %.sroa.492.0, %344 ], [ %.sroa.492.0, %321 ], [ %.sroa.492.0, %311 ], [ %.sroa.492.0, %309 ], [ %.sroa.492.0, %294 ], [ %.sroa.492.0, %284 ], [ %.sroa.492.0, %281 ], [ %.sroa.492.0, %279 ], [ %.sroa.492.0, %277 ], [ %.sroa.492.0, %276 ], [ %.sroa.492.0, %262 ], [ %.sroa.492.0, %256 ], [ %.sroa.492.0, %254 ], [ %.sroa.492.0, %242 ], [ %.sroa.492.0, %232 ], [ %.sroa.492.0, %230 ], [ %.sroa.492.0, %229 ], [ %.sroa.492.0, %222 ], [ %.sroa.492.0, %219 ], [ %.sroa.492.0, %218 ], [ %.sroa.492.0, %215 ], [ %.sroa.492.0, %214 ], [ %.sroa.492.0, %212 ], [ %.sroa.492.0, %211 ], [ %.sroa.492.0, %209 ], [ %.sroa.492.0, %208 ], [ %.sroa.492.0, %207 ], [ %.sroa.492.0, %184 ], [ %.sroa.492.0, %174 ], [ %.sroa.492.0, %165 ], [ %.sroa.492.0, %162 ], [ %.sroa.492.0, %161 ], [ %.sroa.492.0, %159 ], [ %.sroa.492.0, %147 ], [ %.sroa.492.0, %137 ], [ %.sroa.492.0, %136 ], [ %.sroa.492.0, %134 ], [ %.sroa.492.0, %131 ], [ %.sroa.492.0, %128 ], [ %.sroa.492.0, %126 ], [ %.sroa.492.0, %125 ], [ %.sroa.492.0, %115 ], [ %.sroa.492.0, %105 ], [ %.sroa.492.0, %103 ], [ %.sroa.492.0, %102 ], [ %.sroa.492.0, %101 ], [ %.0118, %100 ], [ %.sroa.492.0, %98 ], [ %.sroa.492.0, %83 ], [ %.sroa.492.0, %73 ], [ %.sroa.492.0, %72 ], [ %.sroa.492.0, %62 ], [ %.sroa.492.0, %52 ], [ %.sroa.492.0, %45 ], [ %.sroa.492.0, %42 ], [ %.sroa.492.0, %41 ], [ %.sroa.492.0, %38 ], [ %.sroa.492.0, %37 ], [ %.sroa.492.0, %36 ], [ %.sroa.492.0, %26 ], [ %.sroa.492.0, %16 ], [ %.sroa.492.0, %12 ], [ %.sroa.492.0, %9 ]
  %.sroa.090.0.be = phi i32 [ %.sroa.090.0, %8 ], [ %.sroa.090.0, %435 ], [ %.sroa.090.0, %421 ], [ %.sroa.090.0, %420 ], [ %.sroa.090.0, %419 ], [ %.sroa.090.0, %405 ], [ %.sroa.090.0, %404 ], [ %.sroa.090.0, %403 ], [ %.sroa.090.0, %402 ], [ %.0118, %401 ], [ %.sroa.090.0, %399 ], [ %.sroa.090.0, %396 ], [ %.sroa.090.0, %395 ], [ %.sroa.090.0, %385 ], [ %.sroa.090.0, %375 ], [ %.sroa.090.0, %373 ], [ %.sroa.090.0, %369 ], [ %.sroa.090.0, %368 ], [ %.sroa.090.0, %365 ], [ %.sroa.090.0, %354 ], [ %.sroa.090.0, %353 ], [ %.sroa.090.0, %351 ], [ %.sroa.090.0, %350 ], [ %.sroa.090.0, %349 ], [ %.sroa.090.0, %348 ], [ %.sroa.090.0, %346 ], [ %.sroa.090.0, %345 ], [ %.sroa.090.0, %344 ], [ %.sroa.090.0, %321 ], [ %.sroa.090.0, %311 ], [ %.sroa.090.0, %309 ], [ %.sroa.090.0, %294 ], [ %.sroa.090.0, %284 ], [ %.sroa.090.0, %281 ], [ %.sroa.090.0, %279 ], [ %.sroa.090.0, %277 ], [ %.sroa.090.0, %276 ], [ %.sroa.090.0, %262 ], [ %.sroa.090.0, %256 ], [ %.sroa.090.0, %254 ], [ %.sroa.090.0, %242 ], [ %.sroa.090.0, %232 ], [ %.sroa.090.0, %230 ], [ %.sroa.090.0, %229 ], [ %.sroa.090.0, %222 ], [ %.sroa.090.0, %219 ], [ %.sroa.090.0, %218 ], [ %.sroa.090.0, %215 ], [ %.sroa.090.0, %214 ], [ %.sroa.090.0, %212 ], [ %.sroa.090.0, %211 ], [ %.sroa.090.0, %209 ], [ %.sroa.090.0, %208 ], [ %.sroa.090.0, %207 ], [ %.sroa.090.0, %184 ], [ %.sroa.090.0, %174 ], [ %.sroa.090.0, %165 ], [ %.sroa.090.0, %162 ], [ %.sroa.090.0, %161 ], [ %.sroa.090.0, %159 ], [ %.sroa.090.0, %147 ], [ %.sroa.090.0, %137 ], [ %.sroa.090.0, %136 ], [ %.sroa.090.0, %134 ], [ %.sroa.090.0, %131 ], [ %.sroa.090.0, %128 ], [ %.sroa.090.0, %126 ], [ %.sroa.090.0, %125 ], [ %.sroa.090.0, %115 ], [ %.sroa.090.0, %105 ], [ %.sroa.090.0, %103 ], [ %.sroa.090.0, %102 ], [ %.sroa.090.0, %101 ], [ %.sroa.090.0, %100 ], [ %.sroa.090.0, %98 ], [ %.sroa.090.0, %83 ], [ %.sroa.090.0, %73 ], [ %.sroa.090.0, %72 ], [ %.0118, %62 ], [ %.sroa.090.0, %52 ], [ %.sroa.090.0, %45 ], [ %.sroa.090.0, %42 ], [ %.sroa.090.0, %41 ], [ %.sroa.090.0, %38 ], [ %.sroa.090.0, %37 ], [ %.sroa.090.0, %36 ], [ %.sroa.090.0, %26 ], [ %.sroa.090.0, %16 ], [ %.sroa.090.0, %12 ], [ %.sroa.090.0, %9 ]
  %.sroa.4.0.be = phi i32 [ %.sroa.4.0, %8 ], [ %.sroa.4.0, %435 ], [ %.sroa.4.0, %421 ], [ %.sroa.4.0, %420 ], [ %.sroa.4.0, %419 ], [ %.sroa.4.0, %405 ], [ %.sroa.4.0, %404 ], [ %.sroa.4.0, %403 ], [ %.sroa.4.0, %402 ], [ %.sroa.4.0, %401 ], [ %.sroa.4.0, %399 ], [ %.sroa.4.0, %396 ], [ %.sroa.4.0, %395 ], [ %.sroa.4.0, %385 ], [ %.sroa.4.0, %375 ], [ %.sroa.4.0, %373 ], [ %.sroa.4.0, %369 ], [ %.sroa.4.0, %368 ], [ %.sroa.4.0, %365 ], [ %.sroa.4.0, %354 ], [ %.sroa.4.0, %353 ], [ %.sroa.4.0, %351 ], [ %.sroa.4.0, %350 ], [ %.sroa.4.0, %349 ], [ %.sroa.4.0, %348 ], [ %.sroa.4.0, %346 ], [ %.sroa.4.0, %345 ], [ %.sroa.4.0, %344 ], [ %.sroa.4.0, %321 ], [ %.sroa.4.0, %311 ], [ %.sroa.4.0, %309 ], [ %.sroa.4.0, %294 ], [ %.sroa.4.0, %284 ], [ %.sroa.4.0, %281 ], [ %.sroa.4.0, %279 ], [ %.sroa.4.0, %277 ], [ %.sroa.4.0, %276 ], [ %.sroa.4.0, %262 ], [ %.sroa.4.0, %256 ], [ %.sroa.4.0, %254 ], [ %.sroa.4.0, %242 ], [ %.sroa.4.0, %232 ], [ %.sroa.4.0, %230 ], [ %.sroa.4.0, %229 ], [ %.sroa.4.0, %222 ], [ %.sroa.4.0, %219 ], [ %.sroa.4.0, %218 ], [ %.sroa.4.0, %215 ], [ %.sroa.4.0, %214 ], [ %.sroa.4.0, %212 ], [ %.sroa.4.0, %211 ], [ %.sroa.4.0, %209 ], [ %.sroa.4.0, %208 ], [ %.sroa.4.0, %207 ], [ %.sroa.4.0, %184 ], [ %.sroa.4.0, %174 ], [ %.sroa.4.0, %165 ], [ %.sroa.4.0, %162 ], [ %.sroa.4.0, %161 ], [ %.sroa.4.0, %159 ], [ %.sroa.4.0, %147 ], [ %.sroa.4.0, %137 ], [ %.sroa.4.0, %136 ], [ %.sroa.4.0, %134 ], [ %.sroa.4.0, %131 ], [ %.sroa.4.0, %128 ], [ %.sroa.4.0, %126 ], [ %.sroa.4.0, %125 ], [ %.sroa.4.0, %115 ], [ %.sroa.4.0, %105 ], [ %.sroa.4.0, %103 ], [ %.sroa.4.0, %102 ], [ %.sroa.4.0, %101 ], [ %.0120, %100 ], [ %.sroa.4.0, %98 ], [ %.sroa.4.0, %83 ], [ %.sroa.4.0, %73 ], [ %.sroa.4.0, %72 ], [ %.sroa.4.0, %62 ], [ %.sroa.4.0, %52 ], [ %.sroa.4.0, %45 ], [ %.sroa.4.0, %42 ], [ %.sroa.4.0, %41 ], [ %.sroa.4.0, %38 ], [ %.sroa.4.0, %37 ], [ %.sroa.4.0, %36 ], [ %.sroa.4.0, %26 ], [ %.sroa.4.0, %16 ], [ %.sroa.4.0, %12 ], [ %.sroa.4.0, %9 ]
  %.sroa.0.0.be = phi i32 [ %.sroa.0.0, %8 ], [ %.sroa.0.0, %435 ], [ %.sroa.0.0, %421 ], [ %.sroa.0.0, %420 ], [ %.sroa.0.0, %419 ], [ %.sroa.0.0, %405 ], [ %.sroa.0.0, %404 ], [ %.sroa.0.0, %403 ], [ %.sroa.0.0, %402 ], [ %.0120, %401 ], [ %.sroa.0.0, %399 ], [ %.sroa.0.0, %396 ], [ %.sroa.0.0, %395 ], [ %.sroa.0.0, %385 ], [ %.sroa.0.0, %375 ], [ %.sroa.0.0, %373 ], [ %.sroa.0.0, %369 ], [ %.sroa.0.0, %368 ], [ %.sroa.0.0, %365 ], [ %.sroa.0.0, %354 ], [ %.sroa.0.0, %353 ], [ %.sroa.0.0, %351 ], [ %.sroa.0.0, %350 ], [ %.sroa.0.0, %349 ], [ %.sroa.0.0, %348 ], [ %.sroa.0.0, %346 ], [ %.sroa.0.0, %345 ], [ %.sroa.0.0, %344 ], [ %.sroa.0.0, %321 ], [ %.sroa.0.0, %311 ], [ %.sroa.0.0, %309 ], [ %.sroa.0.0, %294 ], [ %.sroa.0.0, %284 ], [ %.sroa.0.0, %281 ], [ %.sroa.0.0, %279 ], [ %.sroa.0.0, %277 ], [ %.sroa.0.0, %276 ], [ %.sroa.0.0, %262 ], [ %.sroa.0.0, %256 ], [ %.sroa.0.0, %254 ], [ %.sroa.0.0, %242 ], [ %.sroa.0.0, %232 ], [ %.sroa.0.0, %230 ], [ %.sroa.0.0, %229 ], [ %.sroa.0.0, %222 ], [ %.sroa.0.0, %219 ], [ %.sroa.0.0, %218 ], [ %.sroa.0.0, %215 ], [ %.sroa.0.0, %214 ], [ %.sroa.0.0, %212 ], [ %.sroa.0.0, %211 ], [ %.sroa.0.0, %209 ], [ %.sroa.0.0, %208 ], [ %.sroa.0.0, %207 ], [ %.sroa.0.0, %184 ], [ %.sroa.0.0, %174 ], [ %.sroa.0.0, %165 ], [ %.sroa.0.0, %162 ], [ %.sroa.0.0, %161 ], [ %.sroa.0.0, %159 ], [ %.sroa.0.0, %147 ], [ %.sroa.0.0, %137 ], [ %.sroa.0.0, %136 ], [ %.sroa.0.0, %134 ], [ %.sroa.0.0, %131 ], [ %.sroa.0.0, %128 ], [ %.sroa.0.0, %126 ], [ %.sroa.0.0, %125 ], [ %.sroa.0.0, %115 ], [ %.sroa.0.0, %105 ], [ %.sroa.0.0, %103 ], [ %.sroa.0.0, %102 ], [ %.sroa.0.0, %101 ], [ %.sroa.0.0, %100 ], [ %.sroa.0.0, %98 ], [ %.sroa.0.0, %83 ], [ %.sroa.0.0, %73 ], [ %.sroa.0.0, %72 ], [ %.0120, %62 ], [ %.sroa.0.0, %52 ], [ %.sroa.0.0, %45 ], [ %.sroa.0.0, %42 ], [ %.sroa.0.0, %41 ], [ %.sroa.0.0, %38 ], [ %.sroa.0.0, %37 ], [ %.sroa.0.0, %36 ], [ %.sroa.0.0, %26 ], [ %.sroa.0.0, %16 ], [ %.sroa.0.0, %12 ], [ %.sroa.0.0, %9 ]
  %.0120.be = phi i32 [ %.0120, %8 ], [ %.0120, %435 ], [ %.0120, %421 ], [ %.0120, %420 ], [ %.0120, %419 ], [ %.0120, %405 ], [ %.0120, %404 ], [ %.0120, %403 ], [ %.0120, %402 ], [ %.0120, %401 ], [ %.0120, %399 ], [ %.0120, %396 ], [ %.0120, %395 ], [ %.0120, %385 ], [ %.0120, %375 ], [ %.0120, %373 ], [ %.0120, %369 ], [ %.0120, %368 ], [ %.0120, %365 ], [ %.0120, %354 ], [ %.0120, %353 ], [ %.0120, %351 ], [ %.0120, %350 ], [ %.0120, %349 ], [ %.0120, %348 ], [ %.0120, %346 ], [ %.0120, %345 ], [ %.0120, %344 ], [ %.0120, %321 ], [ %.0120, %311 ], [ %.0120, %309 ], [ %.0120, %294 ], [ %.0120, %284 ], [ %.0120, %281 ], [ %.0120, %279 ], [ %.0120, %277 ], [ %.0120, %276 ], [ %.0120, %262 ], [ %.0120, %256 ], [ %.0120, %254 ], [ %.0120, %242 ], [ %.0120, %232 ], [ %.0120, %230 ], [ %.0120, %229 ], [ %.0120, %222 ], [ %.0120, %219 ], [ %.0120, %218 ], [ %.0120, %215 ], [ %.0120, %214 ], [ %.0120, %212 ], [ %.0120, %211 ], [ %.0120, %209 ], [ %.0120, %208 ], [ %.0120, %207 ], [ %.0120, %184 ], [ %.0120, %174 ], [ %.0120, %165 ], [ %.0120, %162 ], [ %.0120, %161 ], [ %.0120, %159 ], [ %.0120, %147 ], [ %.0120, %137 ], [ %.0120, %136 ], [ %.0120, %134 ], [ %.0120, %131 ], [ %.0120, %128 ], [ %127, %126 ], [ %.0120, %125 ], [ %.0120, %115 ], [ %.0120, %105 ], [ %.0120, %103 ], [ %.0120, %102 ], [ %.0120, %101 ], [ %.0120, %100 ], [ %.0120, %98 ], [ %.0120, %83 ], [ %.0120, %73 ], [ %.0120, %72 ], [ %.0120, %62 ], [ %.0120, %52 ], [ %.0120, %45 ], [ %.0120, %42 ], [ %.0120, %41 ], [ %.0120, %38 ], [ 1, %37 ], [ %.0120, %36 ], [ %.0120, %26 ], [ %.0120, %16 ], [ %.0120, %12 ], [ %.0120, %9 ]
  %.0118.be = phi i32 [ %.0118, %8 ], [ %.0118, %435 ], [ %.0118, %421 ], [ %.0118, %420 ], [ %.0118, %419 ], [ %.0118, %405 ], [ %.0118, %404 ], [ %.0118, %403 ], [ %.0118, %402 ], [ %.0118, %401 ], [ %.0118, %399 ], [ %.0118, %396 ], [ %.0118, %395 ], [ %.0118, %385 ], [ %.0118, %375 ], [ %.0118, %373 ], [ %.0118, %369 ], [ %.0118, %368 ], [ %.0118, %365 ], [ %.0118, %354 ], [ %.0118, %353 ], [ %.0118, %351 ], [ %.0118, %350 ], [ %.0118, %349 ], [ %.0118, %348 ], [ %.0118, %346 ], [ %.0118, %345 ], [ %.0118, %344 ], [ %.0118, %321 ], [ %.0118, %311 ], [ %.0118, %309 ], [ %.0118, %294 ], [ %.0118, %284 ], [ %.0118, %281 ], [ %.0118, %279 ], [ %.0118, %277 ], [ %.0118, %276 ], [ %.0118, %262 ], [ %.0118, %256 ], [ %.0118, %254 ], [ %.0118, %242 ], [ %.0118, %232 ], [ %.0118, %230 ], [ %.0118, %229 ], [ %.0118, %222 ], [ %.0118, %219 ], [ %.0118, %218 ], [ %.0118, %215 ], [ %.0118, %214 ], [ %.0118, %212 ], [ %.0118, %211 ], [ %.0118, %209 ], [ %.0118, %208 ], [ %.0118, %207 ], [ %.0118, %184 ], [ %.0118, %174 ], [ %.0118, %165 ], [ %.0118, %162 ], [ %.0118, %161 ], [ %.0118, %159 ], [ %.0118, %147 ], [ %.0118, %137 ], [ %.0118, %136 ], [ %.0118, %134 ], [ %.0118, %131 ], [ %.0118, %128 ], [ %.0118, %126 ], [ %.0118, %125 ], [ %.0118, %115 ], [ %.0118, %105 ], [ %104, %103 ], [ %.0118, %102 ], [ %.0118, %101 ], [ %.0118, %100 ], [ %.0118, %98 ], [ %.0118, %83 ], [ %.0118, %73 ], [ %.0118, %72 ], [ %.0118, %62 ], [ %.0118, %52 ], [ %.0118, %45 ], [ %.0118, %42 ], [ 1, %41 ], [ %.0118, %38 ], [ %.0118, %37 ], [ %.0118, %36 ], [ %.0118, %26 ], [ %.0118, %16 ], [ %.0118, %12 ], [ %.0118, %9 ]
  %.0116.be = phi i32 [ %.0116, %8 ], [ %.0116, %435 ], [ %.0116, %421 ], [ %.0116, %420 ], [ %.0116, %419 ], [ %.0116, %405 ], [ %.0116, %404 ], [ %.0116, %403 ], [ %.0116, %402 ], [ %.0116, %401 ], [ %.0116, %399 ], [ %.0116, %396 ], [ %.0116, %395 ], [ %.0116, %385 ], [ %.0116, %375 ], [ %.0116, %373 ], [ %.0116, %369 ], [ %.0116, %368 ], [ %.0116, %365 ], [ %.0116, %354 ], [ %.0116, %353 ], [ %.0116, %351 ], [ %.0116, %350 ], [ %.0116, %349 ], [ %.0116, %348 ], [ %.0116, %346 ], [ %.0116, %345 ], [ %.0116, %344 ], [ %.0116, %321 ], [ %.0116, %311 ], [ %.0116, %309 ], [ %.0116, %294 ], [ %.0116, %284 ], [ %.0116, %281 ], [ %.0116, %279 ], [ %.0116, %277 ], [ %.0116, %276 ], [ %.0116, %262 ], [ %.0116, %256 ], [ %.0116, %254 ], [ %.0116, %242 ], [ %.0116, %232 ], [ %.0116, %230 ], [ %.0116, %229 ], [ %.0116, %222 ], [ %.0116, %219 ], [ %.0116, %218 ], [ %.0116, %215 ], [ %.0116, %214 ], [ %213, %212 ], [ %.0116, %211 ], [ %.0116, %209 ], [ %.0116, %208 ], [ %.0116, %207 ], [ %.0116, %184 ], [ %.0116, %174 ], [ %.0116, %165 ], [ %.0116, %162 ], [ %.0116, %161 ], [ %.0116, %159 ], [ %.0116, %147 ], [ %.0116, %137 ], [ 1, %136 ], [ %.0116, %134 ], [ %.0116, %131 ], [ %.0116, %128 ], [ %.0116, %126 ], [ %.0116, %125 ], [ %.0116, %115 ], [ %.0116, %105 ], [ %.0116, %103 ], [ %.0116, %102 ], [ %.0116, %101 ], [ %.0116, %100 ], [ %.0116, %98 ], [ %.0116, %83 ], [ %.0116, %73 ], [ %.0116, %72 ], [ %.0116, %62 ], [ %.0116, %52 ], [ %.0116, %45 ], [ %.0116, %42 ], [ %.0116, %41 ], [ %.0116, %38 ], [ %.0116, %37 ], [ %.0116, %36 ], [ %.0116, %26 ], [ %.0116, %16 ], [ %.0116, %12 ], [ %.0116, %9 ]
  %.0114.be = phi i32 [ %.0114, %8 ], [ %.0114, %435 ], [ %.0114, %421 ], [ %.0114, %420 ], [ %.0114, %419 ], [ %.0114, %405 ], [ %.0114, %404 ], [ %.0114, %403 ], [ %.0114, %402 ], [ %.0114, %401 ], [ %.0114, %399 ], [ %.0114, %396 ], [ %.0114, %395 ], [ %.0114, %385 ], [ %.0114, %375 ], [ %.0114, %373 ], [ %.0114, %369 ], [ %.0114, %368 ], [ %.0114, %365 ], [ %.0114, %354 ], [ %.0114, %353 ], [ %.0114, %351 ], [ %.0114, %350 ], [ %.0114, %349 ], [ %.0114, %348 ], [ %.0114, %346 ], [ %.0114, %345 ], [ %.0114, %344 ], [ %.0114, %321 ], [ %.0114, %311 ], [ %.0114, %309 ], [ %.0114, %294 ], [ %.0114, %284 ], [ %.0114, %281 ], [ %.0114, %279 ], [ %.0114, %277 ], [ %.0114, %276 ], [ %.0114, %262 ], [ %.0114, %256 ], [ %.0114, %254 ], [ %.0114, %242 ], [ %.0114, %232 ], [ %.0114, %230 ], [ %.0114, %229 ], [ %.0114, %222 ], [ %.0114, %219 ], [ %.0114, %218 ], [ %.0114, %215 ], [ %.0114, %214 ], [ %.0114, %212 ], [ %.0114, %211 ], [ %210, %209 ], [ %.0114, %208 ], [ %.0114, %207 ], [ %.0114, %184 ], [ %.0114, %174 ], [ %.0114, %165 ], [ %.0114, %162 ], [ 1, %161 ], [ %.0114, %159 ], [ %.0114, %147 ], [ %.0114, %137 ], [ %.0114, %136 ], [ %.0114, %134 ], [ %.0114, %131 ], [ %.0114, %128 ], [ %.0114, %126 ], [ %.0114, %125 ], [ %.0114, %115 ], [ %.0114, %105 ], [ %.0114, %103 ], [ %.0114, %102 ], [ %.0114, %101 ], [ %.0114, %100 ], [ %.0114, %98 ], [ %.0114, %83 ], [ %.0114, %73 ], [ %.0114, %72 ], [ %.0114, %62 ], [ %.0114, %52 ], [ %.0114, %45 ], [ %.0114, %42 ], [ %.0114, %41 ], [ %.0114, %38 ], [ %.0114, %37 ], [ %.0114, %36 ], [ %.0114, %26 ], [ %.0114, %16 ], [ %.0114, %12 ], [ %.0114, %9 ]
  %.0112.be = phi i32 [ %.0112, %8 ], [ %.0112, %435 ], [ %.0112, %421 ], [ %.0112, %420 ], [ %.0112, %419 ], [ %.0112, %405 ], [ %.0112, %404 ], [ %.0112, %403 ], [ %.0112, %402 ], [ %.0112, %401 ], [ %.0112, %399 ], [ %.0112, %396 ], [ %.0112, %395 ], [ %.0112, %385 ], [ %.0112, %375 ], [ %.0112, %373 ], [ %.0112, %369 ], [ %.0112, %368 ], [ %.0112, %365 ], [ %.0112, %354 ], [ %.0112, %353 ], [ %352, %351 ], [ %.0112, %350 ], [ %.0112, %349 ], [ %.0112, %348 ], [ %.0112, %346 ], [ %.0112, %345 ], [ %.0112, %344 ], [ %.0112, %321 ], [ %.0112, %311 ], [ %.0112, %309 ], [ %.0112, %294 ], [ %.0112, %284 ], [ %.0112, %281 ], [ %.0112, %279 ], [ %.0112, %277 ], [ %.0112, %276 ], [ %.0112, %262 ], [ %.0112, %256 ], [ %.0112, %254 ], [ %.0112, %242 ], [ %.0112, %232 ], [ %.0112, %230 ], [ %.0112, %229 ], [ %.0112, %222 ], [ %.0112, %219 ], [ %.0112, %218 ], [ %.0112, %215 ], [ 1, %214 ], [ %.0112, %212 ], [ %.0112, %211 ], [ %.0112, %209 ], [ %.0112, %208 ], [ %.0112, %207 ], [ %.0112, %184 ], [ %.0112, %174 ], [ %.0112, %165 ], [ %.0112, %162 ], [ %.0112, %161 ], [ %.0112, %159 ], [ %.0112, %147 ], [ %.0112, %137 ], [ %.0112, %136 ], [ %.0112, %134 ], [ %.0112, %131 ], [ %.0112, %128 ], [ %.0112, %126 ], [ %.0112, %125 ], [ %.0112, %115 ], [ %.0112, %105 ], [ %.0112, %103 ], [ %.0112, %102 ], [ %.0112, %101 ], [ %.0112, %100 ], [ %.0112, %98 ], [ %.0112, %83 ], [ %.0112, %73 ], [ %.0112, %72 ], [ %.0112, %62 ], [ %.0112, %52 ], [ %.0112, %45 ], [ %.0112, %42 ], [ %.0112, %41 ], [ %.0112, %38 ], [ %.0112, %37 ], [ %.0112, %36 ], [ %.0112, %26 ], [ %.0112, %16 ], [ %.0112, %12 ], [ %.0112, %9 ]
  %.0110.be = phi i32 [ %.0110, %8 ], [ %.0110, %435 ], [ %.0110, %421 ], [ %.0110, %420 ], [ %.0110, %419 ], [ %.0110, %405 ], [ %.0110, %404 ], [ %.0110, %403 ], [ %.0110, %402 ], [ %.0110, %401 ], [ %.0110, %399 ], [ %.0110, %396 ], [ %.0110, %395 ], [ %.0110, %385 ], [ %.0110, %375 ], [ %.0110, %373 ], [ %.0110, %369 ], [ %.0110, %368 ], [ %.0110, %365 ], [ %.0110, %354 ], [ %.0110, %353 ], [ %.0110, %351 ], [ %.0110, %350 ], [ %.neg, %349 ], [ %.0110, %348 ], [ %.0110, %346 ], [ %.0110, %345 ], [ %.0110, %344 ], [ %.0110, %321 ], [ %.0110, %311 ], [ %.0110, %309 ], [ %.0110, %294 ], [ %.0110, %284 ], [ %.0110, %281 ], [ %.0110, %279 ], [ %.0110, %277 ], [ %.0110, %276 ], [ %.0110, %262 ], [ %.0110, %256 ], [ %.0110, %254 ], [ %.0110, %242 ], [ %.0110, %232 ], [ %.0110, %230 ], [ %.0110, %229 ], [ %.0110, %222 ], [ %.0110, %219 ], [ 1, %218 ], [ %.0110, %215 ], [ %.0110, %214 ], [ %.0110, %212 ], [ %.0110, %211 ], [ %.0110, %209 ], [ %.0110, %208 ], [ %.0110, %207 ], [ %.0110, %184 ], [ %.0110, %174 ], [ %.0110, %165 ], [ %.0110, %162 ], [ %.0110, %161 ], [ %.0110, %159 ], [ %.0110, %147 ], [ %.0110, %137 ], [ %.0110, %136 ], [ %.0110, %134 ], [ %.0110, %131 ], [ %.0110, %128 ], [ %.0110, %126 ], [ %.0110, %125 ], [ %.0110, %115 ], [ %.0110, %105 ], [ %.0110, %103 ], [ %.0110, %102 ], [ %.0110, %101 ], [ %.0110, %100 ], [ %.0110, %98 ], [ %.0110, %83 ], [ %.0110, %73 ], [ %.0110, %72 ], [ %.0110, %62 ], [ %.0110, %52 ], [ %.0110, %45 ], [ %.0110, %42 ], [ %.0110, %41 ], [ %.0110, %38 ], [ %.0110, %37 ], [ %.0110, %36 ], [ %.0110, %26 ], [ %.0110, %16 ], [ %.0110, %12 ], [ %.0110, %9 ]
  %.0108.be = phi i32 [ %.0108, %8 ], [ %.0108, %435 ], [ %.0108, %421 ], [ %.0108, %420 ], [ %.0108, %419 ], [ %.0108, %405 ], [ %.0108, %404 ], [ %.0108, %403 ], [ %.0108, %402 ], [ %.0108, %401 ], [ %.0108, %399 ], [ %.0108, %396 ], [ %.0108, %395 ], [ %.0108, %385 ], [ %.0108, %375 ], [ %.0108, %373 ], [ %.0108, %369 ], [ %.0108, %368 ], [ %.0108, %365 ], [ %.0108, %354 ], [ %.0108, %353 ], [ %.0108, %351 ], [ %.0108, %350 ], [ %.0108, %349 ], [ %.0108, %348 ], [ %.0108, %346 ], [ %.0108, %345 ], [ %.0108, %344 ], [ %.0108, %321 ], [ %.0108, %311 ], [ %.0108, %309 ], [ %.0108, %294 ], [ %.0108, %284 ], [ %.0108, %281 ], [ %.0108, %279 ], [ %278, %277 ], [ %.0108, %276 ], [ %.0108, %262 ], [ %.0108, %256 ], [ %.0108, %254 ], [ %.0108, %242 ], [ %.0108, %232 ], [ %231, %230 ], [ %.0108, %229 ], [ %.0108, %222 ], [ %.0108, %219 ], [ %.0108, %218 ], [ %.0108, %215 ], [ %.0108, %214 ], [ %.0108, %212 ], [ %.0108, %211 ], [ %.0108, %209 ], [ %.0108, %208 ], [ %.0108, %207 ], [ %.0108, %184 ], [ %.0108, %174 ], [ %.0108, %165 ], [ %.0108, %162 ], [ %.0108, %161 ], [ %.0108, %159 ], [ %.0108, %147 ], [ %.0108, %137 ], [ %.0108, %136 ], [ %.0108, %134 ], [ %.0108, %131 ], [ %.0108, %128 ], [ %.0108, %126 ], [ %.0108, %125 ], [ %.0108, %115 ], [ %.0108, %105 ], [ %.0108, %103 ], [ %.0108, %102 ], [ %.0108, %101 ], [ %.0108, %100 ], [ %.0108, %98 ], [ %.0108, %83 ], [ %.0108, %73 ], [ %.0108, %72 ], [ %.0108, %62 ], [ %.0108, %52 ], [ %.0108, %45 ], [ %.0108, %42 ], [ %.0108, %41 ], [ %.0108, %38 ], [ %.0108, %37 ], [ %.0108, %36 ], [ %.0108, %26 ], [ %.0108, %16 ], [ %.0108, %12 ], [ %.0108, %9 ]
  %.0106.be = phi i32 [ %.0106, %8 ], [ %.0106, %435 ], [ %.0106, %421 ], [ %.0106, %420 ], [ %.0106, %419 ], [ %.0106, %405 ], [ %.0106, %404 ], [ %.0106, %403 ], [ %.0106, %402 ], [ %.0106, %401 ], [ %.0106, %399 ], [ %.0106, %396 ], [ %.0106, %395 ], [ %.0106, %385 ], [ %.0106, %375 ], [ %.0106, %373 ], [ %.0106, %369 ], [ %.0106, %368 ], [ %.0106, %365 ], [ %.0106, %354 ], [ %.0106, %353 ], [ %.0106, %351 ], [ %.0106, %350 ], [ %.0106, %349 ], [ %.0106, %348 ], [ %347, %346 ], [ %.0106, %345 ], [ %.0106, %344 ], [ %.0106, %321 ], [ %.0106, %311 ], [ %.0106, %309 ], [ %.0106, %294 ], [ %.0106, %284 ], [ %.0106, %281 ], [ %280, %279 ], [ %.0106, %277 ], [ %.0106, %276 ], [ %.0106, %262 ], [ %.0106, %256 ], [ %.0106, %254 ], [ %.0106, %242 ], [ %.0106, %232 ], [ %.0106, %230 ], [ %.0106, %229 ], [ %.0106, %222 ], [ %.0106, %219 ], [ %.0106, %218 ], [ %.0106, %215 ], [ %.0106, %214 ], [ %.0106, %212 ], [ %.0106, %211 ], [ %.0106, %209 ], [ %.0106, %208 ], [ %.0106, %207 ], [ %.0106, %184 ], [ %.0106, %174 ], [ %.0106, %165 ], [ %.0106, %162 ], [ %.0106, %161 ], [ %.0106, %159 ], [ %.0106, %147 ], [ %.0106, %137 ], [ %.0106, %136 ], [ %.0106, %134 ], [ %.0106, %131 ], [ %.0106, %128 ], [ %.0106, %126 ], [ %.0106, %125 ], [ %.0106, %115 ], [ %.0106, %105 ], [ %.0106, %103 ], [ %.0106, %102 ], [ %.0106, %101 ], [ %.0106, %100 ], [ %.0106, %98 ], [ %.0106, %83 ], [ %.0106, %73 ], [ %.0106, %72 ], [ %.0106, %62 ], [ %.0106, %52 ], [ %.0106, %45 ], [ %.0106, %42 ], [ %.0106, %41 ], [ %.0106, %38 ], [ %.0106, %37 ], [ %.0106, %36 ], [ %.0106, %26 ], [ %.0106, %16 ], [ %.0106, %12 ], [ %.0106, %9 ]
  %.0104.be = phi i32 [ %.0104, %8 ], [ %.0104, %435 ], [ %.0104, %421 ], [ %.0104, %420 ], [ %.0104, %419 ], [ %.0104, %405 ], [ %.0104, %404 ], [ %.0104, %403 ], [ %.0104, %402 ], [ %.0104, %401 ], [ %.0104, %399 ], [ %.0104, %396 ], [ %.0104, %395 ], [ %.0104, %385 ], [ %.0104, %375 ], [ %374, %373 ], [ %.0104, %369 ], [ %.0104, %368 ], [ %.0104, %365 ], [ 0, %354 ], [ %.0104, %353 ], [ %.0104, %351 ], [ %.0104, %350 ], [ %.0104, %349 ], [ %.0104, %348 ], [ %.0104, %346 ], [ %.0104, %345 ], [ %.0104, %344 ], [ %.0104, %321 ], [ %.0104, %311 ], [ %.0104, %309 ], [ %.0104, %294 ], [ %.0104, %284 ], [ %.0104, %281 ], [ %.0104, %279 ], [ %.0104, %277 ], [ %.0104, %276 ], [ %.0104, %262 ], [ %.0104, %256 ], [ %.0104, %254 ], [ %.0104, %242 ], [ %.0104, %232 ], [ %.0104, %230 ], [ %.0104, %229 ], [ %.0104, %222 ], [ %.0104, %219 ], [ %.0104, %218 ], [ %.0104, %215 ], [ %.0104, %214 ], [ %.0104, %212 ], [ %.0104, %211 ], [ %.0104, %209 ], [ %.0104, %208 ], [ %.0104, %207 ], [ %.0104, %184 ], [ %.0104, %174 ], [ %.0104, %165 ], [ %.0104, %162 ], [ %.0104, %161 ], [ %.0104, %159 ], [ %.0104, %147 ], [ %.0104, %137 ], [ %.0104, %136 ], [ %.0104, %134 ], [ %.0104, %131 ], [ %.0104, %128 ], [ %.0104, %126 ], [ %.0104, %125 ], [ %.0104, %115 ], [ %.0104, %105 ], [ %.0104, %103 ], [ %.0104, %102 ], [ %.0104, %101 ], [ %.0104, %100 ], [ %.0104, %98 ], [ %.0104, %83 ], [ %.0104, %73 ], [ %.0104, %72 ], [ %.0104, %62 ], [ %.0104, %52 ], [ %.0104, %45 ], [ %.0104, %42 ], [ %.0104, %41 ], [ %.0104, %38 ], [ %.0104, %37 ], [ %.0104, %36 ], [ %.0104, %26 ], [ %.0104, %16 ], [ %.0104, %12 ], [ %.0104, %9 ]
  %.0102.be = phi i32 [ %.0102, %8 ], [ %.0102, %435 ], [ %.0102, %421 ], [ %.0102, %420 ], [ %.0102, %419 ], [ %.0102, %405 ], [ %.0102, %404 ], [ %.0102, %403 ], [ %.0102, %402 ], [ %.0102, %401 ], [ %.0102, %399 ], [ %.0102, %396 ], [ %.0102, %395 ], [ %.0102, %385 ], [ %.0102, %375 ], [ %.0102, %373 ], [ %371, %369 ], [ %.0102, %368 ], [ %.0102, %365 ], [ %.0102, %354 ], [ %.0102, %353 ], [ %.0102, %351 ], [ %.0102, %350 ], [ %.0102, %349 ], [ %.0102, %348 ], [ %.0102, %346 ], [ %.0102, %345 ], [ %.0102, %344 ], [ %.0102, %321 ], [ %.0102, %311 ], [ %.0102, %309 ], [ %.0102, %294 ], [ %.0102, %284 ], [ %.0102, %281 ], [ %.0102, %279 ], [ %.0102, %277 ], [ %.0102, %276 ], [ %.0102, %262 ], [ %.0102, %256 ], [ %.0102, %254 ], [ %.0102, %242 ], [ %.0102, %232 ], [ %.0102, %230 ], [ %.0102, %229 ], [ %.0102, %222 ], [ %.0102, %219 ], [ %.0102, %218 ], [ %.0102, %215 ], [ %.0102, %214 ], [ %.0102, %212 ], [ %.0102, %211 ], [ %.0102, %209 ], [ %.0102, %208 ], [ %.0102, %207 ], [ %.0102, %184 ], [ %.0102, %174 ], [ %.0102, %165 ], [ %.0102, %162 ], [ %.0102, %161 ], [ %.0102, %159 ], [ %.0102, %147 ], [ %.0102, %137 ], [ %.0102, %136 ], [ %.0102, %134 ], [ %.0102, %131 ], [ %.0102, %128 ], [ %.0102, %126 ], [ %.0102, %125 ], [ %.0102, %115 ], [ %.0102, %105 ], [ %.0102, %103 ], [ %.0102, %102 ], [ %.0102, %101 ], [ %.0102, %100 ], [ %.0102, %98 ], [ %.0102, %83 ], [ %.0102, %73 ], [ %.0102, %72 ], [ %.0102, %62 ], [ %.0102, %52 ], [ %.0102, %45 ], [ %.0102, %42 ], [ %.0102, %41 ], [ %.0102, %38 ], [ %.0102, %37 ], [ %.0102, %36 ], [ %.0102, %26 ], [ %.0102, %16 ], [ %.0102, %12 ], [ %.0102, %9 ]
  %.0.be = phi i32 [ %.0, %8 ], [ 1154688110, %435 ], [ -116325019, %421 ], [ 1077307090, %420 ], [ 433050550, %419 ], [ 669689866, %405 ], [ 2093786825, %404 ], [ -1150927131, %403 ], [ 839039196, %402 ], [ 1014906406, %401 ], [ -237529761, %399 ], [ -1401167591, %396 ], [ 1703247782, %395 ], [ %394, %385 ], [ %384, %375 ], [ 1386622087, %373 ], [ %372, %369 ], [ 1386622087, %368 ], [ %367, %365 ], [ 1703247782, %354 ], [ 814568162, %353 ], [ 1976385321, %351 ], [ -1206553411, %350 ], [ 1861577757, %349 ], [ 189076038, %348 ], [ 1257226, %346 ], [ -749438120, %345 ], [ 328239296, %344 ], [ %343, %321 ], [ %320, %311 ], [ %310, %309 ], [ %308, %294 ], [ %293, %284 ], [ %283, %281 ], [ 1257226, %279 ], [ 243391654, %277 ], [ -1566078728, %276 ], [ 1586895542, %262 ], [ %261, %256 ], [ %255, %254 ], [ %253, %242 ], [ %241, %232 ], [ 243391654, %230 ], [ 189076038, %229 ], [ %228, %222 ], [ %221, %219 ], [ 1861577757, %218 ], [ %217, %215 ], [ 1976385321, %214 ], [ 144013169, %212 ], [ -606878994, %211 ], [ 1227418988, %209 ], [ -2102771589, %208 ], [ 1557945273, %207 ], [ %206, %184 ], [ %183, %174 ], [ %173, %165 ], [ %164, %162 ], [ 1227418988, %161 ], [ %160, %159 ], [ %158, %147 ], [ %146, %137 ], [ 144013169, %136 ], [ -1401167591, %134 ], [ %133, %131 ], [ %130, %128 ], [ 1313965292, %126 ], [ -546190603, %125 ], [ %124, %115 ], [ %114, %105 ], [ -1114529740, %103 ], [ 597021476, %102 ], [ 1520711265, %101 ], [ -489380800, %100 ], [ %99, %98 ], [ %97, %83 ], [ %82, %73 ], [ 1520711265, %72 ], [ %71, %62 ], [ %61, %52 ], [ %51, %45 ], [ %44, %42 ], [ -1114529740, %41 ], [ %40, %38 ], [ 1313965292, %37 ], [ 413777893, %36 ], [ %35, %26 ], [ %25, %16 ], [ 1850227481, %12 ], [ %11, %9 ]
  br label %8

9:                                                ; preds = %8
  %10 = load i32, i32* %5, align 4
  %.not135 = icmp sgt i32 %.0122, %10
  %11 = select i1 %.not135, i32 -1751171648, i32 -24303075
  br label %.backedge

12:                                               ; preds = %8
  %13 = sext i32 %.0122 to i64
  %14 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @s, i64 0, i64 %13, i64 1
  %15 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %14)
  br label %.backedge

16:                                               ; preds = %8
  %17 = load i32, i32* @x.4, align 4
  %18 = load i32, i32* @y.5, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 -237529761, i32 1167657028
  br label %.backedge

26:                                               ; preds = %8
  %.neg134 = add i32 %.0122, 1
  %27 = load i32, i32* @x.4, align 4
  %28 = load i32, i32* @y.5, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -41700573, i32 1167657028
  br label %.backedge

36:                                               ; preds = %8
  br label %.backedge

37:                                               ; preds = %8
  br label %.backedge

38:                                               ; preds = %8
  %39 = load i32, i32* %5, align 4
  %.not133 = icmp sgt i32 %.0120, %39
  %40 = select i1 %.not133, i32 1558541572, i32 -107179496
  br label %.backedge

41:                                               ; preds = %8
  br label %.backedge

42:                                               ; preds = %8
  %43 = load i32, i32* %6, align 4
  %.not132 = icmp sgt i32 %.0118, %43
  %44 = select i1 %.not132, i32 2046367705, i32 -822522358
  br label %.backedge

45:                                               ; preds = %8
  %46 = sext i32 %.0120 to i64
  %47 = sext i32 %.0118 to i64
  %48 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @s, i64 0, i64 %46, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 83
  %51 = select i1 %50, i32 45469250, i32 1915243062
  br label %.backedge

52:                                               ; preds = %8
  %53 = load i32, i32* @x.4, align 4
  %54 = load i32, i32* @y.5, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 1014906406, i32 -1473489385
  br label %.backedge

62:                                               ; preds = %8
  %63 = load i32, i32* @x.4, align 4
  %64 = load i32, i32* @y.5, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 699776246, i32 -1473489385
  br label %.backedge

72:                                               ; preds = %8
  br label %.backedge

73:                                               ; preds = %8
  %74 = load i32, i32* @x.4, align 4
  %75 = load i32, i32* @y.5, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 839039196, i32 -1310201764
  br label %.backedge

83:                                               ; preds = %8
  %84 = sext i32 %.0120 to i64
  %85 = sext i32 %.0118 to i64
  %86 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @s, i64 0, i64 %84, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 84
  store i1 %88, i1* %4, align 1
  %89 = load i32, i32* @x.4, align 4
  %90 = load i32, i32* @y.5, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 763241953, i32 -1310201764
  br label %.backedge

98:                                               ; preds = %8
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %99 = select i1 %.0..0..0., i32 339838296, i32 -489380800
  br label %.backedge

100:                                              ; preds = %8
  br label %.backedge

101:                                              ; preds = %8
  br label %.backedge

102:                                              ; preds = %8
  br label %.backedge

103:                                              ; preds = %8
  %104 = add i32 %.0118, 1
  br label %.backedge

105:                                              ; preds = %8
  %106 = load i32, i32* @x.4, align 4
  %107 = load i32, i32* @y.5, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 -1150927131, i32 -1875572469
  br label %.backedge

115:                                              ; preds = %8
  %116 = load i32, i32* @x.4, align 4
  %117 = load i32, i32* @y.5, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 -432277000, i32 -1875572469
  br label %.backedge

125:                                              ; preds = %8
  br label %.backedge

126:                                              ; preds = %8
  %127 = add i32 %.0120, 1
  br label %.backedge

128:                                              ; preds = %8
  %129 = icmp eq i32 %.sroa.090.0, %.sroa.492.0
  %130 = select i1 %129, i32 751160988, i32 -749258576
  br label %.backedge

131:                                              ; preds = %8
  %132 = icmp eq i32 %.sroa.0.0, %.sroa.4.0
  %133 = select i1 %132, i32 751160988, i32 -1303248630
  br label %.backedge

134:                                              ; preds = %8
  %135 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

136:                                              ; preds = %8
  store i32 2, i32* @tot, align 4
  br label %.backedge

137:                                              ; preds = %8
  %138 = load i32, i32* @x.4, align 4
  %139 = load i32, i32* @y.5, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 2093786825, i32 1493032991
  br label %.backedge

147:                                              ; preds = %8
  %148 = load i32, i32* %5, align 4
  %149 = icmp sle i32 %.0116, %148
  store i1 %149, i1* %3, align 1
  %150 = load i32, i32* @x.4, align 4
  %151 = load i32, i32* @y.5, align 4
  %152 = add i32 %150, -1
  %153 = mul i32 %152, %150
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %156, %155
  %158 = select i1 %157, i32 -1746869897, i32 1493032991
  br label %.backedge

159:                                              ; preds = %8
  %.0..0..0.99 = load volatile i1, i1* %3, align 1
  %160 = select i1 %.0..0..0.99, i32 726482210, i32 1646088368
  br label %.backedge

161:                                              ; preds = %8
  br label %.backedge

162:                                              ; preds = %8
  %163 = load i32, i32* %6, align 4
  %.not131 = icmp sgt i32 %.0114, %163
  %164 = select i1 %.not131, i32 92981591, i32 186829363
  br label %.backedge

165:                                              ; preds = %8
  %166 = load i32, i32* @ct, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* @ct, align 4
  %168 = sext i32 %.0116 to i64
  %169 = sext i32 %.0114 to i64
  %170 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %168, i64 %169
  store i32 %167, i32* %170, align 4
  %171 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @s, i64 0, i64 %168, i64 %169
  %172 = load i8, i8* %171, align 1
  %.not130 = icmp eq i8 %172, 46
  %173 = select i1 %.not130, i32 1557945273, i32 849252172
  br label %.backedge

174:                                              ; preds = %8
  %175 = load i32, i32* @x.4, align 4
  %176 = load i32, i32* @y.5, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 669689866, i32 966921250
  br label %.backedge

184:                                              ; preds = %8
  %185 = sext i32 %.0116 to i64
  %186 = sext i32 %.0114 to i64
  %187 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %185, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = load i32, i32* %5, align 4
  %190 = load i32, i32* %6, align 4
  %191 = mul nsw i32 %190, %189
  %192 = add i32 %191, %188
  call void @_Z3addiii(i32 %188, i32 %192, i32 1)
  %193 = load i32, i32* %187, align 4
  %194 = load i32, i32* %5, align 4
  %195 = load i32, i32* %6, align 4
  %196 = mul nsw i32 %195, %194
  %197 = add i32 %196, %193
  call void @_Z3addiii(i32 %197, i32 %193, i32 0)
  %198 = load i32, i32* @x.4, align 4
  %199 = load i32, i32* @y.5, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 213299375, i32 966921250
  br label %.backedge

207:                                              ; preds = %8
  br label %.backedge

208:                                              ; preds = %8
  br label %.backedge

209:                                              ; preds = %8
  %210 = add i32 %.0114, 1
  br label %.backedge

211:                                              ; preds = %8
  br label %.backedge

212:                                              ; preds = %8
  %213 = add i32 %.0116, 1
  br label %.backedge

214:                                              ; preds = %8
  br label %.backedge

215:                                              ; preds = %8
  %216 = load i32, i32* %5, align 4
  %.not129 = icmp sgt i32 %.0112, %216
  %217 = select i1 %.not129, i32 1228793387, i32 -1576714837
  br label %.backedge

218:                                              ; preds = %8
  br label %.backedge

219:                                              ; preds = %8
  %220 = load i32, i32* %6, align 4
  %.not128 = icmp sgt i32 %.0110, %220
  %221 = select i1 %.not128, i32 -665063864, i32 -265040276
  br label %.backedge

222:                                              ; preds = %8
  %223 = sext i32 %.0112 to i64
  %224 = sext i32 %.0110 to i64
  %225 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @s, i64 0, i64 %223, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = icmp eq i8 %226, 46
  %228 = select i1 %227, i32 -113786669, i32 2119151101
  br label %.backedge

229:                                              ; preds = %8
  br label %.backedge

230:                                              ; preds = %8
  %231 = add i32 %.0112, 1
  br label %.backedge

232:                                              ; preds = %8
  %233 = load i32, i32* @x.4, align 4
  %234 = load i32, i32* @y.5, align 4
  %235 = add i32 %233, -1
  %236 = mul i32 %235, %233
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %239, %238
  %241 = select i1 %240, i32 433050550, i32 -875570205
  br label %.backedge

242:                                              ; preds = %8
  %243 = load i32, i32* %5, align 4
  %244 = icmp sle i32 %.0108, %243
  store i1 %244, i1* %2, align 1
  %245 = load i32, i32* @x.4, align 4
  %246 = load i32, i32* @y.5, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 -438185419, i32 -875570205
  br label %.backedge

254:                                              ; preds = %8
  %.0..0..0.100 = load volatile i1, i1* %2, align 1
  %255 = select i1 %.0..0..0.100, i32 1767263959, i32 -1137824698
  br label %.backedge

256:                                              ; preds = %8
  %257 = sext i32 %.0108 to i64
  %258 = sext i32 %.0110 to i64
  %259 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @s, i64 0, i64 %257, i64 %258
  %260 = load i8, i8* %259, align 1
  %.not127 = icmp eq i8 %260, 46
  %261 = select i1 %.not127, i32 1586895542, i32 -487555225
  br label %.backedge

262:                                              ; preds = %8
  %263 = sext i32 %.0112 to i64
  %264 = sext i32 %.0110 to i64
  %265 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %263, i64 %264
  %266 = load i32, i32* %265, align 4
  %267 = load i32, i32* @ct, align 4
  %268 = add i32 %267, %266
  %269 = sext i32 %.0108 to i64
  %270 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %269, i64 %264
  %271 = load i32, i32* %270, align 4
  call void @_Z3addiii(i32 %268, i32 %271, i32 1)
  %272 = load i32, i32* %270, align 4
  %273 = load i32, i32* @ct, align 4
  %274 = add i32 %273, %272
  %275 = load i32, i32* %265, align 4
  call void @_Z3addiii(i32 %274, i32 %275, i32 1)
  br label %.backedge

276:                                              ; preds = %8
  br label %.backedge

277:                                              ; preds = %8
  %278 = add i32 %.0108, 1
  br label %.backedge

279:                                              ; preds = %8
  %280 = add i32 %.0110, 1
  br label %.backedge

281:                                              ; preds = %8
  %282 = load i32, i32* %6, align 4
  %.not126 = icmp sgt i32 %.0106, %282
  %283 = select i1 %.not126, i32 -278179484, i32 -2084878327
  br label %.backedge

284:                                              ; preds = %8
  %285 = load i32, i32* @x.4, align 4
  %286 = load i32, i32* @y.5, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 1077307090, i32 1836136159
  br label %.backedge

294:                                              ; preds = %8
  %295 = sext i32 %.0112 to i64
  %296 = sext i32 %.0106 to i64
  %297 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @s, i64 0, i64 %295, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = icmp ne i8 %298, 46
  store i1 %299, i1* %1, align 1
  %300 = load i32, i32* @x.4, align 4
  %301 = load i32, i32* @y.5, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 299276227, i32 1836136159
  br label %.backedge

309:                                              ; preds = %8
  %.0..0..0.101 = load volatile i1, i1* %1, align 1
  %310 = select i1 %.0..0..0.101, i32 -1360326414, i32 328239296
  br label %.backedge

311:                                              ; preds = %8
  %312 = load i32, i32* @x.4, align 4
  %313 = load i32, i32* @y.5, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 -116325019, i32 -1258935120
  br label %.backedge

321:                                              ; preds = %8
  %322 = sext i32 %.0112 to i64
  %323 = sext i32 %.0110 to i64
  %324 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %322, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = load i32, i32* @ct, align 4
  %327 = add i32 %326, %325
  %328 = sext i32 %.0106 to i64
  %329 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %322, i64 %328
  %330 = load i32, i32* %329, align 4
  call void @_Z3addiii(i32 %327, i32 %330, i32 1)
  %331 = load i32, i32* %329, align 4
  %332 = load i32, i32* @ct, align 4
  %333 = add i32 %332, %331
  %334 = load i32, i32* %324, align 4
  call void @_Z3addiii(i32 %333, i32 %334, i32 1)
  %335 = load i32, i32* @x.4, align 4
  %336 = load i32, i32* @y.5, align 4
  %337 = add i32 %335, -1
  %338 = mul i32 %337, %335
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %341, %340
  %343 = select i1 %342, i32 21673403, i32 -1258935120
  br label %.backedge

344:                                              ; preds = %8
  br label %.backedge

345:                                              ; preds = %8
  br label %.backedge

346:                                              ; preds = %8
  %347 = add i32 %.0106, 1
  br label %.backedge

348:                                              ; preds = %8
  br label %.backedge

349:                                              ; preds = %8
  %.neg = add i32 %.0110, 1
  br label %.backedge

350:                                              ; preds = %8
  br label %.backedge

351:                                              ; preds = %8
  %352 = add i32 %.0112, 1
  br label %.backedge

353:                                              ; preds = %8
  br label %.backedge

354:                                              ; preds = %8
  %355 = sext i32 %.sroa.0.0 to i64
  %356 = sext i32 %.sroa.090.0 to i64
  %357 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %355, i64 %356
  %358 = load i32, i32* %357, align 4
  %359 = load i32, i32* @ct, align 4
  %360 = add i32 %359, %358
  store i32 %360, i32* @S, align 4
  %361 = sext i32 %.sroa.4.0 to i64
  %362 = sext i32 %.sroa.492.0 to i64
  %363 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %361, i64 %362
  %364 = load i32, i32* %363, align 4
  store i32 %364, i32* @T, align 4
  br label %.backedge

365:                                              ; preds = %8
  %366 = call zeroext i1 @_Z3bfsv()
  %367 = select i1 %366, i32 -1387301317, i32 1148527769
  br label %.backedge

368:                                              ; preds = %8
  br label %.backedge

369:                                              ; preds = %8
  %370 = load i32, i32* @S, align 4
  %371 = call i32 @_Z5dinicii(i32 %370, i32 1000000000)
  %.not = icmp eq i32 %371, 0
  %372 = select i1 %.not, i32 567877051, i32 1783175693
  br label %.backedge

373:                                              ; preds = %8
  %374 = add i32 %.0102, %.0104
  br label %.backedge

375:                                              ; preds = %8
  %376 = load i32, i32* @x.4, align 4
  %377 = load i32, i32* @y.5, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 1154688110, i32 389760732
  br label %.backedge

385:                                              ; preds = %8
  %386 = load i32, i32* @x.4, align 4
  %387 = load i32, i32* @y.5, align 4
  %388 = add i32 %386, -1
  %389 = mul i32 %388, %386
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %392, %391
  %394 = select i1 %393, i32 -911716285, i32 389760732
  br label %.backedge

395:                                              ; preds = %8
  br label %.backedge

396:                                              ; preds = %8
  %397 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %.0104)
  br label %.backedge

398:                                              ; preds = %8
  ret i32 0

399:                                              ; preds = %8
  %400 = add i32 %.0122, 1
  br label %.backedge

401:                                              ; preds = %8
  br label %.backedge

402:                                              ; preds = %8
  br label %.backedge

403:                                              ; preds = %8
  br label %.backedge

404:                                              ; preds = %8
  br label %.backedge

405:                                              ; preds = %8
  %406 = sext i32 %.0116 to i64
  %407 = sext i32 %.0114 to i64
  %408 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %406, i64 %407
  %409 = load i32, i32* %408, align 4
  %410 = load i32, i32* %5, align 4
  %411 = load i32, i32* %6, align 4
  %412 = mul nsw i32 %411, %410
  %413 = add i32 %412, %409
  call void @_Z3addiii(i32 %409, i32 %413, i32 1)
  %414 = load i32, i32* %408, align 4
  %415 = load i32, i32* %5, align 4
  %416 = load i32, i32* %6, align 4
  %417 = mul nsw i32 %416, %415
  %418 = add i32 %417, %414
  call void @_Z3addiii(i32 %418, i32 %414, i32 0)
  br label %.backedge

419:                                              ; preds = %8
  br label %.backedge

420:                                              ; preds = %8
  br label %.backedge

421:                                              ; preds = %8
  %422 = sext i32 %.0112 to i64
  %423 = sext i32 %.0110 to i64
  %424 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %422, i64 %423
  %425 = load i32, i32* %424, align 4
  %426 = load i32, i32* @ct, align 4
  %427 = add i32 %426, %425
  %428 = sext i32 %.0106 to i64
  %429 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @id, i64 0, i64 %422, i64 %428
  %430 = load i32, i32* %429, align 4
  call void @_Z3addiii(i32 %427, i32 %430, i32 1)
  %431 = load i32, i32* %429, align 4
  %432 = load i32, i32* @ct, align 4
  %433 = add i32 %432, %431
  %434 = load i32, i32* %424, align 4
  call void @_Z3addiii(i32 %433, i32 %434, i32 1)
  br label %.backedge

435:                                              ; preds = %8
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define void @_Z3addiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #6 {
  %4 = load i32, i32* @tot, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @ver, i64 0, i64 %5
  store i32 %1, i32* %6, align 4
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds [20005 x i32], [20005 x i32]* @he, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @nex, i64 0, i64 %5
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @C, i64 0, i64 %5
  store i32 %2, i32* %11, align 4
  %12 = add i32 %4, 1
  store i32 %12, i32* @tot, align 4
  store i32 %4, i32* %8, align 4
  ret void
}

; Function Attrs: nofree noinline nounwind uwtable
define zeroext i1 @_Z3bfsv() local_unnamed_addr #7 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  store i32 0, i32* @l, align 4
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(80020) bitcast ([20005 x i32]* @d to i8*), i8 0, i64 80020, i1 false)
  %3 = load i32, i32* @S, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [20005 x i32], [20005 x i32]* @d, i64 0, i64 %4
  store i32 1, i32* %5, align 4
  store i32 1, i32* @r, align 4
  store i32 %3, i32* getelementptr inbounds ([20005 x i32], [20005 x i32]* @q, i64 0, i64 0), align 16
  %6 = load i32, i32* @x.8, align 4
  %7 = load i32, i32* @y.9, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 -1236814709, i32 1061339020
  %15 = select i1 %13, i32 -291967533, i32 1061339020
  %16 = select i1 %13, i32 -1454374245, i32 -51100088
  %17 = select i1 %13, i32 1669863448, i32 -51100088
  %18 = select i1 %13, i32 -1322651728, i32 -1828089632
  %19 = select i1 %13, i32 -840221593, i32 -1828089632
  %20 = load i32, i32* @T, align 4
  %21 = select i1 %13, i32 -1906265874, i32 615380073
  %22 = select i1 %13, i32 -2115745625, i32 615380073
  br label %23

23:                                               ; preds = %.backedge, %0
  %24 = phi i32 [ 1, %0 ], [ %.be, %.backedge ]
  %25 = phi i32 [ 0, %0 ], [ %.be27, %.backedge ]
  %26 = phi i32 [ 0, %0 ], [ %.be28, %.backedge ]
  %27 = phi i32 [ 1, %0 ], [ %.be29, %.backedge ]
  %.02226 = phi i1 [ undef, %0 ], [ %.02226.be, %.backedge ]
  %.022 = phi i1 [ undef, %0 ], [ %.022.be, %.backedge ]
  %.020 = phi i32 [ undef, %0 ], [ %.020.be, %.backedge ]
  %.018 = phi i32 [ undef, %0 ], [ %.018.be, %.backedge ]
  %.016 = phi i32 [ undef, %0 ], [ %.016.be, %.backedge ]
  %.0 = phi i32 [ -942663460, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -942663460, label %28
    i32 2113690499, label %31
    i32 -1831883752, label %39
    i32 -2115745625, label %40
    i32 -1906265874, label %42
    i32 -910178387, label %44
    i32 -470026843, label %49
    i32 298028179, label %57
    i32 -1304412389, label %69
    i32 4573501, label %70
    i32 1317684846, label %71
    i32 756563583, label %72
    i32 -840221593, label %73
    i32 -1322651728, label %74
    i32 -1377312956, label %75
    i32 1669863448, label %76
    i32 -1454374245, label %80
    i32 -1761994323, label %81
    i32 940439553, label %82
    i32 -1683171821, label %83
    i32 -291967533, label %84
    i32 -1236814709, label %85
    i32 615380073, label %86
    i32 -1828089632, label %87
    i32 -51100088, label %88
    i32 1061339020, label %92
  ]

.backedge:                                        ; preds = %23, %92, %88, %87, %86, %84, %83, %82, %81, %80, %76, %75, %74, %73, %72, %71, %70, %69, %57, %49, %44, %42, %40, %39, %31, %28
  %.be = phi i32 [ %24, %23 ], [ %24, %92 ], [ %24, %88 ], [ %24, %87 ], [ %24, %86 ], [ %24, %84 ], [ %24, %83 ], [ %24, %82 ], [ %24, %81 ], [ %24, %80 ], [ %24, %76 ], [ %24, %75 ], [ %24, %74 ], [ %24, %73 ], [ %24, %72 ], [ %24, %71 ], [ %24, %70 ], [ %24, %69 ], [ %64, %57 ], [ %24, %49 ], [ %24, %44 ], [ %24, %42 ], [ %24, %40 ], [ %24, %39 ], [ %24, %31 ], [ %24, %28 ]
  %.be27 = phi i32 [ %25, %23 ], [ %25, %92 ], [ %25, %88 ], [ %25, %87 ], [ %25, %86 ], [ %25, %84 ], [ %25, %83 ], [ %25, %82 ], [ %25, %81 ], [ %25, %80 ], [ %25, %76 ], [ %25, %75 ], [ %25, %74 ], [ %25, %73 ], [ %25, %72 ], [ %25, %71 ], [ %25, %70 ], [ %25, %69 ], [ %25, %57 ], [ %25, %49 ], [ %25, %44 ], [ %25, %42 ], [ %25, %40 ], [ %25, %39 ], [ %32, %31 ], [ %25, %28 ]
  %.be28 = phi i32 [ %26, %23 ], [ %26, %92 ], [ %26, %88 ], [ %26, %87 ], [ %26, %86 ], [ %26, %84 ], [ %26, %83 ], [ %26, %82 ], [ %26, %81 ], [ %26, %80 ], [ %26, %76 ], [ %26, %75 ], [ %26, %74 ], [ %26, %73 ], [ %26, %72 ], [ %26, %71 ], [ %26, %70 ], [ %26, %69 ], [ %26, %57 ], [ %26, %49 ], [ %26, %44 ], [ %26, %42 ], [ %26, %40 ], [ %26, %39 ], [ %32, %31 ], [ %25, %28 ]
  %.be29 = phi i32 [ %27, %23 ], [ %27, %92 ], [ %27, %88 ], [ %27, %87 ], [ %27, %86 ], [ %27, %84 ], [ %27, %83 ], [ %27, %82 ], [ %27, %81 ], [ %27, %80 ], [ %27, %76 ], [ %27, %75 ], [ %27, %74 ], [ %27, %73 ], [ %27, %72 ], [ %27, %71 ], [ %27, %70 ], [ %27, %69 ], [ %64, %57 ], [ %27, %49 ], [ %27, %44 ], [ %27, %42 ], [ %27, %40 ], [ %27, %39 ], [ %27, %31 ], [ %24, %28 ]
  %.02226.be = phi i1 [ %.02226, %23 ], [ %.02226, %92 ], [ %.02226, %88 ], [ %.02226, %87 ], [ %.02226, %86 ], [ %.022, %84 ], [ %.02226, %83 ], [ %.02226, %82 ], [ %.02226, %81 ], [ %.02226, %80 ], [ %.02226, %76 ], [ %.02226, %75 ], [ %.02226, %74 ], [ %.02226, %73 ], [ %.02226, %72 ], [ %.02226, %71 ], [ %.02226, %70 ], [ %.02226, %69 ], [ %.02226, %57 ], [ %.02226, %49 ], [ %.02226, %44 ], [ %.02226, %42 ], [ %.02226, %40 ], [ %.02226, %39 ], [ %.02226, %31 ], [ %.02226, %28 ]
  %.022.be = phi i1 [ %.022, %23 ], [ %.022, %92 ], [ %.022, %88 ], [ %.022, %87 ], [ %.022, %86 ], [ %.022, %84 ], [ %.022, %83 ], [ false, %82 ], [ %.022, %81 ], [ %.022, %80 ], [ %.022, %76 ], [ %.022, %75 ], [ %.022, %74 ], [ %.022, %73 ], [ %.022, %72 ], [ %.022, %71 ], [ %.022, %70 ], [ true, %69 ], [ %.022, %57 ], [ %.022, %49 ], [ %.022, %44 ], [ %.022, %42 ], [ %.022, %40 ], [ %.022, %39 ], [ %.022, %31 ], [ %.022, %28 ]
  %.020.be = phi i32 [ %.020, %23 ], [ %.020, %92 ], [ %.020, %88 ], [ %.020, %87 ], [ %.020, %86 ], [ %.020, %84 ], [ %.020, %83 ], [ %.020, %82 ], [ %.020, %81 ], [ %.020, %80 ], [ %.020, %76 ], [ %.020, %75 ], [ %.020, %74 ], [ %.020, %73 ], [ %.020, %72 ], [ %.020, %71 ], [ %.020, %70 ], [ %.020, %69 ], [ %.020, %57 ], [ %.020, %49 ], [ %.020, %44 ], [ %.020, %42 ], [ %.020, %40 ], [ %.020, %39 ], [ %35, %31 ], [ %.020, %28 ]
  %.018.be = phi i32 [ %.018, %23 ], [ %.018, %92 ], [ %91, %88 ], [ %.018, %87 ], [ %.018, %86 ], [ %.018, %84 ], [ %.018, %83 ], [ %.018, %82 ], [ %.018, %81 ], [ %.018, %80 ], [ %79, %76 ], [ %.018, %75 ], [ %.018, %74 ], [ %.018, %73 ], [ %.018, %72 ], [ %.018, %71 ], [ %.018, %70 ], [ %.018, %69 ], [ %.018, %57 ], [ %.018, %49 ], [ %.018, %44 ], [ %.018, %42 ], [ %.018, %40 ], [ %.018, %39 ], [ %38, %31 ], [ %.018, %28 ]
  %.016.be = phi i32 [ %.016, %23 ], [ %.016, %92 ], [ %.016, %88 ], [ %.016, %87 ], [ %.016, %86 ], [ %.016, %84 ], [ %.016, %83 ], [ %.016, %82 ], [ %.016, %81 ], [ %.016, %80 ], [ %.016, %76 ], [ %.016, %75 ], [ %.016, %74 ], [ %.016, %73 ], [ %.016, %72 ], [ %.016, %71 ], [ %.016, %70 ], [ %.016, %69 ], [ %.016, %57 ], [ %52, %49 ], [ %.016, %44 ], [ %.016, %42 ], [ %.016, %40 ], [ %.016, %39 ], [ %.016, %31 ], [ %.016, %28 ]
  %.0.be = phi i32 [ %.0, %23 ], [ -291967533, %92 ], [ 1669863448, %88 ], [ -840221593, %87 ], [ -2115745625, %86 ], [ %14, %84 ], [ %15, %83 ], [ -1683171821, %82 ], [ -942663460, %81 ], [ -1831883752, %80 ], [ %16, %76 ], [ %17, %75 ], [ -1377312956, %74 ], [ %18, %73 ], [ %19, %72 ], [ 756563583, %71 ], [ 1317684846, %70 ], [ -1683171821, %69 ], [ %68, %57 ], [ %56, %49 ], [ %48, %44 ], [ %43, %42 ], [ %21, %40 ], [ %22, %39 ], [ -1831883752, %31 ], [ %30, %28 ]
  br label %23

28:                                               ; preds = %23
  %29 = icmp slt i32 %25, %24
  %30 = select i1 %29, i32 2113690499, i32 940439553
  br label %.backedge

31:                                               ; preds = %23
  %32 = add i32 %26, 1
  store i32 %32, i32* @l, align 4
  %33 = sext i32 %26 to i64
  %34 = getelementptr inbounds [20005 x i32], [20005 x i32]* @q, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [20005 x i32], [20005 x i32]* @he, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  br label %.backedge

39:                                               ; preds = %23
  br label %.backedge

40:                                               ; preds = %23
  %41 = icmp ne i32 %.018, 0
  store i1 %41, i1* %2, align 1
  br label %.backedge

42:                                               ; preds = %23
  %.0..0..0.14 = load volatile i1, i1* %2, align 1
  %43 = select i1 %.0..0..0.14, i32 -910178387, i32 -1761994323
  br label %.backedge

44:                                               ; preds = %23
  %45 = sext i32 %.018 to i64
  %46 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @C, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %.not24 = icmp eq i32 %47, 0
  %48 = select i1 %.not24, i32 756563583, i32 -470026843
  br label %.backedge

49:                                               ; preds = %23
  %50 = sext i32 %.018 to i64
  %51 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @ver, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [20005 x i32], [20005 x i32]* @d, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4
  %.not = icmp eq i32 %55, 0
  %56 = select i1 %.not, i32 298028179, i32 1317684846
  br label %.backedge

57:                                               ; preds = %23
  %58 = sext i32 %.020 to i64
  %59 = getelementptr inbounds [20005 x i32], [20005 x i32]* @d, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, 1
  %62 = sext i32 %.016 to i64
  %63 = getelementptr inbounds [20005 x i32], [20005 x i32]* @d, i64 0, i64 %62
  store i32 %61, i32* %63, align 4
  %64 = add i32 %27, 1
  store i32 %64, i32* @r, align 4
  %65 = sext i32 %27 to i64
  %66 = getelementptr inbounds [20005 x i32], [20005 x i32]* @q, i64 0, i64 %65
  store i32 %.016, i32* %66, align 4
  %67 = icmp eq i32 %.016, %20
  %68 = select i1 %67, i32 -1304412389, i32 4573501
  br label %.backedge

69:                                               ; preds = %23
  br label %.backedge

70:                                               ; preds = %23
  br label %.backedge

71:                                               ; preds = %23
  br label %.backedge

72:                                               ; preds = %23
  br label %.backedge

73:                                               ; preds = %23
  br label %.backedge

74:                                               ; preds = %23
  br label %.backedge

75:                                               ; preds = %23
  br label %.backedge

76:                                               ; preds = %23
  %77 = sext i32 %.018 to i64
  %78 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @nex, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  br label %.backedge

80:                                               ; preds = %23
  br label %.backedge

81:                                               ; preds = %23
  br label %.backedge

82:                                               ; preds = %23
  br label %.backedge

83:                                               ; preds = %23
  br label %.backedge

84:                                               ; preds = %23
  br label %.backedge

85:                                               ; preds = %23
  store i1 %.02226, i1* %1, align 1
  %.0..0..0.15 = load volatile i1, i1* %1, align 1
  ret i1 %.0..0..0.15

86:                                               ; preds = %23
  br label %.backedge

87:                                               ; preds = %23
  br label %.backedge

88:                                               ; preds = %23
  %89 = sext i32 %.018 to i64
  %90 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @nex, i64 0, i64 %89
  %91 = load i32, i32* %90, align 4
  br label %.backedge

92:                                               ; preds = %23
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define i32 @_Z5dinicii(i32 %0, i32 %1) local_unnamed_addr #8 {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i1, align 1
  %13 = alloca i1, align 1
  %14 = load i32, i32* @x.10, align 4
  %15 = load i32, i32* @y.11, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %13, align 1
  %20 = icmp slt i32 %15, 10
  store i1 %20, i1* %12, align 1
  br label %21

21:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 2129231447, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 2129231447, label %22
    i32 264707471, label %25
    i32 -1812683460, label %45
    i32 808565374, label %47
    i32 438116666, label %51
    i32 995175632, label %53
    i32 -185409750, label %63
    i32 25669432, label %78
    i32 767254765, label %79
    i32 -694182566, label %82
    i32 558792742, label %88
    i32 -6112369, label %103
    i32 1941823876, label %113
    i32 73022752, label %132
    i32 296035839, label %134
    i32 -1144428676, label %138
    i32 -1731804263, label %157
    i32 -1959325293, label %159
    i32 1649603497, label %169
    i32 -1076153837, label %179
    i32 1409750436, label %180
    i32 601242079, label %181
    i32 -513378478, label %182
    i32 1954059561, label %192
    i32 -1198804382, label %206
    i32 -1847496266, label %207
    i32 -322195160, label %211
    i32 -889704836, label %213
    i32 -1696788033, label %214
    i32 -2096589098, label %220
    i32 96865519, label %228
    i32 339208274, label %229
  ]

.backedge:                                        ; preds = %21, %229, %228, %220, %214, %213, %207, %206, %192, %182, %181, %180, %179, %169, %159, %157, %138, %134, %132, %113, %103, %88, %82, %79, %78, %63, %53, %51, %47, %45, %25, %22
  %.0.be = phi i32 [ %.0, %21 ], [ 1954059561, %229 ], [ 1649603497, %228 ], [ 1941823876, %220 ], [ -185409750, %214 ], [ 264707471, %213 ], [ -322195160, %207 ], [ 767254765, %206 ], [ %205, %192 ], [ %191, %182 ], [ -513378478, %181 ], [ 601242079, %180 ], [ 1409750436, %179 ], [ %178, %169 ], [ %168, %159 ], [ -322195160, %157 ], [ %156, %138 ], [ -1144428676, %134 ], [ %133, %132 ], [ %131, %113 ], [ %112, %103 ], [ %102, %88 ], [ %87, %82 ], [ %81, %79 ], [ 767254765, %78 ], [ %77, %63 ], [ %62, %53 ], [ -322195160, %51 ], [ %50, %47 ], [ %46, %45 ], [ %44, %25 ], [ %24, %22 ]
  br label %21

22:                                               ; preds = %21
  %.0..0..0. = load volatile i1, i1* %13, align 1
  %.0..0..0.1 = load volatile i1, i1* %12, align 1
  %23 = or i1 %.0..0..0., %.0..0..0.1
  %24 = select i1 %23, i32 264707471, i32 -889704836
  br label %.backedge

25:                                               ; preds = %21
  %26 = alloca i32, align 4
  store i32* %26, i32** %11, align 8
  %27 = alloca i32, align 4
  store i32* %27, i32** %10, align 8
  %28 = alloca i32, align 4
  store i32* %28, i32** %9, align 8
  %29 = alloca i32, align 4
  store i32* %29, i32** %8, align 8
  %30 = alloca i32, align 4
  store i32* %30, i32** %7, align 8
  %31 = alloca i32, align 4
  store i32* %31, i32** %6, align 8
  %32 = alloca i32, align 4
  store i32* %32, i32** %5, align 8
  %.0..0..0.6 = load volatile i32*, i32** %10, align 8
  store i32 %0, i32* %.0..0..0.6, align 4
  %.0..0..0.11 = load volatile i32*, i32** %9, align 8
  store i32 %1, i32* %.0..0..0.11, align 4
  %.0..0..0.7 = load volatile i32*, i32** %10, align 8
  %33 = load i32, i32* %.0..0..0.7, align 4
  %34 = load i32, i32* @T, align 4
  %35 = icmp eq i32 %33, %34
  store i1 %35, i1* %4, align 1
  %36 = load i32, i32* @x.10, align 4
  %37 = load i32, i32* @y.11, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 -1812683460, i32 -889704836
  br label %.backedge

45:                                               ; preds = %21
  %.0..0..0.51 = load volatile i1, i1* %4, align 1
  %46 = select i1 %.0..0..0.51, i32 438116666, i32 808565374
  br label %.backedge

47:                                               ; preds = %21
  %.0..0..0.12 = load volatile i32*, i32** %9, align 8
  %48 = load i32, i32* %.0..0..0.12, align 4
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, i32 438116666, i32 995175632
  br label %.backedge

51:                                               ; preds = %21
  %.0..0..0.13 = load volatile i32*, i32** %9, align 8
  %52 = load i32, i32* %.0..0..0.13, align 4
  %.0..0..0.2 = load volatile i32*, i32** %11, align 8
  store i32 %52, i32* %.0..0..0.2, align 4
  br label %.backedge

53:                                               ; preds = %21
  %54 = load i32, i32* @x.10, align 4
  %55 = load i32, i32* @y.11, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -185409750, i32 -1696788033
  br label %.backedge

63:                                               ; preds = %21
  %.0..0..0.14 = load volatile i32*, i32** %9, align 8
  %64 = load i32, i32* %.0..0..0.14, align 4
  %.0..0..0.18 = load volatile i32*, i32** %8, align 8
  store i32 %64, i32* %.0..0..0.18, align 4
  %.0..0..0.8 = load volatile i32*, i32** %10, align 8
  %65 = load i32, i32* %.0..0..0.8, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [20005 x i32], [20005 x i32]* @he, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %.0..0..0.26 = load volatile i32*, i32** %7, align 8
  store i32 %68, i32* %.0..0..0.26, align 4
  %69 = load i32, i32* @x.10, align 4
  %70 = load i32, i32* @y.11, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 25669432, i32 -1696788033
  br label %.backedge

78:                                               ; preds = %21
  br label %.backedge

79:                                               ; preds = %21
  %.0..0..0.27 = load volatile i32*, i32** %7, align 8
  %80 = load i32, i32* %.0..0..0.27, align 4
  %.not54 = icmp eq i32 %80, 0
  %81 = select i1 %.not54, i32 -1847496266, i32 -694182566
  br label %.backedge

82:                                               ; preds = %21
  %.0..0..0.28 = load volatile i32*, i32** %7, align 8
  %83 = load i32, i32* %.0..0..0.28, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @C, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %.not53 = icmp eq i32 %86, 0
  %87 = select i1 %.not53, i32 601242079, i32 558792742
  br label %.backedge

88:                                               ; preds = %21
  %.0..0..0.29 = load volatile i32*, i32** %7, align 8
  %89 = load i32, i32* %.0..0..0.29, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @ver, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4
  %.0..0..0.39 = load volatile i32*, i32** %6, align 8
  store i32 %92, i32* %.0..0..0.39, align 4
  %.0..0..0.40 = load volatile i32*, i32** %6, align 8
  %93 = load i32, i32* %.0..0..0.40, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [20005 x i32], [20005 x i32]* @d, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  %.0..0..0.9 = load volatile i32*, i32** %10, align 8
  %97 = load i32, i32* %.0..0..0.9, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [20005 x i32], [20005 x i32]* @d, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %.neg = add i32 %100, 1
  %101 = icmp eq i32 %96, %.neg
  %102 = select i1 %101, i32 -6112369, i32 1409750436
  br label %.backedge

103:                                              ; preds = %21
  %104 = load i32, i32* @x.10, align 4
  %105 = load i32, i32* @y.11, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 1941823876, i32 -2096589098
  br label %.backedge

113:                                              ; preds = %21
  %.0..0..0.41 = load volatile i32*, i32** %6, align 8
  %114 = load i32, i32* %.0..0..0.41, align 4
  %.0..0..0.30 = load volatile i32*, i32** %7, align 8
  %115 = load i32, i32* %.0..0..0.30, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @C, i64 0, i64 %116
  %.0..0..0.19 = load volatile i32*, i32** %8, align 8
  %118 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %.0..0..0.19, i32* nonnull dereferenceable(4) %117)
  %119 = load i32, i32* %118, align 4
  %120 = call i32 @_Z5dinicii(i32 %114, i32 %119)
  %.0..0..0.44 = load volatile i32*, i32** %5, align 8
  store i32 %120, i32* %.0..0..0.44, align 4
  %.0..0..0.45 = load volatile i32*, i32** %5, align 8
  %121 = load i32, i32* %.0..0..0.45, align 4
  %122 = icmp ne i32 %121, 0
  store i1 %122, i1* %3, align 1
  %123 = load i32, i32* @x.10, align 4
  %124 = load i32, i32* @y.11, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 73022752, i32 -2096589098
  br label %.backedge

132:                                              ; preds = %21
  %.0..0..0.52 = load volatile i1, i1* %3, align 1
  %133 = select i1 %.0..0..0.52, i32 -1144428676, i32 296035839
  br label %.backedge

134:                                              ; preds = %21
  %.0..0..0.42 = load volatile i32*, i32** %6, align 8
  %135 = load i32, i32* %.0..0..0.42, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [20005 x i32], [20005 x i32]* @d, i64 0, i64 %136
  store i32 0, i32* %137, align 4
  br label %.backedge

138:                                              ; preds = %21
  %.0..0..0.46 = load volatile i32*, i32** %5, align 8
  %139 = load i32, i32* %.0..0..0.46, align 4
  %.0..0..0.31 = load volatile i32*, i32** %7, align 8
  %140 = load i32, i32* %.0..0..0.31, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @C, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = sub i32 %143, %139
  store i32 %144, i32* %142, align 4
  %.0..0..0.47 = load volatile i32*, i32** %5, align 8
  %145 = load i32, i32* %.0..0..0.47, align 4
  %.0..0..0.32 = load volatile i32*, i32** %7, align 8
  %146 = load i32, i32* %.0..0..0.32, align 4
  %147 = xor i32 %146, 1
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @C, i64 0, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = add i32 %150, %145
  store i32 %151, i32* %149, align 4
  %.0..0..0.48 = load volatile i32*, i32** %5, align 8
  %152 = load i32, i32* %.0..0..0.48, align 4
  %.0..0..0.20 = load volatile i32*, i32** %8, align 8
  %153 = load i32, i32* %.0..0..0.20, align 4
  %154 = sub i32 %153, %152
  %.0..0..0.21 = load volatile i32*, i32** %8, align 8
  store i32 %154, i32* %.0..0..0.21, align 4
  %.0..0..0.22 = load volatile i32*, i32** %8, align 8
  %155 = load i32, i32* %.0..0..0.22, align 4
  %.not = icmp eq i32 %155, 0
  %156 = select i1 %.not, i32 -1731804263, i32 -1959325293
  br label %.backedge

157:                                              ; preds = %21
  %.0..0..0.15 = load volatile i32*, i32** %9, align 8
  %158 = load i32, i32* %.0..0..0.15, align 4
  %.0..0..0.3 = load volatile i32*, i32** %11, align 8
  store i32 %158, i32* %.0..0..0.3, align 4
  br label %.backedge

159:                                              ; preds = %21
  %160 = load i32, i32* @x.10, align 4
  %161 = load i32, i32* @y.11, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 1649603497, i32 96865519
  br label %.backedge

169:                                              ; preds = %21
  %170 = load i32, i32* @x.10, align 4
  %171 = load i32, i32* @y.11, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 -1076153837, i32 96865519
  br label %.backedge

179:                                              ; preds = %21
  br label %.backedge

180:                                              ; preds = %21
  br label %.backedge

181:                                              ; preds = %21
  br label %.backedge

182:                                              ; preds = %21
  %183 = load i32, i32* @x.10, align 4
  %184 = load i32, i32* @y.11, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 1954059561, i32 339208274
  br label %.backedge

192:                                              ; preds = %21
  %.0..0..0.33 = load volatile i32*, i32** %7, align 8
  %193 = load i32, i32* %.0..0..0.33, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @nex, i64 0, i64 %194
  %196 = load i32, i32* %195, align 4
  %.0..0..0.34 = load volatile i32*, i32** %7, align 8
  store i32 %196, i32* %.0..0..0.34, align 4
  %197 = load i32, i32* @x.10, align 4
  %198 = load i32, i32* @y.11, align 4
  %199 = add i32 %197, -1
  %200 = mul i32 %199, %197
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %203, %202
  %205 = select i1 %204, i32 -1198804382, i32 339208274
  br label %.backedge

206:                                              ; preds = %21
  br label %.backedge

207:                                              ; preds = %21
  %.0..0..0.16 = load volatile i32*, i32** %9, align 8
  %208 = load i32, i32* %.0..0..0.16, align 4
  %.0..0..0.23 = load volatile i32*, i32** %8, align 8
  %209 = load i32, i32* %.0..0..0.23, align 4
  %210 = sub i32 %208, %209
  %.0..0..0.4 = load volatile i32*, i32** %11, align 8
  store i32 %210, i32* %.0..0..0.4, align 4
  br label %.backedge

211:                                              ; preds = %21
  %.0..0..0.5 = load volatile i32*, i32** %11, align 8
  %212 = load i32, i32* %.0..0..0.5, align 4
  ret i32 %212

213:                                              ; preds = %21
  br label %.backedge

214:                                              ; preds = %21
  %.0..0..0.17 = load volatile i32*, i32** %9, align 8
  %215 = load i32, i32* %.0..0..0.17, align 4
  %.0..0..0.24 = load volatile i32*, i32** %8, align 8
  store i32 %215, i32* %.0..0..0.24, align 4
  %.0..0..0.10 = load volatile i32*, i32** %10, align 8
  %216 = load i32, i32* %.0..0..0.10, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [20005 x i32], [20005 x i32]* @he, i64 0, i64 %217
  %219 = load i32, i32* %218, align 4
  %.0..0..0.35 = load volatile i32*, i32** %7, align 8
  store i32 %219, i32* %.0..0..0.35, align 4
  br label %.backedge

220:                                              ; preds = %21
  %.0..0..0.43 = load volatile i32*, i32** %6, align 8
  %221 = load i32, i32* %.0..0..0.43, align 4
  %.0..0..0.36 = load volatile i32*, i32** %7, align 8
  %222 = load i32, i32* %.0..0..0.36, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @C, i64 0, i64 %223
  %.0..0..0.25 = load volatile i32*, i32** %8, align 8
  %225 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %.0..0..0.25, i32* nonnull dereferenceable(4) %224)
  %226 = load i32, i32* %225, align 4
  %227 = call i32 @_Z5dinicii(i32 %221, i32 %226)
  %.0..0..0.49 = load volatile i32*, i32** %5, align 8
  store i32 %227, i32* %.0..0..0.49, align 4
  %.0..0..0.50 = load volatile i32*, i32** %5, align 8
  br label %.backedge

228:                                              ; preds = %21
  br label %.backedge

229:                                              ; preds = %21
  %.0..0..0.37 = load volatile i32*, i32** %7, align 8
  %230 = load i32, i32* %.0..0..0.37, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [8002000 x i32], [8002000 x i32]* @nex, i64 0, i64 %231
  %233 = load i32, i32* %232, align 4
  %.0..0..0.38 = load volatile i32*, i32** %7, align 8
  store i32 %233, i32* %.0..0..0.38, align 4
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #8 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i32* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -732285144, %2 ], [ 1187922983, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 -732285144, label %8
    i32 904770553, label %.outer.backedge
    i32 889486673, label %11
    i32 1187922983, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i32, i32* %4, align 4
  %.0..0..0.6 = load volatile i32, i32* %3, align 4
  %9 = icmp slt i32 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 904770553, i32 889486673
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i32* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i32* %.07.ph
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s402012192.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #10 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
