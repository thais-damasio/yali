; ModuleID = 'build_ollvm/programs/p02409/s296582230.ll'
source_filename = "Project_CodeNet_C++1400/p02409/s296582230.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s296582230.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define void @_Z4initPA10_i([10 x i32]* nocapture %0) local_unnamed_addr #4 {
  br label %2

2:                                                ; preds = %.backedge, %1
  %.010 = phi i32 [ 0, %1 ], [ %.010.be, %.backedge ]
  %.08 = phi i32 [ undef, %1 ], [ %.08.be, %.backedge ]
  %.0 = phi i32 [ -292131796, %1 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -292131796, label %3
    i32 695379003, label %6
    i32 2019311819, label %16
    i32 1216114662, label %26
    i32 1531511423, label %27
    i32 1001766866, label %30
    i32 -2034259885, label %34
    i32 549296863, label %44
    i32 100457832, label %55
    i32 1011467045, label %56
    i32 -541588594, label %57
    i32 800679938, label %59
    i32 1731158606, label %69
    i32 -1846184825, label %79
    i32 95065091, label %80
    i32 -127226476, label %81
    i32 -1061020877, label %83
  ]

.backedge:                                        ; preds = %2, %83, %81, %80, %69, %59, %57, %56, %55, %44, %34, %30, %27, %26, %16, %6, %3
  %.010.be = phi i32 [ %.010, %2 ], [ %.010, %83 ], [ %.010, %81 ], [ %.010, %80 ], [ %.010, %69 ], [ %.010, %59 ], [ %58, %57 ], [ %.010, %56 ], [ %.010, %55 ], [ %.010, %44 ], [ %.010, %34 ], [ %.010, %30 ], [ %.010, %27 ], [ %.010, %26 ], [ %.010, %16 ], [ %.010, %6 ], [ %.010, %3 ]
  %.08.be = phi i32 [ %.08, %2 ], [ %.08, %83 ], [ %82, %81 ], [ 0, %80 ], [ %.08, %69 ], [ %.08, %59 ], [ %.08, %57 ], [ %.08, %56 ], [ %.08, %55 ], [ %45, %44 ], [ %.08, %34 ], [ %.08, %30 ], [ %.08, %27 ], [ %.08, %26 ], [ 0, %16 ], [ %.08, %6 ], [ %.08, %3 ]
  %.0.be = phi i32 [ %.0, %2 ], [ 1731158606, %83 ], [ 549296863, %81 ], [ 2019311819, %80 ], [ %78, %69 ], [ %68, %59 ], [ -292131796, %57 ], [ -541588594, %56 ], [ 1531511423, %55 ], [ %54, %44 ], [ %43, %34 ], [ -2034259885, %30 ], [ %29, %27 ], [ 1531511423, %26 ], [ %25, %16 ], [ %15, %6 ], [ %5, %3 ]
  br label %2

3:                                                ; preds = %2
  %4 = icmp slt i32 %.010, 3
  %5 = select i1 %4, i32 695379003, i32 800679938
  br label %.backedge

6:                                                ; preds = %2
  %7 = load i32, i32* @x.1, align 4
  %8 = load i32, i32* @y.2, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 2019311819, i32 95065091
  br label %.backedge

16:                                               ; preds = %2
  %17 = load i32, i32* @x.1, align 4
  %18 = load i32, i32* @y.2, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 1216114662, i32 95065091
  br label %.backedge

26:                                               ; preds = %2
  br label %.backedge

27:                                               ; preds = %2
  %28 = icmp slt i32 %.08, 10
  %29 = select i1 %28, i32 1001766866, i32 1011467045
  br label %.backedge

30:                                               ; preds = %2
  %31 = sext i32 %.010 to i64
  %32 = sext i32 %.08 to i64
  %33 = getelementptr inbounds [10 x i32], [10 x i32]* %0, i64 %31, i64 %32
  store i32 0, i32* %33, align 4
  br label %.backedge

34:                                               ; preds = %2
  %35 = load i32, i32* @x.1, align 4
  %36 = load i32, i32* @y.2, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 549296863, i32 -127226476
  br label %.backedge

44:                                               ; preds = %2
  %45 = add i32 %.08, 1
  %46 = load i32, i32* @x.1, align 4
  %47 = load i32, i32* @y.2, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 100457832, i32 -127226476
  br label %.backedge

55:                                               ; preds = %2
  br label %.backedge

56:                                               ; preds = %2
  br label %.backedge

57:                                               ; preds = %2
  %58 = add i32 %.010, 1
  br label %.backedge

59:                                               ; preds = %2
  %60 = load i32, i32* @x.1, align 4
  %61 = load i32, i32* @y.2, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 1731158606, i32 -1061020877
  br label %.backedge

69:                                               ; preds = %2
  %70 = load i32, i32* @x.1, align 4
  %71 = load i32, i32* @y.2, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -1846184825, i32 -1061020877
  br label %.backedge

79:                                               ; preds = %2
  ret void

80:                                               ; preds = %2
  br label %.backedge

81:                                               ; preds = %2
  %82 = add i32 %.08, 1
  br label %.backedge

83:                                               ; preds = %2
  br label %.backedge
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define void @_Z16updateDormStatusPA10_iiii([10 x i32]* nocapture %0, i32 %1, i32 %2, i32 %3) local_unnamed_addr #5 {
  %5 = add i32 %1, -1
  %6 = sext i32 %5 to i64
  %7 = add i32 %2, -1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %0, i64 %6, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, %3
  store i32 %11, i32* %9, align 4
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z9printDormPA10_iS0_S0_S0_([10 x i32]* nocapture readonly %0, [10 x i32]* nocapture readonly %1, [10 x i32]* nocapture readonly %2, [10 x i32]* nocapture readonly %3) local_unnamed_addr #0 {
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  br label %9

9:                                                ; preds = %.backedge, %4
  %.071 = phi i32 [ 0, %4 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %4 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %4 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %4 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %4 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %4 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %4 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %4 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %4 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %4 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %4 ], [ %.051.be, %.backedge ]
  %.0 = phi i32 [ 1059161071, %4 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1059161071, label %10
    i32 -318515914, label %13
    i32 1692650097, label %14
    i32 1794975130, label %24
    i32 442174703, label %35
    i32 688171622, label %37
    i32 -157913077, label %47
    i32 258070749, label %63
    i32 -244922621, label %64
    i32 758766922, label %66
    i32 199712559, label %68
    i32 849398118, label %70
    i32 1097095485, label %71
    i32 -1240774529, label %74
    i32 -150023524, label %84
    i32 -1436243583, label %95
    i32 -1365288737, label %96
    i32 -458770792, label %98
    i32 794219165, label %100
    i32 -132448799, label %103
    i32 684073699, label %104
    i32 -385075608, label %114
    i32 -1109616259, label %125
    i32 -923615553, label %127
    i32 -1944662184, label %134
    i32 -2102175186, label %144
    i32 1396134207, label %154
    i32 -1974945385, label %155
    i32 2145495715, label %157
    i32 123754569, label %159
    i32 1305493995, label %160
    i32 2131021286, label %163
    i32 506207451, label %173
    i32 1947972919, label %184
    i32 1294801177, label %185
    i32 -1295964455, label %195
    i32 -216690239, label %206
    i32 1018781356, label %207
    i32 -1039403725, label %209
    i32 320001498, label %212
    i32 -1095651590, label %213
    i32 1950031495, label %216
    i32 1059018419, label %226
    i32 616807947, label %242
    i32 193382533, label %243
    i32 -1637494633, label %245
    i32 1537690182, label %247
    i32 -1624311294, label %257
    i32 -1038102291, label %268
    i32 1932549675, label %269
    i32 -117149449, label %270
    i32 -497189369, label %280
    i32 1087890077, label %291
    i32 -1168068769, label %293
    i32 1275354122, label %295
    i32 1618063414, label %297
    i32 82873239, label %299
    i32 -524007352, label %309
    i32 2090095551, label %320
    i32 -155641093, label %322
    i32 -980894670, label %332
    i32 -2026417815, label %342
    i32 -248862114, label %343
    i32 -1591036132, label %346
    i32 1517209601, label %353
    i32 228044778, label %354
    i32 -1212878273, label %356
    i32 60069412, label %358
    i32 -465059817, label %359
    i32 912881881, label %360
    i32 707370456, label %367
    i32 -1735856711, label %369
    i32 2104958631, label %370
    i32 824577623, label %372
    i32 1680274374, label %374
    i32 1076768371, label %375
    i32 1303531291, label %382
    i32 1428606270, label %384
    i32 -1864103348, label %385
    i32 -2046453328, label %386
  ]

.backedge:                                        ; preds = %9, %386, %385, %384, %382, %375, %374, %372, %370, %369, %367, %360, %359, %356, %354, %353, %346, %343, %342, %332, %322, %320, %309, %299, %297, %295, %293, %291, %280, %270, %269, %268, %257, %247, %245, %243, %242, %226, %216, %213, %212, %209, %207, %206, %195, %185, %184, %173, %163, %160, %159, %157, %155, %154, %144, %134, %127, %125, %114, %104, %103, %100, %98, %96, %95, %84, %74, %71, %70, %68, %66, %64, %63, %47, %37, %35, %24, %14, %13, %10
  %.071.be = phi i32 [ %.071, %9 ], [ %.071, %386 ], [ %.071, %385 ], [ %.071, %384 ], [ %.071, %382 ], [ %.071, %375 ], [ %.071, %374 ], [ %.071, %372 ], [ %.071, %370 ], [ %.071, %369 ], [ %.071, %367 ], [ %.071, %360 ], [ %.071, %359 ], [ %.071, %356 ], [ %.071, %354 ], [ %.071, %353 ], [ %.071, %346 ], [ %.071, %343 ], [ %.071, %342 ], [ %.071, %332 ], [ %.071, %322 ], [ %.071, %320 ], [ %.071, %309 ], [ %.071, %299 ], [ %.071, %297 ], [ %.071, %295 ], [ %.071, %293 ], [ %.071, %291 ], [ %.071, %280 ], [ %.071, %270 ], [ %.071, %269 ], [ %.071, %268 ], [ %.071, %257 ], [ %.071, %247 ], [ %.071, %245 ], [ %.071, %243 ], [ %.071, %242 ], [ %.071, %226 ], [ %.071, %216 ], [ %.071, %213 ], [ %.071, %212 ], [ %.071, %209 ], [ %.071, %207 ], [ %.071, %206 ], [ %.071, %195 ], [ %.071, %185 ], [ %.071, %184 ], [ %.071, %173 ], [ %.071, %163 ], [ %.071, %160 ], [ %.071, %159 ], [ %.071, %157 ], [ %.071, %155 ], [ %.071, %154 ], [ %.071, %144 ], [ %.071, %134 ], [ %.071, %127 ], [ %.071, %125 ], [ %.071, %114 ], [ %.071, %104 ], [ %.071, %103 ], [ %.071, %100 ], [ %.071, %98 ], [ %.071, %96 ], [ %.071, %95 ], [ %.071, %84 ], [ %.071, %74 ], [ %.071, %71 ], [ %.071, %70 ], [ %69, %68 ], [ %.071, %66 ], [ %.071, %64 ], [ %.071, %63 ], [ %.071, %47 ], [ %.071, %37 ], [ %.071, %35 ], [ %.071, %24 ], [ %.071, %14 ], [ %.071, %13 ], [ %.071, %10 ]
  %.069.be = phi i32 [ %.069, %9 ], [ %.069, %386 ], [ %.069, %385 ], [ %.069, %384 ], [ %.069, %382 ], [ %.069, %375 ], [ %.069, %374 ], [ %.069, %372 ], [ %.069, %370 ], [ %.069, %369 ], [ %.069, %367 ], [ %.069, %360 ], [ %.069, %359 ], [ %.069, %356 ], [ %.069, %354 ], [ %.069, %353 ], [ %.069, %346 ], [ %.069, %343 ], [ %.069, %342 ], [ %.069, %332 ], [ %.069, %322 ], [ %.069, %320 ], [ %.069, %309 ], [ %.069, %299 ], [ %.069, %297 ], [ %.069, %295 ], [ %.069, %293 ], [ %.069, %291 ], [ %.069, %280 ], [ %.069, %270 ], [ %.069, %269 ], [ %.069, %268 ], [ %.069, %257 ], [ %.069, %247 ], [ %.069, %245 ], [ %.069, %243 ], [ %.069, %242 ], [ %.069, %226 ], [ %.069, %216 ], [ %.069, %213 ], [ %.069, %212 ], [ %.069, %209 ], [ %.069, %207 ], [ %.069, %206 ], [ %.069, %195 ], [ %.069, %185 ], [ %.069, %184 ], [ %.069, %173 ], [ %.069, %163 ], [ %.069, %160 ], [ %.069, %159 ], [ %.069, %157 ], [ %.069, %155 ], [ %.069, %154 ], [ %.069, %144 ], [ %.069, %134 ], [ %.069, %127 ], [ %.069, %125 ], [ %.069, %114 ], [ %.069, %104 ], [ %.069, %103 ], [ %.069, %100 ], [ %.069, %98 ], [ %.069, %96 ], [ %.069, %95 ], [ %.069, %84 ], [ %.069, %74 ], [ %.069, %71 ], [ %.069, %70 ], [ %.069, %68 ], [ %.069, %66 ], [ %65, %64 ], [ %.069, %63 ], [ %.069, %47 ], [ %.069, %37 ], [ %.069, %35 ], [ %.069, %24 ], [ %.069, %14 ], [ 0, %13 ], [ %.069, %10 ]
  %.067.be = phi i32 [ %.067, %9 ], [ %.067, %386 ], [ %.067, %385 ], [ %.067, %384 ], [ %.067, %382 ], [ %.067, %375 ], [ %.067, %374 ], [ %.067, %372 ], [ %.067, %370 ], [ %.067, %369 ], [ %.067, %367 ], [ %.067, %360 ], [ %.067, %359 ], [ %.067, %356 ], [ %.067, %354 ], [ %.067, %353 ], [ %.067, %346 ], [ %.067, %343 ], [ %.067, %342 ], [ %.067, %332 ], [ %.067, %322 ], [ %.067, %320 ], [ %.067, %309 ], [ %.067, %299 ], [ %.067, %297 ], [ %.067, %295 ], [ %.067, %293 ], [ %.067, %291 ], [ %.067, %280 ], [ %.067, %270 ], [ %.067, %269 ], [ %.067, %268 ], [ %.067, %257 ], [ %.067, %247 ], [ %.067, %245 ], [ %.067, %243 ], [ %.067, %242 ], [ %.067, %226 ], [ %.067, %216 ], [ %.067, %213 ], [ %.067, %212 ], [ %.067, %209 ], [ %.067, %207 ], [ %.067, %206 ], [ %.067, %195 ], [ %.067, %185 ], [ %.067, %184 ], [ %.067, %173 ], [ %.067, %163 ], [ %.067, %160 ], [ %.067, %159 ], [ %.067, %157 ], [ %.067, %155 ], [ %.067, %154 ], [ %.067, %144 ], [ %.067, %134 ], [ %.067, %127 ], [ %.067, %125 ], [ %.067, %114 ], [ %.067, %104 ], [ %.067, %103 ], [ %.067, %100 ], [ %.067, %98 ], [ %97, %96 ], [ %.067, %95 ], [ %.067, %84 ], [ %.067, %74 ], [ %.067, %71 ], [ 0, %70 ], [ %.067, %68 ], [ %.067, %66 ], [ %.067, %64 ], [ %.067, %63 ], [ %.067, %47 ], [ %.067, %37 ], [ %.067, %35 ], [ %.067, %24 ], [ %.067, %14 ], [ %.067, %13 ], [ %.067, %10 ]
  %.065.be = phi i32 [ %.065, %9 ], [ %.065, %386 ], [ %.065, %385 ], [ %.065, %384 ], [ %.065, %382 ], [ %.065, %375 ], [ %.065, %374 ], [ %.065, %372 ], [ %.065, %370 ], [ %.065, %369 ], [ %.065, %367 ], [ %.065, %360 ], [ %.065, %359 ], [ %.065, %356 ], [ %.065, %354 ], [ %.065, %353 ], [ %.065, %346 ], [ %.065, %343 ], [ %.065, %342 ], [ %.065, %332 ], [ %.065, %322 ], [ %.065, %320 ], [ %.065, %309 ], [ %.065, %299 ], [ %.065, %297 ], [ %.065, %295 ], [ %.065, %293 ], [ %.065, %291 ], [ %.065, %280 ], [ %.065, %270 ], [ %.065, %269 ], [ %.065, %268 ], [ %.065, %257 ], [ %.065, %247 ], [ %.065, %245 ], [ %.065, %243 ], [ %.065, %242 ], [ %.065, %226 ], [ %.065, %216 ], [ %.065, %213 ], [ %.065, %212 ], [ %.065, %209 ], [ %.065, %207 ], [ %.065, %206 ], [ %.065, %195 ], [ %.065, %185 ], [ %.065, %184 ], [ %.065, %173 ], [ %.065, %163 ], [ %.065, %160 ], [ %.065, %159 ], [ %158, %157 ], [ %.065, %155 ], [ %.065, %154 ], [ %.065, %144 ], [ %.065, %134 ], [ %.065, %127 ], [ %.065, %125 ], [ %.065, %114 ], [ %.065, %104 ], [ %.065, %103 ], [ %.065, %100 ], [ 0, %98 ], [ %.065, %96 ], [ %.065, %95 ], [ %.065, %84 ], [ %.065, %74 ], [ %.065, %71 ], [ %.065, %70 ], [ %.065, %68 ], [ %.065, %66 ], [ %.065, %64 ], [ %.065, %63 ], [ %.065, %47 ], [ %.065, %37 ], [ %.065, %35 ], [ %.065, %24 ], [ %.065, %14 ], [ %.065, %13 ], [ %.065, %10 ]
  %.063.be = phi i32 [ %.063, %9 ], [ %.063, %386 ], [ %.063, %385 ], [ %.063, %384 ], [ %.063, %382 ], [ %.063, %375 ], [ %.063, %374 ], [ %.063, %372 ], [ %371, %370 ], [ %.063, %369 ], [ %.063, %367 ], [ %.063, %360 ], [ %.063, %359 ], [ %.063, %356 ], [ %.063, %354 ], [ %.063, %353 ], [ %.063, %346 ], [ %.063, %343 ], [ %.063, %342 ], [ %.063, %332 ], [ %.063, %322 ], [ %.063, %320 ], [ %.063, %309 ], [ %.063, %299 ], [ %.063, %297 ], [ %.063, %295 ], [ %.063, %293 ], [ %.063, %291 ], [ %.063, %280 ], [ %.063, %270 ], [ %.063, %269 ], [ %.063, %268 ], [ %.063, %257 ], [ %.063, %247 ], [ %.063, %245 ], [ %.063, %243 ], [ %.063, %242 ], [ %.063, %226 ], [ %.063, %216 ], [ %.063, %213 ], [ %.063, %212 ], [ %.063, %209 ], [ %.063, %207 ], [ %.063, %206 ], [ %.063, %195 ], [ %.063, %185 ], [ %.063, %184 ], [ %.063, %173 ], [ %.063, %163 ], [ %.063, %160 ], [ %.063, %159 ], [ %.063, %157 ], [ %.063, %155 ], [ %.063, %154 ], [ %.neg74, %144 ], [ %.063, %134 ], [ %.063, %127 ], [ %.063, %125 ], [ %.063, %114 ], [ %.063, %104 ], [ 0, %103 ], [ %.063, %100 ], [ %.063, %98 ], [ %.063, %96 ], [ %.063, %95 ], [ %.063, %84 ], [ %.063, %74 ], [ %.063, %71 ], [ %.063, %70 ], [ %.063, %68 ], [ %.063, %66 ], [ %.063, %64 ], [ %.063, %63 ], [ %.063, %47 ], [ %.063, %37 ], [ %.063, %35 ], [ %.063, %24 ], [ %.063, %14 ], [ %.063, %13 ], [ %.063, %10 ]
  %.061.be = phi i32 [ %.061, %9 ], [ %.061, %386 ], [ %.061, %385 ], [ %.061, %384 ], [ %.061, %382 ], [ %.061, %375 ], [ %.neg, %374 ], [ %.061, %372 ], [ %.061, %370 ], [ %.061, %369 ], [ %.061, %367 ], [ %.061, %360 ], [ %.061, %359 ], [ %.061, %356 ], [ %.061, %354 ], [ %.061, %353 ], [ %.061, %346 ], [ %.061, %343 ], [ %.061, %342 ], [ %.061, %332 ], [ %.061, %322 ], [ %.061, %320 ], [ %.061, %309 ], [ %.061, %299 ], [ %.061, %297 ], [ %.061, %295 ], [ %.061, %293 ], [ %.061, %291 ], [ %.061, %280 ], [ %.061, %270 ], [ %.061, %269 ], [ %.061, %268 ], [ %.061, %257 ], [ %.061, %247 ], [ %.061, %245 ], [ %.061, %243 ], [ %.061, %242 ], [ %.061, %226 ], [ %.061, %216 ], [ %.061, %213 ], [ %.061, %212 ], [ %.061, %209 ], [ %.061, %207 ], [ %.061, %206 ], [ %196, %195 ], [ %.061, %185 ], [ %.061, %184 ], [ %.061, %173 ], [ %.061, %163 ], [ %.061, %160 ], [ 0, %159 ], [ %.061, %157 ], [ %.061, %155 ], [ %.061, %154 ], [ %.061, %144 ], [ %.061, %134 ], [ %.061, %127 ], [ %.061, %125 ], [ %.061, %114 ], [ %.061, %104 ], [ %.061, %103 ], [ %.061, %100 ], [ %.061, %98 ], [ %.061, %96 ], [ %.061, %95 ], [ %.061, %84 ], [ %.061, %74 ], [ %.061, %71 ], [ %.061, %70 ], [ %.061, %68 ], [ %.061, %66 ], [ %.061, %64 ], [ %.061, %63 ], [ %.061, %47 ], [ %.061, %37 ], [ %.061, %35 ], [ %.061, %24 ], [ %.061, %14 ], [ %.061, %13 ], [ %.061, %10 ]
  %.059.be = phi i32 [ %.059, %9 ], [ %.059, %386 ], [ %.059, %385 ], [ %.059, %384 ], [ %383, %382 ], [ %.059, %375 ], [ %.059, %374 ], [ %.059, %372 ], [ %.059, %370 ], [ %.059, %369 ], [ %.059, %367 ], [ %.059, %360 ], [ %.059, %359 ], [ %.059, %356 ], [ %.059, %354 ], [ %.059, %353 ], [ %.059, %346 ], [ %.059, %343 ], [ %.059, %342 ], [ %.059, %332 ], [ %.059, %322 ], [ %.059, %320 ], [ %.059, %309 ], [ %.059, %299 ], [ %.059, %297 ], [ %.059, %295 ], [ %.059, %293 ], [ %.059, %291 ], [ %.059, %280 ], [ %.059, %270 ], [ %.059, %269 ], [ %.059, %268 ], [ %258, %257 ], [ %.059, %247 ], [ %.059, %245 ], [ %.059, %243 ], [ %.059, %242 ], [ %.059, %226 ], [ %.059, %216 ], [ %.059, %213 ], [ %.059, %212 ], [ %.059, %209 ], [ 0, %207 ], [ %.059, %206 ], [ %.059, %195 ], [ %.059, %185 ], [ %.059, %184 ], [ %.059, %173 ], [ %.059, %163 ], [ %.059, %160 ], [ %.059, %159 ], [ %.059, %157 ], [ %.059, %155 ], [ %.059, %154 ], [ %.059, %144 ], [ %.059, %134 ], [ %.059, %127 ], [ %.059, %125 ], [ %.059, %114 ], [ %.059, %104 ], [ %.059, %103 ], [ %.059, %100 ], [ %.059, %98 ], [ %.059, %96 ], [ %.059, %95 ], [ %.059, %84 ], [ %.059, %74 ], [ %.059, %71 ], [ %.059, %70 ], [ %.059, %68 ], [ %.059, %66 ], [ %.059, %64 ], [ %.059, %63 ], [ %.059, %47 ], [ %.059, %37 ], [ %.059, %35 ], [ %.059, %24 ], [ %.059, %14 ], [ %.059, %13 ], [ %.059, %10 ]
  %.057.be = phi i32 [ %.057, %9 ], [ %.057, %386 ], [ %.057, %385 ], [ %.057, %384 ], [ %.057, %382 ], [ %.057, %375 ], [ %.057, %374 ], [ %.057, %372 ], [ %.057, %370 ], [ %.057, %369 ], [ %.057, %367 ], [ %.057, %360 ], [ %.057, %359 ], [ %.057, %356 ], [ %.057, %354 ], [ %.057, %353 ], [ %.057, %346 ], [ %.057, %343 ], [ %.057, %342 ], [ %.057, %332 ], [ %.057, %322 ], [ %.057, %320 ], [ %.057, %309 ], [ %.057, %299 ], [ %.057, %297 ], [ %.057, %295 ], [ %.057, %293 ], [ %.057, %291 ], [ %.057, %280 ], [ %.057, %270 ], [ %.057, %269 ], [ %.057, %268 ], [ %.057, %257 ], [ %.057, %247 ], [ %.057, %245 ], [ %244, %243 ], [ %.057, %242 ], [ %.057, %226 ], [ %.057, %216 ], [ %.057, %213 ], [ 0, %212 ], [ %.057, %209 ], [ %.057, %207 ], [ %.057, %206 ], [ %.057, %195 ], [ %.057, %185 ], [ %.057, %184 ], [ %.057, %173 ], [ %.057, %163 ], [ %.057, %160 ], [ %.057, %159 ], [ %.057, %157 ], [ %.057, %155 ], [ %.057, %154 ], [ %.057, %144 ], [ %.057, %134 ], [ %.057, %127 ], [ %.057, %125 ], [ %.057, %114 ], [ %.057, %104 ], [ %.057, %103 ], [ %.057, %100 ], [ %.057, %98 ], [ %.057, %96 ], [ %.057, %95 ], [ %.057, %84 ], [ %.057, %74 ], [ %.057, %71 ], [ %.057, %70 ], [ %.057, %68 ], [ %.057, %66 ], [ %.057, %64 ], [ %.057, %63 ], [ %.057, %47 ], [ %.057, %37 ], [ %.057, %35 ], [ %.057, %24 ], [ %.057, %14 ], [ %.057, %13 ], [ %.057, %10 ]
  %.055.be = phi i32 [ %.055, %9 ], [ %.055, %386 ], [ %.055, %385 ], [ %.055, %384 ], [ %.055, %382 ], [ %.055, %375 ], [ %.055, %374 ], [ %.055, %372 ], [ %.055, %370 ], [ %.055, %369 ], [ %.055, %367 ], [ %.055, %360 ], [ %.055, %359 ], [ %.055, %356 ], [ %.055, %354 ], [ %.055, %353 ], [ %.055, %346 ], [ %.055, %343 ], [ %.055, %342 ], [ %.055, %332 ], [ %.055, %322 ], [ %.055, %320 ], [ %.055, %309 ], [ %.055, %299 ], [ %.055, %297 ], [ %296, %295 ], [ %.055, %293 ], [ %.055, %291 ], [ %.055, %280 ], [ %.055, %270 ], [ 0, %269 ], [ %.055, %268 ], [ %.055, %257 ], [ %.055, %247 ], [ %.055, %245 ], [ %.055, %243 ], [ %.055, %242 ], [ %.055, %226 ], [ %.055, %216 ], [ %.055, %213 ], [ %.055, %212 ], [ %.055, %209 ], [ %.055, %207 ], [ %.055, %206 ], [ %.055, %195 ], [ %.055, %185 ], [ %.055, %184 ], [ %.055, %173 ], [ %.055, %163 ], [ %.055, %160 ], [ %.055, %159 ], [ %.055, %157 ], [ %.055, %155 ], [ %.055, %154 ], [ %.055, %144 ], [ %.055, %134 ], [ %.055, %127 ], [ %.055, %125 ], [ %.055, %114 ], [ %.055, %104 ], [ %.055, %103 ], [ %.055, %100 ], [ %.055, %98 ], [ %.055, %96 ], [ %.055, %95 ], [ %.055, %84 ], [ %.055, %74 ], [ %.055, %71 ], [ %.055, %70 ], [ %.055, %68 ], [ %.055, %66 ], [ %.055, %64 ], [ %.055, %63 ], [ %.055, %47 ], [ %.055, %37 ], [ %.055, %35 ], [ %.055, %24 ], [ %.055, %14 ], [ %.055, %13 ], [ %.055, %10 ]
  %.053.be = phi i32 [ %.053, %9 ], [ %.053, %386 ], [ %.053, %385 ], [ %.053, %384 ], [ %.053, %382 ], [ %.053, %375 ], [ %.053, %374 ], [ %.053, %372 ], [ %.053, %370 ], [ %.053, %369 ], [ %.053, %367 ], [ %.053, %360 ], [ %.053, %359 ], [ %357, %356 ], [ %.053, %354 ], [ %.053, %353 ], [ %.053, %346 ], [ %.053, %343 ], [ %.053, %342 ], [ %.053, %332 ], [ %.053, %322 ], [ %.053, %320 ], [ %.053, %309 ], [ %.053, %299 ], [ 0, %297 ], [ %.053, %295 ], [ %.053, %293 ], [ %.053, %291 ], [ %.053, %280 ], [ %.053, %270 ], [ %.053, %269 ], [ %.053, %268 ], [ %.053, %257 ], [ %.053, %247 ], [ %.053, %245 ], [ %.053, %243 ], [ %.053, %242 ], [ %.053, %226 ], [ %.053, %216 ], [ %.053, %213 ], [ %.053, %212 ], [ %.053, %209 ], [ %.053, %207 ], [ %.053, %206 ], [ %.053, %195 ], [ %.053, %185 ], [ %.053, %184 ], [ %.053, %173 ], [ %.053, %163 ], [ %.053, %160 ], [ %.053, %159 ], [ %.053, %157 ], [ %.053, %155 ], [ %.053, %154 ], [ %.053, %144 ], [ %.053, %134 ], [ %.053, %127 ], [ %.053, %125 ], [ %.053, %114 ], [ %.053, %104 ], [ %.053, %103 ], [ %.053, %100 ], [ %.053, %98 ], [ %.053, %96 ], [ %.053, %95 ], [ %.053, %84 ], [ %.053, %74 ], [ %.053, %71 ], [ %.053, %70 ], [ %.053, %68 ], [ %.053, %66 ], [ %.053, %64 ], [ %.053, %63 ], [ %.053, %47 ], [ %.053, %37 ], [ %.053, %35 ], [ %.053, %24 ], [ %.053, %14 ], [ %.053, %13 ], [ %.053, %10 ]
  %.051.be = phi i32 [ %.051, %9 ], [ 0, %386 ], [ %.051, %385 ], [ %.051, %384 ], [ %.051, %382 ], [ %.051, %375 ], [ %.051, %374 ], [ %.051, %372 ], [ %.051, %370 ], [ %.051, %369 ], [ %.051, %367 ], [ %.051, %360 ], [ %.051, %359 ], [ %.051, %356 ], [ %.051, %354 ], [ %.neg73, %353 ], [ %.051, %346 ], [ %.051, %343 ], [ %.051, %342 ], [ 0, %332 ], [ %.051, %322 ], [ %.051, %320 ], [ %.051, %309 ], [ %.051, %299 ], [ %.051, %297 ], [ %.051, %295 ], [ %.051, %293 ], [ %.051, %291 ], [ %.051, %280 ], [ %.051, %270 ], [ %.051, %269 ], [ %.051, %268 ], [ %.051, %257 ], [ %.051, %247 ], [ %.051, %245 ], [ %.051, %243 ], [ %.051, %242 ], [ %.051, %226 ], [ %.051, %216 ], [ %.051, %213 ], [ %.051, %212 ], [ %.051, %209 ], [ %.051, %207 ], [ %.051, %206 ], [ %.051, %195 ], [ %.051, %185 ], [ %.051, %184 ], [ %.051, %173 ], [ %.051, %163 ], [ %.051, %160 ], [ %.051, %159 ], [ %.051, %157 ], [ %.051, %155 ], [ %.051, %154 ], [ %.051, %144 ], [ %.051, %134 ], [ %.051, %127 ], [ %.051, %125 ], [ %.051, %114 ], [ %.051, %104 ], [ %.051, %103 ], [ %.051, %100 ], [ %.051, %98 ], [ %.051, %96 ], [ %.051, %95 ], [ %.051, %84 ], [ %.051, %74 ], [ %.051, %71 ], [ %.051, %70 ], [ %.051, %68 ], [ %.051, %66 ], [ %.051, %64 ], [ %.051, %63 ], [ %.051, %47 ], [ %.051, %37 ], [ %.051, %35 ], [ %.051, %24 ], [ %.051, %14 ], [ %.051, %13 ], [ %.051, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ -980894670, %386 ], [ -524007352, %385 ], [ -497189369, %384 ], [ -1624311294, %382 ], [ 1059018419, %375 ], [ -1295964455, %374 ], [ 506207451, %372 ], [ -2102175186, %370 ], [ -385075608, %369 ], [ -150023524, %367 ], [ -157913077, %360 ], [ 1794975130, %359 ], [ 82873239, %356 ], [ -1212878273, %354 ], [ -248862114, %353 ], [ 1517209601, %346 ], [ %345, %343 ], [ -248862114, %342 ], [ %341, %332 ], [ %331, %322 ], [ %321, %320 ], [ %319, %309 ], [ %308, %299 ], [ 82873239, %297 ], [ -117149449, %295 ], [ 1275354122, %293 ], [ %292, %291 ], [ %290, %280 ], [ %279, %270 ], [ -117149449, %269 ], [ -1039403725, %268 ], [ %267, %257 ], [ %256, %247 ], [ 1537690182, %245 ], [ -1095651590, %243 ], [ 193382533, %242 ], [ %241, %226 ], [ %225, %216 ], [ %215, %213 ], [ -1095651590, %212 ], [ %211, %209 ], [ -1039403725, %207 ], [ 1305493995, %206 ], [ %205, %195 ], [ %194, %185 ], [ 1294801177, %184 ], [ %183, %173 ], [ %172, %163 ], [ %162, %160 ], [ 1305493995, %159 ], [ 794219165, %157 ], [ 2145495715, %155 ], [ 684073699, %154 ], [ %153, %144 ], [ %143, %134 ], [ -1944662184, %127 ], [ %126, %125 ], [ %124, %114 ], [ %113, %104 ], [ 684073699, %103 ], [ %102, %100 ], [ 794219165, %98 ], [ 1097095485, %96 ], [ -1365288737, %95 ], [ %94, %84 ], [ %83, %74 ], [ %73, %71 ], [ 1097095485, %70 ], [ 1059161071, %68 ], [ 199712559, %66 ], [ 1692650097, %64 ], [ -244922621, %63 ], [ %62, %47 ], [ %46, %37 ], [ %36, %35 ], [ %34, %24 ], [ %23, %14 ], [ 1692650097, %13 ], [ %12, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = icmp slt i32 %.071, 3
  %12 = select i1 %11, i32 -318515914, i32 849398118
  br label %.backedge

13:                                               ; preds = %9
  br label %.backedge

14:                                               ; preds = %9
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1794975130, i32 -465059817
  br label %.backedge

24:                                               ; preds = %9
  %25 = icmp slt i32 %.069, 10
  store i1 %25, i1* %8, align 1
  %26 = load i32, i32* @x.5, align 4
  %27 = load i32, i32* @y.6, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 442174703, i32 -465059817
  br label %.backedge

35:                                               ; preds = %9
  %.0..0..0.47 = load volatile i1, i1* %8, align 1
  %36 = select i1 %.0..0..0.47, i32 688171622, i32 758766922
  br label %.backedge

37:                                               ; preds = %9
  %38 = load i32, i32* @x.5, align 4
  %39 = load i32, i32* @y.6, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 -157913077, i32 912881881
  br label %.backedge

47:                                               ; preds = %9
  %48 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %49 = sext i32 %.071 to i64
  %50 = sext i32 %.069 to i64
  %51 = getelementptr inbounds [10 x i32], [10 x i32]* %0, i64 %49, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %52)
  %54 = load i32, i32* @x.5, align 4
  %55 = load i32, i32* @y.6, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 258070749, i32 912881881
  br label %.backedge

63:                                               ; preds = %9
  br label %.backedge

64:                                               ; preds = %9
  %65 = add i32 %.069, 1
  br label %.backedge

66:                                               ; preds = %9
  %67 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

68:                                               ; preds = %9
  %69 = add i32 %.071, 1
  br label %.backedge

70:                                               ; preds = %9
  br label %.backedge

71:                                               ; preds = %9
  %72 = icmp slt i32 %.067, 20
  %73 = select i1 %72, i32 -1240774529, i32 -458770792
  br label %.backedge

74:                                               ; preds = %9
  %75 = load i32, i32* @x.5, align 4
  %76 = load i32, i32* @y.6, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 -150023524, i32 707370456
  br label %.backedge

84:                                               ; preds = %9
  %85 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 35)
  %86 = load i32, i32* @x.5, align 4
  %87 = load i32, i32* @y.6, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 -1436243583, i32 707370456
  br label %.backedge

95:                                               ; preds = %9
  br label %.backedge

96:                                               ; preds = %9
  %97 = add i32 %.067, 1
  br label %.backedge

98:                                               ; preds = %9
  %99 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

100:                                              ; preds = %9
  %101 = icmp slt i32 %.065, 3
  %102 = select i1 %101, i32 -132448799, i32 123754569
  br label %.backedge

103:                                              ; preds = %9
  br label %.backedge

104:                                              ; preds = %9
  %105 = load i32, i32* @x.5, align 4
  %106 = load i32, i32* @y.6, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 -385075608, i32 -1735856711
  br label %.backedge

114:                                              ; preds = %9
  %115 = icmp slt i32 %.063, 10
  store i1 %115, i1* %7, align 1
  %116 = load i32, i32* @x.5, align 4
  %117 = load i32, i32* @y.6, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 -1109616259, i32 -1735856711
  br label %.backedge

125:                                              ; preds = %9
  %.0..0..0.48 = load volatile i1, i1* %7, align 1
  %126 = select i1 %.0..0..0.48, i32 -923615553, i32 -1974945385
  br label %.backedge

127:                                              ; preds = %9
  %128 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %129 = sext i32 %.065 to i64
  %130 = sext i32 %.063 to i64
  %131 = getelementptr inbounds [10 x i32], [10 x i32]* %1, i64 %129, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %132)
  br label %.backedge

134:                                              ; preds = %9
  %135 = load i32, i32* @x.5, align 4
  %136 = load i32, i32* @y.6, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 -2102175186, i32 2104958631
  br label %.backedge

144:                                              ; preds = %9
  %.neg74 = add i32 %.063, 1
  %145 = load i32, i32* @x.5, align 4
  %146 = load i32, i32* @y.6, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 1396134207, i32 2104958631
  br label %.backedge

154:                                              ; preds = %9
  br label %.backedge

155:                                              ; preds = %9
  %156 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

157:                                              ; preds = %9
  %158 = add i32 %.065, 1
  br label %.backedge

159:                                              ; preds = %9
  br label %.backedge

160:                                              ; preds = %9
  %161 = icmp slt i32 %.061, 20
  %162 = select i1 %161, i32 2131021286, i32 1018781356
  br label %.backedge

163:                                              ; preds = %9
  %164 = load i32, i32* @x.5, align 4
  %165 = load i32, i32* @y.6, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 506207451, i32 824577623
  br label %.backedge

173:                                              ; preds = %9
  %174 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 35)
  %175 = load i32, i32* @x.5, align 4
  %176 = load i32, i32* @y.6, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 1947972919, i32 824577623
  br label %.backedge

184:                                              ; preds = %9
  br label %.backedge

185:                                              ; preds = %9
  %186 = load i32, i32* @x.5, align 4
  %187 = load i32, i32* @y.6, align 4
  %188 = add i32 %186, -1
  %189 = mul i32 %188, %186
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %192, %191
  %194 = select i1 %193, i32 -1295964455, i32 1680274374
  br label %.backedge

195:                                              ; preds = %9
  %196 = add i32 %.061, 1
  %197 = load i32, i32* @x.5, align 4
  %198 = load i32, i32* @y.6, align 4
  %199 = add i32 %197, -1
  %200 = mul i32 %199, %197
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %203, %202
  %205 = select i1 %204, i32 -216690239, i32 1680274374
  br label %.backedge

206:                                              ; preds = %9
  br label %.backedge

207:                                              ; preds = %9
  %208 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

209:                                              ; preds = %9
  %210 = icmp slt i32 %.059, 3
  %211 = select i1 %210, i32 320001498, i32 1932549675
  br label %.backedge

212:                                              ; preds = %9
  br label %.backedge

213:                                              ; preds = %9
  %214 = icmp slt i32 %.057, 10
  %215 = select i1 %214, i32 1950031495, i32 -1637494633
  br label %.backedge

216:                                              ; preds = %9
  %217 = load i32, i32* @x.5, align 4
  %218 = load i32, i32* @y.6, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 1059018419, i32 1076768371
  br label %.backedge

226:                                              ; preds = %9
  %227 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %228 = sext i32 %.059 to i64
  %229 = sext i32 %.057 to i64
  %230 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i64 %228, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %231)
  %233 = load i32, i32* @x.5, align 4
  %234 = load i32, i32* @y.6, align 4
  %235 = add i32 %233, -1
  %236 = mul i32 %235, %233
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %239, %238
  %241 = select i1 %240, i32 616807947, i32 1076768371
  br label %.backedge

242:                                              ; preds = %9
  br label %.backedge

243:                                              ; preds = %9
  %244 = add i32 %.057, 1
  br label %.backedge

245:                                              ; preds = %9
  %246 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

247:                                              ; preds = %9
  %248 = load i32, i32* @x.5, align 4
  %249 = load i32, i32* @y.6, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 -1624311294, i32 1303531291
  br label %.backedge

257:                                              ; preds = %9
  %258 = add i32 %.059, 1
  %259 = load i32, i32* @x.5, align 4
  %260 = load i32, i32* @y.6, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 -1038102291, i32 1303531291
  br label %.backedge

268:                                              ; preds = %9
  br label %.backedge

269:                                              ; preds = %9
  br label %.backedge

270:                                              ; preds = %9
  %271 = load i32, i32* @x.5, align 4
  %272 = load i32, i32* @y.6, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 -497189369, i32 1428606270
  br label %.backedge

280:                                              ; preds = %9
  %281 = icmp slt i32 %.055, 20
  store i1 %281, i1* %6, align 1
  %282 = load i32, i32* @x.5, align 4
  %283 = load i32, i32* @y.6, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 1087890077, i32 1428606270
  br label %.backedge

291:                                              ; preds = %9
  %.0..0..0.49 = load volatile i1, i1* %6, align 1
  %292 = select i1 %.0..0..0.49, i32 -1168068769, i32 1618063414
  br label %.backedge

293:                                              ; preds = %9
  %294 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 35)
  br label %.backedge

295:                                              ; preds = %9
  %296 = add i32 %.055, 1
  br label %.backedge

297:                                              ; preds = %9
  %298 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

299:                                              ; preds = %9
  %300 = load i32, i32* @x.5, align 4
  %301 = load i32, i32* @y.6, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 -524007352, i32 -1864103348
  br label %.backedge

309:                                              ; preds = %9
  %310 = icmp slt i32 %.053, 3
  store i1 %310, i1* %5, align 1
  %311 = load i32, i32* @x.5, align 4
  %312 = load i32, i32* @y.6, align 4
  %313 = add i32 %311, -1
  %314 = mul i32 %313, %311
  %315 = and i32 %314, 1
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %317, %316
  %319 = select i1 %318, i32 2090095551, i32 -1864103348
  br label %.backedge

320:                                              ; preds = %9
  %.0..0..0.50 = load volatile i1, i1* %5, align 1
  %321 = select i1 %.0..0..0.50, i32 -155641093, i32 60069412
  br label %.backedge

322:                                              ; preds = %9
  %323 = load i32, i32* @x.5, align 4
  %324 = load i32, i32* @y.6, align 4
  %325 = add i32 %323, -1
  %326 = mul i32 %325, %323
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %329, %328
  %331 = select i1 %330, i32 -980894670, i32 -2046453328
  br label %.backedge

332:                                              ; preds = %9
  %333 = load i32, i32* @x.5, align 4
  %334 = load i32, i32* @y.6, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 -2026417815, i32 -2046453328
  br label %.backedge

342:                                              ; preds = %9
  br label %.backedge

343:                                              ; preds = %9
  %344 = icmp slt i32 %.051, 10
  %345 = select i1 %344, i32 -1591036132, i32 228044778
  br label %.backedge

346:                                              ; preds = %9
  %347 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %348 = sext i32 %.053 to i64
  %349 = sext i32 %.051 to i64
  %350 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 %348, i64 %349
  %351 = load i32, i32* %350, align 4
  %352 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %351)
  br label %.backedge

353:                                              ; preds = %9
  %.neg73 = add i32 %.051, 1
  br label %.backedge

354:                                              ; preds = %9
  %355 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

356:                                              ; preds = %9
  %357 = add i32 %.053, 1
  br label %.backedge

358:                                              ; preds = %9
  ret void

359:                                              ; preds = %9
  br label %.backedge

360:                                              ; preds = %9
  %361 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %362 = sext i32 %.071 to i64
  %363 = sext i32 %.069 to i64
  %364 = getelementptr inbounds [10 x i32], [10 x i32]* %0, i64 %362, i64 %363
  %365 = load i32, i32* %364, align 4
  %366 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %365)
  br label %.backedge

367:                                              ; preds = %9
  %368 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 35)
  br label %.backedge

369:                                              ; preds = %9
  br label %.backedge

370:                                              ; preds = %9
  %371 = add i32 %.063, 1
  br label %.backedge

372:                                              ; preds = %9
  %373 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 35)
  br label %.backedge

374:                                              ; preds = %9
  %.neg = add i32 %.061, 1
  br label %.backedge

375:                                              ; preds = %9
  %376 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %377 = sext i32 %.059 to i64
  %378 = sext i32 %.057 to i64
  %379 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i64 %377, i64 %378
  %380 = load i32, i32* %379, align 4
  %381 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %380)
  br label %.backedge

382:                                              ; preds = %9
  %383 = add i32 %.059, 1
  br label %.backedge

384:                                              ; preds = %9
  br label %.backedge

385:                                              ; preds = %9
  br label %.backedge

386:                                              ; preds = %9
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline norecurse uwtable
define i32 @main(i32 %0, i8** nocapture readnone %1) local_unnamed_addr #6 {
  %3 = alloca i32, align 4
  %4 = alloca i1, align 1
  %5 = alloca [3 x [10 x i32]], align 16
  %6 = alloca [3 x [10 x i32]], align 16
  %7 = alloca [3 x [10 x i32]], align 16
  %8 = alloca [3 x [10 x i32]], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %5, i64 0, i64 0
  call void @_Z4initPA10_i([10 x i32]* nonnull %14)
  %15 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %6, i64 0, i64 0
  call void @_Z4initPA10_i([10 x i32]* nonnull %15)
  %16 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %7, i64 0, i64 0
  call void @_Z4initPA10_i([10 x i32]* nonnull %16)
  %17 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %8, i64 0, i64 0
  call void @_Z4initPA10_i([10 x i32]* nonnull %17)
  %18 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  br label %19

19:                                               ; preds = %.backedge, %2
  %.010 = phi i32 [ 0, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ 1711795857, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1711795857, label %20
    i32 131132932, label %30
    i32 279898400, label %42
    i32 1187983234, label %44
    i32 -848579721, label %50
    i32 576100694, label %53
    i32 -807921468, label %56
    i32 1556698685, label %59
    i32 25378599, label %62
    i32 -1551983666, label %65
    i32 -418184109, label %69
    i32 -919698061, label %79
    i32 1194204234, label %92
    i32 8181446, label %93
    i32 -1840512979, label %97
    i32 1924725790, label %101
    i32 1074598889, label %102
    i32 -357002578, label %112
    i32 -1298632071, label %122
    i32 -2059673315, label %123
    i32 -1615367655, label %133
    i32 -1478198976, label %143
    i32 -510324025, label %144
    i32 -1993108769, label %154
    i32 -1145449793, label %164
    i32 195824992, label %165
    i32 -1664387882, label %166
    i32 -1360241395, label %170
    i32 -1109758413, label %171
    i32 1689582597, label %173
  ]

.backedge:                                        ; preds = %19, %173, %171, %170, %166, %165, %154, %144, %143, %133, %123, %122, %112, %102, %101, %97, %93, %92, %79, %69, %65, %62, %59, %56, %53, %50, %44, %42, %30, %20
  %.010.be = phi i32 [ %.010, %19 ], [ %.010, %173 ], [ %172, %171 ], [ %.010, %170 ], [ %.010, %166 ], [ %.010, %165 ], [ %.010, %154 ], [ %.010, %144 ], [ %.010, %143 ], [ %.neg, %133 ], [ %.010, %123 ], [ %.010, %122 ], [ %.010, %112 ], [ %.010, %102 ], [ %.010, %101 ], [ %.010, %97 ], [ %.010, %93 ], [ %.010, %92 ], [ %.010, %79 ], [ %.010, %69 ], [ %.010, %65 ], [ %.010, %62 ], [ %.010, %59 ], [ %.010, %56 ], [ %.010, %53 ], [ %.010, %50 ], [ %.010, %44 ], [ %.010, %42 ], [ %.010, %30 ], [ %.010, %20 ]
  %.0.be = phi i32 [ %.0, %19 ], [ -1993108769, %173 ], [ -1615367655, %171 ], [ -357002578, %170 ], [ -919698061, %166 ], [ 131132932, %165 ], [ %163, %154 ], [ %153, %144 ], [ 1711795857, %143 ], [ %142, %133 ], [ %132, %123 ], [ -2059673315, %122 ], [ %121, %112 ], [ %111, %102 ], [ 1074598889, %101 ], [ 1074598889, %97 ], [ 1074598889, %93 ], [ 1074598889, %92 ], [ %91, %79 ], [ %78, %69 ], [ 1074598889, %65 ], [ %64, %62 ], [ %61, %59 ], [ %58, %56 ], [ %55, %53 ], [ %52, %50 ], [ -848579721, %44 ], [ %43, %42 ], [ %41, %30 ], [ %29, %20 ]
  br label %19

20:                                               ; preds = %19
  %21 = load i32, i32* @x.7, align 4
  %22 = load i32, i32* @y.8, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 131132932, i32 195824992
  br label %.backedge

30:                                               ; preds = %19
  %31 = load i32, i32* %9, align 4
  %32 = icmp slt i32 %.010, %31
  store i1 %32, i1* %4, align 1
  %33 = load i32, i32* @x.7, align 4
  %34 = load i32, i32* @y.8, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 279898400, i32 195824992
  br label %.backedge

42:                                               ; preds = %19
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %43 = select i1 %.0..0..0., i32 1187983234, i32 -510324025
  br label %.backedge

44:                                               ; preds = %19
  %45 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %10)
  %46 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %45, i32* nonnull dereferenceable(4) %11)
  %47 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %46, i32* nonnull dereferenceable(4) %12)
  %48 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %47, i32* nonnull dereferenceable(4) %13)
  %49 = load i32, i32* %10, align 4
  store i32 %49, i32* %3, align 4
  br label %.backedge

50:                                               ; preds = %19
  %.0..0..0.5 = load volatile i32, i32* %3, align 4
  %51 = icmp slt i32 %.0..0..0.5, 3
  %52 = select i1 %51, i32 1556698685, i32 576100694
  br label %.backedge

53:                                               ; preds = %19
  %.0..0..0.6 = load volatile i32, i32* %3, align 4
  %54 = icmp slt i32 %.0..0..0.6, 4
  %55 = select i1 %54, i32 8181446, i32 -807921468
  br label %.backedge

56:                                               ; preds = %19
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %57 = icmp eq i32 %.0..0..0.7, 4
  %58 = select i1 %57, i32 -1840512979, i32 1924725790
  br label %.backedge

59:                                               ; preds = %19
  %.0..0..0.8 = load volatile i32, i32* %3, align 4
  %60 = icmp slt i32 %.0..0..0.8, 2
  %61 = select i1 %60, i32 25378599, i32 -418184109
  br label %.backedge

62:                                               ; preds = %19
  %.0..0..0.9 = load volatile i32, i32* %3, align 4
  %63 = icmp eq i32 %.0..0..0.9, 1
  %64 = select i1 %63, i32 -1551983666, i32 1924725790
  br label %.backedge

65:                                               ; preds = %19
  %66 = load i32, i32* %11, align 4
  %67 = load i32, i32* %12, align 4
  %68 = load i32, i32* %13, align 4
  call void @_Z16updateDormStatusPA10_iiii([10 x i32]* nonnull %14, i32 %66, i32 %67, i32 %68)
  br label %.backedge

69:                                               ; preds = %19
  %70 = load i32, i32* @x.7, align 4
  %71 = load i32, i32* @y.8, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -919698061, i32 -1664387882
  br label %.backedge

79:                                               ; preds = %19
  %80 = load i32, i32* %11, align 4
  %81 = load i32, i32* %12, align 4
  %82 = load i32, i32* %13, align 4
  call void @_Z16updateDormStatusPA10_iiii([10 x i32]* nonnull %15, i32 %80, i32 %81, i32 %82)
  %83 = load i32, i32* @x.7, align 4
  %84 = load i32, i32* @y.8, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 1194204234, i32 -1664387882
  br label %.backedge

92:                                               ; preds = %19
  br label %.backedge

93:                                               ; preds = %19
  %94 = load i32, i32* %11, align 4
  %95 = load i32, i32* %12, align 4
  %96 = load i32, i32* %13, align 4
  call void @_Z16updateDormStatusPA10_iiii([10 x i32]* nonnull %16, i32 %94, i32 %95, i32 %96)
  br label %.backedge

97:                                               ; preds = %19
  %98 = load i32, i32* %11, align 4
  %99 = load i32, i32* %12, align 4
  %100 = load i32, i32* %13, align 4
  call void @_Z16updateDormStatusPA10_iiii([10 x i32]* nonnull %17, i32 %98, i32 %99, i32 %100)
  br label %.backedge

101:                                              ; preds = %19
  br label %.backedge

102:                                              ; preds = %19
  %103 = load i32, i32* @x.7, align 4
  %104 = load i32, i32* @y.8, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -357002578, i32 -1360241395
  br label %.backedge

112:                                              ; preds = %19
  %113 = load i32, i32* @x.7, align 4
  %114 = load i32, i32* @y.8, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 -1298632071, i32 -1360241395
  br label %.backedge

122:                                              ; preds = %19
  br label %.backedge

123:                                              ; preds = %19
  %124 = load i32, i32* @x.7, align 4
  %125 = load i32, i32* @y.8, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 -1615367655, i32 -1109758413
  br label %.backedge

133:                                              ; preds = %19
  %.neg = add i32 %.010, 1
  %134 = load i32, i32* @x.7, align 4
  %135 = load i32, i32* @y.8, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 -1478198976, i32 -1109758413
  br label %.backedge

143:                                              ; preds = %19
  br label %.backedge

144:                                              ; preds = %19
  %145 = load i32, i32* @x.7, align 4
  %146 = load i32, i32* @y.8, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 -1993108769, i32 1689582597
  br label %.backedge

154:                                              ; preds = %19
  call void @_Z9printDormPA10_iS0_S0_S0_([10 x i32]* nonnull %14, [10 x i32]* nonnull %15, [10 x i32]* nonnull %16, [10 x i32]* nonnull %17)
  %155 = load i32, i32* @x.7, align 4
  %156 = load i32, i32* @y.8, align 4
  %157 = add i32 %155, -1
  %158 = mul i32 %157, %155
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %161, %160
  %163 = select i1 %162, i32 -1145449793, i32 1689582597
  br label %.backedge

164:                                              ; preds = %19
  ret i32 0

165:                                              ; preds = %19
  br label %.backedge

166:                                              ; preds = %19
  %167 = load i32, i32* %11, align 4
  %168 = load i32, i32* %12, align 4
  %169 = load i32, i32* %13, align 4
  call void @_Z16updateDormStatusPA10_iiii([10 x i32]* nonnull %15, i32 %167, i32 %168, i32 %169)
  br label %.backedge

170:                                              ; preds = %19
  br label %.backedge

171:                                              ; preds = %19
  %172 = add i32 %.010, 1
  br label %.backedge

173:                                              ; preds = %19
  call void @_Z9printDormPA10_iS0_S0_S0_([10 x i32]* nonnull %14, [10 x i32]* nonnull %15, [10 x i32]* nonnull %16, [10 x i32]* nonnull %17)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s296582230.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.9, align 4
  %4 = load i32, i32* @y.10, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 914082900, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 914082900, label %11
    i32 -1355885195, label %14
    i32 1577588331, label %24
    i32 -561539032, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1355885195, i32 -561539032
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.9, align 4
  %16 = load i32, i32* @y.10, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1577588331, i32 -561539032
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1355885195, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nosync nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
