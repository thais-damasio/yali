; ModuleID = 'build_ollvm/programs/p02409/s896769456.ll'
source_filename = "Project_CodeNet_C++1400/p02409/s896769456.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s896769456.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1918066602, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1918066602, label %11
    i32 -1444418014, label %14
    i32 -1462087611, label %25
    i32 1353380405, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1444418014, i32 1353380405
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1462087611, i32 1353380405
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1444418014, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca [4 x [3 x [10 x i32]]], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  br label %12

12:                                               ; preds = %.backedge, %0
  %.064 = phi i32 [ 0, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i32 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.0 = phi i32 [ 32058215, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 32058215, label %13
    i32 -870140113, label %23
    i32 232723671, label %34
    i32 -609483028, label %36
    i32 -657458634, label %46
    i32 -1425947642, label %56
    i32 -1267021652, label %57
    i32 1531945192, label %60
    i32 -1855196992, label %61
    i32 -1342985203, label %64
    i32 -1893356924, label %74
    i32 -48385183, label %88
    i32 465838753, label %89
    i32 949992936, label %90
    i32 -1146740219, label %100
    i32 532357030, label %110
    i32 -1546777664, label %111
    i32 -1480214164, label %113
    i32 -609340754, label %123
    i32 2074721143, label %133
    i32 -1320383068, label %134
    i32 1376099262, label %144
    i32 -1955103070, label %155
    i32 450941551, label %156
    i32 1319867098, label %166
    i32 -1542536947, label %177
    i32 1593288366, label %178
    i32 446525468, label %188
    i32 -1736887287, label %200
    i32 1985568995, label %202
    i32 167083630, label %220
    i32 1955952815, label %230
    i32 1778427450, label %240
    i32 -306283511, label %241
    i32 -269812822, label %242
    i32 854628112, label %245
    i32 -785068358, label %246
    i32 814835155, label %249
    i32 472213882, label %259
    i32 676183884, label %269
    i32 153981459, label %270
    i32 -25446625, label %273
    i32 -935263874, label %281
    i32 -1395156611, label %291
    i32 1904000026, label %302
    i32 307880614, label %303
    i32 -93699148, label %313
    i32 -466170321, label %324
    i32 -87401985, label %325
    i32 1615698389, label %327
    i32 -2092207484, label %328
    i32 970113741, label %338
    i32 -497285239, label %349
    i32 -1351104517, label %351
    i32 667638544, label %353
    i32 2116392486, label %354
    i32 480044759, label %356
    i32 -570308610, label %366
    i32 -1583205857, label %376
    i32 -1078272903, label %377
    i32 1448979845, label %378
    i32 -929238403, label %381
    i32 156340456, label %382
    i32 -880701445, label %392
    i32 608681860, label %403
    i32 -1759878311, label %405
    i32 1289907981, label %412
    i32 568816518, label %414
    i32 188634574, label %416
    i32 -666245249, label %417
    i32 -1220727006, label %427
    i32 3143431, label %437
    i32 -1011087622, label %438
    i32 546624801, label %439
    i32 -1174226248, label %440
    i32 -1524497200, label %445
    i32 -777088167, label %446
    i32 1972830856, label %447
    i32 1849920011, label %449
    i32 -1798476883, label %451
    i32 -1972325091, label %452
    i32 851442084, label %454
    i32 -241838668, label %455
    i32 566115630, label %456
    i32 758312833, label %458
    i32 -614200251, label %459
    i32 -986889172, label %460
    i32 1340036628, label %461
  ]

.backedge:                                        ; preds = %12, %461, %460, %459, %458, %456, %455, %454, %452, %451, %449, %447, %446, %445, %440, %439, %438, %427, %417, %416, %414, %412, %405, %403, %392, %382, %381, %378, %377, %376, %366, %356, %354, %353, %351, %349, %338, %328, %327, %325, %324, %313, %303, %302, %291, %281, %273, %270, %269, %259, %249, %246, %245, %242, %241, %240, %230, %220, %202, %200, %188, %178, %177, %166, %156, %155, %144, %134, %133, %123, %113, %111, %110, %100, %90, %89, %88, %74, %64, %61, %60, %57, %56, %46, %36, %34, %23, %13
  %.064.be = phi i32 [ %.064, %12 ], [ %.064, %461 ], [ %.064, %460 ], [ %.064, %459 ], [ %.064, %458 ], [ %.064, %456 ], [ %.064, %455 ], [ %.064, %454 ], [ %.064, %452 ], [ %.064, %451 ], [ %.064, %449 ], [ %448, %447 ], [ %.064, %446 ], [ %.064, %445 ], [ %.064, %440 ], [ %.064, %439 ], [ %.064, %438 ], [ %.064, %427 ], [ %.064, %417 ], [ %.064, %416 ], [ %.064, %414 ], [ %.064, %412 ], [ %.064, %405 ], [ %.064, %403 ], [ %.064, %392 ], [ %.064, %382 ], [ %.064, %381 ], [ %.064, %378 ], [ %.064, %377 ], [ %.064, %376 ], [ %.064, %366 ], [ %.064, %356 ], [ %.064, %354 ], [ %.064, %353 ], [ %.064, %351 ], [ %.064, %349 ], [ %.064, %338 ], [ %.064, %328 ], [ %.064, %327 ], [ %.064, %325 ], [ %.064, %324 ], [ %.064, %313 ], [ %.064, %303 ], [ %.064, %302 ], [ %.064, %291 ], [ %.064, %281 ], [ %.064, %273 ], [ %.064, %270 ], [ %.064, %269 ], [ %.064, %259 ], [ %.064, %249 ], [ %.064, %246 ], [ %.064, %245 ], [ %.064, %242 ], [ %.064, %241 ], [ %.064, %240 ], [ %.064, %230 ], [ %.064, %220 ], [ %.064, %202 ], [ %.064, %200 ], [ %.064, %188 ], [ %.064, %178 ], [ %.064, %177 ], [ %.064, %166 ], [ %.064, %156 ], [ %.064, %155 ], [ %145, %144 ], [ %.064, %134 ], [ %.064, %133 ], [ %.064, %123 ], [ %.064, %113 ], [ %.064, %111 ], [ %.064, %110 ], [ %.064, %100 ], [ %.064, %90 ], [ %.064, %89 ], [ %.064, %88 ], [ %.064, %74 ], [ %.064, %64 ], [ %.064, %61 ], [ %.064, %60 ], [ %.064, %57 ], [ %.064, %56 ], [ %.064, %46 ], [ %.064, %36 ], [ %.064, %34 ], [ %.064, %23 ], [ %.064, %13 ]
  %.062.be = phi i32 [ %.062, %12 ], [ %.062, %461 ], [ %.062, %460 ], [ %.062, %459 ], [ %.062, %458 ], [ %.062, %456 ], [ %.062, %455 ], [ %.062, %454 ], [ %.062, %452 ], [ %.062, %451 ], [ %.062, %449 ], [ %.062, %447 ], [ %.062, %446 ], [ %.062, %445 ], [ %.062, %440 ], [ 0, %439 ], [ %.062, %438 ], [ %.062, %427 ], [ %.062, %417 ], [ %.062, %416 ], [ %.062, %414 ], [ %.062, %412 ], [ %.062, %405 ], [ %.062, %403 ], [ %.062, %392 ], [ %.062, %382 ], [ %.062, %381 ], [ %.062, %378 ], [ %.062, %377 ], [ %.062, %376 ], [ %.062, %366 ], [ %.062, %356 ], [ %.062, %354 ], [ %.062, %353 ], [ %.062, %351 ], [ %.062, %349 ], [ %.062, %338 ], [ %.062, %328 ], [ %.062, %327 ], [ %.062, %325 ], [ %.062, %324 ], [ %.062, %313 ], [ %.062, %303 ], [ %.062, %302 ], [ %.062, %291 ], [ %.062, %281 ], [ %.062, %273 ], [ %.062, %270 ], [ %.062, %269 ], [ %.062, %259 ], [ %.062, %249 ], [ %.062, %246 ], [ %.062, %245 ], [ %.062, %242 ], [ %.062, %241 ], [ %.062, %240 ], [ %.062, %230 ], [ %.062, %220 ], [ %.062, %202 ], [ %.062, %200 ], [ %.062, %188 ], [ %.062, %178 ], [ %.062, %177 ], [ %.062, %166 ], [ %.062, %156 ], [ %.062, %155 ], [ %.062, %144 ], [ %.062, %134 ], [ %.062, %133 ], [ %.062, %123 ], [ %.062, %113 ], [ %112, %111 ], [ %.062, %110 ], [ %.062, %100 ], [ %.062, %90 ], [ %.062, %89 ], [ %.062, %88 ], [ %.062, %74 ], [ %.062, %64 ], [ %.062, %61 ], [ %.062, %60 ], [ %.062, %57 ], [ %.062, %56 ], [ 0, %46 ], [ %.062, %36 ], [ %.062, %34 ], [ %.062, %23 ], [ %.062, %13 ]
  %.060.be = phi i32 [ %.060, %12 ], [ %.060, %461 ], [ %.060, %460 ], [ %.060, %459 ], [ %.060, %458 ], [ %.060, %456 ], [ %.060, %455 ], [ %.060, %454 ], [ %.060, %452 ], [ %.060, %451 ], [ %.060, %449 ], [ %.060, %447 ], [ %.060, %446 ], [ %.060, %445 ], [ %.060, %440 ], [ %.060, %439 ], [ %.060, %438 ], [ %.060, %427 ], [ %.060, %417 ], [ %.060, %416 ], [ %.060, %414 ], [ %.060, %412 ], [ %.060, %405 ], [ %.060, %403 ], [ %.060, %392 ], [ %.060, %382 ], [ %.060, %381 ], [ %.060, %378 ], [ %.060, %377 ], [ %.060, %376 ], [ %.060, %366 ], [ %.060, %356 ], [ %.060, %354 ], [ %.060, %353 ], [ %.060, %351 ], [ %.060, %349 ], [ %.060, %338 ], [ %.060, %328 ], [ %.060, %327 ], [ %.060, %325 ], [ %.060, %324 ], [ %.060, %313 ], [ %.060, %303 ], [ %.060, %302 ], [ %.060, %291 ], [ %.060, %281 ], [ %.060, %273 ], [ %.060, %270 ], [ %.060, %269 ], [ %.060, %259 ], [ %.060, %249 ], [ %.060, %246 ], [ %.060, %245 ], [ %.060, %242 ], [ %.060, %241 ], [ %.060, %240 ], [ %.060, %230 ], [ %.060, %220 ], [ %.060, %202 ], [ %.060, %200 ], [ %.060, %188 ], [ %.060, %178 ], [ %.060, %177 ], [ %.060, %166 ], [ %.060, %156 ], [ %.060, %155 ], [ %.060, %144 ], [ %.060, %134 ], [ %.060, %133 ], [ %.060, %123 ], [ %.060, %113 ], [ %.060, %111 ], [ %.060, %110 ], [ %.060, %100 ], [ %.060, %90 ], [ %.neg71, %89 ], [ %.060, %88 ], [ %.060, %74 ], [ %.060, %64 ], [ %.060, %61 ], [ 0, %60 ], [ %.060, %57 ], [ %.060, %56 ], [ %.060, %46 ], [ %.060, %36 ], [ %.060, %34 ], [ %.060, %23 ], [ %.060, %13 ]
  %.058.be = phi i32 [ %.058, %12 ], [ %.058, %461 ], [ %.058, %460 ], [ %.058, %459 ], [ %.058, %458 ], [ %.058, %456 ], [ %.058, %455 ], [ %.058, %454 ], [ %453, %452 ], [ %.058, %451 ], [ 0, %449 ], [ %.058, %447 ], [ %.058, %446 ], [ %.058, %445 ], [ %.058, %440 ], [ %.058, %439 ], [ %.058, %438 ], [ %.058, %427 ], [ %.058, %417 ], [ %.058, %416 ], [ %.058, %414 ], [ %.058, %412 ], [ %.058, %405 ], [ %.058, %403 ], [ %.058, %392 ], [ %.058, %382 ], [ %.058, %381 ], [ %.058, %378 ], [ %.058, %377 ], [ %.058, %376 ], [ %.058, %366 ], [ %.058, %356 ], [ %.058, %354 ], [ %.058, %353 ], [ %.058, %351 ], [ %.058, %349 ], [ %.058, %338 ], [ %.058, %328 ], [ %.058, %327 ], [ %.058, %325 ], [ %.058, %324 ], [ %.058, %313 ], [ %.058, %303 ], [ %.058, %302 ], [ %.058, %291 ], [ %.058, %281 ], [ %.058, %273 ], [ %.058, %270 ], [ %.058, %269 ], [ %.058, %259 ], [ %.058, %249 ], [ %.058, %246 ], [ %.058, %245 ], [ %.058, %242 ], [ %.058, %241 ], [ %.058, %240 ], [ %.neg70, %230 ], [ %.058, %220 ], [ %.058, %202 ], [ %.058, %200 ], [ %.058, %188 ], [ %.058, %178 ], [ %.058, %177 ], [ 0, %166 ], [ %.058, %156 ], [ %.058, %155 ], [ %.058, %144 ], [ %.058, %134 ], [ %.058, %133 ], [ %.058, %123 ], [ %.058, %113 ], [ %.058, %111 ], [ %.058, %110 ], [ %.058, %100 ], [ %.058, %90 ], [ %.058, %89 ], [ %.058, %88 ], [ %.058, %74 ], [ %.058, %64 ], [ %.058, %61 ], [ %.058, %60 ], [ %.058, %57 ], [ %.058, %56 ], [ %.058, %46 ], [ %.058, %36 ], [ %.058, %34 ], [ %.058, %23 ], [ %.058, %13 ]
  %.056.be = phi i32 [ %.056, %12 ], [ %.056, %461 ], [ %.056, %460 ], [ %.neg, %459 ], [ %.056, %458 ], [ %.056, %456 ], [ %.056, %455 ], [ %.056, %454 ], [ %.056, %452 ], [ %.056, %451 ], [ %.056, %449 ], [ %.056, %447 ], [ %.056, %446 ], [ %.056, %445 ], [ %.056, %440 ], [ %.056, %439 ], [ %.056, %438 ], [ %.056, %427 ], [ %.056, %417 ], [ %.056, %416 ], [ %.056, %414 ], [ %.056, %412 ], [ %.056, %405 ], [ %.056, %403 ], [ %.056, %392 ], [ %.056, %382 ], [ %.056, %381 ], [ %.056, %378 ], [ %.056, %377 ], [ %.056, %376 ], [ %.neg68, %366 ], [ %.056, %356 ], [ %.056, %354 ], [ %.056, %353 ], [ %.056, %351 ], [ %.056, %349 ], [ %.056, %338 ], [ %.056, %328 ], [ %.056, %327 ], [ %.056, %325 ], [ %.056, %324 ], [ %.056, %313 ], [ %.056, %303 ], [ %.056, %302 ], [ %.056, %291 ], [ %.056, %281 ], [ %.056, %273 ], [ %.056, %270 ], [ %.056, %269 ], [ %.056, %259 ], [ %.056, %249 ], [ %.056, %246 ], [ %.056, %245 ], [ %.056, %242 ], [ 0, %241 ], [ %.056, %240 ], [ %.056, %230 ], [ %.056, %220 ], [ %.056, %202 ], [ %.056, %200 ], [ %.056, %188 ], [ %.056, %178 ], [ %.056, %177 ], [ %.056, %166 ], [ %.056, %156 ], [ %.056, %155 ], [ %.056, %144 ], [ %.056, %134 ], [ %.056, %133 ], [ %.056, %123 ], [ %.056, %113 ], [ %.056, %111 ], [ %.056, %110 ], [ %.056, %100 ], [ %.056, %90 ], [ %.056, %89 ], [ %.056, %88 ], [ %.056, %74 ], [ %.056, %64 ], [ %.056, %61 ], [ %.056, %60 ], [ %.056, %57 ], [ %.056, %56 ], [ %.056, %46 ], [ %.056, %36 ], [ %.056, %34 ], [ %.056, %23 ], [ %.056, %13 ]
  %.054.be = phi i32 [ %.054, %12 ], [ %.054, %461 ], [ %.054, %460 ], [ %.054, %459 ], [ %.054, %458 ], [ %.054, %456 ], [ %.054, %455 ], [ %.054, %454 ], [ %.054, %452 ], [ %.054, %451 ], [ %.054, %449 ], [ %.054, %447 ], [ %.054, %446 ], [ %.054, %445 ], [ %.054, %440 ], [ %.054, %439 ], [ %.054, %438 ], [ %.054, %427 ], [ %.054, %417 ], [ %.054, %416 ], [ %.054, %414 ], [ %.054, %412 ], [ %.054, %405 ], [ %.054, %403 ], [ %.054, %392 ], [ %.054, %382 ], [ %.054, %381 ], [ %.054, %378 ], [ %.054, %377 ], [ %.054, %376 ], [ %.054, %366 ], [ %.054, %356 ], [ %.054, %354 ], [ %.054, %353 ], [ %.054, %351 ], [ %.054, %349 ], [ %.054, %338 ], [ %.054, %328 ], [ %.054, %327 ], [ %326, %325 ], [ %.054, %324 ], [ %.054, %313 ], [ %.054, %303 ], [ %.054, %302 ], [ %.054, %291 ], [ %.054, %281 ], [ %.054, %273 ], [ %.054, %270 ], [ %.054, %269 ], [ %.054, %259 ], [ %.054, %249 ], [ %.054, %246 ], [ 0, %245 ], [ %.054, %242 ], [ %.054, %241 ], [ %.054, %240 ], [ %.054, %230 ], [ %.054, %220 ], [ %.054, %202 ], [ %.054, %200 ], [ %.054, %188 ], [ %.054, %178 ], [ %.054, %177 ], [ %.054, %166 ], [ %.054, %156 ], [ %.054, %155 ], [ %.054, %144 ], [ %.054, %134 ], [ %.054, %133 ], [ %.054, %123 ], [ %.054, %113 ], [ %.054, %111 ], [ %.054, %110 ], [ %.054, %100 ], [ %.054, %90 ], [ %.054, %89 ], [ %.054, %88 ], [ %.054, %74 ], [ %.054, %64 ], [ %.054, %61 ], [ %.054, %60 ], [ %.054, %57 ], [ %.054, %56 ], [ %.054, %46 ], [ %.054, %36 ], [ %.054, %34 ], [ %.054, %23 ], [ %.054, %13 ]
  %.052.be = phi i32 [ %.052, %12 ], [ %.052, %461 ], [ %.052, %460 ], [ %.052, %459 ], [ %.052, %458 ], [ %.052, %456 ], [ %.neg66, %455 ], [ 0, %454 ], [ %.052, %452 ], [ %.052, %451 ], [ %.052, %449 ], [ %.052, %447 ], [ %.052, %446 ], [ %.052, %445 ], [ %.052, %440 ], [ %.052, %439 ], [ %.052, %438 ], [ %.052, %427 ], [ %.052, %417 ], [ %.052, %416 ], [ %.052, %414 ], [ %.052, %412 ], [ %.052, %405 ], [ %.052, %403 ], [ %.052, %392 ], [ %.052, %382 ], [ %.052, %381 ], [ %.052, %378 ], [ %.052, %377 ], [ %.052, %376 ], [ %.052, %366 ], [ %.052, %356 ], [ %.052, %354 ], [ %.052, %353 ], [ %.052, %351 ], [ %.052, %349 ], [ %.052, %338 ], [ %.052, %328 ], [ %.052, %327 ], [ %.052, %325 ], [ %.052, %324 ], [ %.052, %313 ], [ %.052, %303 ], [ %.052, %302 ], [ %292, %291 ], [ %.052, %281 ], [ %.052, %273 ], [ %.052, %270 ], [ %.052, %269 ], [ 0, %259 ], [ %.052, %249 ], [ %.052, %246 ], [ %.052, %245 ], [ %.052, %242 ], [ %.052, %241 ], [ %.052, %240 ], [ %.052, %230 ], [ %.052, %220 ], [ %.052, %202 ], [ %.052, %200 ], [ %.052, %188 ], [ %.052, %178 ], [ %.052, %177 ], [ %.052, %166 ], [ %.052, %156 ], [ %.052, %155 ], [ %.052, %144 ], [ %.052, %134 ], [ %.052, %133 ], [ %.052, %123 ], [ %.052, %113 ], [ %.052, %111 ], [ %.052, %110 ], [ %.052, %100 ], [ %.052, %90 ], [ %.052, %89 ], [ %.052, %88 ], [ %.052, %74 ], [ %.052, %64 ], [ %.052, %61 ], [ %.052, %60 ], [ %.052, %57 ], [ %.052, %56 ], [ %.052, %46 ], [ %.052, %36 ], [ %.052, %34 ], [ %.052, %23 ], [ %.052, %13 ]
  %.050.be = phi i32 [ %.050, %12 ], [ %.050, %461 ], [ %.050, %460 ], [ %.050, %459 ], [ %.050, %458 ], [ %.050, %456 ], [ %.050, %455 ], [ %.050, %454 ], [ %.050, %452 ], [ %.050, %451 ], [ %.050, %449 ], [ %.050, %447 ], [ %.050, %446 ], [ %.050, %445 ], [ %.050, %440 ], [ %.050, %439 ], [ %.050, %438 ], [ %.050, %427 ], [ %.050, %417 ], [ %.050, %416 ], [ %.050, %414 ], [ %.050, %412 ], [ %.050, %405 ], [ %.050, %403 ], [ %.050, %392 ], [ %.050, %382 ], [ %.050, %381 ], [ %.050, %378 ], [ %.050, %377 ], [ %.050, %376 ], [ %.050, %366 ], [ %.050, %356 ], [ %.050, %354 ], [ %.neg69, %353 ], [ %.050, %351 ], [ %.050, %349 ], [ %.050, %338 ], [ %.050, %328 ], [ 0, %327 ], [ %.050, %325 ], [ %.050, %324 ], [ %.050, %313 ], [ %.050, %303 ], [ %.050, %302 ], [ %.050, %291 ], [ %.050, %281 ], [ %.050, %273 ], [ %.050, %270 ], [ %.050, %269 ], [ %.050, %259 ], [ %.050, %249 ], [ %.050, %246 ], [ %.050, %245 ], [ %.050, %242 ], [ %.050, %241 ], [ %.050, %240 ], [ %.050, %230 ], [ %.050, %220 ], [ %.050, %202 ], [ %.050, %200 ], [ %.050, %188 ], [ %.050, %178 ], [ %.050, %177 ], [ %.050, %166 ], [ %.050, %156 ], [ %.050, %155 ], [ %.050, %144 ], [ %.050, %134 ], [ %.050, %133 ], [ %.050, %123 ], [ %.050, %113 ], [ %.050, %111 ], [ %.050, %110 ], [ %.050, %100 ], [ %.050, %90 ], [ %.050, %89 ], [ %.050, %88 ], [ %.050, %74 ], [ %.050, %64 ], [ %.050, %61 ], [ %.050, %60 ], [ %.050, %57 ], [ %.050, %56 ], [ %.050, %46 ], [ %.050, %36 ], [ %.050, %34 ], [ %.050, %23 ], [ %.050, %13 ]
  %.048.be = phi i32 [ %.048, %12 ], [ %.048, %461 ], [ %.048, %460 ], [ %.048, %459 ], [ %.048, %458 ], [ %.048, %456 ], [ %.048, %455 ], [ %.048, %454 ], [ %.048, %452 ], [ %.048, %451 ], [ %.048, %449 ], [ %.048, %447 ], [ %.048, %446 ], [ %.048, %445 ], [ %.048, %440 ], [ %.048, %439 ], [ %.048, %438 ], [ %.048, %427 ], [ %.048, %417 ], [ %.neg67, %416 ], [ %.048, %414 ], [ %.048, %412 ], [ %.048, %405 ], [ %.048, %403 ], [ %.048, %392 ], [ %.048, %382 ], [ %.048, %381 ], [ %.048, %378 ], [ 0, %377 ], [ %.048, %376 ], [ %.048, %366 ], [ %.048, %356 ], [ %.048, %354 ], [ %.048, %353 ], [ %.048, %351 ], [ %.048, %349 ], [ %.048, %338 ], [ %.048, %328 ], [ %.048, %327 ], [ %.048, %325 ], [ %.048, %324 ], [ %.048, %313 ], [ %.048, %303 ], [ %.048, %302 ], [ %.048, %291 ], [ %.048, %281 ], [ %.048, %273 ], [ %.048, %270 ], [ %.048, %269 ], [ %.048, %259 ], [ %.048, %249 ], [ %.048, %246 ], [ %.048, %245 ], [ %.048, %242 ], [ %.048, %241 ], [ %.048, %240 ], [ %.048, %230 ], [ %.048, %220 ], [ %.048, %202 ], [ %.048, %200 ], [ %.048, %188 ], [ %.048, %178 ], [ %.048, %177 ], [ %.048, %166 ], [ %.048, %156 ], [ %.048, %155 ], [ %.048, %144 ], [ %.048, %134 ], [ %.048, %133 ], [ %.048, %123 ], [ %.048, %113 ], [ %.048, %111 ], [ %.048, %110 ], [ %.048, %100 ], [ %.048, %90 ], [ %.048, %89 ], [ %.048, %88 ], [ %.048, %74 ], [ %.048, %64 ], [ %.048, %61 ], [ %.048, %60 ], [ %.048, %57 ], [ %.048, %56 ], [ %.048, %46 ], [ %.048, %36 ], [ %.048, %34 ], [ %.048, %23 ], [ %.048, %13 ]
  %.046.be = phi i32 [ %.046, %12 ], [ %.046, %461 ], [ %.046, %460 ], [ %.046, %459 ], [ %.046, %458 ], [ %.046, %456 ], [ %.046, %455 ], [ %.046, %454 ], [ %.046, %452 ], [ %.046, %451 ], [ %.046, %449 ], [ %.046, %447 ], [ %.046, %446 ], [ %.046, %445 ], [ %.046, %440 ], [ %.046, %439 ], [ %.046, %438 ], [ %.046, %427 ], [ %.046, %417 ], [ %.046, %416 ], [ %.046, %414 ], [ %413, %412 ], [ %.046, %405 ], [ %.046, %403 ], [ %.046, %392 ], [ %.046, %382 ], [ 0, %381 ], [ %.046, %378 ], [ %.046, %377 ], [ %.046, %376 ], [ %.046, %366 ], [ %.046, %356 ], [ %.046, %354 ], [ %.046, %353 ], [ %.046, %351 ], [ %.046, %349 ], [ %.046, %338 ], [ %.046, %328 ], [ %.046, %327 ], [ %.046, %325 ], [ %.046, %324 ], [ %.046, %313 ], [ %.046, %303 ], [ %.046, %302 ], [ %.046, %291 ], [ %.046, %281 ], [ %.046, %273 ], [ %.046, %270 ], [ %.046, %269 ], [ %.046, %259 ], [ %.046, %249 ], [ %.046, %246 ], [ %.046, %245 ], [ %.046, %242 ], [ %.046, %241 ], [ %.046, %240 ], [ %.046, %230 ], [ %.046, %220 ], [ %.046, %202 ], [ %.046, %200 ], [ %.046, %188 ], [ %.046, %178 ], [ %.046, %177 ], [ %.046, %166 ], [ %.046, %156 ], [ %.046, %155 ], [ %.046, %144 ], [ %.046, %134 ], [ %.046, %133 ], [ %.046, %123 ], [ %.046, %113 ], [ %.046, %111 ], [ %.046, %110 ], [ %.046, %100 ], [ %.046, %90 ], [ %.046, %89 ], [ %.046, %88 ], [ %.046, %74 ], [ %.046, %64 ], [ %.046, %61 ], [ %.046, %60 ], [ %.046, %57 ], [ %.046, %56 ], [ %.046, %46 ], [ %.046, %36 ], [ %.046, %34 ], [ %.046, %23 ], [ %.046, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -1220727006, %461 ], [ -880701445, %460 ], [ -570308610, %459 ], [ 970113741, %458 ], [ -93699148, %456 ], [ -1395156611, %455 ], [ 472213882, %454 ], [ 1955952815, %452 ], [ 446525468, %451 ], [ 1319867098, %449 ], [ 1376099262, %447 ], [ -609340754, %446 ], [ -1146740219, %445 ], [ -1893356924, %440 ], [ -657458634, %439 ], [ -870140113, %438 ], [ %436, %427 ], [ %426, %417 ], [ 1448979845, %416 ], [ 188634574, %414 ], [ 156340456, %412 ], [ 1289907981, %405 ], [ %404, %403 ], [ %402, %392 ], [ %391, %382 ], [ 156340456, %381 ], [ %380, %378 ], [ 1448979845, %377 ], [ -269812822, %376 ], [ %375, %366 ], [ %365, %356 ], [ 480044759, %354 ], [ -2092207484, %353 ], [ 667638544, %351 ], [ %350, %349 ], [ %348, %338 ], [ %337, %328 ], [ -2092207484, %327 ], [ -785068358, %325 ], [ -87401985, %324 ], [ %323, %313 ], [ %312, %303 ], [ 153981459, %302 ], [ %301, %291 ], [ %290, %281 ], [ -935263874, %273 ], [ %272, %270 ], [ 153981459, %269 ], [ %268, %259 ], [ %258, %249 ], [ %248, %246 ], [ -785068358, %245 ], [ %244, %242 ], [ -269812822, %241 ], [ 1593288366, %240 ], [ %239, %230 ], [ %229, %220 ], [ 167083630, %202 ], [ %201, %200 ], [ %199, %188 ], [ %187, %178 ], [ 1593288366, %177 ], [ %176, %166 ], [ %165, %156 ], [ 32058215, %155 ], [ %154, %144 ], [ %143, %134 ], [ -1320383068, %133 ], [ %132, %123 ], [ %122, %113 ], [ -1267021652, %111 ], [ -1546777664, %110 ], [ %109, %100 ], [ %99, %90 ], [ -1855196992, %89 ], [ 465838753, %88 ], [ %87, %74 ], [ %73, %64 ], [ %63, %61 ], [ -1855196992, %60 ], [ %59, %57 ], [ -1267021652, %56 ], [ %55, %46 ], [ %45, %36 ], [ %35, %34 ], [ %33, %23 ], [ %22, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* @x.2, align 4
  %15 = load i32, i32* @y.3, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 -870140113, i32 -1011087622
  br label %.backedge

23:                                               ; preds = %12
  %24 = icmp slt i32 %.064, 4
  store i1 %24, i1* %5, align 1
  %25 = load i32, i32* @x.2, align 4
  %26 = load i32, i32* @y.3, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 232723671, i32 -1011087622
  br label %.backedge

34:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %35 = select i1 %.0..0..0., i32 -609483028, i32 450941551
  br label %.backedge

36:                                               ; preds = %12
  %37 = load i32, i32* @x.2, align 4
  %38 = load i32, i32* @y.3, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 -657458634, i32 546624801
  br label %.backedge

46:                                               ; preds = %12
  %47 = load i32, i32* @x.2, align 4
  %48 = load i32, i32* @y.3, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 -1425947642, i32 546624801
  br label %.backedge

56:                                               ; preds = %12
  br label %.backedge

57:                                               ; preds = %12
  %58 = icmp slt i32 %.062, 3
  %59 = select i1 %58, i32 1531945192, i32 -1480214164
  br label %.backedge

60:                                               ; preds = %12
  br label %.backedge

61:                                               ; preds = %12
  %62 = icmp slt i32 %.060, 10
  %63 = select i1 %62, i32 -1342985203, i32 949992936
  br label %.backedge

64:                                               ; preds = %12
  %65 = load i32, i32* @x.2, align 4
  %66 = load i32, i32* @y.3, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 -1893356924, i32 -1174226248
  br label %.backedge

74:                                               ; preds = %12
  %75 = sext i32 %.064 to i64
  %76 = sext i32 %.062 to i64
  %77 = sext i32 %.060 to i64
  %78 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %6, i64 0, i64 %75, i64 %76, i64 %77
  store i32 0, i32* %78, align 4
  %79 = load i32, i32* @x.2, align 4
  %80 = load i32, i32* @y.3, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 -48385183, i32 -1174226248
  br label %.backedge

88:                                               ; preds = %12
  br label %.backedge

89:                                               ; preds = %12
  %.neg71 = add i32 %.060, 1
  br label %.backedge

90:                                               ; preds = %12
  %91 = load i32, i32* @x.2, align 4
  %92 = load i32, i32* @y.3, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -1146740219, i32 -1524497200
  br label %.backedge

100:                                              ; preds = %12
  %101 = load i32, i32* @x.2, align 4
  %102 = load i32, i32* @y.3, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 532357030, i32 -1524497200
  br label %.backedge

110:                                              ; preds = %12
  br label %.backedge

111:                                              ; preds = %12
  %112 = add i32 %.062, 1
  br label %.backedge

113:                                              ; preds = %12
  %114 = load i32, i32* @x.2, align 4
  %115 = load i32, i32* @y.3, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 -609340754, i32 -777088167
  br label %.backedge

123:                                              ; preds = %12
  %124 = load i32, i32* @x.2, align 4
  %125 = load i32, i32* @y.3, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 2074721143, i32 -777088167
  br label %.backedge

133:                                              ; preds = %12
  br label %.backedge

134:                                              ; preds = %12
  %135 = load i32, i32* @x.2, align 4
  %136 = load i32, i32* @y.3, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 1376099262, i32 1972830856
  br label %.backedge

144:                                              ; preds = %12
  %145 = add i32 %.064, 1
  %146 = load i32, i32* @x.2, align 4
  %147 = load i32, i32* @y.3, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -1955103070, i32 1972830856
  br label %.backedge

155:                                              ; preds = %12
  br label %.backedge

156:                                              ; preds = %12
  %157 = load i32, i32* @x.2, align 4
  %158 = load i32, i32* @y.3, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 1319867098, i32 1849920011
  br label %.backedge

166:                                              ; preds = %12
  %167 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %168 = load i32, i32* @x.2, align 4
  %169 = load i32, i32* @y.3, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -1542536947, i32 1849920011
  br label %.backedge

177:                                              ; preds = %12
  br label %.backedge

178:                                              ; preds = %12
  %179 = load i32, i32* @x.2, align 4
  %180 = load i32, i32* @y.3, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 446525468, i32 -1798476883
  br label %.backedge

188:                                              ; preds = %12
  %189 = load i32, i32* %7, align 4
  %190 = icmp slt i32 %.058, %189
  store i1 %190, i1* %4, align 1
  %191 = load i32, i32* @x.2, align 4
  %192 = load i32, i32* @y.3, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -1736887287, i32 -1798476883
  br label %.backedge

200:                                              ; preds = %12
  %.0..0..0.42 = load volatile i1, i1* %4, align 1
  %201 = select i1 %.0..0..0.42, i32 1985568995, i32 -306283511
  br label %.backedge

202:                                              ; preds = %12
  %203 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %204 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %203, i32* nonnull dereferenceable(4) %9)
  %205 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %204, i32* nonnull dereferenceable(4) %10)
  %206 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %205, i32* nonnull dereferenceable(4) %11)
  %207 = load i32, i32* %11, align 4
  %208 = load i32, i32* %8, align 4
  %209 = add i32 %208, -1
  %210 = sext i32 %209 to i64
  %211 = load i32, i32* %9, align 4
  %212 = add i32 %211, -1
  %213 = sext i32 %212 to i64
  %214 = load i32, i32* %10, align 4
  %215 = add i32 %214, -1
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %6, i64 0, i64 %210, i64 %213, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = add i32 %218, %207
  store i32 %219, i32* %217, align 4
  br label %.backedge

220:                                              ; preds = %12
  %221 = load i32, i32* @x.2, align 4
  %222 = load i32, i32* @y.3, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 1955952815, i32 -1972325091
  br label %.backedge

230:                                              ; preds = %12
  %.neg70 = add i32 %.058, 1
  %231 = load i32, i32* @x.2, align 4
  %232 = load i32, i32* @y.3, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 1778427450, i32 -1972325091
  br label %.backedge

240:                                              ; preds = %12
  br label %.backedge

241:                                              ; preds = %12
  br label %.backedge

242:                                              ; preds = %12
  %243 = icmp slt i32 %.056, 3
  %244 = select i1 %243, i32 854628112, i32 -1078272903
  br label %.backedge

245:                                              ; preds = %12
  br label %.backedge

246:                                              ; preds = %12
  %247 = icmp slt i32 %.054, 3
  %248 = select i1 %247, i32 814835155, i32 1615698389
  br label %.backedge

249:                                              ; preds = %12
  %250 = load i32, i32* @x.2, align 4
  %251 = load i32, i32* @y.3, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 472213882, i32 851442084
  br label %.backedge

259:                                              ; preds = %12
  %260 = load i32, i32* @x.2, align 4
  %261 = load i32, i32* @y.3, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 676183884, i32 851442084
  br label %.backedge

269:                                              ; preds = %12
  br label %.backedge

270:                                              ; preds = %12
  %271 = icmp slt i32 %.052, 10
  %272 = select i1 %271, i32 -25446625, i32 307880614
  br label %.backedge

273:                                              ; preds = %12
  %274 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %275 = sext i32 %.056 to i64
  %276 = sext i32 %.054 to i64
  %277 = sext i32 %.052 to i64
  %278 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %6, i64 0, i64 %275, i64 %276, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %274, i32 %279)
  br label %.backedge

281:                                              ; preds = %12
  %282 = load i32, i32* @x.2, align 4
  %283 = load i32, i32* @y.3, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 -1395156611, i32 -241838668
  br label %.backedge

291:                                              ; preds = %12
  %292 = add i32 %.052, 1
  %293 = load i32, i32* @x.2, align 4
  %294 = load i32, i32* @y.3, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 1904000026, i32 -241838668
  br label %.backedge

302:                                              ; preds = %12
  br label %.backedge

303:                                              ; preds = %12
  %304 = load i32, i32* @x.2, align 4
  %305 = load i32, i32* @y.3, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 -93699148, i32 566115630
  br label %.backedge

313:                                              ; preds = %12
  %314 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %315 = load i32, i32* @x.2, align 4
  %316 = load i32, i32* @y.3, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 -466170321, i32 566115630
  br label %.backedge

324:                                              ; preds = %12
  br label %.backedge

325:                                              ; preds = %12
  %326 = add i32 %.054, 1
  br label %.backedge

327:                                              ; preds = %12
  br label %.backedge

328:                                              ; preds = %12
  %329 = load i32, i32* @x.2, align 4
  %330 = load i32, i32* @y.3, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 970113741, i32 758312833
  br label %.backedge

338:                                              ; preds = %12
  %339 = icmp slt i32 %.050, 20
  store i1 %339, i1* %3, align 1
  %340 = load i32, i32* @x.2, align 4
  %341 = load i32, i32* @y.3, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 -497285239, i32 758312833
  br label %.backedge

349:                                              ; preds = %12
  %.0..0..0.43 = load volatile i1, i1* %3, align 1
  %350 = select i1 %.0..0..0.43, i32 -1351104517, i32 2116392486
  br label %.backedge

351:                                              ; preds = %12
  %352 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

353:                                              ; preds = %12
  %.neg69 = add i32 %.050, 1
  br label %.backedge

354:                                              ; preds = %12
  %355 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

356:                                              ; preds = %12
  %357 = load i32, i32* @x.2, align 4
  %358 = load i32, i32* @y.3, align 4
  %359 = add i32 %357, -1
  %360 = mul i32 %359, %357
  %361 = and i32 %360, 1
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %363, %362
  %365 = select i1 %364, i32 -570308610, i32 -614200251
  br label %.backedge

366:                                              ; preds = %12
  %.neg68 = add i32 %.056, 1
  %367 = load i32, i32* @x.2, align 4
  %368 = load i32, i32* @y.3, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 -1583205857, i32 -614200251
  br label %.backedge

376:                                              ; preds = %12
  br label %.backedge

377:                                              ; preds = %12
  br label %.backedge

378:                                              ; preds = %12
  %379 = icmp slt i32 %.048, 3
  %380 = select i1 %379, i32 -929238403, i32 -666245249
  br label %.backedge

381:                                              ; preds = %12
  br label %.backedge

382:                                              ; preds = %12
  %383 = load i32, i32* @x.2, align 4
  %384 = load i32, i32* @y.3, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 -880701445, i32 -986889172
  br label %.backedge

392:                                              ; preds = %12
  %393 = icmp slt i32 %.046, 10
  store i1 %393, i1* %2, align 1
  %394 = load i32, i32* @x.2, align 4
  %395 = load i32, i32* @y.3, align 4
  %396 = add i32 %394, -1
  %397 = mul i32 %396, %394
  %398 = and i32 %397, 1
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %400, %399
  %402 = select i1 %401, i32 608681860, i32 -986889172
  br label %.backedge

403:                                              ; preds = %12
  %.0..0..0.44 = load volatile i1, i1* %2, align 1
  %404 = select i1 %.0..0..0.44, i32 -1759878311, i32 568816518
  br label %.backedge

405:                                              ; preds = %12
  %406 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %407 = sext i32 %.048 to i64
  %408 = sext i32 %.046 to i64
  %409 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %6, i64 0, i64 3, i64 %407, i64 %408
  %410 = load i32, i32* %409, align 4
  %411 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %406, i32 %410)
  br label %.backedge

412:                                              ; preds = %12
  %413 = add i32 %.046, 1
  br label %.backedge

414:                                              ; preds = %12
  %415 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

416:                                              ; preds = %12
  %.neg67 = add i32 %.048, 1
  br label %.backedge

417:                                              ; preds = %12
  %418 = load i32, i32* @x.2, align 4
  %419 = load i32, i32* @y.3, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 -1220727006, i32 1340036628
  br label %.backedge

427:                                              ; preds = %12
  store i32 0, i32* %1, align 4
  %428 = load i32, i32* @x.2, align 4
  %429 = load i32, i32* @y.3, align 4
  %430 = add i32 %428, -1
  %431 = mul i32 %430, %428
  %432 = and i32 %431, 1
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %434, %433
  %436 = select i1 %435, i32 3143431, i32 1340036628
  br label %.backedge

437:                                              ; preds = %12
  %.0..0..0.45 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.45

438:                                              ; preds = %12
  br label %.backedge

439:                                              ; preds = %12
  br label %.backedge

440:                                              ; preds = %12
  %441 = sext i32 %.064 to i64
  %442 = sext i32 %.062 to i64
  %443 = sext i32 %.060 to i64
  %444 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %6, i64 0, i64 %441, i64 %442, i64 %443
  store i32 0, i32* %444, align 4
  br label %.backedge

445:                                              ; preds = %12
  br label %.backedge

446:                                              ; preds = %12
  br label %.backedge

447:                                              ; preds = %12
  %448 = add i32 %.064, 1
  br label %.backedge

449:                                              ; preds = %12
  %450 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  br label %.backedge

451:                                              ; preds = %12
  br label %.backedge

452:                                              ; preds = %12
  %453 = add i32 %.058, 1
  br label %.backedge

454:                                              ; preds = %12
  br label %.backedge

455:                                              ; preds = %12
  %.neg66 = add i32 %.052, 1
  br label %.backedge

456:                                              ; preds = %12
  %457 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

458:                                              ; preds = %12
  br label %.backedge

459:                                              ; preds = %12
  %.neg = add i32 %.056, 1
  br label %.backedge

460:                                              ; preds = %12
  br label %.backedge

461:                                              ; preds = %12
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s896769456.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
