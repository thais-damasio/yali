; ModuleID = 'build_ollvm/programs/p02409/s020858617.ll'
source_filename = "Project_CodeNet_C++1400/p02409/s020858617.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"####################\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s020858617.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca [11 x [4 x i32]], align 16
  %7 = alloca [11 x [4 x i32]], align 16
  %8 = alloca [11 x [4 x i32]], align 16
  %9 = alloca [11 x [4 x i32]], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = bitcast [11 x [4 x i32]]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(176) %15, i8 0, i64 176, i1 false)
  %16 = bitcast [11 x [4 x i32]]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(176) %16, i8 0, i64 176, i1 false)
  %17 = bitcast [11 x [4 x i32]]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(176) %17, i8 0, i64 176, i1 false)
  %18 = bitcast [11 x [4 x i32]]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(176) %18, i8 0, i64 176, i1 false)
  %19 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %10)
  br label %20

20:                                               ; preds = %.backedge, %0
  %.063 = phi i32 [ 1, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.0 = phi i32 [ -54189057, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -54189057, label %21
    i32 1306945058, label %24
    i32 1978056335, label %34
    i32 -616356775, label %49
    i32 -1870999275, label %50
    i32 -244600576, label %53
    i32 1592021298, label %56
    i32 1076446191, label %59
    i32 -1050260163, label %62
    i32 -2089742988, label %71
    i32 1578344553, label %80
    i32 -15077969, label %90
    i32 1066631519, label %108
    i32 -2094792599, label %109
    i32 -136560979, label %110
    i32 -1740799127, label %119
    i32 1072913741, label %129
    i32 914889871, label %139
    i32 147804430, label %140
    i32 -1581370805, label %150
    i32 1628654165, label %161
    i32 507829145, label %162
    i32 -2126550876, label %163
    i32 1323693017, label %173
    i32 1517691562, label %184
    i32 1195905559, label %186
    i32 1683109023, label %187
    i32 -345048275, label %190
    i32 1499707070, label %200
    i32 -1853757911, label %216
    i32 349349802, label %217
    i32 133116086, label %219
    i32 1513168834, label %229
    i32 644334567, label %240
    i32 -398780664, label %241
    i32 -1256052968, label %251
    i32 -1587755411, label %261
    i32 1388923779, label %262
    i32 479416521, label %264
    i32 1782005817, label %274
    i32 -1833474236, label %285
    i32 1926723124, label %287
    i32 629056670, label %288
    i32 -217125346, label %298
    i32 2105577674, label %309
    i32 -1222803971, label %311
    i32 134668131, label %321
    i32 1990934282, label %337
    i32 729595514, label %338
    i32 -859420834, label %348
    i32 1404468125, label %359
    i32 84095683, label %360
    i32 38502634, label %370
    i32 188167026, label %381
    i32 -717050398, label %382
    i32 -647924100, label %384
    i32 -864676748, label %386
    i32 1093458966, label %389
    i32 -67840182, label %390
    i32 -329756594, label %400
    i32 -10858908, label %411
    i32 -402762025, label %413
    i32 -2021962734, label %420
    i32 -2076742900, label %422
    i32 -1469728348, label %432
    i32 -1608164750, label %443
    i32 -1905561814, label %444
    i32 -1449740679, label %454
    i32 -1128910750, label %464
    i32 690806410, label %465
    i32 1465547922, label %475
    i32 766919627, label %486
    i32 -220844625, label %487
    i32 -1274799509, label %490
    i32 544011150, label %491
    i32 -1614145174, label %494
    i32 -68159547, label %501
    i32 855649641, label %511
    i32 966635714, label %522
    i32 1676676186, label %523
    i32 -1524587507, label %525
    i32 -1916164074, label %527
    i32 888196677, label %528
    i32 -826889748, label %533
    i32 588806243, label %542
    i32 -1633109546, label %543
    i32 1053857917, label %545
    i32 -384879305, label %546
    i32 1966162110, label %553
    i32 1493968112, label %555
    i32 1276304465, label %557
    i32 -984197587, label %558
    i32 370151194, label %559
    i32 1190054782, label %566
    i32 -480667957, label %567
    i32 1260617847, label %569
    i32 217814440, label %570
    i32 143350599, label %572
    i32 2030729362, label %574
    i32 -1458346856, label %576
  ]

.backedge:                                        ; preds = %20, %576, %574, %572, %570, %569, %567, %566, %559, %558, %557, %555, %553, %546, %545, %543, %542, %533, %528, %525, %523, %522, %511, %501, %494, %491, %490, %487, %486, %475, %465, %464, %454, %444, %443, %432, %422, %420, %413, %411, %400, %390, %389, %386, %384, %382, %381, %370, %360, %359, %348, %338, %337, %321, %311, %309, %298, %288, %287, %285, %274, %264, %262, %261, %251, %241, %240, %229, %219, %217, %216, %200, %190, %187, %186, %184, %173, %163, %162, %161, %150, %140, %139, %129, %119, %110, %109, %108, %90, %80, %71, %62, %59, %56, %53, %50, %49, %34, %24, %21
  %.063.be = phi i32 [ %.063, %20 ], [ %.063, %576 ], [ %.063, %574 ], [ %.063, %572 ], [ %.063, %570 ], [ %.063, %569 ], [ %.063, %567 ], [ %.063, %566 ], [ %.063, %559 ], [ %.063, %558 ], [ %.063, %557 ], [ %.063, %555 ], [ %.063, %553 ], [ %.063, %546 ], [ %.063, %545 ], [ %544, %543 ], [ %.063, %542 ], [ %.063, %533 ], [ %.063, %528 ], [ %.063, %525 ], [ %.063, %523 ], [ %.063, %522 ], [ %.063, %511 ], [ %.063, %501 ], [ %.063, %494 ], [ %.063, %491 ], [ %.063, %490 ], [ %.063, %487 ], [ %.063, %486 ], [ %.063, %475 ], [ %.063, %465 ], [ %.063, %464 ], [ %.063, %454 ], [ %.063, %444 ], [ %.063, %443 ], [ %.063, %432 ], [ %.063, %422 ], [ %.063, %420 ], [ %.063, %413 ], [ %.063, %411 ], [ %.063, %400 ], [ %.063, %390 ], [ %.063, %389 ], [ %.063, %386 ], [ %.063, %384 ], [ %.063, %382 ], [ %.063, %381 ], [ %.063, %370 ], [ %.063, %360 ], [ %.063, %359 ], [ %.063, %348 ], [ %.063, %338 ], [ %.063, %337 ], [ %.063, %321 ], [ %.063, %311 ], [ %.063, %309 ], [ %.063, %298 ], [ %.063, %288 ], [ %.063, %287 ], [ %.063, %285 ], [ %.063, %274 ], [ %.063, %264 ], [ %.063, %262 ], [ %.063, %261 ], [ %.063, %251 ], [ %.063, %241 ], [ %.063, %240 ], [ %.063, %229 ], [ %.063, %219 ], [ %.063, %217 ], [ %.063, %216 ], [ %.063, %200 ], [ %.063, %190 ], [ %.063, %187 ], [ %.063, %186 ], [ %.063, %184 ], [ %.063, %173 ], [ %.063, %163 ], [ %.063, %162 ], [ %.063, %161 ], [ %151, %150 ], [ %.063, %140 ], [ %.063, %139 ], [ %.063, %129 ], [ %.063, %119 ], [ %.063, %110 ], [ %.063, %109 ], [ %.063, %108 ], [ %.063, %90 ], [ %.063, %80 ], [ %.063, %71 ], [ %.063, %62 ], [ %.063, %59 ], [ %.063, %56 ], [ %.063, %53 ], [ %.063, %50 ], [ %.063, %49 ], [ %.063, %34 ], [ %.063, %24 ], [ %.063, %21 ]
  %.061.be = phi i32 [ %.061, %20 ], [ %.061, %576 ], [ %.061, %574 ], [ %.061, %572 ], [ %.061, %570 ], [ %.061, %569 ], [ %.061, %567 ], [ %.061, %566 ], [ %.061, %559 ], [ %.061, %558 ], [ %.061, %557 ], [ %556, %555 ], [ %.061, %553 ], [ %.061, %546 ], [ %.061, %545 ], [ %.061, %543 ], [ %.061, %542 ], [ %.061, %533 ], [ %.061, %528 ], [ %.061, %525 ], [ %.061, %523 ], [ %.061, %522 ], [ %.061, %511 ], [ %.061, %501 ], [ %.061, %494 ], [ %.061, %491 ], [ %.061, %490 ], [ %.061, %487 ], [ %.061, %486 ], [ %.061, %475 ], [ %.061, %465 ], [ %.061, %464 ], [ %.061, %454 ], [ %.061, %444 ], [ %.061, %443 ], [ %.061, %432 ], [ %.061, %422 ], [ %.061, %420 ], [ %.061, %413 ], [ %.061, %411 ], [ %.061, %400 ], [ %.061, %390 ], [ %.061, %389 ], [ %.061, %386 ], [ %.061, %384 ], [ %.061, %382 ], [ %.061, %381 ], [ %.061, %370 ], [ %.061, %360 ], [ %.061, %359 ], [ %.061, %348 ], [ %.061, %338 ], [ %.061, %337 ], [ %.061, %321 ], [ %.061, %311 ], [ %.061, %309 ], [ %.061, %298 ], [ %.061, %288 ], [ %.061, %287 ], [ %.061, %285 ], [ %.061, %274 ], [ %.061, %264 ], [ %.061, %262 ], [ %.061, %261 ], [ %.neg66, %251 ], [ %.061, %241 ], [ %.061, %240 ], [ %.061, %229 ], [ %.061, %219 ], [ %.061, %217 ], [ %.061, %216 ], [ %.061, %200 ], [ %.061, %190 ], [ %.061, %187 ], [ %.061, %186 ], [ %.061, %184 ], [ %.061, %173 ], [ %.061, %163 ], [ 1, %162 ], [ %.061, %161 ], [ %.061, %150 ], [ %.061, %140 ], [ %.061, %139 ], [ %.061, %129 ], [ %.061, %119 ], [ %.061, %110 ], [ %.061, %109 ], [ %.061, %108 ], [ %.061, %90 ], [ %.061, %80 ], [ %.061, %71 ], [ %.061, %62 ], [ %.061, %59 ], [ %.061, %56 ], [ %.061, %53 ], [ %.061, %50 ], [ %.061, %49 ], [ %.061, %34 ], [ %.061, %24 ], [ %.061, %21 ]
  %.059.be = phi i32 [ %.059, %20 ], [ %.059, %576 ], [ %.059, %574 ], [ %.059, %572 ], [ %.059, %570 ], [ %.059, %569 ], [ %.059, %567 ], [ %.059, %566 ], [ %.059, %559 ], [ %.059, %558 ], [ %.059, %557 ], [ %.059, %555 ], [ %.059, %553 ], [ %.059, %546 ], [ %.059, %545 ], [ %.059, %543 ], [ %.059, %542 ], [ %.059, %533 ], [ %.059, %528 ], [ %.059, %525 ], [ %.059, %523 ], [ %.059, %522 ], [ %.059, %511 ], [ %.059, %501 ], [ %.059, %494 ], [ %.059, %491 ], [ %.059, %490 ], [ %.059, %487 ], [ %.059, %486 ], [ %.059, %475 ], [ %.059, %465 ], [ %.059, %464 ], [ %.059, %454 ], [ %.059, %444 ], [ %.059, %443 ], [ %.059, %432 ], [ %.059, %422 ], [ %.059, %420 ], [ %.059, %413 ], [ %.059, %411 ], [ %.059, %400 ], [ %.059, %390 ], [ %.059, %389 ], [ %.059, %386 ], [ %.059, %384 ], [ %.059, %382 ], [ %.059, %381 ], [ %.059, %370 ], [ %.059, %360 ], [ %.059, %359 ], [ %.059, %348 ], [ %.059, %338 ], [ %.059, %337 ], [ %.059, %321 ], [ %.059, %311 ], [ %.059, %309 ], [ %.059, %298 ], [ %.059, %288 ], [ %.059, %287 ], [ %.059, %285 ], [ %.059, %274 ], [ %.059, %264 ], [ %.059, %262 ], [ %.059, %261 ], [ %.059, %251 ], [ %.059, %241 ], [ %.059, %240 ], [ %.059, %229 ], [ %.059, %219 ], [ %218, %217 ], [ %.059, %216 ], [ %.059, %200 ], [ %.059, %190 ], [ %.059, %187 ], [ 1, %186 ], [ %.059, %184 ], [ %.059, %173 ], [ %.059, %163 ], [ %.059, %162 ], [ %.059, %161 ], [ %.059, %150 ], [ %.059, %140 ], [ %.059, %139 ], [ %.059, %129 ], [ %.059, %119 ], [ %.059, %110 ], [ %.059, %109 ], [ %.059, %108 ], [ %.059, %90 ], [ %.059, %80 ], [ %.059, %71 ], [ %.059, %62 ], [ %.059, %59 ], [ %.059, %56 ], [ %.059, %53 ], [ %.059, %50 ], [ %.059, %49 ], [ %.059, %34 ], [ %.059, %24 ], [ %.059, %21 ]
  %.057.be = phi i32 [ %.057, %20 ], [ %.057, %576 ], [ %.057, %574 ], [ %.057, %572 ], [ %.057, %570 ], [ %.057, %569 ], [ %.057, %567 ], [ %.057, %566 ], [ %.057, %559 ], [ %.057, %558 ], [ %.057, %557 ], [ %.057, %555 ], [ %.057, %553 ], [ %.057, %546 ], [ %.057, %545 ], [ %.057, %543 ], [ %.057, %542 ], [ %.057, %533 ], [ %.057, %528 ], [ %.057, %525 ], [ %.057, %523 ], [ %.057, %522 ], [ %.057, %511 ], [ %.057, %501 ], [ %.057, %494 ], [ %.057, %491 ], [ %.057, %490 ], [ %.057, %487 ], [ %.057, %486 ], [ %.057, %475 ], [ %.057, %465 ], [ %.057, %464 ], [ %.057, %454 ], [ %.057, %444 ], [ %.057, %443 ], [ %.057, %432 ], [ %.057, %422 ], [ %.057, %420 ], [ %.057, %413 ], [ %.057, %411 ], [ %.057, %400 ], [ %.057, %390 ], [ %.057, %389 ], [ %.057, %386 ], [ %.057, %384 ], [ %383, %382 ], [ %.057, %381 ], [ %.057, %370 ], [ %.057, %360 ], [ %.057, %359 ], [ %.057, %348 ], [ %.057, %338 ], [ %.057, %337 ], [ %.057, %321 ], [ %.057, %311 ], [ %.057, %309 ], [ %.057, %298 ], [ %.057, %288 ], [ %.057, %287 ], [ %.057, %285 ], [ %.057, %274 ], [ %.057, %264 ], [ 1, %262 ], [ %.057, %261 ], [ %.057, %251 ], [ %.057, %241 ], [ %.057, %240 ], [ %.057, %229 ], [ %.057, %219 ], [ %.057, %217 ], [ %.057, %216 ], [ %.057, %200 ], [ %.057, %190 ], [ %.057, %187 ], [ %.057, %186 ], [ %.057, %184 ], [ %.057, %173 ], [ %.057, %163 ], [ %.057, %162 ], [ %.057, %161 ], [ %.057, %150 ], [ %.057, %140 ], [ %.057, %139 ], [ %.057, %129 ], [ %.057, %119 ], [ %.057, %110 ], [ %.057, %109 ], [ %.057, %108 ], [ %.057, %90 ], [ %.057, %80 ], [ %.057, %71 ], [ %.057, %62 ], [ %.057, %59 ], [ %.057, %56 ], [ %.057, %53 ], [ %.057, %50 ], [ %.057, %49 ], [ %.057, %34 ], [ %.057, %24 ], [ %.057, %21 ]
  %.055.be = phi i32 [ %.055, %20 ], [ %.055, %576 ], [ %.055, %574 ], [ %.055, %572 ], [ %.055, %570 ], [ %.055, %569 ], [ %.055, %567 ], [ %.neg, %566 ], [ %.055, %559 ], [ %.055, %558 ], [ %.055, %557 ], [ %.055, %555 ], [ %.055, %553 ], [ %.055, %546 ], [ %.055, %545 ], [ %.055, %543 ], [ %.055, %542 ], [ %.055, %533 ], [ %.055, %528 ], [ %.055, %525 ], [ %.055, %523 ], [ %.055, %522 ], [ %.055, %511 ], [ %.055, %501 ], [ %.055, %494 ], [ %.055, %491 ], [ %.055, %490 ], [ %.055, %487 ], [ %.055, %486 ], [ %.055, %475 ], [ %.055, %465 ], [ %.055, %464 ], [ %.055, %454 ], [ %.055, %444 ], [ %.055, %443 ], [ %.055, %432 ], [ %.055, %422 ], [ %.055, %420 ], [ %.055, %413 ], [ %.055, %411 ], [ %.055, %400 ], [ %.055, %390 ], [ %.055, %389 ], [ %.055, %386 ], [ %.055, %384 ], [ %.055, %382 ], [ %.055, %381 ], [ %.055, %370 ], [ %.055, %360 ], [ %.055, %359 ], [ %349, %348 ], [ %.055, %338 ], [ %.055, %337 ], [ %.055, %321 ], [ %.055, %311 ], [ %.055, %309 ], [ %.055, %298 ], [ %.055, %288 ], [ 1, %287 ], [ %.055, %285 ], [ %.055, %274 ], [ %.055, %264 ], [ %.055, %262 ], [ %.055, %261 ], [ %.055, %251 ], [ %.055, %241 ], [ %.055, %240 ], [ %.055, %229 ], [ %.055, %219 ], [ %.055, %217 ], [ %.055, %216 ], [ %.055, %200 ], [ %.055, %190 ], [ %.055, %187 ], [ %.055, %186 ], [ %.055, %184 ], [ %.055, %173 ], [ %.055, %163 ], [ %.055, %162 ], [ %.055, %161 ], [ %.055, %150 ], [ %.055, %140 ], [ %.055, %139 ], [ %.055, %129 ], [ %.055, %119 ], [ %.055, %110 ], [ %.055, %109 ], [ %.055, %108 ], [ %.055, %90 ], [ %.055, %80 ], [ %.055, %71 ], [ %.055, %62 ], [ %.055, %59 ], [ %.055, %56 ], [ %.055, %53 ], [ %.055, %50 ], [ %.055, %49 ], [ %.055, %34 ], [ %.055, %24 ], [ %.055, %21 ]
  %.053.be = phi i32 [ %.053, %20 ], [ %.053, %576 ], [ %.053, %574 ], [ %573, %572 ], [ %.053, %570 ], [ %.053, %569 ], [ %.053, %567 ], [ %.053, %566 ], [ %.053, %559 ], [ %.053, %558 ], [ %.053, %557 ], [ %.053, %555 ], [ %.053, %553 ], [ %.053, %546 ], [ %.053, %545 ], [ %.053, %543 ], [ %.053, %542 ], [ %.053, %533 ], [ %.053, %528 ], [ %.053, %525 ], [ %.053, %523 ], [ %.053, %522 ], [ %.053, %511 ], [ %.053, %501 ], [ %.053, %494 ], [ %.053, %491 ], [ %.053, %490 ], [ %.053, %487 ], [ %.053, %486 ], [ %.053, %475 ], [ %.053, %465 ], [ %.053, %464 ], [ %.neg65, %454 ], [ %.053, %444 ], [ %.053, %443 ], [ %.053, %432 ], [ %.053, %422 ], [ %.053, %420 ], [ %.053, %413 ], [ %.053, %411 ], [ %.053, %400 ], [ %.053, %390 ], [ %.053, %389 ], [ %.053, %386 ], [ 1, %384 ], [ %.053, %382 ], [ %.053, %381 ], [ %.053, %370 ], [ %.053, %360 ], [ %.053, %359 ], [ %.053, %348 ], [ %.053, %338 ], [ %.053, %337 ], [ %.053, %321 ], [ %.053, %311 ], [ %.053, %309 ], [ %.053, %298 ], [ %.053, %288 ], [ %.053, %287 ], [ %.053, %285 ], [ %.053, %274 ], [ %.053, %264 ], [ %.053, %262 ], [ %.053, %261 ], [ %.053, %251 ], [ %.053, %241 ], [ %.053, %240 ], [ %.053, %229 ], [ %.053, %219 ], [ %.053, %217 ], [ %.053, %216 ], [ %.053, %200 ], [ %.053, %190 ], [ %.053, %187 ], [ %.053, %186 ], [ %.053, %184 ], [ %.053, %173 ], [ %.053, %163 ], [ %.053, %162 ], [ %.053, %161 ], [ %.053, %150 ], [ %.053, %140 ], [ %.053, %139 ], [ %.053, %129 ], [ %.053, %119 ], [ %.053, %110 ], [ %.053, %109 ], [ %.053, %108 ], [ %.053, %90 ], [ %.053, %80 ], [ %.053, %71 ], [ %.053, %62 ], [ %.053, %59 ], [ %.053, %56 ], [ %.053, %53 ], [ %.053, %50 ], [ %.053, %49 ], [ %.053, %34 ], [ %.053, %24 ], [ %.053, %21 ]
  %.051.be = phi i32 [ %.051, %20 ], [ %.051, %576 ], [ %.051, %574 ], [ %.051, %572 ], [ %.051, %570 ], [ %.051, %569 ], [ %.051, %567 ], [ %.051, %566 ], [ %.051, %559 ], [ %.051, %558 ], [ %.051, %557 ], [ %.051, %555 ], [ %.051, %553 ], [ %.051, %546 ], [ %.051, %545 ], [ %.051, %543 ], [ %.051, %542 ], [ %.051, %533 ], [ %.051, %528 ], [ %.051, %525 ], [ %.051, %523 ], [ %.051, %522 ], [ %.051, %511 ], [ %.051, %501 ], [ %.051, %494 ], [ %.051, %491 ], [ %.051, %490 ], [ %.051, %487 ], [ %.051, %486 ], [ %.051, %475 ], [ %.051, %465 ], [ %.051, %464 ], [ %.051, %454 ], [ %.051, %444 ], [ %.051, %443 ], [ %.051, %432 ], [ %.051, %422 ], [ %421, %420 ], [ %.051, %413 ], [ %.051, %411 ], [ %.051, %400 ], [ %.051, %390 ], [ 1, %389 ], [ %.051, %386 ], [ %.051, %384 ], [ %.051, %382 ], [ %.051, %381 ], [ %.051, %370 ], [ %.051, %360 ], [ %.051, %359 ], [ %.051, %348 ], [ %.051, %338 ], [ %.051, %337 ], [ %.051, %321 ], [ %.051, %311 ], [ %.051, %309 ], [ %.051, %298 ], [ %.051, %288 ], [ %.051, %287 ], [ %.051, %285 ], [ %.051, %274 ], [ %.051, %264 ], [ %.051, %262 ], [ %.051, %261 ], [ %.051, %251 ], [ %.051, %241 ], [ %.051, %240 ], [ %.051, %229 ], [ %.051, %219 ], [ %.051, %217 ], [ %.051, %216 ], [ %.051, %200 ], [ %.051, %190 ], [ %.051, %187 ], [ %.051, %186 ], [ %.051, %184 ], [ %.051, %173 ], [ %.051, %163 ], [ %.051, %162 ], [ %.051, %161 ], [ %.051, %150 ], [ %.051, %140 ], [ %.051, %139 ], [ %.051, %129 ], [ %.051, %119 ], [ %.051, %110 ], [ %.051, %109 ], [ %.051, %108 ], [ %.051, %90 ], [ %.051, %80 ], [ %.051, %71 ], [ %.051, %62 ], [ %.051, %59 ], [ %.051, %56 ], [ %.051, %53 ], [ %.051, %50 ], [ %.051, %49 ], [ %.051, %34 ], [ %.051, %24 ], [ %.051, %21 ]
  %.049.be = phi i32 [ %.049, %20 ], [ %.049, %576 ], [ 1, %574 ], [ %.049, %572 ], [ %.049, %570 ], [ %.049, %569 ], [ %.049, %567 ], [ %.049, %566 ], [ %.049, %559 ], [ %.049, %558 ], [ %.049, %557 ], [ %.049, %555 ], [ %.049, %553 ], [ %.049, %546 ], [ %.049, %545 ], [ %.049, %543 ], [ %.049, %542 ], [ %.049, %533 ], [ %.049, %528 ], [ %526, %525 ], [ %.049, %523 ], [ %.049, %522 ], [ %.049, %511 ], [ %.049, %501 ], [ %.049, %494 ], [ %.049, %491 ], [ %.049, %490 ], [ %.049, %487 ], [ %.049, %486 ], [ 1, %475 ], [ %.049, %465 ], [ %.049, %464 ], [ %.049, %454 ], [ %.049, %444 ], [ %.049, %443 ], [ %.049, %432 ], [ %.049, %422 ], [ %.049, %420 ], [ %.049, %413 ], [ %.049, %411 ], [ %.049, %400 ], [ %.049, %390 ], [ %.049, %389 ], [ %.049, %386 ], [ %.049, %384 ], [ %.049, %382 ], [ %.049, %381 ], [ %.049, %370 ], [ %.049, %360 ], [ %.049, %359 ], [ %.049, %348 ], [ %.049, %338 ], [ %.049, %337 ], [ %.049, %321 ], [ %.049, %311 ], [ %.049, %309 ], [ %.049, %298 ], [ %.049, %288 ], [ %.049, %287 ], [ %.049, %285 ], [ %.049, %274 ], [ %.049, %264 ], [ %.049, %262 ], [ %.049, %261 ], [ %.049, %251 ], [ %.049, %241 ], [ %.049, %240 ], [ %.049, %229 ], [ %.049, %219 ], [ %.049, %217 ], [ %.049, %216 ], [ %.049, %200 ], [ %.049, %190 ], [ %.049, %187 ], [ %.049, %186 ], [ %.049, %184 ], [ %.049, %173 ], [ %.049, %163 ], [ %.049, %162 ], [ %.049, %161 ], [ %.049, %150 ], [ %.049, %140 ], [ %.049, %139 ], [ %.049, %129 ], [ %.049, %119 ], [ %.049, %110 ], [ %.049, %109 ], [ %.049, %108 ], [ %.049, %90 ], [ %.049, %80 ], [ %.049, %71 ], [ %.049, %62 ], [ %.049, %59 ], [ %.049, %56 ], [ %.049, %53 ], [ %.049, %50 ], [ %.049, %49 ], [ %.049, %34 ], [ %.049, %24 ], [ %.049, %21 ]
  %.047.be = phi i32 [ %.047, %20 ], [ %577, %576 ], [ %.047, %574 ], [ %.047, %572 ], [ %.047, %570 ], [ %.047, %569 ], [ %.047, %567 ], [ %.047, %566 ], [ %.047, %559 ], [ %.047, %558 ], [ %.047, %557 ], [ %.047, %555 ], [ %.047, %553 ], [ %.047, %546 ], [ %.047, %545 ], [ %.047, %543 ], [ %.047, %542 ], [ %.047, %533 ], [ %.047, %528 ], [ %.047, %525 ], [ %.047, %523 ], [ %.047, %522 ], [ %512, %511 ], [ %.047, %501 ], [ %.047, %494 ], [ %.047, %491 ], [ 1, %490 ], [ %.047, %487 ], [ %.047, %486 ], [ %.047, %475 ], [ %.047, %465 ], [ %.047, %464 ], [ %.047, %454 ], [ %.047, %444 ], [ %.047, %443 ], [ %.047, %432 ], [ %.047, %422 ], [ %.047, %420 ], [ %.047, %413 ], [ %.047, %411 ], [ %.047, %400 ], [ %.047, %390 ], [ %.047, %389 ], [ %.047, %386 ], [ %.047, %384 ], [ %.047, %382 ], [ %.047, %381 ], [ %.047, %370 ], [ %.047, %360 ], [ %.047, %359 ], [ %.047, %348 ], [ %.047, %338 ], [ %.047, %337 ], [ %.047, %321 ], [ %.047, %311 ], [ %.047, %309 ], [ %.047, %298 ], [ %.047, %288 ], [ %.047, %287 ], [ %.047, %285 ], [ %.047, %274 ], [ %.047, %264 ], [ %.047, %262 ], [ %.047, %261 ], [ %.047, %251 ], [ %.047, %241 ], [ %.047, %240 ], [ %.047, %229 ], [ %.047, %219 ], [ %.047, %217 ], [ %.047, %216 ], [ %.047, %200 ], [ %.047, %190 ], [ %.047, %187 ], [ %.047, %186 ], [ %.047, %184 ], [ %.047, %173 ], [ %.047, %163 ], [ %.047, %162 ], [ %.047, %161 ], [ %.047, %150 ], [ %.047, %140 ], [ %.047, %139 ], [ %.047, %129 ], [ %.047, %119 ], [ %.047, %110 ], [ %.047, %109 ], [ %.047, %108 ], [ %.047, %90 ], [ %.047, %80 ], [ %.047, %71 ], [ %.047, %62 ], [ %.047, %59 ], [ %.047, %56 ], [ %.047, %53 ], [ %.047, %50 ], [ %.047, %49 ], [ %.047, %34 ], [ %.047, %24 ], [ %.047, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 855649641, %576 ], [ 1465547922, %574 ], [ -1449740679, %572 ], [ -1469728348, %570 ], [ -329756594, %569 ], [ 38502634, %567 ], [ -859420834, %566 ], [ 134668131, %559 ], [ -217125346, %558 ], [ 1782005817, %557 ], [ -1256052968, %555 ], [ 1513168834, %553 ], [ 1499707070, %546 ], [ 1323693017, %545 ], [ -1581370805, %543 ], [ 1072913741, %542 ], [ -15077969, %533 ], [ 1978056335, %528 ], [ -220844625, %525 ], [ -1524587507, %523 ], [ 544011150, %522 ], [ %521, %511 ], [ %510, %501 ], [ -68159547, %494 ], [ %493, %491 ], [ 544011150, %490 ], [ %489, %487 ], [ -220844625, %486 ], [ %485, %475 ], [ %474, %465 ], [ -864676748, %464 ], [ %463, %454 ], [ %453, %444 ], [ -1905561814, %443 ], [ %442, %432 ], [ %431, %422 ], [ -67840182, %420 ], [ -2021962734, %413 ], [ %412, %411 ], [ %410, %400 ], [ %399, %390 ], [ -67840182, %389 ], [ %388, %386 ], [ -864676748, %384 ], [ 479416521, %382 ], [ -717050398, %381 ], [ %380, %370 ], [ %369, %360 ], [ 629056670, %359 ], [ %358, %348 ], [ %347, %338 ], [ 729595514, %337 ], [ %336, %321 ], [ %320, %311 ], [ %310, %309 ], [ %308, %298 ], [ %297, %288 ], [ 629056670, %287 ], [ %286, %285 ], [ %284, %274 ], [ %273, %264 ], [ 479416521, %262 ], [ -2126550876, %261 ], [ %260, %251 ], [ %250, %241 ], [ -398780664, %240 ], [ %239, %229 ], [ %228, %219 ], [ 1683109023, %217 ], [ 349349802, %216 ], [ %215, %200 ], [ %199, %190 ], [ %189, %187 ], [ 1683109023, %186 ], [ %185, %184 ], [ %183, %173 ], [ %172, %163 ], [ -2126550876, %162 ], [ -54189057, %161 ], [ %160, %150 ], [ %149, %140 ], [ 147804430, %139 ], [ %138, %129 ], [ %128, %119 ], [ -1740799127, %110 ], [ -136560979, %109 ], [ -1740799127, %108 ], [ %107, %90 ], [ %89, %80 ], [ -1740799127, %71 ], [ -1740799127, %62 ], [ %61, %59 ], [ %58, %56 ], [ %55, %53 ], [ %52, %50 ], [ -1870999275, %49 ], [ %48, %34 ], [ %33, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %22 = load i32, i32* %10, align 4
  %.not = icmp sgt i32 %.063, %22
  %23 = select i1 %.not, i32 507829145, i32 1306945058
  br label %.backedge

24:                                               ; preds = %20
  %25 = load i32, i32* @x.3, align 4
  %26 = load i32, i32* @y.4, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 1978056335, i32 888196677
  br label %.backedge

34:                                               ; preds = %20
  %35 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %11)
  %36 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %35, i32* nonnull dereferenceable(4) %12)
  %37 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %36, i32* nonnull dereferenceable(4) %13)
  %38 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %37, i32* nonnull dereferenceable(4) %14)
  %39 = load i32, i32* %11, align 4
  store i32 %39, i32* %5, align 4
  %40 = load i32, i32* @x.3, align 4
  %41 = load i32, i32* @y.4, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 -616356775, i32 888196677
  br label %.backedge

49:                                               ; preds = %20
  br label %.backedge

50:                                               ; preds = %20
  %.0..0..0. = load volatile i32, i32* %5, align 4
  %51 = icmp slt i32 %.0..0..0., 2
  %52 = select i1 %51, i32 1076446191, i32 -244600576
  br label %.backedge

53:                                               ; preds = %20
  %.0..0..0.40 = load volatile i32, i32* %5, align 4
  %54 = icmp slt i32 %.0..0..0.40, 3
  %55 = select i1 %54, i32 -2089742988, i32 1592021298
  br label %.backedge

56:                                               ; preds = %20
  %.0..0..0.41 = load volatile i32, i32* %5, align 4
  %57 = icmp eq i32 %.0..0..0.41, 3
  %58 = select i1 %57, i32 1578344553, i32 -2094792599
  br label %.backedge

59:                                               ; preds = %20
  %.0..0..0.42 = load volatile i32, i32* %5, align 4
  %60 = icmp eq i32 %.0..0..0.42, 1
  %61 = select i1 %60, i32 -1050260163, i32 -2094792599
  br label %.backedge

62:                                               ; preds = %20
  %63 = load i32, i32* %14, align 4
  %64 = load i32, i32* %13, align 4
  %65 = sext i32 %64 to i64
  %66 = load i32, i32* %12, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %6, i64 0, i64 %65, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = add i32 %69, %63
  store i32 %70, i32* %68, align 4
  br label %.backedge

71:                                               ; preds = %20
  %72 = load i32, i32* %14, align 4
  %73 = load i32, i32* %13, align 4
  %74 = sext i32 %73 to i64
  %75 = load i32, i32* %12, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %7, i64 0, i64 %74, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, %72
  store i32 %79, i32* %77, align 4
  br label %.backedge

80:                                               ; preds = %20
  %81 = load i32, i32* @x.3, align 4
  %82 = load i32, i32* @y.4, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 -15077969, i32 -826889748
  br label %.backedge

90:                                               ; preds = %20
  %91 = load i32, i32* %14, align 4
  %92 = load i32, i32* %13, align 4
  %93 = sext i32 %92 to i64
  %94 = load i32, i32* %12, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %8, i64 0, i64 %93, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, %91
  store i32 %98, i32* %96, align 4
  %99 = load i32, i32* @x.3, align 4
  %100 = load i32, i32* @y.4, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 1066631519, i32 -826889748
  br label %.backedge

108:                                              ; preds = %20
  br label %.backedge

109:                                              ; preds = %20
  br label %.backedge

110:                                              ; preds = %20
  %111 = load i32, i32* %14, align 4
  %112 = load i32, i32* %13, align 4
  %113 = sext i32 %112 to i64
  %114 = load i32, i32* %12, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %9, i64 0, i64 %113, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = add i32 %117, %111
  store i32 %118, i32* %116, align 4
  br label %.backedge

119:                                              ; preds = %20
  %120 = load i32, i32* @x.3, align 4
  %121 = load i32, i32* @y.4, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 1072913741, i32 588806243
  br label %.backedge

129:                                              ; preds = %20
  %130 = load i32, i32* @x.3, align 4
  %131 = load i32, i32* @y.4, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 914889871, i32 588806243
  br label %.backedge

139:                                              ; preds = %20
  br label %.backedge

140:                                              ; preds = %20
  %141 = load i32, i32* @x.3, align 4
  %142 = load i32, i32* @y.4, align 4
  %143 = add i32 %141, -1
  %144 = mul i32 %143, %141
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %147, %146
  %149 = select i1 %148, i32 -1581370805, i32 -1633109546
  br label %.backedge

150:                                              ; preds = %20
  %151 = add i32 %.063, 1
  %152 = load i32, i32* @x.3, align 4
  %153 = load i32, i32* @y.4, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 1628654165, i32 -1633109546
  br label %.backedge

161:                                              ; preds = %20
  br label %.backedge

162:                                              ; preds = %20
  br label %.backedge

163:                                              ; preds = %20
  %164 = load i32, i32* @x.3, align 4
  %165 = load i32, i32* @y.4, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 1323693017, i32 1053857917
  br label %.backedge

173:                                              ; preds = %20
  %174 = icmp slt i32 %.061, 4
  store i1 %174, i1* %4, align 1
  %175 = load i32, i32* @x.3, align 4
  %176 = load i32, i32* @y.4, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 1517691562, i32 1053857917
  br label %.backedge

184:                                              ; preds = %20
  %.0..0..0.43 = load volatile i1, i1* %4, align 1
  %185 = select i1 %.0..0..0.43, i32 1195905559, i32 1388923779
  br label %.backedge

186:                                              ; preds = %20
  br label %.backedge

187:                                              ; preds = %20
  %188 = icmp slt i32 %.059, 11
  %189 = select i1 %188, i32 -345048275, i32 133116086
  br label %.backedge

190:                                              ; preds = %20
  %191 = load i32, i32* @x.3, align 4
  %192 = load i32, i32* @y.4, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 1499707070, i32 -384879305
  br label %.backedge

200:                                              ; preds = %20
  %201 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %202 = sext i32 %.059 to i64
  %203 = sext i32 %.061 to i64
  %204 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %6, i64 0, i64 %202, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %201, i32 %205)
  %207 = load i32, i32* @x.3, align 4
  %208 = load i32, i32* @y.4, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1853757911, i32 -384879305
  br label %.backedge

216:                                              ; preds = %20
  br label %.backedge

217:                                              ; preds = %20
  %218 = add i32 %.059, 1
  br label %.backedge

219:                                              ; preds = %20
  %220 = load i32, i32* @x.3, align 4
  %221 = load i32, i32* @y.4, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 1513168834, i32 1966162110
  br label %.backedge

229:                                              ; preds = %20
  %230 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %231 = load i32, i32* @x.3, align 4
  %232 = load i32, i32* @y.4, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 644334567, i32 1966162110
  br label %.backedge

240:                                              ; preds = %20
  br label %.backedge

241:                                              ; preds = %20
  %242 = load i32, i32* @x.3, align 4
  %243 = load i32, i32* @y.4, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 -1256052968, i32 1493968112
  br label %.backedge

251:                                              ; preds = %20
  %.neg66 = add i32 %.061, 1
  %252 = load i32, i32* @x.3, align 4
  %253 = load i32, i32* @y.4, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 -1587755411, i32 1493968112
  br label %.backedge

261:                                              ; preds = %20
  br label %.backedge

262:                                              ; preds = %20
  %263 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

264:                                              ; preds = %20
  %265 = load i32, i32* @x.3, align 4
  %266 = load i32, i32* @y.4, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 1782005817, i32 1276304465
  br label %.backedge

274:                                              ; preds = %20
  %275 = icmp slt i32 %.057, 4
  store i1 %275, i1* %3, align 1
  %276 = load i32, i32* @x.3, align 4
  %277 = load i32, i32* @y.4, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 -1833474236, i32 1276304465
  br label %.backedge

285:                                              ; preds = %20
  %.0..0..0.44 = load volatile i1, i1* %3, align 1
  %286 = select i1 %.0..0..0.44, i32 1926723124, i32 -647924100
  br label %.backedge

287:                                              ; preds = %20
  br label %.backedge

288:                                              ; preds = %20
  %289 = load i32, i32* @x.3, align 4
  %290 = load i32, i32* @y.4, align 4
  %291 = add i32 %289, -1
  %292 = mul i32 %291, %289
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %295, %294
  %297 = select i1 %296, i32 -217125346, i32 -984197587
  br label %.backedge

298:                                              ; preds = %20
  %299 = icmp slt i32 %.055, 11
  store i1 %299, i1* %2, align 1
  %300 = load i32, i32* @x.3, align 4
  %301 = load i32, i32* @y.4, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 2105577674, i32 -984197587
  br label %.backedge

309:                                              ; preds = %20
  %.0..0..0.45 = load volatile i1, i1* %2, align 1
  %310 = select i1 %.0..0..0.45, i32 -1222803971, i32 84095683
  br label %.backedge

311:                                              ; preds = %20
  %312 = load i32, i32* @x.3, align 4
  %313 = load i32, i32* @y.4, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 134668131, i32 370151194
  br label %.backedge

321:                                              ; preds = %20
  %322 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %323 = sext i32 %.055 to i64
  %324 = sext i32 %.057 to i64
  %325 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %7, i64 0, i64 %323, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %322, i32 %326)
  %328 = load i32, i32* @x.3, align 4
  %329 = load i32, i32* @y.4, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 1990934282, i32 370151194
  br label %.backedge

337:                                              ; preds = %20
  br label %.backedge

338:                                              ; preds = %20
  %339 = load i32, i32* @x.3, align 4
  %340 = load i32, i32* @y.4, align 4
  %341 = add i32 %339, -1
  %342 = mul i32 %341, %339
  %343 = and i32 %342, 1
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %345, %344
  %347 = select i1 %346, i32 -859420834, i32 1190054782
  br label %.backedge

348:                                              ; preds = %20
  %349 = add i32 %.055, 1
  %350 = load i32, i32* @x.3, align 4
  %351 = load i32, i32* @y.4, align 4
  %352 = add i32 %350, -1
  %353 = mul i32 %352, %350
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %356, %355
  %358 = select i1 %357, i32 1404468125, i32 1190054782
  br label %.backedge

359:                                              ; preds = %20
  br label %.backedge

360:                                              ; preds = %20
  %361 = load i32, i32* @x.3, align 4
  %362 = load i32, i32* @y.4, align 4
  %363 = add i32 %361, -1
  %364 = mul i32 %363, %361
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %367, %366
  %369 = select i1 %368, i32 38502634, i32 -480667957
  br label %.backedge

370:                                              ; preds = %20
  %371 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %372 = load i32, i32* @x.3, align 4
  %373 = load i32, i32* @y.4, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 188167026, i32 -480667957
  br label %.backedge

381:                                              ; preds = %20
  br label %.backedge

382:                                              ; preds = %20
  %383 = add i32 %.057, 1
  br label %.backedge

384:                                              ; preds = %20
  %385 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

386:                                              ; preds = %20
  %387 = icmp slt i32 %.053, 4
  %388 = select i1 %387, i32 1093458966, i32 690806410
  br label %.backedge

389:                                              ; preds = %20
  br label %.backedge

390:                                              ; preds = %20
  %391 = load i32, i32* @x.3, align 4
  %392 = load i32, i32* @y.4, align 4
  %393 = add i32 %391, -1
  %394 = mul i32 %393, %391
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %397, %396
  %399 = select i1 %398, i32 -329756594, i32 1260617847
  br label %.backedge

400:                                              ; preds = %20
  %401 = icmp slt i32 %.051, 11
  store i1 %401, i1* %1, align 1
  %402 = load i32, i32* @x.3, align 4
  %403 = load i32, i32* @y.4, align 4
  %404 = add i32 %402, -1
  %405 = mul i32 %404, %402
  %406 = and i32 %405, 1
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %408, %407
  %410 = select i1 %409, i32 -10858908, i32 1260617847
  br label %.backedge

411:                                              ; preds = %20
  %.0..0..0.46 = load volatile i1, i1* %1, align 1
  %412 = select i1 %.0..0..0.46, i32 -402762025, i32 -2076742900
  br label %.backedge

413:                                              ; preds = %20
  %414 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %415 = sext i32 %.051 to i64
  %416 = sext i32 %.053 to i64
  %417 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %8, i64 0, i64 %415, i64 %416
  %418 = load i32, i32* %417, align 4
  %419 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %414, i32 %418)
  br label %.backedge

420:                                              ; preds = %20
  %421 = add i32 %.051, 1
  br label %.backedge

422:                                              ; preds = %20
  %423 = load i32, i32* @x.3, align 4
  %424 = load i32, i32* @y.4, align 4
  %425 = add i32 %423, -1
  %426 = mul i32 %425, %423
  %427 = and i32 %426, 1
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %429, %428
  %431 = select i1 %430, i32 -1469728348, i32 217814440
  br label %.backedge

432:                                              ; preds = %20
  %433 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %434 = load i32, i32* @x.3, align 4
  %435 = load i32, i32* @y.4, align 4
  %436 = add i32 %434, -1
  %437 = mul i32 %436, %434
  %438 = and i32 %437, 1
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %440, %439
  %442 = select i1 %441, i32 -1608164750, i32 217814440
  br label %.backedge

443:                                              ; preds = %20
  br label %.backedge

444:                                              ; preds = %20
  %445 = load i32, i32* @x.3, align 4
  %446 = load i32, i32* @y.4, align 4
  %447 = add i32 %445, -1
  %448 = mul i32 %447, %445
  %449 = and i32 %448, 1
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %451, %450
  %453 = select i1 %452, i32 -1449740679, i32 143350599
  br label %.backedge

454:                                              ; preds = %20
  %.neg65 = add i32 %.053, 1
  %455 = load i32, i32* @x.3, align 4
  %456 = load i32, i32* @y.4, align 4
  %457 = add i32 %455, -1
  %458 = mul i32 %457, %455
  %459 = and i32 %458, 1
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %461, %460
  %463 = select i1 %462, i32 -1128910750, i32 143350599
  br label %.backedge

464:                                              ; preds = %20
  br label %.backedge

465:                                              ; preds = %20
  %466 = load i32, i32* @x.3, align 4
  %467 = load i32, i32* @y.4, align 4
  %468 = add i32 %466, -1
  %469 = mul i32 %468, %466
  %470 = and i32 %469, 1
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %472, %471
  %474 = select i1 %473, i32 1465547922, i32 2030729362
  br label %.backedge

475:                                              ; preds = %20
  %476 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0))
  %477 = load i32, i32* @x.3, align 4
  %478 = load i32, i32* @y.4, align 4
  %479 = add i32 %477, -1
  %480 = mul i32 %479, %477
  %481 = and i32 %480, 1
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %483, %482
  %485 = select i1 %484, i32 766919627, i32 2030729362
  br label %.backedge

486:                                              ; preds = %20
  br label %.backedge

487:                                              ; preds = %20
  %488 = icmp slt i32 %.049, 4
  %489 = select i1 %488, i32 -1274799509, i32 -1916164074
  br label %.backedge

490:                                              ; preds = %20
  br label %.backedge

491:                                              ; preds = %20
  %492 = icmp slt i32 %.047, 11
  %493 = select i1 %492, i32 -1614145174, i32 1676676186
  br label %.backedge

494:                                              ; preds = %20
  %495 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %496 = sext i32 %.047 to i64
  %497 = sext i32 %.049 to i64
  %498 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %9, i64 0, i64 %496, i64 %497
  %499 = load i32, i32* %498, align 4
  %500 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %495, i32 %499)
  br label %.backedge

501:                                              ; preds = %20
  %502 = load i32, i32* @x.3, align 4
  %503 = load i32, i32* @y.4, align 4
  %504 = add i32 %502, -1
  %505 = mul i32 %504, %502
  %506 = and i32 %505, 1
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %508, %507
  %510 = select i1 %509, i32 855649641, i32 -1458346856
  br label %.backedge

511:                                              ; preds = %20
  %512 = add i32 %.047, 1
  %513 = load i32, i32* @x.3, align 4
  %514 = load i32, i32* @y.4, align 4
  %515 = add i32 %513, -1
  %516 = mul i32 %515, %513
  %517 = and i32 %516, 1
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %519, %518
  %521 = select i1 %520, i32 966635714, i32 -1458346856
  br label %.backedge

522:                                              ; preds = %20
  br label %.backedge

523:                                              ; preds = %20
  %524 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

525:                                              ; preds = %20
  %526 = add i32 %.049, 1
  br label %.backedge

527:                                              ; preds = %20
  ret i32 0

528:                                              ; preds = %20
  %529 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %11)
  %530 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %529, i32* nonnull dereferenceable(4) %12)
  %531 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %530, i32* nonnull dereferenceable(4) %13)
  %532 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %531, i32* nonnull dereferenceable(4) %14)
  br label %.backedge

533:                                              ; preds = %20
  %534 = load i32, i32* %14, align 4
  %535 = load i32, i32* %13, align 4
  %536 = sext i32 %535 to i64
  %537 = load i32, i32* %12, align 4
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %8, i64 0, i64 %536, i64 %538
  %540 = load i32, i32* %539, align 4
  %541 = add i32 %540, %534
  store i32 %541, i32* %539, align 4
  br label %.backedge

542:                                              ; preds = %20
  br label %.backedge

543:                                              ; preds = %20
  %544 = add i32 %.063, 1
  br label %.backedge

545:                                              ; preds = %20
  br label %.backedge

546:                                              ; preds = %20
  %547 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %548 = sext i32 %.059 to i64
  %549 = sext i32 %.061 to i64
  %550 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %6, i64 0, i64 %548, i64 %549
  %551 = load i32, i32* %550, align 4
  %552 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %547, i32 %551)
  br label %.backedge

553:                                              ; preds = %20
  %554 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

555:                                              ; preds = %20
  %556 = add i32 %.061, 1
  br label %.backedge

557:                                              ; preds = %20
  br label %.backedge

558:                                              ; preds = %20
  br label %.backedge

559:                                              ; preds = %20
  %560 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %561 = sext i32 %.055 to i64
  %562 = sext i32 %.057 to i64
  %563 = getelementptr inbounds [11 x [4 x i32]], [11 x [4 x i32]]* %7, i64 0, i64 %561, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %560, i32 %564)
  br label %.backedge

566:                                              ; preds = %20
  %.neg = add i32 %.055, 1
  br label %.backedge

567:                                              ; preds = %20
  %568 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

569:                                              ; preds = %20
  br label %.backedge

570:                                              ; preds = %20
  %571 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

572:                                              ; preds = %20
  %573 = add i32 %.053, 1
  br label %.backedge

574:                                              ; preds = %20
  %575 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

576:                                              ; preds = %20
  %577 = add i32 %.047, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s020858617.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
