; ModuleID = 'build_ollvm/programs/p02409/s920817795.ll'
source_filename = "Project_CodeNet_C++1400/p02409/s920817795.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str.1 = private unnamed_addr constant [21 x i8] c"####################\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [4 x [3 x [10 x i32]]], align 16
  br label %10

10:                                               ; preds = %.backedge, %0
  %.046 = phi i32 [ 0, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.042 = phi i32 [ undef, %0 ], [ %.042.be, %.backedge ]
  %.040 = phi i32 [ undef, %0 ], [ %.040.be, %.backedge ]
  %.038 = phi i32 [ undef, %0 ], [ %.038.be, %.backedge ]
  %.036 = phi i32 [ undef, %0 ], [ %.036.be, %.backedge ]
  %.034 = phi i32 [ undef, %0 ], [ %.034.be, %.backedge ]
  %.0 = phi i32 [ 1492020869, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1492020869, label %11
    i32 -1687836953, label %14
    i32 -1592302980, label %24
    i32 2146777532, label %34
    i32 1159191965, label %35
    i32 1465969398, label %45
    i32 -169272393, label %56
    i32 -1054678184, label %58
    i32 -896310694, label %59
    i32 -1746129705, label %62
    i32 -2108244445, label %72
    i32 2049080241, label %86
    i32 -343433068, label %87
    i32 -1363055220, label %89
    i32 -83635673, label %90
    i32 -1711609177, label %92
    i32 1448217221, label %93
    i32 -1452843562, label %103
    i32 -1233831975, label %114
    i32 -541175229, label %115
    i32 -482440626, label %117
    i32 1980004318, label %120
    i32 -7445614, label %135
    i32 710986092, label %145
    i32 229544234, label %155
    i32 953629378, label %156
    i32 -1260884853, label %157
    i32 -1137460744, label %160
    i32 -490352102, label %170
    i32 -1414796628, label %180
    i32 1443644415, label %181
    i32 -221239482, label %191
    i32 -843096525, label %202
    i32 -138803360, label %204
    i32 896423388, label %205
    i32 1625197371, label %215
    i32 771153535, label %226
    i32 -1611916766, label %228
    i32 -1255007845, label %235
    i32 1372843915, label %236
    i32 203240753, label %237
    i32 -1309402654, label %239
    i32 1548026758, label %241
    i32 -551227959, label %251
    i32 1953671436, label %261
    i32 1229471130, label %262
    i32 149216529, label %272
    i32 -1638598753, label %282
    i32 -2123159090, label %283
    i32 2075439450, label %293
    i32 -1088831830, label %304
    i32 -511745904, label %305
    i32 620289096, label %306
    i32 -749898674, label %307
    i32 -235493662, label %308
    i32 1544095859, label %313
    i32 -942036041, label %314
    i32 837823893, label %316
    i32 1217854622, label %317
    i32 274222554, label %318
    i32 91037062, label %319
    i32 94103523, label %320
    i32 1323285611, label %321
  ]

.backedge:                                        ; preds = %10, %321, %320, %319, %318, %317, %316, %314, %313, %308, %307, %306, %304, %293, %283, %282, %272, %262, %261, %251, %241, %239, %237, %236, %235, %228, %226, %215, %205, %204, %202, %191, %181, %180, %170, %160, %157, %156, %155, %145, %135, %120, %117, %115, %114, %103, %93, %92, %90, %89, %87, %86, %72, %62, %59, %58, %56, %45, %35, %34, %24, %14, %11
  %.046.be = phi i32 [ %.046, %10 ], [ %.046, %321 ], [ %.046, %320 ], [ %.046, %319 ], [ %.046, %318 ], [ %.046, %317 ], [ %.046, %316 ], [ %.046, %314 ], [ %.neg, %313 ], [ %.046, %308 ], [ %.046, %307 ], [ %.046, %306 ], [ %.046, %304 ], [ %.046, %293 ], [ %.046, %283 ], [ %.046, %282 ], [ %.046, %272 ], [ %.046, %262 ], [ %.046, %261 ], [ %.046, %251 ], [ %.046, %241 ], [ %.046, %239 ], [ %.046, %237 ], [ %.046, %236 ], [ %.046, %235 ], [ %.046, %228 ], [ %.046, %226 ], [ %.046, %215 ], [ %.046, %205 ], [ %.046, %204 ], [ %.046, %202 ], [ %.046, %191 ], [ %.046, %181 ], [ %.046, %180 ], [ %.046, %170 ], [ %.046, %160 ], [ %.046, %157 ], [ %.046, %156 ], [ %.046, %155 ], [ %.046, %145 ], [ %.046, %135 ], [ %.046, %120 ], [ %.046, %117 ], [ %.046, %115 ], [ %.046, %114 ], [ %104, %103 ], [ %.046, %93 ], [ %.046, %92 ], [ %.046, %90 ], [ %.046, %89 ], [ %.046, %87 ], [ %.046, %86 ], [ %.046, %72 ], [ %.046, %62 ], [ %.046, %59 ], [ %.046, %58 ], [ %.046, %56 ], [ %.046, %45 ], [ %.046, %35 ], [ %.046, %34 ], [ %.046, %24 ], [ %.046, %14 ], [ %.046, %11 ]
  %.044.be = phi i32 [ %.044, %10 ], [ %.044, %321 ], [ %.044, %320 ], [ %.044, %319 ], [ %.044, %318 ], [ %.044, %317 ], [ %.044, %316 ], [ %.044, %314 ], [ %.044, %313 ], [ %.044, %308 ], [ %.044, %307 ], [ 0, %306 ], [ %.044, %304 ], [ %.044, %293 ], [ %.044, %283 ], [ %.044, %282 ], [ %.044, %272 ], [ %.044, %262 ], [ %.044, %261 ], [ %.044, %251 ], [ %.044, %241 ], [ %.044, %239 ], [ %.044, %237 ], [ %.044, %236 ], [ %.044, %235 ], [ %.044, %228 ], [ %.044, %226 ], [ %.044, %215 ], [ %.044, %205 ], [ %.044, %204 ], [ %.044, %202 ], [ %.044, %191 ], [ %.044, %181 ], [ %.044, %180 ], [ %.044, %170 ], [ %.044, %160 ], [ %.044, %157 ], [ %.044, %156 ], [ %.044, %155 ], [ %.044, %145 ], [ %.044, %135 ], [ %.044, %120 ], [ %.044, %117 ], [ %.044, %115 ], [ %.044, %114 ], [ %.044, %103 ], [ %.044, %93 ], [ %.044, %92 ], [ %91, %90 ], [ %.044, %89 ], [ %.044, %87 ], [ %.044, %86 ], [ %.044, %72 ], [ %.044, %62 ], [ %.044, %59 ], [ %.044, %58 ], [ %.044, %56 ], [ %.044, %45 ], [ %.044, %35 ], [ %.044, %34 ], [ 0, %24 ], [ %.044, %14 ], [ %.044, %11 ]
  %.042.be = phi i32 [ %.042, %10 ], [ %.042, %321 ], [ %.042, %320 ], [ %.042, %319 ], [ %.042, %318 ], [ %.042, %317 ], [ %.042, %316 ], [ %.042, %314 ], [ %.042, %313 ], [ %.042, %308 ], [ %.042, %307 ], [ %.042, %306 ], [ %.042, %304 ], [ %.042, %293 ], [ %.042, %283 ], [ %.042, %282 ], [ %.042, %272 ], [ %.042, %262 ], [ %.042, %261 ], [ %.042, %251 ], [ %.042, %241 ], [ %.042, %239 ], [ %.042, %237 ], [ %.042, %236 ], [ %.042, %235 ], [ %.042, %228 ], [ %.042, %226 ], [ %.042, %215 ], [ %.042, %205 ], [ %.042, %204 ], [ %.042, %202 ], [ %.042, %191 ], [ %.042, %181 ], [ %.042, %180 ], [ %.042, %170 ], [ %.042, %160 ], [ %.042, %157 ], [ %.042, %156 ], [ %.042, %155 ], [ %.042, %145 ], [ %.042, %135 ], [ %.042, %120 ], [ %.042, %117 ], [ %.042, %115 ], [ %.042, %114 ], [ %.042, %103 ], [ %.042, %93 ], [ %.042, %92 ], [ %.042, %90 ], [ %.042, %89 ], [ %88, %87 ], [ %.042, %86 ], [ %.042, %72 ], [ %.042, %62 ], [ %.042, %59 ], [ 0, %58 ], [ %.042, %56 ], [ %.042, %45 ], [ %.042, %35 ], [ %.042, %34 ], [ %.042, %24 ], [ %.042, %14 ], [ %.042, %11 ]
  %.040.be = phi i32 [ %.040, %10 ], [ %.040, %321 ], [ %.040, %320 ], [ %.040, %319 ], [ %.040, %318 ], [ %.040, %317 ], [ %.040, %316 ], [ %315, %314 ], [ %.040, %313 ], [ %.040, %308 ], [ %.040, %307 ], [ %.040, %306 ], [ %.040, %304 ], [ %.040, %293 ], [ %.040, %283 ], [ %.040, %282 ], [ %.040, %272 ], [ %.040, %262 ], [ %.040, %261 ], [ %.040, %251 ], [ %.040, %241 ], [ %.040, %239 ], [ %.040, %237 ], [ %.040, %236 ], [ %.040, %235 ], [ %.040, %228 ], [ %.040, %226 ], [ %.040, %215 ], [ %.040, %205 ], [ %.040, %204 ], [ %.040, %202 ], [ %.040, %191 ], [ %.040, %181 ], [ %.040, %180 ], [ %.040, %170 ], [ %.040, %160 ], [ %.040, %157 ], [ %.040, %156 ], [ %.040, %155 ], [ %.neg50, %145 ], [ %.040, %135 ], [ %.040, %120 ], [ %.040, %117 ], [ 1, %115 ], [ %.040, %114 ], [ %.040, %103 ], [ %.040, %93 ], [ %.040, %92 ], [ %.040, %90 ], [ %.040, %89 ], [ %.040, %87 ], [ %.040, %86 ], [ %.040, %72 ], [ %.040, %62 ], [ %.040, %59 ], [ %.040, %58 ], [ %.040, %56 ], [ %.040, %45 ], [ %.040, %35 ], [ %.040, %34 ], [ %.040, %24 ], [ %.040, %14 ], [ %.040, %11 ]
  %.038.be = phi i32 [ %.038, %10 ], [ %322, %321 ], [ %.038, %320 ], [ %.038, %319 ], [ %.038, %318 ], [ %.038, %317 ], [ %.038, %316 ], [ %.038, %314 ], [ %.038, %313 ], [ %.038, %308 ], [ %.038, %307 ], [ %.038, %306 ], [ %.038, %304 ], [ %294, %293 ], [ %.038, %283 ], [ %.038, %282 ], [ %.038, %272 ], [ %.038, %262 ], [ %.038, %261 ], [ %.038, %251 ], [ %.038, %241 ], [ %.038, %239 ], [ %.038, %237 ], [ %.038, %236 ], [ %.038, %235 ], [ %.038, %228 ], [ %.038, %226 ], [ %.038, %215 ], [ %.038, %205 ], [ %.038, %204 ], [ %.038, %202 ], [ %.038, %191 ], [ %.038, %181 ], [ %.038, %180 ], [ %.038, %170 ], [ %.038, %160 ], [ %.038, %157 ], [ 0, %156 ], [ %.038, %155 ], [ %.038, %145 ], [ %.038, %135 ], [ %.038, %120 ], [ %.038, %117 ], [ %.038, %115 ], [ %.038, %114 ], [ %.038, %103 ], [ %.038, %93 ], [ %.038, %92 ], [ %.038, %90 ], [ %.038, %89 ], [ %.038, %87 ], [ %.038, %86 ], [ %.038, %72 ], [ %.038, %62 ], [ %.038, %59 ], [ %.038, %58 ], [ %.038, %56 ], [ %.038, %45 ], [ %.038, %35 ], [ %.038, %34 ], [ %.038, %24 ], [ %.038, %14 ], [ %.038, %11 ]
  %.036.be = phi i32 [ %.036, %10 ], [ %.036, %321 ], [ %.036, %320 ], [ %.036, %319 ], [ %.036, %318 ], [ %.036, %317 ], [ 0, %316 ], [ %.036, %314 ], [ %.036, %313 ], [ %.036, %308 ], [ %.036, %307 ], [ %.036, %306 ], [ %.036, %304 ], [ %.036, %293 ], [ %.036, %283 ], [ %.036, %282 ], [ %.036, %272 ], [ %.036, %262 ], [ %.036, %261 ], [ %.036, %251 ], [ %.036, %241 ], [ %.036, %239 ], [ %238, %237 ], [ %.036, %236 ], [ %.036, %235 ], [ %.036, %228 ], [ %.036, %226 ], [ %.036, %215 ], [ %.036, %205 ], [ %.036, %204 ], [ %.036, %202 ], [ %.036, %191 ], [ %.036, %181 ], [ %.036, %180 ], [ 0, %170 ], [ %.036, %160 ], [ %.036, %157 ], [ %.036, %156 ], [ %.036, %155 ], [ %.036, %145 ], [ %.036, %135 ], [ %.036, %120 ], [ %.036, %117 ], [ %.036, %115 ], [ %.036, %114 ], [ %.036, %103 ], [ %.036, %93 ], [ %.036, %92 ], [ %.036, %90 ], [ %.036, %89 ], [ %.036, %87 ], [ %.036, %86 ], [ %.036, %72 ], [ %.036, %62 ], [ %.036, %59 ], [ %.036, %58 ], [ %.036, %56 ], [ %.036, %45 ], [ %.036, %35 ], [ %.036, %34 ], [ %.036, %24 ], [ %.036, %14 ], [ %.036, %11 ]
  %.034.be = phi i32 [ %.034, %10 ], [ %.034, %321 ], [ %.034, %320 ], [ %.034, %319 ], [ %.034, %318 ], [ %.034, %317 ], [ %.034, %316 ], [ %.034, %314 ], [ %.034, %313 ], [ %.034, %308 ], [ %.034, %307 ], [ %.034, %306 ], [ %.034, %304 ], [ %.034, %293 ], [ %.034, %283 ], [ %.034, %282 ], [ %.034, %272 ], [ %.034, %262 ], [ %.034, %261 ], [ %.034, %251 ], [ %.034, %241 ], [ %.034, %239 ], [ %.034, %237 ], [ %.034, %236 ], [ %.neg49, %235 ], [ %.034, %228 ], [ %.034, %226 ], [ %.034, %215 ], [ %.034, %205 ], [ 0, %204 ], [ %.034, %202 ], [ %.034, %191 ], [ %.034, %181 ], [ %.034, %180 ], [ %.034, %170 ], [ %.034, %160 ], [ %.034, %157 ], [ %.034, %156 ], [ %.034, %155 ], [ %.034, %145 ], [ %.034, %135 ], [ %.034, %120 ], [ %.034, %117 ], [ %.034, %115 ], [ %.034, %114 ], [ %.034, %103 ], [ %.034, %93 ], [ %.034, %92 ], [ %.034, %90 ], [ %.034, %89 ], [ %.034, %87 ], [ %.034, %86 ], [ %.034, %72 ], [ %.034, %62 ], [ %.034, %59 ], [ %.034, %58 ], [ %.034, %56 ], [ %.034, %45 ], [ %.034, %35 ], [ %.034, %34 ], [ %.034, %24 ], [ %.034, %14 ], [ %.034, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ 2075439450, %321 ], [ 149216529, %320 ], [ -551227959, %319 ], [ 1625197371, %318 ], [ -221239482, %317 ], [ -490352102, %316 ], [ 710986092, %314 ], [ -1452843562, %313 ], [ -2108244445, %308 ], [ 1465969398, %307 ], [ -1592302980, %306 ], [ -1260884853, %304 ], [ %303, %293 ], [ %292, %283 ], [ -2123159090, %282 ], [ %281, %272 ], [ %271, %262 ], [ 1229471130, %261 ], [ %260, %251 ], [ %250, %241 ], [ %240, %239 ], [ 1443644415, %237 ], [ 203240753, %236 ], [ 896423388, %235 ], [ -1255007845, %228 ], [ %227, %226 ], [ %225, %215 ], [ %214, %205 ], [ 896423388, %204 ], [ %203, %202 ], [ %201, %191 ], [ %190, %181 ], [ 1443644415, %180 ], [ %179, %170 ], [ %169, %160 ], [ %159, %157 ], [ -1260884853, %156 ], [ -482440626, %155 ], [ %154, %145 ], [ %144, %135 ], [ -7445614, %120 ], [ %119, %117 ], [ -482440626, %115 ], [ 1492020869, %114 ], [ %113, %103 ], [ %102, %93 ], [ 1448217221, %92 ], [ 1159191965, %90 ], [ -83635673, %89 ], [ -896310694, %87 ], [ -343433068, %86 ], [ %85, %72 ], [ %71, %62 ], [ %61, %59 ], [ -896310694, %58 ], [ %57, %56 ], [ %55, %45 ], [ %44, %35 ], [ 1159191965, %34 ], [ %33, %24 ], [ %23, %14 ], [ %13, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = icmp slt i32 %.046, 4
  %13 = select i1 %12, i32 -1687836953, i32 -541175229
  br label %.backedge

14:                                               ; preds = %10
  %15 = load i32, i32* @x, align 4
  %16 = load i32, i32* @y, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1592302980, i32 620289096
  br label %.backedge

24:                                               ; preds = %10
  %25 = load i32, i32* @x, align 4
  %26 = load i32, i32* @y, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 2146777532, i32 620289096
  br label %.backedge

34:                                               ; preds = %10
  br label %.backedge

35:                                               ; preds = %10
  %36 = load i32, i32* @x, align 4
  %37 = load i32, i32* @y, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 1465969398, i32 -749898674
  br label %.backedge

45:                                               ; preds = %10
  %46 = icmp slt i32 %.044, 3
  store i1 %46, i1* %3, align 1
  %47 = load i32, i32* @x, align 4
  %48 = load i32, i32* @y, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 -169272393, i32 -749898674
  br label %.backedge

56:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %57 = select i1 %.0..0..0., i32 -1054678184, i32 -1711609177
  br label %.backedge

58:                                               ; preds = %10
  br label %.backedge

59:                                               ; preds = %10
  %60 = icmp slt i32 %.042, 10
  %61 = select i1 %60, i32 -1746129705, i32 -1363055220
  br label %.backedge

62:                                               ; preds = %10
  %63 = load i32, i32* @x, align 4
  %64 = load i32, i32* @y, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -2108244445, i32 -235493662
  br label %.backedge

72:                                               ; preds = %10
  %73 = sext i32 %.046 to i64
  %74 = sext i32 %.044 to i64
  %75 = sext i32 %.042 to i64
  %76 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %9, i64 0, i64 %73, i64 %74, i64 %75
  store i32 0, i32* %76, align 4
  %77 = load i32, i32* @x, align 4
  %78 = load i32, i32* @y, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 2049080241, i32 -235493662
  br label %.backedge

86:                                               ; preds = %10
  br label %.backedge

87:                                               ; preds = %10
  %88 = add i32 %.042, 1
  br label %.backedge

89:                                               ; preds = %10
  br label %.backedge

90:                                               ; preds = %10
  %91 = add i32 %.044, 1
  br label %.backedge

92:                                               ; preds = %10
  br label %.backedge

93:                                               ; preds = %10
  %94 = load i32, i32* @x, align 4
  %95 = load i32, i32* @y, align 4
  %96 = add i32 %94, -1
  %97 = mul i32 %96, %94
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %100, %99
  %102 = select i1 %101, i32 -1452843562, i32 1544095859
  br label %.backedge

103:                                              ; preds = %10
  %104 = add i32 %.046, 1
  %105 = load i32, i32* @x, align 4
  %106 = load i32, i32* @y, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 -1233831975, i32 1544095859
  br label %.backedge

114:                                              ; preds = %10
  br label %.backedge

115:                                              ; preds = %10
  %116 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %4)
  br label %.backedge

117:                                              ; preds = %10
  %118 = load i32, i32* %4, align 4
  %.not51 = icmp sgt i32 %.040, %118
  %119 = select i1 %.not51, i32 953629378, i32 1980004318
  br label %.backedge

120:                                              ; preds = %10
  %121 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  %122 = load i32, i32* %8, align 4
  %123 = load i32, i32* %5, align 4
  %124 = add i32 %123, -1
  %125 = sext i32 %124 to i64
  %126 = load i32, i32* %6, align 4
  %127 = add i32 %126, -1
  %128 = sext i32 %127 to i64
  %129 = load i32, i32* %7, align 4
  %130 = add i32 %129, -1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %9, i64 0, i64 %125, i64 %128, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, %122
  store i32 %134, i32* %132, align 4
  br label %.backedge

135:                                              ; preds = %10
  %136 = load i32, i32* @x, align 4
  %137 = load i32, i32* @y, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 710986092, i32 -942036041
  br label %.backedge

145:                                              ; preds = %10
  %.neg50 = add i32 %.040, 1
  %146 = load i32, i32* @x, align 4
  %147 = load i32, i32* @y, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 229544234, i32 -942036041
  br label %.backedge

155:                                              ; preds = %10
  br label %.backedge

156:                                              ; preds = %10
  br label %.backedge

157:                                              ; preds = %10
  %158 = icmp slt i32 %.038, 4
  %159 = select i1 %158, i32 -1137460744, i32 -511745904
  br label %.backedge

160:                                              ; preds = %10
  %161 = load i32, i32* @x, align 4
  %162 = load i32, i32* @y, align 4
  %163 = add i32 %161, -1
  %164 = mul i32 %163, %161
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %167, %166
  %169 = select i1 %168, i32 -490352102, i32 837823893
  br label %.backedge

170:                                              ; preds = %10
  %171 = load i32, i32* @x, align 4
  %172 = load i32, i32* @y, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 -1414796628, i32 837823893
  br label %.backedge

180:                                              ; preds = %10
  br label %.backedge

181:                                              ; preds = %10
  %182 = load i32, i32* @x, align 4
  %183 = load i32, i32* @y, align 4
  %184 = add i32 %182, -1
  %185 = mul i32 %184, %182
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %188, %187
  %190 = select i1 %189, i32 -221239482, i32 1217854622
  br label %.backedge

191:                                              ; preds = %10
  %192 = icmp slt i32 %.036, 3
  store i1 %192, i1* %2, align 1
  %193 = load i32, i32* @x, align 4
  %194 = load i32, i32* @y, align 4
  %195 = add i32 %193, -1
  %196 = mul i32 %195, %193
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %199, %198
  %201 = select i1 %200, i32 -843096525, i32 1217854622
  br label %.backedge

202:                                              ; preds = %10
  %.0..0..0.32 = load volatile i1, i1* %2, align 1
  %203 = select i1 %.0..0..0.32, i32 -138803360, i32 -1309402654
  br label %.backedge

204:                                              ; preds = %10
  br label %.backedge

205:                                              ; preds = %10
  %206 = load i32, i32* @x, align 4
  %207 = load i32, i32* @y, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 1625197371, i32 274222554
  br label %.backedge

215:                                              ; preds = %10
  %216 = icmp slt i32 %.034, 10
  store i1 %216, i1* %1, align 1
  %217 = load i32, i32* @x, align 4
  %218 = load i32, i32* @y, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 771153535, i32 274222554
  br label %.backedge

226:                                              ; preds = %10
  %.0..0..0.33 = load volatile i1, i1* %1, align 1
  %227 = select i1 %.0..0..0.33, i32 -1611916766, i32 1372843915
  br label %.backedge

228:                                              ; preds = %10
  %229 = sext i32 %.038 to i64
  %230 = sext i32 %.036 to i64
  %231 = sext i32 %.034 to i64
  %232 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %9, i64 0, i64 %229, i64 %230, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %233)
  br label %.backedge

235:                                              ; preds = %10
  %.neg49 = add i32 %.034, 1
  br label %.backedge

236:                                              ; preds = %10
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

237:                                              ; preds = %10
  %238 = add i32 %.036, 1
  br label %.backedge

239:                                              ; preds = %10
  %.not = icmp eq i32 %.038, 3
  %240 = select i1 %.not, i32 1229471130, i32 1548026758
  br label %.backedge

241:                                              ; preds = %10
  %242 = load i32, i32* @x, align 4
  %243 = load i32, i32* @y, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 -551227959, i32 91037062
  br label %.backedge

251:                                              ; preds = %10
  %puts48 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str.1, i64 0, i64 0))
  %252 = load i32, i32* @x, align 4
  %253 = load i32, i32* @y, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 1953671436, i32 91037062
  br label %.backedge

261:                                              ; preds = %10
  br label %.backedge

262:                                              ; preds = %10
  %263 = load i32, i32* @x, align 4
  %264 = load i32, i32* @y, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 149216529, i32 94103523
  br label %.backedge

272:                                              ; preds = %10
  %273 = load i32, i32* @x, align 4
  %274 = load i32, i32* @y, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 -1638598753, i32 94103523
  br label %.backedge

282:                                              ; preds = %10
  br label %.backedge

283:                                              ; preds = %10
  %284 = load i32, i32* @x, align 4
  %285 = load i32, i32* @y, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 2075439450, i32 1323285611
  br label %.backedge

293:                                              ; preds = %10
  %294 = add i32 %.038, 1
  %295 = load i32, i32* @x, align 4
  %296 = load i32, i32* @y, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 -1088831830, i32 1323285611
  br label %.backedge

304:                                              ; preds = %10
  br label %.backedge

305:                                              ; preds = %10
  ret i32 0

306:                                              ; preds = %10
  br label %.backedge

307:                                              ; preds = %10
  br label %.backedge

308:                                              ; preds = %10
  %309 = sext i32 %.046 to i64
  %310 = sext i32 %.044 to i64
  %311 = sext i32 %.042 to i64
  %312 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %9, i64 0, i64 %309, i64 %310, i64 %311
  store i32 0, i32* %312, align 4
  br label %.backedge

313:                                              ; preds = %10
  %.neg = add i32 %.046, 1
  br label %.backedge

314:                                              ; preds = %10
  %315 = add i32 %.040, 1
  br label %.backedge

316:                                              ; preds = %10
  br label %.backedge

317:                                              ; preds = %10
  br label %.backedge

318:                                              ; preds = %10
  br label %.backedge

319:                                              ; preds = %10
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str.1, i64 0, i64 0))
  br label %.backedge

320:                                              ; preds = %10
  br label %.backedge

321:                                              ; preds = %10
  %322 = add i32 %.038, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
