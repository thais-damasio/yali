; ModuleID = 'build_ollvm/programs/p02409/s680314985.ll'
source_filename = "Project_CodeNet_C++1400/p02409/s680314985.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str = private unnamed_addr constant [21 x i8] c"####################\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca [4 x [3 x [10 x i32]]], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  br label %9

9:                                                ; preds = %.backedge, %0
  %.043 = phi i32 [ 0, %0 ], [ %.043.be, %.backedge ]
  %.041 = phi i32 [ undef, %0 ], [ %.041.be, %.backedge ]
  %.039 = phi i32 [ undef, %0 ], [ %.039.be, %.backedge ]
  %.037 = phi i32 [ undef, %0 ], [ %.037.be, %.backedge ]
  %.035 = phi i32 [ undef, %0 ], [ %.035.be, %.backedge ]
  %.033 = phi i32 [ undef, %0 ], [ %.033.be, %.backedge ]
  %.031 = phi i32 [ undef, %0 ], [ %.031.be, %.backedge ]
  %.0 = phi i32 [ 1234480886, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1234480886, label %10
    i32 1003191566, label %20
    i32 2143681916, label %31
    i32 1697732132, label %33
    i32 361656951, label %34
    i32 -773082160, label %37
    i32 1515183249, label %38
    i32 -1062701892, label %41
    i32 -563242794, label %46
    i32 -2104543238, label %48
    i32 689375107, label %49
    i32 470251792, label %51
    i32 154694063, label %61
    i32 1050285937, label %71
    i32 1649440391, label %72
    i32 1827899433, label %82
    i32 287839496, label %93
    i32 -1426993445, label %94
    i32 962681151, label %104
    i32 97950589, label %115
    i32 -1654136507, label %116
    i32 1933766410, label %120
    i32 1503738196, label %138
    i32 1540366214, label %148
    i32 1905569583, label %159
    i32 1916893951, label %160
    i32 1282952818, label %170
    i32 325837651, label %180
    i32 -839787576, label %181
    i32 1619438979, label %184
    i32 2142119007, label %194
    i32 -1932143500, label %204
    i32 1333630269, label %205
    i32 1074648377, label %208
    i32 -852463517, label %209
    i32 642731589, label %219
    i32 656569388, label %230
    i32 1116121349, label %232
    i32 -1793845266, label %242
    i32 567539565, label %258
    i32 521594831, label %259
    i32 -1506587387, label %260
    i32 -476957576, label %261
    i32 493345474, label %263
    i32 1657808329, label %266
    i32 -1855507497, label %267
    i32 579425444, label %268
    i32 158810502, label %278
    i32 -264469963, label %289
    i32 -2032155775, label %290
    i32 1466225997, label %300
    i32 712339032, label %310
    i32 1732355910, label %311
    i32 -1965032660, label %312
    i32 -1164682129, label %313
    i32 -1224856942, label %315
    i32 -1929436131, label %317
    i32 989144630, label %319
    i32 -1776532115, label %320
    i32 1956887367, label %321
    i32 -513087923, label %322
    i32 -852051498, label %329
    i32 -572391935, label %331
  ]

.backedge:                                        ; preds = %9, %331, %329, %322, %321, %320, %319, %317, %315, %313, %312, %311, %300, %290, %289, %278, %268, %267, %266, %263, %261, %260, %259, %258, %242, %232, %230, %219, %209, %208, %205, %204, %194, %184, %181, %180, %170, %160, %159, %148, %138, %120, %116, %115, %104, %94, %93, %82, %72, %71, %61, %51, %49, %48, %46, %41, %38, %37, %34, %33, %31, %20, %10
  %.043.be = phi i32 [ %.043, %9 ], [ %.043, %331 ], [ %.043, %329 ], [ %.043, %322 ], [ %.043, %321 ], [ %.043, %320 ], [ %.043, %319 ], [ %.043, %317 ], [ %.043, %315 ], [ %314, %313 ], [ %.043, %312 ], [ %.043, %311 ], [ %.043, %300 ], [ %.043, %290 ], [ %.043, %289 ], [ %.043, %278 ], [ %.043, %268 ], [ %.043, %267 ], [ %.043, %266 ], [ %.043, %263 ], [ %.043, %261 ], [ %.043, %260 ], [ %.043, %259 ], [ %.043, %258 ], [ %.043, %242 ], [ %.043, %232 ], [ %.043, %230 ], [ %.043, %219 ], [ %.043, %209 ], [ %.043, %208 ], [ %.043, %205 ], [ %.043, %204 ], [ %.043, %194 ], [ %.043, %184 ], [ %.043, %181 ], [ %.043, %180 ], [ %.043, %170 ], [ %.043, %160 ], [ %.043, %159 ], [ %.043, %148 ], [ %.043, %138 ], [ %.043, %120 ], [ %.043, %116 ], [ %.043, %115 ], [ %.043, %104 ], [ %.043, %94 ], [ %.043, %93 ], [ %83, %82 ], [ %.043, %72 ], [ %.043, %71 ], [ %.043, %61 ], [ %.043, %51 ], [ %.043, %49 ], [ %.043, %48 ], [ %.043, %46 ], [ %.043, %41 ], [ %.043, %38 ], [ %.043, %37 ], [ %.043, %34 ], [ %.043, %33 ], [ %.043, %31 ], [ %.043, %20 ], [ %.043, %10 ]
  %.041.be = phi i32 [ %.041, %9 ], [ %.041, %331 ], [ %.041, %329 ], [ %.041, %322 ], [ %.041, %321 ], [ %.041, %320 ], [ %.041, %319 ], [ %.041, %317 ], [ %.041, %315 ], [ %.041, %313 ], [ %.041, %312 ], [ %.041, %311 ], [ %.041, %300 ], [ %.041, %290 ], [ %.041, %289 ], [ %.041, %278 ], [ %.041, %268 ], [ %.041, %267 ], [ %.041, %266 ], [ %.041, %263 ], [ %.041, %261 ], [ %.041, %260 ], [ %.041, %259 ], [ %.041, %258 ], [ %.041, %242 ], [ %.041, %232 ], [ %.041, %230 ], [ %.041, %219 ], [ %.041, %209 ], [ %.041, %208 ], [ %.041, %205 ], [ %.041, %204 ], [ %.041, %194 ], [ %.041, %184 ], [ %.041, %181 ], [ %.041, %180 ], [ %.041, %170 ], [ %.041, %160 ], [ %.041, %159 ], [ %.041, %148 ], [ %.041, %138 ], [ %.041, %120 ], [ %.041, %116 ], [ %.041, %115 ], [ %.041, %104 ], [ %.041, %94 ], [ %.041, %93 ], [ %.041, %82 ], [ %.041, %72 ], [ %.041, %71 ], [ %.041, %61 ], [ %.041, %51 ], [ %50, %49 ], [ %.041, %48 ], [ %.041, %46 ], [ %.041, %41 ], [ %.041, %38 ], [ %.041, %37 ], [ %.041, %34 ], [ 0, %33 ], [ %.041, %31 ], [ %.041, %20 ], [ %.041, %10 ]
  %.039.be = phi i32 [ %.039, %9 ], [ %.039, %331 ], [ %.039, %329 ], [ %.039, %322 ], [ %.039, %321 ], [ %.039, %320 ], [ %.039, %319 ], [ %.039, %317 ], [ %.039, %315 ], [ %.039, %313 ], [ %.039, %312 ], [ %.039, %311 ], [ %.039, %300 ], [ %.039, %290 ], [ %.039, %289 ], [ %.039, %278 ], [ %.039, %268 ], [ %.039, %267 ], [ %.039, %266 ], [ %.039, %263 ], [ %.039, %261 ], [ %.039, %260 ], [ %.039, %259 ], [ %.039, %258 ], [ %.039, %242 ], [ %.039, %232 ], [ %.039, %230 ], [ %.039, %219 ], [ %.039, %209 ], [ %.039, %208 ], [ %.039, %205 ], [ %.039, %204 ], [ %.039, %194 ], [ %.039, %184 ], [ %.039, %181 ], [ %.039, %180 ], [ %.039, %170 ], [ %.039, %160 ], [ %.039, %159 ], [ %.039, %148 ], [ %.039, %138 ], [ %.039, %120 ], [ %.039, %116 ], [ %.039, %115 ], [ %.039, %104 ], [ %.039, %94 ], [ %.039, %93 ], [ %.039, %82 ], [ %.039, %72 ], [ %.039, %71 ], [ %.039, %61 ], [ %.039, %51 ], [ %.039, %49 ], [ %.039, %48 ], [ %47, %46 ], [ %.039, %41 ], [ %.039, %38 ], [ 0, %37 ], [ %.039, %34 ], [ %.039, %33 ], [ %.039, %31 ], [ %.039, %20 ], [ %.039, %10 ]
  %.037.be = phi i32 [ %.037, %9 ], [ %.037, %331 ], [ %.037, %329 ], [ %.037, %322 ], [ %.037, %321 ], [ %.037, %320 ], [ %.037, %319 ], [ %318, %317 ], [ 0, %315 ], [ %.037, %313 ], [ %.037, %312 ], [ %.037, %311 ], [ %.037, %300 ], [ %.037, %290 ], [ %.037, %289 ], [ %.037, %278 ], [ %.037, %268 ], [ %.037, %267 ], [ %.037, %266 ], [ %.037, %263 ], [ %.037, %261 ], [ %.037, %260 ], [ %.037, %259 ], [ %.037, %258 ], [ %.037, %242 ], [ %.037, %232 ], [ %.037, %230 ], [ %.037, %219 ], [ %.037, %209 ], [ %.037, %208 ], [ %.037, %205 ], [ %.037, %204 ], [ %.037, %194 ], [ %.037, %184 ], [ %.037, %181 ], [ %.037, %180 ], [ %.037, %170 ], [ %.037, %160 ], [ %.037, %159 ], [ %149, %148 ], [ %.037, %138 ], [ %.037, %120 ], [ %.037, %116 ], [ %.037, %115 ], [ 0, %104 ], [ %.037, %94 ], [ %.037, %93 ], [ %.037, %82 ], [ %.037, %72 ], [ %.037, %71 ], [ %.037, %61 ], [ %.037, %51 ], [ %.037, %49 ], [ %.037, %48 ], [ %.037, %46 ], [ %.037, %41 ], [ %.037, %38 ], [ %.037, %37 ], [ %.037, %34 ], [ %.037, %33 ], [ %.037, %31 ], [ %.037, %20 ], [ %.037, %10 ]
  %.035.be = phi i32 [ %.035, %9 ], [ %.035, %331 ], [ %330, %329 ], [ %.035, %322 ], [ %.035, %321 ], [ %.035, %320 ], [ 0, %319 ], [ %.035, %317 ], [ %.035, %315 ], [ %.035, %313 ], [ %.035, %312 ], [ %.035, %311 ], [ %.035, %300 ], [ %.035, %290 ], [ %.035, %289 ], [ %279, %278 ], [ %.035, %268 ], [ %.035, %267 ], [ %.035, %266 ], [ %.035, %263 ], [ %.035, %261 ], [ %.035, %260 ], [ %.035, %259 ], [ %.035, %258 ], [ %.035, %242 ], [ %.035, %232 ], [ %.035, %230 ], [ %.035, %219 ], [ %.035, %209 ], [ %.035, %208 ], [ %.035, %205 ], [ %.035, %204 ], [ %.035, %194 ], [ %.035, %184 ], [ %.035, %181 ], [ %.035, %180 ], [ 0, %170 ], [ %.035, %160 ], [ %.035, %159 ], [ %.035, %148 ], [ %.035, %138 ], [ %.035, %120 ], [ %.035, %116 ], [ %.035, %115 ], [ %.035, %104 ], [ %.035, %94 ], [ %.035, %93 ], [ %.035, %82 ], [ %.035, %72 ], [ %.035, %71 ], [ %.035, %61 ], [ %.035, %51 ], [ %.035, %49 ], [ %.035, %48 ], [ %.035, %46 ], [ %.035, %41 ], [ %.035, %38 ], [ %.035, %37 ], [ %.035, %34 ], [ %.035, %33 ], [ %.035, %31 ], [ %.035, %20 ], [ %.035, %10 ]
  %.033.be = phi i32 [ %.033, %9 ], [ %.033, %331 ], [ %.033, %329 ], [ %.033, %322 ], [ %.033, %321 ], [ 0, %320 ], [ %.033, %319 ], [ %.033, %317 ], [ %.033, %315 ], [ %.033, %313 ], [ %.033, %312 ], [ %.033, %311 ], [ %.033, %300 ], [ %.033, %290 ], [ %.033, %289 ], [ %.033, %278 ], [ %.033, %268 ], [ %.033, %267 ], [ %.033, %266 ], [ %.033, %263 ], [ %262, %261 ], [ %.033, %260 ], [ %.033, %259 ], [ %.033, %258 ], [ %.033, %242 ], [ %.033, %232 ], [ %.033, %230 ], [ %.033, %219 ], [ %.033, %209 ], [ %.033, %208 ], [ %.033, %205 ], [ %.033, %204 ], [ 0, %194 ], [ %.033, %184 ], [ %.033, %181 ], [ %.033, %180 ], [ %.033, %170 ], [ %.033, %160 ], [ %.033, %159 ], [ %.033, %148 ], [ %.033, %138 ], [ %.033, %120 ], [ %.033, %116 ], [ %.033, %115 ], [ %.033, %104 ], [ %.033, %94 ], [ %.033, %93 ], [ %.033, %82 ], [ %.033, %72 ], [ %.033, %71 ], [ %.033, %61 ], [ %.033, %51 ], [ %.033, %49 ], [ %.033, %48 ], [ %.033, %46 ], [ %.033, %41 ], [ %.033, %38 ], [ %.033, %37 ], [ %.033, %34 ], [ %.033, %33 ], [ %.033, %31 ], [ %.033, %20 ], [ %.033, %10 ]
  %.031.be = phi i32 [ %.031, %9 ], [ %.031, %331 ], [ %.031, %329 ], [ %.031, %322 ], [ %.031, %321 ], [ %.031, %320 ], [ %.031, %319 ], [ %.031, %317 ], [ %.031, %315 ], [ %.031, %313 ], [ %.031, %312 ], [ %.031, %311 ], [ %.031, %300 ], [ %.031, %290 ], [ %.031, %289 ], [ %.031, %278 ], [ %.031, %268 ], [ %.031, %267 ], [ %.031, %266 ], [ %.031, %263 ], [ %.031, %261 ], [ %.031, %260 ], [ %.neg, %259 ], [ %.031, %258 ], [ %.031, %242 ], [ %.031, %232 ], [ %.031, %230 ], [ %.031, %219 ], [ %.031, %209 ], [ 0, %208 ], [ %.031, %205 ], [ %.031, %204 ], [ %.031, %194 ], [ %.031, %184 ], [ %.031, %181 ], [ %.031, %180 ], [ %.031, %170 ], [ %.031, %160 ], [ %.031, %159 ], [ %.031, %148 ], [ %.031, %138 ], [ %.031, %120 ], [ %.031, %116 ], [ %.031, %115 ], [ %.031, %104 ], [ %.031, %94 ], [ %.031, %93 ], [ %.031, %82 ], [ %.031, %72 ], [ %.031, %71 ], [ %.031, %61 ], [ %.031, %51 ], [ %.031, %49 ], [ %.031, %48 ], [ %.031, %46 ], [ %.031, %41 ], [ %.031, %38 ], [ %.031, %37 ], [ %.031, %34 ], [ %.031, %33 ], [ %.031, %31 ], [ %.031, %20 ], [ %.031, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ 1466225997, %331 ], [ 158810502, %329 ], [ -1793845266, %322 ], [ 642731589, %321 ], [ 2142119007, %320 ], [ 1282952818, %319 ], [ 1540366214, %317 ], [ 962681151, %315 ], [ 1827899433, %313 ], [ 154694063, %312 ], [ 1003191566, %311 ], [ %309, %300 ], [ %299, %290 ], [ -839787576, %289 ], [ %288, %278 ], [ %277, %268 ], [ 579425444, %267 ], [ -1855507497, %266 ], [ %265, %263 ], [ 1333630269, %261 ], [ -476957576, %260 ], [ -852463517, %259 ], [ 521594831, %258 ], [ %257, %242 ], [ %241, %232 ], [ %231, %230 ], [ %229, %219 ], [ %218, %209 ], [ -852463517, %208 ], [ %207, %205 ], [ 1333630269, %204 ], [ %203, %194 ], [ %193, %184 ], [ %183, %181 ], [ -839787576, %180 ], [ %179, %170 ], [ %169, %160 ], [ -1654136507, %159 ], [ %158, %148 ], [ %147, %138 ], [ 1503738196, %120 ], [ %119, %116 ], [ -1654136507, %115 ], [ %114, %104 ], [ %103, %94 ], [ 1234480886, %93 ], [ %92, %82 ], [ %81, %72 ], [ 1649440391, %71 ], [ %70, %61 ], [ %60, %51 ], [ 361656951, %49 ], [ 689375107, %48 ], [ 1515183249, %46 ], [ -563242794, %41 ], [ %40, %38 ], [ 1515183249, %37 ], [ %36, %34 ], [ 361656951, %33 ], [ %32, %31 ], [ %30, %20 ], [ %19, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @x, align 4
  %12 = load i32, i32* @y, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 1003191566, i32 1732355910
  br label %.backedge

20:                                               ; preds = %9
  %21 = icmp slt i32 %.043, 4
  store i1 %21, i1* %2, align 1
  %22 = load i32, i32* @x, align 4
  %23 = load i32, i32* @y, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 2143681916, i32 1732355910
  br label %.backedge

31:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %32 = select i1 %.0..0..0., i32 1697732132, i32 -1426993445
  br label %.backedge

33:                                               ; preds = %9
  br label %.backedge

34:                                               ; preds = %9
  %35 = icmp slt i32 %.041, 3
  %36 = select i1 %35, i32 -773082160, i32 470251792
  br label %.backedge

37:                                               ; preds = %9
  br label %.backedge

38:                                               ; preds = %9
  %39 = icmp slt i32 %.039, 10
  %40 = select i1 %39, i32 -1062701892, i32 -2104543238
  br label %.backedge

41:                                               ; preds = %9
  %42 = sext i32 %.043 to i64
  %43 = sext i32 %.041 to i64
  %44 = sext i32 %.039 to i64
  %45 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %3, i64 0, i64 %42, i64 %43, i64 %44
  store i32 0, i32* %45, align 4
  br label %.backedge

46:                                               ; preds = %9
  %47 = add i32 %.039, 1
  br label %.backedge

48:                                               ; preds = %9
  br label %.backedge

49:                                               ; preds = %9
  %50 = add i32 %.041, 1
  br label %.backedge

51:                                               ; preds = %9
  %52 = load i32, i32* @x, align 4
  %53 = load i32, i32* @y, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 154694063, i32 -1965032660
  br label %.backedge

61:                                               ; preds = %9
  %62 = load i32, i32* @x, align 4
  %63 = load i32, i32* @y, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 1050285937, i32 -1965032660
  br label %.backedge

71:                                               ; preds = %9
  br label %.backedge

72:                                               ; preds = %9
  %73 = load i32, i32* @x, align 4
  %74 = load i32, i32* @y, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 1827899433, i32 -1164682129
  br label %.backedge

82:                                               ; preds = %9
  %83 = add i32 %.043, 1
  %84 = load i32, i32* @x, align 4
  %85 = load i32, i32* @y, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 287839496, i32 -1164682129
  br label %.backedge

93:                                               ; preds = %9
  br label %.backedge

94:                                               ; preds = %9
  %95 = load i32, i32* @x, align 4
  %96 = load i32, i32* @y, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 962681151, i32 -1224856942
  br label %.backedge

104:                                              ; preds = %9
  %105 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %4)
  %106 = load i32, i32* @x, align 4
  %107 = load i32, i32* @y, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 97950589, i32 -1224856942
  br label %.backedge

115:                                              ; preds = %9
  br label %.backedge

116:                                              ; preds = %9
  %117 = load i32, i32* %4, align 4
  %118 = icmp slt i32 %.037, %117
  %119 = select i1 %118, i32 1933766410, i32 1916893951
  br label %.backedge

120:                                              ; preds = %9
  %121 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %5)
  %122 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %6)
  %123 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %7)
  %124 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %8)
  %125 = load i32, i32* %8, align 4
  %126 = load i32, i32* %5, align 4
  %127 = add i32 %126, -1
  %128 = sext i32 %127 to i64
  %129 = load i32, i32* %6, align 4
  %130 = add i32 %129, -1
  %131 = sext i32 %130 to i64
  %132 = load i32, i32* %7, align 4
  %133 = add i32 %132, -1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %3, i64 0, i64 %128, i64 %131, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, %125
  store i32 %137, i32* %135, align 4
  br label %.backedge

138:                                              ; preds = %9
  %139 = load i32, i32* @x, align 4
  %140 = load i32, i32* @y, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 1540366214, i32 -1929436131
  br label %.backedge

148:                                              ; preds = %9
  %149 = add i32 %.037, 1
  %150 = load i32, i32* @x, align 4
  %151 = load i32, i32* @y, align 4
  %152 = add i32 %150, -1
  %153 = mul i32 %152, %150
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %156, %155
  %158 = select i1 %157, i32 1905569583, i32 -1929436131
  br label %.backedge

159:                                              ; preds = %9
  br label %.backedge

160:                                              ; preds = %9
  %161 = load i32, i32* @x, align 4
  %162 = load i32, i32* @y, align 4
  %163 = add i32 %161, -1
  %164 = mul i32 %163, %161
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %167, %166
  %169 = select i1 %168, i32 1282952818, i32 989144630
  br label %.backedge

170:                                              ; preds = %9
  %171 = load i32, i32* @x, align 4
  %172 = load i32, i32* @y, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 325837651, i32 989144630
  br label %.backedge

180:                                              ; preds = %9
  br label %.backedge

181:                                              ; preds = %9
  %182 = icmp slt i32 %.035, 4
  %183 = select i1 %182, i32 1619438979, i32 -2032155775
  br label %.backedge

184:                                              ; preds = %9
  %185 = load i32, i32* @x, align 4
  %186 = load i32, i32* @y, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 2142119007, i32 -1776532115
  br label %.backedge

194:                                              ; preds = %9
  %195 = load i32, i32* @x, align 4
  %196 = load i32, i32* @y, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 -1932143500, i32 -1776532115
  br label %.backedge

204:                                              ; preds = %9
  br label %.backedge

205:                                              ; preds = %9
  %206 = icmp slt i32 %.033, 3
  %207 = select i1 %206, i32 1074648377, i32 493345474
  br label %.backedge

208:                                              ; preds = %9
  br label %.backedge

209:                                              ; preds = %9
  %210 = load i32, i32* @x, align 4
  %211 = load i32, i32* @y, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 642731589, i32 1956887367
  br label %.backedge

219:                                              ; preds = %9
  %220 = icmp slt i32 %.031, 10
  store i1 %220, i1* %1, align 1
  %221 = load i32, i32* @x, align 4
  %222 = load i32, i32* @y, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 656569388, i32 1956887367
  br label %.backedge

230:                                              ; preds = %9
  %.0..0..0.30 = load volatile i1, i1* %1, align 1
  %231 = select i1 %.0..0..0.30, i32 1116121349, i32 -1506587387
  br label %.backedge

232:                                              ; preds = %9
  %233 = load i32, i32* @x, align 4
  %234 = load i32, i32* @y, align 4
  %235 = add i32 %233, -1
  %236 = mul i32 %235, %233
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %239, %238
  %241 = select i1 %240, i32 -1793845266, i32 -513087923
  br label %.backedge

242:                                              ; preds = %9
  %243 = sext i32 %.035 to i64
  %244 = sext i32 %.033 to i64
  %245 = sext i32 %.031 to i64
  %246 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %3, i64 0, i64 %243, i64 %244, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %247)
  %249 = load i32, i32* @x, align 4
  %250 = load i32, i32* @y, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 567539565, i32 -513087923
  br label %.backedge

258:                                              ; preds = %9
  br label %.backedge

259:                                              ; preds = %9
  %.neg = add i32 %.031, 1
  br label %.backedge

260:                                              ; preds = %9
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

261:                                              ; preds = %9
  %262 = add i32 %.033, 1
  br label %.backedge

263:                                              ; preds = %9
  %264 = icmp slt i32 %.035, 3
  %265 = select i1 %264, i32 1657808329, i32 -1855507497
  br label %.backedge

266:                                              ; preds = %9
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str, i64 0, i64 0))
  br label %.backedge

267:                                              ; preds = %9
  br label %.backedge

268:                                              ; preds = %9
  %269 = load i32, i32* @x, align 4
  %270 = load i32, i32* @y, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 158810502, i32 -852051498
  br label %.backedge

278:                                              ; preds = %9
  %279 = add i32 %.035, 1
  %280 = load i32, i32* @x, align 4
  %281 = load i32, i32* @y, align 4
  %282 = add i32 %280, -1
  %283 = mul i32 %282, %280
  %284 = and i32 %283, 1
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %286, %285
  %288 = select i1 %287, i32 -264469963, i32 -852051498
  br label %.backedge

289:                                              ; preds = %9
  br label %.backedge

290:                                              ; preds = %9
  %291 = load i32, i32* @x, align 4
  %292 = load i32, i32* @y, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 1466225997, i32 -572391935
  br label %.backedge

300:                                              ; preds = %9
  %301 = load i32, i32* @x, align 4
  %302 = load i32, i32* @y, align 4
  %303 = add i32 %301, -1
  %304 = mul i32 %303, %301
  %305 = and i32 %304, 1
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %307, %306
  %309 = select i1 %308, i32 712339032, i32 -572391935
  br label %.backedge

310:                                              ; preds = %9
  ret i32 0

311:                                              ; preds = %9
  br label %.backedge

312:                                              ; preds = %9
  br label %.backedge

313:                                              ; preds = %9
  %314 = add i32 %.043, 1
  br label %.backedge

315:                                              ; preds = %9
  %316 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %4)
  br label %.backedge

317:                                              ; preds = %9
  %318 = add i32 %.037, 1
  br label %.backedge

319:                                              ; preds = %9
  br label %.backedge

320:                                              ; preds = %9
  br label %.backedge

321:                                              ; preds = %9
  br label %.backedge

322:                                              ; preds = %9
  %323 = sext i32 %.035 to i64
  %324 = sext i32 %.033 to i64
  %325 = sext i32 %.031 to i64
  %326 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %3, i64 0, i64 %323, i64 %324, i64 %325
  %327 = load i32, i32* %326, align 4
  %328 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %327)
  br label %.backedge

329:                                              ; preds = %9
  %330 = add i32 %.035, 1
  br label %.backedge

331:                                              ; preds = %9
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
