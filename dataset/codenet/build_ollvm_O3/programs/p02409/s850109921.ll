; ModuleID = 'build_ollvm/programs/p02409/s850109921.ll'
source_filename = "Project_CodeNet_C++1400/p02409/s850109921.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZZ4mainE3bar = private unnamed_addr constant [21 x i8] c"####################\00", align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.str = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s850109921.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [4 x [3 x [10 x i32]]], align 16
  %14 = alloca [21 x i8], align 16
  %15 = getelementptr inbounds [21 x i8], [21 x i8]* %14, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(21) %15, i8* noundef nonnull align 16 dereferenceable(21) getelementptr inbounds ([21 x i8], [21 x i8]* @_ZZ4mainE3bar, i64 0, i64 0), i64 21, i1 false)
  br label %16

16:                                               ; preds = %.backedge, %0
  %.048 = phi i32 [ 0, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i32 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.042 = phi i32 [ undef, %0 ], [ %.042.be, %.backedge ]
  %.040 = phi i32 [ undef, %0 ], [ %.040.be, %.backedge ]
  %.038 = phi i32 [ undef, %0 ], [ %.038.be, %.backedge ]
  %.036 = phi i32 [ undef, %0 ], [ %.036.be, %.backedge ]
  %.034 = phi i32 [ 2045360449, %0 ], [ %.034.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.034, label %.backedge [
    i32 2045360449, label %17
    i32 441344952, label %20
    i32 94312598, label %21
    i32 -1318429085, label %31
    i32 730185440, label %42
    i32 1840157986, label %44
    i32 -298932876, label %45
    i32 1707396155, label %48
    i32 730450907, label %53
    i32 -1193600932, label %63
    i32 -304383249, label %73
    i32 1364354470, label %74
    i32 1902830329, label %75
    i32 422124143, label %76
    i32 1977536039, label %77
    i32 -1447195256, label %79
    i32 -801264543, label %89
    i32 -1847570852, label %100
    i32 1960846164, label %101
    i32 -819270557, label %105
    i32 1466650224, label %106
    i32 -1456527860, label %116
    i32 316338611, label %144
    i32 -914153895, label %146
    i32 364967095, label %156
    i32 1751559664, label %176
    i32 894643177, label %177
    i32 539079989, label %191
    i32 -2112473252, label %202
    i32 -81767526, label %203
    i32 -2115104786, label %204
    i32 1048491590, label %208
    i32 -86049438, label %212
    i32 1015074189, label %216
    i32 1672784203, label %226
    i32 -739765099, label %238
    i32 -630823492, label %240
    i32 71943496, label %250
    i32 1859238325, label %262
    i32 298800539, label %264
    i32 186040901, label %274
    i32 1083024666, label %286
    i32 1727120512, label %287
    i32 1019269318, label %289
    i32 1994603292, label %290
    i32 -571802933, label %300
    i32 -455280996, label %311
    i32 -1658536463, label %312
    i32 -856446410, label %313
    i32 -1635476998, label %323
    i32 -997976264, label %334
    i32 -1627966065, label %336
    i32 -1893719435, label %337
    i32 1857354482, label %340
    i32 2028845055, label %341
    i32 633108846, label %351
    i32 1408282515, label %362
    i32 671089477, label %364
    i32 467118918, label %371
    i32 -1236559377, label %373
    i32 368633588, label %374
    i32 418692367, label %375
    i32 2011326999, label %378
    i32 883475754, label %379
    i32 178158613, label %380
    i32 -1512703508, label %381
    i32 -1512740221, label %391
    i32 -813611628, label %401
    i32 1734320179, label %402
    i32 -1655106766, label %403
    i32 -35149077, label %405
    i32 1423732386, label %407
    i32 -1913354878, label %425
    i32 1230644740, label %436
    i32 -1705327536, label %437
    i32 1915938782, label %438
    i32 -666268812, label %439
    i32 965759637, label %441
    i32 -1794709426, label %442
    i32 188642228, label %443
  ]

.backedge:                                        ; preds = %16, %443, %442, %441, %439, %438, %437, %436, %425, %407, %405, %403, %402, %391, %381, %380, %379, %378, %375, %374, %373, %371, %364, %362, %351, %341, %340, %337, %336, %334, %323, %313, %312, %311, %300, %290, %289, %287, %286, %274, %264, %262, %250, %240, %238, %226, %216, %212, %208, %204, %203, %202, %191, %177, %176, %156, %146, %144, %116, %106, %105, %101, %100, %89, %79, %77, %76, %75, %74, %73, %63, %53, %48, %45, %44, %42, %31, %21, %20, %17
  %.048.be = phi i32 [ %.048, %16 ], [ %.048, %443 ], [ %.048, %442 ], [ %.048, %441 ], [ %.048, %439 ], [ %.048, %438 ], [ %.048, %437 ], [ %.048, %436 ], [ %.048, %425 ], [ %.048, %407 ], [ %.048, %405 ], [ %.048, %403 ], [ %.048, %402 ], [ %.048, %391 ], [ %.048, %381 ], [ %.048, %380 ], [ %.048, %379 ], [ %.048, %378 ], [ %.048, %375 ], [ %.048, %374 ], [ %.048, %373 ], [ %.048, %371 ], [ %.048, %364 ], [ %.048, %362 ], [ %.048, %351 ], [ %.048, %341 ], [ %.048, %340 ], [ %.048, %337 ], [ %.048, %336 ], [ %.048, %334 ], [ %.048, %323 ], [ %.048, %313 ], [ %.048, %312 ], [ %.048, %311 ], [ %.048, %300 ], [ %.048, %290 ], [ %.048, %289 ], [ %.048, %287 ], [ %.048, %286 ], [ %.048, %274 ], [ %.048, %264 ], [ %.048, %262 ], [ %.048, %250 ], [ %.048, %240 ], [ %.048, %238 ], [ %.048, %226 ], [ %.048, %216 ], [ %.048, %212 ], [ %.048, %208 ], [ %.048, %204 ], [ %.048, %203 ], [ %.048, %202 ], [ %.048, %191 ], [ %.048, %177 ], [ %.048, %176 ], [ %.048, %156 ], [ %.048, %146 ], [ %.048, %144 ], [ %.048, %116 ], [ %.048, %106 ], [ %.048, %105 ], [ %.048, %101 ], [ %.048, %100 ], [ %.048, %89 ], [ %.048, %79 ], [ %78, %77 ], [ %.048, %76 ], [ %.048, %75 ], [ %.048, %74 ], [ %.048, %73 ], [ %.048, %63 ], [ %.048, %53 ], [ %.048, %48 ], [ %.048, %45 ], [ %.048, %44 ], [ %.048, %42 ], [ %.048, %31 ], [ %.048, %21 ], [ %.048, %20 ], [ %.048, %17 ]
  %.046.be = phi i32 [ %.046, %16 ], [ %.046, %443 ], [ %.046, %442 ], [ %.046, %441 ], [ %.046, %439 ], [ %.046, %438 ], [ %.046, %437 ], [ %.046, %436 ], [ %.046, %425 ], [ %.046, %407 ], [ %.046, %405 ], [ %.046, %403 ], [ %.046, %402 ], [ %.046, %391 ], [ %.046, %381 ], [ %.046, %380 ], [ %.046, %379 ], [ %.046, %378 ], [ %.046, %375 ], [ %.046, %374 ], [ %.046, %373 ], [ %.046, %371 ], [ %.046, %364 ], [ %.046, %362 ], [ %.046, %351 ], [ %.046, %341 ], [ %.046, %340 ], [ %.046, %337 ], [ %.046, %336 ], [ %.046, %334 ], [ %.046, %323 ], [ %.046, %313 ], [ %.046, %312 ], [ %.046, %311 ], [ %.046, %300 ], [ %.046, %290 ], [ %.046, %289 ], [ %.046, %287 ], [ %.046, %286 ], [ %.046, %274 ], [ %.046, %264 ], [ %.046, %262 ], [ %.046, %250 ], [ %.046, %240 ], [ %.046, %238 ], [ %.046, %226 ], [ %.046, %216 ], [ %.046, %212 ], [ %.046, %208 ], [ %.046, %204 ], [ %.046, %203 ], [ %.046, %202 ], [ %.046, %191 ], [ %.046, %177 ], [ %.046, %176 ], [ %.046, %156 ], [ %.046, %146 ], [ %.046, %144 ], [ %.046, %116 ], [ %.046, %106 ], [ %.046, %105 ], [ %.046, %101 ], [ %.046, %100 ], [ %.046, %89 ], [ %.046, %79 ], [ %.046, %77 ], [ %.046, %76 ], [ %.neg51, %75 ], [ %.046, %74 ], [ %.046, %73 ], [ %.046, %63 ], [ %.046, %53 ], [ %.046, %48 ], [ %.046, %45 ], [ %.046, %44 ], [ %.046, %42 ], [ %.046, %31 ], [ %.046, %21 ], [ 0, %20 ], [ %.046, %17 ]
  %.044.be = phi i32 [ %.044, %16 ], [ %.044, %443 ], [ %.044, %442 ], [ %.044, %441 ], [ %.044, %439 ], [ %.044, %438 ], [ %.044, %437 ], [ %.044, %436 ], [ %.044, %425 ], [ %.044, %407 ], [ %.044, %405 ], [ %404, %403 ], [ %.044, %402 ], [ %.044, %391 ], [ %.044, %381 ], [ %.044, %380 ], [ %.044, %379 ], [ %.044, %378 ], [ %.044, %375 ], [ %.044, %374 ], [ %.044, %373 ], [ %.044, %371 ], [ %.044, %364 ], [ %.044, %362 ], [ %.044, %351 ], [ %.044, %341 ], [ %.044, %340 ], [ %.044, %337 ], [ %.044, %336 ], [ %.044, %334 ], [ %.044, %323 ], [ %.044, %313 ], [ %.044, %312 ], [ %.044, %311 ], [ %.044, %300 ], [ %.044, %290 ], [ %.044, %289 ], [ %.044, %287 ], [ %.044, %286 ], [ %.044, %274 ], [ %.044, %264 ], [ %.044, %262 ], [ %.044, %250 ], [ %.044, %240 ], [ %.044, %238 ], [ %.044, %226 ], [ %.044, %216 ], [ %.044, %212 ], [ %.044, %208 ], [ %.044, %204 ], [ %.044, %203 ], [ %.044, %202 ], [ %.044, %191 ], [ %.044, %177 ], [ %.044, %176 ], [ %.044, %156 ], [ %.044, %146 ], [ %.044, %144 ], [ %.044, %116 ], [ %.044, %106 ], [ %.044, %105 ], [ %.044, %101 ], [ %.044, %100 ], [ %.044, %89 ], [ %.044, %79 ], [ %.044, %77 ], [ %.044, %76 ], [ %.044, %75 ], [ %.044, %74 ], [ %.044, %73 ], [ %.neg52, %63 ], [ %.044, %53 ], [ %.044, %48 ], [ %.044, %45 ], [ 0, %44 ], [ %.044, %42 ], [ %.044, %31 ], [ %.044, %21 ], [ %.044, %20 ], [ %.044, %17 ]
  %.042.be = phi i32 [ %.042, %16 ], [ %.042, %443 ], [ %.042, %442 ], [ %.042, %441 ], [ %440, %439 ], [ %.042, %438 ], [ %.042, %437 ], [ %.042, %436 ], [ %.042, %425 ], [ %.042, %407 ], [ 0, %405 ], [ %.042, %403 ], [ %.042, %402 ], [ %.042, %391 ], [ %.042, %381 ], [ %.042, %380 ], [ %.042, %379 ], [ %.042, %378 ], [ %.042, %375 ], [ %.042, %374 ], [ %.042, %373 ], [ %.042, %371 ], [ %.042, %364 ], [ %.042, %362 ], [ %.042, %351 ], [ %.042, %341 ], [ %.042, %340 ], [ %.042, %337 ], [ %.042, %336 ], [ %.042, %334 ], [ %.042, %323 ], [ %.042, %313 ], [ %.042, %312 ], [ %.042, %311 ], [ %301, %300 ], [ %.042, %290 ], [ %.042, %289 ], [ %.042, %287 ], [ %.042, %286 ], [ %.042, %274 ], [ %.042, %264 ], [ %.042, %262 ], [ %.042, %250 ], [ %.042, %240 ], [ %.042, %238 ], [ %.042, %226 ], [ %.042, %216 ], [ %.042, %212 ], [ %.042, %208 ], [ %.042, %204 ], [ %.042, %203 ], [ %.042, %202 ], [ %.042, %191 ], [ %.042, %177 ], [ %.042, %176 ], [ %.042, %156 ], [ %.042, %146 ], [ %.042, %144 ], [ %.042, %116 ], [ %.042, %106 ], [ %.042, %105 ], [ %.042, %101 ], [ %.042, %100 ], [ 0, %89 ], [ %.042, %79 ], [ %.042, %77 ], [ %.042, %76 ], [ %.042, %75 ], [ %.042, %74 ], [ %.042, %73 ], [ %.042, %63 ], [ %.042, %53 ], [ %.042, %48 ], [ %.042, %45 ], [ %.042, %44 ], [ %.042, %42 ], [ %.042, %31 ], [ %.042, %21 ], [ %.042, %20 ], [ %.042, %17 ]
  %.040.be = phi i32 [ %.040, %16 ], [ %.040, %443 ], [ %.040, %442 ], [ %.040, %441 ], [ %.040, %439 ], [ %.040, %438 ], [ %.040, %437 ], [ %.040, %436 ], [ %.040, %425 ], [ %.040, %407 ], [ %.040, %405 ], [ %.040, %403 ], [ %.040, %402 ], [ %.040, %391 ], [ %.040, %381 ], [ %.neg, %380 ], [ %.040, %379 ], [ %.040, %378 ], [ %.040, %375 ], [ %.040, %374 ], [ %.040, %373 ], [ %.040, %371 ], [ %.040, %364 ], [ %.040, %362 ], [ %.040, %351 ], [ %.040, %341 ], [ %.040, %340 ], [ %.040, %337 ], [ %.040, %336 ], [ %.040, %334 ], [ %.040, %323 ], [ %.040, %313 ], [ 0, %312 ], [ %.040, %311 ], [ %.040, %300 ], [ %.040, %290 ], [ %.040, %289 ], [ %.040, %287 ], [ %.040, %286 ], [ %.040, %274 ], [ %.040, %264 ], [ %.040, %262 ], [ %.040, %250 ], [ %.040, %240 ], [ %.040, %238 ], [ %.040, %226 ], [ %.040, %216 ], [ %.040, %212 ], [ %.040, %208 ], [ %.040, %204 ], [ %.040, %203 ], [ %.040, %202 ], [ %.040, %191 ], [ %.040, %177 ], [ %.040, %176 ], [ %.040, %156 ], [ %.040, %146 ], [ %.040, %144 ], [ %.040, %116 ], [ %.040, %106 ], [ %.040, %105 ], [ %.040, %101 ], [ %.040, %100 ], [ %.040, %89 ], [ %.040, %79 ], [ %.040, %77 ], [ %.040, %76 ], [ %.040, %75 ], [ %.040, %74 ], [ %.040, %73 ], [ %.040, %63 ], [ %.040, %53 ], [ %.040, %48 ], [ %.040, %45 ], [ %.040, %44 ], [ %.040, %42 ], [ %.040, %31 ], [ %.040, %21 ], [ %.040, %20 ], [ %.040, %17 ]
  %.038.be = phi i32 [ %.038, %16 ], [ %.038, %443 ], [ %.038, %442 ], [ %.038, %441 ], [ %.038, %439 ], [ %.038, %438 ], [ %.038, %437 ], [ %.038, %436 ], [ %.038, %425 ], [ %.038, %407 ], [ %.038, %405 ], [ %.038, %403 ], [ %.038, %402 ], [ %.038, %391 ], [ %.038, %381 ], [ %.038, %380 ], [ %.038, %379 ], [ %.038, %378 ], [ %.038, %375 ], [ %.neg50, %374 ], [ %.038, %373 ], [ %.038, %371 ], [ %.038, %364 ], [ %.038, %362 ], [ %.038, %351 ], [ %.038, %341 ], [ %.038, %340 ], [ %.038, %337 ], [ 0, %336 ], [ %.038, %334 ], [ %.038, %323 ], [ %.038, %313 ], [ %.038, %312 ], [ %.038, %311 ], [ %.038, %300 ], [ %.038, %290 ], [ %.038, %289 ], [ %.038, %287 ], [ %.038, %286 ], [ %.038, %274 ], [ %.038, %264 ], [ %.038, %262 ], [ %.038, %250 ], [ %.038, %240 ], [ %.038, %238 ], [ %.038, %226 ], [ %.038, %216 ], [ %.038, %212 ], [ %.038, %208 ], [ %.038, %204 ], [ %.038, %203 ], [ %.038, %202 ], [ %.038, %191 ], [ %.038, %177 ], [ %.038, %176 ], [ %.038, %156 ], [ %.038, %146 ], [ %.038, %144 ], [ %.038, %116 ], [ %.038, %106 ], [ %.038, %105 ], [ %.038, %101 ], [ %.038, %100 ], [ %.038, %89 ], [ %.038, %79 ], [ %.038, %77 ], [ %.038, %76 ], [ %.038, %75 ], [ %.038, %74 ], [ %.038, %73 ], [ %.038, %63 ], [ %.038, %53 ], [ %.038, %48 ], [ %.038, %45 ], [ %.038, %44 ], [ %.038, %42 ], [ %.038, %31 ], [ %.038, %21 ], [ %.038, %20 ], [ %.038, %17 ]
  %.036.be = phi i32 [ %.036, %16 ], [ %.036, %443 ], [ %.036, %442 ], [ %.036, %441 ], [ %.036, %439 ], [ %.036, %438 ], [ %.036, %437 ], [ %.036, %436 ], [ %.036, %425 ], [ %.036, %407 ], [ %.036, %405 ], [ %.036, %403 ], [ %.036, %402 ], [ %.036, %391 ], [ %.036, %381 ], [ %.036, %380 ], [ %.036, %379 ], [ %.036, %378 ], [ %.036, %375 ], [ %.036, %374 ], [ %.036, %373 ], [ %372, %371 ], [ %.036, %364 ], [ %.036, %362 ], [ %.036, %351 ], [ %.036, %341 ], [ 0, %340 ], [ %.036, %337 ], [ %.036, %336 ], [ %.036, %334 ], [ %.036, %323 ], [ %.036, %313 ], [ %.036, %312 ], [ %.036, %311 ], [ %.036, %300 ], [ %.036, %290 ], [ %.036, %289 ], [ %.036, %287 ], [ %.036, %286 ], [ %.036, %274 ], [ %.036, %264 ], [ %.036, %262 ], [ %.036, %250 ], [ %.036, %240 ], [ %.036, %238 ], [ %.036, %226 ], [ %.036, %216 ], [ %.036, %212 ], [ %.036, %208 ], [ %.036, %204 ], [ %.036, %203 ], [ %.036, %202 ], [ %.036, %191 ], [ %.036, %177 ], [ %.036, %176 ], [ %.036, %156 ], [ %.036, %146 ], [ %.036, %144 ], [ %.036, %116 ], [ %.036, %106 ], [ %.036, %105 ], [ %.036, %101 ], [ %.036, %100 ], [ %.036, %89 ], [ %.036, %79 ], [ %.036, %77 ], [ %.036, %76 ], [ %.036, %75 ], [ %.036, %74 ], [ %.036, %73 ], [ %.036, %63 ], [ %.036, %53 ], [ %.036, %48 ], [ %.036, %45 ], [ %.036, %44 ], [ %.036, %42 ], [ %.036, %31 ], [ %.036, %21 ], [ %.036, %20 ], [ %.036, %17 ]
  %.034.be = phi i32 [ %.034, %16 ], [ -1512740221, %443 ], [ 633108846, %442 ], [ -1635476998, %441 ], [ -571802933, %439 ], [ 186040901, %438 ], [ 71943496, %437 ], [ 1672784203, %436 ], [ 364967095, %425 ], [ -1456527860, %407 ], [ -801264543, %405 ], [ -1193600932, %403 ], [ -1318429085, %402 ], [ %400, %391 ], [ %390, %381 ], [ -856446410, %380 ], [ 178158613, %379 ], [ 883475754, %378 ], [ %377, %375 ], [ -1893719435, %374 ], [ 368633588, %373 ], [ 2028845055, %371 ], [ 467118918, %364 ], [ %363, %362 ], [ %361, %351 ], [ %350, %341 ], [ 2028845055, %340 ], [ %339, %337 ], [ -1893719435, %336 ], [ %335, %334 ], [ %333, %323 ], [ %322, %313 ], [ -856446410, %312 ], [ 1960846164, %311 ], [ %310, %300 ], [ %299, %290 ], [ 1994603292, %289 ], [ %288, %287 ], [ 1727120512, %286 ], [ %285, %274 ], [ %273, %264 ], [ %263, %262 ], [ %261, %250 ], [ %249, %240 ], [ %239, %238 ], [ %237, %226 ], [ %225, %216 ], [ %215, %212 ], [ %211, %208 ], [ %207, %204 ], [ -2115104786, %203 ], [ -81767526, %202 ], [ -2112473252, %191 ], [ %190, %177 ], [ -81767526, %176 ], [ %175, %156 ], [ %155, %146 ], [ %145, %144 ], [ %143, %116 ], [ %115, %106 ], [ 1466650224, %105 ], [ %104, %101 ], [ 1960846164, %100 ], [ %99, %89 ], [ %88, %79 ], [ 2045360449, %77 ], [ 1977536039, %76 ], [ 94312598, %75 ], [ 1902830329, %74 ], [ -298932876, %73 ], [ %72, %63 ], [ %62, %53 ], [ 730450907, %48 ], [ %47, %45 ], [ -298932876, %44 ], [ %43, %42 ], [ %41, %31 ], [ %30, %21 ], [ 94312598, %20 ], [ %19, %17 ]
  %.0.be = phi i1 [ %.0, %16 ], [ %.0, %443 ], [ %.0, %442 ], [ %.0, %441 ], [ %.0, %439 ], [ %.0, %438 ], [ %.0, %437 ], [ %.0, %436 ], [ %.0, %425 ], [ %.0, %407 ], [ %.0, %405 ], [ %.0, %403 ], [ %.0, %402 ], [ %.0, %391 ], [ %.0, %381 ], [ %.0, %380 ], [ %.0, %379 ], [ %.0, %378 ], [ %.0, %375 ], [ %.0, %374 ], [ %.0, %373 ], [ %.0, %371 ], [ %.0, %364 ], [ %.0, %362 ], [ %.0, %351 ], [ %.0, %341 ], [ %.0, %340 ], [ %.0, %337 ], [ %.0, %336 ], [ %.0, %334 ], [ %.0, %323 ], [ %.0, %313 ], [ %.0, %312 ], [ %.0, %311 ], [ %.0, %300 ], [ %.0, %290 ], [ %.0, %289 ], [ %.0, %287 ], [ %.0..0..0.31, %286 ], [ %.0, %274 ], [ %.0, %264 ], [ true, %262 ], [ %.0, %250 ], [ %.0, %240 ], [ true, %238 ], [ %.0, %226 ], [ %.0, %216 ], [ true, %212 ], [ true, %208 ], [ true, %204 ], [ %.0, %203 ], [ %.0, %202 ], [ %.0, %191 ], [ %.0, %177 ], [ %.0, %176 ], [ %.0, %156 ], [ %.0, %146 ], [ %.0, %144 ], [ %.0, %116 ], [ %.0, %106 ], [ %.0, %105 ], [ %.0, %101 ], [ %.0, %100 ], [ %.0, %89 ], [ %.0, %79 ], [ %.0, %77 ], [ %.0, %76 ], [ %.0, %75 ], [ %.0, %74 ], [ %.0, %73 ], [ %.0, %63 ], [ %.0, %53 ], [ %.0, %48 ], [ %.0, %45 ], [ %.0, %44 ], [ %.0, %42 ], [ %.0, %31 ], [ %.0, %21 ], [ %.0, %20 ], [ %.0, %17 ]
  br label %16

17:                                               ; preds = %16
  %18 = icmp slt i32 %.048, 4
  %19 = select i1 %18, i32 441344952, i32 -1447195256
  br label %.backedge

20:                                               ; preds = %16
  br label %.backedge

21:                                               ; preds = %16
  %22 = load i32, i32* @x.3, align 4
  %23 = load i32, i32* @y.4, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 -1318429085, i32 1734320179
  br label %.backedge

31:                                               ; preds = %16
  %32 = icmp slt i32 %.046, 3
  store i1 %32, i1* %7, align 1
  %33 = load i32, i32* @x.3, align 4
  %34 = load i32, i32* @y.4, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 730185440, i32 1734320179
  br label %.backedge

42:                                               ; preds = %16
  %.0..0..0.27 = load volatile i1, i1* %7, align 1
  %43 = select i1 %.0..0..0.27, i32 1840157986, i32 422124143
  br label %.backedge

44:                                               ; preds = %16
  br label %.backedge

45:                                               ; preds = %16
  %46 = icmp slt i32 %.044, 10
  %47 = select i1 %46, i32 1707396155, i32 1364354470
  br label %.backedge

48:                                               ; preds = %16
  %49 = sext i32 %.048 to i64
  %50 = sext i32 %.046 to i64
  %51 = sext i32 %.044 to i64
  %52 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %13, i64 0, i64 %49, i64 %50, i64 %51
  store i32 0, i32* %52, align 4
  br label %.backedge

53:                                               ; preds = %16
  %54 = load i32, i32* @x.3, align 4
  %55 = load i32, i32* @y.4, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -1193600932, i32 -1655106766
  br label %.backedge

63:                                               ; preds = %16
  %.neg52 = add i32 %.044, 1
  %64 = load i32, i32* @x.3, align 4
  %65 = load i32, i32* @y.4, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 -304383249, i32 -1655106766
  br label %.backedge

73:                                               ; preds = %16
  br label %.backedge

74:                                               ; preds = %16
  br label %.backedge

75:                                               ; preds = %16
  %.neg51 = add i32 %.046, 1
  br label %.backedge

76:                                               ; preds = %16
  br label %.backedge

77:                                               ; preds = %16
  %78 = add i32 %.048, 1
  br label %.backedge

79:                                               ; preds = %16
  %80 = load i32, i32* @x.3, align 4
  %81 = load i32, i32* @y.4, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 -801264543, i32 -35149077
  br label %.backedge

89:                                               ; preds = %16
  %90 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %91 = load i32, i32* @x.3, align 4
  %92 = load i32, i32* @y.4, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -1847570852, i32 -35149077
  br label %.backedge

100:                                              ; preds = %16
  br label %.backedge

101:                                              ; preds = %16
  %102 = load i32, i32* %8, align 4
  %103 = icmp slt i32 %.042, %102
  %104 = select i1 %103, i32 -819270557, i32 -1658536463
  br label %.backedge

105:                                              ; preds = %16
  br label %.backedge

106:                                              ; preds = %16
  %107 = load i32, i32* @x.3, align 4
  %108 = load i32, i32* @y.4, align 4
  %109 = add i32 %107, -1
  %110 = mul i32 %109, %107
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %113, %112
  %115 = select i1 %114, i32 -1456527860, i32 1423732386
  br label %.backedge

116:                                              ; preds = %16
  %117 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %118 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %117, i32* nonnull dereferenceable(4) %10)
  %119 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %118, i32* nonnull dereferenceable(4) %11)
  %120 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %119, i32* nonnull dereferenceable(4) %12)
  %121 = load i32, i32* %12, align 4
  %122 = load i32, i32* %9, align 4
  %123 = add i32 %122, -1
  %124 = sext i32 %123 to i64
  %125 = load i32, i32* %10, align 4
  %126 = add i32 %125, -1
  %127 = sext i32 %126 to i64
  %128 = load i32, i32* %11, align 4
  %129 = add i32 %128, -1
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %13, i64 0, i64 %124, i64 %127, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, %121
  store i32 %133, i32* %131, align 4
  %134 = icmp sgt i32 %133, 9
  store i1 %134, i1* %6, align 1
  %135 = load i32, i32* @x.3, align 4
  %136 = load i32, i32* @y.4, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 316338611, i32 1423732386
  br label %.backedge

144:                                              ; preds = %16
  %.0..0..0.28 = load volatile i1, i1* %6, align 1
  %145 = select i1 %.0..0..0.28, i32 -914153895, i32 894643177
  br label %.backedge

146:                                              ; preds = %16
  %147 = load i32, i32* @x.3, align 4
  %148 = load i32, i32* @y.4, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 364967095, i32 -1913354878
  br label %.backedge

156:                                              ; preds = %16
  %157 = load i32, i32* %9, align 4
  %158 = add i32 %157, -1
  %159 = sext i32 %158 to i64
  %160 = load i32, i32* %10, align 4
  %161 = add i32 %160, -1
  %162 = sext i32 %161 to i64
  %163 = load i32, i32* %11, align 4
  %164 = add i32 %163, -1
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %13, i64 0, i64 %159, i64 %162, i64 %165
  store i32 9, i32* %166, align 4
  %167 = load i32, i32* @x.3, align 4
  %168 = load i32, i32* @y.4, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 1751559664, i32 -1913354878
  br label %.backedge

176:                                              ; preds = %16
  br label %.backedge

177:                                              ; preds = %16
  %178 = load i32, i32* %9, align 4
  %179 = add i32 %178, -1
  %180 = sext i32 %179 to i64
  %181 = load i32, i32* %10, align 4
  %182 = add i32 %181, -1
  %183 = sext i32 %182 to i64
  %184 = load i32, i32* %11, align 4
  %185 = add i32 %184, -1
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %13, i64 0, i64 %180, i64 %183, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = icmp slt i32 %188, 0
  %190 = select i1 %189, i32 539079989, i32 -2112473252
  br label %.backedge

191:                                              ; preds = %16
  %192 = load i32, i32* %9, align 4
  %193 = add i32 %192, -1
  %194 = sext i32 %193 to i64
  %195 = load i32, i32* %10, align 4
  %196 = add i32 %195, -1
  %197 = sext i32 %196 to i64
  %198 = load i32, i32* %11, align 4
  %199 = add i32 %198, -1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %13, i64 0, i64 %194, i64 %197, i64 %200
  store i32 0, i32* %201, align 4
  br label %.backedge

202:                                              ; preds = %16
  br label %.backedge

203:                                              ; preds = %16
  br label %.backedge

204:                                              ; preds = %16
  %205 = load i32, i32* %9, align 4
  %206 = icmp slt i32 %205, 0
  %207 = select i1 %206, i32 1727120512, i32 1048491590
  br label %.backedge

208:                                              ; preds = %16
  %209 = load i32, i32* %9, align 4
  %210 = icmp sgt i32 %209, 4
  %211 = select i1 %210, i32 1727120512, i32 -86049438
  br label %.backedge

212:                                              ; preds = %16
  %213 = load i32, i32* %10, align 4
  %214 = icmp slt i32 %213, 0
  %215 = select i1 %214, i32 1727120512, i32 1015074189
  br label %.backedge

216:                                              ; preds = %16
  %217 = load i32, i32* @x.3, align 4
  %218 = load i32, i32* @y.4, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 1672784203, i32 1230644740
  br label %.backedge

226:                                              ; preds = %16
  %227 = load i32, i32* %10, align 4
  %228 = icmp sgt i32 %227, 3
  store i1 %228, i1* %5, align 1
  %229 = load i32, i32* @x.3, align 4
  %230 = load i32, i32* @y.4, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 -739765099, i32 1230644740
  br label %.backedge

238:                                              ; preds = %16
  %.0..0..0.29 = load volatile i1, i1* %5, align 1
  %239 = select i1 %.0..0..0.29, i32 1727120512, i32 -630823492
  br label %.backedge

240:                                              ; preds = %16
  %241 = load i32, i32* @x.3, align 4
  %242 = load i32, i32* @y.4, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 71943496, i32 -1705327536
  br label %.backedge

250:                                              ; preds = %16
  %251 = load i32, i32* %11, align 4
  %252 = icmp slt i32 %251, 0
  store i1 %252, i1* %4, align 1
  %253 = load i32, i32* @x.3, align 4
  %254 = load i32, i32* @y.4, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 1859238325, i32 -1705327536
  br label %.backedge

262:                                              ; preds = %16
  %.0..0..0.30 = load volatile i1, i1* %4, align 1
  %263 = select i1 %.0..0..0.30, i32 1727120512, i32 298800539
  br label %.backedge

264:                                              ; preds = %16
  %265 = load i32, i32* @x.3, align 4
  %266 = load i32, i32* @y.4, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 186040901, i32 1915938782
  br label %.backedge

274:                                              ; preds = %16
  %275 = load i32, i32* %11, align 4
  %276 = icmp sgt i32 %275, 10
  store i1 %276, i1* %3, align 1
  %277 = load i32, i32* @x.3, align 4
  %278 = load i32, i32* @y.4, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 1083024666, i32 1915938782
  br label %.backedge

286:                                              ; preds = %16
  %.0..0..0.31 = load volatile i1, i1* %3, align 1
  br label %.backedge

287:                                              ; preds = %16
  %288 = select i1 %.0, i32 1466650224, i32 1019269318
  br label %.backedge

289:                                              ; preds = %16
  br label %.backedge

290:                                              ; preds = %16
  %291 = load i32, i32* @x.3, align 4
  %292 = load i32, i32* @y.4, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 -571802933, i32 -666268812
  br label %.backedge

300:                                              ; preds = %16
  %301 = add i32 %.042, 1
  %302 = load i32, i32* @x.3, align 4
  %303 = load i32, i32* @y.4, align 4
  %304 = add i32 %302, -1
  %305 = mul i32 %304, %302
  %306 = and i32 %305, 1
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %308, %307
  %310 = select i1 %309, i32 -455280996, i32 -666268812
  br label %.backedge

311:                                              ; preds = %16
  br label %.backedge

312:                                              ; preds = %16
  br label %.backedge

313:                                              ; preds = %16
  %314 = load i32, i32* @x.3, align 4
  %315 = load i32, i32* @y.4, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 -1635476998, i32 965759637
  br label %.backedge

323:                                              ; preds = %16
  %324 = icmp slt i32 %.040, 4
  store i1 %324, i1* %2, align 1
  %325 = load i32, i32* @x.3, align 4
  %326 = load i32, i32* @y.4, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 -997976264, i32 965759637
  br label %.backedge

334:                                              ; preds = %16
  %.0..0..0.32 = load volatile i1, i1* %2, align 1
  %335 = select i1 %.0..0..0.32, i32 -1627966065, i32 -1512703508
  br label %.backedge

336:                                              ; preds = %16
  br label %.backedge

337:                                              ; preds = %16
  %338 = icmp slt i32 %.038, 3
  %339 = select i1 %338, i32 1857354482, i32 418692367
  br label %.backedge

340:                                              ; preds = %16
  br label %.backedge

341:                                              ; preds = %16
  %342 = load i32, i32* @x.3, align 4
  %343 = load i32, i32* @y.4, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 633108846, i32 -1794709426
  br label %.backedge

351:                                              ; preds = %16
  %352 = icmp slt i32 %.036, 10
  store i1 %352, i1* %1, align 1
  %353 = load i32, i32* @x.3, align 4
  %354 = load i32, i32* @y.4, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 1408282515, i32 -1794709426
  br label %.backedge

362:                                              ; preds = %16
  %.0..0..0.33 = load volatile i1, i1* %1, align 1
  %363 = select i1 %.0..0..0.33, i32 671089477, i32 -1236559377
  br label %.backedge

364:                                              ; preds = %16
  %365 = sext i32 %.040 to i64
  %366 = sext i32 %.038 to i64
  %367 = sext i32 %.036 to i64
  %368 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %13, i64 0, i64 %365, i64 %366, i64 %367
  %369 = load i32, i32* %368, align 4
  %370 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %369)
  br label %.backedge

371:                                              ; preds = %16
  %372 = add i32 %.036, 1
  br label %.backedge

373:                                              ; preds = %16
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

374:                                              ; preds = %16
  %.neg50 = add i32 %.038, 1
  br label %.backedge

375:                                              ; preds = %16
  %376 = icmp slt i32 %.040, 3
  %377 = select i1 %376, i32 2011326999, i32 883475754
  br label %.backedge

378:                                              ; preds = %16
  %puts = call i32 @puts(i8* nonnull %15)
  br label %.backedge

379:                                              ; preds = %16
  br label %.backedge

380:                                              ; preds = %16
  %.neg = add i32 %.040, 1
  br label %.backedge

381:                                              ; preds = %16
  %382 = load i32, i32* @x.3, align 4
  %383 = load i32, i32* @y.4, align 4
  %384 = add i32 %382, -1
  %385 = mul i32 %384, %382
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %388, %387
  %390 = select i1 %389, i32 -1512740221, i32 188642228
  br label %.backedge

391:                                              ; preds = %16
  %392 = load i32, i32* @x.3, align 4
  %393 = load i32, i32* @y.4, align 4
  %394 = add i32 %392, -1
  %395 = mul i32 %394, %392
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %398, %397
  %400 = select i1 %399, i32 -813611628, i32 188642228
  br label %.backedge

401:                                              ; preds = %16
  ret i32 0

402:                                              ; preds = %16
  br label %.backedge

403:                                              ; preds = %16
  %404 = add i32 %.044, 1
  br label %.backedge

405:                                              ; preds = %16
  %406 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  br label %.backedge

407:                                              ; preds = %16
  %408 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %409 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %408, i32* nonnull dereferenceable(4) %10)
  %410 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %409, i32* nonnull dereferenceable(4) %11)
  %411 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %410, i32* nonnull dereferenceable(4) %12)
  %412 = load i32, i32* %12, align 4
  %413 = load i32, i32* %9, align 4
  %414 = add i32 %413, -1
  %415 = sext i32 %414 to i64
  %416 = load i32, i32* %10, align 4
  %417 = add i32 %416, -1
  %418 = sext i32 %417 to i64
  %419 = load i32, i32* %11, align 4
  %420 = add i32 %419, -1
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %13, i64 0, i64 %415, i64 %418, i64 %421
  %423 = load i32, i32* %422, align 4
  %424 = add i32 %423, %412
  store i32 %424, i32* %422, align 4
  br label %.backedge

425:                                              ; preds = %16
  %426 = load i32, i32* %9, align 4
  %427 = add i32 %426, -1
  %428 = sext i32 %427 to i64
  %429 = load i32, i32* %10, align 4
  %430 = add i32 %429, -1
  %431 = sext i32 %430 to i64
  %432 = load i32, i32* %11, align 4
  %433 = add i32 %432, -1
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %13, i64 0, i64 %428, i64 %431, i64 %434
  store i32 9, i32* %435, align 4
  br label %.backedge

436:                                              ; preds = %16
  br label %.backedge

437:                                              ; preds = %16
  br label %.backedge

438:                                              ; preds = %16
  br label %.backedge

439:                                              ; preds = %16
  %440 = add i32 %.042, 1
  br label %.backedge

441:                                              ; preds = %16
  br label %.backedge

442:                                              ; preds = %16
  br label %.backedge

443:                                              ; preds = %16
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s850109921.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.5, align 4
  %4 = load i32, i32* @y.6, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 540156517, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 540156517, label %11
    i32 800031569, label %14
    i32 535422589, label %24
    i32 463255930, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 800031569, i32 463255930
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 535422589, i32 463255930
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 800031569, %25 ]
  br label %.outer
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
