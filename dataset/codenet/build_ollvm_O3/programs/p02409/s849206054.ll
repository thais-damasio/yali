; ModuleID = 'build_ollvm/programs/p02409/s849206054.ll'
source_filename = "Project_CodeNet_C++1400/p02409/s849206054.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c" %d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [3 x [10 x i32]], align 16
  %13 = alloca [3 x [10 x i32]], align 16
  %14 = alloca [3 x [10 x i32]], align 16
  %15 = alloca [3 x [10 x i32]], align 16
  br label %16

16:                                               ; preds = %.backedge, %0
  %.080 = phi i32 [ 0, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.0 = phi i32 [ -707867045, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -707867045, label %17
    i32 1280586505, label %27
    i32 1332933406, label %38
    i32 1996168463, label %40
    i32 606612864, label %41
    i32 1883968931, label %51
    i32 -843519422, label %62
    i32 -1594538132, label %64
    i32 908968865, label %71
    i32 -280076835, label %73
    i32 1287969513, label %83
    i32 1638381587, label %93
    i32 1590446047, label %94
    i32 -354214152, label %95
    i32 586348076, label %105
    i32 1288157864, label %116
    i32 2132964101, label %117
    i32 1558864381, label %121
    i32 -96343126, label %124
    i32 -1746151221, label %127
    i32 1547143831, label %130
    i32 -1655947060, label %133
    i32 -1631436049, label %136
    i32 -366566300, label %139
    i32 41994996, label %149
    i32 -2086275196, label %169
    i32 1116226175, label %170
    i32 -88523981, label %181
    i32 -2050370810, label %191
    i32 -1414473564, label %211
    i32 2144001817, label %212
    i32 1445529776, label %223
    i32 -2011877169, label %224
    i32 713219625, label %225
    i32 2110502578, label %227
    i32 877919741, label %228
    i32 -993459676, label %231
    i32 733136798, label %232
    i32 -1388741278, label %235
    i32 -665669126, label %237
    i32 1143546018, label %247
    i32 1179505317, label %262
    i32 -463273973, label %263
    i32 1554016403, label %271
    i32 -4653535, label %281
    i32 -608494268, label %292
    i32 1140836800, label %294
    i32 -2112069944, label %295
    i32 -1129346257, label %305
    i32 -1230798779, label %315
    i32 -1714235085, label %316
    i32 -2111240277, label %317
    i32 -2053992613, label %327
    i32 -1969816405, label %338
    i32 801384600, label %339
    i32 2078957516, label %340
    i32 -1702111315, label %350
    i32 -916908226, label %361
    i32 2111675822, label %362
    i32 -263784958, label %363
    i32 -1842229184, label %366
    i32 -676697524, label %367
    i32 2128294980, label %370
    i32 1237150813, label %372
    i32 1259850185, label %378
    i32 -1354458489, label %386
    i32 1459960233, label %389
    i32 -460386373, label %399
    i32 -1806178929, label %409
    i32 783421040, label %410
    i32 -745489167, label %420
    i32 127326451, label %430
    i32 1086905552, label %431
    i32 -1573207068, label %441
    i32 -499051594, label %451
    i32 -405730104, label %452
    i32 -935705865, label %453
    i32 1950414610, label %454
    i32 2007334891, label %455
    i32 1747887193, label %456
    i32 1806863234, label %459
    i32 -1434307285, label %460
    i32 -839236588, label %470
    i32 1043950500, label %481
    i32 -426355230, label %483
    i32 -990042423, label %485
    i32 1098768353, label %491
    i32 1438649800, label %499
    i32 -934374855, label %502
    i32 -589778243, label %512
    i32 -202819573, label %522
    i32 170403554, label %523
    i32 -1534018908, label %524
    i32 -2980948, label %534
    i32 -388014803, label %544
    i32 -1044529677, label %545
    i32 1878171042, label %547
    i32 587548938, label %548
    i32 -648363154, label %550
    i32 419590289, label %560
    i32 429934581, label %570
    i32 -1947868926, label %571
    i32 -581135130, label %574
    i32 -39003918, label %575
    i32 1108878158, label %578
    i32 45908521, label %588
    i32 1613501367, label %599
    i32 -1007979291, label %601
    i32 -1685749048, label %611
    i32 -1666028925, label %626
    i32 -1892897133, label %627
    i32 -101167900, label %633
    i32 -94921441, label %634
    i32 1015249750, label %644
    i32 2104863167, label %654
    i32 -393771877, label %655
    i32 991664245, label %656
    i32 -204983454, label %658
    i32 860784889, label %659
    i32 704291418, label %660
    i32 -149114149, label %661
    i32 -1206794173, label %662
    i32 775380142, label %664
    i32 365042648, label %675
    i32 14575231, label %686
    i32 -1432044643, label %692
    i32 2108605830, label %693
    i32 1649453277, label %694
    i32 -475499164, label %696
    i32 -487116264, label %698
    i32 1084693387, label %699
    i32 1641338044, label %700
    i32 -75421541, label %701
    i32 -1224195927, label %702
    i32 -2001072298, label %703
    i32 -1045338223, label %704
    i32 1594773868, label %705
    i32 -2082955989, label %706
    i32 -1607232620, label %712
  ]

.backedge:                                        ; preds = %16, %712, %706, %705, %704, %703, %702, %701, %700, %699, %698, %696, %694, %693, %692, %686, %675, %664, %662, %661, %660, %659, %656, %655, %654, %644, %634, %633, %627, %626, %611, %601, %599, %588, %578, %575, %574, %571, %570, %560, %550, %548, %547, %545, %544, %534, %524, %523, %522, %512, %502, %499, %491, %485, %483, %481, %470, %460, %459, %456, %455, %454, %453, %452, %451, %441, %431, %430, %420, %410, %409, %399, %389, %386, %378, %372, %370, %367, %366, %363, %362, %361, %350, %340, %339, %338, %327, %317, %316, %315, %305, %295, %294, %292, %281, %271, %263, %262, %247, %237, %235, %232, %231, %228, %227, %225, %224, %223, %212, %211, %191, %181, %170, %169, %149, %139, %136, %133, %130, %127, %124, %121, %117, %116, %105, %95, %94, %93, %83, %73, %71, %64, %62, %51, %41, %40, %38, %27, %17
  %.080.be = phi i32 [ %.080, %16 ], [ %.080, %712 ], [ %.080, %706 ], [ %.080, %705 ], [ 0, %704 ], [ %.080, %703 ], [ %.080, %702 ], [ %.080, %701 ], [ %.080, %700 ], [ %.080, %699 ], [ %.080, %698 ], [ %697, %696 ], [ %.080, %694 ], [ %.080, %693 ], [ %.080, %692 ], [ %.080, %686 ], [ %.080, %675 ], [ %.080, %664 ], [ 0, %662 ], [ %.080, %661 ], [ %.080, %660 ], [ %.080, %659 ], [ %657, %656 ], [ %.080, %655 ], [ %.080, %654 ], [ %.080, %644 ], [ %.080, %634 ], [ %.080, %633 ], [ %.080, %627 ], [ %.080, %626 ], [ %.080, %611 ], [ %.080, %601 ], [ %.080, %599 ], [ %.080, %588 ], [ %.080, %578 ], [ %.080, %575 ], [ %.080, %574 ], [ %.080, %571 ], [ %.080, %570 ], [ 0, %560 ], [ %.080, %550 ], [ %549, %548 ], [ %.080, %547 ], [ %.080, %545 ], [ %.080, %544 ], [ %.080, %534 ], [ %.080, %524 ], [ %.080, %523 ], [ %.080, %522 ], [ %.080, %512 ], [ %.080, %502 ], [ %.080, %499 ], [ %.080, %491 ], [ %.080, %485 ], [ %.080, %483 ], [ %.080, %481 ], [ %.080, %470 ], [ %.080, %460 ], [ %.080, %459 ], [ %.080, %456 ], [ 0, %455 ], [ %.neg83, %454 ], [ %.080, %453 ], [ %.080, %452 ], [ %.080, %451 ], [ %.080, %441 ], [ %.080, %431 ], [ %.080, %430 ], [ %.080, %420 ], [ %.080, %410 ], [ %.080, %409 ], [ %.080, %399 ], [ %.080, %389 ], [ %.080, %386 ], [ %.080, %378 ], [ %.080, %372 ], [ %.080, %370 ], [ %.080, %367 ], [ %.080, %366 ], [ %.080, %363 ], [ 0, %362 ], [ %.080, %361 ], [ %351, %350 ], [ %.080, %340 ], [ %.080, %339 ], [ %.080, %338 ], [ %.080, %327 ], [ %.080, %317 ], [ %.080, %316 ], [ %.080, %315 ], [ %.080, %305 ], [ %.080, %295 ], [ %.080, %294 ], [ %.080, %292 ], [ %.080, %281 ], [ %.080, %271 ], [ %.080, %263 ], [ %.080, %262 ], [ %.080, %247 ], [ %.080, %237 ], [ %.080, %235 ], [ %.080, %232 ], [ %.080, %231 ], [ %.080, %228 ], [ 0, %227 ], [ %226, %225 ], [ %.080, %224 ], [ %.080, %223 ], [ %.080, %212 ], [ %.080, %211 ], [ %.080, %191 ], [ %.080, %181 ], [ %.080, %170 ], [ %.080, %169 ], [ %.080, %149 ], [ %.080, %139 ], [ %.080, %136 ], [ %.080, %133 ], [ %.080, %130 ], [ %.080, %127 ], [ %.080, %124 ], [ %.080, %121 ], [ %.080, %117 ], [ %.080, %116 ], [ 0, %105 ], [ %.080, %95 ], [ %.neg87, %94 ], [ %.080, %93 ], [ %.080, %83 ], [ %.080, %73 ], [ %.080, %71 ], [ %.080, %64 ], [ %.080, %62 ], [ %.080, %51 ], [ %.080, %41 ], [ %.080, %40 ], [ %.080, %38 ], [ %.080, %27 ], [ %.080, %17 ]
  %.078.be = phi i32 [ %.078, %16 ], [ %.neg, %712 ], [ %.078, %706 ], [ %.078, %705 ], [ %.078, %704 ], [ %.078, %703 ], [ %.078, %702 ], [ %.078, %701 ], [ %.078, %700 ], [ %.078, %699 ], [ %.078, %698 ], [ %.078, %696 ], [ %695, %694 ], [ %.078, %693 ], [ %.078, %692 ], [ %.078, %686 ], [ %.078, %675 ], [ %.078, %664 ], [ %.078, %662 ], [ %.078, %661 ], [ %.078, %660 ], [ %.078, %659 ], [ %.078, %656 ], [ %.078, %655 ], [ %.078, %654 ], [ %.neg82, %644 ], [ %.078, %634 ], [ %.078, %633 ], [ %.078, %627 ], [ %.078, %626 ], [ %.078, %611 ], [ %.078, %601 ], [ %.078, %599 ], [ %.078, %588 ], [ %.078, %578 ], [ %.078, %575 ], [ 0, %574 ], [ %.078, %571 ], [ %.078, %570 ], [ %.078, %560 ], [ %.078, %550 ], [ %.078, %548 ], [ %.078, %547 ], [ %546, %545 ], [ %.078, %544 ], [ %.078, %534 ], [ %.078, %524 ], [ %.078, %523 ], [ %.078, %522 ], [ %.078, %512 ], [ %.078, %502 ], [ %.078, %499 ], [ %.078, %491 ], [ %.078, %485 ], [ %.078, %483 ], [ %.078, %481 ], [ %.078, %470 ], [ %.078, %460 ], [ 0, %459 ], [ %.078, %456 ], [ %.078, %455 ], [ %.078, %454 ], [ %.078, %453 ], [ %.neg84, %452 ], [ %.078, %451 ], [ %.078, %441 ], [ %.078, %431 ], [ %.078, %430 ], [ %.078, %420 ], [ %.078, %410 ], [ %.078, %409 ], [ %.078, %399 ], [ %.078, %389 ], [ %.078, %386 ], [ %.078, %378 ], [ %.078, %372 ], [ %.078, %370 ], [ %.078, %367 ], [ 0, %366 ], [ %.078, %363 ], [ %.078, %362 ], [ %.078, %361 ], [ %.078, %350 ], [ %.078, %340 ], [ %.078, %339 ], [ %.078, %338 ], [ %328, %327 ], [ %.078, %317 ], [ %.078, %316 ], [ %.078, %315 ], [ %.078, %305 ], [ %.078, %295 ], [ %.078, %294 ], [ %.078, %292 ], [ %.078, %281 ], [ %.078, %271 ], [ %.078, %263 ], [ %.078, %262 ], [ %.078, %247 ], [ %.078, %237 ], [ %.078, %235 ], [ %.078, %232 ], [ 0, %231 ], [ %.078, %228 ], [ %.078, %227 ], [ %.078, %225 ], [ %.078, %224 ], [ %.078, %223 ], [ %.078, %212 ], [ %.078, %211 ], [ %.078, %191 ], [ %.078, %181 ], [ %.078, %170 ], [ %.078, %169 ], [ %.078, %149 ], [ %.078, %139 ], [ %.078, %136 ], [ %.078, %133 ], [ %.078, %130 ], [ %.078, %127 ], [ %.078, %124 ], [ %.078, %121 ], [ %.078, %117 ], [ %.078, %116 ], [ %.078, %105 ], [ %.078, %95 ], [ %.078, %94 ], [ %.078, %93 ], [ %.078, %83 ], [ %.078, %73 ], [ %72, %71 ], [ %.078, %64 ], [ %.078, %62 ], [ %.078, %51 ], [ %.078, %41 ], [ 0, %40 ], [ %.078, %38 ], [ %.078, %27 ], [ %.078, %17 ]
  %.0.be = phi i32 [ %.0, %16 ], [ 1015249750, %712 ], [ -1685749048, %706 ], [ 45908521, %705 ], [ 419590289, %704 ], [ -2980948, %703 ], [ -589778243, %702 ], [ -839236588, %701 ], [ -1573207068, %700 ], [ -745489167, %699 ], [ -460386373, %698 ], [ -1702111315, %696 ], [ -2053992613, %694 ], [ -1129346257, %693 ], [ -4653535, %692 ], [ 1143546018, %686 ], [ -2050370810, %675 ], [ 41994996, %664 ], [ 586348076, %662 ], [ 1287969513, %661 ], [ 1883968931, %660 ], [ 1280586505, %659 ], [ -1947868926, %656 ], [ 991664245, %655 ], [ -39003918, %654 ], [ %653, %644 ], [ %643, %634 ], [ -94921441, %633 ], [ -101167900, %627 ], [ -101167900, %626 ], [ %625, %611 ], [ %610, %601 ], [ %600, %599 ], [ %598, %588 ], [ %587, %578 ], [ %577, %575 ], [ -39003918, %574 ], [ %573, %571 ], [ -1947868926, %570 ], [ %569, %560 ], [ %559, %550 ], [ 1747887193, %548 ], [ 587548938, %547 ], [ -1434307285, %545 ], [ -1044529677, %544 ], [ %543, %534 ], [ %533, %524 ], [ -1534018908, %523 ], [ 170403554, %522 ], [ %521, %512 ], [ %511, %502 ], [ %501, %499 ], [ %498, %491 ], [ -1534018908, %485 ], [ %484, %483 ], [ %482, %481 ], [ %480, %470 ], [ %469, %460 ], [ -1434307285, %459 ], [ %458, %456 ], [ 1747887193, %455 ], [ -263784958, %454 ], [ 1950414610, %453 ], [ -676697524, %452 ], [ -405730104, %451 ], [ %450, %441 ], [ %440, %431 ], [ 1086905552, %430 ], [ %429, %420 ], [ %419, %410 ], [ 783421040, %409 ], [ %408, %399 ], [ %398, %389 ], [ %388, %386 ], [ %385, %378 ], [ 1086905552, %372 ], [ %371, %370 ], [ %369, %367 ], [ -676697524, %366 ], [ %365, %363 ], [ -263784958, %362 ], [ 877919741, %361 ], [ %360, %350 ], [ %349, %340 ], [ 2078957516, %339 ], [ 733136798, %338 ], [ %337, %327 ], [ %326, %317 ], [ -2111240277, %316 ], [ -1714235085, %315 ], [ %314, %305 ], [ %304, %295 ], [ -2112069944, %294 ], [ %293, %292 ], [ %291, %281 ], [ %280, %271 ], [ %270, %263 ], [ -1714235085, %262 ], [ %261, %247 ], [ %246, %237 ], [ %236, %235 ], [ %234, %232 ], [ 733136798, %231 ], [ %230, %228 ], [ 877919741, %227 ], [ 2132964101, %225 ], [ 713219625, %224 ], [ -2011877169, %223 ], [ -2011877169, %212 ], [ -2011877169, %211 ], [ %210, %191 ], [ %190, %181 ], [ -2011877169, %170 ], [ -2011877169, %169 ], [ %168, %149 ], [ %148, %139 ], [ %138, %136 ], [ %135, %133 ], [ %132, %130 ], [ %129, %127 ], [ %126, %124 ], [ -96343126, %121 ], [ %120, %117 ], [ 2132964101, %116 ], [ %115, %105 ], [ %104, %95 ], [ -707867045, %94 ], [ 1590446047, %93 ], [ %92, %83 ], [ %82, %73 ], [ 606612864, %71 ], [ 908968865, %64 ], [ %63, %62 ], [ %61, %51 ], [ %50, %41 ], [ 606612864, %40 ], [ %39, %38 ], [ %37, %27 ], [ %26, %17 ]
  br label %16

17:                                               ; preds = %16
  %18 = load i32, i32* @x, align 4
  %19 = load i32, i32* @y, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 1280586505, i32 860784889
  br label %.backedge

27:                                               ; preds = %16
  %28 = icmp slt i32 %.080, 3
  store i1 %28, i1* %6, align 1
  %29 = load i32, i32* @x, align 4
  %30 = load i32, i32* @y, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 1332933406, i32 860784889
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %39 = select i1 %.0..0..0., i32 1996168463, i32 -354214152
  br label %.backedge

40:                                               ; preds = %16
  br label %.backedge

41:                                               ; preds = %16
  %42 = load i32, i32* @x, align 4
  %43 = load i32, i32* @y, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 1883968931, i32 704291418
  br label %.backedge

51:                                               ; preds = %16
  %52 = icmp slt i32 %.078, 10
  store i1 %52, i1* %5, align 1
  %53 = load i32, i32* @x, align 4
  %54 = load i32, i32* @y, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -843519422, i32 704291418
  br label %.backedge

62:                                               ; preds = %16
  %.0..0..0.69 = load volatile i1, i1* %5, align 1
  %63 = select i1 %.0..0..0.69, i32 -1594538132, i32 -280076835
  br label %.backedge

64:                                               ; preds = %16
  %65 = sext i32 %.080 to i64
  %66 = sext i32 %.078 to i64
  %67 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %12, i64 0, i64 %65, i64 %66
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %13, i64 0, i64 %65, i64 %66
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %14, i64 0, i64 %65, i64 %66
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %15, i64 0, i64 %65, i64 %66
  store i32 0, i32* %70, align 4
  br label %.backedge

71:                                               ; preds = %16
  %72 = add i32 %.078, 1
  br label %.backedge

73:                                               ; preds = %16
  %74 = load i32, i32* @x, align 4
  %75 = load i32, i32* @y, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 1287969513, i32 -149114149
  br label %.backedge

83:                                               ; preds = %16
  %84 = load i32, i32* @x, align 4
  %85 = load i32, i32* @y, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 1638381587, i32 -149114149
  br label %.backedge

93:                                               ; preds = %16
  br label %.backedge

94:                                               ; preds = %16
  %.neg87 = add i32 %.080, 1
  br label %.backedge

95:                                               ; preds = %16
  %96 = load i32, i32* @x, align 4
  %97 = load i32, i32* @y, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 586348076, i32 -1206794173
  br label %.backedge

105:                                              ; preds = %16
  %106 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %7)
  %107 = load i32, i32* @x, align 4
  %108 = load i32, i32* @y, align 4
  %109 = add i32 %107, -1
  %110 = mul i32 %109, %107
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %113, %112
  %115 = select i1 %114, i32 1288157864, i32 -1206794173
  br label %.backedge

116:                                              ; preds = %16
  br label %.backedge

117:                                              ; preds = %16
  %118 = load i32, i32* %7, align 4
  %119 = icmp slt i32 %.080, %118
  %120 = select i1 %119, i32 1558864381, i32 2110502578
  br label %.backedge

121:                                              ; preds = %16
  %122 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %8, i32* nonnull %9, i32* nonnull %10, i32* nonnull %11)
  %123 = load i32, i32* %8, align 4
  store i32 %123, i32* %4, align 4
  br label %.backedge

124:                                              ; preds = %16
  %.0..0..0.70 = load volatile i32, i32* %4, align 4
  %125 = icmp slt i32 %.0..0..0.70, 3
  %126 = select i1 %125, i32 -1655947060, i32 -1746151221
  br label %.backedge

127:                                              ; preds = %16
  %.0..0..0.71 = load volatile i32, i32* %4, align 4
  %128 = icmp slt i32 %.0..0..0.71, 4
  %129 = select i1 %128, i32 -88523981, i32 1547143831
  br label %.backedge

130:                                              ; preds = %16
  %.0..0..0.72 = load volatile i32, i32* %4, align 4
  %131 = icmp eq i32 %.0..0..0.72, 4
  %132 = select i1 %131, i32 2144001817, i32 1445529776
  br label %.backedge

133:                                              ; preds = %16
  %.0..0..0.73 = load volatile i32, i32* %4, align 4
  %134 = icmp slt i32 %.0..0..0.73, 2
  %135 = select i1 %134, i32 -1631436049, i32 1116226175
  br label %.backedge

136:                                              ; preds = %16
  %.0..0..0.74 = load volatile i32, i32* %4, align 4
  %137 = icmp eq i32 %.0..0..0.74, 1
  %138 = select i1 %137, i32 -366566300, i32 1445529776
  br label %.backedge

139:                                              ; preds = %16
  %140 = load i32, i32* @x, align 4
  %141 = load i32, i32* @y, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 41994996, i32 775380142
  br label %.backedge

149:                                              ; preds = %16
  %150 = load i32, i32* %11, align 4
  %151 = load i32, i32* %9, align 4
  %152 = add i32 %151, -1
  %153 = sext i32 %152 to i64
  %154 = load i32, i32* %10, align 4
  %155 = add i32 %154, -1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %12, i64 0, i64 %153, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = add i32 %158, %150
  store i32 %159, i32* %157, align 4
  %160 = load i32, i32* @x, align 4
  %161 = load i32, i32* @y, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -2086275196, i32 775380142
  br label %.backedge

169:                                              ; preds = %16
  br label %.backedge

170:                                              ; preds = %16
  %171 = load i32, i32* %11, align 4
  %172 = load i32, i32* %9, align 4
  %173 = add i32 %172, -1
  %174 = sext i32 %173 to i64
  %175 = load i32, i32* %10, align 4
  %176 = add i32 %175, -1
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %13, i64 0, i64 %174, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = add i32 %179, %171
  store i32 %180, i32* %178, align 4
  br label %.backedge

181:                                              ; preds = %16
  %182 = load i32, i32* @x, align 4
  %183 = load i32, i32* @y, align 4
  %184 = add i32 %182, -1
  %185 = mul i32 %184, %182
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %188, %187
  %190 = select i1 %189, i32 -2050370810, i32 365042648
  br label %.backedge

191:                                              ; preds = %16
  %192 = load i32, i32* %11, align 4
  %193 = load i32, i32* %9, align 4
  %194 = add i32 %193, -1
  %195 = sext i32 %194 to i64
  %196 = load i32, i32* %10, align 4
  %197 = add i32 %196, -1
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %14, i64 0, i64 %195, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = add i32 %200, %192
  store i32 %201, i32* %199, align 4
  %202 = load i32, i32* @x, align 4
  %203 = load i32, i32* @y, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 -1414473564, i32 365042648
  br label %.backedge

211:                                              ; preds = %16
  br label %.backedge

212:                                              ; preds = %16
  %213 = load i32, i32* %11, align 4
  %214 = load i32, i32* %9, align 4
  %215 = add i32 %214, -1
  %216 = sext i32 %215 to i64
  %217 = load i32, i32* %10, align 4
  %218 = add i32 %217, -1
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %15, i64 0, i64 %216, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = add i32 %221, %213
  store i32 %222, i32* %220, align 4
  br label %.backedge

223:                                              ; preds = %16
  br label %.backedge

224:                                              ; preds = %16
  br label %.backedge

225:                                              ; preds = %16
  %226 = add i32 %.080, 1
  br label %.backedge

227:                                              ; preds = %16
  br label %.backedge

228:                                              ; preds = %16
  %229 = icmp slt i32 %.080, 3
  %230 = select i1 %229, i32 -993459676, i32 2111675822
  br label %.backedge

231:                                              ; preds = %16
  br label %.backedge

232:                                              ; preds = %16
  %233 = icmp slt i32 %.078, 10
  %234 = select i1 %233, i32 -1388741278, i32 801384600
  br label %.backedge

235:                                              ; preds = %16
  %.not86 = icmp eq i32 %.078, 9
  %236 = select i1 %.not86, i32 -463273973, i32 -665669126
  br label %.backedge

237:                                              ; preds = %16
  %238 = load i32, i32* @x, align 4
  %239 = load i32, i32* @y, align 4
  %240 = add i32 %238, -1
  %241 = mul i32 %240, %238
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %244, %243
  %246 = select i1 %245, i32 1143546018, i32 14575231
  br label %.backedge

247:                                              ; preds = %16
  %248 = sext i32 %.080 to i64
  %249 = sext i32 %.078 to i64
  %250 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %12, i64 0, i64 %248, i64 %249
  %251 = load i32, i32* %250, align 4
  %252 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %251)
  %253 = load i32, i32* @x, align 4
  %254 = load i32, i32* @y, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 1179505317, i32 14575231
  br label %.backedge

262:                                              ; preds = %16
  br label %.backedge

263:                                              ; preds = %16
  %264 = sext i32 %.080 to i64
  %265 = sext i32 %.078 to i64
  %266 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %12, i64 0, i64 %264, i64 %265
  %267 = load i32, i32* %266, align 4
  %268 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 %267)
  %269 = icmp eq i32 %.080, 2
  %270 = select i1 %269, i32 1554016403, i32 -2112069944
  br label %.backedge

271:                                              ; preds = %16
  %272 = load i32, i32* @x, align 4
  %273 = load i32, i32* @y, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 -4653535, i32 -1432044643
  br label %.backedge

281:                                              ; preds = %16
  %282 = icmp eq i32 %.078, 9
  store i1 %282, i1* %3, align 1
  %283 = load i32, i32* @x, align 4
  %284 = load i32, i32* @y, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 -608494268, i32 -1432044643
  br label %.backedge

292:                                              ; preds = %16
  %.0..0..0.75 = load volatile i1, i1* %3, align 1
  %293 = select i1 %.0..0..0.75, i32 1140836800, i32 -2112069944
  br label %.backedge

294:                                              ; preds = %16
  call void @_Z9draw_linev()
  br label %.backedge

295:                                              ; preds = %16
  %296 = load i32, i32* @x, align 4
  %297 = load i32, i32* @y, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 -1129346257, i32 2108605830
  br label %.backedge

305:                                              ; preds = %16
  %306 = load i32, i32* @x, align 4
  %307 = load i32, i32* @y, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 -1230798779, i32 2108605830
  br label %.backedge

315:                                              ; preds = %16
  br label %.backedge

316:                                              ; preds = %16
  br label %.backedge

317:                                              ; preds = %16
  %318 = load i32, i32* @x, align 4
  %319 = load i32, i32* @y, align 4
  %320 = add i32 %318, -1
  %321 = mul i32 %320, %318
  %322 = and i32 %321, 1
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %324, %323
  %326 = select i1 %325, i32 -2053992613, i32 1649453277
  br label %.backedge

327:                                              ; preds = %16
  %328 = add i32 %.078, 1
  %329 = load i32, i32* @x, align 4
  %330 = load i32, i32* @y, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 -1969816405, i32 1649453277
  br label %.backedge

338:                                              ; preds = %16
  br label %.backedge

339:                                              ; preds = %16
  br label %.backedge

340:                                              ; preds = %16
  %341 = load i32, i32* @x, align 4
  %342 = load i32, i32* @y, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 -1702111315, i32 -475499164
  br label %.backedge

350:                                              ; preds = %16
  %351 = add i32 %.080, 1
  %352 = load i32, i32* @x, align 4
  %353 = load i32, i32* @y, align 4
  %354 = add i32 %352, -1
  %355 = mul i32 %354, %352
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %358, %357
  %360 = select i1 %359, i32 -916908226, i32 -475499164
  br label %.backedge

361:                                              ; preds = %16
  br label %.backedge

362:                                              ; preds = %16
  br label %.backedge

363:                                              ; preds = %16
  %364 = icmp slt i32 %.080, 3
  %365 = select i1 %364, i32 -1842229184, i32 2007334891
  br label %.backedge

366:                                              ; preds = %16
  br label %.backedge

367:                                              ; preds = %16
  %368 = icmp slt i32 %.078, 10
  %369 = select i1 %368, i32 2128294980, i32 -935705865
  br label %.backedge

370:                                              ; preds = %16
  %.not85 = icmp eq i32 %.078, 9
  %371 = select i1 %.not85, i32 1259850185, i32 1237150813
  br label %.backedge

372:                                              ; preds = %16
  %373 = sext i32 %.080 to i64
  %374 = sext i32 %.078 to i64
  %375 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %13, i64 0, i64 %373, i64 %374
  %376 = load i32, i32* %375, align 4
  %377 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %376)
  br label %.backedge

378:                                              ; preds = %16
  %379 = sext i32 %.080 to i64
  %380 = sext i32 %.078 to i64
  %381 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %13, i64 0, i64 %379, i64 %380
  %382 = load i32, i32* %381, align 4
  %383 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 %382)
  %384 = icmp eq i32 %.080, 2
  %385 = select i1 %384, i32 -1354458489, i32 783421040
  br label %.backedge

386:                                              ; preds = %16
  %387 = icmp eq i32 %.078, 9
  %388 = select i1 %387, i32 1459960233, i32 783421040
  br label %.backedge

389:                                              ; preds = %16
  %390 = load i32, i32* @x, align 4
  %391 = load i32, i32* @y, align 4
  %392 = add i32 %390, -1
  %393 = mul i32 %392, %390
  %394 = and i32 %393, 1
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %396, %395
  %398 = select i1 %397, i32 -460386373, i32 -487116264
  br label %.backedge

399:                                              ; preds = %16
  call void @_Z9draw_linev()
  %400 = load i32, i32* @x, align 4
  %401 = load i32, i32* @y, align 4
  %402 = add i32 %400, -1
  %403 = mul i32 %402, %400
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %406, %405
  %408 = select i1 %407, i32 -1806178929, i32 -487116264
  br label %.backedge

409:                                              ; preds = %16
  br label %.backedge

410:                                              ; preds = %16
  %411 = load i32, i32* @x, align 4
  %412 = load i32, i32* @y, align 4
  %413 = add i32 %411, -1
  %414 = mul i32 %413, %411
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %417, %416
  %419 = select i1 %418, i32 -745489167, i32 1084693387
  br label %.backedge

420:                                              ; preds = %16
  %421 = load i32, i32* @x, align 4
  %422 = load i32, i32* @y, align 4
  %423 = add i32 %421, -1
  %424 = mul i32 %423, %421
  %425 = and i32 %424, 1
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %427, %426
  %429 = select i1 %428, i32 127326451, i32 1084693387
  br label %.backedge

430:                                              ; preds = %16
  br label %.backedge

431:                                              ; preds = %16
  %432 = load i32, i32* @x, align 4
  %433 = load i32, i32* @y, align 4
  %434 = add i32 %432, -1
  %435 = mul i32 %434, %432
  %436 = and i32 %435, 1
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %438, %437
  %440 = select i1 %439, i32 -1573207068, i32 1641338044
  br label %.backedge

441:                                              ; preds = %16
  %442 = load i32, i32* @x, align 4
  %443 = load i32, i32* @y, align 4
  %444 = add i32 %442, -1
  %445 = mul i32 %444, %442
  %446 = and i32 %445, 1
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %448, %447
  %450 = select i1 %449, i32 -499051594, i32 1641338044
  br label %.backedge

451:                                              ; preds = %16
  br label %.backedge

452:                                              ; preds = %16
  %.neg84 = add i32 %.078, 1
  br label %.backedge

453:                                              ; preds = %16
  br label %.backedge

454:                                              ; preds = %16
  %.neg83 = add i32 %.080, 1
  br label %.backedge

455:                                              ; preds = %16
  br label %.backedge

456:                                              ; preds = %16
  %457 = icmp slt i32 %.080, 3
  %458 = select i1 %457, i32 1806863234, i32 -648363154
  br label %.backedge

459:                                              ; preds = %16
  br label %.backedge

460:                                              ; preds = %16
  %461 = load i32, i32* @x, align 4
  %462 = load i32, i32* @y, align 4
  %463 = add i32 %461, -1
  %464 = mul i32 %463, %461
  %465 = and i32 %464, 1
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %467, %466
  %469 = select i1 %468, i32 -839236588, i32 -75421541
  br label %.backedge

470:                                              ; preds = %16
  %471 = icmp slt i32 %.078, 10
  store i1 %471, i1* %2, align 1
  %472 = load i32, i32* @x, align 4
  %473 = load i32, i32* @y, align 4
  %474 = add i32 %472, -1
  %475 = mul i32 %474, %472
  %476 = and i32 %475, 1
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %478, %477
  %480 = select i1 %479, i32 1043950500, i32 -75421541
  br label %.backedge

481:                                              ; preds = %16
  %.0..0..0.76 = load volatile i1, i1* %2, align 1
  %482 = select i1 %.0..0..0.76, i32 -426355230, i32 1878171042
  br label %.backedge

483:                                              ; preds = %16
  %.not = icmp eq i32 %.078, 9
  %484 = select i1 %.not, i32 1098768353, i32 -990042423
  br label %.backedge

485:                                              ; preds = %16
  %486 = sext i32 %.080 to i64
  %487 = sext i32 %.078 to i64
  %488 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %14, i64 0, i64 %486, i64 %487
  %489 = load i32, i32* %488, align 4
  %490 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %489)
  br label %.backedge

491:                                              ; preds = %16
  %492 = sext i32 %.080 to i64
  %493 = sext i32 %.078 to i64
  %494 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %14, i64 0, i64 %492, i64 %493
  %495 = load i32, i32* %494, align 4
  %496 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 %495)
  %497 = icmp eq i32 %.080, 2
  %498 = select i1 %497, i32 1438649800, i32 170403554
  br label %.backedge

499:                                              ; preds = %16
  %500 = icmp eq i32 %.078, 9
  %501 = select i1 %500, i32 -934374855, i32 170403554
  br label %.backedge

502:                                              ; preds = %16
  %503 = load i32, i32* @x, align 4
  %504 = load i32, i32* @y, align 4
  %505 = add i32 %503, -1
  %506 = mul i32 %505, %503
  %507 = and i32 %506, 1
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %509, %508
  %511 = select i1 %510, i32 -589778243, i32 -1224195927
  br label %.backedge

512:                                              ; preds = %16
  call void @_Z9draw_linev()
  %513 = load i32, i32* @x, align 4
  %514 = load i32, i32* @y, align 4
  %515 = add i32 %513, -1
  %516 = mul i32 %515, %513
  %517 = and i32 %516, 1
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %519, %518
  %521 = select i1 %520, i32 -202819573, i32 -1224195927
  br label %.backedge

522:                                              ; preds = %16
  br label %.backedge

523:                                              ; preds = %16
  br label %.backedge

524:                                              ; preds = %16
  %525 = load i32, i32* @x, align 4
  %526 = load i32, i32* @y, align 4
  %527 = add i32 %525, -1
  %528 = mul i32 %527, %525
  %529 = and i32 %528, 1
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %531, %530
  %533 = select i1 %532, i32 -2980948, i32 -2001072298
  br label %.backedge

534:                                              ; preds = %16
  %535 = load i32, i32* @x, align 4
  %536 = load i32, i32* @y, align 4
  %537 = add i32 %535, -1
  %538 = mul i32 %537, %535
  %539 = and i32 %538, 1
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %541, %540
  %543 = select i1 %542, i32 -388014803, i32 -2001072298
  br label %.backedge

544:                                              ; preds = %16
  br label %.backedge

545:                                              ; preds = %16
  %546 = add i32 %.078, 1
  br label %.backedge

547:                                              ; preds = %16
  br label %.backedge

548:                                              ; preds = %16
  %549 = add i32 %.080, 1
  br label %.backedge

550:                                              ; preds = %16
  %551 = load i32, i32* @x, align 4
  %552 = load i32, i32* @y, align 4
  %553 = add i32 %551, -1
  %554 = mul i32 %553, %551
  %555 = and i32 %554, 1
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %557, %556
  %559 = select i1 %558, i32 419590289, i32 -1045338223
  br label %.backedge

560:                                              ; preds = %16
  %561 = load i32, i32* @x, align 4
  %562 = load i32, i32* @y, align 4
  %563 = add i32 %561, -1
  %564 = mul i32 %563, %561
  %565 = and i32 %564, 1
  %566 = icmp eq i32 %565, 0
  %567 = icmp slt i32 %562, 10
  %568 = or i1 %567, %566
  %569 = select i1 %568, i32 429934581, i32 -1045338223
  br label %.backedge

570:                                              ; preds = %16
  br label %.backedge

571:                                              ; preds = %16
  %572 = icmp slt i32 %.080, 3
  %573 = select i1 %572, i32 -581135130, i32 -204983454
  br label %.backedge

574:                                              ; preds = %16
  br label %.backedge

575:                                              ; preds = %16
  %576 = icmp slt i32 %.078, 10
  %577 = select i1 %576, i32 1108878158, i32 -393771877
  br label %.backedge

578:                                              ; preds = %16
  %579 = load i32, i32* @x, align 4
  %580 = load i32, i32* @y, align 4
  %581 = add i32 %579, -1
  %582 = mul i32 %581, %579
  %583 = and i32 %582, 1
  %584 = icmp eq i32 %583, 0
  %585 = icmp slt i32 %580, 10
  %586 = or i1 %585, %584
  %587 = select i1 %586, i32 45908521, i32 1594773868
  br label %.backedge

588:                                              ; preds = %16
  %589 = icmp ne i32 %.078, 9
  store i1 %589, i1* %1, align 1
  %590 = load i32, i32* @x, align 4
  %591 = load i32, i32* @y, align 4
  %592 = add i32 %590, -1
  %593 = mul i32 %592, %590
  %594 = and i32 %593, 1
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %596, %595
  %598 = select i1 %597, i32 1613501367, i32 1594773868
  br label %.backedge

599:                                              ; preds = %16
  %.0..0..0.77 = load volatile i1, i1* %1, align 1
  %600 = select i1 %.0..0..0.77, i32 -1007979291, i32 -1892897133
  br label %.backedge

601:                                              ; preds = %16
  %602 = load i32, i32* @x, align 4
  %603 = load i32, i32* @y, align 4
  %604 = add i32 %602, -1
  %605 = mul i32 %604, %602
  %606 = and i32 %605, 1
  %607 = icmp eq i32 %606, 0
  %608 = icmp slt i32 %603, 10
  %609 = or i1 %608, %607
  %610 = select i1 %609, i32 -1685749048, i32 -2082955989
  br label %.backedge

611:                                              ; preds = %16
  %612 = sext i32 %.080 to i64
  %613 = sext i32 %.078 to i64
  %614 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %15, i64 0, i64 %612, i64 %613
  %615 = load i32, i32* %614, align 4
  %616 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %615)
  %617 = load i32, i32* @x, align 4
  %618 = load i32, i32* @y, align 4
  %619 = add i32 %617, -1
  %620 = mul i32 %619, %617
  %621 = and i32 %620, 1
  %622 = icmp eq i32 %621, 0
  %623 = icmp slt i32 %618, 10
  %624 = or i1 %623, %622
  %625 = select i1 %624, i32 -1666028925, i32 -2082955989
  br label %.backedge

626:                                              ; preds = %16
  br label %.backedge

627:                                              ; preds = %16
  %628 = sext i32 %.080 to i64
  %629 = sext i32 %.078 to i64
  %630 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %15, i64 0, i64 %628, i64 %629
  %631 = load i32, i32* %630, align 4
  %632 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 %631)
  br label %.backedge

633:                                              ; preds = %16
  br label %.backedge

634:                                              ; preds = %16
  %635 = load i32, i32* @x, align 4
  %636 = load i32, i32* @y, align 4
  %637 = add i32 %635, -1
  %638 = mul i32 %637, %635
  %639 = and i32 %638, 1
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %641, %640
  %643 = select i1 %642, i32 1015249750, i32 -1607232620
  br label %.backedge

644:                                              ; preds = %16
  %.neg82 = add i32 %.078, 1
  %645 = load i32, i32* @x, align 4
  %646 = load i32, i32* @y, align 4
  %647 = add i32 %645, -1
  %648 = mul i32 %647, %645
  %649 = and i32 %648, 1
  %650 = icmp eq i32 %649, 0
  %651 = icmp slt i32 %646, 10
  %652 = or i1 %651, %650
  %653 = select i1 %652, i32 2104863167, i32 -1607232620
  br label %.backedge

654:                                              ; preds = %16
  br label %.backedge

655:                                              ; preds = %16
  br label %.backedge

656:                                              ; preds = %16
  %657 = add i32 %.080, 1
  br label %.backedge

658:                                              ; preds = %16
  ret i32 0

659:                                              ; preds = %16
  br label %.backedge

660:                                              ; preds = %16
  br label %.backedge

661:                                              ; preds = %16
  br label %.backedge

662:                                              ; preds = %16
  %663 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %7)
  br label %.backedge

664:                                              ; preds = %16
  %665 = load i32, i32* %11, align 4
  %666 = load i32, i32* %9, align 4
  %667 = add i32 %666, -1
  %668 = sext i32 %667 to i64
  %669 = load i32, i32* %10, align 4
  %670 = add i32 %669, -1
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %12, i64 0, i64 %668, i64 %671
  %673 = load i32, i32* %672, align 4
  %674 = add i32 %673, %665
  store i32 %674, i32* %672, align 4
  br label %.backedge

675:                                              ; preds = %16
  %676 = load i32, i32* %11, align 4
  %677 = load i32, i32* %9, align 4
  %678 = add i32 %677, -1
  %679 = sext i32 %678 to i64
  %680 = load i32, i32* %10, align 4
  %681 = add i32 %680, -1
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %14, i64 0, i64 %679, i64 %682
  %684 = load i32, i32* %683, align 4
  %685 = add i32 %684, %676
  store i32 %685, i32* %683, align 4
  br label %.backedge

686:                                              ; preds = %16
  %687 = sext i32 %.080 to i64
  %688 = sext i32 %.078 to i64
  %689 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %12, i64 0, i64 %687, i64 %688
  %690 = load i32, i32* %689, align 4
  %691 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %690)
  br label %.backedge

692:                                              ; preds = %16
  br label %.backedge

693:                                              ; preds = %16
  br label %.backedge

694:                                              ; preds = %16
  %695 = add i32 %.078, 1
  br label %.backedge

696:                                              ; preds = %16
  %697 = add i32 %.080, 1
  br label %.backedge

698:                                              ; preds = %16
  call void @_Z9draw_linev()
  br label %.backedge

699:                                              ; preds = %16
  br label %.backedge

700:                                              ; preds = %16
  br label %.backedge

701:                                              ; preds = %16
  br label %.backedge

702:                                              ; preds = %16
  call void @_Z9draw_linev()
  br label %.backedge

703:                                              ; preds = %16
  br label %.backedge

704:                                              ; preds = %16
  br label %.backedge

705:                                              ; preds = %16
  br label %.backedge

706:                                              ; preds = %16
  %707 = sext i32 %.080 to i64
  %708 = sext i32 %.078 to i64
  %709 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %15, i64 0, i64 %707, i64 %708
  %710 = load i32, i32* %709, align 4
  %711 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %710)
  br label %.backedge

712:                                              ; preds = %16
  %.neg = add i32 %.078, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree noinline nounwind uwtable
define void @_Z9draw_linev() local_unnamed_addr #2 {
  br label %.outer

.outer:                                           ; preds = %5, %0
  %.03.ph = phi i32 [ %6, %5 ], [ 0, %0 ]
  %1 = icmp slt i32 %.03.ph, 20
  %2 = select i1 %1, i32 1663500436, i32 1257562945
  br label %.outer7

.outer7:                                          ; preds = %.outer7.backedge, %.outer
  %.0.ph = phi i32 [ 4296212, %.outer ], [ %.0.ph.be, %.outer7.backedge ]
  br label %3

3:                                                ; preds = %.outer7, %3
  switch i32 %.0.ph, label %3 [
    i32 4296212, label %.outer7.backedge
    i32 1663500436, label %4
    i32 -449474612, label %5
    i32 1257562945, label %7
    i32 618900805, label %17
    i32 -981315667, label %27
    i32 1674747538, label %28
  ]

4:                                                ; preds = %3
  %putchar6 = tail call i32 @putchar(i32 35)
  br label %.outer7.backedge

5:                                                ; preds = %3
  %6 = add i32 %.03.ph, 1
  br label %.outer

7:                                                ; preds = %3
  %8 = load i32, i32* @x.6, align 4
  %9 = load i32, i32* @y.7, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 618900805, i32 1674747538
  br label %.outer7.backedge

17:                                               ; preds = %3
  %putchar5 = tail call i32 @putchar(i32 10)
  %18 = load i32, i32* @x.6, align 4
  %19 = load i32, i32* @y.7, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 -981315667, i32 1674747538
  br label %.outer7.backedge

27:                                               ; preds = %3
  ret void

28:                                               ; preds = %3
  %putchar = tail call i32 @putchar(i32 10)
  br label %.outer7.backedge

.outer7.backedge:                                 ; preds = %3, %28, %17, %7, %4
  %.0.ph.be = phi i32 [ -449474612, %4 ], [ %16, %7 ], [ %26, %17 ], [ 618900805, %28 ], [ %2, %3 ]
  br label %.outer7
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
