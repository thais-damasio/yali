; ModuleID = 'build_ollvm/programs/p02409/s619062867.ll'
source_filename = "Project_CodeNet_C++1400/p02409/s619062867.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"%u %u %u %d\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str = private unnamed_addr constant [21 x i8] c"####################\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [4 x [3 x [10 x i32]]], align 16
  %10 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %9, i64 0, i64 0
  %11 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %9, i64 0, i64 4
  br label %12

12:                                               ; preds = %.backedge, %0
  %.063 = phi [10 x i32]* [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi [10 x i32]* [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32* [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32* [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi [3 x [10 x i32]]* [ %10, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.0 = phi i32 [ 1899986157, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1899986157, label %13
    i32 1626238374, label %23
    i32 1238061543, label %34
    i32 1197448946, label %36
    i32 63130124, label %46
    i32 175649524, label %58
    i32 2120158652, label %59
    i32 -1249763001, label %69
    i32 -1557327186, label %80
    i32 797029125, label %82
    i32 -1430410682, label %85
    i32 307209300, label %87
    i32 -93863830, label %88
    i32 1308432012, label %90
    i32 876118815, label %100
    i32 1478291516, label %110
    i32 -680269644, label %111
    i32 94128228, label %113
    i32 -435817907, label %123
    i32 -91107793, label %133
    i32 573756939, label %134
    i32 1286750968, label %144
    i32 -2000135275, label %155
    i32 1701506954, label %156
    i32 121253112, label %158
    i32 -263452718, label %162
    i32 497664648, label %172
    i32 1057359553, label %196
    i32 1403977791, label %197
    i32 1543330786, label %199
    i32 1282146818, label %200
    i32 -1500601344, label %210
    i32 -1916753396, label %221
    i32 -1446707819, label %223
    i32 -515018104, label %225
    i32 -986780936, label %226
    i32 112095223, label %236
    i32 -2134820462, label %246
    i32 -439829440, label %247
    i32 -1625177992, label %250
    i32 -868196271, label %251
    i32 245488541, label %254
    i32 -1608888728, label %261
    i32 1712946721, label %263
    i32 -36843800, label %265
    i32 265713998, label %267
    i32 1991595615, label %277
    i32 1820890498, label %287
    i32 1305586640, label %288
    i32 -1591897679, label %289
    i32 -233221778, label %290
    i32 -1839146321, label %291
    i32 -1213212512, label %294
    i32 800246947, label %295
    i32 -1981170601, label %296
    i32 994161295, label %297
    i32 -439743162, label %299
    i32 409190563, label %314
    i32 51717758, label %315
    i32 -127766380, label %316
  ]

.backedge:                                        ; preds = %12, %316, %315, %314, %299, %297, %296, %295, %294, %291, %290, %288, %287, %277, %267, %265, %263, %261, %254, %251, %250, %247, %246, %236, %226, %225, %223, %221, %210, %200, %199, %197, %196, %172, %162, %158, %156, %155, %144, %134, %133, %123, %113, %111, %110, %100, %90, %88, %87, %85, %82, %80, %69, %59, %58, %46, %36, %34, %23, %13
  %.063.be = phi [10 x i32]* [ %.063, %12 ], [ %.063, %316 ], [ %.063, %315 ], [ %.063, %314 ], [ %.063, %299 ], [ %.063, %297 ], [ %.063, %296 ], [ %.063, %295 ], [ %.063, %294 ], [ %292, %291 ], [ %.063, %290 ], [ %.063, %288 ], [ %.063, %287 ], [ %.063, %277 ], [ %.063, %267 ], [ %.063, %265 ], [ %.063, %263 ], [ %.063, %261 ], [ %.063, %254 ], [ %.063, %251 ], [ %.063, %250 ], [ %.063, %247 ], [ %.063, %246 ], [ %.063, %236 ], [ %.063, %226 ], [ %.063, %225 ], [ %.063, %223 ], [ %.063, %221 ], [ %.063, %210 ], [ %.063, %200 ], [ %.063, %199 ], [ %.063, %197 ], [ %.063, %196 ], [ %.063, %172 ], [ %.063, %162 ], [ %.063, %158 ], [ %.063, %156 ], [ %.063, %155 ], [ %.063, %144 ], [ %.063, %134 ], [ %.063, %133 ], [ %.063, %123 ], [ %.063, %113 ], [ %112, %111 ], [ %.063, %110 ], [ %.063, %100 ], [ %.063, %90 ], [ %.063, %88 ], [ %.063, %87 ], [ %.063, %85 ], [ %.063, %82 ], [ %.063, %80 ], [ %.063, %69 ], [ %.063, %59 ], [ %.063, %58 ], [ %47, %46 ], [ %.063, %36 ], [ %.063, %34 ], [ %.063, %23 ], [ %.063, %13 ]
  %.061.be = phi [10 x i32]* [ %.061, %12 ], [ %.061, %316 ], [ %.061, %315 ], [ %.061, %314 ], [ %.061, %299 ], [ %.061, %297 ], [ %.061, %296 ], [ %.061, %295 ], [ %.061, %294 ], [ %293, %291 ], [ %.061, %290 ], [ %.061, %288 ], [ %.061, %287 ], [ %.061, %277 ], [ %.061, %267 ], [ %.061, %265 ], [ %.061, %263 ], [ %.061, %261 ], [ %.061, %254 ], [ %.061, %251 ], [ %.061, %250 ], [ %.061, %247 ], [ %.061, %246 ], [ %.061, %236 ], [ %.061, %226 ], [ %.061, %225 ], [ %.061, %223 ], [ %.061, %221 ], [ %.061, %210 ], [ %.061, %200 ], [ %.061, %199 ], [ %.061, %197 ], [ %.061, %196 ], [ %.061, %172 ], [ %.061, %162 ], [ %.061, %158 ], [ %.061, %156 ], [ %.061, %155 ], [ %.061, %144 ], [ %.061, %134 ], [ %.061, %133 ], [ %.061, %123 ], [ %.061, %113 ], [ %.061, %111 ], [ %.061, %110 ], [ %.061, %100 ], [ %.061, %90 ], [ %.061, %88 ], [ %.061, %87 ], [ %.061, %85 ], [ %.061, %82 ], [ %.061, %80 ], [ %.061, %69 ], [ %.061, %59 ], [ %.061, %58 ], [ %48, %46 ], [ %.061, %36 ], [ %.061, %34 ], [ %.061, %23 ], [ %.061, %13 ]
  %.059.be = phi i32* [ %.059, %12 ], [ %.059, %316 ], [ %.059, %315 ], [ %.059, %314 ], [ %.059, %299 ], [ %.059, %297 ], [ %.059, %296 ], [ %.059, %295 ], [ %.059, %294 ], [ %.059, %291 ], [ %.059, %290 ], [ %.059, %288 ], [ %.059, %287 ], [ %.059, %277 ], [ %.059, %267 ], [ %.059, %265 ], [ %.059, %263 ], [ %.059, %261 ], [ %.059, %254 ], [ %.059, %251 ], [ %.059, %250 ], [ %.059, %247 ], [ %.059, %246 ], [ %.059, %236 ], [ %.059, %226 ], [ %.059, %225 ], [ %.059, %223 ], [ %.059, %221 ], [ %.059, %210 ], [ %.059, %200 ], [ %.059, %199 ], [ %.059, %197 ], [ %.059, %196 ], [ %.059, %172 ], [ %.059, %162 ], [ %.059, %158 ], [ %.059, %156 ], [ %.059, %155 ], [ %.059, %144 ], [ %.059, %134 ], [ %.059, %133 ], [ %.059, %123 ], [ %.059, %113 ], [ %.059, %111 ], [ %.059, %110 ], [ %.059, %100 ], [ %.059, %90 ], [ %89, %88 ], [ %.059, %87 ], [ %.059, %85 ], [ %83, %82 ], [ %.059, %80 ], [ %.059, %69 ], [ %.059, %59 ], [ %.059, %58 ], [ %.059, %46 ], [ %.059, %36 ], [ %.059, %34 ], [ %.059, %23 ], [ %.059, %13 ]
  %.057.be = phi i32* [ %.057, %12 ], [ %.057, %316 ], [ %.057, %315 ], [ %.057, %314 ], [ %.057, %299 ], [ %.057, %297 ], [ %.057, %296 ], [ %.057, %295 ], [ %.057, %294 ], [ %.057, %291 ], [ %.057, %290 ], [ %.057, %288 ], [ %.057, %287 ], [ %.057, %277 ], [ %.057, %267 ], [ %.057, %265 ], [ %.057, %263 ], [ %.057, %261 ], [ %.057, %254 ], [ %.057, %251 ], [ %.057, %250 ], [ %.057, %247 ], [ %.057, %246 ], [ %.057, %236 ], [ %.057, %226 ], [ %.057, %225 ], [ %.057, %223 ], [ %.057, %221 ], [ %.057, %210 ], [ %.057, %200 ], [ %.057, %199 ], [ %.057, %197 ], [ %.057, %196 ], [ %.057, %172 ], [ %.057, %162 ], [ %.057, %158 ], [ %.057, %156 ], [ %.057, %155 ], [ %.057, %144 ], [ %.057, %134 ], [ %.057, %133 ], [ %.057, %123 ], [ %.057, %113 ], [ %.057, %111 ], [ %.057, %110 ], [ %.057, %100 ], [ %.057, %90 ], [ %.057, %88 ], [ %.057, %87 ], [ %.057, %85 ], [ %84, %82 ], [ %.057, %80 ], [ %.057, %69 ], [ %.057, %59 ], [ %.057, %58 ], [ %.057, %46 ], [ %.057, %36 ], [ %.057, %34 ], [ %.057, %23 ], [ %.057, %13 ]
  %.055.be = phi [3 x [10 x i32]]* [ %.055, %12 ], [ %.055, %316 ], [ %.055, %315 ], [ %.055, %314 ], [ %.055, %299 ], [ %298, %297 ], [ %.055, %296 ], [ %.055, %295 ], [ %.055, %294 ], [ %.055, %291 ], [ %.055, %290 ], [ %.055, %288 ], [ %.055, %287 ], [ %.055, %277 ], [ %.055, %267 ], [ %.055, %265 ], [ %.055, %263 ], [ %.055, %261 ], [ %.055, %254 ], [ %.055, %251 ], [ %.055, %250 ], [ %.055, %247 ], [ %.055, %246 ], [ %.055, %236 ], [ %.055, %226 ], [ %.055, %225 ], [ %.055, %223 ], [ %.055, %221 ], [ %.055, %210 ], [ %.055, %200 ], [ %.055, %199 ], [ %.055, %197 ], [ %.055, %196 ], [ %.055, %172 ], [ %.055, %162 ], [ %.055, %158 ], [ %.055, %156 ], [ %.055, %155 ], [ %145, %144 ], [ %.055, %134 ], [ %.055, %133 ], [ %.055, %123 ], [ %.055, %113 ], [ %.055, %111 ], [ %.055, %110 ], [ %.055, %100 ], [ %.055, %90 ], [ %.055, %88 ], [ %.055, %87 ], [ %.055, %85 ], [ %.055, %82 ], [ %.055, %80 ], [ %.055, %69 ], [ %.055, %59 ], [ %.055, %58 ], [ %.055, %46 ], [ %.055, %36 ], [ %.055, %34 ], [ %.055, %23 ], [ %.055, %13 ]
  %.053.be = phi i32 [ %.053, %12 ], [ %.053, %316 ], [ %.053, %315 ], [ %.053, %314 ], [ %.053, %299 ], [ %.053, %297 ], [ %.053, %296 ], [ %.053, %295 ], [ %.053, %294 ], [ %.053, %291 ], [ %.053, %290 ], [ %.053, %288 ], [ %.053, %287 ], [ %.053, %277 ], [ %.053, %267 ], [ %.053, %265 ], [ %.053, %263 ], [ %.053, %261 ], [ %.053, %254 ], [ %.053, %251 ], [ %.053, %250 ], [ %.053, %247 ], [ %.053, %246 ], [ %.053, %236 ], [ %.053, %226 ], [ %.053, %225 ], [ %.053, %223 ], [ %.053, %221 ], [ %.053, %210 ], [ %.053, %200 ], [ %.053, %199 ], [ %198, %197 ], [ %.053, %196 ], [ %.053, %172 ], [ %.053, %162 ], [ %.053, %158 ], [ 0, %156 ], [ %.053, %155 ], [ %.053, %144 ], [ %.053, %134 ], [ %.053, %133 ], [ %.053, %123 ], [ %.053, %113 ], [ %.053, %111 ], [ %.053, %110 ], [ %.053, %100 ], [ %.053, %90 ], [ %.053, %88 ], [ %.053, %87 ], [ %.053, %85 ], [ %.053, %82 ], [ %.053, %80 ], [ %.053, %69 ], [ %.053, %59 ], [ %.053, %58 ], [ %.053, %46 ], [ %.053, %36 ], [ %.053, %34 ], [ %.053, %23 ], [ %.053, %13 ]
  %.051.be = phi i32 [ %.051, %12 ], [ %.051, %316 ], [ %.051, %315 ], [ %.051, %314 ], [ %.051, %299 ], [ %.051, %297 ], [ %.051, %296 ], [ %.051, %295 ], [ %.051, %294 ], [ %.051, %291 ], [ %.051, %290 ], [ %.neg, %288 ], [ %.051, %287 ], [ %.051, %277 ], [ %.051, %267 ], [ %.051, %265 ], [ %.051, %263 ], [ %.051, %261 ], [ %.051, %254 ], [ %.051, %251 ], [ %.051, %250 ], [ %.051, %247 ], [ %.051, %246 ], [ %.051, %236 ], [ %.051, %226 ], [ %.051, %225 ], [ %.051, %223 ], [ %.051, %221 ], [ %.051, %210 ], [ %.051, %200 ], [ 0, %199 ], [ %.051, %197 ], [ %.051, %196 ], [ %.051, %172 ], [ %.051, %162 ], [ %.051, %158 ], [ %.051, %156 ], [ %.051, %155 ], [ %.051, %144 ], [ %.051, %134 ], [ %.051, %133 ], [ %.051, %123 ], [ %.051, %113 ], [ %.051, %111 ], [ %.051, %110 ], [ %.051, %100 ], [ %.051, %90 ], [ %.051, %88 ], [ %.051, %87 ], [ %.051, %85 ], [ %.051, %82 ], [ %.051, %80 ], [ %.051, %69 ], [ %.051, %59 ], [ %.051, %58 ], [ %.051, %46 ], [ %.051, %36 ], [ %.051, %34 ], [ %.051, %23 ], [ %.051, %13 ]
  %.049.be = phi i32 [ %.049, %12 ], [ %.049, %316 ], [ 0, %315 ], [ %.049, %314 ], [ %.049, %299 ], [ %.049, %297 ], [ %.049, %296 ], [ %.049, %295 ], [ %.049, %294 ], [ %.049, %291 ], [ %.049, %290 ], [ %.049, %288 ], [ %.049, %287 ], [ %.049, %277 ], [ %.049, %267 ], [ %266, %265 ], [ %.049, %263 ], [ %.049, %261 ], [ %.049, %254 ], [ %.049, %251 ], [ %.049, %250 ], [ %.049, %247 ], [ %.049, %246 ], [ 0, %236 ], [ %.049, %226 ], [ %.049, %225 ], [ %.049, %223 ], [ %.049, %221 ], [ %.049, %210 ], [ %.049, %200 ], [ %.049, %199 ], [ %.049, %197 ], [ %.049, %196 ], [ %.049, %172 ], [ %.049, %162 ], [ %.049, %158 ], [ %.049, %156 ], [ %.049, %155 ], [ %.049, %144 ], [ %.049, %134 ], [ %.049, %133 ], [ %.049, %123 ], [ %.049, %113 ], [ %.049, %111 ], [ %.049, %110 ], [ %.049, %100 ], [ %.049, %90 ], [ %.049, %88 ], [ %.049, %87 ], [ %.049, %85 ], [ %.049, %82 ], [ %.049, %80 ], [ %.049, %69 ], [ %.049, %59 ], [ %.049, %58 ], [ %.049, %46 ], [ %.049, %36 ], [ %.049, %34 ], [ %.049, %23 ], [ %.049, %13 ]
  %.047.be = phi i32 [ %.047, %12 ], [ %.047, %316 ], [ %.047, %315 ], [ %.047, %314 ], [ %.047, %299 ], [ %.047, %297 ], [ %.047, %296 ], [ %.047, %295 ], [ %.047, %294 ], [ %.047, %291 ], [ %.047, %290 ], [ %.047, %288 ], [ %.047, %287 ], [ %.047, %277 ], [ %.047, %267 ], [ %.047, %265 ], [ %.047, %263 ], [ %262, %261 ], [ %.047, %254 ], [ %.047, %251 ], [ 0, %250 ], [ %.047, %247 ], [ %.047, %246 ], [ %.047, %236 ], [ %.047, %226 ], [ %.047, %225 ], [ %.047, %223 ], [ %.047, %221 ], [ %.047, %210 ], [ %.047, %200 ], [ %.047, %199 ], [ %.047, %197 ], [ %.047, %196 ], [ %.047, %172 ], [ %.047, %162 ], [ %.047, %158 ], [ %.047, %156 ], [ %.047, %155 ], [ %.047, %144 ], [ %.047, %134 ], [ %.047, %133 ], [ %.047, %123 ], [ %.047, %113 ], [ %.047, %111 ], [ %.047, %110 ], [ %.047, %100 ], [ %.047, %90 ], [ %.047, %88 ], [ %.047, %87 ], [ %.047, %85 ], [ %.047, %82 ], [ %.047, %80 ], [ %.047, %69 ], [ %.047, %59 ], [ %.047, %58 ], [ %.047, %46 ], [ %.047, %36 ], [ %.047, %34 ], [ %.047, %23 ], [ %.047, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ 1991595615, %316 ], [ 112095223, %315 ], [ -1500601344, %314 ], [ 497664648, %299 ], [ 1286750968, %297 ], [ -435817907, %296 ], [ 876118815, %295 ], [ -1249763001, %294 ], [ 63130124, %291 ], [ 1626238374, %290 ], [ 1282146818, %288 ], [ 1305586640, %287 ], [ %286, %277 ], [ %276, %267 ], [ -439829440, %265 ], [ -36843800, %263 ], [ -868196271, %261 ], [ -1608888728, %254 ], [ %253, %251 ], [ -868196271, %250 ], [ %249, %247 ], [ -439829440, %246 ], [ %245, %236 ], [ %235, %226 ], [ -986780936, %225 ], [ %224, %223 ], [ %222, %221 ], [ %220, %210 ], [ %209, %200 ], [ 1282146818, %199 ], [ 121253112, %197 ], [ 1403977791, %196 ], [ %195, %172 ], [ %171, %162 ], [ %161, %158 ], [ 121253112, %156 ], [ 1899986157, %155 ], [ %154, %144 ], [ %143, %134 ], [ 573756939, %133 ], [ %132, %123 ], [ %122, %113 ], [ 2120158652, %111 ], [ -680269644, %110 ], [ %109, %100 ], [ %99, %90 ], [ -1430410682, %88 ], [ -93863830, %87 ], [ %86, %85 ], [ -1430410682, %82 ], [ %81, %80 ], [ %79, %69 ], [ %68, %59 ], [ 2120158652, %58 ], [ %57, %46 ], [ %45, %36 ], [ %35, %34 ], [ %33, %23 ], [ %22, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* @x, align 4
  %15 = load i32, i32* @y, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 1626238374, i32 -233221778
  br label %.backedge

23:                                               ; preds = %12
  %24 = icmp ne [3 x [10 x i32]]* %.055, %11
  store i1 %24, i1* %3, align 1
  %25 = load i32, i32* @x, align 4
  %26 = load i32, i32* @y, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 1238061543, i32 -233221778
  br label %.backedge

34:                                               ; preds = %12
  %.0..0..0.44 = load volatile i1, i1* %3, align 1
  %35 = select i1 %.0..0..0.44, i32 1197448946, i32 1701506954
  br label %.backedge

36:                                               ; preds = %12
  %37 = load i32, i32* @x, align 4
  %38 = load i32, i32* @y, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 63130124, i32 -1839146321
  br label %.backedge

46:                                               ; preds = %12
  %47 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %.055, i64 0, i64 0
  %48 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %.055, i64 0, i64 3
  %49 = load i32, i32* @x, align 4
  %50 = load i32, i32* @y, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 175649524, i32 -1839146321
  br label %.backedge

58:                                               ; preds = %12
  br label %.backedge

59:                                               ; preds = %12
  %60 = load i32, i32* @x, align 4
  %61 = load i32, i32* @y, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 -1249763001, i32 -1213212512
  br label %.backedge

69:                                               ; preds = %12
  %70 = icmp ne [10 x i32]* %.063, %.061
  store i1 %70, i1* %2, align 1
  %71 = load i32, i32* @x, align 4
  %72 = load i32, i32* @y, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 -1557327186, i32 -1213212512
  br label %.backedge

80:                                               ; preds = %12
  %.0..0..0.45 = load volatile i1, i1* %2, align 1
  %81 = select i1 %.0..0..0.45, i32 797029125, i32 94128228
  br label %.backedge

82:                                               ; preds = %12
  %83 = getelementptr inbounds [10 x i32], [10 x i32]* %.063, i64 0, i64 0
  %84 = getelementptr inbounds [10 x i32], [10 x i32]* %.063, i64 0, i64 10
  br label %.backedge

85:                                               ; preds = %12
  %.not65 = icmp eq i32* %.059, %.057
  %86 = select i1 %.not65, i32 1308432012, i32 307209300
  br label %.backedge

87:                                               ; preds = %12
  store i32 0, i32* %.059, align 4
  br label %.backedge

88:                                               ; preds = %12
  %89 = getelementptr inbounds i32, i32* %.059, i64 1
  br label %.backedge

90:                                               ; preds = %12
  %91 = load i32, i32* @x, align 4
  %92 = load i32, i32* @y, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 876118815, i32 800246947
  br label %.backedge

100:                                              ; preds = %12
  %101 = load i32, i32* @x, align 4
  %102 = load i32, i32* @y, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 1478291516, i32 800246947
  br label %.backedge

110:                                              ; preds = %12
  br label %.backedge

111:                                              ; preds = %12
  %112 = getelementptr inbounds [10 x i32], [10 x i32]* %.063, i64 1
  br label %.backedge

113:                                              ; preds = %12
  %114 = load i32, i32* @x, align 4
  %115 = load i32, i32* @y, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 -435817907, i32 -1981170601
  br label %.backedge

123:                                              ; preds = %12
  %124 = load i32, i32* @x, align 4
  %125 = load i32, i32* @y, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 -91107793, i32 -1981170601
  br label %.backedge

133:                                              ; preds = %12
  br label %.backedge

134:                                              ; preds = %12
  %135 = load i32, i32* @x, align 4
  %136 = load i32, i32* @y, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 1286750968, i32 994161295
  br label %.backedge

144:                                              ; preds = %12
  %145 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %.055, i64 1
  %146 = load i32, i32* @x, align 4
  %147 = load i32, i32* @y, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -2000135275, i32 994161295
  br label %.backedge

155:                                              ; preds = %12
  br label %.backedge

156:                                              ; preds = %12
  %157 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %4)
  br label %.backedge

158:                                              ; preds = %12
  %159 = load i32, i32* %4, align 4
  %160 = icmp ult i32 %.053, %159
  %161 = select i1 %160, i32 -263452718, i32 1543330786
  br label %.backedge

162:                                              ; preds = %12
  %163 = load i32, i32* @x, align 4
  %164 = load i32, i32* @y, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 497664648, i32 -439743162
  br label %.backedge

172:                                              ; preds = %12
  %173 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  %174 = load i32, i32* %8, align 4
  %175 = load i32, i32* %5, align 4
  %176 = add i32 %175, -1
  %177 = zext i32 %176 to i64
  %178 = load i32, i32* %6, align 4
  %179 = add i32 %178, -1
  %180 = zext i32 %179 to i64
  %181 = load i32, i32* %7, align 4
  %182 = add i32 %181, -1
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %9, i64 0, i64 %177, i64 %180, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = add i32 %185, %174
  store i32 %186, i32* %184, align 4
  %187 = load i32, i32* @x, align 4
  %188 = load i32, i32* @y, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1057359553, i32 -439743162
  br label %.backedge

196:                                              ; preds = %12
  br label %.backedge

197:                                              ; preds = %12
  %198 = add i32 %.053, 1
  br label %.backedge

199:                                              ; preds = %12
  br label %.backedge

200:                                              ; preds = %12
  %201 = load i32, i32* @x, align 4
  %202 = load i32, i32* @y, align 4
  %203 = add i32 %201, -1
  %204 = mul i32 %203, %201
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %207, %206
  %209 = select i1 %208, i32 -1500601344, i32 409190563
  br label %.backedge

210:                                              ; preds = %12
  %211 = icmp slt i32 %.051, 4
  store i1 %211, i1* %1, align 1
  %212 = load i32, i32* @x, align 4
  %213 = load i32, i32* @y, align 4
  %214 = add i32 %212, -1
  %215 = mul i32 %214, %212
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %218, %217
  %220 = select i1 %219, i32 -1916753396, i32 409190563
  br label %.backedge

221:                                              ; preds = %12
  %.0..0..0.46 = load volatile i1, i1* %1, align 1
  %222 = select i1 %.0..0..0.46, i32 -1446707819, i32 -1591897679
  br label %.backedge

223:                                              ; preds = %12
  %.not = icmp eq i32 %.051, 0
  %224 = select i1 %.not, i32 -986780936, i32 -515018104
  br label %.backedge

225:                                              ; preds = %12
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str, i64 0, i64 0))
  br label %.backedge

226:                                              ; preds = %12
  %227 = load i32, i32* @x, align 4
  %228 = load i32, i32* @y, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 112095223, i32 51717758
  br label %.backedge

236:                                              ; preds = %12
  %237 = load i32, i32* @x, align 4
  %238 = load i32, i32* @y, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -2134820462, i32 51717758
  br label %.backedge

246:                                              ; preds = %12
  br label %.backedge

247:                                              ; preds = %12
  %248 = icmp slt i32 %.049, 3
  %249 = select i1 %248, i32 -1625177992, i32 265713998
  br label %.backedge

250:                                              ; preds = %12
  br label %.backedge

251:                                              ; preds = %12
  %252 = icmp slt i32 %.047, 10
  %253 = select i1 %252, i32 245488541, i32 1712946721
  br label %.backedge

254:                                              ; preds = %12
  %255 = sext i32 %.051 to i64
  %256 = sext i32 %.049 to i64
  %257 = sext i32 %.047 to i64
  %258 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %9, i64 0, i64 %255, i64 %256, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %259)
  br label %.backedge

261:                                              ; preds = %12
  %262 = add i32 %.047, 1
  br label %.backedge

263:                                              ; preds = %12
  %264 = call i32 @putchar(i32 10)
  br label %.backedge

265:                                              ; preds = %12
  %266 = add i32 %.049, 1
  br label %.backedge

267:                                              ; preds = %12
  %268 = load i32, i32* @x, align 4
  %269 = load i32, i32* @y, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 1991595615, i32 -127766380
  br label %.backedge

277:                                              ; preds = %12
  %278 = load i32, i32* @x, align 4
  %279 = load i32, i32* @y, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 1820890498, i32 -127766380
  br label %.backedge

287:                                              ; preds = %12
  br label %.backedge

288:                                              ; preds = %12
  %.neg = add i32 %.051, 1
  br label %.backedge

289:                                              ; preds = %12
  ret i32 0

290:                                              ; preds = %12
  br label %.backedge

291:                                              ; preds = %12
  %292 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %.055, i64 0, i64 0
  %293 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %.055, i64 0, i64 3
  br label %.backedge

294:                                              ; preds = %12
  br label %.backedge

295:                                              ; preds = %12
  br label %.backedge

296:                                              ; preds = %12
  br label %.backedge

297:                                              ; preds = %12
  %298 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %.055, i64 1
  br label %.backedge

299:                                              ; preds = %12
  %300 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  %301 = load i32, i32* %8, align 4
  %302 = load i32, i32* %5, align 4
  %303 = add i32 %302, -1
  %304 = zext i32 %303 to i64
  %305 = load i32, i32* %6, align 4
  %306 = add i32 %305, -1
  %307 = zext i32 %306 to i64
  %308 = load i32, i32* %7, align 4
  %309 = add i32 %308, -1
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [4 x [3 x [10 x i32]]], [4 x [3 x [10 x i32]]]* %9, i64 0, i64 %304, i64 %307, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = add i32 %312, %301
  store i32 %313, i32* %311, align 4
  br label %.backedge

314:                                              ; preds = %12
  br label %.backedge

315:                                              ; preds = %12
  br label %.backedge

316:                                              ; preds = %12
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
