; ModuleID = 'build_ollvm/programs/p02409/s301918408.ll'
source_filename = "Project_CodeNet_C++1400/p02409/s301918408.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str.3 = private unnamed_addr constant [21 x i8] c"####################\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [3 x [10 x i32]], align 16
  %10 = alloca [3 x [10 x i32]], align 16
  %11 = alloca [3 x [10 x i32]], align 16
  %12 = alloca [3 x [10 x i32]], align 16
  %13 = bitcast [3 x [10 x i32]]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(120) %13, i8 0, i64 120, i1 false)
  %14 = bitcast [3 x [10 x i32]]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(120) %14, i8 0, i64 120, i1 false)
  %15 = bitcast [3 x [10 x i32]]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(120) %15, i8 0, i64 120, i1 false)
  %16 = bitcast [3 x [10 x i32]]* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(120) %16, i8 0, i64 120, i1 false)
  %17 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %4)
  br label %18

18:                                               ; preds = %.backedge, %0
  %.057 = phi i32 [ 0, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.045 = phi i32 [ undef, %0 ], [ %.045.be, %.backedge ]
  %.043 = phi i32 [ undef, %0 ], [ %.043.be, %.backedge ]
  %.041 = phi i32 [ undef, %0 ], [ %.041.be, %.backedge ]
  %.0 = phi i32 [ -69748149, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -69748149, label %19
    i32 2040947001, label %23
    i32 162136080, label %26
    i32 -859929163, label %29
    i32 232811305, label %32
    i32 785142812, label %35
    i32 1599232121, label %38
    i32 866010583, label %41
    i32 303337, label %52
    i32 -2077418132, label %63
    i32 -1371589830, label %74
    i32 -1123708305, label %85
    i32 -1332867371, label %86
    i32 2122275210, label %87
    i32 1750603232, label %88
    i32 -1793666476, label %89
    i32 -104597369, label %99
    i32 2144484801, label %110
    i32 60737350, label %112
    i32 -1000600835, label %113
    i32 -237604017, label %116
    i32 -590376042, label %122
    i32 366343574, label %124
    i32 -1664258372, label %125
    i32 872637096, label %127
    i32 1034905480, label %137
    i32 -1506428284, label %147
    i32 1541306318, label %148
    i32 1289945205, label %151
    i32 -1496250675, label %152
    i32 1324235584, label %155
    i32 -677915116, label %161
    i32 247201818, label %171
    i32 1430292480, label %181
    i32 1242761654, label %182
    i32 -1551634718, label %183
    i32 508619726, label %193
    i32 971616294, label %204
    i32 -1990386541, label %205
    i32 352882889, label %206
    i32 1999378777, label %209
    i32 1982911718, label %210
    i32 1311633271, label %220
    i32 484710198, label %231
    i32 770666426, label %233
    i32 -1915827163, label %243
    i32 1696233105, label %258
    i32 834061366, label %259
    i32 -780438505, label %261
    i32 351748472, label %262
    i32 946710244, label %272
    i32 -587289300, label %283
    i32 -1477061250, label %284
    i32 -234381674, label %285
    i32 1388384482, label %288
    i32 804936050, label %289
    i32 1572417017, label %292
    i32 953555515, label %298
    i32 -159203304, label %308
    i32 2029794221, label %319
    i32 -1910128673, label %320
    i32 -1839405500, label %321
    i32 1046344770, label %323
    i32 190969561, label %333
    i32 -878288779, label %343
    i32 1390826045, label %344
    i32 -1048561299, label %345
    i32 1710303558, label %346
    i32 -1485985208, label %348
    i32 219310148, label %350
    i32 -1086784035, label %351
    i32 -99463043, label %357
    i32 1239927302, label %359
    i32 1544066913, label %361
  ]

.backedge:                                        ; preds = %18, %361, %359, %357, %351, %350, %348, %346, %345, %344, %333, %323, %321, %320, %319, %308, %298, %292, %289, %288, %285, %284, %283, %272, %262, %261, %259, %258, %243, %233, %231, %220, %210, %209, %206, %205, %204, %193, %183, %182, %181, %171, %161, %155, %152, %151, %148, %147, %137, %127, %125, %124, %122, %116, %113, %112, %110, %99, %89, %88, %87, %86, %85, %74, %63, %52, %41, %38, %35, %32, %29, %26, %23, %19
  %.057.be = phi i32 [ %.057, %18 ], [ %.057, %361 ], [ %.057, %359 ], [ %.057, %357 ], [ %.057, %351 ], [ %.057, %350 ], [ %.057, %348 ], [ %.057, %346 ], [ %.057, %345 ], [ %.057, %344 ], [ %.057, %333 ], [ %.057, %323 ], [ %.057, %321 ], [ %.057, %320 ], [ %.057, %319 ], [ %.057, %308 ], [ %.057, %298 ], [ %.057, %292 ], [ %.057, %289 ], [ %.057, %288 ], [ %.057, %285 ], [ %.057, %284 ], [ %.057, %283 ], [ %.057, %272 ], [ %.057, %262 ], [ %.057, %261 ], [ %.057, %259 ], [ %.057, %258 ], [ %.057, %243 ], [ %.057, %233 ], [ %.057, %231 ], [ %.057, %220 ], [ %.057, %210 ], [ %.057, %209 ], [ %.057, %206 ], [ %.057, %205 ], [ %.057, %204 ], [ %.057, %193 ], [ %.057, %183 ], [ %.057, %182 ], [ %.057, %181 ], [ %.057, %171 ], [ %.057, %161 ], [ %.057, %155 ], [ %.057, %152 ], [ %.057, %151 ], [ %.057, %148 ], [ %.057, %147 ], [ %.057, %137 ], [ %.057, %127 ], [ %.057, %125 ], [ %.057, %124 ], [ %.057, %122 ], [ %.057, %116 ], [ %.057, %113 ], [ %.057, %112 ], [ %.057, %110 ], [ %.057, %99 ], [ %.057, %89 ], [ %.057, %88 ], [ %.neg65, %87 ], [ %.057, %86 ], [ %.057, %85 ], [ %.057, %74 ], [ %.057, %63 ], [ %.057, %52 ], [ %.057, %41 ], [ %.057, %38 ], [ %.057, %35 ], [ %.057, %32 ], [ %.057, %29 ], [ %.057, %26 ], [ %.057, %23 ], [ %.057, %19 ]
  %.055.be = phi i32 [ %.055, %18 ], [ %.055, %361 ], [ %.055, %359 ], [ %.055, %357 ], [ %.055, %351 ], [ %.055, %350 ], [ %.055, %348 ], [ %.055, %346 ], [ %.055, %345 ], [ %.055, %344 ], [ %.055, %333 ], [ %.055, %323 ], [ %.055, %321 ], [ %.055, %320 ], [ %.055, %319 ], [ %.055, %308 ], [ %.055, %298 ], [ %.055, %292 ], [ %.055, %289 ], [ %.055, %288 ], [ %.055, %285 ], [ %.055, %284 ], [ %.055, %283 ], [ %.055, %272 ], [ %.055, %262 ], [ %.055, %261 ], [ %.055, %259 ], [ %.055, %258 ], [ %.055, %243 ], [ %.055, %233 ], [ %.055, %231 ], [ %.055, %220 ], [ %.055, %210 ], [ %.055, %209 ], [ %.055, %206 ], [ %.055, %205 ], [ %.055, %204 ], [ %.055, %193 ], [ %.055, %183 ], [ %.055, %182 ], [ %.055, %181 ], [ %.055, %171 ], [ %.055, %161 ], [ %.055, %155 ], [ %.055, %152 ], [ %.055, %151 ], [ %.055, %148 ], [ %.055, %147 ], [ %.055, %137 ], [ %.055, %127 ], [ %126, %125 ], [ %.055, %124 ], [ %.055, %122 ], [ %.055, %116 ], [ %.055, %113 ], [ %.055, %112 ], [ %.055, %110 ], [ %.055, %99 ], [ %.055, %89 ], [ 0, %88 ], [ %.055, %87 ], [ %.055, %86 ], [ %.055, %85 ], [ %.055, %74 ], [ %.055, %63 ], [ %.055, %52 ], [ %.055, %41 ], [ %.055, %38 ], [ %.055, %35 ], [ %.055, %32 ], [ %.055, %29 ], [ %.055, %26 ], [ %.055, %23 ], [ %.055, %19 ]
  %.053.be = phi i32 [ %.053, %18 ], [ %.053, %361 ], [ %.053, %359 ], [ %.053, %357 ], [ %.053, %351 ], [ %.053, %350 ], [ %.053, %348 ], [ %.053, %346 ], [ %.053, %345 ], [ %.053, %344 ], [ %.053, %333 ], [ %.053, %323 ], [ %.053, %321 ], [ %.053, %320 ], [ %.053, %319 ], [ %.053, %308 ], [ %.053, %298 ], [ %.053, %292 ], [ %.053, %289 ], [ %.053, %288 ], [ %.053, %285 ], [ %.053, %284 ], [ %.053, %283 ], [ %.053, %272 ], [ %.053, %262 ], [ %.053, %261 ], [ %.053, %259 ], [ %.053, %258 ], [ %.053, %243 ], [ %.053, %233 ], [ %.053, %231 ], [ %.053, %220 ], [ %.053, %210 ], [ %.053, %209 ], [ %.053, %206 ], [ %.053, %205 ], [ %.053, %204 ], [ %.053, %193 ], [ %.053, %183 ], [ %.053, %182 ], [ %.053, %181 ], [ %.053, %171 ], [ %.053, %161 ], [ %.053, %155 ], [ %.053, %152 ], [ %.053, %151 ], [ %.053, %148 ], [ %.053, %147 ], [ %.053, %137 ], [ %.053, %127 ], [ %.053, %125 ], [ %.053, %124 ], [ %123, %122 ], [ %.053, %116 ], [ %.053, %113 ], [ 0, %112 ], [ %.053, %110 ], [ %.053, %99 ], [ %.053, %89 ], [ %.053, %88 ], [ %.053, %87 ], [ %.053, %86 ], [ %.053, %85 ], [ %.053, %74 ], [ %.053, %63 ], [ %.053, %52 ], [ %.053, %41 ], [ %.053, %38 ], [ %.053, %35 ], [ %.053, %32 ], [ %.053, %29 ], [ %.053, %26 ], [ %.053, %23 ], [ %.053, %19 ]
  %.051.be = phi i32 [ %.051, %18 ], [ %.051, %361 ], [ %.051, %359 ], [ %.051, %357 ], [ %.051, %351 ], [ %.051, %350 ], [ %349, %348 ], [ %.051, %346 ], [ 0, %345 ], [ %.051, %344 ], [ %.051, %333 ], [ %.051, %323 ], [ %.051, %321 ], [ %.051, %320 ], [ %.051, %319 ], [ %.051, %308 ], [ %.051, %298 ], [ %.051, %292 ], [ %.051, %289 ], [ %.051, %288 ], [ %.051, %285 ], [ %.051, %284 ], [ %.051, %283 ], [ %.051, %272 ], [ %.051, %262 ], [ %.051, %261 ], [ %.051, %259 ], [ %.051, %258 ], [ %.051, %243 ], [ %.051, %233 ], [ %.051, %231 ], [ %.051, %220 ], [ %.051, %210 ], [ %.051, %209 ], [ %.051, %206 ], [ %.051, %205 ], [ %.051, %204 ], [ %194, %193 ], [ %.051, %183 ], [ %.051, %182 ], [ %.051, %181 ], [ %.051, %171 ], [ %.051, %161 ], [ %.051, %155 ], [ %.051, %152 ], [ %.051, %151 ], [ %.051, %148 ], [ %.051, %147 ], [ 0, %137 ], [ %.051, %127 ], [ %.051, %125 ], [ %.051, %124 ], [ %.051, %122 ], [ %.051, %116 ], [ %.051, %113 ], [ %.051, %112 ], [ %.051, %110 ], [ %.051, %99 ], [ %.051, %89 ], [ %.051, %88 ], [ %.051, %87 ], [ %.051, %86 ], [ %.051, %85 ], [ %.051, %74 ], [ %.051, %63 ], [ %.051, %52 ], [ %.051, %41 ], [ %.051, %38 ], [ %.051, %35 ], [ %.051, %32 ], [ %.051, %29 ], [ %.051, %26 ], [ %.051, %23 ], [ %.051, %19 ]
  %.049.be = phi i32 [ %.049, %18 ], [ %.049, %361 ], [ %.049, %359 ], [ %.049, %357 ], [ %.049, %351 ], [ %.049, %350 ], [ %.049, %348 ], [ %347, %346 ], [ %.049, %345 ], [ %.049, %344 ], [ %.049, %333 ], [ %.049, %323 ], [ %.049, %321 ], [ %.049, %320 ], [ %.049, %319 ], [ %.049, %308 ], [ %.049, %298 ], [ %.049, %292 ], [ %.049, %289 ], [ %.049, %288 ], [ %.049, %285 ], [ %.049, %284 ], [ %.049, %283 ], [ %.049, %272 ], [ %.049, %262 ], [ %.049, %261 ], [ %.049, %259 ], [ %.049, %258 ], [ %.049, %243 ], [ %.049, %233 ], [ %.049, %231 ], [ %.049, %220 ], [ %.049, %210 ], [ %.049, %209 ], [ %.049, %206 ], [ %.049, %205 ], [ %.049, %204 ], [ %.049, %193 ], [ %.049, %183 ], [ %.049, %182 ], [ %.049, %181 ], [ %.neg, %171 ], [ %.049, %161 ], [ %.049, %155 ], [ %.049, %152 ], [ 0, %151 ], [ %.049, %148 ], [ %.049, %147 ], [ %.049, %137 ], [ %.049, %127 ], [ %.049, %125 ], [ %.049, %124 ], [ %.049, %122 ], [ %.049, %116 ], [ %.049, %113 ], [ %.049, %112 ], [ %.049, %110 ], [ %.049, %99 ], [ %.049, %89 ], [ %.049, %88 ], [ %.049, %87 ], [ %.049, %86 ], [ %.049, %85 ], [ %.049, %74 ], [ %.049, %63 ], [ %.049, %52 ], [ %.049, %41 ], [ %.049, %38 ], [ %.049, %35 ], [ %.049, %32 ], [ %.049, %29 ], [ %.049, %26 ], [ %.049, %23 ], [ %.049, %19 ]
  %.047.be = phi i32 [ %.047, %18 ], [ %.047, %361 ], [ %.047, %359 ], [ %358, %357 ], [ %.047, %351 ], [ %.047, %350 ], [ %.047, %348 ], [ %.047, %346 ], [ %.047, %345 ], [ %.047, %344 ], [ %.047, %333 ], [ %.047, %323 ], [ %.047, %321 ], [ %.047, %320 ], [ %.047, %319 ], [ %.047, %308 ], [ %.047, %298 ], [ %.047, %292 ], [ %.047, %289 ], [ %.047, %288 ], [ %.047, %285 ], [ %.047, %284 ], [ %.047, %283 ], [ %273, %272 ], [ %.047, %262 ], [ %.047, %261 ], [ %.047, %259 ], [ %.047, %258 ], [ %.047, %243 ], [ %.047, %233 ], [ %.047, %231 ], [ %.047, %220 ], [ %.047, %210 ], [ %.047, %209 ], [ %.047, %206 ], [ 0, %205 ], [ %.047, %204 ], [ %.047, %193 ], [ %.047, %183 ], [ %.047, %182 ], [ %.047, %181 ], [ %.047, %171 ], [ %.047, %161 ], [ %.047, %155 ], [ %.047, %152 ], [ %.047, %151 ], [ %.047, %148 ], [ %.047, %147 ], [ %.047, %137 ], [ %.047, %127 ], [ %.047, %125 ], [ %.047, %124 ], [ %.047, %122 ], [ %.047, %116 ], [ %.047, %113 ], [ %.047, %112 ], [ %.047, %110 ], [ %.047, %99 ], [ %.047, %89 ], [ %.047, %88 ], [ %.047, %87 ], [ %.047, %86 ], [ %.047, %85 ], [ %.047, %74 ], [ %.047, %63 ], [ %.047, %52 ], [ %.047, %41 ], [ %.047, %38 ], [ %.047, %35 ], [ %.047, %32 ], [ %.047, %29 ], [ %.047, %26 ], [ %.047, %23 ], [ %.047, %19 ]
  %.045.be = phi i32 [ %.045, %18 ], [ %.045, %361 ], [ %.045, %359 ], [ %.045, %357 ], [ %.045, %351 ], [ %.045, %350 ], [ %.045, %348 ], [ %.045, %346 ], [ %.045, %345 ], [ %.045, %344 ], [ %.045, %333 ], [ %.045, %323 ], [ %.045, %321 ], [ %.045, %320 ], [ %.045, %319 ], [ %.045, %308 ], [ %.045, %298 ], [ %.045, %292 ], [ %.045, %289 ], [ %.045, %288 ], [ %.045, %285 ], [ %.045, %284 ], [ %.045, %283 ], [ %.045, %272 ], [ %.045, %262 ], [ %.045, %261 ], [ %260, %259 ], [ %.045, %258 ], [ %.045, %243 ], [ %.045, %233 ], [ %.045, %231 ], [ %.045, %220 ], [ %.045, %210 ], [ 0, %209 ], [ %.045, %206 ], [ %.045, %205 ], [ %.045, %204 ], [ %.045, %193 ], [ %.045, %183 ], [ %.045, %182 ], [ %.045, %181 ], [ %.045, %171 ], [ %.045, %161 ], [ %.045, %155 ], [ %.045, %152 ], [ %.045, %151 ], [ %.045, %148 ], [ %.045, %147 ], [ %.045, %137 ], [ %.045, %127 ], [ %.045, %125 ], [ %.045, %124 ], [ %.045, %122 ], [ %.045, %116 ], [ %.045, %113 ], [ %.045, %112 ], [ %.045, %110 ], [ %.045, %99 ], [ %.045, %89 ], [ %.045, %88 ], [ %.045, %87 ], [ %.045, %86 ], [ %.045, %85 ], [ %.045, %74 ], [ %.045, %63 ], [ %.045, %52 ], [ %.045, %41 ], [ %.045, %38 ], [ %.045, %35 ], [ %.045, %32 ], [ %.045, %29 ], [ %.045, %26 ], [ %.045, %23 ], [ %.045, %19 ]
  %.043.be = phi i32 [ %.043, %18 ], [ %.043, %361 ], [ %.043, %359 ], [ %.043, %357 ], [ %.043, %351 ], [ %.043, %350 ], [ %.043, %348 ], [ %.043, %346 ], [ %.043, %345 ], [ %.043, %344 ], [ %.043, %333 ], [ %.043, %323 ], [ %322, %321 ], [ %.043, %320 ], [ %.043, %319 ], [ %.043, %308 ], [ %.043, %298 ], [ %.043, %292 ], [ %.043, %289 ], [ %.043, %288 ], [ %.043, %285 ], [ 0, %284 ], [ %.043, %283 ], [ %.043, %272 ], [ %.043, %262 ], [ %.043, %261 ], [ %.043, %259 ], [ %.043, %258 ], [ %.043, %243 ], [ %.043, %233 ], [ %.043, %231 ], [ %.043, %220 ], [ %.043, %210 ], [ %.043, %209 ], [ %.043, %206 ], [ %.043, %205 ], [ %.043, %204 ], [ %.043, %193 ], [ %.043, %183 ], [ %.043, %182 ], [ %.043, %181 ], [ %.043, %171 ], [ %.043, %161 ], [ %.043, %155 ], [ %.043, %152 ], [ %.043, %151 ], [ %.043, %148 ], [ %.043, %147 ], [ %.043, %137 ], [ %.043, %127 ], [ %.043, %125 ], [ %.043, %124 ], [ %.043, %122 ], [ %.043, %116 ], [ %.043, %113 ], [ %.043, %112 ], [ %.043, %110 ], [ %.043, %99 ], [ %.043, %89 ], [ %.043, %88 ], [ %.043, %87 ], [ %.043, %86 ], [ %.043, %85 ], [ %.043, %74 ], [ %.043, %63 ], [ %.043, %52 ], [ %.043, %41 ], [ %.043, %38 ], [ %.043, %35 ], [ %.043, %32 ], [ %.043, %29 ], [ %.043, %26 ], [ %.043, %23 ], [ %.043, %19 ]
  %.041.be = phi i32 [ %.041, %18 ], [ %.041, %361 ], [ %360, %359 ], [ %.041, %357 ], [ %.041, %351 ], [ %.041, %350 ], [ %.041, %348 ], [ %.041, %346 ], [ %.041, %345 ], [ %.041, %344 ], [ %.041, %333 ], [ %.041, %323 ], [ %.041, %321 ], [ %.041, %320 ], [ %.041, %319 ], [ %309, %308 ], [ %.041, %298 ], [ %.041, %292 ], [ %.041, %289 ], [ 0, %288 ], [ %.041, %285 ], [ %.041, %284 ], [ %.041, %283 ], [ %.041, %272 ], [ %.041, %262 ], [ %.041, %261 ], [ %.041, %259 ], [ %.041, %258 ], [ %.041, %243 ], [ %.041, %233 ], [ %.041, %231 ], [ %.041, %220 ], [ %.041, %210 ], [ %.041, %209 ], [ %.041, %206 ], [ %.041, %205 ], [ %.041, %204 ], [ %.041, %193 ], [ %.041, %183 ], [ %.041, %182 ], [ %.041, %181 ], [ %.041, %171 ], [ %.041, %161 ], [ %.041, %155 ], [ %.041, %152 ], [ %.041, %151 ], [ %.041, %148 ], [ %.041, %147 ], [ %.041, %137 ], [ %.041, %127 ], [ %.041, %125 ], [ %.041, %124 ], [ %.041, %122 ], [ %.041, %116 ], [ %.041, %113 ], [ %.041, %112 ], [ %.041, %110 ], [ %.041, %99 ], [ %.041, %89 ], [ %.041, %88 ], [ %.041, %87 ], [ %.041, %86 ], [ %.041, %85 ], [ %.041, %74 ], [ %.041, %63 ], [ %.041, %52 ], [ %.041, %41 ], [ %.041, %38 ], [ %.041, %35 ], [ %.041, %32 ], [ %.041, %29 ], [ %.041, %26 ], [ %.041, %23 ], [ %.041, %19 ]
  %.0.be = phi i32 [ %.0, %18 ], [ 190969561, %361 ], [ -159203304, %359 ], [ 946710244, %357 ], [ -1915827163, %351 ], [ 1311633271, %350 ], [ 508619726, %348 ], [ 247201818, %346 ], [ 1034905480, %345 ], [ -104597369, %344 ], [ %342, %333 ], [ %332, %323 ], [ -234381674, %321 ], [ -1839405500, %320 ], [ 804936050, %319 ], [ %318, %308 ], [ %307, %298 ], [ 953555515, %292 ], [ %291, %289 ], [ 804936050, %288 ], [ %287, %285 ], [ -234381674, %284 ], [ 352882889, %283 ], [ %282, %272 ], [ %271, %262 ], [ 351748472, %261 ], [ 1982911718, %259 ], [ 834061366, %258 ], [ %257, %243 ], [ %242, %233 ], [ %232, %231 ], [ %230, %220 ], [ %219, %210 ], [ 1982911718, %209 ], [ %208, %206 ], [ 352882889, %205 ], [ 1541306318, %204 ], [ %203, %193 ], [ %192, %183 ], [ -1551634718, %182 ], [ -1496250675, %181 ], [ %180, %171 ], [ %170, %161 ], [ -677915116, %155 ], [ %154, %152 ], [ -1496250675, %151 ], [ %150, %148 ], [ 1541306318, %147 ], [ %146, %137 ], [ %136, %127 ], [ -1793666476, %125 ], [ -1664258372, %124 ], [ -1000600835, %122 ], [ -590376042, %116 ], [ %115, %113 ], [ -1000600835, %112 ], [ %111, %110 ], [ %109, %99 ], [ %98, %89 ], [ -1793666476, %88 ], [ -69748149, %87 ], [ 2122275210, %86 ], [ -1332867371, %85 ], [ -1332867371, %74 ], [ -1332867371, %63 ], [ -1332867371, %52 ], [ -1332867371, %41 ], [ %40, %38 ], [ %37, %35 ], [ %34, %32 ], [ %31, %29 ], [ %28, %26 ], [ 162136080, %23 ], [ %22, %19 ]
  br label %18

19:                                               ; preds = %18
  %20 = load i32, i32* %4, align 4
  %21 = icmp slt i32 %.057, %20
  %22 = select i1 %21, i32 2040947001, i32 1750603232
  br label %.backedge

23:                                               ; preds = %18
  %24 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  %25 = load i32, i32* %5, align 4
  store i32 %25, i32* %3, align 4
  br label %.backedge

26:                                               ; preds = %18
  %.0..0..0. = load volatile i32, i32* %3, align 4
  %27 = icmp slt i32 %.0..0..0., 3
  %28 = select i1 %27, i32 785142812, i32 -859929163
  br label %.backedge

29:                                               ; preds = %18
  %.0..0..0.35 = load volatile i32, i32* %3, align 4
  %30 = icmp slt i32 %.0..0..0.35, 4
  %31 = select i1 %30, i32 -2077418132, i32 232811305
  br label %.backedge

32:                                               ; preds = %18
  %.0..0..0.36 = load volatile i32, i32* %3, align 4
  %33 = icmp eq i32 %.0..0..0.36, 4
  %34 = select i1 %33, i32 -1371589830, i32 -1123708305
  br label %.backedge

35:                                               ; preds = %18
  %.0..0..0.37 = load volatile i32, i32* %3, align 4
  %36 = icmp slt i32 %.0..0..0.37, 2
  %37 = select i1 %36, i32 1599232121, i32 303337
  br label %.backedge

38:                                               ; preds = %18
  %.0..0..0.38 = load volatile i32, i32* %3, align 4
  %39 = icmp eq i32 %.0..0..0.38, 1
  %40 = select i1 %39, i32 866010583, i32 -1123708305
  br label %.backedge

41:                                               ; preds = %18
  %42 = load i32, i32* %6, align 4
  %43 = add i32 %42, -1
  %44 = sext i32 %43 to i64
  %45 = load i32, i32* %7, align 4
  %46 = add i32 %45, -1
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %9, i64 0, i64 %44, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = load i32, i32* %8, align 4
  %51 = add i32 %50, %49
  store i32 %51, i32* %48, align 4
  br label %.backedge

52:                                               ; preds = %18
  %53 = load i32, i32* %6, align 4
  %54 = add i32 %53, -1
  %55 = sext i32 %54 to i64
  %56 = load i32, i32* %7, align 4
  %57 = add i32 %56, -1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %10, i64 0, i64 %55, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = load i32, i32* %8, align 4
  %62 = add i32 %61, %60
  store i32 %62, i32* %59, align 4
  br label %.backedge

63:                                               ; preds = %18
  %64 = load i32, i32* %6, align 4
  %65 = add i32 %64, -1
  %66 = sext i32 %65 to i64
  %67 = load i32, i32* %7, align 4
  %68 = add i32 %67, -1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %11, i64 0, i64 %66, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = load i32, i32* %8, align 4
  %73 = add i32 %72, %71
  store i32 %73, i32* %70, align 4
  br label %.backedge

74:                                               ; preds = %18
  %75 = load i32, i32* %6, align 4
  %76 = add i32 %75, -1
  %77 = sext i32 %76 to i64
  %78 = load i32, i32* %7, align 4
  %79 = add i32 %78, -1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %12, i64 0, i64 %77, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* %8, align 4
  %84 = add i32 %83, %82
  store i32 %84, i32* %81, align 4
  br label %.backedge

85:                                               ; preds = %18
  br label %.backedge

86:                                               ; preds = %18
  br label %.backedge

87:                                               ; preds = %18
  %.neg65 = add i32 %.057, 1
  br label %.backedge

88:                                               ; preds = %18
  br label %.backedge

89:                                               ; preds = %18
  %90 = load i32, i32* @x, align 4
  %91 = load i32, i32* @y, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 -104597369, i32 1390826045
  br label %.backedge

99:                                               ; preds = %18
  %100 = icmp slt i32 %.055, 3
  store i1 %100, i1* %2, align 1
  %101 = load i32, i32* @x, align 4
  %102 = load i32, i32* @y, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 2144484801, i32 1390826045
  br label %.backedge

110:                                              ; preds = %18
  %.0..0..0.39 = load volatile i1, i1* %2, align 1
  %111 = select i1 %.0..0..0.39, i32 60737350, i32 872637096
  br label %.backedge

112:                                              ; preds = %18
  br label %.backedge

113:                                              ; preds = %18
  %114 = icmp slt i32 %.053, 10
  %115 = select i1 %114, i32 -237604017, i32 366343574
  br label %.backedge

116:                                              ; preds = %18
  %117 = sext i32 %.055 to i64
  %118 = sext i32 %.053 to i64
  %119 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %9, i64 0, i64 %117, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %120)
  br label %.backedge

122:                                              ; preds = %18
  %123 = add i32 %.053, 1
  br label %.backedge

124:                                              ; preds = %18
  %putchar64 = call i32 @putchar(i32 10)
  br label %.backedge

125:                                              ; preds = %18
  %126 = add i32 %.055, 1
  br label %.backedge

127:                                              ; preds = %18
  %128 = load i32, i32* @x, align 4
  %129 = load i32, i32* @y, align 4
  %130 = add i32 %128, -1
  %131 = mul i32 %130, %128
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %134, %133
  %136 = select i1 %135, i32 1034905480, i32 -1048561299
  br label %.backedge

137:                                              ; preds = %18
  %puts63 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str.3, i64 0, i64 0))
  %138 = load i32, i32* @x, align 4
  %139 = load i32, i32* @y, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 -1506428284, i32 -1048561299
  br label %.backedge

147:                                              ; preds = %18
  br label %.backedge

148:                                              ; preds = %18
  %149 = icmp slt i32 %.051, 3
  %150 = select i1 %149, i32 1289945205, i32 -1990386541
  br label %.backedge

151:                                              ; preds = %18
  br label %.backedge

152:                                              ; preds = %18
  %153 = icmp slt i32 %.049, 10
  %154 = select i1 %153, i32 1324235584, i32 1242761654
  br label %.backedge

155:                                              ; preds = %18
  %156 = sext i32 %.051 to i64
  %157 = sext i32 %.049 to i64
  %158 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %10, i64 0, i64 %156, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %159)
  br label %.backedge

161:                                              ; preds = %18
  %162 = load i32, i32* @x, align 4
  %163 = load i32, i32* @y, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 247201818, i32 1710303558
  br label %.backedge

171:                                              ; preds = %18
  %.neg = add i32 %.049, 1
  %172 = load i32, i32* @x, align 4
  %173 = load i32, i32* @y, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 1430292480, i32 1710303558
  br label %.backedge

181:                                              ; preds = %18
  br label %.backedge

182:                                              ; preds = %18
  %putchar62 = call i32 @putchar(i32 10)
  br label %.backedge

183:                                              ; preds = %18
  %184 = load i32, i32* @x, align 4
  %185 = load i32, i32* @y, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 508619726, i32 -1485985208
  br label %.backedge

193:                                              ; preds = %18
  %194 = add i32 %.051, 1
  %195 = load i32, i32* @x, align 4
  %196 = load i32, i32* @y, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 971616294, i32 -1485985208
  br label %.backedge

204:                                              ; preds = %18
  br label %.backedge

205:                                              ; preds = %18
  %puts61 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

206:                                              ; preds = %18
  %207 = icmp slt i32 %.047, 3
  %208 = select i1 %207, i32 1999378777, i32 -1477061250
  br label %.backedge

209:                                              ; preds = %18
  br label %.backedge

210:                                              ; preds = %18
  %211 = load i32, i32* @x, align 4
  %212 = load i32, i32* @y, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 1311633271, i32 219310148
  br label %.backedge

220:                                              ; preds = %18
  %221 = icmp slt i32 %.045, 10
  store i1 %221, i1* %1, align 1
  %222 = load i32, i32* @x, align 4
  %223 = load i32, i32* @y, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 484710198, i32 219310148
  br label %.backedge

231:                                              ; preds = %18
  %.0..0..0.40 = load volatile i1, i1* %1, align 1
  %232 = select i1 %.0..0..0.40, i32 770666426, i32 -780438505
  br label %.backedge

233:                                              ; preds = %18
  %234 = load i32, i32* @x, align 4
  %235 = load i32, i32* @y, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 -1915827163, i32 -1086784035
  br label %.backedge

243:                                              ; preds = %18
  %244 = sext i32 %.047 to i64
  %245 = sext i32 %.045 to i64
  %246 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %11, i64 0, i64 %244, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %247)
  %249 = load i32, i32* @x, align 4
  %250 = load i32, i32* @y, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 1696233105, i32 -1086784035
  br label %.backedge

258:                                              ; preds = %18
  br label %.backedge

259:                                              ; preds = %18
  %260 = add i32 %.045, 1
  br label %.backedge

261:                                              ; preds = %18
  %putchar60 = call i32 @putchar(i32 10)
  br label %.backedge

262:                                              ; preds = %18
  %263 = load i32, i32* @x, align 4
  %264 = load i32, i32* @y, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 946710244, i32 -99463043
  br label %.backedge

272:                                              ; preds = %18
  %273 = add i32 %.047, 1
  %274 = load i32, i32* @x, align 4
  %275 = load i32, i32* @y, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 -587289300, i32 -99463043
  br label %.backedge

283:                                              ; preds = %18
  br label %.backedge

284:                                              ; preds = %18
  %puts59 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

285:                                              ; preds = %18
  %286 = icmp slt i32 %.043, 3
  %287 = select i1 %286, i32 1388384482, i32 1046344770
  br label %.backedge

288:                                              ; preds = %18
  br label %.backedge

289:                                              ; preds = %18
  %290 = icmp slt i32 %.041, 10
  %291 = select i1 %290, i32 1572417017, i32 -1910128673
  br label %.backedge

292:                                              ; preds = %18
  %293 = sext i32 %.043 to i64
  %294 = sext i32 %.041 to i64
  %295 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %12, i64 0, i64 %293, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %296)
  br label %.backedge

298:                                              ; preds = %18
  %299 = load i32, i32* @x, align 4
  %300 = load i32, i32* @y, align 4
  %301 = add i32 %299, -1
  %302 = mul i32 %301, %299
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %305, %304
  %307 = select i1 %306, i32 -159203304, i32 1239927302
  br label %.backedge

308:                                              ; preds = %18
  %309 = add i32 %.041, 1
  %310 = load i32, i32* @x, align 4
  %311 = load i32, i32* @y, align 4
  %312 = add i32 %310, -1
  %313 = mul i32 %312, %310
  %314 = and i32 %313, 1
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %316, %315
  %318 = select i1 %317, i32 2029794221, i32 1239927302
  br label %.backedge

319:                                              ; preds = %18
  br label %.backedge

320:                                              ; preds = %18
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

321:                                              ; preds = %18
  %322 = add i32 %.043, 1
  br label %.backedge

323:                                              ; preds = %18
  %324 = load i32, i32* @x, align 4
  %325 = load i32, i32* @y, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 190969561, i32 1544066913
  br label %.backedge

333:                                              ; preds = %18
  %334 = load i32, i32* @x, align 4
  %335 = load i32, i32* @y, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 -878288779, i32 1544066913
  br label %.backedge

343:                                              ; preds = %18
  ret i32 0

344:                                              ; preds = %18
  br label %.backedge

345:                                              ; preds = %18
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

346:                                              ; preds = %18
  %347 = add i32 %.049, 1
  br label %.backedge

348:                                              ; preds = %18
  %349 = add i32 %.051, 1
  br label %.backedge

350:                                              ; preds = %18
  br label %.backedge

351:                                              ; preds = %18
  %352 = sext i32 %.047 to i64
  %353 = sext i32 %.045 to i64
  %354 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %11, i64 0, i64 %352, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %355)
  br label %.backedge

357:                                              ; preds = %18
  %358 = add i32 %.047, 1
  br label %.backedge

359:                                              ; preds = %18
  %360 = add i32 %.041, 1
  br label %.backedge

361:                                              ; preds = %18
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
