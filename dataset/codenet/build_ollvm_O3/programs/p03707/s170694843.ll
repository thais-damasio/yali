; ModuleID = 'build_ollvm/programs/p03707/s170694843.ll'
source_filename = "Project_CodeNet_C++1400/p03707/s170694843.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZZ4mainE1c = internal global [2010 x i8] zeroinitializer, align 16
@_ZZ4mainE1s = internal unnamed_addr global [2010 x [2010 x i32]] zeroinitializer, align 16
@_ZZ4mainE2x1 = internal global [200010 x i32] zeroinitializer, align 16
@_ZZ4mainE2y1 = internal global [200010 x i32] zeroinitializer, align 16
@_ZZ4mainE2x2 = internal global [200010 x i32] zeroinitializer, align 16
@_ZZ4mainE2y2 = internal global [200010 x i32] zeroinitializer, align 16
@_ZZ4mainE4memo = internal unnamed_addr global [2010 x i32] zeroinitializer, align 16
@_ZZ4mainE4tate = internal unnamed_addr global [2010 x [2010 x i32]] zeroinitializer, align 16
@_ZZ4mainE4yoko = internal unnamed_addr global [2010 x [2010 x i32]] zeroinitializer, align 16
@_ZZ4mainE7ruiseki = internal unnamed_addr global [2010 x [2010 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s170694843.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 820259355, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 820259355, label %11
    i32 497859958, label %14
    i32 -276916746, label %25
    i32 2055540555, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 497859958, i32 2055540555
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -276916746, i32 2055540555
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 497859958, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32* nonnull %8, i32* nonnull %9, i32* nonnull %10)
  br label %12

12:                                               ; preds = %.backedge, %0
  %.0163 = phi i64 [ 0, %0 ], [ %.0163.be, %.backedge ]
  %.0161 = phi i32 [ undef, %0 ], [ %.0161.be, %.backedge ]
  %.0159 = phi i32 [ 0, %0 ], [ %.0159.be, %.backedge ]
  %.0 = phi i32 [ -2066096012, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -2066096012, label %13
    i32 1026367251, label %17
    i32 832849429, label %19
    i32 1269495092, label %29
    i32 -1473644883, label %41
    i32 -694876581, label %43
    i32 -712266685, label %53
    i32 -886924686, label %70
    i32 -549863327, label %71
    i32 1885625750, label %81
    i32 -1854128303, label %92
    i32 -502234173, label %93
    i32 140430608, label %94
    i32 -643536970, label %96
    i32 691988385, label %97
    i32 1785239861, label %101
    i32 -793107130, label %108
    i32 2088388867, label %110
    i32 -2070418361, label %111
    i32 -568633260, label %116
    i32 1406858191, label %117
    i32 994941866, label %127
    i32 -2046327217, label %139
    i32 -1994133880, label %141
    i32 1941360015, label %151
    i32 1879485361, label %162
    i32 -2041314798, label %164
    i32 433178763, label %171
    i32 -395915722, label %178
    i32 -1878267626, label %181
    i32 1571128118, label %184
    i32 562899834, label %185
    i32 -1387576387, label %192
    i32 -540368833, label %199
    i32 -1761246113, label %209
    i32 990112122, label %226
    i32 -45787999, label %227
    i32 1023838680, label %235
    i32 -1715801734, label %236
    i32 -1279581707, label %237
    i32 -716118463, label %239
    i32 1490703621, label %240
    i32 1971542364, label %250
    i32 946050398, label %261
    i32 129645180, label %262
    i32 -934352511, label %263
    i32 1890923011, label %267
    i32 532069219, label %268
    i32 1417765370, label %278
    i32 1922388469, label %291
    i32 1711249011, label %293
    i32 1205981876, label %296
    i32 378200939, label %303
    i32 900200456, label %311
    i32 -1983035545, label %314
    i32 -2095828523, label %317
    i32 -1380110625, label %318
    i32 1058360800, label %325
    i32 -1335965174, label %335
    i32 -1373234205, label %351
    i32 1144702201, label %353
    i32 993695080, label %363
    i32 -562028355, label %381
    i32 -1906330865, label %382
    i32 937005397, label %392
    i32 1647586408, label %409
    i32 1094810072, label %410
    i32 -849906567, label %411
    i32 2101467001, label %412
    i32 1373676958, label %414
    i32 2073813173, label %415
    i32 333033901, label %417
    i32 -1308485121, label %427
    i32 760048309, label %437
    i32 1113594032, label %438
    i32 886688303, label %442
    i32 561603166, label %452
    i32 -1395057030, label %462
    i32 -1615388869, label %463
    i32 992327315, label %467
    i32 1000486316, label %470
    i32 -1585296863, label %476
    i32 -139169984, label %484
    i32 887609126, label %495
    i32 1990757978, label %502
    i32 -1433379275, label %503
    i32 -1969536762, label %513
    i32 -1733080698, label %523
    i32 -1718728442, label %524
    i32 161712033, label %526
    i32 -1405385706, label %529
    i32 1484639141, label %530
    i32 1891186167, label %540
    i32 -2123651678, label %552
    i32 -1323981606, label %554
    i32 -1077718659, label %559
    i32 260979429, label %569
    i32 -453109132, label %580
    i32 272906755, label %581
    i32 -1440967423, label %582
    i32 1835287005, label %583
    i32 -2129263778, label %587
    i32 1574827741, label %601
    i32 -1544619476, label %602
    i32 -1313611908, label %603
    i32 -1734897319, label %604
    i32 -1078119872, label %605
    i32 1003235049, label %615
    i32 -49752883, label %625
    i32 -1694139924, label %626
    i32 1306124709, label %630
    i32 -503379889, label %647
    i32 1742465601, label %653
    i32 -420799954, label %663
    i32 -754126500, label %673
    i32 -617619839, label %674
    i32 -2046795246, label %680
    i32 -1264976618, label %698
    i32 -1471173946, label %708
    i32 673716509, label %722
    i32 -2081430064, label %724
    i32 898003458, label %741
    i32 -410714770, label %787
    i32 -1635463777, label %788
    i32 270005172, label %789
    i32 171280758, label %791
    i32 -1649597500, label %801
    i32 708505566, label %811
    i32 -874753008, label %812
    i32 -1901068528, label %813
    i32 -1828733330, label %814
    i32 614327961, label %822
    i32 1418862246, label %824
    i32 -12356365, label %825
    i32 -587559668, label %826
    i32 649243687, label %835
    i32 -75228976, label %836
    i32 -159891507, label %837
    i32 -389182489, label %838
    i32 -730938547, label %847
    i32 1457186592, label %855
    i32 -1508776839, label %856
    i32 1936474901, label %857
    i32 1359539198, label %858
    i32 553462749, label %859
    i32 1046375399, label %861
    i32 -1685422015, label %862
    i32 1067975441, label %863
    i32 -1049313546, label %864
  ]

.backedge:                                        ; preds = %12, %864, %863, %862, %861, %859, %858, %857, %856, %855, %847, %838, %837, %836, %835, %826, %825, %824, %822, %814, %813, %811, %801, %791, %789, %788, %787, %741, %724, %722, %708, %698, %680, %674, %673, %663, %653, %647, %630, %626, %625, %615, %605, %604, %603, %602, %601, %587, %583, %582, %581, %580, %569, %559, %554, %552, %540, %530, %529, %526, %524, %523, %513, %503, %502, %495, %484, %476, %470, %467, %463, %462, %452, %442, %438, %437, %427, %417, %415, %414, %412, %411, %410, %409, %392, %382, %381, %363, %353, %351, %335, %325, %318, %317, %314, %311, %303, %296, %293, %291, %278, %268, %267, %263, %262, %261, %250, %240, %239, %237, %236, %235, %227, %226, %209, %199, %192, %185, %184, %181, %178, %171, %164, %162, %151, %141, %139, %127, %117, %116, %111, %110, %108, %101, %97, %96, %94, %93, %92, %81, %71, %70, %53, %43, %41, %29, %19, %17, %13
  %.0163.be = phi i64 [ %.0163, %12 ], [ %.0163, %864 ], [ %.0163, %863 ], [ %.0163, %862 ], [ %.0163, %861 ], [ %.0163, %859 ], [ %.0163, %858 ], [ %.0163, %857 ], [ %.0163, %856 ], [ %.0163, %855 ], [ %.0163, %847 ], [ %.0163, %838 ], [ %.0163, %837 ], [ %.0163, %836 ], [ %.0163, %835 ], [ %.0163, %826 ], [ %.0163, %825 ], [ %.0163, %824 ], [ %.0163, %822 ], [ %.0163, %814 ], [ %.0163, %813 ], [ %.0163, %811 ], [ %.0163, %801 ], [ %.0163, %791 ], [ %.0163, %789 ], [ %.0163, %788 ], [ %.0163, %787 ], [ %786, %741 ], [ %.neg167, %724 ], [ %.0163, %722 ], [ %.0163, %708 ], [ %.0163, %698 ], [ %697, %680 ], [ %.0163, %674 ], [ %.0163, %673 ], [ %.0163, %663 ], [ %.0163, %653 ], [ %.0163, %647 ], [ %642, %630 ], [ %.0163, %626 ], [ %.0163, %625 ], [ %.0163, %615 ], [ %.0163, %605 ], [ %.0163, %604 ], [ %.0163, %603 ], [ %.0163, %602 ], [ %.0163, %601 ], [ %.0163, %587 ], [ %.0163, %583 ], [ %.0163, %582 ], [ %.0163, %581 ], [ %.0163, %580 ], [ %.0163, %569 ], [ %.0163, %559 ], [ %.0163, %554 ], [ %.0163, %552 ], [ %.0163, %540 ], [ %.0163, %530 ], [ %.0163, %529 ], [ %.0163, %526 ], [ %.0163, %524 ], [ %.0163, %523 ], [ %.0163, %513 ], [ %.0163, %503 ], [ %.0163, %502 ], [ %.0163, %495 ], [ %.0163, %484 ], [ %.0163, %476 ], [ %.0163, %470 ], [ %.0163, %467 ], [ %.0163, %463 ], [ %.0163, %462 ], [ %.0163, %452 ], [ %.0163, %442 ], [ %.0163, %438 ], [ %.0163, %437 ], [ %.0163, %427 ], [ %.0163, %417 ], [ %.0163, %415 ], [ %.0163, %414 ], [ %.0163, %412 ], [ %.0163, %411 ], [ %.0163, %410 ], [ %.0163, %409 ], [ %.0163, %392 ], [ %.0163, %382 ], [ %.0163, %381 ], [ %.0163, %363 ], [ %.0163, %353 ], [ %.0163, %351 ], [ %.0163, %335 ], [ %.0163, %325 ], [ %.0163, %318 ], [ %.0163, %317 ], [ %.0163, %314 ], [ %.0163, %311 ], [ %.0163, %303 ], [ %.0163, %296 ], [ %.0163, %293 ], [ %.0163, %291 ], [ %.0163, %278 ], [ %.0163, %268 ], [ %.0163, %267 ], [ %.0163, %263 ], [ %.0163, %262 ], [ %.0163, %261 ], [ %.0163, %250 ], [ %.0163, %240 ], [ %.0163, %239 ], [ %.0163, %237 ], [ %.0163, %236 ], [ %.0163, %235 ], [ %.0163, %227 ], [ %.0163, %226 ], [ %.0163, %209 ], [ %.0163, %199 ], [ %.0163, %192 ], [ %.0163, %185 ], [ %.0163, %184 ], [ %.0163, %181 ], [ %.0163, %178 ], [ %.0163, %171 ], [ %.0163, %164 ], [ %.0163, %162 ], [ %.0163, %151 ], [ %.0163, %141 ], [ %.0163, %139 ], [ %.0163, %127 ], [ %.0163, %117 ], [ %.0163, %116 ], [ %.0163, %111 ], [ %.0163, %110 ], [ %.0163, %108 ], [ %.0163, %101 ], [ %.0163, %97 ], [ %.0163, %96 ], [ %.0163, %94 ], [ %.0163, %93 ], [ %.0163, %92 ], [ %.0163, %81 ], [ %.0163, %71 ], [ %.0163, %70 ], [ %.0163, %53 ], [ %.0163, %43 ], [ %.0163, %41 ], [ %.0163, %29 ], [ %.0163, %19 ], [ %.0163, %17 ], [ %.0163, %13 ]
  %.0161.be = phi i32 [ %.0161, %12 ], [ %.0161, %864 ], [ %.0161, %863 ], [ %.0161, %862 ], [ %.0161, %861 ], [ %860, %859 ], [ %.0161, %858 ], [ %.0161, %857 ], [ 0, %856 ], [ %.0161, %855 ], [ %.0161, %847 ], [ %.0161, %838 ], [ %.0161, %837 ], [ %.0161, %836 ], [ %.0161, %835 ], [ %.0161, %826 ], [ %.0161, %825 ], [ %.0161, %824 ], [ %823, %822 ], [ %.0161, %814 ], [ %.0161, %813 ], [ %.0161, %811 ], [ %.0161, %801 ], [ %.0161, %791 ], [ %.0161, %789 ], [ %.0161, %788 ], [ %.0161, %787 ], [ %.0161, %741 ], [ %.0161, %724 ], [ %.0161, %722 ], [ %.0161, %708 ], [ %.0161, %698 ], [ %.0161, %680 ], [ %.0161, %674 ], [ %.0161, %673 ], [ %.0161, %663 ], [ %.0161, %653 ], [ %.0161, %647 ], [ %.0161, %630 ], [ %.0161, %626 ], [ %.0161, %625 ], [ %.0161, %615 ], [ %.0161, %605 ], [ %.0161, %604 ], [ %.0161, %603 ], [ %.0161, %602 ], [ %.neg169, %601 ], [ %.0161, %587 ], [ %.0161, %583 ], [ 0, %582 ], [ %.0161, %581 ], [ %.0161, %580 ], [ %570, %569 ], [ %.0161, %559 ], [ %.0161, %554 ], [ %.0161, %552 ], [ %.0161, %540 ], [ %.0161, %530 ], [ 0, %529 ], [ %.0161, %526 ], [ %525, %524 ], [ %.0161, %523 ], [ %.0161, %513 ], [ %.0161, %503 ], [ %.0161, %502 ], [ %.0161, %495 ], [ %.0161, %484 ], [ %.0161, %476 ], [ %.0161, %470 ], [ %.0161, %467 ], [ %.0161, %463 ], [ %.0161, %462 ], [ 0, %452 ], [ %.0161, %442 ], [ %.0161, %438 ], [ %.0161, %437 ], [ %.0161, %427 ], [ %.0161, %417 ], [ %.0161, %415 ], [ %.0161, %414 ], [ %413, %412 ], [ %.0161, %411 ], [ %.0161, %410 ], [ %.0161, %409 ], [ %.0161, %392 ], [ %.0161, %382 ], [ %.0161, %381 ], [ %.0161, %363 ], [ %.0161, %353 ], [ %.0161, %351 ], [ %.0161, %335 ], [ %.0161, %325 ], [ %.0161, %318 ], [ %.0161, %317 ], [ %.0161, %314 ], [ %.0161, %311 ], [ %.0161, %303 ], [ %.0161, %296 ], [ %.0161, %293 ], [ %.0161, %291 ], [ %.0161, %278 ], [ %.0161, %268 ], [ 0, %267 ], [ %.0161, %263 ], [ %.0161, %262 ], [ %.0161, %261 ], [ %.0161, %250 ], [ %.0161, %240 ], [ %.0161, %239 ], [ %238, %237 ], [ %.0161, %236 ], [ %.0161, %235 ], [ %.0161, %227 ], [ %.0161, %226 ], [ %.0161, %209 ], [ %.0161, %199 ], [ %.0161, %192 ], [ %.0161, %185 ], [ %.0161, %184 ], [ %.0161, %181 ], [ %.0161, %178 ], [ %.0161, %171 ], [ %.0161, %164 ], [ %.0161, %162 ], [ %.0161, %151 ], [ %.0161, %141 ], [ %.0161, %139 ], [ %.0161, %127 ], [ %.0161, %117 ], [ 0, %116 ], [ %.0161, %111 ], [ %.0161, %110 ], [ %.0161, %108 ], [ %.0161, %101 ], [ %.0161, %97 ], [ %.0161, %96 ], [ %.0161, %94 ], [ %.0161, %93 ], [ %.0161, %92 ], [ %82, %81 ], [ %.0161, %71 ], [ %.0161, %70 ], [ %.0161, %53 ], [ %.0161, %43 ], [ %.0161, %41 ], [ %.0161, %29 ], [ %.0161, %19 ], [ 0, %17 ], [ %.0161, %13 ]
  %.0159.be = phi i32 [ %.0159, %12 ], [ %865, %864 ], [ %.0159, %863 ], [ %.0159, %862 ], [ 0, %861 ], [ %.0159, %859 ], [ %.0159, %858 ], [ %.0159, %857 ], [ %.0159, %856 ], [ 0, %855 ], [ %.0159, %847 ], [ %.0159, %838 ], [ %.0159, %837 ], [ %.0159, %836 ], [ %.neg, %835 ], [ %.0159, %826 ], [ %.0159, %825 ], [ %.0159, %824 ], [ %.0159, %822 ], [ %.0159, %814 ], [ %.0159, %813 ], [ %.0159, %811 ], [ %.neg165, %801 ], [ %.0159, %791 ], [ %.0159, %789 ], [ %.0159, %788 ], [ %.0159, %787 ], [ %.0159, %741 ], [ %.0159, %724 ], [ %.0159, %722 ], [ %.0159, %708 ], [ %.0159, %698 ], [ %.0159, %680 ], [ %.0159, %674 ], [ %.0159, %673 ], [ %.0159, %663 ], [ %.0159, %653 ], [ %.0159, %647 ], [ %.0159, %630 ], [ %.0159, %626 ], [ %.0159, %625 ], [ 0, %615 ], [ %.0159, %605 ], [ %.neg168, %604 ], [ %.0159, %603 ], [ %.0159, %602 ], [ %.0159, %601 ], [ %.0159, %587 ], [ %.0159, %583 ], [ %.0159, %582 ], [ %.0159, %581 ], [ %.0159, %580 ], [ %.0159, %569 ], [ %.0159, %559 ], [ %.0159, %554 ], [ %.0159, %552 ], [ %.0159, %540 ], [ %.0159, %530 ], [ %.0159, %529 ], [ %.0159, %526 ], [ %.0159, %524 ], [ %.0159, %523 ], [ %.0159, %513 ], [ %.0159, %503 ], [ %.0159, %502 ], [ %.0159, %495 ], [ %.0159, %484 ], [ %.0159, %476 ], [ %.0159, %470 ], [ %.0159, %467 ], [ %.0159, %463 ], [ %.0159, %462 ], [ %.0159, %452 ], [ %.0159, %442 ], [ %.0159, %438 ], [ %.0159, %437 ], [ 0, %427 ], [ %.0159, %417 ], [ %416, %415 ], [ %.0159, %414 ], [ %.0159, %412 ], [ %.0159, %411 ], [ %.0159, %410 ], [ %.0159, %409 ], [ %.0159, %392 ], [ %.0159, %382 ], [ %.0159, %381 ], [ %.0159, %363 ], [ %.0159, %353 ], [ %.0159, %351 ], [ %.0159, %335 ], [ %.0159, %325 ], [ %.0159, %318 ], [ %.0159, %317 ], [ %.0159, %314 ], [ %.0159, %311 ], [ %.0159, %303 ], [ %.0159, %296 ], [ %.0159, %293 ], [ %.0159, %291 ], [ %.0159, %278 ], [ %.0159, %268 ], [ %.0159, %267 ], [ %.0159, %263 ], [ 0, %262 ], [ %.0159, %261 ], [ %251, %250 ], [ %.0159, %240 ], [ %.0159, %239 ], [ %.0159, %237 ], [ %.0159, %236 ], [ %.0159, %235 ], [ %.0159, %227 ], [ %.0159, %226 ], [ %.0159, %209 ], [ %.0159, %199 ], [ %.0159, %192 ], [ %.0159, %185 ], [ %.0159, %184 ], [ %.0159, %181 ], [ %.0159, %178 ], [ %.0159, %171 ], [ %.0159, %164 ], [ %.0159, %162 ], [ %.0159, %151 ], [ %.0159, %141 ], [ %.0159, %139 ], [ %.0159, %127 ], [ %.0159, %117 ], [ %.0159, %116 ], [ %.0159, %111 ], [ 0, %110 ], [ %109, %108 ], [ %.0159, %101 ], [ %.0159, %97 ], [ 0, %96 ], [ %95, %94 ], [ %.0159, %93 ], [ %.0159, %92 ], [ %.0159, %81 ], [ %.0159, %71 ], [ %.0159, %70 ], [ %.0159, %53 ], [ %.0159, %43 ], [ %.0159, %41 ], [ %.0159, %29 ], [ %.0159, %19 ], [ %.0159, %17 ], [ %.0159, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -1649597500, %864 ], [ -1471173946, %863 ], [ -420799954, %862 ], [ 1003235049, %861 ], [ 260979429, %859 ], [ 1891186167, %858 ], [ -1969536762, %857 ], [ 561603166, %856 ], [ -1308485121, %855 ], [ 937005397, %847 ], [ 993695080, %838 ], [ -1335965174, %837 ], [ 1417765370, %836 ], [ 1971542364, %835 ], [ -1761246113, %826 ], [ 1941360015, %825 ], [ 994941866, %824 ], [ 1885625750, %822 ], [ -712266685, %814 ], [ 1269495092, %813 ], [ -1694139924, %811 ], [ %810, %801 ], [ %800, %791 ], [ 171280758, %789 ], [ 270005172, %788 ], [ -1635463777, %787 ], [ -410714770, %741 ], [ -410714770, %724 ], [ %723, %722 ], [ %721, %708 ], [ %707, %698 ], [ -1635463777, %680 ], [ %679, %674 ], [ 270005172, %673 ], [ %672, %663 ], [ %662, %653 ], [ %652, %647 ], [ %646, %630 ], [ %629, %626 ], [ -1694139924, %625 ], [ %624, %615 ], [ %614, %605 ], [ 1113594032, %604 ], [ -1734897319, %603 ], [ -1313611908, %602 ], [ 1835287005, %601 ], [ 1574827741, %587 ], [ %586, %583 ], [ 1835287005, %582 ], [ -1313611908, %581 ], [ 1484639141, %580 ], [ %579, %569 ], [ %568, %559 ], [ -1077718659, %554 ], [ %553, %552 ], [ %551, %540 ], [ %539, %530 ], [ 1484639141, %529 ], [ %528, %526 ], [ -1615388869, %524 ], [ -1718728442, %523 ], [ %522, %513 ], [ %512, %503 ], [ -1433379275, %502 ], [ 1990757978, %495 ], [ 1990757978, %484 ], [ %483, %476 ], [ -1433379275, %470 ], [ %469, %467 ], [ %466, %463 ], [ -1615388869, %462 ], [ %461, %452 ], [ %451, %442 ], [ %441, %438 ], [ 1113594032, %437 ], [ %436, %427 ], [ %426, %417 ], [ -934352511, %415 ], [ 2073813173, %414 ], [ 532069219, %412 ], [ 2101467001, %411 ], [ -849906567, %410 ], [ 1094810072, %409 ], [ %408, %392 ], [ %391, %382 ], [ 1094810072, %381 ], [ %380, %363 ], [ %362, %353 ], [ %352, %351 ], [ %350, %335 ], [ %334, %325 ], [ %324, %318 ], [ -849906567, %317 ], [ -2095828523, %314 ], [ -2095828523, %311 ], [ %310, %303 ], [ %302, %296 ], [ %295, %293 ], [ %292, %291 ], [ %290, %278 ], [ %277, %268 ], [ 532069219, %267 ], [ %266, %263 ], [ -934352511, %262 ], [ -2070418361, %261 ], [ %260, %250 ], [ %249, %240 ], [ 1490703621, %239 ], [ 1406858191, %237 ], [ -1279581707, %236 ], [ -1715801734, %235 ], [ 1023838680, %227 ], [ 1023838680, %226 ], [ %225, %209 ], [ %208, %199 ], [ %198, %192 ], [ %191, %185 ], [ -1715801734, %184 ], [ 1571128118, %181 ], [ 1571128118, %178 ], [ %177, %171 ], [ %170, %164 ], [ %163, %162 ], [ %161, %151 ], [ %150, %141 ], [ %140, %139 ], [ %138, %127 ], [ %126, %117 ], [ 1406858191, %116 ], [ %115, %111 ], [ -2070418361, %110 ], [ 691988385, %108 ], [ -793107130, %101 ], [ %100, %97 ], [ 691988385, %96 ], [ -2066096012, %94 ], [ 140430608, %93 ], [ 832849429, %92 ], [ %91, %81 ], [ %80, %71 ], [ -549863327, %70 ], [ %69, %53 ], [ %52, %43 ], [ %42, %41 ], [ %40, %29 ], [ %28, %19 ], [ 832849429, %17 ], [ %16, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* %8, align 4
  %15 = icmp slt i32 %.0159, %14
  %16 = select i1 %15, i32 1026367251, i32 -643536970
  br label %.backedge

17:                                               ; preds = %12
  %18 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), [2010 x i8]* nonnull @_ZZ4mainE1c)
  br label %.backedge

19:                                               ; preds = %12
  %20 = load i32, i32* @x.4, align 4
  %21 = load i32, i32* @y.5, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 1269495092, i32 -1901068528
  br label %.backedge

29:                                               ; preds = %12
  %30 = load i32, i32* %9, align 4
  %31 = icmp slt i32 %.0161, %30
  store i1 %31, i1* %7, align 1
  %32 = load i32, i32* @x.4, align 4
  %33 = load i32, i32* @y.5, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -1473644883, i32 -1901068528
  br label %.backedge

41:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %7, align 1
  %42 = select i1 %.0..0..0., i32 -694876581, i32 -502234173
  br label %.backedge

43:                                               ; preds = %12
  %44 = load i32, i32* @x.4, align 4
  %45 = load i32, i32* @y.5, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 -712266685, i32 -1828733330
  br label %.backedge

53:                                               ; preds = %12
  %54 = sext i32 %.0161 to i64
  %55 = getelementptr inbounds [2010 x i8], [2010 x i8]* @_ZZ4mainE1c, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = add nsw i32 %57, -48
  %59 = sext i32 %.0159 to i64
  %60 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %59, i64 %54
  store i32 %58, i32* %60, align 4
  %61 = load i32, i32* @x.4, align 4
  %62 = load i32, i32* @y.5, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 -886924686, i32 -1828733330
  br label %.backedge

70:                                               ; preds = %12
  br label %.backedge

71:                                               ; preds = %12
  %72 = load i32, i32* @x.4, align 4
  %73 = load i32, i32* @y.5, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 1885625750, i32 614327961
  br label %.backedge

81:                                               ; preds = %12
  %82 = add i32 %.0161, 1
  %83 = load i32, i32* @x.4, align 4
  %84 = load i32, i32* @y.5, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -1854128303, i32 614327961
  br label %.backedge

92:                                               ; preds = %12
  br label %.backedge

93:                                               ; preds = %12
  br label %.backedge

94:                                               ; preds = %12
  %95 = add i32 %.0159, 1
  br label %.backedge

96:                                               ; preds = %12
  br label %.backedge

97:                                               ; preds = %12
  %98 = load i32, i32* %10, align 4
  %99 = icmp slt i32 %.0159, %98
  %100 = select i1 %99, i32 1785239861, i32 2088388867
  br label %.backedge

101:                                              ; preds = %12
  %102 = sext i32 %.0159 to i64
  %103 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2x1, i64 0, i64 %102
  %104 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2y1, i64 0, i64 %102
  %105 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2x2, i64 0, i64 %102
  %106 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2y2, i64 0, i64 %102
  %107 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %103, i32* nonnull %104, i32* nonnull %105, i32* nonnull %106)
  br label %.backedge

108:                                              ; preds = %12
  %109 = add i32 %.0159, 1
  br label %.backedge

110:                                              ; preds = %12
  br label %.backedge

111:                                              ; preds = %12
  %112 = load i32, i32* %8, align 4
  %113 = add i32 %112, -1
  %114 = icmp slt i32 %.0159, %113
  %115 = select i1 %114, i32 -568633260, i32 129645180
  br label %.backedge

116:                                              ; preds = %12
  br label %.backedge

117:                                              ; preds = %12
  %118 = load i32, i32* @x.4, align 4
  %119 = load i32, i32* @y.5, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 994941866, i32 1418862246
  br label %.backedge

127:                                              ; preds = %12
  %128 = load i32, i32* %9, align 4
  %129 = icmp slt i32 %.0161, %128
  store i1 %129, i1* %6, align 1
  %130 = load i32, i32* @x.4, align 4
  %131 = load i32, i32* @y.5, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -2046327217, i32 1418862246
  br label %.backedge

139:                                              ; preds = %12
  %.0..0..0.153 = load volatile i1, i1* %6, align 1
  %140 = select i1 %.0..0..0.153, i32 -1994133880, i32 -716118463
  br label %.backedge

141:                                              ; preds = %12
  %142 = load i32, i32* @x.4, align 4
  %143 = load i32, i32* @y.5, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 1941360015, i32 -12356365
  br label %.backedge

151:                                              ; preds = %12
  %152 = icmp eq i32 %.0161, 0
  store i1 %152, i1* %5, align 1
  %153 = load i32, i32* @x.4, align 4
  %154 = load i32, i32* @y.5, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 1879485361, i32 -12356365
  br label %.backedge

162:                                              ; preds = %12
  %.0..0..0.154 = load volatile i1, i1* %5, align 1
  %163 = select i1 %.0..0..0.154, i32 -2041314798, i32 562899834
  br label %.backedge

164:                                              ; preds = %12
  %165 = sext i32 %.0159 to i64
  %166 = sext i32 %.0161 to i64
  %167 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %165, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 1
  %170 = select i1 %169, i32 433178763, i32 -1878267626
  br label %.backedge

171:                                              ; preds = %12
  %.neg172 = add i32 %.0159, 1
  %172 = sext i32 %.neg172 to i64
  %173 = sext i32 %.0161 to i64
  %174 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %172, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 1
  %177 = select i1 %176, i32 -395915722, i32 -1878267626
  br label %.backedge

178:                                              ; preds = %12
  %179 = sext i32 %.0159 to i64
  %180 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %179, i64 0
  store i32 1, i32* %180, align 8
  br label %.backedge

181:                                              ; preds = %12
  %182 = sext i32 %.0159 to i64
  %183 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %182, i64 0
  store i32 0, i32* %183, align 8
  br label %.backedge

184:                                              ; preds = %12
  br label %.backedge

185:                                              ; preds = %12
  %186 = sext i32 %.0159 to i64
  %187 = sext i32 %.0161 to i64
  %188 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %186, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 1
  %191 = select i1 %190, i32 -1387576387, i32 -45787999
  br label %.backedge

192:                                              ; preds = %12
  %.neg171 = add i32 %.0159, 1
  %193 = sext i32 %.neg171 to i64
  %194 = sext i32 %.0161 to i64
  %195 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %193, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 1
  %198 = select i1 %197, i32 -540368833, i32 -45787999
  br label %.backedge

199:                                              ; preds = %12
  %200 = load i32, i32* @x.4, align 4
  %201 = load i32, i32* @y.5, align 4
  %202 = add i32 %200, -1
  %203 = mul i32 %202, %200
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %206, %205
  %208 = select i1 %207, i32 -1761246113, i32 -587559668
  br label %.backedge

209:                                              ; preds = %12
  %210 = sext i32 %.0159 to i64
  %211 = add i32 %.0161, -1
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %210, i64 %212
  %214 = load i32, i32* %213, align 4
  %.neg170 = add i32 %214, 1
  %215 = sext i32 %.0161 to i64
  %216 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %210, i64 %215
  store i32 %.neg170, i32* %216, align 4
  %217 = load i32, i32* @x.4, align 4
  %218 = load i32, i32* @y.5, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 990112122, i32 -587559668
  br label %.backedge

226:                                              ; preds = %12
  br label %.backedge

227:                                              ; preds = %12
  %228 = sext i32 %.0159 to i64
  %229 = add i32 %.0161, -1
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %228, i64 %230
  %232 = load i32, i32* %231, align 4
  %233 = sext i32 %.0161 to i64
  %234 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %228, i64 %233
  store i32 %232, i32* %234, align 4
  br label %.backedge

235:                                              ; preds = %12
  br label %.backedge

236:                                              ; preds = %12
  br label %.backedge

237:                                              ; preds = %12
  %238 = add i32 %.0161, 1
  br label %.backedge

239:                                              ; preds = %12
  br label %.backedge

240:                                              ; preds = %12
  %241 = load i32, i32* @x.4, align 4
  %242 = load i32, i32* @y.5, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 1971542364, i32 649243687
  br label %.backedge

250:                                              ; preds = %12
  %251 = add i32 %.0159, 1
  %252 = load i32, i32* @x.4, align 4
  %253 = load i32, i32* @y.5, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 946050398, i32 649243687
  br label %.backedge

261:                                              ; preds = %12
  br label %.backedge

262:                                              ; preds = %12
  br label %.backedge

263:                                              ; preds = %12
  %264 = load i32, i32* %8, align 4
  %265 = icmp slt i32 %.0159, %264
  %266 = select i1 %265, i32 1890923011, i32 333033901
  br label %.backedge

267:                                              ; preds = %12
  br label %.backedge

268:                                              ; preds = %12
  %269 = load i32, i32* @x.4, align 4
  %270 = load i32, i32* @y.5, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 1417765370, i32 -75228976
  br label %.backedge

278:                                              ; preds = %12
  %279 = load i32, i32* %9, align 4
  %280 = add i32 %279, -1
  %281 = icmp slt i32 %.0161, %280
  store i1 %281, i1* %4, align 1
  %282 = load i32, i32* @x.4, align 4
  %283 = load i32, i32* @y.5, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 1922388469, i32 -75228976
  br label %.backedge

291:                                              ; preds = %12
  %.0..0..0.155 = load volatile i1, i1* %4, align 1
  %292 = select i1 %.0..0..0.155, i32 1711249011, i32 1373676958
  br label %.backedge

293:                                              ; preds = %12
  %294 = icmp eq i32 %.0159, 0
  %295 = select i1 %294, i32 1205981876, i32 -1380110625
  br label %.backedge

296:                                              ; preds = %12
  %297 = sext i32 %.0159 to i64
  %298 = sext i32 %.0161 to i64
  %299 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %297, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %300, 1
  %302 = select i1 %301, i32 378200939, i32 -1983035545
  br label %.backedge

303:                                              ; preds = %12
  %304 = sext i32 %.0159 to i64
  %305 = add i32 %.0161, 1
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %304, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = icmp eq i32 %308, 1
  %310 = select i1 %309, i32 900200456, i32 -1983035545
  br label %.backedge

311:                                              ; preds = %12
  %312 = sext i32 %.0161 to i64
  %313 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 0, i64 %312
  store i32 1, i32* %313, align 4
  br label %.backedge

314:                                              ; preds = %12
  %315 = sext i32 %.0161 to i64
  %316 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 0, i64 %315
  store i32 0, i32* %316, align 4
  br label %.backedge

317:                                              ; preds = %12
  br label %.backedge

318:                                              ; preds = %12
  %319 = sext i32 %.0159 to i64
  %320 = sext i32 %.0161 to i64
  %321 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %319, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 1
  %324 = select i1 %323, i32 1058360800, i32 -1906330865
  br label %.backedge

325:                                              ; preds = %12
  %326 = load i32, i32* @x.4, align 4
  %327 = load i32, i32* @y.5, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 -1335965174, i32 -159891507
  br label %.backedge

335:                                              ; preds = %12
  %336 = sext i32 %.0159 to i64
  %337 = add i32 %.0161, 1
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %336, i64 %338
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, 1
  store i1 %341, i1* %3, align 1
  %342 = load i32, i32* @x.4, align 4
  %343 = load i32, i32* @y.5, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 -1373234205, i32 -159891507
  br label %.backedge

351:                                              ; preds = %12
  %.0..0..0.156 = load volatile i1, i1* %3, align 1
  %352 = select i1 %.0..0..0.156, i32 1144702201, i32 -1906330865
  br label %.backedge

353:                                              ; preds = %12
  %354 = load i32, i32* @x.4, align 4
  %355 = load i32, i32* @y.5, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 993695080, i32 -389182489
  br label %.backedge

363:                                              ; preds = %12
  %364 = add i32 %.0159, -1
  %365 = sext i32 %364 to i64
  %366 = sext i32 %.0161 to i64
  %367 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %365, i64 %366
  %368 = load i32, i32* %367, align 4
  %369 = add i32 %368, 1
  %370 = sext i32 %.0159 to i64
  %371 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %370, i64 %366
  store i32 %369, i32* %371, align 4
  %372 = load i32, i32* @x.4, align 4
  %373 = load i32, i32* @y.5, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 -562028355, i32 -389182489
  br label %.backedge

381:                                              ; preds = %12
  br label %.backedge

382:                                              ; preds = %12
  %383 = load i32, i32* @x.4, align 4
  %384 = load i32, i32* @y.5, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 937005397, i32 -730938547
  br label %.backedge

392:                                              ; preds = %12
  %393 = add i32 %.0159, -1
  %394 = sext i32 %393 to i64
  %395 = sext i32 %.0161 to i64
  %396 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %394, i64 %395
  %397 = load i32, i32* %396, align 4
  %398 = sext i32 %.0159 to i64
  %399 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %398, i64 %395
  store i32 %397, i32* %399, align 4
  %400 = load i32, i32* @x.4, align 4
  %401 = load i32, i32* @y.5, align 4
  %402 = add i32 %400, -1
  %403 = mul i32 %402, %400
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %406, %405
  %408 = select i1 %407, i32 1647586408, i32 -730938547
  br label %.backedge

409:                                              ; preds = %12
  br label %.backedge

410:                                              ; preds = %12
  br label %.backedge

411:                                              ; preds = %12
  br label %.backedge

412:                                              ; preds = %12
  %413 = add i32 %.0161, 1
  br label %.backedge

414:                                              ; preds = %12
  br label %.backedge

415:                                              ; preds = %12
  %416 = add i32 %.0159, 1
  br label %.backedge

417:                                              ; preds = %12
  %418 = load i32, i32* @x.4, align 4
  %419 = load i32, i32* @y.5, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 -1308485121, i32 1457186592
  br label %.backedge

427:                                              ; preds = %12
  %428 = load i32, i32* @x.4, align 4
  %429 = load i32, i32* @y.5, align 4
  %430 = add i32 %428, -1
  %431 = mul i32 %430, %428
  %432 = and i32 %431, 1
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %434, %433
  %436 = select i1 %435, i32 760048309, i32 1457186592
  br label %.backedge

437:                                              ; preds = %12
  br label %.backedge

438:                                              ; preds = %12
  %439 = load i32, i32* %8, align 4
  %440 = icmp slt i32 %.0159, %439
  %441 = select i1 %440, i32 886688303, i32 -1078119872
  br label %.backedge

442:                                              ; preds = %12
  %443 = load i32, i32* @x.4, align 4
  %444 = load i32, i32* @y.5, align 4
  %445 = add i32 %443, -1
  %446 = mul i32 %445, %443
  %447 = and i32 %446, 1
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %449, %448
  %451 = select i1 %450, i32 561603166, i32 -1508776839
  br label %.backedge

452:                                              ; preds = %12
  %453 = load i32, i32* @x.4, align 4
  %454 = load i32, i32* @y.5, align 4
  %455 = add i32 %453, -1
  %456 = mul i32 %455, %453
  %457 = and i32 %456, 1
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %459, %458
  %461 = select i1 %460, i32 -1395057030, i32 -1508776839
  br label %.backedge

462:                                              ; preds = %12
  br label %.backedge

463:                                              ; preds = %12
  %464 = load i32, i32* %9, align 4
  %465 = icmp slt i32 %.0161, %464
  %466 = select i1 %465, i32 992327315, i32 161712033
  br label %.backedge

467:                                              ; preds = %12
  %468 = icmp eq i32 %.0161, 0
  %469 = select i1 %468, i32 1000486316, i32 -1585296863
  br label %.backedge

470:                                              ; preds = %12
  %471 = sext i32 %.0159 to i64
  %472 = sext i32 %.0161 to i64
  %473 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %471, i64 %472
  %474 = load i32, i32* %473, align 4
  %475 = getelementptr inbounds [2010 x i32], [2010 x i32]* @_ZZ4mainE4memo, i64 0, i64 %472
  store i32 %474, i32* %475, align 4
  br label %.backedge

476:                                              ; preds = %12
  %477 = sext i32 %.0159 to i64
  %478 = add i32 %.0161, -1
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %477, i64 %479
  %481 = load i32, i32* %480, align 4
  %482 = icmp eq i32 %481, 0
  %483 = select i1 %482, i32 -139169984, i32 887609126
  br label %.backedge

484:                                              ; preds = %12
  %485 = add i32 %.0161, -1
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds [2010 x i32], [2010 x i32]* @_ZZ4mainE4memo, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = sext i32 %.0159 to i64
  %490 = sext i32 %.0161 to i64
  %491 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %489, i64 %490
  %492 = load i32, i32* %491, align 4
  %493 = add i32 %492, %488
  %494 = getelementptr inbounds [2010 x i32], [2010 x i32]* @_ZZ4mainE4memo, i64 0, i64 %490
  store i32 %493, i32* %494, align 4
  br label %.backedge

495:                                              ; preds = %12
  %496 = add i32 %.0161, -1
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds [2010 x i32], [2010 x i32]* @_ZZ4mainE4memo, i64 0, i64 %497
  %499 = load i32, i32* %498, align 4
  %500 = sext i32 %.0161 to i64
  %501 = getelementptr inbounds [2010 x i32], [2010 x i32]* @_ZZ4mainE4memo, i64 0, i64 %500
  store i32 %499, i32* %501, align 4
  br label %.backedge

502:                                              ; preds = %12
  br label %.backedge

503:                                              ; preds = %12
  %504 = load i32, i32* @x.4, align 4
  %505 = load i32, i32* @y.5, align 4
  %506 = add i32 %504, -1
  %507 = mul i32 %506, %504
  %508 = and i32 %507, 1
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %510, %509
  %512 = select i1 %511, i32 -1969536762, i32 1936474901
  br label %.backedge

513:                                              ; preds = %12
  %514 = load i32, i32* @x.4, align 4
  %515 = load i32, i32* @y.5, align 4
  %516 = add i32 %514, -1
  %517 = mul i32 %516, %514
  %518 = and i32 %517, 1
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %520, %519
  %522 = select i1 %521, i32 -1733080698, i32 1936474901
  br label %.backedge

523:                                              ; preds = %12
  br label %.backedge

524:                                              ; preds = %12
  %525 = add i32 %.0161, 1
  br label %.backedge

526:                                              ; preds = %12
  %527 = icmp eq i32 %.0159, 0
  %528 = select i1 %527, i32 -1405385706, i32 -1440967423
  br label %.backedge

529:                                              ; preds = %12
  br label %.backedge

530:                                              ; preds = %12
  %531 = load i32, i32* @x.4, align 4
  %532 = load i32, i32* @y.5, align 4
  %533 = add i32 %531, -1
  %534 = mul i32 %533, %531
  %535 = and i32 %534, 1
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %537, %536
  %539 = select i1 %538, i32 1891186167, i32 1359539198
  br label %.backedge

540:                                              ; preds = %12
  %541 = load i32, i32* %9, align 4
  %542 = icmp slt i32 %.0161, %541
  store i1 %542, i1* %2, align 1
  %543 = load i32, i32* @x.4, align 4
  %544 = load i32, i32* @y.5, align 4
  %545 = add i32 %543, -1
  %546 = mul i32 %545, %543
  %547 = and i32 %546, 1
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %549, %548
  %551 = select i1 %550, i32 -2123651678, i32 1359539198
  br label %.backedge

552:                                              ; preds = %12
  %.0..0..0.157 = load volatile i1, i1* %2, align 1
  %553 = select i1 %.0..0..0.157, i32 -1323981606, i32 272906755
  br label %.backedge

554:                                              ; preds = %12
  %555 = sext i32 %.0161 to i64
  %556 = getelementptr inbounds [2010 x i32], [2010 x i32]* @_ZZ4mainE4memo, i64 0, i64 %555
  %557 = load i32, i32* %556, align 4
  %558 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE7ruiseki, i64 0, i64 0, i64 %555
  store i32 %557, i32* %558, align 4
  br label %.backedge

559:                                              ; preds = %12
  %560 = load i32, i32* @x.4, align 4
  %561 = load i32, i32* @y.5, align 4
  %562 = add i32 %560, -1
  %563 = mul i32 %562, %560
  %564 = and i32 %563, 1
  %565 = icmp eq i32 %564, 0
  %566 = icmp slt i32 %561, 10
  %567 = or i1 %566, %565
  %568 = select i1 %567, i32 260979429, i32 553462749
  br label %.backedge

569:                                              ; preds = %12
  %570 = add i32 %.0161, 1
  %571 = load i32, i32* @x.4, align 4
  %572 = load i32, i32* @y.5, align 4
  %573 = add i32 %571, -1
  %574 = mul i32 %573, %571
  %575 = and i32 %574, 1
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %577, %576
  %579 = select i1 %578, i32 -453109132, i32 553462749
  br label %.backedge

580:                                              ; preds = %12
  br label %.backedge

581:                                              ; preds = %12
  br label %.backedge

582:                                              ; preds = %12
  br label %.backedge

583:                                              ; preds = %12
  %584 = load i32, i32* %9, align 4
  %585 = icmp slt i32 %.0161, %584
  %586 = select i1 %585, i32 -2129263778, i32 -1544619476
  br label %.backedge

587:                                              ; preds = %12
  %588 = add i32 %.0159, -1
  %589 = sext i32 %588 to i64
  %590 = sext i32 %.0161 to i64
  %591 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE7ruiseki, i64 0, i64 %589, i64 %590
  %592 = load i32, i32* %591, align 4
  %593 = getelementptr inbounds [2010 x i32], [2010 x i32]* @_ZZ4mainE4memo, i64 0, i64 %590
  %594 = load i32, i32* %593, align 4
  %595 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %589, i64 %590
  %596 = load i32, i32* %595, align 4
  %597 = add i32 %594, %592
  %598 = sub i32 %597, %596
  %599 = sext i32 %.0159 to i64
  %600 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE7ruiseki, i64 0, i64 %599, i64 %590
  store i32 %598, i32* %600, align 4
  br label %.backedge

601:                                              ; preds = %12
  %.neg169 = add i32 %.0161, 1
  br label %.backedge

602:                                              ; preds = %12
  br label %.backedge

603:                                              ; preds = %12
  br label %.backedge

604:                                              ; preds = %12
  %.neg168 = add i32 %.0159, 1
  br label %.backedge

605:                                              ; preds = %12
  %606 = load i32, i32* @x.4, align 4
  %607 = load i32, i32* @y.5, align 4
  %608 = add i32 %606, -1
  %609 = mul i32 %608, %606
  %610 = and i32 %609, 1
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %612, %611
  %614 = select i1 %613, i32 1003235049, i32 1046375399
  br label %.backedge

615:                                              ; preds = %12
  %616 = load i32, i32* @x.4, align 4
  %617 = load i32, i32* @y.5, align 4
  %618 = add i32 %616, -1
  %619 = mul i32 %618, %616
  %620 = and i32 %619, 1
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %622, %621
  %624 = select i1 %623, i32 -49752883, i32 1046375399
  br label %.backedge

625:                                              ; preds = %12
  br label %.backedge

626:                                              ; preds = %12
  %627 = load i32, i32* %10, align 4
  %628 = icmp slt i32 %.0159, %627
  %629 = select i1 %628, i32 1306124709, i32 -874753008
  br label %.backedge

630:                                              ; preds = %12
  %631 = sext i32 %.0159 to i64
  %632 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2x2, i64 0, i64 %631
  %633 = load i32, i32* %632, align 4
  %634 = add i32 %633, -1
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2y2, i64 0, i64 %631
  %637 = load i32, i32* %636, align 4
  %638 = add i32 %637, -1
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE7ruiseki, i64 0, i64 %635, i64 %639
  %641 = load i32, i32* %640, align 4
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2x1, i64 0, i64 %631
  %644 = load i32, i32* %643, align 4
  %645 = icmp eq i32 %644, 1
  %646 = select i1 %645, i32 -503379889, i32 -617619839
  br label %.backedge

647:                                              ; preds = %12
  %648 = sext i32 %.0159 to i64
  %649 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2y1, i64 0, i64 %648
  %650 = load i32, i32* %649, align 4
  %651 = icmp eq i32 %650, 1
  %652 = select i1 %651, i32 1742465601, i32 -617619839
  br label %.backedge

653:                                              ; preds = %12
  %654 = load i32, i32* @x.4, align 4
  %655 = load i32, i32* @y.5, align 4
  %656 = add i32 %654, -1
  %657 = mul i32 %656, %654
  %658 = and i32 %657, 1
  %659 = icmp eq i32 %658, 0
  %660 = icmp slt i32 %655, 10
  %661 = or i1 %660, %659
  %662 = select i1 %661, i32 -420799954, i32 -1685422015
  br label %.backedge

663:                                              ; preds = %12
  %664 = load i32, i32* @x.4, align 4
  %665 = load i32, i32* @y.5, align 4
  %666 = add i32 %664, -1
  %667 = mul i32 %666, %664
  %668 = and i32 %667, 1
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %670, %669
  %672 = select i1 %671, i32 -754126500, i32 -1685422015
  br label %.backedge

673:                                              ; preds = %12
  br label %.backedge

674:                                              ; preds = %12
  %675 = sext i32 %.0159 to i64
  %676 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2x1, i64 0, i64 %675
  %677 = load i32, i32* %676, align 4
  %678 = icmp eq i32 %677, 1
  %679 = select i1 %678, i32 -2046795246, i32 -1264976618
  br label %.backedge

680:                                              ; preds = %12
  %681 = sext i32 %.0159 to i64
  %682 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2x2, i64 0, i64 %681
  %683 = load i32, i32* %682, align 4
  %684 = add i32 %683, -1
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2y1, i64 0, i64 %681
  %687 = load i32, i32* %686, align 4
  %688 = add i32 %687, -2
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE7ruiseki, i64 0, i64 %685, i64 %689
  %691 = load i32, i32* %690, align 4
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %685, i64 %689
  %694 = load i32, i32* %693, align 4
  %695 = sext i32 %694 to i64
  %696 = sub i64 %.0163, %692
  %697 = add i64 %696, %695
  br label %.backedge

698:                                              ; preds = %12
  %699 = load i32, i32* @x.4, align 4
  %700 = load i32, i32* @y.5, align 4
  %701 = add i32 %699, -1
  %702 = mul i32 %701, %699
  %703 = and i32 %702, 1
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %700, 10
  %706 = or i1 %705, %704
  %707 = select i1 %706, i32 -1471173946, i32 1067975441
  br label %.backedge

708:                                              ; preds = %12
  %709 = sext i32 %.0159 to i64
  %710 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2y1, i64 0, i64 %709
  %711 = load i32, i32* %710, align 4
  %712 = icmp eq i32 %711, 1
  store i1 %712, i1* %1, align 1
  %713 = load i32, i32* @x.4, align 4
  %714 = load i32, i32* @y.5, align 4
  %715 = add i32 %713, -1
  %716 = mul i32 %715, %713
  %717 = and i32 %716, 1
  %718 = icmp eq i32 %717, 0
  %719 = icmp slt i32 %714, 10
  %720 = or i1 %719, %718
  %721 = select i1 %720, i32 673716509, i32 1067975441
  br label %.backedge

722:                                              ; preds = %12
  %.0..0..0.158 = load volatile i1, i1* %1, align 1
  %723 = select i1 %.0..0..0.158, i32 -2081430064, i32 898003458
  br label %.backedge

724:                                              ; preds = %12
  %725 = sext i32 %.0159 to i64
  %726 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2x1, i64 0, i64 %725
  %727 = load i32, i32* %726, align 4
  %728 = add i32 %727, -2
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2y2, i64 0, i64 %725
  %731 = load i32, i32* %730, align 4
  %732 = add i32 %731, -1
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE7ruiseki, i64 0, i64 %729, i64 %733
  %735 = load i32, i32* %734, align 4
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %729, i64 %733
  %738 = load i32, i32* %737, align 4
  %739 = sext i32 %738 to i64
  %740 = sub i64 %.0163, %736
  %.neg167 = add i64 %740, %739
  br label %.backedge

741:                                              ; preds = %12
  %742 = sext i32 %.0159 to i64
  %743 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2x2, i64 0, i64 %742
  %744 = load i32, i32* %743, align 4
  %745 = add i32 %744, -1
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2y1, i64 0, i64 %742
  %748 = load i32, i32* %747, align 4
  %749 = add i32 %748, -2
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE7ruiseki, i64 0, i64 %746, i64 %750
  %752 = load i32, i32* %751, align 4
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %746, i64 %750
  %755 = load i32, i32* %754, align 4
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2x1, i64 0, i64 %742
  %758 = load i32, i32* %757, align 4
  %759 = add i32 %758, -2
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds [200010 x i32], [200010 x i32]* @_ZZ4mainE2y2, i64 0, i64 %742
  %762 = load i32, i32* %761, align 4
  %763 = add i32 %762, -1
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE7ruiseki, i64 0, i64 %760, i64 %764
  %766 = load i32, i32* %765, align 4
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %760, i64 %764
  %769 = load i32, i32* %768, align 4
  %770 = sext i32 %769 to i64
  %771 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE7ruiseki, i64 0, i64 %760, i64 %750
  %772 = load i32, i32* %771, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %760, i64 %750
  %775 = load i32, i32* %774, align 4
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %760, i64 %750
  %778 = load i32, i32* %777, align 4
  %779 = sext i32 %778 to i64
  %780 = add i64 %.0163, %756
  %781 = add nsw i64 %753, %767
  %782 = sub i64 %780, %781
  %783 = add i64 %782, %770
  %784 = add i64 %783, %773
  %785 = add nsw i64 %776, %779
  %786 = sub i64 %784, %785
  br label %.backedge

787:                                              ; preds = %12
  br label %.backedge

788:                                              ; preds = %12
  br label %.backedge

789:                                              ; preds = %12
  %790 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 %.0163)
  br label %.backedge

791:                                              ; preds = %12
  %792 = load i32, i32* @x.4, align 4
  %793 = load i32, i32* @y.5, align 4
  %794 = add i32 %792, -1
  %795 = mul i32 %794, %792
  %796 = and i32 %795, 1
  %797 = icmp eq i32 %796, 0
  %798 = icmp slt i32 %793, 10
  %799 = or i1 %798, %797
  %800 = select i1 %799, i32 -1649597500, i32 -1049313546
  br label %.backedge

801:                                              ; preds = %12
  %.neg165 = add i32 %.0159, 1
  %802 = load i32, i32* @x.4, align 4
  %803 = load i32, i32* @y.5, align 4
  %804 = add i32 %802, -1
  %805 = mul i32 %804, %802
  %806 = and i32 %805, 1
  %807 = icmp eq i32 %806, 0
  %808 = icmp slt i32 %803, 10
  %809 = or i1 %808, %807
  %810 = select i1 %809, i32 708505566, i32 -1049313546
  br label %.backedge

811:                                              ; preds = %12
  br label %.backedge

812:                                              ; preds = %12
  ret i32 0

813:                                              ; preds = %12
  br label %.backedge

814:                                              ; preds = %12
  %815 = sext i32 %.0161 to i64
  %816 = getelementptr inbounds [2010 x i8], [2010 x i8]* @_ZZ4mainE1c, i64 0, i64 %815
  %817 = load i8, i8* %816, align 1
  %818 = sext i8 %817 to i32
  %819 = add nsw i32 %818, -48
  %820 = sext i32 %.0159 to i64
  %821 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE1s, i64 0, i64 %820, i64 %815
  store i32 %819, i32* %821, align 4
  br label %.backedge

822:                                              ; preds = %12
  %823 = add i32 %.0161, 1
  br label %.backedge

824:                                              ; preds = %12
  br label %.backedge

825:                                              ; preds = %12
  br label %.backedge

826:                                              ; preds = %12
  %827 = sext i32 %.0159 to i64
  %828 = add i32 %.0161, -1
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %827, i64 %829
  %831 = load i32, i32* %830, align 4
  %832 = add i32 %831, 1
  %833 = sext i32 %.0161 to i64
  %834 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4tate, i64 0, i64 %827, i64 %833
  store i32 %832, i32* %834, align 4
  br label %.backedge

835:                                              ; preds = %12
  %.neg = add i32 %.0159, 1
  br label %.backedge

836:                                              ; preds = %12
  br label %.backedge

837:                                              ; preds = %12
  br label %.backedge

838:                                              ; preds = %12
  %839 = add i32 %.0159, -1
  %840 = sext i32 %839 to i64
  %841 = sext i32 %.0161 to i64
  %842 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %840, i64 %841
  %843 = load i32, i32* %842, align 4
  %844 = add i32 %843, 1
  %845 = sext i32 %.0159 to i64
  %846 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %845, i64 %841
  store i32 %844, i32* %846, align 4
  br label %.backedge

847:                                              ; preds = %12
  %848 = add i32 %.0159, -1
  %849 = sext i32 %848 to i64
  %850 = sext i32 %.0161 to i64
  %851 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %849, i64 %850
  %852 = load i32, i32* %851, align 4
  %853 = sext i32 %.0159 to i64
  %854 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @_ZZ4mainE4yoko, i64 0, i64 %853, i64 %850
  store i32 %852, i32* %854, align 4
  br label %.backedge

855:                                              ; preds = %12
  br label %.backedge

856:                                              ; preds = %12
  br label %.backedge

857:                                              ; preds = %12
  br label %.backedge

858:                                              ; preds = %12
  br label %.backedge

859:                                              ; preds = %12
  %860 = add i32 %.0161, 1
  br label %.backedge

861:                                              ; preds = %12
  br label %.backedge

862:                                              ; preds = %12
  br label %.backedge

863:                                              ; preds = %12
  br label %.backedge

864:                                              ; preds = %12
  %865 = add i32 %.0159, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s170694843.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
