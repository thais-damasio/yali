; ModuleID = 'build_ollvm/programs/p03707/s468835122.ll'
source_filename = "Project_CodeNet_C++1400/p03707/s468835122.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@str = global [2005 x [2005 x i8]] zeroinitializer, align 16
@sa = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@ssa = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@sb = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@ssb = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@sc = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@ssc = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"%d%d%d%d\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline nounwind uwtable
define void @_Z5solvev() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %7)
  br label %13

13:                                               ; preds = %.backedge, %0
  %.0114 = phi i32 [ 0, %0 ], [ %.0114.be, %.backedge ]
  %.0112 = phi i32 [ undef, %0 ], [ %.0112.be, %.backedge ]
  %.0110 = phi i32 [ undef, %0 ], [ %.0110.be, %.backedge ]
  %.0108 = phi i32 [ undef, %0 ], [ %.0108.be, %.backedge ]
  %.0106 = phi i32 [ undef, %0 ], [ %.0106.be, %.backedge ]
  %.0 = phi i32 [ 1755189570, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1755189570, label %14
    i32 -1113677310, label %18
    i32 -63352829, label %28
    i32 -200853810, label %41
    i32 288235944, label %42
    i32 -386837145, label %46
    i32 -471922772, label %53
    i32 1221903233, label %63
    i32 714757080, label %73
    i32 -1019309488, label %74
    i32 -115908068, label %84
    i32 1865022543, label %105
    i32 702312140, label %107
    i32 -1774604998, label %117
    i32 2056746405, label %132
    i32 -817700414, label %134
    i32 -808847108, label %142
    i32 44348461, label %143
    i32 -379663058, label %152
    i32 -1010463428, label %162
    i32 1945780782, label %173
    i32 890494531, label %174
    i32 -39596600, label %175
    i32 413235244, label %185
    i32 946219863, label %196
    i32 -866848903, label %197
    i32 836107370, label %198
    i32 -1898946933, label %201
    i32 264296050, label %211
    i32 605734585, label %221
    i32 726876744, label %222
    i32 541797388, label %226
    i32 1043392428, label %236
    i32 680164149, label %261
    i32 779003554, label %262
    i32 1908010, label %272
    i32 531626727, label %283
    i32 501080274, label %284
    i32 -365104580, label %285
    i32 196738911, label %287
    i32 1045389884, label %288
    i32 422439975, label %292
    i32 -1478593612, label %293
    i32 -351125663, label %297
    i32 -1016332270, label %305
    i32 1636414159, label %312
    i32 -2013542850, label %322
    i32 2016481276, label %332
    i32 1040301549, label %333
    i32 1641139754, label %343
    i32 1003597816, label %362
    i32 197810482, label %363
    i32 -1524272015, label %373
    i32 -851203896, label %384
    i32 963490587, label %385
    i32 -253523186, label %386
    i32 2009239098, label %396
    i32 1553859200, label %407
    i32 -415128302, label %408
    i32 -1227936594, label %418
    i32 -1299289421, label %428
    i32 -776490390, label %429
    i32 -1440022774, label %432
    i32 -1508496007, label %433
    i32 1623361855, label %443
    i32 -42870674, label %456
    i32 -1088845013, label %458
    i32 -2093288791, label %469
    i32 -2051229877, label %471
    i32 1709672865, label %472
    i32 552126602, label %474
    i32 -983618328, label %484
    i32 -1323574928, label %494
    i32 336029429, label %495
    i32 924577531, label %505
    i32 1009433001, label %517
    i32 -1675159697, label %519
    i32 -1882700913, label %529
    i32 1180576527, label %587
    i32 -1197365875, label %588
    i32 -93828788, label %590
    i32 -1214660460, label %600
    i32 971527122, label %610
    i32 -2090488714, label %611
    i32 -566433861, label %615
    i32 2011924757, label %616
    i32 916312551, label %625
    i32 257443753, label %626
    i32 1206800920, label %628
    i32 -1025057855, label %630
    i32 -1365994721, label %631
    i32 2089033078, label %648
    i32 -1831080720, label %649
    i32 282514425, label %650
    i32 -1165734758, label %660
    i32 1877369547, label %662
    i32 -82964781, label %664
    i32 -420180446, label %665
    i32 -349027812, label %666
    i32 205779530, label %667
    i32 -96972218, label %668
    i32 904962709, label %717
  ]

.backedge:                                        ; preds = %13, %717, %668, %667, %666, %665, %664, %662, %660, %650, %649, %648, %631, %630, %628, %626, %625, %616, %615, %611, %600, %590, %588, %587, %529, %519, %517, %505, %495, %494, %484, %474, %472, %471, %469, %458, %456, %443, %433, %432, %429, %428, %418, %408, %407, %396, %386, %385, %384, %373, %363, %362, %343, %333, %332, %322, %312, %305, %297, %293, %292, %288, %287, %285, %284, %283, %272, %262, %261, %236, %226, %222, %221, %211, %201, %198, %197, %196, %185, %175, %174, %173, %162, %152, %143, %142, %134, %132, %117, %107, %105, %84, %74, %73, %63, %53, %46, %42, %41, %28, %18, %14
  %.0114.be = phi i32 [ %.0114, %13 ], [ %.0114, %717 ], [ %.0114, %668 ], [ %.0114, %667 ], [ 0, %666 ], [ %.0114, %665 ], [ %.0114, %664 ], [ %663, %662 ], [ %.0114, %660 ], [ %.0114, %650 ], [ %.0114, %649 ], [ %.neg, %648 ], [ %.0114, %631 ], [ 0, %630 ], [ %629, %628 ], [ %.0114, %626 ], [ %.0114, %625 ], [ %.0114, %616 ], [ %.0114, %615 ], [ %.0114, %611 ], [ %.0114, %600 ], [ %.0114, %590 ], [ %589, %588 ], [ %.0114, %587 ], [ %.0114, %529 ], [ %.0114, %519 ], [ %.0114, %517 ], [ %.0114, %505 ], [ %.0114, %495 ], [ %.0114, %494 ], [ 0, %484 ], [ %.0114, %474 ], [ %.0114, %472 ], [ %.0114, %471 ], [ %470, %469 ], [ %.0114, %458 ], [ %.0114, %456 ], [ %.0114, %443 ], [ %.0114, %433 ], [ 0, %432 ], [ %.0114, %429 ], [ %.0114, %428 ], [ %.0114, %418 ], [ %.0114, %408 ], [ %.0114, %407 ], [ %397, %396 ], [ %.0114, %386 ], [ %.0114, %385 ], [ %.0114, %384 ], [ %.0114, %373 ], [ %.0114, %363 ], [ %.0114, %362 ], [ %.0114, %343 ], [ %.0114, %333 ], [ %.0114, %332 ], [ %.0114, %322 ], [ %.0114, %312 ], [ %.0114, %305 ], [ %.0114, %297 ], [ %.0114, %293 ], [ %.0114, %292 ], [ %.0114, %288 ], [ 1, %287 ], [ %.0114, %285 ], [ %.0114, %284 ], [ %.0114, %283 ], [ %273, %272 ], [ %.0114, %262 ], [ %.0114, %261 ], [ %.0114, %236 ], [ %.0114, %226 ], [ %.0114, %222 ], [ %.0114, %221 ], [ 0, %211 ], [ %.0114, %201 ], [ %.0114, %198 ], [ %.0114, %197 ], [ %.0114, %196 ], [ %186, %185 ], [ %.0114, %175 ], [ %.0114, %174 ], [ %.0114, %173 ], [ %.0114, %162 ], [ %.0114, %152 ], [ %.0114, %143 ], [ %.0114, %142 ], [ %.0114, %134 ], [ %.0114, %132 ], [ %.0114, %117 ], [ %.0114, %107 ], [ %.0114, %105 ], [ %.0114, %84 ], [ %.0114, %74 ], [ %.0114, %73 ], [ %.0114, %63 ], [ %.0114, %53 ], [ %.0114, %46 ], [ %.0114, %42 ], [ %.0114, %41 ], [ %.0114, %28 ], [ %.0114, %18 ], [ %.0114, %14 ]
  %.0112.be = phi i32 [ %.0112, %13 ], [ %.0112, %717 ], [ %.0112, %668 ], [ %.0112, %667 ], [ %.0112, %666 ], [ %.0112, %665 ], [ 0, %664 ], [ %.0112, %662 ], [ %661, %660 ], [ %.0112, %650 ], [ %.0112, %649 ], [ %.0112, %648 ], [ %.0112, %631 ], [ %.0112, %630 ], [ %.0112, %628 ], [ %627, %626 ], [ %.0112, %625 ], [ %.0112, %616 ], [ %.0112, %615 ], [ 0, %611 ], [ %.0112, %600 ], [ %.0112, %590 ], [ %.0112, %588 ], [ %.0112, %587 ], [ %.0112, %529 ], [ %.0112, %519 ], [ %.0112, %517 ], [ %.0112, %505 ], [ %.0112, %495 ], [ %.0112, %494 ], [ %.0112, %484 ], [ %.0112, %474 ], [ %473, %472 ], [ %.0112, %471 ], [ %.0112, %469 ], [ %.0112, %458 ], [ %.0112, %456 ], [ %.0112, %443 ], [ %.0112, %433 ], [ %.0112, %432 ], [ %.0112, %429 ], [ %.0112, %428 ], [ 0, %418 ], [ %.0112, %408 ], [ %.0112, %407 ], [ %.0112, %396 ], [ %.0112, %386 ], [ %.0112, %385 ], [ %.0112, %384 ], [ %374, %373 ], [ %.0112, %363 ], [ %.0112, %362 ], [ %.0112, %343 ], [ %.0112, %333 ], [ %.0112, %332 ], [ %.0112, %322 ], [ %.0112, %312 ], [ %.0112, %305 ], [ %.0112, %297 ], [ %.0112, %293 ], [ 0, %292 ], [ %.0112, %288 ], [ %.0112, %287 ], [ %286, %285 ], [ %.0112, %284 ], [ %.0112, %283 ], [ %.0112, %272 ], [ %.0112, %262 ], [ %.0112, %261 ], [ %.0112, %236 ], [ %.0112, %226 ], [ %.0112, %222 ], [ %.0112, %221 ], [ %.0112, %211 ], [ %.0112, %201 ], [ %.0112, %198 ], [ 0, %197 ], [ %.0112, %196 ], [ %.0112, %185 ], [ %.0112, %175 ], [ %.0112, %174 ], [ %.0112, %173 ], [ %163, %162 ], [ %.0112, %152 ], [ %.0112, %143 ], [ %.0112, %142 ], [ %.0112, %134 ], [ %.0112, %132 ], [ %.0112, %117 ], [ %.0112, %107 ], [ %.0112, %105 ], [ %.0112, %84 ], [ %.0112, %74 ], [ %.0112, %73 ], [ %.0112, %63 ], [ %.0112, %53 ], [ %.0112, %46 ], [ %.0112, %42 ], [ %.0112, %41 ], [ 0, %28 ], [ %.0112, %18 ], [ %.0112, %14 ]
  %.0110.be = phi i32 [ %.0110, %13 ], [ %.0110, %717 ], [ %.0110, %668 ], [ %.0110, %667 ], [ %.0110, %666 ], [ %.0110, %665 ], [ %.0110, %664 ], [ %.0110, %662 ], [ %.0110, %660 ], [ %.0110, %650 ], [ %.0110, %649 ], [ %.0110, %648 ], [ %.0110, %631 ], [ %.0110, %630 ], [ %.0110, %628 ], [ %.0110, %626 ], [ %.0110, %625 ], [ %.0110, %616 ], [ 1, %615 ], [ %.0110, %611 ], [ %.0110, %600 ], [ %.0110, %590 ], [ %.0110, %588 ], [ %.0110, %587 ], [ %.0110, %529 ], [ %.0110, %519 ], [ %.0110, %517 ], [ %.0110, %505 ], [ %.0110, %495 ], [ %.0110, %494 ], [ %.0110, %484 ], [ %.0110, %474 ], [ %.0110, %472 ], [ %.0110, %471 ], [ %.0110, %469 ], [ %.0110, %458 ], [ %.0110, %456 ], [ %.0110, %443 ], [ %.0110, %433 ], [ %.0110, %432 ], [ %.0110, %429 ], [ %.0110, %428 ], [ %.0110, %418 ], [ %.0110, %408 ], [ %.0110, %407 ], [ %.0110, %396 ], [ %.0110, %386 ], [ %.0110, %385 ], [ %.0110, %384 ], [ %.0110, %373 ], [ %.0110, %363 ], [ %.0110, %362 ], [ %.0110, %343 ], [ %.0110, %333 ], [ %.0110, %332 ], [ %.0110, %322 ], [ %.0110, %312 ], [ %.0110, %305 ], [ %.0110, %297 ], [ %.0110, %293 ], [ %.0110, %292 ], [ %.0110, %288 ], [ %.0110, %287 ], [ %.0110, %285 ], [ %.0110, %284 ], [ %.0110, %283 ], [ %.0110, %272 ], [ %.0110, %262 ], [ %.0110, %261 ], [ %.0110, %236 ], [ %.0110, %226 ], [ %.0110, %222 ], [ %.0110, %221 ], [ %.0110, %211 ], [ %.0110, %201 ], [ %.0110, %198 ], [ %.0110, %197 ], [ %.0110, %196 ], [ %.0110, %185 ], [ %.0110, %175 ], [ %.0110, %174 ], [ %.0110, %173 ], [ %.0110, %162 ], [ %.0110, %152 ], [ %.0110, %143 ], [ %.0110, %142 ], [ %.0110, %134 ], [ %.0110, %132 ], [ %.0110, %117 ], [ %.0110, %107 ], [ %.0110, %105 ], [ %.0110, %84 ], [ %.0110, %74 ], [ %.0110, %73 ], [ 1, %63 ], [ %.0110, %53 ], [ 0, %46 ], [ %.0110, %42 ], [ %.0110, %41 ], [ %.0110, %28 ], [ %.0110, %18 ], [ %.0110, %14 ]
  %.0108.be = phi i32 [ %.0108, %13 ], [ %.0108, %717 ], [ %.0108, %668 ], [ %.0108, %667 ], [ %.0108, %666 ], [ %.0108, %665 ], [ %.0108, %664 ], [ %.0108, %662 ], [ %.0108, %660 ], [ %.0108, %650 ], [ %.0108, %649 ], [ %.0108, %648 ], [ %.0108, %631 ], [ %.0108, %630 ], [ %.0108, %628 ], [ %.0108, %626 ], [ %.0108, %625 ], [ 0, %616 ], [ %.0108, %615 ], [ %.0108, %611 ], [ %.0108, %600 ], [ %.0108, %590 ], [ %.0108, %588 ], [ %.0108, %587 ], [ %.0108, %529 ], [ %.0108, %519 ], [ %.0108, %517 ], [ %.0108, %505 ], [ %.0108, %495 ], [ %.0108, %494 ], [ %.0108, %484 ], [ %.0108, %474 ], [ %.0108, %472 ], [ %.0108, %471 ], [ %.0108, %469 ], [ %.0108, %458 ], [ %.0108, %456 ], [ %.0108, %443 ], [ %.0108, %433 ], [ %.0108, %432 ], [ %.0108, %429 ], [ %.0108, %428 ], [ %.0108, %418 ], [ %.0108, %408 ], [ %.0108, %407 ], [ %.0108, %396 ], [ %.0108, %386 ], [ %.0108, %385 ], [ %.0108, %384 ], [ %.0108, %373 ], [ %.0108, %363 ], [ %.0108, %362 ], [ %.0108, %343 ], [ %.0108, %333 ], [ %.0108, %332 ], [ %.0108, %322 ], [ %.0108, %312 ], [ %.0108, %305 ], [ %.0108, %297 ], [ %.0108, %293 ], [ %.0108, %292 ], [ %.0108, %288 ], [ %.0108, %287 ], [ %.0108, %285 ], [ %.0108, %284 ], [ %.0108, %283 ], [ %.0108, %272 ], [ %.0108, %262 ], [ %.0108, %261 ], [ %.0108, %236 ], [ %.0108, %226 ], [ %.0108, %222 ], [ %.0108, %221 ], [ %.0108, %211 ], [ %.0108, %201 ], [ %.0108, %198 ], [ %.0108, %197 ], [ %.0108, %196 ], [ %.0108, %185 ], [ %.0108, %175 ], [ %.0108, %174 ], [ %.0108, %173 ], [ %.0108, %162 ], [ %.0108, %152 ], [ %.0108, %143 ], [ 1, %142 ], [ %.0108, %134 ], [ %.0108, %132 ], [ %.0108, %117 ], [ %.0108, %107 ], [ %.0108, %105 ], [ 0, %84 ], [ %.0108, %74 ], [ %.0108, %73 ], [ %.0108, %63 ], [ %.0108, %53 ], [ %.0108, %46 ], [ %.0108, %42 ], [ %.0108, %41 ], [ %.0108, %28 ], [ %.0108, %18 ], [ %.0108, %14 ]
  %.0106.be = phi i32 [ %.0106, %13 ], [ %.0106, %717 ], [ %.0106, %668 ], [ %.0106, %667 ], [ %.0106, %666 ], [ %.0106, %665 ], [ %.0106, %664 ], [ %.0106, %662 ], [ %.0106, %660 ], [ %.0106, %650 ], [ 1, %649 ], [ %.0106, %648 ], [ %.0106, %631 ], [ %.0106, %630 ], [ %.0106, %628 ], [ %.0106, %626 ], [ %.0106, %625 ], [ %.0106, %616 ], [ %.0106, %615 ], [ %.0106, %611 ], [ %.0106, %600 ], [ %.0106, %590 ], [ %.0106, %588 ], [ %.0106, %587 ], [ %.0106, %529 ], [ %.0106, %519 ], [ %.0106, %517 ], [ %.0106, %505 ], [ %.0106, %495 ], [ %.0106, %494 ], [ %.0106, %484 ], [ %.0106, %474 ], [ %.0106, %472 ], [ %.0106, %471 ], [ %.0106, %469 ], [ %.0106, %458 ], [ %.0106, %456 ], [ %.0106, %443 ], [ %.0106, %433 ], [ %.0106, %432 ], [ %.0106, %429 ], [ %.0106, %428 ], [ %.0106, %418 ], [ %.0106, %408 ], [ %.0106, %407 ], [ %.0106, %396 ], [ %.0106, %386 ], [ %.0106, %385 ], [ %.0106, %384 ], [ %.0106, %373 ], [ %.0106, %363 ], [ %.0106, %362 ], [ %.0106, %343 ], [ %.0106, %333 ], [ %.0106, %332 ], [ 1, %322 ], [ %.0106, %312 ], [ %.0106, %305 ], [ 0, %297 ], [ %.0106, %293 ], [ %.0106, %292 ], [ %.0106, %288 ], [ %.0106, %287 ], [ %.0106, %285 ], [ %.0106, %284 ], [ %.0106, %283 ], [ %.0106, %272 ], [ %.0106, %262 ], [ %.0106, %261 ], [ %.0106, %236 ], [ %.0106, %226 ], [ %.0106, %222 ], [ %.0106, %221 ], [ %.0106, %211 ], [ %.0106, %201 ], [ %.0106, %198 ], [ %.0106, %197 ], [ %.0106, %196 ], [ %.0106, %185 ], [ %.0106, %175 ], [ %.0106, %174 ], [ %.0106, %173 ], [ %.0106, %162 ], [ %.0106, %152 ], [ %.0106, %143 ], [ %.0106, %142 ], [ %.0106, %134 ], [ %.0106, %132 ], [ %.0106, %117 ], [ %.0106, %107 ], [ %.0106, %105 ], [ %.0106, %84 ], [ %.0106, %74 ], [ %.0106, %73 ], [ %.0106, %63 ], [ %.0106, %53 ], [ %.0106, %46 ], [ %.0106, %42 ], [ %.0106, %41 ], [ %.0106, %28 ], [ %.0106, %18 ], [ %.0106, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ -1214660460, %717 ], [ -1882700913, %668 ], [ 924577531, %667 ], [ -983618328, %666 ], [ 1623361855, %665 ], [ -1227936594, %664 ], [ 2009239098, %662 ], [ -1524272015, %660 ], [ 1641139754, %650 ], [ -2013542850, %649 ], [ 1908010, %648 ], [ 1043392428, %631 ], [ 264296050, %630 ], [ 413235244, %628 ], [ -1010463428, %626 ], [ -1774604998, %625 ], [ -115908068, %616 ], [ 1221903233, %615 ], [ -63352829, %611 ], [ %609, %600 ], [ %599, %590 ], [ 336029429, %588 ], [ -1197365875, %587 ], [ %586, %529 ], [ %528, %519 ], [ %518, %517 ], [ %516, %505 ], [ %504, %495 ], [ 336029429, %494 ], [ %493, %484 ], [ %483, %474 ], [ -776490390, %472 ], [ 1709672865, %471 ], [ -1508496007, %469 ], [ -2093288791, %458 ], [ %457, %456 ], [ %455, %443 ], [ %442, %433 ], [ -1508496007, %432 ], [ %431, %429 ], [ -776490390, %428 ], [ %427, %418 ], [ %417, %408 ], [ 1045389884, %407 ], [ %406, %396 ], [ %395, %386 ], [ -253523186, %385 ], [ -1478593612, %384 ], [ %383, %373 ], [ %372, %363 ], [ 197810482, %362 ], [ %361, %343 ], [ %342, %333 ], [ 1040301549, %332 ], [ %331, %322 ], [ %321, %312 ], [ %311, %305 ], [ %304, %297 ], [ %296, %293 ], [ -1478593612, %292 ], [ %291, %288 ], [ 1045389884, %287 ], [ 836107370, %285 ], [ -365104580, %284 ], [ 726876744, %283 ], [ %282, %272 ], [ %271, %262 ], [ 779003554, %261 ], [ %260, %236 ], [ %235, %226 ], [ %225, %222 ], [ 726876744, %221 ], [ %220, %211 ], [ %210, %201 ], [ %200, %198 ], [ 836107370, %197 ], [ 1755189570, %196 ], [ %195, %185 ], [ %184, %175 ], [ -39596600, %174 ], [ 288235944, %173 ], [ %172, %162 ], [ %161, %152 ], [ -379663058, %143 ], [ 44348461, %142 ], [ %141, %134 ], [ %133, %132 ], [ %131, %117 ], [ %116, %107 ], [ %106, %105 ], [ %104, %84 ], [ %83, %74 ], [ -1019309488, %73 ], [ %72, %63 ], [ %62, %53 ], [ %52, %46 ], [ %45, %42 ], [ 288235944, %41 ], [ %40, %28 ], [ %27, %18 ], [ %17, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %.0114, %15
  %17 = select i1 %16, i32 -1113677310, i32 -866848903
  br label %.backedge

18:                                               ; preds = %13
  %19 = load i32, i32* @x, align 4
  %20 = load i32, i32* @y, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 -63352829, i32 -2090488714
  br label %.backedge

28:                                               ; preds = %13
  %29 = sext i32 %.0114 to i64
  %30 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @str, i64 0, i64 %29, i64 0
  %31 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %30)
  %32 = load i32, i32* @x, align 4
  %33 = load i32, i32* @y, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -200853810, i32 -2090488714
  br label %.backedge

41:                                               ; preds = %13
  br label %.backedge

42:                                               ; preds = %13
  %43 = load i32, i32* %6, align 4
  %44 = icmp slt i32 %.0112, %43
  %45 = select i1 %44, i32 -386837145, i32 890494531
  br label %.backedge

46:                                               ; preds = %13
  %47 = sext i32 %.0114 to i64
  %48 = sext i32 %.0112 to i64
  %49 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @str, i64 0, i64 %47, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 49
  %52 = select i1 %51, i32 -471922772, i32 -1019309488
  br label %.backedge

53:                                               ; preds = %13
  %54 = load i32, i32* @x, align 4
  %55 = load i32, i32* @y, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 1221903233, i32 -566433861
  br label %.backedge

63:                                               ; preds = %13
  %64 = load i32, i32* @x, align 4
  %65 = load i32, i32* @y, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 714757080, i32 -566433861
  br label %.backedge

73:                                               ; preds = %13
  br label %.backedge

74:                                               ; preds = %13
  %75 = load i32, i32* @x, align 4
  %76 = load i32, i32* @y, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 -115908068, i32 2011924757
  br label %.backedge

84:                                               ; preds = %13
  %85 = sext i32 %.0114 to i64
  %86 = sext i32 %.0112 to i64
  %87 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sa, i64 0, i64 %85, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, %.0110
  %90 = add i32 %.0112, 1
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sa, i64 0, i64 %85, i64 %91
  store i32 %89, i32* %92, align 4
  %93 = load i32, i32* %6, align 4
  %94 = add i32 %93, -1
  %95 = icmp slt i32 %.0112, %94
  store i1 %95, i1* %4, align 1
  %96 = load i32, i32* @x, align 4
  %97 = load i32, i32* @y, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 1865022543, i32 2011924757
  br label %.backedge

105:                                              ; preds = %13
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %106 = select i1 %.0..0..0., i32 702312140, i32 44348461
  br label %.backedge

107:                                              ; preds = %13
  %108 = load i32, i32* @x, align 4
  %109 = load i32, i32* @y, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -1774604998, i32 916312551
  br label %.backedge

117:                                              ; preds = %13
  %118 = sext i32 %.0114 to i64
  %119 = sext i32 %.0112 to i64
  %120 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @str, i64 0, i64 %118, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = icmp eq i8 %121, 49
  store i1 %122, i1* %3, align 1
  %123 = load i32, i32* @x, align 4
  %124 = load i32, i32* @y, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 2056746405, i32 916312551
  br label %.backedge

132:                                              ; preds = %13
  %.0..0..0.103 = load volatile i1, i1* %3, align 1
  %133 = select i1 %.0..0..0.103, i32 -817700414, i32 44348461
  br label %.backedge

134:                                              ; preds = %13
  %135 = sext i32 %.0114 to i64
  %136 = add i32 %.0112, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @str, i64 0, i64 %135, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = icmp eq i8 %139, 49
  %141 = select i1 %140, i32 -808847108, i32 44348461
  br label %.backedge

142:                                              ; preds = %13
  br label %.backedge

143:                                              ; preds = %13
  %144 = sext i32 %.0114 to i64
  %145 = sext i32 %.0112 to i64
  %146 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sb, i64 0, i64 %144, i64 %145
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, %.0108
  %149 = add i32 %.0112, 1
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sb, i64 0, i64 %144, i64 %150
  store i32 %148, i32* %151, align 4
  br label %.backedge

152:                                              ; preds = %13
  %153 = load i32, i32* @x, align 4
  %154 = load i32, i32* @y, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 -1010463428, i32 257443753
  br label %.backedge

162:                                              ; preds = %13
  %163 = add i32 %.0112, 1
  %164 = load i32, i32* @x, align 4
  %165 = load i32, i32* @y, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 1945780782, i32 257443753
  br label %.backedge

173:                                              ; preds = %13
  br label %.backedge

174:                                              ; preds = %13
  br label %.backedge

175:                                              ; preds = %13
  %176 = load i32, i32* @x, align 4
  %177 = load i32, i32* @y, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 413235244, i32 1206800920
  br label %.backedge

185:                                              ; preds = %13
  %186 = add i32 %.0114, 1
  %187 = load i32, i32* @x, align 4
  %188 = load i32, i32* @y, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 946219863, i32 1206800920
  br label %.backedge

196:                                              ; preds = %13
  br label %.backedge

197:                                              ; preds = %13
  br label %.backedge

198:                                              ; preds = %13
  %199 = load i32, i32* %6, align 4
  %.not131 = icmp sgt i32 %.0112, %199
  %200 = select i1 %.not131, i32 196738911, i32 -1898946933
  br label %.backedge

201:                                              ; preds = %13
  %202 = load i32, i32* @x, align 4
  %203 = load i32, i32* @y, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 264296050, i32 -1025057855
  br label %.backedge

211:                                              ; preds = %13
  %212 = load i32, i32* @x, align 4
  %213 = load i32, i32* @y, align 4
  %214 = add i32 %212, -1
  %215 = mul i32 %214, %212
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %218, %217
  %220 = select i1 %219, i32 605734585, i32 -1025057855
  br label %.backedge

221:                                              ; preds = %13
  br label %.backedge

222:                                              ; preds = %13
  %223 = load i32, i32* %5, align 4
  %224 = icmp slt i32 %.0114, %223
  %225 = select i1 %224, i32 541797388, i32 501080274
  br label %.backedge

226:                                              ; preds = %13
  %227 = load i32, i32* @x, align 4
  %228 = load i32, i32* @y, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 1043392428, i32 -1365994721
  br label %.backedge

236:                                              ; preds = %13
  %237 = sext i32 %.0114 to i64
  %238 = sext i32 %.0112 to i64
  %239 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %237, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sa, i64 0, i64 %237, i64 %238
  %242 = load i32, i32* %241, align 4
  %243 = add i32 %242, %240
  %.neg130 = add i32 %.0114, 1
  %244 = sext i32 %.neg130 to i64
  %245 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %244, i64 %238
  store i32 %243, i32* %245, align 4
  %246 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %237, i64 %238
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sb, i64 0, i64 %237, i64 %238
  %249 = load i32, i32* %248, align 4
  %250 = add i32 %249, %247
  %251 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %244, i64 %238
  store i32 %250, i32* %251, align 4
  %252 = load i32, i32* @x, align 4
  %253 = load i32, i32* @y, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 680164149, i32 -1365994721
  br label %.backedge

261:                                              ; preds = %13
  br label %.backedge

262:                                              ; preds = %13
  %263 = load i32, i32* @x, align 4
  %264 = load i32, i32* @y, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 1908010, i32 2089033078
  br label %.backedge

272:                                              ; preds = %13
  %273 = add i32 %.0114, 1
  %274 = load i32, i32* @x, align 4
  %275 = load i32, i32* @y, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 531626727, i32 2089033078
  br label %.backedge

283:                                              ; preds = %13
  br label %.backedge

284:                                              ; preds = %13
  br label %.backedge

285:                                              ; preds = %13
  %286 = add i32 %.0112, 1
  br label %.backedge

287:                                              ; preds = %13
  br label %.backedge

288:                                              ; preds = %13
  %289 = load i32, i32* %5, align 4
  %290 = icmp slt i32 %.0114, %289
  %291 = select i1 %290, i32 422439975, i32 -415128302
  br label %.backedge

292:                                              ; preds = %13
  br label %.backedge

293:                                              ; preds = %13
  %294 = load i32, i32* %6, align 4
  %295 = icmp slt i32 %.0112, %294
  %296 = select i1 %295, i32 -351125663, i32 963490587
  br label %.backedge

297:                                              ; preds = %13
  %298 = add i32 %.0114, -1
  %299 = sext i32 %298 to i64
  %300 = sext i32 %.0112 to i64
  %301 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @str, i64 0, i64 %299, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = icmp eq i8 %302, 49
  %304 = select i1 %303, i32 -1016332270, i32 1040301549
  br label %.backedge

305:                                              ; preds = %13
  %306 = sext i32 %.0114 to i64
  %307 = sext i32 %.0112 to i64
  %308 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @str, i64 0, i64 %306, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = icmp eq i8 %309, 49
  %311 = select i1 %310, i32 1636414159, i32 1040301549
  br label %.backedge

312:                                              ; preds = %13
  %313 = load i32, i32* @x, align 4
  %314 = load i32, i32* @y, align 4
  %315 = add i32 %313, -1
  %316 = mul i32 %315, %313
  %317 = and i32 %316, 1
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %319, %318
  %321 = select i1 %320, i32 -2013542850, i32 -1831080720
  br label %.backedge

322:                                              ; preds = %13
  %323 = load i32, i32* @x, align 4
  %324 = load i32, i32* @y, align 4
  %325 = add i32 %323, -1
  %326 = mul i32 %325, %323
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %329, %328
  %331 = select i1 %330, i32 2016481276, i32 -1831080720
  br label %.backedge

332:                                              ; preds = %13
  br label %.backedge

333:                                              ; preds = %13
  %334 = load i32, i32* @x, align 4
  %335 = load i32, i32* @y, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 1641139754, i32 282514425
  br label %.backedge

343:                                              ; preds = %13
  %344 = add i32 %.0114, -1
  %345 = sext i32 %344 to i64
  %346 = sext i32 %.0112 to i64
  %347 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sc, i64 0, i64 %345, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = add i32 %348, %.0106
  %350 = add i32 %.0112, 1
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sc, i64 0, i64 %345, i64 %351
  store i32 %349, i32* %352, align 4
  %353 = load i32, i32* @x, align 4
  %354 = load i32, i32* @y, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 1003597816, i32 282514425
  br label %.backedge

362:                                              ; preds = %13
  br label %.backedge

363:                                              ; preds = %13
  %364 = load i32, i32* @x, align 4
  %365 = load i32, i32* @y, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 -1524272015, i32 -1165734758
  br label %.backedge

373:                                              ; preds = %13
  %374 = add i32 %.0112, 1
  %375 = load i32, i32* @x, align 4
  %376 = load i32, i32* @y, align 4
  %377 = add i32 %375, -1
  %378 = mul i32 %377, %375
  %379 = and i32 %378, 1
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %381, %380
  %383 = select i1 %382, i32 -851203896, i32 -1165734758
  br label %.backedge

384:                                              ; preds = %13
  br label %.backedge

385:                                              ; preds = %13
  br label %.backedge

386:                                              ; preds = %13
  %387 = load i32, i32* @x, align 4
  %388 = load i32, i32* @y, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 2009239098, i32 1877369547
  br label %.backedge

396:                                              ; preds = %13
  %397 = add i32 %.0114, 1
  %398 = load i32, i32* @x, align 4
  %399 = load i32, i32* @y, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 1553859200, i32 1877369547
  br label %.backedge

407:                                              ; preds = %13
  br label %.backedge

408:                                              ; preds = %13
  %409 = load i32, i32* @x, align 4
  %410 = load i32, i32* @y, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 -1227936594, i32 -82964781
  br label %.backedge

418:                                              ; preds = %13
  %419 = load i32, i32* @x, align 4
  %420 = load i32, i32* @y, align 4
  %421 = add i32 %419, -1
  %422 = mul i32 %421, %419
  %423 = and i32 %422, 1
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %425, %424
  %427 = select i1 %426, i32 -1299289421, i32 -82964781
  br label %.backedge

428:                                              ; preds = %13
  br label %.backedge

429:                                              ; preds = %13
  %430 = load i32, i32* %6, align 4
  %.not = icmp sgt i32 %.0112, %430
  %431 = select i1 %.not, i32 552126602, i32 -1440022774
  br label %.backedge

432:                                              ; preds = %13
  br label %.backedge

433:                                              ; preds = %13
  %434 = load i32, i32* @x, align 4
  %435 = load i32, i32* @y, align 4
  %436 = add i32 %434, -1
  %437 = mul i32 %436, %434
  %438 = and i32 %437, 1
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %440, %439
  %442 = select i1 %441, i32 1623361855, i32 -420180446
  br label %.backedge

443:                                              ; preds = %13
  %444 = load i32, i32* %5, align 4
  %445 = add i32 %444, -1
  %446 = icmp slt i32 %.0114, %445
  store i1 %446, i1* %2, align 1
  %447 = load i32, i32* @x, align 4
  %448 = load i32, i32* @y, align 4
  %449 = add i32 %447, -1
  %450 = mul i32 %449, %447
  %451 = and i32 %450, 1
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %453, %452
  %455 = select i1 %454, i32 -42870674, i32 -420180446
  br label %.backedge

456:                                              ; preds = %13
  %.0..0..0.104 = load volatile i1, i1* %2, align 1
  %457 = select i1 %.0..0..0.104, i32 -1088845013, i32 -2051229877
  br label %.backedge

458:                                              ; preds = %13
  %459 = sext i32 %.0114 to i64
  %460 = sext i32 %.0112 to i64
  %461 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %459, i64 %460
  %462 = load i32, i32* %461, align 4
  %463 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sc, i64 0, i64 %459, i64 %460
  %464 = load i32, i32* %463, align 4
  %465 = add i32 %464, %462
  %466 = add i32 %.0114, 1
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %467, i64 %460
  store i32 %465, i32* %468, align 4
  br label %.backedge

469:                                              ; preds = %13
  %470 = add i32 %.0114, 1
  br label %.backedge

471:                                              ; preds = %13
  br label %.backedge

472:                                              ; preds = %13
  %473 = add i32 %.0112, 1
  br label %.backedge

474:                                              ; preds = %13
  %475 = load i32, i32* @x, align 4
  %476 = load i32, i32* @y, align 4
  %477 = add i32 %475, -1
  %478 = mul i32 %477, %475
  %479 = and i32 %478, 1
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %481, %480
  %483 = select i1 %482, i32 -983618328, i32 -349027812
  br label %.backedge

484:                                              ; preds = %13
  %485 = load i32, i32* @x, align 4
  %486 = load i32, i32* @y, align 4
  %487 = add i32 %485, -1
  %488 = mul i32 %487, %485
  %489 = and i32 %488, 1
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %491, %490
  %493 = select i1 %492, i32 -1323574928, i32 -349027812
  br label %.backedge

494:                                              ; preds = %13
  br label %.backedge

495:                                              ; preds = %13
  %496 = load i32, i32* @x, align 4
  %497 = load i32, i32* @y, align 4
  %498 = add i32 %496, -1
  %499 = mul i32 %498, %496
  %500 = and i32 %499, 1
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %502, %501
  %504 = select i1 %503, i32 924577531, i32 205779530
  br label %.backedge

505:                                              ; preds = %13
  %506 = load i32, i32* %7, align 4
  %507 = icmp slt i32 %.0114, %506
  store i1 %507, i1* %1, align 1
  %508 = load i32, i32* @x, align 4
  %509 = load i32, i32* @y, align 4
  %510 = add i32 %508, -1
  %511 = mul i32 %510, %508
  %512 = and i32 %511, 1
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %514, %513
  %516 = select i1 %515, i32 1009433001, i32 205779530
  br label %.backedge

517:                                              ; preds = %13
  %.0..0..0.105 = load volatile i1, i1* %1, align 1
  %518 = select i1 %.0..0..0.105, i32 -1675159697, i32 -93828788
  br label %.backedge

519:                                              ; preds = %13
  %520 = load i32, i32* @x, align 4
  %521 = load i32, i32* @y, align 4
  %522 = add i32 %520, -1
  %523 = mul i32 %522, %520
  %524 = and i32 %523, 1
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %526, %525
  %528 = select i1 %527, i32 -1882700913, i32 -96972218
  br label %.backedge

529:                                              ; preds = %13
  %530 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %8, i32* nonnull %9, i32* nonnull %10, i32* nonnull %11)
  %531 = load i32, i32* %8, align 4
  %.neg122 = add i32 %531, -1
  store i32 %.neg122, i32* %8, align 4
  %532 = load i32, i32* %9, align 4
  %533 = add i32 %532, -1
  store i32 %533, i32* %9, align 4
  %534 = load i32, i32* %10, align 4
  %535 = add i32 %534, -1
  store i32 %535, i32* %10, align 4
  %536 = load i32, i32* %11, align 4
  %537 = add i32 %536, -1
  store i32 %537, i32* %11, align 4
  %538 = sext i32 %534 to i64
  %539 = sext i32 %536 to i64
  %540 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %538, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = sext i32 %.neg122 to i64
  %543 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %542, i64 %539
  %544 = load i32, i32* %543, align 4
  %545 = sext i32 %533 to i64
  %546 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %538, i64 %545
  %547 = load i32, i32* %546, align 4
  %548 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %542, i64 %545
  %549 = load i32, i32* %548, align 4
  %550 = sext i32 %537 to i64
  %551 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %538, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %542, i64 %550
  %554 = load i32, i32* %553, align 4
  %555 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %538, i64 %545
  %556 = load i32, i32* %555, align 4
  %557 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %542, i64 %545
  %558 = load i32, i32* %557, align 4
  %559 = sext i32 %535 to i64
  %560 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %559, i64 %539
  %561 = load i32, i32* %560, align 4
  %562 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %542, i64 %539
  %563 = load i32, i32* %562, align 4
  %564 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %559, i64 %545
  %565 = load i32, i32* %564, align 4
  %566 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %542, i64 %545
  %567 = load i32, i32* %566, align 4
  %568 = add i32 %544, %547
  %569 = add i32 %541, %549
  %570 = add i32 %568, %552
  %.neg125 = sub i32 %569, %570
  %.neg159 = add i32 %.neg125, %554
  %571 = add i32 %.neg159, %556
  %572 = add i32 %558, %561
  %573 = sub i32 %571, %572
  %574 = add i32 %573, %563
  %575 = add i32 %574, %565
  %576 = sub i32 %575, %567
  %577 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %576)
  %578 = load i32, i32* @x, align 4
  %579 = load i32, i32* @y, align 4
  %580 = add i32 %578, -1
  %581 = mul i32 %580, %578
  %582 = and i32 %581, 1
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %584, %583
  %586 = select i1 %585, i32 1180576527, i32 -96972218
  br label %.backedge

587:                                              ; preds = %13
  br label %.backedge

588:                                              ; preds = %13
  %589 = add i32 %.0114, 1
  br label %.backedge

590:                                              ; preds = %13
  %591 = load i32, i32* @x, align 4
  %592 = load i32, i32* @y, align 4
  %593 = add i32 %591, -1
  %594 = mul i32 %593, %591
  %595 = and i32 %594, 1
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %597, %596
  %599 = select i1 %598, i32 -1214660460, i32 904962709
  br label %.backedge

600:                                              ; preds = %13
  %601 = load i32, i32* @x, align 4
  %602 = load i32, i32* @y, align 4
  %603 = add i32 %601, -1
  %604 = mul i32 %603, %601
  %605 = and i32 %604, 1
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %607, %606
  %609 = select i1 %608, i32 971527122, i32 904962709
  br label %.backedge

610:                                              ; preds = %13
  ret void

611:                                              ; preds = %13
  %612 = sext i32 %.0114 to i64
  %613 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @str, i64 0, i64 %612, i64 0
  %614 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %613)
  br label %.backedge

615:                                              ; preds = %13
  br label %.backedge

616:                                              ; preds = %13
  %617 = sext i32 %.0114 to i64
  %618 = sext i32 %.0112 to i64
  %619 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sa, i64 0, i64 %617, i64 %618
  %620 = load i32, i32* %619, align 4
  %621 = add i32 %620, %.0110
  %622 = add i32 %.0112, 1
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sa, i64 0, i64 %617, i64 %623
  store i32 %621, i32* %624, align 4
  br label %.backedge

625:                                              ; preds = %13
  br label %.backedge

626:                                              ; preds = %13
  %627 = add i32 %.0112, 1
  br label %.backedge

628:                                              ; preds = %13
  %629 = add i32 %.0114, 1
  br label %.backedge

630:                                              ; preds = %13
  br label %.backedge

631:                                              ; preds = %13
  %632 = sext i32 %.0114 to i64
  %633 = sext i32 %.0112 to i64
  %634 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %632, i64 %633
  %635 = load i32, i32* %634, align 4
  %636 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sa, i64 0, i64 %632, i64 %633
  %637 = load i32, i32* %636, align 4
  %638 = add i32 %637, %635
  %639 = add i32 %.0114, 1
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %640, i64 %633
  store i32 %638, i32* %641, align 4
  %642 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %632, i64 %633
  %643 = load i32, i32* %642, align 4
  %644 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sb, i64 0, i64 %632, i64 %633
  %645 = load i32, i32* %644, align 4
  %646 = add i32 %645, %643
  %647 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %640, i64 %633
  store i32 %646, i32* %647, align 4
  br label %.backedge

648:                                              ; preds = %13
  %.neg = add i32 %.0114, 1
  br label %.backedge

649:                                              ; preds = %13
  br label %.backedge

650:                                              ; preds = %13
  %651 = add i32 %.0114, -1
  %652 = sext i32 %651 to i64
  %653 = sext i32 %.0112 to i64
  %654 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sc, i64 0, i64 %652, i64 %653
  %655 = load i32, i32* %654, align 4
  %656 = add i32 %655, %.0106
  %657 = add i32 %.0112, 1
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @sc, i64 0, i64 %652, i64 %658
  store i32 %656, i32* %659, align 4
  br label %.backedge

660:                                              ; preds = %13
  %661 = add i32 %.0112, 1
  br label %.backedge

662:                                              ; preds = %13
  %663 = add i32 %.0114, 1
  br label %.backedge

664:                                              ; preds = %13
  br label %.backedge

665:                                              ; preds = %13
  br label %.backedge

666:                                              ; preds = %13
  br label %.backedge

667:                                              ; preds = %13
  br label %.backedge

668:                                              ; preds = %13
  %669 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %8, i32* nonnull %9, i32* nonnull %10, i32* nonnull %11)
  %670 = load i32, i32* %8, align 4
  %671 = add i32 %670, -1
  store i32 %671, i32* %8, align 4
  %672 = load i32, i32* %9, align 4
  %673 = add i32 %672, -1
  store i32 %673, i32* %9, align 4
  %674 = load i32, i32* %10, align 4
  %675 = add i32 %674, -1
  store i32 %675, i32* %10, align 4
  %676 = load i32, i32* %11, align 4
  %677 = add i32 %676, -1
  store i32 %677, i32* %11, align 4
  %678 = sext i32 %674 to i64
  %679 = sext i32 %676 to i64
  %680 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %678, i64 %679
  %681 = load i32, i32* %680, align 4
  %682 = sext i32 %671 to i64
  %683 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %682, i64 %679
  %684 = load i32, i32* %683, align 4
  %685 = sext i32 %673 to i64
  %686 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %678, i64 %685
  %687 = load i32, i32* %686, align 4
  %688 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssa, i64 0, i64 %682, i64 %685
  %689 = load i32, i32* %688, align 4
  %690 = sext i32 %677 to i64
  %691 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %678, i64 %690
  %692 = load i32, i32* %691, align 4
  %693 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %682, i64 %690
  %694 = load i32, i32* %693, align 4
  %695 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %678, i64 %685
  %696 = load i32, i32* %695, align 4
  %697 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssb, i64 0, i64 %682, i64 %685
  %698 = load i32, i32* %697, align 4
  %699 = sext i32 %675 to i64
  %700 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %699, i64 %679
  %701 = load i32, i32* %700, align 4
  %702 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %682, i64 %679
  %703 = load i32, i32* %702, align 4
  %704 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %699, i64 %685
  %705 = load i32, i32* %704, align 4
  %706 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ssc, i64 0, i64 %682, i64 %685
  %707 = load i32, i32* %706, align 4
  %708 = add i32 %684, %687
  %709 = add i32 %681, %689
  %710 = add i32 %708, %692
  %711 = sub i32 %709, %710
  %.neg147 = add i32 %711, %694
  %.neg149 = add i32 %.neg147, %696
  %712 = add i32 %698, %701
  %713 = sub i32 %.neg149, %712
  %.neg.neg = add i32 %713, %703
  %714 = add i32 %.neg.neg, %705
  %715 = sub i32 %714, %707
  %716 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %715)
  br label %.backedge

717:                                              ; preds = %13
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main(i32 %0, i8** nocapture readnone %1) local_unnamed_addr #2 {
  tail call void @_Z5solvev()
  ret i32 0
}

attributes #0 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
