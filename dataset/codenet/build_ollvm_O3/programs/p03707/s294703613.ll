; ModuleID = 'build_ollvm/programs/p03707/s294703613.ll'
source_filename = "Project_CodeNet_C++1400/p03707/s294703613.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_Z4readv = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = local_unnamed_addr global i32 0, align 4
@m = local_unnamed_addr global i32 0, align 4
@Q = local_unnamed_addr global i32 0, align 4
@a = global [2005 x [2005 x i32]] zeroinitializer, align 16
@b = global [2005 x [2005 x i32]] zeroinitializer, align 16
@c = global [2005 x [2005 x i32]] zeroinitializer, align 16
@ch = global i8 0, align 1
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s294703613.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define i32 @_Z4workPA2005_iiiii([2005 x i32]* nocapture readonly %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #4 {
  %6 = sext i32 %3 to i64
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [2005 x i32], [2005 x i32]* %0, i64 %6, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %1, -1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [2005 x i32], [2005 x i32]* %0, i64 %11, i64 %7
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %2, -1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [2005 x i32], [2005 x i32]* %0, i64 %6, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds [2005 x i32], [2005 x i32]* %0, i64 %11, i64 %15
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %13, %17
  %21 = sub i32 %9, %20
  %22 = add i32 %21, %19
  ret i32 %22
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = tail call i32 @_Z4readv()
  store i32 %7, i32* @n, align 4
  %8 = tail call i32 @_Z4readv()
  store i32 %8, i32* @m, align 4
  %9 = tail call i32 @_Z4readv()
  store i32 %9, i32* @Q, align 4
  br label %10

10:                                               ; preds = %.backedge, %0
  %.0130 = phi i32 [ undef, %0 ], [ %.0130.be, %.backedge ]
  %.0128 = phi i32 [ undef, %0 ], [ %.0128.be, %.backedge ]
  %.0126 = phi i32 [ undef, %0 ], [ %.0126.be, %.backedge ]
  %.0124 = phi i32 [ undef, %0 ], [ %.0124.be, %.backedge ]
  %.0122 = phi i32 [ undef, %0 ], [ %.0122.be, %.backedge ]
  %.0120 = phi i32 [ undef, %0 ], [ %.0120.be, %.backedge ]
  %.0118 = phi i32 [ undef, %0 ], [ %.0118.be, %.backedge ]
  %.0116 = phi i32 [ 1, %0 ], [ %.0116.be, %.backedge ]
  %.0 = phi i32 [ -1838226354, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1838226354, label %11
    i32 1199116429, label %21
    i32 1755393680, label %33
    i32 -482249632, label %35
    i32 -817171140, label %45
    i32 -446293037, label %55
    i32 -1146764173, label %56
    i32 -665262036, label %66
    i32 -250724225, label %78
    i32 1993119734, label %80
    i32 -728047121, label %88
    i32 392659614, label %98
    i32 2116851232, label %109
    i32 -1767594378, label %110
    i32 -18210314, label %111
    i32 -300381911, label %112
    i32 2114335526, label %122
    i32 -1867010717, label %132
    i32 940648005, label %133
    i32 -1303088049, label %143
    i32 -1254964358, label %155
    i32 -515289315, label %157
    i32 667299835, label %158
    i32 -890168716, label %168
    i32 -678824513, label %180
    i32 -260045039, label %182
    i32 -1373470994, label %192
    i32 -142046821, label %212
    i32 -2123265075, label %213
    i32 -504013809, label %223
    i32 1120235340, label %233
    i32 -1371051350, label %234
    i32 -2079465112, label %244
    i32 -1231997843, label %254
    i32 -612239239, label %255
    i32 -1952548660, label %265
    i32 915648824, label %276
    i32 -30706586, label %277
    i32 598618996, label %278
    i32 -759937057, label %288
    i32 -185306998, label %300
    i32 -1334031614, label %302
    i32 1674570783, label %312
    i32 -1729051999, label %322
    i32 268939665, label %323
    i32 946946169, label %326
    i32 1682395943, label %336
    i32 2069167471, label %355
    i32 -308964594, label %356
    i32 79513115, label %358
    i32 1804402201, label %359
    i32 882618686, label %361
    i32 -220537486, label %362
    i32 544008956, label %365
    i32 467785917, label %366
    i32 1857294617, label %369
    i32 730239488, label %379
    i32 282303745, label %427
    i32 -1730211780, label %428
    i32 176836206, label %430
    i32 -1808261652, label %440
    i32 -206627747, label %450
    i32 -307929187, label %451
    i32 -27597157, label %452
    i32 -352170788, label %462
    i32 131396150, label %472
    i32 -198762945, label %473
    i32 1887535554, label %483
    i32 1702483519, label %495
    i32 6804434, label %497
    i32 -1893919540, label %508
    i32 926636263, label %518
    i32 -839232515, label %528
    i32 832793059, label %529
    i32 -1391077920, label %530
    i32 -1785910959, label %531
    i32 1815554655, label %532
    i32 185835662, label %534
    i32 1414802509, label %535
    i32 51673459, label %536
    i32 238829273, label %537
    i32 -672540961, label %547
    i32 147380, label %549
    i32 805557420, label %550
    i32 -1047968884, label %551
    i32 -710488364, label %552
    i32 1612331569, label %553
    i32 -1113402679, label %564
    i32 -2120693975, label %601
    i32 2126177574, label %602
    i32 -91350733, label %603
    i32 -501965433, label %606
  ]

.backedge:                                        ; preds = %10, %606, %603, %602, %601, %564, %553, %552, %551, %550, %549, %547, %537, %536, %535, %534, %532, %531, %530, %529, %518, %508, %497, %495, %483, %473, %472, %462, %452, %451, %450, %440, %430, %428, %427, %379, %369, %366, %365, %362, %361, %359, %358, %356, %355, %336, %326, %323, %322, %312, %302, %300, %288, %278, %277, %276, %265, %255, %254, %244, %234, %233, %223, %213, %212, %192, %182, %180, %168, %158, %157, %155, %143, %133, %132, %122, %112, %111, %110, %109, %98, %88, %80, %78, %66, %56, %55, %45, %35, %33, %21, %11
  %.0130.be = phi i32 [ %.0130, %10 ], [ %.0130, %606 ], [ %.0130, %603 ], [ %.0130, %602 ], [ %.0130, %601 ], [ %.0130, %564 ], [ %.0130, %553 ], [ %.0130, %552 ], [ %.0130, %551 ], [ %.0130, %550 ], [ %.0130, %549 ], [ %.0130, %547 ], [ %.0130, %537 ], [ %.0130, %536 ], [ %.0130, %535 ], [ %.0130, %534 ], [ %.0130, %532 ], [ %.0130, %531 ], [ %.0130, %530 ], [ %.0130, %529 ], [ %.0130, %518 ], [ %.0130, %508 ], [ %.0130, %497 ], [ %.0130, %495 ], [ %.0130, %483 ], [ %.0130, %473 ], [ %.0130, %472 ], [ %.0130, %462 ], [ %.0130, %452 ], [ %.0130, %451 ], [ %.0130, %450 ], [ %.0130, %440 ], [ %.0130, %430 ], [ %.0130, %428 ], [ %.0130, %427 ], [ %.0130, %379 ], [ %.0130, %369 ], [ %.0130, %366 ], [ %.0130, %365 ], [ %.0130, %362 ], [ %.0130, %361 ], [ %360, %359 ], [ %.0130, %358 ], [ %.0130, %356 ], [ %.0130, %355 ], [ %.0130, %336 ], [ %.0130, %326 ], [ %.0130, %323 ], [ %.0130, %322 ], [ %.0130, %312 ], [ %.0130, %302 ], [ %.0130, %300 ], [ %.0130, %288 ], [ %.0130, %278 ], [ 1, %277 ], [ %.0130, %276 ], [ %.0130, %265 ], [ %.0130, %255 ], [ %.0130, %254 ], [ %.0130, %244 ], [ %.0130, %234 ], [ %.0130, %233 ], [ %.0130, %223 ], [ %.0130, %213 ], [ %.0130, %212 ], [ %.0130, %192 ], [ %.0130, %182 ], [ %.0130, %180 ], [ %.0130, %168 ], [ %.0130, %158 ], [ %.0130, %157 ], [ %.0130, %155 ], [ %.0130, %143 ], [ %.0130, %133 ], [ %.0130, %132 ], [ %.0130, %122 ], [ %.0130, %112 ], [ %.0130, %111 ], [ %.0130, %110 ], [ %.0130, %109 ], [ %.0130, %98 ], [ %.0130, %88 ], [ %.0130, %80 ], [ %.0130, %78 ], [ %.0130, %66 ], [ %.0130, %56 ], [ %.0130, %55 ], [ %.0130, %45 ], [ %.0130, %35 ], [ %.0130, %33 ], [ %.0130, %21 ], [ %.0130, %11 ]
  %.0128.be = phi i32 [ %.0128, %10 ], [ %.0128, %606 ], [ %.0128, %603 ], [ %.0128, %602 ], [ %.0128, %601 ], [ %.0128, %564 ], [ %.0128, %553 ], [ 1, %552 ], [ %.0128, %551 ], [ %.0128, %550 ], [ %.0128, %549 ], [ %.0128, %547 ], [ %.0128, %537 ], [ %.0128, %536 ], [ %.0128, %535 ], [ %.0128, %534 ], [ %.0128, %532 ], [ %.0128, %531 ], [ %.0128, %530 ], [ %.0128, %529 ], [ %.0128, %518 ], [ %.0128, %508 ], [ %.0128, %497 ], [ %.0128, %495 ], [ %.0128, %483 ], [ %.0128, %473 ], [ %.0128, %472 ], [ %.0128, %462 ], [ %.0128, %452 ], [ %.0128, %451 ], [ %.0128, %450 ], [ %.0128, %440 ], [ %.0128, %430 ], [ %.0128, %428 ], [ %.0128, %427 ], [ %.0128, %379 ], [ %.0128, %369 ], [ %.0128, %366 ], [ %.0128, %365 ], [ %.0128, %362 ], [ %.0128, %361 ], [ %.0128, %359 ], [ %.0128, %358 ], [ %357, %356 ], [ %.0128, %355 ], [ %.0128, %336 ], [ %.0128, %326 ], [ %.0128, %323 ], [ %.0128, %322 ], [ 1, %312 ], [ %.0128, %302 ], [ %.0128, %300 ], [ %.0128, %288 ], [ %.0128, %278 ], [ %.0128, %277 ], [ %.0128, %276 ], [ %.0128, %265 ], [ %.0128, %255 ], [ %.0128, %254 ], [ %.0128, %244 ], [ %.0128, %234 ], [ %.0128, %233 ], [ %.0128, %223 ], [ %.0128, %213 ], [ %.0128, %212 ], [ %.0128, %192 ], [ %.0128, %182 ], [ %.0128, %180 ], [ %.0128, %168 ], [ %.0128, %158 ], [ %.0128, %157 ], [ %.0128, %155 ], [ %.0128, %143 ], [ %.0128, %133 ], [ %.0128, %132 ], [ %.0128, %122 ], [ %.0128, %112 ], [ %.0128, %111 ], [ %.0128, %110 ], [ %.0128, %109 ], [ %.0128, %98 ], [ %.0128, %88 ], [ %.0128, %80 ], [ %.0128, %78 ], [ %.0128, %66 ], [ %.0128, %56 ], [ %.0128, %55 ], [ %.0128, %45 ], [ %.0128, %35 ], [ %.0128, %33 ], [ %.0128, %21 ], [ %.0128, %11 ]
  %.0126.be = phi i32 [ %.0126, %10 ], [ %.0126, %606 ], [ %.0126, %603 ], [ %.0126, %602 ], [ %.0126, %601 ], [ %.0126, %564 ], [ %.0126, %553 ], [ %.0126, %552 ], [ %.0126, %551 ], [ %.0126, %550 ], [ %.0126, %549 ], [ %.0126, %547 ], [ %.0126, %537 ], [ %.0126, %536 ], [ %.0126, %535 ], [ %.0126, %534 ], [ %.0126, %532 ], [ %.0126, %531 ], [ %.0126, %530 ], [ %.0126, %529 ], [ %.0126, %518 ], [ %.0126, %508 ], [ %.0126, %497 ], [ %.0126, %495 ], [ %.0126, %483 ], [ %.0126, %473 ], [ %.0126, %472 ], [ %.0126, %462 ], [ %.0126, %452 ], [ %.neg139, %451 ], [ %.0126, %450 ], [ %.0126, %440 ], [ %.0126, %430 ], [ %.0126, %428 ], [ %.0126, %427 ], [ %.0126, %379 ], [ %.0126, %369 ], [ %.0126, %366 ], [ %.0126, %365 ], [ %.0126, %362 ], [ 1, %361 ], [ %.0126, %359 ], [ %.0126, %358 ], [ %.0126, %356 ], [ %.0126, %355 ], [ %.0126, %336 ], [ %.0126, %326 ], [ %.0126, %323 ], [ %.0126, %322 ], [ %.0126, %312 ], [ %.0126, %302 ], [ %.0126, %300 ], [ %.0126, %288 ], [ %.0126, %278 ], [ %.0126, %277 ], [ %.0126, %276 ], [ %.0126, %265 ], [ %.0126, %255 ], [ %.0126, %254 ], [ %.0126, %244 ], [ %.0126, %234 ], [ %.0126, %233 ], [ %.0126, %223 ], [ %.0126, %213 ], [ %.0126, %212 ], [ %.0126, %192 ], [ %.0126, %182 ], [ %.0126, %180 ], [ %.0126, %168 ], [ %.0126, %158 ], [ %.0126, %157 ], [ %.0126, %155 ], [ %.0126, %143 ], [ %.0126, %133 ], [ %.0126, %132 ], [ %.0126, %122 ], [ %.0126, %112 ], [ %.0126, %111 ], [ %.0126, %110 ], [ %.0126, %109 ], [ %.0126, %98 ], [ %.0126, %88 ], [ %.0126, %80 ], [ %.0126, %78 ], [ %.0126, %66 ], [ %.0126, %56 ], [ %.0126, %55 ], [ %.0126, %45 ], [ %.0126, %35 ], [ %.0126, %33 ], [ %.0126, %21 ], [ %.0126, %11 ]
  %.0124.be = phi i32 [ %.0124, %10 ], [ %.0124, %606 ], [ %.0124, %603 ], [ %.0124, %602 ], [ %.0124, %601 ], [ %.0124, %564 ], [ %.0124, %553 ], [ %.0124, %552 ], [ %.0124, %551 ], [ %.0124, %550 ], [ %.0124, %549 ], [ %.0124, %547 ], [ %.0124, %537 ], [ %.0124, %536 ], [ %.0124, %535 ], [ %.0124, %534 ], [ %.0124, %532 ], [ %.0124, %531 ], [ %.0124, %530 ], [ %.0124, %529 ], [ %.0124, %518 ], [ %.0124, %508 ], [ %.0124, %497 ], [ %.0124, %495 ], [ %.0124, %483 ], [ %.0124, %473 ], [ %.0124, %472 ], [ %.0124, %462 ], [ %.0124, %452 ], [ %.0124, %451 ], [ %.0124, %450 ], [ %.0124, %440 ], [ %.0124, %430 ], [ %429, %428 ], [ %.0124, %427 ], [ %.0124, %379 ], [ %.0124, %369 ], [ %.0124, %366 ], [ 1, %365 ], [ %.0124, %362 ], [ %.0124, %361 ], [ %.0124, %359 ], [ %.0124, %358 ], [ %.0124, %356 ], [ %.0124, %355 ], [ %.0124, %336 ], [ %.0124, %326 ], [ %.0124, %323 ], [ %.0124, %322 ], [ %.0124, %312 ], [ %.0124, %302 ], [ %.0124, %300 ], [ %.0124, %288 ], [ %.0124, %278 ], [ %.0124, %277 ], [ %.0124, %276 ], [ %.0124, %265 ], [ %.0124, %255 ], [ %.0124, %254 ], [ %.0124, %244 ], [ %.0124, %234 ], [ %.0124, %233 ], [ %.0124, %223 ], [ %.0124, %213 ], [ %.0124, %212 ], [ %.0124, %192 ], [ %.0124, %182 ], [ %.0124, %180 ], [ %.0124, %168 ], [ %.0124, %158 ], [ %.0124, %157 ], [ %.0124, %155 ], [ %.0124, %143 ], [ %.0124, %133 ], [ %.0124, %132 ], [ %.0124, %122 ], [ %.0124, %112 ], [ %.0124, %111 ], [ %.0124, %110 ], [ %.0124, %109 ], [ %.0124, %98 ], [ %.0124, %88 ], [ %.0124, %80 ], [ %.0124, %78 ], [ %.0124, %66 ], [ %.0124, %56 ], [ %.0124, %55 ], [ %.0124, %45 ], [ %.0124, %35 ], [ %.0124, %33 ], [ %.0124, %21 ], [ %.0124, %11 ]
  %.0122.be = phi i32 [ %.0122, %10 ], [ %.0122, %606 ], [ %.0122, %603 ], [ %.0122, %602 ], [ %.0122, %601 ], [ %.0122, %564 ], [ %.0122, %553 ], [ %.0122, %552 ], [ %.0122, %551 ], [ %.0122, %550 ], [ %.0122, %549 ], [ %548, %547 ], [ %.0122, %537 ], [ %.0122, %536 ], [ %.0122, %535 ], [ %.0122, %534 ], [ %.0122, %532 ], [ %.0122, %531 ], [ %.0122, %530 ], [ %.0122, %529 ], [ %.0122, %518 ], [ %.0122, %508 ], [ %.0122, %497 ], [ %.0122, %495 ], [ %.0122, %483 ], [ %.0122, %473 ], [ %.0122, %472 ], [ %.0122, %462 ], [ %.0122, %452 ], [ %.0122, %451 ], [ %.0122, %450 ], [ %.0122, %440 ], [ %.0122, %430 ], [ %.0122, %428 ], [ %.0122, %427 ], [ %.0122, %379 ], [ %.0122, %369 ], [ %.0122, %366 ], [ %.0122, %365 ], [ %.0122, %362 ], [ %.0122, %361 ], [ %.0122, %359 ], [ %.0122, %358 ], [ %.0122, %356 ], [ %.0122, %355 ], [ %.0122, %336 ], [ %.0122, %326 ], [ %.0122, %323 ], [ %.0122, %322 ], [ %.0122, %312 ], [ %.0122, %302 ], [ %.0122, %300 ], [ %.0122, %288 ], [ %.0122, %278 ], [ %.0122, %277 ], [ %.0122, %276 ], [ %.0122, %265 ], [ %.0122, %255 ], [ %.0122, %254 ], [ %.0122, %244 ], [ %.0122, %234 ], [ %.0122, %233 ], [ %.neg147, %223 ], [ %.0122, %213 ], [ %.0122, %212 ], [ %.0122, %192 ], [ %.0122, %182 ], [ %.0122, %180 ], [ %.0122, %168 ], [ %.0122, %158 ], [ 1, %157 ], [ %.0122, %155 ], [ %.0122, %143 ], [ %.0122, %133 ], [ %.0122, %132 ], [ %.0122, %122 ], [ %.0122, %112 ], [ %.0122, %111 ], [ %.0122, %110 ], [ %.0122, %109 ], [ %.0122, %98 ], [ %.0122, %88 ], [ %.0122, %80 ], [ %.0122, %78 ], [ %.0122, %66 ], [ %.0122, %56 ], [ %.0122, %55 ], [ %.0122, %45 ], [ %.0122, %35 ], [ %.0122, %33 ], [ %.0122, %21 ], [ %.0122, %11 ]
  %.0120.be = phi i32 [ %.0120, %10 ], [ %.0120, %606 ], [ %.0120, %603 ], [ %.0120, %602 ], [ %.0120, %601 ], [ %.0120, %564 ], [ %.0120, %553 ], [ %.0120, %552 ], [ %.0120, %551 ], [ %.neg134, %550 ], [ %.0120, %549 ], [ %.0120, %547 ], [ %.0120, %537 ], [ %.0120, %536 ], [ %.0120, %535 ], [ 1, %534 ], [ %.0120, %532 ], [ %.0120, %531 ], [ %.0120, %530 ], [ %.0120, %529 ], [ %.0120, %518 ], [ %.0120, %508 ], [ %.0120, %497 ], [ %.0120, %495 ], [ %.0120, %483 ], [ %.0120, %473 ], [ %.0120, %472 ], [ %.0120, %462 ], [ %.0120, %452 ], [ %.0120, %451 ], [ %.0120, %450 ], [ %.0120, %440 ], [ %.0120, %430 ], [ %.0120, %428 ], [ %.0120, %427 ], [ %.0120, %379 ], [ %.0120, %369 ], [ %.0120, %366 ], [ %.0120, %365 ], [ %.0120, %362 ], [ %.0120, %361 ], [ %.0120, %359 ], [ %.0120, %358 ], [ %.0120, %356 ], [ %.0120, %355 ], [ %.0120, %336 ], [ %.0120, %326 ], [ %.0120, %323 ], [ %.0120, %322 ], [ %.0120, %312 ], [ %.0120, %302 ], [ %.0120, %300 ], [ %.0120, %288 ], [ %.0120, %278 ], [ %.0120, %277 ], [ %.0120, %276 ], [ %266, %265 ], [ %.0120, %255 ], [ %.0120, %254 ], [ %.0120, %244 ], [ %.0120, %234 ], [ %.0120, %233 ], [ %.0120, %223 ], [ %.0120, %213 ], [ %.0120, %212 ], [ %.0120, %192 ], [ %.0120, %182 ], [ %.0120, %180 ], [ %.0120, %168 ], [ %.0120, %158 ], [ %.0120, %157 ], [ %.0120, %155 ], [ %.0120, %143 ], [ %.0120, %133 ], [ %.0120, %132 ], [ 1, %122 ], [ %.0120, %112 ], [ %.0120, %111 ], [ %.0120, %110 ], [ %.0120, %109 ], [ %.0120, %98 ], [ %.0120, %88 ], [ %.0120, %80 ], [ %.0120, %78 ], [ %.0120, %66 ], [ %.0120, %56 ], [ %.0120, %55 ], [ %.0120, %45 ], [ %.0120, %35 ], [ %.0120, %33 ], [ %.0120, %21 ], [ %.0120, %11 ]
  %.0118.be = phi i32 [ %.0118, %10 ], [ %.0118, %606 ], [ %.0118, %603 ], [ %.0118, %602 ], [ %.0118, %601 ], [ %.0118, %564 ], [ %.0118, %553 ], [ %.0118, %552 ], [ %.0118, %551 ], [ %.0118, %550 ], [ %.0118, %549 ], [ %.0118, %547 ], [ %.0118, %537 ], [ %.0118, %536 ], [ %.0118, %535 ], [ %.0118, %534 ], [ %533, %532 ], [ %.0118, %531 ], [ 1, %530 ], [ %.0118, %529 ], [ %.0118, %518 ], [ %.0118, %508 ], [ %.0118, %497 ], [ %.0118, %495 ], [ %.0118, %483 ], [ %.0118, %473 ], [ %.0118, %472 ], [ %.0118, %462 ], [ %.0118, %452 ], [ %.0118, %451 ], [ %.0118, %450 ], [ %.0118, %440 ], [ %.0118, %430 ], [ %.0118, %428 ], [ %.0118, %427 ], [ %.0118, %379 ], [ %.0118, %369 ], [ %.0118, %366 ], [ %.0118, %365 ], [ %.0118, %362 ], [ %.0118, %361 ], [ %.0118, %359 ], [ %.0118, %358 ], [ %.0118, %356 ], [ %.0118, %355 ], [ %.0118, %336 ], [ %.0118, %326 ], [ %.0118, %323 ], [ %.0118, %322 ], [ %.0118, %312 ], [ %.0118, %302 ], [ %.0118, %300 ], [ %.0118, %288 ], [ %.0118, %278 ], [ %.0118, %277 ], [ %.0118, %276 ], [ %.0118, %265 ], [ %.0118, %255 ], [ %.0118, %254 ], [ %.0118, %244 ], [ %.0118, %234 ], [ %.0118, %233 ], [ %.0118, %223 ], [ %.0118, %213 ], [ %.0118, %212 ], [ %.0118, %192 ], [ %.0118, %182 ], [ %.0118, %180 ], [ %.0118, %168 ], [ %.0118, %158 ], [ %.0118, %157 ], [ %.0118, %155 ], [ %.0118, %143 ], [ %.0118, %133 ], [ %.0118, %132 ], [ %.0118, %122 ], [ %.0118, %112 ], [ %.0118, %111 ], [ %.0118, %110 ], [ %.0118, %109 ], [ %99, %98 ], [ %.0118, %88 ], [ %.0118, %80 ], [ %.0118, %78 ], [ %.0118, %66 ], [ %.0118, %56 ], [ %.0118, %55 ], [ 1, %45 ], [ %.0118, %35 ], [ %.0118, %33 ], [ %.0118, %21 ], [ %.0118, %11 ]
  %.0116.be = phi i32 [ %.0116, %10 ], [ %.0116, %606 ], [ %.0116, %603 ], [ %.0116, %602 ], [ %.0116, %601 ], [ %.0116, %564 ], [ %.0116, %553 ], [ %.0116, %552 ], [ %.0116, %551 ], [ %.0116, %550 ], [ %.0116, %549 ], [ %.0116, %547 ], [ %.0116, %537 ], [ %.0116, %536 ], [ %.0116, %535 ], [ %.0116, %534 ], [ %.0116, %532 ], [ %.0116, %531 ], [ %.0116, %530 ], [ %.0116, %529 ], [ %.0116, %518 ], [ %.0116, %508 ], [ %.0116, %497 ], [ %.0116, %495 ], [ %.0116, %483 ], [ %.0116, %473 ], [ %.0116, %472 ], [ %.0116, %462 ], [ %.0116, %452 ], [ %.0116, %451 ], [ %.0116, %450 ], [ %.0116, %440 ], [ %.0116, %430 ], [ %.0116, %428 ], [ %.0116, %427 ], [ %.0116, %379 ], [ %.0116, %369 ], [ %.0116, %366 ], [ %.0116, %365 ], [ %.0116, %362 ], [ %.0116, %361 ], [ %.0116, %359 ], [ %.0116, %358 ], [ %.0116, %356 ], [ %.0116, %355 ], [ %.0116, %336 ], [ %.0116, %326 ], [ %.0116, %323 ], [ %.0116, %322 ], [ %.0116, %312 ], [ %.0116, %302 ], [ %.0116, %300 ], [ %.0116, %288 ], [ %.0116, %278 ], [ %.0116, %277 ], [ %.0116, %276 ], [ %.0116, %265 ], [ %.0116, %255 ], [ %.0116, %254 ], [ %.0116, %244 ], [ %.0116, %234 ], [ %.0116, %233 ], [ %.0116, %223 ], [ %.0116, %213 ], [ %.0116, %212 ], [ %.0116, %192 ], [ %.0116, %182 ], [ %.0116, %180 ], [ %.0116, %168 ], [ %.0116, %158 ], [ %.0116, %157 ], [ %.0116, %155 ], [ %.0116, %143 ], [ %.0116, %133 ], [ %.0116, %132 ], [ %.0116, %122 ], [ %.0116, %112 ], [ %.neg151, %111 ], [ %.0116, %110 ], [ %.0116, %109 ], [ %.0116, %98 ], [ %.0116, %88 ], [ %.0116, %80 ], [ %.0116, %78 ], [ %.0116, %66 ], [ %.0116, %56 ], [ %.0116, %55 ], [ %.0116, %45 ], [ %.0116, %35 ], [ %.0116, %33 ], [ %.0116, %21 ], [ %.0116, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ 926636263, %606 ], [ 1887535554, %603 ], [ -352170788, %602 ], [ -1808261652, %601 ], [ 730239488, %564 ], [ 1682395943, %553 ], [ 1674570783, %552 ], [ -759937057, %551 ], [ -1952548660, %550 ], [ -2079465112, %549 ], [ -504013809, %547 ], [ -1373470994, %537 ], [ -890168716, %536 ], [ -1303088049, %535 ], [ 2114335526, %534 ], [ 392659614, %532 ], [ -665262036, %531 ], [ -817171140, %530 ], [ 1199116429, %529 ], [ %527, %518 ], [ %517, %508 ], [ -198762945, %497 ], [ %496, %495 ], [ %494, %483 ], [ %482, %473 ], [ -198762945, %472 ], [ %471, %462 ], [ %461, %452 ], [ -220537486, %451 ], [ -307929187, %450 ], [ %449, %440 ], [ %439, %430 ], [ 467785917, %428 ], [ -1730211780, %427 ], [ %426, %379 ], [ %378, %369 ], [ %368, %366 ], [ 467785917, %365 ], [ %364, %362 ], [ -220537486, %361 ], [ 598618996, %359 ], [ 1804402201, %358 ], [ 268939665, %356 ], [ -308964594, %355 ], [ %354, %336 ], [ %335, %326 ], [ %325, %323 ], [ 268939665, %322 ], [ %321, %312 ], [ %311, %302 ], [ %301, %300 ], [ %299, %288 ], [ %287, %278 ], [ 598618996, %277 ], [ 940648005, %276 ], [ %275, %265 ], [ %264, %255 ], [ -612239239, %254 ], [ %253, %244 ], [ %243, %234 ], [ 667299835, %233 ], [ %232, %223 ], [ %222, %213 ], [ -2123265075, %212 ], [ %211, %192 ], [ %191, %182 ], [ %181, %180 ], [ %179, %168 ], [ %167, %158 ], [ 667299835, %157 ], [ %156, %155 ], [ %154, %143 ], [ %142, %133 ], [ 940648005, %132 ], [ %131, %122 ], [ %121, %112 ], [ -1838226354, %111 ], [ -18210314, %110 ], [ -1146764173, %109 ], [ %108, %98 ], [ %97, %88 ], [ -728047121, %80 ], [ %79, %78 ], [ %77, %66 ], [ %65, %56 ], [ -1146764173, %55 ], [ %54, %45 ], [ %44, %35 ], [ %34, %33 ], [ %32, %21 ], [ %20, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* @x.3, align 4
  %13 = load i32, i32* @y.4, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 1199116429, i32 832793059
  br label %.backedge

21:                                               ; preds = %10
  %22 = load i32, i32* @n, align 4
  %23 = icmp sle i32 %.0116, %22
  store i1 %23, i1* %6, align 1
  %24 = load i32, i32* @x.3, align 4
  %25 = load i32, i32* @y.4, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 1755393680, i32 832793059
  br label %.backedge

33:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %34 = select i1 %.0..0..0., i32 -482249632, i32 -300381911
  br label %.backedge

35:                                               ; preds = %10
  %36 = load i32, i32* @x.3, align 4
  %37 = load i32, i32* @y.4, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 -817171140, i32 -1391077920
  br label %.backedge

45:                                               ; preds = %10
  %46 = load i32, i32* @x.3, align 4
  %47 = load i32, i32* @y.4, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -446293037, i32 -1391077920
  br label %.backedge

55:                                               ; preds = %10
  br label %.backedge

56:                                               ; preds = %10
  %57 = load i32, i32* @x.3, align 4
  %58 = load i32, i32* @y.4, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 -665262036, i32 -1785910959
  br label %.backedge

66:                                               ; preds = %10
  %67 = load i32, i32* @m, align 4
  %68 = icmp sle i32 %.0118, %67
  store i1 %68, i1* %5, align 1
  %69 = load i32, i32* @x.3, align 4
  %70 = load i32, i32* @y.4, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 -250724225, i32 -1785910959
  br label %.backedge

78:                                               ; preds = %10
  %.0..0..0.111 = load volatile i1, i1* %5, align 1
  %79 = select i1 %.0..0..0.111, i32 1993119734, i32 -1767594378
  br label %.backedge

80:                                               ; preds = %10
  %81 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) @ch)
  %82 = load i8, i8* @ch, align 1
  %83 = icmp eq i8 %82, 49
  %84 = zext i1 %83 to i32
  %85 = sext i32 %.0116 to i64
  %86 = sext i32 %.0118 to i64
  %87 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %85, i64 %86
  store i32 %84, i32* %87, align 4
  br label %.backedge

88:                                               ; preds = %10
  %89 = load i32, i32* @x.3, align 4
  %90 = load i32, i32* @y.4, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 392659614, i32 1815554655
  br label %.backedge

98:                                               ; preds = %10
  %99 = add i32 %.0118, 1
  %100 = load i32, i32* @x.3, align 4
  %101 = load i32, i32* @y.4, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 2116851232, i32 1815554655
  br label %.backedge

109:                                              ; preds = %10
  br label %.backedge

110:                                              ; preds = %10
  br label %.backedge

111:                                              ; preds = %10
  %.neg151 = add i32 %.0116, 1
  br label %.backedge

112:                                              ; preds = %10
  %113 = load i32, i32* @x.3, align 4
  %114 = load i32, i32* @y.4, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 2114335526, i32 185835662
  br label %.backedge

122:                                              ; preds = %10
  %123 = load i32, i32* @x.3, align 4
  %124 = load i32, i32* @y.4, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 -1867010717, i32 185835662
  br label %.backedge

132:                                              ; preds = %10
  br label %.backedge

133:                                              ; preds = %10
  %134 = load i32, i32* @x.3, align 4
  %135 = load i32, i32* @y.4, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 -1303088049, i32 1414802509
  br label %.backedge

143:                                              ; preds = %10
  %144 = load i32, i32* @n, align 4
  %145 = icmp sle i32 %.0120, %144
  store i1 %145, i1* %4, align 1
  %146 = load i32, i32* @x.3, align 4
  %147 = load i32, i32* @y.4, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -1254964358, i32 1414802509
  br label %.backedge

155:                                              ; preds = %10
  %.0..0..0.112 = load volatile i1, i1* %4, align 1
  %156 = select i1 %.0..0..0.112, i32 -515289315, i32 -30706586
  br label %.backedge

157:                                              ; preds = %10
  br label %.backedge

158:                                              ; preds = %10
  %159 = load i32, i32* @x.3, align 4
  %160 = load i32, i32* @y.4, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 -890168716, i32 51673459
  br label %.backedge

168:                                              ; preds = %10
  %169 = load i32, i32* @m, align 4
  %170 = icmp sle i32 %.0122, %169
  store i1 %170, i1* %3, align 1
  %171 = load i32, i32* @x.3, align 4
  %172 = load i32, i32* @y.4, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 -678824513, i32 51673459
  br label %.backedge

180:                                              ; preds = %10
  %.0..0..0.113 = load volatile i1, i1* %3, align 1
  %181 = select i1 %.0..0..0.113, i32 -260045039, i32 -1371051350
  br label %.backedge

182:                                              ; preds = %10
  %183 = load i32, i32* @x.3, align 4
  %184 = load i32, i32* @y.4, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 -1373470994, i32 238829273
  br label %.backedge

192:                                              ; preds = %10
  %193 = sext i32 %.0120 to i64
  %194 = sext i32 %.0122 to i64
  %195 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %193, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = add i32 %.0120, -1
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %198, i64 %194
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, %196
  %202 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %193, i64 %194
  store i32 %201, i32* %202, align 4
  %203 = load i32, i32* @x.3, align 4
  %204 = load i32, i32* @y.4, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 -142046821, i32 238829273
  br label %.backedge

212:                                              ; preds = %10
  br label %.backedge

213:                                              ; preds = %10
  %214 = load i32, i32* @x.3, align 4
  %215 = load i32, i32* @y.4, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 -504013809, i32 -672540961
  br label %.backedge

223:                                              ; preds = %10
  %.neg147 = add i32 %.0122, 1
  %224 = load i32, i32* @x.3, align 4
  %225 = load i32, i32* @y.4, align 4
  %226 = add i32 %224, -1
  %227 = mul i32 %226, %224
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %230, %229
  %232 = select i1 %231, i32 1120235340, i32 -672540961
  br label %.backedge

233:                                              ; preds = %10
  br label %.backedge

234:                                              ; preds = %10
  %235 = load i32, i32* @x.3, align 4
  %236 = load i32, i32* @y.4, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 -2079465112, i32 147380
  br label %.backedge

244:                                              ; preds = %10
  %245 = load i32, i32* @x.3, align 4
  %246 = load i32, i32* @y.4, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 -1231997843, i32 147380
  br label %.backedge

254:                                              ; preds = %10
  br label %.backedge

255:                                              ; preds = %10
  %256 = load i32, i32* @x.3, align 4
  %257 = load i32, i32* @y.4, align 4
  %258 = add i32 %256, -1
  %259 = mul i32 %258, %256
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %262, %261
  %264 = select i1 %263, i32 -1952548660, i32 805557420
  br label %.backedge

265:                                              ; preds = %10
  %266 = add i32 %.0120, 1
  %267 = load i32, i32* @x.3, align 4
  %268 = load i32, i32* @y.4, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 915648824, i32 805557420
  br label %.backedge

276:                                              ; preds = %10
  br label %.backedge

277:                                              ; preds = %10
  br label %.backedge

278:                                              ; preds = %10
  %279 = load i32, i32* @x.3, align 4
  %280 = load i32, i32* @y.4, align 4
  %281 = add i32 %279, -1
  %282 = mul i32 %281, %279
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %285, %284
  %287 = select i1 %286, i32 -759937057, i32 -1047968884
  br label %.backedge

288:                                              ; preds = %10
  %289 = load i32, i32* @n, align 4
  %290 = icmp sle i32 %.0130, %289
  store i1 %290, i1* %2, align 1
  %291 = load i32, i32* @x.3, align 4
  %292 = load i32, i32* @y.4, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 -185306998, i32 -1047968884
  br label %.backedge

300:                                              ; preds = %10
  %.0..0..0.114 = load volatile i1, i1* %2, align 1
  %301 = select i1 %.0..0..0.114, i32 -1334031614, i32 882618686
  br label %.backedge

302:                                              ; preds = %10
  %303 = load i32, i32* @x.3, align 4
  %304 = load i32, i32* @y.4, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 1674570783, i32 -710488364
  br label %.backedge

312:                                              ; preds = %10
  %313 = load i32, i32* @x.3, align 4
  %314 = load i32, i32* @y.4, align 4
  %315 = add i32 %313, -1
  %316 = mul i32 %315, %313
  %317 = and i32 %316, 1
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %319, %318
  %321 = select i1 %320, i32 -1729051999, i32 -710488364
  br label %.backedge

322:                                              ; preds = %10
  br label %.backedge

323:                                              ; preds = %10
  %324 = load i32, i32* @m, align 4
  %.not144 = icmp sgt i32 %.0128, %324
  %325 = select i1 %.not144, i32 79513115, i32 946946169
  br label %.backedge

326:                                              ; preds = %10
  %327 = load i32, i32* @x.3, align 4
  %328 = load i32, i32* @y.4, align 4
  %329 = add i32 %327, -1
  %330 = mul i32 %329, %327
  %331 = and i32 %330, 1
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %333, %332
  %335 = select i1 %334, i32 1682395943, i32 1612331569
  br label %.backedge

336:                                              ; preds = %10
  %337 = sext i32 %.0130 to i64
  %338 = sext i32 %.0128 to i64
  %339 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %337, i64 %338
  %340 = load i32, i32* %339, align 4
  %341 = add i32 %.0128, -1
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %337, i64 %342
  %344 = load i32, i32* %343, align 4
  %.demorgan143 = and i32 %344, %340
  %345 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %337, i64 %338
  store i32 %.demorgan143, i32* %345, align 4
  %346 = load i32, i32* @x.3, align 4
  %347 = load i32, i32* @y.4, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 2069167471, i32 1612331569
  br label %.backedge

355:                                              ; preds = %10
  br label %.backedge

356:                                              ; preds = %10
  %357 = add i32 %.0128, 1
  br label %.backedge

358:                                              ; preds = %10
  br label %.backedge

359:                                              ; preds = %10
  %360 = add i32 %.0130, 1
  br label %.backedge

361:                                              ; preds = %10
  br label %.backedge

362:                                              ; preds = %10
  %363 = load i32, i32* @n, align 4
  %.not142 = icmp sgt i32 %.0126, %363
  %364 = select i1 %.not142, i32 -27597157, i32 544008956
  br label %.backedge

365:                                              ; preds = %10
  br label %.backedge

366:                                              ; preds = %10
  %367 = load i32, i32* @m, align 4
  %.not = icmp sgt i32 %.0124, %367
  %368 = select i1 %.not, i32 176836206, i32 1857294617
  br label %.backedge

369:                                              ; preds = %10
  %370 = load i32, i32* @x.3, align 4
  %371 = load i32, i32* @y.4, align 4
  %372 = add i32 %370, -1
  %373 = mul i32 %372, %370
  %374 = and i32 %373, 1
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %376, %375
  %378 = select i1 %377, i32 730239488, i32 -1113402679
  br label %.backedge

379:                                              ; preds = %10
  %380 = add i32 %.0126, -1
  %381 = sext i32 %380 to i64
  %382 = sext i32 %.0124 to i64
  %383 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %381, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = sext i32 %.0126 to i64
  %386 = add i32 %.0124, -1
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %385, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %381, i64 %387
  %391 = load i32, i32* %390, align 4
  %392 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %385, i64 %382
  %393 = load i32, i32* %392, align 4
  %394 = add i32 %389, %384
  %395 = sub i32 %394, %391
  %396 = add i32 %395, %393
  store i32 %396, i32* %392, align 4
  %397 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %381, i64 %382
  %398 = load i32, i32* %397, align 4
  %399 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %385, i64 %387
  %400 = load i32, i32* %399, align 4
  %401 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %381, i64 %387
  %402 = load i32, i32* %401, align 4
  %403 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %385, i64 %382
  %404 = load i32, i32* %403, align 4
  %405 = add i32 %400, %398
  %406 = sub i32 %405, %402
  %407 = add i32 %406, %404
  store i32 %407, i32* %403, align 4
  %408 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %381, i64 %382
  %409 = load i32, i32* %408, align 4
  %410 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %385, i64 %387
  %411 = load i32, i32* %410, align 4
  %412 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %381, i64 %387
  %413 = load i32, i32* %412, align 4
  %414 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %385, i64 %382
  %415 = load i32, i32* %414, align 4
  %416 = add i32 %411, %409
  %417 = sub i32 %416, %413
  %.neg141 = add i32 %417, %415
  store i32 %.neg141, i32* %414, align 4
  %418 = load i32, i32* @x.3, align 4
  %419 = load i32, i32* @y.4, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 282303745, i32 -1113402679
  br label %.backedge

427:                                              ; preds = %10
  br label %.backedge

428:                                              ; preds = %10
  %429 = add i32 %.0124, 1
  br label %.backedge

430:                                              ; preds = %10
  %431 = load i32, i32* @x.3, align 4
  %432 = load i32, i32* @y.4, align 4
  %433 = add i32 %431, -1
  %434 = mul i32 %433, %431
  %435 = and i32 %434, 1
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %437, %436
  %439 = select i1 %438, i32 -1808261652, i32 -2120693975
  br label %.backedge

440:                                              ; preds = %10
  %441 = load i32, i32* @x.3, align 4
  %442 = load i32, i32* @y.4, align 4
  %443 = add i32 %441, -1
  %444 = mul i32 %443, %441
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %447, %446
  %449 = select i1 %448, i32 -206627747, i32 -2120693975
  br label %.backedge

450:                                              ; preds = %10
  br label %.backedge

451:                                              ; preds = %10
  %.neg139 = add i32 %.0126, 1
  br label %.backedge

452:                                              ; preds = %10
  %453 = load i32, i32* @x.3, align 4
  %454 = load i32, i32* @y.4, align 4
  %455 = add i32 %453, -1
  %456 = mul i32 %455, %453
  %457 = and i32 %456, 1
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %459, %458
  %461 = select i1 %460, i32 -352170788, i32 2126177574
  br label %.backedge

462:                                              ; preds = %10
  %463 = load i32, i32* @x.3, align 4
  %464 = load i32, i32* @y.4, align 4
  %465 = add i32 %463, -1
  %466 = mul i32 %465, %463
  %467 = and i32 %466, 1
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %469, %468
  %471 = select i1 %470, i32 131396150, i32 2126177574
  br label %.backedge

472:                                              ; preds = %10
  br label %.backedge

473:                                              ; preds = %10
  %474 = load i32, i32* @x.3, align 4
  %475 = load i32, i32* @y.4, align 4
  %476 = add i32 %474, -1
  %477 = mul i32 %476, %474
  %478 = and i32 %477, 1
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %480, %479
  %482 = select i1 %481, i32 1887535554, i32 -91350733
  br label %.backedge

483:                                              ; preds = %10
  %484 = load i32, i32* @Q, align 4
  %.neg137 = add i32 %484, -1
  store i32 %.neg137, i32* @Q, align 4
  %485 = icmp ne i32 %484, 0
  store i1 %485, i1* %1, align 1
  %486 = load i32, i32* @x.3, align 4
  %487 = load i32, i32* @y.4, align 4
  %488 = add i32 %486, -1
  %489 = mul i32 %488, %486
  %490 = and i32 %489, 1
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %492, %491
  %494 = select i1 %493, i32 1702483519, i32 -91350733
  br label %.backedge

495:                                              ; preds = %10
  %.0..0..0.115 = load volatile i1, i1* %1, align 1
  %496 = select i1 %.0..0..0.115, i32 6804434, i32 -1893919540
  br label %.backedge

497:                                              ; preds = %10
  %498 = tail call i32 @_Z4readv()
  %499 = tail call i32 @_Z4readv()
  %500 = tail call i32 @_Z4readv()
  %501 = tail call i32 @_Z4readv()
  %502 = tail call i32 @_Z4workPA2005_iiiii([2005 x i32]* getelementptr inbounds ([2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 0), i32 %498, i32 %499, i32 %500, i32 %501)
  %.neg135 = add i32 %498, 1
  %503 = tail call i32 @_Z4workPA2005_iiiii([2005 x i32]* getelementptr inbounds ([2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 0), i32 %.neg135, i32 %499, i32 %500, i32 %501)
  %.neg136 = add i32 %499, 1
  %504 = tail call i32 @_Z4workPA2005_iiiii([2005 x i32]* getelementptr inbounds ([2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 0), i32 %498, i32 %.neg136, i32 %500, i32 %501)
  %505 = add i32 %503, %504
  %506 = sub i32 %502, %505
  %507 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %506)
  br label %.backedge

508:                                              ; preds = %10
  %509 = load i32, i32* @x.3, align 4
  %510 = load i32, i32* @y.4, align 4
  %511 = add i32 %509, -1
  %512 = mul i32 %511, %509
  %513 = and i32 %512, 1
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %515, %514
  %517 = select i1 %516, i32 926636263, i32 -501965433
  br label %.backedge

518:                                              ; preds = %10
  %519 = load i32, i32* @x.3, align 4
  %520 = load i32, i32* @y.4, align 4
  %521 = add i32 %519, -1
  %522 = mul i32 %521, %519
  %523 = and i32 %522, 1
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %525, %524
  %527 = select i1 %526, i32 -839232515, i32 -501965433
  br label %.backedge

528:                                              ; preds = %10
  ret i32 0

529:                                              ; preds = %10
  br label %.backedge

530:                                              ; preds = %10
  br label %.backedge

531:                                              ; preds = %10
  br label %.backedge

532:                                              ; preds = %10
  %533 = add i32 %.0118, 1
  br label %.backedge

534:                                              ; preds = %10
  br label %.backedge

535:                                              ; preds = %10
  br label %.backedge

536:                                              ; preds = %10
  br label %.backedge

537:                                              ; preds = %10
  %538 = sext i32 %.0120 to i64
  %539 = sext i32 %.0122 to i64
  %540 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %538, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = add i32 %.0120, -1
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %543, i64 %539
  %545 = load i32, i32* %544, align 4
  %.demorgan = and i32 %545, %541
  %546 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %538, i64 %539
  store i32 %.demorgan, i32* %546, align 4
  br label %.backedge

547:                                              ; preds = %10
  %548 = add i32 %.0122, 1
  br label %.backedge

549:                                              ; preds = %10
  br label %.backedge

550:                                              ; preds = %10
  %.neg134 = add i32 %.0120, 1
  br label %.backedge

551:                                              ; preds = %10
  br label %.backedge

552:                                              ; preds = %10
  br label %.backedge

553:                                              ; preds = %10
  %554 = sext i32 %.0130 to i64
  %555 = sext i32 %.0128 to i64
  %556 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %554, i64 %555
  %557 = load i32, i32* %556, align 4
  %558 = add i32 %.0128, -1
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %554, i64 %559
  %561 = load i32, i32* %560, align 4
  %562 = and i32 %561, %557
  %563 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %554, i64 %555
  store i32 %562, i32* %563, align 4
  br label %.backedge

564:                                              ; preds = %10
  %565 = add i32 %.0126, -1
  %566 = sext i32 %565 to i64
  %567 = sext i32 %.0124 to i64
  %568 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %566, i64 %567
  %569 = load i32, i32* %568, align 4
  %570 = sext i32 %.0126 to i64
  %571 = add i32 %.0124, -1
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %570, i64 %572
  %574 = load i32, i32* %573, align 4
  %575 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %566, i64 %572
  %576 = load i32, i32* %575, align 4
  %577 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @a, i64 0, i64 %570, i64 %567
  %578 = load i32, i32* %577, align 4
  %579 = add i32 %574, %569
  %580 = sub i32 %579, %576
  %.neg = add i32 %580, %578
  store i32 %.neg, i32* %577, align 4
  %581 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %566, i64 %567
  %582 = load i32, i32* %581, align 4
  %583 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %570, i64 %572
  %584 = load i32, i32* %583, align 4
  %585 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %566, i64 %572
  %586 = load i32, i32* %585, align 4
  %587 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @b, i64 0, i64 %570, i64 %567
  %588 = load i32, i32* %587, align 4
  %.neg132.neg = add i32 %584, %582
  %.neg133 = sub i32 %.neg132.neg, %586
  %589 = add i32 %.neg133, %588
  store i32 %589, i32* %587, align 4
  %590 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %566, i64 %567
  %591 = load i32, i32* %590, align 4
  %592 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %570, i64 %572
  %593 = load i32, i32* %592, align 4
  %594 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %566, i64 %572
  %595 = load i32, i32* %594, align 4
  %596 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @c, i64 0, i64 %570, i64 %567
  %597 = load i32, i32* %596, align 4
  %598 = add i32 %593, %591
  %599 = sub i32 %598, %595
  %600 = add i32 %599, %597
  store i32 %600, i32* %596, align 4
  br label %.backedge

601:                                              ; preds = %10
  br label %.backedge

602:                                              ; preds = %10
  br label %.backedge

603:                                              ; preds = %10
  %604 = load i32, i32* @Q, align 4
  %605 = add i32 %604, -1
  store i32 %605, i32* @Q, align 4
  br label %.backedge

606:                                              ; preds = %10
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readv() local_unnamed_addr #0 comdat {
  %1 = alloca i1, align 1
  %2 = tail call i32 @getchar()
  %3 = trunc i32 %2 to i8
  br label %4

4:                                                ; preds = %.backedge, %0
  %.013 = phi i32 [ 0, %0 ], [ %.013.be, %.backedge ]
  %.011 = phi i32 [ 1, %0 ], [ %.011.be, %.backedge ]
  %.09 = phi i8 [ %3, %0 ], [ %.09.be, %.backedge ]
  %.0 = phi i32 [ -64399161, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -64399161, label %5
    i32 434957157, label %8
    i32 -218739566, label %18
    i32 1737094601, label %29
    i32 227580403, label %31
    i32 1848991641, label %32
    i32 2139363540, label %35
    i32 1319672226, label %36
    i32 -344914817, label %39
    i32 941738888, label %46
    i32 1917478268, label %48
  ]

.backedge:                                        ; preds = %4, %48, %39, %36, %35, %32, %31, %29, %18, %8, %5
  %.013.be = phi i32 [ %.013, %4 ], [ %.013, %48 ], [ %43, %39 ], [ %.013, %36 ], [ %.013, %35 ], [ %.013, %32 ], [ %.013, %31 ], [ %.013, %29 ], [ %.013, %18 ], [ %.013, %8 ], [ %.013, %5 ]
  %.011.be = phi i32 [ %.011, %4 ], [ %.011, %48 ], [ %.011, %39 ], [ %.011, %36 ], [ %.011, %35 ], [ %.011, %32 ], [ -1, %31 ], [ %.011, %29 ], [ %.011, %18 ], [ %.011, %8 ], [ %.011, %5 ]
  %.09.be = phi i8 [ %.09, %4 ], [ %.09, %48 ], [ %45, %39 ], [ %.09, %36 ], [ %.09, %35 ], [ %34, %32 ], [ %.09, %31 ], [ %.09, %29 ], [ %.09, %18 ], [ %.09, %8 ], [ %.09, %5 ]
  %.0.be = phi i32 [ %.0, %4 ], [ -218739566, %48 ], [ 1319672226, %39 ], [ %38, %36 ], [ 1319672226, %35 ], [ -64399161, %32 ], [ 1848991641, %31 ], [ %30, %29 ], [ %28, %18 ], [ %17, %8 ], [ %7, %5 ]
  br label %4

5:                                                ; preds = %4
  %6 = sext i8 %.09 to i32
  %isdigittmp15 = add nsw i32 %6, -48
  %isdigit16 = icmp ugt i32 %isdigittmp15, 9
  %7 = select i1 %isdigit16, i32 434957157, i32 2139363540
  br label %.backedge

8:                                                ; preds = %4
  %9 = load i32, i32* @x.5, align 4
  %10 = load i32, i32* @y.6, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 -218739566, i32 1917478268
  br label %.backedge

18:                                               ; preds = %4
  %19 = icmp eq i8 %.09, 45
  store i1 %19, i1* %1, align 1
  %20 = load i32, i32* @x.5, align 4
  %21 = load i32, i32* @y.6, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 1737094601, i32 1917478268
  br label %.backedge

29:                                               ; preds = %4
  %.0..0..0. = load volatile i1, i1* %1, align 1
  %30 = select i1 %.0..0..0., i32 227580403, i32 1848991641
  br label %.backedge

31:                                               ; preds = %4
  br label %.backedge

32:                                               ; preds = %4
  %33 = tail call i32 @getchar()
  %34 = trunc i32 %33 to i8
  br label %.backedge

35:                                               ; preds = %4
  br label %.backedge

36:                                               ; preds = %4
  %37 = sext i8 %.09 to i32
  %isdigittmp = add nsw i32 %37, -48
  %isdigit = icmp ult i32 %isdigittmp, 10
  %38 = select i1 %isdigit, i32 -344914817, i32 941738888
  br label %.backedge

39:                                               ; preds = %4
  %40 = mul nsw i32 %.013, 10
  %41 = sext i8 %.09 to i32
  %42 = add i32 %40, -48
  %43 = add i32 %42, %41
  %44 = tail call i32 @getchar()
  %45 = trunc i32 %44 to i8
  br label %.backedge

46:                                               ; preds = %4
  %47 = mul nsw i32 %.011, %.013
  ret i32 %47

48:                                               ; preds = %4
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #6

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s294703613.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.7, align 4
  %4 = load i32, i32* @y.8, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 659758027, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 659758027, label %11
    i32 -784254132, label %14
    i32 -486832037, label %24
    i32 1590166768, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -784254132, i32 1590166768
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -486832037, i32 1590166768
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -784254132, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
