; ModuleID = 'build_ollvm/programs/p03707/s403961786.ll'
source_filename = "Project_CodeNet_C++1400/p03707/s403961786.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@R = global i32 0, align 4
@C = global i32 0, align 4
@Q = global i32 0, align 4
@grid = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@node = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@edge = local_unnamed_addr global [4005 x [4005 x i32]] zeroinitializer, align 16
@grid2 = local_unnamed_addr global [4005 x [4005 x i32]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s403961786.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %10 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %13
  %15 = bitcast i8* %14 to %"class.std::basic_ios"*
  %16 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %15, %"class.std::basic_ostream"* null)
  %17 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %20
  %22 = bitcast i8* %21 to %"class.std::basic_ios"*
  %23 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %22, %"class.std::basic_ostream"* null)
  %24 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @R)
  %25 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %24, i32* nonnull dereferenceable(4) @C)
  %26 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %25, i32* nonnull dereferenceable(4) @Q)
  br label %27

27:                                               ; preds = %.backedge, %0
  %.0104 = phi i32 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i32 [ undef, %0 ], [ %.0102.be, %.backedge ]
  %.0100 = phi i32 [ undef, %0 ], [ %.0100.be, %.backedge ]
  %.098 = phi i32 [ undef, %0 ], [ %.098.be, %.backedge ]
  %.096 = phi i32 [ undef, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i32 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i32 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ 1, %0 ], [ %.088.be, %.backedge ]
  %.0 = phi i32 [ -1764175407, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1764175407, label %28
    i32 1780832729, label %31
    i32 -1670649416, label %41
    i32 1944399919, label %51
    i32 367954366, label %52
    i32 917424657, label %55
    i32 1806270212, label %65
    i32 1947193136, label %82
    i32 1760154664, label %83
    i32 1726030465, label %85
    i32 1165095853, label %95
    i32 229753048, label %105
    i32 404290770, label %106
    i32 1455729163, label %116
    i32 1717896383, label %127
    i32 385918897, label %128
    i32 1309611199, label %129
    i32 280909460, label %132
    i32 972291490, label %133
    i32 -883160093, label %136
    i32 767287689, label %146
    i32 1181374399, label %174
    i32 -172415912, label %175
    i32 -478944104, label %185
    i32 747613882, label %196
    i32 -71389343, label %197
    i32 -1923833654, label %207
    i32 1986212924, label %217
    i32 1977146476, label %218
    i32 238834025, label %219
    i32 -983589458, label %220
    i32 -254414995, label %230
    i32 1821548715, label %242
    i32 -570202694, label %244
    i32 427809898, label %245
    i32 834929487, label %248
    i32 -1834420230, label %255
    i32 -499707488, label %263
    i32 -141619222, label %273
    i32 125527825, label %290
    i32 -615750029, label %291
    i32 -529309999, label %299
    i32 -40294150, label %306
    i32 -1241723718, label %316
    i32 -1338178761, label %332
    i32 -166763832, label %334
    i32 -1582595226, label %342
    i32 2145709690, label %350
    i32 -730559202, label %357
    i32 -1716680246, label %358
    i32 -1668953729, label %359
    i32 -1778404998, label %369
    i32 611853112, label %380
    i32 -1887631263, label %381
    i32 -1427104874, label %382
    i32 -1155417237, label %384
    i32 89954340, label %385
    i32 -711485306, label %395
    i32 -1109407159, label %408
    i32 -530598950, label %410
    i32 1437669345, label %411
    i32 -1161574278, label %415
    i32 1123929599, label %434
    i32 1924798996, label %444
    i32 -1675620832, label %455
    i32 -242280926, label %456
    i32 -1937643680, label %457
    i32 -1130903803, label %467
    i32 -322026472, label %477
    i32 151826264, label %478
    i32 2140252720, label %479
    i32 2105895802, label %482
    i32 675225114, label %534
    i32 -693108063, label %544
    i32 -1110562029, label %554
    i32 413828644, label %555
    i32 521493275, label %556
    i32 998299770, label %557
    i32 -1347359488, label %565
    i32 -1120400126, label %566
    i32 -1588761276, label %568
    i32 -1214613097, label %587
    i32 -42593104, label %589
    i32 -1987024043, label %590
    i32 -75872756, label %591
    i32 -2105003440, label %599
    i32 275470658, label %600
    i32 -526571222, label %602
    i32 1955033321, label %603
    i32 745463791, label %605
    i32 -591269616, label %606
  ]

.backedge:                                        ; preds = %27, %606, %605, %603, %602, %600, %599, %591, %590, %589, %587, %568, %566, %565, %557, %556, %554, %544, %534, %482, %479, %478, %477, %467, %457, %456, %455, %444, %434, %415, %411, %410, %408, %395, %385, %384, %382, %381, %380, %369, %359, %358, %357, %350, %342, %334, %332, %316, %306, %299, %291, %290, %273, %263, %255, %248, %245, %244, %242, %230, %220, %219, %218, %217, %207, %197, %196, %185, %175, %174, %146, %136, %133, %132, %129, %128, %127, %116, %106, %105, %95, %85, %83, %82, %65, %55, %52, %51, %41, %31, %28
  %.0104.be = phi i32 [ %.0104, %27 ], [ %.0104, %606 ], [ %.0104, %605 ], [ %.0104, %603 ], [ %.0104, %602 ], [ %.0104, %600 ], [ %.0104, %599 ], [ %.0104, %591 ], [ %.0104, %590 ], [ %.0104, %589 ], [ %.0104, %587 ], [ %.0104, %568 ], [ %.0104, %566 ], [ %.0104, %565 ], [ %.0104, %557 ], [ %.0104, %556 ], [ %.0104, %554 ], [ %.0104, %544 ], [ %.0104, %534 ], [ %.0104, %482 ], [ %.0104, %479 ], [ %.0104, %478 ], [ %.0104, %477 ], [ %.0104, %467 ], [ %.0104, %457 ], [ %.0104, %456 ], [ %.0104, %455 ], [ %.0104, %444 ], [ %.0104, %434 ], [ %.0104, %415 ], [ %.0104, %411 ], [ %.0104, %410 ], [ %.0104, %408 ], [ %.0104, %395 ], [ %.0104, %385 ], [ %.0104, %384 ], [ %.0104, %382 ], [ %.0104, %381 ], [ %.0104, %380 ], [ %.0104, %369 ], [ %.0104, %359 ], [ %.0104, %358 ], [ %.0104, %357 ], [ %.0104, %350 ], [ %.0104, %342 ], [ %.0104, %334 ], [ %.0104, %332 ], [ %.0104, %316 ], [ %.0104, %306 ], [ %.0104, %299 ], [ %.0104, %291 ], [ %.0104, %290 ], [ %.0104, %273 ], [ %.0104, %263 ], [ %.0104, %255 ], [ %.0104, %248 ], [ %.0104, %245 ], [ %.0104, %244 ], [ %.0104, %242 ], [ %.0104, %230 ], [ %.0104, %220 ], [ %.0104, %219 ], [ %.neg111, %218 ], [ %.0104, %217 ], [ %.0104, %207 ], [ %.0104, %197 ], [ %.0104, %196 ], [ %.0104, %185 ], [ %.0104, %175 ], [ %.0104, %174 ], [ %.0104, %146 ], [ %.0104, %136 ], [ %.0104, %133 ], [ %.0104, %132 ], [ %.0104, %129 ], [ 1, %128 ], [ %.0104, %127 ], [ %.0104, %116 ], [ %.0104, %106 ], [ %.0104, %105 ], [ %.0104, %95 ], [ %.0104, %85 ], [ %.0104, %83 ], [ %.0104, %82 ], [ %.0104, %65 ], [ %.0104, %55 ], [ %.0104, %52 ], [ %.0104, %51 ], [ %.0104, %41 ], [ %.0104, %31 ], [ %.0104, %28 ]
  %.0102.be = phi i32 [ %.0102, %27 ], [ %.0102, %606 ], [ %.0102, %605 ], [ %.0102, %603 ], [ %.0102, %602 ], [ %.0102, %600 ], [ %.0102, %599 ], [ %.0102, %591 ], [ %.0102, %590 ], [ %.0102, %589 ], [ %588, %587 ], [ %.0102, %568 ], [ %.0102, %566 ], [ %.0102, %565 ], [ %.0102, %557 ], [ %.0102, %556 ], [ %.0102, %554 ], [ %.0102, %544 ], [ %.0102, %534 ], [ %.0102, %482 ], [ %.0102, %479 ], [ %.0102, %478 ], [ %.0102, %477 ], [ %.0102, %467 ], [ %.0102, %457 ], [ %.0102, %456 ], [ %.0102, %455 ], [ %.0102, %444 ], [ %.0102, %434 ], [ %.0102, %415 ], [ %.0102, %411 ], [ %.0102, %410 ], [ %.0102, %408 ], [ %.0102, %395 ], [ %.0102, %385 ], [ %.0102, %384 ], [ %.0102, %382 ], [ %.0102, %381 ], [ %.0102, %380 ], [ %.0102, %369 ], [ %.0102, %359 ], [ %.0102, %358 ], [ %.0102, %357 ], [ %.0102, %350 ], [ %.0102, %342 ], [ %.0102, %334 ], [ %.0102, %332 ], [ %.0102, %316 ], [ %.0102, %306 ], [ %.0102, %299 ], [ %.0102, %291 ], [ %.0102, %290 ], [ %.0102, %273 ], [ %.0102, %263 ], [ %.0102, %255 ], [ %.0102, %248 ], [ %.0102, %245 ], [ %.0102, %244 ], [ %.0102, %242 ], [ %.0102, %230 ], [ %.0102, %220 ], [ %.0102, %219 ], [ %.0102, %218 ], [ %.0102, %217 ], [ %.0102, %207 ], [ %.0102, %197 ], [ %.0102, %196 ], [ %186, %185 ], [ %.0102, %175 ], [ %.0102, %174 ], [ %.0102, %146 ], [ %.0102, %136 ], [ %.0102, %133 ], [ 1, %132 ], [ %.0102, %129 ], [ %.0102, %128 ], [ %.0102, %127 ], [ %.0102, %116 ], [ %.0102, %106 ], [ %.0102, %105 ], [ %.0102, %95 ], [ %.0102, %85 ], [ %.0102, %83 ], [ %.0102, %82 ], [ %.0102, %65 ], [ %.0102, %55 ], [ %.0102, %52 ], [ %.0102, %51 ], [ %.0102, %41 ], [ %.0102, %31 ], [ %.0102, %28 ]
  %.0100.be = phi i32 [ %.0100, %27 ], [ %.0100, %606 ], [ %.0100, %605 ], [ %.0100, %603 ], [ %.0100, %602 ], [ %.0100, %600 ], [ %.0100, %599 ], [ %.0100, %591 ], [ %.0100, %590 ], [ %.0100, %589 ], [ %.0100, %587 ], [ %.0100, %568 ], [ %.0100, %566 ], [ %.0100, %565 ], [ %.0100, %557 ], [ %.0100, %556 ], [ %.0100, %554 ], [ %.0100, %544 ], [ %.0100, %534 ], [ %.0100, %482 ], [ %.0100, %479 ], [ %.0100, %478 ], [ %.0100, %477 ], [ %.0100, %467 ], [ %.0100, %457 ], [ %.0100, %456 ], [ %.0100, %455 ], [ %.0100, %444 ], [ %.0100, %434 ], [ %.0100, %415 ], [ %.0100, %411 ], [ %.0100, %410 ], [ %.0100, %408 ], [ %.0100, %395 ], [ %.0100, %385 ], [ %.0100, %384 ], [ %383, %382 ], [ %.0100, %381 ], [ %.0100, %380 ], [ %.0100, %369 ], [ %.0100, %359 ], [ %.0100, %358 ], [ %.0100, %357 ], [ %.0100, %350 ], [ %.0100, %342 ], [ %.0100, %334 ], [ %.0100, %332 ], [ %.0100, %316 ], [ %.0100, %306 ], [ %.0100, %299 ], [ %.0100, %291 ], [ %.0100, %290 ], [ %.0100, %273 ], [ %.0100, %263 ], [ %.0100, %255 ], [ %.0100, %248 ], [ %.0100, %245 ], [ %.0100, %244 ], [ %.0100, %242 ], [ %.0100, %230 ], [ %.0100, %220 ], [ 1, %219 ], [ %.0100, %218 ], [ %.0100, %217 ], [ %.0100, %207 ], [ %.0100, %197 ], [ %.0100, %196 ], [ %.0100, %185 ], [ %.0100, %175 ], [ %.0100, %174 ], [ %.0100, %146 ], [ %.0100, %136 ], [ %.0100, %133 ], [ %.0100, %132 ], [ %.0100, %129 ], [ %.0100, %128 ], [ %.0100, %127 ], [ %.0100, %116 ], [ %.0100, %106 ], [ %.0100, %105 ], [ %.0100, %95 ], [ %.0100, %85 ], [ %.0100, %83 ], [ %.0100, %82 ], [ %.0100, %65 ], [ %.0100, %55 ], [ %.0100, %52 ], [ %.0100, %51 ], [ %.0100, %41 ], [ %.0100, %31 ], [ %.0100, %28 ]
  %.098.be = phi i32 [ %.098, %27 ], [ %.098, %606 ], [ %.098, %605 ], [ %.098, %603 ], [ %.098, %602 ], [ %601, %600 ], [ %.098, %599 ], [ %.098, %591 ], [ %.098, %590 ], [ %.098, %589 ], [ %.098, %587 ], [ %.098, %568 ], [ %.098, %566 ], [ %.098, %565 ], [ %.098, %557 ], [ %.098, %556 ], [ %.098, %554 ], [ %.098, %544 ], [ %.098, %534 ], [ %.098, %482 ], [ %.098, %479 ], [ %.098, %478 ], [ %.098, %477 ], [ %.098, %467 ], [ %.098, %457 ], [ %.098, %456 ], [ %.098, %455 ], [ %.098, %444 ], [ %.098, %434 ], [ %.098, %415 ], [ %.098, %411 ], [ %.098, %410 ], [ %.098, %408 ], [ %.098, %395 ], [ %.098, %385 ], [ %.098, %384 ], [ %.098, %382 ], [ %.098, %381 ], [ %.098, %380 ], [ %370, %369 ], [ %.098, %359 ], [ %.098, %358 ], [ %.098, %357 ], [ %.098, %350 ], [ %.098, %342 ], [ %.098, %334 ], [ %.098, %332 ], [ %.098, %316 ], [ %.098, %306 ], [ %.098, %299 ], [ %.098, %291 ], [ %.098, %290 ], [ %.098, %273 ], [ %.098, %263 ], [ %.098, %255 ], [ %.098, %248 ], [ %.098, %245 ], [ 1, %244 ], [ %.098, %242 ], [ %.098, %230 ], [ %.098, %220 ], [ %.098, %219 ], [ %.098, %218 ], [ %.098, %217 ], [ %.098, %207 ], [ %.098, %197 ], [ %.098, %196 ], [ %.098, %185 ], [ %.098, %175 ], [ %.098, %174 ], [ %.098, %146 ], [ %.098, %136 ], [ %.098, %133 ], [ %.098, %132 ], [ %.098, %129 ], [ %.098, %128 ], [ %.098, %127 ], [ %.098, %116 ], [ %.098, %106 ], [ %.098, %105 ], [ %.098, %95 ], [ %.098, %85 ], [ %.098, %83 ], [ %.098, %82 ], [ %.098, %65 ], [ %.098, %55 ], [ %.098, %52 ], [ %.098, %51 ], [ %.098, %41 ], [ %.098, %31 ], [ %.098, %28 ]
  %.096.be = phi i32 [ %.096, %27 ], [ %.096, %606 ], [ %.neg, %605 ], [ %.096, %603 ], [ %.096, %602 ], [ %.096, %600 ], [ %.096, %599 ], [ %.096, %591 ], [ %.096, %590 ], [ %.096, %589 ], [ %.096, %587 ], [ %.096, %568 ], [ %.096, %566 ], [ %.096, %565 ], [ %.096, %557 ], [ %.096, %556 ], [ %.096, %554 ], [ %.096, %544 ], [ %.096, %534 ], [ %.096, %482 ], [ %.096, %479 ], [ %.096, %478 ], [ %.096, %477 ], [ %.neg108, %467 ], [ %.096, %457 ], [ %.096, %456 ], [ %.096, %455 ], [ %.096, %444 ], [ %.096, %434 ], [ %.096, %415 ], [ %.096, %411 ], [ %.096, %410 ], [ %.096, %408 ], [ %.096, %395 ], [ %.096, %385 ], [ 1, %384 ], [ %.096, %382 ], [ %.096, %381 ], [ %.096, %380 ], [ %.096, %369 ], [ %.096, %359 ], [ %.096, %358 ], [ %.096, %357 ], [ %.096, %350 ], [ %.096, %342 ], [ %.096, %334 ], [ %.096, %332 ], [ %.096, %316 ], [ %.096, %306 ], [ %.096, %299 ], [ %.096, %291 ], [ %.096, %290 ], [ %.096, %273 ], [ %.096, %263 ], [ %.096, %255 ], [ %.096, %248 ], [ %.096, %245 ], [ %.096, %244 ], [ %.096, %242 ], [ %.096, %230 ], [ %.096, %220 ], [ %.096, %219 ], [ %.096, %218 ], [ %.096, %217 ], [ %.096, %207 ], [ %.096, %197 ], [ %.096, %196 ], [ %.096, %185 ], [ %.096, %175 ], [ %.096, %174 ], [ %.096, %146 ], [ %.096, %136 ], [ %.096, %133 ], [ %.096, %132 ], [ %.096, %129 ], [ %.096, %128 ], [ %.096, %127 ], [ %.096, %116 ], [ %.096, %106 ], [ %.096, %105 ], [ %.096, %95 ], [ %.096, %85 ], [ %.096, %83 ], [ %.096, %82 ], [ %.096, %65 ], [ %.096, %55 ], [ %.096, %52 ], [ %.096, %51 ], [ %.096, %41 ], [ %.096, %31 ], [ %.096, %28 ]
  %.094.be = phi i32 [ %.094, %27 ], [ %.094, %606 ], [ %.094, %605 ], [ %604, %603 ], [ %.094, %602 ], [ %.094, %600 ], [ %.094, %599 ], [ %.094, %591 ], [ %.094, %590 ], [ %.094, %589 ], [ %.094, %587 ], [ %.094, %568 ], [ %.094, %566 ], [ %.094, %565 ], [ %.094, %557 ], [ %.094, %556 ], [ %.094, %554 ], [ %.094, %544 ], [ %.094, %534 ], [ %.094, %482 ], [ %.094, %479 ], [ %.094, %478 ], [ %.094, %477 ], [ %.094, %467 ], [ %.094, %457 ], [ %.094, %456 ], [ %.094, %455 ], [ %445, %444 ], [ %.094, %434 ], [ %.094, %415 ], [ %.094, %411 ], [ 1, %410 ], [ %.094, %408 ], [ %.094, %395 ], [ %.094, %385 ], [ %.094, %384 ], [ %.094, %382 ], [ %.094, %381 ], [ %.094, %380 ], [ %.094, %369 ], [ %.094, %359 ], [ %.094, %358 ], [ %.094, %357 ], [ %.094, %350 ], [ %.094, %342 ], [ %.094, %334 ], [ %.094, %332 ], [ %.094, %316 ], [ %.094, %306 ], [ %.094, %299 ], [ %.094, %291 ], [ %.094, %290 ], [ %.094, %273 ], [ %.094, %263 ], [ %.094, %255 ], [ %.094, %248 ], [ %.094, %245 ], [ %.094, %244 ], [ %.094, %242 ], [ %.094, %230 ], [ %.094, %220 ], [ %.094, %219 ], [ %.094, %218 ], [ %.094, %217 ], [ %.094, %207 ], [ %.094, %197 ], [ %.094, %196 ], [ %.094, %185 ], [ %.094, %175 ], [ %.094, %174 ], [ %.094, %146 ], [ %.094, %136 ], [ %.094, %133 ], [ %.094, %132 ], [ %.094, %129 ], [ %.094, %128 ], [ %.094, %127 ], [ %.094, %116 ], [ %.094, %106 ], [ %.094, %105 ], [ %.094, %95 ], [ %.094, %85 ], [ %.094, %83 ], [ %.094, %82 ], [ %.094, %65 ], [ %.094, %55 ], [ %.094, %52 ], [ %.094, %51 ], [ %.094, %41 ], [ %.094, %31 ], [ %.094, %28 ]
  %.092.be = phi i32 [ %.092, %27 ], [ %607, %606 ], [ %.092, %605 ], [ %.092, %603 ], [ %.092, %602 ], [ %.092, %600 ], [ %.092, %599 ], [ %.092, %591 ], [ %.092, %590 ], [ %.092, %589 ], [ %.092, %587 ], [ %.092, %568 ], [ %.092, %566 ], [ %.092, %565 ], [ %.092, %557 ], [ %.092, %556 ], [ %.092, %554 ], [ %.neg106, %544 ], [ %.092, %534 ], [ %.092, %482 ], [ %.092, %479 ], [ 1, %478 ], [ %.092, %477 ], [ %.092, %467 ], [ %.092, %457 ], [ %.092, %456 ], [ %.092, %455 ], [ %.092, %444 ], [ %.092, %434 ], [ %.092, %415 ], [ %.092, %411 ], [ %.092, %410 ], [ %.092, %408 ], [ %.092, %395 ], [ %.092, %385 ], [ %.092, %384 ], [ %.092, %382 ], [ %.092, %381 ], [ %.092, %380 ], [ %.092, %369 ], [ %.092, %359 ], [ %.092, %358 ], [ %.092, %357 ], [ %.092, %350 ], [ %.092, %342 ], [ %.092, %334 ], [ %.092, %332 ], [ %.092, %316 ], [ %.092, %306 ], [ %.092, %299 ], [ %.092, %291 ], [ %.092, %290 ], [ %.092, %273 ], [ %.092, %263 ], [ %.092, %255 ], [ %.092, %248 ], [ %.092, %245 ], [ %.092, %244 ], [ %.092, %242 ], [ %.092, %230 ], [ %.092, %220 ], [ %.092, %219 ], [ %.092, %218 ], [ %.092, %217 ], [ %.092, %207 ], [ %.092, %197 ], [ %.092, %196 ], [ %.092, %185 ], [ %.092, %175 ], [ %.092, %174 ], [ %.092, %146 ], [ %.092, %136 ], [ %.092, %133 ], [ %.092, %132 ], [ %.092, %129 ], [ %.092, %128 ], [ %.092, %127 ], [ %.092, %116 ], [ %.092, %106 ], [ %.092, %105 ], [ %.092, %95 ], [ %.092, %85 ], [ %.092, %83 ], [ %.092, %82 ], [ %.092, %65 ], [ %.092, %55 ], [ %.092, %52 ], [ %.092, %51 ], [ %.092, %41 ], [ %.092, %31 ], [ %.092, %28 ]
  %.090.be = phi i32 [ %.090, %27 ], [ %.090, %606 ], [ %.090, %605 ], [ %.090, %603 ], [ %.090, %602 ], [ %.090, %600 ], [ %.090, %599 ], [ %.090, %591 ], [ %.090, %590 ], [ %.090, %589 ], [ %.090, %587 ], [ %.090, %568 ], [ %.090, %566 ], [ %.090, %565 ], [ %.090, %557 ], [ 1, %556 ], [ %.090, %554 ], [ %.090, %544 ], [ %.090, %534 ], [ %.090, %482 ], [ %.090, %479 ], [ %.090, %478 ], [ %.090, %477 ], [ %.090, %467 ], [ %.090, %457 ], [ %.090, %456 ], [ %.090, %455 ], [ %.090, %444 ], [ %.090, %434 ], [ %.090, %415 ], [ %.090, %411 ], [ %.090, %410 ], [ %.090, %408 ], [ %.090, %395 ], [ %.090, %385 ], [ %.090, %384 ], [ %.090, %382 ], [ %.090, %381 ], [ %.090, %380 ], [ %.090, %369 ], [ %.090, %359 ], [ %.090, %358 ], [ %.090, %357 ], [ %.090, %350 ], [ %.090, %342 ], [ %.090, %334 ], [ %.090, %332 ], [ %.090, %316 ], [ %.090, %306 ], [ %.090, %299 ], [ %.090, %291 ], [ %.090, %290 ], [ %.090, %273 ], [ %.090, %263 ], [ %.090, %255 ], [ %.090, %248 ], [ %.090, %245 ], [ %.090, %244 ], [ %.090, %242 ], [ %.090, %230 ], [ %.090, %220 ], [ %.090, %219 ], [ %.090, %218 ], [ %.090, %217 ], [ %.090, %207 ], [ %.090, %197 ], [ %.090, %196 ], [ %.090, %185 ], [ %.090, %175 ], [ %.090, %174 ], [ %.090, %146 ], [ %.090, %136 ], [ %.090, %133 ], [ %.090, %132 ], [ %.090, %129 ], [ %.090, %128 ], [ %.090, %127 ], [ %.090, %116 ], [ %.090, %106 ], [ %.090, %105 ], [ %.090, %95 ], [ %.090, %85 ], [ %84, %83 ], [ %.090, %82 ], [ %.090, %65 ], [ %.090, %55 ], [ %.090, %52 ], [ %.090, %51 ], [ 1, %41 ], [ %.090, %31 ], [ %.090, %28 ]
  %.088.be = phi i32 [ %.088, %27 ], [ %.088, %606 ], [ %.088, %605 ], [ %.088, %603 ], [ %.088, %602 ], [ %.088, %600 ], [ %.088, %599 ], [ %.088, %591 ], [ %.088, %590 ], [ %.088, %589 ], [ %.088, %587 ], [ %.088, %568 ], [ %567, %566 ], [ %.088, %565 ], [ %.088, %557 ], [ %.088, %556 ], [ %.088, %554 ], [ %.088, %544 ], [ %.088, %534 ], [ %.088, %482 ], [ %.088, %479 ], [ %.088, %478 ], [ %.088, %477 ], [ %.088, %467 ], [ %.088, %457 ], [ %.088, %456 ], [ %.088, %455 ], [ %.088, %444 ], [ %.088, %434 ], [ %.088, %415 ], [ %.088, %411 ], [ %.088, %410 ], [ %.088, %408 ], [ %.088, %395 ], [ %.088, %385 ], [ %.088, %384 ], [ %.088, %382 ], [ %.088, %381 ], [ %.088, %380 ], [ %.088, %369 ], [ %.088, %359 ], [ %.088, %358 ], [ %.088, %357 ], [ %.088, %350 ], [ %.088, %342 ], [ %.088, %334 ], [ %.088, %332 ], [ %.088, %316 ], [ %.088, %306 ], [ %.088, %299 ], [ %.088, %291 ], [ %.088, %290 ], [ %.088, %273 ], [ %.088, %263 ], [ %.088, %255 ], [ %.088, %248 ], [ %.088, %245 ], [ %.088, %244 ], [ %.088, %242 ], [ %.088, %230 ], [ %.088, %220 ], [ %.088, %219 ], [ %.088, %218 ], [ %.088, %217 ], [ %.088, %207 ], [ %.088, %197 ], [ %.088, %196 ], [ %.088, %185 ], [ %.088, %175 ], [ %.088, %174 ], [ %.088, %146 ], [ %.088, %136 ], [ %.088, %133 ], [ %.088, %132 ], [ %.088, %129 ], [ %.088, %128 ], [ %.088, %127 ], [ %117, %116 ], [ %.088, %106 ], [ %.088, %105 ], [ %.088, %95 ], [ %.088, %85 ], [ %.088, %83 ], [ %.088, %82 ], [ %.088, %65 ], [ %.088, %55 ], [ %.088, %52 ], [ %.088, %51 ], [ %.088, %41 ], [ %.088, %31 ], [ %.088, %28 ]
  %.0.be = phi i32 [ %.0, %27 ], [ -693108063, %606 ], [ -1130903803, %605 ], [ 1924798996, %603 ], [ -711485306, %602 ], [ -1778404998, %600 ], [ -1241723718, %599 ], [ -141619222, %591 ], [ -254414995, %590 ], [ -1923833654, %589 ], [ -478944104, %587 ], [ 767287689, %568 ], [ 1455729163, %566 ], [ 1165095853, %565 ], [ 1806270212, %557 ], [ -1670649416, %556 ], [ 2140252720, %554 ], [ %553, %544 ], [ %543, %534 ], [ 675225114, %482 ], [ %481, %479 ], [ 2140252720, %478 ], [ 89954340, %477 ], [ %476, %467 ], [ %466, %457 ], [ -1937643680, %456 ], [ 1437669345, %455 ], [ %454, %444 ], [ %443, %434 ], [ 1123929599, %415 ], [ %414, %411 ], [ 1437669345, %410 ], [ %409, %408 ], [ %407, %395 ], [ %394, %385 ], [ 89954340, %384 ], [ -983589458, %382 ], [ -1427104874, %381 ], [ 427809898, %380 ], [ %379, %369 ], [ %368, %359 ], [ -1668953729, %358 ], [ -1716680246, %357 ], [ -730559202, %350 ], [ %349, %342 ], [ -1582595226, %334 ], [ %333, %332 ], [ %331, %316 ], [ %315, %306 ], [ -40294150, %299 ], [ %298, %291 ], [ -615750029, %290 ], [ %289, %273 ], [ %272, %263 ], [ %262, %255 ], [ %254, %248 ], [ %247, %245 ], [ 427809898, %244 ], [ %243, %242 ], [ %241, %230 ], [ %229, %220 ], [ -983589458, %219 ], [ 1309611199, %218 ], [ 1977146476, %217 ], [ %216, %207 ], [ %206, %197 ], [ 972291490, %196 ], [ %195, %185 ], [ %184, %175 ], [ -172415912, %174 ], [ %173, %146 ], [ %145, %136 ], [ %135, %133 ], [ 972291490, %132 ], [ %131, %129 ], [ 1309611199, %128 ], [ -1764175407, %127 ], [ %126, %116 ], [ %115, %106 ], [ 404290770, %105 ], [ %104, %95 ], [ %94, %85 ], [ 367954366, %83 ], [ 1760154664, %82 ], [ %81, %65 ], [ %64, %55 ], [ %54, %52 ], [ 367954366, %51 ], [ %50, %41 ], [ %40, %31 ], [ %30, %28 ]
  br label %27

28:                                               ; preds = %27
  %29 = load i32, i32* @R, align 4
  %.not115 = icmp sgt i32 %.088, %29
  %30 = select i1 %.not115, i32 385918897, i32 1780832729
  br label %.backedge

31:                                               ; preds = %27
  %32 = load i32, i32* @x.1, align 4
  %33 = load i32, i32* @y.2, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -1670649416, i32 521493275
  br label %.backedge

41:                                               ; preds = %27
  %42 = load i32, i32* @x.1, align 4
  %43 = load i32, i32* @y.2, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 1944399919, i32 521493275
  br label %.backedge

51:                                               ; preds = %27
  br label %.backedge

52:                                               ; preds = %27
  %53 = load i32, i32* @C, align 4
  %.not114 = icmp sgt i32 %.090, %53
  %54 = select i1 %.not114, i32 1726030465, i32 917424657
  br label %.backedge

55:                                               ; preds = %27
  %56 = load i32, i32* @x.1, align 4
  %57 = load i32, i32* @y.2, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 1806270212, i32 998299770
  br label %.backedge

65:                                               ; preds = %27
  %66 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %4)
  %67 = load i8, i8* %4, align 1
  %68 = sext i8 %67 to i32
  %69 = add nsw i32 %68, -48
  %70 = sext i32 %.088 to i64
  %71 = sext i32 %.090 to i64
  %72 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @grid, i64 0, i64 %70, i64 %71
  store i32 %69, i32* %72, align 4
  %73 = load i32, i32* @x.1, align 4
  %74 = load i32, i32* @y.2, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 1947193136, i32 998299770
  br label %.backedge

82:                                               ; preds = %27
  br label %.backedge

83:                                               ; preds = %27
  %84 = add i32 %.090, 1
  br label %.backedge

85:                                               ; preds = %27
  %86 = load i32, i32* @x.1, align 4
  %87 = load i32, i32* @y.2, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 1165095853, i32 -1347359488
  br label %.backedge

95:                                               ; preds = %27
  %96 = load i32, i32* @x.1, align 4
  %97 = load i32, i32* @y.2, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 229753048, i32 -1347359488
  br label %.backedge

105:                                              ; preds = %27
  br label %.backedge

106:                                              ; preds = %27
  %107 = load i32, i32* @x.1, align 4
  %108 = load i32, i32* @y.2, align 4
  %109 = add i32 %107, -1
  %110 = mul i32 %109, %107
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %113, %112
  %115 = select i1 %114, i32 1455729163, i32 -1120400126
  br label %.backedge

116:                                              ; preds = %27
  %117 = add i32 %.088, 1
  %118 = load i32, i32* @x.1, align 4
  %119 = load i32, i32* @y.2, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 1717896383, i32 -1120400126
  br label %.backedge

127:                                              ; preds = %27
  br label %.backedge

128:                                              ; preds = %27
  br label %.backedge

129:                                              ; preds = %27
  %130 = load i32, i32* @R, align 4
  %.not113 = icmp sgt i32 %.0104, %130
  %131 = select i1 %.not113, i32 238834025, i32 280909460
  br label %.backedge

132:                                              ; preds = %27
  br label %.backedge

133:                                              ; preds = %27
  %134 = load i32, i32* @C, align 4
  %.not112 = icmp sgt i32 %.0102, %134
  %135 = select i1 %.not112, i32 -71389343, i32 -883160093
  br label %.backedge

136:                                              ; preds = %27
  %137 = load i32, i32* @x.1, align 4
  %138 = load i32, i32* @y.2, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 767287689, i32 -1588761276
  br label %.backedge

146:                                              ; preds = %27
  %147 = sext i32 %.0104 to i64
  %148 = sext i32 %.0102 to i64
  %149 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @grid, i64 0, i64 %147, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = add i32 %.0104, -1
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %152, i64 %148
  %154 = load i32, i32* %153, align 4
  %155 = add i32 %.0102, -1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %147, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %152, i64 %156
  %160 = load i32, i32* %159, align 4
  %161 = add i32 %154, %150
  %162 = add i32 %161, %158
  %163 = sub i32 %162, %160
  %164 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %147, i64 %148
  store i32 %163, i32* %164, align 4
  %165 = load i32, i32* @x.1, align 4
  %166 = load i32, i32* @y.2, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 1181374399, i32 -1588761276
  br label %.backedge

174:                                              ; preds = %27
  br label %.backedge

175:                                              ; preds = %27
  %176 = load i32, i32* @x.1, align 4
  %177 = load i32, i32* @y.2, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 -478944104, i32 -1214613097
  br label %.backedge

185:                                              ; preds = %27
  %186 = add i32 %.0102, 1
  %187 = load i32, i32* @x.1, align 4
  %188 = load i32, i32* @y.2, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 747613882, i32 -1214613097
  br label %.backedge

196:                                              ; preds = %27
  br label %.backedge

197:                                              ; preds = %27
  %198 = load i32, i32* @x.1, align 4
  %199 = load i32, i32* @y.2, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 -1923833654, i32 -42593104
  br label %.backedge

207:                                              ; preds = %27
  %208 = load i32, i32* @x.1, align 4
  %209 = load i32, i32* @y.2, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 1986212924, i32 -42593104
  br label %.backedge

217:                                              ; preds = %27
  br label %.backedge

218:                                              ; preds = %27
  %.neg111 = add i32 %.0104, 1
  br label %.backedge

219:                                              ; preds = %27
  br label %.backedge

220:                                              ; preds = %27
  %221 = load i32, i32* @x.1, align 4
  %222 = load i32, i32* @y.2, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 -254414995, i32 -1987024043
  br label %.backedge

230:                                              ; preds = %27
  %231 = load i32, i32* @R, align 4
  %232 = icmp sle i32 %.0100, %231
  store i1 %232, i1* %3, align 1
  %233 = load i32, i32* @x.1, align 4
  %234 = load i32, i32* @y.2, align 4
  %235 = add i32 %233, -1
  %236 = mul i32 %235, %233
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %239, %238
  %241 = select i1 %240, i32 1821548715, i32 -1987024043
  br label %.backedge

242:                                              ; preds = %27
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %243 = select i1 %.0..0..0., i32 -570202694, i32 -1155417237
  br label %.backedge

244:                                              ; preds = %27
  br label %.backedge

245:                                              ; preds = %27
  %246 = load i32, i32* @C, align 4
  %.not110 = icmp sgt i32 %.098, %246
  %247 = select i1 %.not110, i32 -1887631263, i32 834929487
  br label %.backedge

248:                                              ; preds = %27
  %249 = sext i32 %.0100 to i64
  %250 = sext i32 %.098 to i64
  %251 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @grid, i64 0, i64 %249, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = icmp eq i32 %252, 1
  %254 = select i1 %253, i32 -1834420230, i32 -1716680246
  br label %.backedge

255:                                              ; preds = %27
  %256 = add i32 %.0100, -1
  %257 = sext i32 %256 to i64
  %258 = sext i32 %.098 to i64
  %259 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @grid, i64 0, i64 %257, i64 %258
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 1
  %262 = select i1 %261, i32 -499707488, i32 -615750029
  br label %.backedge

263:                                              ; preds = %27
  %264 = load i32, i32* @x.1, align 4
  %265 = load i32, i32* @y.2, align 4
  %266 = add i32 %264, -1
  %267 = mul i32 %266, %264
  %268 = and i32 %267, 1
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %270, %269
  %272 = select i1 %271, i32 -141619222, i32 -75872756
  br label %.backedge

273:                                              ; preds = %27
  %274 = shl nsw i32 %.0100, 1
  %275 = add i32 %274, -2
  %276 = sext i32 %275 to i64
  %277 = shl nsw i32 %.098, 1
  %278 = add i32 %277, -1
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @grid2, i64 0, i64 %276, i64 %279
  store i32 1, i32* %280, align 4
  %281 = load i32, i32* @x.1, align 4
  %282 = load i32, i32* @y.2, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 125527825, i32 -75872756
  br label %.backedge

290:                                              ; preds = %27
  br label %.backedge

291:                                              ; preds = %27
  %292 = add i32 %.0100, 1
  %293 = sext i32 %292 to i64
  %294 = sext i32 %.098 to i64
  %295 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @grid, i64 0, i64 %293, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = icmp eq i32 %296, 1
  %298 = select i1 %297, i32 -529309999, i32 -40294150
  br label %.backedge

299:                                              ; preds = %27
  %300 = shl nsw i32 %.0100, 1
  %301 = sext i32 %300 to i64
  %302 = shl nsw i32 %.098, 1
  %303 = add i32 %302, -1
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @grid2, i64 0, i64 %301, i64 %304
  store i32 1, i32* %305, align 4
  br label %.backedge

306:                                              ; preds = %27
  %307 = load i32, i32* @x.1, align 4
  %308 = load i32, i32* @y.2, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -1241723718, i32 -2105003440
  br label %.backedge

316:                                              ; preds = %27
  %317 = sext i32 %.0100 to i64
  %318 = add i32 %.098, -1
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @grid, i64 0, i64 %317, i64 %319
  %321 = load i32, i32* %320, align 4
  %322 = icmp eq i32 %321, 1
  store i1 %322, i1* %2, align 1
  %323 = load i32, i32* @x.1, align 4
  %324 = load i32, i32* @y.2, align 4
  %325 = add i32 %323, -1
  %326 = mul i32 %325, %323
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %329, %328
  %331 = select i1 %330, i32 -1338178761, i32 -2105003440
  br label %.backedge

332:                                              ; preds = %27
  %.0..0..0.86 = load volatile i1, i1* %2, align 1
  %333 = select i1 %.0..0..0.86, i32 -166763832, i32 -1582595226
  br label %.backedge

334:                                              ; preds = %27
  %335 = shl nsw i32 %.0100, 1
  %336 = add i32 %335, -1
  %337 = sext i32 %336 to i64
  %338 = shl nsw i32 %.098, 1
  %339 = add i32 %338, -2
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @grid2, i64 0, i64 %337, i64 %340
  store i32 1, i32* %341, align 4
  br label %.backedge

342:                                              ; preds = %27
  %343 = sext i32 %.0100 to i64
  %344 = add i32 %.098, 1
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @grid, i64 0, i64 %343, i64 %345
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %347, 1
  %349 = select i1 %348, i32 2145709690, i32 -730559202
  br label %.backedge

350:                                              ; preds = %27
  %351 = shl nsw i32 %.0100, 1
  %352 = add i32 %351, -1
  %353 = sext i32 %352 to i64
  %354 = shl nsw i32 %.098, 1
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @grid2, i64 0, i64 %353, i64 %355
  store i32 1, i32* %356, align 4
  br label %.backedge

357:                                              ; preds = %27
  br label %.backedge

358:                                              ; preds = %27
  br label %.backedge

359:                                              ; preds = %27
  %360 = load i32, i32* @x.1, align 4
  %361 = load i32, i32* @y.2, align 4
  %362 = add i32 %360, -1
  %363 = mul i32 %362, %360
  %364 = and i32 %363, 1
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %366, %365
  %368 = select i1 %367, i32 -1778404998, i32 275470658
  br label %.backedge

369:                                              ; preds = %27
  %370 = add i32 %.098, 1
  %371 = load i32, i32* @x.1, align 4
  %372 = load i32, i32* @y.2, align 4
  %373 = add i32 %371, -1
  %374 = mul i32 %373, %371
  %375 = and i32 %374, 1
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %377, %376
  %379 = select i1 %378, i32 611853112, i32 275470658
  br label %.backedge

380:                                              ; preds = %27
  br label %.backedge

381:                                              ; preds = %27
  br label %.backedge

382:                                              ; preds = %27
  %383 = add i32 %.0100, 1
  br label %.backedge

384:                                              ; preds = %27
  br label %.backedge

385:                                              ; preds = %27
  %386 = load i32, i32* @x.1, align 4
  %387 = load i32, i32* @y.2, align 4
  %388 = add i32 %386, -1
  %389 = mul i32 %388, %386
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %392, %391
  %394 = select i1 %393, i32 -711485306, i32 -526571222
  br label %.backedge

395:                                              ; preds = %27
  %396 = load i32, i32* @R, align 4
  %397 = shl nsw i32 %396, 1
  %398 = icmp sle i32 %.096, %397
  store i1 %398, i1* %1, align 1
  %399 = load i32, i32* @x.1, align 4
  %400 = load i32, i32* @y.2, align 4
  %401 = add i32 %399, -1
  %402 = mul i32 %401, %399
  %403 = and i32 %402, 1
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %405, %404
  %407 = select i1 %406, i32 -1109407159, i32 -526571222
  br label %.backedge

408:                                              ; preds = %27
  %.0..0..0.87 = load volatile i1, i1* %1, align 1
  %409 = select i1 %.0..0..0.87, i32 -530598950, i32 151826264
  br label %.backedge

410:                                              ; preds = %27
  br label %.backedge

411:                                              ; preds = %27
  %412 = load i32, i32* @C, align 4
  %413 = shl nsw i32 %412, 1
  %.not109 = icmp sgt i32 %.094, %413
  %414 = select i1 %.not109, i32 -242280926, i32 -1161574278
  br label %.backedge

415:                                              ; preds = %27
  %416 = sext i32 %.096 to i64
  %417 = sext i32 %.094 to i64
  %418 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @grid2, i64 0, i64 %416, i64 %417
  %419 = load i32, i32* %418, align 4
  %420 = add i32 %.096, -1
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @edge, i64 0, i64 %421, i64 %417
  %423 = load i32, i32* %422, align 4
  %424 = add i32 %.094, -1
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @edge, i64 0, i64 %416, i64 %425
  %427 = load i32, i32* %426, align 4
  %428 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @edge, i64 0, i64 %421, i64 %425
  %429 = load i32, i32* %428, align 4
  %430 = add i32 %423, %419
  %431 = add i32 %430, %427
  %432 = sub i32 %431, %429
  %433 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @edge, i64 0, i64 %416, i64 %417
  store i32 %432, i32* %433, align 4
  br label %.backedge

434:                                              ; preds = %27
  %435 = load i32, i32* @x.1, align 4
  %436 = load i32, i32* @y.2, align 4
  %437 = add i32 %435, -1
  %438 = mul i32 %437, %435
  %439 = and i32 %438, 1
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %441, %440
  %443 = select i1 %442, i32 1924798996, i32 1955033321
  br label %.backedge

444:                                              ; preds = %27
  %445 = add i32 %.094, 1
  %446 = load i32, i32* @x.1, align 4
  %447 = load i32, i32* @y.2, align 4
  %448 = add i32 %446, -1
  %449 = mul i32 %448, %446
  %450 = and i32 %449, 1
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %452, %451
  %454 = select i1 %453, i32 -1675620832, i32 1955033321
  br label %.backedge

455:                                              ; preds = %27
  br label %.backedge

456:                                              ; preds = %27
  br label %.backedge

457:                                              ; preds = %27
  %458 = load i32, i32* @x.1, align 4
  %459 = load i32, i32* @y.2, align 4
  %460 = add i32 %458, -1
  %461 = mul i32 %460, %458
  %462 = and i32 %461, 1
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %464, %463
  %466 = select i1 %465, i32 -1130903803, i32 745463791
  br label %.backedge

467:                                              ; preds = %27
  %.neg108 = add i32 %.096, 1
  %468 = load i32, i32* @x.1, align 4
  %469 = load i32, i32* @y.2, align 4
  %470 = add i32 %468, -1
  %471 = mul i32 %470, %468
  %472 = and i32 %471, 1
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %474, %473
  %476 = select i1 %475, i32 -322026472, i32 745463791
  br label %.backedge

477:                                              ; preds = %27
  br label %.backedge

478:                                              ; preds = %27
  br label %.backedge

479:                                              ; preds = %27
  %480 = load i32, i32* @Q, align 4
  %.not = icmp sgt i32 %.092, %480
  %481 = select i1 %.not, i32 413828644, i32 2105895802
  br label %.backedge

482:                                              ; preds = %27
  %483 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %484 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %483, i32* nonnull dereferenceable(4) %6)
  %485 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %484, i32* nonnull dereferenceable(4) %7)
  %486 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %485, i32* nonnull dereferenceable(4) %8)
  %487 = load i32, i32* %7, align 4
  %488 = sext i32 %487 to i64
  %489 = load i32, i32* %8, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %488, i64 %490
  %492 = load i32, i32* %491, align 4
  %493 = load i32, i32* %6, align 4
  %494 = add i32 %493, -1
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %488, i64 %495
  %497 = load i32, i32* %496, align 4
  %498 = load i32, i32* %5, align 4
  %499 = add i32 %498, -1
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %500, i64 %490
  %502 = load i32, i32* %501, align 4
  %503 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %500, i64 %495
  %504 = load i32, i32* %503, align 4
  %505 = shl nsw i32 %487, 1
  %506 = add i32 %505, -1
  %507 = sext i32 %506 to i64
  %508 = shl nsw i32 %489, 1
  %509 = add i32 %508, -1
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @edge, i64 0, i64 %507, i64 %510
  %512 = load i32, i32* %511, align 8
  %513 = shl nsw i32 %498, 1
  %514 = add i32 %513, -2
  %515 = sext i32 %514 to i64
  %516 = shl nsw i32 %493, 1
  %517 = add i32 %516, -2
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @edge, i64 0, i64 %515, i64 %518
  %520 = load i32, i32* %519, align 8
  %521 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @edge, i64 0, i64 %507, i64 %518
  %522 = load i32, i32* %521, align 4
  %523 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @edge, i64 0, i64 %515, i64 %510
  %524 = load i32, i32* %523, align 4
  %525 = add i32 %497, %502
  %526 = add i32 %492, %504
  %527 = add i32 %525, %512
  %528 = add i32 %527, %520
  %529 = sub i32 %526, %528
  %530 = add i32 %529, %522
  %531 = add i32 %530, %524
  %532 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %531)
  %533 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %532, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

534:                                              ; preds = %27
  %535 = load i32, i32* @x.1, align 4
  %536 = load i32, i32* @y.2, align 4
  %537 = add i32 %535, -1
  %538 = mul i32 %537, %535
  %539 = and i32 %538, 1
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %541, %540
  %543 = select i1 %542, i32 -693108063, i32 -591269616
  br label %.backedge

544:                                              ; preds = %27
  %.neg106 = add i32 %.092, 1
  %545 = load i32, i32* @x.1, align 4
  %546 = load i32, i32* @y.2, align 4
  %547 = add i32 %545, -1
  %548 = mul i32 %547, %545
  %549 = and i32 %548, 1
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %546, 10
  %552 = or i1 %551, %550
  %553 = select i1 %552, i32 -1110562029, i32 -591269616
  br label %.backedge

554:                                              ; preds = %27
  br label %.backedge

555:                                              ; preds = %27
  ret i32 0

556:                                              ; preds = %27
  br label %.backedge

557:                                              ; preds = %27
  %558 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %4)
  %559 = load i8, i8* %4, align 1
  %560 = sext i8 %559 to i32
  %561 = add nsw i32 %560, -48
  %562 = sext i32 %.088 to i64
  %563 = sext i32 %.090 to i64
  %564 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @grid, i64 0, i64 %562, i64 %563
  store i32 %561, i32* %564, align 4
  br label %.backedge

565:                                              ; preds = %27
  br label %.backedge

566:                                              ; preds = %27
  %567 = add i32 %.088, 1
  br label %.backedge

568:                                              ; preds = %27
  %569 = sext i32 %.0104 to i64
  %570 = sext i32 %.0102 to i64
  %571 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @grid, i64 0, i64 %569, i64 %570
  %572 = load i32, i32* %571, align 4
  %573 = add i32 %.0104, -1
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %574, i64 %570
  %576 = load i32, i32* %575, align 4
  %577 = add i32 %.0102, -1
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %569, i64 %578
  %580 = load i32, i32* %579, align 4
  %581 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %574, i64 %578
  %582 = load i32, i32* %581, align 4
  %583 = add i32 %576, %572
  %584 = add i32 %583, %580
  %585 = sub i32 %584, %582
  %586 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @node, i64 0, i64 %569, i64 %570
  store i32 %585, i32* %586, align 4
  br label %.backedge

587:                                              ; preds = %27
  %588 = add i32 %.0102, 1
  br label %.backedge

589:                                              ; preds = %27
  br label %.backedge

590:                                              ; preds = %27
  br label %.backedge

591:                                              ; preds = %27
  %592 = shl nsw i32 %.0100, 1
  %593 = add i32 %592, -2
  %594 = sext i32 %593 to i64
  %595 = shl nsw i32 %.098, 1
  %596 = add i32 %595, -1
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @grid2, i64 0, i64 %594, i64 %597
  store i32 1, i32* %598, align 4
  br label %.backedge

599:                                              ; preds = %27
  br label %.backedge

600:                                              ; preds = %27
  %601 = add i32 %.098, 1
  br label %.backedge

602:                                              ; preds = %27
  br label %.backedge

603:                                              ; preds = %27
  %604 = add i32 %.094, 1
  br label %.backedge

605:                                              ; preds = %27
  %.neg = add i32 %.096, 1
  br label %.backedge

606:                                              ; preds = %27
  %607 = add i32 %.092, 1
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s403961786.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -628966608, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -628966608, label %11
    i32 -1361012670, label %14
    i32 -1026346739, label %24
    i32 1991396046, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1361012670, i32 1991396046
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1026346739, i32 1991396046
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1361012670, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
