; ModuleID = 'build_ollvm/programs/p03707/s065773761.ll'
source_filename = "Project_CodeNet_C++1400/p03707/s065773761.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@tot = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@h = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@v = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s065773761.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 206800957, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 206800957, label %11
    i32 1317344250, label %14
    i32 922836833, label %25
    i32 191761480, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1317344250, i32 191761480
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 922836833, i32 191761480
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1317344250, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [2005 x [2005 x i8]], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ 1, %0 ], [ %.079.be, %.backedge ]
  %.0 = phi i32 [ -1568803991, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1568803991, label %16
    i32 2010876414, label %19
    i32 -1016187261, label %23
    i32 -1100766433, label %26
    i32 1827660156, label %36
    i32 177033281, label %51
    i32 574862645, label %53
    i32 -73281157, label %58
    i32 -464488457, label %59
    i32 1545892365, label %69
    i32 555215219, label %80
    i32 314031705, label %81
    i32 776636307, label %82
    i32 598103069, label %84
    i32 482152771, label %94
    i32 -288831292, label %104
    i32 -2093306447, label %105
    i32 -174087165, label %108
    i32 -1358325456, label %118
    i32 -1159159553, label %128
    i32 -365413451, label %129
    i32 1523710542, label %132
    i32 1887642491, label %139
    i32 2058976478, label %149
    i32 1752303310, label %165
    i32 1186250930, label %167
    i32 -732432314, label %172
    i32 -1586511313, label %182
    i32 1118702469, label %192
    i32 -1422047276, label %193
    i32 1201368332, label %203
    i32 -651603723, label %213
    i32 -916704004, label %214
    i32 -1105575245, label %224
    i32 412748168, label %234
    i32 -1094715618, label %235
    i32 675223817, label %236
    i32 185847258, label %237
    i32 293675403, label %240
    i32 1729444768, label %241
    i32 -1498123923, label %244
    i32 -382450002, label %254
    i32 -1614343031, label %269
    i32 -1346026339, label %271
    i32 -694700387, label %281
    i32 2117980711, label %297
    i32 1962154951, label %299
    i32 1954455445, label %309
    i32 1245365549, label %323
    i32 -288401932, label %324
    i32 2008426899, label %325
    i32 -1482032536, label %327
    i32 -1446431140, label %337
    i32 -182738137, label %347
    i32 -1690147369, label %348
    i32 1242797433, label %350
    i32 1413619550, label %360
    i32 60763111, label %370
    i32 -978815441, label %371
    i32 2048463073, label %381
    i32 -1381617378, label %393
    i32 1214625494, label %395
    i32 2041212945, label %396
    i32 1436172519, label %399
    i32 992057559, label %438
    i32 210076682, label %440
    i32 944135189, label %441
    i32 1445707889, label %442
    i32 -136556412, label %452
    i32 -2108903453, label %462
    i32 -440744697, label %463
    i32 -1215412206, label %466
    i32 1105048630, label %519
    i32 -760092526, label %520
    i32 951386939, label %521
    i32 865806098, label %523
    i32 7280137, label %524
    i32 -2080219471, label %525
    i32 -2079413731, label %526
    i32 -216432237, label %527
    i32 -155425804, label %529
    i32 -563730261, label %530
    i32 461288533, label %531
    i32 -1005563287, label %532
    i32 -1748999454, label %538
    i32 1634340265, label %539
    i32 756854849, label %540
    i32 -564472708, label %541
  ]

.backedge:                                        ; preds = %15, %541, %540, %539, %538, %532, %531, %530, %529, %527, %526, %525, %524, %523, %521, %520, %466, %463, %462, %452, %442, %441, %440, %438, %399, %396, %395, %393, %381, %371, %370, %360, %350, %348, %347, %337, %327, %325, %324, %323, %309, %299, %297, %281, %271, %269, %254, %244, %241, %240, %237, %236, %235, %234, %224, %214, %213, %203, %193, %192, %182, %172, %167, %165, %149, %139, %132, %129, %128, %118, %108, %105, %104, %94, %84, %82, %81, %80, %69, %59, %58, %53, %51, %36, %26, %23, %19, %16
  %.093.be = phi i32 [ %.093, %15 ], [ %.093, %541 ], [ %.093, %540 ], [ %.093, %539 ], [ %.093, %538 ], [ %.093, %532 ], [ %.093, %531 ], [ %.093, %530 ], [ %.093, %529 ], [ %.093, %527 ], [ %.093, %526 ], [ %.093, %525 ], [ %.093, %524 ], [ %.093, %523 ], [ %522, %521 ], [ %.093, %520 ], [ %.093, %466 ], [ %.093, %463 ], [ %.093, %462 ], [ %.093, %452 ], [ %.093, %442 ], [ %.093, %441 ], [ %.093, %440 ], [ %.093, %438 ], [ %.093, %399 ], [ %.093, %396 ], [ %.093, %395 ], [ %.093, %393 ], [ %.093, %381 ], [ %.093, %371 ], [ %.093, %370 ], [ %.093, %360 ], [ %.093, %350 ], [ %.093, %348 ], [ %.093, %347 ], [ %.093, %337 ], [ %.093, %327 ], [ %.093, %325 ], [ %.093, %324 ], [ %.093, %323 ], [ %.093, %309 ], [ %.093, %299 ], [ %.093, %297 ], [ %.093, %281 ], [ %.093, %271 ], [ %.093, %269 ], [ %.093, %254 ], [ %.093, %244 ], [ %.093, %241 ], [ %.093, %240 ], [ %.093, %237 ], [ %.093, %236 ], [ %.093, %235 ], [ %.093, %234 ], [ %.093, %224 ], [ %.093, %214 ], [ %.093, %213 ], [ %.093, %203 ], [ %.093, %193 ], [ %.093, %192 ], [ %.093, %182 ], [ %.093, %172 ], [ %.093, %167 ], [ %.093, %165 ], [ %.093, %149 ], [ %.093, %139 ], [ %.093, %132 ], [ %.093, %129 ], [ %.093, %128 ], [ %.093, %118 ], [ %.093, %108 ], [ %.093, %105 ], [ %.093, %104 ], [ %.093, %94 ], [ %.093, %84 ], [ %.093, %82 ], [ %.093, %81 ], [ %.093, %80 ], [ %70, %69 ], [ %.093, %59 ], [ %.093, %58 ], [ %.093, %53 ], [ %.093, %51 ], [ %.093, %36 ], [ %.093, %26 ], [ %.093, %23 ], [ 1, %19 ], [ %.093, %16 ]
  %.091.be = phi i32 [ %.091, %15 ], [ %.091, %541 ], [ %.091, %540 ], [ %.091, %539 ], [ %.091, %538 ], [ %.091, %532 ], [ %.091, %531 ], [ %.091, %530 ], [ %.091, %529 ], [ %.091, %527 ], [ %.091, %526 ], [ %.091, %525 ], [ %.091, %524 ], [ 2, %523 ], [ %.091, %521 ], [ %.091, %520 ], [ %.091, %466 ], [ %.091, %463 ], [ %.091, %462 ], [ %.091, %452 ], [ %.091, %442 ], [ %.091, %441 ], [ %.091, %440 ], [ %.091, %438 ], [ %.091, %399 ], [ %.091, %396 ], [ %.091, %395 ], [ %.091, %393 ], [ %.091, %381 ], [ %.091, %371 ], [ %.091, %370 ], [ %.091, %360 ], [ %.091, %350 ], [ %.091, %348 ], [ %.091, %347 ], [ %.091, %337 ], [ %.091, %327 ], [ %.091, %325 ], [ %.091, %324 ], [ %.091, %323 ], [ %.091, %309 ], [ %.091, %299 ], [ %.091, %297 ], [ %.091, %281 ], [ %.091, %271 ], [ %.091, %269 ], [ %.091, %254 ], [ %.091, %244 ], [ %.091, %241 ], [ %.091, %240 ], [ %.091, %237 ], [ %.091, %236 ], [ %.neg101, %235 ], [ %.091, %234 ], [ %.091, %224 ], [ %.091, %214 ], [ %.091, %213 ], [ %.091, %203 ], [ %.091, %193 ], [ %.091, %192 ], [ %.091, %182 ], [ %.091, %172 ], [ %.091, %167 ], [ %.091, %165 ], [ %.091, %149 ], [ %.091, %139 ], [ %.091, %132 ], [ %.091, %129 ], [ %.091, %128 ], [ %.091, %118 ], [ %.091, %108 ], [ %.091, %105 ], [ %.091, %104 ], [ 2, %94 ], [ %.091, %84 ], [ %.091, %82 ], [ %.091, %81 ], [ %.091, %80 ], [ %.091, %69 ], [ %.091, %59 ], [ %.091, %58 ], [ %.091, %53 ], [ %.091, %51 ], [ %.091, %36 ], [ %.091, %26 ], [ %.091, %23 ], [ %.091, %19 ], [ %.091, %16 ]
  %.089.be = phi i32 [ %.089, %15 ], [ %.089, %541 ], [ %.089, %540 ], [ %.089, %539 ], [ %.089, %538 ], [ %.089, %532 ], [ %.089, %531 ], [ %.089, %530 ], [ %.089, %529 ], [ %528, %527 ], [ %.089, %526 ], [ %.089, %525 ], [ 1, %524 ], [ %.089, %523 ], [ %.089, %521 ], [ %.089, %520 ], [ %.089, %466 ], [ %.089, %463 ], [ %.089, %462 ], [ %.089, %452 ], [ %.089, %442 ], [ %.089, %441 ], [ %.089, %440 ], [ %.089, %438 ], [ %.089, %399 ], [ %.089, %396 ], [ %.089, %395 ], [ %.089, %393 ], [ %.089, %381 ], [ %.089, %371 ], [ %.089, %370 ], [ %.089, %360 ], [ %.089, %350 ], [ %.089, %348 ], [ %.089, %347 ], [ %.089, %337 ], [ %.089, %327 ], [ %.089, %325 ], [ %.089, %324 ], [ %.089, %323 ], [ %.089, %309 ], [ %.089, %299 ], [ %.089, %297 ], [ %.089, %281 ], [ %.089, %271 ], [ %.089, %269 ], [ %.089, %254 ], [ %.089, %244 ], [ %.089, %241 ], [ %.089, %240 ], [ %.089, %237 ], [ %.089, %236 ], [ %.089, %235 ], [ %.089, %234 ], [ %.089, %224 ], [ %.089, %214 ], [ %.089, %213 ], [ %.neg102, %203 ], [ %.089, %193 ], [ %.089, %192 ], [ %.089, %182 ], [ %.089, %172 ], [ %.089, %167 ], [ %.089, %165 ], [ %.089, %149 ], [ %.089, %139 ], [ %.089, %132 ], [ %.089, %129 ], [ %.089, %128 ], [ 1, %118 ], [ %.089, %108 ], [ %.089, %105 ], [ %.089, %104 ], [ %.089, %94 ], [ %.089, %84 ], [ %.089, %82 ], [ %.089, %81 ], [ %.089, %80 ], [ %.089, %69 ], [ %.089, %59 ], [ %.089, %58 ], [ %.089, %53 ], [ %.089, %51 ], [ %.089, %36 ], [ %.089, %26 ], [ %.089, %23 ], [ %.089, %19 ], [ %.089, %16 ]
  %.087.be = phi i32 [ %.087, %15 ], [ %.087, %541 ], [ %.087, %540 ], [ %.087, %539 ], [ %.087, %538 ], [ %.087, %532 ], [ %.087, %531 ], [ %.087, %530 ], [ %.087, %529 ], [ %.087, %527 ], [ %.087, %526 ], [ %.087, %525 ], [ %.087, %524 ], [ %.087, %523 ], [ %.087, %521 ], [ %.087, %520 ], [ %.087, %466 ], [ %.087, %463 ], [ %.087, %462 ], [ %.087, %452 ], [ %.087, %442 ], [ %.087, %441 ], [ %.087, %440 ], [ %.087, %438 ], [ %.087, %399 ], [ %.087, %396 ], [ %.087, %395 ], [ %.087, %393 ], [ %.087, %381 ], [ %.087, %371 ], [ %.087, %370 ], [ %.087, %360 ], [ %.087, %350 ], [ %349, %348 ], [ %.087, %347 ], [ %.087, %337 ], [ %.087, %327 ], [ %.087, %325 ], [ %.087, %324 ], [ %.087, %323 ], [ %.087, %309 ], [ %.087, %299 ], [ %.087, %297 ], [ %.087, %281 ], [ %.087, %271 ], [ %.087, %269 ], [ %.087, %254 ], [ %.087, %244 ], [ %.087, %241 ], [ %.087, %240 ], [ %.087, %237 ], [ 1, %236 ], [ %.087, %235 ], [ %.087, %234 ], [ %.087, %224 ], [ %.087, %214 ], [ %.087, %213 ], [ %.087, %203 ], [ %.087, %193 ], [ %.087, %192 ], [ %.087, %182 ], [ %.087, %172 ], [ %.087, %167 ], [ %.087, %165 ], [ %.087, %149 ], [ %.087, %139 ], [ %.087, %132 ], [ %.087, %129 ], [ %.087, %128 ], [ %.087, %118 ], [ %.087, %108 ], [ %.087, %105 ], [ %.087, %104 ], [ %.087, %94 ], [ %.087, %84 ], [ %.087, %82 ], [ %.087, %81 ], [ %.087, %80 ], [ %.087, %69 ], [ %.087, %59 ], [ %.087, %58 ], [ %.087, %53 ], [ %.087, %51 ], [ %.087, %36 ], [ %.087, %26 ], [ %.087, %23 ], [ %.087, %19 ], [ %.087, %16 ]
  %.085.be = phi i32 [ %.085, %15 ], [ %.085, %541 ], [ %.085, %540 ], [ %.085, %539 ], [ %.085, %538 ], [ %.085, %532 ], [ %.085, %531 ], [ %.085, %530 ], [ %.085, %529 ], [ %.085, %527 ], [ %.085, %526 ], [ %.085, %525 ], [ %.085, %524 ], [ %.085, %523 ], [ %.085, %521 ], [ %.085, %520 ], [ %.085, %466 ], [ %.085, %463 ], [ %.085, %462 ], [ %.085, %452 ], [ %.085, %442 ], [ %.085, %441 ], [ %.085, %440 ], [ %.085, %438 ], [ %.085, %399 ], [ %.085, %396 ], [ %.085, %395 ], [ %.085, %393 ], [ %.085, %381 ], [ %.085, %371 ], [ %.085, %370 ], [ %.085, %360 ], [ %.085, %350 ], [ %.085, %348 ], [ %.085, %347 ], [ %.085, %337 ], [ %.085, %327 ], [ %326, %325 ], [ %.085, %324 ], [ %.085, %323 ], [ %.085, %309 ], [ %.085, %299 ], [ %.085, %297 ], [ %.085, %281 ], [ %.085, %271 ], [ %.085, %269 ], [ %.085, %254 ], [ %.085, %244 ], [ %.085, %241 ], [ 2, %240 ], [ %.085, %237 ], [ %.085, %236 ], [ %.085, %235 ], [ %.085, %234 ], [ %.085, %224 ], [ %.085, %214 ], [ %.085, %213 ], [ %.085, %203 ], [ %.085, %193 ], [ %.085, %192 ], [ %.085, %182 ], [ %.085, %172 ], [ %.085, %167 ], [ %.085, %165 ], [ %.085, %149 ], [ %.085, %139 ], [ %.085, %132 ], [ %.085, %129 ], [ %.085, %128 ], [ %.085, %118 ], [ %.085, %108 ], [ %.085, %105 ], [ %.085, %104 ], [ %.085, %94 ], [ %.085, %84 ], [ %.085, %82 ], [ %.085, %81 ], [ %.085, %80 ], [ %.085, %69 ], [ %.085, %59 ], [ %.085, %58 ], [ %.085, %53 ], [ %.085, %51 ], [ %.085, %36 ], [ %.085, %26 ], [ %.085, %23 ], [ %.085, %19 ], [ %.085, %16 ]
  %.083.be = phi i32 [ %.083, %15 ], [ %.083, %541 ], [ %.083, %540 ], [ 1, %539 ], [ %.083, %538 ], [ %.083, %532 ], [ %.083, %531 ], [ %.083, %530 ], [ %.083, %529 ], [ %.083, %527 ], [ %.083, %526 ], [ %.083, %525 ], [ %.083, %524 ], [ %.083, %523 ], [ %.083, %521 ], [ %.083, %520 ], [ %.083, %466 ], [ %.083, %463 ], [ %.083, %462 ], [ %.083, %452 ], [ %.083, %442 ], [ %.neg95, %441 ], [ %.083, %440 ], [ %.083, %438 ], [ %.083, %399 ], [ %.083, %396 ], [ %.083, %395 ], [ %.083, %393 ], [ %.083, %381 ], [ %.083, %371 ], [ %.083, %370 ], [ 1, %360 ], [ %.083, %350 ], [ %.083, %348 ], [ %.083, %347 ], [ %.083, %337 ], [ %.083, %327 ], [ %.083, %325 ], [ %.083, %324 ], [ %.083, %323 ], [ %.083, %309 ], [ %.083, %299 ], [ %.083, %297 ], [ %.083, %281 ], [ %.083, %271 ], [ %.083, %269 ], [ %.083, %254 ], [ %.083, %244 ], [ %.083, %241 ], [ %.083, %240 ], [ %.083, %237 ], [ %.083, %236 ], [ %.083, %235 ], [ %.083, %234 ], [ %.083, %224 ], [ %.083, %214 ], [ %.083, %213 ], [ %.083, %203 ], [ %.083, %193 ], [ %.083, %192 ], [ %.083, %182 ], [ %.083, %172 ], [ %.083, %167 ], [ %.083, %165 ], [ %.083, %149 ], [ %.083, %139 ], [ %.083, %132 ], [ %.083, %129 ], [ %.083, %128 ], [ %.083, %118 ], [ %.083, %108 ], [ %.083, %105 ], [ %.083, %104 ], [ %.083, %94 ], [ %.083, %84 ], [ %.083, %82 ], [ %.083, %81 ], [ %.083, %80 ], [ %.083, %69 ], [ %.083, %59 ], [ %.083, %58 ], [ %.083, %53 ], [ %.083, %51 ], [ %.083, %36 ], [ %.083, %26 ], [ %.083, %23 ], [ %.083, %19 ], [ %.083, %16 ]
  %.081.be = phi i32 [ %.081, %15 ], [ %.081, %541 ], [ %.081, %540 ], [ %.081, %539 ], [ %.081, %538 ], [ %.081, %532 ], [ %.081, %531 ], [ %.081, %530 ], [ %.081, %529 ], [ %.081, %527 ], [ %.081, %526 ], [ %.081, %525 ], [ %.081, %524 ], [ %.081, %523 ], [ %.081, %521 ], [ %.081, %520 ], [ %.081, %466 ], [ %.081, %463 ], [ %.081, %462 ], [ %.081, %452 ], [ %.081, %442 ], [ %.081, %441 ], [ %.081, %440 ], [ %439, %438 ], [ %.081, %399 ], [ %.081, %396 ], [ 1, %395 ], [ %.081, %393 ], [ %.081, %381 ], [ %.081, %371 ], [ %.081, %370 ], [ %.081, %360 ], [ %.081, %350 ], [ %.081, %348 ], [ %.081, %347 ], [ %.081, %337 ], [ %.081, %327 ], [ %.081, %325 ], [ %.081, %324 ], [ %.081, %323 ], [ %.081, %309 ], [ %.081, %299 ], [ %.081, %297 ], [ %.081, %281 ], [ %.081, %271 ], [ %.081, %269 ], [ %.081, %254 ], [ %.081, %244 ], [ %.081, %241 ], [ %.081, %240 ], [ %.081, %237 ], [ %.081, %236 ], [ %.081, %235 ], [ %.081, %234 ], [ %.081, %224 ], [ %.081, %214 ], [ %.081, %213 ], [ %.081, %203 ], [ %.081, %193 ], [ %.081, %192 ], [ %.081, %182 ], [ %.081, %172 ], [ %.081, %167 ], [ %.081, %165 ], [ %.081, %149 ], [ %.081, %139 ], [ %.081, %132 ], [ %.081, %129 ], [ %.081, %128 ], [ %.081, %118 ], [ %.081, %108 ], [ %.081, %105 ], [ %.081, %104 ], [ %.081, %94 ], [ %.081, %84 ], [ %.081, %82 ], [ %.081, %81 ], [ %.081, %80 ], [ %.081, %69 ], [ %.081, %59 ], [ %.081, %58 ], [ %.081, %53 ], [ %.081, %51 ], [ %.081, %36 ], [ %.081, %26 ], [ %.081, %23 ], [ %.081, %19 ], [ %.081, %16 ]
  %.079.be = phi i32 [ %.079, %15 ], [ %.079, %541 ], [ %.079, %540 ], [ %.079, %539 ], [ %.079, %538 ], [ %.079, %532 ], [ %.079, %531 ], [ %.079, %530 ], [ %.079, %529 ], [ %.079, %527 ], [ %.079, %526 ], [ %.079, %525 ], [ %.079, %524 ], [ %.079, %523 ], [ %.079, %521 ], [ %.079, %520 ], [ %.079, %466 ], [ %.079, %463 ], [ %.079, %462 ], [ %.079, %452 ], [ %.079, %442 ], [ %.079, %441 ], [ %.079, %440 ], [ %.079, %438 ], [ %.079, %399 ], [ %.079, %396 ], [ %.079, %395 ], [ %.079, %393 ], [ %.079, %381 ], [ %.079, %371 ], [ %.079, %370 ], [ %.079, %360 ], [ %.079, %350 ], [ %.079, %348 ], [ %.079, %347 ], [ %.079, %337 ], [ %.079, %327 ], [ %.079, %325 ], [ %.079, %324 ], [ %.079, %323 ], [ %.079, %309 ], [ %.079, %299 ], [ %.079, %297 ], [ %.079, %281 ], [ %.079, %271 ], [ %.079, %269 ], [ %.079, %254 ], [ %.079, %244 ], [ %.079, %241 ], [ %.079, %240 ], [ %.079, %237 ], [ %.079, %236 ], [ %.079, %235 ], [ %.079, %234 ], [ %.079, %224 ], [ %.079, %214 ], [ %.079, %213 ], [ %.079, %203 ], [ %.079, %193 ], [ %.079, %192 ], [ %.079, %182 ], [ %.079, %172 ], [ %.079, %167 ], [ %.079, %165 ], [ %.079, %149 ], [ %.079, %139 ], [ %.079, %132 ], [ %.079, %129 ], [ %.079, %128 ], [ %.079, %118 ], [ %.079, %108 ], [ %.079, %105 ], [ %.079, %104 ], [ %.079, %94 ], [ %.079, %84 ], [ %83, %82 ], [ %.079, %81 ], [ %.079, %80 ], [ %.079, %69 ], [ %.079, %59 ], [ %.079, %58 ], [ %.079, %53 ], [ %.079, %51 ], [ %.079, %36 ], [ %.079, %26 ], [ %.079, %23 ], [ %.079, %19 ], [ %.079, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ -136556412, %541 ], [ 2048463073, %540 ], [ 1413619550, %539 ], [ -1446431140, %538 ], [ 1954455445, %532 ], [ -694700387, %531 ], [ -382450002, %530 ], [ -1105575245, %529 ], [ 1201368332, %527 ], [ -1586511313, %526 ], [ 2058976478, %525 ], [ -1358325456, %524 ], [ 482152771, %523 ], [ 1545892365, %521 ], [ 1827660156, %520 ], [ -440744697, %466 ], [ %465, %463 ], [ -440744697, %462 ], [ %461, %452 ], [ %451, %442 ], [ -978815441, %441 ], [ 944135189, %440 ], [ 2041212945, %438 ], [ 992057559, %399 ], [ %398, %396 ], [ 2041212945, %395 ], [ %394, %393 ], [ %392, %381 ], [ %380, %371 ], [ -978815441, %370 ], [ %369, %360 ], [ %359, %350 ], [ 185847258, %348 ], [ -1690147369, %347 ], [ %346, %337 ], [ %336, %327 ], [ 1729444768, %325 ], [ 2008426899, %324 ], [ -288401932, %323 ], [ %322, %309 ], [ %308, %299 ], [ %298, %297 ], [ %296, %281 ], [ %280, %271 ], [ %270, %269 ], [ %268, %254 ], [ %253, %244 ], [ %243, %241 ], [ 1729444768, %240 ], [ %239, %237 ], [ 185847258, %236 ], [ -2093306447, %235 ], [ -1094715618, %234 ], [ %233, %224 ], [ %223, %214 ], [ -365413451, %213 ], [ %212, %203 ], [ %202, %193 ], [ -1422047276, %192 ], [ %191, %182 ], [ %181, %172 ], [ -732432314, %167 ], [ %166, %165 ], [ %164, %149 ], [ %148, %139 ], [ %138, %132 ], [ %131, %129 ], [ -365413451, %128 ], [ %127, %118 ], [ %117, %108 ], [ %107, %105 ], [ -2093306447, %104 ], [ %103, %94 ], [ %93, %84 ], [ -1568803991, %82 ], [ 776636307, %81 ], [ -1016187261, %80 ], [ %79, %69 ], [ %68, %59 ], [ -464488457, %58 ], [ -73281157, %53 ], [ %52, %51 ], [ %50, %36 ], [ %35, %26 ], [ %25, %23 ], [ -1016187261, %19 ], [ %18, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* %6, align 4
  %.not108 = icmp sgt i32 %.079, %17
  %18 = select i1 %.not108, i32 598103069, i32 2010876414
  br label %.backedge

19:                                               ; preds = %15
  %20 = sext i32 %.079 to i64
  %21 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* %9, i64 0, i64 %20, i64 1
  %22 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %21)
  br label %.backedge

23:                                               ; preds = %15
  %24 = load i32, i32* %7, align 4
  %.not107 = icmp sgt i32 %.093, %24
  %25 = select i1 %.not107, i32 314031705, i32 -1100766433
  br label %.backedge

26:                                               ; preds = %15
  %27 = load i32, i32* @x.4, align 4
  %28 = load i32, i32* @y.5, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 1827660156, i32 -760092526
  br label %.backedge

36:                                               ; preds = %15
  %37 = sext i32 %.079 to i64
  %38 = sext i32 %.093 to i64
  %39 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* %9, i64 0, i64 %37, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 49
  store i1 %41, i1* %5, align 1
  %42 = load i32, i32* @x.4, align 4
  %43 = load i32, i32* @y.5, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 177033281, i32 -760092526
  br label %.backedge

51:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %52 = select i1 %.0..0..0., i32 574862645, i32 -73281157
  br label %.backedge

53:                                               ; preds = %15
  %54 = sext i32 %.079 to i64
  %55 = sext i32 %.093 to i64
  %56 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @tot, i64 0, i64 %54, i64 %55
  %57 = load i32, i32* %56, align 4
  %.neg106 = add i32 %57, 1
  store i32 %.neg106, i32* %56, align 4
  br label %.backedge

58:                                               ; preds = %15
  br label %.backedge

59:                                               ; preds = %15
  %60 = load i32, i32* @x.4, align 4
  %61 = load i32, i32* @y.5, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 1545892365, i32 951386939
  br label %.backedge

69:                                               ; preds = %15
  %70 = add i32 %.093, 1
  %71 = load i32, i32* @x.4, align 4
  %72 = load i32, i32* @y.5, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 555215219, i32 951386939
  br label %.backedge

80:                                               ; preds = %15
  br label %.backedge

81:                                               ; preds = %15
  br label %.backedge

82:                                               ; preds = %15
  %83 = add i32 %.079, 1
  br label %.backedge

84:                                               ; preds = %15
  %85 = load i32, i32* @x.4, align 4
  %86 = load i32, i32* @y.5, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 482152771, i32 865806098
  br label %.backedge

94:                                               ; preds = %15
  %95 = load i32, i32* @x.4, align 4
  %96 = load i32, i32* @y.5, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -288831292, i32 865806098
  br label %.backedge

104:                                              ; preds = %15
  br label %.backedge

105:                                              ; preds = %15
  %106 = load i32, i32* %6, align 4
  %.not105 = icmp sgt i32 %.091, %106
  %107 = select i1 %.not105, i32 675223817, i32 -174087165
  br label %.backedge

108:                                              ; preds = %15
  %109 = load i32, i32* @x.4, align 4
  %110 = load i32, i32* @y.5, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 -1358325456, i32 7280137
  br label %.backedge

118:                                              ; preds = %15
  %119 = load i32, i32* @x.4, align 4
  %120 = load i32, i32* @y.5, align 4
  %121 = add i32 %119, -1
  %122 = mul i32 %121, %119
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %125, %124
  %127 = select i1 %126, i32 -1159159553, i32 7280137
  br label %.backedge

128:                                              ; preds = %15
  br label %.backedge

129:                                              ; preds = %15
  %130 = load i32, i32* %7, align 4
  %.not104 = icmp sgt i32 %.089, %130
  %131 = select i1 %.not104, i32 -916704004, i32 1523710542
  br label %.backedge

132:                                              ; preds = %15
  %133 = sext i32 %.091 to i64
  %134 = sext i32 %.089 to i64
  %135 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* %9, i64 0, i64 %133, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 49
  %138 = select i1 %137, i32 1887642491, i32 -732432314
  br label %.backedge

139:                                              ; preds = %15
  %140 = load i32, i32* @x.4, align 4
  %141 = load i32, i32* @y.5, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 2058976478, i32 -2080219471
  br label %.backedge

149:                                              ; preds = %15
  %150 = add i32 %.091, -1
  %151 = sext i32 %150 to i64
  %152 = sext i32 %.089 to i64
  %153 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* %9, i64 0, i64 %151, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 49
  store i1 %155, i1* %4, align 1
  %156 = load i32, i32* @x.4, align 4
  %157 = load i32, i32* @y.5, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 1752303310, i32 -2080219471
  br label %.backedge

165:                                              ; preds = %15
  %.0..0..0.75 = load volatile i1, i1* %4, align 1
  %166 = select i1 %.0..0..0.75, i32 1186250930, i32 -732432314
  br label %.backedge

167:                                              ; preds = %15
  %168 = sext i32 %.091 to i64
  %169 = sext i32 %.089 to i64
  %170 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @h, i64 0, i64 %168, i64 %169
  %171 = load i32, i32* %170, align 4
  %.neg103 = add i32 %171, 1
  store i32 %.neg103, i32* %170, align 4
  br label %.backedge

172:                                              ; preds = %15
  %173 = load i32, i32* @x.4, align 4
  %174 = load i32, i32* @y.5, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 -1586511313, i32 -2079413731
  br label %.backedge

182:                                              ; preds = %15
  %183 = load i32, i32* @x.4, align 4
  %184 = load i32, i32* @y.5, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 1118702469, i32 -2079413731
  br label %.backedge

192:                                              ; preds = %15
  br label %.backedge

193:                                              ; preds = %15
  %194 = load i32, i32* @x.4, align 4
  %195 = load i32, i32* @y.5, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 1201368332, i32 -216432237
  br label %.backedge

203:                                              ; preds = %15
  %.neg102 = add i32 %.089, 1
  %204 = load i32, i32* @x.4, align 4
  %205 = load i32, i32* @y.5, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 -651603723, i32 -216432237
  br label %.backedge

213:                                              ; preds = %15
  br label %.backedge

214:                                              ; preds = %15
  %215 = load i32, i32* @x.4, align 4
  %216 = load i32, i32* @y.5, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 -1105575245, i32 -155425804
  br label %.backedge

224:                                              ; preds = %15
  %225 = load i32, i32* @x.4, align 4
  %226 = load i32, i32* @y.5, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 412748168, i32 -155425804
  br label %.backedge

234:                                              ; preds = %15
  br label %.backedge

235:                                              ; preds = %15
  %.neg101 = add i32 %.091, 1
  br label %.backedge

236:                                              ; preds = %15
  br label %.backedge

237:                                              ; preds = %15
  %238 = load i32, i32* %6, align 4
  %.not100 = icmp sgt i32 %.087, %238
  %239 = select i1 %.not100, i32 1242797433, i32 293675403
  br label %.backedge

240:                                              ; preds = %15
  br label %.backedge

241:                                              ; preds = %15
  %242 = load i32, i32* %7, align 4
  %.not99 = icmp sgt i32 %.085, %242
  %243 = select i1 %.not99, i32 -1482032536, i32 -1498123923
  br label %.backedge

244:                                              ; preds = %15
  %245 = load i32, i32* @x.4, align 4
  %246 = load i32, i32* @y.5, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 -382450002, i32 -563730261
  br label %.backedge

254:                                              ; preds = %15
  %255 = sext i32 %.087 to i64
  %256 = sext i32 %.085 to i64
  %257 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* %9, i64 0, i64 %255, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = icmp eq i8 %258, 49
  store i1 %259, i1* %3, align 1
  %260 = load i32, i32* @x.4, align 4
  %261 = load i32, i32* @y.5, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 -1614343031, i32 -563730261
  br label %.backedge

269:                                              ; preds = %15
  %.0..0..0.76 = load volatile i1, i1* %3, align 1
  %270 = select i1 %.0..0..0.76, i32 -1346026339, i32 -288401932
  br label %.backedge

271:                                              ; preds = %15
  %272 = load i32, i32* @x.4, align 4
  %273 = load i32, i32* @y.5, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 -694700387, i32 461288533
  br label %.backedge

281:                                              ; preds = %15
  %282 = sext i32 %.087 to i64
  %283 = add i32 %.085, -1
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* %9, i64 0, i64 %282, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = icmp eq i8 %286, 49
  store i1 %287, i1* %2, align 1
  %288 = load i32, i32* @x.4, align 4
  %289 = load i32, i32* @y.5, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 2117980711, i32 461288533
  br label %.backedge

297:                                              ; preds = %15
  %.0..0..0.77 = load volatile i1, i1* %2, align 1
  %298 = select i1 %.0..0..0.77, i32 1962154951, i32 -288401932
  br label %.backedge

299:                                              ; preds = %15
  %300 = load i32, i32* @x.4, align 4
  %301 = load i32, i32* @y.5, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 1954455445, i32 -1005563287
  br label %.backedge

309:                                              ; preds = %15
  %310 = sext i32 %.087 to i64
  %311 = sext i32 %.085 to i64
  %312 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %310, i64 %311
  %313 = load i32, i32* %312, align 4
  %.neg98 = add i32 %313, 1
  store i32 %.neg98, i32* %312, align 4
  %314 = load i32, i32* @x.4, align 4
  %315 = load i32, i32* @y.5, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 1245365549, i32 -1005563287
  br label %.backedge

323:                                              ; preds = %15
  br label %.backedge

324:                                              ; preds = %15
  br label %.backedge

325:                                              ; preds = %15
  %326 = add i32 %.085, 1
  br label %.backedge

327:                                              ; preds = %15
  %328 = load i32, i32* @x.4, align 4
  %329 = load i32, i32* @y.5, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 -1446431140, i32 -1748999454
  br label %.backedge

337:                                              ; preds = %15
  %338 = load i32, i32* @x.4, align 4
  %339 = load i32, i32* @y.5, align 4
  %340 = add i32 %338, -1
  %341 = mul i32 %340, %338
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %344, %343
  %346 = select i1 %345, i32 -182738137, i32 -1748999454
  br label %.backedge

347:                                              ; preds = %15
  br label %.backedge

348:                                              ; preds = %15
  %349 = add i32 %.087, 1
  br label %.backedge

350:                                              ; preds = %15
  %351 = load i32, i32* @x.4, align 4
  %352 = load i32, i32* @y.5, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 1413619550, i32 1634340265
  br label %.backedge

360:                                              ; preds = %15
  %361 = load i32, i32* @x.4, align 4
  %362 = load i32, i32* @y.5, align 4
  %363 = add i32 %361, -1
  %364 = mul i32 %363, %361
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %367, %366
  %369 = select i1 %368, i32 60763111, i32 1634340265
  br label %.backedge

370:                                              ; preds = %15
  br label %.backedge

371:                                              ; preds = %15
  %372 = load i32, i32* @x.4, align 4
  %373 = load i32, i32* @y.5, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 2048463073, i32 756854849
  br label %.backedge

381:                                              ; preds = %15
  %382 = load i32, i32* %6, align 4
  %383 = icmp sle i32 %.083, %382
  store i1 %383, i1* %1, align 1
  %384 = load i32, i32* @x.4, align 4
  %385 = load i32, i32* @y.5, align 4
  %386 = add i32 %384, -1
  %387 = mul i32 %386, %384
  %388 = and i32 %387, 1
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %390, %389
  %392 = select i1 %391, i32 -1381617378, i32 756854849
  br label %.backedge

393:                                              ; preds = %15
  %.0..0..0.78 = load volatile i1, i1* %1, align 1
  %394 = select i1 %.0..0..0.78, i32 1214625494, i32 1445707889
  br label %.backedge

395:                                              ; preds = %15
  br label %.backedge

396:                                              ; preds = %15
  %397 = load i32, i32* %7, align 4
  %.not97 = icmp sgt i32 %.081, %397
  %398 = select i1 %.not97, i32 210076682, i32 1436172519
  br label %.backedge

399:                                              ; preds = %15
  %400 = add i32 %.083, -1
  %401 = sext i32 %400 to i64
  %402 = sext i32 %.081 to i64
  %403 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @tot, i64 0, i64 %401, i64 %402
  %404 = load i32, i32* %403, align 4
  %405 = sext i32 %.083 to i64
  %406 = add i32 %.081, -1
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @tot, i64 0, i64 %405, i64 %407
  %409 = load i32, i32* %408, align 4
  %410 = add i32 %409, %404
  %411 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @tot, i64 0, i64 %401, i64 %407
  %412 = load i32, i32* %411, align 4
  %413 = sub i32 %410, %412
  %414 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @tot, i64 0, i64 %405, i64 %402
  %415 = load i32, i32* %414, align 4
  %416 = add i32 %413, %415
  store i32 %416, i32* %414, align 4
  %417 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @h, i64 0, i64 %401, i64 %402
  %418 = load i32, i32* %417, align 4
  %419 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @h, i64 0, i64 %405, i64 %407
  %420 = load i32, i32* %419, align 4
  %421 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @h, i64 0, i64 %401, i64 %407
  %422 = load i32, i32* %421, align 4
  %423 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @h, i64 0, i64 %405, i64 %402
  %424 = load i32, i32* %423, align 4
  %425 = add i32 %420, %418
  %426 = sub i32 %425, %422
  %427 = add i32 %426, %424
  store i32 %427, i32* %423, align 4
  %428 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %401, i64 %402
  %429 = load i32, i32* %428, align 4
  %430 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %405, i64 %407
  %431 = load i32, i32* %430, align 4
  %432 = add i32 %431, %429
  %433 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %401, i64 %407
  %434 = load i32, i32* %433, align 4
  %.neg96.neg = sub i32 %432, %434
  %435 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %405, i64 %402
  %436 = load i32, i32* %435, align 4
  %437 = add i32 %.neg96.neg, %436
  store i32 %437, i32* %435, align 4
  br label %.backedge

438:                                              ; preds = %15
  %439 = add i32 %.081, 1
  br label %.backedge

440:                                              ; preds = %15
  br label %.backedge

441:                                              ; preds = %15
  %.neg95 = add i32 %.083, 1
  br label %.backedge

442:                                              ; preds = %15
  %443 = load i32, i32* @x.4, align 4
  %444 = load i32, i32* @y.5, align 4
  %445 = add i32 %443, -1
  %446 = mul i32 %445, %443
  %447 = and i32 %446, 1
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %449, %448
  %451 = select i1 %450, i32 -136556412, i32 -564472708
  br label %.backedge

452:                                              ; preds = %15
  %453 = load i32, i32* @x.4, align 4
  %454 = load i32, i32* @y.5, align 4
  %455 = add i32 %453, -1
  %456 = mul i32 %455, %453
  %457 = and i32 %456, 1
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %459, %458
  %461 = select i1 %460, i32 -2108903453, i32 -564472708
  br label %.backedge

462:                                              ; preds = %15
  br label %.backedge

463:                                              ; preds = %15
  %464 = load i32, i32* %8, align 4
  %.neg = add i32 %464, -1
  store i32 %.neg, i32* %8, align 4
  %.not = icmp eq i32 %464, 0
  %465 = select i1 %.not, i32 1105048630, i32 -1215412206
  br label %.backedge

466:                                              ; preds = %15
  %467 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %10, i32* nonnull %11, i32* nonnull %12, i32* nonnull %13)
  %468 = load i32, i32* %12, align 4
  %469 = sext i32 %468 to i64
  %470 = load i32, i32* %13, align 4
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @tot, i64 0, i64 %469, i64 %471
  %473 = load i32, i32* %472, align 4
  %474 = load i32, i32* %10, align 4
  %475 = add i32 %474, -1
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @tot, i64 0, i64 %476, i64 %471
  %478 = load i32, i32* %477, align 4
  %479 = load i32, i32* %11, align 4
  %480 = add i32 %479, -1
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @tot, i64 0, i64 %469, i64 %481
  %483 = load i32, i32* %482, align 4
  %484 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @tot, i64 0, i64 %476, i64 %481
  %485 = load i32, i32* %484, align 4
  %486 = add i32 %478, %483
  %487 = sub i32 %473, %486
  %488 = add i32 %487, %485
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @h, i64 0, i64 %469, i64 %471
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @h, i64 0, i64 %469, i64 %481
  %493 = load i32, i32* %492, align 4
  %494 = sext i32 %474 to i64
  %495 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @h, i64 0, i64 %494, i64 %471
  %496 = load i32, i32* %495, align 4
  %497 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @h, i64 0, i64 %494, i64 %481
  %498 = load i32, i32* %497, align 4
  %499 = add i32 %493, %496
  %500 = sub i32 %491, %499
  %501 = add i32 %500, %498
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %469, i64 %471
  %504 = load i32, i32* %503, align 4
  %505 = sext i32 %479 to i64
  %506 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %469, i64 %505
  %507 = load i32, i32* %506, align 4
  %508 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %476, i64 %471
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %476, i64 %505
  %511 = load i32, i32* %510, align 4
  %512 = add i32 %507, %509
  %513 = sub i32 %504, %512
  %514 = add i32 %513, %511
  %515 = sext i32 %514 to i64
  %516 = add nsw i64 %502, %515
  %517 = sub nsw i64 %489, %516
  %518 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %517)
  br label %.backedge

519:                                              ; preds = %15
  ret i32 0

520:                                              ; preds = %15
  br label %.backedge

521:                                              ; preds = %15
  %522 = add i32 %.093, 1
  br label %.backedge

523:                                              ; preds = %15
  br label %.backedge

524:                                              ; preds = %15
  br label %.backedge

525:                                              ; preds = %15
  br label %.backedge

526:                                              ; preds = %15
  br label %.backedge

527:                                              ; preds = %15
  %528 = add i32 %.089, 1
  br label %.backedge

529:                                              ; preds = %15
  br label %.backedge

530:                                              ; preds = %15
  br label %.backedge

531:                                              ; preds = %15
  br label %.backedge

532:                                              ; preds = %15
  %533 = sext i32 %.087 to i64
  %534 = sext i32 %.085 to i64
  %535 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @v, i64 0, i64 %533, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = add i32 %536, 1
  store i32 %537, i32* %535, align 4
  br label %.backedge

538:                                              ; preds = %15
  br label %.backedge

539:                                              ; preds = %15
  br label %.backedge

540:                                              ; preds = %15
  br label %.backedge

541:                                              ; preds = %15
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s065773761.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.6, align 4
  %4 = load i32, i32* @y.7, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 896142003, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 896142003, label %11
    i32 -1507456462, label %14
    i32 1649349538, label %24
    i32 962717816, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1507456462, i32 962717816
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.6, align 4
  %16 = load i32, i32* @y.7, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1649349538, i32 962717816
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1507456462, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
