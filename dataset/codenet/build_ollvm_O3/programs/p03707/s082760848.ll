; ModuleID = 'build_ollvm/programs/p03707/s082760848.ll'
source_filename = "Project_CodeNet_C++1400/p03707/s082760848.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_Z4readv = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = local_unnamed_addr global i32 0, align 4
@m = local_unnamed_addr global i32 0, align 4
@Q = local_unnamed_addr global i32 0, align 4
@a = local_unnamed_addr global [2020 x [2020 x i32]] zeroinitializer, align 16
@s = local_unnamed_addr global [2020 x [2020 x i32]] zeroinitializer, align 16
@b = local_unnamed_addr global [2020 x [2020 x i32]] zeroinitializer, align 16
@mp = global [2020 x [2020 x i8]] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s082760848.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = tail call i32 @_Z4readv()
  store i32 %7, i32* @n, align 4
  %8 = tail call i32 @_Z4readv()
  store i32 %8, i32* @m, align 4
  %9 = tail call i32 @_Z4readv()
  store i32 %9, i32* @Q, align 4
  br label %10

10:                                               ; preds = %.backedge, %0
  %.0127 = phi i32 [ undef, %0 ], [ %.0127.be, %.backedge ]
  %.0125 = phi i32 [ undef, %0 ], [ %.0125.be, %.backedge ]
  %.0123 = phi i32 [ undef, %0 ], [ %.0123.be, %.backedge ]
  %.0121 = phi i32 [ undef, %0 ], [ %.0121.be, %.backedge ]
  %.0119 = phi i32 [ undef, %0 ], [ %.0119.be, %.backedge ]
  %.0117 = phi i32 [ undef, %0 ], [ %.0117.be, %.backedge ]
  %.0115 = phi i32 [ undef, %0 ], [ %.0115.be, %.backedge ]
  %.0113 = phi i32 [ undef, %0 ], [ %.0113.be, %.backedge ]
  %.0111 = phi i32 [ 1, %0 ], [ %.0111.be, %.backedge ]
  %.0 = phi i32 [ 40019137, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 40019137, label %11
    i32 1495926504, label %14
    i32 -965554980, label %18
    i32 -811127410, label %28
    i32 -752689053, label %39
    i32 -217651885, label %40
    i32 414418175, label %50
    i32 -294666449, label %60
    i32 -1519151509, label %61
    i32 -1920803321, label %71
    i32 439542377, label %83
    i32 -1086365584, label %85
    i32 519420334, label %86
    i32 1172032380, label %96
    i32 -2026000395, label %108
    i32 1078029472, label %110
    i32 1474088414, label %120
    i32 1049356733, label %150
    i32 1941622595, label %151
    i32 2089066036, label %161
    i32 43743357, label %172
    i32 -428586931, label %173
    i32 -287563420, label %174
    i32 843761435, label %176
    i32 250143303, label %186
    i32 1929316248, label %196
    i32 -1028080288, label %197
    i32 579393672, label %200
    i32 -1004014284, label %201
    i32 568033901, label %211
    i32 81066265, label %223
    i32 2009781638, label %225
    i32 1358359563, label %232
    i32 -999601884, label %240
    i32 -1729680504, label %246
    i32 -911402345, label %247
    i32 267507495, label %249
    i32 2139507192, label %250
    i32 1003092669, label %252
    i32 -499515457, label %253
    i32 1831422207, label %263
    i32 -57526241, label %275
    i32 -1872818814, label %277
    i32 -146477908, label %287
    i32 1036026644, label %297
    i32 1773102715, label %298
    i32 -720761609, label %308
    i32 -1097241980, label %320
    i32 310574637, label %322
    i32 -888743630, label %329
    i32 -1438081618, label %339
    i32 577086996, label %355
    i32 1046328020, label %357
    i32 1309691476, label %367
    i32 952817968, label %381
    i32 -315967896, label %382
    i32 1056470184, label %392
    i32 -2041472595, label %402
    i32 -330383496, label %403
    i32 947704850, label %405
    i32 1288015561, label %406
    i32 1879660391, label %408
    i32 151122072, label %418
    i32 -329803882, label %428
    i32 828201173, label %429
    i32 -790196371, label %432
    i32 -339124151, label %433
    i32 1651649622, label %436
    i32 -1952140262, label %464
    i32 945700751, label %465
    i32 -1106467865, label %466
    i32 -803694236, label %468
    i32 -1977207917, label %478
    i32 1577916040, label %488
    i32 11368249, label %489
    i32 -1862315799, label %493
    i32 2021490046, label %542
    i32 765875528, label %552
    i32 -1239199902, label %562
    i32 -164348830, label %563
    i32 6744254, label %565
    i32 -529319284, label %566
    i32 1588391887, label %567
    i32 -368172202, label %568
    i32 -1564989263, label %589
    i32 765307362, label %590
    i32 -1760997478, label %591
    i32 -972107898, label %592
    i32 -462878199, label %593
    i32 -947028964, label %594
    i32 -566242443, label %595
    i32 -1625427424, label %596
    i32 868909175, label %602
    i32 -1677566013, label %603
    i32 -1484872845, label %604
    i32 1541373243, label %605
  ]

.backedge:                                        ; preds = %10, %605, %604, %603, %602, %596, %595, %594, %593, %592, %591, %590, %589, %568, %567, %566, %565, %563, %552, %542, %493, %489, %488, %478, %468, %466, %465, %464, %436, %433, %432, %429, %428, %418, %408, %406, %405, %403, %402, %392, %382, %381, %367, %357, %355, %339, %329, %322, %320, %308, %298, %297, %287, %277, %275, %263, %253, %252, %250, %249, %247, %246, %240, %232, %225, %223, %211, %201, %200, %197, %196, %186, %176, %174, %173, %172, %161, %151, %150, %120, %110, %108, %96, %86, %85, %83, %71, %61, %60, %50, %40, %39, %28, %18, %14, %11
  %.0127.be = phi i32 [ %.0127, %10 ], [ %.0127, %605 ], [ %.0127, %604 ], [ %.0127, %603 ], [ %.0127, %602 ], [ %.0127, %596 ], [ %.0127, %595 ], [ %.0127, %594 ], [ %.0127, %593 ], [ %.0127, %592 ], [ %.0127, %591 ], [ %.0127, %590 ], [ %.0127, %589 ], [ %.0127, %568 ], [ %.0127, %567 ], [ %.0127, %566 ], [ %.0127, %565 ], [ %.0127, %563 ], [ %.0127, %552 ], [ %.0127, %542 ], [ %.0127, %493 ], [ %.0127, %489 ], [ %.0127, %488 ], [ %.0127, %478 ], [ %.0127, %468 ], [ %.0127, %466 ], [ %.0127, %465 ], [ %.0127, %464 ], [ %.0127, %436 ], [ %.0127, %433 ], [ %.0127, %432 ], [ %.0127, %429 ], [ %.0127, %428 ], [ %.0127, %418 ], [ %.0127, %408 ], [ %407, %406 ], [ %.0127, %405 ], [ %.0127, %403 ], [ %.0127, %402 ], [ %.0127, %392 ], [ %.0127, %382 ], [ %.0127, %381 ], [ %.0127, %367 ], [ %.0127, %357 ], [ %.0127, %355 ], [ %.0127, %339 ], [ %.0127, %329 ], [ %.0127, %322 ], [ %.0127, %320 ], [ %.0127, %308 ], [ %.0127, %298 ], [ %.0127, %297 ], [ %.0127, %287 ], [ %.0127, %277 ], [ %.0127, %275 ], [ %.0127, %263 ], [ %.0127, %253 ], [ 2, %252 ], [ %.0127, %250 ], [ %.0127, %249 ], [ %.0127, %247 ], [ %.0127, %246 ], [ %.0127, %240 ], [ %.0127, %232 ], [ %.0127, %225 ], [ %.0127, %223 ], [ %.0127, %211 ], [ %.0127, %201 ], [ %.0127, %200 ], [ %.0127, %197 ], [ %.0127, %196 ], [ %.0127, %186 ], [ %.0127, %176 ], [ %.0127, %174 ], [ %.0127, %173 ], [ %.0127, %172 ], [ %.0127, %161 ], [ %.0127, %151 ], [ %.0127, %150 ], [ %.0127, %120 ], [ %.0127, %110 ], [ %.0127, %108 ], [ %.0127, %96 ], [ %.0127, %86 ], [ %.0127, %85 ], [ %.0127, %83 ], [ %.0127, %71 ], [ %.0127, %61 ], [ %.0127, %60 ], [ %.0127, %50 ], [ %.0127, %40 ], [ %.0127, %39 ], [ %.0127, %28 ], [ %.0127, %18 ], [ %.0127, %14 ], [ %.0127, %11 ]
  %.0125.be = phi i32 [ %.0125, %10 ], [ %.0125, %605 ], [ %.0125, %604 ], [ %.0125, %603 ], [ %.0125, %602 ], [ %.0125, %596 ], [ %.0125, %595 ], [ %.0125, %594 ], [ 1, %593 ], [ %.0125, %592 ], [ %.0125, %591 ], [ %.0125, %590 ], [ %.0125, %589 ], [ %.0125, %568 ], [ %.0125, %567 ], [ %.0125, %566 ], [ %.0125, %565 ], [ %.0125, %563 ], [ %.0125, %552 ], [ %.0125, %542 ], [ %.0125, %493 ], [ %.0125, %489 ], [ %.0125, %488 ], [ %.0125, %478 ], [ %.0125, %468 ], [ %.0125, %466 ], [ %.0125, %465 ], [ %.0125, %464 ], [ %.0125, %436 ], [ %.0125, %433 ], [ %.0125, %432 ], [ %.0125, %429 ], [ %.0125, %428 ], [ %.0125, %418 ], [ %.0125, %408 ], [ %.0125, %406 ], [ %.0125, %405 ], [ %404, %403 ], [ %.0125, %402 ], [ %.0125, %392 ], [ %.0125, %382 ], [ %.0125, %381 ], [ %.0125, %367 ], [ %.0125, %357 ], [ %.0125, %355 ], [ %.0125, %339 ], [ %.0125, %329 ], [ %.0125, %322 ], [ %.0125, %320 ], [ %.0125, %308 ], [ %.0125, %298 ], [ %.0125, %297 ], [ 1, %287 ], [ %.0125, %277 ], [ %.0125, %275 ], [ %.0125, %263 ], [ %.0125, %253 ], [ %.0125, %252 ], [ %.0125, %250 ], [ %.0125, %249 ], [ %.0125, %247 ], [ %.0125, %246 ], [ %.0125, %240 ], [ %.0125, %232 ], [ %.0125, %225 ], [ %.0125, %223 ], [ %.0125, %211 ], [ %.0125, %201 ], [ %.0125, %200 ], [ %.0125, %197 ], [ %.0125, %196 ], [ %.0125, %186 ], [ %.0125, %176 ], [ %.0125, %174 ], [ %.0125, %173 ], [ %.0125, %172 ], [ %.0125, %161 ], [ %.0125, %151 ], [ %.0125, %150 ], [ %.0125, %120 ], [ %.0125, %110 ], [ %.0125, %108 ], [ %.0125, %96 ], [ %.0125, %86 ], [ %.0125, %85 ], [ %.0125, %83 ], [ %.0125, %71 ], [ %.0125, %61 ], [ %.0125, %60 ], [ %.0125, %50 ], [ %.0125, %40 ], [ %.0125, %39 ], [ %.0125, %28 ], [ %.0125, %18 ], [ %.0125, %14 ], [ %.0125, %11 ]
  %.0123.be = phi i32 [ %.0123, %10 ], [ %.0123, %605 ], [ %.0123, %604 ], [ 1, %603 ], [ %.0123, %602 ], [ %.0123, %596 ], [ %.0123, %595 ], [ %.0123, %594 ], [ %.0123, %593 ], [ %.0123, %592 ], [ %.0123, %591 ], [ %.0123, %590 ], [ %.0123, %589 ], [ %.0123, %568 ], [ %.0123, %567 ], [ %.0123, %566 ], [ %.0123, %565 ], [ %.0123, %563 ], [ %.0123, %552 ], [ %.0123, %542 ], [ %.0123, %493 ], [ %.0123, %489 ], [ %.0123, %488 ], [ %.0123, %478 ], [ %.0123, %468 ], [ %467, %466 ], [ %.0123, %465 ], [ %.0123, %464 ], [ %.0123, %436 ], [ %.0123, %433 ], [ %.0123, %432 ], [ %.0123, %429 ], [ %.0123, %428 ], [ 1, %418 ], [ %.0123, %408 ], [ %.0123, %406 ], [ %.0123, %405 ], [ %.0123, %403 ], [ %.0123, %402 ], [ %.0123, %392 ], [ %.0123, %382 ], [ %.0123, %381 ], [ %.0123, %367 ], [ %.0123, %357 ], [ %.0123, %355 ], [ %.0123, %339 ], [ %.0123, %329 ], [ %.0123, %322 ], [ %.0123, %320 ], [ %.0123, %308 ], [ %.0123, %298 ], [ %.0123, %297 ], [ %.0123, %287 ], [ %.0123, %277 ], [ %.0123, %275 ], [ %.0123, %263 ], [ %.0123, %253 ], [ %.0123, %252 ], [ %.0123, %250 ], [ %.0123, %249 ], [ %.0123, %247 ], [ %.0123, %246 ], [ %.0123, %240 ], [ %.0123, %232 ], [ %.0123, %225 ], [ %.0123, %223 ], [ %.0123, %211 ], [ %.0123, %201 ], [ %.0123, %200 ], [ %.0123, %197 ], [ %.0123, %196 ], [ %.0123, %186 ], [ %.0123, %176 ], [ %.0123, %174 ], [ %.0123, %173 ], [ %.0123, %172 ], [ %.0123, %161 ], [ %.0123, %151 ], [ %.0123, %150 ], [ %.0123, %120 ], [ %.0123, %110 ], [ %.0123, %108 ], [ %.0123, %96 ], [ %.0123, %86 ], [ %.0123, %85 ], [ %.0123, %83 ], [ %.0123, %71 ], [ %.0123, %61 ], [ %.0123, %60 ], [ %.0123, %50 ], [ %.0123, %40 ], [ %.0123, %39 ], [ %.0123, %28 ], [ %.0123, %18 ], [ %.0123, %14 ], [ %.0123, %11 ]
  %.0121.be = phi i32 [ %.0121, %10 ], [ %.0121, %605 ], [ %.0121, %604 ], [ %.0121, %603 ], [ %.0121, %602 ], [ %.0121, %596 ], [ %.0121, %595 ], [ %.0121, %594 ], [ %.0121, %593 ], [ %.0121, %592 ], [ %.0121, %591 ], [ %.0121, %590 ], [ %.0121, %589 ], [ %.0121, %568 ], [ %.0121, %567 ], [ %.0121, %566 ], [ %.0121, %565 ], [ %.0121, %563 ], [ %.0121, %552 ], [ %.0121, %542 ], [ %.0121, %493 ], [ %.0121, %489 ], [ %.0121, %488 ], [ %.0121, %478 ], [ %.0121, %468 ], [ %.0121, %466 ], [ %.0121, %465 ], [ %.neg133, %464 ], [ %.0121, %436 ], [ %.0121, %433 ], [ 1, %432 ], [ %.0121, %429 ], [ %.0121, %428 ], [ %.0121, %418 ], [ %.0121, %408 ], [ %.0121, %406 ], [ %.0121, %405 ], [ %.0121, %403 ], [ %.0121, %402 ], [ %.0121, %392 ], [ %.0121, %382 ], [ %.0121, %381 ], [ %.0121, %367 ], [ %.0121, %357 ], [ %.0121, %355 ], [ %.0121, %339 ], [ %.0121, %329 ], [ %.0121, %322 ], [ %.0121, %320 ], [ %.0121, %308 ], [ %.0121, %298 ], [ %.0121, %297 ], [ %.0121, %287 ], [ %.0121, %277 ], [ %.0121, %275 ], [ %.0121, %263 ], [ %.0121, %253 ], [ %.0121, %252 ], [ %.0121, %250 ], [ %.0121, %249 ], [ %.0121, %247 ], [ %.0121, %246 ], [ %.0121, %240 ], [ %.0121, %232 ], [ %.0121, %225 ], [ %.0121, %223 ], [ %.0121, %211 ], [ %.0121, %201 ], [ %.0121, %200 ], [ %.0121, %197 ], [ %.0121, %196 ], [ %.0121, %186 ], [ %.0121, %176 ], [ %.0121, %174 ], [ %.0121, %173 ], [ %.0121, %172 ], [ %.0121, %161 ], [ %.0121, %151 ], [ %.0121, %150 ], [ %.0121, %120 ], [ %.0121, %110 ], [ %.0121, %108 ], [ %.0121, %96 ], [ %.0121, %86 ], [ %.0121, %85 ], [ %.0121, %83 ], [ %.0121, %71 ], [ %.0121, %61 ], [ %.0121, %60 ], [ %.0121, %50 ], [ %.0121, %40 ], [ %.0121, %39 ], [ %.0121, %28 ], [ %.0121, %18 ], [ %.0121, %14 ], [ %.0121, %11 ]
  %.0119.be = phi i32 [ %.0119, %10 ], [ %.0119, %605 ], [ %.0119, %604 ], [ %.0119, %603 ], [ %.0119, %602 ], [ %.0119, %596 ], [ %.0119, %595 ], [ %.0119, %594 ], [ %.0119, %593 ], [ %.0119, %592 ], [ %.0119, %591 ], [ %.0119, %590 ], [ %.0119, %589 ], [ %.0119, %568 ], [ %.0119, %567 ], [ %.0119, %566 ], [ %.0119, %565 ], [ %.0119, %563 ], [ %.0119, %552 ], [ %.0119, %542 ], [ %.0119, %493 ], [ %.0119, %489 ], [ %.0119, %488 ], [ %.0119, %478 ], [ %.0119, %468 ], [ %.0119, %466 ], [ %.0119, %465 ], [ %.0119, %464 ], [ %.0119, %436 ], [ %.0119, %433 ], [ %.0119, %432 ], [ %.0119, %429 ], [ %.0119, %428 ], [ %.0119, %418 ], [ %.0119, %408 ], [ %.0119, %406 ], [ %.0119, %405 ], [ %.0119, %403 ], [ %.0119, %402 ], [ %.0119, %392 ], [ %.0119, %382 ], [ %.0119, %381 ], [ %.0119, %367 ], [ %.0119, %357 ], [ %.0119, %355 ], [ %.0119, %339 ], [ %.0119, %329 ], [ %.0119, %322 ], [ %.0119, %320 ], [ %.0119, %308 ], [ %.0119, %298 ], [ %.0119, %297 ], [ %.0119, %287 ], [ %.0119, %277 ], [ %.0119, %275 ], [ %.0119, %263 ], [ %.0119, %253 ], [ %.0119, %252 ], [ %.0119, %250 ], [ %.0119, %249 ], [ %248, %247 ], [ %.0119, %246 ], [ %.0119, %240 ], [ %.0119, %232 ], [ %.0119, %225 ], [ %.0119, %223 ], [ %.0119, %211 ], [ %.0119, %201 ], [ 2, %200 ], [ %.0119, %197 ], [ %.0119, %196 ], [ %.0119, %186 ], [ %.0119, %176 ], [ %.0119, %174 ], [ %.0119, %173 ], [ %.0119, %172 ], [ %.0119, %161 ], [ %.0119, %151 ], [ %.0119, %150 ], [ %.0119, %120 ], [ %.0119, %110 ], [ %.0119, %108 ], [ %.0119, %96 ], [ %.0119, %86 ], [ %.0119, %85 ], [ %.0119, %83 ], [ %.0119, %71 ], [ %.0119, %61 ], [ %.0119, %60 ], [ %.0119, %50 ], [ %.0119, %40 ], [ %.0119, %39 ], [ %.0119, %28 ], [ %.0119, %18 ], [ %.0119, %14 ], [ %.0119, %11 ]
  %.0117.be = phi i32 [ %.0117, %10 ], [ %.0117, %605 ], [ %.0117, %604 ], [ %.0117, %603 ], [ %.0117, %602 ], [ %.0117, %596 ], [ %.0117, %595 ], [ %.0117, %594 ], [ %.0117, %593 ], [ %.0117, %592 ], [ %.0117, %591 ], [ 1, %590 ], [ %.0117, %589 ], [ %.0117, %568 ], [ %.0117, %567 ], [ %.0117, %566 ], [ %.0117, %565 ], [ %.0117, %563 ], [ %.0117, %552 ], [ %.0117, %542 ], [ %.0117, %493 ], [ %.0117, %489 ], [ %.0117, %488 ], [ %.0117, %478 ], [ %.0117, %468 ], [ %.0117, %466 ], [ %.0117, %465 ], [ %.0117, %464 ], [ %.0117, %436 ], [ %.0117, %433 ], [ %.0117, %432 ], [ %.0117, %429 ], [ %.0117, %428 ], [ %.0117, %418 ], [ %.0117, %408 ], [ %.0117, %406 ], [ %.0117, %405 ], [ %.0117, %403 ], [ %.0117, %402 ], [ %.0117, %392 ], [ %.0117, %382 ], [ %.0117, %381 ], [ %.0117, %367 ], [ %.0117, %357 ], [ %.0117, %355 ], [ %.0117, %339 ], [ %.0117, %329 ], [ %.0117, %322 ], [ %.0117, %320 ], [ %.0117, %308 ], [ %.0117, %298 ], [ %.0117, %297 ], [ %.0117, %287 ], [ %.0117, %277 ], [ %.0117, %275 ], [ %.0117, %263 ], [ %.0117, %253 ], [ %.0117, %252 ], [ %251, %250 ], [ %.0117, %249 ], [ %.0117, %247 ], [ %.0117, %246 ], [ %.0117, %240 ], [ %.0117, %232 ], [ %.0117, %225 ], [ %.0117, %223 ], [ %.0117, %211 ], [ %.0117, %201 ], [ %.0117, %200 ], [ %.0117, %197 ], [ %.0117, %196 ], [ 1, %186 ], [ %.0117, %176 ], [ %.0117, %174 ], [ %.0117, %173 ], [ %.0117, %172 ], [ %.0117, %161 ], [ %.0117, %151 ], [ %.0117, %150 ], [ %.0117, %120 ], [ %.0117, %110 ], [ %.0117, %108 ], [ %.0117, %96 ], [ %.0117, %86 ], [ %.0117, %85 ], [ %.0117, %83 ], [ %.0117, %71 ], [ %.0117, %61 ], [ %.0117, %60 ], [ %.0117, %50 ], [ %.0117, %40 ], [ %.0117, %39 ], [ %.0117, %28 ], [ %.0117, %18 ], [ %.0117, %14 ], [ %.0117, %11 ]
  %.0115.be = phi i32 [ %.0115, %10 ], [ %.0115, %605 ], [ %.0115, %604 ], [ %.0115, %603 ], [ %.0115, %602 ], [ %.0115, %596 ], [ %.0115, %595 ], [ %.0115, %594 ], [ %.0115, %593 ], [ %.0115, %592 ], [ %.0115, %591 ], [ %.0115, %590 ], [ %.neg, %589 ], [ %.0115, %568 ], [ %.0115, %567 ], [ %.0115, %566 ], [ %.0115, %565 ], [ %.0115, %563 ], [ %.0115, %552 ], [ %.0115, %542 ], [ %.0115, %493 ], [ %.0115, %489 ], [ %.0115, %488 ], [ %.0115, %478 ], [ %.0115, %468 ], [ %.0115, %466 ], [ %.0115, %465 ], [ %.0115, %464 ], [ %.0115, %436 ], [ %.0115, %433 ], [ %.0115, %432 ], [ %.0115, %429 ], [ %.0115, %428 ], [ %.0115, %418 ], [ %.0115, %408 ], [ %.0115, %406 ], [ %.0115, %405 ], [ %.0115, %403 ], [ %.0115, %402 ], [ %.0115, %392 ], [ %.0115, %382 ], [ %.0115, %381 ], [ %.0115, %367 ], [ %.0115, %357 ], [ %.0115, %355 ], [ %.0115, %339 ], [ %.0115, %329 ], [ %.0115, %322 ], [ %.0115, %320 ], [ %.0115, %308 ], [ %.0115, %298 ], [ %.0115, %297 ], [ %.0115, %287 ], [ %.0115, %277 ], [ %.0115, %275 ], [ %.0115, %263 ], [ %.0115, %253 ], [ %.0115, %252 ], [ %.0115, %250 ], [ %.0115, %249 ], [ %.0115, %247 ], [ %.0115, %246 ], [ %.0115, %240 ], [ %.0115, %232 ], [ %.0115, %225 ], [ %.0115, %223 ], [ %.0115, %211 ], [ %.0115, %201 ], [ %.0115, %200 ], [ %.0115, %197 ], [ %.0115, %196 ], [ %.0115, %186 ], [ %.0115, %176 ], [ %.0115, %174 ], [ %.0115, %173 ], [ %.0115, %172 ], [ %162, %161 ], [ %.0115, %151 ], [ %.0115, %150 ], [ %.0115, %120 ], [ %.0115, %110 ], [ %.0115, %108 ], [ %.0115, %96 ], [ %.0115, %86 ], [ 1, %85 ], [ %.0115, %83 ], [ %.0115, %71 ], [ %.0115, %61 ], [ %.0115, %60 ], [ %.0115, %50 ], [ %.0115, %40 ], [ %.0115, %39 ], [ %.0115, %28 ], [ %.0115, %18 ], [ %.0115, %14 ], [ %.0115, %11 ]
  %.0113.be = phi i32 [ %.0113, %10 ], [ %.0113, %605 ], [ %.0113, %604 ], [ %.0113, %603 ], [ %.0113, %602 ], [ %.0113, %596 ], [ %.0113, %595 ], [ %.0113, %594 ], [ %.0113, %593 ], [ %.0113, %592 ], [ %.0113, %591 ], [ %.0113, %590 ], [ %.0113, %589 ], [ %.0113, %568 ], [ %.0113, %567 ], [ %.0113, %566 ], [ 1, %565 ], [ %.0113, %563 ], [ %.0113, %552 ], [ %.0113, %542 ], [ %.0113, %493 ], [ %.0113, %489 ], [ %.0113, %488 ], [ %.0113, %478 ], [ %.0113, %468 ], [ %.0113, %466 ], [ %.0113, %465 ], [ %.0113, %464 ], [ %.0113, %436 ], [ %.0113, %433 ], [ %.0113, %432 ], [ %.0113, %429 ], [ %.0113, %428 ], [ %.0113, %418 ], [ %.0113, %408 ], [ %.0113, %406 ], [ %.0113, %405 ], [ %.0113, %403 ], [ %.0113, %402 ], [ %.0113, %392 ], [ %.0113, %382 ], [ %.0113, %381 ], [ %.0113, %367 ], [ %.0113, %357 ], [ %.0113, %355 ], [ %.0113, %339 ], [ %.0113, %329 ], [ %.0113, %322 ], [ %.0113, %320 ], [ %.0113, %308 ], [ %.0113, %298 ], [ %.0113, %297 ], [ %.0113, %287 ], [ %.0113, %277 ], [ %.0113, %275 ], [ %.0113, %263 ], [ %.0113, %253 ], [ %.0113, %252 ], [ %.0113, %250 ], [ %.0113, %249 ], [ %.0113, %247 ], [ %.0113, %246 ], [ %.0113, %240 ], [ %.0113, %232 ], [ %.0113, %225 ], [ %.0113, %223 ], [ %.0113, %211 ], [ %.0113, %201 ], [ %.0113, %200 ], [ %.0113, %197 ], [ %.0113, %196 ], [ %.0113, %186 ], [ %.0113, %176 ], [ %175, %174 ], [ %.0113, %173 ], [ %.0113, %172 ], [ %.0113, %161 ], [ %.0113, %151 ], [ %.0113, %150 ], [ %.0113, %120 ], [ %.0113, %110 ], [ %.0113, %108 ], [ %.0113, %96 ], [ %.0113, %86 ], [ %.0113, %85 ], [ %.0113, %83 ], [ %.0113, %71 ], [ %.0113, %61 ], [ %.0113, %60 ], [ 1, %50 ], [ %.0113, %40 ], [ %.0113, %39 ], [ %.0113, %28 ], [ %.0113, %18 ], [ %.0113, %14 ], [ %.0113, %11 ]
  %.0111.be = phi i32 [ %.0111, %10 ], [ %.0111, %605 ], [ %.0111, %604 ], [ %.0111, %603 ], [ %.0111, %602 ], [ %.0111, %596 ], [ %.0111, %595 ], [ %.0111, %594 ], [ %.0111, %593 ], [ %.0111, %592 ], [ %.0111, %591 ], [ %.0111, %590 ], [ %.0111, %589 ], [ %.0111, %568 ], [ %.0111, %567 ], [ %.0111, %566 ], [ %.0111, %565 ], [ %564, %563 ], [ %.0111, %552 ], [ %.0111, %542 ], [ %.0111, %493 ], [ %.0111, %489 ], [ %.0111, %488 ], [ %.0111, %478 ], [ %.0111, %468 ], [ %.0111, %466 ], [ %.0111, %465 ], [ %.0111, %464 ], [ %.0111, %436 ], [ %.0111, %433 ], [ %.0111, %432 ], [ %.0111, %429 ], [ %.0111, %428 ], [ %.0111, %418 ], [ %.0111, %408 ], [ %.0111, %406 ], [ %.0111, %405 ], [ %.0111, %403 ], [ %.0111, %402 ], [ %.0111, %392 ], [ %.0111, %382 ], [ %.0111, %381 ], [ %.0111, %367 ], [ %.0111, %357 ], [ %.0111, %355 ], [ %.0111, %339 ], [ %.0111, %329 ], [ %.0111, %322 ], [ %.0111, %320 ], [ %.0111, %308 ], [ %.0111, %298 ], [ %.0111, %297 ], [ %.0111, %287 ], [ %.0111, %277 ], [ %.0111, %275 ], [ %.0111, %263 ], [ %.0111, %253 ], [ %.0111, %252 ], [ %.0111, %250 ], [ %.0111, %249 ], [ %.0111, %247 ], [ %.0111, %246 ], [ %.0111, %240 ], [ %.0111, %232 ], [ %.0111, %225 ], [ %.0111, %223 ], [ %.0111, %211 ], [ %.0111, %201 ], [ %.0111, %200 ], [ %.0111, %197 ], [ %.0111, %196 ], [ %.0111, %186 ], [ %.0111, %176 ], [ %.0111, %174 ], [ %.0111, %173 ], [ %.0111, %172 ], [ %.0111, %161 ], [ %.0111, %151 ], [ %.0111, %150 ], [ %.0111, %120 ], [ %.0111, %110 ], [ %.0111, %108 ], [ %.0111, %96 ], [ %.0111, %86 ], [ %.0111, %85 ], [ %.0111, %83 ], [ %.0111, %71 ], [ %.0111, %61 ], [ %.0111, %60 ], [ %.0111, %50 ], [ %.0111, %40 ], [ %.0111, %39 ], [ %29, %28 ], [ %.0111, %18 ], [ %.0111, %14 ], [ %.0111, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ 765875528, %605 ], [ -1977207917, %604 ], [ 151122072, %603 ], [ 1056470184, %602 ], [ 1309691476, %596 ], [ -1438081618, %595 ], [ -720761609, %594 ], [ -146477908, %593 ], [ 1831422207, %592 ], [ 568033901, %591 ], [ 250143303, %590 ], [ 2089066036, %589 ], [ 1474088414, %568 ], [ 1172032380, %567 ], [ -1920803321, %566 ], [ 414418175, %565 ], [ -811127410, %563 ], [ %561, %552 ], [ %551, %542 ], [ 11368249, %493 ], [ %492, %489 ], [ 11368249, %488 ], [ %487, %478 ], [ %477, %468 ], [ 828201173, %466 ], [ -1106467865, %465 ], [ -339124151, %464 ], [ -1952140262, %436 ], [ %435, %433 ], [ -339124151, %432 ], [ %431, %429 ], [ 828201173, %428 ], [ %427, %418 ], [ %417, %408 ], [ -499515457, %406 ], [ 1288015561, %405 ], [ 1773102715, %403 ], [ -330383496, %402 ], [ %401, %392 ], [ %391, %382 ], [ -315967896, %381 ], [ %380, %367 ], [ %366, %357 ], [ %356, %355 ], [ %354, %339 ], [ %338, %329 ], [ %328, %322 ], [ %321, %320 ], [ %319, %308 ], [ %307, %298 ], [ 1773102715, %297 ], [ %296, %287 ], [ %286, %277 ], [ %276, %275 ], [ %274, %263 ], [ %262, %253 ], [ -499515457, %252 ], [ -1028080288, %250 ], [ 2139507192, %249 ], [ -1004014284, %247 ], [ -911402345, %246 ], [ -1729680504, %240 ], [ %239, %232 ], [ %231, %225 ], [ %224, %223 ], [ %222, %211 ], [ %210, %201 ], [ -1004014284, %200 ], [ %199, %197 ], [ -1028080288, %196 ], [ %195, %186 ], [ %185, %176 ], [ -1519151509, %174 ], [ -287563420, %173 ], [ 519420334, %172 ], [ %171, %161 ], [ %160, %151 ], [ 1941622595, %150 ], [ %149, %120 ], [ %119, %110 ], [ %109, %108 ], [ %107, %96 ], [ %95, %86 ], [ 519420334, %85 ], [ %84, %83 ], [ %82, %71 ], [ %70, %61 ], [ -1519151509, %60 ], [ %59, %50 ], [ %49, %40 ], [ 40019137, %39 ], [ %38, %28 ], [ %27, %18 ], [ -965554980, %14 ], [ %13, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* @n, align 4
  %.not141 = icmp sgt i32 %.0111, %12
  %13 = select i1 %.not141, i32 -217651885, i32 1495926504
  br label %.backedge

14:                                               ; preds = %10
  %15 = sext i32 %.0111 to i64
  %16 = getelementptr inbounds [2020 x [2020 x i8]], [2020 x [2020 x i8]]* @mp, i64 0, i64 %15, i64 1
  %17 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %16)
  br label %.backedge

18:                                               ; preds = %10
  %19 = load i32, i32* @x.2, align 4
  %20 = load i32, i32* @y.3, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 -811127410, i32 -164348830
  br label %.backedge

28:                                               ; preds = %10
  %29 = add i32 %.0111, 1
  %30 = load i32, i32* @x.2, align 4
  %31 = load i32, i32* @y.3, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -752689053, i32 -164348830
  br label %.backedge

39:                                               ; preds = %10
  br label %.backedge

40:                                               ; preds = %10
  %41 = load i32, i32* @x.2, align 4
  %42 = load i32, i32* @y.3, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 414418175, i32 6744254
  br label %.backedge

50:                                               ; preds = %10
  %51 = load i32, i32* @x.2, align 4
  %52 = load i32, i32* @y.3, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 -294666449, i32 6744254
  br label %.backedge

60:                                               ; preds = %10
  br label %.backedge

61:                                               ; preds = %10
  %62 = load i32, i32* @x.2, align 4
  %63 = load i32, i32* @y.3, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 -1920803321, i32 -529319284
  br label %.backedge

71:                                               ; preds = %10
  %72 = load i32, i32* @n, align 4
  %73 = icmp sle i32 %.0113, %72
  store i1 %73, i1* %6, align 1
  %74 = load i32, i32* @x.2, align 4
  %75 = load i32, i32* @y.3, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 439542377, i32 -529319284
  br label %.backedge

83:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %84 = select i1 %.0..0..0., i32 -1086365584, i32 843761435
  br label %.backedge

85:                                               ; preds = %10
  br label %.backedge

86:                                               ; preds = %10
  %87 = load i32, i32* @x.2, align 4
  %88 = load i32, i32* @y.3, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 1172032380, i32 1588391887
  br label %.backedge

96:                                               ; preds = %10
  %97 = load i32, i32* @m, align 4
  %98 = icmp sle i32 %.0115, %97
  store i1 %98, i1* %5, align 1
  %99 = load i32, i32* @x.2, align 4
  %100 = load i32, i32* @y.3, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 -2026000395, i32 1588391887
  br label %.backedge

108:                                              ; preds = %10
  %.0..0..0.106 = load volatile i1, i1* %5, align 1
  %109 = select i1 %.0..0..0.106, i32 1078029472, i32 -428586931
  br label %.backedge

110:                                              ; preds = %10
  %111 = load i32, i32* @x.2, align 4
  %112 = load i32, i32* @y.3, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 1474088414, i32 -368172202
  br label %.backedge

120:                                              ; preds = %10
  %121 = sext i32 %.0113 to i64
  %122 = sext i32 %.0115 to i64
  %123 = getelementptr inbounds [2020 x [2020 x i8]], [2020 x [2020 x i8]]* @mp, i64 0, i64 %121, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = sext i8 %124 to i32
  %126 = add i32 %.0113, -1
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %127, i64 %122
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %.0115, -1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %121, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %127, i64 %131
  %135 = load i32, i32* %134, align 4
  %136 = add nsw i32 %125, -48
  %137 = add i32 %136, %129
  %138 = add i32 %137, %133
  %139 = sub i32 %138, %135
  %140 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %121, i64 %122
  store i32 %139, i32* %140, align 4
  %141 = load i32, i32* @x.2, align 4
  %142 = load i32, i32* @y.3, align 4
  %143 = add i32 %141, -1
  %144 = mul i32 %143, %141
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %147, %146
  %149 = select i1 %148, i32 1049356733, i32 -368172202
  br label %.backedge

150:                                              ; preds = %10
  br label %.backedge

151:                                              ; preds = %10
  %152 = load i32, i32* @x.2, align 4
  %153 = load i32, i32* @y.3, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 2089066036, i32 -1564989263
  br label %.backedge

161:                                              ; preds = %10
  %162 = add i32 %.0115, 1
  %163 = load i32, i32* @x.2, align 4
  %164 = load i32, i32* @y.3, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 43743357, i32 -1564989263
  br label %.backedge

172:                                              ; preds = %10
  br label %.backedge

173:                                              ; preds = %10
  br label %.backedge

174:                                              ; preds = %10
  %175 = add i32 %.0113, 1
  br label %.backedge

176:                                              ; preds = %10
  %177 = load i32, i32* @x.2, align 4
  %178 = load i32, i32* @y.3, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 250143303, i32 765307362
  br label %.backedge

186:                                              ; preds = %10
  %187 = load i32, i32* @x.2, align 4
  %188 = load i32, i32* @y.3, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1929316248, i32 765307362
  br label %.backedge

196:                                              ; preds = %10
  br label %.backedge

197:                                              ; preds = %10
  %198 = load i32, i32* @n, align 4
  %.not139 = icmp sgt i32 %.0117, %198
  %199 = select i1 %.not139, i32 1003092669, i32 579393672
  br label %.backedge

200:                                              ; preds = %10
  br label %.backedge

201:                                              ; preds = %10
  %202 = load i32, i32* @x.2, align 4
  %203 = load i32, i32* @y.3, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 568033901, i32 -1760997478
  br label %.backedge

211:                                              ; preds = %10
  %212 = load i32, i32* @m, align 4
  %213 = icmp sle i32 %.0119, %212
  store i1 %213, i1* %4, align 1
  %214 = load i32, i32* @x.2, align 4
  %215 = load i32, i32* @y.3, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 81066265, i32 -1760997478
  br label %.backedge

223:                                              ; preds = %10
  %.0..0..0.107 = load volatile i1, i1* %4, align 1
  %224 = select i1 %.0..0..0.107, i32 2009781638, i32 267507495
  br label %.backedge

225:                                              ; preds = %10
  %226 = sext i32 %.0117 to i64
  %227 = sext i32 %.0119 to i64
  %228 = getelementptr inbounds [2020 x [2020 x i8]], [2020 x [2020 x i8]]* @mp, i64 0, i64 %226, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = icmp eq i8 %229, 49
  %231 = select i1 %230, i32 1358359563, i32 -1729680504
  br label %.backedge

232:                                              ; preds = %10
  %233 = sext i32 %.0117 to i64
  %234 = add i32 %.0119, -1
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [2020 x [2020 x i8]], [2020 x [2020 x i8]]* @mp, i64 0, i64 %233, i64 %235
  %237 = load i8, i8* %236, align 1
  %238 = icmp eq i8 %237, 49
  %239 = select i1 %238, i32 -999601884, i32 -1729680504
  br label %.backedge

240:                                              ; preds = %10
  %241 = sext i32 %.0117 to i64
  %242 = sext i32 %.0119 to i64
  %243 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @a, i64 0, i64 %241, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %243, align 4
  br label %.backedge

246:                                              ; preds = %10
  br label %.backedge

247:                                              ; preds = %10
  %248 = add i32 %.0119, 1
  br label %.backedge

249:                                              ; preds = %10
  br label %.backedge

250:                                              ; preds = %10
  %251 = add i32 %.0117, 1
  br label %.backedge

252:                                              ; preds = %10
  br label %.backedge

253:                                              ; preds = %10
  %254 = load i32, i32* @x.2, align 4
  %255 = load i32, i32* @y.3, align 4
  %256 = add i32 %254, -1
  %257 = mul i32 %256, %254
  %258 = and i32 %257, 1
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %260, %259
  %262 = select i1 %261, i32 1831422207, i32 -972107898
  br label %.backedge

263:                                              ; preds = %10
  %264 = load i32, i32* @n, align 4
  %265 = icmp sle i32 %.0127, %264
  store i1 %265, i1* %3, align 1
  %266 = load i32, i32* @x.2, align 4
  %267 = load i32, i32* @y.3, align 4
  %268 = add i32 %266, -1
  %269 = mul i32 %268, %266
  %270 = and i32 %269, 1
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %272, %271
  %274 = select i1 %273, i32 -57526241, i32 -972107898
  br label %.backedge

275:                                              ; preds = %10
  %.0..0..0.108 = load volatile i1, i1* %3, align 1
  %276 = select i1 %.0..0..0.108, i32 -1872818814, i32 1879660391
  br label %.backedge

277:                                              ; preds = %10
  %278 = load i32, i32* @x.2, align 4
  %279 = load i32, i32* @y.3, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 -146477908, i32 -462878199
  br label %.backedge

287:                                              ; preds = %10
  %288 = load i32, i32* @x.2, align 4
  %289 = load i32, i32* @y.3, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 1036026644, i32 -462878199
  br label %.backedge

297:                                              ; preds = %10
  br label %.backedge

298:                                              ; preds = %10
  %299 = load i32, i32* @x.2, align 4
  %300 = load i32, i32* @y.3, align 4
  %301 = add i32 %299, -1
  %302 = mul i32 %301, %299
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %305, %304
  %307 = select i1 %306, i32 -720761609, i32 -947028964
  br label %.backedge

308:                                              ; preds = %10
  %309 = load i32, i32* @m, align 4
  %310 = icmp sle i32 %.0125, %309
  store i1 %310, i1* %2, align 1
  %311 = load i32, i32* @x.2, align 4
  %312 = load i32, i32* @y.3, align 4
  %313 = add i32 %311, -1
  %314 = mul i32 %313, %311
  %315 = and i32 %314, 1
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %317, %316
  %319 = select i1 %318, i32 -1097241980, i32 -947028964
  br label %.backedge

320:                                              ; preds = %10
  %.0..0..0.109 = load volatile i1, i1* %2, align 1
  %321 = select i1 %.0..0..0.109, i32 310574637, i32 947704850
  br label %.backedge

322:                                              ; preds = %10
  %323 = sext i32 %.0127 to i64
  %324 = sext i32 %.0125 to i64
  %325 = getelementptr inbounds [2020 x [2020 x i8]], [2020 x [2020 x i8]]* @mp, i64 0, i64 %323, i64 %324
  %326 = load i8, i8* %325, align 1
  %327 = icmp eq i8 %326, 49
  %328 = select i1 %327, i32 -888743630, i32 -315967896
  br label %.backedge

329:                                              ; preds = %10
  %330 = load i32, i32* @x.2, align 4
  %331 = load i32, i32* @y.3, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 -1438081618, i32 -566242443
  br label %.backedge

339:                                              ; preds = %10
  %340 = add i32 %.0127, -1
  %341 = sext i32 %340 to i64
  %342 = sext i32 %.0125 to i64
  %343 = getelementptr inbounds [2020 x [2020 x i8]], [2020 x [2020 x i8]]* @mp, i64 0, i64 %341, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = icmp eq i8 %344, 49
  store i1 %345, i1* %1, align 1
  %346 = load i32, i32* @x.2, align 4
  %347 = load i32, i32* @y.3, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 577086996, i32 -566242443
  br label %.backedge

355:                                              ; preds = %10
  %.0..0..0.110 = load volatile i1, i1* %1, align 1
  %356 = select i1 %.0..0..0.110, i32 1046328020, i32 -315967896
  br label %.backedge

357:                                              ; preds = %10
  %358 = load i32, i32* @x.2, align 4
  %359 = load i32, i32* @y.3, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 1309691476, i32 -1625427424
  br label %.backedge

367:                                              ; preds = %10
  %368 = sext i32 %.0127 to i64
  %369 = sext i32 %.0125 to i64
  %370 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %368, i64 %369
  %371 = load i32, i32* %370, align 4
  %.neg138 = add i32 %371, 1
  store i32 %.neg138, i32* %370, align 4
  %372 = load i32, i32* @x.2, align 4
  %373 = load i32, i32* @y.3, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 952817968, i32 -1625427424
  br label %.backedge

381:                                              ; preds = %10
  br label %.backedge

382:                                              ; preds = %10
  %383 = load i32, i32* @x.2, align 4
  %384 = load i32, i32* @y.3, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 1056470184, i32 868909175
  br label %.backedge

392:                                              ; preds = %10
  %393 = load i32, i32* @x.2, align 4
  %394 = load i32, i32* @y.3, align 4
  %395 = add i32 %393, -1
  %396 = mul i32 %395, %393
  %397 = and i32 %396, 1
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %399, %398
  %401 = select i1 %400, i32 -2041472595, i32 868909175
  br label %.backedge

402:                                              ; preds = %10
  br label %.backedge

403:                                              ; preds = %10
  %404 = add i32 %.0125, 1
  br label %.backedge

405:                                              ; preds = %10
  br label %.backedge

406:                                              ; preds = %10
  %407 = add i32 %.0127, 1
  br label %.backedge

408:                                              ; preds = %10
  %409 = load i32, i32* @x.2, align 4
  %410 = load i32, i32* @y.3, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 151122072, i32 -1677566013
  br label %.backedge

418:                                              ; preds = %10
  %419 = load i32, i32* @x.2, align 4
  %420 = load i32, i32* @y.3, align 4
  %421 = add i32 %419, -1
  %422 = mul i32 %421, %419
  %423 = and i32 %422, 1
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %425, %424
  %427 = select i1 %426, i32 -329803882, i32 -1677566013
  br label %.backedge

428:                                              ; preds = %10
  br label %.backedge

429:                                              ; preds = %10
  %430 = load i32, i32* @n, align 4
  %.not137 = icmp sgt i32 %.0123, %430
  %431 = select i1 %.not137, i32 -803694236, i32 -790196371
  br label %.backedge

432:                                              ; preds = %10
  br label %.backedge

433:                                              ; preds = %10
  %434 = load i32, i32* @m, align 4
  %.not136 = icmp sgt i32 %.0121, %434
  %435 = select i1 %.not136, i32 945700751, i32 1651649622
  br label %.backedge

436:                                              ; preds = %10
  %437 = add i32 %.0123, -1
  %438 = sext i32 %437 to i64
  %439 = sext i32 %.0121 to i64
  %440 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @a, i64 0, i64 %438, i64 %439
  %441 = load i32, i32* %440, align 4
  %442 = sext i32 %.0123 to i64
  %443 = add i32 %.0121, -1
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @a, i64 0, i64 %442, i64 %444
  %446 = load i32, i32* %445, align 4
  %447 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @a, i64 0, i64 %438, i64 %444
  %448 = load i32, i32* %447, align 4
  %449 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @a, i64 0, i64 %442, i64 %439
  %450 = load i32, i32* %449, align 4
  %451 = add i32 %446, %441
  %452 = sub i32 %451, %448
  %453 = add i32 %452, %450
  store i32 %453, i32* %449, align 4
  %454 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %438, i64 %439
  %455 = load i32, i32* %454, align 4
  %456 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %442, i64 %444
  %457 = load i32, i32* %456, align 4
  %458 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %438, i64 %444
  %459 = load i32, i32* %458, align 4
  %460 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %442, i64 %439
  %461 = load i32, i32* %460, align 4
  %462 = add i32 %457, %455
  %463 = sub i32 %462, %459
  %.neg135 = add i32 %463, %461
  store i32 %.neg135, i32* %460, align 4
  br label %.backedge

464:                                              ; preds = %10
  %.neg133 = add i32 %.0121, 1
  br label %.backedge

465:                                              ; preds = %10
  br label %.backedge

466:                                              ; preds = %10
  %467 = add i32 %.0123, 1
  br label %.backedge

468:                                              ; preds = %10
  %469 = load i32, i32* @x.2, align 4
  %470 = load i32, i32* @y.3, align 4
  %471 = add i32 %469, -1
  %472 = mul i32 %471, %469
  %473 = and i32 %472, 1
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %475, %474
  %477 = select i1 %476, i32 -1977207917, i32 -1484872845
  br label %.backedge

478:                                              ; preds = %10
  %479 = load i32, i32* @x.2, align 4
  %480 = load i32, i32* @y.3, align 4
  %481 = add i32 %479, -1
  %482 = mul i32 %481, %479
  %483 = and i32 %482, 1
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %480, 10
  %486 = or i1 %485, %484
  %487 = select i1 %486, i32 1577916040, i32 -1484872845
  br label %.backedge

488:                                              ; preds = %10
  br label %.backedge

489:                                              ; preds = %10
  %490 = load i32, i32* @Q, align 4
  %491 = add i32 %490, -1
  store i32 %491, i32* @Q, align 4
  %.not = icmp eq i32 %490, 0
  %492 = select i1 %.not, i32 2021490046, i32 -1862315799
  br label %.backedge

493:                                              ; preds = %10
  %494 = tail call i32 @_Z4readv()
  %495 = tail call i32 @_Z4readv()
  %496 = tail call i32 @_Z4readv()
  %497 = tail call i32 @_Z4readv()
  %498 = sext i32 %496 to i64
  %499 = sext i32 %497 to i64
  %500 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %498, i64 %499
  %501 = load i32, i32* %500, align 4
  %502 = add i32 %495, -1
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %498, i64 %503
  %505 = load i32, i32* %504, align 4
  %506 = add i32 %494, -1
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %507, i64 %499
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %507, i64 %503
  %511 = load i32, i32* %510, align 4
  %512 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @a, i64 0, i64 %498, i64 %499
  %513 = load i32, i32* %512, align 4
  %514 = sext i32 %495 to i64
  %515 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @a, i64 0, i64 %498, i64 %514
  %516 = load i32, i32* %515, align 4
  %517 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @a, i64 0, i64 %507, i64 %499
  %518 = load i32, i32* %517, align 4
  %519 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @a, i64 0, i64 %507, i64 %514
  %520 = load i32, i32* %519, align 4
  %521 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %498, i64 %499
  %522 = load i32, i32* %521, align 4
  %523 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %498, i64 %503
  %524 = load i32, i32* %523, align 4
  %525 = sext i32 %494 to i64
  %526 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %525, i64 %499
  %527 = load i32, i32* %526, align 4
  %528 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %525, i64 %503
  %529 = load i32, i32* %528, align 4
  %530 = add i32 %505, %509
  %531 = add i32 %501, %511
  %532 = add i32 %530, %513
  %533 = sub i32 %531, %532
  %534 = add i32 %533, %516
  %535 = add i32 %534, %518
  %536 = add i32 %520, %522
  %537 = sub i32 %535, %536
  %538 = add i32 %537, %524
  %539 = add i32 %538, %527
  %540 = sub i32 %539, %529
  %541 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %540)
  br label %.backedge

542:                                              ; preds = %10
  %543 = load i32, i32* @x.2, align 4
  %544 = load i32, i32* @y.3, align 4
  %545 = add i32 %543, -1
  %546 = mul i32 %545, %543
  %547 = and i32 %546, 1
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %549, %548
  %551 = select i1 %550, i32 765875528, i32 1541373243
  br label %.backedge

552:                                              ; preds = %10
  %553 = load i32, i32* @x.2, align 4
  %554 = load i32, i32* @y.3, align 4
  %555 = add i32 %553, -1
  %556 = mul i32 %555, %553
  %557 = and i32 %556, 1
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %554, 10
  %560 = or i1 %559, %558
  %561 = select i1 %560, i32 -1239199902, i32 1541373243
  br label %.backedge

562:                                              ; preds = %10
  ret i32 0

563:                                              ; preds = %10
  %564 = add i32 %.0111, 1
  br label %.backedge

565:                                              ; preds = %10
  br label %.backedge

566:                                              ; preds = %10
  br label %.backedge

567:                                              ; preds = %10
  br label %.backedge

568:                                              ; preds = %10
  %569 = sext i32 %.0113 to i64
  %570 = sext i32 %.0115 to i64
  %571 = getelementptr inbounds [2020 x [2020 x i8]], [2020 x [2020 x i8]]* @mp, i64 0, i64 %569, i64 %570
  %572 = load i8, i8* %571, align 1
  %573 = sext i8 %572 to i32
  %574 = add i32 %.0113, -1
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %575, i64 %570
  %577 = load i32, i32* %576, align 4
  %578 = add i32 %.0115, -1
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %569, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %575, i64 %579
  %583 = load i32, i32* %582, align 4
  %584 = add nsw i32 %573, -48
  %585 = add i32 %584, %577
  %586 = add i32 %585, %581
  %587 = sub i32 %586, %583
  %588 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @s, i64 0, i64 %569, i64 %570
  store i32 %587, i32* %588, align 4
  br label %.backedge

589:                                              ; preds = %10
  %.neg = add i32 %.0115, 1
  br label %.backedge

590:                                              ; preds = %10
  br label %.backedge

591:                                              ; preds = %10
  br label %.backedge

592:                                              ; preds = %10
  br label %.backedge

593:                                              ; preds = %10
  br label %.backedge

594:                                              ; preds = %10
  br label %.backedge

595:                                              ; preds = %10
  br label %.backedge

596:                                              ; preds = %10
  %597 = sext i32 %.0127 to i64
  %598 = sext i32 %.0125 to i64
  %599 = getelementptr inbounds [2020 x [2020 x i32]], [2020 x [2020 x i32]]* @b, i64 0, i64 %597, i64 %598
  %600 = load i32, i32* %599, align 4
  %601 = add i32 %600, 1
  store i32 %601, i32* %599, align 4
  br label %.backedge

602:                                              ; preds = %10
  br label %.backedge

603:                                              ; preds = %10
  br label %.backedge

604:                                              ; preds = %10
  br label %.backedge

605:                                              ; preds = %10
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readv() local_unnamed_addr #0 comdat {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i8*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.4, align 4
  %11 = load i32, i32* @y.5, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %0
  %.030 = phi i32 [ -1705035373, %0 ], [ %.030.be, %.backedge ]
  %.028 = phi i1 [ undef, %0 ], [ %.028.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.030, label %.backedge [
    i32 -1705035373, label %18
    i32 -1104496114, label %21
    i32 -273008029, label %36
    i32 1459308939, label %37
    i32 -595939805, label %41
    i32 -1529584937, label %44
    i32 -1556706403, label %46
    i32 640668329, label %56
    i32 64869738, label %68
    i32 -693899928, label %70
    i32 1242798866, label %71
    i32 182804373, label %74
    i32 937427936, label %75
    i32 -2111883823, label %85
    i32 1714752604, label %97
    i32 1273531496, label %99
    i32 -1609743521, label %109
    i32 508800835, label %121
    i32 969924366, label %122
    i32 1407995777, label %132
    i32 -128693277, label %142
    i32 1100409958, label %144
    i32 1479254455, label %153
    i32 1869119606, label %157
    i32 428926534, label %159
    i32 -986886793, label %160
    i32 1453165735, label %161
    i32 795969286, label %162
  ]

.backedge:                                        ; preds = %17, %162, %161, %160, %159, %157, %144, %142, %132, %122, %121, %109, %99, %97, %85, %75, %74, %71, %70, %68, %56, %46, %44, %41, %37, %36, %21, %18
  %.030.be = phi i32 [ %.030, %17 ], [ 1407995777, %162 ], [ -1609743521, %161 ], [ -2111883823, %160 ], [ 640668329, %159 ], [ -1104496114, %157 ], [ 937427936, %144 ], [ %143, %142 ], [ %141, %132 ], [ %131, %122 ], [ 969924366, %121 ], [ %120, %109 ], [ %108, %99 ], [ %98, %97 ], [ %96, %85 ], [ %84, %75 ], [ 937427936, %74 ], [ 1459308939, %71 ], [ 1242798866, %70 ], [ %69, %68 ], [ %67, %56 ], [ %55, %46 ], [ %45, %44 ], [ -1529584937, %41 ], [ %40, %37 ], [ 1459308939, %36 ], [ %35, %21 ], [ %20, %18 ]
  %.028.be = phi i1 [ %.028, %17 ], [ %.028, %162 ], [ %.028, %161 ], [ %.028, %160 ], [ %.028, %159 ], [ %.028, %157 ], [ %.028, %144 ], [ %.028, %142 ], [ %.028, %132 ], [ %.028, %122 ], [ %.028, %121 ], [ %.028, %109 ], [ %.028, %99 ], [ %.028, %97 ], [ %.028, %85 ], [ %.028, %75 ], [ %.028, %74 ], [ %.028, %71 ], [ %.028, %70 ], [ %.028, %68 ], [ %.028, %56 ], [ %.028, %46 ], [ %.028, %44 ], [ %43, %41 ], [ true, %37 ], [ %.028, %36 ], [ %.028, %21 ], [ %.028, %18 ]
  %.0.be = phi i1 [ %.0, %17 ], [ %.0, %162 ], [ %.0, %161 ], [ %.0, %160 ], [ %.0, %159 ], [ %.0, %157 ], [ %.0, %144 ], [ %.0, %142 ], [ %.0, %132 ], [ %.0, %122 ], [ %.0..0..0.26, %121 ], [ %.0, %109 ], [ %.0, %99 ], [ false, %97 ], [ %.0, %85 ], [ %.0, %75 ], [ %.0, %74 ], [ %.0, %71 ], [ %.0, %70 ], [ %.0, %68 ], [ %.0, %56 ], [ %.0, %46 ], [ %.0, %44 ], [ %.0, %41 ], [ %.0, %37 ], [ %.0, %36 ], [ %.0, %21 ], [ %.0, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0.2 = load volatile i1, i1* %9, align 1
  %.0..0..0.3 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0.2, %.0..0..0.3
  %20 = select i1 %19, i32 -1104496114, i32 1869119606
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i32, align 4
  store i32* %22, i32** %7, align 8
  %23 = alloca i32, align 4
  store i32* %23, i32** %6, align 8
  %24 = alloca i8, align 1
  store i8* %24, i8** %5, align 8
  %.0..0..0.4 = load volatile i32*, i32** %7, align 8
  store i32 0, i32* %.0..0..0.4, align 4
  %.0..0..0.9 = load volatile i32*, i32** %6, align 8
  store i32 1, i32* %.0..0..0.9, align 4
  %25 = call i32 @getchar()
  %26 = trunc i32 %25 to i8
  %.0..0..0.12 = load volatile i8*, i8** %5, align 8
  store i8 %26, i8* %.0..0..0.12, align 1
  %27 = load i32, i32* @x.4, align 4
  %28 = load i32, i32* @y.5, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -273008029, i32 1869119606
  br label %.backedge

36:                                               ; preds = %17
  br label %.backedge

37:                                               ; preds = %17
  %.0..0..0.13 = load volatile i8*, i8** %5, align 8
  %38 = load i8, i8* %.0..0..0.13, align 1
  %39 = icmp slt i8 %38, 48
  %40 = select i1 %39, i32 -1529584937, i32 -595939805
  br label %.backedge

41:                                               ; preds = %17
  %.0..0..0.14 = load volatile i8*, i8** %5, align 8
  %42 = load i8, i8* %.0..0..0.14, align 1
  %43 = icmp sgt i8 %42, 57
  br label %.backedge

44:                                               ; preds = %17
  %45 = select i1 %.028, i32 -1556706403, i32 182804373
  br label %.backedge

46:                                               ; preds = %17
  %47 = load i32, i32* @x.4, align 4
  %48 = load i32, i32* @y.5, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 640668329, i32 428926534
  br label %.backedge

56:                                               ; preds = %17
  %.0..0..0.15 = load volatile i8*, i8** %5, align 8
  %57 = load i8, i8* %.0..0..0.15, align 1
  %58 = icmp eq i8 %57, 45
  store i1 %58, i1* %4, align 1
  %59 = load i32, i32* @x.4, align 4
  %60 = load i32, i32* @y.5, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 64869738, i32 428926534
  br label %.backedge

68:                                               ; preds = %17
  %.0..0..0.24 = load volatile i1, i1* %4, align 1
  %69 = select i1 %.0..0..0.24, i32 -693899928, i32 1242798866
  br label %.backedge

70:                                               ; preds = %17
  %.0..0..0.10 = load volatile i32*, i32** %6, align 8
  store i32 -1, i32* %.0..0..0.10, align 4
  br label %.backedge

71:                                               ; preds = %17
  %72 = call i32 @getchar()
  %73 = trunc i32 %72 to i8
  %.0..0..0.16 = load volatile i8*, i8** %5, align 8
  store i8 %73, i8* %.0..0..0.16, align 1
  br label %.backedge

74:                                               ; preds = %17
  br label %.backedge

75:                                               ; preds = %17
  %76 = load i32, i32* @x.4, align 4
  %77 = load i32, i32* @y.5, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 -2111883823, i32 -986886793
  br label %.backedge

85:                                               ; preds = %17
  %.0..0..0.17 = load volatile i8*, i8** %5, align 8
  %86 = load i8, i8* %.0..0..0.17, align 1
  %87 = icmp sgt i8 %86, 47
  store i1 %87, i1* %3, align 1
  %88 = load i32, i32* @x.4, align 4
  %89 = load i32, i32* @y.5, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 1714752604, i32 -986886793
  br label %.backedge

97:                                               ; preds = %17
  %.0..0..0.25 = load volatile i1, i1* %3, align 1
  %98 = select i1 %.0..0..0.25, i32 1273531496, i32 969924366
  br label %.backedge

99:                                               ; preds = %17
  %100 = load i32, i32* @x.4, align 4
  %101 = load i32, i32* @y.5, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 -1609743521, i32 1453165735
  br label %.backedge

109:                                              ; preds = %17
  %.0..0..0.18 = load volatile i8*, i8** %5, align 8
  %110 = load i8, i8* %.0..0..0.18, align 1
  %111 = icmp slt i8 %110, 58
  store i1 %111, i1* %2, align 1
  %112 = load i32, i32* @x.4, align 4
  %113 = load i32, i32* @y.5, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 508800835, i32 1453165735
  br label %.backedge

121:                                              ; preds = %17
  %.0..0..0.26 = load volatile i1, i1* %2, align 1
  br label %.backedge

122:                                              ; preds = %17
  store i1 %.0, i1* %1, align 1
  %123 = load i32, i32* @x.4, align 4
  %124 = load i32, i32* @y.5, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 1407995777, i32 795969286
  br label %.backedge

132:                                              ; preds = %17
  %133 = load i32, i32* @x.4, align 4
  %134 = load i32, i32* @y.5, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 -128693277, i32 795969286
  br label %.backedge

142:                                              ; preds = %17
  %.0..0..0.27 = load volatile i1, i1* %1, align 1
  %143 = select i1 %.0..0..0.27, i32 1100409958, i32 1479254455
  br label %.backedge

144:                                              ; preds = %17
  %.0..0..0.5 = load volatile i32*, i32** %7, align 8
  %145 = load i32, i32* %.0..0..0.5, align 4
  %.neg.neg = shl i32 %145, 3
  %.0..0..0.6 = load volatile i32*, i32** %7, align 8
  %146 = load i32, i32* %.0..0..0.6, align 4
  %.neg32.neg = shl i32 %146, 1
  %.0..0..0.19 = load volatile i8*, i8** %5, align 8
  %147 = load i8, i8* %.0..0..0.19, align 1
  %148 = sext i8 %147 to i32
  %.neg33 = add i32 %.neg.neg, -48
  %149 = add i32 %.neg33, %.neg32.neg
  %150 = add i32 %149, %148
  %.0..0..0.7 = load volatile i32*, i32** %7, align 8
  store i32 %150, i32* %.0..0..0.7, align 4
  %151 = call i32 @getchar()
  %152 = trunc i32 %151 to i8
  %.0..0..0.20 = load volatile i8*, i8** %5, align 8
  store i8 %152, i8* %.0..0..0.20, align 1
  br label %.backedge

153:                                              ; preds = %17
  %.0..0..0.8 = load volatile i32*, i32** %7, align 8
  %154 = load i32, i32* %.0..0..0.8, align 4
  %.0..0..0.11 = load volatile i32*, i32** %6, align 8
  %155 = load i32, i32* %.0..0..0.11, align 4
  %156 = mul nsw i32 %155, %154
  ret i32 %156

157:                                              ; preds = %17
  %158 = call i32 @getchar()
  br label %.backedge

159:                                              ; preds = %17
  %.0..0..0.21 = load volatile i8*, i8** %5, align 8
  br label %.backedge

160:                                              ; preds = %17
  %.0..0..0.22 = load volatile i8*, i8** %5, align 8
  br label %.backedge

161:                                              ; preds = %17
  %.0..0..0.23 = load volatile i8*, i8** %5, align 8
  br label %.backedge

162:                                              ; preds = %17
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s082760848.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
