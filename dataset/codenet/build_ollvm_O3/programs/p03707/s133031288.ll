; ModuleID = 'build_ollvm/programs/p03707/s133031288.ll'
source_filename = "Project_CodeNet_C++1400/p03707/s133031288.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@rui1 = global [2010 x [2010 x i32]] zeroinitializer, align 16
@rui2 = global [2010 x [2010 x i32]] zeroinitializer, align 16
@rui3 = global [2010 x [2010 x i32]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s133031288.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define i32 @_Z3getPA2010_iiiii([2010 x i32]* nocapture readonly %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #4 {
  %6 = sext i32 %3 to i64
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [2010 x i32], [2010 x i32]* %0, i64 %6, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %2, -1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [2010 x i32], [2010 x i32]* %0, i64 %6, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %1, -1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [2010 x i32], [2010 x i32]* %0, i64 %15, i64 %7
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds [2010 x i32], [2010 x i32]* %0, i64 %15, i64 %11
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %13, %17
  %21 = sub i32 %9, %20
  %22 = add i32 %21, %19
  ret i32 %22
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define void @_Z3ruiPA2010_iii([2010 x i32]* nocapture %0, i32 %1, i32 %2) local_unnamed_addr #5 {
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  br label %6

6:                                                ; preds = %.backedge, %3
  %.037 = phi i32 [ 0, %3 ], [ %.037.be, %.backedge ]
  %.035 = phi i32 [ undef, %3 ], [ %.035.be, %.backedge ]
  %.033 = phi i32 [ undef, %3 ], [ %.033.be, %.backedge ]
  %.031 = phi i32 [ undef, %3 ], [ %.031.be, %.backedge ]
  %.0 = phi i32 [ 674920763, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 674920763, label %7
    i32 582136899, label %9
    i32 -666752202, label %10
    i32 1315393724, label %12
    i32 1888542432, label %22
    i32 597463166, label %24
    i32 -1323652185, label %25
    i32 1972945120, label %35
    i32 -818908761, label %45
    i32 1268790544, label %46
    i32 1294440855, label %56
    i32 1818683995, label %66
    i32 1762038465, label %67
    i32 2130611226, label %77
    i32 -181923903, label %88
    i32 -105964411, label %90
    i32 1519207859, label %91
    i32 1774313164, label %101
    i32 99930934, label %112
    i32 772824558, label %114
    i32 1261795485, label %124
    i32 -525873885, label %125
    i32 207684487, label %126
    i32 359596574, label %127
    i32 1577830382, label %128
    i32 -1278719889, label %130
    i32 -316871463, label %131
    i32 721414442, label %132
  ]

.backedge:                                        ; preds = %6, %132, %131, %130, %128, %126, %125, %124, %114, %112, %101, %91, %90, %88, %77, %67, %66, %56, %46, %45, %35, %25, %24, %22, %12, %10, %9, %7
  %.037.be = phi i32 [ %.037, %6 ], [ %.037, %132 ], [ %.037, %131 ], [ %.037, %130 ], [ %129, %128 ], [ %.037, %126 ], [ %.037, %125 ], [ %.037, %124 ], [ %.037, %114 ], [ %.037, %112 ], [ %.037, %101 ], [ %.037, %91 ], [ %.037, %90 ], [ %.037, %88 ], [ %.037, %77 ], [ %.037, %67 ], [ %.037, %66 ], [ %.037, %56 ], [ %.037, %46 ], [ %.037, %45 ], [ %.neg40, %35 ], [ %.037, %25 ], [ %.037, %24 ], [ %.037, %22 ], [ %.037, %12 ], [ %.037, %10 ], [ %.037, %9 ], [ %.037, %7 ]
  %.035.be = phi i32 [ %.035, %6 ], [ %.035, %132 ], [ %.035, %131 ], [ %.035, %130 ], [ %.035, %128 ], [ %.035, %126 ], [ %.035, %125 ], [ %.035, %124 ], [ %.035, %114 ], [ %.035, %112 ], [ %.035, %101 ], [ %.035, %91 ], [ %.035, %90 ], [ %.035, %88 ], [ %.035, %77 ], [ %.035, %67 ], [ %.035, %66 ], [ %.035, %56 ], [ %.035, %46 ], [ %.035, %45 ], [ %.035, %35 ], [ %.035, %25 ], [ %.035, %24 ], [ %23, %22 ], [ %.035, %12 ], [ %.035, %10 ], [ 0, %9 ], [ %.035, %7 ]
  %.033.be = phi i32 [ %.033, %6 ], [ %.033, %132 ], [ %.033, %131 ], [ 0, %130 ], [ %.033, %128 ], [ %.neg, %126 ], [ %.033, %125 ], [ %.033, %124 ], [ %.033, %114 ], [ %.033, %112 ], [ %.033, %101 ], [ %.033, %91 ], [ %.033, %90 ], [ %.033, %88 ], [ %.033, %77 ], [ %.033, %67 ], [ %.033, %66 ], [ 0, %56 ], [ %.033, %46 ], [ %.033, %45 ], [ %.033, %35 ], [ %.033, %25 ], [ %.033, %24 ], [ %.033, %22 ], [ %.033, %12 ], [ %.033, %10 ], [ %.033, %9 ], [ %.033, %7 ]
  %.031.be = phi i32 [ %.031, %6 ], [ %.031, %132 ], [ %.031, %131 ], [ %.031, %130 ], [ %.031, %128 ], [ %.031, %126 ], [ %.031, %125 ], [ %.neg39, %124 ], [ %.031, %114 ], [ %.031, %112 ], [ %.031, %101 ], [ %.031, %91 ], [ 0, %90 ], [ %.031, %88 ], [ %.031, %77 ], [ %.031, %67 ], [ %.031, %66 ], [ %.031, %56 ], [ %.031, %46 ], [ %.031, %45 ], [ %.031, %35 ], [ %.031, %25 ], [ %.031, %24 ], [ %.031, %22 ], [ %.031, %12 ], [ %.031, %10 ], [ %.031, %9 ], [ %.031, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ 1774313164, %132 ], [ 2130611226, %131 ], [ 1294440855, %130 ], [ 1972945120, %128 ], [ 1762038465, %126 ], [ 207684487, %125 ], [ 1519207859, %124 ], [ 1261795485, %114 ], [ %113, %112 ], [ %111, %101 ], [ %100, %91 ], [ 1519207859, %90 ], [ %89, %88 ], [ %87, %77 ], [ %76, %67 ], [ 1762038465, %66 ], [ %65, %56 ], [ %55, %46 ], [ 674920763, %45 ], [ %44, %35 ], [ %34, %25 ], [ -1323652185, %24 ], [ -666752202, %22 ], [ 1888542432, %12 ], [ %11, %10 ], [ -666752202, %9 ], [ %8, %7 ]
  br label %6

7:                                                ; preds = %6
  %.not41 = icmp sgt i32 %.037, %1
  %8 = select i1 %.not41, i32 1268790544, i32 582136899
  br label %.backedge

9:                                                ; preds = %6
  br label %.backedge

10:                                               ; preds = %6
  %.not = icmp sgt i32 %.035, %2
  %11 = select i1 %.not, i32 597463166, i32 1315393724
  br label %.backedge

12:                                               ; preds = %6
  %13 = sext i32 %.037 to i64
  %14 = sext i32 %.035 to i64
  %15 = getelementptr inbounds [2010 x i32], [2010 x i32]* %0, i64 %13, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %.035, 1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [2010 x i32], [2010 x i32]* %0, i64 %13, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, %16
  store i32 %21, i32* %19, align 4
  br label %.backedge

22:                                               ; preds = %6
  %23 = add i32 %.035, 1
  br label %.backedge

24:                                               ; preds = %6
  br label %.backedge

25:                                               ; preds = %6
  %26 = load i32, i32* @x.3, align 4
  %27 = load i32, i32* @y.4, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 1972945120, i32 1577830382
  br label %.backedge

35:                                               ; preds = %6
  %.neg40 = add i32 %.037, 1
  %36 = load i32, i32* @x.3, align 4
  %37 = load i32, i32* @y.4, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 -818908761, i32 1577830382
  br label %.backedge

45:                                               ; preds = %6
  br label %.backedge

46:                                               ; preds = %6
  %47 = load i32, i32* @x.3, align 4
  %48 = load i32, i32* @y.4, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 1294440855, i32 -1278719889
  br label %.backedge

56:                                               ; preds = %6
  %57 = load i32, i32* @x.3, align 4
  %58 = load i32, i32* @y.4, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 1818683995, i32 -1278719889
  br label %.backedge

66:                                               ; preds = %6
  br label %.backedge

67:                                               ; preds = %6
  %68 = load i32, i32* @x.3, align 4
  %69 = load i32, i32* @y.4, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 2130611226, i32 -316871463
  br label %.backedge

77:                                               ; preds = %6
  %78 = icmp sle i32 %.033, %1
  store i1 %78, i1* %5, align 1
  %79 = load i32, i32* @x.3, align 4
  %80 = load i32, i32* @y.4, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 -181923903, i32 -316871463
  br label %.backedge

88:                                               ; preds = %6
  %.0..0..0.29 = load volatile i1, i1* %5, align 1
  %89 = select i1 %.0..0..0.29, i32 -105964411, i32 359596574
  br label %.backedge

90:                                               ; preds = %6
  br label %.backedge

91:                                               ; preds = %6
  %92 = load i32, i32* @x.3, align 4
  %93 = load i32, i32* @y.4, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 1774313164, i32 721414442
  br label %.backedge

101:                                              ; preds = %6
  %102 = icmp sle i32 %.031, %2
  store i1 %102, i1* %4, align 1
  %103 = load i32, i32* @x.3, align 4
  %104 = load i32, i32* @y.4, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 99930934, i32 721414442
  br label %.backedge

112:                                              ; preds = %6
  %.0..0..0.30 = load volatile i1, i1* %4, align 1
  %113 = select i1 %.0..0..0.30, i32 772824558, i32 -525873885
  br label %.backedge

114:                                              ; preds = %6
  %115 = sext i32 %.033 to i64
  %116 = sext i32 %.031 to i64
  %117 = getelementptr inbounds [2010 x i32], [2010 x i32]* %0, i64 %115, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %.033, 1
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [2010 x i32], [2010 x i32]* %0, i64 %120, i64 %116
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, %118
  store i32 %123, i32* %121, align 4
  br label %.backedge

124:                                              ; preds = %6
  %.neg39 = add i32 %.031, 1
  br label %.backedge

125:                                              ; preds = %6
  br label %.backedge

126:                                              ; preds = %6
  %.neg = add i32 %.033, 1
  br label %.backedge

127:                                              ; preds = %6
  ret void

128:                                              ; preds = %6
  %129 = add i32 %.037, 1
  br label %.backedge

130:                                              ; preds = %6
  br label %.backedge

131:                                              ; preds = %6
  br label %.backedge

132:                                              ; preds = %6
  br label %.backedge
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #6 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [2010 x [2010 x i8]], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %16 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %15, i32* nonnull dereferenceable(4) %8)
  %17 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %16, i32* nonnull dereferenceable(4) %9)
  br label %18

18:                                               ; preds = %.backedge, %0
  %.067 = phi i32 [ 0, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ -1453941714, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i1 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.053, label %.backedge [
    i32 -1453941714, label %19
    i32 1025315962, label %23
    i32 -1660242438, label %27
    i32 -302725581, label %37
    i32 -1687664441, label %49
    i32 -1532204070, label %51
    i32 341013612, label %63
    i32 1222743570, label %73
    i32 -982997412, label %83
    i32 1104554530, label %84
    i32 1173164758, label %85
    i32 240526989, label %86
    i32 129674293, label %87
    i32 -1226923432, label %91
    i32 -15367787, label %92
    i32 2124456354, label %96
    i32 2115815293, label %106
    i32 1246083975, label %122
    i32 -1075350184, label %124
    i32 1779019902, label %134
    i32 2124245910, label %149
    i32 956154892, label %150
    i32 1562115409, label %157
    i32 607936516, label %158
    i32 -214696794, label %159
    i32 1260712438, label %169
    i32 1800966294, label %180
    i32 -471206795, label %181
    i32 -911365450, label %182
    i32 462781661, label %186
    i32 1179754444, label %187
    i32 1511216556, label %197
    i32 -1600762598, label %209
    i32 883599011, label %211
    i32 2143964640, label %219
    i32 1404655557, label %229
    i32 909592065, label %244
    i32 1410108462, label %245
    i32 -1655056337, label %251
    i32 -145742763, label %261
    i32 -1026265964, label %272
    i32 -186159911, label %273
    i32 2068399240, label %283
    i32 -1240583513, label %293
    i32 -600891163, label %294
    i32 382621905, label %296
    i32 475293188, label %303
    i32 1353063971, label %313
    i32 1266412135, label %325
    i32 -1868368814, label %327
    i32 -1323791312, label %337
    i32 -308830845, label %363
    i32 -72387636, label %364
    i32 1333610445, label %366
    i32 -1948778289, label %367
    i32 -1298168924, label %368
    i32 1903152798, label %369
    i32 -1538312914, label %370
    i32 -1901011483, label %371
    i32 1518684286, label %373
    i32 833846761, label %374
    i32 1746976666, label %375
    i32 2055208679, label %377
    i32 -1352059265, label %378
    i32 -1347739812, label %379
  ]

.backedge:                                        ; preds = %18, %379, %378, %377, %375, %374, %373, %371, %370, %369, %368, %367, %364, %363, %337, %327, %325, %313, %303, %296, %294, %293, %283, %273, %272, %261, %251, %245, %244, %229, %219, %211, %209, %197, %187, %186, %182, %181, %180, %169, %159, %158, %157, %150, %149, %134, %124, %122, %106, %96, %92, %91, %87, %86, %85, %84, %83, %73, %63, %51, %49, %37, %27, %23, %19
  %.067.be = phi i32 [ %.067, %18 ], [ %.067, %379 ], [ %.067, %378 ], [ %.067, %377 ], [ %.067, %375 ], [ %.067, %374 ], [ %.067, %373 ], [ %.067, %371 ], [ %.067, %370 ], [ %.067, %369 ], [ %.067, %368 ], [ %.067, %367 ], [ %.067, %364 ], [ %.067, %363 ], [ %.067, %337 ], [ %.067, %327 ], [ %.067, %325 ], [ %.067, %313 ], [ %.067, %303 ], [ %.067, %296 ], [ %.067, %294 ], [ %.067, %293 ], [ %.067, %283 ], [ %.067, %273 ], [ %.067, %272 ], [ %.067, %261 ], [ %.067, %251 ], [ %.067, %245 ], [ %.067, %244 ], [ %.067, %229 ], [ %.067, %219 ], [ %.067, %211 ], [ %.067, %209 ], [ %.067, %197 ], [ %.067, %187 ], [ %.067, %186 ], [ %.067, %182 ], [ %.067, %181 ], [ %.067, %180 ], [ %.067, %169 ], [ %.067, %159 ], [ %.067, %158 ], [ %.067, %157 ], [ %.067, %150 ], [ %.067, %149 ], [ %.067, %134 ], [ %.067, %124 ], [ %.067, %122 ], [ %.067, %106 ], [ %.067, %96 ], [ %.067, %92 ], [ %.067, %91 ], [ %.067, %87 ], [ %.067, %86 ], [ %.neg72, %85 ], [ %.067, %84 ], [ %.067, %83 ], [ %.067, %73 ], [ %.067, %63 ], [ %.067, %51 ], [ %.067, %49 ], [ %.067, %37 ], [ %.067, %27 ], [ %.067, %23 ], [ %.067, %19 ]
  %.065.be = phi i32 [ %.065, %18 ], [ %.065, %379 ], [ %.065, %378 ], [ %.065, %377 ], [ %.065, %375 ], [ %.065, %374 ], [ %.065, %373 ], [ %.065, %371 ], [ %.065, %370 ], [ %.065, %369 ], [ %.neg, %368 ], [ %.065, %367 ], [ %.065, %364 ], [ %.065, %363 ], [ %.065, %337 ], [ %.065, %327 ], [ %.065, %325 ], [ %.065, %313 ], [ %.065, %303 ], [ %.065, %296 ], [ %.065, %294 ], [ %.065, %293 ], [ %.065, %283 ], [ %.065, %273 ], [ %.065, %272 ], [ %.065, %261 ], [ %.065, %251 ], [ %.065, %245 ], [ %.065, %244 ], [ %.065, %229 ], [ %.065, %219 ], [ %.065, %211 ], [ %.065, %209 ], [ %.065, %197 ], [ %.065, %187 ], [ %.065, %186 ], [ %.065, %182 ], [ %.065, %181 ], [ %.065, %180 ], [ %.065, %169 ], [ %.065, %159 ], [ %.065, %158 ], [ %.065, %157 ], [ %.065, %150 ], [ %.065, %149 ], [ %.065, %134 ], [ %.065, %124 ], [ %.065, %122 ], [ %.065, %106 ], [ %.065, %96 ], [ %.065, %92 ], [ %.065, %91 ], [ %.065, %87 ], [ %.065, %86 ], [ %.065, %85 ], [ %.065, %84 ], [ %.065, %83 ], [ %.neg73, %73 ], [ %.065, %63 ], [ %.065, %51 ], [ %.065, %49 ], [ %.065, %37 ], [ %.065, %27 ], [ 0, %23 ], [ %.065, %19 ]
  %.063.be = phi i32 [ %.063, %18 ], [ %.063, %379 ], [ %.063, %378 ], [ %.063, %377 ], [ %.063, %375 ], [ %.063, %374 ], [ %.063, %373 ], [ %372, %371 ], [ %.063, %370 ], [ %.063, %369 ], [ %.063, %368 ], [ %.063, %367 ], [ %.063, %364 ], [ %.063, %363 ], [ %.063, %337 ], [ %.063, %327 ], [ %.063, %325 ], [ %.063, %313 ], [ %.063, %303 ], [ %.063, %296 ], [ %.063, %294 ], [ %.063, %293 ], [ %.063, %283 ], [ %.063, %273 ], [ %.063, %272 ], [ %.063, %261 ], [ %.063, %251 ], [ %.063, %245 ], [ %.063, %244 ], [ %.063, %229 ], [ %.063, %219 ], [ %.063, %211 ], [ %.063, %209 ], [ %.063, %197 ], [ %.063, %187 ], [ %.063, %186 ], [ %.063, %182 ], [ %.063, %181 ], [ %.063, %180 ], [ %170, %169 ], [ %.063, %159 ], [ %.063, %158 ], [ %.063, %157 ], [ %.063, %150 ], [ %.063, %149 ], [ %.063, %134 ], [ %.063, %124 ], [ %.063, %122 ], [ %.063, %106 ], [ %.063, %96 ], [ %.063, %92 ], [ %.063, %91 ], [ %.063, %87 ], [ 0, %86 ], [ %.063, %85 ], [ %.063, %84 ], [ %.063, %83 ], [ %.063, %73 ], [ %.063, %63 ], [ %.063, %51 ], [ %.063, %49 ], [ %.063, %37 ], [ %.063, %27 ], [ %.063, %23 ], [ %.063, %19 ]
  %.061.be = phi i32 [ %.061, %18 ], [ %.061, %379 ], [ %.061, %378 ], [ %.061, %377 ], [ %.061, %375 ], [ %.061, %374 ], [ %.061, %373 ], [ %.061, %371 ], [ %.061, %370 ], [ %.061, %369 ], [ %.061, %368 ], [ %.061, %367 ], [ %.061, %364 ], [ %.061, %363 ], [ %.061, %337 ], [ %.061, %327 ], [ %.061, %325 ], [ %.061, %313 ], [ %.061, %303 ], [ %.061, %296 ], [ %.061, %294 ], [ %.061, %293 ], [ %.061, %283 ], [ %.061, %273 ], [ %.061, %272 ], [ %.061, %261 ], [ %.061, %251 ], [ %.061, %245 ], [ %.061, %244 ], [ %.061, %229 ], [ %.061, %219 ], [ %.061, %211 ], [ %.061, %209 ], [ %.061, %197 ], [ %.061, %187 ], [ %.061, %186 ], [ %.061, %182 ], [ %.061, %181 ], [ %.061, %180 ], [ %.061, %169 ], [ %.061, %159 ], [ %.061, %158 ], [ %.neg71, %157 ], [ %.061, %150 ], [ %.061, %149 ], [ %.061, %134 ], [ %.061, %124 ], [ %.061, %122 ], [ %.061, %106 ], [ %.061, %96 ], [ %.061, %92 ], [ 1, %91 ], [ %.061, %87 ], [ %.061, %86 ], [ %.061, %85 ], [ %.061, %84 ], [ %.061, %83 ], [ %.061, %73 ], [ %.061, %63 ], [ %.061, %51 ], [ %.061, %49 ], [ %.061, %37 ], [ %.061, %27 ], [ %.061, %23 ], [ %.061, %19 ]
  %.059.be = phi i32 [ %.059, %18 ], [ %.059, %379 ], [ %.059, %378 ], [ %.059, %377 ], [ %.059, %375 ], [ %.059, %374 ], [ %.059, %373 ], [ %.059, %371 ], [ %.059, %370 ], [ %.059, %369 ], [ %.059, %368 ], [ %.059, %367 ], [ %.059, %364 ], [ %.059, %363 ], [ %.059, %337 ], [ %.059, %327 ], [ %.059, %325 ], [ %.059, %313 ], [ %.059, %303 ], [ %.059, %296 ], [ %295, %294 ], [ %.059, %293 ], [ %.059, %283 ], [ %.059, %273 ], [ %.059, %272 ], [ %.059, %261 ], [ %.059, %251 ], [ %.059, %245 ], [ %.059, %244 ], [ %.059, %229 ], [ %.059, %219 ], [ %.059, %211 ], [ %.059, %209 ], [ %.059, %197 ], [ %.059, %187 ], [ %.059, %186 ], [ %.059, %182 ], [ 1, %181 ], [ %.059, %180 ], [ %.059, %169 ], [ %.059, %159 ], [ %.059, %158 ], [ %.059, %157 ], [ %.059, %150 ], [ %.059, %149 ], [ %.059, %134 ], [ %.059, %124 ], [ %.059, %122 ], [ %.059, %106 ], [ %.059, %96 ], [ %.059, %92 ], [ %.059, %91 ], [ %.059, %87 ], [ %.059, %86 ], [ %.059, %85 ], [ %.059, %84 ], [ %.059, %83 ], [ %.059, %73 ], [ %.059, %63 ], [ %.059, %51 ], [ %.059, %49 ], [ %.059, %37 ], [ %.059, %27 ], [ %.059, %23 ], [ %.059, %19 ]
  %.057.be = phi i32 [ %.057, %18 ], [ %.057, %379 ], [ %.057, %378 ], [ %.057, %377 ], [ %376, %375 ], [ %.057, %374 ], [ %.057, %373 ], [ %.057, %371 ], [ %.057, %370 ], [ %.057, %369 ], [ %.057, %368 ], [ %.057, %367 ], [ %.057, %364 ], [ %.057, %363 ], [ %.057, %337 ], [ %.057, %327 ], [ %.057, %325 ], [ %.057, %313 ], [ %.057, %303 ], [ %.057, %296 ], [ %.057, %294 ], [ %.057, %293 ], [ %.057, %283 ], [ %.057, %273 ], [ %.057, %272 ], [ %262, %261 ], [ %.057, %251 ], [ %.057, %245 ], [ %.057, %244 ], [ %.057, %229 ], [ %.057, %219 ], [ %.057, %211 ], [ %.057, %209 ], [ %.057, %197 ], [ %.057, %187 ], [ 0, %186 ], [ %.057, %182 ], [ %.057, %181 ], [ %.057, %180 ], [ %.057, %169 ], [ %.057, %159 ], [ %.057, %158 ], [ %.057, %157 ], [ %.057, %150 ], [ %.057, %149 ], [ %.057, %134 ], [ %.057, %124 ], [ %.057, %122 ], [ %.057, %106 ], [ %.057, %96 ], [ %.057, %92 ], [ %.057, %91 ], [ %.057, %87 ], [ %.057, %86 ], [ %.057, %85 ], [ %.057, %84 ], [ %.057, %83 ], [ %.057, %73 ], [ %.057, %63 ], [ %.057, %51 ], [ %.057, %49 ], [ %.057, %37 ], [ %.057, %27 ], [ %.057, %23 ], [ %.057, %19 ]
  %.055.be = phi i32 [ %.055, %18 ], [ %.055, %379 ], [ %.055, %378 ], [ %.055, %377 ], [ %.055, %375 ], [ %.055, %374 ], [ %.055, %373 ], [ %.055, %371 ], [ %.055, %370 ], [ %.055, %369 ], [ %.055, %368 ], [ %.055, %367 ], [ %365, %364 ], [ %.055, %363 ], [ %.055, %337 ], [ %.055, %327 ], [ %.055, %325 ], [ %.055, %313 ], [ %.055, %303 ], [ 0, %296 ], [ %.055, %294 ], [ %.055, %293 ], [ %.055, %283 ], [ %.055, %273 ], [ %.055, %272 ], [ %.055, %261 ], [ %.055, %251 ], [ %.055, %245 ], [ %.055, %244 ], [ %.055, %229 ], [ %.055, %219 ], [ %.055, %211 ], [ %.055, %209 ], [ %.055, %197 ], [ %.055, %187 ], [ %.055, %186 ], [ %.055, %182 ], [ %.055, %181 ], [ %.055, %180 ], [ %.055, %169 ], [ %.055, %159 ], [ %.055, %158 ], [ %.055, %157 ], [ %.055, %150 ], [ %.055, %149 ], [ %.055, %134 ], [ %.055, %124 ], [ %.055, %122 ], [ %.055, %106 ], [ %.055, %96 ], [ %.055, %92 ], [ %.055, %91 ], [ %.055, %87 ], [ %.055, %86 ], [ %.055, %85 ], [ %.055, %84 ], [ %.055, %83 ], [ %.055, %73 ], [ %.055, %63 ], [ %.055, %51 ], [ %.055, %49 ], [ %.055, %37 ], [ %.055, %27 ], [ %.055, %23 ], [ %.055, %19 ]
  %.053.be = phi i32 [ %.053, %18 ], [ -1323791312, %379 ], [ 1353063971, %378 ], [ 2068399240, %377 ], [ -145742763, %375 ], [ 1404655557, %374 ], [ 1511216556, %373 ], [ 1260712438, %371 ], [ 1779019902, %370 ], [ 2115815293, %369 ], [ 1222743570, %368 ], [ -302725581, %367 ], [ 475293188, %364 ], [ -72387636, %363 ], [ %362, %337 ], [ %336, %327 ], [ %326, %325 ], [ %324, %313 ], [ %312, %303 ], [ 475293188, %296 ], [ -911365450, %294 ], [ -600891163, %293 ], [ %292, %283 ], [ %282, %273 ], [ 1179754444, %272 ], [ %271, %261 ], [ %260, %251 ], [ -1655056337, %245 ], [ 1410108462, %244 ], [ %243, %229 ], [ %228, %219 ], [ %218, %211 ], [ %210, %209 ], [ %208, %197 ], [ %196, %187 ], [ 1179754444, %186 ], [ %185, %182 ], [ -911365450, %181 ], [ 129674293, %180 ], [ %179, %169 ], [ %168, %159 ], [ -214696794, %158 ], [ -15367787, %157 ], [ 1562115409, %150 ], [ 956154892, %149 ], [ %148, %134 ], [ %133, %124 ], [ %123, %122 ], [ %121, %106 ], [ %105, %96 ], [ %95, %92 ], [ -15367787, %91 ], [ %90, %87 ], [ 129674293, %86 ], [ -1453941714, %85 ], [ 1173164758, %84 ], [ -1660242438, %83 ], [ %82, %73 ], [ %72, %63 ], [ 341013612, %51 ], [ %50, %49 ], [ %48, %37 ], [ %36, %27 ], [ -1660242438, %23 ], [ %22, %19 ]
  %.051.be = phi i1 [ %.051, %18 ], [ %.051, %379 ], [ %.051, %378 ], [ %.051, %377 ], [ %.051, %375 ], [ %.051, %374 ], [ %.051, %373 ], [ %.051, %371 ], [ %.051, %370 ], [ %.051, %369 ], [ %.051, %368 ], [ %.051, %367 ], [ %.051, %364 ], [ %.051, %363 ], [ %.051, %337 ], [ %.051, %327 ], [ %.051, %325 ], [ %.051, %313 ], [ %.051, %303 ], [ %.051, %296 ], [ %.051, %294 ], [ %.051, %293 ], [ %.051, %283 ], [ %.051, %273 ], [ %.051, %272 ], [ %.051, %261 ], [ %.051, %251 ], [ %.051, %245 ], [ %.051, %244 ], [ %.051, %229 ], [ %.051, %219 ], [ %.051, %211 ], [ %.051, %209 ], [ %.051, %197 ], [ %.051, %187 ], [ %.051, %186 ], [ %.051, %182 ], [ %.051, %181 ], [ %.051, %180 ], [ %.051, %169 ], [ %.051, %159 ], [ %.051, %158 ], [ %.051, %157 ], [ %.051, %150 ], [ %.0..0..0.47, %149 ], [ %.051, %134 ], [ %.051, %124 ], [ false, %122 ], [ %.051, %106 ], [ %.051, %96 ], [ %.051, %92 ], [ %.051, %91 ], [ %.051, %87 ], [ %.051, %86 ], [ %.051, %85 ], [ %.051, %84 ], [ %.051, %83 ], [ %.051, %73 ], [ %.051, %63 ], [ %.051, %51 ], [ %.051, %49 ], [ %.051, %37 ], [ %.051, %27 ], [ %.051, %23 ], [ %.051, %19 ]
  %.0.be = phi i1 [ %.0, %18 ], [ %.0, %379 ], [ %.0, %378 ], [ %.0, %377 ], [ %.0, %375 ], [ %.0, %374 ], [ %.0, %373 ], [ %.0, %371 ], [ %.0, %370 ], [ %.0, %369 ], [ %.0, %368 ], [ %.0, %367 ], [ %.0, %364 ], [ %.0, %363 ], [ %.0, %337 ], [ %.0, %327 ], [ %.0, %325 ], [ %.0, %313 ], [ %.0, %303 ], [ %.0, %296 ], [ %.0, %294 ], [ %.0, %293 ], [ %.0, %283 ], [ %.0, %273 ], [ %.0, %272 ], [ %.0, %261 ], [ %.0, %251 ], [ %.0, %245 ], [ %.0..0..0.49, %244 ], [ %.0, %229 ], [ %.0, %219 ], [ false, %211 ], [ %.0, %209 ], [ %.0, %197 ], [ %.0, %187 ], [ %.0, %186 ], [ %.0, %182 ], [ %.0, %181 ], [ %.0, %180 ], [ %.0, %169 ], [ %.0, %159 ], [ %.0, %158 ], [ %.0, %157 ], [ %.0, %150 ], [ %.0, %149 ], [ %.0, %134 ], [ %.0, %124 ], [ %.0, %122 ], [ %.0, %106 ], [ %.0, %96 ], [ %.0, %92 ], [ %.0, %91 ], [ %.0, %87 ], [ %.0, %86 ], [ %.0, %85 ], [ %.0, %84 ], [ %.0, %83 ], [ %.0, %73 ], [ %.0, %63 ], [ %.0, %51 ], [ %.0, %49 ], [ %.0, %37 ], [ %.0, %27 ], [ %.0, %23 ], [ %.0, %19 ]
  br label %18

19:                                               ; preds = %18
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %.067, %20
  %22 = select i1 %21, i32 1025315962, i32 240526989
  br label %.backedge

23:                                               ; preds = %18
  %24 = sext i32 %.067 to i64
  %25 = getelementptr inbounds [2010 x [2010 x i8]], [2010 x [2010 x i8]]* %10, i64 0, i64 %24, i64 0
  %26 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull %25)
  br label %.backedge

27:                                               ; preds = %18
  %28 = load i32, i32* @x.5, align 4
  %29 = load i32, i32* @y.6, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -302725581, i32 -1948778289
  br label %.backedge

37:                                               ; preds = %18
  %38 = load i32, i32* %8, align 4
  %39 = icmp slt i32 %.065, %38
  store i1 %39, i1* %6, align 1
  %40 = load i32, i32* @x.5, align 4
  %41 = load i32, i32* @y.6, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 -1687664441, i32 -1948778289
  br label %.backedge

49:                                               ; preds = %18
  %.0..0..0.45 = load volatile i1, i1* %6, align 1
  %50 = select i1 %.0..0..0.45, i32 -1532204070, i32 1104554530
  br label %.backedge

51:                                               ; preds = %18
  %52 = sext i32 %.067 to i64
  %53 = sext i32 %.065 to i64
  %54 = getelementptr inbounds [2010 x [2010 x i8]], [2010 x [2010 x i8]]* %10, i64 0, i64 %52, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = add nsw i32 %56, -48
  %58 = add i32 %.067, 1
  %59 = sext i32 %58 to i64
  %60 = add i32 %.065, 1
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui1, i64 0, i64 %59, i64 %61
  store i32 %57, i32* %62, align 4
  br label %.backedge

63:                                               ; preds = %18
  %64 = load i32, i32* @x.5, align 4
  %65 = load i32, i32* @y.6, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 1222743570, i32 -1298168924
  br label %.backedge

73:                                               ; preds = %18
  %.neg73 = add i32 %.065, 1
  %74 = load i32, i32* @x.5, align 4
  %75 = load i32, i32* @y.6, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 -982997412, i32 -1298168924
  br label %.backedge

83:                                               ; preds = %18
  br label %.backedge

84:                                               ; preds = %18
  br label %.backedge

85:                                               ; preds = %18
  %.neg72 = add i32 %.067, 1
  br label %.backedge

86:                                               ; preds = %18
  br label %.backedge

87:                                               ; preds = %18
  %88 = load i32, i32* %7, align 4
  %89 = icmp slt i32 %.063, %88
  %90 = select i1 %89, i32 -1226923432, i32 -471206795
  br label %.backedge

91:                                               ; preds = %18
  br label %.backedge

92:                                               ; preds = %18
  %93 = load i32, i32* %8, align 4
  %94 = icmp slt i32 %.061, %93
  %95 = select i1 %94, i32 2124456354, i32 607936516
  br label %.backedge

96:                                               ; preds = %18
  %97 = load i32, i32* @x.5, align 4
  %98 = load i32, i32* @y.6, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 2115815293, i32 1903152798
  br label %.backedge

106:                                              ; preds = %18
  %107 = sext i32 %.063 to i64
  %108 = add i32 %.061, -1
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [2010 x [2010 x i8]], [2010 x [2010 x i8]]* %10, i64 0, i64 %107, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 49
  store i1 %112, i1* %5, align 1
  %113 = load i32, i32* @x.5, align 4
  %114 = load i32, i32* @y.6, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 1246083975, i32 1903152798
  br label %.backedge

122:                                              ; preds = %18
  %.0..0..0.46 = load volatile i1, i1* %5, align 1
  %123 = select i1 %.0..0..0.46, i32 -1075350184, i32 956154892
  br label %.backedge

124:                                              ; preds = %18
  %125 = load i32, i32* @x.5, align 4
  %126 = load i32, i32* @y.6, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 1779019902, i32 -1538312914
  br label %.backedge

134:                                              ; preds = %18
  %135 = sext i32 %.063 to i64
  %136 = sext i32 %.061 to i64
  %137 = getelementptr inbounds [2010 x [2010 x i8]], [2010 x [2010 x i8]]* %10, i64 0, i64 %135, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %138, 49
  store i1 %139, i1* %4, align 1
  %140 = load i32, i32* @x.5, align 4
  %141 = load i32, i32* @y.6, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 2124245910, i32 -1538312914
  br label %.backedge

149:                                              ; preds = %18
  %.0..0..0.47 = load volatile i1, i1* %4, align 1
  br label %.backedge

150:                                              ; preds = %18
  %151 = zext i1 %.051 to i32
  %152 = add i32 %.063, 1
  %153 = sext i32 %152 to i64
  %154 = add i32 %.061, 1
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui2, i64 0, i64 %153, i64 %155
  store i32 %151, i32* %156, align 4
  br label %.backedge

157:                                              ; preds = %18
  %.neg71 = add i32 %.061, 1
  br label %.backedge

158:                                              ; preds = %18
  br label %.backedge

159:                                              ; preds = %18
  %160 = load i32, i32* @x.5, align 4
  %161 = load i32, i32* @y.6, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 1260712438, i32 -1901011483
  br label %.backedge

169:                                              ; preds = %18
  %170 = add i32 %.063, 1
  %171 = load i32, i32* @x.5, align 4
  %172 = load i32, i32* @y.6, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 1800966294, i32 -1901011483
  br label %.backedge

180:                                              ; preds = %18
  br label %.backedge

181:                                              ; preds = %18
  br label %.backedge

182:                                              ; preds = %18
  %183 = load i32, i32* %7, align 4
  %184 = icmp slt i32 %.059, %183
  %185 = select i1 %184, i32 462781661, i32 382621905
  br label %.backedge

186:                                              ; preds = %18
  br label %.backedge

187:                                              ; preds = %18
  %188 = load i32, i32* @x.5, align 4
  %189 = load i32, i32* @y.6, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 1511216556, i32 1518684286
  br label %.backedge

197:                                              ; preds = %18
  %198 = load i32, i32* %8, align 4
  %199 = icmp slt i32 %.057, %198
  store i1 %199, i1* %3, align 1
  %200 = load i32, i32* @x.5, align 4
  %201 = load i32, i32* @y.6, align 4
  %202 = add i32 %200, -1
  %203 = mul i32 %202, %200
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %206, %205
  %208 = select i1 %207, i32 -1600762598, i32 1518684286
  br label %.backedge

209:                                              ; preds = %18
  %.0..0..0.48 = load volatile i1, i1* %3, align 1
  %210 = select i1 %.0..0..0.48, i32 883599011, i32 -186159911
  br label %.backedge

211:                                              ; preds = %18
  %212 = add i32 %.059, -1
  %213 = sext i32 %212 to i64
  %214 = sext i32 %.057 to i64
  %215 = getelementptr inbounds [2010 x [2010 x i8]], [2010 x [2010 x i8]]* %10, i64 0, i64 %213, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = icmp eq i8 %216, 49
  %218 = select i1 %217, i32 2143964640, i32 1410108462
  br label %.backedge

219:                                              ; preds = %18
  %220 = load i32, i32* @x.5, align 4
  %221 = load i32, i32* @y.6, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 1404655557, i32 833846761
  br label %.backedge

229:                                              ; preds = %18
  %230 = sext i32 %.059 to i64
  %231 = sext i32 %.057 to i64
  %232 = getelementptr inbounds [2010 x [2010 x i8]], [2010 x [2010 x i8]]* %10, i64 0, i64 %230, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = icmp eq i8 %233, 49
  store i1 %234, i1* %2, align 1
  %235 = load i32, i32* @x.5, align 4
  %236 = load i32, i32* @y.6, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 909592065, i32 833846761
  br label %.backedge

244:                                              ; preds = %18
  %.0..0..0.49 = load volatile i1, i1* %2, align 1
  br label %.backedge

245:                                              ; preds = %18
  %246 = zext i1 %.0 to i32
  %247 = add i32 %.059, 1
  %248 = sext i32 %247 to i64
  %.neg70 = add i32 %.057, 1
  %249 = sext i32 %.neg70 to i64
  %250 = getelementptr inbounds [2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui3, i64 0, i64 %248, i64 %249
  store i32 %246, i32* %250, align 4
  br label %.backedge

251:                                              ; preds = %18
  %252 = load i32, i32* @x.5, align 4
  %253 = load i32, i32* @y.6, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 -145742763, i32 1746976666
  br label %.backedge

261:                                              ; preds = %18
  %262 = add i32 %.057, 1
  %263 = load i32, i32* @x.5, align 4
  %264 = load i32, i32* @y.6, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 -1026265964, i32 1746976666
  br label %.backedge

272:                                              ; preds = %18
  br label %.backedge

273:                                              ; preds = %18
  %274 = load i32, i32* @x.5, align 4
  %275 = load i32, i32* @y.6, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 2068399240, i32 2055208679
  br label %.backedge

283:                                              ; preds = %18
  %284 = load i32, i32* @x.5, align 4
  %285 = load i32, i32* @y.6, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 -1240583513, i32 2055208679
  br label %.backedge

293:                                              ; preds = %18
  br label %.backedge

294:                                              ; preds = %18
  %295 = add i32 %.059, 1
  br label %.backedge

296:                                              ; preds = %18
  %297 = load i32, i32* %7, align 4
  %298 = load i32, i32* %8, align 4
  call void @_Z3ruiPA2010_iii([2010 x i32]* getelementptr inbounds ([2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui1, i64 0, i64 0), i32 %297, i32 %298)
  %299 = load i32, i32* %7, align 4
  %300 = load i32, i32* %8, align 4
  call void @_Z3ruiPA2010_iii([2010 x i32]* getelementptr inbounds ([2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui2, i64 0, i64 0), i32 %299, i32 %300)
  %301 = load i32, i32* %7, align 4
  %302 = load i32, i32* %8, align 4
  call void @_Z3ruiPA2010_iii([2010 x i32]* getelementptr inbounds ([2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui3, i64 0, i64 0), i32 %301, i32 %302)
  br label %.backedge

303:                                              ; preds = %18
  %304 = load i32, i32* @x.5, align 4
  %305 = load i32, i32* @y.6, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 1353063971, i32 -1352059265
  br label %.backedge

313:                                              ; preds = %18
  %314 = load i32, i32* %9, align 4
  %315 = icmp slt i32 %.055, %314
  store i1 %315, i1* %1, align 1
  %316 = load i32, i32* @x.5, align 4
  %317 = load i32, i32* @y.6, align 4
  %318 = add i32 %316, -1
  %319 = mul i32 %318, %316
  %320 = and i32 %319, 1
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %322, %321
  %324 = select i1 %323, i32 1266412135, i32 -1352059265
  br label %.backedge

325:                                              ; preds = %18
  %.0..0..0.50 = load volatile i1, i1* %1, align 1
  %326 = select i1 %.0..0..0.50, i32 -1868368814, i32 1333610445
  br label %.backedge

327:                                              ; preds = %18
  %328 = load i32, i32* @x.5, align 4
  %329 = load i32, i32* @y.6, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 -1323791312, i32 -1347739812
  br label %.backedge

337:                                              ; preds = %18
  %338 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %11)
  %339 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %338, i32* nonnull dereferenceable(4) %12)
  %340 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %339, i32* nonnull dereferenceable(4) %13)
  %341 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %340, i32* nonnull dereferenceable(4) %14)
  %342 = load i32, i32* %11, align 4
  %343 = load i32, i32* %12, align 4
  %344 = load i32, i32* %13, align 4
  %345 = load i32, i32* %14, align 4
  %346 = call i32 @_Z3getPA2010_iiiii([2010 x i32]* getelementptr inbounds ([2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui1, i64 0, i64 0), i32 %342, i32 %343, i32 %344, i32 %345)
  %.neg69 = add i32 %343, 1
  %347 = call i32 @_Z3getPA2010_iiiii([2010 x i32]* getelementptr inbounds ([2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui2, i64 0, i64 0), i32 %342, i32 %.neg69, i32 %344, i32 %345)
  %348 = add i32 %342, 1
  %349 = call i32 @_Z3getPA2010_iiiii([2010 x i32]* getelementptr inbounds ([2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui3, i64 0, i64 0), i32 %348, i32 %343, i32 %344, i32 %345)
  %350 = add i32 %347, %349
  %351 = sub i32 %346, %350
  %352 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %351)
  %353 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %352, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %354 = load i32, i32* @x.5, align 4
  %355 = load i32, i32* @y.6, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 -308830845, i32 -1347739812
  br label %.backedge

363:                                              ; preds = %18
  br label %.backedge

364:                                              ; preds = %18
  %365 = add i32 %.055, 1
  br label %.backedge

366:                                              ; preds = %18
  ret i32 0

367:                                              ; preds = %18
  br label %.backedge

368:                                              ; preds = %18
  %.neg = add i32 %.065, 1
  br label %.backedge

369:                                              ; preds = %18
  br label %.backedge

370:                                              ; preds = %18
  br label %.backedge

371:                                              ; preds = %18
  %372 = add i32 %.063, 1
  br label %.backedge

373:                                              ; preds = %18
  br label %.backedge

374:                                              ; preds = %18
  br label %.backedge

375:                                              ; preds = %18
  %376 = add i32 %.057, 1
  br label %.backedge

377:                                              ; preds = %18
  br label %.backedge

378:                                              ; preds = %18
  br label %.backedge

379:                                              ; preds = %18
  %380 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %11)
  %381 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %380, i32* nonnull dereferenceable(4) %12)
  %382 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %381, i32* nonnull dereferenceable(4) %13)
  %383 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %382, i32* nonnull dereferenceable(4) %14)
  %384 = load i32, i32* %11, align 4
  %385 = load i32, i32* %12, align 4
  %386 = load i32, i32* %13, align 4
  %387 = load i32, i32* %14, align 4
  %388 = call i32 @_Z3getPA2010_iiiii([2010 x i32]* getelementptr inbounds ([2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui1, i64 0, i64 0), i32 %384, i32 %385, i32 %386, i32 %387)
  %389 = add i32 %385, 1
  %390 = call i32 @_Z3getPA2010_iiiii([2010 x i32]* getelementptr inbounds ([2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui2, i64 0, i64 0), i32 %384, i32 %389, i32 %386, i32 %387)
  %391 = add i32 %384, 1
  %392 = call i32 @_Z3getPA2010_iiiii([2010 x i32]* getelementptr inbounds ([2010 x [2010 x i32]], [2010 x [2010 x i32]]* @rui3, i64 0, i64 0), i32 %391, i32 %385, i32 %386, i32 %387)
  %393 = add i32 %390, %392
  %394 = sub i32 %388, %393
  %395 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %394)
  %396 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %395, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3_(%"class.std::basic_istream"* dereferenceable(280), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s133031288.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
