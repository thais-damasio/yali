; ModuleID = 'build_ollvm/programs/p00150/s442389397.ll'
source_filename = "Project_CodeNet_C++1400/p00150/s442389397.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"%d %d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [10001 x i8], align 16
  %5 = getelementptr inbounds [10001 x i8], [10001 x i8]* %4, i64 0, i64 0
  %6 = getelementptr inbounds [10001 x i8], [10001 x i8]* %4, i64 0, i64 1
  br label %7

7:                                                ; preds = %.backedge, %0
  %.043 = phi i32 [ 0, %0 ], [ %.043.be, %.backedge ]
  %.041 = phi i32 [ undef, %0 ], [ %.041.be, %.backedge ]
  %.039 = phi i32 [ undef, %0 ], [ %.039.be, %.backedge ]
  %.037 = phi i32 [ undef, %0 ], [ %.037.be, %.backedge ]
  %.035 = phi i32 [ undef, %0 ], [ %.035.be, %.backedge ]
  %.033 = phi i32 [ undef, %0 ], [ %.033.be, %.backedge ]
  %.031 = phi i32 [ 802519083, %0 ], [ %.031.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.031, label %.backedge [
    i32 802519083, label %8
    i32 141278112, label %11
    i32 1775912352, label %14
    i32 -605843965, label %16
    i32 -732840872, label %17
    i32 -1271933406, label %20
    i32 352252474, label %26
    i32 1543819505, label %36
    i32 -2056537258, label %46
    i32 -65732071, label %47
    i32 1610405373, label %49
    i32 -178965039, label %52
    i32 2135856219, label %55
    i32 -1224474208, label %65
    i32 -412554625, label %76
    i32 832541450, label %77
    i32 782555198, label %78
    i32 291437068, label %88
    i32 944385673, label %99
    i32 826665957, label %100
    i32 -1087749034, label %101
    i32 -139772794, label %104
    i32 1695968111, label %107
    i32 -15118941, label %109
    i32 1896188181, label %119
    i32 -1640078406, label %129
    i32 1421679265, label %130
    i32 -1544637749, label %134
    i32 594909739, label %140
    i32 -2139414565, label %141
    i32 -352424521, label %151
    i32 1806590870, label %166
    i32 1394951011, label %168
    i32 -852441660, label %175
    i32 1832238748, label %176
    i32 -420910816, label %186
    i32 1223955039, label %196
    i32 -1707978734, label %197
    i32 337668822, label %207
    i32 1664695716, label %217
    i32 -2012070362, label %218
    i32 1788328773, label %220
    i32 1075157810, label %230
    i32 958602276, label %240
    i32 329631486, label %241
    i32 1520658280, label %242
    i32 906940090, label %244
    i32 806928268, label %245
    i32 -1378808208, label %246
    i32 1198179724, label %247
    i32 -2073225822, label %248
    i32 753106281, label %250
  ]

.backedge:                                        ; preds = %7, %250, %248, %247, %246, %245, %244, %242, %241, %230, %220, %218, %217, %207, %197, %196, %186, %176, %175, %168, %166, %151, %141, %140, %134, %130, %129, %119, %109, %107, %104, %101, %100, %99, %88, %78, %77, %76, %65, %55, %52, %49, %47, %46, %36, %26, %20, %17, %16, %14, %11, %8
  %.043.be = phi i32 [ %.043, %7 ], [ %.043, %250 ], [ %.043, %248 ], [ %.043, %247 ], [ %.043, %246 ], [ %.043, %245 ], [ %.043, %244 ], [ %.043, %242 ], [ %.043, %241 ], [ %.043, %230 ], [ %.043, %220 ], [ %.043, %218 ], [ %.043, %217 ], [ %.043, %207 ], [ %.043, %197 ], [ %.043, %196 ], [ %.043, %186 ], [ %.043, %176 ], [ %.043, %175 ], [ %.043, %168 ], [ %.043, %166 ], [ %.043, %151 ], [ %.043, %141 ], [ %.043, %140 ], [ %.043, %134 ], [ %.043, %130 ], [ %.043, %129 ], [ %.043, %119 ], [ %.043, %109 ], [ %.043, %107 ], [ %.043, %104 ], [ %.043, %101 ], [ %.043, %100 ], [ %.043, %99 ], [ %.043, %88 ], [ %.043, %78 ], [ %.043, %77 ], [ %.043, %76 ], [ %.043, %65 ], [ %.043, %55 ], [ %.043, %52 ], [ %.043, %49 ], [ %.043, %47 ], [ %.043, %46 ], [ %.043, %36 ], [ %.043, %26 ], [ %.043, %20 ], [ %.043, %17 ], [ %.043, %16 ], [ %15, %14 ], [ %.043, %11 ], [ %.043, %8 ]
  %.041.be = phi i32 [ %.041, %7 ], [ %.041, %250 ], [ %.041, %248 ], [ %.041, %247 ], [ %.041, %246 ], [ %.041, %245 ], [ %.neg, %244 ], [ %.041, %242 ], [ %.041, %241 ], [ %.041, %230 ], [ %.041, %220 ], [ %.041, %218 ], [ %.041, %217 ], [ %.041, %207 ], [ %.041, %197 ], [ %.041, %196 ], [ %.041, %186 ], [ %.041, %176 ], [ %.041, %175 ], [ %.041, %168 ], [ %.041, %166 ], [ %.041, %151 ], [ %.041, %141 ], [ %.041, %140 ], [ %.041, %134 ], [ %.041, %130 ], [ %.041, %129 ], [ %.041, %119 ], [ %.041, %109 ], [ %.041, %107 ], [ %.041, %104 ], [ %.041, %101 ], [ %.041, %100 ], [ %.041, %99 ], [ %89, %88 ], [ %.041, %78 ], [ %.041, %77 ], [ %.041, %76 ], [ %.041, %65 ], [ %.041, %55 ], [ %.041, %52 ], [ %.041, %49 ], [ %.041, %47 ], [ %.041, %46 ], [ %.041, %36 ], [ %.041, %26 ], [ %.041, %20 ], [ %.041, %17 ], [ 2, %16 ], [ %.041, %14 ], [ %.041, %11 ], [ %.041, %8 ]
  %.039.be = phi i32 [ %.039, %7 ], [ %.039, %250 ], [ %.039, %248 ], [ %.039, %247 ], [ %.039, %246 ], [ %.039, %245 ], [ %.039, %244 ], [ %243, %242 ], [ %.039, %241 ], [ %.039, %230 ], [ %.039, %220 ], [ %.039, %218 ], [ %.039, %217 ], [ %.039, %207 ], [ %.039, %197 ], [ %.039, %196 ], [ %.039, %186 ], [ %.039, %176 ], [ %.039, %175 ], [ %.039, %168 ], [ %.039, %166 ], [ %.039, %151 ], [ %.039, %141 ], [ %.039, %140 ], [ %.039, %134 ], [ %.039, %130 ], [ %.039, %129 ], [ %.039, %119 ], [ %.039, %109 ], [ %.039, %107 ], [ %.039, %104 ], [ %.039, %101 ], [ %.039, %100 ], [ %.039, %99 ], [ %.039, %88 ], [ %.039, %78 ], [ %.039, %77 ], [ %.039, %76 ], [ %66, %65 ], [ %.039, %55 ], [ %.039, %52 ], [ %.039, %49 ], [ %48, %47 ], [ %.039, %46 ], [ %.039, %36 ], [ %.039, %26 ], [ %.039, %20 ], [ %.039, %17 ], [ %.039, %16 ], [ %.039, %14 ], [ %.039, %11 ], [ %.039, %8 ]
  %.037.be = phi i32 [ %.037, %7 ], [ %.037, %250 ], [ %.037, %248 ], [ %.037, %247 ], [ %.037, %246 ], [ 0, %245 ], [ %.037, %244 ], [ %.037, %242 ], [ %.037, %241 ], [ %.037, %230 ], [ %.037, %220 ], [ %.037, %218 ], [ %.037, %217 ], [ %.037, %207 ], [ %.037, %197 ], [ %.037, %196 ], [ %.037, %186 ], [ %.037, %176 ], [ %.033, %175 ], [ %.037, %168 ], [ %.037, %166 ], [ %.037, %151 ], [ %.037, %141 ], [ %.037, %140 ], [ %.037, %134 ], [ %.037, %130 ], [ %.037, %129 ], [ 0, %119 ], [ %.037, %109 ], [ %.037, %107 ], [ %.037, %104 ], [ %.037, %101 ], [ %.037, %100 ], [ %.037, %99 ], [ %.037, %88 ], [ %.037, %78 ], [ %.037, %77 ], [ %.037, %76 ], [ %.037, %65 ], [ %.037, %55 ], [ %.037, %52 ], [ %.037, %49 ], [ %.037, %47 ], [ %.037, %46 ], [ %.037, %36 ], [ %.037, %26 ], [ %.037, %20 ], [ %.037, %17 ], [ %.037, %16 ], [ %.037, %14 ], [ %.037, %11 ], [ %.037, %8 ]
  %.035.be = phi i32 [ %.035, %7 ], [ %.035, %250 ], [ %.035, %248 ], [ %.035, %247 ], [ %.035, %246 ], [ 0, %245 ], [ %.035, %244 ], [ %.035, %242 ], [ %.035, %241 ], [ %.035, %230 ], [ %.035, %220 ], [ %.035, %218 ], [ %.035, %217 ], [ %.035, %207 ], [ %.035, %197 ], [ %.035, %196 ], [ %.035, %186 ], [ %.035, %176 ], [ %.neg46, %175 ], [ %.035, %168 ], [ %.035, %166 ], [ %.035, %151 ], [ %.035, %141 ], [ %.035, %140 ], [ %.035, %134 ], [ %.035, %130 ], [ %.035, %129 ], [ 0, %119 ], [ %.035, %109 ], [ %.035, %107 ], [ %.035, %104 ], [ %.035, %101 ], [ %.035, %100 ], [ %.035, %99 ], [ %.035, %88 ], [ %.035, %78 ], [ %.035, %77 ], [ %.035, %76 ], [ %.035, %65 ], [ %.035, %55 ], [ %.035, %52 ], [ %.035, %49 ], [ %.035, %47 ], [ %.035, %46 ], [ %.035, %36 ], [ %.035, %26 ], [ %.035, %20 ], [ %.035, %17 ], [ %.035, %16 ], [ %.035, %14 ], [ %.035, %11 ], [ %.035, %8 ]
  %.033.be = phi i32 [ %.033, %7 ], [ %.033, %250 ], [ %249, %248 ], [ %.033, %247 ], [ %.033, %246 ], [ 2, %245 ], [ %.033, %244 ], [ %.033, %242 ], [ %.033, %241 ], [ %.033, %230 ], [ %.033, %220 ], [ %.033, %218 ], [ %.033, %217 ], [ %.neg45, %207 ], [ %.033, %197 ], [ %.033, %196 ], [ %.033, %186 ], [ %.033, %176 ], [ %.033, %175 ], [ %.033, %168 ], [ %.033, %166 ], [ %.033, %151 ], [ %.033, %141 ], [ %.033, %140 ], [ %.033, %134 ], [ %.033, %130 ], [ %.033, %129 ], [ 2, %119 ], [ %.033, %109 ], [ %.033, %107 ], [ %.033, %104 ], [ %.033, %101 ], [ %.033, %100 ], [ %.033, %99 ], [ %.033, %88 ], [ %.033, %78 ], [ %.033, %77 ], [ %.033, %76 ], [ %.033, %65 ], [ %.033, %55 ], [ %.033, %52 ], [ %.033, %49 ], [ %.033, %47 ], [ %.033, %46 ], [ %.033, %36 ], [ %.033, %26 ], [ %.033, %20 ], [ %.033, %17 ], [ %.033, %16 ], [ %.033, %14 ], [ %.033, %11 ], [ %.033, %8 ]
  %.031.be = phi i32 [ %.031, %7 ], [ 1075157810, %250 ], [ 337668822, %248 ], [ -420910816, %247 ], [ -352424521, %246 ], [ 1896188181, %245 ], [ 291437068, %244 ], [ -1224474208, %242 ], [ 1543819505, %241 ], [ %239, %230 ], [ %229, %220 ], [ -1087749034, %218 ], [ 1421679265, %217 ], [ %216, %207 ], [ %206, %197 ], [ -1707978734, %196 ], [ %195, %186 ], [ %185, %176 ], [ 1832238748, %175 ], [ %174, %168 ], [ %167, %166 ], [ %165, %151 ], [ %150, %141 ], [ -1707978734, %140 ], [ %139, %134 ], [ %133, %130 ], [ 1421679265, %129 ], [ %128, %119 ], [ %118, %109 ], [ %108, %107 ], [ 1695968111, %104 ], [ %103, %101 ], [ -1087749034, %100 ], [ -732840872, %99 ], [ %98, %88 ], [ %87, %78 ], [ 782555198, %77 ], [ 1610405373, %76 ], [ %75, %65 ], [ %64, %55 ], [ 2135856219, %52 ], [ %51, %49 ], [ 1610405373, %47 ], [ 782555198, %46 ], [ %45, %36 ], [ %35, %26 ], [ %25, %20 ], [ %19, %17 ], [ -732840872, %16 ], [ 802519083, %14 ], [ 1775912352, %11 ], [ %10, %8 ]
  %.0.be = phi i1 [ %.0, %7 ], [ %.0, %250 ], [ %.0, %248 ], [ %.0, %247 ], [ %.0, %246 ], [ %.0, %245 ], [ %.0, %244 ], [ %.0, %242 ], [ %.0, %241 ], [ %.0, %230 ], [ %.0, %220 ], [ %.0, %218 ], [ %.0, %217 ], [ %.0, %207 ], [ %.0, %197 ], [ %.0, %196 ], [ %.0, %186 ], [ %.0, %176 ], [ %.0, %175 ], [ %.0, %168 ], [ %.0, %166 ], [ %.0, %151 ], [ %.0, %141 ], [ %.0, %140 ], [ %.0, %134 ], [ %.0, %130 ], [ %.0, %129 ], [ %.0, %119 ], [ %.0, %109 ], [ %.0, %107 ], [ %106, %104 ], [ false, %101 ], [ %.0, %100 ], [ %.0, %99 ], [ %.0, %88 ], [ %.0, %78 ], [ %.0, %77 ], [ %.0, %76 ], [ %.0, %65 ], [ %.0, %55 ], [ %.0, %52 ], [ %.0, %49 ], [ %.0, %47 ], [ %.0, %46 ], [ %.0, %36 ], [ %.0, %26 ], [ %.0, %20 ], [ %.0, %17 ], [ %.0, %16 ], [ %.0, %14 ], [ %.0, %11 ], [ %.0, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = icmp slt i32 %.043, 10001
  %10 = select i1 %9, i32 141278112, i32 -605843965
  br label %.backedge

11:                                               ; preds = %7
  %12 = sext i32 %.043 to i64
  %13 = getelementptr inbounds [10001 x i8], [10001 x i8]* %4, i64 0, i64 %12
  store i8 1, i8* %13, align 1
  br label %.backedge

14:                                               ; preds = %7
  %15 = add i32 %.043, 1
  br label %.backedge

16:                                               ; preds = %7
  store i8 0, i8* %5, align 16
  store i8 0, i8* %6, align 1
  br label %.backedge

17:                                               ; preds = %7
  %18 = icmp slt i32 %.041, 10001
  %19 = select i1 %18, i32 -1271933406, i32 826665957
  br label %.backedge

20:                                               ; preds = %7
  %21 = sext i32 %.041 to i64
  %22 = getelementptr inbounds [10001 x i8], [10001 x i8]* %4, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, 1
  %.not50 = icmp eq i8 %24, 0
  %25 = select i1 %.not50, i32 352252474, i32 -65732071
  br label %.backedge

26:                                               ; preds = %7
  %27 = load i32, i32* @x, align 4
  %28 = load i32, i32* @y, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 1543819505, i32 329631486
  br label %.backedge

36:                                               ; preds = %7
  %37 = load i32, i32* @x, align 4
  %38 = load i32, i32* @y, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 -2056537258, i32 329631486
  br label %.backedge

46:                                               ; preds = %7
  br label %.backedge

47:                                               ; preds = %7
  %48 = shl i32 %.041, 1
  br label %.backedge

49:                                               ; preds = %7
  %50 = icmp slt i32 %.039, 10001
  %51 = select i1 %50, i32 -178965039, i32 832541450
  br label %.backedge

52:                                               ; preds = %7
  %53 = sext i32 %.039 to i64
  %54 = getelementptr inbounds [10001 x i8], [10001 x i8]* %4, i64 0, i64 %53
  store i8 0, i8* %54, align 1
  br label %.backedge

55:                                               ; preds = %7
  %56 = load i32, i32* @x, align 4
  %57 = load i32, i32* @y, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 -1224474208, i32 1520658280
  br label %.backedge

65:                                               ; preds = %7
  %66 = add i32 %.039, %.041
  %67 = load i32, i32* @x, align 4
  %68 = load i32, i32* @y, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 -412554625, i32 1520658280
  br label %.backedge

76:                                               ; preds = %7
  br label %.backedge

77:                                               ; preds = %7
  br label %.backedge

78:                                               ; preds = %7
  %79 = load i32, i32* @x, align 4
  %80 = load i32, i32* @y, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 291437068, i32 906940090
  br label %.backedge

88:                                               ; preds = %7
  %89 = add i32 %.041, 1
  %90 = load i32, i32* @x, align 4
  %91 = load i32, i32* @y, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 944385673, i32 906940090
  br label %.backedge

99:                                               ; preds = %7
  br label %.backedge

100:                                              ; preds = %7
  br label %.backedge

101:                                              ; preds = %7
  %102 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %3)
  %.not49 = icmp eq i32 %102, 0
  %103 = select i1 %.not49, i32 1695968111, i32 -139772794
  br label %.backedge

104:                                              ; preds = %7
  %105 = load i32, i32* %3, align 4
  %106 = icmp ne i32 %105, 0
  br label %.backedge

107:                                              ; preds = %7
  %108 = select i1 %.0, i32 -15118941, i32 1788328773
  br label %.backedge

109:                                              ; preds = %7
  %110 = load i32, i32* @x, align 4
  %111 = load i32, i32* @y, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 1896188181, i32 806928268
  br label %.backedge

119:                                              ; preds = %7
  %120 = load i32, i32* @x, align 4
  %121 = load i32, i32* @y, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 -1640078406, i32 806928268
  br label %.backedge

129:                                              ; preds = %7
  br label %.backedge

130:                                              ; preds = %7
  %131 = add i32 %.033, 2
  %132 = load i32, i32* %3, align 4
  %.not48 = icmp sgt i32 %131, %132
  %133 = select i1 %.not48, i32 -2012070362, i32 -1544637749
  br label %.backedge

134:                                              ; preds = %7
  %135 = sext i32 %.033 to i64
  %136 = getelementptr inbounds [10001 x i8], [10001 x i8]* %4, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = and i8 %137, 1
  %.not47 = icmp eq i8 %138, 0
  %139 = select i1 %.not47, i32 594909739, i32 -2139414565
  br label %.backedge

140:                                              ; preds = %7
  br label %.backedge

141:                                              ; preds = %7
  %142 = load i32, i32* @x, align 4
  %143 = load i32, i32* @y, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -352424521, i32 -1378808208
  br label %.backedge

151:                                              ; preds = %7
  %152 = sext i32 %.033 to i64
  %153 = getelementptr inbounds [10001 x i8], [10001 x i8]* %4, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = and i8 %154, 1
  %156 = icmp ne i8 %155, 0
  store i1 %156, i1* %2, align 1
  %157 = load i32, i32* @x, align 4
  %158 = load i32, i32* @y, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 1806590870, i32 -1378808208
  br label %.backedge

166:                                              ; preds = %7
  %.0..0..0.29 = load volatile i1, i1* %2, align 1
  %167 = select i1 %.0..0..0.29, i32 1394951011, i32 1832238748
  br label %.backedge

168:                                              ; preds = %7
  %169 = add i32 %.033, 2
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [10001 x i8], [10001 x i8]* %4, i64 0, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = and i8 %172, 1
  %.not = icmp eq i8 %173, 0
  %174 = select i1 %.not, i32 1832238748, i32 -852441660
  br label %.backedge

175:                                              ; preds = %7
  %.neg46 = add i32 %.033, 2
  br label %.backedge

176:                                              ; preds = %7
  %177 = load i32, i32* @x, align 4
  %178 = load i32, i32* @y, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 -420910816, i32 1198179724
  br label %.backedge

186:                                              ; preds = %7
  %187 = load i32, i32* @x, align 4
  %188 = load i32, i32* @y, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1223955039, i32 1198179724
  br label %.backedge

196:                                              ; preds = %7
  br label %.backedge

197:                                              ; preds = %7
  %198 = load i32, i32* @x, align 4
  %199 = load i32, i32* @y, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 337668822, i32 -2073225822
  br label %.backedge

207:                                              ; preds = %7
  %.neg45 = add i32 %.033, 1
  %208 = load i32, i32* @x, align 4
  %209 = load i32, i32* @y, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 1664695716, i32 -2073225822
  br label %.backedge

217:                                              ; preds = %7
  br label %.backedge

218:                                              ; preds = %7
  %219 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 %.037, i32 %.035)
  br label %.backedge

220:                                              ; preds = %7
  %221 = load i32, i32* @x, align 4
  %222 = load i32, i32* @y, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 1075157810, i32 753106281
  br label %.backedge

230:                                              ; preds = %7
  store i32 0, i32* %1, align 4
  %231 = load i32, i32* @x, align 4
  %232 = load i32, i32* @y, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 958602276, i32 753106281
  br label %.backedge

240:                                              ; preds = %7
  %.0..0..0.30 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.30

241:                                              ; preds = %7
  br label %.backedge

242:                                              ; preds = %7
  %243 = add i32 %.039, %.041
  br label %.backedge

244:                                              ; preds = %7
  %.neg = add i32 %.041, 1
  br label %.backedge

245:                                              ; preds = %7
  br label %.backedge

246:                                              ; preds = %7
  br label %.backedge

247:                                              ; preds = %7
  br label %.backedge

248:                                              ; preds = %7
  %249 = add i32 %.033, 1
  br label %.backedge

250:                                              ; preds = %7
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
