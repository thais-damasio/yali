; ModuleID = 'build_ollvm/programs/p02715/s154270615.ll'
source_filename = "Project_CodeNet_C++1400/p02715/s154270615.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@k = global i32 0, align 4
@cnt = local_unnamed_addr global [500005 x i32] zeroinitializer, align 16
@fat = local_unnamed_addr global [500005 x i32] zeroinitializer, align 16
@ifat = local_unnamed_addr global [500005 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s154270615.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@x.12 = common local_unnamed_addr global i32 0
@y.13 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z3addii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = alloca i32, align 4
  %4 = alloca i1, align 1
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.2, align 4
  %10 = load i32, i32* @y.3, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %17 = phi i32 [ %10, %2 ], [ %.be, %.backedge ]
  %18 = phi i32 [ %9, %2 ], [ %.be15, %.backedge ]
  %19 = phi i32 [ %10, %2 ], [ %.be16, %.backedge ]
  %20 = phi i32 [ %9, %2 ], [ %.be17, %.backedge ]
  %.013 = phi i32 [ 1753166712, %2 ], [ %.013.be, %.backedge ]
  %.0 = phi i32 [ undef, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.013, label %.backedge [
    i32 1753166712, label %21
    i32 -692953703, label %24
    i32 473296515, label %40
    i32 -1665022977, label %42
    i32 -946529629, label %47
    i32 658091956, label %51
    i32 -127208817, label %59
    i32 -2029384940, label %67
    i32 -83192733, label %68
    i32 825455775, label %69
  ]

.backedge:                                        ; preds = %16, %69, %68, %59, %51, %47, %42, %40, %24, %21
  %.be = phi i32 [ %17, %16 ], [ %17, %69 ], [ %17, %68 ], [ %17, %59 ], [ %17, %51 ], [ %17, %47 ], [ %17, %42 ], [ %17, %40 ], [ %32, %24 ], [ %17, %21 ]
  %.be15 = phi i32 [ %18, %16 ], [ %18, %69 ], [ %18, %68 ], [ %18, %59 ], [ %18, %51 ], [ %18, %47 ], [ %18, %42 ], [ %18, %40 ], [ %31, %24 ], [ %18, %21 ]
  %.be16 = phi i32 [ %19, %16 ], [ %19, %69 ], [ %19, %68 ], [ %19, %59 ], [ %17, %51 ], [ %19, %47 ], [ %19, %42 ], [ %19, %40 ], [ %32, %24 ], [ %19, %21 ]
  %.be17 = phi i32 [ %20, %16 ], [ %20, %69 ], [ %20, %68 ], [ %20, %59 ], [ %18, %51 ], [ %20, %47 ], [ %20, %42 ], [ %20, %40 ], [ %31, %24 ], [ %20, %21 ]
  %.013.be = phi i32 [ %.013, %16 ], [ -127208817, %69 ], [ -692953703, %68 ], [ %66, %59 ], [ %58, %51 ], [ 658091956, %47 ], [ 658091956, %42 ], [ %41, %40 ], [ %39, %24 ], [ %23, %21 ]
  %.0.be = phi i32 [ %.0, %16 ], [ %.0, %69 ], [ %.0, %68 ], [ %.0, %59 ], [ %.0, %51 ], [ %50, %47 ], [ %46, %42 ], [ %.0, %40 ], [ %.0, %24 ], [ %.0, %21 ]
  br label %16

21:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.2 = load volatile i1, i1* %7, align 1
  %22 = or i1 %.0..0..0., %.0..0..0.2
  %23 = select i1 %22, i32 -692953703, i32 -83192733
  br label %.backedge

24:                                               ; preds = %16
  %25 = alloca i32, align 4
  store i32* %25, i32** %6, align 8
  %26 = alloca i32, align 4
  store i32* %26, i32** %5, align 8
  %.0..0..0.3 = load volatile i32*, i32** %6, align 8
  store i32 %0, i32* %.0..0..0.3, align 4
  %.0..0..0.7 = load volatile i32*, i32** %5, align 8
  store i32 %1, i32* %.0..0..0.7, align 4
  %.0..0..0.4 = load volatile i32*, i32** %6, align 8
  %27 = load i32, i32* %.0..0..0.4, align 4
  %.0..0..0.8 = load volatile i32*, i32** %5, align 8
  %28 = load i32, i32* %.0..0..0.8, align 4
  %29 = add i32 %28, %27
  %30 = icmp sgt i32 %29, 1000000006
  store i1 %30, i1* %4, align 1
  %31 = load i32, i32* @x.2, align 4
  %32 = load i32, i32* @y.3, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 473296515, i32 -83192733
  br label %.backedge

40:                                               ; preds = %16
  %.0..0..0.11 = load volatile i1, i1* %4, align 1
  %41 = select i1 %.0..0..0.11, i32 -1665022977, i32 -946529629
  br label %.backedge

42:                                               ; preds = %16
  %.0..0..0.5 = load volatile i32*, i32** %6, align 8
  %43 = load i32, i32* %.0..0..0.5, align 4
  %.0..0..0.9 = load volatile i32*, i32** %5, align 8
  %44 = load i32, i32* %.0..0..0.9, align 4
  %45 = add i32 %43, -1000000007
  %46 = add i32 %45, %44
  br label %.backedge

47:                                               ; preds = %16
  %.0..0..0.6 = load volatile i32*, i32** %6, align 8
  %48 = load i32, i32* %.0..0..0.6, align 4
  %.0..0..0.10 = load volatile i32*, i32** %5, align 8
  %49 = load i32, i32* %.0..0..0.10, align 4
  %50 = add i32 %49, %48
  br label %.backedge

51:                                               ; preds = %16
  store i32 %.0, i32* %3, align 4
  %52 = add i32 %18, -1
  %53 = mul i32 %52, %18
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %17, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -127208817, i32 825455775
  br label %.backedge

59:                                               ; preds = %16
  %60 = add i32 %20, -1
  %61 = mul i32 %60, %20
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %19, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -2029384940, i32 825455775
  br label %.backedge

67:                                               ; preds = %16
  %.0..0..0.12 = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.12

68:                                               ; preds = %16
  br label %.backedge

69:                                               ; preds = %16
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z3mulii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = alloca i32, align 4
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x.4, align 4
  %7 = load i32, i32* @y.5, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %5, align 1
  %12 = icmp slt i32 %7, 10
  store i1 %12, i1* %4, align 1
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 -1880952838, i32 -1901752370
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ -1414313881, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %15

15:                                               ; preds = %.outer, %15
  switch i32 %.0.ph, label %15 [
    i32 -1414313881, label %16
    i32 1079407646, label %.outer.backedge
    i32 -1880952838, label %19
    i32 -1901752370, label %25
  ]

16:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %.0..0..0.1 = load volatile i1, i1* %4, align 1
  %17 = or i1 %.0..0..0., %.0..0..0.1
  %18 = select i1 %17, i32 1079407646, i32 -1901752370
  br label %.outer.backedge

19:                                               ; preds = %15
  %20 = sext i32 %1 to i64
  %21 = sext i32 %0 to i64
  %22 = mul nsw i64 %20, %21
  %23 = srem i64 %22, 1000000007
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %3, align 4
  %.0..0..0.2 = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.2

25:                                               ; preds = %15
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %15, %25, %16
  %.0.ph.be = phi i32 [ %18, %16 ], [ 1079407646, %25 ], [ %14, %15 ]
  br label %.outer
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z4fexpii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = alloca i32, align 4
  br label %4

4:                                                ; preds = %.backedge, %2
  %.01523 = phi i32 [ undef, %2 ], [ %.01523.be, %.backedge ]
  %.019 = phi i32 [ %0, %2 ], [ %.019.be, %.backedge ]
  %.017 = phi i32 [ %1, %2 ], [ %.017.be, %.backedge ]
  %.015 = phi i32 [ 1, %2 ], [ %.015.be, %.backedge ]
  %.0 = phi i32 [ -1983128577, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1983128577, label %5
    i32 -1161439417, label %7
    i32 -151382498, label %10
    i32 1601418105, label %20
    i32 543759525, label %31
    i32 449723497, label %32
    i32 2067149237, label %42
    i32 26957252, label %54
    i32 -1146529284, label %55
    i32 -1397126623, label %65
    i32 -257402871, label %75
    i32 -987449080, label %76
    i32 -72368087, label %78
    i32 1210956125, label %81
  ]

.backedge:                                        ; preds = %4, %81, %78, %76, %65, %55, %54, %42, %32, %31, %20, %10, %7, %5
  %.01523.be = phi i32 [ %.01523, %4 ], [ %.01523, %81 ], [ %.01523, %78 ], [ %.01523, %76 ], [ %.015, %65 ], [ %.01523, %55 ], [ %.01523, %54 ], [ %.01523, %42 ], [ %.01523, %32 ], [ %.01523, %31 ], [ %.01523, %20 ], [ %.01523, %10 ], [ %.01523, %7 ], [ %.01523, %5 ]
  %.019.be = phi i32 [ %.019, %4 ], [ %.019, %81 ], [ %79, %78 ], [ %.019, %76 ], [ %.019, %65 ], [ %.019, %55 ], [ %.019, %54 ], [ %43, %42 ], [ %.019, %32 ], [ %.019, %31 ], [ %.019, %20 ], [ %.019, %10 ], [ %.019, %7 ], [ %.019, %5 ]
  %.017.be = phi i32 [ %.017, %4 ], [ %.017, %81 ], [ %80, %78 ], [ %.017, %76 ], [ %.017, %65 ], [ %.017, %55 ], [ %.017, %54 ], [ %44, %42 ], [ %.017, %32 ], [ %.017, %31 ], [ %.017, %20 ], [ %.017, %10 ], [ %.017, %7 ], [ %.017, %5 ]
  %.015.be = phi i32 [ %.015, %4 ], [ %.015, %81 ], [ %.015, %78 ], [ %77, %76 ], [ %.015, %65 ], [ %.015, %55 ], [ %.015, %54 ], [ %.015, %42 ], [ %.015, %32 ], [ %.015, %31 ], [ %21, %20 ], [ %.015, %10 ], [ %.015, %7 ], [ %.015, %5 ]
  %.0.be = phi i32 [ %.0, %4 ], [ -1397126623, %81 ], [ 2067149237, %78 ], [ 1601418105, %76 ], [ %74, %65 ], [ %64, %55 ], [ -1983128577, %54 ], [ %53, %42 ], [ %41, %32 ], [ 449723497, %31 ], [ %30, %20 ], [ %19, %10 ], [ %9, %7 ], [ %6, %5 ]
  br label %4

5:                                                ; preds = %4
  %.not21 = icmp eq i32 %.017, 0
  %6 = select i1 %.not21, i32 -1146529284, i32 -1161439417
  br label %.backedge

7:                                                ; preds = %4
  %8 = and i32 %.017, 1
  %.not = icmp eq i32 %8, 0
  %9 = select i1 %.not, i32 449723497, i32 -151382498
  br label %.backedge

10:                                               ; preds = %4
  %11 = load i32, i32* @x.6, align 4
  %12 = load i32, i32* @y.7, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 1601418105, i32 -987449080
  br label %.backedge

20:                                               ; preds = %4
  %21 = tail call i32 @_Z3mulii(i32 %.015, i32 %.019)
  %22 = load i32, i32* @x.6, align 4
  %23 = load i32, i32* @y.7, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 543759525, i32 -987449080
  br label %.backedge

31:                                               ; preds = %4
  br label %.backedge

32:                                               ; preds = %4
  %33 = load i32, i32* @x.6, align 4
  %34 = load i32, i32* @y.7, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 2067149237, i32 -72368087
  br label %.backedge

42:                                               ; preds = %4
  %43 = tail call i32 @_Z3mulii(i32 %.019, i32 %.019)
  %44 = sdiv i32 %.017, 2
  %45 = load i32, i32* @x.6, align 4
  %46 = load i32, i32* @y.7, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 26957252, i32 -72368087
  br label %.backedge

54:                                               ; preds = %4
  br label %.backedge

55:                                               ; preds = %4
  %56 = load i32, i32* @x.6, align 4
  %57 = load i32, i32* @y.7, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 -1397126623, i32 1210956125
  br label %.backedge

65:                                               ; preds = %4
  %66 = load i32, i32* @x.6, align 4
  %67 = load i32, i32* @y.7, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 -257402871, i32 1210956125
  br label %.backedge

75:                                               ; preds = %4
  store i32 %.01523, i32* %3, align 4
  %.0..0..0. = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.

76:                                               ; preds = %4
  %77 = tail call i32 @_Z3mulii(i32 %.015, i32 %.019)
  br label %.backedge

78:                                               ; preds = %4
  %79 = tail call i32 @_Z3mulii(i32 %.019, i32 %.019)
  %80 = sdiv i32 %.017, 2
  br label %.backedge

81:                                               ; preds = %4
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z1Cii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %1, i32* %5, align 4
  store i32 %0, i32* %4, align 4
  %6 = sext i32 %0 to i64
  %7 = getelementptr inbounds [500005 x i32], [500005 x i32]* @fat, i64 0, i64 %6
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds [500005 x i32], [500005 x i32]* @ifat, i64 0, i64 %8
  %10 = sub i32 %0, %1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [500005 x i32], [500005 x i32]* @ifat, i64 0, i64 %11
  br label %13

13:                                               ; preds = %.backedge, %2
  %.01518 = phi i32 [ undef, %2 ], [ %.01518.be, %.backedge ]
  %.015 = phi i32 [ undef, %2 ], [ %.015.be, %.backedge ]
  %.0 = phi i32 [ 1608483515, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1608483515, label %14
    i32 1163627336, label %17
    i32 -847853261, label %27
    i32 -1222525255, label %37
    i32 172814694, label %38
    i32 585596130, label %48
    i32 2146500955, label %63
    i32 1947431463, label %64
    i32 -1019947614, label %74
    i32 -1642999776, label %84
    i32 -761959716, label %85
    i32 -1452281365, label %86
    i32 2003993627, label %92
  ]

.backedge:                                        ; preds = %13, %92, %86, %85, %74, %64, %63, %48, %38, %37, %27, %17, %14
  %.01518.be = phi i32 [ %.01518, %13 ], [ %.01518, %92 ], [ %.01518, %86 ], [ %.01518, %85 ], [ %.015, %74 ], [ %.01518, %64 ], [ %.01518, %63 ], [ %.01518, %48 ], [ %.01518, %38 ], [ %.01518, %37 ], [ %.01518, %27 ], [ %.01518, %17 ], [ %.01518, %14 ]
  %.015.be = phi i32 [ %.015, %13 ], [ %.015, %92 ], [ %91, %86 ], [ 0, %85 ], [ %.015, %74 ], [ %.015, %64 ], [ %.015, %63 ], [ %53, %48 ], [ %.015, %38 ], [ %.015, %37 ], [ 0, %27 ], [ %.015, %17 ], [ %.015, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ -1019947614, %92 ], [ 585596130, %86 ], [ -847853261, %85 ], [ %83, %74 ], [ %73, %64 ], [ 1947431463, %63 ], [ %62, %48 ], [ %47, %38 ], [ 1947431463, %37 ], [ %36, %27 ], [ %26, %17 ], [ %16, %14 ]
  br label %13

14:                                               ; preds = %13
  %.0..0..0. = load volatile i32, i32* %5, align 4
  %.0..0..0.13 = load volatile i32, i32* %4, align 4
  %15 = icmp sgt i32 %.0..0..0., %.0..0..0.13
  %16 = select i1 %15, i32 1163627336, i32 172814694
  br label %.backedge

17:                                               ; preds = %13
  %18 = load i32, i32* @x.8, align 4
  %19 = load i32, i32* @y.9, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 -847853261, i32 -761959716
  br label %.backedge

27:                                               ; preds = %13
  %28 = load i32, i32* @x.8, align 4
  %29 = load i32, i32* @y.9, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -1222525255, i32 -761959716
  br label %.backedge

37:                                               ; preds = %13
  br label %.backedge

38:                                               ; preds = %13
  %39 = load i32, i32* @x.8, align 4
  %40 = load i32, i32* @y.9, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 585596130, i32 -1452281365
  br label %.backedge

48:                                               ; preds = %13
  %49 = load i32, i32* %7, align 4
  %50 = load i32, i32* %9, align 4
  %51 = tail call i32 @_Z3mulii(i32 %49, i32 %50)
  %52 = load i32, i32* %12, align 4
  %53 = tail call i32 @_Z3mulii(i32 %51, i32 %52)
  %54 = load i32, i32* @x.8, align 4
  %55 = load i32, i32* @y.9, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 2146500955, i32 -1452281365
  br label %.backedge

63:                                               ; preds = %13
  br label %.backedge

64:                                               ; preds = %13
  %65 = load i32, i32* @x.8, align 4
  %66 = load i32, i32* @y.9, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 -1019947614, i32 2003993627
  br label %.backedge

74:                                               ; preds = %13
  %75 = load i32, i32* @x.8, align 4
  %76 = load i32, i32* @y.9, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 -1642999776, i32 2003993627
  br label %.backedge

84:                                               ; preds = %13
  store i32 %.01518, i32* %3, align 4
  %.0..0..0.14 = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.14

85:                                               ; preds = %13
  br label %.backedge

86:                                               ; preds = %13
  %87 = load i32, i32* %7, align 4
  %88 = load i32, i32* %9, align 4
  %89 = tail call i32 @_Z3mulii(i32 %87, i32 %88)
  %90 = load i32, i32* %12, align 4
  %91 = tail call i32 @_Z3mulii(i32 %89, i32 %90)
  br label %.backedge

92:                                               ; preds = %13
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  store i32 1, i32* getelementptr inbounds ([500005 x i32], [500005 x i32]* @fat, i64 0, i64 0), align 16
  br label %3

3:                                                ; preds = %.backedge, %0
  %.075 = phi i32 [ 1, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.0 = phi i32 [ -450256100, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -450256100, label %4
    i32 -1776076510, label %7
    i32 -749542815, label %15
    i32 459860746, label %25
    i32 -372323440, label %36
    i32 -1599399526, label %37
    i32 161900045, label %47
    i32 -807540586, label %59
    i32 -1142411159, label %60
    i32 96383821, label %63
    i32 1414773352, label %73
    i32 566129118, label %90
    i32 2045910549, label %91
    i32 1167789416, label %101
    i32 1059601724, label %112
    i32 1522874051, label %113
    i32 204116357, label %115
    i32 -1227305549, label %118
    i32 -1566330622, label %119
    i32 1221895289, label %122
    i32 436658244, label %132
    i32 1905235071, label %145
    i32 -1731364619, label %146
    i32 -1064568594, label %156
    i32 -1886623000, label %167
    i32 -1693563594, label %168
    i32 1459633721, label %169
    i32 1409566214, label %171
    i32 440450616, label %181
    i32 -1654347518, label %191
    i32 -134114624, label %192
    i32 864098999, label %202
    i32 -1081983061, label %214
    i32 1739270212, label %216
    i32 -1966707773, label %226
    i32 -364931811, label %241
    i32 -310014238, label %242
    i32 -1204811025, label %252
    i32 1798795353, label %262
    i32 1994104177, label %263
    i32 -741776736, label %265
    i32 -1482794822, label %275
    i32 1398921249, label %286
    i32 493811423, label %288
    i32 665035392, label %289
    i32 -1743037228, label %292
    i32 -432306547, label %302
    i32 -1990347112, label %320
    i32 1745672780, label %321
    i32 776445956, label %331
    i32 1706079709, label %342
    i32 2127512648, label %343
    i32 -1233018413, label %353
    i32 -68274896, label %363
    i32 -267604911, label %364
    i32 296507823, label %366
    i32 -756924232, label %367
    i32 1851239753, label %370
    i32 -1212923988, label %376
    i32 -2008952930, label %386
    i32 -910328143, label %397
    i32 -1388153904, label %398
    i32 264248582, label %400
    i32 -876573053, label %402
    i32 1734602192, label %405
    i32 -1125379662, label %413
    i32 -312682603, label %415
    i32 -472877370, label %420
    i32 467107816, label %422
    i32 1261454792, label %423
    i32 1992991303, label %424
    i32 -1100776396, label %430
    i32 -2094395788, label %432
    i32 1390774676, label %433
    i32 1207888851, label %442
    i32 1989708143, label %444
    i32 -1142555348, label %445
  ]

.backedge:                                        ; preds = %3, %445, %444, %442, %433, %432, %430, %424, %423, %422, %420, %415, %413, %405, %402, %400, %397, %386, %376, %370, %367, %366, %364, %363, %353, %343, %342, %331, %321, %320, %302, %292, %289, %288, %286, %275, %265, %263, %262, %252, %242, %241, %226, %216, %214, %202, %192, %191, %181, %171, %169, %168, %167, %156, %146, %145, %132, %122, %119, %118, %115, %113, %112, %101, %91, %90, %73, %63, %60, %59, %47, %37, %36, %25, %15, %7, %4
  %.075.be = phi i32 [ %.075, %3 ], [ %.075, %445 ], [ %.075, %444 ], [ %.075, %442 ], [ %.075, %433 ], [ %.075, %432 ], [ %.075, %430 ], [ %.075, %424 ], [ %.075, %423 ], [ %.075, %422 ], [ %.075, %420 ], [ %.075, %415 ], [ %.075, %413 ], [ %.075, %405 ], [ %.075, %402 ], [ %401, %400 ], [ %.075, %397 ], [ %.075, %386 ], [ %.075, %376 ], [ %.075, %370 ], [ %.075, %367 ], [ %.075, %366 ], [ %.075, %364 ], [ %.075, %363 ], [ %.075, %353 ], [ %.075, %343 ], [ %.075, %342 ], [ %.075, %331 ], [ %.075, %321 ], [ %.075, %320 ], [ %.075, %302 ], [ %.075, %292 ], [ %.075, %289 ], [ %.075, %288 ], [ %.075, %286 ], [ %.075, %275 ], [ %.075, %265 ], [ %.075, %263 ], [ %.075, %262 ], [ %.075, %252 ], [ %.075, %242 ], [ %.075, %241 ], [ %.075, %226 ], [ %.075, %216 ], [ %.075, %214 ], [ %.075, %202 ], [ %.075, %192 ], [ %.075, %191 ], [ %.075, %181 ], [ %.075, %171 ], [ %.075, %169 ], [ %.075, %168 ], [ %.075, %167 ], [ %.075, %156 ], [ %.075, %146 ], [ %.075, %145 ], [ %.075, %132 ], [ %.075, %122 ], [ %.075, %119 ], [ %.075, %118 ], [ %.075, %115 ], [ %.075, %113 ], [ %.075, %112 ], [ %.075, %101 ], [ %.075, %91 ], [ %.075, %90 ], [ %.075, %73 ], [ %.075, %63 ], [ %.075, %60 ], [ %.075, %59 ], [ %.075, %47 ], [ %.075, %37 ], [ %.075, %36 ], [ %26, %25 ], [ %.075, %15 ], [ %.075, %7 ], [ %.075, %4 ]
  %.073.be = phi i32 [ %.073, %3 ], [ %.073, %445 ], [ %.073, %444 ], [ %.073, %442 ], [ %.073, %433 ], [ %.073, %432 ], [ %.073, %430 ], [ %.073, %424 ], [ %.073, %423 ], [ %.073, %422 ], [ %.073, %420 ], [ %.073, %415 ], [ %414, %413 ], [ %.073, %405 ], [ 500003, %402 ], [ %.073, %400 ], [ %.073, %397 ], [ %.073, %386 ], [ %.073, %376 ], [ %.073, %370 ], [ %.073, %367 ], [ %.073, %366 ], [ %.073, %364 ], [ %.073, %363 ], [ %.073, %353 ], [ %.073, %343 ], [ %.073, %342 ], [ %.073, %331 ], [ %.073, %321 ], [ %.073, %320 ], [ %.073, %302 ], [ %.073, %292 ], [ %.073, %289 ], [ %.073, %288 ], [ %.073, %286 ], [ %.073, %275 ], [ %.073, %265 ], [ %.073, %263 ], [ %.073, %262 ], [ %.073, %252 ], [ %.073, %242 ], [ %.073, %241 ], [ %.073, %226 ], [ %.073, %216 ], [ %.073, %214 ], [ %.073, %202 ], [ %.073, %192 ], [ %.073, %191 ], [ %.073, %181 ], [ %.073, %171 ], [ %.073, %169 ], [ %.073, %168 ], [ %.073, %167 ], [ %.073, %156 ], [ %.073, %146 ], [ %.073, %145 ], [ %.073, %132 ], [ %.073, %122 ], [ %.073, %119 ], [ %.073, %118 ], [ %.073, %115 ], [ %.073, %113 ], [ %.073, %112 ], [ %102, %101 ], [ %.073, %91 ], [ %.073, %90 ], [ %.073, %73 ], [ %.073, %63 ], [ %.073, %60 ], [ %.073, %59 ], [ 500003, %47 ], [ %.073, %37 ], [ %.073, %36 ], [ %.073, %25 ], [ %.073, %15 ], [ %.073, %7 ], [ %.073, %4 ]
  %.071.be = phi i32 [ %.071, %3 ], [ %.071, %445 ], [ %.071, %444 ], [ %.071, %442 ], [ %.071, %433 ], [ %.071, %432 ], [ %.071, %430 ], [ %.071, %424 ], [ %.071, %423 ], [ %.071, %422 ], [ %.071, %420 ], [ %.071, %415 ], [ %.071, %413 ], [ %.071, %405 ], [ %.071, %402 ], [ %.071, %400 ], [ %.071, %397 ], [ %.071, %386 ], [ %.071, %376 ], [ %.071, %370 ], [ %.071, %367 ], [ %.071, %366 ], [ %.071, %364 ], [ %.071, %363 ], [ %.071, %353 ], [ %.071, %343 ], [ %.071, %342 ], [ %.071, %331 ], [ %.071, %321 ], [ %.071, %320 ], [ %.071, %302 ], [ %.071, %292 ], [ %.071, %289 ], [ %.071, %288 ], [ %.071, %286 ], [ %.071, %275 ], [ %.071, %265 ], [ %.071, %263 ], [ %.071, %262 ], [ %.071, %252 ], [ %.071, %242 ], [ %.071, %241 ], [ %.071, %226 ], [ %.071, %216 ], [ %.071, %214 ], [ %.071, %202 ], [ %.071, %192 ], [ %.071, %191 ], [ %.071, %181 ], [ %.071, %171 ], [ %170, %169 ], [ %.071, %168 ], [ %.071, %167 ], [ %.071, %156 ], [ %.071, %146 ], [ %.071, %145 ], [ %.071, %132 ], [ %.071, %122 ], [ %.071, %119 ], [ %.071, %118 ], [ %.071, %115 ], [ 1, %113 ], [ %.071, %112 ], [ %.071, %101 ], [ %.071, %91 ], [ %.071, %90 ], [ %.071, %73 ], [ %.071, %63 ], [ %.071, %60 ], [ %.071, %59 ], [ %.071, %47 ], [ %.071, %37 ], [ %.071, %36 ], [ %.071, %25 ], [ %.071, %15 ], [ %.071, %7 ], [ %.071, %4 ]
  %.069.be = phi i32 [ %.069, %3 ], [ %.069, %445 ], [ %.069, %444 ], [ %.069, %442 ], [ %.069, %433 ], [ %.069, %432 ], [ %.069, %430 ], [ %.069, %424 ], [ %.069, %423 ], [ %.069, %422 ], [ %421, %420 ], [ %.069, %415 ], [ %.069, %413 ], [ %.069, %405 ], [ %.069, %402 ], [ %.069, %400 ], [ %.069, %397 ], [ %.069, %386 ], [ %.069, %376 ], [ %.069, %370 ], [ %.069, %367 ], [ %.069, %366 ], [ %.069, %364 ], [ %.069, %363 ], [ %.069, %353 ], [ %.069, %343 ], [ %.069, %342 ], [ %.069, %331 ], [ %.069, %321 ], [ %.069, %320 ], [ %.069, %302 ], [ %.069, %292 ], [ %.069, %289 ], [ %.069, %288 ], [ %.069, %286 ], [ %.069, %275 ], [ %.069, %265 ], [ %.069, %263 ], [ %.069, %262 ], [ %.069, %252 ], [ %.069, %242 ], [ %.069, %241 ], [ %.069, %226 ], [ %.069, %216 ], [ %.069, %214 ], [ %.069, %202 ], [ %.069, %192 ], [ %.069, %191 ], [ %.069, %181 ], [ %.069, %171 ], [ %.069, %169 ], [ %.069, %168 ], [ %.069, %167 ], [ %157, %156 ], [ %.069, %146 ], [ %.069, %145 ], [ %.069, %132 ], [ %.069, %122 ], [ %.069, %119 ], [ %.071, %118 ], [ %.069, %115 ], [ %.069, %113 ], [ %.069, %112 ], [ %.069, %101 ], [ %.069, %91 ], [ %.069, %90 ], [ %.069, %73 ], [ %.069, %63 ], [ %.069, %60 ], [ %.069, %59 ], [ %.069, %47 ], [ %.069, %37 ], [ %.069, %36 ], [ %.069, %25 ], [ %.069, %15 ], [ %.069, %7 ], [ %.069, %4 ]
  %.067.be = phi i32 [ %.067, %3 ], [ %.067, %445 ], [ %.067, %444 ], [ %.067, %442 ], [ %.067, %433 ], [ %.067, %432 ], [ %431, %430 ], [ %.067, %424 ], [ %.067, %423 ], [ 1, %422 ], [ %.067, %420 ], [ %.067, %415 ], [ %.067, %413 ], [ %.067, %405 ], [ %.067, %402 ], [ %.067, %400 ], [ %.067, %397 ], [ %.067, %386 ], [ %.067, %376 ], [ %.067, %370 ], [ %.067, %367 ], [ %.067, %366 ], [ %.067, %364 ], [ %.067, %363 ], [ %.067, %353 ], [ %.067, %343 ], [ %.067, %342 ], [ %.067, %331 ], [ %.067, %321 ], [ %.067, %320 ], [ %.067, %302 ], [ %.067, %292 ], [ %.067, %289 ], [ %.067, %288 ], [ %.067, %286 ], [ %.067, %275 ], [ %.067, %265 ], [ %.067, %263 ], [ %.067, %262 ], [ %.neg, %252 ], [ %.067, %242 ], [ %.067, %241 ], [ %.067, %226 ], [ %.067, %216 ], [ %.067, %214 ], [ %.067, %202 ], [ %.067, %192 ], [ %.067, %191 ], [ 1, %181 ], [ %.067, %171 ], [ %.067, %169 ], [ %.067, %168 ], [ %.067, %167 ], [ %.067, %156 ], [ %.067, %146 ], [ %.067, %145 ], [ %.067, %132 ], [ %.067, %122 ], [ %.067, %119 ], [ %.067, %118 ], [ %.067, %115 ], [ %.067, %113 ], [ %.067, %112 ], [ %.067, %101 ], [ %.067, %91 ], [ %.067, %90 ], [ %.067, %73 ], [ %.067, %63 ], [ %.067, %60 ], [ %.067, %59 ], [ %.067, %47 ], [ %.067, %37 ], [ %.067, %36 ], [ %.067, %25 ], [ %.067, %15 ], [ %.067, %7 ], [ %.067, %4 ]
  %.065.be = phi i32 [ %.065, %3 ], [ %.065, %445 ], [ %.065, %444 ], [ %.065, %442 ], [ %.065, %433 ], [ %.065, %432 ], [ %.065, %430 ], [ %.065, %424 ], [ %.065, %423 ], [ %.065, %422 ], [ %.065, %420 ], [ %.065, %415 ], [ %.065, %413 ], [ %.065, %405 ], [ %.065, %402 ], [ %.065, %400 ], [ %.065, %397 ], [ %.065, %386 ], [ %.065, %376 ], [ %.065, %370 ], [ %.065, %367 ], [ %.065, %366 ], [ %365, %364 ], [ %.065, %363 ], [ %.065, %353 ], [ %.065, %343 ], [ %.065, %342 ], [ %.065, %331 ], [ %.065, %321 ], [ %.065, %320 ], [ %.065, %302 ], [ %.065, %292 ], [ %.065, %289 ], [ %.065, %288 ], [ %.065, %286 ], [ %.065, %275 ], [ %.065, %265 ], [ %264, %263 ], [ %.065, %262 ], [ %.065, %252 ], [ %.065, %242 ], [ %.065, %241 ], [ %.065, %226 ], [ %.065, %216 ], [ %.065, %214 ], [ %.065, %202 ], [ %.065, %192 ], [ %.065, %191 ], [ %.065, %181 ], [ %.065, %171 ], [ %.065, %169 ], [ %.065, %168 ], [ %.065, %167 ], [ %.065, %156 ], [ %.065, %146 ], [ %.065, %145 ], [ %.065, %132 ], [ %.065, %122 ], [ %.065, %119 ], [ %.065, %118 ], [ %.065, %115 ], [ %.065, %113 ], [ %.065, %112 ], [ %.065, %101 ], [ %.065, %91 ], [ %.065, %90 ], [ %.065, %73 ], [ %.065, %63 ], [ %.065, %60 ], [ %.065, %59 ], [ %.065, %47 ], [ %.065, %37 ], [ %.065, %36 ], [ %.065, %25 ], [ %.065, %15 ], [ %.065, %7 ], [ %.065, %4 ]
  %.063.be = phi i32 [ %.063, %3 ], [ %.063, %445 ], [ %.063, %444 ], [ %443, %442 ], [ %.063, %433 ], [ %.063, %432 ], [ %.063, %430 ], [ %.063, %424 ], [ %.063, %423 ], [ %.063, %422 ], [ %.063, %420 ], [ %.063, %415 ], [ %.063, %413 ], [ %.063, %405 ], [ %.063, %402 ], [ %.063, %400 ], [ %.063, %397 ], [ %.063, %386 ], [ %.063, %376 ], [ %.063, %370 ], [ %.063, %367 ], [ %.063, %366 ], [ %.063, %364 ], [ %.063, %363 ], [ %.063, %353 ], [ %.063, %343 ], [ %.063, %342 ], [ %332, %331 ], [ %.063, %321 ], [ %.063, %320 ], [ %.063, %302 ], [ %.063, %292 ], [ %.063, %289 ], [ %reass.add, %288 ], [ %.063, %286 ], [ %.063, %275 ], [ %.063, %265 ], [ %.063, %263 ], [ %.063, %262 ], [ %.063, %252 ], [ %.063, %242 ], [ %.063, %241 ], [ %.063, %226 ], [ %.063, %216 ], [ %.063, %214 ], [ %.063, %202 ], [ %.063, %192 ], [ %.063, %191 ], [ %.063, %181 ], [ %.063, %171 ], [ %.063, %169 ], [ %.063, %168 ], [ %.063, %167 ], [ %.063, %156 ], [ %.063, %146 ], [ %.063, %145 ], [ %.063, %132 ], [ %.063, %122 ], [ %.063, %119 ], [ %.063, %118 ], [ %.063, %115 ], [ %.063, %113 ], [ %.063, %112 ], [ %.063, %101 ], [ %.063, %91 ], [ %.063, %90 ], [ %.063, %73 ], [ %.063, %63 ], [ %.063, %60 ], [ %.063, %59 ], [ %.063, %47 ], [ %.063, %37 ], [ %.063, %36 ], [ %.063, %25 ], [ %.063, %15 ], [ %.063, %7 ], [ %.063, %4 ]
  %.061.be = phi i32 [ %.061, %3 ], [ %.061, %445 ], [ %.061, %444 ], [ %.061, %442 ], [ %.061, %433 ], [ %.061, %432 ], [ %.061, %430 ], [ %.061, %424 ], [ %.061, %423 ], [ %.061, %422 ], [ %.061, %420 ], [ %.061, %415 ], [ %.061, %413 ], [ %.061, %405 ], [ %.061, %402 ], [ %.061, %400 ], [ %.061, %397 ], [ %.061, %386 ], [ %.061, %376 ], [ %375, %370 ], [ %.061, %367 ], [ 0, %366 ], [ %.061, %364 ], [ %.061, %363 ], [ %.061, %353 ], [ %.061, %343 ], [ %.061, %342 ], [ %.061, %331 ], [ %.061, %321 ], [ %.061, %320 ], [ %.061, %302 ], [ %.061, %292 ], [ %.061, %289 ], [ %.061, %288 ], [ %.061, %286 ], [ %.061, %275 ], [ %.061, %265 ], [ %.061, %263 ], [ %.061, %262 ], [ %.061, %252 ], [ %.061, %242 ], [ %.061, %241 ], [ %.061, %226 ], [ %.061, %216 ], [ %.061, %214 ], [ %.061, %202 ], [ %.061, %192 ], [ %.061, %191 ], [ %.061, %181 ], [ %.061, %171 ], [ %.061, %169 ], [ %.061, %168 ], [ %.061, %167 ], [ %.061, %156 ], [ %.061, %146 ], [ %.061, %145 ], [ %.061, %132 ], [ %.061, %122 ], [ %.061, %119 ], [ %.061, %118 ], [ %.061, %115 ], [ %.061, %113 ], [ %.061, %112 ], [ %.061, %101 ], [ %.061, %91 ], [ %.061, %90 ], [ %.061, %73 ], [ %.061, %63 ], [ %.061, %60 ], [ %.061, %59 ], [ %.061, %47 ], [ %.061, %37 ], [ %.061, %36 ], [ %.061, %25 ], [ %.061, %15 ], [ %.061, %7 ], [ %.061, %4 ]
  %.059.be = phi i32 [ %.059, %3 ], [ %446, %445 ], [ %.059, %444 ], [ %.059, %442 ], [ %.059, %433 ], [ %.059, %432 ], [ %.059, %430 ], [ %.059, %424 ], [ %.059, %423 ], [ %.059, %422 ], [ %.059, %420 ], [ %.059, %415 ], [ %.059, %413 ], [ %.059, %405 ], [ %.059, %402 ], [ %.059, %400 ], [ %.059, %397 ], [ %387, %386 ], [ %.059, %376 ], [ %.059, %370 ], [ %.059, %367 ], [ 1, %366 ], [ %.059, %364 ], [ %.059, %363 ], [ %.059, %353 ], [ %.059, %343 ], [ %.059, %342 ], [ %.059, %331 ], [ %.059, %321 ], [ %.059, %320 ], [ %.059, %302 ], [ %.059, %292 ], [ %.059, %289 ], [ %.059, %288 ], [ %.059, %286 ], [ %.059, %275 ], [ %.059, %265 ], [ %.059, %263 ], [ %.059, %262 ], [ %.059, %252 ], [ %.059, %242 ], [ %.059, %241 ], [ %.059, %226 ], [ %.059, %216 ], [ %.059, %214 ], [ %.059, %202 ], [ %.059, %192 ], [ %.059, %191 ], [ %.059, %181 ], [ %.059, %171 ], [ %.059, %169 ], [ %.059, %168 ], [ %.059, %167 ], [ %.059, %156 ], [ %.059, %146 ], [ %.059, %145 ], [ %.059, %132 ], [ %.059, %122 ], [ %.059, %119 ], [ %.059, %118 ], [ %.059, %115 ], [ %.059, %113 ], [ %.059, %112 ], [ %.059, %101 ], [ %.059, %91 ], [ %.059, %90 ], [ %.059, %73 ], [ %.059, %63 ], [ %.059, %60 ], [ %.059, %59 ], [ %.059, %47 ], [ %.059, %37 ], [ %.059, %36 ], [ %.059, %25 ], [ %.059, %15 ], [ %.059, %7 ], [ %.059, %4 ]
  %.0.be = phi i32 [ %.0, %3 ], [ -2008952930, %445 ], [ -1233018413, %444 ], [ 776445956, %442 ], [ -432306547, %433 ], [ -1482794822, %432 ], [ -1204811025, %430 ], [ -1966707773, %424 ], [ 864098999, %423 ], [ 440450616, %422 ], [ -1064568594, %420 ], [ 436658244, %415 ], [ 1167789416, %413 ], [ 1414773352, %405 ], [ 161900045, %402 ], [ 459860746, %400 ], [ -756924232, %397 ], [ %396, %386 ], [ %385, %376 ], [ -1212923988, %370 ], [ %369, %367 ], [ -756924232, %366 ], [ -741776736, %364 ], [ -267604911, %363 ], [ %362, %353 ], [ %352, %343 ], [ 665035392, %342 ], [ %341, %331 ], [ %330, %321 ], [ 1745672780, %320 ], [ %319, %302 ], [ %301, %292 ], [ %291, %289 ], [ 665035392, %288 ], [ %287, %286 ], [ %285, %275 ], [ %274, %265 ], [ -741776736, %263 ], [ -134114624, %262 ], [ %261, %252 ], [ %251, %242 ], [ -310014238, %241 ], [ %240, %226 ], [ %225, %216 ], [ %215, %214 ], [ %213, %202 ], [ %201, %192 ], [ -134114624, %191 ], [ %190, %181 ], [ %180, %171 ], [ 204116357, %169 ], [ 1459633721, %168 ], [ -1566330622, %167 ], [ %166, %156 ], [ %155, %146 ], [ -1731364619, %145 ], [ %144, %132 ], [ %131, %122 ], [ %121, %119 ], [ -1566330622, %118 ], [ %117, %115 ], [ 204116357, %113 ], [ -1142411159, %112 ], [ %111, %101 ], [ %100, %91 ], [ 2045910549, %90 ], [ %89, %73 ], [ %72, %63 ], [ %62, %60 ], [ -1142411159, %59 ], [ %58, %47 ], [ %46, %37 ], [ -450256100, %36 ], [ %35, %25 ], [ %24, %15 ], [ -749542815, %7 ], [ %6, %4 ]
  br label %3

4:                                                ; preds = %3
  %5 = icmp slt i32 %.075, 500005
  %6 = select i1 %5, i32 -1776076510, i32 -1599399526
  br label %.backedge

7:                                                ; preds = %3
  %8 = add i32 %.075, -1
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [500005 x i32], [500005 x i32]* @fat, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @_Z3mulii(i32 %.075, i32 %11)
  %13 = sext i32 %.075 to i64
  %14 = getelementptr inbounds [500005 x i32], [500005 x i32]* @fat, i64 0, i64 %13
  store i32 %12, i32* %14, align 4
  br label %.backedge

15:                                               ; preds = %3
  %16 = load i32, i32* @x.10, align 4
  %17 = load i32, i32* @y.11, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 459860746, i32 264248582
  br label %.backedge

25:                                               ; preds = %3
  %26 = add i32 %.075, 1
  %27 = load i32, i32* @x.10, align 4
  %28 = load i32, i32* @y.11, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -372323440, i32 264248582
  br label %.backedge

36:                                               ; preds = %3
  br label %.backedge

37:                                               ; preds = %3
  %38 = load i32, i32* @x.10, align 4
  %39 = load i32, i32* @y.11, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 161900045, i32 -876573053
  br label %.backedge

47:                                               ; preds = %3
  %48 = load i32, i32* getelementptr inbounds ([500005 x i32], [500005 x i32]* @fat, i64 0, i64 500004), align 16
  %49 = tail call i32 @_Z4fexpii(i32 %48, i32 1000000005)
  store i32 %49, i32* getelementptr inbounds ([500005 x i32], [500005 x i32]* @ifat, i64 0, i64 500004), align 16
  %50 = load i32, i32* @x.10, align 4
  %51 = load i32, i32* @y.11, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -807540586, i32 -876573053
  br label %.backedge

59:                                               ; preds = %3
  br label %.backedge

60:                                               ; preds = %3
  %61 = icmp sgt i32 %.073, -1
  %62 = select i1 %61, i32 96383821, i32 1522874051
  br label %.backedge

63:                                               ; preds = %3
  %64 = load i32, i32* @x.10, align 4
  %65 = load i32, i32* @y.11, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 1414773352, i32 1734602192
  br label %.backedge

73:                                               ; preds = %3
  %74 = add i32 %.073, 1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [500005 x i32], [500005 x i32]* @ifat, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = tail call i32 @_Z3mulii(i32 %74, i32 %77)
  %79 = sext i32 %.073 to i64
  %80 = getelementptr inbounds [500005 x i32], [500005 x i32]* @ifat, i64 0, i64 %79
  store i32 %78, i32* %80, align 4
  %81 = load i32, i32* @x.10, align 4
  %82 = load i32, i32* @y.11, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 566129118, i32 1734602192
  br label %.backedge

90:                                               ; preds = %3
  br label %.backedge

91:                                               ; preds = %3
  %92 = load i32, i32* @x.10, align 4
  %93 = load i32, i32* @y.11, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 1167789416, i32 -1125379662
  br label %.backedge

101:                                              ; preds = %3
  %102 = add i32 %.073, -1
  %103 = load i32, i32* @x.10, align 4
  %104 = load i32, i32* @y.11, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 1059601724, i32 -1125379662
  br label %.backedge

112:                                              ; preds = %3
  br label %.backedge

113:                                              ; preds = %3
  %114 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull @k)
  br label %.backedge

115:                                              ; preds = %3
  %116 = load i32, i32* @k, align 4
  %.not80 = icmp sgt i32 %.071, %116
  %117 = select i1 %.not80, i32 1409566214, i32 -1227305549
  br label %.backedge

118:                                              ; preds = %3
  br label %.backedge

119:                                              ; preds = %3
  %120 = load i32, i32* @k, align 4
  %.not79 = icmp sgt i32 %.069, %120
  %121 = select i1 %.not79, i32 -1693563594, i32 1221895289
  br label %.backedge

122:                                              ; preds = %3
  %123 = load i32, i32* @x.10, align 4
  %124 = load i32, i32* @y.11, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 436658244, i32 -312682603
  br label %.backedge

132:                                              ; preds = %3
  %133 = sext i32 %.071 to i64
  %134 = getelementptr inbounds [500005 x i32], [500005 x i32]* @cnt, i64 0, i64 %133
  %135 = load i32, i32* %134, align 4
  %.neg78 = add i32 %135, 1
  store i32 %.neg78, i32* %134, align 4
  %136 = load i32, i32* @x.10, align 4
  %137 = load i32, i32* @y.11, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 1905235071, i32 -312682603
  br label %.backedge

145:                                              ; preds = %3
  br label %.backedge

146:                                              ; preds = %3
  %147 = load i32, i32* @x.10, align 4
  %148 = load i32, i32* @y.11, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 -1064568594, i32 -472877370
  br label %.backedge

156:                                              ; preds = %3
  %157 = add i32 %.069, %.071
  %158 = load i32, i32* @x.10, align 4
  %159 = load i32, i32* @y.11, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 -1886623000, i32 -472877370
  br label %.backedge

167:                                              ; preds = %3
  br label %.backedge

168:                                              ; preds = %3
  br label %.backedge

169:                                              ; preds = %3
  %170 = add i32 %.071, 1
  br label %.backedge

171:                                              ; preds = %3
  %172 = load i32, i32* @x.10, align 4
  %173 = load i32, i32* @y.11, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 440450616, i32 467107816
  br label %.backedge

181:                                              ; preds = %3
  %182 = load i32, i32* @x.10, align 4
  %183 = load i32, i32* @y.11, align 4
  %184 = add i32 %182, -1
  %185 = mul i32 %184, %182
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %188, %187
  %190 = select i1 %189, i32 -1654347518, i32 467107816
  br label %.backedge

191:                                              ; preds = %3
  br label %.backedge

192:                                              ; preds = %3
  %193 = load i32, i32* @x.10, align 4
  %194 = load i32, i32* @y.11, align 4
  %195 = add i32 %193, -1
  %196 = mul i32 %195, %193
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %199, %198
  %201 = select i1 %200, i32 864098999, i32 1261454792
  br label %.backedge

202:                                              ; preds = %3
  %203 = load i32, i32* @k, align 4
  %204 = icmp sle i32 %.067, %203
  store i1 %204, i1* %2, align 1
  %205 = load i32, i32* @x.10, align 4
  %206 = load i32, i32* @y.11, align 4
  %207 = add i32 %205, -1
  %208 = mul i32 %207, %205
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %211, %210
  %213 = select i1 %212, i32 -1081983061, i32 1261454792
  br label %.backedge

214:                                              ; preds = %3
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %215 = select i1 %.0..0..0., i32 1739270212, i32 1994104177
  br label %.backedge

216:                                              ; preds = %3
  %217 = load i32, i32* @x.10, align 4
  %218 = load i32, i32* @y.11, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 -1966707773, i32 1992991303
  br label %.backedge

226:                                              ; preds = %3
  %227 = sext i32 %.067 to i64
  %228 = getelementptr inbounds [500005 x i32], [500005 x i32]* @cnt, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = load i32, i32* @n, align 4
  %231 = tail call i32 @_Z4fexpii(i32 %229, i32 %230)
  store i32 %231, i32* %228, align 4
  %232 = load i32, i32* @x.10, align 4
  %233 = load i32, i32* @y.11, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 -364931811, i32 1992991303
  br label %.backedge

241:                                              ; preds = %3
  br label %.backedge

242:                                              ; preds = %3
  %243 = load i32, i32* @x.10, align 4
  %244 = load i32, i32* @y.11, align 4
  %245 = add i32 %243, -1
  %246 = mul i32 %245, %243
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %249, %248
  %251 = select i1 %250, i32 -1204811025, i32 -1100776396
  br label %.backedge

252:                                              ; preds = %3
  %.neg = add i32 %.067, 1
  %253 = load i32, i32* @x.10, align 4
  %254 = load i32, i32* @y.11, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 1798795353, i32 -1100776396
  br label %.backedge

262:                                              ; preds = %3
  br label %.backedge

263:                                              ; preds = %3
  %264 = load i32, i32* @k, align 4
  br label %.backedge

265:                                              ; preds = %3
  %266 = load i32, i32* @x.10, align 4
  %267 = load i32, i32* @y.11, align 4
  %268 = add i32 %266, -1
  %269 = mul i32 %268, %266
  %270 = and i32 %269, 1
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %272, %271
  %274 = select i1 %273, i32 -1482794822, i32 -2094395788
  br label %.backedge

275:                                              ; preds = %3
  %276 = icmp sgt i32 %.065, 0
  store i1 %276, i1* %1, align 1
  %277 = load i32, i32* @x.10, align 4
  %278 = load i32, i32* @y.11, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 1398921249, i32 -2094395788
  br label %.backedge

286:                                              ; preds = %3
  %.0..0..0.58 = load volatile i1, i1* %1, align 1
  %287 = select i1 %.0..0..0.58, i32 493811423, i32 296507823
  br label %.backedge

288:                                              ; preds = %3
  %reass.add = shl i32 %.065, 1
  br label %.backedge

289:                                              ; preds = %3
  %290 = load i32, i32* @k, align 4
  %.not77 = icmp sgt i32 %.063, %290
  %291 = select i1 %.not77, i32 2127512648, i32 -1743037228
  br label %.backedge

292:                                              ; preds = %3
  %293 = load i32, i32* @x.10, align 4
  %294 = load i32, i32* @y.11, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 -432306547, i32 1390774676
  br label %.backedge

302:                                              ; preds = %3
  %303 = sext i32 %.065 to i64
  %304 = getelementptr inbounds [500005 x i32], [500005 x i32]* @cnt, i64 0, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = sext i32 %.063 to i64
  %307 = getelementptr inbounds [500005 x i32], [500005 x i32]* @cnt, i64 0, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = sub i32 1000000007, %308
  %310 = tail call i32 @_Z3addii(i32 %305, i32 %309)
  store i32 %310, i32* %304, align 4
  %311 = load i32, i32* @x.10, align 4
  %312 = load i32, i32* @y.11, align 4
  %313 = add i32 %311, -1
  %314 = mul i32 %313, %311
  %315 = and i32 %314, 1
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %317, %316
  %319 = select i1 %318, i32 -1990347112, i32 1390774676
  br label %.backedge

320:                                              ; preds = %3
  br label %.backedge

321:                                              ; preds = %3
  %322 = load i32, i32* @x.10, align 4
  %323 = load i32, i32* @y.11, align 4
  %324 = add i32 %322, -1
  %325 = mul i32 %324, %322
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %328, %327
  %330 = select i1 %329, i32 776445956, i32 1207888851
  br label %.backedge

331:                                              ; preds = %3
  %332 = add i32 %.063, %.065
  %333 = load i32, i32* @x.10, align 4
  %334 = load i32, i32* @y.11, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 1706079709, i32 1207888851
  br label %.backedge

342:                                              ; preds = %3
  br label %.backedge

343:                                              ; preds = %3
  %344 = load i32, i32* @x.10, align 4
  %345 = load i32, i32* @y.11, align 4
  %346 = add i32 %344, -1
  %347 = mul i32 %346, %344
  %348 = and i32 %347, 1
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %350, %349
  %352 = select i1 %351, i32 -1233018413, i32 1989708143
  br label %.backedge

353:                                              ; preds = %3
  %354 = load i32, i32* @x.10, align 4
  %355 = load i32, i32* @y.11, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 -68274896, i32 1989708143
  br label %.backedge

363:                                              ; preds = %3
  br label %.backedge

364:                                              ; preds = %3
  %365 = add i32 %.065, -1
  br label %.backedge

366:                                              ; preds = %3
  br label %.backedge

367:                                              ; preds = %3
  %368 = load i32, i32* @k, align 4
  %.not = icmp sgt i32 %.059, %368
  %369 = select i1 %.not, i32 -1388153904, i32 1851239753
  br label %.backedge

370:                                              ; preds = %3
  %371 = sext i32 %.059 to i64
  %372 = getelementptr inbounds [500005 x i32], [500005 x i32]* @cnt, i64 0, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = tail call i32 @_Z3mulii(i32 %.059, i32 %373)
  %375 = tail call i32 @_Z3addii(i32 %.061, i32 %374)
  br label %.backedge

376:                                              ; preds = %3
  %377 = load i32, i32* @x.10, align 4
  %378 = load i32, i32* @y.11, align 4
  %379 = add i32 %377, -1
  %380 = mul i32 %379, %377
  %381 = and i32 %380, 1
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %383, %382
  %385 = select i1 %384, i32 -2008952930, i32 -1142555348
  br label %.backedge

386:                                              ; preds = %3
  %387 = add i32 %.059, 1
  %388 = load i32, i32* @x.10, align 4
  %389 = load i32, i32* @y.11, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 -910328143, i32 -1142555348
  br label %.backedge

397:                                              ; preds = %3
  br label %.backedge

398:                                              ; preds = %3
  %399 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %.061)
  ret i32 0

400:                                              ; preds = %3
  %401 = add i32 %.075, 1
  br label %.backedge

402:                                              ; preds = %3
  %403 = load i32, i32* getelementptr inbounds ([500005 x i32], [500005 x i32]* @fat, i64 0, i64 500004), align 16
  %404 = tail call i32 @_Z4fexpii(i32 %403, i32 1000000005)
  store i32 %404, i32* getelementptr inbounds ([500005 x i32], [500005 x i32]* @ifat, i64 0, i64 500004), align 16
  br label %.backedge

405:                                              ; preds = %3
  %406 = add i32 %.073, 1
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds [500005 x i32], [500005 x i32]* @ifat, i64 0, i64 %407
  %409 = load i32, i32* %408, align 4
  %410 = tail call i32 @_Z3mulii(i32 %406, i32 %409)
  %411 = sext i32 %.073 to i64
  %412 = getelementptr inbounds [500005 x i32], [500005 x i32]* @ifat, i64 0, i64 %411
  store i32 %410, i32* %412, align 4
  br label %.backedge

413:                                              ; preds = %3
  %414 = add i32 %.073, -1
  br label %.backedge

415:                                              ; preds = %3
  %416 = sext i32 %.071 to i64
  %417 = getelementptr inbounds [500005 x i32], [500005 x i32]* @cnt, i64 0, i64 %416
  %418 = load i32, i32* %417, align 4
  %419 = add i32 %418, 1
  store i32 %419, i32* %417, align 4
  br label %.backedge

420:                                              ; preds = %3
  %421 = add i32 %.069, %.071
  br label %.backedge

422:                                              ; preds = %3
  br label %.backedge

423:                                              ; preds = %3
  br label %.backedge

424:                                              ; preds = %3
  %425 = sext i32 %.067 to i64
  %426 = getelementptr inbounds [500005 x i32], [500005 x i32]* @cnt, i64 0, i64 %425
  %427 = load i32, i32* %426, align 4
  %428 = load i32, i32* @n, align 4
  %429 = tail call i32 @_Z4fexpii(i32 %427, i32 %428)
  store i32 %429, i32* %426, align 4
  br label %.backedge

430:                                              ; preds = %3
  %431 = add i32 %.067, 1
  br label %.backedge

432:                                              ; preds = %3
  br label %.backedge

433:                                              ; preds = %3
  %434 = sext i32 %.065 to i64
  %435 = getelementptr inbounds [500005 x i32], [500005 x i32]* @cnt, i64 0, i64 %434
  %436 = load i32, i32* %435, align 4
  %437 = sext i32 %.063 to i64
  %438 = getelementptr inbounds [500005 x i32], [500005 x i32]* @cnt, i64 0, i64 %437
  %439 = load i32, i32* %438, align 4
  %440 = sub i32 1000000007, %439
  %441 = tail call i32 @_Z3addii(i32 %436, i32 %440)
  store i32 %441, i32* %435, align 4
  br label %.backedge

442:                                              ; preds = %3
  %443 = add i32 %.063, %.065
  br label %.backedge

444:                                              ; preds = %3
  br label %.backedge

445:                                              ; preds = %3
  %446 = add i32 %.059, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s154270615.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.12, align 4
  %4 = load i32, i32* @y.13, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1826716517, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1826716517, label %11
    i32 -800530756, label %14
    i32 2145856589, label %24
    i32 378990581, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -800530756, i32 378990581
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.12, align 4
  %16 = load i32, i32* @y.13, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 2145856589, i32 378990581
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -800530756, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
