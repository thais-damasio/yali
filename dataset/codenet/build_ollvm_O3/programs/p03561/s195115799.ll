; ModuleID = 'build_ollvm/programs/p03561/s195115799.ll'
source_filename = "Project_CodeNet_C++1400/p03561/s195115799.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@a = local_unnamed_addr global [300010 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s195115799.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %10 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %13
  %15 = bitcast i8* %14 to %"class.std::basic_ios"*
  %16 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %15, %"class.std::basic_ostream"* null)
  %17 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %18 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %17, i32* nonnull dereferenceable(4) %8)
  %19 = load i32, i32* %7, align 4
  %20 = srem i32 %19, 2
  store i32 %20, i32* %6, align 4
  br label %21

21:                                               ; preds = %.backedge, %0
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.045 = phi i32 [ undef, %0 ], [ %.045.be, %.backedge ]
  %.043 = phi i32 [ undef, %0 ], [ %.043.be, %.backedge ]
  %.041 = phi i32 [ undef, %0 ], [ %.041.be, %.backedge ]
  %.039 = phi i32 [ undef, %0 ], [ %.039.be, %.backedge ]
  %.037 = phi i32 [ undef, %0 ], [ %.037.be, %.backedge ]
  %.035 = phi i32 [ -513820526, %0 ], [ %.035.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.035, label %.backedge [
    i32 -513820526, label %22
    i32 -669709244, label %25
    i32 339999461, label %29
    i32 10560941, label %39
    i32 -1030091226, label %51
    i32 857849050, label %53
    i32 -821281474, label %57
    i32 -1264733655, label %58
    i32 -1085943099, label %68
    i32 1727576023, label %78
    i32 1544783142, label %79
    i32 -1840772029, label %89
    i32 69618734, label %101
    i32 1532042220, label %103
    i32 860383622, label %104
    i32 -1773336304, label %109
    i32 -1384259812, label %112
    i32 -1513651926, label %113
    i32 -1573737275, label %123
    i32 2053644781, label %133
    i32 1120973107, label %134
    i32 -893337968, label %135
    i32 -988287361, label %145
    i32 -1812280999, label %157
    i32 -97142946, label %159
    i32 461453427, label %169
    i32 1447674552, label %183
    i32 336636190, label %184
    i32 -1090219009, label %186
    i32 -1524537136, label %196
    i32 189480358, label %208
    i32 -1168765008, label %209
    i32 909654374, label %211
    i32 -1705654977, label %221
    i32 -90468996, label %232
    i32 931363680, label %233
    i32 -1679718754, label %239
    i32 -1043824845, label %241
    i32 -2027531643, label %251
    i32 235492250, label %261
    i32 1914907677, label %263
    i32 1814086305, label %264
    i32 1705879053, label %274
    i32 1376536826, label %284
    i32 189556539, label %285
    i32 132237378, label %295
    i32 1399384763, label %310
    i32 1492993230, label %312
    i32 1521880625, label %313
    i32 -216911090, label %316
    i32 -227940231, label %326
    i32 68735225, label %339
    i32 466529368, label %340
    i32 1281392822, label %342
    i32 -710819487, label %343
    i32 330816642, label %344
    i32 1930568868, label %346
    i32 1653725937, label %347
    i32 360223443, label %350
    i32 100125582, label %355
    i32 -608856886, label %365
    i32 -891066664, label %375
    i32 1027468816, label %376
    i32 948098059, label %382
    i32 -1441302525, label %392
    i32 1921859323, label %402
    i32 -1276230135, label %403
    i32 27925760, label %413
    i32 -1176641480, label %423
    i32 -2131322428, label %424
    i32 1097330170, label %425
    i32 1414896805, label %426
    i32 -427884330, label %427
    i32 1553308705, label %428
    i32 1204813926, label %429
    i32 1441214876, label %430
    i32 446249277, label %431
    i32 1311293749, label %437
    i32 -394400028, label %440
    i32 -712802949, label %442
    i32 -458671158, label %443
    i32 1071171773, label %445
    i32 1418024400, label %450
    i32 -1896373638, label %454
    i32 791603387, label %455
    i32 -139106537, label %457
  ]

.backedge:                                        ; preds = %21, %457, %455, %454, %450, %445, %443, %442, %440, %437, %431, %430, %429, %428, %427, %426, %424, %423, %413, %403, %402, %392, %382, %376, %375, %365, %355, %350, %347, %346, %344, %343, %342, %340, %339, %326, %316, %313, %312, %310, %295, %285, %284, %274, %264, %263, %261, %251, %241, %239, %233, %232, %221, %211, %209, %208, %196, %186, %184, %183, %169, %159, %157, %145, %135, %134, %133, %123, %113, %112, %109, %104, %103, %101, %89, %79, %78, %68, %58, %57, %53, %51, %39, %29, %25, %22
  %.049.be = phi i32 [ %.049, %21 ], [ %.049, %457 ], [ %.049, %455 ], [ %.049, %454 ], [ %.049, %450 ], [ %.049, %445 ], [ %.049, %443 ], [ %.049, %442 ], [ %.049, %440 ], [ %.049, %437 ], [ %.049, %431 ], [ %.049, %430 ], [ %.049, %429 ], [ %.049, %428 ], [ %.049, %427 ], [ %.049, %426 ], [ %.049, %424 ], [ %.049, %423 ], [ %.049, %413 ], [ %.049, %403 ], [ %.049, %402 ], [ %.049, %392 ], [ %.049, %382 ], [ %.049, %376 ], [ %.049, %375 ], [ %.049, %365 ], [ %.049, %355 ], [ %.049, %350 ], [ %.049, %347 ], [ %.049, %346 ], [ %.049, %344 ], [ %.049, %343 ], [ %.049, %342 ], [ %.049, %340 ], [ %.049, %339 ], [ %.049, %326 ], [ %.049, %316 ], [ %.049, %313 ], [ %.049, %312 ], [ %.049, %310 ], [ %.049, %295 ], [ %.049, %285 ], [ %.049, %284 ], [ %.049, %274 ], [ %.049, %264 ], [ %.049, %263 ], [ %.049, %261 ], [ %.049, %251 ], [ %.049, %241 ], [ %.049, %239 ], [ %.049, %233 ], [ %.049, %232 ], [ %.049, %221 ], [ %.049, %211 ], [ %.049, %209 ], [ %.049, %208 ], [ %.049, %196 ], [ %.049, %186 ], [ %.049, %184 ], [ %.049, %183 ], [ %.049, %169 ], [ %.049, %159 ], [ %.049, %157 ], [ %.049, %145 ], [ %.049, %135 ], [ %.049, %134 ], [ %.049, %133 ], [ %.049, %123 ], [ %.049, %113 ], [ %.049, %112 ], [ %.049, %109 ], [ %.049, %104 ], [ %.049, %103 ], [ %.049, %101 ], [ %.049, %89 ], [ %.049, %79 ], [ %.049, %78 ], [ %.049, %68 ], [ %.049, %58 ], [ %.neg60, %57 ], [ %.049, %53 ], [ %.049, %51 ], [ %.049, %39 ], [ %.049, %29 ], [ 1, %25 ], [ %.049, %22 ]
  %.047.be = phi i32 [ %.047, %21 ], [ %.047, %457 ], [ %.047, %455 ], [ %.047, %454 ], [ %.047, %450 ], [ %.047, %445 ], [ %.047, %443 ], [ %.047, %442 ], [ %.047, %440 ], [ %.047, %437 ], [ %.047, %431 ], [ %.047, %430 ], [ %.047, %429 ], [ %.047, %428 ], [ %.047, %427 ], [ %.047, %426 ], [ %.047, %424 ], [ %.047, %423 ], [ %.047, %413 ], [ %.047, %403 ], [ %.047, %402 ], [ %.047, %392 ], [ %.047, %382 ], [ %.047, %376 ], [ %.047, %375 ], [ %.047, %365 ], [ %.047, %355 ], [ %.047, %350 ], [ %.047, %347 ], [ %.047, %346 ], [ %.047, %344 ], [ %.047, %343 ], [ %.047, %342 ], [ %.047, %340 ], [ %.047, %339 ], [ %.047, %326 ], [ %.047, %316 ], [ %.047, %313 ], [ %.047, %312 ], [ %.047, %310 ], [ %.047, %295 ], [ %.047, %285 ], [ %.047, %284 ], [ %.047, %274 ], [ %.047, %264 ], [ %.047, %263 ], [ %.047, %261 ], [ %.047, %251 ], [ %.047, %241 ], [ %.047, %239 ], [ %.047, %233 ], [ %.047, %232 ], [ %.047, %221 ], [ %.047, %211 ], [ %.047, %209 ], [ %.047, %208 ], [ %.047, %196 ], [ %.047, %186 ], [ %.047, %184 ], [ %.047, %183 ], [ %.047, %169 ], [ %.047, %159 ], [ %.047, %157 ], [ %.047, %145 ], [ %.047, %135 ], [ %.047, %134 ], [ %.047, %133 ], [ %.047, %123 ], [ %.047, %113 ], [ %.neg58, %112 ], [ %.047, %109 ], [ %.047, %104 ], [ 1, %103 ], [ %.047, %101 ], [ %.047, %89 ], [ %.047, %79 ], [ %.047, %78 ], [ %.047, %68 ], [ %.047, %58 ], [ %.047, %57 ], [ %.047, %53 ], [ %.047, %51 ], [ %.047, %39 ], [ %.047, %29 ], [ %.047, %25 ], [ %.047, %22 ]
  %.045.be = phi i32 [ %.045, %21 ], [ %.045, %457 ], [ %.045, %455 ], [ %.045, %454 ], [ %.045, %450 ], [ %.045, %445 ], [ %.045, %443 ], [ %.045, %442 ], [ %.045, %440 ], [ %.045, %437 ], [ %.045, %431 ], [ %.045, %430 ], [ %.045, %429 ], [ %.045, %428 ], [ %.045, %427 ], [ %.045, %426 ], [ %.045, %424 ], [ %.045, %423 ], [ %.045, %413 ], [ %.045, %403 ], [ %.045, %402 ], [ %.045, %392 ], [ %.045, %382 ], [ %.045, %376 ], [ %.045, %375 ], [ %.045, %365 ], [ %.045, %355 ], [ %.045, %350 ], [ %.045, %347 ], [ %.045, %346 ], [ %.045, %344 ], [ %.045, %343 ], [ %.045, %342 ], [ %.045, %340 ], [ %.045, %339 ], [ %.045, %326 ], [ %.045, %316 ], [ %.045, %313 ], [ %.045, %312 ], [ %.045, %310 ], [ %.045, %295 ], [ %.045, %285 ], [ %.045, %284 ], [ %.045, %274 ], [ %.045, %264 ], [ %.045, %263 ], [ %.045, %261 ], [ %.045, %251 ], [ %.045, %241 ], [ %.045, %239 ], [ %.045, %233 ], [ %.045, %232 ], [ %.045, %221 ], [ %.045, %211 ], [ %.045, %209 ], [ %.045, %208 ], [ %.045, %196 ], [ %.045, %186 ], [ %185, %184 ], [ %.045, %183 ], [ %.045, %169 ], [ %.045, %159 ], [ %.045, %157 ], [ %.045, %145 ], [ %.045, %135 ], [ 1, %134 ], [ %.045, %133 ], [ %.045, %123 ], [ %.045, %113 ], [ %.045, %112 ], [ %.045, %109 ], [ %.045, %104 ], [ %.045, %103 ], [ %.045, %101 ], [ %.045, %89 ], [ %.045, %79 ], [ %.045, %78 ], [ %.045, %68 ], [ %.045, %58 ], [ %.045, %57 ], [ %.045, %53 ], [ %.045, %51 ], [ %.045, %39 ], [ %.045, %29 ], [ %.045, %25 ], [ %.045, %22 ]
  %.043.be = phi i32 [ %.043, %21 ], [ %.043, %457 ], [ %.043, %455 ], [ %.043, %454 ], [ %.043, %450 ], [ %.043, %445 ], [ %.043, %443 ], [ %.043, %442 ], [ %.043, %440 ], [ %439, %437 ], [ %.043, %431 ], [ %.043, %430 ], [ %.043, %429 ], [ %.043, %428 ], [ %.043, %427 ], [ %.043, %426 ], [ %.043, %424 ], [ %.043, %423 ], [ %.043, %413 ], [ %.043, %403 ], [ %.043, %402 ], [ %.043, %392 ], [ %.043, %382 ], [ %.043, %376 ], [ %.043, %375 ], [ %.043, %365 ], [ %.043, %355 ], [ %.043, %350 ], [ %.043, %347 ], [ %.043, %346 ], [ %345, %344 ], [ %.043, %343 ], [ %.043, %342 ], [ %.043, %340 ], [ %.043, %339 ], [ %.043, %326 ], [ %.043, %316 ], [ %.043, %313 ], [ %.043, %312 ], [ %.043, %310 ], [ %.043, %295 ], [ %.043, %285 ], [ %.043, %284 ], [ %.043, %274 ], [ %.043, %264 ], [ %.043, %263 ], [ %.043, %261 ], [ %.043, %251 ], [ %.043, %241 ], [ %.043, %239 ], [ %.043, %233 ], [ %.043, %232 ], [ %.043, %221 ], [ %.043, %211 ], [ %.043, %209 ], [ %.043, %208 ], [ %198, %196 ], [ %.043, %186 ], [ %.043, %184 ], [ %.043, %183 ], [ %.043, %169 ], [ %.043, %159 ], [ %.043, %157 ], [ %.043, %145 ], [ %.043, %135 ], [ %.043, %134 ], [ %.043, %133 ], [ %.043, %123 ], [ %.043, %113 ], [ %.043, %112 ], [ %.043, %109 ], [ %.043, %104 ], [ %.043, %103 ], [ %.043, %101 ], [ %.043, %89 ], [ %.043, %79 ], [ %.043, %78 ], [ %.043, %68 ], [ %.043, %58 ], [ %.043, %57 ], [ %.043, %53 ], [ %.043, %51 ], [ %.043, %39 ], [ %.043, %29 ], [ %.043, %25 ], [ %.043, %22 ]
  %.041.be = phi i32 [ %.041, %21 ], [ %.041, %457 ], [ %.041, %455 ], [ %.041, %454 ], [ %.041, %450 ], [ %.neg, %445 ], [ %444, %443 ], [ %.041, %442 ], [ %441, %440 ], [ %.041, %437 ], [ %.041, %431 ], [ %.041, %430 ], [ %.041, %429 ], [ %.041, %428 ], [ %.041, %427 ], [ %.041, %426 ], [ %.041, %424 ], [ %.041, %423 ], [ %.041, %413 ], [ %.041, %403 ], [ %.041, %402 ], [ %.041, %392 ], [ %.041, %382 ], [ %.041, %376 ], [ %.041, %375 ], [ %.041, %365 ], [ %.041, %355 ], [ %.041, %350 ], [ %.041, %347 ], [ %.041, %346 ], [ %.041, %344 ], [ %.041, %343 ], [ %.041, %342 ], [ %.041, %340 ], [ %.041, %339 ], [ %.041, %326 ], [ %.041, %316 ], [ %.041, %313 ], [ %.041, %312 ], [ %.041, %310 ], [ %.neg54, %295 ], [ %.041, %285 ], [ %.041, %284 ], [ %.neg55, %274 ], [ %.041, %264 ], [ %.041, %263 ], [ %.041, %261 ], [ %.041, %251 ], [ %.041, %241 ], [ %.041, %239 ], [ %.041, %233 ], [ %.041, %232 ], [ %222, %221 ], [ %.041, %211 ], [ %.041, %209 ], [ %.041, %208 ], [ %.041, %196 ], [ %.041, %186 ], [ %.041, %184 ], [ %.041, %183 ], [ %.041, %169 ], [ %.041, %159 ], [ %.041, %157 ], [ %.041, %145 ], [ %.041, %135 ], [ %.041, %134 ], [ %.041, %133 ], [ %.041, %123 ], [ %.041, %113 ], [ %.041, %112 ], [ %.041, %109 ], [ %.041, %104 ], [ %.041, %103 ], [ %.041, %101 ], [ %.041, %89 ], [ %.041, %79 ], [ %.041, %78 ], [ %.041, %68 ], [ %.041, %58 ], [ %.041, %57 ], [ %.041, %53 ], [ %.041, %51 ], [ %.041, %39 ], [ %.041, %29 ], [ %.041, %25 ], [ %.041, %22 ]
  %.039.be = phi i32 [ %.039, %21 ], [ %.039, %457 ], [ %.039, %455 ], [ %.039, %454 ], [ %.039, %450 ], [ %.039, %445 ], [ %.039, %443 ], [ %.039, %442 ], [ %.039, %440 ], [ %.039, %437 ], [ %.039, %431 ], [ %.039, %430 ], [ %.039, %429 ], [ %.039, %428 ], [ %.039, %427 ], [ %.039, %426 ], [ %.039, %424 ], [ %.039, %423 ], [ %.039, %413 ], [ %.039, %403 ], [ %.039, %402 ], [ %.039, %392 ], [ %.039, %382 ], [ %.039, %376 ], [ %.039, %375 ], [ %.039, %365 ], [ %.039, %355 ], [ %.039, %350 ], [ %.039, %347 ], [ %.039, %346 ], [ %.039, %344 ], [ %.039, %343 ], [ %.039, %342 ], [ %341, %340 ], [ %.039, %339 ], [ %.039, %326 ], [ %.039, %316 ], [ %.039, %313 ], [ %.041, %312 ], [ %.039, %310 ], [ %.039, %295 ], [ %.039, %285 ], [ %.039, %284 ], [ %.039, %274 ], [ %.039, %264 ], [ %.039, %263 ], [ %.039, %261 ], [ %.039, %251 ], [ %.039, %241 ], [ %.039, %239 ], [ %.039, %233 ], [ %.039, %232 ], [ %.039, %221 ], [ %.039, %211 ], [ %.039, %209 ], [ %.039, %208 ], [ %.039, %196 ], [ %.039, %186 ], [ %.039, %184 ], [ %.039, %183 ], [ %.039, %169 ], [ %.039, %159 ], [ %.039, %157 ], [ %.039, %145 ], [ %.039, %135 ], [ %.039, %134 ], [ %.039, %133 ], [ %.039, %123 ], [ %.039, %113 ], [ %.039, %112 ], [ %.039, %109 ], [ %.039, %104 ], [ %.039, %103 ], [ %.039, %101 ], [ %.039, %89 ], [ %.039, %79 ], [ %.039, %78 ], [ %.039, %68 ], [ %.039, %58 ], [ %.039, %57 ], [ %.039, %53 ], [ %.039, %51 ], [ %.039, %39 ], [ %.039, %29 ], [ %.039, %25 ], [ %.039, %22 ]
  %.037.be = phi i32 [ %.037, %21 ], [ %.037, %457 ], [ %456, %455 ], [ %.037, %454 ], [ %.037, %450 ], [ %.037, %445 ], [ %.037, %443 ], [ %.037, %442 ], [ %.037, %440 ], [ %.037, %437 ], [ %.037, %431 ], [ %.037, %430 ], [ %.037, %429 ], [ %.037, %428 ], [ %.037, %427 ], [ %.037, %426 ], [ %.037, %424 ], [ %.037, %423 ], [ %.037, %413 ], [ %.037, %403 ], [ %.037, %402 ], [ %.neg51, %392 ], [ %.037, %382 ], [ %.037, %376 ], [ %.037, %375 ], [ %.037, %365 ], [ %.037, %355 ], [ %.037, %350 ], [ %.037, %347 ], [ 1, %346 ], [ %.037, %344 ], [ %.037, %343 ], [ %.037, %342 ], [ %.037, %340 ], [ %.037, %339 ], [ %.037, %326 ], [ %.037, %316 ], [ %.037, %313 ], [ %.037, %312 ], [ %.037, %310 ], [ %.037, %295 ], [ %.037, %285 ], [ %.037, %284 ], [ %.037, %274 ], [ %.037, %264 ], [ %.037, %263 ], [ %.037, %261 ], [ %.037, %251 ], [ %.037, %241 ], [ %.037, %239 ], [ %.037, %233 ], [ %.037, %232 ], [ %.037, %221 ], [ %.037, %211 ], [ %.037, %209 ], [ %.037, %208 ], [ %.037, %196 ], [ %.037, %186 ], [ %.037, %184 ], [ %.037, %183 ], [ %.037, %169 ], [ %.037, %159 ], [ %.037, %157 ], [ %.037, %145 ], [ %.037, %135 ], [ %.037, %134 ], [ %.037, %133 ], [ %.037, %123 ], [ %.037, %113 ], [ %.037, %112 ], [ %.037, %109 ], [ %.037, %104 ], [ %.037, %103 ], [ %.037, %101 ], [ %.037, %89 ], [ %.037, %79 ], [ %.037, %78 ], [ %.037, %68 ], [ %.037, %58 ], [ %.037, %57 ], [ %.037, %53 ], [ %.037, %51 ], [ %.037, %39 ], [ %.037, %29 ], [ %.037, %25 ], [ %.037, %22 ]
  %.035.be = phi i32 [ %.035, %21 ], [ 27925760, %457 ], [ -1441302525, %455 ], [ -608856886, %454 ], [ -227940231, %450 ], [ 132237378, %445 ], [ 1705879053, %443 ], [ -2027531643, %442 ], [ -1705654977, %440 ], [ -1524537136, %437 ], [ 461453427, %431 ], [ -988287361, %430 ], [ -1573737275, %429 ], [ -1840772029, %428 ], [ -1085943099, %427 ], [ 10560941, %426 ], [ 1097330170, %424 ], [ -2131322428, %423 ], [ %422, %413 ], [ %412, %403 ], [ 1653725937, %402 ], [ %401, %392 ], [ %391, %382 ], [ 948098059, %376 ], [ -1276230135, %375 ], [ %374, %365 ], [ %364, %355 ], [ %354, %350 ], [ %349, %347 ], [ 1653725937, %346 ], [ -1168765008, %344 ], [ 330816642, %343 ], [ -710819487, %342 ], [ 1521880625, %340 ], [ 466529368, %339 ], [ %338, %326 ], [ %325, %316 ], [ %315, %313 ], [ 1521880625, %312 ], [ %311, %310 ], [ %309, %295 ], [ %294, %285 ], [ 931363680, %284 ], [ %283, %274 ], [ %273, %264 ], [ 1814086305, %263 ], [ %262, %261 ], [ %260, %251 ], [ %250, %241 ], [ -1043824845, %239 ], [ %238, %233 ], [ 931363680, %232 ], [ %231, %221 ], [ %220, %211 ], [ %210, %209 ], [ -1168765008, %208 ], [ %207, %196 ], [ %195, %186 ], [ -893337968, %184 ], [ 336636190, %183 ], [ %182, %169 ], [ %168, %159 ], [ %158, %157 ], [ %156, %145 ], [ %144, %135 ], [ -893337968, %134 ], [ -2131322428, %133 ], [ %132, %123 ], [ %122, %113 ], [ 860383622, %112 ], [ -1384259812, %109 ], [ %108, %104 ], [ 860383622, %103 ], [ %102, %101 ], [ %100, %89 ], [ %88, %79 ], [ 1097330170, %78 ], [ %77, %68 ], [ %67, %58 ], [ 339999461, %57 ], [ -821281474, %53 ], [ %52, %51 ], [ %50, %39 ], [ %38, %29 ], [ 339999461, %25 ], [ %24, %22 ]
  %.0.be = phi i1 [ %.0, %21 ], [ %.0, %457 ], [ %.0, %455 ], [ %.0, %454 ], [ %.0, %450 ], [ %.0, %445 ], [ %.0, %443 ], [ %.0, %442 ], [ %.0, %440 ], [ %.0, %437 ], [ %.0, %431 ], [ %.0, %430 ], [ %.0, %429 ], [ %.0, %428 ], [ %.0, %427 ], [ %.0, %426 ], [ %.0, %424 ], [ %.0, %423 ], [ %.0, %413 ], [ %.0, %403 ], [ %.0, %402 ], [ %.0, %392 ], [ %.0, %382 ], [ %.0, %376 ], [ %.0, %375 ], [ %.0, %365 ], [ %.0, %355 ], [ %.0, %350 ], [ %.0, %347 ], [ %.0, %346 ], [ %.0, %344 ], [ %.0, %343 ], [ %.0, %342 ], [ %.0, %340 ], [ %.0, %339 ], [ %.0, %326 ], [ %.0, %316 ], [ %.0, %313 ], [ %.0, %312 ], [ %.0, %310 ], [ %.0, %295 ], [ %.0, %285 ], [ %.0, %284 ], [ %.0, %274 ], [ %.0, %264 ], [ %.0, %263 ], [ %.0, %261 ], [ %.0, %251 ], [ %.0, %241 ], [ %240, %239 ], [ false, %233 ], [ %.0, %232 ], [ %.0, %221 ], [ %.0, %211 ], [ %.0, %209 ], [ %.0, %208 ], [ %.0, %196 ], [ %.0, %186 ], [ %.0, %184 ], [ %.0, %183 ], [ %.0, %169 ], [ %.0, %159 ], [ %.0, %157 ], [ %.0, %145 ], [ %.0, %135 ], [ %.0, %134 ], [ %.0, %133 ], [ %.0, %123 ], [ %.0, %113 ], [ %.0, %112 ], [ %.0, %109 ], [ %.0, %104 ], [ %.0, %103 ], [ %.0, %101 ], [ %.0, %89 ], [ %.0, %79 ], [ %.0, %78 ], [ %.0, %68 ], [ %.0, %58 ], [ %.0, %57 ], [ %.0, %53 ], [ %.0, %51 ], [ %.0, %39 ], [ %.0, %29 ], [ %.0, %25 ], [ %.0, %22 ]
  br label %21

22:                                               ; preds = %21
  %.0..0..0.29 = load volatile i32, i32* %6, align 4
  %23 = icmp eq i32 %.0..0..0.29, 0
  %24 = select i1 %23, i32 -669709244, i32 1544783142
  br label %.backedge

25:                                               ; preds = %21
  %26 = load i32, i32* %7, align 4
  %27 = sdiv i32 %26, 2
  %28 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %27)
  br label %.backedge

29:                                               ; preds = %21
  %30 = load i32, i32* @x.1, align 4
  %31 = load i32, i32* @y.2, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 10560941, i32 1414896805
  br label %.backedge

39:                                               ; preds = %21
  %40 = load i32, i32* %8, align 4
  %41 = icmp slt i32 %.049, %40
  store i1 %41, i1* %5, align 1
  %42 = load i32, i32* @x.1, align 4
  %43 = load i32, i32* @y.2, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -1030091226, i32 1414896805
  br label %.backedge

51:                                               ; preds = %21
  %.0..0..0.30 = load volatile i1, i1* %5, align 1
  %52 = select i1 %.0..0..0.30, i32 857849050, i32 -1264733655
  br label %.backedge

53:                                               ; preds = %21
  %54 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %55 = load i32, i32* %7, align 4
  %56 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %54, i32 %55)
  br label %.backedge

57:                                               ; preds = %21
  %.neg60 = add i32 %.049, 1
  br label %.backedge

58:                                               ; preds = %21
  %59 = load i32, i32* @x.1, align 4
  %60 = load i32, i32* @y.2, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -1085943099, i32 -427884330
  br label %.backedge

68:                                               ; preds = %21
  %69 = load i32, i32* @x.1, align 4
  %70 = load i32, i32* @y.2, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 1727576023, i32 -427884330
  br label %.backedge

78:                                               ; preds = %21
  br label %.backedge

79:                                               ; preds = %21
  %80 = load i32, i32* @x.1, align 4
  %81 = load i32, i32* @y.2, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 -1840772029, i32 1553308705
  br label %.backedge

89:                                               ; preds = %21
  %90 = load i32, i32* %7, align 4
  %91 = icmp eq i32 %90, 1
  store i1 %91, i1* %4, align 1
  %92 = load i32, i32* @x.1, align 4
  %93 = load i32, i32* @y.2, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 69618734, i32 1553308705
  br label %.backedge

101:                                              ; preds = %21
  %.0..0..0.31 = load volatile i1, i1* %4, align 1
  %102 = select i1 %.0..0..0.31, i32 1532042220, i32 1120973107
  br label %.backedge

103:                                              ; preds = %21
  br label %.backedge

104:                                              ; preds = %21
  %105 = load i32, i32* %8, align 4
  %106 = add i32 %105, 1
  %107 = sdiv i32 %106, 2
  %.not59 = icmp sgt i32 %.047, %107
  %108 = select i1 %.not59, i32 -1513651926, i32 -1773336304
  br label %.backedge

109:                                              ; preds = %21
  %110 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 1)
  %111 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %110, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

112:                                              ; preds = %21
  %.neg58 = add i32 %.047, 1
  br label %.backedge

113:                                              ; preds = %21
  %114 = load i32, i32* @x.1, align 4
  %115 = load i32, i32* @y.2, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 -1573737275, i32 1204813926
  br label %.backedge

123:                                              ; preds = %21
  %124 = load i32, i32* @x.1, align 4
  %125 = load i32, i32* @y.2, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 2053644781, i32 1204813926
  br label %.backedge

133:                                              ; preds = %21
  br label %.backedge

134:                                              ; preds = %21
  br label %.backedge

135:                                              ; preds = %21
  %136 = load i32, i32* @x.1, align 4
  %137 = load i32, i32* @y.2, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 -988287361, i32 1441214876
  br label %.backedge

145:                                              ; preds = %21
  %146 = load i32, i32* %8, align 4
  %147 = icmp sle i32 %.045, %146
  store i1 %147, i1* %3, align 1
  %148 = load i32, i32* @x.1, align 4
  %149 = load i32, i32* @y.2, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 -1812280999, i32 1441214876
  br label %.backedge

157:                                              ; preds = %21
  %.0..0..0.32 = load volatile i1, i1* %3, align 1
  %158 = select i1 %.0..0..0.32, i32 -97142946, i32 -1090219009
  br label %.backedge

159:                                              ; preds = %21
  %160 = load i32, i32* @x.1, align 4
  %161 = load i32, i32* @y.2, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 461453427, i32 446249277
  br label %.backedge

169:                                              ; preds = %21
  %170 = load i32, i32* %7, align 4
  %.neg57.neg = sdiv i32 %170, 2
  %171 = add nsw i32 %.neg57.neg, 1
  %172 = sext i32 %.045 to i64
  %173 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %172
  store i32 %171, i32* %173, align 4
  %174 = load i32, i32* @x.1, align 4
  %175 = load i32, i32* @y.2, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 1447674552, i32 446249277
  br label %.backedge

183:                                              ; preds = %21
  br label %.backedge

184:                                              ; preds = %21
  %185 = add i32 %.045, 1
  br label %.backedge

186:                                              ; preds = %21
  %187 = load i32, i32* @x.1, align 4
  %188 = load i32, i32* @y.2, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 -1524537136, i32 1311293749
  br label %.backedge

196:                                              ; preds = %21
  %197 = load i32, i32* %8, align 4
  %198 = sdiv i32 %197, 2
  %199 = load i32, i32* @x.1, align 4
  %200 = load i32, i32* @y.2, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 189480358, i32 1311293749
  br label %.backedge

208:                                              ; preds = %21
  br label %.backedge

209:                                              ; preds = %21
  %.not56 = icmp eq i32 %.043, 0
  %210 = select i1 %.not56, i32 1930568868, i32 909654374
  br label %.backedge

211:                                              ; preds = %21
  %212 = load i32, i32* @x.1, align 4
  %213 = load i32, i32* @y.2, align 4
  %214 = add i32 %212, -1
  %215 = mul i32 %214, %212
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %218, %217
  %220 = select i1 %219, i32 -1705654977, i32 -394400028
  br label %.backedge

221:                                              ; preds = %21
  %222 = load i32, i32* %8, align 4
  %223 = load i32, i32* @x.1, align 4
  %224 = load i32, i32* @y.2, align 4
  %225 = add i32 %223, -1
  %226 = mul i32 %225, %223
  %227 = and i32 %226, 1
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %229, %228
  %231 = select i1 %230, i32 -90468996, i32 -394400028
  br label %.backedge

232:                                              ; preds = %21
  br label %.backedge

233:                                              ; preds = %21
  %234 = sext i32 %.041 to i64
  %235 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %236, 0
  %238 = select i1 %237, i32 -1679718754, i32 -1043824845
  br label %.backedge

239:                                              ; preds = %21
  %240 = icmp ne i32 %.041, 0
  br label %.backedge

241:                                              ; preds = %21
  store i1 %.0, i1* %1, align 1
  %242 = load i32, i32* @x.1, align 4
  %243 = load i32, i32* @y.2, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 -2027531643, i32 -712802949
  br label %.backedge

251:                                              ; preds = %21
  %252 = load i32, i32* @x.1, align 4
  %253 = load i32, i32* @y.2, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 235492250, i32 -712802949
  br label %.backedge

261:                                              ; preds = %21
  %.0..0..0.34 = load volatile i1, i1* %1, align 1
  %262 = select i1 %.0..0..0.34, i32 1914907677, i32 189556539
  br label %.backedge

263:                                              ; preds = %21
  br label %.backedge

264:                                              ; preds = %21
  %265 = load i32, i32* @x.1, align 4
  %266 = load i32, i32* @y.2, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 1705879053, i32 -458671158
  br label %.backedge

274:                                              ; preds = %21
  %.neg55 = add i32 %.041, -1
  %275 = load i32, i32* @x.1, align 4
  %276 = load i32, i32* @y.2, align 4
  %277 = add i32 %275, -1
  %278 = mul i32 %277, %275
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %281, %280
  %283 = select i1 %282, i32 1376536826, i32 -458671158
  br label %.backedge

284:                                              ; preds = %21
  br label %.backedge

285:                                              ; preds = %21
  %286 = load i32, i32* @x.1, align 4
  %287 = load i32, i32* @y.2, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 132237378, i32 1071171773
  br label %.backedge

295:                                              ; preds = %21
  %.neg54 = add i32 %.041, 1
  %296 = sext i32 %.041 to i64
  %297 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = add i32 %298, -1
  store i32 %299, i32* %297, align 4
  %300 = icmp ne i32 %299, 0
  store i1 %300, i1* %2, align 1
  %301 = load i32, i32* @x.1, align 4
  %302 = load i32, i32* @y.2, align 4
  %303 = add i32 %301, -1
  %304 = mul i32 %303, %301
  %305 = and i32 %304, 1
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %307, %306
  %309 = select i1 %308, i32 1399384763, i32 1071171773
  br label %.backedge

310:                                              ; preds = %21
  %.0..0..0.33 = load volatile i1, i1* %2, align 1
  %311 = select i1 %.0..0..0.33, i32 1492993230, i32 -710819487
  br label %.backedge

312:                                              ; preds = %21
  br label %.backedge

313:                                              ; preds = %21
  %314 = load i32, i32* %8, align 4
  %.not53 = icmp sgt i32 %.039, %314
  %315 = select i1 %.not53, i32 1281392822, i32 -216911090
  br label %.backedge

316:                                              ; preds = %21
  %317 = load i32, i32* @x.1, align 4
  %318 = load i32, i32* @y.2, align 4
  %319 = add i32 %317, -1
  %320 = mul i32 %319, %317
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %323, %322
  %325 = select i1 %324, i32 -227940231, i32 1418024400
  br label %.backedge

326:                                              ; preds = %21
  %327 = load i32, i32* %7, align 4
  %328 = sext i32 %.039 to i64
  %329 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %328
  store i32 %327, i32* %329, align 4
  %330 = load i32, i32* @x.1, align 4
  %331 = load i32, i32* @y.2, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 68735225, i32 1418024400
  br label %.backedge

339:                                              ; preds = %21
  br label %.backedge

340:                                              ; preds = %21
  %341 = add i32 %.039, 1
  br label %.backedge

342:                                              ; preds = %21
  br label %.backedge

343:                                              ; preds = %21
  br label %.backedge

344:                                              ; preds = %21
  %345 = add i32 %.043, -1
  br label %.backedge

346:                                              ; preds = %21
  br label %.backedge

347:                                              ; preds = %21
  %348 = load i32, i32* %8, align 4
  %.not52 = icmp sgt i32 %.037, %348
  %349 = select i1 %.not52, i32 -1276230135, i32 360223443
  br label %.backedge

350:                                              ; preds = %21
  %351 = sext i32 %.037 to i64
  %352 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %351
  %353 = load i32, i32* %352, align 4
  %.not = icmp eq i32 %353, 0
  %354 = select i1 %.not, i32 100125582, i32 1027468816
  br label %.backedge

355:                                              ; preds = %21
  %356 = load i32, i32* @x.1, align 4
  %357 = load i32, i32* @y.2, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 -608856886, i32 -1896373638
  br label %.backedge

365:                                              ; preds = %21
  %366 = load i32, i32* @x.1, align 4
  %367 = load i32, i32* @y.2, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 -891066664, i32 -1896373638
  br label %.backedge

375:                                              ; preds = %21
  br label %.backedge

376:                                              ; preds = %21
  %377 = sext i32 %.037 to i64
  %378 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %377
  %379 = load i32, i32* %378, align 4
  %380 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %379)
  %381 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %380, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

382:                                              ; preds = %21
  %383 = load i32, i32* @x.1, align 4
  %384 = load i32, i32* @y.2, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 -1441302525, i32 791603387
  br label %.backedge

392:                                              ; preds = %21
  %.neg51 = add i32 %.037, 1
  %393 = load i32, i32* @x.1, align 4
  %394 = load i32, i32* @y.2, align 4
  %395 = add i32 %393, -1
  %396 = mul i32 %395, %393
  %397 = and i32 %396, 1
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %399, %398
  %401 = select i1 %400, i32 1921859323, i32 791603387
  br label %.backedge

402:                                              ; preds = %21
  br label %.backedge

403:                                              ; preds = %21
  %404 = load i32, i32* @x.1, align 4
  %405 = load i32, i32* @y.2, align 4
  %406 = add i32 %404, -1
  %407 = mul i32 %406, %404
  %408 = and i32 %407, 1
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %410, %409
  %412 = select i1 %411, i32 27925760, i32 -139106537
  br label %.backedge

413:                                              ; preds = %21
  %414 = load i32, i32* @x.1, align 4
  %415 = load i32, i32* @y.2, align 4
  %416 = add i32 %414, -1
  %417 = mul i32 %416, %414
  %418 = and i32 %417, 1
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %420, %419
  %422 = select i1 %421, i32 -1176641480, i32 -139106537
  br label %.backedge

423:                                              ; preds = %21
  br label %.backedge

424:                                              ; preds = %21
  br label %.backedge

425:                                              ; preds = %21
  ret i32 0

426:                                              ; preds = %21
  br label %.backedge

427:                                              ; preds = %21
  br label %.backedge

428:                                              ; preds = %21
  br label %.backedge

429:                                              ; preds = %21
  br label %.backedge

430:                                              ; preds = %21
  br label %.backedge

431:                                              ; preds = %21
  %432 = load i32, i32* %7, align 4
  %433 = sdiv i32 %432, 2
  %434 = add nsw i32 %433, 1
  %435 = sext i32 %.045 to i64
  %436 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %435
  store i32 %434, i32* %436, align 4
  br label %.backedge

437:                                              ; preds = %21
  %438 = load i32, i32* %8, align 4
  %439 = sdiv i32 %438, 2
  br label %.backedge

440:                                              ; preds = %21
  %441 = load i32, i32* %8, align 4
  br label %.backedge

442:                                              ; preds = %21
  br label %.backedge

443:                                              ; preds = %21
  %444 = add i32 %.041, -1
  br label %.backedge

445:                                              ; preds = %21
  %.neg = add i32 %.041, 1
  %446 = sext i32 %.041 to i64
  %447 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %446
  %448 = load i32, i32* %447, align 4
  %449 = add i32 %448, -1
  store i32 %449, i32* %447, align 4
  br label %.backedge

450:                                              ; preds = %21
  %451 = load i32, i32* %7, align 4
  %452 = sext i32 %.039 to i64
  %453 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %452
  store i32 %451, i32* %453, align 4
  br label %.backedge

454:                                              ; preds = %21
  br label %.backedge

455:                                              ; preds = %21
  %456 = add i32 %.037, 1
  br label %.backedge

457:                                              ; preds = %21
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s195115799.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
