; ModuleID = 'build_ollvm/programs/p03561/s821014100.ll'
source_filename = "Project_CodeNet_C++1400/p03561/s821014100.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@m = global i32 0, align 4
@tot = local_unnamed_addr global i32 0, align 4
@a = local_unnamed_addr global [300010 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s821014100.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -540550653, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -540550653, label %11
    i32 -1498766482, label %14
    i32 -762034103, label %25
    i32 -1027967887, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1498766482, i32 -1027967887
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -762034103, i32 -1027967887
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1498766482, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @m)
  %7 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %6, i32* nonnull dereferenceable(4) @n)
  %8 = load i32, i32* @m, align 4
  %9 = and i32 %8, 1
  %10 = xor i32 %9, 1
  store i32 %10, i32* %5, align 4
  br label %11

11:                                               ; preds = %.backedge, %0
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i32 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.042 = phi i32 [ undef, %0 ], [ %.042.be, %.backedge ]
  %.040 = phi i32 [ undef, %0 ], [ %.040.be, %.backedge ]
  %.038 = phi i32 [ undef, %0 ], [ %.038.be, %.backedge ]
  %.036 = phi i32 [ undef, %0 ], [ %.036.be, %.backedge ]
  %.034 = phi i32 [ -1784409665, %0 ], [ %.034.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.034, label %.backedge [
    i32 -1784409665, label %12
    i32 492412252, label %14
    i32 -614455152, label %19
    i32 1683741206, label %29
    i32 597616946, label %41
    i32 -383463680, label %43
    i32 1356028389, label %47
    i32 1120497515, label %49
    i32 -105473337, label %59
    i32 -1805695851, label %69
    i32 461095645, label %70
    i32 595723610, label %80
    i32 300737956, label %92
    i32 -1885532156, label %94
    i32 299985856, label %95
    i32 -852509587, label %99
    i32 165291029, label %102
    i32 2052460654, label %104
    i32 491386581, label %114
    i32 2137271752, label %124
    i32 1065219601, label %125
    i32 -359689292, label %126
    i32 -278406246, label %129
    i32 154860741, label %135
    i32 -884106176, label %137
    i32 784522842, label %140
    i32 1622624712, label %142
    i32 -1801202116, label %152
    i32 -241573819, label %163
    i32 -1685122020, label %164
    i32 -1543535225, label %170
    i32 2097306619, label %172
    i32 -1667412098, label %174
    i32 400834106, label %175
    i32 1533749264, label %185
    i32 1128582582, label %196
    i32 -1763255700, label %197
    i32 -1557579120, label %204
    i32 973347810, label %205
    i32 954471388, label %215
    i32 -303163943, label %227
    i32 1188944208, label %229
    i32 -402671196, label %239
    i32 -1512781672, label %252
    i32 -1132419250, label %253
    i32 -37482893, label %255
    i32 1548102300, label %265
    i32 1730475854, label %275
    i32 217580904, label %276
    i32 1082992375, label %277
    i32 1131709324, label %287
    i32 -2072411574, label %297
    i32 425793003, label %298
    i32 -704676733, label %308
    i32 -196860551, label %318
    i32 1857668951, label %319
    i32 1956197907, label %329
    i32 -806510506, label %341
    i32 758792110, label %343
    i32 905803409, label %348
    i32 -1274624553, label %358
    i32 165315242, label %368
    i32 -1362438033, label %369
    i32 -175200257, label %375
    i32 61781611, label %385
    i32 77683158, label %396
    i32 1783315471, label %397
    i32 1820110269, label %407
    i32 -640246188, label %417
    i32 -1648913885, label %418
    i32 244947120, label %419
    i32 -456352479, label %429
    i32 1420503968, label %439
    i32 -195240739, label %440
    i32 564794688, label %441
    i32 163331079, label %442
    i32 429733704, label %443
    i32 781355496, label %444
    i32 -1738145576, label %446
    i32 -2133809400, label %447
    i32 1655156551, label %448
    i32 1235681314, label %452
    i32 -817394591, label %453
    i32 495659133, label %455
    i32 -705954729, label %456
    i32 -342169690, label %457
    i32 -371068294, label %458
    i32 -1950451913, label %459
    i32 1838373192, label %460
  ]

.backedge:                                        ; preds = %11, %460, %459, %458, %457, %456, %455, %453, %452, %448, %447, %446, %444, %443, %442, %441, %440, %429, %419, %418, %417, %407, %397, %396, %385, %375, %369, %368, %358, %348, %343, %341, %329, %319, %318, %308, %298, %297, %287, %277, %276, %275, %265, %255, %253, %252, %239, %229, %227, %215, %205, %204, %197, %196, %185, %175, %174, %172, %170, %164, %163, %152, %142, %140, %137, %135, %129, %126, %125, %124, %114, %104, %102, %99, %95, %94, %92, %80, %70, %69, %59, %49, %47, %43, %41, %29, %19, %14, %12
  %.048.be = phi i32 [ %.048, %11 ], [ %.048, %460 ], [ %.048, %459 ], [ %.048, %458 ], [ %.048, %457 ], [ %.048, %456 ], [ %.048, %455 ], [ %.048, %453 ], [ %.048, %452 ], [ %.048, %448 ], [ %.048, %447 ], [ %.048, %446 ], [ %.048, %444 ], [ %.048, %443 ], [ %.048, %442 ], [ %.048, %441 ], [ %.048, %440 ], [ %.048, %429 ], [ %.048, %419 ], [ %.048, %418 ], [ %.048, %417 ], [ %.048, %407 ], [ %.048, %397 ], [ %.048, %396 ], [ %.048, %385 ], [ %.048, %375 ], [ %.048, %369 ], [ %.048, %368 ], [ %.048, %358 ], [ %.048, %348 ], [ %.048, %343 ], [ %.048, %341 ], [ %.048, %329 ], [ %.048, %319 ], [ %.048, %318 ], [ %.048, %308 ], [ %.048, %298 ], [ %.048, %297 ], [ %.048, %287 ], [ %.048, %277 ], [ %.048, %276 ], [ %.048, %275 ], [ %.048, %265 ], [ %.048, %255 ], [ %.048, %253 ], [ %.048, %252 ], [ %.048, %239 ], [ %.048, %229 ], [ %.048, %227 ], [ %.048, %215 ], [ %.048, %205 ], [ %.048, %204 ], [ %.048, %197 ], [ %.048, %196 ], [ %.048, %185 ], [ %.048, %175 ], [ %.048, %174 ], [ %.048, %172 ], [ %.048, %170 ], [ %.048, %164 ], [ %.048, %163 ], [ %.048, %152 ], [ %.048, %142 ], [ %.048, %140 ], [ %.048, %137 ], [ %.048, %135 ], [ %.048, %129 ], [ %.048, %126 ], [ %.048, %125 ], [ %.048, %124 ], [ %.048, %114 ], [ %.048, %104 ], [ %.048, %102 ], [ %.048, %99 ], [ %.048, %95 ], [ %.048, %94 ], [ %.048, %92 ], [ %.048, %80 ], [ %.048, %70 ], [ %.048, %69 ], [ %.048, %59 ], [ %.048, %49 ], [ %48, %47 ], [ %.048, %43 ], [ %.048, %41 ], [ %.048, %29 ], [ %.048, %19 ], [ 2, %14 ], [ %.048, %12 ]
  %.046.be = phi i32 [ %.046, %11 ], [ %.046, %460 ], [ %.046, %459 ], [ %.046, %458 ], [ %.046, %457 ], [ %.046, %456 ], [ %.046, %455 ], [ %.046, %453 ], [ %.046, %452 ], [ %.046, %448 ], [ %.046, %447 ], [ %.046, %446 ], [ %.046, %444 ], [ %.046, %443 ], [ %.046, %442 ], [ %.046, %441 ], [ %.046, %440 ], [ %.046, %429 ], [ %.046, %419 ], [ %.046, %418 ], [ %.046, %417 ], [ %.046, %407 ], [ %.046, %397 ], [ %.046, %396 ], [ %.046, %385 ], [ %.046, %375 ], [ %.046, %369 ], [ %.046, %368 ], [ %.046, %358 ], [ %.046, %348 ], [ %.046, %343 ], [ %.046, %341 ], [ %.046, %329 ], [ %.046, %319 ], [ %.046, %318 ], [ %.046, %308 ], [ %.046, %298 ], [ %.046, %297 ], [ %.046, %287 ], [ %.046, %277 ], [ %.046, %276 ], [ %.046, %275 ], [ %.046, %265 ], [ %.046, %255 ], [ %.046, %253 ], [ %.046, %252 ], [ %.046, %239 ], [ %.046, %229 ], [ %.046, %227 ], [ %.046, %215 ], [ %.046, %205 ], [ %.046, %204 ], [ %.046, %197 ], [ %.046, %196 ], [ %.046, %185 ], [ %.046, %175 ], [ %.046, %174 ], [ %.046, %172 ], [ %.046, %170 ], [ %.046, %164 ], [ %.046, %163 ], [ %.046, %152 ], [ %.046, %142 ], [ %.046, %140 ], [ %.046, %137 ], [ %.046, %135 ], [ %.046, %129 ], [ %.046, %126 ], [ %.046, %125 ], [ %.046, %124 ], [ %.046, %114 ], [ %.046, %104 ], [ %103, %102 ], [ %.046, %99 ], [ %.046, %95 ], [ 1, %94 ], [ %.046, %92 ], [ %.046, %80 ], [ %.046, %70 ], [ %.046, %69 ], [ %.046, %59 ], [ %.046, %49 ], [ %.046, %47 ], [ %.046, %43 ], [ %.046, %41 ], [ %.046, %29 ], [ %.046, %19 ], [ %.046, %14 ], [ %.046, %12 ]
  %.044.be = phi i32 [ %.044, %11 ], [ %.044, %460 ], [ %.044, %459 ], [ %.044, %458 ], [ %.044, %457 ], [ %.044, %456 ], [ %.044, %455 ], [ %.044, %453 ], [ %.044, %452 ], [ %.044, %448 ], [ %.044, %447 ], [ %.044, %446 ], [ %.044, %444 ], [ %.044, %443 ], [ %.044, %442 ], [ %.044, %441 ], [ %.044, %440 ], [ %.044, %429 ], [ %.044, %419 ], [ %.044, %418 ], [ %.044, %417 ], [ %.044, %407 ], [ %.044, %397 ], [ %.044, %396 ], [ %.044, %385 ], [ %.044, %375 ], [ %.044, %369 ], [ %.044, %368 ], [ %.044, %358 ], [ %.044, %348 ], [ %.044, %343 ], [ %.044, %341 ], [ %.044, %329 ], [ %.044, %319 ], [ %.044, %318 ], [ %.044, %308 ], [ %.044, %298 ], [ %.044, %297 ], [ %.044, %287 ], [ %.044, %277 ], [ %.044, %276 ], [ %.044, %275 ], [ %.044, %265 ], [ %.044, %255 ], [ %.044, %253 ], [ %.044, %252 ], [ %.044, %239 ], [ %.044, %229 ], [ %.044, %227 ], [ %.044, %215 ], [ %.044, %205 ], [ %.044, %204 ], [ %.044, %197 ], [ %.044, %196 ], [ %.044, %185 ], [ %.044, %175 ], [ %.044, %174 ], [ %.044, %172 ], [ %.044, %170 ], [ %.044, %164 ], [ %.044, %163 ], [ %.044, %152 ], [ %.044, %142 ], [ %.044, %140 ], [ %.044, %137 ], [ %136, %135 ], [ %.044, %129 ], [ %.044, %126 ], [ 1, %125 ], [ %.044, %124 ], [ %.044, %114 ], [ %.044, %104 ], [ %.044, %102 ], [ %.044, %99 ], [ %.044, %95 ], [ %.044, %94 ], [ %.044, %92 ], [ %.044, %80 ], [ %.044, %70 ], [ %.044, %69 ], [ %.044, %59 ], [ %.044, %49 ], [ %.044, %47 ], [ %.044, %43 ], [ %.044, %41 ], [ %.044, %29 ], [ %.044, %19 ], [ %.044, %14 ], [ %.044, %12 ]
  %.042.be = phi i32 [ %.042, %11 ], [ %.042, %460 ], [ %.042, %459 ], [ %.042, %458 ], [ %.042, %457 ], [ %.042, %456 ], [ %.042, %455 ], [ %454, %453 ], [ %.042, %452 ], [ %.042, %448 ], [ %.042, %447 ], [ %.042, %446 ], [ %.042, %444 ], [ %.042, %443 ], [ %.042, %442 ], [ %.042, %441 ], [ %.042, %440 ], [ %.042, %429 ], [ %.042, %419 ], [ %.042, %418 ], [ %.042, %417 ], [ %.042, %407 ], [ %.042, %397 ], [ %.042, %396 ], [ %.042, %385 ], [ %.042, %375 ], [ %.042, %369 ], [ %.042, %368 ], [ %.042, %358 ], [ %.042, %348 ], [ %.042, %343 ], [ %.042, %341 ], [ %.042, %329 ], [ %.042, %319 ], [ %.042, %318 ], [ %.042, %308 ], [ %.042, %298 ], [ %.042, %297 ], [ %.neg51, %287 ], [ %.042, %277 ], [ %.042, %276 ], [ %.042, %275 ], [ %.042, %265 ], [ %.042, %255 ], [ %.042, %253 ], [ %.042, %252 ], [ %.042, %239 ], [ %.042, %229 ], [ %.042, %227 ], [ %.042, %215 ], [ %.042, %205 ], [ %.042, %204 ], [ %.042, %197 ], [ %.042, %196 ], [ %.042, %185 ], [ %.042, %175 ], [ %.042, %174 ], [ %.042, %172 ], [ %.042, %170 ], [ %.042, %164 ], [ %.042, %163 ], [ %.042, %152 ], [ %.042, %142 ], [ %.042, %140 ], [ %139, %137 ], [ %.042, %135 ], [ %.042, %129 ], [ %.042, %126 ], [ %.042, %125 ], [ %.042, %124 ], [ %.042, %114 ], [ %.042, %104 ], [ %.042, %102 ], [ %.042, %99 ], [ %.042, %95 ], [ %.042, %94 ], [ %.042, %92 ], [ %.042, %80 ], [ %.042, %70 ], [ %.042, %69 ], [ %.042, %59 ], [ %.042, %49 ], [ %.042, %47 ], [ %.042, %43 ], [ %.042, %41 ], [ %.042, %29 ], [ %.042, %19 ], [ %.042, %14 ], [ %.042, %12 ]
  %.040.be = phi i32 [ %.040, %11 ], [ %.040, %460 ], [ %.040, %459 ], [ %.040, %458 ], [ %.040, %457 ], [ %.040, %456 ], [ %.040, %455 ], [ %.040, %453 ], [ %.040, %452 ], [ %.040, %448 ], [ %.040, %447 ], [ %.neg50, %446 ], [ %445, %444 ], [ %.040, %443 ], [ %.040, %442 ], [ %.040, %441 ], [ %.040, %440 ], [ %.040, %429 ], [ %.040, %419 ], [ %.040, %418 ], [ %.040, %417 ], [ %.040, %407 ], [ %.040, %397 ], [ %.040, %396 ], [ %.040, %385 ], [ %.040, %375 ], [ %.040, %369 ], [ %.040, %368 ], [ %.040, %358 ], [ %.040, %348 ], [ %.040, %343 ], [ %.040, %341 ], [ %.040, %329 ], [ %.040, %319 ], [ %.040, %318 ], [ %.040, %308 ], [ %.040, %298 ], [ %.040, %297 ], [ %.040, %287 ], [ %.040, %277 ], [ %.040, %276 ], [ %.040, %275 ], [ %.040, %265 ], [ %.040, %255 ], [ %.040, %253 ], [ %.040, %252 ], [ %.040, %239 ], [ %.040, %229 ], [ %.040, %227 ], [ %.040, %215 ], [ %.040, %205 ], [ %.040, %204 ], [ %198, %197 ], [ %.040, %196 ], [ %186, %185 ], [ %.040, %175 ], [ %.040, %174 ], [ %.040, %172 ], [ %.040, %170 ], [ %.040, %164 ], [ %.040, %163 ], [ %153, %152 ], [ %.040, %142 ], [ %.040, %140 ], [ %.040, %137 ], [ %.040, %135 ], [ %.040, %129 ], [ %.040, %126 ], [ %.040, %125 ], [ %.040, %124 ], [ %.040, %114 ], [ %.040, %104 ], [ %.040, %102 ], [ %.040, %99 ], [ %.040, %95 ], [ %.040, %94 ], [ %.040, %92 ], [ %.040, %80 ], [ %.040, %70 ], [ %.040, %69 ], [ %.040, %59 ], [ %.040, %49 ], [ %.040, %47 ], [ %.040, %43 ], [ %.040, %41 ], [ %.040, %29 ], [ %.040, %19 ], [ %.040, %14 ], [ %.040, %12 ]
  %.038.be = phi i32 [ %.038, %11 ], [ %.038, %460 ], [ %.038, %459 ], [ %.038, %458 ], [ %.038, %457 ], [ %.038, %456 ], [ %.038, %455 ], [ %.038, %453 ], [ %.038, %452 ], [ %.038, %448 ], [ %.038, %447 ], [ %.038, %446 ], [ %.038, %444 ], [ %.038, %443 ], [ %.038, %442 ], [ %.038, %441 ], [ %.038, %440 ], [ %.038, %429 ], [ %.038, %419 ], [ %.038, %418 ], [ %.038, %417 ], [ %.038, %407 ], [ %.038, %397 ], [ %.038, %396 ], [ %.038, %385 ], [ %.038, %375 ], [ %.038, %369 ], [ %.038, %368 ], [ %.038, %358 ], [ %.038, %348 ], [ %.038, %343 ], [ %.038, %341 ], [ %.038, %329 ], [ %.038, %319 ], [ %.038, %318 ], [ %.038, %308 ], [ %.038, %298 ], [ %.038, %297 ], [ %.038, %287 ], [ %.038, %277 ], [ %.038, %276 ], [ %.038, %275 ], [ %.038, %265 ], [ %.038, %255 ], [ %254, %253 ], [ %.038, %252 ], [ %.038, %239 ], [ %.038, %229 ], [ %.038, %227 ], [ %.038, %215 ], [ %.038, %205 ], [ %.040, %204 ], [ %.038, %197 ], [ %.038, %196 ], [ %.038, %185 ], [ %.038, %175 ], [ %.038, %174 ], [ %.038, %172 ], [ %.038, %170 ], [ %.038, %164 ], [ %.038, %163 ], [ %.038, %152 ], [ %.038, %142 ], [ %.038, %140 ], [ %.038, %137 ], [ %.038, %135 ], [ %.038, %129 ], [ %.038, %126 ], [ %.038, %125 ], [ %.038, %124 ], [ %.038, %114 ], [ %.038, %104 ], [ %.038, %102 ], [ %.038, %99 ], [ %.038, %95 ], [ %.038, %94 ], [ %.038, %92 ], [ %.038, %80 ], [ %.038, %70 ], [ %.038, %69 ], [ %.038, %59 ], [ %.038, %49 ], [ %.038, %47 ], [ %.038, %43 ], [ %.038, %41 ], [ %.038, %29 ], [ %.038, %19 ], [ %.038, %14 ], [ %.038, %12 ]
  %.036.be = phi i32 [ %.036, %11 ], [ %.036, %460 ], [ %.036, %459 ], [ %.neg, %458 ], [ %.036, %457 ], [ %.036, %456 ], [ 1, %455 ], [ %.036, %453 ], [ %.036, %452 ], [ %.036, %448 ], [ %.036, %447 ], [ %.036, %446 ], [ %.036, %444 ], [ %.036, %443 ], [ %.036, %442 ], [ %.036, %441 ], [ %.036, %440 ], [ %.036, %429 ], [ %.036, %419 ], [ %.036, %418 ], [ %.036, %417 ], [ %.036, %407 ], [ %.036, %397 ], [ %.036, %396 ], [ %386, %385 ], [ %.036, %375 ], [ %.036, %369 ], [ %.036, %368 ], [ %.036, %358 ], [ %.036, %348 ], [ %.036, %343 ], [ %.036, %341 ], [ %.036, %329 ], [ %.036, %319 ], [ %.036, %318 ], [ 1, %308 ], [ %.036, %298 ], [ %.036, %297 ], [ %.036, %287 ], [ %.036, %277 ], [ %.036, %276 ], [ %.036, %275 ], [ %.036, %265 ], [ %.036, %255 ], [ %.036, %253 ], [ %.036, %252 ], [ %.036, %239 ], [ %.036, %229 ], [ %.036, %227 ], [ %.036, %215 ], [ %.036, %205 ], [ %.036, %204 ], [ %.036, %197 ], [ %.036, %196 ], [ %.036, %185 ], [ %.036, %175 ], [ %.036, %174 ], [ %.036, %172 ], [ %.036, %170 ], [ %.036, %164 ], [ %.036, %163 ], [ %.036, %152 ], [ %.036, %142 ], [ %.036, %140 ], [ %.036, %137 ], [ %.036, %135 ], [ %.036, %129 ], [ %.036, %126 ], [ %.036, %125 ], [ %.036, %124 ], [ %.036, %114 ], [ %.036, %104 ], [ %.036, %102 ], [ %.036, %99 ], [ %.036, %95 ], [ %.036, %94 ], [ %.036, %92 ], [ %.036, %80 ], [ %.036, %70 ], [ %.036, %69 ], [ %.036, %59 ], [ %.036, %49 ], [ %.036, %47 ], [ %.036, %43 ], [ %.036, %41 ], [ %.036, %29 ], [ %.036, %19 ], [ %.036, %14 ], [ %.036, %12 ]
  %.034.be = phi i32 [ %.034, %11 ], [ -456352479, %460 ], [ 1820110269, %459 ], [ 61781611, %458 ], [ -1274624553, %457 ], [ 1956197907, %456 ], [ -704676733, %455 ], [ 1131709324, %453 ], [ 1548102300, %452 ], [ -402671196, %448 ], [ 954471388, %447 ], [ 1533749264, %446 ], [ -1801202116, %444 ], [ 491386581, %443 ], [ 595723610, %442 ], [ -105473337, %441 ], [ 1683741206, %440 ], [ %438, %429 ], [ %428, %419 ], [ 244947120, %418 ], [ -1648913885, %417 ], [ %416, %407 ], [ %406, %397 ], [ 1857668951, %396 ], [ %395, %385 ], [ %384, %375 ], [ -175200257, %369 ], [ 1783315471, %368 ], [ %367, %358 ], [ %357, %348 ], [ %347, %343 ], [ %342, %341 ], [ %340, %329 ], [ %328, %319 ], [ 1857668951, %318 ], [ %317, %308 ], [ %307, %298 ], [ 784522842, %297 ], [ %296, %287 ], [ %286, %277 ], [ 1082992375, %276 ], [ 217580904, %275 ], [ %274, %265 ], [ %264, %255 ], [ 973347810, %253 ], [ -1132419250, %252 ], [ %251, %239 ], [ %238, %229 ], [ %228, %227 ], [ %226, %215 ], [ %214, %205 ], [ 973347810, %204 ], [ %203, %197 ], [ -1685122020, %196 ], [ %195, %185 ], [ %184, %175 ], [ 400834106, %174 ], [ %173, %172 ], [ 2097306619, %170 ], [ %169, %164 ], [ -1685122020, %163 ], [ %162, %152 ], [ %151, %142 ], [ %141, %140 ], [ 784522842, %137 ], [ -359689292, %135 ], [ 154860741, %129 ], [ %128, %126 ], [ -359689292, %125 ], [ -1648913885, %124 ], [ %123, %114 ], [ %113, %104 ], [ 299985856, %102 ], [ 165291029, %99 ], [ %98, %95 ], [ 299985856, %94 ], [ %93, %92 ], [ %91, %80 ], [ %79, %70 ], [ 244947120, %69 ], [ %68, %59 ], [ %58, %49 ], [ -614455152, %47 ], [ 1356028389, %43 ], [ %42, %41 ], [ %40, %29 ], [ %28, %19 ], [ -614455152, %14 ], [ %13, %12 ]
  %.0.be = phi i1 [ %.0, %11 ], [ %.0, %460 ], [ %.0, %459 ], [ %.0, %458 ], [ %.0, %457 ], [ %.0, %456 ], [ %.0, %455 ], [ %.0, %453 ], [ %.0, %452 ], [ %.0, %448 ], [ %.0, %447 ], [ %.0, %446 ], [ %.0, %444 ], [ %.0, %443 ], [ %.0, %442 ], [ %.0, %441 ], [ %.0, %440 ], [ %.0, %429 ], [ %.0, %419 ], [ %.0, %418 ], [ %.0, %417 ], [ %.0, %407 ], [ %.0, %397 ], [ %.0, %396 ], [ %.0, %385 ], [ %.0, %375 ], [ %.0, %369 ], [ %.0, %368 ], [ %.0, %358 ], [ %.0, %348 ], [ %.0, %343 ], [ %.0, %341 ], [ %.0, %329 ], [ %.0, %319 ], [ %.0, %318 ], [ %.0, %308 ], [ %.0, %298 ], [ %.0, %297 ], [ %.0, %287 ], [ %.0, %277 ], [ %.0, %276 ], [ %.0, %275 ], [ %.0, %265 ], [ %.0, %255 ], [ %.0, %253 ], [ %.0, %252 ], [ %.0, %239 ], [ %.0, %229 ], [ %.0, %227 ], [ %.0, %215 ], [ %.0, %205 ], [ %.0, %204 ], [ %.0, %197 ], [ %.0, %196 ], [ %.0, %185 ], [ %.0, %175 ], [ %.0, %174 ], [ %.0, %172 ], [ %171, %170 ], [ false, %164 ], [ %.0, %163 ], [ %.0, %152 ], [ %.0, %142 ], [ %.0, %140 ], [ %.0, %137 ], [ %.0, %135 ], [ %.0, %129 ], [ %.0, %126 ], [ %.0, %125 ], [ %.0, %124 ], [ %.0, %114 ], [ %.0, %104 ], [ %.0, %102 ], [ %.0, %99 ], [ %.0, %95 ], [ %.0, %94 ], [ %.0, %92 ], [ %.0, %80 ], [ %.0, %70 ], [ %.0, %69 ], [ %.0, %59 ], [ %.0, %49 ], [ %.0, %47 ], [ %.0, %43 ], [ %.0, %41 ], [ %.0, %29 ], [ %.0, %19 ], [ %.0, %14 ], [ %.0, %12 ]
  br label %11

12:                                               ; preds = %11
  %.0..0..0.29 = load volatile i32, i32* %5, align 4
  %.not57 = icmp eq i32 %.0..0..0.29, 0
  %13 = select i1 %.not57, i32 461095645, i32 492412252
  br label %.backedge

14:                                               ; preds = %11
  %15 = load i32, i32* @m, align 4
  %16 = sdiv i32 %15, 2
  %17 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %16)
  %18 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

19:                                               ; preds = %11
  %20 = load i32, i32* @x.1, align 4
  %21 = load i32, i32* @y.2, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 1683741206, i32 -195240739
  br label %.backedge

29:                                               ; preds = %11
  %30 = load i32, i32* @n, align 4
  %31 = icmp sle i32 %.048, %30
  store i1 %31, i1* %4, align 1
  %32 = load i32, i32* @x.1, align 4
  %33 = load i32, i32* @y.2, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 597616946, i32 -195240739
  br label %.backedge

41:                                               ; preds = %11
  %.0..0..0.30 = load volatile i1, i1* %4, align 1
  %42 = select i1 %.0..0..0.30, i32 -383463680, i32 1120497515
  br label %.backedge

43:                                               ; preds = %11
  %44 = load i32, i32* @m, align 4
  %45 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %44)
  %46 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

47:                                               ; preds = %11
  %48 = add i32 %.048, 1
  br label %.backedge

49:                                               ; preds = %11
  %50 = load i32, i32* @x.1, align 4
  %51 = load i32, i32* @y.2, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -105473337, i32 564794688
  br label %.backedge

59:                                               ; preds = %11
  %60 = load i32, i32* @x.1, align 4
  %61 = load i32, i32* @y.2, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 -1805695851, i32 564794688
  br label %.backedge

69:                                               ; preds = %11
  br label %.backedge

70:                                               ; preds = %11
  %71 = load i32, i32* @x.1, align 4
  %72 = load i32, i32* @y.2, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 595723610, i32 163331079
  br label %.backedge

80:                                               ; preds = %11
  %81 = load i32, i32* @m, align 4
  %82 = icmp eq i32 %81, 1
  store i1 %82, i1* %3, align 1
  %83 = load i32, i32* @x.1, align 4
  %84 = load i32, i32* @y.2, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 300737956, i32 163331079
  br label %.backedge

92:                                               ; preds = %11
  %.0..0..0.31 = load volatile i1, i1* %3, align 1
  %93 = select i1 %.0..0..0.31, i32 -1885532156, i32 1065219601
  br label %.backedge

94:                                               ; preds = %11
  br label %.backedge

95:                                               ; preds = %11
  %96 = load i32, i32* @n, align 4
  %.neg55 = add i32 %96, 1
  %97 = sdiv i32 %.neg55, 2
  %.not56 = icmp sgt i32 %.046, %97
  %98 = select i1 %.not56, i32 2052460654, i32 -852509587
  br label %.backedge

99:                                               ; preds = %11
  %100 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 1)
  %101 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

102:                                              ; preds = %11
  %103 = add i32 %.046, 1
  br label %.backedge

104:                                              ; preds = %11
  %105 = load i32, i32* @x.1, align 4
  %106 = load i32, i32* @y.2, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 491386581, i32 429733704
  br label %.backedge

114:                                              ; preds = %11
  %115 = load i32, i32* @x.1, align 4
  %116 = load i32, i32* @y.2, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 2137271752, i32 429733704
  br label %.backedge

124:                                              ; preds = %11
  br label %.backedge

125:                                              ; preds = %11
  br label %.backedge

126:                                              ; preds = %11
  %127 = load i32, i32* @n, align 4
  %.not54 = icmp sgt i32 %.044, %127
  %128 = select i1 %.not54, i32 -884106176, i32 -278406246
  br label %.backedge

129:                                              ; preds = %11
  %130 = load i32, i32* @m, align 4
  %131 = sdiv i32 %130, 2
  %132 = add nsw i32 %131, 1
  %133 = sext i32 %.044 to i64
  %134 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %133
  store i32 %132, i32* %134, align 4
  br label %.backedge

135:                                              ; preds = %11
  %136 = add i32 %.044, 1
  br label %.backedge

137:                                              ; preds = %11
  %138 = load i32, i32* @n, align 4
  %139 = sdiv i32 %138, 2
  br label %.backedge

140:                                              ; preds = %11
  %.not53 = icmp eq i32 %.042, 0
  %141 = select i1 %.not53, i32 425793003, i32 1622624712
  br label %.backedge

142:                                              ; preds = %11
  %143 = load i32, i32* @x.1, align 4
  %144 = load i32, i32* @y.2, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 -1801202116, i32 781355496
  br label %.backedge

152:                                              ; preds = %11
  %153 = load i32, i32* @n, align 4
  %154 = load i32, i32* @x.1, align 4
  %155 = load i32, i32* @y.2, align 4
  %156 = add i32 %154, -1
  %157 = mul i32 %156, %154
  %158 = and i32 %157, 1
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %160, %159
  %162 = select i1 %161, i32 -241573819, i32 781355496
  br label %.backedge

163:                                              ; preds = %11
  br label %.backedge

164:                                              ; preds = %11
  %165 = sext i32 %.040 to i64
  %166 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  %169 = select i1 %168, i32 -1543535225, i32 2097306619
  br label %.backedge

170:                                              ; preds = %11
  %171 = icmp ne i32 %.040, 0
  br label %.backedge

172:                                              ; preds = %11
  %173 = select i1 %.0, i32 -1667412098, i32 -1763255700
  br label %.backedge

174:                                              ; preds = %11
  br label %.backedge

175:                                              ; preds = %11
  %176 = load i32, i32* @x.1, align 4
  %177 = load i32, i32* @y.2, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 1533749264, i32 -1738145576
  br label %.backedge

185:                                              ; preds = %11
  %186 = add i32 %.040, -1
  %187 = load i32, i32* @x.1, align 4
  %188 = load i32, i32* @y.2, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1128582582, i32 -1738145576
  br label %.backedge

196:                                              ; preds = %11
  br label %.backedge

197:                                              ; preds = %11
  %198 = add i32 %.040, 1
  %199 = sext i32 %.040 to i64
  %200 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = add i32 %201, -1
  store i32 %202, i32* %200, align 4
  %.not52 = icmp eq i32 %202, 0
  %203 = select i1 %.not52, i32 217580904, i32 -1557579120
  br label %.backedge

204:                                              ; preds = %11
  br label %.backedge

205:                                              ; preds = %11
  %206 = load i32, i32* @x.1, align 4
  %207 = load i32, i32* @y.2, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 954471388, i32 -2133809400
  br label %.backedge

215:                                              ; preds = %11
  %216 = load i32, i32* @n, align 4
  %217 = icmp sle i32 %.038, %216
  store i1 %217, i1* %2, align 1
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -303163943, i32 -2133809400
  br label %.backedge

227:                                              ; preds = %11
  %.0..0..0.32 = load volatile i1, i1* %2, align 1
  %228 = select i1 %.0..0..0.32, i32 1188944208, i32 -37482893
  br label %.backedge

229:                                              ; preds = %11
  %230 = load i32, i32* @x.1, align 4
  %231 = load i32, i32* @y.2, align 4
  %232 = add i32 %230, -1
  %233 = mul i32 %232, %230
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %236, %235
  %238 = select i1 %237, i32 -402671196, i32 1655156551
  br label %.backedge

239:                                              ; preds = %11
  %240 = load i32, i32* @m, align 4
  %241 = sext i32 %.038 to i64
  %242 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %241
  store i32 %240, i32* %242, align 4
  %243 = load i32, i32* @x.1, align 4
  %244 = load i32, i32* @y.2, align 4
  %245 = add i32 %243, -1
  %246 = mul i32 %245, %243
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %249, %248
  %251 = select i1 %250, i32 -1512781672, i32 1655156551
  br label %.backedge

252:                                              ; preds = %11
  br label %.backedge

253:                                              ; preds = %11
  %254 = add i32 %.038, 1
  br label %.backedge

255:                                              ; preds = %11
  %256 = load i32, i32* @x.1, align 4
  %257 = load i32, i32* @y.2, align 4
  %258 = add i32 %256, -1
  %259 = mul i32 %258, %256
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %262, %261
  %264 = select i1 %263, i32 1548102300, i32 1235681314
  br label %.backedge

265:                                              ; preds = %11
  %266 = load i32, i32* @x.1, align 4
  %267 = load i32, i32* @y.2, align 4
  %268 = add i32 %266, -1
  %269 = mul i32 %268, %266
  %270 = and i32 %269, 1
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %272, %271
  %274 = select i1 %273, i32 1730475854, i32 1235681314
  br label %.backedge

275:                                              ; preds = %11
  br label %.backedge

276:                                              ; preds = %11
  br label %.backedge

277:                                              ; preds = %11
  %278 = load i32, i32* @x.1, align 4
  %279 = load i32, i32* @y.2, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 1131709324, i32 -817394591
  br label %.backedge

287:                                              ; preds = %11
  %.neg51 = add i32 %.042, -1
  %288 = load i32, i32* @x.1, align 4
  %289 = load i32, i32* @y.2, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 -2072411574, i32 -817394591
  br label %.backedge

297:                                              ; preds = %11
  br label %.backedge

298:                                              ; preds = %11
  %299 = load i32, i32* @x.1, align 4
  %300 = load i32, i32* @y.2, align 4
  %301 = add i32 %299, -1
  %302 = mul i32 %301, %299
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %305, %304
  %307 = select i1 %306, i32 -704676733, i32 495659133
  br label %.backedge

308:                                              ; preds = %11
  %309 = load i32, i32* @x.1, align 4
  %310 = load i32, i32* @y.2, align 4
  %311 = add i32 %309, -1
  %312 = mul i32 %311, %309
  %313 = and i32 %312, 1
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %315, %314
  %317 = select i1 %316, i32 -196860551, i32 495659133
  br label %.backedge

318:                                              ; preds = %11
  br label %.backedge

319:                                              ; preds = %11
  %320 = load i32, i32* @x.1, align 4
  %321 = load i32, i32* @y.2, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 1956197907, i32 -705954729
  br label %.backedge

329:                                              ; preds = %11
  %330 = load i32, i32* @n, align 4
  %331 = icmp sle i32 %.036, %330
  store i1 %331, i1* %1, align 1
  %332 = load i32, i32* @x.1, align 4
  %333 = load i32, i32* @y.2, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 -806510506, i32 -705954729
  br label %.backedge

341:                                              ; preds = %11
  %.0..0..0.33 = load volatile i1, i1* %1, align 1
  %342 = select i1 %.0..0..0.33, i32 758792110, i32 1783315471
  br label %.backedge

343:                                              ; preds = %11
  %344 = sext i32 %.036 to i64
  %345 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %344
  %346 = load i32, i32* %345, align 4
  %.not = icmp eq i32 %346, 0
  %347 = select i1 %.not, i32 905803409, i32 -1362438033
  br label %.backedge

348:                                              ; preds = %11
  %349 = load i32, i32* @x.1, align 4
  %350 = load i32, i32* @y.2, align 4
  %351 = add i32 %349, -1
  %352 = mul i32 %351, %349
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %355, %354
  %357 = select i1 %356, i32 -1274624553, i32 -342169690
  br label %.backedge

358:                                              ; preds = %11
  %359 = load i32, i32* @x.1, align 4
  %360 = load i32, i32* @y.2, align 4
  %361 = add i32 %359, -1
  %362 = mul i32 %361, %359
  %363 = and i32 %362, 1
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %365, %364
  %367 = select i1 %366, i32 165315242, i32 -342169690
  br label %.backedge

368:                                              ; preds = %11
  br label %.backedge

369:                                              ; preds = %11
  %370 = sext i32 %.036 to i64
  %371 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %370
  %372 = load i32, i32* %371, align 4
  %373 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %372)
  %374 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

375:                                              ; preds = %11
  %376 = load i32, i32* @x.1, align 4
  %377 = load i32, i32* @y.2, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 61781611, i32 -371068294
  br label %.backedge

385:                                              ; preds = %11
  %386 = add i32 %.036, 1
  %387 = load i32, i32* @x.1, align 4
  %388 = load i32, i32* @y.2, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 77683158, i32 -371068294
  br label %.backedge

396:                                              ; preds = %11
  br label %.backedge

397:                                              ; preds = %11
  %398 = load i32, i32* @x.1, align 4
  %399 = load i32, i32* @y.2, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 1820110269, i32 -1950451913
  br label %.backedge

407:                                              ; preds = %11
  %408 = load i32, i32* @x.1, align 4
  %409 = load i32, i32* @y.2, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 -640246188, i32 -1950451913
  br label %.backedge

417:                                              ; preds = %11
  br label %.backedge

418:                                              ; preds = %11
  br label %.backedge

419:                                              ; preds = %11
  %420 = load i32, i32* @x.1, align 4
  %421 = load i32, i32* @y.2, align 4
  %422 = add i32 %420, -1
  %423 = mul i32 %422, %420
  %424 = and i32 %423, 1
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %426, %425
  %428 = select i1 %427, i32 -456352479, i32 1838373192
  br label %.backedge

429:                                              ; preds = %11
  %430 = load i32, i32* @x.1, align 4
  %431 = load i32, i32* @y.2, align 4
  %432 = add i32 %430, -1
  %433 = mul i32 %432, %430
  %434 = and i32 %433, 1
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %436, %435
  %438 = select i1 %437, i32 1420503968, i32 1838373192
  br label %.backedge

439:                                              ; preds = %11
  ret i32 0

440:                                              ; preds = %11
  br label %.backedge

441:                                              ; preds = %11
  br label %.backedge

442:                                              ; preds = %11
  br label %.backedge

443:                                              ; preds = %11
  br label %.backedge

444:                                              ; preds = %11
  %445 = load i32, i32* @n, align 4
  br label %.backedge

446:                                              ; preds = %11
  %.neg50 = add i32 %.040, -1
  br label %.backedge

447:                                              ; preds = %11
  br label %.backedge

448:                                              ; preds = %11
  %449 = load i32, i32* @m, align 4
  %450 = sext i32 %.038 to i64
  %451 = getelementptr inbounds [300010 x i32], [300010 x i32]* @a, i64 0, i64 %450
  store i32 %449, i32* %451, align 4
  br label %.backedge

452:                                              ; preds = %11
  br label %.backedge

453:                                              ; preds = %11
  %454 = add i32 %.042, -1
  br label %.backedge

455:                                              ; preds = %11
  br label %.backedge

456:                                              ; preds = %11
  br label %.backedge

457:                                              ; preds = %11
  br label %.backedge

458:                                              ; preds = %11
  %.neg = add i32 %.036, 1
  br label %.backedge

459:                                              ; preds = %11
  br label %.backedge

460:                                              ; preds = %11
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s821014100.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
