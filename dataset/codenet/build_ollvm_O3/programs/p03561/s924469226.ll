; ModuleID = 'build_ollvm/programs/p03561/s924469226.ll'
source_filename = "Project_CodeNet_C++1400/p03561/s924469226.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [3 x i8] c"1 \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s924469226.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nosync nounwind readonly uwtable
define i64 @_Z3expxx(i64 %0, i64 %1) local_unnamed_addr #4 {
  %3 = load i32, i32* @x.2, align 4
  %4 = load i32, i32* @y.3, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %9, %8
  %11 = select i1 %10, i32 451187581, i32 -152762497
  %12 = select i1 %10, i32 455202595, i32 -152762497
  br label %.outer

.outer:                                           ; preds = %17, %2
  %.011.ph = phi i64 [ %18, %17 ], [ %0, %2 ]
  %.09.ph = phi i32 [ %.09.ph14, %17 ], [ 1, %2 ]
  %.0.ph = phi i32 [ 237864958, %17 ], [ 1286503479, %2 ]
  br label %.outer13

.outer13:                                         ; preds = %.outer13.backedge, %.outer
  %.09.ph14 = phi i32 [ %.09.ph, %.outer ], [ %.09.ph14.be, %.outer13.backedge ]
  %.0.ph15 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph15.be, %.outer13.backedge ]
  %13 = sext i32 %.09.ph14 to i64
  %14 = icmp slt i64 %13, %1
  %15 = select i1 %14, i32 1536682078, i32 1510149271
  br label %.outer16

.outer16:                                         ; preds = %.outer16.backedge, %.outer13
  %.0.ph17 = phi i32 [ %.0.ph15, %.outer13 ], [ %.0.ph17.be, %.outer16.backedge ]
  br label %16

16:                                               ; preds = %.outer16, %16
  switch i32 %.0.ph17, label %16 [
    i32 1286503479, label %.outer16.backedge
    i32 1536682078, label %17
    i32 237864958, label %19
    i32 455202595, label %.outer13.backedge
    i32 451187581, label %20
    i32 1510149271, label %21
    i32 -152762497, label %22
  ]

17:                                               ; preds = %16
  %18 = mul nsw i64 %.011.ph, %0
  br label %.outer

19:                                               ; preds = %16
  br label %.outer16.backedge

20:                                               ; preds = %16
  br label %.outer16.backedge

.outer16.backedge:                                ; preds = %16, %20, %19
  %.0.ph17.be = phi i32 [ %12, %19 ], [ 1286503479, %20 ], [ %15, %16 ]
  br label %.outer16

21:                                               ; preds = %16
  ret i64 %.011.ph

22:                                               ; preds = %16
  br label %.outer13.backedge

.outer13.backedge:                                ; preds = %16, %22
  %.0.ph15.be = phi i32 [ 455202595, %22 ], [ %11, %16 ]
  %.09.ph14.be = add i32 %.09.ph14, 1
  br label %.outer13
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %5)
  %7 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %6, i64* nonnull dereferenceable(8) %4)
  %8 = load i64, i64* %5, align 8
  store i64 %8, i64* %3, align 8
  br label %9

9:                                                ; preds = %.backedge, %0
  %.070 = phi i64 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i64 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i64 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i64 [ 0, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ -315263499, %0 ], [ %.052.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.052, label %.backedge [
    i32 -315263499, label %10
    i32 1368268615, label %13
    i32 1326914059, label %14
    i32 1453067403, label %21
    i32 1709135119, label %31
    i32 406290346, label %42
    i32 -961749515, label %43
    i32 191654434, label %45
    i32 1949672863, label %55
    i32 1585232304, label %65
    i32 -1004927250, label %66
    i32 -485483056, label %71
    i32 -1700131632, label %76
    i32 1749418628, label %81
    i32 1405659817, label %91
    i32 -1976507131, label %104
    i32 -904853848, label %105
    i32 783451091, label %115
    i32 -787187626, label %126
    i32 534802907, label %127
    i32 46345208, label %128
    i32 -1617473477, label %138
    i32 1400163358, label %148
    i32 1366928143, label %149
    i32 1115217897, label %159
    i32 -1756385680, label %172
    i32 -1522877376, label %174
    i32 -1622380632, label %182
    i32 1370978199, label %184
    i32 -242444672, label %194
    i32 1958150517, label %204
    i32 1424232297, label %205
    i32 -1952188305, label %215
    i32 -87262705, label %226
    i32 -1378953387, label %227
    i32 -1020176545, label %228
    i32 -1000311334, label %233
    i32 -1653858273, label %238
    i32 -2002874028, label %239
    i32 -761505428, label %249
    i32 629275713, label %261
    i32 897729129, label %262
    i32 292536644, label %265
    i32 415078992, label %271
    i32 1412210651, label %273
    i32 125286856, label %277
    i32 -749166783, label %278
    i32 1325143797, label %288
    i32 1606439508, label %302
    i32 -1796457547, label %303
    i32 -1517337570, label %306
    i32 2005364584, label %308
    i32 1887918680, label %310
    i32 -696259763, label %323
    i32 -223310198, label %326
    i32 1833824319, label %329
    i32 1185536354, label %330
    i32 -1204001907, label %336
    i32 -1115393159, label %337
    i32 -245007406, label %347
    i32 -487100292, label %357
    i32 -1178657746, label %358
    i32 -57615239, label %360
    i32 1055938844, label %361
    i32 -1293438602, label %365
    i32 -1800598705, label %366
    i32 1175226170, label %367
    i32 -829949688, label %368
    i32 -1599713531, label %369
    i32 -1302643854, label %370
    i32 -520783715, label %373
    i32 1496496008, label %378
  ]

.backedge:                                        ; preds = %9, %378, %373, %370, %369, %368, %367, %366, %365, %361, %360, %358, %347, %337, %336, %330, %329, %326, %323, %310, %308, %306, %303, %302, %288, %278, %277, %273, %271, %265, %262, %261, %249, %239, %238, %233, %228, %227, %226, %215, %205, %204, %194, %184, %182, %174, %172, %159, %149, %148, %138, %128, %127, %126, %115, %105, %104, %91, %81, %76, %71, %66, %65, %55, %45, %43, %42, %31, %21, %14, %13, %10
  %.070.be = phi i64 [ %.070, %9 ], [ %.070, %378 ], [ %.070, %373 ], [ %.070, %370 ], [ %.070, %369 ], [ %.070, %368 ], [ %.070, %367 ], [ %.070, %366 ], [ %.070, %365 ], [ %.070, %361 ], [ %.070, %360 ], [ %.070, %358 ], [ %.070, %347 ], [ %.070, %337 ], [ %.070, %336 ], [ %.070, %330 ], [ %.070, %329 ], [ %.070, %326 ], [ %.070, %323 ], [ %.070, %310 ], [ %.070, %308 ], [ %.070, %306 ], [ %.070, %303 ], [ %.070, %302 ], [ %.070, %288 ], [ %.070, %278 ], [ %.070, %277 ], [ %.070, %273 ], [ %.070, %271 ], [ %.070, %265 ], [ %.070, %262 ], [ %.070, %261 ], [ %.070, %249 ], [ %.070, %239 ], [ %.070, %238 ], [ %.070, %233 ], [ %.070, %228 ], [ %.070, %227 ], [ %.070, %226 ], [ %.070, %215 ], [ %.070, %205 ], [ %.070, %204 ], [ %.070, %194 ], [ %.070, %184 ], [ %183, %182 ], [ %.070, %174 ], [ %.070, %172 ], [ %.070, %159 ], [ %.070, %149 ], [ %.070, %148 ], [ %.070, %138 ], [ %.070, %128 ], [ %.070, %127 ], [ %.070, %126 ], [ %.070, %115 ], [ %.070, %105 ], [ %.070, %104 ], [ %.070, %91 ], [ %.070, %81 ], [ %.070, %76 ], [ %.070, %71 ], [ %.070, %66 ], [ %.070, %65 ], [ %.070, %55 ], [ %.070, %45 ], [ %.070, %43 ], [ %.070, %42 ], [ %.070, %31 ], [ %.070, %21 ], [ %.070, %14 ], [ %.070, %13 ], [ %.070, %10 ]
  %.068.be = phi i64 [ %.068, %9 ], [ %.068, %378 ], [ %377, %373 ], [ %372, %370 ], [ %.068, %369 ], [ %.068, %368 ], [ %.068, %367 ], [ %.068, %366 ], [ %.068, %365 ], [ %.068, %361 ], [ %.068, %360 ], [ %.068, %358 ], [ %.068, %347 ], [ %.068, %337 ], [ %.068, %336 ], [ %335, %330 ], [ %.068, %329 ], [ %.068, %326 ], [ %325, %323 ], [ %320, %310 ], [ %.068, %308 ], [ %.068, %306 ], [ %.068, %303 ], [ %.068, %302 ], [ %292, %288 ], [ %.068, %278 ], [ %.neg79, %277 ], [ %.068, %273 ], [ %.068, %271 ], [ %269, %265 ], [ %.068, %262 ], [ %.068, %261 ], [ %251, %249 ], [ %.068, %239 ], [ %.068, %238 ], [ %.068, %233 ], [ %.068, %228 ], [ %.068, %227 ], [ %.068, %226 ], [ %.068, %215 ], [ %.068, %205 ], [ %.068, %204 ], [ %.068, %194 ], [ %.068, %184 ], [ %.068, %182 ], [ %.068, %174 ], [ %.068, %172 ], [ %.068, %159 ], [ %.068, %149 ], [ %.068, %148 ], [ %.068, %138 ], [ %.068, %128 ], [ %.068, %127 ], [ %.068, %126 ], [ %.068, %115 ], [ %.068, %105 ], [ %.068, %104 ], [ %.068, %91 ], [ %.068, %81 ], [ %.068, %76 ], [ %.068, %71 ], [ %.068, %66 ], [ %.068, %65 ], [ %.068, %55 ], [ %.068, %45 ], [ %.068, %43 ], [ %.068, %42 ], [ %.068, %31 ], [ %.068, %21 ], [ %.068, %14 ], [ %.068, %13 ], [ %.068, %10 ]
  %.066.be = phi i64 [ %.066, %9 ], [ %.066, %378 ], [ 1, %373 ], [ %.066, %370 ], [ %.066, %369 ], [ %.066, %368 ], [ %.066, %367 ], [ %.066, %366 ], [ %.066, %365 ], [ %.066, %361 ], [ %.066, %360 ], [ %.066, %358 ], [ %.066, %347 ], [ %.066, %337 ], [ %.066, %336 ], [ %334, %330 ], [ %.066, %329 ], [ %.066, %326 ], [ %.066, %323 ], [ %.066, %310 ], [ %.066, %308 ], [ %.066, %306 ], [ %.066, %303 ], [ %.066, %302 ], [ 1, %288 ], [ %.066, %278 ], [ %.066, %277 ], [ %.066, %273 ], [ %.066, %271 ], [ %.066, %265 ], [ %.066, %262 ], [ %.066, %261 ], [ %.066, %249 ], [ %.066, %239 ], [ %.066, %238 ], [ %.066, %233 ], [ %.066, %228 ], [ %.066, %227 ], [ %.066, %226 ], [ %.066, %215 ], [ %.066, %205 ], [ %.066, %204 ], [ %.066, %194 ], [ %.066, %184 ], [ %.066, %182 ], [ %.066, %174 ], [ %.066, %172 ], [ %.066, %159 ], [ %.066, %149 ], [ %.066, %148 ], [ %.066, %138 ], [ %.066, %128 ], [ %.066, %127 ], [ %.066, %126 ], [ %.066, %115 ], [ %.066, %105 ], [ %.066, %104 ], [ %.066, %91 ], [ %.066, %81 ], [ %.066, %76 ], [ %.066, %71 ], [ %.066, %66 ], [ %.066, %65 ], [ %.066, %55 ], [ %.066, %45 ], [ %.066, %43 ], [ %.066, %42 ], [ %.066, %31 ], [ %.066, %21 ], [ %.066, %14 ], [ %.066, %13 ], [ %.066, %10 ]
  %.064.be = phi i64 [ %.064, %9 ], [ %.064, %378 ], [ %.064, %373 ], [ %.064, %370 ], [ %.064, %369 ], [ %.064, %368 ], [ %.064, %367 ], [ %.064, %366 ], [ %.064, %365 ], [ %.064, %361 ], [ %.064, %360 ], [ %.064, %358 ], [ %.064, %347 ], [ %.064, %337 ], [ %.064, %336 ], [ %333, %330 ], [ %.064, %329 ], [ %.064, %326 ], [ %.064, %323 ], [ %.064, %310 ], [ %.064, %308 ], [ %.064, %306 ], [ %.064, %303 ], [ %.064, %302 ], [ %.064, %288 ], [ %.064, %278 ], [ %.064, %277 ], [ %.064, %273 ], [ %.064, %271 ], [ %270, %265 ], [ %.064, %262 ], [ %.064, %261 ], [ %.064, %249 ], [ %.064, %239 ], [ %.064, %238 ], [ %.064, %233 ], [ %.064, %228 ], [ %.064, %227 ], [ %.064, %226 ], [ %.064, %215 ], [ %.064, %205 ], [ %.064, %204 ], [ %.064, %194 ], [ %.064, %184 ], [ %.064, %182 ], [ %.064, %174 ], [ %.064, %172 ], [ %.064, %159 ], [ %.064, %149 ], [ %.064, %148 ], [ %.064, %138 ], [ %.064, %128 ], [ %.064, %127 ], [ %.064, %126 ], [ %.064, %115 ], [ %.064, %105 ], [ %.064, %104 ], [ %.064, %91 ], [ %.064, %81 ], [ %.064, %76 ], [ %.064, %71 ], [ %.064, %66 ], [ %.064, %65 ], [ %.064, %55 ], [ %.064, %45 ], [ %.064, %43 ], [ %.064, %42 ], [ %.064, %31 ], [ %.064, %21 ], [ %.064, %14 ], [ %.064, %13 ], [ %.064, %10 ]
  %.062.be = phi i32 [ %.062, %9 ], [ %.062, %378 ], [ %.062, %373 ], [ %.062, %370 ], [ %.062, %369 ], [ %.062, %368 ], [ %.062, %367 ], [ %.062, %366 ], [ %.062, %365 ], [ %.062, %361 ], [ %.062, %360 ], [ %.062, %358 ], [ %.062, %347 ], [ %.062, %337 ], [ %.062, %336 ], [ %.062, %330 ], [ %.062, %329 ], [ %.062, %326 ], [ %.062, %323 ], [ %.062, %310 ], [ %.062, %308 ], [ %.062, %306 ], [ %.062, %303 ], [ %.062, %302 ], [ %.062, %288 ], [ %.062, %278 ], [ %.062, %277 ], [ %.062, %273 ], [ %.062, %271 ], [ %.062, %265 ], [ %.062, %262 ], [ %.062, %261 ], [ %.062, %249 ], [ %.062, %239 ], [ %.062, %238 ], [ %.062, %233 ], [ %.062, %228 ], [ %.062, %227 ], [ %.062, %226 ], [ %.062, %215 ], [ %.062, %205 ], [ %.062, %204 ], [ %.062, %194 ], [ %.062, %184 ], [ %.062, %182 ], [ %.062, %174 ], [ %.062, %172 ], [ %.062, %159 ], [ %.062, %149 ], [ %.062, %148 ], [ %.062, %138 ], [ %.062, %128 ], [ %.062, %127 ], [ %.062, %126 ], [ %.062, %115 ], [ %.062, %105 ], [ %.062, %104 ], [ %.062, %91 ], [ %.062, %81 ], [ %.062, %76 ], [ %.062, %71 ], [ %.062, %66 ], [ %.062, %65 ], [ %.062, %55 ], [ %.062, %45 ], [ %44, %43 ], [ %.062, %42 ], [ %.062, %31 ], [ %.062, %21 ], [ %.062, %14 ], [ 0, %13 ], [ %.062, %10 ]
  %.060.be = phi i32 [ %.060, %9 ], [ %.060, %378 ], [ %.060, %373 ], [ %.060, %370 ], [ %.060, %369 ], [ %.060, %368 ], [ %.060, %367 ], [ %.060, %366 ], [ %.neg76, %365 ], [ %.060, %361 ], [ %.060, %360 ], [ %.060, %358 ], [ %.060, %347 ], [ %.060, %337 ], [ %.060, %336 ], [ %.060, %330 ], [ %.060, %329 ], [ %.060, %326 ], [ %.060, %323 ], [ %.060, %310 ], [ %.060, %308 ], [ %.060, %306 ], [ %.060, %303 ], [ %.060, %302 ], [ %.060, %288 ], [ %.060, %278 ], [ %.060, %277 ], [ %.060, %273 ], [ %.060, %271 ], [ %.060, %265 ], [ %.060, %262 ], [ %.060, %261 ], [ %.060, %249 ], [ %.060, %239 ], [ %.060, %238 ], [ %.060, %233 ], [ %.060, %228 ], [ %.060, %227 ], [ %.060, %226 ], [ %.060, %215 ], [ %.060, %205 ], [ %.060, %204 ], [ %.060, %194 ], [ %.060, %184 ], [ %.060, %182 ], [ %.060, %174 ], [ %.060, %172 ], [ %.060, %159 ], [ %.060, %149 ], [ %.060, %148 ], [ %.060, %138 ], [ %.060, %128 ], [ %.060, %127 ], [ %.060, %126 ], [ %116, %115 ], [ %.060, %105 ], [ %.060, %104 ], [ %.060, %91 ], [ %.060, %81 ], [ %.060, %76 ], [ 1, %71 ], [ %.060, %66 ], [ %.060, %65 ], [ %.060, %55 ], [ %.060, %45 ], [ %.060, %43 ], [ %.060, %42 ], [ %.060, %31 ], [ %.060, %21 ], [ %.060, %14 ], [ %.060, %13 ], [ %.060, %10 ]
  %.058.be = phi i32 [ %.058, %9 ], [ %.058, %378 ], [ %.058, %373 ], [ %.058, %370 ], [ %.neg75, %369 ], [ %.058, %368 ], [ %.058, %367 ], [ 1, %366 ], [ %.058, %365 ], [ %.058, %361 ], [ %.058, %360 ], [ %.058, %358 ], [ %.058, %347 ], [ %.058, %337 ], [ %.058, %336 ], [ %.058, %330 ], [ %.058, %329 ], [ %.058, %326 ], [ %.058, %323 ], [ %.058, %310 ], [ %.058, %308 ], [ %.058, %306 ], [ %.058, %303 ], [ %.058, %302 ], [ %.058, %288 ], [ %.058, %278 ], [ %.058, %277 ], [ %.058, %273 ], [ %.058, %271 ], [ %.058, %265 ], [ %.058, %262 ], [ %.058, %261 ], [ %.058, %249 ], [ %.058, %239 ], [ %.058, %238 ], [ %.058, %233 ], [ %.058, %228 ], [ %.058, %227 ], [ %.058, %226 ], [ %216, %215 ], [ %.058, %205 ], [ %.058, %204 ], [ %.058, %194 ], [ %.058, %184 ], [ %.058, %182 ], [ %.058, %174 ], [ %.058, %172 ], [ %.058, %159 ], [ %.058, %149 ], [ %.058, %148 ], [ 1, %138 ], [ %.058, %128 ], [ %.058, %127 ], [ %.058, %126 ], [ %.058, %115 ], [ %.058, %105 ], [ %.058, %104 ], [ %.058, %91 ], [ %.058, %81 ], [ %.058, %76 ], [ %.058, %71 ], [ %.058, %66 ], [ %.058, %65 ], [ %.058, %55 ], [ %.058, %45 ], [ %.058, %43 ], [ %.058, %42 ], [ %.058, %31 ], [ %.058, %21 ], [ %.058, %14 ], [ %.058, %13 ], [ %.058, %10 ]
  %.056.be = phi i32 [ %.056, %9 ], [ %.056, %378 ], [ %.056, %373 ], [ %.056, %370 ], [ %.056, %369 ], [ %.056, %368 ], [ %.056, %367 ], [ %.056, %366 ], [ %.056, %365 ], [ %.056, %361 ], [ %.056, %360 ], [ %.056, %358 ], [ %.056, %347 ], [ %.056, %337 ], [ %.056, %336 ], [ %.056, %330 ], [ %.056, %329 ], [ %.056, %326 ], [ %.056, %323 ], [ %.056, %310 ], [ %.056, %308 ], [ %.056, %306 ], [ %.056, %303 ], [ %.056, %302 ], [ %.056, %288 ], [ %.056, %278 ], [ %.056, %277 ], [ %.056, %273 ], [ %.056, %271 ], [ %.056, %265 ], [ %.056, %262 ], [ %.056, %261 ], [ %.056, %249 ], [ %.056, %239 ], [ %.neg81, %238 ], [ %.056, %233 ], [ %.056, %228 ], [ 1, %227 ], [ %.056, %226 ], [ %.056, %215 ], [ %.056, %205 ], [ %.056, %204 ], [ %.056, %194 ], [ %.056, %184 ], [ %.056, %182 ], [ %.056, %174 ], [ %.056, %172 ], [ %.056, %159 ], [ %.056, %149 ], [ %.056, %148 ], [ %.056, %138 ], [ %.056, %128 ], [ %.056, %127 ], [ %.056, %126 ], [ %.056, %115 ], [ %.056, %105 ], [ %.056, %104 ], [ %.056, %91 ], [ %.056, %81 ], [ %.056, %76 ], [ %.056, %71 ], [ %.056, %66 ], [ %.056, %65 ], [ %.056, %55 ], [ %.056, %45 ], [ %.056, %43 ], [ %.056, %42 ], [ %.056, %31 ], [ %.056, %21 ], [ %.056, %14 ], [ %.056, %13 ], [ %.056, %10 ]
  %.054.be = phi i32 [ %.054, %9 ], [ %.054, %378 ], [ %.054, %373 ], [ 1, %370 ], [ %.054, %369 ], [ %.054, %368 ], [ %.054, %367 ], [ %.054, %366 ], [ %.054, %365 ], [ %.054, %361 ], [ %.054, %360 ], [ %.054, %358 ], [ %.054, %347 ], [ %.054, %337 ], [ %.054, %336 ], [ %.054, %330 ], [ %.054, %329 ], [ %.054, %326 ], [ %.054, %323 ], [ %.054, %310 ], [ %.054, %308 ], [ %.054, %306 ], [ %.054, %303 ], [ %.054, %302 ], [ %.054, %288 ], [ %.054, %278 ], [ %.054, %277 ], [ %.054, %273 ], [ %272, %271 ], [ %.054, %265 ], [ %.054, %262 ], [ %.054, %261 ], [ 1, %249 ], [ %.054, %239 ], [ %.054, %238 ], [ %.054, %233 ], [ %.054, %228 ], [ %.054, %227 ], [ %.054, %226 ], [ %.054, %215 ], [ %.054, %205 ], [ %.054, %204 ], [ %.054, %194 ], [ %.054, %184 ], [ %.054, %182 ], [ %.054, %174 ], [ %.054, %172 ], [ %.054, %159 ], [ %.054, %149 ], [ %.054, %148 ], [ %.054, %138 ], [ %.054, %128 ], [ %.054, %127 ], [ %.054, %126 ], [ %.054, %115 ], [ %.054, %105 ], [ %.054, %104 ], [ %.054, %91 ], [ %.054, %81 ], [ %.054, %76 ], [ %.054, %71 ], [ %.054, %66 ], [ %.054, %65 ], [ %.054, %55 ], [ %.054, %45 ], [ %.054, %43 ], [ %.054, %42 ], [ %.054, %31 ], [ %.054, %21 ], [ %.054, %14 ], [ %.054, %13 ], [ %.054, %10 ]
  %.052.be = phi i32 [ %.052, %9 ], [ -245007406, %378 ], [ 1325143797, %373 ], [ -761505428, %370 ], [ -1952188305, %369 ], [ -242444672, %368 ], [ 1115217897, %367 ], [ -1617473477, %366 ], [ 783451091, %365 ], [ 1405659817, %361 ], [ 1949672863, %360 ], [ 1709135119, %358 ], [ %356, %347 ], [ %346, %337 ], [ -1115393159, %336 ], [ -1796457547, %330 ], [ -1115393159, %329 ], [ %328, %326 ], [ -223310198, %323 ], [ %322, %310 ], [ %309, %308 ], [ 2005364584, %306 ], [ %305, %303 ], [ -1796457547, %302 ], [ %301, %288 ], [ %287, %278 ], [ -749166783, %277 ], [ %276, %273 ], [ 897729129, %271 ], [ 415078992, %265 ], [ %264, %262 ], [ 897729129, %261 ], [ %260, %249 ], [ %248, %239 ], [ -1020176545, %238 ], [ -1653858273, %233 ], [ %232, %228 ], [ -1020176545, %227 ], [ 1366928143, %226 ], [ %225, %215 ], [ %214, %205 ], [ 1424232297, %204 ], [ %203, %194 ], [ %193, %184 ], [ -1378953387, %182 ], [ %181, %174 ], [ %173, %172 ], [ %171, %159 ], [ %158, %149 ], [ 1366928143, %148 ], [ %147, %138 ], [ %137, %128 ], [ -1115393159, %127 ], [ -1700131632, %126 ], [ %125, %115 ], [ %114, %105 ], [ -904853848, %104 ], [ %103, %91 ], [ %90, %81 ], [ %80, %76 ], [ -1700131632, %71 ], [ %70, %66 ], [ -1115393159, %65 ], [ %64, %55 ], [ %54, %45 ], [ 1326914059, %43 ], [ -961749515, %42 ], [ %41, %31 ], [ %30, %21 ], [ %20, %14 ], [ 1326914059, %13 ], [ %12, %10 ]
  %.0.be = phi i1 [ %.0, %9 ], [ %.0, %378 ], [ %.0, %373 ], [ %.0, %370 ], [ %.0, %369 ], [ %.0, %368 ], [ %.0, %367 ], [ %.0, %366 ], [ %.0, %365 ], [ %.0, %361 ], [ %.0, %360 ], [ %.0, %358 ], [ %.0, %347 ], [ %.0, %337 ], [ %.0, %336 ], [ %.0, %330 ], [ %.0, %329 ], [ %.0, %326 ], [ %.0, %323 ], [ %.0, %310 ], [ %.0, %308 ], [ %307, %306 ], [ false, %303 ], [ %.0, %302 ], [ %.0, %288 ], [ %.0, %278 ], [ %.0, %277 ], [ %.0, %273 ], [ %.0, %271 ], [ %.0, %265 ], [ %.0, %262 ], [ %.0, %261 ], [ %.0, %249 ], [ %.0, %239 ], [ %.0, %238 ], [ %.0, %233 ], [ %.0, %228 ], [ %.0, %227 ], [ %.0, %226 ], [ %.0, %215 ], [ %.0, %205 ], [ %.0, %204 ], [ %.0, %194 ], [ %.0, %184 ], [ %.0, %182 ], [ %.0, %174 ], [ %.0, %172 ], [ %.0, %159 ], [ %.0, %149 ], [ %.0, %148 ], [ %.0, %138 ], [ %.0, %128 ], [ %.0, %127 ], [ %.0, %126 ], [ %.0, %115 ], [ %.0, %105 ], [ %.0, %104 ], [ %.0, %91 ], [ %.0, %81 ], [ %.0, %76 ], [ %.0, %71 ], [ %.0, %66 ], [ %.0, %65 ], [ %.0, %55 ], [ %.0, %45 ], [ %.0, %43 ], [ %.0, %42 ], [ %.0, %31 ], [ %.0, %21 ], [ %.0, %14 ], [ %.0, %13 ], [ %.0, %10 ]
  br label %9

10:                                               ; preds = %9
  %.0..0..0.49 = load volatile i64, i64* %3, align 8
  %11 = icmp eq i64 %.0..0..0.49, 1
  %12 = select i1 %11, i32 1368268615, i32 -1004927250
  br label %.backedge

13:                                               ; preds = %9
  br label %.backedge

14:                                               ; preds = %9
  %15 = sext i32 %.062 to i64
  %16 = load i64, i64* %4, align 8
  %17 = add i64 %16, 1
  %18 = sdiv i64 %17, 2
  %19 = icmp sgt i64 %18, %15
  %20 = select i1 %19, i32 1453067403, i32 191654434
  br label %.backedge

21:                                               ; preds = %9
  %22 = load i32, i32* @x.4, align 4
  %23 = load i32, i32* @y.5, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 1709135119, i32 -1178657746
  br label %.backedge

31:                                               ; preds = %9
  %32 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %33 = load i32, i32* @x.4, align 4
  %34 = load i32, i32* @y.5, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 406290346, i32 -1178657746
  br label %.backedge

42:                                               ; preds = %9
  br label %.backedge

43:                                               ; preds = %9
  %44 = add i32 %.062, 1
  br label %.backedge

45:                                               ; preds = %9
  %46 = load i32, i32* @x.4, align 4
  %47 = load i32, i32* @y.5, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 1949672863, i32 -57615239
  br label %.backedge

55:                                               ; preds = %9
  %56 = load i32, i32* @x.4, align 4
  %57 = load i32, i32* @y.5, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 1585232304, i32 -57615239
  br label %.backedge

65:                                               ; preds = %9
  br label %.backedge

66:                                               ; preds = %9
  %67 = load i64, i64* %5, align 8
  %68 = and i64 %67, 1
  %69 = icmp eq i64 %68, 0
  %70 = select i1 %69, i32 -485483056, i32 46345208
  br label %.backedge

71:                                               ; preds = %9
  %72 = load i64, i64* %5, align 8
  %73 = sdiv i64 %72, 2
  %74 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %73)
  %75 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

76:                                               ; preds = %9
  %77 = sext i32 %.060 to i64
  %78 = load i64, i64* %4, align 8
  %79 = icmp sgt i64 %78, %77
  %80 = select i1 %79, i32 1749418628, i32 534802907
  br label %.backedge

81:                                               ; preds = %9
  %82 = load i32, i32* @x.4, align 4
  %83 = load i32, i32* @y.5, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 1405659817, i32 1055938844
  br label %.backedge

91:                                               ; preds = %9
  %92 = load i64, i64* %5, align 8
  %93 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %92)
  %94 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %95 = load i32, i32* @x.4, align 4
  %96 = load i32, i32* @y.5, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -1976507131, i32 1055938844
  br label %.backedge

104:                                              ; preds = %9
  br label %.backedge

105:                                              ; preds = %9
  %106 = load i32, i32* @x.4, align 4
  %107 = load i32, i32* @y.5, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 783451091, i32 -1293438602
  br label %.backedge

115:                                              ; preds = %9
  %116 = add i32 %.060, 1
  %117 = load i32, i32* @x.4, align 4
  %118 = load i32, i32* @y.5, align 4
  %119 = add i32 %117, -1
  %120 = mul i32 %119, %117
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %123, %122
  %125 = select i1 %124, i32 -787187626, i32 -1293438602
  br label %.backedge

126:                                              ; preds = %9
  br label %.backedge

127:                                              ; preds = %9
  br label %.backedge

128:                                              ; preds = %9
  %129 = load i32, i32* @x.4, align 4
  %130 = load i32, i32* @y.5, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 -1617473477, i32 -1800598705
  br label %.backedge

138:                                              ; preds = %9
  %139 = load i32, i32* @x.4, align 4
  %140 = load i32, i32* @y.5, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 1400163358, i32 -1800598705
  br label %.backedge

148:                                              ; preds = %9
  br label %.backedge

149:                                              ; preds = %9
  %150 = load i32, i32* @x.4, align 4
  %151 = load i32, i32* @y.5, align 4
  %152 = add i32 %150, -1
  %153 = mul i32 %152, %150
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %156, %155
  %158 = select i1 %157, i32 1115217897, i32 1175226170
  br label %.backedge

159:                                              ; preds = %9
  %160 = sext i32 %.058 to i64
  %161 = load i64, i64* %4, align 8
  %162 = icmp sge i64 %161, %160
  store i1 %162, i1* %2, align 1
  %163 = load i32, i32* @x.4, align 4
  %164 = load i32, i32* @y.5, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -1756385680, i32 1175226170
  br label %.backedge

172:                                              ; preds = %9
  %.0..0..0.50 = load volatile i1, i1* %2, align 1
  %173 = select i1 %.0..0..0.50, i32 -1522877376, i32 -1378953387
  br label %.backedge

174:                                              ; preds = %9
  %175 = load i64, i64* %5, align 8
  %176 = sext i32 %.058 to i64
  %177 = call i64 @_Z3expxx(i64 %175, i64 %176)
  %178 = load i64, i64* %4, align 8
  %179 = sub i64 %178, %176
  %180 = icmp sgt i64 %177, %179
  %181 = select i1 %180, i32 -1622380632, i32 1370978199
  br label %.backedge

182:                                              ; preds = %9
  %183 = sext i32 %.058 to i64
  br label %.backedge

184:                                              ; preds = %9
  %185 = load i32, i32* @x.4, align 4
  %186 = load i32, i32* @y.5, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 -242444672, i32 -829949688
  br label %.backedge

194:                                              ; preds = %9
  %195 = load i32, i32* @x.4, align 4
  %196 = load i32, i32* @y.5, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 1958150517, i32 -829949688
  br label %.backedge

204:                                              ; preds = %9
  br label %.backedge

205:                                              ; preds = %9
  %206 = load i32, i32* @x.4, align 4
  %207 = load i32, i32* @y.5, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 -1952188305, i32 -1599713531
  br label %.backedge

215:                                              ; preds = %9
  %216 = add i32 %.058, 1
  %217 = load i32, i32* @x.4, align 4
  %218 = load i32, i32* @y.5, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 -87262705, i32 -1599713531
  br label %.backedge

226:                                              ; preds = %9
  br label %.backedge

227:                                              ; preds = %9
  br label %.backedge

228:                                              ; preds = %9
  %229 = sext i32 %.056 to i64
  %230 = load i64, i64* %4, align 8
  %231 = sub i64 %230, %.070
  %.not83 = icmp slt i64 %231, %229
  %232 = select i1 %.not83, i32 -2002874028, i32 -1000311334
  br label %.backedge

233:                                              ; preds = %9
  %234 = load i64, i64* %5, align 8
  %.neg82.neg = sdiv i64 %234, 2
  %235 = add nsw i64 %.neg82.neg, 1
  %236 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %235)
  %237 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %236, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

238:                                              ; preds = %9
  %.neg81 = add i32 %.056, 1
  br label %.backedge

239:                                              ; preds = %9
  %240 = load i32, i32* @x.4, align 4
  %241 = load i32, i32* @y.5, align 4
  %242 = add i32 %240, -1
  %243 = mul i32 %242, %240
  %244 = and i32 %243, 1
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %246, %245
  %248 = select i1 %247, i32 -761505428, i32 -1302643854
  br label %.backedge

249:                                              ; preds = %9
  %250 = load i64, i64* %4, align 8
  %251 = sub i64 %250, %.070
  %252 = load i32, i32* @x.4, align 4
  %253 = load i32, i32* @y.5, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 629275713, i32 -1302643854
  br label %.backedge

261:                                              ; preds = %9
  br label %.backedge

262:                                              ; preds = %9
  %263 = sext i32 %.054 to i64
  %.not80 = icmp slt i64 %.070, %263
  %264 = select i1 %.not80, i32 1412210651, i32 292536644
  br label %.backedge

265:                                              ; preds = %9
  %266 = load i64, i64* %5, align 8
  %267 = sext i32 %.054 to i64
  %268 = call i64 @_Z3expxx(i64 %266, i64 %267)
  %269 = add i64 %268, %.068
  %270 = add i64 %268, %.064
  br label %.backedge

271:                                              ; preds = %9
  %272 = add i32 %.054, 1
  br label %.backedge

273:                                              ; preds = %9
  %274 = srem i64 %.068, 2
  %275 = icmp eq i64 %274, 1
  %276 = select i1 %275, i32 125286856, i32 -749166783
  br label %.backedge

277:                                              ; preds = %9
  %.neg79 = add i64 %.068, 1
  br label %.backedge

278:                                              ; preds = %9
  %279 = load i32, i32* @x.4, align 4
  %280 = load i32, i32* @y.5, align 4
  %281 = add i32 %279, -1
  %282 = mul i32 %281, %279
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %285, %284
  %287 = select i1 %286, i32 1325143797, i32 -520783715
  br label %.backedge

288:                                              ; preds = %9
  %289 = sdiv i64 %.068, 2
  %290 = load i64, i64* %4, align 8
  %291 = add i64 %289, %.070
  %292 = sub i64 %291, %290
  %293 = load i32, i32* @x.4, align 4
  %294 = load i32, i32* @y.5, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 1606439508, i32 -520783715
  br label %.backedge

302:                                              ; preds = %9
  br label %.backedge

303:                                              ; preds = %9
  %304 = add i64 %.070, 1
  %.not = icmp eq i64 %.066, %304
  %305 = select i1 %.not, i32 2005364584, i32 -1517337570
  br label %.backedge

306:                                              ; preds = %9
  %307 = icmp ne i64 %.068, 0
  br label %.backedge

308:                                              ; preds = %9
  %309 = select i1 %.0, i32 1887918680, i32 -1204001907
  br label %.backedge

310:                                              ; preds = %9
  %311 = add i64 %.068, -1
  %312 = load i64, i64* %5, align 8
  %313 = sdiv i64 %.064, %312
  %314 = sdiv i64 %311, %313
  %315 = add i64 %314, 1
  %316 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %315)
  %317 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %316, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %318 = load i64, i64* %5, align 8
  %319 = sdiv i64 %.064, %318
  %320 = srem i64 %.068, %319
  %321 = icmp eq i64 %320, 0
  %322 = select i1 %321, i32 -696259763, i32 -223310198
  br label %.backedge

323:                                              ; preds = %9
  %324 = load i64, i64* %5, align 8
  %325 = sdiv i64 %.064, %324
  br label %.backedge

326:                                              ; preds = %9
  %327 = icmp eq i64 %.068, 1
  %328 = select i1 %327, i32 1833824319, i32 1185536354
  br label %.backedge

329:                                              ; preds = %9
  br label %.backedge

330:                                              ; preds = %9
  %331 = load i64, i64* %5, align 8
  %332 = sdiv i64 %.064, %331
  %333 = add i64 %332, -1
  %334 = add i64 %.066, 1
  %335 = add i64 %.068, -1
  br label %.backedge

336:                                              ; preds = %9
  br label %.backedge

337:                                              ; preds = %9
  %338 = load i32, i32* @x.4, align 4
  %339 = load i32, i32* @y.5, align 4
  %340 = add i32 %338, -1
  %341 = mul i32 %340, %338
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %344, %343
  %346 = select i1 %345, i32 -245007406, i32 1496496008
  br label %.backedge

347:                                              ; preds = %9
  store i32 0, i32* %1, align 4
  %348 = load i32, i32* @x.4, align 4
  %349 = load i32, i32* @y.5, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 -487100292, i32 1496496008
  br label %.backedge

357:                                              ; preds = %9
  %.0..0..0.51 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.51

358:                                              ; preds = %9
  %359 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

360:                                              ; preds = %9
  br label %.backedge

361:                                              ; preds = %9
  %362 = load i64, i64* %5, align 8
  %363 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %362)
  %364 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %363, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

365:                                              ; preds = %9
  %.neg76 = add i32 %.060, 1
  br label %.backedge

366:                                              ; preds = %9
  br label %.backedge

367:                                              ; preds = %9
  br label %.backedge

368:                                              ; preds = %9
  br label %.backedge

369:                                              ; preds = %9
  %.neg75 = add i32 %.058, 1
  br label %.backedge

370:                                              ; preds = %9
  %371 = load i64, i64* %4, align 8
  %372 = sub i64 %371, %.070
  br label %.backedge

373:                                              ; preds = %9
  %374 = sdiv i64 %.068, 2
  %375 = load i64, i64* %4, align 8
  %376 = add i64 %374, %.070
  %377 = sub i64 %376, %375
  br label %.backedge

378:                                              ; preds = %9
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s924469226.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.6, align 4
  %4 = load i32, i32* @y.7, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1080593853, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1080593853, label %11
    i32 516876815, label %14
    i32 -524571624, label %24
    i32 -616414252, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 516876815, i32 -616414252
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.6, align 4
  %16 = load i32, i32* @y.7, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -524571624, i32 -616414252
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 516876815, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nosync nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
