; ModuleID = 'build_ollvm/programs/p03561/s221318769.ll'
source_filename = "Project_CodeNet_C++1400/p03561/s221318769.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s221318769.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [300005 x i64], align 16
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %12 = bitcast [300005 x i64]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(2400040) %12, i8 0, i64 2400040, i1 false)
  %13 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 0
  store i64 1, i64* %13, align 16
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %4)
  %15 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %14, i32* nonnull dereferenceable(4) %5)
  br label %16

16:                                               ; preds = %.backedge, %0
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i64 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ 1, %0 ], [ %.047.be, %.backedge ]
  %.0 = phi i32 [ 613978651, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 613978651, label %17
    i32 1180753088, label %20
    i32 -1814628465, label %30
    i32 -202298061, label %51
    i32 1506006955, label %52
    i32 -412888562, label %54
    i32 1162948433, label %55
    i32 1272520824, label %65
    i32 -1697957278, label %77
    i32 1279257486, label %79
    i32 -1795350996, label %90
    i32 -826227990, label %91
    i32 1287332388, label %96
    i32 1742269182, label %101
    i32 1626543192, label %111
    i32 -1901501187, label %123
    i32 -1405483916, label %125
    i32 -13217017, label %129
    i32 -235794212, label %131
    i32 -935417226, label %141
    i32 -630494849, label %151
    i32 1082705501, label %152
    i32 -328773864, label %156
    i32 469922853, label %157
    i32 613117113, label %167
    i32 1316224655, label %181
    i32 1530498378, label %183
    i32 -1713195109, label %186
    i32 1387250971, label %196
    i32 1875204999, label %207
    i32 -263784675, label %208
    i32 478787931, label %218
    i32 1992783492, label %228
    i32 239440220, label %229
    i32 -1113907793, label %239
    i32 1501761576, label %249
    i32 1438223799, label %250
    i32 -298236939, label %257
    i32 1030395081, label %267
    i32 -1586171158, label %278
    i32 66428303, label %279
    i32 639215128, label %289
    i32 1088995380, label %299
    i32 1920870306, label %300
    i32 1906044486, label %304
    i32 -77757582, label %314
    i32 927832088, label %329
    i32 -1931569742, label %330
    i32 335169665, label %332
    i32 121612048, label %343
    i32 1037393719, label %353
    i32 1153578087, label %364
    i32 -445870294, label %365
    i32 -2127537620, label %375
    i32 1963669946, label %386
    i32 -1845192781, label %387
    i32 329070274, label %389
    i32 -852047302, label %392
    i32 -1177061576, label %393
    i32 1656050786, label %407
    i32 899335565, label %408
    i32 -1973279281, label %418
    i32 -1885624996, label %428
    i32 -1865588806, label %429
    i32 421795744, label %439
    i32 1269666095, label %449
    i32 -1362561511, label %450
    i32 -1046437694, label %451
    i32 391094858, label %463
    i32 -118169837, label %464
    i32 -1375182881, label %465
    i32 301125024, label %466
    i32 -732796213, label %467
    i32 -1391259610, label %468
    i32 -767654300, label %469
    i32 -1503482355, label %470
    i32 -1914252804, label %472
    i32 1573948884, label %473
    i32 -1013427748, label %479
    i32 2087663943, label %481
    i32 -540223407, label %483
    i32 1860006031, label %484
  ]

.backedge:                                        ; preds = %16, %484, %483, %481, %479, %473, %472, %470, %469, %468, %467, %466, %465, %464, %463, %451, %449, %439, %429, %428, %418, %408, %407, %393, %392, %389, %387, %386, %375, %365, %364, %353, %343, %332, %330, %329, %314, %304, %300, %299, %289, %279, %278, %267, %257, %250, %249, %239, %229, %228, %218, %208, %207, %196, %186, %183, %181, %167, %157, %156, %152, %151, %141, %131, %129, %125, %123, %111, %101, %96, %91, %90, %79, %77, %65, %55, %54, %52, %51, %30, %20, %17
  %.061.be = phi i32 [ %.061, %16 ], [ %.061, %484 ], [ %.061, %483 ], [ %.061, %481 ], [ %.061, %479 ], [ %.061, %473 ], [ %.061, %472 ], [ %.061, %470 ], [ %.061, %469 ], [ %.061, %468 ], [ %.061, %467 ], [ %.061, %466 ], [ %.061, %465 ], [ %.061, %464 ], [ %.061, %463 ], [ %.061, %451 ], [ %.061, %449 ], [ %.061, %439 ], [ %.061, %429 ], [ %.061, %428 ], [ %.061, %418 ], [ %.061, %408 ], [ %.061, %407 ], [ %.061, %393 ], [ %.061, %392 ], [ %.061, %389 ], [ %.061, %387 ], [ %.061, %386 ], [ %.061, %375 ], [ %.061, %365 ], [ %.061, %364 ], [ %.061, %353 ], [ %.061, %343 ], [ %.061, %332 ], [ %.061, %330 ], [ %.061, %329 ], [ %.061, %314 ], [ %.061, %304 ], [ %.061, %300 ], [ %.061, %299 ], [ %.061, %289 ], [ %.061, %279 ], [ %.061, %278 ], [ %.061, %267 ], [ %.061, %257 ], [ %.061, %250 ], [ %.061, %249 ], [ %.061, %239 ], [ %.061, %229 ], [ %.061, %228 ], [ %.061, %218 ], [ %.061, %208 ], [ %.061, %207 ], [ %.061, %196 ], [ %.061, %186 ], [ %.061, %183 ], [ %.061, %181 ], [ %.061, %167 ], [ %.061, %157 ], [ %.061, %156 ], [ %.061, %152 ], [ %.061, %151 ], [ %.061, %141 ], [ %.061, %131 ], [ %.061, %129 ], [ %.061, %125 ], [ %.061, %123 ], [ %.061, %111 ], [ %.061, %101 ], [ %.061, %96 ], [ %.061, %91 ], [ %.neg69, %90 ], [ %.061, %79 ], [ %.061, %77 ], [ %.061, %65 ], [ %.061, %55 ], [ 1, %54 ], [ %.061, %52 ], [ %.061, %51 ], [ %.061, %30 ], [ %.061, %20 ], [ %.061, %17 ]
  %.059.be = phi i32 [ %.059, %16 ], [ %.059, %484 ], [ %.059, %483 ], [ %.059, %481 ], [ %.059, %479 ], [ %.059, %473 ], [ %.059, %472 ], [ %.059, %470 ], [ %.059, %469 ], [ %.059, %468 ], [ %.059, %467 ], [ %.059, %466 ], [ %.059, %465 ], [ %.059, %464 ], [ %.059, %463 ], [ %.059, %451 ], [ %.059, %449 ], [ %.059, %439 ], [ %.059, %429 ], [ %.059, %428 ], [ %.059, %418 ], [ %.059, %408 ], [ %.059, %407 ], [ %.059, %393 ], [ %.059, %392 ], [ %.059, %389 ], [ %.059, %387 ], [ %.059, %386 ], [ %.059, %375 ], [ %.059, %365 ], [ %.059, %364 ], [ %.059, %353 ], [ %.059, %343 ], [ %.059, %332 ], [ %.059, %330 ], [ %.059, %329 ], [ %.059, %314 ], [ %.059, %304 ], [ %.059, %300 ], [ %.059, %299 ], [ %.059, %289 ], [ %.059, %279 ], [ %.059, %278 ], [ %.059, %267 ], [ %.059, %257 ], [ %.059, %250 ], [ %.059, %249 ], [ %.059, %239 ], [ %.059, %229 ], [ %.059, %228 ], [ %.059, %218 ], [ %.059, %208 ], [ %.059, %207 ], [ %.059, %196 ], [ %.059, %186 ], [ %.059, %183 ], [ %.059, %181 ], [ %.059, %167 ], [ %.059, %157 ], [ %.059, %156 ], [ %.059, %152 ], [ %.059, %151 ], [ %.059, %141 ], [ %.059, %131 ], [ %130, %129 ], [ %.059, %125 ], [ %.059, %123 ], [ %.059, %111 ], [ %.059, %101 ], [ 1, %96 ], [ %.059, %91 ], [ %.059, %90 ], [ %.059, %79 ], [ %.059, %77 ], [ %.059, %65 ], [ %.059, %55 ], [ %.059, %54 ], [ %.059, %52 ], [ %.059, %51 ], [ %.059, %30 ], [ %.059, %20 ], [ %.059, %17 ]
  %.057.be = phi i32 [ %.057, %16 ], [ %.057, %484 ], [ %.057, %483 ], [ %.057, %481 ], [ %.057, %479 ], [ %.057, %473 ], [ %.057, %472 ], [ %.057, %470 ], [ %.057, %469 ], [ %.057, %468 ], [ %.neg, %467 ], [ %.057, %466 ], [ %.057, %465 ], [ %.057, %464 ], [ %.057, %463 ], [ %.057, %451 ], [ %.057, %449 ], [ %.057, %439 ], [ %.057, %429 ], [ %.057, %428 ], [ %.057, %418 ], [ %.057, %408 ], [ %.057, %407 ], [ %.057, %393 ], [ %.057, %392 ], [ %.057, %389 ], [ %.057, %387 ], [ %.057, %386 ], [ %.057, %375 ], [ %.057, %365 ], [ %.057, %364 ], [ %.057, %353 ], [ %.057, %343 ], [ %.057, %332 ], [ %.057, %330 ], [ %.057, %329 ], [ %.057, %314 ], [ %.057, %304 ], [ %.057, %300 ], [ %.057, %299 ], [ %.057, %289 ], [ %.057, %279 ], [ %.057, %278 ], [ %.057, %267 ], [ %.057, %257 ], [ %.057, %250 ], [ %.057, %249 ], [ %.057, %239 ], [ %.057, %229 ], [ %.057, %228 ], [ %.057, %218 ], [ %.057, %208 ], [ %.057, %207 ], [ %197, %196 ], [ %.057, %186 ], [ %.057, %183 ], [ %.057, %181 ], [ %.057, %167 ], [ %.057, %157 ], [ 1, %156 ], [ %.057, %152 ], [ %.057, %151 ], [ %.057, %141 ], [ %.057, %131 ], [ %.057, %129 ], [ %.057, %125 ], [ %.057, %123 ], [ %.057, %111 ], [ %.057, %101 ], [ %.057, %96 ], [ %.057, %91 ], [ %.057, %90 ], [ %.057, %79 ], [ %.057, %77 ], [ %.057, %65 ], [ %.057, %55 ], [ %.057, %54 ], [ %.057, %52 ], [ %.057, %51 ], [ %.057, %30 ], [ %.057, %20 ], [ %.057, %17 ]
  %.055.be = phi i32 [ %.055, %16 ], [ %.055, %484 ], [ %.055, %483 ], [ %.055, %481 ], [ %.055, %479 ], [ %.055, %473 ], [ %.055, %472 ], [ %471, %470 ], [ 0, %469 ], [ %.055, %468 ], [ %.055, %467 ], [ %.055, %466 ], [ %.055, %465 ], [ %.055, %464 ], [ %.055, %463 ], [ %.055, %451 ], [ %.055, %449 ], [ %.055, %439 ], [ %.055, %429 ], [ %.055, %428 ], [ %.055, %418 ], [ %.055, %408 ], [ %.055, %407 ], [ %.055, %393 ], [ %.055, %392 ], [ %.055, %389 ], [ %.055, %387 ], [ %.055, %386 ], [ %.055, %375 ], [ %.055, %365 ], [ %.055, %364 ], [ %.055, %353 ], [ %.055, %343 ], [ %.055, %332 ], [ %.055, %330 ], [ %.055, %329 ], [ %.055, %314 ], [ %.055, %304 ], [ %.055, %300 ], [ %.055, %299 ], [ %.055, %289 ], [ %.055, %279 ], [ %.055, %278 ], [ %268, %267 ], [ %.055, %257 ], [ %.055, %250 ], [ %.055, %249 ], [ 0, %239 ], [ %.055, %229 ], [ %.055, %228 ], [ %.055, %218 ], [ %.055, %208 ], [ %.055, %207 ], [ %.055, %196 ], [ %.055, %186 ], [ %.055, %183 ], [ %.055, %181 ], [ %.055, %167 ], [ %.055, %157 ], [ %.055, %156 ], [ %.055, %152 ], [ %.055, %151 ], [ %.055, %141 ], [ %.055, %131 ], [ %.055, %129 ], [ %.055, %125 ], [ %.055, %123 ], [ %.055, %111 ], [ %.055, %101 ], [ %.055, %96 ], [ %.055, %91 ], [ %.055, %90 ], [ %.055, %79 ], [ %.055, %77 ], [ %.055, %65 ], [ %.055, %55 ], [ %.055, %54 ], [ %.055, %52 ], [ %.055, %51 ], [ %.055, %30 ], [ %.055, %20 ], [ %.055, %17 ]
  %.053.be = phi i32 [ %.053, %16 ], [ %.053, %484 ], [ %.053, %483 ], [ %.053, %481 ], [ %.053, %479 ], [ %.053, %473 ], [ 1, %472 ], [ %.053, %470 ], [ %.053, %469 ], [ %.053, %468 ], [ %.053, %467 ], [ %.053, %466 ], [ %.053, %465 ], [ %.053, %464 ], [ %.053, %463 ], [ %.053, %451 ], [ %.053, %449 ], [ %.053, %439 ], [ %.053, %429 ], [ %.053, %428 ], [ %.053, %418 ], [ %.053, %408 ], [ %.053, %407 ], [ %.053, %393 ], [ %.053, %392 ], [ %.053, %389 ], [ %.053, %387 ], [ %.053, %386 ], [ %.053, %375 ], [ %.053, %365 ], [ %.053, %364 ], [ %.053, %353 ], [ %.053, %343 ], [ %.053, %332 ], [ %331, %330 ], [ %.053, %329 ], [ %.053, %314 ], [ %.053, %304 ], [ %.053, %300 ], [ %.053, %299 ], [ 1, %289 ], [ %.053, %279 ], [ %.053, %278 ], [ %.053, %267 ], [ %.053, %257 ], [ %.053, %250 ], [ %.053, %249 ], [ %.053, %239 ], [ %.053, %229 ], [ %.053, %228 ], [ %.053, %218 ], [ %.053, %208 ], [ %.053, %207 ], [ %.053, %196 ], [ %.053, %186 ], [ %.053, %183 ], [ %.053, %181 ], [ %.053, %167 ], [ %.053, %157 ], [ %.053, %156 ], [ %.053, %152 ], [ %.053, %151 ], [ %.053, %141 ], [ %.053, %131 ], [ %.053, %129 ], [ %.053, %125 ], [ %.053, %123 ], [ %.053, %111 ], [ %.053, %101 ], [ %.053, %96 ], [ %.053, %91 ], [ %.053, %90 ], [ %.053, %79 ], [ %.053, %77 ], [ %.053, %65 ], [ %.053, %55 ], [ %.053, %54 ], [ %.053, %52 ], [ %.053, %51 ], [ %.053, %30 ], [ %.053, %20 ], [ %.053, %17 ]
  %.051.be = phi i64 [ %.051, %16 ], [ %.051, %484 ], [ %.051, %483 ], [ %482, %481 ], [ %480, %479 ], [ %.051, %473 ], [ %.051, %472 ], [ %.051, %470 ], [ %.051, %469 ], [ %.051, %468 ], [ %.051, %467 ], [ %.051, %466 ], [ %.051, %465 ], [ %.051, %464 ], [ %.051, %463 ], [ %.051, %451 ], [ %.051, %449 ], [ %.051, %439 ], [ %.051, %429 ], [ %.051, %428 ], [ %.051, %418 ], [ %.051, %408 ], [ %.051, %407 ], [ %406, %393 ], [ %.051, %392 ], [ %.051, %389 ], [ %.051, %387 ], [ %.051, %386 ], [ %376, %375 ], [ %.051, %365 ], [ %.051, %364 ], [ %354, %353 ], [ %.051, %343 ], [ %340, %332 ], [ %.051, %330 ], [ %.051, %329 ], [ %.051, %314 ], [ %.051, %304 ], [ %.051, %300 ], [ %.051, %299 ], [ %.051, %289 ], [ %.051, %279 ], [ %.051, %278 ], [ %.051, %267 ], [ %.051, %257 ], [ %.051, %250 ], [ %.051, %249 ], [ %.051, %239 ], [ %.051, %229 ], [ %.051, %228 ], [ %.051, %218 ], [ %.051, %208 ], [ %.051, %207 ], [ %.051, %196 ], [ %.051, %186 ], [ %.051, %183 ], [ %.051, %181 ], [ %.051, %167 ], [ %.051, %157 ], [ %.051, %156 ], [ %.051, %152 ], [ %.051, %151 ], [ %.051, %141 ], [ %.051, %131 ], [ %.051, %129 ], [ %.051, %125 ], [ %.051, %123 ], [ %.051, %111 ], [ %.051, %101 ], [ %.051, %96 ], [ %.051, %91 ], [ %.051, %90 ], [ %.051, %79 ], [ %.051, %77 ], [ %.051, %65 ], [ %.051, %55 ], [ %.051, %54 ], [ %.051, %52 ], [ %.051, %51 ], [ %.051, %30 ], [ %.051, %20 ], [ %.051, %17 ]
  %.049.be = phi i32 [ %.049, %16 ], [ %.049, %484 ], [ %.049, %483 ], [ %.055, %481 ], [ %.049, %479 ], [ %.049, %473 ], [ %.049, %472 ], [ %.049, %470 ], [ %.049, %469 ], [ %.049, %468 ], [ %.049, %467 ], [ %.049, %466 ], [ %.049, %465 ], [ %.049, %464 ], [ %.049, %463 ], [ %.049, %451 ], [ %.049, %449 ], [ %.049, %439 ], [ %.049, %429 ], [ %.049, %428 ], [ %.049, %418 ], [ %.049, %408 ], [ %.neg63, %407 ], [ %.049, %393 ], [ %.049, %392 ], [ %.049, %389 ], [ %.049, %387 ], [ %.049, %386 ], [ %.055, %375 ], [ %.049, %365 ], [ %.049, %364 ], [ %.049, %353 ], [ %.049, %343 ], [ %.049, %332 ], [ %.049, %330 ], [ %.049, %329 ], [ %.049, %314 ], [ %.049, %304 ], [ %.049, %300 ], [ %.049, %299 ], [ %.049, %289 ], [ %.049, %279 ], [ %.049, %278 ], [ %.049, %267 ], [ %.049, %257 ], [ %.049, %250 ], [ %.049, %249 ], [ %.049, %239 ], [ %.049, %229 ], [ %.049, %228 ], [ %.049, %218 ], [ %.049, %208 ], [ %.049, %207 ], [ %.049, %196 ], [ %.049, %186 ], [ %.049, %183 ], [ %.049, %181 ], [ %.049, %167 ], [ %.049, %157 ], [ %.049, %156 ], [ %.049, %152 ], [ %.049, %151 ], [ %.049, %141 ], [ %.049, %131 ], [ %.049, %129 ], [ %.049, %125 ], [ %.049, %123 ], [ %.049, %111 ], [ %.049, %101 ], [ %.049, %96 ], [ %.049, %91 ], [ %.049, %90 ], [ %.049, %79 ], [ %.049, %77 ], [ %.049, %65 ], [ %.049, %55 ], [ %.049, %54 ], [ %.049, %52 ], [ %.049, %51 ], [ %.049, %30 ], [ %.049, %20 ], [ %.049, %17 ]
  %.047.be = phi i32 [ %.047, %16 ], [ %.047, %484 ], [ %.047, %483 ], [ %.047, %481 ], [ %.047, %479 ], [ %.047, %473 ], [ %.047, %472 ], [ %.047, %470 ], [ %.047, %469 ], [ %.047, %468 ], [ %.047, %467 ], [ %.047, %466 ], [ %.047, %465 ], [ %.047, %464 ], [ %.047, %463 ], [ %.047, %451 ], [ %.047, %449 ], [ %.047, %439 ], [ %.047, %429 ], [ %.047, %428 ], [ %.047, %418 ], [ %.047, %408 ], [ %.047, %407 ], [ %.047, %393 ], [ %.047, %392 ], [ %.047, %389 ], [ %.047, %387 ], [ %.047, %386 ], [ %.047, %375 ], [ %.047, %365 ], [ %.047, %364 ], [ %.047, %353 ], [ %.047, %343 ], [ %.047, %332 ], [ %.047, %330 ], [ %.047, %329 ], [ %.047, %314 ], [ %.047, %304 ], [ %.047, %300 ], [ %.047, %299 ], [ %.047, %289 ], [ %.047, %279 ], [ %.047, %278 ], [ %.047, %267 ], [ %.047, %257 ], [ %.047, %250 ], [ %.047, %249 ], [ %.047, %239 ], [ %.047, %229 ], [ %.047, %228 ], [ %.047, %218 ], [ %.047, %208 ], [ %.047, %207 ], [ %.047, %196 ], [ %.047, %186 ], [ %.047, %183 ], [ %.047, %181 ], [ %.047, %167 ], [ %.047, %157 ], [ %.047, %156 ], [ %.047, %152 ], [ %.047, %151 ], [ %.047, %141 ], [ %.047, %131 ], [ %.047, %129 ], [ %.047, %125 ], [ %.047, %123 ], [ %.047, %111 ], [ %.047, %101 ], [ %.047, %96 ], [ %.047, %91 ], [ %.047, %90 ], [ %.047, %79 ], [ %.047, %77 ], [ %.047, %65 ], [ %.047, %55 ], [ %.047, %54 ], [ %53, %52 ], [ %.047, %51 ], [ %.047, %30 ], [ %.047, %20 ], [ %.047, %17 ]
  %.0.be = phi i32 [ %.0, %16 ], [ 421795744, %484 ], [ -1973279281, %483 ], [ -2127537620, %481 ], [ 1037393719, %479 ], [ -77757582, %473 ], [ 639215128, %472 ], [ 1030395081, %470 ], [ -1113907793, %469 ], [ 478787931, %468 ], [ 1387250971, %467 ], [ 613117113, %466 ], [ -935417226, %465 ], [ 1626543192, %464 ], [ 1272520824, %463 ], [ -1814628465, %451 ], [ -1362561511, %449 ], [ %448, %439 ], [ %438, %429 ], [ -1865588806, %428 ], [ %427, %418 ], [ %417, %408 ], [ -1845192781, %407 ], [ 1656050786, %393 ], [ 899335565, %392 ], [ %391, %389 ], [ %388, %387 ], [ -1845192781, %386 ], [ %385, %375 ], [ %374, %365 ], [ -445870294, %364 ], [ %363, %353 ], [ %352, %343 ], [ %342, %332 ], [ 1920870306, %330 ], [ -1931569742, %329 ], [ %328, %314 ], [ %313, %304 ], [ %303, %300 ], [ 1920870306, %299 ], [ %298, %289 ], [ %288, %279 ], [ 1438223799, %278 ], [ %277, %267 ], [ %266, %257 ], [ %256, %250 ], [ 1438223799, %249 ], [ %248, %239 ], [ %238, %229 ], [ -1865588806, %228 ], [ %227, %218 ], [ %217, %208 ], [ 469922853, %207 ], [ %206, %196 ], [ %195, %186 ], [ -1713195109, %183 ], [ %182, %181 ], [ %180, %167 ], [ %166, %157 ], [ 469922853, %156 ], [ %155, %152 ], [ -1362561511, %151 ], [ %150, %141 ], [ %140, %131 ], [ 1742269182, %129 ], [ -13217017, %125 ], [ %124, %123 ], [ %122, %111 ], [ %110, %101 ], [ 1742269182, %96 ], [ %95, %91 ], [ 1162948433, %90 ], [ -1795350996, %79 ], [ %78, %77 ], [ %76, %65 ], [ %64, %55 ], [ 1162948433, %54 ], [ 613978651, %52 ], [ 1506006955, %51 ], [ %50, %30 ], [ %29, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %18 = load i32, i32* %5, align 4
  %.not70 = icmp sgt i32 %.047, %18
  %19 = select i1 %.not70, i32 -412888562, i32 1180753088
  br label %.backedge

20:                                               ; preds = %16
  %21 = load i32, i32* @x.1, align 4
  %22 = load i32, i32* @y.2, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 -1814628465, i32 -1046437694
  br label %.backedge

30:                                               ; preds = %16
  store i64 328000002296, i64* %7, align 8
  %31 = add i32 %.047, -1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 %32
  %34 = load i64, i64* %33, align 8
  %35 = load i32, i32* %4, align 4
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %34, %36
  store i64 %37, i64* %8, align 8
  %38 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %7, i64* nonnull dereferenceable(8) %8)
  %39 = load i64, i64* %38, align 8
  %40 = sext i32 %.047 to i64
  %41 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 %40
  store i64 %39, i64* %41, align 8
  %42 = load i32, i32* @x.1, align 4
  %43 = load i32, i32* @y.2, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -202298061, i32 -1046437694
  br label %.backedge

51:                                               ; preds = %16
  br label %.backedge

52:                                               ; preds = %16
  %53 = add i32 %.047, 1
  br label %.backedge

54:                                               ; preds = %16
  br label %.backedge

55:                                               ; preds = %16
  %56 = load i32, i32* @x.1, align 4
  %57 = load i32, i32* @y.2, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 1272520824, i32 391094858
  br label %.backedge

65:                                               ; preds = %16
  %66 = load i32, i32* %5, align 4
  %67 = icmp sle i32 %.061, %66
  store i1 %67, i1* %3, align 1
  %68 = load i32, i32* @x.1, align 4
  %69 = load i32, i32* @y.2, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 -1697957278, i32 391094858
  br label %.backedge

77:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %78 = select i1 %.0..0..0., i32 1279257486, i32 -826227990
  br label %.backedge

79:                                               ; preds = %16
  store i64 328000002296, i64* %9, align 8
  %80 = add i32 %.061, -1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 %81
  %83 = load i64, i64* %82, align 8
  %84 = sext i32 %.061 to i64
  %85 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 %84
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %83
  store i64 %87, i64* %10, align 8
  %88 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %9, i64* nonnull dereferenceable(8) %10)
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %85, align 8
  br label %.backedge

90:                                               ; preds = %16
  %.neg69 = add i32 %.061, 1
  br label %.backedge

91:                                               ; preds = %16
  %92 = load i32, i32* %4, align 4
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = select i1 %94, i32 1287332388, i32 1082705501
  br label %.backedge

96:                                               ; preds = %16
  %97 = load i32, i32* %4, align 4
  %98 = sdiv i32 %97, 2
  %99 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %98)
  %100 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %99, i8 signext 32)
  br label %.backedge

101:                                              ; preds = %16
  %102 = load i32, i32* @x.1, align 4
  %103 = load i32, i32* @y.2, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 1626543192, i32 -118169837
  br label %.backedge

111:                                              ; preds = %16
  %112 = load i32, i32* %5, align 4
  %113 = icmp slt i32 %.059, %112
  store i1 %113, i1* %2, align 1
  %114 = load i32, i32* @x.1, align 4
  %115 = load i32, i32* @y.2, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 -1901501187, i32 -118169837
  br label %.backedge

123:                                              ; preds = %16
  %.0..0..0.45 = load volatile i1, i1* %2, align 1
  %124 = select i1 %.0..0..0.45, i32 -1405483916, i32 -235794212
  br label %.backedge

125:                                              ; preds = %16
  %126 = load i32, i32* %4, align 4
  %127 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %126)
  %128 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %127, i8 signext 32)
  br label %.backedge

129:                                              ; preds = %16
  %130 = add i32 %.059, 1
  br label %.backedge

131:                                              ; preds = %16
  %132 = load i32, i32* @x.1, align 4
  %133 = load i32, i32* @y.2, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 -935417226, i32 -1375182881
  br label %.backedge

141:                                              ; preds = %16
  %142 = load i32, i32* @x.1, align 4
  %143 = load i32, i32* @y.2, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -630494849, i32 -1375182881
  br label %.backedge

151:                                              ; preds = %16
  br label %.backedge

152:                                              ; preds = %16
  %153 = load i32, i32* %4, align 4
  %154 = icmp eq i32 %153, 1
  %155 = select i1 %154, i32 -328773864, i32 239440220
  br label %.backedge

156:                                              ; preds = %16
  br label %.backedge

157:                                              ; preds = %16
  %158 = load i32, i32* @x.1, align 4
  %159 = load i32, i32* @y.2, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 613117113, i32 301125024
  br label %.backedge

167:                                              ; preds = %16
  %168 = load i32, i32* %5, align 4
  %169 = add i32 %168, 1
  %170 = sdiv i32 %169, 2
  %171 = icmp sle i32 %.057, %170
  store i1 %171, i1* %1, align 1
  %172 = load i32, i32* @x.1, align 4
  %173 = load i32, i32* @y.2, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 1316224655, i32 301125024
  br label %.backedge

181:                                              ; preds = %16
  %.0..0..0.46 = load volatile i1, i1* %1, align 1
  %182 = select i1 %.0..0..0.46, i32 1530498378, i32 -263784675
  br label %.backedge

183:                                              ; preds = %16
  %184 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 1)
  %185 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %184, i8 signext 32)
  br label %.backedge

186:                                              ; preds = %16
  %187 = load i32, i32* @x.1, align 4
  %188 = load i32, i32* @y.2, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1387250971, i32 -732796213
  br label %.backedge

196:                                              ; preds = %16
  %197 = add i32 %.057, 1
  %198 = load i32, i32* @x.1, align 4
  %199 = load i32, i32* @y.2, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 1875204999, i32 -732796213
  br label %.backedge

207:                                              ; preds = %16
  br label %.backedge

208:                                              ; preds = %16
  %209 = load i32, i32* @x.1, align 4
  %210 = load i32, i32* @y.2, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 478787931, i32 -1391259610
  br label %.backedge

218:                                              ; preds = %16
  %219 = load i32, i32* @x.1, align 4
  %220 = load i32, i32* @y.2, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 1992783492, i32 -1391259610
  br label %.backedge

228:                                              ; preds = %16
  br label %.backedge

229:                                              ; preds = %16
  %230 = load i32, i32* @x.1, align 4
  %231 = load i32, i32* @y.2, align 4
  %232 = add i32 %230, -1
  %233 = mul i32 %232, %230
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %236, %235
  %238 = select i1 %237, i32 -1113907793, i32 -767654300
  br label %.backedge

239:                                              ; preds = %16
  %240 = load i32, i32* @x.1, align 4
  %241 = load i32, i32* @y.2, align 4
  %242 = add i32 %240, -1
  %243 = mul i32 %242, %240
  %244 = and i32 %243, 1
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %246, %245
  %248 = select i1 %247, i32 1501761576, i32 -767654300
  br label %.backedge

249:                                              ; preds = %16
  br label %.backedge

250:                                              ; preds = %16
  %251 = sext i32 %.055 to i64
  %252 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 %251
  %253 = load i64, i64* %252, align 8
  %254 = load i32, i32* %5, align 4
  %255 = sext i32 %254 to i64
  %.not68 = icmp sgt i64 %253, %255
  %256 = select i1 %.not68, i32 66428303, i32 -298236939
  br label %.backedge

257:                                              ; preds = %16
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 1030395081, i32 -1503482355
  br label %.backedge

267:                                              ; preds = %16
  %268 = add i32 %.055, 1
  %269 = load i32, i32* @x.1, align 4
  %270 = load i32, i32* @y.2, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 -1586171158, i32 -1503482355
  br label %.backedge

278:                                              ; preds = %16
  br label %.backedge

279:                                              ; preds = %16
  %280 = load i32, i32* @x.1, align 4
  %281 = load i32, i32* @y.2, align 4
  %282 = add i32 %280, -1
  %283 = mul i32 %282, %280
  %284 = and i32 %283, 1
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %286, %285
  %288 = select i1 %287, i32 639215128, i32 -1914252804
  br label %.backedge

289:                                              ; preds = %16
  %290 = load i32, i32* @x.1, align 4
  %291 = load i32, i32* @y.2, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 1088995380, i32 -1914252804
  br label %.backedge

299:                                              ; preds = %16
  br label %.backedge

300:                                              ; preds = %16
  %301 = load i32, i32* %5, align 4
  %302 = sub i32 %301, %.055
  %.not67 = icmp sgt i32 %.053, %302
  %303 = select i1 %.not67, i32 335169665, i32 1906044486
  br label %.backedge

304:                                              ; preds = %16
  %305 = load i32, i32* @x.1, align 4
  %306 = load i32, i32* @y.2, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 -77757582, i32 1573948884
  br label %.backedge

314:                                              ; preds = %16
  %315 = load i32, i32* %4, align 4
  %316 = sdiv i32 %315, 2
  %317 = add nsw i32 %316, 1
  %318 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %317)
  %319 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %318, i8 signext 32)
  %320 = load i32, i32* @x.1, align 4
  %321 = load i32, i32* @y.2, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 927832088, i32 1573948884
  br label %.backedge

329:                                              ; preds = %16
  br label %.backedge

330:                                              ; preds = %16
  %331 = add i32 %.053, 1
  br label %.backedge

332:                                              ; preds = %16
  %333 = sext i32 %.055 to i64
  %334 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 %333
  %335 = load i64, i64* %334, align 8
  %336 = load i32, i32* %5, align 4
  %337 = sub i32 %336, %.055
  %338 = sext i32 %337 to i64
  %339 = add i64 %335, 1
  %340 = sub i64 %339, %338
  %341 = and i32 %336, 1
  %.not66 = icmp eq i32 %341, 0
  %342 = select i1 %.not66, i32 -445870294, i32 121612048
  br label %.backedge

343:                                              ; preds = %16
  %344 = load i32, i32* @x.1, align 4
  %345 = load i32, i32* @y.2, align 4
  %346 = add i32 %344, -1
  %347 = mul i32 %346, %344
  %348 = and i32 %347, 1
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %350, %349
  %352 = select i1 %351, i32 1037393719, i32 -1013427748
  br label %.backedge

353:                                              ; preds = %16
  %354 = add i64 %.051, 1
  %355 = load i32, i32* @x.1, align 4
  %356 = load i32, i32* @y.2, align 4
  %357 = add i32 %355, -1
  %358 = mul i32 %357, %355
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %361, %360
  %363 = select i1 %362, i32 1153578087, i32 -1013427748
  br label %.backedge

364:                                              ; preds = %16
  br label %.backedge

365:                                              ; preds = %16
  %366 = load i32, i32* @x.1, align 4
  %367 = load i32, i32* @y.2, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 -2127537620, i32 2087663943
  br label %.backedge

375:                                              ; preds = %16
  %376 = sdiv i64 %.051, 2
  %377 = load i32, i32* @x.1, align 4
  %378 = load i32, i32* @y.2, align 4
  %379 = add i32 %377, -1
  %380 = mul i32 %379, %377
  %381 = and i32 %380, 1
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %383, %382
  %385 = select i1 %384, i32 1963669946, i32 2087663943
  br label %.backedge

386:                                              ; preds = %16
  br label %.backedge

387:                                              ; preds = %16
  %.not = icmp eq i32 %.049, 0
  %388 = select i1 %.not, i32 899335565, i32 329070274
  br label %.backedge

389:                                              ; preds = %16
  %390 = icmp eq i64 %.051, 1
  %391 = select i1 %390, i32 -852047302, i32 -1177061576
  br label %.backedge

392:                                              ; preds = %16
  br label %.backedge

393:                                              ; preds = %16
  %394 = add i64 %.051, -2
  %395 = add i32 %.049, -1
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 %396
  %398 = load i64, i64* %397, align 8
  %399 = sdiv i64 %394, %398
  %400 = trunc i64 %399 to i32
  %401 = add i32 %400, 1
  %402 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %401)
  %403 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %402, i8 signext 32)
  %sext = shl i64 %399, 32
  %404 = ashr exact i64 %sext, 32
  %405 = mul nsw i64 %404, %398
  %.neg64 = xor i64 %405, -1
  %406 = add i64 %.051, %.neg64
  br label %.backedge

407:                                              ; preds = %16
  %.neg63 = add i32 %.049, -1
  br label %.backedge

408:                                              ; preds = %16
  %409 = load i32, i32* @x.1, align 4
  %410 = load i32, i32* @y.2, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 -1973279281, i32 -540223407
  br label %.backedge

418:                                              ; preds = %16
  %419 = load i32, i32* @x.1, align 4
  %420 = load i32, i32* @y.2, align 4
  %421 = add i32 %419, -1
  %422 = mul i32 %421, %419
  %423 = and i32 %422, 1
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %425, %424
  %427 = select i1 %426, i32 -1885624996, i32 -540223407
  br label %.backedge

428:                                              ; preds = %16
  br label %.backedge

429:                                              ; preds = %16
  %430 = load i32, i32* @x.1, align 4
  %431 = load i32, i32* @y.2, align 4
  %432 = add i32 %430, -1
  %433 = mul i32 %432, %430
  %434 = and i32 %433, 1
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %436, %435
  %438 = select i1 %437, i32 421795744, i32 1860006031
  br label %.backedge

439:                                              ; preds = %16
  %440 = load i32, i32* @x.1, align 4
  %441 = load i32, i32* @y.2, align 4
  %442 = add i32 %440, -1
  %443 = mul i32 %442, %440
  %444 = and i32 %443, 1
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %446, %445
  %448 = select i1 %447, i32 1269666095, i32 1860006031
  br label %.backedge

449:                                              ; preds = %16
  br label %.backedge

450:                                              ; preds = %16
  ret i32 0

451:                                              ; preds = %16
  store i64 328000002296, i64* %7, align 8
  %452 = add i32 %.047, -1
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 %453
  %455 = load i64, i64* %454, align 8
  %456 = load i32, i32* %4, align 4
  %457 = sext i32 %456 to i64
  %458 = mul nsw i64 %455, %457
  store i64 %458, i64* %8, align 8
  %459 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %7, i64* nonnull dereferenceable(8) %8)
  %460 = load i64, i64* %459, align 8
  %461 = sext i32 %.047 to i64
  %462 = getelementptr inbounds [300005 x i64], [300005 x i64]* %6, i64 0, i64 %461
  store i64 %460, i64* %462, align 8
  br label %.backedge

463:                                              ; preds = %16
  br label %.backedge

464:                                              ; preds = %16
  br label %.backedge

465:                                              ; preds = %16
  br label %.backedge

466:                                              ; preds = %16
  br label %.backedge

467:                                              ; preds = %16
  %.neg = add i32 %.057, 1
  br label %.backedge

468:                                              ; preds = %16
  br label %.backedge

469:                                              ; preds = %16
  br label %.backedge

470:                                              ; preds = %16
  %471 = add i32 %.055, 1
  br label %.backedge

472:                                              ; preds = %16
  br label %.backedge

473:                                              ; preds = %16
  %474 = load i32, i32* %4, align 4
  %475 = sdiv i32 %474, 2
  %476 = add nsw i32 %475, 1
  %477 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %476)
  %478 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %477, i8 signext 32)
  br label %.backedge

479:                                              ; preds = %16
  %480 = add i64 %.051, 1
  br label %.backedge

481:                                              ; preds = %16
  %482 = sdiv i64 %.051, 2
  br label %.backedge

483:                                              ; preds = %16
  br label %.backedge

484:                                              ; preds = %16
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.3, align 4
  %8 = load i32, i32* @y.4, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -698938402, i32 -1501189581
  %16 = select i1 %14, i32 1127735032, i32 -1501189581
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -1352802121, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 -1352802121, label %18
    i32 1522522420, label %.outer10.backedge
    i32 1127735032, label %.outer.backedge
    i32 -698938402, label %21
    i32 -217527771, label %22
    i32 1089293511, label %23
    i32 -1501189581, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 1522522420, i32 -217527771
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 1089293511, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i64* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 1089293511, %22 ], [ 1127735032, %24 ], [ %15, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s221318769.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
