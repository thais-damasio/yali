; ModuleID = 'build_ollvm/programs/p03561/s824400544.ll'
source_filename = "Project_CodeNet_C++1400/p03561/s824400544.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@K = global i32 0, align 4
@N = global i32 0, align 4
@M = local_unnamed_addr global i32 0, align 4
@ans = local_unnamed_addr global [312345 x i32] zeroinitializer, align 16
@dp = local_unnamed_addr global [21 x i64] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.str = private unnamed_addr constant [5 x i8] c"%d%c\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s824400544.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @K)
  %10 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %9, i32* nonnull dereferenceable(4) @N)
  %11 = load i32, i32* @K, align 4
  store i32 %11, i32* %7, align 4
  br label %12

12:                                               ; preds = %.backedge, %0
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i64 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.0 = phi i32 [ 1360196413, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1360196413, label %13
    i32 3982028, label %16
    i32 -1587586019, label %20
    i32 -1158822724, label %24
    i32 261871602, label %27
    i32 365410486, label %28
    i32 -1788598030, label %29
    i32 1074702792, label %39
    i32 -102201630, label %51
    i32 1140832554, label %53
    i32 -871655440, label %57
    i32 1440624295, label %67
    i32 -1361121800, label %80
    i32 -1844668116, label %82
    i32 -2025665632, label %86
    i32 314461973, label %96
    i32 2124663464, label %108
    i32 -1783440498, label %110
    i32 -1167775215, label %120
    i32 -287808653, label %133
    i32 -1160321773, label %134
    i32 1747333071, label %136
    i32 -607902636, label %146
    i32 401577716, label %156
    i32 1167037326, label %157
    i32 179011526, label %167
    i32 437674769, label %179
    i32 -114898035, label %180
    i32 -290125802, label %190
    i32 443603257, label %202
    i32 -2002108699, label %204
    i32 1794985443, label %219
    i32 1064259105, label %221
    i32 -1067173960, label %231
    i32 2098726367, label %241
    i32 -1433108795, label %242
    i32 -131566735, label %244
    i32 -661245493, label %246
    i32 1099685, label %250
    i32 -717175292, label %255
    i32 -179142575, label %256
    i32 832701033, label %259
    i32 953963179, label %269
    i32 -980721979, label %280
    i32 369479680, label %282
    i32 1697785112, label %296
    i32 1122169361, label %306
    i32 2082859519, label %317
    i32 -1319838980, label %318
    i32 622159566, label %322
    i32 635667904, label %325
    i32 1282114575, label %328
    i32 -1799120522, label %329
    i32 -1944909142, label %343
    i32 -2027271520, label %344
    i32 -1093678778, label %347
    i32 671193319, label %350
    i32 1781159310, label %360
    i32 -23549981, label %374
    i32 -872396302, label %376
    i32 1211531864, label %377
    i32 -79969583, label %387
    i32 -578013537, label %397
    i32 -503955657, label %398
    i32 -675575883, label %399
    i32 80740754, label %401
    i32 1006924656, label %402
    i32 1937766595, label %412
    i32 1916426296, label %422
    i32 -2055059318, label %423
    i32 -1146320222, label %424
    i32 -272426073, label %425
    i32 -2029047842, label %429
    i32 -604905625, label %438
    i32 641878756, label %439
    i32 -2085506472, label %449
    i32 -1761363527, label %459
    i32 1509023977, label %460
    i32 670287934, label %461
    i32 -2111745050, label %462
    i32 -736953999, label %463
    i32 -1876403392, label %467
    i32 -706525667, label %468
    i32 -392902419, label %471
    i32 813712267, label %472
    i32 267460793, label %473
    i32 -483545764, label %474
    i32 -879191558, label %476
    i32 -227800482, label %477
    i32 -620531552, label %478
    i32 -242271364, label %479
  ]

.backedge:                                        ; preds = %12, %479, %478, %477, %476, %474, %473, %472, %471, %468, %467, %463, %462, %461, %460, %449, %439, %438, %429, %425, %424, %423, %422, %412, %402, %401, %399, %398, %397, %387, %377, %376, %374, %360, %350, %347, %344, %343, %329, %328, %325, %322, %318, %317, %306, %296, %282, %280, %269, %259, %256, %255, %250, %246, %244, %242, %241, %231, %221, %219, %204, %202, %190, %180, %179, %167, %157, %156, %146, %136, %134, %133, %120, %110, %108, %96, %86, %82, %80, %67, %57, %53, %51, %39, %29, %28, %27, %24, %20, %16, %13
  %.077.be = phi i32 [ %.077, %12 ], [ %.077, %479 ], [ %.077, %478 ], [ %.077, %477 ], [ %.077, %476 ], [ %.077, %474 ], [ %.077, %473 ], [ %.077, %472 ], [ %.077, %471 ], [ %.077, %468 ], [ %.077, %467 ], [ %.077, %463 ], [ %.077, %462 ], [ %.077, %461 ], [ %.077, %460 ], [ %.077, %449 ], [ %.077, %439 ], [ %.077, %438 ], [ %.077, %429 ], [ %.077, %425 ], [ %.077, %424 ], [ %.077, %423 ], [ %.077, %422 ], [ %.077, %412 ], [ %.077, %402 ], [ %.077, %401 ], [ %.077, %399 ], [ %.077, %398 ], [ %.077, %397 ], [ %.077, %387 ], [ %.077, %377 ], [ %.077, %376 ], [ %.077, %374 ], [ %.077, %360 ], [ %.077, %350 ], [ %.077, %347 ], [ %.077, %344 ], [ %.077, %343 ], [ %.077, %329 ], [ %.077, %328 ], [ %.077, %325 ], [ %.077, %322 ], [ %.077, %318 ], [ %.077, %317 ], [ %.077, %306 ], [ %.077, %296 ], [ %.077, %282 ], [ %.077, %280 ], [ %.077, %269 ], [ %.077, %259 ], [ %.077, %256 ], [ %.077, %255 ], [ %.077, %250 ], [ %.077, %246 ], [ %.077, %244 ], [ %.077, %242 ], [ %.077, %241 ], [ %.077, %231 ], [ %.077, %221 ], [ %.077, %219 ], [ %.077, %204 ], [ %.077, %202 ], [ %.077, %190 ], [ %.077, %180 ], [ %.077, %179 ], [ %.077, %167 ], [ %.077, %157 ], [ %.077, %156 ], [ %.077, %146 ], [ %.077, %136 ], [ %.077, %134 ], [ %.077, %133 ], [ %.077, %120 ], [ %.077, %110 ], [ %.077, %108 ], [ %.077, %96 ], [ %.077, %86 ], [ %.077, %82 ], [ %.077, %80 ], [ %.077, %67 ], [ %.077, %57 ], [ %.077, %53 ], [ %.077, %51 ], [ %.077, %39 ], [ %.077, %29 ], [ %.077, %28 ], [ %.neg83, %27 ], [ %.077, %24 ], [ %.077, %20 ], [ 0, %16 ], [ %.077, %13 ]
  %.075.be = phi i32 [ %.075, %12 ], [ %.075, %479 ], [ %.075, %478 ], [ %.075, %477 ], [ %.075, %476 ], [ %.075, %474 ], [ %.075, %473 ], [ %.075, %472 ], [ %.075, %471 ], [ %.075, %468 ], [ %.075, %467 ], [ %.075, %463 ], [ %.075, %462 ], [ %.075, %461 ], [ %.075, %460 ], [ %.075, %449 ], [ %.075, %439 ], [ %.075, %438 ], [ %.075, %429 ], [ %.075, %425 ], [ %.075, %424 ], [ %.075, %423 ], [ %.075, %422 ], [ %.075, %412 ], [ %.075, %402 ], [ %.075, %401 ], [ %.075, %399 ], [ %.075, %398 ], [ %.075, %397 ], [ %.075, %387 ], [ %.075, %377 ], [ %.075, %376 ], [ %.075, %374 ], [ %.075, %360 ], [ %.075, %350 ], [ %.075, %347 ], [ %.075, %344 ], [ %.075, %343 ], [ %.075, %329 ], [ %.075, %328 ], [ %.075, %325 ], [ %.075, %322 ], [ %.075, %318 ], [ %.075, %317 ], [ %.075, %306 ], [ %.075, %296 ], [ %.075, %282 ], [ %.075, %280 ], [ %.075, %269 ], [ %.075, %259 ], [ %.075, %256 ], [ %.075, %255 ], [ %.075, %250 ], [ %.075, %246 ], [ %.075, %244 ], [ %.075, %242 ], [ %.075, %241 ], [ %.075, %231 ], [ %.075, %221 ], [ %.075, %219 ], [ %.075, %204 ], [ %.075, %202 ], [ %.075, %190 ], [ %.075, %180 ], [ %.075, %179 ], [ %.075, %167 ], [ %.075, %157 ], [ %.075, %156 ], [ %.075, %146 ], [ %.075, %136 ], [ %135, %134 ], [ %.075, %133 ], [ %.075, %120 ], [ %.075, %110 ], [ %.075, %108 ], [ %.075, %96 ], [ %.075, %86 ], [ 1, %82 ], [ %.075, %80 ], [ %.075, %67 ], [ %.075, %57 ], [ %.075, %53 ], [ %.075, %51 ], [ %.075, %39 ], [ %.075, %29 ], [ %.075, %28 ], [ %.075, %27 ], [ %.075, %24 ], [ %.075, %20 ], [ %.075, %16 ], [ %.075, %13 ]
  %.073.be = phi i32 [ %.073, %12 ], [ %.073, %479 ], [ %.073, %478 ], [ %.073, %477 ], [ %.073, %476 ], [ %.073, %474 ], [ %.073, %473 ], [ %.073, %472 ], [ %.073, %471 ], [ %470, %468 ], [ %.073, %467 ], [ %.073, %463 ], [ %.073, %462 ], [ %.073, %461 ], [ %.073, %460 ], [ %.073, %449 ], [ %.073, %439 ], [ %.073, %438 ], [ %.073, %429 ], [ %.073, %425 ], [ %.073, %424 ], [ %.073, %423 ], [ %.073, %422 ], [ %.073, %412 ], [ %.073, %402 ], [ %.073, %401 ], [ %.073, %399 ], [ %.073, %398 ], [ %.073, %397 ], [ %.073, %387 ], [ %.073, %377 ], [ %.073, %376 ], [ %.073, %374 ], [ %.073, %360 ], [ %.073, %350 ], [ %.073, %347 ], [ %.073, %344 ], [ %.073, %343 ], [ %.073, %329 ], [ %.073, %328 ], [ %.073, %325 ], [ %.073, %322 ], [ %.073, %318 ], [ %.073, %317 ], [ %.073, %306 ], [ %.073, %296 ], [ %.073, %282 ], [ %.073, %280 ], [ %.073, %269 ], [ %.073, %259 ], [ %.073, %256 ], [ %.073, %255 ], [ %.073, %250 ], [ %.073, %246 ], [ %.073, %244 ], [ %.073, %242 ], [ %.073, %241 ], [ %.073, %231 ], [ %.073, %221 ], [ %220, %219 ], [ %.073, %204 ], [ %.073, %202 ], [ %.073, %190 ], [ %.073, %180 ], [ %.073, %179 ], [ %169, %167 ], [ %.073, %157 ], [ %.073, %156 ], [ %.073, %146 ], [ %.073, %136 ], [ %.073, %134 ], [ %.073, %133 ], [ %.073, %120 ], [ %.073, %110 ], [ %.073, %108 ], [ %.073, %96 ], [ %.073, %86 ], [ %.073, %82 ], [ %.073, %80 ], [ %.073, %67 ], [ %.073, %57 ], [ %.073, %53 ], [ %.073, %51 ], [ %.073, %39 ], [ %.073, %29 ], [ %.073, %28 ], [ %.073, %27 ], [ %.073, %24 ], [ %.073, %20 ], [ %.073, %16 ], [ %.073, %13 ]
  %.071.be = phi i32 [ %.071, %12 ], [ %.071, %479 ], [ %.071, %478 ], [ %.071, %477 ], [ %.071, %476 ], [ %.071, %474 ], [ %.071, %473 ], [ %.071, %472 ], [ %.071, %471 ], [ 1, %468 ], [ %.071, %467 ], [ %.071, %463 ], [ %.071, %462 ], [ %.071, %461 ], [ %.071, %460 ], [ %.071, %449 ], [ %.071, %439 ], [ %.071, %438 ], [ %.071, %429 ], [ %.071, %425 ], [ %.071, %424 ], [ %.071, %423 ], [ %.071, %422 ], [ %.071, %412 ], [ %.071, %402 ], [ %.071, %401 ], [ %.071, %399 ], [ %.071, %398 ], [ %.071, %397 ], [ %.071, %387 ], [ %.071, %377 ], [ %.071, %376 ], [ %.071, %374 ], [ %.071, %360 ], [ %.071, %350 ], [ %.071, %347 ], [ %.071, %344 ], [ %.071, %343 ], [ %.071, %329 ], [ %.071, %328 ], [ %.071, %325 ], [ %.071, %322 ], [ %.071, %318 ], [ %.071, %317 ], [ %.071, %306 ], [ %.071, %296 ], [ %.071, %282 ], [ %.071, %280 ], [ %.071, %269 ], [ %.071, %259 ], [ %.071, %256 ], [ %.071, %255 ], [ %.071, %250 ], [ %.071, %246 ], [ %.071, %244 ], [ %243, %242 ], [ %.071, %241 ], [ %.071, %231 ], [ %.071, %221 ], [ %.071, %219 ], [ %.071, %204 ], [ %.071, %202 ], [ %.071, %190 ], [ %.071, %180 ], [ %.071, %179 ], [ 1, %167 ], [ %.071, %157 ], [ %.071, %156 ], [ %.071, %146 ], [ %.071, %136 ], [ %.071, %134 ], [ %.071, %133 ], [ %.071, %120 ], [ %.071, %110 ], [ %.071, %108 ], [ %.071, %96 ], [ %.071, %86 ], [ %.071, %82 ], [ %.071, %80 ], [ %.071, %67 ], [ %.071, %57 ], [ %.071, %53 ], [ %.071, %51 ], [ %.071, %39 ], [ %.071, %29 ], [ %.071, %28 ], [ %.071, %27 ], [ %.071, %24 ], [ %.071, %20 ], [ %.071, %16 ], [ %.071, %13 ]
  %.069.be = phi i32 [ %.069, %12 ], [ %.069, %479 ], [ %.069, %478 ], [ %.069, %477 ], [ %.069, %476 ], [ %.069, %474 ], [ %.069, %473 ], [ %.069, %472 ], [ %.069, %471 ], [ %.069, %468 ], [ %.069, %467 ], [ %.069, %463 ], [ %.069, %462 ], [ %.069, %461 ], [ %.069, %460 ], [ %.069, %449 ], [ %.069, %439 ], [ %.069, %438 ], [ %.069, %429 ], [ %.069, %425 ], [ %.069, %424 ], [ %.069, %423 ], [ %.069, %422 ], [ %.069, %412 ], [ %.069, %402 ], [ %.069, %401 ], [ %.069, %399 ], [ %.069, %398 ], [ %.069, %397 ], [ %.069, %387 ], [ %.069, %377 ], [ %.069, %376 ], [ %.069, %374 ], [ %.069, %360 ], [ %.069, %350 ], [ %.069, %347 ], [ %.069, %344 ], [ %.069, %343 ], [ %.069, %329 ], [ %.069, %328 ], [ %.069, %325 ], [ %.069, %322 ], [ %.069, %318 ], [ %.069, %317 ], [ %.069, %306 ], [ %.069, %296 ], [ %.069, %282 ], [ %.069, %280 ], [ %.069, %269 ], [ %.069, %259 ], [ %.069, %256 ], [ %.neg81, %255 ], [ %.069, %250 ], [ %.069, %246 ], [ 0, %244 ], [ %.069, %242 ], [ %.069, %241 ], [ %.069, %231 ], [ %.069, %221 ], [ %.069, %219 ], [ %.069, %204 ], [ %.069, %202 ], [ %.069, %190 ], [ %.069, %180 ], [ %.069, %179 ], [ %.069, %167 ], [ %.069, %157 ], [ %.069, %156 ], [ %.069, %146 ], [ %.069, %136 ], [ %.069, %134 ], [ %.069, %133 ], [ %.069, %120 ], [ %.069, %110 ], [ %.069, %108 ], [ %.069, %96 ], [ %.069, %86 ], [ %.069, %82 ], [ %.069, %80 ], [ %.069, %67 ], [ %.069, %57 ], [ %.069, %53 ], [ %.069, %51 ], [ %.069, %39 ], [ %.069, %29 ], [ %.069, %28 ], [ %.069, %27 ], [ %.069, %24 ], [ %.069, %20 ], [ %.069, %16 ], [ %.069, %13 ]
  %.067.be = phi i64 [ %.067, %12 ], [ %.067, %479 ], [ %.067, %478 ], [ %.067, %477 ], [ %.067, %476 ], [ %.067, %474 ], [ %.067, %473 ], [ %.067, %472 ], [ %.067, %471 ], [ %.067, %468 ], [ %.067, %467 ], [ %.067, %463 ], [ %.067, %462 ], [ %.067, %461 ], [ %.067, %460 ], [ %.067, %449 ], [ %.067, %439 ], [ %.067, %438 ], [ %.067, %429 ], [ %.067, %425 ], [ %.067, %424 ], [ %.067, %423 ], [ %.067, %422 ], [ %.067, %412 ], [ %.067, %402 ], [ %.067, %401 ], [ %.067, %399 ], [ %.067, %398 ], [ %.067, %397 ], [ %.067, %387 ], [ %.067, %377 ], [ %.067, %376 ], [ %.067, %374 ], [ %.067, %360 ], [ %.067, %350 ], [ %.067, %347 ], [ %.067, %344 ], [ %.067, %343 ], [ %342, %329 ], [ %.067, %328 ], [ %.067, %325 ], [ %.067, %322 ], [ %320, %318 ], [ %.067, %317 ], [ %.067, %306 ], [ %.067, %296 ], [ %295, %282 ], [ %.067, %280 ], [ %.067, %269 ], [ %.067, %259 ], [ %258, %256 ], [ %.067, %255 ], [ %.067, %250 ], [ %.067, %246 ], [ %.067, %244 ], [ %.067, %242 ], [ %.067, %241 ], [ %.067, %231 ], [ %.067, %221 ], [ %.067, %219 ], [ %.067, %204 ], [ %.067, %202 ], [ %.067, %190 ], [ %.067, %180 ], [ %.067, %179 ], [ %.067, %167 ], [ %.067, %157 ], [ %.067, %156 ], [ %.067, %146 ], [ %.067, %136 ], [ %.067, %134 ], [ %.067, %133 ], [ %.067, %120 ], [ %.067, %110 ], [ %.067, %108 ], [ %.067, %96 ], [ %.067, %86 ], [ %.067, %82 ], [ %.067, %80 ], [ %.067, %67 ], [ %.067, %57 ], [ %.067, %53 ], [ %.067, %51 ], [ %.067, %39 ], [ %.067, %29 ], [ %.067, %28 ], [ %.067, %27 ], [ %.067, %24 ], [ %.067, %20 ], [ %.067, %16 ], [ %.067, %13 ]
  %.065.be = phi i32 [ %.065, %12 ], [ %.065, %479 ], [ %.065, %478 ], [ %.065, %477 ], [ %.065, %476 ], [ %475, %474 ], [ %.065, %473 ], [ %.065, %472 ], [ %.065, %471 ], [ %.065, %468 ], [ %.065, %467 ], [ %.065, %463 ], [ %.065, %462 ], [ %.065, %461 ], [ %.065, %460 ], [ %.065, %449 ], [ %.065, %439 ], [ %.065, %438 ], [ %.065, %429 ], [ %.065, %425 ], [ %.065, %424 ], [ %.065, %423 ], [ %.065, %422 ], [ %.065, %412 ], [ %.065, %402 ], [ %.065, %401 ], [ %.065, %399 ], [ %.065, %398 ], [ %.065, %397 ], [ %.065, %387 ], [ %.065, %377 ], [ %.065, %376 ], [ %.065, %374 ], [ %.065, %360 ], [ %.065, %350 ], [ %.065, %347 ], [ %.065, %344 ], [ %.065, %343 ], [ %.065, %329 ], [ %.065, %328 ], [ %.065, %325 ], [ %.065, %322 ], [ %.065, %318 ], [ %.065, %317 ], [ %307, %306 ], [ %.065, %296 ], [ %.065, %282 ], [ %.065, %280 ], [ %.065, %269 ], [ %.065, %259 ], [ 0, %256 ], [ %.065, %255 ], [ %.065, %250 ], [ %.065, %246 ], [ %.065, %244 ], [ %.065, %242 ], [ %.065, %241 ], [ %.065, %231 ], [ %.065, %221 ], [ %.065, %219 ], [ %.065, %204 ], [ %.065, %202 ], [ %.065, %190 ], [ %.065, %180 ], [ %.065, %179 ], [ %.065, %167 ], [ %.065, %157 ], [ %.065, %156 ], [ %.065, %146 ], [ %.065, %136 ], [ %.065, %134 ], [ %.065, %133 ], [ %.065, %120 ], [ %.065, %110 ], [ %.065, %108 ], [ %.065, %96 ], [ %.065, %86 ], [ %.065, %82 ], [ %.065, %80 ], [ %.065, %67 ], [ %.065, %57 ], [ %.065, %53 ], [ %.065, %51 ], [ %.065, %39 ], [ %.065, %29 ], [ %.065, %28 ], [ %.065, %27 ], [ %.065, %24 ], [ %.065, %20 ], [ %.065, %16 ], [ %.065, %13 ]
  %.063.be = phi i32 [ %.063, %12 ], [ %.063, %479 ], [ %.063, %478 ], [ %.063, %477 ], [ %.063, %476 ], [ %.063, %474 ], [ %.063, %473 ], [ %.063, %472 ], [ %.063, %471 ], [ %.063, %468 ], [ %.063, %467 ], [ %.063, %463 ], [ %.063, %462 ], [ %.063, %461 ], [ %.063, %460 ], [ %.063, %449 ], [ %.063, %439 ], [ %.063, %438 ], [ %.063, %429 ], [ %.063, %425 ], [ %.063, %424 ], [ %.063, %423 ], [ %.063, %422 ], [ %.063, %412 ], [ %.063, %402 ], [ %.063, %401 ], [ %.063, %399 ], [ %.063, %398 ], [ %.063, %397 ], [ %.063, %387 ], [ %.063, %377 ], [ %.063, %376 ], [ %.063, %374 ], [ %.063, %360 ], [ %.063, %350 ], [ %.063, %347 ], [ %.063, %344 ], [ %.neg79, %343 ], [ %.063, %329 ], [ %.063, %328 ], [ %.063, %325 ], [ %.063, %322 ], [ %321, %318 ], [ %.063, %317 ], [ %.063, %306 ], [ %.063, %296 ], [ %.063, %282 ], [ %.063, %280 ], [ %.063, %269 ], [ %.063, %259 ], [ %.063, %256 ], [ %.063, %255 ], [ %.063, %250 ], [ %.063, %246 ], [ %.063, %244 ], [ %.063, %242 ], [ %.063, %241 ], [ %.063, %231 ], [ %.063, %221 ], [ %.063, %219 ], [ %.063, %204 ], [ %.063, %202 ], [ %.063, %190 ], [ %.063, %180 ], [ %.063, %179 ], [ %.063, %167 ], [ %.063, %157 ], [ %.063, %156 ], [ %.063, %146 ], [ %.063, %136 ], [ %.063, %134 ], [ %.063, %133 ], [ %.063, %120 ], [ %.063, %110 ], [ %.063, %108 ], [ %.063, %96 ], [ %.063, %86 ], [ %.063, %82 ], [ %.063, %80 ], [ %.063, %67 ], [ %.063, %57 ], [ %.063, %53 ], [ %.063, %51 ], [ %.063, %39 ], [ %.063, %29 ], [ %.063, %28 ], [ %.063, %27 ], [ %.063, %24 ], [ %.063, %20 ], [ %.063, %16 ], [ %.063, %13 ]
  %.061.be = phi i32 [ %.061, %12 ], [ %.061, %479 ], [ %.061, %478 ], [ %.061, %477 ], [ %.061, %476 ], [ %.061, %474 ], [ %.061, %473 ], [ %.061, %472 ], [ %.061, %471 ], [ %.061, %468 ], [ %.061, %467 ], [ %.061, %463 ], [ %.061, %462 ], [ %.061, %461 ], [ %.061, %460 ], [ %.061, %449 ], [ %.061, %439 ], [ %.061, %438 ], [ %.061, %429 ], [ %.061, %425 ], [ %.061, %424 ], [ %.061, %423 ], [ %.061, %422 ], [ %.061, %412 ], [ %.061, %402 ], [ %.061, %401 ], [ %400, %399 ], [ %.061, %398 ], [ %.061, %397 ], [ %.061, %387 ], [ %.061, %377 ], [ %.061, %376 ], [ %.061, %374 ], [ %.061, %360 ], [ %.061, %350 ], [ %.061, %347 ], [ %346, %344 ], [ %.061, %343 ], [ %.061, %329 ], [ %.061, %328 ], [ %.061, %325 ], [ %.061, %322 ], [ %.061, %318 ], [ %.061, %317 ], [ %.061, %306 ], [ %.061, %296 ], [ %.061, %282 ], [ %.061, %280 ], [ %.061, %269 ], [ %.061, %259 ], [ %.061, %256 ], [ %.061, %255 ], [ %.061, %250 ], [ %.061, %246 ], [ %.061, %244 ], [ %.061, %242 ], [ %.061, %241 ], [ %.061, %231 ], [ %.061, %221 ], [ %.061, %219 ], [ %.061, %204 ], [ %.061, %202 ], [ %.061, %190 ], [ %.061, %180 ], [ %.061, %179 ], [ %.061, %167 ], [ %.061, %157 ], [ %.061, %156 ], [ %.061, %146 ], [ %.061, %136 ], [ %.061, %134 ], [ %.061, %133 ], [ %.061, %120 ], [ %.061, %110 ], [ %.061, %108 ], [ %.061, %96 ], [ %.061, %86 ], [ %.061, %82 ], [ %.061, %80 ], [ %.061, %67 ], [ %.061, %57 ], [ %.061, %53 ], [ %.061, %51 ], [ %.061, %39 ], [ %.061, %29 ], [ %.061, %28 ], [ %.061, %27 ], [ %.061, %24 ], [ %.061, %20 ], [ %.061, %16 ], [ %.061, %13 ]
  %.059.be = phi i32 [ %.059, %12 ], [ %.059, %479 ], [ %.059, %478 ], [ %.059, %477 ], [ %.059, %476 ], [ %.059, %474 ], [ %.059, %473 ], [ %.059, %472 ], [ %.059, %471 ], [ %.059, %468 ], [ %.059, %467 ], [ %.059, %463 ], [ %.059, %462 ], [ %.059, %461 ], [ %.059, %460 ], [ %.059, %449 ], [ %.059, %439 ], [ %.neg, %438 ], [ %.059, %429 ], [ %.059, %425 ], [ 0, %424 ], [ %.059, %423 ], [ %.059, %422 ], [ %.059, %412 ], [ %.059, %402 ], [ %.059, %401 ], [ %.059, %399 ], [ %.059, %398 ], [ %.059, %397 ], [ %.059, %387 ], [ %.059, %377 ], [ %.059, %376 ], [ %.059, %374 ], [ %.059, %360 ], [ %.059, %350 ], [ %.059, %347 ], [ %.059, %344 ], [ %.059, %343 ], [ %.059, %329 ], [ %.059, %328 ], [ %.059, %325 ], [ %.059, %322 ], [ %.059, %318 ], [ %.059, %317 ], [ %.059, %306 ], [ %.059, %296 ], [ %.059, %282 ], [ %.059, %280 ], [ %.059, %269 ], [ %.059, %259 ], [ %.059, %256 ], [ %.059, %255 ], [ %.059, %250 ], [ %.059, %246 ], [ %.059, %244 ], [ %.059, %242 ], [ %.059, %241 ], [ %.059, %231 ], [ %.059, %221 ], [ %.059, %219 ], [ %.059, %204 ], [ %.059, %202 ], [ %.059, %190 ], [ %.059, %180 ], [ %.059, %179 ], [ %.059, %167 ], [ %.059, %157 ], [ %.059, %156 ], [ %.059, %146 ], [ %.059, %136 ], [ %.059, %134 ], [ %.059, %133 ], [ %.059, %120 ], [ %.059, %110 ], [ %.059, %108 ], [ %.059, %96 ], [ %.059, %86 ], [ %.059, %82 ], [ %.059, %80 ], [ %.059, %67 ], [ %.059, %57 ], [ %.059, %53 ], [ %.059, %51 ], [ %.059, %39 ], [ %.059, %29 ], [ %.059, %28 ], [ %.059, %27 ], [ %.059, %24 ], [ %.059, %20 ], [ %.059, %16 ], [ %.059, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -2085506472, %479 ], [ 1937766595, %478 ], [ -79969583, %477 ], [ 1781159310, %476 ], [ 1122169361, %474 ], [ 953963179, %473 ], [ -1067173960, %472 ], [ -290125802, %471 ], [ 179011526, %468 ], [ -607902636, %467 ], [ -1167775215, %463 ], [ 314461973, %462 ], [ 1440624295, %461 ], [ 1074702792, %460 ], [ %458, %449 ], [ %448, %439 ], [ -272426073, %438 ], [ -604905625, %429 ], [ %428, %425 ], [ -272426073, %424 ], [ -1146320222, %423 ], [ -2055059318, %422 ], [ %421, %412 ], [ %411, %402 ], [ 1006924656, %401 ], [ -1093678778, %399 ], [ -675575883, %398 ], [ 80740754, %397 ], [ %396, %387 ], [ %386, %377 ], [ -503955657, %376 ], [ %375, %374 ], [ %373, %360 ], [ %359, %350 ], [ %349, %347 ], [ -1093678778, %344 ], [ 622159566, %343 ], [ -1944909142, %329 ], [ -2027271520, %328 ], [ %327, %325 ], [ %324, %322 ], [ 622159566, %318 ], [ 832701033, %317 ], [ %316, %306 ], [ %305, %296 ], [ 1697785112, %282 ], [ %281, %280 ], [ %279, %269 ], [ %268, %259 ], [ 832701033, %256 ], [ -661245493, %255 ], [ -717175292, %250 ], [ %249, %246 ], [ -661245493, %244 ], [ -114898035, %242 ], [ -1433108795, %241 ], [ %240, %231 ], [ %230, %221 ], [ -131566735, %219 ], [ %218, %204 ], [ %203, %202 ], [ %201, %190 ], [ %189, %180 ], [ -114898035, %179 ], [ %178, %167 ], [ %166, %157 ], [ 1006924656, %156 ], [ %155, %146 ], [ %145, %136 ], [ -2025665632, %134 ], [ -1160321773, %133 ], [ %132, %120 ], [ %119, %110 ], [ %109, %108 ], [ %107, %96 ], [ %95, %86 ], [ -2025665632, %82 ], [ %81, %80 ], [ %79, %67 ], [ %66, %57 ], [ -2055059318, %53 ], [ %52, %51 ], [ %50, %39 ], [ %38, %29 ], [ -1146320222, %28 ], [ -1587586019, %27 ], [ 261871602, %24 ], [ %23, %20 ], [ -1587586019, %16 ], [ %15, %13 ]
  br label %12

13:                                               ; preds = %12
  %.0..0..0. = load volatile i32, i32* %7, align 4
  %14 = icmp eq i32 %.0..0..0., 1
  %15 = select i1 %14, i32 3982028, i32 -1788598030
  br label %.backedge

16:                                               ; preds = %12
  %17 = load i32, i32* @N, align 4
  %18 = add i32 %17, 1
  %19 = sdiv i32 %18, 2
  store i32 %19, i32* @M, align 4
  br label %.backedge

20:                                               ; preds = %12
  %21 = load i32, i32* @M, align 4
  %22 = icmp slt i32 %.077, %21
  %23 = select i1 %22, i32 -1158822724, i32 365410486
  br label %.backedge

24:                                               ; preds = %12
  %25 = sext i32 %.077 to i64
  %26 = getelementptr inbounds [312345 x i32], [312345 x i32]* @ans, i64 0, i64 %25
  store i32 1, i32* %26, align 4
  br label %.backedge

27:                                               ; preds = %12
  %.neg83 = add i32 %.077, 1
  br label %.backedge

28:                                               ; preds = %12
  br label %.backedge

29:                                               ; preds = %12
  %30 = load i32, i32* @x.1, align 4
  %31 = load i32, i32* @y.2, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 1074702792, i32 1509023977
  br label %.backedge

39:                                               ; preds = %12
  %40 = load i32, i32* @N, align 4
  %41 = icmp eq i32 %40, 1
  store i1 %41, i1* %6, align 1
  %42 = load i32, i32* @x.1, align 4
  %43 = load i32, i32* @y.2, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -102201630, i32 1509023977
  br label %.backedge

51:                                               ; preds = %12
  %.0..0..0.53 = load volatile i1, i1* %6, align 1
  %52 = select i1 %.0..0..0.53, i32 1140832554, i32 -871655440
  br label %.backedge

53:                                               ; preds = %12
  store i32 1, i32* @M, align 4
  %54 = load i32, i32* @K, align 4
  %55 = add i32 %54, 1
  %56 = sdiv i32 %55, 2
  store i32 %56, i32* getelementptr inbounds ([312345 x i32], [312345 x i32]* @ans, i64 0, i64 0), align 16
  br label %.backedge

57:                                               ; preds = %12
  %58 = load i32, i32* @x.1, align 4
  %59 = load i32, i32* @y.2, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 1440624295, i32 670287934
  br label %.backedge

67:                                               ; preds = %12
  %68 = load i32, i32* @K, align 4
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  store i1 %70, i1* %5, align 1
  %71 = load i32, i32* @x.1, align 4
  %72 = load i32, i32* @y.2, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 -1361121800, i32 670287934
  br label %.backedge

80:                                               ; preds = %12
  %.0..0..0.54 = load volatile i1, i1* %5, align 1
  %81 = select i1 %.0..0..0.54, i32 -1844668116, i32 1167037326
  br label %.backedge

82:                                               ; preds = %12
  %83 = load i32, i32* @N, align 4
  store i32 %83, i32* @M, align 4
  %84 = load i32, i32* @K, align 4
  %85 = sdiv i32 %84, 2
  store i32 %85, i32* getelementptr inbounds ([312345 x i32], [312345 x i32]* @ans, i64 0, i64 0), align 16
  br label %.backedge

86:                                               ; preds = %12
  %87 = load i32, i32* @x.1, align 4
  %88 = load i32, i32* @y.2, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 314461973, i32 -2111745050
  br label %.backedge

96:                                               ; preds = %12
  %97 = load i32, i32* @M, align 4
  %98 = icmp slt i32 %.075, %97
  store i1 %98, i1* %4, align 1
  %99 = load i32, i32* @x.1, align 4
  %100 = load i32, i32* @y.2, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 2124663464, i32 -2111745050
  br label %.backedge

108:                                              ; preds = %12
  %.0..0..0.55 = load volatile i1, i1* %4, align 1
  %109 = select i1 %.0..0..0.55, i32 -1783440498, i32 1747333071
  br label %.backedge

110:                                              ; preds = %12
  %111 = load i32, i32* @x.1, align 4
  %112 = load i32, i32* @y.2, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -1167775215, i32 -736953999
  br label %.backedge

120:                                              ; preds = %12
  %121 = load i32, i32* @K, align 4
  %122 = sext i32 %.075 to i64
  %123 = getelementptr inbounds [312345 x i32], [312345 x i32]* @ans, i64 0, i64 %122
  store i32 %121, i32* %123, align 4
  %124 = load i32, i32* @x.1, align 4
  %125 = load i32, i32* @y.2, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 -287808653, i32 -736953999
  br label %.backedge

133:                                              ; preds = %12
  br label %.backedge

134:                                              ; preds = %12
  %135 = add i32 %.075, 1
  br label %.backedge

136:                                              ; preds = %12
  %137 = load i32, i32* @x.1, align 4
  %138 = load i32, i32* @y.2, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 -607902636, i32 -1876403392
  br label %.backedge

146:                                              ; preds = %12
  %147 = load i32, i32* @x.1, align 4
  %148 = load i32, i32* @y.2, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 401577716, i32 -1876403392
  br label %.backedge

156:                                              ; preds = %12
  br label %.backedge

157:                                              ; preds = %12
  %158 = load i32, i32* @x.1, align 4
  %159 = load i32, i32* @y.2, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 179011526, i32 -706525667
  br label %.backedge

167:                                              ; preds = %12
  store i32 20, i32* %8, align 4
  %168 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @N, i32* nonnull dereferenceable(4) %8)
  %169 = load i32, i32* %168, align 4
  store i64 1, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @dp, i64 0, i64 0), align 16
  %170 = load i32, i32* @x.1, align 4
  %171 = load i32, i32* @y.2, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 437674769, i32 -706525667
  br label %.backedge

179:                                              ; preds = %12
  br label %.backedge

180:                                              ; preds = %12
  %181 = load i32, i32* @x.1, align 4
  %182 = load i32, i32* @y.2, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 -290125802, i32 -392902419
  br label %.backedge

190:                                              ; preds = %12
  %191 = add i32 %.073, 1
  %192 = icmp slt i32 %.071, %191
  store i1 %192, i1* %3, align 1
  %193 = load i32, i32* @x.1, align 4
  %194 = load i32, i32* @y.2, align 4
  %195 = add i32 %193, -1
  %196 = mul i32 %195, %193
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %199, %198
  %201 = select i1 %200, i32 443603257, i32 -392902419
  br label %.backedge

202:                                              ; preds = %12
  %.0..0..0.56 = load volatile i1, i1* %3, align 1
  %203 = select i1 %.0..0..0.56, i32 -2002108699, i32 -131566735
  br label %.backedge

204:                                              ; preds = %12
  %205 = add i32 %.071, -1
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [21 x i64], [21 x i64]* @dp, i64 0, i64 %206
  %208 = load i64, i64* %207, align 8
  %209 = load i32, i32* @K, align 4
  %210 = sext i32 %209 to i64
  %211 = mul nsw i64 %208, %210
  %212 = add i64 %211, 1
  %213 = sext i32 %.071 to i64
  %214 = getelementptr inbounds [21 x i64], [21 x i64]* @dp, i64 0, i64 %213
  store i64 %212, i64* %214, align 8
  %215 = load i32, i32* @N, align 4
  %216 = sext i32 %215 to i64
  %217 = icmp sgt i64 %212, %216
  %218 = select i1 %217, i32 1794985443, i32 1064259105
  br label %.backedge

219:                                              ; preds = %12
  %220 = add i32 %.071, 1
  br label %.backedge

221:                                              ; preds = %12
  %222 = load i32, i32* @x.1, align 4
  %223 = load i32, i32* @y.2, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 -1067173960, i32 813712267
  br label %.backedge

231:                                              ; preds = %12
  %232 = load i32, i32* @x.1, align 4
  %233 = load i32, i32* @y.2, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 2098726367, i32 813712267
  br label %.backedge

241:                                              ; preds = %12
  br label %.backedge

242:                                              ; preds = %12
  %243 = add i32 %.071, 1
  br label %.backedge

244:                                              ; preds = %12
  %245 = load i32, i32* @N, align 4
  store i32 %245, i32* @M, align 4
  br label %.backedge

246:                                              ; preds = %12
  %247 = load i32, i32* @M, align 4
  %248 = icmp slt i32 %.069, %247
  %249 = select i1 %248, i32 1099685, i32 -179142575
  br label %.backedge

250:                                              ; preds = %12
  %251 = load i32, i32* @K, align 4
  %.neg82 = add i32 %251, 1
  %252 = sdiv i32 %.neg82, 2
  %253 = sext i32 %.069 to i64
  %254 = getelementptr inbounds [312345 x i32], [312345 x i32]* @ans, i64 0, i64 %253
  store i32 %252, i32* %254, align 4
  br label %.backedge

255:                                              ; preds = %12
  %.neg81 = add i32 %.069, 1
  br label %.backedge

256:                                              ; preds = %12
  %257 = load i32, i32* @N, align 4
  %.neg80 = sdiv i32 %257, -2
  %258 = sext i32 %.neg80 to i64
  br label %.backedge

259:                                              ; preds = %12
  %260 = load i32, i32* @x.1, align 4
  %261 = load i32, i32* @y.2, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 953963179, i32 267460793
  br label %.backedge

269:                                              ; preds = %12
  %270 = icmp slt i32 %.065, %.073
  store i1 %270, i1* %2, align 1
  %271 = load i32, i32* @x.1, align 4
  %272 = load i32, i32* @y.2, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 -980721979, i32 267460793
  br label %.backedge

280:                                              ; preds = %12
  %.0..0..0.57 = load volatile i1, i1* %2, align 1
  %281 = select i1 %.0..0..0.57, i32 369479680, i32 -1319838980
  br label %.backedge

282:                                              ; preds = %12
  %283 = load i32, i32* @M, align 4
  %284 = xor i32 %.065, -1
  %285 = add i32 %283, %284
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [312345 x i32], [312345 x i32]* @ans, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = add i32 %288, -1
  %290 = sext i32 %289 to i64
  %291 = sext i32 %.065 to i64
  %292 = getelementptr inbounds [21 x i64], [21 x i64]* @dp, i64 0, i64 %291
  %293 = load i64, i64* %292, align 8
  %294 = mul nsw i64 %293, %290
  %295 = add i64 %294, %.067
  store i32 0, i32* %287, align 4
  br label %.backedge

296:                                              ; preds = %12
  %297 = load i32, i32* @x.1, align 4
  %298 = load i32, i32* @y.2, align 4
  %299 = add i32 %297, -1
  %300 = mul i32 %299, %297
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %303, %302
  %305 = select i1 %304, i32 1122169361, i32 -483545764
  br label %.backedge

306:                                              ; preds = %12
  %307 = add i32 %.065, 1
  %308 = load i32, i32* @x.1, align 4
  %309 = load i32, i32* @y.2, align 4
  %310 = add i32 %308, -1
  %311 = mul i32 %310, %308
  %312 = and i32 %311, 1
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %314, %313
  %316 = select i1 %315, i32 2082859519, i32 -483545764
  br label %.backedge

317:                                              ; preds = %12
  br label %.backedge

318:                                              ; preds = %12
  %319 = sext i32 %.073 to i64
  %320 = add i64 %.067, %319
  %321 = add i32 %.073, -1
  br label %.backedge

322:                                              ; preds = %12
  %323 = icmp sgt i32 %.063, -1
  %324 = select i1 %323, i32 635667904, i32 -2027271520
  br label %.backedge

325:                                              ; preds = %12
  %326 = icmp eq i64 %.067, 0
  %327 = select i1 %326, i32 1282114575, i32 -1799120522
  br label %.backedge

328:                                              ; preds = %12
  br label %.backedge

329:                                              ; preds = %12
  %330 = load i32, i32* @M, align 4
  %331 = xor i32 %.063, -1
  %332 = add i32 %330, %331
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [312345 x i32], [312345 x i32]* @ans, i64 0, i64 %333
  %335 = add i64 %.067, -1
  %336 = sext i32 %.063 to i64
  %337 = getelementptr inbounds [21 x i64], [21 x i64]* @dp, i64 0, i64 %336
  %338 = load i64, i64* %337, align 8
  %339 = sdiv i64 %335, %338
  %340 = trunc i64 %339 to i32
  %341 = add i32 %340, 1
  store i32 %341, i32* %334, align 4
  %342 = srem i64 %335, %338
  br label %.backedge

343:                                              ; preds = %12
  %.neg79 = add i32 %.063, -1
  br label %.backedge

344:                                              ; preds = %12
  %345 = load i32, i32* @M, align 4
  %346 = add i32 %345, -1
  br label %.backedge

347:                                              ; preds = %12
  %348 = icmp sgt i32 %.061, -1
  %349 = select i1 %348, i32 671193319, i32 80740754
  br label %.backedge

350:                                              ; preds = %12
  %351 = load i32, i32* @x.1, align 4
  %352 = load i32, i32* @y.2, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 1781159310, i32 -879191558
  br label %.backedge

360:                                              ; preds = %12
  %361 = sext i32 %.061 to i64
  %362 = getelementptr inbounds [312345 x i32], [312345 x i32]* @ans, i64 0, i64 %361
  %363 = load i32, i32* %362, align 4
  %364 = icmp eq i32 %363, 0
  store i1 %364, i1* %1, align 1
  %365 = load i32, i32* @x.1, align 4
  %366 = load i32, i32* @y.2, align 4
  %367 = add i32 %365, -1
  %368 = mul i32 %367, %365
  %369 = and i32 %368, 1
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %371, %370
  %373 = select i1 %372, i32 -23549981, i32 -879191558
  br label %.backedge

374:                                              ; preds = %12
  %.0..0..0.58 = load volatile i1, i1* %1, align 1
  %375 = select i1 %.0..0..0.58, i32 -872396302, i32 1211531864
  br label %.backedge

376:                                              ; preds = %12
  store i32 %.061, i32* @M, align 4
  br label %.backedge

377:                                              ; preds = %12
  %378 = load i32, i32* @x.1, align 4
  %379 = load i32, i32* @y.2, align 4
  %380 = add i32 %378, -1
  %381 = mul i32 %380, %378
  %382 = and i32 %381, 1
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %384, %383
  %386 = select i1 %385, i32 -79969583, i32 -227800482
  br label %.backedge

387:                                              ; preds = %12
  %388 = load i32, i32* @x.1, align 4
  %389 = load i32, i32* @y.2, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 -578013537, i32 -227800482
  br label %.backedge

397:                                              ; preds = %12
  br label %.backedge

398:                                              ; preds = %12
  br label %.backedge

399:                                              ; preds = %12
  %400 = add i32 %.061, -1
  br label %.backedge

401:                                              ; preds = %12
  br label %.backedge

402:                                              ; preds = %12
  %403 = load i32, i32* @x.1, align 4
  %404 = load i32, i32* @y.2, align 4
  %405 = add i32 %403, -1
  %406 = mul i32 %405, %403
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %409, %408
  %411 = select i1 %410, i32 1937766595, i32 -620531552
  br label %.backedge

412:                                              ; preds = %12
  %413 = load i32, i32* @x.1, align 4
  %414 = load i32, i32* @y.2, align 4
  %415 = add i32 %413, -1
  %416 = mul i32 %415, %413
  %417 = and i32 %416, 1
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %419, %418
  %421 = select i1 %420, i32 1916426296, i32 -620531552
  br label %.backedge

422:                                              ; preds = %12
  br label %.backedge

423:                                              ; preds = %12
  br label %.backedge

424:                                              ; preds = %12
  br label %.backedge

425:                                              ; preds = %12
  %426 = load i32, i32* @M, align 4
  %427 = icmp slt i32 %.059, %426
  %428 = select i1 %427, i32 -2029047842, i32 641878756
  br label %.backedge

429:                                              ; preds = %12
  %430 = sext i32 %.059 to i64
  %431 = getelementptr inbounds [312345 x i32], [312345 x i32]* @ans, i64 0, i64 %430
  %432 = load i32, i32* %431, align 4
  %433 = load i32, i32* @M, align 4
  %434 = add i32 %433, -1
  %435 = icmp eq i32 %.059, %434
  %436 = select i1 %435, i32 10, i32 32
  %437 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %432, i32 %436)
  br label %.backedge

438:                                              ; preds = %12
  %.neg = add i32 %.059, 1
  br label %.backedge

439:                                              ; preds = %12
  %440 = load i32, i32* @x.1, align 4
  %441 = load i32, i32* @y.2, align 4
  %442 = add i32 %440, -1
  %443 = mul i32 %442, %440
  %444 = and i32 %443, 1
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %446, %445
  %448 = select i1 %447, i32 -2085506472, i32 -242271364
  br label %.backedge

449:                                              ; preds = %12
  %450 = load i32, i32* @x.1, align 4
  %451 = load i32, i32* @y.2, align 4
  %452 = add i32 %450, -1
  %453 = mul i32 %452, %450
  %454 = and i32 %453, 1
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %456, %455
  %458 = select i1 %457, i32 -1761363527, i32 -242271364
  br label %.backedge

459:                                              ; preds = %12
  ret i32 0

460:                                              ; preds = %12
  br label %.backedge

461:                                              ; preds = %12
  br label %.backedge

462:                                              ; preds = %12
  br label %.backedge

463:                                              ; preds = %12
  %464 = load i32, i32* @K, align 4
  %465 = sext i32 %.075 to i64
  %466 = getelementptr inbounds [312345 x i32], [312345 x i32]* @ans, i64 0, i64 %465
  store i32 %464, i32* %466, align 4
  br label %.backedge

467:                                              ; preds = %12
  br label %.backedge

468:                                              ; preds = %12
  store i32 20, i32* %8, align 4
  %469 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @N, i32* nonnull dereferenceable(4) %8)
  %470 = load i32, i32* %469, align 4
  store i64 1, i64* getelementptr inbounds ([21 x i64], [21 x i64]* @dp, i64 0, i64 0), align 16
  br label %.backedge

471:                                              ; preds = %12
  br label %.backedge

472:                                              ; preds = %12
  br label %.backedge

473:                                              ; preds = %12
  br label %.backedge

474:                                              ; preds = %12
  %475 = add i32 %.065, 1
  br label %.backedge

476:                                              ; preds = %12
  br label %.backedge

477:                                              ; preds = %12
  br label %.backedge

478:                                              ; preds = %12
  br label %.backedge

479:                                              ; preds = %12
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i32* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1448575423, %2 ], [ -926671595, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 1448575423, label %8
    i32 -692986501, label %.outer.backedge
    i32 663456722, label %11
    i32 -926671595, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i32, i32* %4, align 4
  %.0..0..0.6 = load volatile i32, i32* %3, align 4
  %9 = icmp slt i32 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 -692986501, i32 663456722
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i32* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i32* %.07.ph
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s824400544.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.5, align 4
  %4 = load i32, i32* @y.6, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1130378510, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1130378510, label %11
    i32 -1094224738, label %14
    i32 -1296277577, label %24
    i32 249645481, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1094224738, i32 249645481
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1296277577, i32 249645481
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1094224738, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
