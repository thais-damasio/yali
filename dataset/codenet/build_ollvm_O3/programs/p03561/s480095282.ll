; ModuleID = 'build_ollvm/programs/p03561/s480095282.ll'
source_filename = "Project_CodeNet_C++1400/p03561/s480095282.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = local_unnamed_addr global i32 0, align 4
@k = local_unnamed_addr global i32 0, align 4
@x = local_unnamed_addr global i32 0, align 4
@p = local_unnamed_addr global [300100 x i32] zeroinitializer, align 16
@y = local_unnamed_addr global i32 0, align 4
@a = local_unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"1 \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s480095282.cpp, i8* null }]
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #9
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define i32 @_Z4readv() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  br label %3

3:                                                ; preds = %.backedge, %0
  %.026 = phi i8 [ undef, %0 ], [ %.026.be, %.backedge ]
  %.024 = phi i32 [ 0, %0 ], [ %.024.be, %.backedge ]
  %.022 = phi i32 [ 1, %0 ], [ %.022.be, %.backedge ]
  %.020 = phi i32 [ 488187978, %0 ], [ %.020.be, %.backedge ]
  %.018 = phi i1 [ undef, %0 ], [ %.018.be, %.backedge ]
  %.016 = phi i1 [ undef, %0 ], [ %.016.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.020, label %.backedge [
    i32 488187978, label %4
    i32 -370860845, label %14
    i32 -1451379061, label %27
    i32 2117483696, label %29
    i32 2134131007, label %31
    i32 2066299360, label %34
    i32 -366602459, label %36
    i32 917062005, label %38
    i32 1100241829, label %40
    i32 -345915436, label %50
    i32 1013586837, label %60
    i32 626982610, label %61
    i32 658271046, label %64
    i32 1535975544, label %65
    i32 -1517642918, label %68
    i32 -1875276378, label %78
    i32 -344153300, label %90
    i32 -341566371, label %91
    i32 -32585329, label %92
    i32 -1210309518, label %95
    i32 1079649064, label %97
    i32 1140549719, label %107
    i32 734833058, label %117
    i32 1821214039, label %119
    i32 -1460589043, label %126
    i32 1897677096, label %128
    i32 -321694953, label %131
    i32 -1194507766, label %132
    i32 284294078, label %135
  ]

.backedge:                                        ; preds = %3, %135, %132, %131, %128, %119, %117, %107, %97, %95, %92, %91, %90, %78, %68, %65, %61, %60, %50, %40, %38, %36, %34, %31, %29, %27, %14, %4
  %.026.be = phi i8 [ %.026, %3 ], [ %.026, %135 ], [ %134, %132 ], [ %.026, %131 ], [ %130, %128 ], [ %125, %119 ], [ %.026, %117 ], [ %.026, %107 ], [ %.026, %97 ], [ %.026, %95 ], [ %.026, %92 ], [ %.026, %91 ], [ %.026, %90 ], [ %80, %78 ], [ %.026, %68 ], [ %.026, %65 ], [ %.026, %61 ], [ %.026, %60 ], [ %.026, %50 ], [ %.026, %40 ], [ %.026, %38 ], [ %.026, %36 ], [ %.026, %34 ], [ %.026, %31 ], [ %.026, %29 ], [ %.026, %27 ], [ %16, %14 ], [ %.026, %4 ]
  %.024.be = phi i32 [ %.024, %3 ], [ %.024, %135 ], [ %.024, %132 ], [ %.024, %131 ], [ %.024, %128 ], [ %123, %119 ], [ %.024, %117 ], [ %.024, %107 ], [ %.024, %97 ], [ %.024, %95 ], [ %.024, %92 ], [ %.024, %91 ], [ %.024, %90 ], [ %.024, %78 ], [ %.024, %68 ], [ %.024, %65 ], [ %.024, %61 ], [ %.024, %60 ], [ %.024, %50 ], [ %.024, %40 ], [ %.024, %38 ], [ %.024, %36 ], [ %.024, %34 ], [ %.024, %31 ], [ %.024, %29 ], [ %.024, %27 ], [ %.024, %14 ], [ %.024, %4 ]
  %.022.be = phi i32 [ %.022, %3 ], [ %.022, %135 ], [ -1, %132 ], [ %.022, %131 ], [ %.022, %128 ], [ %.022, %119 ], [ %.022, %117 ], [ %.022, %107 ], [ %.022, %97 ], [ %.022, %95 ], [ %.022, %92 ], [ %.022, %91 ], [ %.022, %90 ], [ -1, %78 ], [ %.022, %68 ], [ %.022, %65 ], [ %.022, %61 ], [ %.022, %60 ], [ %.022, %50 ], [ %.022, %40 ], [ %.022, %38 ], [ %.022, %36 ], [ %.022, %34 ], [ %.022, %31 ], [ %.022, %29 ], [ %.022, %27 ], [ %.022, %14 ], [ %.022, %4 ]
  %.020.be = phi i32 [ %.020, %3 ], [ 1140549719, %135 ], [ -1875276378, %132 ], [ -345915436, %131 ], [ -370860845, %128 ], [ -32585329, %119 ], [ %118, %117 ], [ %116, %107 ], [ %106, %97 ], [ 1079649064, %95 ], [ %94, %92 ], [ -32585329, %91 ], [ -341566371, %90 ], [ %89, %78 ], [ %77, %68 ], [ %67, %65 ], [ %63, %61 ], [ 488187978, %60 ], [ %59, %50 ], [ %49, %40 ], [ %39, %38 ], [ 917062005, %36 ], [ -366602459, %34 ], [ %33, %31 ], [ %30, %29 ], [ %28, %27 ], [ %26, %14 ], [ %13, %4 ]
  %.018.be = phi i1 [ %.018, %3 ], [ %.018, %135 ], [ %.018, %132 ], [ %.018, %131 ], [ %.018, %128 ], [ %.018, %119 ], [ %.018, %117 ], [ %.018, %107 ], [ %.018, %97 ], [ %.018, %95 ], [ %.018, %92 ], [ %.018, %91 ], [ %.018, %90 ], [ %.018, %78 ], [ %.018, %68 ], [ %.018, %65 ], [ %.018, %61 ], [ %.018, %60 ], [ %.018, %50 ], [ %.018, %40 ], [ %.018, %38 ], [ %.018, %36 ], [ %35, %34 ], [ false, %31 ], [ %.018, %29 ], [ %.018, %27 ], [ %.018, %14 ], [ %.018, %4 ]
  %.016.be = phi i1 [ %.016, %3 ], [ %.016, %135 ], [ %.016, %132 ], [ %.016, %131 ], [ %.016, %128 ], [ %.016, %119 ], [ %.016, %117 ], [ %.016, %107 ], [ %.016, %97 ], [ %.016, %95 ], [ %.016, %92 ], [ %.016, %91 ], [ %.016, %90 ], [ %.016, %78 ], [ %.016, %68 ], [ %.016, %65 ], [ %.016, %61 ], [ %.016, %60 ], [ %.016, %50 ], [ %.016, %40 ], [ %.016, %38 ], [ %37, %36 ], [ %.016, %34 ], [ %.016, %31 ], [ false, %29 ], [ false, %27 ], [ %.016, %14 ], [ %.016, %4 ]
  %.0.be = phi i1 [ %.0, %3 ], [ %.0, %135 ], [ %.0, %132 ], [ %.0, %131 ], [ %.0, %128 ], [ %.0, %119 ], [ %.0, %117 ], [ %.0, %107 ], [ %.0, %97 ], [ %96, %95 ], [ false, %92 ], [ %.0, %91 ], [ %.0, %90 ], [ %.0, %78 ], [ %.0, %68 ], [ %.0, %65 ], [ %.0, %61 ], [ %.0, %60 ], [ %.0, %50 ], [ %.0, %40 ], [ %.0, %38 ], [ %.0, %36 ], [ %.0, %34 ], [ %.0, %31 ], [ %.0, %29 ], [ %.0, %27 ], [ %.0, %14 ], [ %.0, %4 ]
  br label %3

4:                                                ; preds = %3
  %5 = load i32, i32* @x.4, align 4
  %6 = load i32, i32* @y.5, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 -370860845, i32 1897677096
  br label %.backedge

14:                                               ; preds = %3
  %15 = tail call i32 @getchar()
  %16 = trunc i32 %15 to i8
  %sext.mask = and i32 %15, 255
  %17 = icmp ne i32 %sext.mask, 45
  store i1 %17, i1* %2, align 1
  %18 = load i32, i32* @x.4, align 4
  %19 = load i32, i32* @y.5, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 -1451379061, i32 1897677096
  br label %.backedge

27:                                               ; preds = %3
  %.0..0..0.14 = load volatile i1, i1* %2, align 1
  %28 = select i1 %.0..0..0.14, i32 2117483696, i32 917062005
  br label %.backedge

29:                                               ; preds = %3
  %.not = icmp eq i8 %.026, -1
  %30 = select i1 %.not, i32 917062005, i32 2134131007
  br label %.backedge

31:                                               ; preds = %3
  %32 = icmp sgt i8 %.026, 47
  %33 = select i1 %32, i32 2066299360, i32 -366602459
  br label %.backedge

34:                                               ; preds = %3
  %35 = icmp slt i8 %.026, 58
  br label %.backedge

36:                                               ; preds = %3
  %37 = xor i1 %.018, true
  br label %.backedge

38:                                               ; preds = %3
  %39 = select i1 %.016, i32 1100241829, i32 626982610
  br label %.backedge

40:                                               ; preds = %3
  %41 = load i32, i32* @x.4, align 4
  %42 = load i32, i32* @y.5, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 -345915436, i32 -321694953
  br label %.backedge

50:                                               ; preds = %3
  %51 = load i32, i32* @x.4, align 4
  %52 = load i32, i32* @y.5, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 1013586837, i32 -321694953
  br label %.backedge

60:                                               ; preds = %3
  br label %.backedge

61:                                               ; preds = %3
  %62 = icmp eq i8 %.026, -1
  %63 = select i1 %62, i32 658271046, i32 1535975544
  br label %.backedge

64:                                               ; preds = %3
  tail call void @exit(i32 0) #10
  unreachable

65:                                               ; preds = %3
  %66 = icmp eq i8 %.026, 45
  %67 = select i1 %66, i32 -1517642918, i32 -341566371
  br label %.backedge

68:                                               ; preds = %3
  %69 = load i32, i32* @x.4, align 4
  %70 = load i32, i32* @y.5, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 -1875276378, i32 -1194507766
  br label %.backedge

78:                                               ; preds = %3
  %79 = tail call i32 @getchar()
  %80 = trunc i32 %79 to i8
  %81 = load i32, i32* @x.4, align 4
  %82 = load i32, i32* @y.5, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 -344153300, i32 -1194507766
  br label %.backedge

90:                                               ; preds = %3
  br label %.backedge

91:                                               ; preds = %3
  br label %.backedge

92:                                               ; preds = %3
  %93 = icmp sgt i8 %.026, 47
  %94 = select i1 %93, i32 -1210309518, i32 1079649064
  br label %.backedge

95:                                               ; preds = %3
  %96 = icmp slt i8 %.026, 58
  br label %.backedge

97:                                               ; preds = %3
  store i1 %.0, i1* %1, align 1
  %98 = load i32, i32* @x.4, align 4
  %99 = load i32, i32* @y.5, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 1140549719, i32 284294078
  br label %.backedge

107:                                              ; preds = %3
  %108 = load i32, i32* @x.4, align 4
  %109 = load i32, i32* @y.5, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 734833058, i32 284294078
  br label %.backedge

117:                                              ; preds = %3
  %.0..0..0.15 = load volatile i1, i1* %1, align 1
  %118 = select i1 %.0..0..0.15, i32 1821214039, i32 -1460589043
  br label %.backedge

119:                                              ; preds = %3
  %120 = mul nsw i32 %.024, 10
  %121 = sext i8 %.026 to i32
  %122 = add nsw i32 %121, -48
  %123 = add i32 %122, %120
  %124 = tail call i32 @getchar()
  %125 = trunc i32 %124 to i8
  br label %.backedge

126:                                              ; preds = %3
  %127 = mul nsw i32 %.022, %.024
  ret i32 %127

128:                                              ; preds = %3
  %129 = tail call i32 @getchar()
  %130 = trunc i32 %129 to i8
  br label %.backedge

131:                                              ; preds = %3
  br label %.backedge

132:                                              ; preds = %3
  %133 = tail call i32 @getchar()
  %134 = trunc i32 %133 to i8
  br label %.backedge

135:                                              ; preds = %3
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #6

; Function Attrs: nofree noinline nounwind uwtable
define void @_Z5writei(i32 %0) local_unnamed_addr #7 {
  %2 = alloca i1, align 1
  %3 = alloca i32*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x.6, align 4
  %7 = load i32, i32* @y.7, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %5, align 1
  %12 = icmp slt i32 %7, 10
  store i1 %12, i1* %4, align 1
  br label %13

13:                                               ; preds = %.backedge, %1
  %.0 = phi i32 [ 1724647952, %1 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1724647952, label %14
    i32 -1099469513, label %17
    i32 899155443, label %30
    i32 -1162521761, label %32
    i32 -963679732, label %36
    i32 2122641125, label %40
    i32 404237883, label %43
    i32 -2012674245, label %48
    i32 1606798129, label %49
  ]

.backedge:                                        ; preds = %13, %49, %43, %40, %36, %32, %30, %17, %14
  %.0.be = phi i32 [ %.0, %13 ], [ -1099469513, %49 ], [ -2012674245, %43 ], [ 404237883, %40 ], [ %39, %36 ], [ -2012674245, %32 ], [ %31, %30 ], [ %29, %17 ], [ %16, %14 ]
  br label %13

14:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %.0..0..0.1 = load volatile i1, i1* %4, align 1
  %15 = or i1 %.0..0..0., %.0..0..0.1
  %16 = select i1 %15, i32 -1099469513, i32 1606798129
  br label %.backedge

17:                                               ; preds = %13
  %18 = alloca i32, align 4
  store i32* %18, i32** %3, align 8
  %.0..0..0.2 = load volatile i32*, i32** %3, align 8
  store i32 %0, i32* %.0..0..0.2, align 4
  %.0..0..0.3 = load volatile i32*, i32** %3, align 8
  %19 = load i32, i32* %.0..0..0.3, align 4
  %20 = icmp slt i32 %19, 0
  store i1 %20, i1* %2, align 1
  %21 = load i32, i32* @x.6, align 4
  %22 = load i32, i32* @y.7, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 899155443, i32 1606798129
  br label %.backedge

30:                                               ; preds = %13
  %.0..0..0.8 = load volatile i1, i1* %2, align 1
  %31 = select i1 %.0..0..0.8, i32 -1162521761, i32 -963679732
  br label %.backedge

32:                                               ; preds = %13
  %33 = call i32 @putchar(i32 45)
  %.0..0..0.4 = load volatile i32*, i32** %3, align 8
  %34 = load i32, i32* %.0..0..0.4, align 4
  %35 = sub i32 0, %34
  call void @_Z5writei(i32 %35)
  br label %.backedge

36:                                               ; preds = %13
  %.0..0..0.5 = load volatile i32*, i32** %3, align 8
  %37 = load i32, i32* %.0..0..0.5, align 4
  %.off = add i32 %37, 9
  %38 = icmp ult i32 %.off, 19
  %39 = select i1 %38, i32 404237883, i32 2122641125
  br label %.backedge

40:                                               ; preds = %13
  %.0..0..0.6 = load volatile i32*, i32** %3, align 8
  %41 = load i32, i32* %.0..0..0.6, align 4
  %42 = sdiv i32 %41, 10
  call void @_Z5writei(i32 %42)
  br label %.backedge

43:                                               ; preds = %13
  %.0..0..0.7 = load volatile i32*, i32** %3, align 8
  %44 = load i32, i32* %.0..0..0.7, align 4
  %45 = srem i32 %44, 10
  %46 = add nsw i32 %45, 48
  %47 = call i32 @putchar(i32 %46)
  br label %.backedge

48:                                               ; preds = %13
  ret void

49:                                               ; preds = %13
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #8 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = tail call i32 @_Z4readv()
  store i32 %7, i32* @k, align 4
  %8 = tail call i32 @_Z4readv()
  store i32 %8, i32* @n, align 4
  %9 = load i32, i32* @k, align 4
  %10 = srem i32 %9, 2
  store i32 %10, i32* %6, align 4
  br label %11

11:                                               ; preds = %.backedge, %0
  %.033 = phi i32 [ undef, %0 ], [ %.033.be, %.backedge ]
  %.031 = phi i32 [ undef, %0 ], [ %.031.be, %.backedge ]
  %.029 = phi i32 [ undef, %0 ], [ %.029.be, %.backedge ]
  %.027 = phi i32 [ undef, %0 ], [ %.027.be, %.backedge ]
  %.025 = phi i32 [ 716987283, %0 ], [ %.025.be, %.backedge ]
  %.023 = phi i1 [ undef, %0 ], [ %.023.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.025, label %.backedge [
    i32 716987283, label %12
    i32 -670226336, label %15
    i32 729464386, label %19
    i32 -366690831, label %29
    i32 1077845619, label %41
    i32 849183210, label %43
    i32 -863726464, label %46
    i32 420819439, label %48
    i32 1874464373, label %49
    i32 370361356, label %53
    i32 670189228, label %63
    i32 895066469, label %73
    i32 -1919531003, label %74
    i32 -1713392241, label %79
    i32 489290506, label %81
    i32 971434868, label %91
    i32 1041876729, label %102
    i32 -180004876, label %103
    i32 1880053905, label %113
    i32 1386097770, label %123
    i32 -128814090, label %124
    i32 -1143618548, label %130
    i32 384926132, label %133
    i32 107684008, label %143
    i32 -1589034628, label %156
    i32 1193055662, label %157
    i32 1681240893, label %159
    i32 -219411538, label %169
    i32 -1107565765, label %179
    i32 224886401, label %180
    i32 1335700964, label %184
    i32 -1994264805, label %186
    i32 1836180825, label %196
    i32 -1670401640, label %211
    i32 -1032383459, label %213
    i32 -279896417, label %215
    i32 -1015023862, label %222
    i32 853601473, label %226
    i32 -360920743, label %232
    i32 1354133320, label %239
    i32 -1579751578, label %249
    i32 1836658322, label %264
    i32 895879151, label %266
    i32 -410534428, label %273
    i32 -1353603206, label %283
    i32 -1180599469, label %293
    i32 -1250232132, label %294
    i32 248753744, label %304
    i32 1607602353, label %314
    i32 128345158, label %316
    i32 1370205785, label %325
    i32 388933725, label %326
    i32 1473294053, label %336
    i32 -1036779632, label %346
    i32 1713950752, label %347
    i32 811713906, label %350
    i32 1076237158, label %356
    i32 1015568532, label %357
    i32 1315211826, label %362
    i32 -1032149040, label %372
    i32 -999290588, label %382
    i32 1691698136, label %383
    i32 -384644884, label %385
    i32 -626827339, label %386
    i32 52748376, label %387
    i32 -581410754, label %388
    i32 -1422111174, label %389
    i32 671415779, label %391
    i32 984406099, label %392
    i32 -1121947509, label %396
    i32 -185201113, label %397
    i32 -1767304353, label %398
    i32 695015968, label %399
    i32 1302994522, label %400
    i32 -579298659, label %401
    i32 -1007048890, label %402
  ]

.backedge:                                        ; preds = %11, %402, %401, %400, %399, %398, %397, %396, %392, %391, %389, %388, %387, %385, %383, %382, %372, %362, %357, %356, %350, %347, %346, %336, %326, %325, %316, %314, %304, %294, %293, %283, %273, %266, %264, %249, %239, %232, %226, %222, %215, %213, %211, %196, %186, %184, %180, %179, %169, %159, %157, %156, %143, %133, %130, %124, %123, %113, %103, %102, %91, %81, %79, %74, %73, %63, %53, %49, %48, %46, %43, %41, %29, %19, %15, %12
  %.033.be = phi i32 [ %.033, %11 ], [ %.033, %402 ], [ %.033, %401 ], [ %.033, %400 ], [ %.033, %399 ], [ %.033, %398 ], [ %.033, %397 ], [ %.033, %396 ], [ %.033, %392 ], [ %.033, %391 ], [ %.033, %389 ], [ %.033, %388 ], [ %.033, %387 ], [ %.033, %385 ], [ %.033, %383 ], [ %.033, %382 ], [ %.033, %372 ], [ %.033, %362 ], [ %.033, %357 ], [ %.033, %356 ], [ %.033, %350 ], [ %.033, %347 ], [ %.033, %346 ], [ %.033, %336 ], [ %.033, %326 ], [ %.033, %325 ], [ %.033, %316 ], [ %.033, %314 ], [ %.033, %304 ], [ %.033, %294 ], [ %.033, %293 ], [ %.033, %283 ], [ %.033, %273 ], [ %.033, %266 ], [ %.033, %264 ], [ %.033, %249 ], [ %.033, %239 ], [ %.033, %232 ], [ %.033, %226 ], [ %.033, %222 ], [ %.033, %215 ], [ %.033, %213 ], [ %.033, %211 ], [ %.033, %196 ], [ %.033, %186 ], [ %.033, %184 ], [ %.033, %180 ], [ %.033, %179 ], [ %.033, %169 ], [ %.033, %159 ], [ %.033, %157 ], [ %.033, %156 ], [ %.033, %143 ], [ %.033, %133 ], [ %.033, %130 ], [ %.033, %124 ], [ %.033, %123 ], [ %.033, %113 ], [ %.033, %103 ], [ %.033, %102 ], [ %.033, %91 ], [ %.033, %81 ], [ %.033, %79 ], [ %.033, %74 ], [ %.033, %73 ], [ %.033, %63 ], [ %.033, %53 ], [ %.033, %49 ], [ %.033, %48 ], [ %47, %46 ], [ %.033, %43 ], [ %.033, %41 ], [ %.033, %29 ], [ %.033, %19 ], [ 2, %15 ], [ %.033, %12 ]
  %.031.be = phi i32 [ %.031, %11 ], [ %.031, %402 ], [ %.031, %401 ], [ %.031, %400 ], [ %.031, %399 ], [ %.031, %398 ], [ %.031, %397 ], [ %.031, %396 ], [ %.031, %392 ], [ %.031, %391 ], [ %390, %389 ], [ 1, %388 ], [ %.031, %387 ], [ %.031, %385 ], [ %.031, %383 ], [ %.031, %382 ], [ %.031, %372 ], [ %.031, %362 ], [ %.031, %357 ], [ %.031, %356 ], [ %.031, %350 ], [ %.031, %347 ], [ %.031, %346 ], [ %.031, %336 ], [ %.031, %326 ], [ %.031, %325 ], [ %.031, %316 ], [ %.031, %314 ], [ %.031, %304 ], [ %.031, %294 ], [ %.031, %293 ], [ %.031, %283 ], [ %.031, %273 ], [ %.031, %266 ], [ %.031, %264 ], [ %.031, %249 ], [ %.031, %239 ], [ %.031, %232 ], [ %.031, %226 ], [ %.031, %222 ], [ %.031, %215 ], [ %.031, %213 ], [ %.031, %211 ], [ %.031, %196 ], [ %.031, %186 ], [ %.031, %184 ], [ %.031, %180 ], [ %.031, %179 ], [ %.031, %169 ], [ %.031, %159 ], [ %.031, %157 ], [ %.031, %156 ], [ %.031, %143 ], [ %.031, %133 ], [ %.031, %130 ], [ %.031, %124 ], [ %.031, %123 ], [ %.031, %113 ], [ %.031, %103 ], [ %.031, %102 ], [ %92, %91 ], [ %.031, %81 ], [ %.031, %79 ], [ %.031, %74 ], [ %.031, %73 ], [ 1, %63 ], [ %.031, %53 ], [ %.031, %49 ], [ %.031, %48 ], [ %.031, %46 ], [ %.031, %43 ], [ %.031, %41 ], [ %.031, %29 ], [ %.031, %19 ], [ %.031, %15 ], [ %.031, %12 ]
  %.029.be = phi i32 [ %.029, %11 ], [ %.029, %402 ], [ %.029, %401 ], [ %.029, %400 ], [ %.029, %399 ], [ %.029, %398 ], [ %.029, %397 ], [ %.029, %396 ], [ %.029, %392 ], [ %.029, %391 ], [ %.029, %389 ], [ %.029, %388 ], [ %.029, %387 ], [ %.029, %385 ], [ %.029, %383 ], [ %.029, %382 ], [ %.029, %372 ], [ %.029, %362 ], [ %.029, %357 ], [ %.029, %356 ], [ %.029, %350 ], [ %.029, %347 ], [ %.029, %346 ], [ %.029, %336 ], [ %.029, %326 ], [ %.029, %325 ], [ %.029, %316 ], [ %.029, %314 ], [ %.029, %304 ], [ %.029, %294 ], [ %.029, %293 ], [ %.029, %283 ], [ %.029, %273 ], [ %.029, %266 ], [ %.029, %264 ], [ %.029, %249 ], [ %.029, %239 ], [ %.029, %232 ], [ %.029, %226 ], [ %.029, %222 ], [ %.029, %215 ], [ %.029, %213 ], [ %.029, %211 ], [ %.029, %196 ], [ %.029, %186 ], [ %.029, %184 ], [ %.029, %180 ], [ %.029, %179 ], [ %.029, %169 ], [ %.029, %159 ], [ %158, %157 ], [ %.029, %156 ], [ %.029, %143 ], [ %.029, %133 ], [ %.029, %130 ], [ 1, %124 ], [ %.029, %123 ], [ %.029, %113 ], [ %.029, %103 ], [ %.029, %102 ], [ %.029, %91 ], [ %.029, %81 ], [ %.029, %79 ], [ %.029, %74 ], [ %.029, %73 ], [ %.029, %63 ], [ %.029, %53 ], [ %.029, %49 ], [ %.029, %48 ], [ %.029, %46 ], [ %.029, %43 ], [ %.029, %41 ], [ %.029, %29 ], [ %.029, %19 ], [ %.029, %15 ], [ %.029, %12 ]
  %.027.be = phi i32 [ %.027, %11 ], [ %.027, %402 ], [ 1, %401 ], [ %.027, %400 ], [ %.027, %399 ], [ %.027, %398 ], [ %.027, %397 ], [ %.027, %396 ], [ %.027, %392 ], [ %.027, %391 ], [ %.027, %389 ], [ %.027, %388 ], [ %.027, %387 ], [ %.027, %385 ], [ %384, %383 ], [ %.027, %382 ], [ %.027, %372 ], [ %.027, %362 ], [ %.027, %357 ], [ %.027, %356 ], [ %.027, %350 ], [ %.027, %347 ], [ %.027, %346 ], [ 1, %336 ], [ %.027, %326 ], [ %.027, %325 ], [ %.027, %316 ], [ %.027, %314 ], [ %.027, %304 ], [ %.027, %294 ], [ %.027, %293 ], [ %.027, %283 ], [ %.027, %273 ], [ %.027, %266 ], [ %.027, %264 ], [ %.027, %249 ], [ %.027, %239 ], [ %.027, %232 ], [ %.027, %226 ], [ %.027, %222 ], [ %.027, %215 ], [ %.027, %213 ], [ %.027, %211 ], [ %.027, %196 ], [ %.027, %186 ], [ %.027, %184 ], [ %.027, %180 ], [ %.027, %179 ], [ %.027, %169 ], [ %.027, %159 ], [ %.027, %157 ], [ %.027, %156 ], [ %.027, %143 ], [ %.027, %133 ], [ %.027, %130 ], [ %.027, %124 ], [ %.027, %123 ], [ %.027, %113 ], [ %.027, %103 ], [ %.027, %102 ], [ %.027, %91 ], [ %.027, %81 ], [ %.027, %79 ], [ %.027, %74 ], [ %.027, %73 ], [ %.027, %63 ], [ %.027, %53 ], [ %.027, %49 ], [ %.027, %48 ], [ %.027, %46 ], [ %.027, %43 ], [ %.027, %41 ], [ %.027, %29 ], [ %.027, %19 ], [ %.027, %15 ], [ %.027, %12 ]
  %.025.be = phi i32 [ %.025, %11 ], [ -1032149040, %402 ], [ 1473294053, %401 ], [ 248753744, %400 ], [ -1353603206, %399 ], [ -1579751578, %398 ], [ 1836180825, %397 ], [ -219411538, %396 ], [ 107684008, %392 ], [ 1880053905, %391 ], [ 971434868, %389 ], [ 670189228, %388 ], [ -366690831, %387 ], [ -626827339, %385 ], [ 1713950752, %383 ], [ 1691698136, %382 ], [ %381, %372 ], [ %371, %362 ], [ 1315211826, %357 ], [ -384644884, %356 ], [ %355, %350 ], [ %349, %347 ], [ 1713950752, %346 ], [ %345, %336 ], [ %335, %326 ], [ 224886401, %325 ], [ -360920743, %316 ], [ %315, %314 ], [ %313, %304 ], [ %303, %294 ], [ -1250232132, %293 ], [ %292, %283 ], [ %282, %273 ], [ -410534428, %266 ], [ %265, %264 ], [ %263, %249 ], [ %248, %239 ], [ %238, %232 ], [ -360920743, %226 ], [ 224886401, %222 ], [ %221, %215 ], [ -1994264805, %213 ], [ %212, %211 ], [ %210, %196 ], [ %195, %186 ], [ -1994264805, %184 ], [ %183, %180 ], [ 224886401, %179 ], [ %178, %169 ], [ %168, %159 ], [ -1143618548, %157 ], [ 1193055662, %156 ], [ %155, %143 ], [ %142, %133 ], [ %132, %130 ], [ -1143618548, %124 ], [ -626827339, %123 ], [ %122, %113 ], [ %112, %103 ], [ -1919531003, %102 ], [ %101, %91 ], [ %90, %81 ], [ 489290506, %79 ], [ %78, %74 ], [ -1919531003, %73 ], [ %72, %63 ], [ %62, %53 ], [ %52, %49 ], [ -626827339, %48 ], [ 729464386, %46 ], [ -863726464, %43 ], [ %42, %41 ], [ %40, %29 ], [ %28, %19 ], [ 729464386, %15 ], [ %14, %12 ]
  %.023.be = phi i1 [ %.023, %11 ], [ %.023, %402 ], [ %.023, %401 ], [ %.023, %400 ], [ %.023, %399 ], [ %.023, %398 ], [ %.023, %397 ], [ %.023, %396 ], [ %.023, %392 ], [ %.023, %391 ], [ %.023, %389 ], [ %.023, %388 ], [ %.023, %387 ], [ %.023, %385 ], [ %.023, %383 ], [ %.023, %382 ], [ %.023, %372 ], [ %.023, %362 ], [ %.023, %357 ], [ %.023, %356 ], [ %.023, %350 ], [ %.023, %347 ], [ %.023, %346 ], [ %.023, %336 ], [ %.023, %326 ], [ %.023, %325 ], [ %.023, %316 ], [ %.023, %314 ], [ %.023, %304 ], [ %.023, %294 ], [ %.023, %293 ], [ %.023, %283 ], [ %.023, %273 ], [ %272, %266 ], [ false, %264 ], [ %.023, %249 ], [ %.023, %239 ], [ %.023, %232 ], [ %.023, %226 ], [ %.023, %222 ], [ %.023, %215 ], [ %.023, %213 ], [ %.023, %211 ], [ %.023, %196 ], [ %.023, %186 ], [ %.023, %184 ], [ %.023, %180 ], [ %.023, %179 ], [ %.023, %169 ], [ %.023, %159 ], [ %.023, %157 ], [ %.023, %156 ], [ %.023, %143 ], [ %.023, %133 ], [ %.023, %130 ], [ %.023, %124 ], [ %.023, %123 ], [ %.023, %113 ], [ %.023, %103 ], [ %.023, %102 ], [ %.023, %91 ], [ %.023, %81 ], [ %.023, %79 ], [ %.023, %74 ], [ %.023, %73 ], [ %.023, %63 ], [ %.023, %53 ], [ %.023, %49 ], [ %.023, %48 ], [ %.023, %46 ], [ %.023, %43 ], [ %.023, %41 ], [ %.023, %29 ], [ %.023, %19 ], [ %.023, %15 ], [ %.023, %12 ]
  %.0.be = phi i1 [ %.0, %11 ], [ %.0, %402 ], [ %.0, %401 ], [ %.0, %400 ], [ %.0, %399 ], [ %.0, %398 ], [ %.0, %397 ], [ %.0, %396 ], [ %.0, %392 ], [ %.0, %391 ], [ %.0, %389 ], [ %.0, %388 ], [ %.0, %387 ], [ %.0, %385 ], [ %.0, %383 ], [ %.0, %382 ], [ %.0, %372 ], [ %.0, %362 ], [ %.0, %357 ], [ %.0, %356 ], [ %.0, %350 ], [ %.0, %347 ], [ %.0, %346 ], [ %.0, %336 ], [ %.0, %326 ], [ %.0, %325 ], [ %.0, %316 ], [ %.0, %314 ], [ %.0, %304 ], [ %.0, %294 ], [ %.0..0..0.21, %293 ], [ %.0, %283 ], [ %.0, %273 ], [ %.0, %266 ], [ %.0, %264 ], [ %.0, %249 ], [ %.0, %239 ], [ true, %232 ], [ %.0, %226 ], [ %.0, %222 ], [ %.0, %215 ], [ %.0, %213 ], [ %.0, %211 ], [ %.0, %196 ], [ %.0, %186 ], [ %.0, %184 ], [ %.0, %180 ], [ %.0, %179 ], [ %.0, %169 ], [ %.0, %159 ], [ %.0, %157 ], [ %.0, %156 ], [ %.0, %143 ], [ %.0, %133 ], [ %.0, %130 ], [ %.0, %124 ], [ %.0, %123 ], [ %.0, %113 ], [ %.0, %103 ], [ %.0, %102 ], [ %.0, %91 ], [ %.0, %81 ], [ %.0, %79 ], [ %.0, %74 ], [ %.0, %73 ], [ %.0, %63 ], [ %.0, %53 ], [ %.0, %49 ], [ %.0, %48 ], [ %.0, %46 ], [ %.0, %43 ], [ %.0, %41 ], [ %.0, %29 ], [ %.0, %19 ], [ %.0, %15 ], [ %.0, %12 ]
  br label %11

12:                                               ; preds = %11
  %.0..0..0.17 = load volatile i32, i32* %6, align 4
  %13 = icmp eq i32 %.0..0..0.17, 0
  %14 = select i1 %13, i32 -670226336, i32 1874464373
  br label %.backedge

15:                                               ; preds = %11
  %16 = load i32, i32* @k, align 4
  %17 = sdiv i32 %16, 2
  %18 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %17)
  br label %.backedge

19:                                               ; preds = %11
  %20 = load i32, i32* @x.8, align 4
  %21 = load i32, i32* @y.9, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -366690831, i32 52748376
  br label %.backedge

29:                                               ; preds = %11
  %30 = load i32, i32* @n, align 4
  %31 = icmp sle i32 %.033, %30
  store i1 %31, i1* %5, align 1
  %32 = load i32, i32* @x.8, align 4
  %33 = load i32, i32* @y.9, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 1077845619, i32 52748376
  br label %.backedge

41:                                               ; preds = %11
  %.0..0..0.18 = load volatile i1, i1* %5, align 1
  %42 = select i1 %.0..0..0.18, i32 849183210, i32 420819439
  br label %.backedge

43:                                               ; preds = %11
  %44 = load i32, i32* @k, align 4
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %44)
  br label %.backedge

46:                                               ; preds = %11
  %47 = add i32 %.033, 1
  br label %.backedge

48:                                               ; preds = %11
  br label %.backedge

49:                                               ; preds = %11
  %50 = load i32, i32* @k, align 4
  %51 = icmp eq i32 %50, 1
  %52 = select i1 %51, i32 370361356, i32 -128814090
  br label %.backedge

53:                                               ; preds = %11
  %54 = load i32, i32* @x.8, align 4
  %55 = load i32, i32* @y.9, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 670189228, i32 -581410754
  br label %.backedge

63:                                               ; preds = %11
  %64 = load i32, i32* @x.8, align 4
  %65 = load i32, i32* @y.9, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 895066469, i32 -581410754
  br label %.backedge

73:                                               ; preds = %11
  br label %.backedge

74:                                               ; preds = %11
  %75 = load i32, i32* @n, align 4
  %76 = add i32 %75, 1
  %77 = sdiv i32 %76, 2
  %.not40 = icmp sgt i32 %.031, %77
  %78 = select i1 %.not40, i32 -180004876, i32 -1713392241
  br label %.backedge

79:                                               ; preds = %11
  %80 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

81:                                               ; preds = %11
  %82 = load i32, i32* @x.8, align 4
  %83 = load i32, i32* @y.9, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 971434868, i32 -1422111174
  br label %.backedge

91:                                               ; preds = %11
  %92 = add i32 %.031, 1
  %93 = load i32, i32* @x.8, align 4
  %94 = load i32, i32* @y.9, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 1041876729, i32 -1422111174
  br label %.backedge

102:                                              ; preds = %11
  br label %.backedge

103:                                              ; preds = %11
  %104 = load i32, i32* @x.8, align 4
  %105 = load i32, i32* @y.9, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 1880053905, i32 671415779
  br label %.backedge

113:                                              ; preds = %11
  %114 = load i32, i32* @x.8, align 4
  %115 = load i32, i32* @y.9, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 1386097770, i32 671415779
  br label %.backedge

123:                                              ; preds = %11
  br label %.backedge

124:                                              ; preds = %11
  %125 = load i32, i32* @n, align 4
  %126 = sdiv i32 %125, 2
  store i32 %126, i32* @x, align 4
  %127 = load i32, i32* @k, align 4
  %128 = add i32 %127, 1
  %129 = sdiv i32 %128, 2
  store i32 %129, i32* @y, align 4
  br label %.backedge

130:                                              ; preds = %11
  %131 = load i32, i32* @n, align 4
  %.not39 = icmp sgt i32 %.029, %131
  %132 = select i1 %.not39, i32 1681240893, i32 384926132
  br label %.backedge

133:                                              ; preds = %11
  %134 = load i32, i32* @x.8, align 4
  %135 = load i32, i32* @y.9, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 107684008, i32 984406099
  br label %.backedge

143:                                              ; preds = %11
  %144 = load i32, i32* @y, align 4
  %145 = sext i32 %.029 to i64
  %146 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %145
  store i32 %144, i32* %146, align 4
  %147 = load i32, i32* @x.8, align 4
  %148 = load i32, i32* @y.9, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 -1589034628, i32 984406099
  br label %.backedge

156:                                              ; preds = %11
  br label %.backedge

157:                                              ; preds = %11
  %158 = add i32 %.029, 1
  br label %.backedge

159:                                              ; preds = %11
  %160 = load i32, i32* @x.8, align 4
  %161 = load i32, i32* @y.9, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -219411538, i32 -1121947509
  br label %.backedge

169:                                              ; preds = %11
  %170 = load i32, i32* @x.8, align 4
  %171 = load i32, i32* @y.9, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 -1107565765, i32 -1121947509
  br label %.backedge

179:                                              ; preds = %11
  br label %.backedge

180:                                              ; preds = %11
  %181 = load i32, i32* @x, align 4
  %182 = add i32 %181, -1
  store i32 %182, i32* @x, align 4
  %.not38 = icmp eq i32 %181, 0
  %183 = select i1 %.not38, i32 388933725, i32 1335700964
  br label %.backedge

184:                                              ; preds = %11
  %185 = load i32, i32* @n, align 4
  store i32 %185, i32* @a, align 4
  br label %.backedge

186:                                              ; preds = %11
  %187 = load i32, i32* @x.8, align 4
  %188 = load i32, i32* @y.9, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1836180825, i32 -185201113
  br label %.backedge

196:                                              ; preds = %11
  %197 = load i32, i32* @a, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  store i1 %201, i1* %4, align 1
  %202 = load i32, i32* @x.8, align 4
  %203 = load i32, i32* @y.9, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 -1670401640, i32 -185201113
  br label %.backedge

211:                                              ; preds = %11
  %.0..0..0.19 = load volatile i1, i1* %4, align 1
  %212 = select i1 %.0..0..0.19, i32 -1032383459, i32 -279896417
  br label %.backedge

213:                                              ; preds = %11
  %214 = load i32, i32* @a, align 4
  %.neg37 = add i32 %214, -1
  store i32 %.neg37, i32* @a, align 4
  br label %.backedge

215:                                              ; preds = %11
  %216 = load i32, i32* @a, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %219, 1
  %221 = select i1 %220, i32 -1015023862, i32 853601473
  br label %.backedge

222:                                              ; preds = %11
  %223 = load i32, i32* @a, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %224
  store i32 0, i32* %225, align 4
  br label %.backedge

226:                                              ; preds = %11
  %227 = load i32, i32* @n, align 4
  store i32 %227, i32* @a, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = add i32 %230, -1
  store i32 %231, i32* %229, align 4
  br label %.backedge

232:                                              ; preds = %11
  %233 = load i32, i32* @a, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %236, -1
  %238 = select i1 %237, i32 -1250232132, i32 1354133320
  br label %.backedge

239:                                              ; preds = %11
  %240 = load i32, i32* @x.8, align 4
  %241 = load i32, i32* @y.9, align 4
  %242 = add i32 %240, -1
  %243 = mul i32 %242, %240
  %244 = and i32 %243, 1
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %246, %245
  %248 = select i1 %247, i32 -1579751578, i32 -1767304353
  br label %.backedge

249:                                              ; preds = %11
  %250 = load i32, i32* @a, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 0
  store i1 %254, i1* %3, align 1
  %255 = load i32, i32* @x.8, align 4
  %256 = load i32, i32* @y.9, align 4
  %257 = add i32 %255, -1
  %258 = mul i32 %257, %255
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %261, %260
  %263 = select i1 %262, i32 1836658322, i32 -1767304353
  br label %.backedge

264:                                              ; preds = %11
  %.0..0..0.20 = load volatile i1, i1* %3, align 1
  %265 = select i1 %.0..0..0.20, i32 895879151, i32 -410534428
  br label %.backedge

266:                                              ; preds = %11
  %267 = load i32, i32* @a, align 4
  %268 = add i32 %267, 1
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %269
  %271 = load i32, i32* %270, align 4
  %272 = icmp ne i32 %271, 0
  br label %.backedge

273:                                              ; preds = %11
  store i1 %.023, i1* %2, align 1
  %274 = load i32, i32* @x.8, align 4
  %275 = load i32, i32* @y.9, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 -1353603206, i32 695015968
  br label %.backedge

283:                                              ; preds = %11
  %284 = load i32, i32* @x.8, align 4
  %285 = load i32, i32* @y.9, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 -1180599469, i32 695015968
  br label %.backedge

293:                                              ; preds = %11
  %.0..0..0.21 = load volatile i1, i1* %2, align 1
  br label %.backedge

294:                                              ; preds = %11
  store i1 %.0, i1* %1, align 1
  %295 = load i32, i32* @x.8, align 4
  %296 = load i32, i32* @y.9, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 248753744, i32 1302994522
  br label %.backedge

304:                                              ; preds = %11
  %305 = load i32, i32* @x.8, align 4
  %306 = load i32, i32* @y.9, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 1607602353, i32 1302994522
  br label %.backedge

314:                                              ; preds = %11
  %.0..0..0.22 = load volatile i1, i1* %1, align 1
  %315 = select i1 %.0..0..0.22, i32 128345158, i32 1370205785
  br label %.backedge

316:                                              ; preds = %11
  %317 = load i32, i32* @k, align 4
  %318 = load i32, i32* @a, align 4
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %319
  store i32 %317, i32* %320, align 4
  %.neg = add i32 %318, -1
  store i32 %.neg, i32* @a, align 4
  %321 = sext i32 %.neg to i64
  %322 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %321
  %323 = load i32, i32* %322, align 4
  %324 = add i32 %323, -1
  store i32 %324, i32* %322, align 4
  br label %.backedge

325:                                              ; preds = %11
  br label %.backedge

326:                                              ; preds = %11
  %327 = load i32, i32* @x.8, align 4
  %328 = load i32, i32* @y.9, align 4
  %329 = add i32 %327, -1
  %330 = mul i32 %329, %327
  %331 = and i32 %330, 1
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %333, %332
  %335 = select i1 %334, i32 1473294053, i32 -579298659
  br label %.backedge

336:                                              ; preds = %11
  %337 = load i32, i32* @x.8, align 4
  %338 = load i32, i32* @y.9, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 -1036779632, i32 -579298659
  br label %.backedge

346:                                              ; preds = %11
  br label %.backedge

347:                                              ; preds = %11
  %348 = load i32, i32* @n, align 4
  %.not = icmp sgt i32 %.027, %348
  %349 = select i1 %.not, i32 -384644884, i32 811713906
  br label %.backedge

350:                                              ; preds = %11
  %351 = sext i32 %.027 to i64
  %352 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %351
  %353 = load i32, i32* %352, align 4
  %354 = icmp eq i32 %353, 0
  %355 = select i1 %354, i32 1076237158, i32 1015568532
  br label %.backedge

356:                                              ; preds = %11
  br label %.backedge

357:                                              ; preds = %11
  %358 = sext i32 %.027 to i64
  %359 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %360)
  br label %.backedge

362:                                              ; preds = %11
  %363 = load i32, i32* @x.8, align 4
  %364 = load i32, i32* @y.9, align 4
  %365 = add i32 %363, -1
  %366 = mul i32 %365, %363
  %367 = and i32 %366, 1
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %369, %368
  %371 = select i1 %370, i32 -1032149040, i32 -1007048890
  br label %.backedge

372:                                              ; preds = %11
  %373 = load i32, i32* @x.8, align 4
  %374 = load i32, i32* @y.9, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 -999290588, i32 -1007048890
  br label %.backedge

382:                                              ; preds = %11
  br label %.backedge

383:                                              ; preds = %11
  %384 = add i32 %.027, 1
  br label %.backedge

385:                                              ; preds = %11
  br label %.backedge

386:                                              ; preds = %11
  ret i32 0

387:                                              ; preds = %11
  br label %.backedge

388:                                              ; preds = %11
  br label %.backedge

389:                                              ; preds = %11
  %390 = add i32 %.031, 1
  br label %.backedge

391:                                              ; preds = %11
  br label %.backedge

392:                                              ; preds = %11
  %393 = load i32, i32* @y, align 4
  %394 = sext i32 %.029 to i64
  %395 = getelementptr inbounds [300100 x i32], [300100 x i32]* @p, i64 0, i64 %394
  store i32 %393, i32* %395, align 4
  br label %.backedge

396:                                              ; preds = %11
  br label %.backedge

397:                                              ; preds = %11
  br label %.backedge

398:                                              ; preds = %11
  br label %.backedge

399:                                              ; preds = %11
  br label %.backedge

400:                                              ; preds = %11
  br label %.backedge

401:                                              ; preds = %11
  br label %.backedge

402:                                              ; preds = %11
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s480095282.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.10, align 4
  %4 = load i32, i32* @y.11, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -755860853, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -755860853, label %11
    i32 861250837, label %14
    i32 -349180180, label %24
    i32 860969412, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 861250837, i32 860969412
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.10, align 4
  %16 = load i32, i32* @y.11, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -349180180, i32 860969412
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 861250837, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
