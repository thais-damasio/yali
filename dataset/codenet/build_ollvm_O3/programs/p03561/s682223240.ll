; ModuleID = 'build_ollvm/programs/p03561/s682223240.ll'
source_filename = "Project_CodeNet_C++1400/p03561/s682223240.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@n = global i32 0, align 4
@k = global i32 0, align 4
@f = local_unnamed_addr global [300005 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i32, align 4
  %3 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull @k, i32* nonnull @n)
  %4 = load i32, i32* @n, align 4
  store i32 %4, i32* %2, align 4
  br label %5

5:                                                ; preds = %.backedge, %0
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i32 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.042 = phi i32 [ undef, %0 ], [ %.042.be, %.backedge ]
  %.040 = phi i32 [ undef, %0 ], [ %.040.be, %.backedge ]
  %.038 = phi i32 [ undef, %0 ], [ %.038.be, %.backedge ]
  %.036 = phi i32 [ undef, %0 ], [ %.036.be, %.backedge ]
  %.034 = phi i32 [ undef, %0 ], [ %.034.be, %.backedge ]
  %.0 = phi i32 [ -372245107, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -372245107, label %6
    i32 -2110717347, label %9
    i32 -1627501254, label %14
    i32 26709491, label %18
    i32 500294194, label %23
    i32 2015031854, label %26
    i32 -6624323, label %35
    i32 -1085990377, label %36
    i32 1815361798, label %38
    i32 503737580, label %43
    i32 1593402762, label %53
    i32 1333632089, label %64
    i32 162833520, label %65
    i32 -1958027047, label %71
    i32 -547470986, label %74
    i32 -1830143456, label %77
    i32 -1638715609, label %78
    i32 -1404985381, label %80
    i32 617401370, label %83
    i32 -1870700347, label %93
    i32 1826243950, label %107
    i32 781547530, label %109
    i32 256948644, label %111
    i32 -457619448, label %116
    i32 1358980327, label %126
    i32 56381874, label %136
    i32 307488379, label %137
    i32 -521694790, label %139
    i32 -1569001142, label %140
    i32 -586537213, label %142
    i32 1624084497, label %143
    i32 1180618486, label %144
    i32 827764934, label %146
    i32 1110414409, label %156
    i32 -1888277728, label %166
    i32 -1044790851, label %167
    i32 -679424174, label %177
    i32 1246716506, label %190
    i32 1837822104, label %191
    i32 1397306447, label %195
    i32 1914535711, label %198
    i32 -618746956, label %199
    i32 -376502130, label %200
    i32 1002695381, label %201
    i32 -1979074619, label %202
    i32 -1938729795, label %203
    i32 -590984218, label %204
    i32 -1827921178, label %205
    i32 -725861296, label %206
  ]

.backedge:                                        ; preds = %5, %206, %205, %204, %203, %202, %200, %199, %198, %195, %191, %190, %177, %167, %166, %156, %146, %144, %143, %142, %140, %139, %137, %136, %126, %116, %111, %109, %107, %93, %83, %80, %78, %77, %74, %71, %65, %64, %53, %43, %38, %36, %35, %26, %23, %18, %14, %9, %6
  %.048.be = phi i32 [ %.048, %5 ], [ %.048, %206 ], [ %.048, %205 ], [ %.048, %204 ], [ %.048, %203 ], [ %.048, %202 ], [ %.048, %200 ], [ %.048, %199 ], [ %.048, %198 ], [ %.048, %195 ], [ %.048, %191 ], [ %.048, %190 ], [ %.048, %177 ], [ %.048, %167 ], [ %.048, %166 ], [ %.048, %156 ], [ %.048, %146 ], [ %.048, %144 ], [ %.048, %143 ], [ %.048, %142 ], [ %.048, %140 ], [ %.048, %139 ], [ %.048, %137 ], [ %.048, %136 ], [ %.048, %126 ], [ %.048, %116 ], [ %.048, %111 ], [ %.048, %109 ], [ %.048, %107 ], [ %.048, %93 ], [ %.048, %83 ], [ %.048, %80 ], [ %.048, %78 ], [ %.048, %77 ], [ %.048, %74 ], [ %.048, %71 ], [ %.048, %65 ], [ %.048, %64 ], [ %.048, %53 ], [ %.048, %43 ], [ %.048, %38 ], [ %.048, %36 ], [ %.048, %35 ], [ %27, %26 ], [ %.048, %23 ], [ %20, %18 ], [ %.048, %14 ], [ %.048, %9 ], [ %.048, %6 ]
  %.046.be = phi i32 [ %.046, %5 ], [ %.046, %206 ], [ %.046, %205 ], [ %.046, %204 ], [ %.046, %203 ], [ %.046, %202 ], [ %.046, %200 ], [ %.046, %199 ], [ %.046, %198 ], [ %.046, %195 ], [ %.046, %191 ], [ %.046, %190 ], [ %.046, %177 ], [ %.046, %167 ], [ %.046, %166 ], [ %.046, %156 ], [ %.046, %146 ], [ %.046, %144 ], [ %.046, %143 ], [ %.046, %142 ], [ %.046, %140 ], [ %.046, %139 ], [ %.046, %137 ], [ %.046, %136 ], [ %.046, %126 ], [ %.046, %116 ], [ %.046, %111 ], [ %.046, %109 ], [ %.046, %107 ], [ %.046, %93 ], [ %.046, %83 ], [ %.046, %80 ], [ %.046, %78 ], [ %.046, %77 ], [ %.046, %74 ], [ %.046, %71 ], [ %.046, %65 ], [ %.046, %64 ], [ %.046, %53 ], [ %.046, %43 ], [ %.046, %38 ], [ %.046, %36 ], [ %.046, %35 ], [ %30, %26 ], [ %.046, %23 ], [ 1, %18 ], [ %.046, %14 ], [ %.046, %9 ], [ %.046, %6 ]
  %.044.be = phi i32 [ %.044, %5 ], [ %.044, %206 ], [ %.044, %205 ], [ %.044, %204 ], [ %.044, %203 ], [ %.044, %202 ], [ %.044, %200 ], [ %.044, %199 ], [ %.044, %198 ], [ %.044, %195 ], [ %.044, %191 ], [ %.044, %190 ], [ %.044, %177 ], [ %.044, %167 ], [ %.044, %166 ], [ %.044, %156 ], [ %.044, %146 ], [ %.044, %144 ], [ %.044, %143 ], [ %.044, %142 ], [ %.044, %140 ], [ %.044, %139 ], [ %.044, %137 ], [ %.044, %136 ], [ %.044, %126 ], [ %.044, %116 ], [ %115, %111 ], [ %.044, %109 ], [ %.044, %107 ], [ %.044, %93 ], [ %.044, %83 ], [ %.044, %80 ], [ %79, %78 ], [ %.044, %77 ], [ %.044, %74 ], [ %.044, %71 ], [ %69, %65 ], [ %.044, %64 ], [ %.044, %53 ], [ %.044, %43 ], [ %.044, %38 ], [ %.044, %36 ], [ %.044, %35 ], [ %.044, %26 ], [ %.044, %23 ], [ %.044, %18 ], [ %.044, %14 ], [ %.044, %9 ], [ %.044, %6 ]
  %.042.be = phi i32 [ %.042, %5 ], [ %.042, %206 ], [ %.042, %205 ], [ %.042, %204 ], [ %.042, %203 ], [ %.042, %202 ], [ %.042, %200 ], [ %.042, %199 ], [ %.042, %198 ], [ %.042, %195 ], [ %.042, %191 ], [ %.042, %190 ], [ %.042, %177 ], [ %.042, %167 ], [ %.042, %166 ], [ %.042, %156 ], [ %.042, %146 ], [ %145, %144 ], [ %.042, %143 ], [ %.042, %142 ], [ %.042, %140 ], [ %.042, %139 ], [ %.042, %137 ], [ %.042, %136 ], [ %.042, %126 ], [ %.042, %116 ], [ %.042, %111 ], [ %.042, %109 ], [ %.042, %107 ], [ %.042, %93 ], [ %.042, %83 ], [ %.042, %80 ], [ %.042, %78 ], [ %.042, %77 ], [ %.042, %74 ], [ %.042, %71 ], [ %.042, %65 ], [ %.042, %64 ], [ %.042, %53 ], [ %.042, %43 ], [ %.042, %38 ], [ %.042, %36 ], [ %.042, %35 ], [ %.042, %26 ], [ %.042, %23 ], [ %20, %18 ], [ %.042, %14 ], [ %.042, %9 ], [ %.042, %6 ]
  %.040.be = phi i32 [ %.040, %5 ], [ %.040, %206 ], [ %.040, %205 ], [ %.040, %204 ], [ %.040, %203 ], [ %.neg, %202 ], [ %.040, %200 ], [ %.040, %199 ], [ %.040, %198 ], [ %.040, %195 ], [ %.040, %191 ], [ %.040, %190 ], [ %.040, %177 ], [ %.040, %167 ], [ %.040, %166 ], [ %.040, %156 ], [ %.040, %146 ], [ %.040, %144 ], [ %.040, %143 ], [ %.040, %142 ], [ %.040, %140 ], [ %.040, %139 ], [ %.040, %137 ], [ %.040, %136 ], [ %.040, %126 ], [ %.040, %116 ], [ %.040, %111 ], [ %.040, %109 ], [ %.040, %107 ], [ %.040, %93 ], [ %.040, %83 ], [ %.040, %80 ], [ %.040, %78 ], [ %.040, %77 ], [ %.040, %74 ], [ %.040, %71 ], [ %.040, %65 ], [ %.040, %64 ], [ %54, %53 ], [ %.040, %43 ], [ %.040, %38 ], [ %.040, %36 ], [ 1, %35 ], [ %.040, %26 ], [ %.040, %23 ], [ %.040, %18 ], [ %.040, %14 ], [ %.040, %9 ], [ %.040, %6 ]
  %.038.be = phi i32 [ %.038, %5 ], [ %.038, %206 ], [ %.038, %205 ], [ %.038, %204 ], [ %.038, %203 ], [ %.038, %202 ], [ %.038, %200 ], [ %.038, %199 ], [ %.038, %198 ], [ %.038, %195 ], [ %.038, %191 ], [ %.038, %190 ], [ %.038, %177 ], [ %.038, %167 ], [ %.038, %166 ], [ %.038, %156 ], [ %.038, %146 ], [ %.038, %144 ], [ %.038, %143 ], [ %.038, %142 ], [ %141, %140 ], [ %.038, %139 ], [ %.038, %137 ], [ %.038, %136 ], [ %.038, %126 ], [ %.038, %116 ], [ %.038, %111 ], [ %.038, %109 ], [ %.038, %107 ], [ %.038, %93 ], [ %.038, %83 ], [ %.038, %80 ], [ %.038, %78 ], [ %.038, %77 ], [ %.038, %74 ], [ %.038, %71 ], [ %70, %65 ], [ %.038, %64 ], [ %.038, %53 ], [ %.038, %43 ], [ %.038, %38 ], [ %.038, %36 ], [ %.038, %35 ], [ %.038, %26 ], [ %.038, %23 ], [ %.038, %18 ], [ %.038, %14 ], [ %.038, %9 ], [ %.038, %6 ]
  %.036.be = phi i32 [ %.036, %5 ], [ %.036, %206 ], [ %.036, %205 ], [ %.036, %204 ], [ %.036, %203 ], [ %.036, %202 ], [ %.036, %200 ], [ %.036, %199 ], [ %.036, %198 ], [ %.036, %195 ], [ %.036, %191 ], [ %.036, %190 ], [ %.036, %177 ], [ %.036, %167 ], [ %.036, %166 ], [ %.036, %156 ], [ %.036, %146 ], [ %.036, %144 ], [ %.036, %143 ], [ %.036, %142 ], [ %.036, %140 ], [ %.036, %139 ], [ %138, %137 ], [ %.036, %136 ], [ %.036, %126 ], [ %.036, %116 ], [ %.036, %111 ], [ %.036, %109 ], [ %.036, %107 ], [ %.036, %93 ], [ %.036, %83 ], [ %.036, %80 ], [ 1, %78 ], [ %.036, %77 ], [ %.036, %74 ], [ %.036, %71 ], [ %.036, %65 ], [ %.036, %64 ], [ %.036, %53 ], [ %.036, %43 ], [ %.036, %38 ], [ %.036, %36 ], [ %.036, %35 ], [ %.036, %26 ], [ %.036, %23 ], [ %.036, %18 ], [ %.036, %14 ], [ %.036, %9 ], [ %.036, %6 ]
  %.034.be = phi i32 [ %.034, %5 ], [ 1, %206 ], [ %.034, %205 ], [ %.034, %204 ], [ %.034, %203 ], [ %.034, %202 ], [ %.034, %200 ], [ %.034, %199 ], [ %.neg52, %198 ], [ %.034, %195 ], [ %.034, %191 ], [ %.034, %190 ], [ 1, %177 ], [ %.034, %167 ], [ %.034, %166 ], [ %.034, %156 ], [ %.034, %146 ], [ %.034, %144 ], [ %.034, %143 ], [ %.034, %142 ], [ %.034, %140 ], [ %.034, %139 ], [ %.034, %137 ], [ %.034, %136 ], [ %.034, %126 ], [ %.034, %116 ], [ %.034, %111 ], [ %.034, %109 ], [ %.034, %107 ], [ %.034, %93 ], [ %.034, %83 ], [ %.034, %80 ], [ %.034, %78 ], [ %.034, %77 ], [ %.034, %74 ], [ %.034, %71 ], [ %.034, %65 ], [ %.034, %64 ], [ %.034, %53 ], [ %.034, %43 ], [ %.034, %38 ], [ %.034, %36 ], [ %.034, %35 ], [ %.034, %26 ], [ %.034, %23 ], [ %.034, %18 ], [ %.034, %14 ], [ %.034, %9 ], [ %.034, %6 ]
  %.0.be = phi i32 [ %.0, %5 ], [ -679424174, %206 ], [ 1110414409, %205 ], [ 1358980327, %204 ], [ -1870700347, %203 ], [ 1593402762, %202 ], [ 1002695381, %200 ], [ -376502130, %199 ], [ 1837822104, %198 ], [ 1914535711, %195 ], [ %194, %191 ], [ 1837822104, %190 ], [ %189, %177 ], [ %176, %167 ], [ -376502130, %166 ], [ %165, %156 ], [ %155, %146 ], [ 500294194, %144 ], [ 1180618486, %143 ], [ 827764934, %142 ], [ -1958027047, %140 ], [ -1569001142, %139 ], [ -1404985381, %137 ], [ 307488379, %136 ], [ %135, %126 ], [ %125, %116 ], [ -457619448, %111 ], [ -521694790, %109 ], [ %108, %107 ], [ %106, %93 ], [ %92, %83 ], [ %82, %80 ], [ -1404985381, %78 ], [ -586537213, %77 ], [ %76, %74 ], [ %73, %71 ], [ -1958027047, %65 ], [ -1085990377, %64 ], [ %63, %53 ], [ %52, %43 ], [ 503737580, %38 ], [ %37, %36 ], [ -1085990377, %35 ], [ %34, %26 ], [ %25, %23 ], [ 500294194, %18 ], [ %17, %14 ], [ 1002695381, %9 ], [ %8, %6 ]
  br label %5

6:                                                ; preds = %5
  %.0..0..0. = load volatile i32, i32* %2, align 4
  %7 = icmp eq i32 %.0..0..0., 1
  %8 = select i1 %7, i32 -2110717347, i32 -1627501254
  br label %.backedge

9:                                                ; preds = %5
  %10 = load i32, i32* @k, align 4
  %11 = add i32 %10, 1
  %12 = ashr i32 %11, 1
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %12)
  br label %.backedge

14:                                               ; preds = %5
  %15 = load i32, i32* @k, align 4
  %16 = and i32 %15, 1
  %.not57 = icmp eq i32 %16, 0
  %17 = select i1 %.not57, i32 -1044790851, i32 26709491
  br label %.backedge

18:                                               ; preds = %5
  %19 = load i32, i32* @n, align 4
  %20 = add i32 %19, -1
  %21 = sext i32 %19 to i64
  %22 = getelementptr inbounds [300005 x i32], [300005 x i32]* @f, i64 0, i64 %21
  store i32 1, i32* %22, align 4
  br label %.backedge

23:                                               ; preds = %5
  %24 = icmp sgt i32 %.042, 0
  %25 = select i1 %24, i32 2015031854, i32 827764934
  br label %.backedge

26:                                               ; preds = %5
  %27 = add i32 %.048, -1
  %28 = load i32, i32* @k, align 4
  %29 = mul nsw i32 %28, %.046
  %30 = add i32 %29, 1
  %31 = sext i32 %.042 to i64
  %32 = getelementptr inbounds [300005 x i32], [300005 x i32]* @f, i64 0, i64 %31
  store i32 %30, i32* %32, align 4
  %33 = icmp sgt i32 %30, %27
  %34 = select i1 %33, i32 -6624323, i32 1624084497
  br label %.backedge

35:                                               ; preds = %5
  br label %.backedge

36:                                               ; preds = %5
  %.not55 = icmp sgt i32 %.040, %.042
  %37 = select i1 %.not55, i32 162833520, i32 1815361798
  br label %.backedge

38:                                               ; preds = %5
  %39 = load i32, i32* @k, align 4
  %40 = sdiv i32 %39, 2
  %41 = add nsw i32 %40, 1
  %42 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %41)
  br label %.backedge

43:                                               ; preds = %5
  %44 = load i32, i32* @x, align 4
  %45 = load i32, i32* @y, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 1593402762, i32 -1979074619
  br label %.backedge

53:                                               ; preds = %5
  %54 = add i32 %.040, 1
  %55 = load i32, i32* @x, align 4
  %56 = load i32, i32* @y, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 1333632089, i32 -1979074619
  br label %.backedge

64:                                               ; preds = %5
  br label %.backedge

65:                                               ; preds = %5
  %66 = add i32 %.048, 1
  %67 = add i32 %66, %.046
  %68 = sdiv i32 %67, 2
  %69 = sub i32 %68, %.048
  %70 = add i32 %.042, 1
  br label %.backedge

71:                                               ; preds = %5
  %72 = load i32, i32* @n, align 4
  %.not54 = icmp sgt i32 %.038, %72
  %73 = select i1 %.not54, i32 -586537213, i32 -547470986
  br label %.backedge

74:                                               ; preds = %5
  %75 = icmp eq i32 %.044, 1
  %76 = select i1 %75, i32 -1830143456, i32 -1638715609
  br label %.backedge

77:                                               ; preds = %5
  br label %.backedge

78:                                               ; preds = %5
  %79 = add i32 %.044, -1
  br label %.backedge

80:                                               ; preds = %5
  %81 = load i32, i32* @k, align 4
  %.not53 = icmp sgt i32 %.036, %81
  %82 = select i1 %.not53, i32 -521694790, i32 617401370
  br label %.backedge

83:                                               ; preds = %5
  %84 = load i32, i32* @x, align 4
  %85 = load i32, i32* @y, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 -1870700347, i32 -1938729795
  br label %.backedge

93:                                               ; preds = %5
  %94 = sext i32 %.038 to i64
  %95 = getelementptr inbounds [300005 x i32], [300005 x i32]* @f, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = icmp sle i32 %.044, %96
  store i1 %97, i1* %1, align 1
  %98 = load i32, i32* @x, align 4
  %99 = load i32, i32* @y, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 1826243950, i32 -1938729795
  br label %.backedge

107:                                              ; preds = %5
  %.0..0..0.33 = load volatile i1, i1* %1, align 1
  %108 = select i1 %.0..0..0.33, i32 781547530, i32 256948644
  br label %.backedge

109:                                              ; preds = %5
  %110 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %.036)
  br label %.backedge

111:                                              ; preds = %5
  %112 = sext i32 %.038 to i64
  %113 = getelementptr inbounds [300005 x i32], [300005 x i32]* @f, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 %.044, %114
  br label %.backedge

116:                                              ; preds = %5
  %117 = load i32, i32* @x, align 4
  %118 = load i32, i32* @y, align 4
  %119 = add i32 %117, -1
  %120 = mul i32 %119, %117
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %123, %122
  %125 = select i1 %124, i32 1358980327, i32 -590984218
  br label %.backedge

126:                                              ; preds = %5
  %127 = load i32, i32* @x, align 4
  %128 = load i32, i32* @y, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 56381874, i32 -590984218
  br label %.backedge

136:                                              ; preds = %5
  br label %.backedge

137:                                              ; preds = %5
  %138 = add i32 %.036, 1
  br label %.backedge

139:                                              ; preds = %5
  br label %.backedge

140:                                              ; preds = %5
  %141 = add i32 %.038, 1
  br label %.backedge

142:                                              ; preds = %5
  br label %.backedge

143:                                              ; preds = %5
  br label %.backedge

144:                                              ; preds = %5
  %145 = add i32 %.042, -1
  br label %.backedge

146:                                              ; preds = %5
  %147 = load i32, i32* @x, align 4
  %148 = load i32, i32* @y, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 1110414409, i32 -1827921178
  br label %.backedge

156:                                              ; preds = %5
  %157 = load i32, i32* @x, align 4
  %158 = load i32, i32* @y, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 -1888277728, i32 -1827921178
  br label %.backedge

166:                                              ; preds = %5
  br label %.backedge

167:                                              ; preds = %5
  %168 = load i32, i32* @x, align 4
  %169 = load i32, i32* @y, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -679424174, i32 -725861296
  br label %.backedge

177:                                              ; preds = %5
  %178 = load i32, i32* @k, align 4
  %179 = sdiv i32 %178, 2
  %180 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %179)
  %181 = load i32, i32* @x, align 4
  %182 = load i32, i32* @y, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 1246716506, i32 -725861296
  br label %.backedge

190:                                              ; preds = %5
  br label %.backedge

191:                                              ; preds = %5
  %192 = load i32, i32* @n, align 4
  %193 = add i32 %192, -1
  %.not = icmp sgt i32 %.034, %193
  %194 = select i1 %.not, i32 -618746956, i32 1397306447
  br label %.backedge

195:                                              ; preds = %5
  %196 = load i32, i32* @k, align 4
  %197 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %196)
  br label %.backedge

198:                                              ; preds = %5
  %.neg52 = add i32 %.034, 1
  br label %.backedge

199:                                              ; preds = %5
  br label %.backedge

200:                                              ; preds = %5
  br label %.backedge

201:                                              ; preds = %5
  ret i32 0

202:                                              ; preds = %5
  %.neg = add i32 %.040, 1
  br label %.backedge

203:                                              ; preds = %5
  br label %.backedge

204:                                              ; preds = %5
  br label %.backedge

205:                                              ; preds = %5
  br label %.backedge

206:                                              ; preds = %5
  %207 = load i32, i32* @k, align 4
  %208 = sdiv i32 %207, 2
  %209 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %208)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
