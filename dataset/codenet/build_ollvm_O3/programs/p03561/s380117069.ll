; ModuleID = 'build_ollvm/programs/p03561/s380117069.ll'
source_filename = "Project_CodeNet_C++1400/p03561/s380117069.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt3maxIiERKT_S2_S2_ = comdat any

$_ZSt3maxIxERKT_S2_S2_ = comdat any

@ret = local_unnamed_addr global [310000 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s380117069.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@x.12 = common local_unnamed_addr global i32 0
@y.13 = common local_unnamed_addr global i32 0
@x.14 = common local_unnamed_addr global i32 0
@y.15 = common local_unnamed_addr global i32 0
@x.16 = common local_unnamed_addr global i32 0
@y.17 = common local_unnamed_addr global i32 0
@x.18 = common local_unnamed_addr global i32 0
@y.19 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  %10 = or i1 %9, %8
  %11 = select i1 %10, i32 -1658826533, i32 2003213594
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -578886497, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %12

12:                                               ; preds = %.outer, %12
  switch i32 %.0.ph, label %12 [
    i32 -578886497, label %13
    i32 903794513, label %.outer.backedge
    i32 -1658826533, label %16
    i32 2003213594, label %17
  ]

13:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %14 = or i1 %.0..0..0., %.0..0..0.1
  %15 = select i1 %14, i32 903794513, i32 2003213594
  br label %.outer.backedge

16:                                               ; preds = %12
  ret void

17:                                               ; preds = %12
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %12, %17, %13
  %.0.ph.be = phi i32 [ %15, %13 ], [ 903794513, %17 ], [ %11, %12 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define i32 @_Z3ABSi(i32 %0) local_unnamed_addr #1 {
  %2 = alloca i32, align 4
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.6, align 4
  %6 = load i32, i32* @y.7, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = sub i32 0, %0
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %1
  %.0.ph = phi i32 [ 833091088, %1 ], [ %.0.ph.be, %.outer.backedge ]
  br label %13

13:                                               ; preds = %.outer, %13
  switch i32 %.0.ph, label %13 [
    i32 833091088, label %14
    i32 1848606453, label %17
    i32 1543733259, label %31
    i32 867779892, label %32
  ]

14:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %15 = or i1 %.0..0..0., %.0..0..0.1
  %16 = select i1 %15, i32 1848606453, i32 867779892
  br label %.outer.backedge

17:                                               ; preds = %13
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store i32 %0, i32* %18, align 4
  store i32 %12, i32* %19, align 4
  %20 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %18, i32* nonnull dereferenceable(4) %19)
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %2, align 4
  %22 = load i32, i32* @x.6, align 4
  %23 = load i32, i32* @y.7, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 1543733259, i32 867779892
  br label %.outer.backedge

31:                                               ; preds = %13
  %.0..0..0.2 = load volatile i32, i32* %2, align 4
  ret i32 %.0..0..0.2

32:                                               ; preds = %13
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  store i32 %0, i32* %33, align 4
  store i32 %12, i32* %34, align 4
  %35 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %33, i32* nonnull dereferenceable(4) %34)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %32, %17, %14
  %.0.ph.be = phi i32 [ %16, %14 ], [ %30, %17 ], [ 1848606453, %32 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #1 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %0, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.8, align 4
  %8 = load i32, i32* @y.9, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -593459069, i32 232362821
  %16 = select i1 %14, i32 -2139062050, i32 232362821
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 245153499, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 245153499, label %18
    i32 980092828, label %.outer10.backedge
    i32 -2139062050, label %.outer.backedge
    i32 -593459069, label %21
    i32 -1265079700, label %22
    i32 -1801059799, label %23
    i32 232362821, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 980092828, i32 -1265079700
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -1801059799, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ -1801059799, %22 ], [ -2139062050, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z3ABSx(i64 %0) local_unnamed_addr #1 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %4 = sub i64 0, %0
  store i64 %4, i64* %3, align 8
  %5 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %2, i64* nonnull dereferenceable(8) %3)
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #1 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.12, align 4
  %8 = load i32, i32* @y.13, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1421928602, i32 1902897593
  %16 = select i1 %14, i32 379263861, i32 1902897593
  %17 = select i1 %14, i32 2103911375, i32 2042628104
  %18 = select i1 %14, i32 1738537538, i32 2042628104
  br label %19

19:                                               ; preds = %.backedge, %2
  %.09 = phi i64* [ undef, %2 ], [ %.09.be, %.backedge ]
  %.0 = phi i32 [ -19871897, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -19871897, label %20
    i32 -1118909172, label %23
    i32 1738537538, label %24
    i32 2103911375, label %25
    i32 662215560, label %26
    i32 379263861, label %27
    i32 1421928602, label %28
    i32 -347805051, label %29
    i32 2042628104, label %30
    i32 1902897593, label %31
  ]

.backedge:                                        ; preds = %19, %31, %30, %28, %27, %26, %25, %24, %23, %20
  %.09.be = phi i64* [ %.09, %19 ], [ %0, %31 ], [ %1, %30 ], [ %.09, %28 ], [ %0, %27 ], [ %.09, %26 ], [ %.09, %25 ], [ %1, %24 ], [ %.09, %23 ], [ %.09, %20 ]
  %.0.be = phi i32 [ %.0, %19 ], [ 379263861, %31 ], [ 1738537538, %30 ], [ -347805051, %28 ], [ %15, %27 ], [ %16, %26 ], [ -347805051, %25 ], [ %17, %24 ], [ %18, %23 ], [ %22, %20 ]
  br label %19

20:                                               ; preds = %19
  %.0..0..0.7 = load volatile i64, i64* %4, align 8
  %.0..0..0.8 = load volatile i64, i64* %3, align 8
  %21 = icmp slt i64 %.0..0..0.7, %.0..0..0.8
  %22 = select i1 %21, i32 -1118909172, i32 662215560
  br label %.backedge

23:                                               ; preds = %19
  br label %.backedge

24:                                               ; preds = %19
  br label %.backedge

25:                                               ; preds = %19
  br label %.backedge

26:                                               ; preds = %19
  br label %.backedge

27:                                               ; preds = %19
  br label %.backedge

28:                                               ; preds = %19
  br label %.backedge

29:                                               ; preds = %19
  ret i64* %.09

30:                                               ; preds = %19
  br label %.backedge

31:                                               ; preds = %19
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i64 @_Z3cntii(i32 %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca i1, align 1
  %4 = sext i32 %1 to i64
  %5 = load i32, i32* @x.14, align 4
  %6 = load i32, i32* @y.15, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 2062265494, i32 -1509161069
  %14 = select i1 %12, i32 -1383535732, i32 -1509161069
  br label %15

15:                                               ; preds = %.backedge, %2
  %.020 = phi i64 [ undef, %2 ], [ %.020.be, %.backedge ]
  %.018 = phi i64 [ 0, %2 ], [ %.018.be, %.backedge ]
  %.016 = phi i64 [ 1, %2 ], [ %.016.be, %.backedge ]
  %.014 = phi i32 [ 0, %2 ], [ %.014.be, %.backedge ]
  %.0 = phi i32 [ -1317092134, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1317092134, label %16
    i32 -1383535732, label %17
    i32 2062265494, label %19
    i32 -1829173797, label %21
    i32 1218212880, label %26
    i32 309136363, label %27
    i32 1934578300, label %28
    i32 1343687667, label %30
    i32 -720010885, label %31
    i32 -1509161069, label %32
  ]

.backedge:                                        ; preds = %15, %32, %30, %28, %27, %26, %21, %19, %17, %16
  %.020.be = phi i64 [ %.020, %15 ], [ %.020, %32 ], [ %.018, %30 ], [ %.020, %28 ], [ %.020, %27 ], [ %.018, %26 ], [ %.020, %21 ], [ %.020, %19 ], [ %.020, %17 ], [ %.020, %16 ]
  %.018.be = phi i64 [ %.018, %15 ], [ %.018, %32 ], [ %.018, %30 ], [ %.018, %28 ], [ %.018, %27 ], [ %.018, %26 ], [ %22, %21 ], [ %.018, %19 ], [ %.018, %17 ], [ %.018, %16 ]
  %.016.be = phi i64 [ %.016, %15 ], [ %.016, %32 ], [ %.016, %30 ], [ %.016, %28 ], [ %.016, %27 ], [ %.016, %26 ], [ %23, %21 ], [ %.016, %19 ], [ %.016, %17 ], [ %.016, %16 ]
  %.014.be = phi i32 [ %.014, %15 ], [ %.014, %32 ], [ %.014, %30 ], [ %29, %28 ], [ %.014, %27 ], [ %.014, %26 ], [ %.014, %21 ], [ %.014, %19 ], [ %.014, %17 ], [ %.014, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ -1383535732, %32 ], [ -720010885, %30 ], [ -1317092134, %28 ], [ 1934578300, %27 ], [ -720010885, %26 ], [ %25, %21 ], [ %20, %19 ], [ %13, %17 ], [ %14, %16 ]
  br label %15

16:                                               ; preds = %15
  br label %.backedge

17:                                               ; preds = %15
  %18 = icmp sle i32 %.014, %0
  store i1 %18, i1* %3, align 1
  br label %.backedge

19:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %20 = select i1 %.0..0..0., i32 -1829173797, i32 1343687667
  br label %.backedge

21:                                               ; preds = %15
  %22 = add i64 %.016, %.018
  %23 = mul nsw i64 %.016, %4
  %24 = icmp sgt i64 %22, 10000000
  %25 = select i1 %24, i32 1218212880, i32 309136363
  br label %.backedge

26:                                               ; preds = %15
  br label %.backedge

27:                                               ; preds = %15
  br label %.backedge

28:                                               ; preds = %15
  %29 = add i32 %.014, 1
  br label %.backedge

30:                                               ; preds = %15
  br label %.backedge

31:                                               ; preds = %15
  ret i64 %.020

32:                                               ; preds = %15
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %7, i32* nonnull %8)
  %10 = load i32, i32* %7, align 4
  %11 = srem i32 %10, 2
  store i32 %11, i32* %6, align 4
  br label %12

12:                                               ; preds = %.backedge, %0
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i64 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.0 = phi i32 [ 2040339681, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 2040339681, label %13
    i32 -1350414449, label %16
    i32 -1714490597, label %26
    i32 -1243473982, label %39
    i32 27205760, label %40
    i32 933423718, label %50
    i32 -1885725976, label %62
    i32 1063017726, label %64
    i32 578581618, label %67
    i32 1143387195, label %69
    i32 -837807954, label %70
    i32 -977309862, label %80
    i32 -733452460, label %92
    i32 -2108275653, label %94
    i32 415692527, label %95
    i32 543395755, label %101
    i32 -222294872, label %103
    i32 1798853126, label %104
    i32 -846292519, label %105
    i32 812157180, label %115
    i32 480406729, label %125
    i32 82754015, label %126
    i32 583997055, label %127
    i32 -726379540, label %128
    i32 -270545001, label %129
    i32 -689930316, label %139
    i32 -452741412, label %151
    i32 1776627531, label %153
    i32 1515040076, label %160
    i32 -2037237751, label %161
    i32 2102033738, label %171
    i32 -1585064444, label %189
    i32 2114130666, label %191
    i32 -1860952397, label %192
    i32 -200807984, label %195
    i32 -1959860074, label %197
    i32 -898543577, label %198
    i32 -577083413, label %203
    i32 -1601312433, label %213
    i32 1182572224, label %224
    i32 2088487349, label %225
    i32 -906391307, label %226
    i32 -1576997980, label %249
    i32 175879409, label %256
    i32 1149225250, label %266
    i32 1742871324, label %276
    i32 1503950053, label %277
    i32 -1957125385, label %279
    i32 822526673, label %289
    i32 1644095239, label %299
    i32 1179408498, label %300
    i32 1411206978, label %304
    i32 2104986600, label %306
    i32 811068793, label %307
    i32 1240145247, label %312
    i32 1164170788, label %313
    i32 -2098468309, label %314
    i32 -102958189, label %324
    i32 -1374939773, label %334
    i32 -878613048, label %335
    i32 1612013378, label %339
    i32 2012455887, label %340
    i32 396867053, label %341
    i32 -1393711745, label %343
    i32 509532796, label %344
    i32 2131405628, label %352
    i32 -2035838240, label %354
    i32 1038716630, label %355
    i32 -1850993074, label %356
  ]

.backedge:                                        ; preds = %12, %356, %355, %354, %352, %344, %343, %341, %340, %339, %335, %324, %314, %313, %312, %307, %306, %304, %300, %299, %289, %279, %277, %276, %266, %256, %249, %226, %225, %224, %213, %203, %198, %197, %195, %192, %191, %189, %171, %161, %160, %153, %151, %139, %129, %128, %127, %126, %125, %115, %105, %104, %103, %101, %95, %94, %92, %80, %70, %69, %67, %64, %62, %50, %40, %39, %26, %16, %13
  %.066.be = phi i32 [ %.066, %12 ], [ %.066, %356 ], [ %.066, %355 ], [ %.066, %354 ], [ %.066, %352 ], [ %.066, %344 ], [ %.066, %343 ], [ %.066, %341 ], [ %.066, %340 ], [ %.066, %339 ], [ 1, %335 ], [ %.066, %324 ], [ %.066, %314 ], [ %.066, %313 ], [ %.066, %312 ], [ %.066, %307 ], [ %.066, %306 ], [ %.066, %304 ], [ %.066, %300 ], [ %.066, %299 ], [ %.066, %289 ], [ %.066, %279 ], [ %.066, %277 ], [ %.066, %276 ], [ %.066, %266 ], [ %.066, %256 ], [ %.066, %249 ], [ %.066, %226 ], [ %.066, %225 ], [ %.066, %224 ], [ %.066, %213 ], [ %.066, %203 ], [ %.066, %198 ], [ %.066, %197 ], [ %.066, %195 ], [ %.066, %192 ], [ %.066, %191 ], [ %.066, %189 ], [ %.066, %171 ], [ %.066, %161 ], [ %.066, %160 ], [ %.066, %153 ], [ %.066, %151 ], [ %.066, %139 ], [ %.066, %129 ], [ %.066, %128 ], [ %.066, %127 ], [ %.066, %126 ], [ %.066, %125 ], [ %.066, %115 ], [ %.066, %105 ], [ %.066, %104 ], [ %.066, %103 ], [ %.066, %101 ], [ %.066, %95 ], [ %.066, %94 ], [ %.066, %92 ], [ %.066, %80 ], [ %.066, %70 ], [ %.066, %69 ], [ %68, %67 ], [ %.066, %64 ], [ %.066, %62 ], [ %.066, %50 ], [ %.066, %40 ], [ %.066, %39 ], [ 1, %26 ], [ %.066, %16 ], [ %.066, %13 ]
  %.064.be = phi i32 [ %.064, %12 ], [ %.064, %356 ], [ %.064, %355 ], [ %.064, %354 ], [ %.064, %352 ], [ %.064, %344 ], [ %.064, %343 ], [ %342, %341 ], [ %.064, %340 ], [ %.064, %339 ], [ %.064, %335 ], [ %.064, %324 ], [ %.064, %314 ], [ %.064, %313 ], [ %.064, %312 ], [ %.064, %307 ], [ %.064, %306 ], [ %.064, %304 ], [ %.064, %300 ], [ %.064, %299 ], [ %.064, %289 ], [ %.064, %279 ], [ %.064, %277 ], [ %.064, %276 ], [ %.064, %266 ], [ %.064, %256 ], [ %.064, %249 ], [ %.064, %226 ], [ %.064, %225 ], [ %.064, %224 ], [ %.064, %213 ], [ %.064, %203 ], [ %.064, %198 ], [ %.064, %197 ], [ %.064, %195 ], [ %.064, %192 ], [ %.064, %191 ], [ %.064, %189 ], [ %.064, %171 ], [ %.064, %161 ], [ %.064, %160 ], [ %.064, %153 ], [ %.064, %151 ], [ %.064, %139 ], [ %.064, %129 ], [ %.064, %128 ], [ %.064, %127 ], [ %.064, %126 ], [ %.064, %125 ], [ %.neg79, %115 ], [ %.064, %105 ], [ %.064, %104 ], [ %.064, %103 ], [ %.064, %101 ], [ %.064, %95 ], [ 0, %94 ], [ %.064, %92 ], [ %.064, %80 ], [ %.064, %70 ], [ %.064, %69 ], [ %.064, %67 ], [ %.064, %64 ], [ %.064, %62 ], [ %.064, %50 ], [ %.064, %40 ], [ %.064, %39 ], [ %.064, %26 ], [ %.064, %16 ], [ %.064, %13 ]
  %.062.be = phi i32 [ %.062, %12 ], [ %.062, %356 ], [ %.062, %355 ], [ %.062, %354 ], [ %.062, %352 ], [ %.062, %344 ], [ %.062, %343 ], [ %.062, %341 ], [ %.062, %340 ], [ %.062, %339 ], [ %.062, %335 ], [ %.062, %324 ], [ %.062, %314 ], [ %.062, %313 ], [ %.062, %312 ], [ %.062, %307 ], [ %.062, %306 ], [ %.062, %304 ], [ %.062, %300 ], [ %.062, %299 ], [ %.062, %289 ], [ %.062, %279 ], [ %.062, %277 ], [ %.062, %276 ], [ %.062, %266 ], [ %.062, %256 ], [ %250, %249 ], [ %247, %226 ], [ %.062, %225 ], [ %.062, %224 ], [ %.062, %213 ], [ %.062, %203 ], [ %.062, %198 ], [ %.062, %197 ], [ %.062, %195 ], [ %.062, %192 ], [ %.062, %191 ], [ %.062, %189 ], [ %.062, %171 ], [ %.062, %161 ], [ %.062, %160 ], [ %.062, %153 ], [ %.062, %151 ], [ %.062, %139 ], [ %.062, %129 ], [ -1, %128 ], [ %.062, %127 ], [ %.062, %126 ], [ %.062, %125 ], [ %.062, %115 ], [ %.062, %105 ], [ %.062, %104 ], [ %.062, %103 ], [ %.062, %101 ], [ %.062, %95 ], [ %.062, %94 ], [ %.062, %92 ], [ %.062, %80 ], [ %.062, %70 ], [ %.062, %69 ], [ %.062, %67 ], [ %.062, %64 ], [ %.062, %62 ], [ %.062, %50 ], [ %.062, %40 ], [ %.062, %39 ], [ %.062, %26 ], [ %.062, %16 ], [ %.062, %13 ]
  %.060.be = phi i32 [ %.060, %12 ], [ %.060, %356 ], [ %.060, %355 ], [ %.060, %354 ], [ %.060, %352 ], [ %.060, %344 ], [ %.060, %343 ], [ %.060, %341 ], [ %.060, %340 ], [ %.060, %339 ], [ %.060, %335 ], [ %.060, %324 ], [ %.060, %314 ], [ %.060, %313 ], [ %.060, %312 ], [ %.060, %307 ], [ %.060, %306 ], [ %.060, %304 ], [ %.060, %300 ], [ %.060, %299 ], [ %.060, %289 ], [ %.060, %279 ], [ %278, %277 ], [ %.060, %276 ], [ %.060, %266 ], [ %.060, %256 ], [ %.060, %249 ], [ %.060, %226 ], [ %.060, %225 ], [ %.060, %224 ], [ %.060, %213 ], [ %.060, %203 ], [ %.060, %198 ], [ %.060, %197 ], [ %.060, %195 ], [ %.060, %192 ], [ %.060, %191 ], [ %.060, %189 ], [ %.060, %171 ], [ %.060, %161 ], [ %.060, %160 ], [ %.060, %153 ], [ %.060, %151 ], [ %.060, %139 ], [ %.060, %129 ], [ 0, %128 ], [ %.060, %127 ], [ %.060, %126 ], [ %.060, %125 ], [ %.060, %115 ], [ %.060, %105 ], [ %.060, %104 ], [ %.060, %103 ], [ %.060, %101 ], [ %.060, %95 ], [ %.060, %94 ], [ %.060, %92 ], [ %.060, %80 ], [ %.060, %70 ], [ %.060, %69 ], [ %.060, %67 ], [ %.060, %64 ], [ %.060, %62 ], [ %.060, %50 ], [ %.060, %40 ], [ %.060, %39 ], [ %.060, %26 ], [ %.060, %16 ], [ %.060, %13 ]
  %.056.be = phi i32 [ %.056, %12 ], [ %.056, %356 ], [ %.056, %355 ], [ %.056, %354 ], [ %.056, %352 ], [ %.056, %344 ], [ %.056, %343 ], [ %.056, %341 ], [ %.056, %340 ], [ %.056, %339 ], [ %.056, %335 ], [ %.056, %324 ], [ %.056, %314 ], [ %.056, %313 ], [ %.056, %312 ], [ %.056, %307 ], [ %.056, %306 ], [ %.056, %304 ], [ %.056, %300 ], [ %.056, %299 ], [ %.056, %289 ], [ %.056, %279 ], [ %.056, %277 ], [ %.056, %276 ], [ %.056, %266 ], [ %.056, %256 ], [ %.056, %249 ], [ %248, %226 ], [ %.056, %225 ], [ %.056, %224 ], [ %.056, %213 ], [ %.056, %203 ], [ %.056, %198 ], [ %.056, %197 ], [ %.056, %195 ], [ %.056, %192 ], [ %.056, %191 ], [ %.056, %189 ], [ %.056, %171 ], [ %.056, %161 ], [ %.060, %160 ], [ %.056, %153 ], [ %.056, %151 ], [ %.056, %139 ], [ %.056, %129 ], [ %.056, %128 ], [ %.056, %127 ], [ %.056, %126 ], [ %.056, %125 ], [ %.056, %115 ], [ %.056, %105 ], [ %.056, %104 ], [ %.056, %103 ], [ %.056, %101 ], [ %.056, %95 ], [ %.056, %94 ], [ %.056, %92 ], [ %.056, %80 ], [ %.056, %70 ], [ %.056, %69 ], [ %.056, %67 ], [ %.056, %64 ], [ %.056, %62 ], [ %.056, %50 ], [ %.056, %40 ], [ %.056, %39 ], [ %.056, %26 ], [ %.056, %16 ], [ %.056, %13 ]
  %.054.be = phi i64 [ %.054, %12 ], [ %.054, %356 ], [ %.054, %355 ], [ %.054, %354 ], [ %.054, %352 ], [ %351, %344 ], [ %.054, %343 ], [ %.054, %341 ], [ %.054, %340 ], [ %.054, %339 ], [ %.054, %335 ], [ %.054, %324 ], [ %.054, %314 ], [ %.054, %313 ], [ %.054, %312 ], [ %.054, %307 ], [ %.054, %306 ], [ %.054, %304 ], [ %.054, %300 ], [ %.054, %299 ], [ %.054, %289 ], [ %.054, %279 ], [ %.054, %277 ], [ %.054, %276 ], [ %.054, %266 ], [ %.054, %256 ], [ %.054, %249 ], [ %227, %226 ], [ %.054, %225 ], [ %.054, %224 ], [ %.054, %213 ], [ %.054, %203 ], [ %.054, %198 ], [ %.054, %197 ], [ %.054, %195 ], [ %.054, %192 ], [ %.054, %191 ], [ %.054, %189 ], [ %178, %171 ], [ %.054, %161 ], [ %.054, %160 ], [ %.054, %153 ], [ %.054, %151 ], [ %.054, %139 ], [ %.054, %129 ], [ %.054, %128 ], [ %.054, %127 ], [ %.054, %126 ], [ %.054, %125 ], [ %.054, %115 ], [ %.054, %105 ], [ %.054, %104 ], [ %.054, %103 ], [ %.054, %101 ], [ %.054, %95 ], [ %.054, %94 ], [ %.054, %92 ], [ %.054, %80 ], [ %.054, %70 ], [ %.054, %69 ], [ %.054, %67 ], [ %.054, %64 ], [ %.054, %62 ], [ %.054, %50 ], [ %.054, %40 ], [ %.054, %39 ], [ %.054, %26 ], [ %.054, %16 ], [ %.054, %13 ]
  %.052.be = phi i32 [ %.052, %12 ], [ %.052, %356 ], [ %.052, %355 ], [ %.052, %354 ], [ %353, %352 ], [ %.052, %344 ], [ %.052, %343 ], [ %.052, %341 ], [ %.052, %340 ], [ %.052, %339 ], [ %.052, %335 ], [ %.052, %324 ], [ %.052, %314 ], [ %.052, %313 ], [ %.052, %312 ], [ %.052, %307 ], [ %.052, %306 ], [ %.052, %304 ], [ %.052, %300 ], [ %.052, %299 ], [ %.052, %289 ], [ %.052, %279 ], [ %.052, %277 ], [ %.052, %276 ], [ %.052, %266 ], [ %.052, %256 ], [ %.052, %249 ], [ %.052, %226 ], [ %.052, %225 ], [ %.052, %224 ], [ %214, %213 ], [ %.052, %203 ], [ %.052, %198 ], [ %.052, %197 ], [ %.052, %195 ], [ %.052, %192 ], [ 0, %191 ], [ %.052, %189 ], [ %.052, %171 ], [ %.052, %161 ], [ %.052, %160 ], [ %.052, %153 ], [ %.052, %151 ], [ %.052, %139 ], [ %.052, %129 ], [ %.052, %128 ], [ %.052, %127 ], [ %.052, %126 ], [ %.052, %125 ], [ %.052, %115 ], [ %.052, %105 ], [ %.052, %104 ], [ %.052, %103 ], [ %.052, %101 ], [ %.052, %95 ], [ %.052, %94 ], [ %.052, %92 ], [ %.052, %80 ], [ %.052, %70 ], [ %.052, %69 ], [ %.052, %67 ], [ %.052, %64 ], [ %.052, %62 ], [ %.052, %50 ], [ %.052, %40 ], [ %.052, %39 ], [ %.052, %26 ], [ %.052, %16 ], [ %.052, %13 ]
  %.050.be = phi i32 [ %.050, %12 ], [ %.050, %356 ], [ 0, %355 ], [ %.050, %354 ], [ %.050, %352 ], [ %.050, %344 ], [ %.050, %343 ], [ %.050, %341 ], [ %.050, %340 ], [ %.050, %339 ], [ %.050, %335 ], [ %.050, %324 ], [ %.050, %314 ], [ %.050, %313 ], [ %.neg, %312 ], [ %.050, %307 ], [ %.050, %306 ], [ %.050, %304 ], [ %.050, %300 ], [ %.050, %299 ], [ 0, %289 ], [ %.050, %279 ], [ %.050, %277 ], [ %.050, %276 ], [ %.050, %266 ], [ %.050, %256 ], [ %.050, %249 ], [ %.050, %226 ], [ %.050, %225 ], [ %.050, %224 ], [ %.050, %213 ], [ %.050, %203 ], [ %.050, %198 ], [ %.050, %197 ], [ %.050, %195 ], [ %.050, %192 ], [ %.050, %191 ], [ %.050, %189 ], [ %.050, %171 ], [ %.050, %161 ], [ %.050, %160 ], [ %.050, %153 ], [ %.050, %151 ], [ %.050, %139 ], [ %.050, %129 ], [ %.050, %128 ], [ %.050, %127 ], [ %.050, %126 ], [ %.050, %125 ], [ %.050, %115 ], [ %.050, %105 ], [ %.050, %104 ], [ %.050, %103 ], [ %.050, %101 ], [ %.050, %95 ], [ %.050, %94 ], [ %.050, %92 ], [ %.050, %80 ], [ %.050, %70 ], [ %.050, %69 ], [ %.050, %67 ], [ %.050, %64 ], [ %.050, %62 ], [ %.050, %50 ], [ %.050, %40 ], [ %.050, %39 ], [ %.050, %26 ], [ %.050, %16 ], [ %.050, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -102958189, %356 ], [ 822526673, %355 ], [ 1149225250, %354 ], [ -1601312433, %352 ], [ 2102033738, %344 ], [ -689930316, %343 ], [ 812157180, %341 ], [ -977309862, %340 ], [ 933423718, %339 ], [ -1714490597, %335 ], [ %333, %324 ], [ %323, %314 ], [ -2098468309, %313 ], [ 1179408498, %312 ], [ 1240145247, %307 ], [ 811068793, %306 ], [ %305, %304 ], [ %303, %300 ], [ 1179408498, %299 ], [ %298, %289 ], [ %288, %279 ], [ -270545001, %277 ], [ 1503950053, %276 ], [ %275, %266 ], [ %265, %256 ], [ 175879409, %249 ], [ -2037237751, %226 ], [ -2098468309, %225 ], [ -1860952397, %224 ], [ %223, %213 ], [ %212, %203 ], [ -577083413, %198 ], [ -898543577, %197 ], [ %196, %195 ], [ %194, %192 ], [ -1860952397, %191 ], [ %190, %189 ], [ %188, %171 ], [ %170, %161 ], [ -2037237751, %160 ], [ %159, %153 ], [ %152, %151 ], [ %150, %139 ], [ %138, %129 ], [ -270545001, %128 ], [ -726379540, %127 ], [ -2098468309, %126 ], [ 415692527, %125 ], [ %124, %115 ], [ %114, %105 ], [ -846292519, %104 ], [ 1798853126, %103 ], [ %102, %101 ], [ %100, %95 ], [ 415692527, %94 ], [ %93, %92 ], [ %91, %80 ], [ %79, %70 ], [ -2098468309, %69 ], [ 27205760, %67 ], [ 578581618, %64 ], [ %63, %62 ], [ %61, %50 ], [ %49, %40 ], [ 27205760, %39 ], [ %38, %26 ], [ %25, %16 ], [ %15, %13 ]
  br label %12

13:                                               ; preds = %12
  %.0..0..0. = load volatile i32, i32* %6, align 4
  %14 = icmp eq i32 %.0..0..0., 0
  %15 = select i1 %14, i32 -1350414449, i32 -837807954
  br label %.backedge

16:                                               ; preds = %12
  %17 = load i32, i32* @x.16, align 4
  %18 = load i32, i32* @y.17, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 -1714490597, i32 -878613048
  br label %.backedge

26:                                               ; preds = %12
  %27 = load i32, i32* %7, align 4
  %28 = sdiv i32 %27, 2
  %29 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %28)
  %30 = load i32, i32* @x.16, align 4
  %31 = load i32, i32* @y.17, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -1243473982, i32 -878613048
  br label %.backedge

39:                                               ; preds = %12
  br label %.backedge

40:                                               ; preds = %12
  %41 = load i32, i32* @x.16, align 4
  %42 = load i32, i32* @y.17, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 933423718, i32 1612013378
  br label %.backedge

50:                                               ; preds = %12
  %51 = load i32, i32* %8, align 4
  %52 = icmp slt i32 %.066, %51
  store i1 %52, i1* %5, align 1
  %53 = load i32, i32* @x.16, align 4
  %54 = load i32, i32* @y.17, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -1885725976, i32 1612013378
  br label %.backedge

62:                                               ; preds = %12
  %.0..0..0.45 = load volatile i1, i1* %5, align 1
  %63 = select i1 %.0..0..0.45, i32 1063017726, i32 1143387195
  br label %.backedge

64:                                               ; preds = %12
  %65 = load i32, i32* %7, align 4
  %66 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %65)
  br label %.backedge

67:                                               ; preds = %12
  %68 = add i32 %.066, 1
  br label %.backedge

69:                                               ; preds = %12
  %putchar83 = call i32 @putchar(i32 10)
  br label %.backedge

70:                                               ; preds = %12
  %71 = load i32, i32* @x.16, align 4
  %72 = load i32, i32* @y.17, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 -977309862, i32 2012455887
  br label %.backedge

80:                                               ; preds = %12
  %81 = load i32, i32* %7, align 4
  %82 = icmp eq i32 %81, 1
  store i1 %82, i1* %4, align 1
  %83 = load i32, i32* @x.16, align 4
  %84 = load i32, i32* @y.17, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -733452460, i32 2012455887
  br label %.backedge

92:                                               ; preds = %12
  %.0..0..0.46 = load volatile i1, i1* %4, align 1
  %93 = select i1 %.0..0..0.46, i32 -2108275653, i32 583997055
  br label %.backedge

94:                                               ; preds = %12
  br label %.backedge

95:                                               ; preds = %12
  %96 = load i32, i32* %8, align 4
  %97 = add i32 %96, 1
  %98 = sdiv i32 %97, 2
  %99 = icmp slt i32 %.064, %98
  %100 = select i1 %99, i32 543395755, i32 82754015
  br label %.backedge

101:                                              ; preds = %12
  %.not82 = icmp eq i32 %.064, 0
  %102 = select i1 %.not82, i32 1798853126, i32 -222294872
  br label %.backedge

103:                                              ; preds = %12
  %putchar81 = call i32 @putchar(i32 32)
  br label %.backedge

104:                                              ; preds = %12
  %putchar80 = call i32 @putchar(i32 49)
  br label %.backedge

105:                                              ; preds = %12
  %106 = load i32, i32* @x.16, align 4
  %107 = load i32, i32* @y.17, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 812157180, i32 396867053
  br label %.backedge

115:                                              ; preds = %12
  %.neg79 = add i32 %.064, 1
  %116 = load i32, i32* @x.16, align 4
  %117 = load i32, i32* @y.17, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 480406729, i32 396867053
  br label %.backedge

125:                                              ; preds = %12
  br label %.backedge

126:                                              ; preds = %12
  %putchar78 = call i32 @putchar(i32 10)
  br label %.backedge

127:                                              ; preds = %12
  br label %.backedge

128:                                              ; preds = %12
  br label %.backedge

129:                                              ; preds = %12
  %130 = load i32, i32* @x.16, align 4
  %131 = load i32, i32* @y.17, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -689930316, i32 -1393711745
  br label %.backedge

139:                                              ; preds = %12
  %140 = load i32, i32* %8, align 4
  %141 = icmp slt i32 %.060, %140
  store i1 %141, i1* %3, align 1
  %142 = load i32, i32* @x.16, align 4
  %143 = load i32, i32* @y.17, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -452741412, i32 -1393711745
  br label %.backedge

151:                                              ; preds = %12
  %.0..0..0.47 = load volatile i1, i1* %3, align 1
  %152 = select i1 %.0..0..0.47, i32 1776627531, i32 -1957125385
  br label %.backedge

153:                                              ; preds = %12
  %154 = load i32, i32* %8, align 4
  %155 = sub i32 %154, %.060
  %156 = load i32, i32* %7, align 4
  %157 = call i64 @_Z3cntii(i32 %155, i32 %156)
  %158 = icmp slt i64 %157, 1000000
  %159 = select i1 %158, i32 1515040076, i32 -1576997980
  br label %.backedge

160:                                              ; preds = %12
  br label %.backedge

161:                                              ; preds = %12
  %162 = load i32, i32* @x.16, align 4
  %163 = load i32, i32* @y.17, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 2102033738, i32 509532796
  br label %.backedge

171:                                              ; preds = %12
  %172 = load i32, i32* %8, align 4
  %173 = sub i32 %172, %.056
  %174 = load i32, i32* %7, align 4
  %175 = call i64 @_Z3cntii(i32 %173, i32 %174)
  %176 = xor i32 %.062, -1
  %177 = sext i32 %176 to i64
  %178 = add i64 %175, %177
  %179 = icmp slt i64 %178, 2
  store i1 %179, i1* %2, align 1
  %180 = load i32, i32* @x.16, align 4
  %181 = load i32, i32* @y.17, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 -1585064444, i32 509532796
  br label %.backedge

189:                                              ; preds = %12
  %.0..0..0.48 = load volatile i1, i1* %2, align 1
  %190 = select i1 %.0..0..0.48, i32 2114130666, i32 -906391307
  br label %.backedge

191:                                              ; preds = %12
  br label %.backedge

192:                                              ; preds = %12
  %193 = icmp slt i32 %.052, %.056
  %194 = select i1 %193, i32 -200807984, i32 2088487349
  br label %.backedge

195:                                              ; preds = %12
  %.not77 = icmp eq i32 %.052, 0
  %196 = select i1 %.not77, i32 -898543577, i32 -1959860074
  br label %.backedge

197:                                              ; preds = %12
  %putchar76 = call i32 @putchar(i32 32)
  br label %.backedge

198:                                              ; preds = %12
  %199 = sext i32 %.052 to i64
  %200 = getelementptr inbounds [310000 x i32], [310000 x i32]* @ret, i64 0, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %201)
  br label %.backedge

203:                                              ; preds = %12
  %204 = load i32, i32* @x.16, align 4
  %205 = load i32, i32* @y.17, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 -1601312433, i32 2131405628
  br label %.backedge

213:                                              ; preds = %12
  %214 = add i32 %.052, 1
  %215 = load i32, i32* @x.16, align 4
  %216 = load i32, i32* @y.17, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 1182572224, i32 2131405628
  br label %.backedge

224:                                              ; preds = %12
  br label %.backedge

225:                                              ; preds = %12
  %putchar75 = call i32 @putchar(i32 10)
  br label %.backedge

226:                                              ; preds = %12
  %227 = add i64 %.054, -2
  %228 = load i32, i32* %8, align 4
  %229 = xor i32 %.056, -1
  %230 = add i32 %228, %229
  %231 = load i32, i32* %7, align 4
  %232 = call i64 @_Z3cntii(i32 %230, i32 %231)
  %233 = shl nsw i64 %232, 1
  %234 = sdiv i64 %227, %233
  %235 = trunc i64 %234 to i32
  %236 = add i32 %235, 1
  %237 = sext i32 %.056 to i64
  %238 = getelementptr inbounds [310000 x i32], [310000 x i32]* @ret, i64 0, i64 %237
  store i32 %236, i32* %238, align 4
  %239 = add i32 %.062, 1
  %240 = load i32, i32* %7, align 4
  %241 = add i32 %240, 1
  %.neg71 = sdiv i32 %241, -2
  %.neg73 = add i32 %.neg71, %236
  %242 = load i32, i32* %8, align 4
  %243 = add i32 %242, %229
  %244 = call i64 @_Z3cntii(i32 %243, i32 %240)
  %245 = trunc i64 %244 to i32
  %.neg74 = shl i32 %245, 1
  %246 = mul i32 %.neg74, %.neg73
  %247 = add i32 %239, %246
  %248 = add i32 %.056, 1
  br label %.backedge

249:                                              ; preds = %12
  %250 = add i32 %.062, 1
  %251 = load i32, i32* %7, align 4
  %252 = add i32 %251, 1
  %253 = sdiv i32 %252, 2
  %254 = sext i32 %.060 to i64
  %255 = getelementptr inbounds [310000 x i32], [310000 x i32]* @ret, i64 0, i64 %254
  store i32 %253, i32* %255, align 4
  br label %.backedge

256:                                              ; preds = %12
  %257 = load i32, i32* @x.16, align 4
  %258 = load i32, i32* @y.17, align 4
  %259 = add i32 %257, -1
  %260 = mul i32 %259, %257
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %263, %262
  %265 = select i1 %264, i32 1149225250, i32 -2035838240
  br label %.backedge

266:                                              ; preds = %12
  %267 = load i32, i32* @x.16, align 4
  %268 = load i32, i32* @y.17, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 1742871324, i32 -2035838240
  br label %.backedge

276:                                              ; preds = %12
  br label %.backedge

277:                                              ; preds = %12
  %278 = add i32 %.060, 1
  br label %.backedge

279:                                              ; preds = %12
  %280 = load i32, i32* @x.16, align 4
  %281 = load i32, i32* @y.17, align 4
  %282 = add i32 %280, -1
  %283 = mul i32 %282, %280
  %284 = and i32 %283, 1
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %286, %285
  %288 = select i1 %287, i32 822526673, i32 1038716630
  br label %.backedge

289:                                              ; preds = %12
  %290 = load i32, i32* @x.16, align 4
  %291 = load i32, i32* @y.17, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 1644095239, i32 1038716630
  br label %.backedge

299:                                              ; preds = %12
  br label %.backedge

300:                                              ; preds = %12
  %301 = load i32, i32* %8, align 4
  %302 = icmp slt i32 %.050, %301
  %303 = select i1 %302, i32 1411206978, i32 1164170788
  br label %.backedge

304:                                              ; preds = %12
  %.not = icmp eq i32 %.050, 0
  %305 = select i1 %.not, i32 811068793, i32 2104986600
  br label %.backedge

306:                                              ; preds = %12
  %putchar68 = call i32 @putchar(i32 32)
  br label %.backedge

307:                                              ; preds = %12
  %308 = sext i32 %.050 to i64
  %309 = getelementptr inbounds [310000 x i32], [310000 x i32]* @ret, i64 0, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %310)
  br label %.backedge

312:                                              ; preds = %12
  %.neg = add i32 %.050, 1
  br label %.backedge

313:                                              ; preds = %12
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

314:                                              ; preds = %12
  %315 = load i32, i32* @x.16, align 4
  %316 = load i32, i32* @y.17, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 -102958189, i32 -1850993074
  br label %.backedge

324:                                              ; preds = %12
  store i32 0, i32* %1, align 4
  %325 = load i32, i32* @x.16, align 4
  %326 = load i32, i32* @y.17, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 -1374939773, i32 -1850993074
  br label %.backedge

334:                                              ; preds = %12
  %.0..0..0.49 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.49

335:                                              ; preds = %12
  %336 = load i32, i32* %7, align 4
  %337 = sdiv i32 %336, 2
  %338 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %337)
  br label %.backedge

339:                                              ; preds = %12
  br label %.backedge

340:                                              ; preds = %12
  br label %.backedge

341:                                              ; preds = %12
  %342 = add i32 %.064, 1
  br label %.backedge

343:                                              ; preds = %12
  br label %.backedge

344:                                              ; preds = %12
  %345 = load i32, i32* %8, align 4
  %346 = sub i32 %345, %.056
  %347 = load i32, i32* %7, align 4
  %348 = call i64 @_Z3cntii(i32 %346, i32 %347)
  %349 = xor i32 %.062, -1
  %350 = sext i32 %349 to i64
  %351 = add i64 %348, %350
  br label %.backedge

352:                                              ; preds = %12
  %353 = add i32 %.052, 1
  br label %.backedge

354:                                              ; preds = %12
  br label %.backedge

355:                                              ; preds = %12
  br label %.backedge

356:                                              ; preds = %12
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree noinline norecurse nounwind uwtable
define internal void @_GLOBAL__sub_I_s380117069.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.18, align 4
  %4 = load i32, i32* @y.19, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1159543419, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1159543419, label %11
    i32 -664284401, label %14
    i32 -1943242402, label %24
    i32 -525992355, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -664284401, i32 -525992355
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.18, align 4
  %16 = load i32, i32* @y.19, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1943242402, i32 -525992355
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -664284401, %25 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
