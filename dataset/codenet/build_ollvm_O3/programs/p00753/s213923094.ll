; ModuleID = 'build_ollvm/programs/p00753/s213923094.ll'
source_filename = "Project_CodeNet_C++1400/p00753/s213923094.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str = private unnamed_addr constant [2 x i8] c"1\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca [250000 x i32], align 16
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds [250000 x i32], [250000 x i32]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [250000 x i32], [250000 x i32]* %4, i64 0, i64 1
  br label %8

8:                                                ; preds = %.backedge, %0
  %.042 = phi i32 [ 0, %0 ], [ %.042.be, %.backedge ]
  %.040 = phi i32 [ undef, %0 ], [ %.040.be, %.backedge ]
  %.038 = phi i32 [ undef, %0 ], [ %.038.be, %.backedge ]
  %.036 = phi i32 [ undef, %0 ], [ %.036.be, %.backedge ]
  %.034 = phi i32 [ undef, %0 ], [ %.034.be, %.backedge ]
  %.032 = phi i32 [ undef, %0 ], [ %.032.be, %.backedge ]
  %.030 = phi i32 [ undef, %0 ], [ %.030.be, %.backedge ]
  %.0 = phi i32 [ 900296640, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 900296640, label %9
    i32 1907352937, label %12
    i32 1955138886, label %15
    i32 -779596097, label %17
    i32 -1682682051, label %18
    i32 1281007737, label %28
    i32 -152768679, label %39
    i32 -1385703664, label %41
    i32 -575928656, label %47
    i32 349377522, label %49
    i32 -460108490, label %52
    i32 -1578612756, label %55
    i32 -1086912468, label %57
    i32 -1337618358, label %58
    i32 -330180002, label %59
    i32 588535514, label %69
    i32 -1452019114, label %79
    i32 439628190, label %80
    i32 1940501516, label %81
    i32 -1609705445, label %86
    i32 1034210927, label %96
    i32 -1277218856, label %106
    i32 -1126184660, label %107
    i32 -1467948903, label %117
    i32 1964825933, label %130
    i32 993505775, label %132
    i32 -112664348, label %142
    i32 -833437399, label %154
    i32 -269930946, label %155
    i32 1355026743, label %159
    i32 1600251615, label %160
    i32 696216404, label %163
    i32 1291141833, label %164
    i32 1447700937, label %174
    i32 -1686813147, label %186
    i32 964331662, label %187
    i32 -1953975503, label %197
    i32 947216180, label %208
    i32 1232007079, label %210
    i32 -201610859, label %216
    i32 -1945193899, label %226
    i32 -1674784861, label %237
    i32 468112237, label %238
    i32 1615542894, label %248
    i32 -565635186, label %258
    i32 1238568126, label %259
    i32 -1578555411, label %269
    i32 -339777386, label %280
    i32 2009189887, label %281
    i32 -167073215, label %283
    i32 -1624077661, label %284
    i32 1000768620, label %285
    i32 -1706064145, label %287
    i32 1916863114, label %288
    i32 699768327, label %289
    i32 949370780, label %292
    i32 854295772, label %295
    i32 1929697459, label %296
    i32 386628674, label %297
    i32 1126101378, label %298
  ]

.backedge:                                        ; preds = %8, %298, %297, %296, %295, %292, %289, %288, %287, %285, %284, %281, %280, %269, %259, %258, %248, %238, %237, %226, %216, %210, %208, %197, %187, %186, %174, %164, %163, %160, %159, %155, %154, %142, %132, %130, %117, %107, %106, %96, %86, %81, %80, %79, %69, %59, %58, %57, %55, %52, %49, %47, %41, %39, %28, %18, %17, %15, %12, %9
  %.042.be = phi i32 [ %.042, %8 ], [ %.042, %298 ], [ %.042, %297 ], [ %.042, %296 ], [ %.042, %295 ], [ %.042, %292 ], [ %.042, %289 ], [ %.042, %288 ], [ %.042, %287 ], [ %.042, %285 ], [ %.042, %284 ], [ %.042, %281 ], [ %.042, %280 ], [ %.042, %269 ], [ %.042, %259 ], [ %.042, %258 ], [ %.042, %248 ], [ %.042, %238 ], [ %.042, %237 ], [ %.042, %226 ], [ %.042, %216 ], [ %.042, %210 ], [ %.042, %208 ], [ %.042, %197 ], [ %.042, %187 ], [ %.042, %186 ], [ %.042, %174 ], [ %.042, %164 ], [ %.042, %163 ], [ %.042, %160 ], [ %.042, %159 ], [ %.042, %155 ], [ %.042, %154 ], [ %.042, %142 ], [ %.042, %132 ], [ %.042, %130 ], [ %.042, %117 ], [ %.042, %107 ], [ %.042, %106 ], [ %.042, %96 ], [ %.042, %86 ], [ %.042, %81 ], [ %.042, %80 ], [ %.042, %79 ], [ %.042, %69 ], [ %.042, %59 ], [ %.042, %58 ], [ %.042, %57 ], [ %.042, %55 ], [ %.042, %52 ], [ %.042, %49 ], [ %.042, %47 ], [ %.042, %41 ], [ %.042, %39 ], [ %.042, %28 ], [ %.042, %18 ], [ %.042, %17 ], [ %16, %15 ], [ %.042, %12 ], [ %.042, %9 ]
  %.040.be = phi i32 [ %.040, %8 ], [ %.040, %298 ], [ %.040, %297 ], [ %.040, %296 ], [ %.040, %295 ], [ %.040, %292 ], [ %.040, %289 ], [ %.040, %288 ], [ %.040, %287 ], [ %286, %285 ], [ %.040, %284 ], [ %.040, %281 ], [ %.040, %280 ], [ %.040, %269 ], [ %.040, %259 ], [ %.040, %258 ], [ %.040, %248 ], [ %.040, %238 ], [ %.040, %237 ], [ %.040, %226 ], [ %.040, %216 ], [ %.040, %210 ], [ %.040, %208 ], [ %.040, %197 ], [ %.040, %187 ], [ %.040, %186 ], [ %.040, %174 ], [ %.040, %164 ], [ %.040, %163 ], [ %.040, %160 ], [ %.040, %159 ], [ %.040, %155 ], [ %.040, %154 ], [ %.040, %142 ], [ %.040, %132 ], [ %.040, %130 ], [ %.040, %117 ], [ %.040, %107 ], [ %.040, %106 ], [ %.040, %96 ], [ %.040, %86 ], [ %.040, %81 ], [ %.040, %80 ], [ %.040, %79 ], [ %.neg47, %69 ], [ %.040, %59 ], [ %.040, %58 ], [ %.040, %57 ], [ %.040, %55 ], [ %.040, %52 ], [ %.040, %49 ], [ %.040, %47 ], [ %.040, %41 ], [ %.040, %39 ], [ %.040, %28 ], [ %.040, %18 ], [ 2, %17 ], [ %.040, %15 ], [ %.040, %12 ], [ %.040, %9 ]
  %.038.be = phi i32 [ %.038, %8 ], [ %.038, %298 ], [ %.038, %297 ], [ %.038, %296 ], [ %.038, %295 ], [ %.038, %292 ], [ %.038, %289 ], [ %.038, %288 ], [ %.038, %287 ], [ %.038, %285 ], [ %.038, %284 ], [ %.038, %281 ], [ %.038, %280 ], [ %.038, %269 ], [ %.038, %259 ], [ %.038, %258 ], [ %.038, %248 ], [ %.038, %238 ], [ %.038, %237 ], [ %.038, %226 ], [ %.038, %216 ], [ %.038, %210 ], [ %.038, %208 ], [ %.038, %197 ], [ %.038, %187 ], [ %.038, %186 ], [ %.038, %174 ], [ %.038, %164 ], [ %.038, %163 ], [ %.038, %160 ], [ %.038, %159 ], [ %.038, %155 ], [ %.038, %154 ], [ %.038, %142 ], [ %.038, %132 ], [ %.038, %130 ], [ %.038, %117 ], [ %.038, %107 ], [ %.038, %106 ], [ %.038, %96 ], [ %.038, %86 ], [ %.038, %81 ], [ %.038, %80 ], [ %.038, %79 ], [ %.038, %69 ], [ %.038, %59 ], [ %.038, %58 ], [ %.038, %57 ], [ %56, %55 ], [ %.038, %52 ], [ %.038, %49 ], [ %48, %47 ], [ %.038, %41 ], [ %.038, %39 ], [ %.038, %28 ], [ %.038, %18 ], [ %.038, %17 ], [ %.038, %15 ], [ %.038, %12 ], [ %.038, %9 ]
  %.036.be = phi i32 [ %.036, %8 ], [ %.036, %298 ], [ %.036, %297 ], [ %.neg46, %296 ], [ %.036, %295 ], [ %.036, %292 ], [ %.036, %289 ], [ 0, %288 ], [ %.036, %287 ], [ %.036, %285 ], [ %.036, %284 ], [ %.036, %281 ], [ %.036, %280 ], [ %.036, %269 ], [ %.036, %259 ], [ %.036, %258 ], [ %.036, %248 ], [ %.036, %238 ], [ %.036, %237 ], [ %227, %226 ], [ %.036, %216 ], [ %.036, %210 ], [ %.036, %208 ], [ %.036, %197 ], [ %.036, %187 ], [ %.036, %186 ], [ %.036, %174 ], [ %.036, %164 ], [ %.036, %163 ], [ %.036, %160 ], [ %.036, %159 ], [ %.036, %155 ], [ %.036, %154 ], [ %.036, %142 ], [ %.036, %132 ], [ %.036, %130 ], [ 0, %117 ], [ %.036, %107 ], [ %.036, %106 ], [ %.036, %96 ], [ %.036, %86 ], [ %.036, %81 ], [ %.036, %80 ], [ %.036, %79 ], [ %.036, %69 ], [ %.036, %59 ], [ %.036, %58 ], [ %.036, %57 ], [ %.036, %55 ], [ %.036, %52 ], [ %.036, %49 ], [ %.036, %47 ], [ %.036, %41 ], [ %.036, %39 ], [ %.036, %28 ], [ %.036, %18 ], [ %.036, %17 ], [ %.036, %15 ], [ %.036, %12 ], [ %.036, %9 ]
  %.034.be = phi i32 [ %.034, %8 ], [ %.034, %298 ], [ %.034, %297 ], [ %.034, %296 ], [ %.034, %295 ], [ %.034, %292 ], [ %291, %289 ], [ %.034, %288 ], [ %.034, %287 ], [ %.034, %285 ], [ %.034, %284 ], [ %.034, %281 ], [ %.034, %280 ], [ %.034, %269 ], [ %.034, %259 ], [ %.034, %258 ], [ %.034, %248 ], [ %.034, %238 ], [ %.034, %237 ], [ %.034, %226 ], [ %.034, %216 ], [ %.034, %210 ], [ %.034, %208 ], [ %.034, %197 ], [ %.034, %187 ], [ %.034, %186 ], [ %.034, %174 ], [ %.034, %164 ], [ %.034, %163 ], [ %162, %160 ], [ %.034, %159 ], [ %.034, %155 ], [ %.034, %154 ], [ %144, %142 ], [ %.034, %132 ], [ %.034, %130 ], [ %.034, %117 ], [ %.034, %107 ], [ %.034, %106 ], [ %.034, %96 ], [ %.034, %86 ], [ %.034, %81 ], [ %.034, %80 ], [ %.034, %79 ], [ %.034, %69 ], [ %.034, %59 ], [ %.034, %58 ], [ %.034, %57 ], [ %.034, %55 ], [ %.034, %52 ], [ %.034, %49 ], [ %.034, %47 ], [ %.034, %41 ], [ %.034, %39 ], [ %.034, %28 ], [ %.034, %18 ], [ %.034, %17 ], [ %.034, %15 ], [ %.034, %12 ], [ %.034, %9 ]
  %.032.be = phi i32 [ %.032, %8 ], [ %.032, %298 ], [ %.032, %297 ], [ %.032, %296 ], [ %.032, %295 ], [ %294, %292 ], [ %.032, %289 ], [ %.032, %288 ], [ %.032, %287 ], [ %.032, %285 ], [ %.032, %284 ], [ %.032, %281 ], [ %.032, %280 ], [ %.032, %269 ], [ %.032, %259 ], [ %.032, %258 ], [ %.032, %248 ], [ %.032, %238 ], [ %.032, %237 ], [ %.032, %226 ], [ %.032, %216 ], [ %.032, %210 ], [ %.032, %208 ], [ %.032, %197 ], [ %.032, %187 ], [ %.032, %186 ], [ %176, %174 ], [ %.032, %164 ], [ %.032, %163 ], [ %.032, %160 ], [ %.032, %159 ], [ %.032, %155 ], [ %.032, %154 ], [ %.032, %142 ], [ %.032, %132 ], [ %.032, %130 ], [ %.032, %117 ], [ %.032, %107 ], [ %.032, %106 ], [ %.032, %96 ], [ %.032, %86 ], [ %.032, %81 ], [ %.032, %80 ], [ %.032, %79 ], [ %.032, %69 ], [ %.032, %59 ], [ %.032, %58 ], [ %.032, %57 ], [ %.032, %55 ], [ %.032, %52 ], [ %.032, %49 ], [ %.032, %47 ], [ %.032, %41 ], [ %.032, %39 ], [ %.032, %28 ], [ %.032, %18 ], [ %.032, %17 ], [ %.032, %15 ], [ %.032, %12 ], [ %.032, %9 ]
  %.030.be = phi i32 [ %.030, %8 ], [ %.neg, %298 ], [ %.030, %297 ], [ %.030, %296 ], [ %.030, %295 ], [ %.034, %292 ], [ %.030, %289 ], [ %.030, %288 ], [ %.030, %287 ], [ %.030, %285 ], [ %.030, %284 ], [ %.030, %281 ], [ %.030, %280 ], [ %270, %269 ], [ %.030, %259 ], [ %.030, %258 ], [ %.030, %248 ], [ %.030, %238 ], [ %.030, %237 ], [ %.030, %226 ], [ %.030, %216 ], [ %.030, %210 ], [ %.030, %208 ], [ %.030, %197 ], [ %.030, %187 ], [ %.030, %186 ], [ %.034, %174 ], [ %.030, %164 ], [ %.030, %163 ], [ %.030, %160 ], [ %.030, %159 ], [ %.030, %155 ], [ %.030, %154 ], [ %.030, %142 ], [ %.030, %132 ], [ %.030, %130 ], [ %.030, %117 ], [ %.030, %107 ], [ %.030, %106 ], [ %.030, %96 ], [ %.030, %86 ], [ %.030, %81 ], [ %.030, %80 ], [ %.030, %79 ], [ %.030, %69 ], [ %.030, %59 ], [ %.030, %58 ], [ %.030, %57 ], [ %.030, %55 ], [ %.030, %52 ], [ %.030, %49 ], [ %.030, %47 ], [ %.030, %41 ], [ %.030, %39 ], [ %.030, %28 ], [ %.030, %18 ], [ %.030, %17 ], [ %.030, %15 ], [ %.030, %12 ], [ %.030, %9 ]
  %.0.be = phi i32 [ %.0, %8 ], [ -1578555411, %298 ], [ 1615542894, %297 ], [ -1945193899, %296 ], [ -1953975503, %295 ], [ 1447700937, %292 ], [ -112664348, %289 ], [ -1467948903, %288 ], [ 1034210927, %287 ], [ 588535514, %285 ], [ 1281007737, %284 ], [ 1940501516, %281 ], [ 964331662, %280 ], [ %279, %269 ], [ %268, %259 ], [ 1238568126, %258 ], [ %257, %248 ], [ %247, %238 ], [ 468112237, %237 ], [ %236, %226 ], [ %225, %216 ], [ %215, %210 ], [ %209, %208 ], [ %207, %197 ], [ %196, %187 ], [ 964331662, %186 ], [ %185, %174 ], [ %173, %164 ], [ 1291141833, %163 ], [ 696216404, %160 ], [ 1940501516, %159 ], [ %158, %155 ], [ 1291141833, %154 ], [ %153, %142 ], [ %141, %132 ], [ %131, %130 ], [ %129, %117 ], [ %116, %107 ], [ -167073215, %106 ], [ %105, %96 ], [ %95, %86 ], [ %85, %81 ], [ 1940501516, %80 ], [ -1682682051, %79 ], [ %78, %69 ], [ %68, %59 ], [ -330180002, %58 ], [ -1337618358, %57 ], [ 349377522, %55 ], [ -1578612756, %52 ], [ %51, %49 ], [ 349377522, %47 ], [ %46, %41 ], [ %40, %39 ], [ %38, %28 ], [ %27, %18 ], [ -1682682051, %17 ], [ 900296640, %15 ], [ 1955138886, %12 ], [ %11, %9 ]
  br label %8

9:                                                ; preds = %8
  %10 = icmp slt i32 %.042, 250000
  %11 = select i1 %10, i32 1907352937, i32 -779596097
  br label %.backedge

12:                                               ; preds = %8
  %13 = sext i32 %.042 to i64
  %14 = getelementptr inbounds [250000 x i32], [250000 x i32]* %4, i64 0, i64 %13
  store i32 1, i32* %14, align 4
  br label %.backedge

15:                                               ; preds = %8
  %16 = add i32 %.042, 1
  br label %.backedge

17:                                               ; preds = %8
  store i32 0, i32* %6, align 16
  store i32 0, i32* %7, align 4
  br label %.backedge

18:                                               ; preds = %8
  %19 = load i32, i32* @x, align 4
  %20 = load i32, i32* @y, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 1281007737, i32 -1624077661
  br label %.backedge

28:                                               ; preds = %8
  %29 = icmp slt i32 %.040, 501
  store i1 %29, i1* %3, align 1
  %30 = load i32, i32* @x, align 4
  %31 = load i32, i32* @y, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -152768679, i32 -1624077661
  br label %.backedge

39:                                               ; preds = %8
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %40 = select i1 %.0..0..0., i32 -1385703664, i32 439628190
  br label %.backedge

41:                                               ; preds = %8
  %42 = sext i32 %.040 to i64
  %43 = getelementptr inbounds [250000 x i32], [250000 x i32]* %4, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  %46 = select i1 %45, i32 -575928656, i32 -1337618358
  br label %.backedge

47:                                               ; preds = %8
  %48 = shl nsw i32 %.040, 1
  br label %.backedge

49:                                               ; preds = %8
  %50 = icmp slt i32 %.038, 250000
  %51 = select i1 %50, i32 -460108490, i32 -1086912468
  br label %.backedge

52:                                               ; preds = %8
  %53 = sext i32 %.038 to i64
  %54 = getelementptr inbounds [250000 x i32], [250000 x i32]* %4, i64 0, i64 %53
  store i32 0, i32* %54, align 4
  br label %.backedge

55:                                               ; preds = %8
  %56 = add i32 %.038, %.040
  br label %.backedge

57:                                               ; preds = %8
  br label %.backedge

58:                                               ; preds = %8
  br label %.backedge

59:                                               ; preds = %8
  %60 = load i32, i32* @x, align 4
  %61 = load i32, i32* @y, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 588535514, i32 1000768620
  br label %.backedge

69:                                               ; preds = %8
  %.neg47 = add i32 %.040, 1
  %70 = load i32, i32* @x, align 4
  %71 = load i32, i32* @y, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -1452019114, i32 1000768620
  br label %.backedge

79:                                               ; preds = %8
  br label %.backedge

80:                                               ; preds = %8
  br label %.backedge

81:                                               ; preds = %8
  %82 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %5)
  %83 = load i32, i32* %5, align 4
  %84 = icmp eq i32 %83, 0
  %85 = select i1 %84, i32 -1609705445, i32 -1126184660
  br label %.backedge

86:                                               ; preds = %8
  %87 = load i32, i32* @x, align 4
  %88 = load i32, i32* @y, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 1034210927, i32 -1706064145
  br label %.backedge

96:                                               ; preds = %8
  %97 = load i32, i32* @x, align 4
  %98 = load i32, i32* @y, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 -1277218856, i32 -1706064145
  br label %.backedge

106:                                              ; preds = %8
  br label %.backedge

107:                                              ; preds = %8
  %108 = load i32, i32* @x, align 4
  %109 = load i32, i32* @y, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -1467948903, i32 1916863114
  br label %.backedge

117:                                              ; preds = %8
  %118 = load i32, i32* %5, align 4
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  store i1 %120, i1* %2, align 1
  %121 = load i32, i32* @x, align 4
  %122 = load i32, i32* @y, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 1964825933, i32 1916863114
  br label %.backedge

130:                                              ; preds = %8
  %.0..0..0.28 = load volatile i1, i1* %2, align 1
  %131 = select i1 %.0..0..0.28, i32 993505775, i32 -269930946
  br label %.backedge

132:                                              ; preds = %8
  %133 = load i32, i32* @x, align 4
  %134 = load i32, i32* @y, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 -112664348, i32 699768327
  br label %.backedge

142:                                              ; preds = %8
  %143 = load i32, i32* %5, align 4
  %144 = add i32 %143, 1
  %145 = load i32, i32* @x, align 4
  %146 = load i32, i32* @y, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 -833437399, i32 699768327
  br label %.backedge

154:                                              ; preds = %8
  br label %.backedge

155:                                              ; preds = %8
  %156 = load i32, i32* %5, align 4
  %157 = icmp eq i32 %156, 1
  %158 = select i1 %157, i32 1355026743, i32 1600251615
  br label %.backedge

159:                                              ; preds = %8
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str, i64 0, i64 0))
  br label %.backedge

160:                                              ; preds = %8
  %161 = load i32, i32* %5, align 4
  %162 = add i32 %161, 2
  br label %.backedge

163:                                              ; preds = %8
  br label %.backedge

164:                                              ; preds = %8
  %165 = load i32, i32* @x, align 4
  %166 = load i32, i32* @y, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 1447700937, i32 949370780
  br label %.backedge

174:                                              ; preds = %8
  %175 = load i32, i32* %5, align 4
  %176 = shl nsw i32 %175, 1
  %177 = load i32, i32* @x, align 4
  %178 = load i32, i32* @y, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 -1686813147, i32 949370780
  br label %.backedge

186:                                              ; preds = %8
  br label %.backedge

187:                                              ; preds = %8
  %188 = load i32, i32* @x, align 4
  %189 = load i32, i32* @y, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 -1953975503, i32 854295772
  br label %.backedge

197:                                              ; preds = %8
  %198 = icmp sle i32 %.030, %.032
  store i1 %198, i1* %1, align 1
  %199 = load i32, i32* @x, align 4
  %200 = load i32, i32* @y, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 947216180, i32 854295772
  br label %.backedge

208:                                              ; preds = %8
  %.0..0..0.29 = load volatile i1, i1* %1, align 1
  %209 = select i1 %.0..0..0.29, i32 1232007079, i32 2009189887
  br label %.backedge

210:                                              ; preds = %8
  %211 = sext i32 %.030 to i64
  %212 = getelementptr inbounds [250000 x i32], [250000 x i32]* %4, i64 0, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 1
  %215 = select i1 %214, i32 -201610859, i32 468112237
  br label %.backedge

216:                                              ; preds = %8
  %217 = load i32, i32* @x, align 4
  %218 = load i32, i32* @y, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 -1945193899, i32 1929697459
  br label %.backedge

226:                                              ; preds = %8
  %227 = add i32 %.036, 1
  %228 = load i32, i32* @x, align 4
  %229 = load i32, i32* @y, align 4
  %230 = add i32 %228, -1
  %231 = mul i32 %230, %228
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %234, %233
  %236 = select i1 %235, i32 -1674784861, i32 1929697459
  br label %.backedge

237:                                              ; preds = %8
  br label %.backedge

238:                                              ; preds = %8
  %239 = load i32, i32* @x, align 4
  %240 = load i32, i32* @y, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 1615542894, i32 386628674
  br label %.backedge

248:                                              ; preds = %8
  %249 = load i32, i32* @x, align 4
  %250 = load i32, i32* @y, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 -565635186, i32 386628674
  br label %.backedge

258:                                              ; preds = %8
  br label %.backedge

259:                                              ; preds = %8
  %260 = load i32, i32* @x, align 4
  %261 = load i32, i32* @y, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 -1578555411, i32 1126101378
  br label %.backedge

269:                                              ; preds = %8
  %270 = add i32 %.030, 2
  %271 = load i32, i32* @x, align 4
  %272 = load i32, i32* @y, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 -339777386, i32 1126101378
  br label %.backedge

280:                                              ; preds = %8
  br label %.backedge

281:                                              ; preds = %8
  %282 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %.036)
  br label %.backedge

283:                                              ; preds = %8
  ret i32 0

284:                                              ; preds = %8
  br label %.backedge

285:                                              ; preds = %8
  %286 = add i32 %.040, 1
  br label %.backedge

287:                                              ; preds = %8
  br label %.backedge

288:                                              ; preds = %8
  br label %.backedge

289:                                              ; preds = %8
  %290 = load i32, i32* %5, align 4
  %291 = add i32 %290, 1
  br label %.backedge

292:                                              ; preds = %8
  %293 = load i32, i32* %5, align 4
  %294 = shl nsw i32 %293, 1
  br label %.backedge

295:                                              ; preds = %8
  br label %.backedge

296:                                              ; preds = %8
  %.neg46 = add i32 %.036, 1
  br label %.backedge

297:                                              ; preds = %8
  br label %.backedge

298:                                              ; preds = %8
  %.neg = add i32 %.030, 2
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
