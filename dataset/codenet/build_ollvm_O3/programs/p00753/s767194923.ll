; ModuleID = 'build_ollvm/programs/p00753/s767194923.ll'
source_filename = "Project_CodeNet_C++1400/p00753/s767194923.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s767194923.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  br label %9

9:                                                ; preds = %.backedge, %0
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i8* [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.0 = phi i32 [ -769588626, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -769588626, label %10
    i32 -1359660773, label %15
    i32 -511287894, label %16
    i32 -2118005746, label %26
    i32 -794037095, label %29
    i32 867448307, label %32
    i32 -1545215049, label %42
    i32 -334262961, label %53
    i32 1933507776, label %54
    i32 -1557284588, label %56
    i32 253411165, label %62
    i32 -1755268010, label %72
    i32 1667847408, label %86
    i32 -1969401922, label %88
    i32 879625136, label %89
    i32 338577187, label %99
    i32 -1494346627, label %112
    i32 239329889, label %114
    i32 -1296759273, label %118
    i32 -970174231, label %120
    i32 368921362, label %121
    i32 -1088254632, label %122
    i32 -1734565319, label %124
    i32 -1534374956, label %134
    i32 -1405288080, label %144
    i32 -2097419333, label %145
    i32 -130329052, label %155
    i32 1766678488, label %167
    i32 -805973507, label %169
    i32 -105328040, label %175
    i32 -1980733723, label %176
    i32 -2123112512, label %177
    i32 1633462533, label %179
    i32 -629947984, label %180
    i32 -680787467, label %184
    i32 1031531434, label %187
    i32 -775444996, label %188
    i32 -1527098951, label %190
    i32 1249926970, label %200
    i32 1150632883, label %215
    i32 1277359541, label %217
    i32 -1602563737, label %227
    i32 135548750, label %241
    i32 1438116039, label %243
    i32 -1496336765, label %244
    i32 -303400574, label %249
    i32 1362454909, label %259
    i32 2146581447, label %272
    i32 614105204, label %273
    i32 -1472997039, label %274
    i32 759983350, label %275
    i32 -129359145, label %276
    i32 -928988854, label %278
    i32 1612369862, label %288
    i32 -2057732205, label %298
    i32 57931250, label %299
    i32 -1107905740, label %303
    i32 -411863974, label %309
    i32 -1840735655, label %310
    i32 -1937455086, label %320
    i32 -801932220, label %330
    i32 401467147, label %331
    i32 2113203985, label %341
    i32 1250911660, label %351
    i32 554592010, label %352
    i32 -660418064, label %356
    i32 -134012823, label %366
    i32 1401134858, label %376
    i32 -672588071, label %377
    i32 -1651451714, label %378
    i32 1766498474, label %379
    i32 871698119, label %380
    i32 1240544069, label %381
    i32 1436925179, label %382
    i32 -804771490, label %386
    i32 -1899651319, label %387
    i32 2132688154, label %391
    i32 -707553125, label %392
    i32 -154951231, label %393
    i32 -1227782567, label %395
  ]

.backedge:                                        ; preds = %9, %395, %393, %392, %391, %387, %386, %382, %381, %380, %379, %378, %377, %366, %356, %352, %351, %341, %331, %330, %320, %310, %309, %303, %299, %298, %288, %278, %276, %275, %274, %273, %272, %259, %249, %244, %243, %241, %227, %217, %215, %200, %190, %188, %187, %184, %180, %179, %177, %176, %175, %169, %167, %155, %145, %144, %134, %124, %122, %121, %120, %118, %114, %112, %99, %89, %88, %86, %72, %62, %56, %54, %53, %42, %32, %29, %26, %16, %15, %10
  %.081.be = phi i32 [ %.081, %9 ], [ %.081, %395 ], [ %.081, %393 ], [ %.081, %392 ], [ %.081, %391 ], [ %.081, %387 ], [ %.081, %386 ], [ %.081, %382 ], [ %.081, %381 ], [ %.081, %380 ], [ %.081, %379 ], [ %.081, %378 ], [ %.081, %377 ], [ %.081, %366 ], [ %.081, %356 ], [ %.081, %352 ], [ %.081, %351 ], [ %.081, %341 ], [ %.081, %331 ], [ %.081, %330 ], [ %.081, %320 ], [ %.081, %310 ], [ %.081, %309 ], [ %.081, %303 ], [ %.081, %299 ], [ %.081, %298 ], [ %.081, %288 ], [ %.081, %278 ], [ %.081, %276 ], [ %.081, %275 ], [ %.081, %274 ], [ %.081, %273 ], [ %.081, %272 ], [ %.081, %259 ], [ %.081, %249 ], [ %.081, %244 ], [ %.081, %243 ], [ %.081, %241 ], [ %.081, %227 ], [ %.081, %217 ], [ %.081, %215 ], [ %.081, %200 ], [ %.081, %190 ], [ %.081, %188 ], [ %.081, %187 ], [ %.081, %184 ], [ %.081, %180 ], [ %.081, %179 ], [ %.081, %177 ], [ %.081, %176 ], [ %.neg89, %175 ], [ %.081, %169 ], [ %.081, %167 ], [ %.081, %155 ], [ %.081, %145 ], [ %.081, %144 ], [ %.081, %134 ], [ %.081, %124 ], [ %.081, %122 ], [ %.081, %121 ], [ %.081, %120 ], [ %.081, %118 ], [ %.081, %114 ], [ %.081, %112 ], [ %.081, %99 ], [ %.081, %89 ], [ %.081, %88 ], [ %.081, %86 ], [ %.081, %72 ], [ %.081, %62 ], [ %.081, %56 ], [ %.081, %54 ], [ %.081, %53 ], [ %.081, %42 ], [ %.081, %32 ], [ %.081, %29 ], [ %.081, %26 ], [ %.081, %16 ], [ %.081, %15 ], [ 0, %10 ]
  %.079.be = phi i32 [ %.079, %9 ], [ %.079, %395 ], [ %.079, %393 ], [ %.079, %392 ], [ %.079, %391 ], [ %.079, %387 ], [ %.079, %386 ], [ %.079, %382 ], [ %.079, %381 ], [ %.079, %380 ], [ %.079, %379 ], [ %.079, %378 ], [ %.079, %377 ], [ %.079, %366 ], [ %.079, %356 ], [ %.079, %352 ], [ %.079, %351 ], [ %.079, %341 ], [ %.079, %331 ], [ %.079, %330 ], [ %.079, %320 ], [ %.079, %310 ], [ %.neg84, %309 ], [ %.079, %303 ], [ %.079, %299 ], [ %.079, %298 ], [ %.079, %288 ], [ %.079, %278 ], [ %.079, %276 ], [ %.079, %275 ], [ %.079, %274 ], [ %.079, %273 ], [ %.079, %272 ], [ %.079, %259 ], [ %.079, %249 ], [ %.079, %244 ], [ %.079, %243 ], [ %.079, %241 ], [ %.079, %227 ], [ %.079, %217 ], [ %.079, %215 ], [ %.079, %200 ], [ %.079, %190 ], [ %.079, %188 ], [ %.079, %187 ], [ %.079, %184 ], [ %.079, %180 ], [ %.079, %179 ], [ %.079, %177 ], [ %.079, %176 ], [ %.079, %175 ], [ %.079, %169 ], [ %.079, %167 ], [ %.079, %155 ], [ %.079, %145 ], [ %.079, %144 ], [ %.079, %134 ], [ %.079, %124 ], [ %.079, %122 ], [ %.079, %121 ], [ %.079, %120 ], [ %.079, %118 ], [ %.079, %114 ], [ %.079, %112 ], [ %.079, %99 ], [ %.079, %89 ], [ %.079, %88 ], [ %.079, %86 ], [ %.079, %72 ], [ %.079, %62 ], [ %.079, %56 ], [ %.079, %54 ], [ %.079, %53 ], [ %.079, %42 ], [ %.079, %32 ], [ %.079, %29 ], [ %.079, %26 ], [ %.079, %16 ], [ %.079, %15 ], [ 0, %10 ]
  %.077.be = phi i8* [ %.077, %9 ], [ %.077, %395 ], [ %.077, %393 ], [ %.077, %392 ], [ %.077, %391 ], [ %.077, %387 ], [ %.077, %386 ], [ %.077, %382 ], [ %.077, %381 ], [ %.077, %380 ], [ %.077, %379 ], [ %.077, %378 ], [ %.077, %377 ], [ %.077, %366 ], [ %.077, %356 ], [ %.077, %352 ], [ %.077, %351 ], [ %.077, %341 ], [ %.077, %331 ], [ %.077, %330 ], [ %.077, %320 ], [ %.077, %310 ], [ %.077, %309 ], [ %.077, %303 ], [ %.077, %299 ], [ %.077, %298 ], [ %.077, %288 ], [ %.077, %278 ], [ %.077, %276 ], [ %.077, %275 ], [ %.077, %274 ], [ %.077, %273 ], [ %.077, %272 ], [ %.077, %259 ], [ %.077, %249 ], [ %.077, %244 ], [ %.077, %243 ], [ %.077, %241 ], [ %.077, %227 ], [ %.077, %217 ], [ %.077, %215 ], [ %.077, %200 ], [ %.077, %190 ], [ %.077, %188 ], [ %.077, %187 ], [ %.077, %184 ], [ %.077, %180 ], [ %.077, %179 ], [ %.077, %177 ], [ %.077, %176 ], [ %.077, %175 ], [ %.077, %169 ], [ %.077, %167 ], [ %.077, %155 ], [ %.077, %145 ], [ %.077, %144 ], [ %.077, %134 ], [ %.077, %124 ], [ %.077, %122 ], [ %.077, %121 ], [ %.077, %120 ], [ %.077, %118 ], [ %.077, %114 ], [ %.077, %112 ], [ %.077, %99 ], [ %.077, %89 ], [ %.077, %88 ], [ %.077, %86 ], [ %.077, %72 ], [ %.077, %62 ], [ %.077, %56 ], [ %.077, %54 ], [ %.077, %53 ], [ %.077, %42 ], [ %.077, %32 ], [ %.077, %29 ], [ %.077, %26 ], [ %20, %16 ], [ %.077, %15 ], [ %.077, %10 ]
  %.075.be = phi i32 [ %.075, %9 ], [ %.075, %395 ], [ %.075, %393 ], [ %.075, %392 ], [ %.075, %391 ], [ %.075, %387 ], [ %.075, %386 ], [ %.075, %382 ], [ %.075, %381 ], [ %.075, %380 ], [ %.075, %379 ], [ %.075, %378 ], [ %.neg, %377 ], [ %.075, %366 ], [ %.075, %356 ], [ %.075, %352 ], [ %.075, %351 ], [ %.075, %341 ], [ %.075, %331 ], [ %.075, %330 ], [ %.075, %320 ], [ %.075, %310 ], [ %.075, %309 ], [ %.075, %303 ], [ %.075, %299 ], [ %.075, %298 ], [ %.075, %288 ], [ %.075, %278 ], [ %.075, %276 ], [ %.075, %275 ], [ %.075, %274 ], [ %.075, %273 ], [ %.075, %272 ], [ %.075, %259 ], [ %.075, %249 ], [ %.075, %244 ], [ %.075, %243 ], [ %.075, %241 ], [ %.075, %227 ], [ %.075, %217 ], [ %.075, %215 ], [ %.075, %200 ], [ %.075, %190 ], [ %.075, %188 ], [ %.075, %187 ], [ %.075, %184 ], [ %.075, %180 ], [ %.075, %179 ], [ %.075, %177 ], [ %.075, %176 ], [ %.075, %175 ], [ %.075, %169 ], [ %.075, %167 ], [ %.075, %155 ], [ %.075, %145 ], [ %.075, %144 ], [ %.075, %134 ], [ %.075, %124 ], [ %.075, %122 ], [ %.075, %121 ], [ %.075, %120 ], [ %.075, %118 ], [ %.075, %114 ], [ %.075, %112 ], [ %.075, %99 ], [ %.075, %89 ], [ %.075, %88 ], [ %.075, %86 ], [ %.075, %72 ], [ %.075, %62 ], [ %.075, %56 ], [ %.075, %54 ], [ %.075, %53 ], [ %43, %42 ], [ %.075, %32 ], [ %.075, %29 ], [ %.075, %26 ], [ 1, %16 ], [ %.075, %15 ], [ %.075, %10 ]
  %.073.be = phi i32 [ %.073, %9 ], [ %.073, %395 ], [ %.073, %393 ], [ %.073, %392 ], [ %.073, %391 ], [ %.073, %387 ], [ %.073, %386 ], [ %.073, %382 ], [ %.073, %381 ], [ %.073, %380 ], [ %.073, %379 ], [ %.073, %378 ], [ %.073, %377 ], [ %.073, %366 ], [ %.073, %356 ], [ %.073, %352 ], [ %.073, %351 ], [ %.073, %341 ], [ %.073, %331 ], [ %.073, %330 ], [ %.073, %320 ], [ %.073, %310 ], [ %.073, %309 ], [ %.073, %303 ], [ %.073, %299 ], [ %.073, %298 ], [ %.073, %288 ], [ %.073, %278 ], [ %.073, %276 ], [ %.073, %275 ], [ %.073, %274 ], [ %.073, %273 ], [ %.073, %272 ], [ %.073, %259 ], [ %.073, %249 ], [ %.073, %244 ], [ %.073, %243 ], [ %.073, %241 ], [ %.073, %227 ], [ %.073, %217 ], [ %.073, %215 ], [ %.073, %200 ], [ %.073, %190 ], [ %.073, %188 ], [ %.073, %187 ], [ %.073, %184 ], [ %.073, %180 ], [ %.073, %179 ], [ %.073, %177 ], [ %.073, %176 ], [ %.073, %175 ], [ %.073, %169 ], [ %.073, %167 ], [ %.073, %155 ], [ %.073, %145 ], [ %.073, %144 ], [ %.073, %134 ], [ %.073, %124 ], [ %123, %122 ], [ %.073, %121 ], [ %.073, %120 ], [ %.073, %118 ], [ %.073, %114 ], [ %.073, %112 ], [ %.073, %99 ], [ %.073, %89 ], [ %.073, %88 ], [ %.073, %86 ], [ %.073, %72 ], [ %.073, %62 ], [ %.073, %56 ], [ 2, %54 ], [ %.073, %53 ], [ %.073, %42 ], [ %.073, %32 ], [ %.073, %29 ], [ %.073, %26 ], [ %.073, %16 ], [ %.073, %15 ], [ %.073, %10 ]
  %.071.be = phi i32 [ %.071, %9 ], [ %.071, %395 ], [ %.071, %393 ], [ %.071, %392 ], [ %.071, %391 ], [ %.071, %387 ], [ %.071, %386 ], [ %.071, %382 ], [ %.071, %381 ], [ %.071, %380 ], [ %.071, %379 ], [ %.071, %378 ], [ %.071, %377 ], [ %.071, %366 ], [ %.071, %356 ], [ %.071, %352 ], [ %.071, %351 ], [ %.071, %341 ], [ %.071, %331 ], [ %.071, %330 ], [ %.071, %320 ], [ %.071, %310 ], [ %.071, %309 ], [ %.071, %303 ], [ %.071, %299 ], [ %.071, %298 ], [ %.071, %288 ], [ %.071, %278 ], [ %.071, %276 ], [ %.071, %275 ], [ %.071, %274 ], [ %.071, %273 ], [ %.071, %272 ], [ %.071, %259 ], [ %.071, %249 ], [ %.071, %244 ], [ %.071, %243 ], [ %.071, %241 ], [ %.071, %227 ], [ %.071, %217 ], [ %.071, %215 ], [ %.071, %200 ], [ %.071, %190 ], [ %.071, %188 ], [ %.071, %187 ], [ %.071, %184 ], [ %.071, %180 ], [ %.071, %179 ], [ %.071, %177 ], [ %.071, %176 ], [ %.071, %175 ], [ %.071, %169 ], [ %.071, %167 ], [ %.071, %155 ], [ %.071, %145 ], [ %.071, %144 ], [ %.071, %134 ], [ %.071, %124 ], [ %.071, %122 ], [ %.071, %121 ], [ %.071, %120 ], [ %119, %118 ], [ %.071, %114 ], [ %.071, %112 ], [ %.071, %99 ], [ %.071, %89 ], [ 2, %88 ], [ %.071, %86 ], [ %.071, %72 ], [ %.071, %62 ], [ %.071, %56 ], [ %.071, %54 ], [ %.071, %53 ], [ %.071, %42 ], [ %.071, %32 ], [ %.071, %29 ], [ %.071, %26 ], [ %.071, %16 ], [ %.071, %15 ], [ %.071, %10 ]
  %.069.be = phi i32 [ %.069, %9 ], [ %.069, %395 ], [ %.069, %393 ], [ %.069, %392 ], [ %.069, %391 ], [ %.069, %387 ], [ %.069, %386 ], [ %.069, %382 ], [ %.069, %381 ], [ 1, %380 ], [ %.069, %379 ], [ %.069, %378 ], [ %.069, %377 ], [ %.069, %366 ], [ %.069, %356 ], [ %.069, %352 ], [ %.069, %351 ], [ %.069, %341 ], [ %.069, %331 ], [ %.069, %330 ], [ %.069, %320 ], [ %.069, %310 ], [ %.069, %309 ], [ %.069, %303 ], [ %.069, %299 ], [ %.069, %298 ], [ %.069, %288 ], [ %.069, %278 ], [ %.069, %276 ], [ %.069, %275 ], [ %.069, %274 ], [ %.069, %273 ], [ %.069, %272 ], [ %.069, %259 ], [ %.069, %249 ], [ %.069, %244 ], [ %.069, %243 ], [ %.069, %241 ], [ %.069, %227 ], [ %.069, %217 ], [ %.069, %215 ], [ %.069, %200 ], [ %.069, %190 ], [ %.069, %188 ], [ %.069, %187 ], [ %.069, %184 ], [ %.069, %180 ], [ %.069, %179 ], [ %178, %177 ], [ %.069, %176 ], [ %.069, %175 ], [ %.069, %169 ], [ %.069, %167 ], [ %.069, %155 ], [ %.069, %145 ], [ %.069, %144 ], [ 1, %134 ], [ %.069, %124 ], [ %.069, %122 ], [ %.069, %121 ], [ %.069, %120 ], [ %.069, %118 ], [ %.069, %114 ], [ %.069, %112 ], [ %.069, %99 ], [ %.069, %89 ], [ %.069, %88 ], [ %.069, %86 ], [ %.069, %72 ], [ %.069, %62 ], [ %.069, %56 ], [ %.069, %54 ], [ %.069, %53 ], [ %.069, %42 ], [ %.069, %32 ], [ %.069, %29 ], [ %.069, %26 ], [ %.069, %16 ], [ %.069, %15 ], [ %.069, %10 ]
  %.067.be = phi i32 [ %.067, %9 ], [ %.067, %395 ], [ %.067, %393 ], [ %.067, %392 ], [ %.067, %391 ], [ %.067, %387 ], [ %.067, %386 ], [ %.067, %382 ], [ %.067, %381 ], [ %.067, %380 ], [ %.067, %379 ], [ %.067, %378 ], [ %.067, %377 ], [ %.067, %366 ], [ %.067, %356 ], [ %.067, %352 ], [ %.067, %351 ], [ %.067, %341 ], [ %.067, %331 ], [ %.067, %330 ], [ %.067, %320 ], [ %.067, %310 ], [ %.067, %309 ], [ %.067, %303 ], [ %.067, %299 ], [ %.067, %298 ], [ %.067, %288 ], [ %.067, %278 ], [ %.067, %276 ], [ %.067, %275 ], [ %.067, %274 ], [ %.067, %273 ], [ %.067, %272 ], [ %.067, %259 ], [ %.067, %249 ], [ %.067, %244 ], [ %.067, %243 ], [ %.067, %241 ], [ %.067, %227 ], [ %.067, %217 ], [ %.067, %215 ], [ %.067, %200 ], [ %.067, %190 ], [ %.067, %188 ], [ %.neg87, %187 ], [ %.067, %184 ], [ %.067, %180 ], [ 1, %179 ], [ %.067, %177 ], [ %.067, %176 ], [ %.067, %175 ], [ %.067, %169 ], [ %.067, %167 ], [ %.067, %155 ], [ %.067, %145 ], [ %.067, %144 ], [ %.067, %134 ], [ %.067, %124 ], [ %.067, %122 ], [ %.067, %121 ], [ %.067, %120 ], [ %.067, %118 ], [ %.067, %114 ], [ %.067, %112 ], [ %.067, %99 ], [ %.067, %89 ], [ %.067, %88 ], [ %.067, %86 ], [ %.067, %72 ], [ %.067, %62 ], [ %.067, %56 ], [ %.067, %54 ], [ %.067, %53 ], [ %.067, %42 ], [ %.067, %32 ], [ %.067, %29 ], [ %.067, %26 ], [ %.067, %16 ], [ %.067, %15 ], [ %.067, %10 ]
  %.065.be = phi i32 [ %.065, %9 ], [ %.065, %395 ], [ %.065, %393 ], [ %.065, %392 ], [ %.065, %391 ], [ %.065, %387 ], [ %.065, %386 ], [ %.065, %382 ], [ %.065, %381 ], [ %.065, %380 ], [ %.065, %379 ], [ %.065, %378 ], [ %.065, %377 ], [ %.065, %366 ], [ %.065, %356 ], [ %.065, %352 ], [ %.065, %351 ], [ %.065, %341 ], [ %.065, %331 ], [ %.065, %330 ], [ %.065, %320 ], [ %.065, %310 ], [ %.065, %309 ], [ %.065, %303 ], [ %.065, %299 ], [ %.065, %298 ], [ %.065, %288 ], [ %.065, %278 ], [ %277, %276 ], [ %.065, %275 ], [ %.065, %274 ], [ %.065, %273 ], [ %.065, %272 ], [ %.065, %259 ], [ %.065, %249 ], [ %.065, %244 ], [ %.065, %243 ], [ %.065, %241 ], [ %.065, %227 ], [ %.065, %217 ], [ %.065, %215 ], [ %.065, %200 ], [ %.065, %190 ], [ 2, %188 ], [ %.065, %187 ], [ %.065, %184 ], [ %.065, %180 ], [ %.065, %179 ], [ %.065, %177 ], [ %.065, %176 ], [ %.065, %175 ], [ %.065, %169 ], [ %.065, %167 ], [ %.065, %155 ], [ %.065, %145 ], [ %.065, %144 ], [ %.065, %134 ], [ %.065, %124 ], [ %.065, %122 ], [ %.065, %121 ], [ %.065, %120 ], [ %.065, %118 ], [ %.065, %114 ], [ %.065, %112 ], [ %.065, %99 ], [ %.065, %89 ], [ %.065, %88 ], [ %.065, %86 ], [ %.065, %72 ], [ %.065, %62 ], [ %.065, %56 ], [ %.065, %54 ], [ %.065, %53 ], [ %.065, %42 ], [ %.065, %32 ], [ %.065, %29 ], [ %.065, %26 ], [ %.065, %16 ], [ %.065, %15 ], [ %.065, %10 ]
  %.063.be = phi i32 [ %.063, %9 ], [ %.063, %395 ], [ %.063, %393 ], [ %.063, %392 ], [ %.063, %391 ], [ %.063, %387 ], [ %.063, %386 ], [ %.063, %382 ], [ %.063, %381 ], [ %.063, %380 ], [ %.063, %379 ], [ %.063, %378 ], [ %.063, %377 ], [ %.063, %366 ], [ %.063, %356 ], [ %.063, %352 ], [ %.063, %351 ], [ %.063, %341 ], [ %.063, %331 ], [ %.063, %330 ], [ %.063, %320 ], [ %.063, %310 ], [ %.063, %309 ], [ %.063, %303 ], [ %.063, %299 ], [ %.063, %298 ], [ %.063, %288 ], [ %.063, %278 ], [ %.063, %276 ], [ %.063, %275 ], [ %.063, %274 ], [ %.neg85, %273 ], [ %.063, %272 ], [ %.063, %259 ], [ %.063, %249 ], [ %.063, %244 ], [ 2, %243 ], [ %.063, %241 ], [ %.063, %227 ], [ %.063, %217 ], [ %.063, %215 ], [ %.063, %200 ], [ %.063, %190 ], [ %.063, %188 ], [ %.063, %187 ], [ %.063, %184 ], [ %.063, %180 ], [ %.063, %179 ], [ %.063, %177 ], [ %.063, %176 ], [ %.063, %175 ], [ %.063, %169 ], [ %.063, %167 ], [ %.063, %155 ], [ %.063, %145 ], [ %.063, %144 ], [ %.063, %134 ], [ %.063, %124 ], [ %.063, %122 ], [ %.063, %121 ], [ %.063, %120 ], [ %.063, %118 ], [ %.063, %114 ], [ %.063, %112 ], [ %.063, %99 ], [ %.063, %89 ], [ %.063, %88 ], [ %.063, %86 ], [ %.063, %72 ], [ %.063, %62 ], [ %.063, %56 ], [ %.063, %54 ], [ %.063, %53 ], [ %.063, %42 ], [ %.063, %32 ], [ %.063, %29 ], [ %.063, %26 ], [ %.063, %16 ], [ %.063, %15 ], [ %.063, %10 ]
  %.061.be = phi i32 [ %.061, %9 ], [ %.061, %395 ], [ %394, %393 ], [ %.061, %392 ], [ 1, %391 ], [ %.061, %387 ], [ %.061, %386 ], [ %.061, %382 ], [ %.061, %381 ], [ %.061, %380 ], [ %.061, %379 ], [ %.061, %378 ], [ %.061, %377 ], [ %.061, %366 ], [ %.061, %356 ], [ %.061, %352 ], [ %.061, %351 ], [ %.neg83, %341 ], [ %.061, %331 ], [ %.061, %330 ], [ %.061, %320 ], [ %.061, %310 ], [ %.061, %309 ], [ %.061, %303 ], [ %.061, %299 ], [ %.061, %298 ], [ 1, %288 ], [ %.061, %278 ], [ %.061, %276 ], [ %.061, %275 ], [ %.061, %274 ], [ %.061, %273 ], [ %.061, %272 ], [ %.061, %259 ], [ %.061, %249 ], [ %.061, %244 ], [ %.061, %243 ], [ %.061, %241 ], [ %.061, %227 ], [ %.061, %217 ], [ %.061, %215 ], [ %.061, %200 ], [ %.061, %190 ], [ %.061, %188 ], [ %.061, %187 ], [ %.061, %184 ], [ %.061, %180 ], [ %.061, %179 ], [ %.061, %177 ], [ %.061, %176 ], [ %.061, %175 ], [ %.061, %169 ], [ %.061, %167 ], [ %.061, %155 ], [ %.061, %145 ], [ %.061, %144 ], [ %.061, %134 ], [ %.061, %124 ], [ %.061, %122 ], [ %.061, %121 ], [ %.061, %120 ], [ %.061, %118 ], [ %.061, %114 ], [ %.061, %112 ], [ %.061, %99 ], [ %.061, %89 ], [ %.061, %88 ], [ %.061, %86 ], [ %.061, %72 ], [ %.061, %62 ], [ %.061, %56 ], [ %.061, %54 ], [ %.061, %53 ], [ %.061, %42 ], [ %.061, %32 ], [ %.061, %29 ], [ %.061, %26 ], [ %.061, %16 ], [ %.061, %15 ], [ %.061, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ -134012823, %395 ], [ 2113203985, %393 ], [ -1937455086, %392 ], [ 1612369862, %391 ], [ 1362454909, %387 ], [ -1602563737, %386 ], [ 1249926970, %382 ], [ -130329052, %381 ], [ -1534374956, %380 ], [ 338577187, %379 ], [ -1755268010, %378 ], [ -1545215049, %377 ], [ %375, %366 ], [ %365, %356 ], [ -769588626, %352 ], [ 57931250, %351 ], [ %350, %341 ], [ %340, %331 ], [ 401467147, %330 ], [ %329, %320 ], [ %319, %310 ], [ -1840735655, %309 ], [ %308, %303 ], [ %302, %299 ], [ 57931250, %298 ], [ %297, %288 ], [ %287, %278 ], [ -1527098951, %276 ], [ -129359145, %275 ], [ 759983350, %274 ], [ -1496336765, %273 ], [ 614105204, %272 ], [ %271, %259 ], [ %258, %249 ], [ %248, %244 ], [ -1496336765, %243 ], [ %242, %241 ], [ %240, %227 ], [ %226, %217 ], [ %216, %215 ], [ %214, %200 ], [ %199, %190 ], [ -1527098951, %188 ], [ -629947984, %187 ], [ 1031531434, %184 ], [ %183, %180 ], [ -629947984, %179 ], [ -2097419333, %177 ], [ -2123112512, %176 ], [ -1980733723, %175 ], [ %174, %169 ], [ %168, %167 ], [ %166, %155 ], [ %154, %145 ], [ -2097419333, %144 ], [ %143, %134 ], [ %133, %124 ], [ -1557284588, %122 ], [ -1088254632, %121 ], [ 368921362, %120 ], [ 879625136, %118 ], [ -1296759273, %114 ], [ %113, %112 ], [ %111, %99 ], [ %98, %89 ], [ 879625136, %88 ], [ %87, %86 ], [ %85, %72 ], [ %71, %62 ], [ %61, %56 ], [ -1557284588, %54 ], [ -2118005746, %53 ], [ %52, %42 ], [ %41, %32 ], [ 867448307, %29 ], [ %28, %26 ], [ -2118005746, %16 ], [ -660418064, %15 ], [ %14, %10 ]
  br label %9

10:                                               ; preds = %9
  store i32 0, i32* %8, align 4
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %12 = load i32, i32* %8, align 4
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 -1359660773, i32 -511287894
  br label %.backedge

15:                                               ; preds = %9
  br label %.backedge

16:                                               ; preds = %9
  %17 = load i32, i32* %8, align 4
  %18 = add i32 %17, 1
  %19 = zext i32 %18 to i64
  %20 = call i8* @llvm.stacksave()
  %21 = alloca i32, i64 %19, align 16
  store i32* %21, i32** %7, align 8
  %22 = load i32, i32* %8, align 4
  %.neg91.neg = shl i32 %22, 1
  %23 = or i32 %.neg91.neg, 1
  %24 = zext i32 %23 to i64
  %25 = alloca i32, i64 %24, align 16
  store i32* %25, i32** %6, align 8
  br label %.backedge

26:                                               ; preds = %9
  %27 = load i32, i32* %8, align 4
  %.not90 = icmp sgt i32 %.075, %27
  %28 = select i1 %.not90, i32 1933507776, i32 -794037095
  br label %.backedge

29:                                               ; preds = %9
  %30 = sext i32 %.075 to i64
  %.0..0..0.43 = load volatile i32*, i32** %7, align 8
  %31 = getelementptr inbounds i32, i32* %.0..0..0.43, i64 %30
  store i32 1, i32* %31, align 4
  br label %.backedge

32:                                               ; preds = %9
  %33 = load i32, i32* @x.1, align 4
  %34 = load i32, i32* @y.2, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 -1545215049, i32 -672588071
  br label %.backedge

42:                                               ; preds = %9
  %43 = add i32 %.075, 1
  %44 = load i32, i32* @x.1, align 4
  %45 = load i32, i32* @y.2, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 -334262961, i32 -672588071
  br label %.backedge

53:                                               ; preds = %9
  br label %.backedge

54:                                               ; preds = %9
  %.0..0..0.44 = load volatile i32*, i32** %7, align 8
  %55 = getelementptr inbounds i32, i32* %.0..0..0.44, i64 1
  store i32 0, i32* %55, align 4
  br label %.backedge

56:                                               ; preds = %9
  %57 = sitofp i32 %.073 to double
  %58 = load i32, i32* %8, align 4
  %59 = call double @_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 %58)
  %60 = fcmp oge double %59, %57
  %61 = select i1 %60, i32 253411165, i32 -1734565319
  br label %.backedge

62:                                               ; preds = %9
  %63 = load i32, i32* @x.1, align 4
  %64 = load i32, i32* @y.2, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -1755268010, i32 -1651451714
  br label %.backedge

72:                                               ; preds = %9
  %73 = sext i32 %.073 to i64
  %.0..0..0.45 = load volatile i32*, i32** %7, align 8
  %74 = getelementptr inbounds i32, i32* %.0..0..0.45, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 1
  store i1 %76, i1* %5, align 1
  %77 = load i32, i32* @x.1, align 4
  %78 = load i32, i32* @y.2, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 1667847408, i32 -1651451714
  br label %.backedge

86:                                               ; preds = %9
  %.0..0..0.56 = load volatile i1, i1* %5, align 1
  %87 = select i1 %.0..0..0.56, i32 -1969401922, i32 368921362
  br label %.backedge

88:                                               ; preds = %9
  br label %.backedge

89:                                               ; preds = %9
  %90 = load i32, i32* @x.1, align 4
  %91 = load i32, i32* @y.2, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 338577187, i32 1766498474
  br label %.backedge

99:                                               ; preds = %9
  %100 = mul nsw i32 %.071, %.073
  %101 = load i32, i32* %8, align 4
  %102 = icmp sle i32 %100, %101
  store i1 %102, i1* %4, align 1
  %103 = load i32, i32* @x.1, align 4
  %104 = load i32, i32* @y.2, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -1494346627, i32 1766498474
  br label %.backedge

112:                                              ; preds = %9
  %.0..0..0.57 = load volatile i1, i1* %4, align 1
  %113 = select i1 %.0..0..0.57, i32 239329889, i32 -970174231
  br label %.backedge

114:                                              ; preds = %9
  %115 = mul nsw i32 %.071, %.073
  %116 = sext i32 %115 to i64
  %.0..0..0.46 = load volatile i32*, i32** %7, align 8
  %117 = getelementptr inbounds i32, i32* %.0..0..0.46, i64 %116
  store i32 0, i32* %117, align 4
  br label %.backedge

118:                                              ; preds = %9
  %119 = add i32 %.071, 1
  br label %.backedge

120:                                              ; preds = %9
  br label %.backedge

121:                                              ; preds = %9
  br label %.backedge

122:                                              ; preds = %9
  %123 = add i32 %.073, 1
  br label %.backedge

124:                                              ; preds = %9
  %125 = load i32, i32* @x.1, align 4
  %126 = load i32, i32* @y.2, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 -1534374956, i32 871698119
  br label %.backedge

134:                                              ; preds = %9
  %135 = load i32, i32* @x.1, align 4
  %136 = load i32, i32* @y.2, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 -1405288080, i32 871698119
  br label %.backedge

144:                                              ; preds = %9
  br label %.backedge

145:                                              ; preds = %9
  %146 = load i32, i32* @x.1, align 4
  %147 = load i32, i32* @y.2, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -130329052, i32 1240544069
  br label %.backedge

155:                                              ; preds = %9
  %156 = load i32, i32* %8, align 4
  %157 = icmp sle i32 %.069, %156
  store i1 %157, i1* %3, align 1
  %158 = load i32, i32* @x.1, align 4
  %159 = load i32, i32* @y.2, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 1766678488, i32 1240544069
  br label %.backedge

167:                                              ; preds = %9
  %.0..0..0.58 = load volatile i1, i1* %3, align 1
  %168 = select i1 %.0..0..0.58, i32 -805973507, i32 1633462533
  br label %.backedge

169:                                              ; preds = %9
  %170 = sext i32 %.069 to i64
  %.0..0..0.47 = load volatile i32*, i32** %7, align 8
  %171 = getelementptr inbounds i32, i32* %.0..0..0.47, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = icmp eq i32 %172, 1
  %174 = select i1 %173, i32 -105328040, i32 -1980733723
  br label %.backedge

175:                                              ; preds = %9
  %.neg89 = add i32 %.081, 1
  br label %.backedge

176:                                              ; preds = %9
  br label %.backedge

177:                                              ; preds = %9
  %178 = add i32 %.069, 1
  br label %.backedge

179:                                              ; preds = %9
  br label %.backedge

180:                                              ; preds = %9
  %181 = load i32, i32* %8, align 4
  %182 = shl nsw i32 %181, 1
  %.not88 = icmp sgt i32 %.067, %182
  %183 = select i1 %.not88, i32 -775444996, i32 -680787467
  br label %.backedge

184:                                              ; preds = %9
  %185 = sext i32 %.067 to i64
  %.0..0..0.49 = load volatile i32*, i32** %6, align 8
  %186 = getelementptr inbounds i32, i32* %.0..0..0.49, i64 %185
  store i32 1, i32* %186, align 4
  br label %.backedge

187:                                              ; preds = %9
  %.neg87 = add i32 %.067, 1
  br label %.backedge

188:                                              ; preds = %9
  %.0..0..0.50 = load volatile i32*, i32** %6, align 8
  %189 = getelementptr inbounds i32, i32* %.0..0..0.50, i64 1
  store i32 0, i32* %189, align 4
  br label %.backedge

190:                                              ; preds = %9
  %191 = load i32, i32* @x.1, align 4
  %192 = load i32, i32* @y.2, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 1249926970, i32 1436925179
  br label %.backedge

200:                                              ; preds = %9
  %201 = sitofp i32 %.065 to double
  %202 = load i32, i32* %8, align 4
  %203 = shl nsw i32 %202, 1
  %204 = call double @_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 %203)
  %205 = fcmp oge double %204, %201
  store i1 %205, i1* %2, align 1
  %206 = load i32, i32* @x.1, align 4
  %207 = load i32, i32* @y.2, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 1150632883, i32 1436925179
  br label %.backedge

215:                                              ; preds = %9
  %.0..0..0.59 = load volatile i1, i1* %2, align 1
  %216 = select i1 %.0..0..0.59, i32 1277359541, i32 -928988854
  br label %.backedge

217:                                              ; preds = %9
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -1602563737, i32 -804771490
  br label %.backedge

227:                                              ; preds = %9
  %228 = sext i32 %.065 to i64
  %.0..0..0.51 = load volatile i32*, i32** %6, align 8
  %229 = getelementptr inbounds i32, i32* %.0..0..0.51, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, 1
  store i1 %231, i1* %1, align 1
  %232 = load i32, i32* @x.1, align 4
  %233 = load i32, i32* @y.2, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 135548750, i32 -804771490
  br label %.backedge

241:                                              ; preds = %9
  %.0..0..0.60 = load volatile i1, i1* %1, align 1
  %242 = select i1 %.0..0..0.60, i32 1438116039, i32 759983350
  br label %.backedge

243:                                              ; preds = %9
  br label %.backedge

244:                                              ; preds = %9
  %245 = mul nsw i32 %.063, %.065
  %246 = load i32, i32* %8, align 4
  %247 = shl nsw i32 %246, 1
  %.not86 = icmp sgt i32 %245, %247
  %248 = select i1 %.not86, i32 -1472997039, i32 -303400574
  br label %.backedge

249:                                              ; preds = %9
  %250 = load i32, i32* @x.1, align 4
  %251 = load i32, i32* @y.2, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 1362454909, i32 -1899651319
  br label %.backedge

259:                                              ; preds = %9
  %260 = mul nsw i32 %.063, %.065
  %261 = sext i32 %260 to i64
  %.0..0..0.52 = load volatile i32*, i32** %6, align 8
  %262 = getelementptr inbounds i32, i32* %.0..0..0.52, i64 %261
  store i32 0, i32* %262, align 4
  %263 = load i32, i32* @x.1, align 4
  %264 = load i32, i32* @y.2, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 2146581447, i32 -1899651319
  br label %.backedge

272:                                              ; preds = %9
  br label %.backedge

273:                                              ; preds = %9
  %.neg85 = add i32 %.063, 1
  br label %.backedge

274:                                              ; preds = %9
  br label %.backedge

275:                                              ; preds = %9
  br label %.backedge

276:                                              ; preds = %9
  %277 = add i32 %.065, 1
  br label %.backedge

278:                                              ; preds = %9
  %279 = load i32, i32* @x.1, align 4
  %280 = load i32, i32* @y.2, align 4
  %281 = add i32 %279, -1
  %282 = mul i32 %281, %279
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %285, %284
  %287 = select i1 %286, i32 1612369862, i32 2132688154
  br label %.backedge

288:                                              ; preds = %9
  %289 = load i32, i32* @x.1, align 4
  %290 = load i32, i32* @y.2, align 4
  %291 = add i32 %289, -1
  %292 = mul i32 %291, %289
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %295, %294
  %297 = select i1 %296, i32 -2057732205, i32 2132688154
  br label %.backedge

298:                                              ; preds = %9
  br label %.backedge

299:                                              ; preds = %9
  %300 = load i32, i32* %8, align 4
  %301 = shl nsw i32 %300, 1
  %.not = icmp sgt i32 %.061, %301
  %302 = select i1 %.not, i32 554592010, i32 -1107905740
  br label %.backedge

303:                                              ; preds = %9
  %304 = sext i32 %.061 to i64
  %.0..0..0.53 = load volatile i32*, i32** %6, align 8
  %305 = getelementptr inbounds i32, i32* %.0..0..0.53, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %306, 1
  %308 = select i1 %307, i32 -411863974, i32 -1840735655
  br label %.backedge

309:                                              ; preds = %9
  %.neg84 = add i32 %.079, 1
  br label %.backedge

310:                                              ; preds = %9
  %311 = load i32, i32* @x.1, align 4
  %312 = load i32, i32* @y.2, align 4
  %313 = add i32 %311, -1
  %314 = mul i32 %313, %311
  %315 = and i32 %314, 1
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %317, %316
  %319 = select i1 %318, i32 -1937455086, i32 -707553125
  br label %.backedge

320:                                              ; preds = %9
  %321 = load i32, i32* @x.1, align 4
  %322 = load i32, i32* @y.2, align 4
  %323 = add i32 %321, -1
  %324 = mul i32 %323, %321
  %325 = and i32 %324, 1
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %327, %326
  %329 = select i1 %328, i32 -801932220, i32 -707553125
  br label %.backedge

330:                                              ; preds = %9
  br label %.backedge

331:                                              ; preds = %9
  %332 = load i32, i32* @x.1, align 4
  %333 = load i32, i32* @y.2, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 2113203985, i32 -154951231
  br label %.backedge

341:                                              ; preds = %9
  %.neg83 = add i32 %.061, 1
  %342 = load i32, i32* @x.1, align 4
  %343 = load i32, i32* @y.2, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 1250911660, i32 -154951231
  br label %.backedge

351:                                              ; preds = %9
  br label %.backedge

352:                                              ; preds = %9
  %353 = sub i32 %.079, %.081
  %354 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %353)
  %355 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %354, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  call void @llvm.stackrestore(i8* %.077)
  br label %.backedge

356:                                              ; preds = %9
  %357 = load i32, i32* @x.1, align 4
  %358 = load i32, i32* @y.2, align 4
  %359 = add i32 %357, -1
  %360 = mul i32 %359, %357
  %361 = and i32 %360, 1
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %363, %362
  %365 = select i1 %364, i32 -134012823, i32 -1227782567
  br label %.backedge

366:                                              ; preds = %9
  %367 = load i32, i32* @x.1, align 4
  %368 = load i32, i32* @y.2, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 1401134858, i32 -1227782567
  br label %.backedge

376:                                              ; preds = %9
  ret i32 0

377:                                              ; preds = %9
  %.neg = add i32 %.075, 1
  br label %.backedge

378:                                              ; preds = %9
  %.0..0..0.48 = load volatile i32*, i32** %7, align 8
  br label %.backedge

379:                                              ; preds = %9
  br label %.backedge

380:                                              ; preds = %9
  br label %.backedge

381:                                              ; preds = %9
  br label %.backedge

382:                                              ; preds = %9
  %383 = load i32, i32* %8, align 4
  %384 = shl nsw i32 %383, 1
  %385 = call double @_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 %384)
  br label %.backedge

386:                                              ; preds = %9
  %.0..0..0.54 = load volatile i32*, i32** %6, align 8
  br label %.backedge

387:                                              ; preds = %9
  %388 = mul nsw i32 %.063, %.065
  %389 = sext i32 %388 to i64
  %.0..0..0.55 = load volatile i32*, i32** %6, align 8
  %390 = getelementptr inbounds i32, i32* %.0..0..0.55, i64 %389
  store i32 0, i32* %390, align 4
  br label %.backedge

391:                                              ; preds = %9
  br label %.backedge

392:                                              ; preds = %9
  br label %.backedge

393:                                              ; preds = %9
  %394 = add i32 %.061, 1
  br label %.backedge

395:                                              ; preds = %9
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 %0) local_unnamed_addr #6 comdat {
  %2 = sitofp i32 %0 to double
  %3 = tail call double @sqrt(double %2) #9
  ret double %3
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare double @sqrt(double) local_unnamed_addr #7

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s767194923.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { mustprogress nofree nosync nounwind readnone willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
