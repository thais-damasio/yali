; ModuleID = 'build_ollvm/programs/p04051/s269272534.ll'
source_filename = "Project_CodeNet_C++1400/p04051/s269272534.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_Z4readv = comdat any

$_Z4qpowii = comdat any

$_Z1Cii = comdat any

@n = local_unnamed_addr global i32 0, align 4
@a = local_unnamed_addr global [200010 x i32] zeroinitializer, align 16
@b = local_unnamed_addr global [200010 x i32] zeroinitializer, align 16
@f = local_unnamed_addr global [5010 x [5010 x i32]] zeroinitializer, align 16
@fac = local_unnamed_addr global [10020 x i32] zeroinitializer, align 16
@ifac = local_unnamed_addr global [10020 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = tail call i32 @_Z4readv()
  store i32 %2, i32* @n, align 4
  br label %3

3:                                                ; preds = %.backedge, %0
  %.064 = phi i32 [ 1, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.0 = phi i32 [ -2114752911, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -2114752911, label %4
    i32 -1810852214, label %7
    i32 -1086370317, label %17
    i32 -276332097, label %32
    i32 1921478336, label %33
    i32 268000294, label %35
    i32 2084869230, label %45
    i32 -165336307, label %55
    i32 268918043, label %56
    i32 1682009599, label %59
    i32 -749445438, label %71
    i32 163954196, label %73
    i32 -1394493055, label %74
    i32 -1052220289, label %77
    i32 1267360252, label %87
    i32 -290122897, label %97
    i32 -1898467988, label %98
    i32 -874233131, label %101
    i32 1702976275, label %118
    i32 -854116707, label %120
    i32 -1540912454, label %121
    i32 2111798667, label %123
    i32 -1644580568, label %124
    i32 1635603045, label %127
    i32 -200961654, label %137
    i32 1288862368, label %157
    i32 43695870, label %158
    i32 1264947174, label %159
    i32 2103298162, label %169
    i32 -1370825459, label %181
    i32 1083498026, label %182
    i32 58266854, label %192
    i32 1089055070, label %203
    i32 -780504983, label %205
    i32 53028055, label %216
    i32 559462449, label %218
    i32 -228072041, label %219
    i32 1487448582, label %222
    i32 1884019571, label %242
    i32 -1323034928, label %244
    i32 -989328612, label %254
    i32 1198288998, label %273
    i32 424614847, label %274
    i32 691027998, label %280
    i32 -1821001710, label %281
    i32 -1278419493, label %282
    i32 -1738429619, label %293
    i32 -1719720688, label %296
    i32 2112573416, label %297
  ]

.backedge:                                        ; preds = %3, %297, %296, %293, %282, %281, %280, %274, %254, %244, %242, %222, %219, %218, %216, %205, %203, %192, %182, %181, %169, %159, %158, %157, %137, %127, %124, %123, %121, %120, %118, %101, %98, %97, %87, %77, %74, %73, %71, %59, %56, %55, %45, %35, %33, %32, %17, %7, %4
  %.064.be = phi i32 [ %.064, %3 ], [ %.064, %297 ], [ %.064, %296 ], [ %.064, %293 ], [ %.064, %282 ], [ %.064, %281 ], [ %.064, %280 ], [ %.064, %274 ], [ %.064, %254 ], [ %.064, %244 ], [ %.064, %242 ], [ %.064, %222 ], [ %.064, %219 ], [ %.064, %218 ], [ %.064, %216 ], [ %.064, %205 ], [ %.064, %203 ], [ %.064, %192 ], [ %.064, %182 ], [ %.064, %181 ], [ %.064, %169 ], [ %.064, %159 ], [ %.064, %158 ], [ %.064, %157 ], [ %.064, %137 ], [ %.064, %127 ], [ %.064, %124 ], [ %.064, %123 ], [ %.064, %121 ], [ %.064, %120 ], [ %.064, %118 ], [ %.064, %101 ], [ %.064, %98 ], [ %.064, %97 ], [ %.064, %87 ], [ %.064, %77 ], [ %.064, %74 ], [ %.064, %73 ], [ %.064, %71 ], [ %.064, %59 ], [ %.064, %56 ], [ %.064, %55 ], [ %.064, %45 ], [ %.064, %35 ], [ %34, %33 ], [ %.064, %32 ], [ %.064, %17 ], [ %.064, %7 ], [ %.064, %4 ]
  %.062.be = phi i32 [ %.062, %3 ], [ %.062, %297 ], [ %.062, %296 ], [ %.062, %293 ], [ %.062, %282 ], [ %.062, %281 ], [ 1, %280 ], [ %.062, %274 ], [ %.062, %254 ], [ %.062, %244 ], [ %.062, %242 ], [ %.062, %222 ], [ %.062, %219 ], [ %.062, %218 ], [ %.062, %216 ], [ %.062, %205 ], [ %.062, %203 ], [ %.062, %192 ], [ %.062, %182 ], [ %.062, %181 ], [ %.062, %169 ], [ %.062, %159 ], [ %.062, %158 ], [ %.062, %157 ], [ %.062, %137 ], [ %.062, %127 ], [ %.062, %124 ], [ %.062, %123 ], [ %.062, %121 ], [ %.062, %120 ], [ %.062, %118 ], [ %.062, %101 ], [ %.062, %98 ], [ %.062, %97 ], [ %.062, %87 ], [ %.062, %77 ], [ %.062, %74 ], [ %.062, %73 ], [ %72, %71 ], [ %.062, %59 ], [ %.062, %56 ], [ %.062, %55 ], [ 1, %45 ], [ %.062, %35 ], [ %.062, %33 ], [ %.062, %32 ], [ %.062, %17 ], [ %.062, %7 ], [ %.062, %4 ]
  %.060.be = phi i32 [ %.060, %3 ], [ %.060, %297 ], [ %.060, %296 ], [ %.060, %293 ], [ %.060, %282 ], [ %.060, %281 ], [ %.060, %280 ], [ %.060, %274 ], [ %.060, %254 ], [ %.060, %244 ], [ %.060, %242 ], [ %.060, %222 ], [ %.060, %219 ], [ %.060, %218 ], [ %.060, %216 ], [ %.060, %205 ], [ %.060, %203 ], [ %.060, %192 ], [ %.060, %182 ], [ %.060, %181 ], [ %.060, %169 ], [ %.060, %159 ], [ %.060, %158 ], [ %.060, %157 ], [ %.060, %137 ], [ %.060, %127 ], [ %.060, %124 ], [ %.060, %123 ], [ %122, %121 ], [ %.060, %120 ], [ %.060, %118 ], [ %.060, %101 ], [ %.060, %98 ], [ %.060, %97 ], [ %.060, %87 ], [ %.060, %77 ], [ %.060, %74 ], [ 1, %73 ], [ %.060, %71 ], [ %.060, %59 ], [ %.060, %56 ], [ %.060, %55 ], [ %.060, %45 ], [ %.060, %35 ], [ %.060, %33 ], [ %.060, %32 ], [ %.060, %17 ], [ %.060, %7 ], [ %.060, %4 ]
  %.058.be = phi i32 [ %.058, %3 ], [ %.058, %297 ], [ %.058, %296 ], [ %.058, %293 ], [ %.058, %282 ], [ 1, %281 ], [ %.058, %280 ], [ %.058, %274 ], [ %.058, %254 ], [ %.058, %244 ], [ %.058, %242 ], [ %.058, %222 ], [ %.058, %219 ], [ %.058, %218 ], [ %.058, %216 ], [ %.058, %205 ], [ %.058, %203 ], [ %.058, %192 ], [ %.058, %182 ], [ %.058, %181 ], [ %.058, %169 ], [ %.058, %159 ], [ %.058, %158 ], [ %.058, %157 ], [ %.058, %137 ], [ %.058, %127 ], [ %.058, %124 ], [ %.058, %123 ], [ %.058, %121 ], [ %.058, %120 ], [ %119, %118 ], [ %.058, %101 ], [ %.058, %98 ], [ %.058, %97 ], [ 1, %87 ], [ %.058, %77 ], [ %.058, %74 ], [ %.058, %73 ], [ %.058, %71 ], [ %.058, %59 ], [ %.058, %56 ], [ %.058, %55 ], [ %.058, %45 ], [ %.058, %35 ], [ %.058, %33 ], [ %.058, %32 ], [ %.058, %17 ], [ %.058, %7 ], [ %.058, %4 ]
  %.056.be = phi i32 [ %.056, %3 ], [ %.056, %297 ], [ %.056, %296 ], [ %.056, %293 ], [ %.056, %282 ], [ %.056, %281 ], [ %.056, %280 ], [ %.056, %274 ], [ %.056, %254 ], [ %.056, %244 ], [ %.056, %242 ], [ %.056, %222 ], [ %.056, %219 ], [ %.056, %218 ], [ %.056, %216 ], [ %.056, %205 ], [ %.056, %203 ], [ %.056, %192 ], [ %.056, %182 ], [ %.056, %181 ], [ %.056, %169 ], [ %.056, %159 ], [ %.neg67, %158 ], [ %.056, %157 ], [ %.056, %137 ], [ %.056, %127 ], [ %.056, %124 ], [ 1, %123 ], [ %.056, %121 ], [ %.056, %120 ], [ %.056, %118 ], [ %.056, %101 ], [ %.056, %98 ], [ %.056, %97 ], [ %.056, %87 ], [ %.056, %77 ], [ %.056, %74 ], [ %.056, %73 ], [ %.056, %71 ], [ %.056, %59 ], [ %.056, %56 ], [ %.056, %55 ], [ %.056, %45 ], [ %.056, %35 ], [ %.056, %33 ], [ %.056, %32 ], [ %.056, %17 ], [ %.056, %7 ], [ %.056, %4 ]
  %.054.be = phi i32 [ %.054, %3 ], [ %.054, %297 ], [ %.054, %296 ], [ 8039, %293 ], [ %.054, %282 ], [ %.054, %281 ], [ %.054, %280 ], [ %.054, %274 ], [ %.054, %254 ], [ %.054, %244 ], [ %.054, %242 ], [ %.054, %222 ], [ %.054, %219 ], [ %.054, %218 ], [ %217, %216 ], [ %.054, %205 ], [ %.054, %203 ], [ %.054, %192 ], [ %.054, %182 ], [ %.054, %181 ], [ 8039, %169 ], [ %.054, %159 ], [ %.054, %158 ], [ %.054, %157 ], [ %.054, %137 ], [ %.054, %127 ], [ %.054, %124 ], [ %.054, %123 ], [ %.054, %121 ], [ %.054, %120 ], [ %.054, %118 ], [ %.054, %101 ], [ %.054, %98 ], [ %.054, %97 ], [ %.054, %87 ], [ %.054, %77 ], [ %.054, %74 ], [ %.054, %73 ], [ %.054, %71 ], [ %.054, %59 ], [ %.054, %56 ], [ %.054, %55 ], [ %.054, %45 ], [ %.054, %35 ], [ %.054, %33 ], [ %.054, %32 ], [ %.054, %17 ], [ %.054, %7 ], [ %.054, %4 ]
  %.052.be = phi i32 [ %.052, %3 ], [ %299, %297 ], [ %.052, %296 ], [ %.052, %293 ], [ %.052, %282 ], [ %.052, %281 ], [ %.052, %280 ], [ %.052, %274 ], [ %257, %254 ], [ %.052, %244 ], [ %.052, %242 ], [ %241, %222 ], [ %.052, %219 ], [ 0, %218 ], [ %.052, %216 ], [ %.052, %205 ], [ %.052, %203 ], [ %.052, %192 ], [ %.052, %182 ], [ %.052, %181 ], [ %.052, %169 ], [ %.052, %159 ], [ %.052, %158 ], [ %.052, %157 ], [ %.052, %137 ], [ %.052, %127 ], [ %.052, %124 ], [ %.052, %123 ], [ %.052, %121 ], [ %.052, %120 ], [ %.052, %118 ], [ %.052, %101 ], [ %.052, %98 ], [ %.052, %97 ], [ %.052, %87 ], [ %.052, %77 ], [ %.052, %74 ], [ %.052, %73 ], [ %.052, %71 ], [ %.052, %59 ], [ %.052, %56 ], [ %.052, %55 ], [ %.052, %45 ], [ %.052, %35 ], [ %.052, %33 ], [ %.052, %32 ], [ %.052, %17 ], [ %.052, %7 ], [ %.052, %4 ]
  %.050.be = phi i32 [ %.050, %3 ], [ %.050, %297 ], [ %.050, %296 ], [ %.050, %293 ], [ %.050, %282 ], [ %.050, %281 ], [ %.050, %280 ], [ %.050, %274 ], [ %.050, %254 ], [ %.050, %244 ], [ %243, %242 ], [ %.050, %222 ], [ %.050, %219 ], [ 1, %218 ], [ %.050, %216 ], [ %.050, %205 ], [ %.050, %203 ], [ %.050, %192 ], [ %.050, %182 ], [ %.050, %181 ], [ %.050, %169 ], [ %.050, %159 ], [ %.050, %158 ], [ %.050, %157 ], [ %.050, %137 ], [ %.050, %127 ], [ %.050, %124 ], [ %.050, %123 ], [ %.050, %121 ], [ %.050, %120 ], [ %.050, %118 ], [ %.050, %101 ], [ %.050, %98 ], [ %.050, %97 ], [ %.050, %87 ], [ %.050, %77 ], [ %.050, %74 ], [ %.050, %73 ], [ %.050, %71 ], [ %.050, %59 ], [ %.050, %56 ], [ %.050, %55 ], [ %.050, %45 ], [ %.050, %35 ], [ %.050, %33 ], [ %.050, %32 ], [ %.050, %17 ], [ %.050, %7 ], [ %.050, %4 ]
  %.0.be = phi i32 [ %.0, %3 ], [ -989328612, %297 ], [ 58266854, %296 ], [ 2103298162, %293 ], [ -200961654, %282 ], [ 1267360252, %281 ], [ 2084869230, %280 ], [ -1086370317, %274 ], [ %272, %254 ], [ %253, %244 ], [ -228072041, %242 ], [ 1884019571, %222 ], [ %221, %219 ], [ -228072041, %218 ], [ 1083498026, %216 ], [ 53028055, %205 ], [ %204, %203 ], [ %202, %192 ], [ %191, %182 ], [ 1083498026, %181 ], [ %180, %169 ], [ %168, %159 ], [ -1644580568, %158 ], [ 43695870, %157 ], [ %156, %137 ], [ %136, %127 ], [ %126, %124 ], [ -1644580568, %123 ], [ -1394493055, %121 ], [ -1540912454, %120 ], [ -1898467988, %118 ], [ 1702976275, %101 ], [ %100, %98 ], [ -1898467988, %97 ], [ %96, %87 ], [ %86, %77 ], [ %76, %74 ], [ -1394493055, %73 ], [ 268918043, %71 ], [ -749445438, %59 ], [ %58, %56 ], [ 268918043, %55 ], [ %54, %45 ], [ %44, %35 ], [ -2114752911, %33 ], [ 1921478336, %32 ], [ %31, %17 ], [ %16, %7 ], [ %6, %4 ]
  br label %3

4:                                                ; preds = %3
  %5 = load i32, i32* @n, align 4
  %.not70 = icmp sgt i32 %.064, %5
  %6 = select i1 %.not70, i32 268000294, i32 -1810852214
  br label %.backedge

7:                                                ; preds = %3
  %8 = load i32, i32* @x, align 4
  %9 = load i32, i32* @y, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -1086370317, i32 424614847
  br label %.backedge

17:                                               ; preds = %3
  %18 = tail call i32 @_Z4readv()
  %19 = sext i32 %.064 to i64
  %20 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %19
  store i32 %18, i32* %20, align 4
  %21 = tail call i32 @_Z4readv()
  %22 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %19
  store i32 %21, i32* %22, align 4
  %23 = load i32, i32* @x, align 4
  %24 = load i32, i32* @y, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 -276332097, i32 424614847
  br label %.backedge

32:                                               ; preds = %3
  br label %.backedge

33:                                               ; preds = %3
  %34 = add i32 %.064, 1
  br label %.backedge

35:                                               ; preds = %3
  %36 = load i32, i32* @x, align 4
  %37 = load i32, i32* @y, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 2084869230, i32 691027998
  br label %.backedge

45:                                               ; preds = %3
  %46 = load i32, i32* @x, align 4
  %47 = load i32, i32* @y, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -165336307, i32 691027998
  br label %.backedge

55:                                               ; preds = %3
  br label %.backedge

56:                                               ; preds = %3
  %57 = load i32, i32* @n, align 4
  %.not69 = icmp sgt i32 %.062, %57
  %58 = select i1 %.not69, i32 163954196, i32 1682009599
  br label %.backedge

59:                                               ; preds = %3
  %60 = sext i32 %.062 to i64
  %61 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 2010, %62
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %60
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 2010, %66
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [5010 x [5010 x i32]], [5010 x [5010 x i32]]* @f, i64 0, i64 %64, i64 %68
  %70 = load i32, i32* %69, align 4
  %.neg68 = add i32 %70, 1
  store i32 %.neg68, i32* %69, align 4
  br label %.backedge

71:                                               ; preds = %3
  %72 = add i32 %.062, 1
  br label %.backedge

73:                                               ; preds = %3
  br label %.backedge

74:                                               ; preds = %3
  %75 = icmp slt i32 %.060, 4021
  %76 = select i1 %75, i32 -1052220289, i32 2111798667
  br label %.backedge

77:                                               ; preds = %3
  %78 = load i32, i32* @x, align 4
  %79 = load i32, i32* @y, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 1267360252, i32 -1821001710
  br label %.backedge

87:                                               ; preds = %3
  %88 = load i32, i32* @x, align 4
  %89 = load i32, i32* @y, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -290122897, i32 -1821001710
  br label %.backedge

97:                                               ; preds = %3
  br label %.backedge

98:                                               ; preds = %3
  %99 = icmp slt i32 %.058, 4021
  %100 = select i1 %99, i32 -874233131, i32 -854116707
  br label %.backedge

101:                                              ; preds = %3
  %102 = add i32 %.060, -1
  %103 = sext i32 %102 to i64
  %104 = sext i32 %.058 to i64
  %105 = getelementptr inbounds [5010 x [5010 x i32]], [5010 x [5010 x i32]]* @f, i64 0, i64 %103, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %.060 to i64
  %108 = add i32 %.058, -1
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [5010 x [5010 x i32]], [5010 x [5010 x i32]]* @f, i64 0, i64 %107, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, %106
  %113 = srem i32 %112, 1000000007
  %114 = getelementptr inbounds [5010 x [5010 x i32]], [5010 x [5010 x i32]]* @f, i64 0, i64 %107, i64 %104
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %113, %115
  %117 = srem i32 %116, 1000000007
  store i32 %117, i32* %114, align 4
  br label %.backedge

118:                                              ; preds = %3
  %119 = add i32 %.058, 1
  br label %.backedge

120:                                              ; preds = %3
  br label %.backedge

121:                                              ; preds = %3
  %122 = add i32 %.060, 1
  br label %.backedge

123:                                              ; preds = %3
  store i32 1, i32* getelementptr inbounds ([10020 x i32], [10020 x i32]* @fac, i64 0, i64 0), align 16
  br label %.backedge

124:                                              ; preds = %3
  %125 = icmp slt i32 %.056, 8041
  %126 = select i1 %125, i32 1635603045, i32 1264947174
  br label %.backedge

127:                                              ; preds = %3
  %128 = load i32, i32* @x, align 4
  %129 = load i32, i32* @y, align 4
  %130 = add i32 %128, -1
  %131 = mul i32 %130, %128
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %134, %133
  %136 = select i1 %135, i32 -200961654, i32 -1278419493
  br label %.backedge

137:                                              ; preds = %3
  %138 = add i32 %.056, -1
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [10020 x i32], [10020 x i32]* @fac, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = sext i32 %.056 to i64
  %144 = mul nsw i64 %142, %143
  %145 = srem i64 %144, 1000000007
  %146 = trunc i64 %145 to i32
  %147 = getelementptr inbounds [10020 x i32], [10020 x i32]* @fac, i64 0, i64 %143
  store i32 %146, i32* %147, align 4
  %148 = load i32, i32* @x, align 4
  %149 = load i32, i32* @y, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 1288862368, i32 -1278419493
  br label %.backedge

157:                                              ; preds = %3
  br label %.backedge

158:                                              ; preds = %3
  %.neg67 = add i32 %.056, 1
  br label %.backedge

159:                                              ; preds = %3
  %160 = load i32, i32* @x, align 4
  %161 = load i32, i32* @y, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 2103298162, i32 -1738429619
  br label %.backedge

169:                                              ; preds = %3
  %170 = load i32, i32* getelementptr inbounds ([10020 x i32], [10020 x i32]* @fac, i64 0, i64 8040), align 16
  %171 = tail call i32 @_Z4qpowii(i32 %170, i32 1000000005)
  store i32 %171, i32* getelementptr inbounds ([10020 x i32], [10020 x i32]* @ifac, i64 0, i64 8040), align 16
  %172 = load i32, i32* @x, align 4
  %173 = load i32, i32* @y, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 -1370825459, i32 -1738429619
  br label %.backedge

181:                                              ; preds = %3
  br label %.backedge

182:                                              ; preds = %3
  %183 = load i32, i32* @x, align 4
  %184 = load i32, i32* @y, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 58266854, i32 -1719720688
  br label %.backedge

192:                                              ; preds = %3
  %193 = icmp sgt i32 %.054, -1
  store i1 %193, i1* %1, align 1
  %194 = load i32, i32* @x, align 4
  %195 = load i32, i32* @y, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 1089055070, i32 -1719720688
  br label %.backedge

203:                                              ; preds = %3
  %.0..0..0. = load volatile i1, i1* %1, align 1
  %204 = select i1 %.0..0..0., i32 -780504983, i32 559462449
  br label %.backedge

205:                                              ; preds = %3
  %206 = add i32 %.054, 1
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [10020 x i32], [10020 x i32]* @ifac, i64 0, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %209 to i64
  %211 = mul nsw i64 %210, %207
  %212 = srem i64 %211, 1000000007
  %213 = trunc i64 %212 to i32
  %214 = sext i32 %.054 to i64
  %215 = getelementptr inbounds [10020 x i32], [10020 x i32]* @ifac, i64 0, i64 %214
  store i32 %213, i32* %215, align 4
  br label %.backedge

216:                                              ; preds = %3
  %217 = add i32 %.054, -1
  br label %.backedge

218:                                              ; preds = %3
  br label %.backedge

219:                                              ; preds = %3
  %220 = load i32, i32* @n, align 4
  %.not = icmp sgt i32 %.050, %220
  %221 = select i1 %.not, i32 -1323034928, i32 1487448582
  br label %.backedge

222:                                              ; preds = %3
  %223 = sext i32 %.050 to i64
  %224 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = add i32 %225, 2010
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %223
  %229 = load i32, i32* %228, align 4
  %230 = add i32 %229, 2010
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [5010 x [5010 x i32]], [5010 x [5010 x i32]]* @f, i64 0, i64 %227, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = add i32 %233, %.052
  %235 = srem i32 %234, 1000000007
  %236 = shl nsw i32 %225, 1
  %237 = add i32 %229, %225
  %238 = shl i32 %237, 1
  %239 = tail call i32 @_Z1Cii(i32 %238, i32 %236)
  %240 = sub i32 %235, %239
  %241 = srem i32 %240, 1000000007
  br label %.backedge

242:                                              ; preds = %3
  %243 = add i32 %.050, 1
  br label %.backedge

244:                                              ; preds = %3
  %245 = load i32, i32* @x, align 4
  %246 = load i32, i32* @y, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 -989328612, i32 2112573416
  br label %.backedge

254:                                              ; preds = %3
  %255 = srem i32 %.052, 1000000007
  %256 = add nsw i32 %255, 1000000007
  %257 = urem i32 %256, 1000000007
  %258 = zext i32 %257 to i64
  %259 = tail call i32 @_Z4qpowii(i32 2, i32 1000000005)
  %260 = sext i32 %259 to i64
  %261 = mul nsw i64 %260, %258
  %262 = srem i64 %261, 1000000007
  %263 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 %262)
  %264 = load i32, i32* @x, align 4
  %265 = load i32, i32* @y, align 4
  %266 = add i32 %264, -1
  %267 = mul i32 %266, %264
  %268 = and i32 %267, 1
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %270, %269
  %272 = select i1 %271, i32 1198288998, i32 2112573416
  br label %.backedge

273:                                              ; preds = %3
  ret i32 0

274:                                              ; preds = %3
  %275 = tail call i32 @_Z4readv()
  %276 = sext i32 %.064 to i64
  %277 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %276
  store i32 %275, i32* %277, align 4
  %278 = tail call i32 @_Z4readv()
  %279 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %276
  store i32 %278, i32* %279, align 4
  br label %.backedge

280:                                              ; preds = %3
  br label %.backedge

281:                                              ; preds = %3
  br label %.backedge

282:                                              ; preds = %3
  %283 = add i32 %.056, -1
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [10020 x i32], [10020 x i32]* @fac, i64 0, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = sext i32 %286 to i64
  %288 = sext i32 %.056 to i64
  %289 = mul nsw i64 %287, %288
  %290 = srem i64 %289, 1000000007
  %291 = trunc i64 %290 to i32
  %292 = getelementptr inbounds [10020 x i32], [10020 x i32]* @fac, i64 0, i64 %288
  store i32 %291, i32* %292, align 4
  br label %.backedge

293:                                              ; preds = %3
  %294 = load i32, i32* getelementptr inbounds ([10020 x i32], [10020 x i32]* @fac, i64 0, i64 8040), align 16
  %295 = tail call i32 @_Z4qpowii(i32 %294, i32 1000000005)
  store i32 %295, i32* getelementptr inbounds ([10020 x i32], [10020 x i32]* @ifac, i64 0, i64 8040), align 16
  br label %.backedge

296:                                              ; preds = %3
  br label %.backedge

297:                                              ; preds = %3
  %298 = srem i32 %.052, 1000000007
  %.neg = add nsw i32 %298, 1000000007
  %299 = urem i32 %.neg, 1000000007
  %300 = zext i32 %299 to i64
  %301 = tail call i32 @_Z4qpowii(i32 2, i32 1000000005)
  %302 = sext i32 %301 to i64
  %303 = mul nsw i64 %302, %300
  %304 = srem i64 %303, 1000000007
  %305 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 %304)
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readv() local_unnamed_addr #1 comdat {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = tail call i32 @getchar()
  %6 = trunc i32 %5 to i8
  br label %7

7:                                                ; preds = %.backedge, %0
  %.028 = phi i8 [ %6, %0 ], [ %.028.be, %.backedge ]
  %.026 = phi i32 [ 0, %0 ], [ %.026.be, %.backedge ]
  %.024 = phi i32 [ 1, %0 ], [ %.024.be, %.backedge ]
  %.022 = phi i32 [ -971563834, %0 ], [ %.022.be, %.backedge ]
  %.020 = phi i1 [ undef, %0 ], [ %.020.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.022, label %.backedge [
    i32 -971563834, label %8
    i32 -1892446871, label %11
    i32 949689843, label %21
    i32 1999389880, label %32
    i32 1539314126, label %33
    i32 550663414, label %43
    i32 645659152, label %53
    i32 -953987844, label %55
    i32 -1563921151, label %65
    i32 -1235427668, label %76
    i32 1807983489, label %78
    i32 -903016123, label %79
    i32 1093740291, label %80
    i32 -636660521, label %83
    i32 -1517064194, label %93
    i32 2093763866, label %103
    i32 -570429849, label %104
    i32 -275139219, label %114
    i32 -854908438, label %125
    i32 408987961, label %127
    i32 1199003911, label %129
    i32 -589683713, label %131
    i32 -422873105, label %141
    i32 -407329245, label %155
    i32 1858556977, label %156
    i32 -1001374056, label %159
    i32 -1576617536, label %161
    i32 1826842615, label %162
    i32 -823426579, label %163
    i32 941637567, label %164
    i32 2023067167, label %165
    i32 71334238, label %166
  ]

.backedge:                                        ; preds = %7, %166, %165, %164, %163, %162, %161, %156, %155, %141, %131, %129, %127, %125, %114, %104, %103, %93, %83, %80, %79, %78, %76, %65, %55, %53, %43, %33, %32, %21, %11, %8
  %.028.be = phi i8 [ %.028, %7 ], [ %.028, %166 ], [ %.028, %165 ], [ %.028, %164 ], [ %.028, %163 ], [ %.028, %162 ], [ %.028, %161 ], [ %158, %156 ], [ %.028, %155 ], [ %.028, %141 ], [ %.028, %131 ], [ %.028, %129 ], [ %.028, %127 ], [ %.028, %125 ], [ %.028, %114 ], [ %.028, %104 ], [ %.028, %103 ], [ %.028, %93 ], [ %.028, %83 ], [ %82, %80 ], [ %.028, %79 ], [ %.028, %78 ], [ %.028, %76 ], [ %.028, %65 ], [ %.028, %55 ], [ %.028, %53 ], [ %.028, %43 ], [ %.028, %33 ], [ %.028, %32 ], [ %.028, %21 ], [ %.028, %11 ], [ %.028, %8 ]
  %.026.be = phi i32 [ %.026, %7 ], [ %170, %166 ], [ %.026, %165 ], [ %.026, %164 ], [ %.026, %163 ], [ %.026, %162 ], [ %.026, %161 ], [ %.026, %156 ], [ %.026, %155 ], [ %145, %141 ], [ %.026, %131 ], [ %.026, %129 ], [ %.026, %127 ], [ %.026, %125 ], [ %.026, %114 ], [ %.026, %104 ], [ %.026, %103 ], [ %.026, %93 ], [ %.026, %83 ], [ %.026, %80 ], [ %.026, %79 ], [ %.026, %78 ], [ %.026, %76 ], [ %.026, %65 ], [ %.026, %55 ], [ %.026, %53 ], [ %.026, %43 ], [ %.026, %33 ], [ %.026, %32 ], [ %.026, %21 ], [ %.026, %11 ], [ %.026, %8 ]
  %.024.be = phi i32 [ %.024, %7 ], [ %.024, %166 ], [ %.024, %165 ], [ %.024, %164 ], [ %.024, %163 ], [ %.024, %162 ], [ %.024, %161 ], [ %.024, %156 ], [ %.024, %155 ], [ %.024, %141 ], [ %.024, %131 ], [ %.024, %129 ], [ %.024, %127 ], [ %.024, %125 ], [ %.024, %114 ], [ %.024, %104 ], [ %.024, %103 ], [ %.024, %93 ], [ %.024, %83 ], [ %.024, %80 ], [ %.024, %79 ], [ -1, %78 ], [ %.024, %76 ], [ %.024, %65 ], [ %.024, %55 ], [ %.024, %53 ], [ %.024, %43 ], [ %.024, %33 ], [ %.024, %32 ], [ %.024, %21 ], [ %.024, %11 ], [ %.024, %8 ]
  %.022.be = phi i32 [ %.022, %7 ], [ -422873105, %166 ], [ -275139219, %165 ], [ -1517064194, %164 ], [ -1563921151, %163 ], [ 550663414, %162 ], [ 949689843, %161 ], [ -570429849, %156 ], [ 1858556977, %155 ], [ %154, %141 ], [ %140, %131 ], [ %130, %129 ], [ 1199003911, %127 ], [ %126, %125 ], [ %124, %114 ], [ %113, %104 ], [ -570429849, %103 ], [ %102, %93 ], [ %92, %83 ], [ -971563834, %80 ], [ 1093740291, %79 ], [ -903016123, %78 ], [ %77, %76 ], [ %75, %65 ], [ %64, %55 ], [ %54, %53 ], [ %52, %43 ], [ %42, %33 ], [ 1539314126, %32 ], [ %31, %21 ], [ %20, %11 ], [ %10, %8 ]
  %.020.be = phi i1 [ %.020, %7 ], [ %.020, %166 ], [ %.020, %165 ], [ %.020, %164 ], [ %.020, %163 ], [ %.020, %162 ], [ %.020, %161 ], [ %.020, %156 ], [ %.020, %155 ], [ %.020, %141 ], [ %.020, %131 ], [ %.020, %129 ], [ %.020, %127 ], [ %.020, %125 ], [ %.020, %114 ], [ %.020, %104 ], [ %.020, %103 ], [ %.020, %93 ], [ %.020, %83 ], [ %.020, %80 ], [ %.020, %79 ], [ %.020, %78 ], [ %.020, %76 ], [ %.020, %65 ], [ %.020, %55 ], [ %.020, %53 ], [ %.020, %43 ], [ %.020, %33 ], [ %.0..0..0.16, %32 ], [ %.020, %21 ], [ %.020, %11 ], [ true, %8 ]
  %.0.be = phi i1 [ %.0, %7 ], [ %.0, %166 ], [ %.0, %165 ], [ %.0, %164 ], [ %.0, %163 ], [ %.0, %162 ], [ %.0, %161 ], [ %.0, %156 ], [ %.0, %155 ], [ %.0, %141 ], [ %.0, %131 ], [ %.0, %129 ], [ %128, %127 ], [ false, %125 ], [ %.0, %114 ], [ %.0, %104 ], [ %.0, %103 ], [ %.0, %93 ], [ %.0, %83 ], [ %.0, %80 ], [ %.0, %79 ], [ %.0, %78 ], [ %.0, %76 ], [ %.0, %65 ], [ %.0, %55 ], [ %.0, %53 ], [ %.0, %43 ], [ %.0, %33 ], [ %.0, %32 ], [ %.0, %21 ], [ %.0, %11 ], [ %.0, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = icmp sgt i8 %.028, 57
  %10 = select i1 %9, i32 1539314126, i32 -1892446871
  br label %.backedge

11:                                               ; preds = %7
  %12 = load i32, i32* @x.1, align 4
  %13 = load i32, i32* @y.2, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 949689843, i32 -1576617536
  br label %.backedge

21:                                               ; preds = %7
  %22 = icmp slt i8 %.028, 48
  store i1 %22, i1* %4, align 1
  %23 = load i32, i32* @x.1, align 4
  %24 = load i32, i32* @y.2, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 1999389880, i32 -1576617536
  br label %.backedge

32:                                               ; preds = %7
  %.0..0..0.16 = load volatile i1, i1* %4, align 1
  br label %.backedge

33:                                               ; preds = %7
  store i1 %.020, i1* %1, align 1
  %34 = load i32, i32* @x.1, align 4
  %35 = load i32, i32* @y.2, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 550663414, i32 1826842615
  br label %.backedge

43:                                               ; preds = %7
  %44 = load i32, i32* @x.1, align 4
  %45 = load i32, i32* @y.2, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 645659152, i32 1826842615
  br label %.backedge

53:                                               ; preds = %7
  %.0..0..0.19 = load volatile i1, i1* %1, align 1
  %54 = select i1 %.0..0..0.19, i32 -953987844, i32 -636660521
  br label %.backedge

55:                                               ; preds = %7
  %56 = load i32, i32* @x.1, align 4
  %57 = load i32, i32* @y.2, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 -1563921151, i32 -823426579
  br label %.backedge

65:                                               ; preds = %7
  %66 = icmp eq i8 %.028, 45
  store i1 %66, i1* %3, align 1
  %67 = load i32, i32* @x.1, align 4
  %68 = load i32, i32* @y.2, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 -1235427668, i32 -823426579
  br label %.backedge

76:                                               ; preds = %7
  %.0..0..0.17 = load volatile i1, i1* %3, align 1
  %77 = select i1 %.0..0..0.17, i32 1807983489, i32 -903016123
  br label %.backedge

78:                                               ; preds = %7
  br label %.backedge

79:                                               ; preds = %7
  br label %.backedge

80:                                               ; preds = %7
  %81 = tail call i32 @getchar()
  %82 = trunc i32 %81 to i8
  br label %.backedge

83:                                               ; preds = %7
  %84 = load i32, i32* @x.1, align 4
  %85 = load i32, i32* @y.2, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 -1517064194, i32 941637567
  br label %.backedge

93:                                               ; preds = %7
  %94 = load i32, i32* @x.1, align 4
  %95 = load i32, i32* @y.2, align 4
  %96 = add i32 %94, -1
  %97 = mul i32 %96, %94
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %100, %99
  %102 = select i1 %101, i32 2093763866, i32 941637567
  br label %.backedge

103:                                              ; preds = %7
  br label %.backedge

104:                                              ; preds = %7
  %105 = load i32, i32* @x.1, align 4
  %106 = load i32, i32* @y.2, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 -275139219, i32 2023067167
  br label %.backedge

114:                                              ; preds = %7
  %115 = icmp sgt i8 %.028, 47
  store i1 %115, i1* %2, align 1
  %116 = load i32, i32* @x.1, align 4
  %117 = load i32, i32* @y.2, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 -854908438, i32 2023067167
  br label %.backedge

125:                                              ; preds = %7
  %.0..0..0.18 = load volatile i1, i1* %2, align 1
  %126 = select i1 %.0..0..0.18, i32 408987961, i32 1199003911
  br label %.backedge

127:                                              ; preds = %7
  %128 = icmp slt i8 %.028, 58
  br label %.backedge

129:                                              ; preds = %7
  %130 = select i1 %.0, i32 -589683713, i32 -1001374056
  br label %.backedge

131:                                              ; preds = %7
  %132 = load i32, i32* @x.1, align 4
  %133 = load i32, i32* @y.2, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 -422873105, i32 71334238
  br label %.backedge

141:                                              ; preds = %7
  %142 = mul nsw i32 %.026, 10
  %143 = sext i8 %.028 to i32
  %144 = add nsw i32 %143, -48
  %145 = add i32 %144, %142
  %146 = load i32, i32* @x.1, align 4
  %147 = load i32, i32* @y.2, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -407329245, i32 71334238
  br label %.backedge

155:                                              ; preds = %7
  br label %.backedge

156:                                              ; preds = %7
  %157 = tail call i32 @getchar()
  %158 = trunc i32 %157 to i8
  br label %.backedge

159:                                              ; preds = %7
  %160 = mul nsw i32 %.024, %.026
  ret i32 %160

161:                                              ; preds = %7
  br label %.backedge

162:                                              ; preds = %7
  br label %.backedge

163:                                              ; preds = %7
  br label %.backedge

164:                                              ; preds = %7
  br label %.backedge

165:                                              ; preds = %7
  br label %.backedge

166:                                              ; preds = %7
  %167 = mul nsw i32 %.026, 10
  %168 = sext i8 %.028 to i32
  %169 = add nsw i32 %168, -48
  %170 = add i32 %169, %167
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z4qpowii(i32 %0, i32 %1) local_unnamed_addr #2 comdat {
  %3 = alloca i1, align 1
  %4 = load i32, i32* @x.3, align 4
  %5 = load i32, i32* @y.4, align 4
  %6 = add i32 %4, -1
  %7 = mul i32 %6, %4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %10, %9
  %12 = select i1 %11, i32 309334158, i32 361487885
  %13 = select i1 %11, i32 1952469723, i32 361487885
  %14 = select i1 %11, i32 -1422373788, i32 1717502487
  %15 = select i1 %11, i32 -394474590, i32 1717502487
  br label %16

16:                                               ; preds = %.backedge, %2
  %.016 = phi i32 [ %0, %2 ], [ %.016.be, %.backedge ]
  %.014 = phi i32 [ %1, %2 ], [ %.014.be, %.backedge ]
  %.012 = phi i32 [ 1, %2 ], [ %.012.be, %.backedge ]
  %.0 = phi i32 [ -1425891717, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1425891717, label %17
    i32 1750211155, label %19
    i32 -394474590, label %20
    i32 -1422373788, label %23
    i32 -1655042456, label %25
    i32 1952469723, label %26
    i32 309334158, label %32
    i32 408395276, label %33
    i32 115974592, label %39
    i32 1717502487, label %40
    i32 361487885, label %41
  ]

.backedge:                                        ; preds = %16, %41, %40, %33, %32, %26, %25, %23, %20, %19, %17
  %.016.be = phi i32 [ %.016, %16 ], [ %.016, %41 ], [ %.016, %40 ], [ %37, %33 ], [ %.016, %32 ], [ %.016, %26 ], [ %.016, %25 ], [ %.016, %23 ], [ %.016, %20 ], [ %.016, %19 ], [ %.016, %17 ]
  %.014.be = phi i32 [ %.014, %16 ], [ %.014, %41 ], [ %.014, %40 ], [ %38, %33 ], [ %.014, %32 ], [ %.014, %26 ], [ %.014, %25 ], [ %.014, %23 ], [ %.014, %20 ], [ %.014, %19 ], [ %.014, %17 ]
  %.012.be = phi i32 [ %.012, %16 ], [ %46, %41 ], [ %.012, %40 ], [ %.012, %33 ], [ %.012, %32 ], [ %31, %26 ], [ %.012, %25 ], [ %.012, %23 ], [ %.012, %20 ], [ %.012, %19 ], [ %.012, %17 ]
  %.0.be = phi i32 [ %.0, %16 ], [ 1952469723, %41 ], [ -394474590, %40 ], [ -1425891717, %33 ], [ 408395276, %32 ], [ %12, %26 ], [ %13, %25 ], [ %24, %23 ], [ %14, %20 ], [ %15, %19 ], [ %18, %17 ]
  br label %16

17:                                               ; preds = %16
  %.not = icmp eq i32 %.014, 0
  %18 = select i1 %.not, i32 115974592, i32 1750211155
  br label %.backedge

19:                                               ; preds = %16
  br label %.backedge

20:                                               ; preds = %16
  %21 = and i32 %.014, 1
  %22 = icmp ne i32 %21, 0
  store i1 %22, i1* %3, align 1
  br label %.backedge

23:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %24 = select i1 %.0..0..0., i32 -1655042456, i32 408395276
  br label %.backedge

25:                                               ; preds = %16
  br label %.backedge

26:                                               ; preds = %16
  %27 = sext i32 %.012 to i64
  %28 = sext i32 %.016 to i64
  %29 = mul nsw i64 %27, %28
  %30 = srem i64 %29, 1000000007
  %31 = trunc i64 %30 to i32
  br label %.backedge

32:                                               ; preds = %16
  br label %.backedge

33:                                               ; preds = %16
  %34 = sext i32 %.016 to i64
  %35 = mul nsw i64 %34, %34
  %36 = urem i64 %35, 1000000007
  %37 = trunc i64 %36 to i32
  %38 = ashr i32 %.014, 1
  br label %.backedge

39:                                               ; preds = %16
  ret i32 %.012

40:                                               ; preds = %16
  br label %.backedge

41:                                               ; preds = %16
  %42 = sext i32 %.012 to i64
  %43 = sext i32 %.016 to i64
  %44 = mul nsw i64 %42, %43
  %45 = srem i64 %44, 1000000007
  %46 = trunc i64 %45 to i32
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z1Cii(i32 %0, i32 %1) local_unnamed_addr #2 comdat {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [10020 x i32], [10020 x i32]* @fac, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds [10020 x i32], [10020 x i32]* @ifac, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = mul nsw i64 %10, %6
  %12 = srem i64 %11, 1000000007
  %13 = sub i32 %0, %1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [10020 x i32], [10020 x i32]* @ifac, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = mul nsw i64 %12, %17
  %19 = srem i64 %18, 1000000007
  %20 = trunc i64 %19 to i32
  ret i32 %20
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #3

attributes #0 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
