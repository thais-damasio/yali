; ModuleID = 'build_ollvm/programs/p04051/s410613331.ll'
source_filename = "Project_CodeNet_C++1400/p04051/s410613331.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_Z6getansii = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@k = local_unnamed_addr global i32 0, align 4
@a = global [1000007 x i32] zeroinitializer, align 16
@b = global [1000007 x i32] zeroinitializer, align 16
@f = local_unnamed_addr global [1000007 x i32] zeroinitializer, align 16
@g = local_unnamed_addr global [1000007 x i32] zeroinitializer, align 16
@gt = local_unnamed_addr global [4007 x [4007 x i32]] zeroinitializer, align 16
@ft = local_unnamed_addr global [1000007 x i64] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s410613331.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  store i32 1, i32* getelementptr inbounds ([1000007 x i32], [1000007 x i32]* @g, i64 0, i64 1), align 4
  store i32 1, i32* getelementptr inbounds ([1000007 x i32], [1000007 x i32]* @f, i64 0, i64 1), align 4
  store i32 1, i32* getelementptr inbounds ([1000007 x i32], [1000007 x i32]* @g, i64 0, i64 0), align 16
  store i32 1, i32* getelementptr inbounds ([1000007 x i32], [1000007 x i32]* @f, i64 0, i64 0), align 16
  store i32 2007, i32* @k, align 4
  br label %5

5:                                                ; preds = %.backedge, %0
  %.098 = phi i32 [ 2, %0 ], [ %.098.be, %.backedge ]
  %.096 = phi i32 [ undef, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i32 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i32 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.0 = phi i32 [ -856287942, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -856287942, label %6
    i32 1995837978, label %9
    i32 19931038, label %23
    i32 41051682, label %25
    i32 -786384880, label %26
    i32 -956774099, label %29
    i32 -739217179, label %39
    i32 -452093561, label %68
    i32 793793252, label %69
    i32 1486909127, label %71
    i32 -694379611, label %81
    i32 -1026774157, label %91
    i32 34351976, label %92
    i32 1561432727, label %95
    i32 246230204, label %105
    i32 156555644, label %115
    i32 -855184037, label %116
    i32 -1489116657, label %119
    i32 178151100, label %124
    i32 -2125217862, label %126
    i32 -2057605425, label %127
    i32 473967613, label %129
    i32 1387533506, label %139
    i32 595986243, label %150
    i32 797734240, label %151
    i32 1646214486, label %154
    i32 -453775097, label %159
    i32 1550554591, label %161
    i32 64057315, label %162
    i32 -1655678773, label %172
    i32 732655977, label %184
    i32 -732340505, label %186
    i32 -1776379969, label %187
    i32 -1193361171, label %191
    i32 643338199, label %200
    i32 -306980223, label %219
    i32 -152045712, label %220
    i32 -574289315, label %221
    i32 723706965, label %222
    i32 2024444880, label %232
    i32 1477613824, label %242
    i32 -1685675764, label %243
    i32 1575338363, label %244
    i32 -984291877, label %254
    i32 704429607, label %267
    i32 889967722, label %269
    i32 -683783503, label %279
    i32 -2046871792, label %293
    i32 -1597657252, label %294
    i32 -1395570050, label %296
    i32 1503838315, label %297
    i32 262765799, label %307
    i32 -1258874557, label %320
    i32 -1311242483, label %322
    i32 -1643613725, label %337
    i32 1794506517, label %347
    i32 1969653451, label %358
    i32 156746164, label %359
    i32 138499669, label %369
    i32 -609792156, label %379
    i32 168562343, label %380
    i32 776906732, label %383
    i32 2126024813, label %393
    i32 -434075042, label %414
    i32 -206279825, label %415
    i32 435260261, label %425
    i32 -1750468286, label %435
    i32 -1631374932, label %436
    i32 360915261, label %446
    i32 1269440363, label %462
    i32 -536638268, label %463
    i32 -74856561, label %483
    i32 1959439814, label %484
    i32 -1127905515, label %485
    i32 -1176452975, label %487
    i32 -863434324, label %488
    i32 73109923, label %490
    i32 -40932516, label %491
    i32 659562767, label %496
    i32 -733737276, label %497
    i32 157028473, label %498
    i32 -1545421506, label %499
    i32 -1069380534, label %511
    i32 1015097041, label %512
  ]

.backedge:                                        ; preds = %5, %512, %511, %499, %498, %497, %496, %491, %490, %488, %487, %485, %484, %483, %463, %446, %436, %435, %425, %415, %414, %393, %383, %380, %379, %369, %359, %358, %347, %337, %322, %320, %307, %297, %296, %294, %293, %279, %269, %267, %254, %244, %243, %242, %232, %222, %221, %220, %219, %200, %191, %187, %186, %184, %172, %162, %161, %159, %154, %151, %150, %139, %129, %127, %126, %124, %119, %116, %115, %105, %95, %92, %91, %81, %71, %69, %68, %39, %29, %26, %25, %23, %9, %6
  %.098.be = phi i32 [ %.098, %5 ], [ %.098, %512 ], [ %.098, %511 ], [ %.098, %499 ], [ %.098, %498 ], [ %.098, %497 ], [ %.098, %496 ], [ %.098, %491 ], [ %.098, %490 ], [ %.098, %488 ], [ %.098, %487 ], [ %.098, %485 ], [ %.098, %484 ], [ %.098, %483 ], [ %.098, %463 ], [ %.098, %446 ], [ %.098, %436 ], [ %.098, %435 ], [ %.098, %425 ], [ %.098, %415 ], [ %.098, %414 ], [ %.098, %393 ], [ %.098, %383 ], [ %.098, %380 ], [ %.098, %379 ], [ %.098, %369 ], [ %.098, %359 ], [ %.098, %358 ], [ %.098, %347 ], [ %.098, %337 ], [ %.098, %322 ], [ %.098, %320 ], [ %.098, %307 ], [ %.098, %297 ], [ %.098, %296 ], [ %.098, %294 ], [ %.098, %293 ], [ %.098, %279 ], [ %.098, %269 ], [ %.098, %267 ], [ %.098, %254 ], [ %.098, %244 ], [ %.098, %243 ], [ %.098, %242 ], [ %.098, %232 ], [ %.098, %222 ], [ %.098, %221 ], [ %.098, %220 ], [ %.098, %219 ], [ %.098, %200 ], [ %.098, %191 ], [ %.098, %187 ], [ %.098, %186 ], [ %.098, %184 ], [ %.098, %172 ], [ %.098, %162 ], [ %.098, %161 ], [ %.098, %159 ], [ %.098, %154 ], [ %.098, %151 ], [ %.098, %150 ], [ %.098, %139 ], [ %.098, %129 ], [ %.098, %127 ], [ %.098, %126 ], [ %.098, %124 ], [ %.098, %119 ], [ %.098, %116 ], [ %.098, %115 ], [ %.098, %105 ], [ %.098, %95 ], [ %.098, %92 ], [ %.098, %91 ], [ %.098, %81 ], [ %.098, %71 ], [ %.098, %69 ], [ %.098, %68 ], [ %.098, %39 ], [ %.098, %29 ], [ %.098, %26 ], [ %.098, %25 ], [ %24, %23 ], [ %.098, %9 ], [ %.098, %6 ]
  %.096.be = phi i32 [ %.096, %5 ], [ %.096, %512 ], [ %.096, %511 ], [ %.096, %499 ], [ %.096, %498 ], [ %.096, %497 ], [ %.096, %496 ], [ %.096, %491 ], [ %.096, %490 ], [ %.096, %488 ], [ %.096, %487 ], [ %.096, %485 ], [ %.096, %484 ], [ %.096, %483 ], [ %.096, %463 ], [ %.096, %446 ], [ %.096, %436 ], [ %.096, %435 ], [ %.096, %425 ], [ %.096, %415 ], [ %.096, %414 ], [ %.096, %393 ], [ %.096, %383 ], [ %.096, %380 ], [ %.096, %379 ], [ %.096, %369 ], [ %.096, %359 ], [ %.096, %358 ], [ %.096, %347 ], [ %.096, %337 ], [ %.096, %322 ], [ %.096, %320 ], [ %.096, %307 ], [ %.096, %297 ], [ %.096, %296 ], [ %.096, %294 ], [ %.096, %293 ], [ %.096, %279 ], [ %.096, %269 ], [ %.096, %267 ], [ %.096, %254 ], [ %.096, %244 ], [ %.096, %243 ], [ %.096, %242 ], [ %.096, %232 ], [ %.096, %222 ], [ %.096, %221 ], [ %.096, %220 ], [ %.096, %219 ], [ %.096, %200 ], [ %.096, %191 ], [ %.096, %187 ], [ %.096, %186 ], [ %.096, %184 ], [ %.096, %172 ], [ %.096, %162 ], [ %.096, %161 ], [ %.096, %159 ], [ %.096, %154 ], [ %.096, %151 ], [ %.096, %150 ], [ %.096, %139 ], [ %.096, %129 ], [ %.096, %127 ], [ %.096, %126 ], [ %.096, %124 ], [ %.096, %119 ], [ %.096, %116 ], [ %.096, %115 ], [ %.096, %105 ], [ %.096, %95 ], [ %.096, %92 ], [ %.096, %91 ], [ %.096, %81 ], [ %.096, %71 ], [ %70, %69 ], [ %.096, %68 ], [ %.096, %39 ], [ %.096, %29 ], [ %.096, %26 ], [ 2, %25 ], [ %.096, %23 ], [ %.096, %9 ], [ %.096, %6 ]
  %.094.be = phi i32 [ %.094, %5 ], [ %.094, %512 ], [ %.094, %511 ], [ %.094, %499 ], [ %.094, %498 ], [ %.094, %497 ], [ %.094, %496 ], [ %.094, %491 ], [ %.094, %490 ], [ %.094, %488 ], [ %.094, %487 ], [ %.094, %485 ], [ %.094, %484 ], [ 0, %483 ], [ %.094, %463 ], [ %.094, %446 ], [ %.094, %436 ], [ %.094, %435 ], [ %.094, %425 ], [ %.094, %415 ], [ %.094, %414 ], [ %.094, %393 ], [ %.094, %383 ], [ %.094, %380 ], [ %.094, %379 ], [ %.094, %369 ], [ %.094, %359 ], [ %.094, %358 ], [ %.094, %347 ], [ %.094, %337 ], [ %.094, %322 ], [ %.094, %320 ], [ %.094, %307 ], [ %.094, %297 ], [ %.094, %296 ], [ %.094, %294 ], [ %.094, %293 ], [ %.094, %279 ], [ %.094, %269 ], [ %.094, %267 ], [ %.094, %254 ], [ %.094, %244 ], [ %.094, %243 ], [ %.094, %242 ], [ %.094, %232 ], [ %.094, %222 ], [ %.094, %221 ], [ %.094, %220 ], [ %.094, %219 ], [ %.094, %200 ], [ %.094, %191 ], [ %.094, %187 ], [ %.094, %186 ], [ %.094, %184 ], [ %.094, %172 ], [ %.094, %162 ], [ %.094, %161 ], [ %.094, %159 ], [ %.094, %154 ], [ %.094, %151 ], [ %.094, %150 ], [ %.094, %139 ], [ %.094, %129 ], [ %128, %127 ], [ %.094, %126 ], [ %.094, %124 ], [ %.094, %119 ], [ %.094, %116 ], [ %.094, %115 ], [ %.094, %105 ], [ %.094, %95 ], [ %.094, %92 ], [ %.094, %91 ], [ 0, %81 ], [ %.094, %71 ], [ %.094, %69 ], [ %.094, %68 ], [ %.094, %39 ], [ %.094, %29 ], [ %.094, %26 ], [ %.094, %25 ], [ %.094, %23 ], [ %.094, %9 ], [ %.094, %6 ]
  %.092.be = phi i32 [ %.092, %5 ], [ %.092, %512 ], [ %.092, %511 ], [ %.092, %499 ], [ %.092, %498 ], [ %.092, %497 ], [ %.092, %496 ], [ %.092, %491 ], [ %.092, %490 ], [ %.092, %488 ], [ %.092, %487 ], [ %.092, %485 ], [ 0, %484 ], [ %.092, %483 ], [ %.092, %463 ], [ %.092, %446 ], [ %.092, %436 ], [ %.092, %435 ], [ %.092, %425 ], [ %.092, %415 ], [ %.092, %414 ], [ %.092, %393 ], [ %.092, %383 ], [ %.092, %380 ], [ %.092, %379 ], [ %.092, %369 ], [ %.092, %359 ], [ %.092, %358 ], [ %.092, %347 ], [ %.092, %337 ], [ %.092, %322 ], [ %.092, %320 ], [ %.092, %307 ], [ %.092, %297 ], [ %.092, %296 ], [ %.092, %294 ], [ %.092, %293 ], [ %.092, %279 ], [ %.092, %269 ], [ %.092, %267 ], [ %.092, %254 ], [ %.092, %244 ], [ %.092, %243 ], [ %.092, %242 ], [ %.092, %232 ], [ %.092, %222 ], [ %.092, %221 ], [ %.092, %220 ], [ %.092, %219 ], [ %.092, %200 ], [ %.092, %191 ], [ %.092, %187 ], [ %.092, %186 ], [ %.092, %184 ], [ %.092, %172 ], [ %.092, %162 ], [ %.092, %161 ], [ %.092, %159 ], [ %.092, %154 ], [ %.092, %151 ], [ %.092, %150 ], [ %.092, %139 ], [ %.092, %129 ], [ %.092, %127 ], [ %.092, %126 ], [ %125, %124 ], [ %.092, %119 ], [ %.092, %116 ], [ %.092, %115 ], [ 0, %105 ], [ %.092, %95 ], [ %.092, %92 ], [ %.092, %91 ], [ %.092, %81 ], [ %.092, %71 ], [ %.092, %69 ], [ %.092, %68 ], [ %.092, %39 ], [ %.092, %29 ], [ %.092, %26 ], [ %.092, %25 ], [ %.092, %23 ], [ %.092, %9 ], [ %.092, %6 ]
  %.090.be = phi i32 [ %.090, %5 ], [ %.090, %512 ], [ %.090, %511 ], [ %.090, %499 ], [ %.090, %498 ], [ %.090, %497 ], [ %.090, %496 ], [ %.090, %491 ], [ %.090, %490 ], [ %.090, %488 ], [ %.090, %487 ], [ 1, %485 ], [ %.090, %484 ], [ %.090, %483 ], [ %.090, %463 ], [ %.090, %446 ], [ %.090, %436 ], [ %.090, %435 ], [ %.090, %425 ], [ %.090, %415 ], [ %.090, %414 ], [ %.090, %393 ], [ %.090, %383 ], [ %.090, %380 ], [ %.090, %379 ], [ %.090, %369 ], [ %.090, %359 ], [ %.090, %358 ], [ %.090, %347 ], [ %.090, %337 ], [ %.090, %322 ], [ %.090, %320 ], [ %.090, %307 ], [ %.090, %297 ], [ %.090, %296 ], [ %.090, %294 ], [ %.090, %293 ], [ %.090, %279 ], [ %.090, %269 ], [ %.090, %267 ], [ %.090, %254 ], [ %.090, %244 ], [ %.090, %243 ], [ %.090, %242 ], [ %.090, %232 ], [ %.090, %222 ], [ %.090, %221 ], [ %.090, %220 ], [ %.090, %219 ], [ %.090, %200 ], [ %.090, %191 ], [ %.090, %187 ], [ %.090, %186 ], [ %.090, %184 ], [ %.090, %172 ], [ %.090, %162 ], [ %.090, %161 ], [ %160, %159 ], [ %.090, %154 ], [ %.090, %151 ], [ %.090, %150 ], [ 1, %139 ], [ %.090, %129 ], [ %.090, %127 ], [ %.090, %126 ], [ %.090, %124 ], [ %.090, %119 ], [ %.090, %116 ], [ %.090, %115 ], [ %.090, %105 ], [ %.090, %95 ], [ %.090, %92 ], [ %.090, %91 ], [ %.090, %81 ], [ %.090, %71 ], [ %.090, %69 ], [ %.090, %68 ], [ %.090, %39 ], [ %.090, %29 ], [ %.090, %26 ], [ %.090, %25 ], [ %.090, %23 ], [ %.090, %9 ], [ %.090, %6 ]
  %.088.be = phi i32 [ %.088, %5 ], [ %.088, %512 ], [ %.088, %511 ], [ %.088, %499 ], [ %.088, %498 ], [ %.088, %497 ], [ %.088, %496 ], [ %.088, %491 ], [ %.088, %490 ], [ %489, %488 ], [ %.088, %487 ], [ %.088, %485 ], [ %.088, %484 ], [ %.088, %483 ], [ %.088, %463 ], [ %.088, %446 ], [ %.088, %436 ], [ %.088, %435 ], [ %.088, %425 ], [ %.088, %415 ], [ %.088, %414 ], [ %.088, %393 ], [ %.088, %383 ], [ %.088, %380 ], [ %.088, %379 ], [ %.088, %369 ], [ %.088, %359 ], [ %.088, %358 ], [ %.088, %347 ], [ %.088, %337 ], [ %.088, %322 ], [ %.088, %320 ], [ %.088, %307 ], [ %.088, %297 ], [ %.088, %296 ], [ %.088, %294 ], [ %.088, %293 ], [ %.088, %279 ], [ %.088, %269 ], [ %.088, %267 ], [ %.088, %254 ], [ %.088, %244 ], [ %.088, %243 ], [ %.088, %242 ], [ %.neg103, %232 ], [ %.088, %222 ], [ %.088, %221 ], [ %.088, %220 ], [ %.088, %219 ], [ %.088, %200 ], [ %.088, %191 ], [ %.088, %187 ], [ %.088, %186 ], [ %.088, %184 ], [ %.088, %172 ], [ %.088, %162 ], [ 1, %161 ], [ %.088, %159 ], [ %.088, %154 ], [ %.088, %151 ], [ %.088, %150 ], [ %.088, %139 ], [ %.088, %129 ], [ %.088, %127 ], [ %.088, %126 ], [ %.088, %124 ], [ %.088, %119 ], [ %.088, %116 ], [ %.088, %115 ], [ %.088, %105 ], [ %.088, %95 ], [ %.088, %92 ], [ %.088, %91 ], [ %.088, %81 ], [ %.088, %71 ], [ %.088, %69 ], [ %.088, %68 ], [ %.088, %39 ], [ %.088, %29 ], [ %.088, %26 ], [ %.088, %25 ], [ %.088, %23 ], [ %.088, %9 ], [ %.088, %6 ]
  %.086.be = phi i32 [ %.086, %5 ], [ %.086, %512 ], [ %.086, %511 ], [ %.086, %499 ], [ %.086, %498 ], [ %.086, %497 ], [ %.086, %496 ], [ %.086, %491 ], [ %.086, %490 ], [ %.086, %488 ], [ %.086, %487 ], [ %.086, %485 ], [ %.086, %484 ], [ %.086, %483 ], [ %.086, %463 ], [ %.086, %446 ], [ %.086, %436 ], [ %.086, %435 ], [ %.086, %425 ], [ %.086, %415 ], [ %.086, %414 ], [ %.086, %393 ], [ %.086, %383 ], [ %.086, %380 ], [ %.086, %379 ], [ %.086, %369 ], [ %.086, %359 ], [ %.086, %358 ], [ %.086, %347 ], [ %.086, %337 ], [ %.086, %322 ], [ %.086, %320 ], [ %.086, %307 ], [ %.086, %297 ], [ %.086, %296 ], [ %.086, %294 ], [ %.086, %293 ], [ %.086, %279 ], [ %.086, %269 ], [ %.086, %267 ], [ %.086, %254 ], [ %.086, %244 ], [ %.086, %243 ], [ %.086, %242 ], [ %.086, %232 ], [ %.086, %222 ], [ %.086, %221 ], [ %.neg104, %220 ], [ %.086, %219 ], [ %.086, %200 ], [ %.086, %191 ], [ %.086, %187 ], [ 1, %186 ], [ %.086, %184 ], [ %.086, %172 ], [ %.086, %162 ], [ %.086, %161 ], [ %.086, %159 ], [ %.086, %154 ], [ %.086, %151 ], [ %.086, %150 ], [ %.086, %139 ], [ %.086, %129 ], [ %.086, %127 ], [ %.086, %126 ], [ %.086, %124 ], [ %.086, %119 ], [ %.086, %116 ], [ %.086, %115 ], [ %.086, %105 ], [ %.086, %95 ], [ %.086, %92 ], [ %.086, %91 ], [ %.086, %81 ], [ %.086, %71 ], [ %.086, %69 ], [ %.086, %68 ], [ %.086, %39 ], [ %.086, %29 ], [ %.086, %26 ], [ %.086, %25 ], [ %.086, %23 ], [ %.086, %9 ], [ %.086, %6 ]
  %.084.be = phi i32 [ %.084, %5 ], [ %.084, %512 ], [ %.084, %511 ], [ %.084, %499 ], [ %.084, %498 ], [ %.084, %497 ], [ %.084, %496 ], [ %.084, %491 ], [ %.084, %490 ], [ %.084, %488 ], [ %.084, %487 ], [ %.084, %485 ], [ %.084, %484 ], [ %.084, %483 ], [ %.084, %463 ], [ %.084, %446 ], [ %.084, %436 ], [ %.084, %435 ], [ %.084, %425 ], [ %.084, %415 ], [ %.084, %414 ], [ %.084, %393 ], [ %.084, %383 ], [ %.084, %380 ], [ %.084, %379 ], [ %.084, %369 ], [ %.084, %359 ], [ %.084, %358 ], [ %.084, %347 ], [ %.084, %337 ], [ %.084, %322 ], [ %.084, %320 ], [ %.084, %307 ], [ %.084, %297 ], [ %.084, %296 ], [ %295, %294 ], [ %.084, %293 ], [ %.084, %279 ], [ %.084, %269 ], [ %.084, %267 ], [ %.084, %254 ], [ %.084, %244 ], [ 1, %243 ], [ %.084, %242 ], [ %.084, %232 ], [ %.084, %222 ], [ %.084, %221 ], [ %.084, %220 ], [ %.084, %219 ], [ %.084, %200 ], [ %.084, %191 ], [ %.084, %187 ], [ %.084, %186 ], [ %.084, %184 ], [ %.084, %172 ], [ %.084, %162 ], [ %.084, %161 ], [ %.084, %159 ], [ %.084, %154 ], [ %.084, %151 ], [ %.084, %150 ], [ %.084, %139 ], [ %.084, %129 ], [ %.084, %127 ], [ %.084, %126 ], [ %.084, %124 ], [ %.084, %119 ], [ %.084, %116 ], [ %.084, %115 ], [ %.084, %105 ], [ %.084, %95 ], [ %.084, %92 ], [ %.084, %91 ], [ %.084, %81 ], [ %.084, %71 ], [ %.084, %69 ], [ %.084, %68 ], [ %.084, %39 ], [ %.084, %29 ], [ %.084, %26 ], [ %.084, %25 ], [ %.084, %23 ], [ %.084, %9 ], [ %.084, %6 ]
  %.082.be = phi i32 [ %.082, %5 ], [ %.082, %512 ], [ %.082, %511 ], [ %510, %499 ], [ %.082, %498 ], [ %.082, %497 ], [ %.082, %496 ], [ %.082, %491 ], [ %.082, %490 ], [ %.082, %488 ], [ %.082, %487 ], [ %.082, %485 ], [ %.082, %484 ], [ %.082, %483 ], [ %.082, %463 ], [ %.082, %446 ], [ %.082, %436 ], [ %.082, %435 ], [ %.082, %425 ], [ %.082, %415 ], [ %.082, %414 ], [ %404, %393 ], [ %.082, %383 ], [ %.082, %380 ], [ %.082, %379 ], [ %.082, %369 ], [ %.082, %359 ], [ %.082, %358 ], [ %.082, %347 ], [ %.082, %337 ], [ %336, %322 ], [ %.082, %320 ], [ %.082, %307 ], [ %.082, %297 ], [ 0, %296 ], [ %.082, %294 ], [ %.082, %293 ], [ %.082, %279 ], [ %.082, %269 ], [ %.082, %267 ], [ %.082, %254 ], [ %.082, %244 ], [ %.082, %243 ], [ %.082, %242 ], [ %.082, %232 ], [ %.082, %222 ], [ %.082, %221 ], [ %.082, %220 ], [ %.082, %219 ], [ %.082, %200 ], [ %.082, %191 ], [ %.082, %187 ], [ %.082, %186 ], [ %.082, %184 ], [ %.082, %172 ], [ %.082, %162 ], [ %.082, %161 ], [ %.082, %159 ], [ %.082, %154 ], [ %.082, %151 ], [ %.082, %150 ], [ %.082, %139 ], [ %.082, %129 ], [ %.082, %127 ], [ %.082, %126 ], [ %.082, %124 ], [ %.082, %119 ], [ %.082, %116 ], [ %.082, %115 ], [ %.082, %105 ], [ %.082, %95 ], [ %.082, %92 ], [ %.082, %91 ], [ %.082, %81 ], [ %.082, %71 ], [ %.082, %69 ], [ %.082, %68 ], [ %.082, %39 ], [ %.082, %29 ], [ %.082, %26 ], [ %.082, %25 ], [ %.082, %23 ], [ %.082, %9 ], [ %.082, %6 ]
  %.080.be = phi i32 [ %.080, %5 ], [ %.080, %512 ], [ %.080, %511 ], [ %.080, %499 ], [ %.080, %498 ], [ %.neg101, %497 ], [ %.080, %496 ], [ %.080, %491 ], [ %.080, %490 ], [ %.080, %488 ], [ %.080, %487 ], [ %.080, %485 ], [ %.080, %484 ], [ %.080, %483 ], [ %.080, %463 ], [ %.080, %446 ], [ %.080, %436 ], [ %.080, %435 ], [ %.080, %425 ], [ %.080, %415 ], [ %.080, %414 ], [ %.080, %393 ], [ %.080, %383 ], [ %.080, %380 ], [ %.080, %379 ], [ %.080, %369 ], [ %.080, %359 ], [ %.080, %358 ], [ %348, %347 ], [ %.080, %337 ], [ %.080, %322 ], [ %.080, %320 ], [ %.080, %307 ], [ %.080, %297 ], [ 1, %296 ], [ %.080, %294 ], [ %.080, %293 ], [ %.080, %279 ], [ %.080, %269 ], [ %.080, %267 ], [ %.080, %254 ], [ %.080, %244 ], [ %.080, %243 ], [ %.080, %242 ], [ %.080, %232 ], [ %.080, %222 ], [ %.080, %221 ], [ %.080, %220 ], [ %.080, %219 ], [ %.080, %200 ], [ %.080, %191 ], [ %.080, %187 ], [ %.080, %186 ], [ %.080, %184 ], [ %.080, %172 ], [ %.080, %162 ], [ %.080, %161 ], [ %.080, %159 ], [ %.080, %154 ], [ %.080, %151 ], [ %.080, %150 ], [ %.080, %139 ], [ %.080, %129 ], [ %.080, %127 ], [ %.080, %126 ], [ %.080, %124 ], [ %.080, %119 ], [ %.080, %116 ], [ %.080, %115 ], [ %.080, %105 ], [ %.080, %95 ], [ %.080, %92 ], [ %.080, %91 ], [ %.080, %81 ], [ %.080, %71 ], [ %.080, %69 ], [ %.080, %68 ], [ %.080, %39 ], [ %.080, %29 ], [ %.080, %26 ], [ %.080, %25 ], [ %.080, %23 ], [ %.080, %9 ], [ %.080, %6 ]
  %.078.be = phi i32 [ %.078, %5 ], [ %.078, %512 ], [ %.neg100, %511 ], [ %.078, %499 ], [ 1, %498 ], [ %.078, %497 ], [ %.078, %496 ], [ %.078, %491 ], [ %.078, %490 ], [ %.078, %488 ], [ %.078, %487 ], [ %.078, %485 ], [ %.078, %484 ], [ %.078, %483 ], [ %.078, %463 ], [ %.078, %446 ], [ %.078, %436 ], [ %.078, %435 ], [ %.neg102, %425 ], [ %.078, %415 ], [ %.078, %414 ], [ %.078, %393 ], [ %.078, %383 ], [ %.078, %380 ], [ %.078, %379 ], [ 1, %369 ], [ %.078, %359 ], [ %.078, %358 ], [ %.078, %347 ], [ %.078, %337 ], [ %.078, %322 ], [ %.078, %320 ], [ %.078, %307 ], [ %.078, %297 ], [ %.078, %296 ], [ %.078, %294 ], [ %.078, %293 ], [ %.078, %279 ], [ %.078, %269 ], [ %.078, %267 ], [ %.078, %254 ], [ %.078, %244 ], [ %.078, %243 ], [ %.078, %242 ], [ %.078, %232 ], [ %.078, %222 ], [ %.078, %221 ], [ %.078, %220 ], [ %.078, %219 ], [ %.078, %200 ], [ %.078, %191 ], [ %.078, %187 ], [ %.078, %186 ], [ %.078, %184 ], [ %.078, %172 ], [ %.078, %162 ], [ %.078, %161 ], [ %.078, %159 ], [ %.078, %154 ], [ %.078, %151 ], [ %.078, %150 ], [ %.078, %139 ], [ %.078, %129 ], [ %.078, %127 ], [ %.078, %126 ], [ %.078, %124 ], [ %.078, %119 ], [ %.078, %116 ], [ %.078, %115 ], [ %.078, %105 ], [ %.078, %95 ], [ %.078, %92 ], [ %.078, %91 ], [ %.078, %81 ], [ %.078, %71 ], [ %.078, %69 ], [ %.078, %68 ], [ %.078, %39 ], [ %.078, %29 ], [ %.078, %26 ], [ %.078, %25 ], [ %.078, %23 ], [ %.078, %9 ], [ %.078, %6 ]
  %.0.be = phi i32 [ %.0, %5 ], [ 360915261, %512 ], [ 435260261, %511 ], [ 2126024813, %499 ], [ 138499669, %498 ], [ 1794506517, %497 ], [ 262765799, %496 ], [ -683783503, %491 ], [ -984291877, %490 ], [ 2024444880, %488 ], [ -1655678773, %487 ], [ 1387533506, %485 ], [ 246230204, %484 ], [ -694379611, %483 ], [ -739217179, %463 ], [ %461, %446 ], [ %445, %436 ], [ 168562343, %435 ], [ %434, %425 ], [ %424, %415 ], [ -206279825, %414 ], [ %413, %393 ], [ %392, %383 ], [ %382, %380 ], [ 168562343, %379 ], [ %378, %369 ], [ %368, %359 ], [ 1503838315, %358 ], [ %357, %347 ], [ %346, %337 ], [ -1643613725, %322 ], [ %321, %320 ], [ %319, %307 ], [ %306, %297 ], [ 1503838315, %296 ], [ 1575338363, %294 ], [ -1597657252, %293 ], [ %292, %279 ], [ %278, %269 ], [ %268, %267 ], [ %266, %254 ], [ %253, %244 ], [ 1575338363, %243 ], [ 64057315, %242 ], [ %241, %232 ], [ %231, %222 ], [ 723706965, %221 ], [ -1776379969, %220 ], [ -152045712, %219 ], [ -306980223, %200 ], [ %199, %191 ], [ %190, %187 ], [ -1776379969, %186 ], [ %185, %184 ], [ %183, %172 ], [ %171, %162 ], [ 64057315, %161 ], [ 797734240, %159 ], [ -453775097, %154 ], [ %153, %151 ], [ 797734240, %150 ], [ %149, %139 ], [ %138, %129 ], [ 34351976, %127 ], [ -2057605425, %126 ], [ -855184037, %124 ], [ 178151100, %119 ], [ %118, %116 ], [ -855184037, %115 ], [ %114, %105 ], [ %104, %95 ], [ %94, %92 ], [ 34351976, %91 ], [ %90, %81 ], [ %80, %71 ], [ -786384880, %69 ], [ 793793252, %68 ], [ %67, %39 ], [ %38, %29 ], [ %28, %26 ], [ -786384880, %25 ], [ -856287942, %23 ], [ 19931038, %9 ], [ %8, %6 ]
  br label %5

6:                                                ; preds = %5
  %7 = icmp slt i32 %.098, 1000001
  %8 = select i1 %7, i32 1995837978, i32 41051682
  br label %.backedge

9:                                                ; preds = %5
  %10 = sdiv i32 1000000007, %.098
  %11 = sub nsw i32 1000000007, %10
  %12 = zext i32 %11 to i64
  %13 = srem i32 1000000007, %.098
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @g, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = mul nsw i64 %17, %12
  %19 = srem i64 %18, 1000000007
  %20 = trunc i64 %19 to i32
  %21 = sext i32 %.098 to i64
  %22 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @g, i64 0, i64 %21
  store i32 %20, i32* %22, align 4
  br label %.backedge

23:                                               ; preds = %5
  %24 = add i32 %.098, 1
  br label %.backedge

25:                                               ; preds = %5
  br label %.backedge

26:                                               ; preds = %5
  %27 = icmp slt i32 %.096, 1000001
  %28 = select i1 %27, i32 -956774099, i32 1486909127
  br label %.backedge

29:                                               ; preds = %5
  %30 = load i32, i32* @x.1, align 4
  %31 = load i32, i32* @y.2, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -739217179, i32 -536638268
  br label %.backedge

39:                                               ; preds = %5
  %40 = sext i32 %.096 to i64
  %41 = add i32 %.096, -1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @f, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %45, %40
  %47 = srem i64 %46, 1000000007
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @f, i64 0, i64 %40
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @g, i64 0, i64 %42
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @g, i64 0, i64 %40
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = mul nsw i64 %55, %52
  %57 = srem i64 %56, 1000000007
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %53, align 4
  %59 = load i32, i32* @x.1, align 4
  %60 = load i32, i32* @y.2, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -452093561, i32 -536638268
  br label %.backedge

68:                                               ; preds = %5
  br label %.backedge

69:                                               ; preds = %5
  %70 = add i32 %.096, 1
  br label %.backedge

71:                                               ; preds = %5
  %72 = load i32, i32* @x.1, align 4
  %73 = load i32, i32* @y.2, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 -694379611, i32 -74856561
  br label %.backedge

81:                                               ; preds = %5
  %82 = load i32, i32* @x.1, align 4
  %83 = load i32, i32* @y.2, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 -1026774157, i32 -74856561
  br label %.backedge

91:                                               ; preds = %5
  br label %.backedge

92:                                               ; preds = %5
  %93 = icmp slt i32 %.094, 4001
  %94 = select i1 %93, i32 1561432727, i32 473967613
  br label %.backedge

95:                                               ; preds = %5
  %96 = load i32, i32* @x.1, align 4
  %97 = load i32, i32* @y.2, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 246230204, i32 1959439814
  br label %.backedge

105:                                              ; preds = %5
  %106 = load i32, i32* @x.1, align 4
  %107 = load i32, i32* @y.2, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 156555644, i32 1959439814
  br label %.backedge

115:                                              ; preds = %5
  br label %.backedge

116:                                              ; preds = %5
  %117 = icmp slt i32 %.092, 4001
  %118 = select i1 %117, i32 -1489116657, i32 -2125217862
  br label %.backedge

119:                                              ; preds = %5
  %120 = tail call i32 @_Z6getansii(i32 %.094, i32 %.092)
  %121 = sext i32 %.094 to i64
  %122 = sext i32 %.092 to i64
  %123 = getelementptr inbounds [4007 x [4007 x i32]], [4007 x [4007 x i32]]* @gt, i64 0, i64 %121, i64 %122
  store i32 %120, i32* %123, align 4
  br label %.backedge

124:                                              ; preds = %5
  %125 = add i32 %.092, 1
  br label %.backedge

126:                                              ; preds = %5
  br label %.backedge

127:                                              ; preds = %5
  %128 = add i32 %.094, 1
  br label %.backedge

129:                                              ; preds = %5
  %130 = load i32, i32* @x.1, align 4
  %131 = load i32, i32* @y.2, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 1387533506, i32 -1127905515
  br label %.backedge

139:                                              ; preds = %5
  %140 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  %141 = load i32, i32* @x.1, align 4
  %142 = load i32, i32* @y.2, align 4
  %143 = add i32 %141, -1
  %144 = mul i32 %143, %141
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %147, %146
  %149 = select i1 %148, i32 595986243, i32 -1127905515
  br label %.backedge

150:                                              ; preds = %5
  br label %.backedge

151:                                              ; preds = %5
  %152 = load i32, i32* @n, align 4
  %.not106 = icmp sgt i32 %.090, %152
  %153 = select i1 %.not106, i32 1550554591, i32 1646214486
  br label %.backedge

154:                                              ; preds = %5
  %155 = sext i32 %.090 to i64
  %156 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @a, i64 0, i64 %155
  %157 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @b, i64 0, i64 %155
  %158 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %156, i32* nonnull %157)
  br label %.backedge

159:                                              ; preds = %5
  %160 = add i32 %.090, 1
  br label %.backedge

161:                                              ; preds = %5
  br label %.backedge

162:                                              ; preds = %5
  %163 = load i32, i32* @x.1, align 4
  %164 = load i32, i32* @y.2, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -1655678773, i32 -1176452975
  br label %.backedge

172:                                              ; preds = %5
  %173 = load i32, i32* @n, align 4
  %174 = icmp sle i32 %.088, %173
  store i1 %174, i1* %4, align 1
  %175 = load i32, i32* @x.1, align 4
  %176 = load i32, i32* @y.2, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 732655977, i32 -1176452975
  br label %.backedge

184:                                              ; preds = %5
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %185 = select i1 %.0..0..0., i32 -732340505, i32 -1685675764
  br label %.backedge

186:                                              ; preds = %5
  br label %.backedge

187:                                              ; preds = %5
  %188 = load i32, i32* @k, align 4
  %189 = shl nsw i32 %188, 1
  %.not105 = icmp sgt i32 %.086, %189
  %190 = select i1 %.not105, i32 -574289315, i32 -1193361171
  br label %.backedge

191:                                              ; preds = %5
  %192 = sext i32 %.088 to i64
  %193 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @b, i64 0, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = load i32, i32* @k, align 4
  %196 = sub i32 %194, %.086
  %197 = add i32 %196, %195
  %198 = icmp sgt i32 %197, -1
  %199 = select i1 %198, i32 643338199, i32 -306980223
  br label %.backedge

200:                                              ; preds = %5
  %201 = sext i32 %.086 to i64
  %202 = getelementptr inbounds [1000007 x i64], [1000007 x i64]* @ft, i64 0, i64 %201
  %203 = load i64, i64* %202, align 8
  %204 = sext i32 %.088 to i64
  %205 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @a, i64 0, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @b, i64 0, i64 %204
  %208 = load i32, i32* %207, align 4
  %209 = add i32 %208, %206
  %210 = sext i32 %209 to i64
  %211 = load i32, i32* @k, align 4
  %212 = sub i32 %208, %.086
  %213 = add i32 %212, %211
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [4007 x [4007 x i32]], [4007 x [4007 x i32]]* @gt, i64 0, i64 %210, i64 %214
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = add i64 %203, %217
  store i64 %218, i64* %202, align 8
  br label %.backedge

219:                                              ; preds = %5
  br label %.backedge

220:                                              ; preds = %5
  %.neg104 = add i32 %.086, 1
  br label %.backedge

221:                                              ; preds = %5
  br label %.backedge

222:                                              ; preds = %5
  %223 = load i32, i32* @x.1, align 4
  %224 = load i32, i32* @y.2, align 4
  %225 = add i32 %223, -1
  %226 = mul i32 %225, %223
  %227 = and i32 %226, 1
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %229, %228
  %231 = select i1 %230, i32 2024444880, i32 -863434324
  br label %.backedge

232:                                              ; preds = %5
  %.neg103 = add i32 %.088, 1
  %233 = load i32, i32* @x.1, align 4
  %234 = load i32, i32* @y.2, align 4
  %235 = add i32 %233, -1
  %236 = mul i32 %235, %233
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %239, %238
  %241 = select i1 %240, i32 1477613824, i32 -863434324
  br label %.backedge

242:                                              ; preds = %5
  br label %.backedge

243:                                              ; preds = %5
  br label %.backedge

244:                                              ; preds = %5
  %245 = load i32, i32* @x.1, align 4
  %246 = load i32, i32* @y.2, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 -984291877, i32 73109923
  br label %.backedge

254:                                              ; preds = %5
  %255 = load i32, i32* @k, align 4
  %256 = shl nsw i32 %255, 1
  %257 = icmp sle i32 %.084, %256
  store i1 %257, i1* %3, align 1
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 704429607, i32 73109923
  br label %.backedge

267:                                              ; preds = %5
  %.0..0..0.75 = load volatile i1, i1* %3, align 1
  %268 = select i1 %.0..0..0.75, i32 889967722, i32 -1395570050
  br label %.backedge

269:                                              ; preds = %5
  %270 = load i32, i32* @x.1, align 4
  %271 = load i32, i32* @y.2, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 -683783503, i32 -40932516
  br label %.backedge

279:                                              ; preds = %5
  %280 = sext i32 %.084 to i64
  %281 = getelementptr inbounds [1000007 x i64], [1000007 x i64]* @ft, i64 0, i64 %280
  %282 = load i64, i64* %281, align 8
  %283 = srem i64 %282, 1000000007
  store i64 %283, i64* %281, align 8
  %284 = load i32, i32* @x.1, align 4
  %285 = load i32, i32* @y.2, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 -2046871792, i32 -40932516
  br label %.backedge

293:                                              ; preds = %5
  br label %.backedge

294:                                              ; preds = %5
  %295 = add i32 %.084, 1
  br label %.backedge

296:                                              ; preds = %5
  br label %.backedge

297:                                              ; preds = %5
  %298 = load i32, i32* @x.1, align 4
  %299 = load i32, i32* @y.2, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 262765799, i32 659562767
  br label %.backedge

307:                                              ; preds = %5
  %308 = load i32, i32* @k, align 4
  %309 = shl nsw i32 %308, 1
  %310 = icmp sle i32 %.080, %309
  store i1 %310, i1* %2, align 1
  %311 = load i32, i32* @x.1, align 4
  %312 = load i32, i32* @y.2, align 4
  %313 = add i32 %311, -1
  %314 = mul i32 %313, %311
  %315 = and i32 %314, 1
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %317, %316
  %319 = select i1 %318, i32 -1258874557, i32 659562767
  br label %.backedge

320:                                              ; preds = %5
  %.0..0..0.76 = load volatile i1, i1* %2, align 1
  %321 = select i1 %.0..0..0.76, i32 -1311242483, i32 156746164
  br label %.backedge

322:                                              ; preds = %5
  %323 = sext i32 %.082 to i64
  %324 = sext i32 %.080 to i64
  %325 = getelementptr inbounds [1000007 x i64], [1000007 x i64]* @ft, i64 0, i64 %324
  %326 = load i64, i64* %325, align 8
  %327 = load i32, i32* @k, align 4
  %328 = shl nsw i32 %327, 1
  %329 = sub i32 %328, %.080
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds [1000007 x i64], [1000007 x i64]* @ft, i64 0, i64 %330
  %332 = load i64, i64* %331, align 8
  %333 = mul nsw i64 %332, %326
  %334 = add i64 %333, %323
  %335 = srem i64 %334, 1000000007
  %336 = trunc i64 %335 to i32
  br label %.backedge

337:                                              ; preds = %5
  %338 = load i32, i32* @x.1, align 4
  %339 = load i32, i32* @y.2, align 4
  %340 = add i32 %338, -1
  %341 = mul i32 %340, %338
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %344, %343
  %346 = select i1 %345, i32 1794506517, i32 -733737276
  br label %.backedge

347:                                              ; preds = %5
  %348 = add i32 %.080, 1
  %349 = load i32, i32* @x.1, align 4
  %350 = load i32, i32* @y.2, align 4
  %351 = add i32 %349, -1
  %352 = mul i32 %351, %349
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %355, %354
  %357 = select i1 %356, i32 1969653451, i32 -733737276
  br label %.backedge

358:                                              ; preds = %5
  br label %.backedge

359:                                              ; preds = %5
  %360 = load i32, i32* @x.1, align 4
  %361 = load i32, i32* @y.2, align 4
  %362 = add i32 %360, -1
  %363 = mul i32 %362, %360
  %364 = and i32 %363, 1
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %366, %365
  %368 = select i1 %367, i32 138499669, i32 157028473
  br label %.backedge

369:                                              ; preds = %5
  %370 = load i32, i32* @x.1, align 4
  %371 = load i32, i32* @y.2, align 4
  %372 = add i32 %370, -1
  %373 = mul i32 %372, %370
  %374 = and i32 %373, 1
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %376, %375
  %378 = select i1 %377, i32 -609792156, i32 157028473
  br label %.backedge

379:                                              ; preds = %5
  br label %.backedge

380:                                              ; preds = %5
  %381 = load i32, i32* @n, align 4
  %.not = icmp sgt i32 %.078, %381
  %382 = select i1 %.not, i32 -1631374932, i32 776906732
  br label %.backedge

383:                                              ; preds = %5
  %384 = load i32, i32* @x.1, align 4
  %385 = load i32, i32* @y.2, align 4
  %386 = add i32 %384, -1
  %387 = mul i32 %386, %384
  %388 = and i32 %387, 1
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %390, %389
  %392 = select i1 %391, i32 2126024813, i32 -1545421506
  br label %.backedge

393:                                              ; preds = %5
  %394 = sext i32 %.078 to i64
  %395 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @a, i64 0, i64 %394
  %396 = load i32, i32* %395, align 4
  %397 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @b, i64 0, i64 %394
  %398 = load i32, i32* %397, align 4
  %399 = shl nsw i32 %398, 1
  %400 = add i32 %398, %396
  %401 = shl i32 %400, 1
  %402 = tail call i32 @_Z6getansii(i32 %401, i32 %399)
  %403 = sub i32 %.082, %402
  %404 = srem i32 %403, 1000000007
  %405 = load i32, i32* @x.1, align 4
  %406 = load i32, i32* @y.2, align 4
  %407 = add i32 %405, -1
  %408 = mul i32 %407, %405
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %411, %410
  %413 = select i1 %412, i32 -434075042, i32 -1545421506
  br label %.backedge

414:                                              ; preds = %5
  br label %.backedge

415:                                              ; preds = %5
  %416 = load i32, i32* @x.1, align 4
  %417 = load i32, i32* @y.2, align 4
  %418 = add i32 %416, -1
  %419 = mul i32 %418, %416
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %422, %421
  %424 = select i1 %423, i32 435260261, i32 -1069380534
  br label %.backedge

425:                                              ; preds = %5
  %.neg102 = add i32 %.078, 1
  %426 = load i32, i32* @x.1, align 4
  %427 = load i32, i32* @y.2, align 4
  %428 = add i32 %426, -1
  %429 = mul i32 %428, %426
  %430 = and i32 %429, 1
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %432, %431
  %434 = select i1 %433, i32 -1750468286, i32 -1069380534
  br label %.backedge

435:                                              ; preds = %5
  br label %.backedge

436:                                              ; preds = %5
  %437 = load i32, i32* @x.1, align 4
  %438 = load i32, i32* @y.2, align 4
  %439 = add i32 %437, -1
  %440 = mul i32 %439, %437
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %443, %442
  %445 = select i1 %444, i32 360915261, i32 1015097041
  br label %.backedge

446:                                              ; preds = %5
  %447 = add i32 %.082, 1000000007
  %448 = sext i32 %447 to i64
  %449 = mul nsw i64 %448, 500000004
  %450 = srem i64 %449, 1000000007
  %451 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %450)
  %452 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %451, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %453 = load i32, i32* @x.1, align 4
  %454 = load i32, i32* @y.2, align 4
  %455 = add i32 %453, -1
  %456 = mul i32 %455, %453
  %457 = and i32 %456, 1
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %459, %458
  %461 = select i1 %460, i32 1269440363, i32 1015097041
  br label %.backedge

462:                                              ; preds = %5
  store i32 0, i32* %1, align 4
  %.0..0..0.77 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.77

463:                                              ; preds = %5
  %464 = sext i32 %.096 to i64
  %465 = add i32 %.096, -1
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @f, i64 0, i64 %466
  %468 = load i32, i32* %467, align 4
  %469 = sext i32 %468 to i64
  %470 = mul nsw i64 %469, %464
  %471 = srem i64 %470, 1000000007
  %472 = trunc i64 %471 to i32
  %473 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @f, i64 0, i64 %464
  store i32 %472, i32* %473, align 4
  %474 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @g, i64 0, i64 %466
  %475 = load i32, i32* %474, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @g, i64 0, i64 %464
  %478 = load i32, i32* %477, align 4
  %479 = sext i32 %478 to i64
  %480 = mul nsw i64 %479, %476
  %481 = srem i64 %480, 1000000007
  %482 = trunc i64 %481 to i32
  store i32 %482, i32* %477, align 4
  br label %.backedge

483:                                              ; preds = %5
  br label %.backedge

484:                                              ; preds = %5
  br label %.backedge

485:                                              ; preds = %5
  %486 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  br label %.backedge

487:                                              ; preds = %5
  br label %.backedge

488:                                              ; preds = %5
  %489 = add i32 %.088, 1
  br label %.backedge

490:                                              ; preds = %5
  br label %.backedge

491:                                              ; preds = %5
  %492 = sext i32 %.084 to i64
  %493 = getelementptr inbounds [1000007 x i64], [1000007 x i64]* @ft, i64 0, i64 %492
  %494 = load i64, i64* %493, align 8
  %495 = srem i64 %494, 1000000007
  store i64 %495, i64* %493, align 8
  br label %.backedge

496:                                              ; preds = %5
  br label %.backedge

497:                                              ; preds = %5
  %.neg101 = add i32 %.080, 1
  br label %.backedge

498:                                              ; preds = %5
  br label %.backedge

499:                                              ; preds = %5
  %500 = sext i32 %.078 to i64
  %501 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @a, i64 0, i64 %500
  %502 = load i32, i32* %501, align 4
  %503 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @b, i64 0, i64 %500
  %504 = load i32, i32* %503, align 4
  %505 = shl nsw i32 %504, 1
  %506 = add i32 %504, %502
  %507 = shl i32 %506, 1
  %508 = tail call i32 @_Z6getansii(i32 %507, i32 %505)
  %509 = sub i32 %.082, %508
  %510 = srem i32 %509, 1000000007
  br label %.backedge

511:                                              ; preds = %5
  %.neg100 = add i32 %.078, 1
  br label %.backedge

512:                                              ; preds = %5
  %.neg = add i32 %.082, 1000000007
  %513 = sext i32 %.neg to i64
  %514 = mul nsw i64 %513, 500000004
  %515 = srem i64 %514, 1000000007
  %516 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %515)
  %517 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %516, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z6getansii(i32 %0, i32 %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %5, align 4
  %7 = load i32, i32* @x.3, align 4
  %8 = load i32, i32* @y.4, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1332943551, i32 -85976884
  %16 = select i1 %14, i32 -1464581727, i32 -85976884
  %17 = sext i32 %0 to i64
  %18 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @f, i64 0, i64 %17
  %19 = sext i32 %1 to i64
  %20 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @g, i64 0, i64 %19
  %21 = sub i32 %0, %1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [1000007 x i32], [1000007 x i32]* @g, i64 0, i64 %22
  %24 = icmp slt i32 %1, 0
  %25 = select i1 %14, i32 1061196483, i32 1293716593
  %26 = select i1 %14, i32 1700786132, i32 1293716593
  %27 = icmp slt i32 %0, 0
  %28 = select i1 %27, i32 -898126427, i32 -1270126164
  br label %29

29:                                               ; preds = %.backedge, %2
  %.01518 = phi i32 [ undef, %2 ], [ %.01518.be, %.backedge ]
  %.015 = phi i32 [ undef, %2 ], [ %.015.be, %.backedge ]
  %.0 = phi i32 [ -906451630, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -906451630, label %30
    i32 -1903230974, label %33
    i32 -1270126164, label %34
    i32 1700786132, label %35
    i32 1061196483, label %36
    i32 -898126427, label %38
    i32 1416194913, label %39
    i32 1288375135, label %51
    i32 -1464581727, label %52
    i32 1332943551, label %53
    i32 1293716593, label %54
    i32 -85976884, label %55
  ]

.backedge:                                        ; preds = %29, %55, %54, %52, %51, %39, %38, %36, %35, %34, %33, %30
  %.01518.be = phi i32 [ %.01518, %29 ], [ %.01518, %55 ], [ %.01518, %54 ], [ %.015, %52 ], [ %.01518, %51 ], [ %.01518, %39 ], [ %.01518, %38 ], [ %.01518, %36 ], [ %.01518, %35 ], [ %.01518, %34 ], [ %.01518, %33 ], [ %.01518, %30 ]
  %.015.be = phi i32 [ %.015, %29 ], [ %.015, %55 ], [ %.015, %54 ], [ %.015, %52 ], [ %.015, %51 ], [ %50, %39 ], [ 0, %38 ], [ %.015, %36 ], [ %.015, %35 ], [ %.015, %34 ], [ %.015, %33 ], [ %.015, %30 ]
  %.0.be = phi i32 [ %.0, %29 ], [ -1464581727, %55 ], [ 1700786132, %54 ], [ %15, %52 ], [ %16, %51 ], [ 1288375135, %39 ], [ 1288375135, %38 ], [ %37, %36 ], [ %25, %35 ], [ %26, %34 ], [ %28, %33 ], [ %32, %30 ]
  br label %29

30:                                               ; preds = %29
  %.0..0..0. = load volatile i32, i32* %6, align 4
  %.0..0..0.12 = load volatile i32, i32* %5, align 4
  %31 = icmp slt i32 %.0..0..0., %.0..0..0.12
  %32 = select i1 %31, i32 -898126427, i32 -1903230974
  br label %.backedge

33:                                               ; preds = %29
  br label %.backedge

34:                                               ; preds = %29
  br label %.backedge

35:                                               ; preds = %29
  store i1 %24, i1* %4, align 1
  br label %.backedge

36:                                               ; preds = %29
  %.0..0..0.13 = load volatile i1, i1* %4, align 1
  %37 = select i1 %.0..0..0.13, i32 -898126427, i32 1416194913
  br label %.backedge

38:                                               ; preds = %29
  br label %.backedge

39:                                               ; preds = %29
  %40 = load i32, i32* %18, align 4
  %41 = sext i32 %40 to i64
  %42 = load i32, i32* %20, align 4
  %43 = sext i32 %42 to i64
  %44 = mul nsw i64 %43, %41
  %45 = srem i64 %44, 1000000007
  %46 = load i32, i32* %23, align 4
  %47 = sext i32 %46 to i64
  %48 = mul nsw i64 %45, %47
  %49 = srem i64 %48, 1000000007
  %50 = trunc i64 %49 to i32
  br label %.backedge

51:                                               ; preds = %29
  br label %.backedge

52:                                               ; preds = %29
  br label %.backedge

53:                                               ; preds = %29
  store i32 %.01518, i32* %3, align 4
  %.0..0..0.14 = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.14

54:                                               ; preds = %29
  br label %.backedge

55:                                               ; preds = %29
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s410613331.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
