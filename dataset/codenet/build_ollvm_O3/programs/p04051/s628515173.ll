; ModuleID = 'build_ollvm/programs/p04051/s628515173.ll'
source_filename = "Project_CodeNet_C++1400/p04051/s628515173.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_Z2giv = comdat any

$_Z3subii = comdat any

$_Z3addii = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = local_unnamed_addr global i32 0, align 4
@fac = local_unnamed_addr global [8030 x i32] zeroinitializer, align 16
@ifac = local_unnamed_addr global [8030 x i32] zeroinitializer, align 16
@f = local_unnamed_addr global i32** null, align 8
@val = local_unnamed_addr global i32** null, align 8
@_f = global [4015 x i32*] zeroinitializer, align 16
@_val = global [4015 x i32*] zeroinitializer, align 16
@__f = global [4015 x [4015 x i32]] zeroinitializer, align 16
@__val = global [4015 x [4015 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s628515173.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1413627215, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1413627215, label %11
    i32 550802221, label %14
    i32 -872273458, label %25
    i32 -497260444, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 550802221, i32 -497260444
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -872273458, i32 -497260444
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 550802221, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define i32 @_Z1Cii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [8030 x i32], [8030 x i32]* @fac, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds [8030 x i32], [8030 x i32]* @ifac, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = mul nsw i64 %10, %6
  %12 = srem i64 %11, 1000000007
  %13 = sub i32 %0, %1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [8030 x i32], [8030 x i32]* @ifac, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = mul nsw i64 %12, %17
  %19 = srem i64 %18, 1000000007
  %20 = trunc i64 %19 to i32
  ret i32 %20
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = tail call i32 @_Z2giv()
  store i32 %6, i32* @n, align 4
  br label %7

7:                                                ; preds = %.backedge, %0
  %.0121 = phi i32 [ 1, %0 ], [ %.0121.be, %.backedge ]
  %.0119 = phi i32 [ undef, %0 ], [ %.0119.be, %.backedge ]
  %.0117 = phi i32 [ undef, %0 ], [ %.0117.be, %.backedge ]
  %.0115 = phi i32 [ undef, %0 ], [ %.0115.be, %.backedge ]
  %.0113 = phi i32 [ undef, %0 ], [ %.0113.be, %.backedge ]
  %.0111 = phi i32 [ undef, %0 ], [ %.0111.be, %.backedge ]
  %.0109 = phi i32 [ undef, %0 ], [ %.0109.be, %.backedge ]
  %.0107 = phi i32 [ undef, %0 ], [ %.0107.be, %.backedge ]
  %.0105 = phi i32 [ undef, %0 ], [ %.0105.be, %.backedge ]
  %.0103 = phi i32 [ undef, %0 ], [ %.0103.be, %.backedge ]
  %.0 = phi i32 [ 1832434365, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1832434365, label %8
    i32 -1560346438, label %18
    i32 -1125710306, label %29
    i32 2093646991, label %31
    i32 230282634, label %41
    i32 2011373412, label %56
    i32 1919331338, label %57
    i32 -528537396, label %59
    i32 343087749, label %60
    i32 199421355, label %63
    i32 -824303842, label %74
    i32 -329411562, label %84
    i32 1711508454, label %95
    i32 -548704856, label %96
    i32 -130037436, label %97
    i32 23690155, label %107
    i32 691383223, label %118
    i32 -842234996, label %120
    i32 2032504603, label %134
    i32 1113996563, label %144
    i32 -603401672, label %155
    i32 139941158, label %156
    i32 933621990, label %157
    i32 -1898050295, label %167
    i32 -511815119, label %178
    i32 1506980216, label %180
    i32 1386450229, label %193
    i32 1026982535, label %194
    i32 1296319598, label %195
    i32 944449888, label %198
    i32 74434599, label %208
    i32 344377537, label %247
    i32 1340419696, label %248
    i32 1076820935, label %249
    i32 1509894490, label %250
    i32 -1244558821, label %253
    i32 -661413159, label %254
    i32 156441985, label %257
    i32 742902542, label %266
    i32 -1844779966, label %267
    i32 -1594591157, label %270
    i32 -1493583018, label %289
    i32 -934654262, label %292
    i32 1608003794, label %302
    i32 1463732902, label %328
    i32 15026604, label %329
    i32 1668024852, label %339
    i32 2053700294, label %349
    i32 -1885543974, label %350
    i32 -1871216422, label %352
    i32 -423230539, label %353
    i32 829803709, label %354
    i32 142381315, label %355
    i32 214730277, label %365
    i32 419654031, label %376
    i32 -635489474, label %378
    i32 1438496246, label %379
    i32 1486592005, label %382
    i32 -291288129, label %392
    i32 -799343271, label %410
    i32 1201588020, label %412
    i32 594624942, label %422
    i32 -1478896072, label %450
    i32 2034376691, label %451
    i32 1741294714, label %461
    i32 1183843240, label %471
    i32 637018494, label %472
    i32 990324798, label %474
    i32 852315413, label %484
    i32 -621760354, label %494
    i32 -1684701785, label %495
    i32 2033854796, label %497
    i32 -290821441, label %502
    i32 -936843528, label %503
    i32 1420597264, label %509
    i32 1853808346, label %511
    i32 92547258, label %512
    i32 -1317728522, label %514
    i32 -146503010, label %515
    i32 -1191182520, label %545
    i32 1443017078, label %562
    i32 -823549612, label %563
    i32 1766236405, label %564
    i32 -891653300, label %565
    i32 1856141728, label %584
    i32 -451851572, label %585
  ]

.backedge:                                        ; preds = %7, %585, %584, %565, %564, %563, %562, %545, %515, %514, %512, %511, %509, %503, %502, %495, %494, %484, %474, %472, %471, %461, %451, %450, %422, %412, %410, %392, %382, %379, %378, %376, %365, %355, %354, %353, %352, %350, %349, %339, %329, %328, %302, %292, %289, %270, %267, %266, %257, %254, %253, %250, %249, %248, %247, %208, %198, %195, %194, %193, %180, %178, %167, %157, %156, %155, %144, %134, %120, %118, %107, %97, %96, %95, %84, %74, %63, %60, %59, %57, %56, %41, %31, %29, %18, %8
  %.0121.be = phi i32 [ %.0121, %7 ], [ %.0121, %585 ], [ %.0121, %584 ], [ %.0121, %565 ], [ %.0121, %564 ], [ %.0121, %563 ], [ %.0121, %562 ], [ %.0121, %545 ], [ %.0121, %515 ], [ %.0121, %514 ], [ %.0121, %512 ], [ %.0121, %511 ], [ %.0121, %509 ], [ %.0121, %503 ], [ %.0121, %502 ], [ %.0121, %495 ], [ %.0121, %494 ], [ %.0121, %484 ], [ %.0121, %474 ], [ %.0121, %472 ], [ %.0121, %471 ], [ %.0121, %461 ], [ %.0121, %451 ], [ %.0121, %450 ], [ %.0121, %422 ], [ %.0121, %412 ], [ %.0121, %410 ], [ %.0121, %392 ], [ %.0121, %382 ], [ %.0121, %379 ], [ %.0121, %378 ], [ %.0121, %376 ], [ %.0121, %365 ], [ %.0121, %355 ], [ %.0121, %354 ], [ %.0121, %353 ], [ %.0121, %352 ], [ %.0121, %350 ], [ %.0121, %349 ], [ %.0121, %339 ], [ %.0121, %329 ], [ %.0121, %328 ], [ %.0121, %302 ], [ %.0121, %292 ], [ %.0121, %289 ], [ %.0121, %270 ], [ %.0121, %267 ], [ %.0121, %266 ], [ %.0121, %257 ], [ %.0121, %254 ], [ %.0121, %253 ], [ %.0121, %250 ], [ %.0121, %249 ], [ %.0121, %248 ], [ %.0121, %247 ], [ %.0121, %208 ], [ %.0121, %198 ], [ %.0121, %195 ], [ %.0121, %194 ], [ %.0121, %193 ], [ %.0121, %180 ], [ %.0121, %178 ], [ %.0121, %167 ], [ %.0121, %157 ], [ %.0121, %156 ], [ %.0121, %155 ], [ %.0121, %144 ], [ %.0121, %134 ], [ %.0121, %120 ], [ %.0121, %118 ], [ %.0121, %107 ], [ %.0121, %97 ], [ %.0121, %96 ], [ %.0121, %95 ], [ %.0121, %84 ], [ %.0121, %74 ], [ %.0121, %63 ], [ %.0121, %60 ], [ %.0121, %59 ], [ %58, %57 ], [ %.0121, %56 ], [ %.0121, %41 ], [ %.0121, %31 ], [ %.0121, %29 ], [ %.0121, %18 ], [ %.0121, %8 ]
  %.0119.be = phi i32 [ %.0119, %7 ], [ %.0119, %585 ], [ %.0119, %584 ], [ %.0119, %565 ], [ %.0119, %564 ], [ %.0119, %563 ], [ %.0119, %562 ], [ %.0119, %545 ], [ %.0119, %515 ], [ %.0119, %514 ], [ %.0119, %512 ], [ %.0119, %511 ], [ %510, %509 ], [ %.0119, %503 ], [ %.0119, %502 ], [ %.0119, %495 ], [ %.0119, %494 ], [ %.0119, %484 ], [ %.0119, %474 ], [ %.0119, %472 ], [ %.0119, %471 ], [ %.0119, %461 ], [ %.0119, %451 ], [ %.0119, %450 ], [ %.0119, %422 ], [ %.0119, %412 ], [ %.0119, %410 ], [ %.0119, %392 ], [ %.0119, %382 ], [ %.0119, %379 ], [ %.0119, %378 ], [ %.0119, %376 ], [ %.0119, %365 ], [ %.0119, %355 ], [ %.0119, %354 ], [ %.0119, %353 ], [ %.0119, %352 ], [ %.0119, %350 ], [ %.0119, %349 ], [ %.0119, %339 ], [ %.0119, %329 ], [ %.0119, %328 ], [ %.0119, %302 ], [ %.0119, %292 ], [ %.0119, %289 ], [ %.0119, %270 ], [ %.0119, %267 ], [ %.0119, %266 ], [ %.0119, %257 ], [ %.0119, %254 ], [ %.0119, %253 ], [ %.0119, %250 ], [ %.0119, %249 ], [ %.0119, %248 ], [ %.0119, %247 ], [ %.0119, %208 ], [ %.0119, %198 ], [ %.0119, %195 ], [ %.0119, %194 ], [ %.0119, %193 ], [ %.0119, %180 ], [ %.0119, %178 ], [ %.0119, %167 ], [ %.0119, %157 ], [ %.0119, %156 ], [ %.0119, %155 ], [ %.0119, %144 ], [ %.0119, %134 ], [ %.0119, %120 ], [ %.0119, %118 ], [ %.0119, %107 ], [ %.0119, %97 ], [ %.0119, %96 ], [ %.0119, %95 ], [ %85, %84 ], [ %.0119, %74 ], [ %.0119, %63 ], [ %.0119, %60 ], [ 1, %59 ], [ %.0119, %57 ], [ %.0119, %56 ], [ %.0119, %41 ], [ %.0119, %31 ], [ %.0119, %29 ], [ %.0119, %18 ], [ %.0119, %8 ]
  %.0117.be = phi i32 [ %.0117, %7 ], [ %.0117, %585 ], [ %.0117, %584 ], [ %.0117, %565 ], [ %.0117, %564 ], [ %.0117, %563 ], [ %.0117, %562 ], [ %.0117, %545 ], [ %.0117, %515 ], [ %.0117, %514 ], [ %513, %512 ], [ %.0117, %511 ], [ %.0117, %509 ], [ %.0117, %503 ], [ %.0117, %502 ], [ %.0117, %495 ], [ %.0117, %494 ], [ %.0117, %484 ], [ %.0117, %474 ], [ %.0117, %472 ], [ %.0117, %471 ], [ %.0117, %461 ], [ %.0117, %451 ], [ %.0117, %450 ], [ %.0117, %422 ], [ %.0117, %412 ], [ %.0117, %410 ], [ %.0117, %392 ], [ %.0117, %382 ], [ %.0117, %379 ], [ %.0117, %378 ], [ %.0117, %376 ], [ %.0117, %365 ], [ %.0117, %355 ], [ %.0117, %354 ], [ %.0117, %353 ], [ %.0117, %352 ], [ %.0117, %350 ], [ %.0117, %349 ], [ %.0117, %339 ], [ %.0117, %329 ], [ %.0117, %328 ], [ %.0117, %302 ], [ %.0117, %292 ], [ %.0117, %289 ], [ %.0117, %270 ], [ %.0117, %267 ], [ %.0117, %266 ], [ %.0117, %257 ], [ %.0117, %254 ], [ %.0117, %253 ], [ %.0117, %250 ], [ %.0117, %249 ], [ %.0117, %248 ], [ %.0117, %247 ], [ %.0117, %208 ], [ %.0117, %198 ], [ %.0117, %195 ], [ %.0117, %194 ], [ %.0117, %193 ], [ %.0117, %180 ], [ %.0117, %178 ], [ %.0117, %167 ], [ %.0117, %157 ], [ %.0117, %156 ], [ %.0117, %155 ], [ %145, %144 ], [ %.0117, %134 ], [ %.0117, %120 ], [ %.0117, %118 ], [ %.0117, %107 ], [ %.0117, %97 ], [ 2, %96 ], [ %.0117, %95 ], [ %.0117, %84 ], [ %.0117, %74 ], [ %.0117, %63 ], [ %.0117, %60 ], [ %.0117, %59 ], [ %.0117, %57 ], [ %.0117, %56 ], [ %.0117, %41 ], [ %.0117, %31 ], [ %.0117, %29 ], [ %.0117, %18 ], [ %.0117, %8 ]
  %.0115.be = phi i32 [ %.0115, %7 ], [ %.0115, %585 ], [ %.0115, %584 ], [ %.0115, %565 ], [ %.0115, %564 ], [ %.0115, %563 ], [ %.0115, %562 ], [ %.0115, %545 ], [ %.0115, %515 ], [ %.0115, %514 ], [ %.0115, %512 ], [ %.0115, %511 ], [ %.0115, %509 ], [ %.0115, %503 ], [ %.0115, %502 ], [ %.0115, %495 ], [ %.0115, %494 ], [ %.0115, %484 ], [ %.0115, %474 ], [ %.0115, %472 ], [ %.0115, %471 ], [ %.0115, %461 ], [ %.0115, %451 ], [ %.0115, %450 ], [ %.0115, %422 ], [ %.0115, %412 ], [ %.0115, %410 ], [ %.0115, %392 ], [ %.0115, %382 ], [ %.0115, %379 ], [ %.0115, %378 ], [ %.0115, %376 ], [ %.0115, %365 ], [ %.0115, %355 ], [ %.0115, %354 ], [ %.0115, %353 ], [ %.0115, %352 ], [ %.0115, %350 ], [ %.0115, %349 ], [ %.0115, %339 ], [ %.0115, %329 ], [ %.0115, %328 ], [ %.0115, %302 ], [ %.0115, %292 ], [ %.0115, %289 ], [ %.0115, %270 ], [ %.0115, %267 ], [ %.0115, %266 ], [ %.0115, %257 ], [ %.0115, %254 ], [ %.0115, %253 ], [ %.0115, %250 ], [ %.0115, %249 ], [ %.0115, %248 ], [ %.0115, %247 ], [ %.0115, %208 ], [ %.0115, %198 ], [ %.0115, %195 ], [ %.0115, %194 ], [ %.neg130, %193 ], [ %.0115, %180 ], [ %.0115, %178 ], [ %.0115, %167 ], [ %.0115, %157 ], [ 1, %156 ], [ %.0115, %155 ], [ %.0115, %144 ], [ %.0115, %134 ], [ %.0115, %120 ], [ %.0115, %118 ], [ %.0115, %107 ], [ %.0115, %97 ], [ %.0115, %96 ], [ %.0115, %95 ], [ %.0115, %84 ], [ %.0115, %74 ], [ %.0115, %63 ], [ %.0115, %60 ], [ %.0115, %59 ], [ %.0115, %57 ], [ %.0115, %56 ], [ %.0115, %41 ], [ %.0115, %31 ], [ %.0115, %29 ], [ %.0115, %18 ], [ %.0115, %8 ]
  %.0113.be = phi i32 [ %.0113, %7 ], [ %.0113, %585 ], [ %.0113, %584 ], [ %583, %565 ], [ %.0113, %564 ], [ %.0113, %563 ], [ %.0113, %562 ], [ %.0113, %545 ], [ %544, %515 ], [ %.0113, %514 ], [ %.0113, %512 ], [ %.0113, %511 ], [ %.0113, %509 ], [ %.0113, %503 ], [ %.0113, %502 ], [ %.0113, %495 ], [ %.0113, %494 ], [ %.0113, %484 ], [ %.0113, %474 ], [ %.0113, %472 ], [ %.0113, %471 ], [ %.0113, %461 ], [ %.0113, %451 ], [ %.0113, %450 ], [ %440, %422 ], [ %.0113, %412 ], [ %.0113, %410 ], [ %.0113, %392 ], [ %.0113, %382 ], [ %.0113, %379 ], [ %.0113, %378 ], [ %.0113, %376 ], [ %.0113, %365 ], [ %.0113, %355 ], [ %.0113, %354 ], [ %.0113, %353 ], [ %.0113, %352 ], [ %.0113, %350 ], [ %.0113, %349 ], [ %.0113, %339 ], [ %.0113, %329 ], [ %.0113, %328 ], [ %.0113, %302 ], [ %.0113, %292 ], [ %.0113, %289 ], [ %.0113, %270 ], [ %.0113, %267 ], [ %.0113, %266 ], [ %.0113, %257 ], [ %.0113, %254 ], [ %.0113, %253 ], [ %.0113, %250 ], [ %.0113, %249 ], [ %.0113, %248 ], [ %.0113, %247 ], [ %237, %208 ], [ %.0113, %198 ], [ %.0113, %195 ], [ 0, %194 ], [ %.0113, %193 ], [ %.0113, %180 ], [ %.0113, %178 ], [ %.0113, %167 ], [ %.0113, %157 ], [ %.0113, %156 ], [ %.0113, %155 ], [ %.0113, %144 ], [ %.0113, %134 ], [ %.0113, %120 ], [ %.0113, %118 ], [ %.0113, %107 ], [ %.0113, %97 ], [ %.0113, %96 ], [ %.0113, %95 ], [ %.0113, %84 ], [ %.0113, %74 ], [ %.0113, %63 ], [ %.0113, %60 ], [ %.0113, %59 ], [ %.0113, %57 ], [ %.0113, %56 ], [ %.0113, %41 ], [ %.0113, %31 ], [ %.0113, %29 ], [ %.0113, %18 ], [ %.0113, %8 ]
  %.0111.be = phi i32 [ %.0111, %7 ], [ %.0111, %585 ], [ %.0111, %584 ], [ %.0111, %565 ], [ %.0111, %564 ], [ %.0111, %563 ], [ %.0111, %562 ], [ %.0111, %545 ], [ %.0111, %515 ], [ %.0111, %514 ], [ %.0111, %512 ], [ %.0111, %511 ], [ %.0111, %509 ], [ %.0111, %503 ], [ %.0111, %502 ], [ %.0111, %495 ], [ %.0111, %494 ], [ %.0111, %484 ], [ %.0111, %474 ], [ %.0111, %472 ], [ %.0111, %471 ], [ %.0111, %461 ], [ %.0111, %451 ], [ %.0111, %450 ], [ %.0111, %422 ], [ %.0111, %412 ], [ %.0111, %410 ], [ %.0111, %392 ], [ %.0111, %382 ], [ %.0111, %379 ], [ %.0111, %378 ], [ %.0111, %376 ], [ %.0111, %365 ], [ %.0111, %355 ], [ %.0111, %354 ], [ %.0111, %353 ], [ %.0111, %352 ], [ %.0111, %350 ], [ %.0111, %349 ], [ %.0111, %339 ], [ %.0111, %329 ], [ %.0111, %328 ], [ %.0111, %302 ], [ %.0111, %292 ], [ %.0111, %289 ], [ %.0111, %270 ], [ %.0111, %267 ], [ %.0111, %266 ], [ %.0111, %257 ], [ %.0111, %254 ], [ %.0111, %253 ], [ %.0111, %250 ], [ %.0111, %249 ], [ %.neg125, %248 ], [ %.0111, %247 ], [ %.0111, %208 ], [ %.0111, %198 ], [ %.0111, %195 ], [ 1, %194 ], [ %.0111, %193 ], [ %.0111, %180 ], [ %.0111, %178 ], [ %.0111, %167 ], [ %.0111, %157 ], [ %.0111, %156 ], [ %.0111, %155 ], [ %.0111, %144 ], [ %.0111, %134 ], [ %.0111, %120 ], [ %.0111, %118 ], [ %.0111, %107 ], [ %.0111, %97 ], [ %.0111, %96 ], [ %.0111, %95 ], [ %.0111, %84 ], [ %.0111, %74 ], [ %.0111, %63 ], [ %.0111, %60 ], [ %.0111, %59 ], [ %.0111, %57 ], [ %.0111, %56 ], [ %.0111, %41 ], [ %.0111, %31 ], [ %.0111, %29 ], [ %.0111, %18 ], [ %.0111, %8 ]
  %.0109.be = phi i32 [ %.0109, %7 ], [ %.0109, %585 ], [ %.0109, %584 ], [ %.0109, %565 ], [ %.0109, %564 ], [ %.0109, %563 ], [ %.0109, %562 ], [ %.0109, %545 ], [ %.0109, %515 ], [ %.0109, %514 ], [ %.0109, %512 ], [ %.0109, %511 ], [ %.0109, %509 ], [ %.0109, %503 ], [ %.0109, %502 ], [ %.0109, %495 ], [ %.0109, %494 ], [ %.0109, %484 ], [ %.0109, %474 ], [ %.0109, %472 ], [ %.0109, %471 ], [ %.0109, %461 ], [ %.0109, %451 ], [ %.0109, %450 ], [ %.0109, %422 ], [ %.0109, %412 ], [ %.0109, %410 ], [ %.0109, %392 ], [ %.0109, %382 ], [ %.0109, %379 ], [ %.0109, %378 ], [ %.0109, %376 ], [ %.0109, %365 ], [ %.0109, %355 ], [ %.0109, %354 ], [ %.neg124, %353 ], [ %.0109, %352 ], [ %.0109, %350 ], [ %.0109, %349 ], [ %.0109, %339 ], [ %.0109, %329 ], [ %.0109, %328 ], [ %.0109, %302 ], [ %.0109, %292 ], [ %.0109, %289 ], [ %.0109, %270 ], [ %.0109, %267 ], [ %.0109, %266 ], [ %.0109, %257 ], [ %.0109, %254 ], [ %.0109, %253 ], [ %.0109, %250 ], [ 2000, %249 ], [ %.0109, %248 ], [ %.0109, %247 ], [ %.0109, %208 ], [ %.0109, %198 ], [ %.0109, %195 ], [ %.0109, %194 ], [ %.0109, %193 ], [ %.0109, %180 ], [ %.0109, %178 ], [ %.0109, %167 ], [ %.0109, %157 ], [ %.0109, %156 ], [ %.0109, %155 ], [ %.0109, %144 ], [ %.0109, %134 ], [ %.0109, %120 ], [ %.0109, %118 ], [ %.0109, %107 ], [ %.0109, %97 ], [ %.0109, %96 ], [ %.0109, %95 ], [ %.0109, %84 ], [ %.0109, %74 ], [ %.0109, %63 ], [ %.0109, %60 ], [ %.0109, %59 ], [ %.0109, %57 ], [ %.0109, %56 ], [ %.0109, %41 ], [ %.0109, %31 ], [ %.0109, %29 ], [ %.0109, %18 ], [ %.0109, %8 ]
  %.0107.be = phi i32 [ %.0107, %7 ], [ %.0107, %585 ], [ %.0107, %584 ], [ %.0107, %565 ], [ %.0107, %564 ], [ %.0107, %563 ], [ %.0107, %562 ], [ %.0107, %545 ], [ %.0107, %515 ], [ %.0107, %514 ], [ %.0107, %512 ], [ %.0107, %511 ], [ %.0107, %509 ], [ %.0107, %503 ], [ %.0107, %502 ], [ %.0107, %495 ], [ %.0107, %494 ], [ %.0107, %484 ], [ %.0107, %474 ], [ %.0107, %472 ], [ %.0107, %471 ], [ %.0107, %461 ], [ %.0107, %451 ], [ %.0107, %450 ], [ %.0107, %422 ], [ %.0107, %412 ], [ %.0107, %410 ], [ %.0107, %392 ], [ %.0107, %382 ], [ %.0107, %379 ], [ %.0107, %378 ], [ %.0107, %376 ], [ %.0107, %365 ], [ %.0107, %355 ], [ %.0107, %354 ], [ %.0107, %353 ], [ %.0107, %352 ], [ %351, %350 ], [ %.0107, %349 ], [ %.0107, %339 ], [ %.0107, %329 ], [ %.0107, %328 ], [ %.0107, %302 ], [ %.0107, %292 ], [ %.0107, %289 ], [ %.0107, %270 ], [ %.0107, %267 ], [ %.0107, %266 ], [ %.0107, %257 ], [ %.0107, %254 ], [ 2000, %253 ], [ %.0107, %250 ], [ %.0107, %249 ], [ %.0107, %248 ], [ %.0107, %247 ], [ %.0107, %208 ], [ %.0107, %198 ], [ %.0107, %195 ], [ %.0107, %194 ], [ %.0107, %193 ], [ %.0107, %180 ], [ %.0107, %178 ], [ %.0107, %167 ], [ %.0107, %157 ], [ %.0107, %156 ], [ %.0107, %155 ], [ %.0107, %144 ], [ %.0107, %134 ], [ %.0107, %120 ], [ %.0107, %118 ], [ %.0107, %107 ], [ %.0107, %97 ], [ %.0107, %96 ], [ %.0107, %95 ], [ %.0107, %84 ], [ %.0107, %74 ], [ %.0107, %63 ], [ %.0107, %60 ], [ %.0107, %59 ], [ %.0107, %57 ], [ %.0107, %56 ], [ %.0107, %41 ], [ %.0107, %31 ], [ %.0107, %29 ], [ %.0107, %18 ], [ %.0107, %8 ]
  %.0105.be = phi i32 [ %.0105, %7 ], [ %.0105, %585 ], [ %.0105, %584 ], [ %.0105, %565 ], [ %.0105, %564 ], [ %.0105, %563 ], [ %.0105, %562 ], [ %.0105, %545 ], [ %.0105, %515 ], [ %.0105, %514 ], [ %.0105, %512 ], [ %.0105, %511 ], [ %.0105, %509 ], [ %.0105, %503 ], [ %.0105, %502 ], [ %496, %495 ], [ %.0105, %494 ], [ %.0105, %484 ], [ %.0105, %474 ], [ %.0105, %472 ], [ %.0105, %471 ], [ %.0105, %461 ], [ %.0105, %451 ], [ %.0105, %450 ], [ %.0105, %422 ], [ %.0105, %412 ], [ %.0105, %410 ], [ %.0105, %392 ], [ %.0105, %382 ], [ %.0105, %379 ], [ %.0105, %378 ], [ %.0105, %376 ], [ %.0105, %365 ], [ %.0105, %355 ], [ -1, %354 ], [ %.0105, %353 ], [ %.0105, %352 ], [ %.0105, %350 ], [ %.0105, %349 ], [ %.0105, %339 ], [ %.0105, %329 ], [ %.0105, %328 ], [ %.0105, %302 ], [ %.0105, %292 ], [ %.0105, %289 ], [ %.0105, %270 ], [ %.0105, %267 ], [ %.0105, %266 ], [ %.0105, %257 ], [ %.0105, %254 ], [ %.0105, %253 ], [ %.0105, %250 ], [ %.0105, %249 ], [ %.0105, %248 ], [ %.0105, %247 ], [ %.0105, %208 ], [ %.0105, %198 ], [ %.0105, %195 ], [ %.0105, %194 ], [ %.0105, %193 ], [ %.0105, %180 ], [ %.0105, %178 ], [ %.0105, %167 ], [ %.0105, %157 ], [ %.0105, %156 ], [ %.0105, %155 ], [ %.0105, %144 ], [ %.0105, %134 ], [ %.0105, %120 ], [ %.0105, %118 ], [ %.0105, %107 ], [ %.0105, %97 ], [ %.0105, %96 ], [ %.0105, %95 ], [ %.0105, %84 ], [ %.0105, %74 ], [ %.0105, %63 ], [ %.0105, %60 ], [ %.0105, %59 ], [ %.0105, %57 ], [ %.0105, %56 ], [ %.0105, %41 ], [ %.0105, %31 ], [ %.0105, %29 ], [ %.0105, %18 ], [ %.0105, %8 ]
  %.0103.be = phi i32 [ %.0103, %7 ], [ %.0103, %585 ], [ %.0103, %584 ], [ %.0103, %565 ], [ %.0103, %564 ], [ %.0103, %563 ], [ %.0103, %562 ], [ %.0103, %545 ], [ %.0103, %515 ], [ %.0103, %514 ], [ %.0103, %512 ], [ %.0103, %511 ], [ %.0103, %509 ], [ %.0103, %503 ], [ %.0103, %502 ], [ %.0103, %495 ], [ %.0103, %494 ], [ %.0103, %484 ], [ %.0103, %474 ], [ %473, %472 ], [ %.0103, %471 ], [ %.0103, %461 ], [ %.0103, %451 ], [ %.0103, %450 ], [ %.0103, %422 ], [ %.0103, %412 ], [ %.0103, %410 ], [ %.0103, %392 ], [ %.0103, %382 ], [ %.0103, %379 ], [ -1, %378 ], [ %.0103, %376 ], [ %.0103, %365 ], [ %.0103, %355 ], [ %.0103, %354 ], [ %.0103, %353 ], [ %.0103, %352 ], [ %.0103, %350 ], [ %.0103, %349 ], [ %.0103, %339 ], [ %.0103, %329 ], [ %.0103, %328 ], [ %.0103, %302 ], [ %.0103, %292 ], [ %.0103, %289 ], [ %.0103, %270 ], [ %.0103, %267 ], [ %.0103, %266 ], [ %.0103, %257 ], [ %.0103, %254 ], [ %.0103, %253 ], [ %.0103, %250 ], [ %.0103, %249 ], [ %.0103, %248 ], [ %.0103, %247 ], [ %.0103, %208 ], [ %.0103, %198 ], [ %.0103, %195 ], [ %.0103, %194 ], [ %.0103, %193 ], [ %.0103, %180 ], [ %.0103, %178 ], [ %.0103, %167 ], [ %.0103, %157 ], [ %.0103, %156 ], [ %.0103, %155 ], [ %.0103, %144 ], [ %.0103, %134 ], [ %.0103, %120 ], [ %.0103, %118 ], [ %.0103, %107 ], [ %.0103, %97 ], [ %.0103, %96 ], [ %.0103, %95 ], [ %.0103, %84 ], [ %.0103, %74 ], [ %.0103, %63 ], [ %.0103, %60 ], [ %.0103, %59 ], [ %.0103, %57 ], [ %.0103, %56 ], [ %.0103, %41 ], [ %.0103, %31 ], [ %.0103, %29 ], [ %.0103, %18 ], [ %.0103, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ 852315413, %585 ], [ 1741294714, %584 ], [ 594624942, %565 ], [ -291288129, %564 ], [ 214730277, %563 ], [ 1668024852, %562 ], [ 1608003794, %545 ], [ 74434599, %515 ], [ -1898050295, %514 ], [ 1113996563, %512 ], [ 23690155, %511 ], [ -329411562, %509 ], [ 230282634, %503 ], [ -1560346438, %502 ], [ 142381315, %495 ], [ -1684701785, %494 ], [ %493, %484 ], [ %483, %474 ], [ 1438496246, %472 ], [ 637018494, %471 ], [ %470, %461 ], [ %460, %451 ], [ 2034376691, %450 ], [ %449, %422 ], [ %421, %412 ], [ %411, %410 ], [ %409, %392 ], [ %391, %382 ], [ %381, %379 ], [ 1438496246, %378 ], [ %377, %376 ], [ %375, %365 ], [ %364, %355 ], [ 142381315, %354 ], [ 1509894490, %353 ], [ -423230539, %352 ], [ -661413159, %350 ], [ -1885543974, %349 ], [ %348, %339 ], [ %338, %329 ], [ 15026604, %328 ], [ %327, %302 ], [ %301, %292 ], [ %291, %289 ], [ -1493583018, %270 ], [ %269, %267 ], [ -1885543974, %266 ], [ %265, %257 ], [ %256, %254 ], [ -661413159, %253 ], [ %252, %250 ], [ 1509894490, %249 ], [ 1296319598, %248 ], [ 1340419696, %247 ], [ %246, %208 ], [ %207, %198 ], [ %197, %195 ], [ 1296319598, %194 ], [ 933621990, %193 ], [ 1386450229, %180 ], [ %179, %178 ], [ %177, %167 ], [ %166, %157 ], [ 933621990, %156 ], [ -130037436, %155 ], [ %154, %144 ], [ %143, %134 ], [ 2032504603, %120 ], [ %119, %118 ], [ %117, %107 ], [ %106, %97 ], [ -130037436, %96 ], [ 343087749, %95 ], [ %94, %84 ], [ %83, %74 ], [ -824303842, %63 ], [ %62, %60 ], [ 343087749, %59 ], [ 1832434365, %57 ], [ 1919331338, %56 ], [ %55, %41 ], [ %40, %31 ], [ %30, %29 ], [ %28, %18 ], [ %17, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = load i32, i32* @x.3, align 4
  %10 = load i32, i32* @y.4, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 -1560346438, i32 -290821441
  br label %.backedge

18:                                               ; preds = %7
  %19 = icmp slt i32 %.0121, 4011
  store i1 %19, i1* %5, align 1
  %20 = load i32, i32* @x.3, align 4
  %21 = load i32, i32* @y.4, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -1125710306, i32 -290821441
  br label %.backedge

29:                                               ; preds = %7
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %30 = select i1 %.0..0..0., i32 2093646991, i32 -528537396
  br label %.backedge

31:                                               ; preds = %7
  %32 = load i32, i32* @x.3, align 4
  %33 = load i32, i32* @y.4, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 230282634, i32 -936843528
  br label %.backedge

41:                                               ; preds = %7
  %42 = sext i32 %.0121 to i64
  %43 = getelementptr inbounds [4015 x [4015 x i32]], [4015 x [4015 x i32]]* @__f, i64 0, i64 %42, i64 2005
  %44 = getelementptr inbounds [4015 x i32*], [4015 x i32*]* @_f, i64 0, i64 %42
  store i32* %43, i32** %44, align 8
  %45 = getelementptr inbounds [4015 x [4015 x i32]], [4015 x [4015 x i32]]* @__val, i64 0, i64 %42, i64 2005
  %46 = getelementptr inbounds [4015 x i32*], [4015 x i32*]* @_val, i64 0, i64 %42
  store i32* %45, i32** %46, align 8
  %47 = load i32, i32* @x.3, align 4
  %48 = load i32, i32* @y.4, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 2011373412, i32 -936843528
  br label %.backedge

56:                                               ; preds = %7
  br label %.backedge

57:                                               ; preds = %7
  %58 = add i32 %.0121, 1
  br label %.backedge

59:                                               ; preds = %7
  store i32** getelementptr inbounds ([4015 x i32*], [4015 x i32*]* @_f, i64 0, i64 2005), i32*** @f, align 8
  store i32** getelementptr inbounds ([4015 x i32*], [4015 x i32*]* @_val, i64 0, i64 2005), i32*** @val, align 8
  store i32 1, i32* getelementptr inbounds ([8030 x i32], [8030 x i32]* @ifac, i64 0, i64 1), align 4
  store i32 1, i32* getelementptr inbounds ([8030 x i32], [8030 x i32]* @ifac, i64 0, i64 0), align 16
  store i32 1, i32* getelementptr inbounds ([8030 x i32], [8030 x i32]* @fac, i64 0, i64 0), align 16
  br label %.backedge

60:                                               ; preds = %7
  %61 = icmp slt i32 %.0119, 8001
  %62 = select i1 %61, i32 199421355, i32 -548704856
  br label %.backedge

63:                                               ; preds = %7
  %64 = add i32 %.0119, -1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [8030 x i32], [8030 x i32]* @fac, i64 0, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = sext i32 %.0119 to i64
  %70 = mul nsw i64 %68, %69
  %71 = srem i64 %70, 1000000007
  %72 = trunc i64 %71 to i32
  %73 = getelementptr inbounds [8030 x i32], [8030 x i32]* @fac, i64 0, i64 %69
  store i32 %72, i32* %73, align 4
  br label %.backedge

74:                                               ; preds = %7
  %75 = load i32, i32* @x.3, align 4
  %76 = load i32, i32* @y.4, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 -329411562, i32 1420597264
  br label %.backedge

84:                                               ; preds = %7
  %85 = add i32 %.0119, 1
  %86 = load i32, i32* @x.3, align 4
  %87 = load i32, i32* @y.4, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 1711508454, i32 1420597264
  br label %.backedge

95:                                               ; preds = %7
  br label %.backedge

96:                                               ; preds = %7
  br label %.backedge

97:                                               ; preds = %7
  %98 = load i32, i32* @x.3, align 4
  %99 = load i32, i32* @y.4, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 23690155, i32 1853808346
  br label %.backedge

107:                                              ; preds = %7
  %108 = icmp slt i32 %.0117, 8001
  store i1 %108, i1* %4, align 1
  %109 = load i32, i32* @x.3, align 4
  %110 = load i32, i32* @y.4, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 691383223, i32 1853808346
  br label %.backedge

118:                                              ; preds = %7
  %.0..0..0.99 = load volatile i1, i1* %4, align 1
  %119 = select i1 %.0..0..0.99, i32 -842234996, i32 139941158
  br label %.backedge

120:                                              ; preds = %7
  %121 = sdiv i32 1000000007, %.0117
  %122 = sub nsw i32 1000000007, %121
  %123 = zext i32 %122 to i64
  %124 = srem i32 1000000007, %.0117
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds [8030 x i32], [8030 x i32]* @ifac, i64 0, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = mul nsw i64 %128, %123
  %130 = srem i64 %129, 1000000007
  %131 = trunc i64 %130 to i32
  %132 = sext i32 %.0117 to i64
  %133 = getelementptr inbounds [8030 x i32], [8030 x i32]* @ifac, i64 0, i64 %132
  store i32 %131, i32* %133, align 4
  br label %.backedge

134:                                              ; preds = %7
  %135 = load i32, i32* @x.3, align 4
  %136 = load i32, i32* @y.4, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 1113996563, i32 92547258
  br label %.backedge

144:                                              ; preds = %7
  %145 = add i32 %.0117, 1
  %146 = load i32, i32* @x.3, align 4
  %147 = load i32, i32* @y.4, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -603401672, i32 92547258
  br label %.backedge

155:                                              ; preds = %7
  br label %.backedge

156:                                              ; preds = %7
  br label %.backedge

157:                                              ; preds = %7
  %158 = load i32, i32* @x.3, align 4
  %159 = load i32, i32* @y.4, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 -1898050295, i32 -1317728522
  br label %.backedge

167:                                              ; preds = %7
  %168 = icmp slt i32 %.0115, 8001
  store i1 %168, i1* %3, align 1
  %169 = load i32, i32* @x.3, align 4
  %170 = load i32, i32* @y.4, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 -511815119, i32 -1317728522
  br label %.backedge

178:                                              ; preds = %7
  %.0..0..0.100 = load volatile i1, i1* %3, align 1
  %179 = select i1 %.0..0..0.100, i32 1506980216, i32 1026982535
  br label %.backedge

180:                                              ; preds = %7
  %181 = add i32 %.0115, -1
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [8030 x i32], [8030 x i32]* @ifac, i64 0, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = sext i32 %184 to i64
  %186 = sext i32 %.0115 to i64
  %187 = getelementptr inbounds [8030 x i32], [8030 x i32]* @ifac, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = sext i32 %188 to i64
  %190 = mul nsw i64 %189, %185
  %191 = srem i64 %190, 1000000007
  %192 = trunc i64 %191 to i32
  store i32 %192, i32* %187, align 4
  br label %.backedge

193:                                              ; preds = %7
  %.neg130 = add i32 %.0115, 1
  br label %.backedge

194:                                              ; preds = %7
  br label %.backedge

195:                                              ; preds = %7
  %196 = load i32, i32* @n, align 4
  %.not129 = icmp sgt i32 %.0111, %196
  %197 = select i1 %.not129, i32 1076820935, i32 944449888
  br label %.backedge

198:                                              ; preds = %7
  %199 = load i32, i32* @x.3, align 4
  %200 = load i32, i32* @y.4, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 74434599, i32 -146503010
  br label %.backedge

208:                                              ; preds = %7
  %209 = tail call i32 @_Z2giv()
  %210 = tail call i32 @_Z2giv()
  %211 = load i32**, i32*** @val, align 8
  %212 = sext i32 %209 to i64
  %213 = getelementptr inbounds i32*, i32** %211, i64 %212
  %214 = load i32*, i32** %213, align 8
  %215 = sext i32 %210 to i64
  %216 = getelementptr inbounds i32, i32* %214, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = add i32 %217, 1
  store i32 %218, i32* %216, align 4
  %219 = load i32**, i32*** @val, align 8
  %220 = sub i32 0, %209
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i32*, i32** %219, i64 %221
  %223 = load i32*, i32** %222, align 8
  %224 = sub i32 0, %210
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds i32, i32* %223, i64 %225
  %227 = load i32, i32* %226, align 4
  %.neg126 = add i32 %227, 1
  store i32 %.neg126, i32* %226, align 4
  %228 = load i32**, i32*** @f, align 8
  %229 = getelementptr inbounds i32*, i32** %228, i64 %212
  %230 = load i32*, i32** %229, align 8
  %231 = getelementptr inbounds i32, i32* %230, i64 %215
  %232 = load i32, i32* %231, align 4
  %233 = add i32 %232, 1
  store i32 %233, i32* %231, align 4
  %234 = shl i32 %209, 1
  %235 = add i32 %210, %209
  %.neg128 = shl i32 %235, 1
  %236 = tail call i32 @_Z1Cii(i32 %.neg128, i32 %234)
  %237 = tail call i32 @_Z3subii(i32 %.0113, i32 %236)
  %238 = load i32, i32* @x.3, align 4
  %239 = load i32, i32* @y.4, align 4
  %240 = add i32 %238, -1
  %241 = mul i32 %240, %238
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %244, %243
  %246 = select i1 %245, i32 344377537, i32 -146503010
  br label %.backedge

247:                                              ; preds = %7
  br label %.backedge

248:                                              ; preds = %7
  %.neg125 = add i32 %.0111, 1
  br label %.backedge

249:                                              ; preds = %7
  br label %.backedge

250:                                              ; preds = %7
  %251 = icmp sgt i32 %.0109, -2001
  %252 = select i1 %251, i32 -1244558821, i32 829803709
  br label %.backedge

253:                                              ; preds = %7
  br label %.backedge

254:                                              ; preds = %7
  %255 = icmp sgt i32 %.0107, -2001
  %256 = select i1 %255, i32 156441985, i32 -1871216422
  br label %.backedge

257:                                              ; preds = %7
  %258 = load i32**, i32*** @f, align 8
  %259 = sext i32 %.0109 to i64
  %260 = getelementptr inbounds i32*, i32** %258, i64 %259
  %261 = load i32*, i32** %260, align 8
  %262 = sext i32 %.0107 to i64
  %263 = getelementptr inbounds i32, i32* %261, i64 %262
  %264 = load i32, i32* %263, align 4
  %.not = icmp eq i32 %264, 0
  %265 = select i1 %.not, i32 742902542, i32 -1844779966
  br label %.backedge

266:                                              ; preds = %7
  br label %.backedge

267:                                              ; preds = %7
  %268 = icmp sgt i32 %.0109, -2000
  %269 = select i1 %268, i32 -1594591157, i32 -1493583018
  br label %.backedge

270:                                              ; preds = %7
  %271 = load i32**, i32*** @f, align 8
  %272 = add i32 %.0109, -1
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i32*, i32** %271, i64 %273
  %275 = load i32*, i32** %274, align 8
  %276 = sext i32 %.0107 to i64
  %277 = getelementptr inbounds i32, i32* %275, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = sext i32 %.0109 to i64
  %280 = getelementptr inbounds i32*, i32** %271, i64 %279
  %281 = load i32*, i32** %280, align 8
  %282 = getelementptr inbounds i32, i32* %281, i64 %276
  %283 = load i32, i32* %282, align 4
  %284 = tail call i32 @_Z3addii(i32 %278, i32 %283)
  %285 = load i32**, i32*** @f, align 8
  %286 = getelementptr inbounds i32*, i32** %285, i64 %273
  %287 = load i32*, i32** %286, align 8
  %288 = getelementptr inbounds i32, i32* %287, i64 %276
  store i32 %284, i32* %288, align 4
  br label %.backedge

289:                                              ; preds = %7
  %290 = icmp sgt i32 %.0107, -2000
  %291 = select i1 %290, i32 -934654262, i32 15026604
  br label %.backedge

292:                                              ; preds = %7
  %293 = load i32, i32* @x.3, align 4
  %294 = load i32, i32* @y.4, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 1608003794, i32 -1191182520
  br label %.backedge

302:                                              ; preds = %7
  %303 = load i32**, i32*** @f, align 8
  %304 = sext i32 %.0109 to i64
  %305 = getelementptr inbounds i32*, i32** %303, i64 %304
  %306 = load i32*, i32** %305, align 8
  %307 = add i32 %.0107, -1
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds i32, i32* %306, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = sext i32 %.0107 to i64
  %312 = getelementptr inbounds i32, i32* %306, i64 %311
  %313 = load i32, i32* %312, align 4
  %314 = tail call i32 @_Z3addii(i32 %310, i32 %313)
  %315 = load i32**, i32*** @f, align 8
  %316 = getelementptr inbounds i32*, i32** %315, i64 %304
  %317 = load i32*, i32** %316, align 8
  %318 = getelementptr inbounds i32, i32* %317, i64 %308
  store i32 %314, i32* %318, align 4
  %319 = load i32, i32* @x.3, align 4
  %320 = load i32, i32* @y.4, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 1463732902, i32 -1191182520
  br label %.backedge

328:                                              ; preds = %7
  br label %.backedge

329:                                              ; preds = %7
  %330 = load i32, i32* @x.3, align 4
  %331 = load i32, i32* @y.4, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 1668024852, i32 1443017078
  br label %.backedge

339:                                              ; preds = %7
  %340 = load i32, i32* @x.3, align 4
  %341 = load i32, i32* @y.4, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 2053700294, i32 1443017078
  br label %.backedge

349:                                              ; preds = %7
  br label %.backedge

350:                                              ; preds = %7
  %351 = add i32 %.0107, -1
  br label %.backedge

352:                                              ; preds = %7
  br label %.backedge

353:                                              ; preds = %7
  %.neg124 = add i32 %.0109, -1
  br label %.backedge

354:                                              ; preds = %7
  br label %.backedge

355:                                              ; preds = %7
  %356 = load i32, i32* @x.3, align 4
  %357 = load i32, i32* @y.4, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 214730277, i32 -823549612
  br label %.backedge

365:                                              ; preds = %7
  %366 = icmp sgt i32 %.0105, -2001
  store i1 %366, i1* %2, align 1
  %367 = load i32, i32* @x.3, align 4
  %368 = load i32, i32* @y.4, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 419654031, i32 -823549612
  br label %.backedge

376:                                              ; preds = %7
  %.0..0..0.101 = load volatile i1, i1* %2, align 1
  %377 = select i1 %.0..0..0.101, i32 -635489474, i32 2033854796
  br label %.backedge

378:                                              ; preds = %7
  br label %.backedge

379:                                              ; preds = %7
  %380 = icmp sgt i32 %.0103, -2001
  %381 = select i1 %380, i32 1486592005, i32 990324798
  br label %.backedge

382:                                              ; preds = %7
  %383 = load i32, i32* @x.3, align 4
  %384 = load i32, i32* @y.4, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 -291288129, i32 1766236405
  br label %.backedge

392:                                              ; preds = %7
  %393 = load i32**, i32*** @val, align 8
  %394 = sext i32 %.0105 to i64
  %395 = getelementptr inbounds i32*, i32** %393, i64 %394
  %396 = load i32*, i32** %395, align 8
  %397 = sext i32 %.0103 to i64
  %398 = getelementptr inbounds i32, i32* %396, i64 %397
  %399 = load i32, i32* %398, align 4
  %400 = icmp ne i32 %399, 0
  store i1 %400, i1* %1, align 1
  %401 = load i32, i32* @x.3, align 4
  %402 = load i32, i32* @y.4, align 4
  %403 = add i32 %401, -1
  %404 = mul i32 %403, %401
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %407, %406
  %409 = select i1 %408, i32 -799343271, i32 1766236405
  br label %.backedge

410:                                              ; preds = %7
  %.0..0..0.102 = load volatile i1, i1* %1, align 1
  %411 = select i1 %.0..0..0.102, i32 1201588020, i32 2034376691
  br label %.backedge

412:                                              ; preds = %7
  %413 = load i32, i32* @x.3, align 4
  %414 = load i32, i32* @y.4, align 4
  %415 = add i32 %413, -1
  %416 = mul i32 %415, %413
  %417 = and i32 %416, 1
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %419, %418
  %421 = select i1 %420, i32 594624942, i32 -891653300
  br label %.backedge

422:                                              ; preds = %7
  %423 = load i32**, i32*** @val, align 8
  %424 = sext i32 %.0105 to i64
  %425 = getelementptr inbounds i32*, i32** %423, i64 %424
  %426 = load i32*, i32** %425, align 8
  %427 = sext i32 %.0103 to i64
  %428 = getelementptr inbounds i32, i32* %426, i64 %427
  %429 = load i32, i32* %428, align 4
  %430 = sext i32 %429 to i64
  %431 = load i32**, i32*** @f, align 8
  %432 = getelementptr inbounds i32*, i32** %431, i64 %424
  %433 = load i32*, i32** %432, align 8
  %434 = getelementptr inbounds i32, i32* %433, i64 %427
  %435 = load i32, i32* %434, align 4
  %436 = sext i32 %435 to i64
  %437 = mul nsw i64 %436, %430
  %438 = srem i64 %437, 1000000007
  %439 = trunc i64 %438 to i32
  %440 = tail call i32 @_Z3addii(i32 %.0113, i32 %439)
  %441 = load i32, i32* @x.3, align 4
  %442 = load i32, i32* @y.4, align 4
  %443 = add i32 %441, -1
  %444 = mul i32 %443, %441
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %447, %446
  %449 = select i1 %448, i32 -1478896072, i32 -891653300
  br label %.backedge

450:                                              ; preds = %7
  br label %.backedge

451:                                              ; preds = %7
  %452 = load i32, i32* @x.3, align 4
  %453 = load i32, i32* @y.4, align 4
  %454 = add i32 %452, -1
  %455 = mul i32 %454, %452
  %456 = and i32 %455, 1
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %458, %457
  %460 = select i1 %459, i32 1741294714, i32 1856141728
  br label %.backedge

461:                                              ; preds = %7
  %462 = load i32, i32* @x.3, align 4
  %463 = load i32, i32* @y.4, align 4
  %464 = add i32 %462, -1
  %465 = mul i32 %464, %462
  %466 = and i32 %465, 1
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %468, %467
  %470 = select i1 %469, i32 1183843240, i32 1856141728
  br label %.backedge

471:                                              ; preds = %7
  br label %.backedge

472:                                              ; preds = %7
  %473 = add i32 %.0103, -1
  br label %.backedge

474:                                              ; preds = %7
  %475 = load i32, i32* @x.3, align 4
  %476 = load i32, i32* @y.4, align 4
  %477 = add i32 %475, -1
  %478 = mul i32 %477, %475
  %479 = and i32 %478, 1
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %481, %480
  %483 = select i1 %482, i32 852315413, i32 -451851572
  br label %.backedge

484:                                              ; preds = %7
  %485 = load i32, i32* @x.3, align 4
  %486 = load i32, i32* @y.4, align 4
  %487 = add i32 %485, -1
  %488 = mul i32 %487, %485
  %489 = and i32 %488, 1
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %491, %490
  %493 = select i1 %492, i32 -621760354, i32 -451851572
  br label %.backedge

494:                                              ; preds = %7
  br label %.backedge

495:                                              ; preds = %7
  %496 = add i32 %.0105, -1
  br label %.backedge

497:                                              ; preds = %7
  %498 = sext i32 %.0113 to i64
  %499 = mul nsw i64 %498, 500000004
  %500 = srem i64 %499, 1000000007
  %501 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 %500)
  ret i32 0

502:                                              ; preds = %7
  br label %.backedge

503:                                              ; preds = %7
  %504 = sext i32 %.0121 to i64
  %505 = getelementptr inbounds [4015 x [4015 x i32]], [4015 x [4015 x i32]]* @__f, i64 0, i64 %504, i64 2005
  %506 = getelementptr inbounds [4015 x i32*], [4015 x i32*]* @_f, i64 0, i64 %504
  store i32* %505, i32** %506, align 8
  %507 = getelementptr inbounds [4015 x [4015 x i32]], [4015 x [4015 x i32]]* @__val, i64 0, i64 %504, i64 2005
  %508 = getelementptr inbounds [4015 x i32*], [4015 x i32*]* @_val, i64 0, i64 %504
  store i32* %507, i32** %508, align 8
  br label %.backedge

509:                                              ; preds = %7
  %510 = add i32 %.0119, 1
  br label %.backedge

511:                                              ; preds = %7
  br label %.backedge

512:                                              ; preds = %7
  %513 = add i32 %.0117, 1
  br label %.backedge

514:                                              ; preds = %7
  br label %.backedge

515:                                              ; preds = %7
  %516 = tail call i32 @_Z2giv()
  %517 = tail call i32 @_Z2giv()
  %518 = load i32**, i32*** @val, align 8
  %519 = sext i32 %516 to i64
  %520 = getelementptr inbounds i32*, i32** %518, i64 %519
  %521 = load i32*, i32** %520, align 8
  %522 = sext i32 %517 to i64
  %523 = getelementptr inbounds i32, i32* %521, i64 %522
  %524 = load i32, i32* %523, align 4
  %.neg = add i32 %524, 1
  store i32 %.neg, i32* %523, align 4
  %525 = load i32**, i32*** @val, align 8
  %526 = sub i32 0, %516
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds i32*, i32** %525, i64 %527
  %529 = load i32*, i32** %528, align 8
  %530 = sub i32 0, %517
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds i32, i32* %529, i64 %531
  %533 = load i32, i32* %532, align 4
  %.neg123 = add i32 %533, 1
  store i32 %.neg123, i32* %532, align 4
  %534 = load i32**, i32*** @f, align 8
  %535 = getelementptr inbounds i32*, i32** %534, i64 %519
  %536 = load i32*, i32** %535, align 8
  %537 = getelementptr inbounds i32, i32* %536, i64 %522
  %538 = load i32, i32* %537, align 4
  %539 = add i32 %538, 1
  store i32 %539, i32* %537, align 4
  %540 = shl i32 %516, 1
  %541 = add i32 %517, %516
  %542 = shl i32 %541, 1
  %543 = tail call i32 @_Z1Cii(i32 %542, i32 %540)
  %544 = tail call i32 @_Z3subii(i32 %.0113, i32 %543)
  br label %.backedge

545:                                              ; preds = %7
  %546 = load i32**, i32*** @f, align 8
  %547 = sext i32 %.0109 to i64
  %548 = getelementptr inbounds i32*, i32** %546, i64 %547
  %549 = load i32*, i32** %548, align 8
  %550 = add i32 %.0107, -1
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds i32, i32* %549, i64 %551
  %553 = load i32, i32* %552, align 4
  %554 = sext i32 %.0107 to i64
  %555 = getelementptr inbounds i32, i32* %549, i64 %554
  %556 = load i32, i32* %555, align 4
  %557 = tail call i32 @_Z3addii(i32 %553, i32 %556)
  %558 = load i32**, i32*** @f, align 8
  %559 = getelementptr inbounds i32*, i32** %558, i64 %547
  %560 = load i32*, i32** %559, align 8
  %561 = getelementptr inbounds i32, i32* %560, i64 %551
  store i32 %557, i32* %561, align 4
  br label %.backedge

562:                                              ; preds = %7
  br label %.backedge

563:                                              ; preds = %7
  br label %.backedge

564:                                              ; preds = %7
  br label %.backedge

565:                                              ; preds = %7
  %566 = load i32**, i32*** @val, align 8
  %567 = sext i32 %.0105 to i64
  %568 = getelementptr inbounds i32*, i32** %566, i64 %567
  %569 = load i32*, i32** %568, align 8
  %570 = sext i32 %.0103 to i64
  %571 = getelementptr inbounds i32, i32* %569, i64 %570
  %572 = load i32, i32* %571, align 4
  %573 = sext i32 %572 to i64
  %574 = load i32**, i32*** @f, align 8
  %575 = getelementptr inbounds i32*, i32** %574, i64 %567
  %576 = load i32*, i32** %575, align 8
  %577 = getelementptr inbounds i32, i32* %576, i64 %570
  %578 = load i32, i32* %577, align 4
  %579 = sext i32 %578 to i64
  %580 = mul nsw i64 %579, %573
  %581 = srem i64 %580, 1000000007
  %582 = trunc i64 %581 to i32
  %583 = tail call i32 @_Z3addii(i32 %.0113, i32 %582)
  br label %.backedge

584:                                              ; preds = %7
  br label %.backedge

585:                                              ; preds = %7
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z2giv() local_unnamed_addr #0 comdat {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = tail call i32 @getchar()
  %5 = trunc i32 %4 to i8
  br label %6

6:                                                ; preds = %.backedge, %0
  %.01924 = phi i32 [ undef, %0 ], [ %.01924.be, %.backedge ]
  %.021 = phi i8 [ %5, %0 ], [ %.021.be, %.backedge ]
  %.019 = phi i32 [ undef, %0 ], [ %.019.be, %.backedge ]
  %.017 = phi i32 [ -391435959, %0 ], [ %.017.be, %.backedge ]
  %.015 = phi i1 [ undef, %0 ], [ %.015.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.017, label %.backedge [
    i32 -391435959, label %7
    i32 -954442247, label %17
    i32 1720975314, label %28
    i32 -1674363463, label %30
    i32 1748270043, label %40
    i32 -835082160, label %51
    i32 949676544, label %52
    i32 -999387262, label %54
    i32 -1000003818, label %57
    i32 -624111866, label %67
    i32 804298859, label %77
    i32 2057157752, label %78
    i32 -419260930, label %81
    i32 -1968928367, label %83
    i32 836275314, label %85
    i32 -951945377, label %92
    i32 766092595, label %102
    i32 -24974897, label %112
    i32 512085839, label %113
    i32 -186412593, label %114
    i32 508592634, label %115
    i32 -590403057, label %116
  ]

.backedge:                                        ; preds = %6, %116, %115, %114, %113, %102, %92, %85, %83, %81, %78, %77, %67, %57, %54, %52, %51, %40, %30, %28, %17, %7
  %.01924.be = phi i32 [ %.01924, %6 ], [ %.01924, %116 ], [ %.01924, %115 ], [ %.01924, %114 ], [ %.01924, %113 ], [ %.019, %102 ], [ %.01924, %92 ], [ %.01924, %85 ], [ %.01924, %83 ], [ %.01924, %81 ], [ %.01924, %78 ], [ %.01924, %77 ], [ %.01924, %67 ], [ %.01924, %57 ], [ %.01924, %54 ], [ %.01924, %52 ], [ %.01924, %51 ], [ %.01924, %40 ], [ %.01924, %30 ], [ %.01924, %28 ], [ %.01924, %17 ], [ %.01924, %7 ]
  %.021.be = phi i8 [ %.021, %6 ], [ %.021, %116 ], [ %.021, %115 ], [ %.021, %114 ], [ %.021, %113 ], [ %.021, %102 ], [ %.021, %92 ], [ %91, %85 ], [ %.021, %83 ], [ %.021, %81 ], [ %.021, %78 ], [ %.021, %77 ], [ %.021, %67 ], [ %.021, %57 ], [ %56, %54 ], [ %.021, %52 ], [ %.021, %51 ], [ %.021, %40 ], [ %.021, %30 ], [ %.021, %28 ], [ %.021, %17 ], [ %.021, %7 ]
  %.019.be = phi i32 [ %.019, %6 ], [ %.019, %116 ], [ 0, %115 ], [ %.019, %114 ], [ %.019, %113 ], [ %.019, %102 ], [ %.019, %92 ], [ %89, %85 ], [ %.019, %83 ], [ %.019, %81 ], [ %.019, %78 ], [ %.019, %77 ], [ 0, %67 ], [ %.019, %57 ], [ %.019, %54 ], [ %.019, %52 ], [ %.019, %51 ], [ %.019, %40 ], [ %.019, %30 ], [ %.019, %28 ], [ %.019, %17 ], [ %.019, %7 ]
  %.017.be = phi i32 [ %.017, %6 ], [ 766092595, %116 ], [ -624111866, %115 ], [ 1748270043, %114 ], [ -954442247, %113 ], [ %111, %102 ], [ %101, %92 ], [ 2057157752, %85 ], [ %84, %83 ], [ -1968928367, %81 ], [ %80, %78 ], [ 2057157752, %77 ], [ %76, %67 ], [ %66, %57 ], [ -391435959, %54 ], [ %53, %52 ], [ 949676544, %51 ], [ %50, %40 ], [ %39, %30 ], [ %29, %28 ], [ %27, %17 ], [ %16, %7 ]
  %.015.be = phi i1 [ %.015, %6 ], [ %.015, %116 ], [ %.015, %115 ], [ %.015, %114 ], [ %.015, %113 ], [ %.015, %102 ], [ %.015, %92 ], [ %.015, %85 ], [ %.015, %83 ], [ %.015, %81 ], [ %.015, %78 ], [ %.015, %77 ], [ %.015, %67 ], [ %.015, %57 ], [ %.015, %54 ], [ %.015, %52 ], [ %.0..0..0.13, %51 ], [ %.015, %40 ], [ %.015, %30 ], [ true, %28 ], [ %.015, %17 ], [ %.015, %7 ]
  %.0.be = phi i1 [ %.0, %6 ], [ %.0, %116 ], [ %.0, %115 ], [ %.0, %114 ], [ %.0, %113 ], [ %.0, %102 ], [ %.0, %92 ], [ %.0, %85 ], [ %.0, %83 ], [ %82, %81 ], [ false, %78 ], [ %.0, %77 ], [ %.0, %67 ], [ %.0, %57 ], [ %.0, %54 ], [ %.0, %52 ], [ %.0, %51 ], [ %.0, %40 ], [ %.0, %30 ], [ %.0, %28 ], [ %.0, %17 ], [ %.0, %7 ]
  br label %6

7:                                                ; preds = %6
  %8 = load i32, i32* @x.5, align 4
  %9 = load i32, i32* @y.6, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -954442247, i32 512085839
  br label %.backedge

17:                                               ; preds = %6
  %18 = icmp slt i8 %.021, 48
  store i1 %18, i1* %3, align 1
  %19 = load i32, i32* @x.5, align 4
  %20 = load i32, i32* @y.6, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 1720975314, i32 512085839
  br label %.backedge

28:                                               ; preds = %6
  %.0..0..0.12 = load volatile i1, i1* %3, align 1
  %29 = select i1 %.0..0..0.12, i32 949676544, i32 -1674363463
  br label %.backedge

30:                                               ; preds = %6
  %31 = load i32, i32* @x.5, align 4
  %32 = load i32, i32* @y.6, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 1748270043, i32 -186412593
  br label %.backedge

40:                                               ; preds = %6
  %41 = icmp sgt i8 %.021, 57
  store i1 %41, i1* %2, align 1
  %42 = load i32, i32* @x.5, align 4
  %43 = load i32, i32* @y.6, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -835082160, i32 -186412593
  br label %.backedge

51:                                               ; preds = %6
  %.0..0..0.13 = load volatile i1, i1* %2, align 1
  br label %.backedge

52:                                               ; preds = %6
  %53 = select i1 %.015, i32 -999387262, i32 -1000003818
  br label %.backedge

54:                                               ; preds = %6
  %55 = tail call i32 @getchar()
  %56 = trunc i32 %55 to i8
  br label %.backedge

57:                                               ; preds = %6
  %58 = load i32, i32* @x.5, align 4
  %59 = load i32, i32* @y.6, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -624111866, i32 508592634
  br label %.backedge

67:                                               ; preds = %6
  %68 = load i32, i32* @x.5, align 4
  %69 = load i32, i32* @y.6, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 804298859, i32 508592634
  br label %.backedge

77:                                               ; preds = %6
  br label %.backedge

78:                                               ; preds = %6
  %79 = icmp sgt i8 %.021, 47
  %80 = select i1 %79, i32 -419260930, i32 -1968928367
  br label %.backedge

81:                                               ; preds = %6
  %82 = icmp slt i8 %.021, 58
  br label %.backedge

83:                                               ; preds = %6
  %84 = select i1 %.0, i32 836275314, i32 -951945377
  br label %.backedge

85:                                               ; preds = %6
  %86 = mul nsw i32 %.019, 10
  %87 = sext i8 %.021 to i32
  %88 = add nsw i32 %87, -48
  %89 = add i32 %88, %86
  %90 = tail call i32 @getchar()
  %91 = trunc i32 %90 to i8
  br label %.backedge

92:                                               ; preds = %6
  %93 = load i32, i32* @x.5, align 4
  %94 = load i32, i32* @y.6, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 766092595, i32 -590403057
  br label %.backedge

102:                                              ; preds = %6
  %103 = load i32, i32* @x.5, align 4
  %104 = load i32, i32* @y.6, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -24974897, i32 -590403057
  br label %.backedge

112:                                              ; preds = %6
  store i32 %.01924, i32* %1, align 4
  %.0..0..0.14 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.14

113:                                              ; preds = %6
  br label %.backedge

114:                                              ; preds = %6
  br label %.backedge

115:                                              ; preds = %6
  br label %.backedge

116:                                              ; preds = %6
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z3subii(i32 %0, i32 %1) local_unnamed_addr #6 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* @x.7, align 4
  %7 = load i32, i32* @y.8, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 -1174527965, i32 492901925
  %15 = select i1 %13, i32 32746953, i32 492901925
  %16 = add i32 %0, 1000000007
  br label %.outer

.outer:                                           ; preds = %17, %2
  %.010.ph = phi i32 [ -1761345559, %2 ], [ %15, %17 ]
  %.0.ph = phi i32 [ undef, %2 ], [ %.0.ph16.ph, %17 ]
  br label %.outer14.outer

.outer14.outer:                                   ; preds = %.outer14.outer.backedge, %.outer
  %.010.ph15.ph = phi i32 [ %.010.ph, %.outer ], [ 1307295596, %.outer14.outer.backedge ]
  %.0.ph16.ph = phi i32 [ %.0.ph, %.outer ], [ %.0.ph16.ph.be, %.outer14.outer.backedge ]
  br label %.outer14

.outer14:                                         ; preds = %.outer14.backedge, %.outer14.outer
  %.010.ph15 = phi i32 [ %.010.ph15.ph, %.outer14.outer ], [ %.010.ph15.be, %.outer14.backedge ]
  br label %17

17:                                               ; preds = %.outer14, %17
  switch i32 %.010.ph15, label %17 [
    i32 -1761345559, label %18
    i32 -478214047, label %.outer14.outer.backedge
    i32 -250011667, label %20
    i32 1307295596, label %.outer
    i32 32746953, label %.outer14.backedge
    i32 -1174527965, label %21
    i32 492901925, label %22
  ]

18:                                               ; preds = %17
  %.0..0..0. = load volatile i32, i32* %5, align 4
  %.0..0..0.8 = load volatile i32, i32* %4, align 4
  %.not = icmp slt i32 %.0..0..0., %.0..0..0.8
  %19 = select i1 %.not, i32 -250011667, i32 -478214047
  br label %.outer14.backedge

.outer14.outer.backedge:                          ; preds = %17, %20
  %.pn = phi i32 [ %16, %20 ], [ %0, %17 ]
  %.0.ph16.ph.be = sub i32 %.pn, %1
  br label %.outer14.outer

20:                                               ; preds = %17
  br label %.outer14.outer.backedge

21:                                               ; preds = %17
  store i32 %.0.ph, i32* %3, align 4
  %.0..0..0.9 = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.9

22:                                               ; preds = %17
  br label %.outer14.backedge

.outer14.backedge:                                ; preds = %17, %22, %18
  %.010.ph15.be = phi i32 [ %19, %18 ], [ 32746953, %22 ], [ %14, %17 ]
  br label %.outer14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z3addii(i32 %0, i32 %1) local_unnamed_addr #6 comdat {
  %3 = alloca i32, align 4
  %4 = add i32 %1, %0
  store i32 %4, i32* %3, align 4
  %5 = add i32 %4, -1000000007
  br label %.outer.outer

.outer.outer:                                     ; preds = %.outer.outer.backedge, %2
  %.08.ph.ph = phi i32 [ -1941308809, %2 ], [ 1942910990, %.outer.outer.backedge ]
  %.0.ph.ph = phi i32 [ undef, %2 ], [ %.0.ph.ph.be, %.outer.outer.backedge ]
  br label %.outer

.outer:                                           ; preds = %.outer.outer, %7
  %.08.ph = phi i32 [ %9, %7 ], [ %.08.ph.ph, %.outer.outer ]
  br label %6

6:                                                ; preds = %.outer, %6
  switch i32 %.08.ph, label %6 [
    i32 -1941308809, label %7
    i32 -713712147, label %.outer.outer.backedge
    i32 -1363021518, label %10
    i32 1942910990, label %11
  ]

7:                                                ; preds = %6
  %.0..0..0. = load volatile i32, i32* %3, align 4
  %8 = icmp sgt i32 %.0..0..0., 1000000006
  %9 = select i1 %8, i32 -713712147, i32 -1363021518
  br label %.outer

.outer.outer.backedge:                            ; preds = %6, %10
  %.0.ph.ph.be = phi i32 [ %4, %10 ], [ %5, %6 ]
  br label %.outer.outer

10:                                               ; preds = %6
  br label %.outer.outer.backedge

11:                                               ; preds = %6
  ret i32 %.0.ph.ph
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #7

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s628515173.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
