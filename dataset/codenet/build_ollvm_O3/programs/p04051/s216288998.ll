; ModuleID = 'build_ollvm/programs/p04051/s216288998.ll'
source_filename = "Project_CodeNet_C++1400/p04051/s216288998.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt3maxIiERKT_S2_S2_ = comdat any

@n = global i32 0, align 4
@a = global [200010 x i32] zeroinitializer, align 16
@b = global [200010 x i32] zeroinitializer, align 16
@fac = local_unnamed_addr global [800040 x i32] zeroinitializer, align 16
@ifac = local_unnamed_addr global [800040 x i32] zeroinitializer, align 16
@f = global [4020 x [4020 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define void @_Z3addRii(i32* nocapture dereferenceable(4) %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = load i32, i32* %0, align 4
  %5 = add i32 %4, %1
  store i32 %5, i32* %3, align 4
  %.0..0..0.4 = load volatile i32, i32* %3, align 4
  store i32 %.0..0..0.4, i32* %0, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.ph = phi i32 [ %.0..0..0.4, %2 ], [ %.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1790242170, %2 ], [ %.0.ph.be, %.outer.backedge ]
  %6 = load i32, i32* @x, align 4
  %7 = load i32, i32* @y, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 202283263, i32 402221090
  br label %.outer6

.outer6:                                          ; preds = %.outer6.backedge, %.outer
  %.0.ph7 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph7.be, %.outer6.backedge ]
  br label %15

15:                                               ; preds = %.outer6, %15
  switch i32 %.0.ph7, label %15 [
    i32 1790242170, label %16
    i32 167305570, label %.outer6.backedge
    i32 202283263, label %19
    i32 2043357928, label %30
    i32 -1501435240, label %31
    i32 402221090, label %32
  ]

16:                                               ; preds = %15
  %.0..0..0.5 = load volatile i32, i32* %3, align 4
  %17 = icmp sgt i32 %.0..0..0.5, 1000000006
  %18 = select i1 %17, i32 167305570, i32 -1501435240
  br label %.outer6.backedge

19:                                               ; preds = %15
  %20 = add i32 %.ph, -1000000007
  store i32 %20, i32* %0, align 4
  %21 = load i32, i32* @x, align 4
  %22 = load i32, i32* @y, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 2043357928, i32 402221090
  br label %.outer.backedge

30:                                               ; preds = %15
  br label %.outer6.backedge

.outer6.backedge:                                 ; preds = %15, %30, %16
  %.0.ph7.be = phi i32 [ %18, %16 ], [ -1501435240, %30 ], [ %14, %15 ]
  br label %.outer6

31:                                               ; preds = %15
  ret void

32:                                               ; preds = %15
  %33 = add i32 %.ph, -1000000007
  store i32 %33, i32* %0, align 4
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %32, %19
  %.ph.be = phi i32 [ %20, %19 ], [ %33, %32 ]
  %.0.ph.be = phi i32 [ %29, %19 ], [ 202283263, %32 ]
  br label %.outer
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define void @_Z3subRii(i32* nocapture dereferenceable(4) %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = load i32, i32* %0, align 4
  %5 = sub i32 %4, %1
  store i32 %5, i32* %3, align 4
  %.0..0..0.3 = load volatile i32, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %10, %2
  %storemerge = phi i32 [ %.0..0..0.3, %2 ], [ %11, %10 ]
  %.0.ph = phi i32 [ 1270698749, %2 ], [ -1374609388, %10 ]
  br label %.outer5

.outer5:                                          ; preds = %.outer, %7
  %.0.ph6 = phi i32 [ %.0.ph, %.outer ], [ %9, %7 ]
  br label %6

6:                                                ; preds = %.outer5, %6
  switch i32 %.0.ph6, label %6 [
    i32 1270698749, label %7
    i32 20365087, label %10
    i32 -1374609388, label %12
  ]

7:                                                ; preds = %6
  %.0..0..0.4 = load volatile i32, i32* %3, align 4
  %8 = icmp slt i32 %.0..0..0.4, 0
  %9 = select i1 %8, i32 20365087, i32 -1374609388
  br label %.outer5

10:                                               ; preds = %6
  %11 = add i32 %storemerge, 1000000007
  br label %.outer

12:                                               ; preds = %6
  store i32 %storemerge, i32* %0, align 4
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #1 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull @n)
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %9

9:                                                ; preds = %.backedge, %0
  %.089 = phi i32 [ 0, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.0 = phi i32 [ -1879518071, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1879518071, label %10
    i32 -1688374000, label %14
    i32 803075486, label %24
    i32 -1142354772, label %42
    i32 -2093366381, label %43
    i32 -354937137, label %45
    i32 -349909207, label %55
    i32 -1851018461, label %65
    i32 649244787, label %66
    i32 -1903425058, label %76
    i32 1913557301, label %88
    i32 1123579893, label %90
    i32 665563, label %100
    i32 670806536, label %124
    i32 1057096476, label %125
    i32 -1384168342, label %135
    i32 -614787042, label %145
    i32 1416717412, label %146
    i32 -574135356, label %156
    i32 1408841503, label %166
    i32 -657368112, label %167
    i32 -174932318, label %171
    i32 1259627516, label %172
    i32 1737118220, label %176
    i32 290799011, label %178
    i32 -609478993, label %186
    i32 -1931724831, label %188
    i32 993758823, label %196
    i32 -67037908, label %197
    i32 -137807461, label %198
    i32 1531446231, label %199
    i32 -185618346, label %201
    i32 -1403866253, label %202
    i32 1825867260, label %212
    i32 -1446623151, label %224
    i32 -1341689375, label %226
    i32 -1921437099, label %240
    i32 -747878135, label %241
    i32 368739276, label %251
    i32 -670423553, label %265
    i32 -1032026194, label %266
    i32 -1843597838, label %268
    i32 1636171618, label %279
    i32 746020141, label %281
    i32 932342976, label %282
    i32 582828564, label %292
    i32 827637512, label %303
    i32 -164261197, label %305
    i32 1476156116, label %320
    i32 1217859874, label %322
    i32 -879981107, label %323
    i32 -1811446461, label %325
    i32 -1901147247, label %335
    i32 406258494, label %357
    i32 450722461, label %358
    i32 279578538, label %360
    i32 -662464473, label %361
    i32 1998950505, label %371
    i32 2121892974, label %383
    i32 30523618, label %385
    i32 -1360639853, label %416
    i32 248992631, label %418
    i32 -276963805, label %422
    i32 -819885509, label %425
    i32 2000123021, label %429
    i32 1176759632, label %438
    i32 776934005, label %439
    i32 -818173543, label %440
    i32 -1873647478, label %455
    i32 1839919401, label %457
    i32 1441210140, label %458
    i32 1827234903, label %459
    i32 -981472781, label %464
    i32 -1552352909, label %465
    i32 1441872007, label %478
  ]

.backedge:                                        ; preds = %9, %478, %465, %464, %459, %458, %457, %455, %440, %439, %438, %429, %422, %418, %416, %385, %383, %371, %361, %360, %358, %357, %335, %325, %323, %322, %320, %305, %303, %292, %282, %281, %279, %268, %266, %265, %251, %241, %240, %226, %224, %212, %202, %201, %199, %198, %197, %196, %188, %186, %178, %176, %172, %171, %167, %166, %156, %146, %145, %135, %125, %124, %100, %90, %88, %76, %66, %65, %55, %45, %43, %42, %24, %14, %10
  %.089.be = phi i32 [ %.089, %9 ], [ %.089, %478 ], [ %.089, %465 ], [ %.089, %464 ], [ %.089, %459 ], [ %.089, %458 ], [ %.089, %457 ], [ %.089, %455 ], [ %.089, %440 ], [ %.089, %439 ], [ %.089, %438 ], [ %.089, %429 ], [ %.089, %422 ], [ %.089, %418 ], [ %.089, %416 ], [ %.089, %385 ], [ %.089, %383 ], [ %.089, %371 ], [ %.089, %361 ], [ %.089, %360 ], [ %.089, %358 ], [ %.089, %357 ], [ %.089, %335 ], [ %.089, %325 ], [ %.089, %323 ], [ %.089, %322 ], [ %.089, %320 ], [ %.089, %305 ], [ %.089, %303 ], [ %.089, %292 ], [ %.089, %282 ], [ %.089, %281 ], [ %.089, %279 ], [ %.089, %268 ], [ %.089, %266 ], [ %.089, %265 ], [ %.089, %251 ], [ %.089, %241 ], [ %.089, %240 ], [ %.089, %226 ], [ %.089, %224 ], [ %.089, %212 ], [ %.089, %202 ], [ %.089, %201 ], [ %.089, %199 ], [ %.089, %198 ], [ %.089, %197 ], [ %.089, %196 ], [ %.089, %188 ], [ %.089, %186 ], [ %.089, %178 ], [ %.089, %176 ], [ %.089, %172 ], [ %.089, %171 ], [ %.089, %167 ], [ %.089, %166 ], [ %.089, %156 ], [ %.089, %146 ], [ %.089, %145 ], [ %.089, %135 ], [ %.089, %125 ], [ %.089, %124 ], [ %.089, %100 ], [ %.089, %90 ], [ %.089, %88 ], [ %.089, %76 ], [ %.089, %66 ], [ %.089, %65 ], [ %.089, %55 ], [ %.089, %45 ], [ %44, %43 ], [ %.089, %42 ], [ %.089, %24 ], [ %.089, %14 ], [ %.089, %10 ]
  %.087.be = phi i32 [ %.087, %9 ], [ %.087, %478 ], [ %.087, %465 ], [ %.087, %464 ], [ %.087, %459 ], [ %.087, %458 ], [ %.087, %457 ], [ %456, %455 ], [ %.087, %440 ], [ %.087, %439 ], [ 0, %438 ], [ %.087, %429 ], [ %.087, %422 ], [ %.087, %418 ], [ %.087, %416 ], [ %.087, %385 ], [ %.087, %383 ], [ %.087, %371 ], [ %.087, %361 ], [ %.087, %360 ], [ %.087, %358 ], [ %.087, %357 ], [ %.087, %335 ], [ %.087, %325 ], [ %.087, %323 ], [ %.087, %322 ], [ %.087, %320 ], [ %.087, %305 ], [ %.087, %303 ], [ %.087, %292 ], [ %.087, %282 ], [ %.087, %281 ], [ %.087, %279 ], [ %.087, %268 ], [ %.087, %266 ], [ %.087, %265 ], [ %.087, %251 ], [ %.087, %241 ], [ %.087, %240 ], [ %.087, %226 ], [ %.087, %224 ], [ %.087, %212 ], [ %.087, %202 ], [ %.087, %201 ], [ %.087, %199 ], [ %.087, %198 ], [ %.087, %197 ], [ %.087, %196 ], [ %.087, %188 ], [ %.087, %186 ], [ %.087, %178 ], [ %.087, %176 ], [ %.087, %172 ], [ %.087, %171 ], [ %.087, %167 ], [ %.087, %166 ], [ %.087, %156 ], [ %.087, %146 ], [ %.087, %145 ], [ %.neg98, %135 ], [ %.087, %125 ], [ %.087, %124 ], [ %.087, %100 ], [ %.087, %90 ], [ %.087, %88 ], [ %.087, %76 ], [ %.087, %66 ], [ %.087, %65 ], [ 0, %55 ], [ %.087, %45 ], [ %.087, %43 ], [ %.087, %42 ], [ %.087, %24 ], [ %.087, %14 ], [ %.087, %10 ]
  %.085.be = phi i32 [ %.085, %9 ], [ %.085, %478 ], [ %.085, %465 ], [ %.085, %464 ], [ %.085, %459 ], [ %.085, %458 ], [ 0, %457 ], [ %.085, %455 ], [ %.085, %440 ], [ %.085, %439 ], [ %.085, %438 ], [ %.085, %429 ], [ %.085, %422 ], [ %.085, %418 ], [ %.085, %416 ], [ %.085, %385 ], [ %.085, %383 ], [ %.085, %371 ], [ %.085, %361 ], [ %.085, %360 ], [ %.085, %358 ], [ %.085, %357 ], [ %.085, %335 ], [ %.085, %325 ], [ %.085, %323 ], [ %.085, %322 ], [ %.085, %320 ], [ %.085, %305 ], [ %.085, %303 ], [ %.085, %292 ], [ %.085, %282 ], [ %.085, %281 ], [ %.085, %279 ], [ %.085, %268 ], [ %.085, %266 ], [ %.085, %265 ], [ %.085, %251 ], [ %.085, %241 ], [ %.085, %240 ], [ %.085, %226 ], [ %.085, %224 ], [ %.085, %212 ], [ %.085, %202 ], [ %.085, %201 ], [ %200, %199 ], [ %.085, %198 ], [ %.085, %197 ], [ %.085, %196 ], [ %.085, %188 ], [ %.085, %186 ], [ %.085, %178 ], [ %.085, %176 ], [ %.085, %172 ], [ %.085, %171 ], [ %.085, %167 ], [ %.085, %166 ], [ 0, %156 ], [ %.085, %146 ], [ %.085, %145 ], [ %.085, %135 ], [ %.085, %125 ], [ %.085, %124 ], [ %.085, %100 ], [ %.085, %90 ], [ %.085, %88 ], [ %.085, %76 ], [ %.085, %66 ], [ %.085, %65 ], [ %.085, %55 ], [ %.085, %45 ], [ %.085, %43 ], [ %.085, %42 ], [ %.085, %24 ], [ %.085, %14 ], [ %.085, %10 ]
  %.083.be = phi i32 [ %.083, %9 ], [ %.083, %478 ], [ %.083, %465 ], [ %.083, %464 ], [ %.083, %459 ], [ %.083, %458 ], [ %.083, %457 ], [ %.083, %455 ], [ %.083, %440 ], [ %.083, %439 ], [ %.083, %438 ], [ %.083, %429 ], [ %.083, %422 ], [ %.083, %418 ], [ %.083, %416 ], [ %.083, %385 ], [ %.083, %383 ], [ %.083, %371 ], [ %.083, %361 ], [ %.083, %360 ], [ %.083, %358 ], [ %.083, %357 ], [ %.083, %335 ], [ %.083, %325 ], [ %.083, %323 ], [ %.083, %322 ], [ %.083, %320 ], [ %.083, %305 ], [ %.083, %303 ], [ %.083, %292 ], [ %.083, %282 ], [ %.083, %281 ], [ %.083, %279 ], [ %.083, %268 ], [ %.083, %266 ], [ %.083, %265 ], [ %.083, %251 ], [ %.083, %241 ], [ %.083, %240 ], [ %.083, %226 ], [ %.083, %224 ], [ %.083, %212 ], [ %.083, %202 ], [ %.083, %201 ], [ %.083, %199 ], [ %.083, %198 ], [ %.neg93, %197 ], [ %.083, %196 ], [ %.083, %188 ], [ %.083, %186 ], [ %.083, %178 ], [ %.083, %176 ], [ %.083, %172 ], [ 0, %171 ], [ %.083, %167 ], [ %.083, %166 ], [ %.083, %156 ], [ %.083, %146 ], [ %.083, %145 ], [ %.083, %135 ], [ %.083, %125 ], [ %.083, %124 ], [ %.083, %100 ], [ %.083, %90 ], [ %.083, %88 ], [ %.083, %76 ], [ %.083, %66 ], [ %.083, %65 ], [ %.083, %55 ], [ %.083, %45 ], [ %.083, %43 ], [ %.083, %42 ], [ %.083, %24 ], [ %.083, %14 ], [ %.083, %10 ]
  %.081.be = phi i32 [ %.081, %9 ], [ %.081, %478 ], [ %.081, %465 ], [ %.081, %464 ], [ %.081, %459 ], [ %.081, %458 ], [ %.081, %457 ], [ %.081, %455 ], [ %.081, %440 ], [ %.081, %439 ], [ %.081, %438 ], [ %.081, %429 ], [ %.081, %422 ], [ %.081, %418 ], [ %.081, %416 ], [ %.081, %385 ], [ %.081, %383 ], [ %.081, %371 ], [ %.081, %361 ], [ %.081, %360 ], [ %.081, %358 ], [ %.081, %357 ], [ %.081, %335 ], [ %.081, %325 ], [ %.081, %323 ], [ %.081, %322 ], [ %.081, %320 ], [ %.081, %305 ], [ %.081, %303 ], [ %.081, %292 ], [ %.081, %282 ], [ %.081, %281 ], [ %.081, %279 ], [ %.081, %268 ], [ %.081, %266 ], [ %.081, %265 ], [ %.081, %251 ], [ %.081, %241 ], [ %.neg, %240 ], [ %.081, %226 ], [ %.081, %224 ], [ %.081, %212 ], [ %.081, %202 ], [ 0, %201 ], [ %.081, %199 ], [ %.081, %198 ], [ %.081, %197 ], [ %.081, %196 ], [ %.081, %188 ], [ %.081, %186 ], [ %.081, %178 ], [ %.081, %176 ], [ %.081, %172 ], [ %.081, %171 ], [ %.081, %167 ], [ %.081, %166 ], [ %.081, %156 ], [ %.081, %146 ], [ %.081, %145 ], [ %.081, %135 ], [ %.081, %125 ], [ %.081, %124 ], [ %.081, %100 ], [ %.081, %90 ], [ %.081, %88 ], [ %.081, %76 ], [ %.081, %66 ], [ %.081, %65 ], [ %.081, %55 ], [ %.081, %45 ], [ %.081, %43 ], [ %.081, %42 ], [ %.081, %24 ], [ %.081, %14 ], [ %.081, %10 ]
  %.079.be = phi i32 [ %.079, %9 ], [ %.079, %478 ], [ %.079, %465 ], [ %.079, %464 ], [ %463, %459 ], [ %.079, %458 ], [ %.079, %457 ], [ %.079, %455 ], [ %.079, %440 ], [ %.079, %439 ], [ %.079, %438 ], [ %.079, %429 ], [ %.079, %422 ], [ %.079, %418 ], [ %.079, %416 ], [ %.079, %385 ], [ %.079, %383 ], [ %.079, %371 ], [ %.079, %361 ], [ %.079, %360 ], [ %.079, %358 ], [ %.079, %357 ], [ %.079, %335 ], [ %.079, %325 ], [ %.079, %323 ], [ %.079, %322 ], [ %.079, %320 ], [ %.079, %305 ], [ %.079, %303 ], [ %.079, %292 ], [ %.079, %282 ], [ %.079, %281 ], [ %.079, %279 ], [ %.079, %268 ], [ %.079, %266 ], [ %.079, %265 ], [ %255, %251 ], [ %.079, %241 ], [ %.079, %240 ], [ %.079, %226 ], [ %.079, %224 ], [ %.079, %212 ], [ %.079, %202 ], [ %.079, %201 ], [ %.079, %199 ], [ %.079, %198 ], [ %.079, %197 ], [ %.079, %196 ], [ %.079, %188 ], [ %.079, %186 ], [ %.079, %178 ], [ %.079, %176 ], [ %.079, %172 ], [ %.079, %171 ], [ %.079, %167 ], [ %.079, %166 ], [ %.079, %156 ], [ %.079, %146 ], [ %.079, %145 ], [ %.079, %135 ], [ %.079, %125 ], [ %.079, %124 ], [ %.079, %100 ], [ %.079, %90 ], [ %.079, %88 ], [ %.079, %76 ], [ %.079, %66 ], [ %.079, %65 ], [ %.079, %55 ], [ %.079, %45 ], [ %.079, %43 ], [ %.079, %42 ], [ %.079, %24 ], [ %.079, %14 ], [ %.079, %10 ]
  %.077.be = phi i32 [ %.077, %9 ], [ %.077, %478 ], [ %.077, %465 ], [ %.077, %464 ], [ 1, %459 ], [ %.077, %458 ], [ %.077, %457 ], [ %.077, %455 ], [ %.077, %440 ], [ %.077, %439 ], [ %.077, %438 ], [ %.077, %429 ], [ %.077, %422 ], [ %.077, %418 ], [ %.077, %416 ], [ %.077, %385 ], [ %.077, %383 ], [ %.077, %371 ], [ %.077, %361 ], [ %.077, %360 ], [ %.077, %358 ], [ %.077, %357 ], [ %.077, %335 ], [ %.077, %325 ], [ %.077, %323 ], [ %.077, %322 ], [ %.077, %320 ], [ %.077, %305 ], [ %.077, %303 ], [ %.077, %292 ], [ %.077, %282 ], [ %.077, %281 ], [ %280, %279 ], [ %.077, %268 ], [ %.077, %266 ], [ %.077, %265 ], [ 1, %251 ], [ %.077, %241 ], [ %.077, %240 ], [ %.077, %226 ], [ %.077, %224 ], [ %.077, %212 ], [ %.077, %202 ], [ %.077, %201 ], [ %.077, %199 ], [ %.077, %198 ], [ %.077, %197 ], [ %.077, %196 ], [ %.077, %188 ], [ %.077, %186 ], [ %.077, %178 ], [ %.077, %176 ], [ %.077, %172 ], [ %.077, %171 ], [ %.077, %167 ], [ %.077, %166 ], [ %.077, %156 ], [ %.077, %146 ], [ %.077, %145 ], [ %.077, %135 ], [ %.077, %125 ], [ %.077, %124 ], [ %.077, %100 ], [ %.077, %90 ], [ %.077, %88 ], [ %.077, %76 ], [ %.077, %66 ], [ %.077, %65 ], [ %.077, %55 ], [ %.077, %45 ], [ %.077, %43 ], [ %.077, %42 ], [ %.077, %24 ], [ %.077, %14 ], [ %.077, %10 ]
  %.075.be = phi i32 [ %.075, %9 ], [ %.075, %478 ], [ %.075, %465 ], [ %.075, %464 ], [ %.075, %459 ], [ %.075, %458 ], [ %.075, %457 ], [ %.075, %455 ], [ %.075, %440 ], [ %.075, %439 ], [ %.075, %438 ], [ %.075, %429 ], [ %.075, %422 ], [ %.075, %418 ], [ %.075, %416 ], [ %.075, %385 ], [ %.075, %383 ], [ %.075, %371 ], [ %.075, %361 ], [ %.075, %360 ], [ %.075, %358 ], [ %.075, %357 ], [ %.075, %335 ], [ %.075, %325 ], [ %.075, %323 ], [ %.075, %322 ], [ %321, %320 ], [ %.075, %305 ], [ %.075, %303 ], [ %.075, %292 ], [ %.075, %282 ], [ 2, %281 ], [ %.075, %279 ], [ %.075, %268 ], [ %.075, %266 ], [ %.075, %265 ], [ %.075, %251 ], [ %.075, %241 ], [ %.075, %240 ], [ %.075, %226 ], [ %.075, %224 ], [ %.075, %212 ], [ %.075, %202 ], [ %.075, %201 ], [ %.075, %199 ], [ %.075, %198 ], [ %.075, %197 ], [ %.075, %196 ], [ %.075, %188 ], [ %.075, %186 ], [ %.075, %178 ], [ %.075, %176 ], [ %.075, %172 ], [ %.075, %171 ], [ %.075, %167 ], [ %.075, %166 ], [ %.075, %156 ], [ %.075, %146 ], [ %.075, %145 ], [ %.075, %135 ], [ %.075, %125 ], [ %.075, %124 ], [ %.075, %100 ], [ %.075, %90 ], [ %.075, %88 ], [ %.075, %76 ], [ %.075, %66 ], [ %.075, %65 ], [ %.075, %55 ], [ %.075, %45 ], [ %.075, %43 ], [ %.075, %42 ], [ %.075, %24 ], [ %.075, %14 ], [ %.075, %10 ]
  %.073.be = phi i32 [ %.073, %9 ], [ %.073, %478 ], [ %.073, %465 ], [ %.073, %464 ], [ %.073, %459 ], [ %.073, %458 ], [ %.073, %457 ], [ %.073, %455 ], [ %.073, %440 ], [ %.073, %439 ], [ %.073, %438 ], [ %.073, %429 ], [ %.073, %422 ], [ %.073, %418 ], [ %.073, %416 ], [ %.073, %385 ], [ %.073, %383 ], [ %.073, %371 ], [ %.073, %361 ], [ %.073, %360 ], [ %359, %358 ], [ %.073, %357 ], [ %.073, %335 ], [ %.073, %325 ], [ %.073, %323 ], [ 1, %322 ], [ %.073, %320 ], [ %.073, %305 ], [ %.073, %303 ], [ %.073, %292 ], [ %.073, %282 ], [ %.073, %281 ], [ %.073, %279 ], [ %.073, %268 ], [ %.073, %266 ], [ %.073, %265 ], [ %.073, %251 ], [ %.073, %241 ], [ %.073, %240 ], [ %.073, %226 ], [ %.073, %224 ], [ %.073, %212 ], [ %.073, %202 ], [ %.073, %201 ], [ %.073, %199 ], [ %.073, %198 ], [ %.073, %197 ], [ %.073, %196 ], [ %.073, %188 ], [ %.073, %186 ], [ %.073, %178 ], [ %.073, %176 ], [ %.073, %172 ], [ %.073, %171 ], [ %.073, %167 ], [ %.073, %166 ], [ %.073, %156 ], [ %.073, %146 ], [ %.073, %145 ], [ %.073, %135 ], [ %.073, %125 ], [ %.073, %124 ], [ %.073, %100 ], [ %.073, %90 ], [ %.073, %88 ], [ %.073, %76 ], [ %.073, %66 ], [ %.073, %65 ], [ %.073, %55 ], [ %.073, %45 ], [ %.073, %43 ], [ %.073, %42 ], [ %.073, %24 ], [ %.073, %14 ], [ %.073, %10 ]
  %.071.be = phi i32 [ %.071, %9 ], [ %.071, %478 ], [ %.071, %465 ], [ %.071, %464 ], [ %.071, %459 ], [ %.071, %458 ], [ %.071, %457 ], [ %.071, %455 ], [ %.071, %440 ], [ %.071, %439 ], [ %.071, %438 ], [ %.071, %429 ], [ %.071, %422 ], [ %.071, %418 ], [ %417, %416 ], [ %.071, %385 ], [ %.071, %383 ], [ %.071, %371 ], [ %.071, %361 ], [ 0, %360 ], [ %.071, %358 ], [ %.071, %357 ], [ %.071, %335 ], [ %.071, %325 ], [ %.071, %323 ], [ %.071, %322 ], [ %.071, %320 ], [ %.071, %305 ], [ %.071, %303 ], [ %.071, %292 ], [ %.071, %282 ], [ %.071, %281 ], [ %.071, %279 ], [ %.071, %268 ], [ %.071, %266 ], [ %.071, %265 ], [ %.071, %251 ], [ %.071, %241 ], [ %.071, %240 ], [ %.071, %226 ], [ %.071, %224 ], [ %.071, %212 ], [ %.071, %202 ], [ %.071, %201 ], [ %.071, %199 ], [ %.071, %198 ], [ %.071, %197 ], [ %.071, %196 ], [ %.071, %188 ], [ %.071, %186 ], [ %.071, %178 ], [ %.071, %176 ], [ %.071, %172 ], [ %.071, %171 ], [ %.071, %167 ], [ %.071, %166 ], [ %.071, %156 ], [ %.071, %146 ], [ %.071, %145 ], [ %.071, %135 ], [ %.071, %125 ], [ %.071, %124 ], [ %.071, %100 ], [ %.071, %90 ], [ %.071, %88 ], [ %.071, %76 ], [ %.071, %66 ], [ %.071, %65 ], [ %.071, %55 ], [ %.071, %45 ], [ %.071, %43 ], [ %.071, %42 ], [ %.071, %24 ], [ %.071, %14 ], [ %.071, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ 1998950505, %478 ], [ -1901147247, %465 ], [ 582828564, %464 ], [ 368739276, %459 ], [ 1825867260, %458 ], [ -574135356, %457 ], [ -1384168342, %455 ], [ 665563, %440 ], [ -1903425058, %439 ], [ -349909207, %438 ], [ 803075486, %429 ], [ -819885509, %422 ], [ %421, %418 ], [ -662464473, %416 ], [ -1360639853, %385 ], [ %384, %383 ], [ %382, %371 ], [ %370, %361 ], [ -662464473, %360 ], [ -879981107, %358 ], [ 450722461, %357 ], [ %356, %335 ], [ %334, %325 ], [ %324, %323 ], [ -879981107, %322 ], [ 932342976, %320 ], [ 1476156116, %305 ], [ %304, %303 ], [ %302, %292 ], [ %291, %282 ], [ 932342976, %281 ], [ -1032026194, %279 ], [ 1636171618, %268 ], [ %267, %266 ], [ -1032026194, %265 ], [ %264, %251 ], [ %250, %241 ], [ -1403866253, %240 ], [ -1921437099, %226 ], [ %225, %224 ], [ %223, %212 ], [ %211, %202 ], [ -1403866253, %201 ], [ -657368112, %199 ], [ 1531446231, %198 ], [ 1259627516, %197 ], [ -67037908, %196 ], [ 993758823, %188 ], [ %187, %186 ], [ -609478993, %178 ], [ %177, %176 ], [ %175, %172 ], [ 1259627516, %171 ], [ %170, %167 ], [ -657368112, %166 ], [ %165, %156 ], [ %155, %146 ], [ 649244787, %145 ], [ %144, %135 ], [ %134, %125 ], [ 1057096476, %124 ], [ %123, %100 ], [ %99, %90 ], [ %89, %88 ], [ %87, %76 ], [ %75, %66 ], [ 649244787, %65 ], [ %64, %55 ], [ %54, %45 ], [ -1879518071, %43 ], [ -2093366381, %42 ], [ %41, %24 ], [ %23, %14 ], [ %13, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @n, align 4
  %12 = icmp slt i32 %.089, %11
  %13 = select i1 %12, i32 -1688374000, i32 -354937137
  br label %.backedge

14:                                               ; preds = %9
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 803075486, i32 2000123021
  br label %.backedge

24:                                               ; preds = %9
  %25 = sext i32 %.089 to i64
  %26 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %25
  %27 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %25
  %28 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %26, i32* nonnull %27)
  %29 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %26)
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %5, align 4
  %31 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %27)
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %6, align 4
  %33 = load i32, i32* @x.5, align 4
  %34 = load i32, i32* @y.6, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 -1142354772, i32 2000123021
  br label %.backedge

42:                                               ; preds = %9
  br label %.backedge

43:                                               ; preds = %9
  %44 = add i32 %.089, 1
  br label %.backedge

45:                                               ; preds = %9
  %46 = load i32, i32* @x.5, align 4
  %47 = load i32, i32* @y.6, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -349909207, i32 1176759632
  br label %.backedge

55:                                               ; preds = %9
  %56 = load i32, i32* @x.5, align 4
  %57 = load i32, i32* @y.6, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 -1851018461, i32 1176759632
  br label %.backedge

65:                                               ; preds = %9
  br label %.backedge

66:                                               ; preds = %9
  %67 = load i32, i32* @x.5, align 4
  %68 = load i32, i32* @y.6, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 -1903425058, i32 776934005
  br label %.backedge

76:                                               ; preds = %9
  %77 = load i32, i32* @n, align 4
  %78 = icmp slt i32 %.087, %77
  store i1 %78, i1* %4, align 1
  %79 = load i32, i32* @x.5, align 4
  %80 = load i32, i32* @y.6, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 1913557301, i32 776934005
  br label %.backedge

88:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %89 = select i1 %.0..0..0., i32 1123579893, i32 1416717412
  br label %.backedge

90:                                               ; preds = %9
  %91 = load i32, i32* @x.5, align 4
  %92 = load i32, i32* @y.6, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 665563, i32 -818173543
  br label %.backedge

100:                                              ; preds = %9
  %101 = load i32, i32* %5, align 4
  %102 = sext i32 %.087 to i64
  %103 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = sub i32 %101, %104
  %106 = sext i32 %105 to i64
  %107 = load i32, i32* %6, align 4
  %108 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %102
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 %107, %109
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [4020 x [4020 x i32]], [4020 x [4020 x i32]]* @f, i64 0, i64 %106, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %112, align 4
  %115 = load i32, i32* @x.5, align 4
  %116 = load i32, i32* @y.6, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 670806536, i32 -818173543
  br label %.backedge

124:                                              ; preds = %9
  br label %.backedge

125:                                              ; preds = %9
  %126 = load i32, i32* @x.5, align 4
  %127 = load i32, i32* @y.6, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 -1384168342, i32 -1873647478
  br label %.backedge

135:                                              ; preds = %9
  %.neg98 = add i32 %.087, 1
  %136 = load i32, i32* @x.5, align 4
  %137 = load i32, i32* @y.6, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 -614787042, i32 -1873647478
  br label %.backedge

145:                                              ; preds = %9
  br label %.backedge

146:                                              ; preds = %9
  %147 = load i32, i32* @x.5, align 4
  %148 = load i32, i32* @y.6, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 -574135356, i32 1839919401
  br label %.backedge

156:                                              ; preds = %9
  %157 = load i32, i32* @x.5, align 4
  %158 = load i32, i32* @y.6, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 1408841503, i32 1839919401
  br label %.backedge

166:                                              ; preds = %9
  br label %.backedge

167:                                              ; preds = %9
  %168 = load i32, i32* %5, align 4
  %169 = shl nsw i32 %168, 1
  %.not97 = icmp sgt i32 %.085, %169
  %170 = select i1 %.not97, i32 -185618346, i32 -174932318
  br label %.backedge

171:                                              ; preds = %9
  br label %.backedge

172:                                              ; preds = %9
  %173 = load i32, i32* %6, align 4
  %174 = shl nsw i32 %173, 1
  %.not96 = icmp sgt i32 %.083, %174
  %175 = select i1 %.not96, i32 -137807461, i32 1737118220
  br label %.backedge

176:                                              ; preds = %9
  %.not95 = icmp eq i32 %.085, 0
  %177 = select i1 %.not95, i32 -609478993, i32 290799011
  br label %.backedge

178:                                              ; preds = %9
  %179 = sext i32 %.085 to i64
  %180 = sext i32 %.083 to i64
  %181 = getelementptr inbounds [4020 x [4020 x i32]], [4020 x [4020 x i32]]* @f, i64 0, i64 %179, i64 %180
  %182 = add i32 %.085, -1
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [4020 x [4020 x i32]], [4020 x [4020 x i32]]* @f, i64 0, i64 %183, i64 %180
  %185 = load i32, i32* %184, align 4
  call void @_Z3addRii(i32* nonnull dereferenceable(4) %181, i32 %185)
  br label %.backedge

186:                                              ; preds = %9
  %.not94 = icmp eq i32 %.083, 0
  %187 = select i1 %.not94, i32 993758823, i32 -1931724831
  br label %.backedge

188:                                              ; preds = %9
  %189 = sext i32 %.085 to i64
  %190 = sext i32 %.083 to i64
  %191 = getelementptr inbounds [4020 x [4020 x i32]], [4020 x [4020 x i32]]* @f, i64 0, i64 %189, i64 %190
  %192 = add i32 %.083, -1
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [4020 x [4020 x i32]], [4020 x [4020 x i32]]* @f, i64 0, i64 %189, i64 %193
  %195 = load i32, i32* %194, align 4
  call void @_Z3addRii(i32* nonnull dereferenceable(4) %191, i32 %195)
  br label %.backedge

196:                                              ; preds = %9
  br label %.backedge

197:                                              ; preds = %9
  %.neg93 = add i32 %.083, 1
  br label %.backedge

198:                                              ; preds = %9
  br label %.backedge

199:                                              ; preds = %9
  %200 = add i32 %.085, 1
  br label %.backedge

201:                                              ; preds = %9
  store i32 0, i32* %7, align 4
  br label %.backedge

202:                                              ; preds = %9
  %203 = load i32, i32* @x.5, align 4
  %204 = load i32, i32* @y.6, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 1825867260, i32 1441210140
  br label %.backedge

212:                                              ; preds = %9
  %213 = load i32, i32* @n, align 4
  %214 = icmp slt i32 %.081, %213
  store i1 %214, i1* %3, align 1
  %215 = load i32, i32* @x.5, align 4
  %216 = load i32, i32* @y.6, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 -1446623151, i32 1441210140
  br label %.backedge

224:                                              ; preds = %9
  %.0..0..0.68 = load volatile i1, i1* %3, align 1
  %225 = select i1 %.0..0..0.68, i32 -1341689375, i32 -747878135
  br label %.backedge

226:                                              ; preds = %9
  %227 = load i32, i32* %5, align 4
  %228 = sext i32 %.081 to i64
  %229 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = add i32 %230, %227
  %232 = sext i32 %231 to i64
  %233 = load i32, i32* %6, align 4
  %234 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %228
  %235 = load i32, i32* %234, align 4
  %236 = add i32 %235, %233
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [4020 x [4020 x i32]], [4020 x [4020 x i32]]* @f, i64 0, i64 %232, i64 %237
  %239 = load i32, i32* %238, align 4
  call void @_Z3addRii(i32* nonnull dereferenceable(4) %7, i32 %239)
  br label %.backedge

240:                                              ; preds = %9
  %.neg = add i32 %.081, 1
  br label %.backedge

241:                                              ; preds = %9
  %242 = load i32, i32* @x.5, align 4
  %243 = load i32, i32* @y.6, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 368739276, i32 1827234903
  br label %.backedge

251:                                              ; preds = %9
  store i32 1, i32* getelementptr inbounds ([800040 x i32], [800040 x i32]* @fac, i64 0, i64 0), align 16
  %252 = load i32, i32* %5, align 4
  %253 = load i32, i32* %6, align 4
  %254 = add i32 %253, %252
  %255 = shl nsw i32 %254, 1
  %256 = load i32, i32* @x.5, align 4
  %257 = load i32, i32* @y.6, align 4
  %258 = add i32 %256, -1
  %259 = mul i32 %258, %256
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %262, %261
  %264 = select i1 %263, i32 -670423553, i32 1827234903
  br label %.backedge

265:                                              ; preds = %9
  br label %.backedge

266:                                              ; preds = %9
  %.not92 = icmp sgt i32 %.077, %.079
  %267 = select i1 %.not92, i32 746020141, i32 -1843597838
  br label %.backedge

268:                                              ; preds = %9
  %269 = add i32 %.077, -1
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [800040 x i32], [800040 x i32]* @fac, i64 0, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = sext i32 %272 to i64
  %274 = sext i32 %.077 to i64
  %275 = mul nsw i64 %273, %274
  %276 = srem i64 %275, 1000000007
  %277 = trunc i64 %276 to i32
  %278 = getelementptr inbounds [800040 x i32], [800040 x i32]* @fac, i64 0, i64 %274
  store i32 %277, i32* %278, align 4
  br label %.backedge

279:                                              ; preds = %9
  %280 = add i32 %.077, 1
  br label %.backedge

281:                                              ; preds = %9
  store i32 1, i32* getelementptr inbounds ([800040 x i32], [800040 x i32]* @ifac, i64 0, i64 1), align 4
  br label %.backedge

282:                                              ; preds = %9
  %283 = load i32, i32* @x.5, align 4
  %284 = load i32, i32* @y.6, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 582828564, i32 -981472781
  br label %.backedge

292:                                              ; preds = %9
  %293 = icmp sle i32 %.075, %.079
  store i1 %293, i1* %2, align 1
  %294 = load i32, i32* @x.5, align 4
  %295 = load i32, i32* @y.6, align 4
  %296 = add i32 %294, -1
  %297 = mul i32 %296, %294
  %298 = and i32 %297, 1
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %300, %299
  %302 = select i1 %301, i32 827637512, i32 -981472781
  br label %.backedge

303:                                              ; preds = %9
  %.0..0..0.69 = load volatile i1, i1* %2, align 1
  %304 = select i1 %.0..0..0.69, i32 -164261197, i32 1217859874
  br label %.backedge

305:                                              ; preds = %9
  %306 = sdiv i32 1000000007, %.075
  %307 = sub nsw i32 0, %306
  %308 = sext i32 %307 to i64
  %309 = srem i32 1000000007, %.075
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [800040 x i32], [800040 x i32]* @ifac, i64 0, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = sext i32 %312 to i64
  %314 = mul nsw i64 %313, %308
  %315 = srem i64 %314, 1000000007
  %316 = trunc i64 %315 to i32
  %317 = add nsw i32 %316, 1000000007
  %318 = sext i32 %.075 to i64
  %319 = getelementptr inbounds [800040 x i32], [800040 x i32]* @ifac, i64 0, i64 %318
  store i32 %317, i32* %319, align 4
  br label %.backedge

320:                                              ; preds = %9
  %321 = add i32 %.075, 1
  br label %.backedge

322:                                              ; preds = %9
  store i32 1, i32* getelementptr inbounds ([800040 x i32], [800040 x i32]* @ifac, i64 0, i64 0), align 16
  br label %.backedge

323:                                              ; preds = %9
  %.not91 = icmp sgt i32 %.073, %.079
  %324 = select i1 %.not91, i32 279578538, i32 -1811446461
  br label %.backedge

325:                                              ; preds = %9
  %326 = load i32, i32* @x.5, align 4
  %327 = load i32, i32* @y.6, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 -1901147247, i32 -1552352909
  br label %.backedge

335:                                              ; preds = %9
  %336 = add i32 %.073, -1
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds [800040 x i32], [800040 x i32]* @ifac, i64 0, i64 %337
  %339 = load i32, i32* %338, align 4
  %340 = sext i32 %339 to i64
  %341 = sext i32 %.073 to i64
  %342 = getelementptr inbounds [800040 x i32], [800040 x i32]* @ifac, i64 0, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = sext i32 %343 to i64
  %345 = mul nsw i64 %344, %340
  %346 = srem i64 %345, 1000000007
  %347 = trunc i64 %346 to i32
  store i32 %347, i32* %342, align 4
  %348 = load i32, i32* @x.5, align 4
  %349 = load i32, i32* @y.6, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 406258494, i32 -1552352909
  br label %.backedge

357:                                              ; preds = %9
  br label %.backedge

358:                                              ; preds = %9
  %359 = add i32 %.073, 1
  br label %.backedge

360:                                              ; preds = %9
  br label %.backedge

361:                                              ; preds = %9
  %362 = load i32, i32* @x.5, align 4
  %363 = load i32, i32* @y.6, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 1998950505, i32 1441872007
  br label %.backedge

371:                                              ; preds = %9
  %372 = load i32, i32* @n, align 4
  %373 = icmp slt i32 %.071, %372
  store i1 %373, i1* %1, align 1
  %374 = load i32, i32* @x.5, align 4
  %375 = load i32, i32* @y.6, align 4
  %376 = add i32 %374, -1
  %377 = mul i32 %376, %374
  %378 = and i32 %377, 1
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %380, %379
  %382 = select i1 %381, i32 2121892974, i32 1441872007
  br label %.backedge

383:                                              ; preds = %9
  %.0..0..0.70 = load volatile i1, i1* %1, align 1
  %384 = select i1 %.0..0..0.70, i32 30523618, i32 248992631
  br label %.backedge

385:                                              ; preds = %9
  %386 = load i32, i32* %7, align 4
  %387 = sext i32 %386 to i64
  %388 = sext i32 %.071 to i64
  %389 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %388
  %390 = load i32, i32* %389, align 4
  %391 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %388
  %392 = load i32, i32* %391, align 4
  %393 = add i32 %392, %390
  %394 = shl nsw i32 %393, 1
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds [800040 x i32], [800040 x i32]* @fac, i64 0, i64 %395
  %397 = load i32, i32* %396, align 8
  %398 = sub i32 1000000007, %397
  %399 = sext i32 %398 to i64
  %400 = shl nsw i32 %390, 1
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds [800040 x i32], [800040 x i32]* @ifac, i64 0, i64 %401
  %403 = load i32, i32* %402, align 8
  %404 = sext i32 %403 to i64
  %405 = mul nsw i64 %399, %404
  %406 = srem i64 %405, 1000000007
  %407 = shl nsw i32 %392, 1
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds [800040 x i32], [800040 x i32]* @ifac, i64 0, i64 %408
  %410 = load i32, i32* %409, align 8
  %411 = sext i32 %410 to i64
  %412 = mul nsw i64 %406, %411
  %413 = add nsw i64 %412, %387
  %414 = srem i64 %413, 1000000007
  %415 = trunc i64 %414 to i32
  store i32 %415, i32* %7, align 4
  br label %.backedge

416:                                              ; preds = %9
  %417 = add i32 %.071, 1
  br label %.backedge

418:                                              ; preds = %9
  %419 = load i32, i32* %7, align 4
  %420 = and i32 %419, 1
  %.not = icmp eq i32 %420, 0
  %421 = select i1 %.not, i32 -819885509, i32 -276963805
  br label %.backedge

422:                                              ; preds = %9
  %423 = load i32, i32* %7, align 4
  %424 = add i32 %423, 1000000007
  store i32 %424, i32* %7, align 4
  br label %.backedge

425:                                              ; preds = %9
  %426 = load i32, i32* %7, align 4
  %427 = ashr i32 %426, 1
  %428 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %427)
  ret i32 0

429:                                              ; preds = %9
  %430 = sext i32 %.089 to i64
  %431 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %430
  %432 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %430
  %433 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %431, i32* nonnull %432)
  %434 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %431)
  %435 = load i32, i32* %434, align 4
  store i32 %435, i32* %5, align 4
  %436 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %432)
  %437 = load i32, i32* %436, align 4
  store i32 %437, i32* %6, align 4
  br label %.backedge

438:                                              ; preds = %9
  br label %.backedge

439:                                              ; preds = %9
  br label %.backedge

440:                                              ; preds = %9
  %441 = load i32, i32* %5, align 4
  %442 = sext i32 %.087 to i64
  %443 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %442
  %444 = load i32, i32* %443, align 4
  %445 = sub i32 %441, %444
  %446 = sext i32 %445 to i64
  %447 = load i32, i32* %6, align 4
  %448 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %442
  %449 = load i32, i32* %448, align 4
  %450 = sub i32 %447, %449
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds [4020 x [4020 x i32]], [4020 x [4020 x i32]]* @f, i64 0, i64 %446, i64 %451
  %453 = load i32, i32* %452, align 4
  %454 = add i32 %453, 1
  store i32 %454, i32* %452, align 4
  br label %.backedge

455:                                              ; preds = %9
  %456 = add i32 %.087, 1
  br label %.backedge

457:                                              ; preds = %9
  br label %.backedge

458:                                              ; preds = %9
  br label %.backedge

459:                                              ; preds = %9
  store i32 1, i32* getelementptr inbounds ([800040 x i32], [800040 x i32]* @fac, i64 0, i64 0), align 16
  %460 = load i32, i32* %5, align 4
  %461 = load i32, i32* %6, align 4
  %462 = add i32 %461, %460
  %463 = shl nsw i32 %462, 1
  br label %.backedge

464:                                              ; preds = %9
  br label %.backedge

465:                                              ; preds = %9
  %466 = add i32 %.073, -1
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [800040 x i32], [800040 x i32]* @ifac, i64 0, i64 %467
  %469 = load i32, i32* %468, align 4
  %470 = sext i32 %469 to i64
  %471 = sext i32 %.073 to i64
  %472 = getelementptr inbounds [800040 x i32], [800040 x i32]* @ifac, i64 0, i64 %471
  %473 = load i32, i32* %472, align 4
  %474 = sext i32 %473 to i64
  %475 = mul nsw i64 %474, %470
  %476 = srem i64 %475, 1000000007
  %477 = trunc i64 %476 to i32
  store i32 %477, i32* %472, align 4
  br label %.backedge

478:                                              ; preds = %9
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #3 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.7, align 4
  %9 = load i32, i32* @y.8, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 245115502, i32 1130208050
  %17 = select i1 %15, i32 -444745598, i32 1130208050
  %18 = select i1 %15, i32 522262341, i32 -520578279
  %19 = select i1 %15, i32 197302515, i32 -520578279
  %20 = select i1 %15, i32 -1701366267, i32 990027631
  %21 = select i1 %15, i32 1592817189, i32 990027631
  br label %22

22:                                               ; preds = %.backedge, %2
  %.01114 = phi i32* [ undef, %2 ], [ %.01114.be, %.backedge ]
  %.011 = phi i32* [ undef, %2 ], [ %.011.be, %.backedge ]
  %.0 = phi i32 [ -268285149, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -268285149, label %23
    i32 748785234, label %26
    i32 1592817189, label %27
    i32 -1701366267, label %28
    i32 -50276624, label %29
    i32 197302515, label %30
    i32 522262341, label %31
    i32 -91517191, label %32
    i32 -444745598, label %33
    i32 245115502, label %34
    i32 990027631, label %35
    i32 -520578279, label %36
    i32 1130208050, label %37
  ]

.backedge:                                        ; preds = %22, %37, %36, %35, %33, %32, %31, %30, %29, %28, %27, %26, %23
  %.01114.be = phi i32* [ %.01114, %22 ], [ %.01114, %37 ], [ %.01114, %36 ], [ %.01114, %35 ], [ %.011, %33 ], [ %.01114, %32 ], [ %.01114, %31 ], [ %.01114, %30 ], [ %.01114, %29 ], [ %.01114, %28 ], [ %.01114, %27 ], [ %.01114, %26 ], [ %.01114, %23 ]
  %.011.be = phi i32* [ %.011, %22 ], [ %.011, %37 ], [ %0, %36 ], [ %1, %35 ], [ %.011, %33 ], [ %.011, %32 ], [ %.011, %31 ], [ %0, %30 ], [ %.011, %29 ], [ %.011, %28 ], [ %1, %27 ], [ %.011, %26 ], [ %.011, %23 ]
  %.0.be = phi i32 [ %.0, %22 ], [ -444745598, %37 ], [ 197302515, %36 ], [ 1592817189, %35 ], [ %16, %33 ], [ %17, %32 ], [ -91517191, %31 ], [ %18, %30 ], [ %19, %29 ], [ -91517191, %28 ], [ %20, %27 ], [ %21, %26 ], [ %25, %23 ]
  br label %22

23:                                               ; preds = %22
  %.0..0..0.8 = load volatile i32, i32* %5, align 4
  %.0..0..0.9 = load volatile i32, i32* %4, align 4
  %24 = icmp slt i32 %.0..0..0.8, %.0..0..0.9
  %25 = select i1 %24, i32 748785234, i32 -50276624
  br label %.backedge

26:                                               ; preds = %22
  br label %.backedge

27:                                               ; preds = %22
  br label %.backedge

28:                                               ; preds = %22
  br label %.backedge

29:                                               ; preds = %22
  br label %.backedge

30:                                               ; preds = %22
  br label %.backedge

31:                                               ; preds = %22
  br label %.backedge

32:                                               ; preds = %22
  br label %.backedge

33:                                               ; preds = %22
  br label %.backedge

34:                                               ; preds = %22
  store i32* %.01114, i32** %3, align 8
  %.0..0..0.10 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.10

35:                                               ; preds = %22
  br label %.backedge

36:                                               ; preds = %22
  br label %.backedge

37:                                               ; preds = %22
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
