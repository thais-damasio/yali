; ModuleID = 'build_ollvm/programs/p04051/s416167675.ll'
source_filename = "Project_CodeNet_C++1400/p04051/s416167675.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_Z4readv = comdat any

$_Z2QPii = comdat any

$_Z1Cii = comdat any

@n = local_unnamed_addr global i32 0, align 4
@F = local_unnamed_addr global [4005 x [4005 x i32]] zeroinitializer, align 16
@fac = local_unnamed_addr global [8005 x i32] zeroinitializer, align 16
@inv = local_unnamed_addr global [8005 x i32] zeroinitializer, align 16
@A = local_unnamed_addr global [200005 x i32] zeroinitializer, align 16
@B = local_unnamed_addr global [200005 x i32] zeroinitializer, align 16
@ans = local_unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = tail call i32 @_Z4readv()
  store i32 %9, i32* @n, align 4
  store i32 1, i32* getelementptr inbounds ([8005 x i32], [8005 x i32]* @fac, i64 0, i64 0), align 16
  br label %10

10:                                               ; preds = %.backedge, %0
  %.071 = phi i32 [ 1, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ -816389698, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.0 = phi i32 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.061, label %.backedge [
    i32 -816389698, label %11
    i32 -1241548556, label %21
    i32 -382699589, label %32
    i32 -1266246730, label %34
    i32 953211844, label %47
    i32 73132917, label %57
    i32 -2138792197, label %68
    i32 2122999815, label %69
    i32 1455922107, label %70
    i32 -1284537494, label %80
    i32 544464895, label %92
    i32 1307059518, label %94
    i32 1987184229, label %108
    i32 -383191238, label %110
    i32 -1615462031, label %120
    i32 -1458074223, label %130
    i32 -80515005, label %131
    i32 1490395441, label %134
    i32 -2023649487, label %135
    i32 -624720217, label %145
    i32 995836979, label %156
    i32 1733447613, label %158
    i32 -217448271, label %165
    i32 1558445437, label %171
    i32 -783174855, label %181
    i32 41833669, label %191
    i32 -2145663751, label %192
    i32 1267351612, label %202
    i32 1186814356, label %215
    i32 1652421828, label %217
    i32 1708506829, label %223
    i32 1116943917, label %224
    i32 -356025334, label %232
    i32 -69119783, label %234
    i32 695056365, label %235
    i32 1860716846, label %237
    i32 63821542, label %247
    i32 -205410448, label %257
    i32 52759295, label %258
    i32 1057245454, label %268
    i32 1935564782, label %280
    i32 -1687267507, label %282
    i32 -1317027117, label %302
    i32 -1597259715, label %304
    i32 1551354435, label %313
    i32 -670489385, label %314
    i32 -247329355, label %316
    i32 1971880015, label %317
    i32 694199341, label %318
    i32 -50651007, label %319
    i32 -1713602414, label %320
    i32 -1297123719, label %321
    i32 -2109675221, label %322
  ]

.backedge:                                        ; preds = %10, %322, %321, %320, %319, %318, %317, %316, %314, %313, %302, %282, %280, %268, %258, %257, %247, %237, %235, %234, %232, %224, %223, %217, %215, %202, %192, %191, %181, %171, %165, %158, %156, %145, %135, %134, %131, %130, %120, %110, %108, %94, %92, %80, %70, %69, %68, %57, %47, %34, %32, %21, %11
  %.071.be = phi i32 [ %.071, %10 ], [ %.071, %322 ], [ %.071, %321 ], [ %.071, %320 ], [ %.071, %319 ], [ %.071, %318 ], [ %.071, %317 ], [ %.071, %316 ], [ %315, %314 ], [ %.071, %313 ], [ %.071, %302 ], [ %.071, %282 ], [ %.071, %280 ], [ %.071, %268 ], [ %.071, %258 ], [ %.071, %257 ], [ %.071, %247 ], [ %.071, %237 ], [ %.071, %235 ], [ %.071, %234 ], [ %.071, %232 ], [ %.071, %224 ], [ %.071, %223 ], [ %.071, %217 ], [ %.071, %215 ], [ %.071, %202 ], [ %.071, %192 ], [ %.071, %191 ], [ %.071, %181 ], [ %.071, %171 ], [ %.071, %165 ], [ %.071, %158 ], [ %.071, %156 ], [ %.071, %145 ], [ %.071, %135 ], [ %.071, %134 ], [ %.071, %131 ], [ %.071, %130 ], [ %.071, %120 ], [ %.071, %110 ], [ %.071, %108 ], [ %.071, %94 ], [ %.071, %92 ], [ %.071, %80 ], [ %.071, %70 ], [ %.071, %69 ], [ %.071, %68 ], [ %58, %57 ], [ %.071, %47 ], [ %.071, %34 ], [ %.071, %32 ], [ %.071, %21 ], [ %.071, %11 ]
  %.069.be = phi i32 [ %.069, %10 ], [ %.069, %322 ], [ %.069, %321 ], [ %.069, %320 ], [ %.069, %319 ], [ %.069, %318 ], [ %.069, %317 ], [ %.069, %316 ], [ %.069, %314 ], [ %.069, %313 ], [ %.069, %302 ], [ %.069, %282 ], [ %.069, %280 ], [ %.069, %268 ], [ %.069, %258 ], [ %.069, %257 ], [ %.069, %247 ], [ %.069, %237 ], [ %.069, %235 ], [ %.069, %234 ], [ %.069, %232 ], [ %.069, %224 ], [ %.069, %223 ], [ %.069, %217 ], [ %.069, %215 ], [ %.069, %202 ], [ %.069, %192 ], [ %.069, %191 ], [ %.069, %181 ], [ %.069, %171 ], [ %.069, %165 ], [ %.069, %158 ], [ %.069, %156 ], [ %.069, %145 ], [ %.069, %135 ], [ %.069, %134 ], [ %.069, %131 ], [ %.069, %130 ], [ %.069, %120 ], [ %.069, %110 ], [ %109, %108 ], [ %.069, %94 ], [ %.069, %92 ], [ %.069, %80 ], [ %.069, %70 ], [ 1, %69 ], [ %.069, %68 ], [ %.069, %57 ], [ %.069, %47 ], [ %.069, %34 ], [ %.069, %32 ], [ %.069, %21 ], [ %.069, %11 ]
  %.067.be = phi i32 [ %.067, %10 ], [ %.067, %322 ], [ %.067, %321 ], [ %.067, %320 ], [ %.067, %319 ], [ %.067, %318 ], [ 0, %317 ], [ %.067, %316 ], [ %.067, %314 ], [ %.067, %313 ], [ %.067, %302 ], [ %.067, %282 ], [ %.067, %280 ], [ %.067, %268 ], [ %.067, %258 ], [ %.067, %257 ], [ %.067, %247 ], [ %.067, %237 ], [ %236, %235 ], [ %.067, %234 ], [ %.067, %232 ], [ %.067, %224 ], [ %.067, %223 ], [ %.067, %217 ], [ %.067, %215 ], [ %.067, %202 ], [ %.067, %192 ], [ %.067, %191 ], [ %.067, %181 ], [ %.067, %171 ], [ %.067, %165 ], [ %.067, %158 ], [ %.067, %156 ], [ %.067, %145 ], [ %.067, %135 ], [ %.067, %134 ], [ %.067, %131 ], [ %.067, %130 ], [ 0, %120 ], [ %.067, %110 ], [ %.067, %108 ], [ %.067, %94 ], [ %.067, %92 ], [ %.067, %80 ], [ %.067, %70 ], [ %.067, %69 ], [ %.067, %68 ], [ %.067, %57 ], [ %.067, %47 ], [ %.067, %34 ], [ %.067, %32 ], [ %.067, %21 ], [ %.067, %11 ]
  %.065.be = phi i32 [ %.065, %10 ], [ %.065, %322 ], [ %.065, %321 ], [ %.065, %320 ], [ %.065, %319 ], [ %.065, %318 ], [ %.065, %317 ], [ %.065, %316 ], [ %.065, %314 ], [ %.065, %313 ], [ %.065, %302 ], [ %.065, %282 ], [ %.065, %280 ], [ %.065, %268 ], [ %.065, %258 ], [ %.065, %257 ], [ %.065, %247 ], [ %.065, %237 ], [ %.065, %235 ], [ %.065, %234 ], [ %233, %232 ], [ %.065, %224 ], [ %.065, %223 ], [ %.065, %217 ], [ %.065, %215 ], [ %.065, %202 ], [ %.065, %192 ], [ %.065, %191 ], [ %.065, %181 ], [ %.065, %171 ], [ %.065, %165 ], [ %.065, %158 ], [ %.065, %156 ], [ %.065, %145 ], [ %.065, %135 ], [ 0, %134 ], [ %.065, %131 ], [ %.065, %130 ], [ %.065, %120 ], [ %.065, %110 ], [ %.065, %108 ], [ %.065, %94 ], [ %.065, %92 ], [ %.065, %80 ], [ %.065, %70 ], [ %.065, %69 ], [ %.065, %68 ], [ %.065, %57 ], [ %.065, %47 ], [ %.065, %34 ], [ %.065, %32 ], [ %.065, %21 ], [ %.065, %11 ]
  %.063.be = phi i32 [ %.063, %10 ], [ %.063, %322 ], [ 1, %321 ], [ %.063, %320 ], [ %.063, %319 ], [ %.063, %318 ], [ %.063, %317 ], [ %.063, %316 ], [ %.063, %314 ], [ %.063, %313 ], [ %303, %302 ], [ %.063, %282 ], [ %.063, %280 ], [ %.063, %268 ], [ %.063, %258 ], [ %.063, %257 ], [ 1, %247 ], [ %.063, %237 ], [ %.063, %235 ], [ %.063, %234 ], [ %.063, %232 ], [ %.063, %224 ], [ %.063, %223 ], [ %.063, %217 ], [ %.063, %215 ], [ %.063, %202 ], [ %.063, %192 ], [ %.063, %191 ], [ %.063, %181 ], [ %.063, %171 ], [ %.063, %165 ], [ %.063, %158 ], [ %.063, %156 ], [ %.063, %145 ], [ %.063, %135 ], [ %.063, %134 ], [ %.063, %131 ], [ %.063, %130 ], [ %.063, %120 ], [ %.063, %110 ], [ %.063, %108 ], [ %.063, %94 ], [ %.063, %92 ], [ %.063, %80 ], [ %.063, %70 ], [ %.063, %69 ], [ %.063, %68 ], [ %.063, %57 ], [ %.063, %47 ], [ %.063, %34 ], [ %.063, %32 ], [ %.063, %21 ], [ %.063, %11 ]
  %.061.be = phi i32 [ %.061, %10 ], [ 1057245454, %322 ], [ 63821542, %321 ], [ 1267351612, %320 ], [ -783174855, %319 ], [ -624720217, %318 ], [ -1615462031, %317 ], [ -1284537494, %316 ], [ 73132917, %314 ], [ -1241548556, %313 ], [ 52759295, %302 ], [ -1317027117, %282 ], [ %281, %280 ], [ %279, %268 ], [ %267, %258 ], [ 52759295, %257 ], [ %256, %247 ], [ %246, %237 ], [ -80515005, %235 ], [ 695056365, %234 ], [ -2023649487, %232 ], [ -356025334, %224 ], [ 1116943917, %223 ], [ 1116943917, %217 ], [ %216, %215 ], [ %214, %202 ], [ %201, %192 ], [ -2145663751, %191 ], [ %190, %181 ], [ %180, %171 ], [ -2145663751, %165 ], [ %164, %158 ], [ %157, %156 ], [ %155, %145 ], [ %144, %135 ], [ -2023649487, %134 ], [ %133, %131 ], [ -80515005, %130 ], [ %129, %120 ], [ %119, %110 ], [ 1455922107, %108 ], [ 1987184229, %94 ], [ %93, %92 ], [ %91, %80 ], [ %79, %70 ], [ 1455922107, %69 ], [ -816389698, %68 ], [ %67, %57 ], [ %56, %47 ], [ 953211844, %34 ], [ %33, %32 ], [ %31, %21 ], [ %20, %11 ]
  %.059.be = phi i32 [ %.059, %10 ], [ %.059, %322 ], [ %.059, %321 ], [ %.059, %320 ], [ %.059, %319 ], [ %.059, %318 ], [ %.059, %317 ], [ %.059, %316 ], [ %.059, %314 ], [ %.059, %313 ], [ %.059, %302 ], [ %.059, %282 ], [ %.059, %280 ], [ %.059, %268 ], [ %.059, %258 ], [ %.059, %257 ], [ %.059, %247 ], [ %.059, %237 ], [ %.059, %235 ], [ %.059, %234 ], [ %.059, %232 ], [ %.059, %224 ], [ %.059, %223 ], [ %.059, %217 ], [ %.059, %215 ], [ %.059, %202 ], [ %.059, %192 ], [ 0, %191 ], [ %.059, %181 ], [ %.059, %171 ], [ %170, %165 ], [ %.059, %158 ], [ %.059, %156 ], [ %.059, %145 ], [ %.059, %135 ], [ %.059, %134 ], [ %.059, %131 ], [ %.059, %130 ], [ %.059, %120 ], [ %.059, %110 ], [ %.059, %108 ], [ %.059, %94 ], [ %.059, %92 ], [ %.059, %80 ], [ %.059, %70 ], [ %.059, %69 ], [ %.059, %68 ], [ %.059, %57 ], [ %.059, %47 ], [ %.059, %34 ], [ %.059, %32 ], [ %.059, %21 ], [ %.059, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ %.0, %322 ], [ %.0, %321 ], [ %.0, %320 ], [ %.0, %319 ], [ %.0, %318 ], [ %.0, %317 ], [ %.0, %316 ], [ %.0, %314 ], [ %.0, %313 ], [ %.0, %302 ], [ %.0, %282 ], [ %.0, %280 ], [ %.0, %268 ], [ %.0, %258 ], [ %.0, %257 ], [ %.0, %247 ], [ %.0, %237 ], [ %.0, %235 ], [ %.0, %234 ], [ %.0, %232 ], [ %.0, %224 ], [ 0, %223 ], [ %222, %217 ], [ %.0, %215 ], [ %.0, %202 ], [ %.0, %192 ], [ %.0, %191 ], [ %.0, %181 ], [ %.0, %171 ], [ %.0, %165 ], [ %.0, %158 ], [ %.0, %156 ], [ %.0, %145 ], [ %.0, %135 ], [ %.0, %134 ], [ %.0, %131 ], [ %.0, %130 ], [ %.0, %120 ], [ %.0, %110 ], [ %.0, %108 ], [ %.0, %94 ], [ %.0, %92 ], [ %.0, %80 ], [ %.0, %70 ], [ %.0, %69 ], [ %.0, %68 ], [ %.0, %57 ], [ %.0, %47 ], [ %.0, %34 ], [ %.0, %32 ], [ %.0, %21 ], [ %.0, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* @x, align 4
  %13 = load i32, i32* @y, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 -1241548556, i32 1551354435
  br label %.backedge

21:                                               ; preds = %10
  %22 = icmp slt i32 %.071, 8001
  store i1 %22, i1* %8, align 1
  %23 = load i32, i32* @x, align 4
  %24 = load i32, i32* @y, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 -382699589, i32 1551354435
  br label %.backedge

32:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %33 = select i1 %.0..0..0., i32 -1266246730, i32 2122999815
  br label %.backedge

34:                                               ; preds = %10
  %35 = add i32 %.071, -1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [8005 x i32], [8005 x i32]* @fac, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = sext i32 %.071 to i64
  %41 = mul nsw i64 %39, %40
  %42 = srem i64 %41, 1000000007
  %43 = trunc i64 %42 to i32
  %44 = getelementptr inbounds [8005 x i32], [8005 x i32]* @fac, i64 0, i64 %40
  store i32 %43, i32* %44, align 4
  %45 = tail call i32 @_Z2QPii(i32 %43, i32 1000000005)
  %46 = getelementptr inbounds [8005 x i32], [8005 x i32]* @inv, i64 0, i64 %40
  store i32 %45, i32* %46, align 4
  br label %.backedge

47:                                               ; preds = %10
  %48 = load i32, i32* @x, align 4
  %49 = load i32, i32* @y, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 73132917, i32 -670489385
  br label %.backedge

57:                                               ; preds = %10
  %58 = add i32 %.071, 1
  %59 = load i32, i32* @x, align 4
  %60 = load i32, i32* @y, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -2138792197, i32 -670489385
  br label %.backedge

68:                                               ; preds = %10
  br label %.backedge

69:                                               ; preds = %10
  br label %.backedge

70:                                               ; preds = %10
  %71 = load i32, i32* @x, align 4
  %72 = load i32, i32* @y, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 -1284537494, i32 -247329355
  br label %.backedge

80:                                               ; preds = %10
  %81 = load i32, i32* @n, align 4
  %82 = icmp sle i32 %.069, %81
  store i1 %82, i1* %7, align 1
  %83 = load i32, i32* @x, align 4
  %84 = load i32, i32* @y, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 544464895, i32 -247329355
  br label %.backedge

92:                                               ; preds = %10
  %.0..0..0.46 = load volatile i1, i1* %7, align 1
  %93 = select i1 %.0..0..0.46, i32 1307059518, i32 -383191238
  br label %.backedge

94:                                               ; preds = %10
  %95 = tail call i32 @_Z4readv()
  %96 = sext i32 %.069 to i64
  %97 = getelementptr inbounds [200005 x i32], [200005 x i32]* @A, i64 0, i64 %96
  store i32 %95, i32* %97, align 4
  %98 = tail call i32 @_Z4readv()
  %99 = getelementptr inbounds [200005 x i32], [200005 x i32]* @B, i64 0, i64 %96
  store i32 %98, i32* %99, align 4
  %100 = load i32, i32* %97, align 4
  %101 = sub i32 2000, %100
  %102 = sext i32 %101 to i64
  %103 = sub i32 2000, %98
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @F, i64 0, i64 %102, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 4
  br label %.backedge

108:                                              ; preds = %10
  %109 = add i32 %.069, 1
  br label %.backedge

110:                                              ; preds = %10
  %111 = load i32, i32* @x, align 4
  %112 = load i32, i32* @y, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -1615462031, i32 1971880015
  br label %.backedge

120:                                              ; preds = %10
  %121 = load i32, i32* @x, align 4
  %122 = load i32, i32* @y, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 -1458074223, i32 1971880015
  br label %.backedge

130:                                              ; preds = %10
  br label %.backedge

131:                                              ; preds = %10
  %132 = icmp slt i32 %.067, 4001
  %133 = select i1 %132, i32 1490395441, i32 1860716846
  br label %.backedge

134:                                              ; preds = %10
  br label %.backedge

135:                                              ; preds = %10
  %136 = load i32, i32* @x, align 4
  %137 = load i32, i32* @y, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 -624720217, i32 694199341
  br label %.backedge

145:                                              ; preds = %10
  %146 = icmp slt i32 %.065, 4001
  store i1 %146, i1* %6, align 1
  %147 = load i32, i32* @x, align 4
  %148 = load i32, i32* @y, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 995836979, i32 694199341
  br label %.backedge

156:                                              ; preds = %10
  %.0..0..0.47 = load volatile i1, i1* %6, align 1
  %157 = select i1 %.0..0..0.47, i32 1733447613, i32 -69119783
  br label %.backedge

158:                                              ; preds = %10
  %159 = sext i32 %.067 to i64
  %160 = sext i32 %.065 to i64
  %161 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @F, i64 0, i64 %159, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = sext i32 %162 to i64
  store i64 %163, i64* %5, align 8
  %.not = icmp eq i32 %.065, 0
  %164 = select i1 %.not, i32 1558445437, i32 -217448271
  br label %.backedge

165:                                              ; preds = %10
  %166 = sext i32 %.067 to i64
  %167 = add i32 %.065, -1
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @F, i64 0, i64 %166, i64 %168
  %170 = load i32, i32* %169, align 4
  br label %.backedge

171:                                              ; preds = %10
  %172 = load i32, i32* @x, align 4
  %173 = load i32, i32* @y, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 -783174855, i32 -50651007
  br label %.backedge

181:                                              ; preds = %10
  %182 = load i32, i32* @x, align 4
  %183 = load i32, i32* @y, align 4
  %184 = add i32 %182, -1
  %185 = mul i32 %184, %182
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %188, %187
  %190 = select i1 %189, i32 41833669, i32 -50651007
  br label %.backedge

191:                                              ; preds = %10
  br label %.backedge

192:                                              ; preds = %10
  store i32 %.059, i32* %1, align 4
  %193 = load i32, i32* @x, align 4
  %194 = load i32, i32* @y, align 4
  %195 = add i32 %193, -1
  %196 = mul i32 %195, %193
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %199, %198
  %201 = select i1 %200, i32 1267351612, i32 -1713602414
  br label %.backedge

202:                                              ; preds = %10
  %.0..0..0.57 = load volatile i32, i32* %1, align 4
  %203 = sext i32 %.0..0..0.57 to i64
  %.0..0..0.48 = load volatile i64, i64* %5, align 8
  %204 = add i64 %.0..0..0.48, %203
  store i64 %204, i64* %4, align 8
  %205 = icmp ne i32 %.067, 0
  store i1 %205, i1* %3, align 1
  %206 = load i32, i32* @x, align 4
  %207 = load i32, i32* @y, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 1186814356, i32 -1713602414
  br label %.backedge

215:                                              ; preds = %10
  %.0..0..0.55 = load volatile i1, i1* %3, align 1
  %216 = select i1 %.0..0..0.55, i32 1652421828, i32 1708506829
  br label %.backedge

217:                                              ; preds = %10
  %218 = add i32 %.067, -1
  %219 = sext i32 %218 to i64
  %220 = sext i32 %.065 to i64
  %221 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @F, i64 0, i64 %219, i64 %220
  %222 = load i32, i32* %221, align 4
  br label %.backedge

223:                                              ; preds = %10
  br label %.backedge

224:                                              ; preds = %10
  %225 = sext i32 %.0 to i64
  %.0..0..0.54 = load volatile i64, i64* %4, align 8
  %226 = add i64 %.0..0..0.54, %225
  %227 = srem i64 %226, 1000000007
  %228 = trunc i64 %227 to i32
  %229 = sext i32 %.067 to i64
  %230 = sext i32 %.065 to i64
  %231 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @F, i64 0, i64 %229, i64 %230
  store i32 %228, i32* %231, align 4
  br label %.backedge

232:                                              ; preds = %10
  %233 = add i32 %.065, 1
  br label %.backedge

234:                                              ; preds = %10
  br label %.backedge

235:                                              ; preds = %10
  %236 = add i32 %.067, 1
  br label %.backedge

237:                                              ; preds = %10
  %238 = load i32, i32* @x, align 4
  %239 = load i32, i32* @y, align 4
  %240 = add i32 %238, -1
  %241 = mul i32 %240, %238
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %244, %243
  %246 = select i1 %245, i32 63821542, i32 -1297123719
  br label %.backedge

247:                                              ; preds = %10
  %248 = load i32, i32* @x, align 4
  %249 = load i32, i32* @y, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 -205410448, i32 -1297123719
  br label %.backedge

257:                                              ; preds = %10
  br label %.backedge

258:                                              ; preds = %10
  %259 = load i32, i32* @x, align 4
  %260 = load i32, i32* @y, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 1057245454, i32 -2109675221
  br label %.backedge

268:                                              ; preds = %10
  %269 = load i32, i32* @n, align 4
  %270 = icmp sle i32 %.063, %269
  store i1 %270, i1* %2, align 1
  %271 = load i32, i32* @x, align 4
  %272 = load i32, i32* @y, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 1935564782, i32 -2109675221
  br label %.backedge

280:                                              ; preds = %10
  %.0..0..0.56 = load volatile i1, i1* %2, align 1
  %281 = select i1 %.0..0..0.56, i32 -1687267507, i32 -1597259715
  br label %.backedge

282:                                              ; preds = %10
  %283 = load i32, i32* @ans, align 4
  %284 = sext i32 %.063 to i64
  %285 = getelementptr inbounds [200005 x i32], [200005 x i32]* @A, i64 0, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = add i32 %286, 2000
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [200005 x i32], [200005 x i32]* @B, i64 0, i64 %284
  %290 = load i32, i32* %289, align 4
  %291 = add i32 %290, 2000
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [4005 x [4005 x i32]], [4005 x [4005 x i32]]* @F, i64 0, i64 %288, i64 %292
  %294 = load i32, i32* %293, align 4
  %295 = add i32 %294, %283
  %296 = srem i32 %295, 1000000007
  store i32 %296, i32* @ans, align 4
  %reass.add74 = add i32 %290, %286
  %297 = shl i32 %reass.add74, 1
  %.neg.neg = shl i32 %286, 1
  %298 = tail call i32 @_Z1Cii(i32 %297, i32 %.neg.neg)
  %299 = add nsw i32 %296, 1000000007
  %300 = sub i32 %299, %298
  %301 = srem i32 %300, 1000000007
  store i32 %301, i32* @ans, align 4
  br label %.backedge

302:                                              ; preds = %10
  %303 = add i32 %.063, 1
  br label %.backedge

304:                                              ; preds = %10
  %305 = load i32, i32* @ans, align 4
  %306 = sext i32 %305 to i64
  %307 = tail call i32 @_Z2QPii(i32 2, i32 1000000005)
  %308 = sext i32 %307 to i64
  %309 = mul nsw i64 %308, %306
  %310 = srem i64 %309, 1000000007
  %311 = trunc i64 %310 to i32
  store i32 %311, i32* @ans, align 4
  %312 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %311)
  ret i32 0

313:                                              ; preds = %10
  br label %.backedge

314:                                              ; preds = %10
  %315 = add i32 %.071, 1
  br label %.backedge

316:                                              ; preds = %10
  br label %.backedge

317:                                              ; preds = %10
  br label %.backedge

318:                                              ; preds = %10
  br label %.backedge

319:                                              ; preds = %10
  br label %.backedge

320:                                              ; preds = %10
  %.0..0..0.58 = load volatile i32, i32* %1, align 4
  %.0..0..0.49 = load volatile i64, i64* %5, align 8
  %.0..0..0.50 = load volatile i64, i64* %5, align 8
  %.0..0..0.51 = load volatile i64, i64* %5, align 8
  %.0..0..0.52 = load volatile i64, i64* %5, align 8
  %.0..0..0.53 = load volatile i64, i64* %5, align 8
  br label %.backedge

321:                                              ; preds = %10
  br label %.backedge

322:                                              ; preds = %10
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readv() local_unnamed_addr #1 comdat {
  %1 = alloca i1, align 1
  %2 = alloca i32, align 4
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = tail call i32 @getchar()
  %6 = trunc i32 %5 to i8
  br label %7

7:                                                ; preds = %.backedge, %0
  %8 = phi i32 [ undef, %0 ], [ %.be, %.backedge ]
  %.030 = phi i32 [ 0, %0 ], [ %.030.be, %.backedge ]
  %.028 = phi i32 [ 1, %0 ], [ %.028.be, %.backedge ]
  %.026 = phi i8 [ %6, %0 ], [ %.026.be, %.backedge ]
  %.024 = phi i32 [ -1688284059, %0 ], [ %.024.be, %.backedge ]
  %.022 = phi i1 [ undef, %0 ], [ %.022.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.024, label %.backedge [
    i32 -1688284059, label %9
    i32 -593840408, label %12
    i32 -629877066, label %14
    i32 1852188760, label %24
    i32 1107823428, label %34
    i32 811928852, label %36
    i32 -570923164, label %46
    i32 1442430826, label %57
    i32 2028710322, label %59
    i32 356526727, label %61
    i32 -103397048, label %71
    i32 -1006296165, label %83
    i32 -1959966830, label %84
    i32 -1646297292, label %85
    i32 1852583112, label %95
    i32 -105176560, label %106
    i32 -1445984401, label %108
    i32 1001862330, label %110
    i32 311411820, label %112
    i32 2083102448, label %122
    i32 -696549522, label %136
    i32 -6157716, label %137
    i32 341710287, label %147
    i32 -2101921831, label %158
    i32 208121635, label %159
    i32 -454551883, label %160
    i32 -1696995270, label %161
    i32 2073879683, label %164
    i32 1065510296, label %165
    i32 -170929085, label %172
  ]

.backedge:                                        ; preds = %7, %172, %165, %164, %161, %160, %159, %147, %137, %136, %122, %112, %110, %108, %106, %95, %85, %84, %83, %71, %61, %59, %57, %46, %36, %34, %24, %14, %12, %9
  %.be = phi i32 [ %8, %7 ], [ %8, %172 ], [ %8, %165 ], [ %8, %164 ], [ %8, %161 ], [ %8, %160 ], [ %8, %159 ], [ %148, %147 ], [ %8, %137 ], [ %8, %136 ], [ %8, %122 ], [ %8, %112 ], [ %8, %110 ], [ %8, %108 ], [ %8, %106 ], [ %8, %95 ], [ %8, %85 ], [ %8, %84 ], [ %8, %83 ], [ %8, %71 ], [ %8, %61 ], [ %8, %59 ], [ %8, %57 ], [ %8, %46 ], [ %8, %36 ], [ %8, %34 ], [ %8, %24 ], [ %8, %14 ], [ %8, %12 ], [ %8, %9 ]
  %.030.be = phi i32 [ %.030, %7 ], [ %.030, %172 ], [ %169, %165 ], [ %.030, %164 ], [ %.030, %161 ], [ %.030, %160 ], [ %.030, %159 ], [ %.030, %147 ], [ %.030, %137 ], [ %.030, %136 ], [ %124, %122 ], [ %.030, %112 ], [ %.030, %110 ], [ %.030, %108 ], [ %.030, %106 ], [ %.030, %95 ], [ %.030, %85 ], [ %.030, %84 ], [ %.030, %83 ], [ %.030, %71 ], [ %.030, %61 ], [ %.030, %59 ], [ %.030, %57 ], [ %.030, %46 ], [ %.030, %36 ], [ %.030, %34 ], [ %.030, %24 ], [ %.030, %14 ], [ %.030, %12 ], [ %.030, %9 ]
  %.028.be = phi i32 [ %.028, %7 ], [ %.028, %172 ], [ %.028, %165 ], [ %.028, %164 ], [ %.028, %161 ], [ %.028, %160 ], [ %.028, %159 ], [ %.028, %147 ], [ %.028, %137 ], [ %.028, %136 ], [ %.028, %122 ], [ %.028, %112 ], [ %.028, %110 ], [ %.028, %108 ], [ %.028, %106 ], [ %.028, %95 ], [ %.028, %85 ], [ %.028, %84 ], [ %.028, %83 ], [ %.028, %71 ], [ %.028, %61 ], [ %60, %59 ], [ %.028, %57 ], [ %.028, %46 ], [ %.028, %36 ], [ %.028, %34 ], [ %.028, %24 ], [ %.028, %14 ], [ %.028, %12 ], [ %.028, %9 ]
  %.026.be = phi i8 [ %.026, %7 ], [ %.026, %172 ], [ %171, %165 ], [ %.026, %164 ], [ %163, %161 ], [ %.026, %160 ], [ %.026, %159 ], [ %.026, %147 ], [ %.026, %137 ], [ %.026, %136 ], [ %126, %122 ], [ %.026, %112 ], [ %.026, %110 ], [ %.026, %108 ], [ %.026, %106 ], [ %.026, %95 ], [ %.026, %85 ], [ %.026, %84 ], [ %.026, %83 ], [ %73, %71 ], [ %.026, %61 ], [ %.026, %59 ], [ %.026, %57 ], [ %.026, %46 ], [ %.026, %36 ], [ %.026, %34 ], [ %.026, %24 ], [ %.026, %14 ], [ %.026, %12 ], [ %.026, %9 ]
  %.024.be = phi i32 [ %.024, %7 ], [ 341710287, %172 ], [ 2083102448, %165 ], [ 1852583112, %164 ], [ -103397048, %161 ], [ -570923164, %160 ], [ 1852188760, %159 ], [ %157, %147 ], [ %146, %137 ], [ -1646297292, %136 ], [ %135, %122 ], [ %121, %112 ], [ %111, %110 ], [ 1001862330, %108 ], [ %107, %106 ], [ %105, %95 ], [ %94, %85 ], [ -1646297292, %84 ], [ -1688284059, %83 ], [ %82, %71 ], [ %70, %61 ], [ 356526727, %59 ], [ %58, %57 ], [ %56, %46 ], [ %45, %36 ], [ %35, %34 ], [ %33, %24 ], [ %23, %14 ], [ -629877066, %12 ], [ %11, %9 ]
  %.022.be = phi i1 [ %.022, %7 ], [ %.022, %172 ], [ %.022, %165 ], [ %.022, %164 ], [ %.022, %161 ], [ %.022, %160 ], [ %.022, %159 ], [ %.022, %147 ], [ %.022, %137 ], [ %.022, %136 ], [ %.022, %122 ], [ %.022, %112 ], [ %.022, %110 ], [ %.022, %108 ], [ %.022, %106 ], [ %.022, %95 ], [ %.022, %85 ], [ %.022, %84 ], [ %.022, %83 ], [ %.022, %71 ], [ %.022, %61 ], [ %.022, %59 ], [ %.022, %57 ], [ %.022, %46 ], [ %.022, %36 ], [ %.022, %34 ], [ %.022, %24 ], [ %.022, %14 ], [ %13, %12 ], [ true, %9 ]
  %.0.be = phi i1 [ %.0, %7 ], [ %.0, %172 ], [ %.0, %165 ], [ %.0, %164 ], [ %.0, %161 ], [ %.0, %160 ], [ %.0, %159 ], [ %.0, %147 ], [ %.0, %137 ], [ %.0, %136 ], [ %.0, %122 ], [ %.0, %112 ], [ %.0, %110 ], [ %109, %108 ], [ false, %106 ], [ %.0, %95 ], [ %.0, %85 ], [ %.0, %84 ], [ %.0, %83 ], [ %.0, %71 ], [ %.0, %61 ], [ %.0, %59 ], [ %.0, %57 ], [ %.0, %46 ], [ %.0, %36 ], [ %.0, %34 ], [ %.0, %24 ], [ %.0, %14 ], [ %.0, %12 ], [ %.0, %9 ]
  br label %7

9:                                                ; preds = %7
  %10 = icmp slt i8 %.026, 48
  %11 = select i1 %10, i32 -629877066, i32 -593840408
  br label %.backedge

12:                                               ; preds = %7
  %13 = icmp sgt i8 %.026, 57
  br label %.backedge

14:                                               ; preds = %7
  store i1 %.022, i1* %1, align 1
  %15 = load i32, i32* @x.1, align 4
  %16 = load i32, i32* @y.2, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1852188760, i32 208121635
  br label %.backedge

24:                                               ; preds = %7
  %25 = load i32, i32* @x.1, align 4
  %26 = load i32, i32* @y.2, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 1107823428, i32 208121635
  br label %.backedge

34:                                               ; preds = %7
  %.0..0..0.21 = load volatile i1, i1* %1, align 1
  %35 = select i1 %.0..0..0.21, i32 811928852, i32 -1959966830
  br label %.backedge

36:                                               ; preds = %7
  %37 = load i32, i32* @x.1, align 4
  %38 = load i32, i32* @y.2, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 -570923164, i32 -454551883
  br label %.backedge

46:                                               ; preds = %7
  %47 = icmp eq i8 %.026, 45
  store i1 %47, i1* %4, align 1
  %48 = load i32, i32* @x.1, align 4
  %49 = load i32, i32* @y.2, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 1442430826, i32 -454551883
  br label %.backedge

57:                                               ; preds = %7
  %.0..0..0.18 = load volatile i1, i1* %4, align 1
  %58 = select i1 %.0..0..0.18, i32 2028710322, i32 356526727
  br label %.backedge

59:                                               ; preds = %7
  %60 = sub i32 0, %.028
  br label %.backedge

61:                                               ; preds = %7
  %62 = load i32, i32* @x.1, align 4
  %63 = load i32, i32* @y.2, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 -103397048, i32 -1696995270
  br label %.backedge

71:                                               ; preds = %7
  %72 = tail call i32 @getchar()
  %73 = trunc i32 %72 to i8
  %74 = load i32, i32* @x.1, align 4
  %75 = load i32, i32* @y.2, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 -1006296165, i32 -1696995270
  br label %.backedge

83:                                               ; preds = %7
  br label %.backedge

84:                                               ; preds = %7
  br label %.backedge

85:                                               ; preds = %7
  %86 = load i32, i32* @x.1, align 4
  %87 = load i32, i32* @y.2, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 1852583112, i32 2073879683
  br label %.backedge

95:                                               ; preds = %7
  %96 = icmp sgt i8 %.026, 47
  store i1 %96, i1* %3, align 1
  %97 = load i32, i32* @x.1, align 4
  %98 = load i32, i32* @y.2, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 -105176560, i32 2073879683
  br label %.backedge

106:                                              ; preds = %7
  %.0..0..0.19 = load volatile i1, i1* %3, align 1
  %107 = select i1 %.0..0..0.19, i32 -1445984401, i32 1001862330
  br label %.backedge

108:                                              ; preds = %7
  %109 = icmp slt i8 %.026, 58
  br label %.backedge

110:                                              ; preds = %7
  %111 = select i1 %.0, i32 311411820, i32 -6157716
  br label %.backedge

112:                                              ; preds = %7
  %113 = load i32, i32* @x.1, align 4
  %114 = load i32, i32* @y.2, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 2083102448, i32 1065510296
  br label %.backedge

122:                                              ; preds = %7
  %.neg.neg = mul i32 %.030, 10
  %123 = sext i8 %.026 to i32
  %.neg32 = add i32 %.neg.neg, -48
  %124 = add i32 %.neg32, %123
  %125 = tail call i32 @getchar()
  %126 = trunc i32 %125 to i8
  %127 = load i32, i32* @x.1, align 4
  %128 = load i32, i32* @y.2, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 -696549522, i32 1065510296
  br label %.backedge

136:                                              ; preds = %7
  br label %.backedge

137:                                              ; preds = %7
  %138 = load i32, i32* @x.1, align 4
  %139 = load i32, i32* @y.2, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 341710287, i32 -170929085
  br label %.backedge

147:                                              ; preds = %7
  %148 = mul nsw i32 %.028, %.030
  %149 = load i32, i32* @x.1, align 4
  %150 = load i32, i32* @y.2, align 4
  %151 = add i32 %149, -1
  %152 = mul i32 %151, %149
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %155, %154
  %157 = select i1 %156, i32 -2101921831, i32 -170929085
  br label %.backedge

158:                                              ; preds = %7
  store i32 %8, i32* %2, align 4
  %.0..0..0.20 = load volatile i32, i32* %2, align 4
  ret i32 %.0..0..0.20

159:                                              ; preds = %7
  br label %.backedge

160:                                              ; preds = %7
  br label %.backedge

161:                                              ; preds = %7
  %162 = tail call i32 @getchar()
  %163 = trunc i32 %162 to i8
  br label %.backedge

164:                                              ; preds = %7
  br label %.backedge

165:                                              ; preds = %7
  %166 = mul nsw i32 %.030, 10
  %167 = sext i8 %.026 to i32
  %168 = add i32 %166, -48
  %169 = add i32 %168, %167
  %170 = tail call i32 @getchar()
  %171 = trunc i32 %170 to i8
  br label %.backedge

172:                                              ; preds = %7
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z2QPii(i32 %0, i32 %1) local_unnamed_addr #2 comdat {
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %9, %8
  %11 = select i1 %10, i32 1085133255, i32 -2011129930
  %12 = select i1 %10, i32 447195031, i32 -2011129930
  br label %13

13:                                               ; preds = %.backedge, %2
  %.016 = phi i32 [ %1, %2 ], [ %.016.be, %.backedge ]
  %.014 = phi i32 [ 1, %2 ], [ %.014.be, %.backedge ]
  %.012 = phi i32 [ %0, %2 ], [ %.012.be, %.backedge ]
  %.0 = phi i32 [ 701043229, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 701043229, label %14
    i32 1334262402, label %16
    i32 632693004, label %19
    i32 447195031, label %20
    i32 1085133255, label %26
    i32 1346714710, label %27
    i32 710540303, label %33
    i32 -2011129930, label %34
  ]

.backedge:                                        ; preds = %13, %34, %27, %26, %20, %19, %16, %14
  %.016.be = phi i32 [ %.016, %13 ], [ %.016, %34 ], [ %32, %27 ], [ %.016, %26 ], [ %.016, %20 ], [ %.016, %19 ], [ %.016, %16 ], [ %.016, %14 ]
  %.014.be = phi i32 [ %.014, %13 ], [ %39, %34 ], [ %.014, %27 ], [ %.014, %26 ], [ %25, %20 ], [ %.014, %19 ], [ %.014, %16 ], [ %.014, %14 ]
  %.012.be = phi i32 [ %.012, %13 ], [ %.012, %34 ], [ %31, %27 ], [ %.012, %26 ], [ %.012, %20 ], [ %.012, %19 ], [ %.012, %16 ], [ %.012, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ 447195031, %34 ], [ 701043229, %27 ], [ 1346714710, %26 ], [ %11, %20 ], [ %12, %19 ], [ %18, %16 ], [ %15, %14 ]
  br label %13

14:                                               ; preds = %13
  %.not18 = icmp eq i32 %.016, 0
  %15 = select i1 %.not18, i32 710540303, i32 1334262402
  br label %.backedge

16:                                               ; preds = %13
  %17 = and i32 %.016, 1
  %.not = icmp eq i32 %17, 0
  %18 = select i1 %.not, i32 1346714710, i32 632693004
  br label %.backedge

19:                                               ; preds = %13
  br label %.backedge

20:                                               ; preds = %13
  %21 = sext i32 %.014 to i64
  %22 = sext i32 %.012 to i64
  %23 = mul nsw i64 %22, %21
  %24 = srem i64 %23, 1000000007
  %25 = trunc i64 %24 to i32
  br label %.backedge

26:                                               ; preds = %13
  br label %.backedge

27:                                               ; preds = %13
  %28 = sext i32 %.012 to i64
  %29 = mul nsw i64 %28, %28
  %30 = urem i64 %29, 1000000007
  %31 = trunc i64 %30 to i32
  %32 = ashr i32 %.016, 1
  br label %.backedge

33:                                               ; preds = %13
  ret i32 %.014

34:                                               ; preds = %13
  %35 = sext i32 %.014 to i64
  %36 = sext i32 %.012 to i64
  %37 = mul nsw i64 %36, %35
  %38 = srem i64 %37, 1000000007
  %39 = trunc i64 %38 to i32
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z1Cii(i32 %0, i32 %1) local_unnamed_addr #2 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x.5, align 4
  %7 = load i32, i32* @y.6, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %5, align 1
  %12 = icmp slt i32 %7, 10
  store i1 %12, i1* %4, align 1
  %13 = sext i32 %0 to i64
  %14 = getelementptr inbounds [8005 x i32], [8005 x i32]* @fac, i64 0, i64 %13
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds [8005 x i32], [8005 x i32]* @inv, i64 0, i64 %15
  %17 = sub i32 %0, %1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [8005 x i32], [8005 x i32]* @inv, i64 0, i64 %18
  %20 = or i1 %12, %11
  %21 = select i1 %20, i32 570079596, i32 -1242283631
  br label %.outer

.outer:                                           ; preds = %26, %2
  %.ph = phi i32 [ %37, %26 ], [ undef, %2 ]
  %.0.ph = phi i32 [ %21, %26 ], [ 680359274, %2 ]
  br label %.outer3

.outer3:                                          ; preds = %.outer3.backedge, %.outer
  %.0.ph4 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph4.be, %.outer3.backedge ]
  br label %22

22:                                               ; preds = %.outer3, %22
  switch i32 %.0.ph4, label %22 [
    i32 680359274, label %23
    i32 -1252276502, label %26
    i32 570079596, label %38
    i32 -1242283631, label %.outer3.backedge
  ]

23:                                               ; preds = %22
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %.0..0..0.1 = load volatile i1, i1* %4, align 1
  %24 = or i1 %.0..0..0., %.0..0..0.1
  %25 = select i1 %24, i32 -1252276502, i32 -1242283631
  br label %.outer3.backedge

26:                                               ; preds = %22
  %27 = load i32, i32* %14, align 4
  %28 = sext i32 %27 to i64
  %29 = load i32, i32* %16, align 4
  %30 = sext i32 %29 to i64
  %31 = mul nsw i64 %30, %28
  %32 = srem i64 %31, 1000000007
  %33 = load i32, i32* %19, align 4
  %34 = sext i32 %33 to i64
  %35 = mul nsw i64 %32, %34
  %36 = srem i64 %35, 1000000007
  %37 = trunc i64 %36 to i32
  br label %.outer

38:                                               ; preds = %22
  store i32 %.ph, i32* %3, align 4
  %.0..0..0.2 = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.2

.outer3.backedge:                                 ; preds = %22, %23
  %.0.ph4.be = phi i32 [ %25, %23 ], [ -1252276502, %22 ]
  br label %.outer3
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #3

attributes #0 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
