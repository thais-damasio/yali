; ModuleID = 'build_ollvm/programs/p04051/s947982906.ll'
source_filename = "Project_CodeNet_C++1400/p04051/s947982906.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_Z4readIiEvRT_ = comdat any

$_Z3plsRii = comdat any

$_Z3addii = comdat any

@n = global i32 0, align 4
@a = global [200010 x i32] zeroinitializer, align 16
@b = global [200010 x i32] zeroinitializer, align 16
@fac = local_unnamed_addr global [8020 x i32] zeroinitializer, align 16
@ifac = local_unnamed_addr global [8020 x i32] zeroinitializer, align 16
@ret = global i32 0, align 4
@tmp = global i32 0, align 4
@f = global [4010 x [4010 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z4qpowii(i32 %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x, align 4
  %6 = load i32, i32* @y, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 80728871, i32 427843060
  %14 = select i1 %12, i32 774195646, i32 427843060
  %15 = select i1 %12, i32 -1608559755, i32 -786361045
  %16 = select i1 %12, i32 449818536, i32 -786361045
  %17 = select i1 %12, i32 2017439467, i32 -2138319939
  %18 = select i1 %12, i32 1896720092, i32 -2138319939
  br label %19

19:                                               ; preds = %.backedge, %2
  %.01522 = phi i32 [ undef, %2 ], [ %.01522.be, %.backedge ]
  %.019 = phi i32 [ %0, %2 ], [ %.019.be, %.backedge ]
  %.017 = phi i32 [ %1, %2 ], [ %.017.be, %.backedge ]
  %.015 = phi i32 [ 1, %2 ], [ %.015.be, %.backedge ]
  %.0 = phi i32 [ 740461856, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 740461856, label %20
    i32 1896720092, label %21
    i32 2017439467, label %23
    i32 1054131443, label %25
    i32 -352664107, label %28
    i32 -980437749, label %34
    i32 1428553828, label %35
    i32 449818536, label %36
    i32 -1608559755, label %42
    i32 649619437, label %43
    i32 774195646, label %44
    i32 80728871, label %45
    i32 -2138319939, label %46
    i32 -786361045, label %47
    i32 427843060, label %53
  ]

.backedge:                                        ; preds = %19, %53, %47, %46, %44, %43, %42, %36, %35, %34, %28, %25, %23, %21, %20
  %.01522.be = phi i32 [ %.01522, %19 ], [ %.01522, %53 ], [ %.01522, %47 ], [ %.01522, %46 ], [ %.015, %44 ], [ %.01522, %43 ], [ %.01522, %42 ], [ %.01522, %36 ], [ %.01522, %35 ], [ %.01522, %34 ], [ %.01522, %28 ], [ %.01522, %25 ], [ %.01522, %23 ], [ %.01522, %21 ], [ %.01522, %20 ]
  %.019.be = phi i32 [ %.019, %19 ], [ %.019, %53 ], [ %52, %47 ], [ %.019, %46 ], [ %.019, %44 ], [ %.019, %43 ], [ %.019, %42 ], [ %41, %36 ], [ %.019, %35 ], [ %.019, %34 ], [ %.019, %28 ], [ %.019, %25 ], [ %.019, %23 ], [ %.019, %21 ], [ %.019, %20 ]
  %.017.be = phi i32 [ %.017, %19 ], [ %.017, %53 ], [ %48, %47 ], [ %.017, %46 ], [ %.017, %44 ], [ %.017, %43 ], [ %.017, %42 ], [ %37, %36 ], [ %.017, %35 ], [ %.017, %34 ], [ %.017, %28 ], [ %.017, %25 ], [ %.017, %23 ], [ %.017, %21 ], [ %.017, %20 ]
  %.015.be = phi i32 [ %.015, %19 ], [ %.015, %53 ], [ %.015, %47 ], [ %.015, %46 ], [ %.015, %44 ], [ %.015, %43 ], [ %.015, %42 ], [ %.015, %36 ], [ %.015, %35 ], [ %.015, %34 ], [ %33, %28 ], [ %.015, %25 ], [ %.015, %23 ], [ %.015, %21 ], [ %.015, %20 ]
  %.0.be = phi i32 [ %.0, %19 ], [ 774195646, %53 ], [ 449818536, %47 ], [ 1896720092, %46 ], [ %13, %44 ], [ %14, %43 ], [ 740461856, %42 ], [ %15, %36 ], [ %16, %35 ], [ 1428553828, %34 ], [ -980437749, %28 ], [ %27, %25 ], [ %24, %23 ], [ %17, %21 ], [ %18, %20 ]
  br label %19

20:                                               ; preds = %19
  br label %.backedge

21:                                               ; preds = %19
  %22 = icmp ne i32 %.017, 0
  store i1 %22, i1* %4, align 1
  br label %.backedge

23:                                               ; preds = %19
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %24 = select i1 %.0..0..0., i32 1054131443, i32 649619437
  br label %.backedge

25:                                               ; preds = %19
  %26 = and i32 %.017, 1
  %.not = icmp eq i32 %26, 0
  %27 = select i1 %.not, i32 -980437749, i32 -352664107
  br label %.backedge

28:                                               ; preds = %19
  %29 = sext i32 %.015 to i64
  %30 = sext i32 %.019 to i64
  %31 = mul nsw i64 %29, %30
  %32 = srem i64 %31, 1000000007
  %33 = trunc i64 %32 to i32
  br label %.backedge

34:                                               ; preds = %19
  br label %.backedge

35:                                               ; preds = %19
  br label %.backedge

36:                                               ; preds = %19
  %37 = ashr i32 %.017, 1
  %38 = sext i32 %.019 to i64
  %39 = mul nsw i64 %38, %38
  %40 = urem i64 %39, 1000000007
  %41 = trunc i64 %40 to i32
  br label %.backedge

42:                                               ; preds = %19
  br label %.backedge

43:                                               ; preds = %19
  br label %.backedge

44:                                               ; preds = %19
  br label %.backedge

45:                                               ; preds = %19
  store i32 %.01522, i32* %3, align 4
  %.0..0..0.14 = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.14

46:                                               ; preds = %19
  br label %.backedge

47:                                               ; preds = %19
  %48 = ashr i32 %.017, 1
  %49 = sext i32 %.019 to i64
  %50 = mul nsw i64 %49, %49
  %51 = urem i64 %50, 1000000007
  %52 = trunc i64 %51 to i32
  br label %.backedge

53:                                               ; preds = %19
  br label %.backedge
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define i32 @_Z1Cii(i32 %0, i32 %1) local_unnamed_addr #1 {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [8020 x i32], [8020 x i32]* @fac, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds [8020 x i32], [8020 x i32]* @ifac, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = mul nsw i64 %10, %6
  %12 = srem i64 %11, 1000000007
  %13 = sub i32 %0, %1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [8020 x i32], [8020 x i32]* @ifac, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = mul nsw i64 %12, %17
  %19 = srem i64 %18, 1000000007
  %20 = trunc i64 %19 to i32
  ret i32 %20
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #2 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  tail call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) @n)
  br label %4

4:                                                ; preds = %.backedge, %0
  %.071 = phi i32 [ 1, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.0 = phi i32 [ -933851395, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -933851395, label %5
    i32 1451075979, label %8
    i32 -2111589905, label %18
    i32 -2034087992, label %31
    i32 948443572, label %32
    i32 573355082, label %34
    i32 -1847902541, label %44
    i32 -1981272800, label %54
    i32 -867078966, label %55
    i32 1508025726, label %58
    i32 1274514434, label %69
    i32 -399618157, label %79
    i32 -500080772, label %90
    i32 173109346, label %91
    i32 -495051928, label %101
    i32 1362164986, label %113
    i32 -29687159, label %114
    i32 930727065, label %117
    i32 217987699, label %128
    i32 -1094997664, label %138
    i32 -1702479670, label %149
    i32 -1022650929, label %150
    i32 1975787968, label %151
    i32 1837568101, label %161
    i32 1429569046, label %173
    i32 389747609, label %175
    i32 861504022, label %185
    i32 1449302205, label %187
    i32 2039874148, label %197
    i32 -1659416747, label %207
    i32 1955506360, label %208
    i32 -272427972, label %211
    i32 459102361, label %224
    i32 1210677479, label %226
    i32 -216902920, label %236
    i32 -688525420, label %246
    i32 152030169, label %247
    i32 -1035520498, label %250
    i32 1170116482, label %260
    i32 144065486, label %270
    i32 -1589304564, label %271
    i32 171692903, label %281
    i32 -247115810, label %292
    i32 397758900, label %294
    i32 1398641630, label %296
    i32 -95938121, label %306
    i32 -1378376713, label %323
    i32 -654946236, label %324
    i32 700182531, label %326
    i32 1052706793, label %334
    i32 -917946254, label %335
    i32 -1460586237, label %337
    i32 149962332, label %338
    i32 -479319674, label %348
    i32 1360656091, label %359
    i32 612251516, label %360
    i32 -276228508, label %370
    i32 1281847056, label %380
    i32 -2002124310, label %381
    i32 -1462100124, label %391
    i32 2119236853, label %403
    i32 -1885626395, label %405
    i32 953560430, label %417
    i32 1083140771, label %427
    i32 120688378, label %438
    i32 198553463, label %439
    i32 -1917991421, label %449
    i32 763589331, label %453
    i32 -980022561, label %454
    i32 -1555275830, label %456
    i32 1531748909, label %459
    i32 -272144771, label %460
    i32 1083068073, label %461
    i32 1124965968, label %462
    i32 308347591, label %463
    i32 -1409227976, label %464
    i32 939306001, label %465
    i32 -1366430036, label %473
    i32 1841801448, label %475
    i32 -723018920, label %476
    i32 -61491487, label %477
  ]

.backedge:                                        ; preds = %4, %477, %476, %475, %473, %465, %464, %463, %462, %461, %460, %459, %456, %454, %453, %449, %438, %427, %417, %405, %403, %391, %381, %380, %370, %360, %359, %348, %338, %337, %335, %334, %326, %324, %323, %306, %296, %294, %292, %281, %271, %270, %260, %250, %247, %246, %236, %226, %224, %211, %208, %207, %197, %187, %185, %175, %173, %161, %151, %150, %149, %138, %128, %117, %114, %113, %101, %91, %90, %79, %69, %58, %55, %54, %44, %34, %32, %31, %18, %8, %5
  %.071.be = phi i32 [ %.071, %4 ], [ %.071, %477 ], [ %.071, %476 ], [ %.071, %475 ], [ %.071, %473 ], [ %.071, %465 ], [ %.071, %464 ], [ %.071, %463 ], [ %.071, %462 ], [ %.071, %461 ], [ %.071, %460 ], [ %.071, %459 ], [ %.071, %456 ], [ %.071, %454 ], [ %.071, %453 ], [ %.071, %449 ], [ %.071, %438 ], [ %.071, %427 ], [ %.071, %417 ], [ %.071, %405 ], [ %.071, %403 ], [ %.071, %391 ], [ %.071, %381 ], [ %.071, %380 ], [ %.071, %370 ], [ %.071, %360 ], [ %.071, %359 ], [ %.071, %348 ], [ %.071, %338 ], [ %.071, %337 ], [ %.071, %335 ], [ %.071, %334 ], [ %.071, %326 ], [ %.071, %324 ], [ %.071, %323 ], [ %.071, %306 ], [ %.071, %296 ], [ %.071, %294 ], [ %.071, %292 ], [ %.071, %281 ], [ %.071, %271 ], [ %.071, %270 ], [ %.071, %260 ], [ %.071, %250 ], [ %.071, %247 ], [ %.071, %246 ], [ %.071, %236 ], [ %.071, %226 ], [ %.071, %224 ], [ %.071, %211 ], [ %.071, %208 ], [ %.071, %207 ], [ %.071, %197 ], [ %.071, %187 ], [ %.071, %185 ], [ %.071, %175 ], [ %.071, %173 ], [ %.071, %161 ], [ %.071, %151 ], [ %.071, %150 ], [ %.071, %149 ], [ %.071, %138 ], [ %.071, %128 ], [ %.071, %117 ], [ %.071, %114 ], [ %.071, %113 ], [ %.071, %101 ], [ %.071, %91 ], [ %.071, %90 ], [ %.071, %79 ], [ %.071, %69 ], [ %.071, %58 ], [ %.071, %55 ], [ %.071, %54 ], [ %.071, %44 ], [ %.071, %34 ], [ %33, %32 ], [ %.071, %31 ], [ %.071, %18 ], [ %.071, %8 ], [ %.071, %5 ]
  %.069.be = phi i32 [ %.069, %4 ], [ %.069, %477 ], [ %.069, %476 ], [ %.069, %475 ], [ %.069, %473 ], [ %.069, %465 ], [ %.069, %464 ], [ %.069, %463 ], [ %.069, %462 ], [ %.069, %461 ], [ %.069, %460 ], [ %.069, %459 ], [ %.069, %456 ], [ %455, %454 ], [ 1, %453 ], [ %.069, %449 ], [ %.069, %438 ], [ %.069, %427 ], [ %.069, %417 ], [ %.069, %405 ], [ %.069, %403 ], [ %.069, %391 ], [ %.069, %381 ], [ %.069, %380 ], [ %.069, %370 ], [ %.069, %360 ], [ %.069, %359 ], [ %.069, %348 ], [ %.069, %338 ], [ %.069, %337 ], [ %.069, %335 ], [ %.069, %334 ], [ %.069, %326 ], [ %.069, %324 ], [ %.069, %323 ], [ %.069, %306 ], [ %.069, %296 ], [ %.069, %294 ], [ %.069, %292 ], [ %.069, %281 ], [ %.069, %271 ], [ %.069, %270 ], [ %.069, %260 ], [ %.069, %250 ], [ %.069, %247 ], [ %.069, %246 ], [ %.069, %236 ], [ %.069, %226 ], [ %.069, %224 ], [ %.069, %211 ], [ %.069, %208 ], [ %.069, %207 ], [ %.069, %197 ], [ %.069, %187 ], [ %.069, %185 ], [ %.069, %175 ], [ %.069, %173 ], [ %.069, %161 ], [ %.069, %151 ], [ %.069, %150 ], [ %.069, %149 ], [ %.069, %138 ], [ %.069, %128 ], [ %.069, %117 ], [ %.069, %114 ], [ %.069, %113 ], [ %.069, %101 ], [ %.069, %91 ], [ %.069, %90 ], [ %80, %79 ], [ %.069, %69 ], [ %.069, %58 ], [ %.069, %55 ], [ %.069, %54 ], [ 1, %44 ], [ %.069, %34 ], [ %.069, %32 ], [ %.069, %31 ], [ %.069, %18 ], [ %.069, %8 ], [ %.069, %5 ]
  %.067.be = phi i32 [ %.067, %4 ], [ %.067, %477 ], [ %.067, %476 ], [ %.067, %475 ], [ %.067, %473 ], [ %.067, %465 ], [ %.067, %464 ], [ %.067, %463 ], [ %.067, %462 ], [ %.067, %461 ], [ %.067, %460 ], [ %.neg, %459 ], [ 8000, %456 ], [ %.067, %454 ], [ %.067, %453 ], [ %.067, %449 ], [ %.067, %438 ], [ %.067, %427 ], [ %.067, %417 ], [ %.067, %405 ], [ %.067, %403 ], [ %.067, %391 ], [ %.067, %381 ], [ %.067, %380 ], [ %.067, %370 ], [ %.067, %360 ], [ %.067, %359 ], [ %.067, %348 ], [ %.067, %338 ], [ %.067, %337 ], [ %.067, %335 ], [ %.067, %334 ], [ %.067, %326 ], [ %.067, %324 ], [ %.067, %323 ], [ %.067, %306 ], [ %.067, %296 ], [ %.067, %294 ], [ %.067, %292 ], [ %.067, %281 ], [ %.067, %271 ], [ %.067, %270 ], [ %.067, %260 ], [ %.067, %250 ], [ %.067, %247 ], [ %.067, %246 ], [ %.067, %236 ], [ %.067, %226 ], [ %.067, %224 ], [ %.067, %211 ], [ %.067, %208 ], [ %.067, %207 ], [ %.067, %197 ], [ %.067, %187 ], [ %.067, %185 ], [ %.067, %175 ], [ %.067, %173 ], [ %.067, %161 ], [ %.067, %151 ], [ %.067, %150 ], [ %.067, %149 ], [ %139, %138 ], [ %.067, %128 ], [ %.067, %117 ], [ %.067, %114 ], [ %.067, %113 ], [ 8000, %101 ], [ %.067, %91 ], [ %.067, %90 ], [ %.067, %79 ], [ %.067, %69 ], [ %.067, %58 ], [ %.067, %55 ], [ %.067, %54 ], [ %.067, %44 ], [ %.067, %34 ], [ %.067, %32 ], [ %.067, %31 ], [ %.067, %18 ], [ %.067, %8 ], [ %.067, %5 ]
  %.065.be = phi i32 [ %.065, %4 ], [ %.065, %477 ], [ %.065, %476 ], [ %.065, %475 ], [ %.065, %473 ], [ %.065, %465 ], [ %.065, %464 ], [ %.065, %463 ], [ %.065, %462 ], [ %.065, %461 ], [ %.065, %460 ], [ %.065, %459 ], [ %.065, %456 ], [ %.065, %454 ], [ %.065, %453 ], [ %.065, %449 ], [ %.065, %438 ], [ %.065, %427 ], [ %.065, %417 ], [ %.065, %405 ], [ %.065, %403 ], [ %.065, %391 ], [ %.065, %381 ], [ %.065, %380 ], [ %.065, %370 ], [ %.065, %360 ], [ %.065, %359 ], [ %.065, %348 ], [ %.065, %338 ], [ %.065, %337 ], [ %.065, %335 ], [ %.065, %334 ], [ %.065, %326 ], [ %.065, %324 ], [ %.065, %323 ], [ %.065, %306 ], [ %.065, %296 ], [ %.065, %294 ], [ %.065, %292 ], [ %.065, %281 ], [ %.065, %271 ], [ %.065, %270 ], [ %.065, %260 ], [ %.065, %250 ], [ %.065, %247 ], [ %.065, %246 ], [ %.065, %236 ], [ %.065, %226 ], [ %.065, %224 ], [ %.065, %211 ], [ %.065, %208 ], [ %.065, %207 ], [ %.065, %197 ], [ %.065, %187 ], [ %186, %185 ], [ %.065, %175 ], [ %.065, %173 ], [ %.065, %161 ], [ %.065, %151 ], [ 1, %150 ], [ %.065, %149 ], [ %.065, %138 ], [ %.065, %128 ], [ %.065, %117 ], [ %.065, %114 ], [ %.065, %113 ], [ %.065, %101 ], [ %.065, %91 ], [ %.065, %90 ], [ %.065, %79 ], [ %.065, %69 ], [ %.065, %58 ], [ %.065, %55 ], [ %.065, %54 ], [ %.065, %44 ], [ %.065, %34 ], [ %.065, %32 ], [ %.065, %31 ], [ %.065, %18 ], [ %.065, %8 ], [ %.065, %5 ]
  %.063.be = phi i32 [ %.063, %4 ], [ %.063, %477 ], [ %.063, %476 ], [ %.063, %475 ], [ %.063, %473 ], [ %.063, %465 ], [ %.063, %464 ], [ %.063, %463 ], [ %.063, %462 ], [ 1, %461 ], [ %.063, %460 ], [ %.063, %459 ], [ %.063, %456 ], [ %.063, %454 ], [ %.063, %453 ], [ %.063, %449 ], [ %.063, %438 ], [ %.063, %427 ], [ %.063, %417 ], [ %.063, %405 ], [ %.063, %403 ], [ %.063, %391 ], [ %.063, %381 ], [ %.063, %380 ], [ %.063, %370 ], [ %.063, %360 ], [ %.063, %359 ], [ %.063, %348 ], [ %.063, %338 ], [ %.063, %337 ], [ %.063, %335 ], [ %.063, %334 ], [ %.063, %326 ], [ %.063, %324 ], [ %.063, %323 ], [ %.063, %306 ], [ %.063, %296 ], [ %.063, %294 ], [ %.063, %292 ], [ %.063, %281 ], [ %.063, %271 ], [ %.063, %270 ], [ %.063, %260 ], [ %.063, %250 ], [ %.063, %247 ], [ %.063, %246 ], [ %.063, %236 ], [ %.063, %226 ], [ %225, %224 ], [ %.063, %211 ], [ %.063, %208 ], [ %.063, %207 ], [ 1, %197 ], [ %.063, %187 ], [ %.063, %185 ], [ %.063, %175 ], [ %.063, %173 ], [ %.063, %161 ], [ %.063, %151 ], [ %.063, %150 ], [ %.063, %149 ], [ %.063, %138 ], [ %.063, %128 ], [ %.063, %117 ], [ %.063, %114 ], [ %.063, %113 ], [ %.063, %101 ], [ %.063, %91 ], [ %.063, %90 ], [ %.063, %79 ], [ %.063, %69 ], [ %.063, %58 ], [ %.063, %55 ], [ %.063, %54 ], [ %.063, %44 ], [ %.063, %34 ], [ %.063, %32 ], [ %.063, %31 ], [ %.063, %18 ], [ %.063, %8 ], [ %.063, %5 ]
  %.061.be = phi i32 [ %.061, %4 ], [ %.061, %477 ], [ %.061, %476 ], [ %.061, %475 ], [ %474, %473 ], [ %.061, %465 ], [ %.061, %464 ], [ %.061, %463 ], [ 0, %462 ], [ %.061, %461 ], [ %.061, %460 ], [ %.061, %459 ], [ %.061, %456 ], [ %.061, %454 ], [ %.061, %453 ], [ %.061, %449 ], [ %.061, %438 ], [ %.061, %427 ], [ %.061, %417 ], [ %.061, %405 ], [ %.061, %403 ], [ %.061, %391 ], [ %.061, %381 ], [ %.061, %380 ], [ %.061, %370 ], [ %.061, %360 ], [ %.061, %359 ], [ %349, %348 ], [ %.061, %338 ], [ %.061, %337 ], [ %.061, %335 ], [ %.061, %334 ], [ %.061, %326 ], [ %.061, %324 ], [ %.061, %323 ], [ %.061, %306 ], [ %.061, %296 ], [ %.061, %294 ], [ %.061, %292 ], [ %.061, %281 ], [ %.061, %271 ], [ %.061, %270 ], [ %.061, %260 ], [ %.061, %250 ], [ %.061, %247 ], [ %.061, %246 ], [ 0, %236 ], [ %.061, %226 ], [ %.061, %224 ], [ %.061, %211 ], [ %.061, %208 ], [ %.061, %207 ], [ %.061, %197 ], [ %.061, %187 ], [ %.061, %185 ], [ %.061, %175 ], [ %.061, %173 ], [ %.061, %161 ], [ %.061, %151 ], [ %.061, %150 ], [ %.061, %149 ], [ %.061, %138 ], [ %.061, %128 ], [ %.061, %117 ], [ %.061, %114 ], [ %.061, %113 ], [ %.061, %101 ], [ %.061, %91 ], [ %.061, %90 ], [ %.061, %79 ], [ %.061, %69 ], [ %.061, %58 ], [ %.061, %55 ], [ %.061, %54 ], [ %.061, %44 ], [ %.061, %34 ], [ %.061, %32 ], [ %.061, %31 ], [ %.061, %18 ], [ %.061, %8 ], [ %.061, %5 ]
  %.059.be = phi i32 [ %.059, %4 ], [ %.059, %477 ], [ %.059, %476 ], [ %.059, %475 ], [ %.059, %473 ], [ %.059, %465 ], [ %.059, %464 ], [ 0, %463 ], [ %.059, %462 ], [ %.059, %461 ], [ %.059, %460 ], [ %.059, %459 ], [ %.059, %456 ], [ %.059, %454 ], [ %.059, %453 ], [ %.059, %449 ], [ %.059, %438 ], [ %.059, %427 ], [ %.059, %417 ], [ %.059, %405 ], [ %.059, %403 ], [ %.059, %391 ], [ %.059, %381 ], [ %.059, %380 ], [ %.059, %370 ], [ %.059, %360 ], [ %.059, %359 ], [ %.059, %348 ], [ %.059, %338 ], [ %.059, %337 ], [ %336, %335 ], [ %.059, %334 ], [ %.059, %326 ], [ %.059, %324 ], [ %.059, %323 ], [ %.059, %306 ], [ %.059, %296 ], [ %.059, %294 ], [ %.059, %292 ], [ %.059, %281 ], [ %.059, %271 ], [ %.059, %270 ], [ 0, %260 ], [ %.059, %250 ], [ %.059, %247 ], [ %.059, %246 ], [ %.059, %236 ], [ %.059, %226 ], [ %.059, %224 ], [ %.059, %211 ], [ %.059, %208 ], [ %.059, %207 ], [ %.059, %197 ], [ %.059, %187 ], [ %.059, %185 ], [ %.059, %175 ], [ %.059, %173 ], [ %.059, %161 ], [ %.059, %151 ], [ %.059, %150 ], [ %.059, %149 ], [ %.059, %138 ], [ %.059, %128 ], [ %.059, %117 ], [ %.059, %114 ], [ %.059, %113 ], [ %.059, %101 ], [ %.059, %91 ], [ %.059, %90 ], [ %.059, %79 ], [ %.059, %69 ], [ %.059, %58 ], [ %.059, %55 ], [ %.059, %54 ], [ %.059, %44 ], [ %.059, %34 ], [ %.059, %32 ], [ %.059, %31 ], [ %.059, %18 ], [ %.059, %8 ], [ %.059, %5 ]
  %.057.be = phi i32 [ %.057, %4 ], [ %478, %477 ], [ %.057, %476 ], [ 1, %475 ], [ %.057, %473 ], [ %.057, %465 ], [ %.057, %464 ], [ %.057, %463 ], [ %.057, %462 ], [ %.057, %461 ], [ %.057, %460 ], [ %.057, %459 ], [ %.057, %456 ], [ %.057, %454 ], [ %.057, %453 ], [ %.057, %449 ], [ %.057, %438 ], [ %428, %427 ], [ %.057, %417 ], [ %.057, %405 ], [ %.057, %403 ], [ %.057, %391 ], [ %.057, %381 ], [ %.057, %380 ], [ 1, %370 ], [ %.057, %360 ], [ %.057, %359 ], [ %.057, %348 ], [ %.057, %338 ], [ %.057, %337 ], [ %.057, %335 ], [ %.057, %334 ], [ %.057, %326 ], [ %.057, %324 ], [ %.057, %323 ], [ %.057, %306 ], [ %.057, %296 ], [ %.057, %294 ], [ %.057, %292 ], [ %.057, %281 ], [ %.057, %271 ], [ %.057, %270 ], [ %.057, %260 ], [ %.057, %250 ], [ %.057, %247 ], [ %.057, %246 ], [ %.057, %236 ], [ %.057, %226 ], [ %.057, %224 ], [ %.057, %211 ], [ %.057, %208 ], [ %.057, %207 ], [ %.057, %197 ], [ %.057, %187 ], [ %.057, %185 ], [ %.057, %175 ], [ %.057, %173 ], [ %.057, %161 ], [ %.057, %151 ], [ %.057, %150 ], [ %.057, %149 ], [ %.057, %138 ], [ %.057, %128 ], [ %.057, %117 ], [ %.057, %114 ], [ %.057, %113 ], [ %.057, %101 ], [ %.057, %91 ], [ %.057, %90 ], [ %.057, %79 ], [ %.057, %69 ], [ %.057, %58 ], [ %.057, %55 ], [ %.057, %54 ], [ %.057, %44 ], [ %.057, %34 ], [ %.057, %32 ], [ %.057, %31 ], [ %.057, %18 ], [ %.057, %8 ], [ %.057, %5 ]
  %.0.be = phi i32 [ %.0, %4 ], [ 1083140771, %477 ], [ -1462100124, %476 ], [ -276228508, %475 ], [ -479319674, %473 ], [ -95938121, %465 ], [ 171692903, %464 ], [ 1170116482, %463 ], [ -216902920, %462 ], [ 2039874148, %461 ], [ 1837568101, %460 ], [ -1094997664, %459 ], [ -495051928, %456 ], [ -399618157, %454 ], [ -1847902541, %453 ], [ -2111589905, %449 ], [ -2002124310, %438 ], [ %437, %427 ], [ %426, %417 ], [ 953560430, %405 ], [ %404, %403 ], [ %402, %391 ], [ %390, %381 ], [ -2002124310, %380 ], [ %379, %370 ], [ %369, %360 ], [ 152030169, %359 ], [ %358, %348 ], [ %347, %338 ], [ 149962332, %337 ], [ -1589304564, %335 ], [ -917946254, %334 ], [ 1052706793, %326 ], [ %325, %324 ], [ -654946236, %323 ], [ %322, %306 ], [ %305, %296 ], [ %295, %294 ], [ %293, %292 ], [ %291, %281 ], [ %280, %271 ], [ -1589304564, %270 ], [ %269, %260 ], [ %259, %250 ], [ %249, %247 ], [ 152030169, %246 ], [ %245, %236 ], [ %235, %226 ], [ 1955506360, %224 ], [ 459102361, %211 ], [ %210, %208 ], [ 1955506360, %207 ], [ %206, %197 ], [ %196, %187 ], [ 1975787968, %185 ], [ 861504022, %175 ], [ %174, %173 ], [ %172, %161 ], [ %160, %151 ], [ 1975787968, %150 ], [ -29687159, %149 ], [ %148, %138 ], [ %137, %128 ], [ 217987699, %117 ], [ %116, %114 ], [ -29687159, %113 ], [ %112, %101 ], [ %100, %91 ], [ -867078966, %90 ], [ %89, %79 ], [ %78, %69 ], [ 1274514434, %58 ], [ %57, %55 ], [ -867078966, %54 ], [ %53, %44 ], [ %43, %34 ], [ -933851395, %32 ], [ 948443572, %31 ], [ %30, %18 ], [ %17, %8 ], [ %7, %5 ]
  br label %4

5:                                                ; preds = %4
  %6 = load i32, i32* @n, align 4
  %.not75 = icmp sgt i32 %.071, %6
  %7 = select i1 %.not75, i32 573355082, i32 1451075979
  br label %.backedge

8:                                                ; preds = %4
  %9 = load i32, i32* @x.3, align 4
  %10 = load i32, i32* @y.4, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 -2111589905, i32 -1917991421
  br label %.backedge

18:                                               ; preds = %4
  %19 = sext i32 %.071 to i64
  %20 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %19
  tail call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) %20)
  %21 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %19
  tail call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) %21)
  %22 = load i32, i32* @x.3, align 4
  %23 = load i32, i32* @y.4, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 -2034087992, i32 -1917991421
  br label %.backedge

31:                                               ; preds = %4
  br label %.backedge

32:                                               ; preds = %4
  %33 = add i32 %.071, 1
  br label %.backedge

34:                                               ; preds = %4
  %35 = load i32, i32* @x.3, align 4
  %36 = load i32, i32* @y.4, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1847902541, i32 763589331
  br label %.backedge

44:                                               ; preds = %4
  store i32 1, i32* getelementptr inbounds ([8020 x i32], [8020 x i32]* @fac, i64 0, i64 0), align 16
  %45 = load i32, i32* @x.3, align 4
  %46 = load i32, i32* @y.4, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 -1981272800, i32 763589331
  br label %.backedge

54:                                               ; preds = %4
  br label %.backedge

55:                                               ; preds = %4
  %56 = icmp slt i32 %.069, 8001
  %57 = select i1 %56, i32 1508025726, i32 173109346
  br label %.backedge

58:                                               ; preds = %4
  %59 = add i32 %.069, -1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [8020 x i32], [8020 x i32]* @fac, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = sext i32 %.069 to i64
  %65 = mul nsw i64 %63, %64
  %66 = srem i64 %65, 1000000007
  %67 = trunc i64 %66 to i32
  %68 = getelementptr inbounds [8020 x i32], [8020 x i32]* @fac, i64 0, i64 %64
  store i32 %67, i32* %68, align 4
  br label %.backedge

69:                                               ; preds = %4
  %70 = load i32, i32* @x.3, align 4
  %71 = load i32, i32* @y.4, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -399618157, i32 -980022561
  br label %.backedge

79:                                               ; preds = %4
  %80 = add i32 %.069, 1
  %81 = load i32, i32* @x.3, align 4
  %82 = load i32, i32* @y.4, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 -500080772, i32 -980022561
  br label %.backedge

90:                                               ; preds = %4
  br label %.backedge

91:                                               ; preds = %4
  %92 = load i32, i32* @x.3, align 4
  %93 = load i32, i32* @y.4, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 -495051928, i32 -1555275830
  br label %.backedge

101:                                              ; preds = %4
  %102 = load i32, i32* getelementptr inbounds ([8020 x i32], [8020 x i32]* @fac, i64 0, i64 8000), align 16
  %103 = tail call i32 @_Z4qpowii(i32 %102, i32 1000000005)
  store i32 %103, i32* getelementptr inbounds ([8020 x i32], [8020 x i32]* @ifac, i64 0, i64 8000), align 16
  %104 = load i32, i32* @x.3, align 4
  %105 = load i32, i32* @y.4, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 1362164986, i32 -1555275830
  br label %.backedge

113:                                              ; preds = %4
  br label %.backedge

114:                                              ; preds = %4
  %115 = icmp sgt i32 %.067, 0
  %116 = select i1 %115, i32 930727065, i32 -1022650929
  br label %.backedge

117:                                              ; preds = %4
  %118 = sext i32 %.067 to i64
  %119 = getelementptr inbounds [8020 x i32], [8020 x i32]* @ifac, i64 0, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  %122 = mul nsw i64 %121, %118
  %123 = srem i64 %122, 1000000007
  %124 = trunc i64 %123 to i32
  %125 = add i32 %.067, -1
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [8020 x i32], [8020 x i32]* @ifac, i64 0, i64 %126
  store i32 %124, i32* %127, align 4
  br label %.backedge

128:                                              ; preds = %4
  %129 = load i32, i32* @x.3, align 4
  %130 = load i32, i32* @y.4, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 -1094997664, i32 1531748909
  br label %.backedge

138:                                              ; preds = %4
  %139 = add i32 %.067, -1
  %140 = load i32, i32* @x.3, align 4
  %141 = load i32, i32* @y.4, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 -1702479670, i32 1531748909
  br label %.backedge

149:                                              ; preds = %4
  br label %.backedge

150:                                              ; preds = %4
  br label %.backedge

151:                                              ; preds = %4
  %152 = load i32, i32* @x.3, align 4
  %153 = load i32, i32* @y.4, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 1837568101, i32 -272144771
  br label %.backedge

161:                                              ; preds = %4
  %162 = load i32, i32* @n, align 4
  %163 = icmp sle i32 %.065, %162
  store i1 %163, i1* %3, align 1
  %164 = load i32, i32* @x.3, align 4
  %165 = load i32, i32* @y.4, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 1429569046, i32 -272144771
  br label %.backedge

173:                                              ; preds = %4
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %174 = select i1 %.0..0..0., i32 389747609, i32 1449302205
  br label %.backedge

175:                                              ; preds = %4
  %176 = sext i32 %.065 to i64
  %177 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %176
  %180 = load i32, i32* %179, align 4
  %181 = add i32 %180, %178
  %182 = shl nsw i32 %181, 1
  %183 = shl nsw i32 %178, 1
  %184 = tail call i32 @_Z1Cii(i32 %182, i32 %183)
  tail call void @_Z3plsRii(i32* nonnull dereferenceable(4) @tmp, i32 %184)
  br label %.backedge

185:                                              ; preds = %4
  %186 = add i32 %.065, 1
  br label %.backedge

187:                                              ; preds = %4
  %188 = load i32, i32* @x.3, align 4
  %189 = load i32, i32* @y.4, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 2039874148, i32 1083068073
  br label %.backedge

197:                                              ; preds = %4
  %198 = load i32, i32* @x.3, align 4
  %199 = load i32, i32* @y.4, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 -1659416747, i32 1083068073
  br label %.backedge

207:                                              ; preds = %4
  br label %.backedge

208:                                              ; preds = %4
  %209 = load i32, i32* @n, align 4
  %.not74 = icmp sgt i32 %.063, %209
  %210 = select i1 %.not74, i32 1210677479, i32 -272427972
  br label %.backedge

211:                                              ; preds = %4
  %212 = sext i32 %.063 to i64
  %213 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = sub i32 2000, %214
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %212
  %218 = load i32, i32* %217, align 4
  %219 = sub i32 2000, %218
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [4010 x [4010 x i32]], [4010 x [4010 x i32]]* @f, i64 0, i64 %216, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = add i32 %222, 1
  store i32 %223, i32* %221, align 4
  br label %.backedge

224:                                              ; preds = %4
  %225 = add i32 %.063, 1
  br label %.backedge

226:                                              ; preds = %4
  %227 = load i32, i32* @x.3, align 4
  %228 = load i32, i32* @y.4, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 -216902920, i32 1124965968
  br label %.backedge

236:                                              ; preds = %4
  %237 = load i32, i32* @x.3, align 4
  %238 = load i32, i32* @y.4, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -688525420, i32 1124965968
  br label %.backedge

246:                                              ; preds = %4
  br label %.backedge

247:                                              ; preds = %4
  %248 = icmp slt i32 %.061, 4001
  %249 = select i1 %248, i32 -1035520498, i32 612251516
  br label %.backedge

250:                                              ; preds = %4
  %251 = load i32, i32* @x.3, align 4
  %252 = load i32, i32* @y.4, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 1170116482, i32 308347591
  br label %.backedge

260:                                              ; preds = %4
  %261 = load i32, i32* @x.3, align 4
  %262 = load i32, i32* @y.4, align 4
  %263 = add i32 %261, -1
  %264 = mul i32 %263, %261
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %267, %266
  %269 = select i1 %268, i32 144065486, i32 308347591
  br label %.backedge

270:                                              ; preds = %4
  br label %.backedge

271:                                              ; preds = %4
  %272 = load i32, i32* @x.3, align 4
  %273 = load i32, i32* @y.4, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 171692903, i32 -1409227976
  br label %.backedge

281:                                              ; preds = %4
  %282 = icmp slt i32 %.059, 4001
  store i1 %282, i1* %2, align 1
  %283 = load i32, i32* @x.3, align 4
  %284 = load i32, i32* @y.4, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 -247115810, i32 -1409227976
  br label %.backedge

292:                                              ; preds = %4
  %.0..0..0.55 = load volatile i1, i1* %2, align 1
  %293 = select i1 %.0..0..0.55, i32 397758900, i32 -1460586237
  br label %.backedge

294:                                              ; preds = %4
  %.not73 = icmp eq i32 %.061, 0
  %295 = select i1 %.not73, i32 -654946236, i32 1398641630
  br label %.backedge

296:                                              ; preds = %4
  %297 = load i32, i32* @x.3, align 4
  %298 = load i32, i32* @y.4, align 4
  %299 = add i32 %297, -1
  %300 = mul i32 %299, %297
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %303, %302
  %305 = select i1 %304, i32 -95938121, i32 939306001
  br label %.backedge

306:                                              ; preds = %4
  %307 = sext i32 %.061 to i64
  %308 = sext i32 %.059 to i64
  %309 = getelementptr inbounds [4010 x [4010 x i32]], [4010 x [4010 x i32]]* @f, i64 0, i64 %307, i64 %308
  %310 = add i32 %.061, -1
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds [4010 x [4010 x i32]], [4010 x [4010 x i32]]* @f, i64 0, i64 %311, i64 %308
  %313 = load i32, i32* %312, align 4
  tail call void @_Z3plsRii(i32* nonnull dereferenceable(4) %309, i32 %313)
  %314 = load i32, i32* @x.3, align 4
  %315 = load i32, i32* @y.4, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 -1378376713, i32 939306001
  br label %.backedge

323:                                              ; preds = %4
  br label %.backedge

324:                                              ; preds = %4
  %.not = icmp eq i32 %.059, 0
  %325 = select i1 %.not, i32 1052706793, i32 700182531
  br label %.backedge

326:                                              ; preds = %4
  %327 = sext i32 %.061 to i64
  %328 = sext i32 %.059 to i64
  %329 = getelementptr inbounds [4010 x [4010 x i32]], [4010 x [4010 x i32]]* @f, i64 0, i64 %327, i64 %328
  %330 = add i32 %.059, -1
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds [4010 x [4010 x i32]], [4010 x [4010 x i32]]* @f, i64 0, i64 %327, i64 %331
  %333 = load i32, i32* %332, align 4
  tail call void @_Z3plsRii(i32* nonnull dereferenceable(4) %329, i32 %333)
  br label %.backedge

334:                                              ; preds = %4
  br label %.backedge

335:                                              ; preds = %4
  %336 = add i32 %.059, 1
  br label %.backedge

337:                                              ; preds = %4
  br label %.backedge

338:                                              ; preds = %4
  %339 = load i32, i32* @x.3, align 4
  %340 = load i32, i32* @y.4, align 4
  %341 = add i32 %339, -1
  %342 = mul i32 %341, %339
  %343 = and i32 %342, 1
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %345, %344
  %347 = select i1 %346, i32 -479319674, i32 -1366430036
  br label %.backedge

348:                                              ; preds = %4
  %349 = add i32 %.061, 1
  %350 = load i32, i32* @x.3, align 4
  %351 = load i32, i32* @y.4, align 4
  %352 = add i32 %350, -1
  %353 = mul i32 %352, %350
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %356, %355
  %358 = select i1 %357, i32 1360656091, i32 -1366430036
  br label %.backedge

359:                                              ; preds = %4
  br label %.backedge

360:                                              ; preds = %4
  %361 = load i32, i32* @x.3, align 4
  %362 = load i32, i32* @y.4, align 4
  %363 = add i32 %361, -1
  %364 = mul i32 %363, %361
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %367, %366
  %369 = select i1 %368, i32 -276228508, i32 1841801448
  br label %.backedge

370:                                              ; preds = %4
  %371 = load i32, i32* @x.3, align 4
  %372 = load i32, i32* @y.4, align 4
  %373 = add i32 %371, -1
  %374 = mul i32 %373, %371
  %375 = and i32 %374, 1
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %377, %376
  %379 = select i1 %378, i32 1281847056, i32 1841801448
  br label %.backedge

380:                                              ; preds = %4
  br label %.backedge

381:                                              ; preds = %4
  %382 = load i32, i32* @x.3, align 4
  %383 = load i32, i32* @y.4, align 4
  %384 = add i32 %382, -1
  %385 = mul i32 %384, %382
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %388, %387
  %390 = select i1 %389, i32 -1462100124, i32 -723018920
  br label %.backedge

391:                                              ; preds = %4
  %392 = load i32, i32* @n, align 4
  %393 = icmp sle i32 %.057, %392
  store i1 %393, i1* %1, align 1
  %394 = load i32, i32* @x.3, align 4
  %395 = load i32, i32* @y.4, align 4
  %396 = add i32 %394, -1
  %397 = mul i32 %396, %394
  %398 = and i32 %397, 1
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %400, %399
  %402 = select i1 %401, i32 2119236853, i32 -723018920
  br label %.backedge

403:                                              ; preds = %4
  %.0..0..0.56 = load volatile i1, i1* %1, align 1
  %404 = select i1 %.0..0..0.56, i32 -1885626395, i32 198553463
  br label %.backedge

405:                                              ; preds = %4
  %406 = sext i32 %.057 to i64
  %407 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %406
  %408 = load i32, i32* %407, align 4
  %409 = add i32 %408, 2000
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %406
  %412 = load i32, i32* %411, align 4
  %413 = add i32 %412, 2000
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [4010 x [4010 x i32]], [4010 x [4010 x i32]]* @f, i64 0, i64 %410, i64 %414
  %416 = load i32, i32* %415, align 4
  tail call void @_Z3plsRii(i32* nonnull dereferenceable(4) @ret, i32 %416)
  br label %.backedge

417:                                              ; preds = %4
  %418 = load i32, i32* @x.3, align 4
  %419 = load i32, i32* @y.4, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 1083140771, i32 -61491487
  br label %.backedge

427:                                              ; preds = %4
  %428 = add i32 %.057, 1
  %429 = load i32, i32* @x.3, align 4
  %430 = load i32, i32* @y.4, align 4
  %431 = add i32 %429, -1
  %432 = mul i32 %431, %429
  %433 = and i32 %432, 1
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %435, %434
  %437 = select i1 %436, i32 120688378, i32 -61491487
  br label %.backedge

438:                                              ; preds = %4
  br label %.backedge

439:                                              ; preds = %4
  %440 = load i32, i32* @ret, align 4
  %441 = load i32, i32* @tmp, align 4
  %442 = sub i32 1000000007, %441
  %443 = tail call i32 @_Z3addii(i32 %440, i32 %442)
  %444 = sext i32 %443 to i64
  %445 = mul nsw i64 %444, 500000004
  %446 = srem i64 %445, 1000000007
  %447 = trunc i64 %446 to i32
  %448 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %447)
  ret i32 0

449:                                              ; preds = %4
  %450 = sext i32 %.071 to i64
  %451 = getelementptr inbounds [200010 x i32], [200010 x i32]* @a, i64 0, i64 %450
  tail call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) %451)
  %452 = getelementptr inbounds [200010 x i32], [200010 x i32]* @b, i64 0, i64 %450
  tail call void @_Z4readIiEvRT_(i32* nonnull dereferenceable(4) %452)
  br label %.backedge

453:                                              ; preds = %4
  store i32 1, i32* getelementptr inbounds ([8020 x i32], [8020 x i32]* @fac, i64 0, i64 0), align 16
  br label %.backedge

454:                                              ; preds = %4
  %455 = add i32 %.069, 1
  br label %.backedge

456:                                              ; preds = %4
  %457 = load i32, i32* getelementptr inbounds ([8020 x i32], [8020 x i32]* @fac, i64 0, i64 8000), align 16
  %458 = tail call i32 @_Z4qpowii(i32 %457, i32 1000000005)
  store i32 %458, i32* getelementptr inbounds ([8020 x i32], [8020 x i32]* @ifac, i64 0, i64 8000), align 16
  br label %.backedge

459:                                              ; preds = %4
  %.neg = add i32 %.067, -1
  br label %.backedge

460:                                              ; preds = %4
  br label %.backedge

461:                                              ; preds = %4
  br label %.backedge

462:                                              ; preds = %4
  br label %.backedge

463:                                              ; preds = %4
  br label %.backedge

464:                                              ; preds = %4
  br label %.backedge

465:                                              ; preds = %4
  %466 = sext i32 %.061 to i64
  %467 = sext i32 %.059 to i64
  %468 = getelementptr inbounds [4010 x [4010 x i32]], [4010 x [4010 x i32]]* @f, i64 0, i64 %466, i64 %467
  %469 = add i32 %.061, -1
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds [4010 x [4010 x i32]], [4010 x [4010 x i32]]* @f, i64 0, i64 %470, i64 %467
  %472 = load i32, i32* %471, align 4
  tail call void @_Z3plsRii(i32* nonnull dereferenceable(4) %468, i32 %472)
  br label %.backedge

473:                                              ; preds = %4
  %474 = add i32 %.061, 1
  br label %.backedge

475:                                              ; preds = %4
  br label %.backedge

476:                                              ; preds = %4
  br label %.backedge

477:                                              ; preds = %4
  %478 = add i32 %.057, 1
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z4readIiEvRT_(i32* dereferenceable(4) %0) local_unnamed_addr #3 comdat {
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  store i32 0, i32* %0, align 4
  %4 = tail call i32 @getchar()
  %5 = trunc i32 %4 to i8
  br label %6

6:                                                ; preds = %.backedge, %1
  %.027 = phi i32 [ 1, %1 ], [ %.027.be, %.backedge ]
  %.025 = phi i8 [ %5, %1 ], [ %.025.be, %.backedge ]
  %.023 = phi i32 [ 1557025100, %1 ], [ %.023.be, %.backedge ]
  %.021 = phi i1 [ undef, %1 ], [ %.021.be, %.backedge ]
  %.0 = phi i1 [ undef, %1 ], [ %.0.be, %.backedge ]
  switch i32 %.023, label %.backedge [
    i32 1557025100, label %7
    i32 176357174, label %10
    i32 154338753, label %12
    i32 250481941, label %14
    i32 -1354501082, label %24
    i32 -684946813, label %35
    i32 -1691086364, label %37
    i32 -1387032138, label %47
    i32 -2040309584, label %58
    i32 571021633, label %59
    i32 -1412502494, label %62
    i32 1212273269, label %63
    i32 -947132297, label %66
    i32 1072783290, label %68
    i32 350508984, label %78
    i32 1202888918, label %88
    i32 -2011238909, label %90
    i32 -1226950800, label %100
    i32 -2100444904, label %117
    i32 -1620575748, label %118
    i32 167665181, label %121
    i32 142154207, label %122
    i32 84147891, label %124
    i32 728422517, label %125
  ]

.backedge:                                        ; preds = %6, %125, %124, %122, %121, %117, %100, %90, %88, %78, %68, %66, %63, %62, %59, %58, %47, %37, %35, %24, %14, %12, %10, %7
  %.027.be = phi i32 [ %.027, %6 ], [ %.027, %125 ], [ %.027, %124 ], [ %123, %122 ], [ %.027, %121 ], [ %.027, %117 ], [ %.027, %100 ], [ %.027, %90 ], [ %.027, %88 ], [ %.027, %78 ], [ %.027, %68 ], [ %.027, %66 ], [ %.027, %63 ], [ %.027, %62 ], [ %.027, %59 ], [ %.027, %58 ], [ %48, %47 ], [ %.027, %37 ], [ %.027, %35 ], [ %.027, %24 ], [ %.027, %14 ], [ %.027, %12 ], [ %.027, %10 ], [ %.027, %7 ]
  %.025.be = phi i8 [ %.025, %6 ], [ %132, %125 ], [ %.025, %124 ], [ %.025, %122 ], [ %.025, %121 ], [ %.025, %117 ], [ %107, %100 ], [ %.025, %90 ], [ %.025, %88 ], [ %.025, %78 ], [ %.025, %68 ], [ %.025, %66 ], [ %.025, %63 ], [ %.025, %62 ], [ %61, %59 ], [ %.025, %58 ], [ %.025, %47 ], [ %.025, %37 ], [ %.025, %35 ], [ %.025, %24 ], [ %.025, %14 ], [ %.025, %12 ], [ %.025, %10 ], [ %.025, %7 ]
  %.023.be = phi i32 [ %.023, %6 ], [ -1226950800, %125 ], [ 350508984, %124 ], [ -1387032138, %122 ], [ -1354501082, %121 ], [ 1212273269, %117 ], [ %116, %100 ], [ %99, %90 ], [ %89, %88 ], [ %87, %78 ], [ %77, %68 ], [ 1072783290, %66 ], [ %65, %63 ], [ 1212273269, %62 ], [ 1557025100, %59 ], [ 571021633, %58 ], [ %57, %47 ], [ %46, %37 ], [ %36, %35 ], [ %34, %24 ], [ %23, %14 ], [ %13, %12 ], [ 154338753, %10 ], [ %9, %7 ]
  %.021.be = phi i1 [ %.021, %6 ], [ %.021, %125 ], [ %.021, %124 ], [ %.021, %122 ], [ %.021, %121 ], [ %.021, %117 ], [ %.021, %100 ], [ %.021, %90 ], [ %.021, %88 ], [ %.021, %78 ], [ %.021, %68 ], [ %.021, %66 ], [ %.021, %63 ], [ %.021, %62 ], [ %.021, %59 ], [ %.021, %58 ], [ %.021, %47 ], [ %.021, %37 ], [ %.021, %35 ], [ %.021, %24 ], [ %.021, %14 ], [ %.021, %12 ], [ %11, %10 ], [ true, %7 ]
  %.0.be = phi i1 [ %.0, %6 ], [ %.0, %125 ], [ %.0, %124 ], [ %.0, %122 ], [ %.0, %121 ], [ %.0, %117 ], [ %.0, %100 ], [ %.0, %90 ], [ %.0, %88 ], [ %.0, %78 ], [ %.0, %68 ], [ %67, %66 ], [ false, %63 ], [ %.0, %62 ], [ %.0, %59 ], [ %.0, %58 ], [ %.0, %47 ], [ %.0, %37 ], [ %.0, %35 ], [ %.0, %24 ], [ %.0, %14 ], [ %.0, %12 ], [ %.0, %10 ], [ %.0, %7 ]
  br label %6

7:                                                ; preds = %6
  %8 = icmp slt i8 %.025, 48
  %9 = select i1 %8, i32 154338753, i32 176357174
  br label %.backedge

10:                                               ; preds = %6
  %11 = icmp sgt i8 %.025, 57
  br label %.backedge

12:                                               ; preds = %6
  %13 = select i1 %.021, i32 250481941, i32 -1412502494
  br label %.backedge

14:                                               ; preds = %6
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1354501082, i32 167665181
  br label %.backedge

24:                                               ; preds = %6
  %25 = icmp eq i8 %.025, 45
  store i1 %25, i1* %3, align 1
  %26 = load i32, i32* @x.5, align 4
  %27 = load i32, i32* @y.6, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 -684946813, i32 167665181
  br label %.backedge

35:                                               ; preds = %6
  %.0..0..0.19 = load volatile i1, i1* %3, align 1
  %36 = select i1 %.0..0..0.19, i32 -1691086364, i32 571021633
  br label %.backedge

37:                                               ; preds = %6
  %38 = load i32, i32* @x.5, align 4
  %39 = load i32, i32* @y.6, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 -1387032138, i32 142154207
  br label %.backedge

47:                                               ; preds = %6
  %48 = sub i32 0, %.027
  %49 = load i32, i32* @x.5, align 4
  %50 = load i32, i32* @y.6, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 -2040309584, i32 142154207
  br label %.backedge

58:                                               ; preds = %6
  br label %.backedge

59:                                               ; preds = %6
  %60 = tail call i32 @getchar()
  %61 = trunc i32 %60 to i8
  br label %.backedge

62:                                               ; preds = %6
  br label %.backedge

63:                                               ; preds = %6
  %64 = icmp sgt i8 %.025, 47
  %65 = select i1 %64, i32 -947132297, i32 1072783290
  br label %.backedge

66:                                               ; preds = %6
  %67 = icmp slt i8 %.025, 58
  br label %.backedge

68:                                               ; preds = %6
  store i1 %.0, i1* %2, align 1
  %69 = load i32, i32* @x.5, align 4
  %70 = load i32, i32* @y.6, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 350508984, i32 84147891
  br label %.backedge

78:                                               ; preds = %6
  %79 = load i32, i32* @x.5, align 4
  %80 = load i32, i32* @y.6, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 1202888918, i32 84147891
  br label %.backedge

88:                                               ; preds = %6
  %.0..0..0.20 = load volatile i1, i1* %2, align 1
  %89 = select i1 %.0..0..0.20, i32 -2011238909, i32 -1620575748
  br label %.backedge

90:                                               ; preds = %6
  %91 = load i32, i32* @x.5, align 4
  %92 = load i32, i32* @y.6, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -1226950800, i32 728422517
  br label %.backedge

100:                                              ; preds = %6
  %101 = load i32, i32* %0, align 4
  %102 = mul nsw i32 %101, 10
  %103 = sext i8 %.025 to i32
  %104 = add nsw i32 %103, -48
  %105 = add i32 %104, %102
  store i32 %105, i32* %0, align 4
  %106 = tail call i32 @getchar()
  %107 = trunc i32 %106 to i8
  %108 = load i32, i32* @x.5, align 4
  %109 = load i32, i32* @y.6, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -2100444904, i32 728422517
  br label %.backedge

117:                                              ; preds = %6
  br label %.backedge

118:                                              ; preds = %6
  %119 = load i32, i32* %0, align 4
  %120 = mul nsw i32 %119, %.027
  store i32 %120, i32* %0, align 4
  ret void

121:                                              ; preds = %6
  br label %.backedge

122:                                              ; preds = %6
  %123 = sub i32 0, %.027
  br label %.backedge

124:                                              ; preds = %6
  br label %.backedge

125:                                              ; preds = %6
  %126 = load i32, i32* %0, align 4
  %127 = mul nsw i32 %126, 10
  %128 = sext i8 %.025 to i32
  %129 = add nsw i32 %128, -48
  %130 = add i32 %129, %127
  store i32 %130, i32* %0, align 4
  %131 = tail call i32 @getchar()
  %132 = trunc i32 %131 to i8
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_Z3plsRii(i32* dereferenceable(4) %0, i32 %1) local_unnamed_addr #4 comdat {
  %3 = alloca i32, align 4
  %4 = load i32, i32* %0, align 4
  %5 = add i32 %4, %1
  store i32 %5, i32* %0, align 4
  store i32 %5, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %28, %2
  %.ph = phi i32 [ %29, %28 ], [ %5, %2 ]
  %.0.ph = phi i32 [ 648340709, %28 ], [ 258921735, %2 ]
  %6 = load i32, i32* @x.7, align 4
  %7 = load i32, i32* @y.8, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 1864052318, i32 2089612810
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 291804829, i32 2089612810
  br label %.outer5

.outer5:                                          ; preds = %.outer5.backedge, %.outer
  %.0.ph6 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph6.be, %.outer5.backedge ]
  br label %24

24:                                               ; preds = %.outer5, %24
  switch i32 %.0.ph6, label %24 [
    i32 258921735, label %25
    i32 1484316026, label %28
    i32 648340709, label %.outer5.backedge
    i32 291804829, label %30
    i32 1864052318, label %31
    i32 2089612810, label %32
  ]

25:                                               ; preds = %24
  %.0..0..0.4 = load volatile i32, i32* %3, align 4
  %26 = icmp sgt i32 %.0..0..0.4, 1000000006
  %27 = select i1 %26, i32 1484316026, i32 648340709
  br label %.outer5.backedge

28:                                               ; preds = %24
  %29 = add i32 %.ph, -1000000007
  store i32 %29, i32* %0, align 4
  br label %.outer

30:                                               ; preds = %24
  br label %.outer5.backedge

31:                                               ; preds = %24
  ret void

32:                                               ; preds = %24
  br label %.outer5.backedge

.outer5.backedge:                                 ; preds = %24, %32, %30, %25
  %.0.ph6.be = phi i32 [ %27, %25 ], [ %14, %30 ], [ 291804829, %32 ], [ %23, %24 ]
  br label %.outer5
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z3addii(i32 %0, i32 %1) local_unnamed_addr #4 comdat {
  %3 = alloca i32, align 4
  %4 = add i32 %1, %0
  store i32 %4, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %9, %2
  %.06.ph = phi i32 [ %10, %9 ], [ %4, %2 ]
  %.0.ph = phi i32 [ -775283994, %9 ], [ -828935032, %2 ]
  br label %.outer8

.outer8:                                          ; preds = %.outer, %6
  %.0.ph9 = phi i32 [ %.0.ph, %.outer ], [ %8, %6 ]
  br label %5

5:                                                ; preds = %.outer8, %5
  switch i32 %.0.ph9, label %5 [
    i32 -828935032, label %6
    i32 -1371885840, label %9
    i32 -775283994, label %11
  ]

6:                                                ; preds = %5
  %.0..0..0. = load volatile i32, i32* %3, align 4
  %7 = icmp sgt i32 %.0..0..0., 1000000006
  %8 = select i1 %7, i32 -1371885840, i32 -775283994
  br label %.outer8

9:                                                ; preds = %5
  %10 = add i32 %.06.ph, -1000000007
  br label %.outer

11:                                               ; preds = %5
  ret i32 %.06.ph
}

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #5

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
