; ModuleID = 'build_ollvm/programs/p01140/s186589443.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s186589443.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@ih = local_unnamed_addr global [1501500 x i32] zeroinitializer, align 16
@iw = local_unnamed_addr global [1501500 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s186589443.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1593259232, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1593259232, label %11
    i32 1093612897, label %14
    i32 269878327, label %25
    i32 1952244243, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1093612897, i32 1952244243
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 269878327, i32 1952244243
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1093612897, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [1520 x i32], align 16
  %6 = alloca [1010 x i32], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  br label %9

9:                                                ; preds = %.backedge, %0
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ -1845612062, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i1 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.053, label %.backedge [
    i32 -1845612062, label %10
    i32 1874404643, label %20
    i32 1527121331, label %30
    i32 1991004863, label %31
    i32 403682242, label %34
    i32 -1274062292, label %38
    i32 -1407955530, label %39
    i32 121153492, label %49
    i32 -1197915007, label %63
    i32 1638507033, label %65
    i32 33040536, label %66
    i32 2049856695, label %67
    i32 1889391310, label %71
    i32 1859837532, label %78
    i32 -1806290237, label %88
    i32 621658257, label %99
    i32 -302036038, label %100
    i32 1386549582, label %101
    i32 2068105931, label %105
    i32 224242611, label %112
    i32 -140414584, label %113
    i32 -325553570, label %116
    i32 722693365, label %120
    i32 1344627405, label %130
    i32 -200536617, label %140
    i32 2068394404, label %141
    i32 -1343324664, label %145
    i32 -1467353768, label %147
    i32 1641849105, label %149
    i32 728691753, label %159
    i32 -2127254745, label %177
    i32 1418637710, label %178
    i32 -932940332, label %188
    i32 511465089, label %199
    i32 -1935842503, label %200
    i32 -927801764, label %201
    i32 839449261, label %202
    i32 -1938017201, label %203
    i32 687303536, label %207
    i32 -1553136872, label %217
    i32 -960454710, label %227
    i32 32730719, label %228
    i32 -1893570698, label %232
    i32 1957783214, label %234
    i32 502229834, label %244
    i32 -1584230407, label %254
    i32 -594305275, label %256
    i32 -2009980519, label %265
    i32 1641755891, label %267
    i32 -146485438, label %268
    i32 -629694194, label %270
    i32 -1998768878, label %280
    i32 205738031, label %290
    i32 465926210, label %291
    i32 -425187348, label %295
    i32 -1118521698, label %303
    i32 1229576418, label %304
    i32 -1762254465, label %314
    i32 215952295, label %326
    i32 -829644651, label %327
    i32 1264476946, label %337
    i32 199827642, label %347
    i32 1273477725, label %348
    i32 235293060, label %349
    i32 -923712264, label %352
    i32 1565331292, label %354
    i32 -203718815, label %355
    i32 1102220933, label %363
    i32 814824487, label %365
    i32 298408660, label %366
    i32 -1595679283, label %367
    i32 -1287323236, label %368
    i32 -1771274663, label %371
  ]

.backedge:                                        ; preds = %9, %371, %368, %367, %366, %365, %363, %355, %354, %352, %349, %348, %337, %327, %326, %314, %304, %303, %295, %291, %290, %280, %270, %268, %267, %265, %256, %254, %244, %234, %232, %228, %227, %217, %207, %203, %202, %201, %200, %199, %188, %178, %177, %159, %149, %147, %145, %141, %140, %130, %120, %116, %113, %112, %105, %101, %100, %99, %88, %78, %71, %67, %66, %65, %63, %49, %39, %38, %34, %31, %30, %20, %10
  %.077.be = phi i32 [ %.077, %9 ], [ %.077, %371 ], [ %.077, %368 ], [ %.077, %367 ], [ %.077, %366 ], [ %.077, %365 ], [ %.077, %363 ], [ %.077, %355 ], [ %.077, %354 ], [ %.077, %352 ], [ %.077, %349 ], [ 0, %348 ], [ %.077, %337 ], [ %.077, %327 ], [ %.077, %326 ], [ %.077, %314 ], [ %.077, %304 ], [ %.077, %303 ], [ %.077, %295 ], [ %.077, %291 ], [ %.077, %290 ], [ %.077, %280 ], [ %.077, %270 ], [ %.077, %268 ], [ %.077, %267 ], [ %.077, %265 ], [ %.077, %256 ], [ %.077, %254 ], [ %.077, %244 ], [ %.077, %234 ], [ %.077, %232 ], [ %.077, %228 ], [ %.077, %227 ], [ %.077, %217 ], [ %.077, %207 ], [ %.077, %203 ], [ %.077, %202 ], [ %.077, %201 ], [ %.077, %200 ], [ %.077, %199 ], [ %.077, %188 ], [ %.077, %178 ], [ %.077, %177 ], [ %.077, %159 ], [ %.077, %149 ], [ %.077, %147 ], [ %.077, %145 ], [ %.077, %141 ], [ %.077, %140 ], [ %.077, %130 ], [ %.077, %120 ], [ %.077, %116 ], [ %.077, %113 ], [ %.077, %112 ], [ %.077, %105 ], [ %.077, %101 ], [ %.077, %100 ], [ %.077, %99 ], [ %.077, %88 ], [ %.077, %78 ], [ %.077, %71 ], [ %.077, %67 ], [ %.077, %66 ], [ %.077, %65 ], [ %.077, %63 ], [ %.077, %49 ], [ %.077, %39 ], [ %.neg82, %38 ], [ %.077, %34 ], [ %.077, %31 ], [ %.077, %30 ], [ 0, %20 ], [ %.077, %10 ]
  %.075.be = phi i32 [ %.075, %9 ], [ %.075, %371 ], [ %.075, %368 ], [ %.075, %367 ], [ %.075, %366 ], [ %.075, %365 ], [ %.075, %363 ], [ %.075, %355 ], [ %.075, %354 ], [ %.075, %352 ], [ 0, %349 ], [ %.075, %348 ], [ %.075, %337 ], [ %.075, %327 ], [ %.075, %326 ], [ %.075, %314 ], [ %.075, %304 ], [ %.075, %303 ], [ %302, %295 ], [ %.075, %291 ], [ %.075, %290 ], [ %.075, %280 ], [ %.075, %270 ], [ %.075, %268 ], [ %.075, %267 ], [ %.075, %265 ], [ %.075, %256 ], [ %.075, %254 ], [ %.075, %244 ], [ %.075, %234 ], [ %.075, %232 ], [ %.075, %228 ], [ %.075, %227 ], [ %.075, %217 ], [ %.075, %207 ], [ %.075, %203 ], [ %.075, %202 ], [ %.075, %201 ], [ %.075, %200 ], [ %.075, %199 ], [ %.075, %188 ], [ %.075, %178 ], [ %.075, %177 ], [ %.075, %159 ], [ %.075, %149 ], [ %.075, %147 ], [ %.075, %145 ], [ %.075, %141 ], [ %.075, %140 ], [ %.075, %130 ], [ %.075, %120 ], [ %.075, %116 ], [ %.075, %113 ], [ %.075, %112 ], [ %.075, %105 ], [ %.075, %101 ], [ %.075, %100 ], [ %.075, %99 ], [ %.075, %88 ], [ %.075, %78 ], [ %.075, %71 ], [ %.075, %67 ], [ %.075, %66 ], [ %.075, %65 ], [ %.075, %63 ], [ 0, %49 ], [ %.075, %39 ], [ %.075, %38 ], [ %.075, %34 ], [ %.075, %31 ], [ %.075, %30 ], [ %.075, %20 ], [ %.075, %10 ]
  %.073.be = phi i32 [ %.073, %9 ], [ %.073, %371 ], [ %.073, %368 ], [ %.073, %367 ], [ %.073, %366 ], [ %.073, %365 ], [ %.073, %363 ], [ %.073, %355 ], [ %.073, %354 ], [ %353, %352 ], [ %.073, %349 ], [ %.073, %348 ], [ %.073, %337 ], [ %.073, %327 ], [ %.073, %326 ], [ %.073, %314 ], [ %.073, %304 ], [ %.073, %303 ], [ %.073, %295 ], [ %.073, %291 ], [ %.073, %290 ], [ %.073, %280 ], [ %.073, %270 ], [ %.073, %268 ], [ %.073, %267 ], [ %.073, %265 ], [ %.073, %256 ], [ %.073, %254 ], [ %.073, %244 ], [ %.073, %234 ], [ %.073, %232 ], [ %.073, %228 ], [ %.073, %227 ], [ %.073, %217 ], [ %.073, %207 ], [ %.073, %203 ], [ %.073, %202 ], [ %.073, %201 ], [ %.073, %200 ], [ %.073, %199 ], [ %.073, %188 ], [ %.073, %178 ], [ %.073, %177 ], [ %.073, %159 ], [ %.073, %149 ], [ %.073, %147 ], [ %.073, %145 ], [ %.073, %141 ], [ %.073, %140 ], [ %.073, %130 ], [ %.073, %120 ], [ %.073, %116 ], [ %.073, %113 ], [ %.073, %112 ], [ %.073, %105 ], [ %.073, %101 ], [ %.073, %100 ], [ %.073, %99 ], [ %89, %88 ], [ %.073, %78 ], [ %.073, %71 ], [ %.073, %67 ], [ 0, %66 ], [ %.073, %65 ], [ %.073, %63 ], [ %.073, %49 ], [ %.073, %39 ], [ %.073, %38 ], [ %.073, %34 ], [ %.073, %31 ], [ %.073, %30 ], [ %.073, %20 ], [ %.073, %10 ]
  %.071.be = phi i32 [ %.071, %9 ], [ %.071, %371 ], [ %.071, %368 ], [ %.071, %367 ], [ %.071, %366 ], [ %.071, %365 ], [ %.071, %363 ], [ %.071, %355 ], [ %.071, %354 ], [ %.071, %352 ], [ %.071, %349 ], [ %.071, %348 ], [ %.071, %337 ], [ %.071, %327 ], [ %.071, %326 ], [ %.071, %314 ], [ %.071, %304 ], [ %.071, %303 ], [ %.071, %295 ], [ %.071, %291 ], [ %.071, %290 ], [ %.071, %280 ], [ %.071, %270 ], [ %.071, %268 ], [ %.071, %267 ], [ %.071, %265 ], [ %.071, %256 ], [ %.071, %254 ], [ %.071, %244 ], [ %.071, %234 ], [ %.071, %232 ], [ %.071, %228 ], [ %.071, %227 ], [ %.071, %217 ], [ %.071, %207 ], [ %.071, %203 ], [ %.071, %202 ], [ %.071, %201 ], [ %.071, %200 ], [ %.071, %199 ], [ %.071, %188 ], [ %.071, %178 ], [ %.071, %177 ], [ %.071, %159 ], [ %.071, %149 ], [ %.071, %147 ], [ %.071, %145 ], [ %.071, %141 ], [ %.071, %140 ], [ %.071, %130 ], [ %.071, %120 ], [ %.071, %116 ], [ %.071, %113 ], [ %.neg81, %112 ], [ %.071, %105 ], [ %.071, %101 ], [ 0, %100 ], [ %.071, %99 ], [ %.071, %88 ], [ %.071, %78 ], [ %.071, %71 ], [ %.071, %67 ], [ %.071, %66 ], [ %.071, %65 ], [ %.071, %63 ], [ %.071, %49 ], [ %.071, %39 ], [ %.071, %38 ], [ %.071, %34 ], [ %.071, %31 ], [ %.071, %30 ], [ %.071, %20 ], [ %.071, %10 ]
  %.069.be = phi i32 [ %.069, %9 ], [ %.069, %371 ], [ %.069, %368 ], [ %.069, %367 ], [ %.069, %366 ], [ %.069, %365 ], [ %.069, %363 ], [ %.069, %355 ], [ %.069, %354 ], [ %.069, %352 ], [ %.069, %349 ], [ %.069, %348 ], [ %.069, %337 ], [ %.069, %327 ], [ %.069, %326 ], [ %.069, %314 ], [ %.069, %304 ], [ %.069, %303 ], [ %.069, %295 ], [ %.069, %291 ], [ %.069, %290 ], [ %.069, %280 ], [ %.069, %270 ], [ %.069, %268 ], [ %.069, %267 ], [ %.069, %265 ], [ %.069, %256 ], [ %.069, %254 ], [ %.069, %244 ], [ %.069, %234 ], [ %.069, %232 ], [ %.069, %228 ], [ %.069, %227 ], [ %.069, %217 ], [ %.069, %207 ], [ %.069, %203 ], [ %.069, %202 ], [ %.069, %201 ], [ %.069, %200 ], [ %.069, %199 ], [ %.069, %188 ], [ %.069, %178 ], [ %.069, %177 ], [ %.069, %159 ], [ %.069, %149 ], [ %.069, %147 ], [ %.069, %145 ], [ %.069, %141 ], [ %.069, %140 ], [ %.069, %130 ], [ %.069, %120 ], [ %.069, %116 ], [ %115, %113 ], [ %.069, %112 ], [ %.069, %105 ], [ %.069, %101 ], [ %.069, %100 ], [ %.069, %99 ], [ %.069, %88 ], [ %.069, %78 ], [ %.069, %71 ], [ %.069, %67 ], [ %.069, %66 ], [ %.069, %65 ], [ %.069, %63 ], [ %.069, %49 ], [ %.069, %39 ], [ %.069, %38 ], [ %.069, %34 ], [ %.069, %31 ], [ %.069, %30 ], [ %.069, %20 ], [ %.069, %10 ]
  %.067.be = phi i32 [ %.067, %9 ], [ %.067, %371 ], [ %.067, %368 ], [ %.067, %367 ], [ %.067, %366 ], [ %.067, %365 ], [ %.067, %363 ], [ %.067, %355 ], [ %.067, %354 ], [ %.067, %352 ], [ %.067, %349 ], [ %.067, %348 ], [ %.067, %337 ], [ %.067, %327 ], [ %.067, %326 ], [ %.067, %314 ], [ %.067, %304 ], [ %.067, %303 ], [ %.067, %295 ], [ %.067, %291 ], [ %.067, %290 ], [ %.067, %280 ], [ %.067, %270 ], [ %.067, %268 ], [ %.067, %267 ], [ %.067, %265 ], [ %.067, %256 ], [ %.067, %254 ], [ %.067, %244 ], [ %.067, %234 ], [ %.067, %232 ], [ %.067, %228 ], [ %.067, %227 ], [ %.067, %217 ], [ %.067, %207 ], [ %.067, %203 ], [ %.067, %202 ], [ %.neg80, %201 ], [ %.067, %200 ], [ %.067, %199 ], [ %.067, %188 ], [ %.067, %178 ], [ %.067, %177 ], [ %.067, %159 ], [ %.067, %149 ], [ %.067, %147 ], [ %.067, %145 ], [ %.067, %141 ], [ %.067, %140 ], [ %.067, %130 ], [ %.067, %120 ], [ %.067, %116 ], [ 0, %113 ], [ %.067, %112 ], [ %.067, %105 ], [ %.067, %101 ], [ %.067, %100 ], [ %.067, %99 ], [ %.067, %88 ], [ %.067, %78 ], [ %.067, %71 ], [ %.067, %67 ], [ %.067, %66 ], [ %.067, %65 ], [ %.067, %63 ], [ %.067, %49 ], [ %.067, %39 ], [ %.067, %38 ], [ %.067, %34 ], [ %.067, %31 ], [ %.067, %30 ], [ %.067, %20 ], [ %.067, %10 ]
  %.065.be = phi i32 [ %.065, %9 ], [ %.065, %371 ], [ %.065, %368 ], [ %.065, %367 ], [ %.065, %366 ], [ %.065, %365 ], [ %.065, %363 ], [ %359, %355 ], [ 0, %354 ], [ %.065, %352 ], [ %.065, %349 ], [ %.065, %348 ], [ %.065, %337 ], [ %.065, %327 ], [ %.065, %326 ], [ %.065, %314 ], [ %.065, %304 ], [ %.065, %303 ], [ %.065, %295 ], [ %.065, %291 ], [ %.065, %290 ], [ %.065, %280 ], [ %.065, %270 ], [ %.065, %268 ], [ %.065, %267 ], [ %.065, %265 ], [ %.065, %256 ], [ %.065, %254 ], [ %.065, %244 ], [ %.065, %234 ], [ %.065, %232 ], [ %.065, %228 ], [ %.065, %227 ], [ %.065, %217 ], [ %.065, %207 ], [ %.065, %203 ], [ %.065, %202 ], [ %.065, %201 ], [ %.065, %200 ], [ %.065, %199 ], [ %.065, %188 ], [ %.065, %178 ], [ %.065, %177 ], [ %163, %159 ], [ %.065, %149 ], [ %.065, %147 ], [ %.065, %145 ], [ %.065, %141 ], [ %.065, %140 ], [ 0, %130 ], [ %.065, %120 ], [ %.065, %116 ], [ %.065, %113 ], [ %.065, %112 ], [ %.065, %105 ], [ %.065, %101 ], [ %.065, %100 ], [ %.065, %99 ], [ %.065, %88 ], [ %.065, %78 ], [ %.065, %71 ], [ %.065, %67 ], [ %.065, %66 ], [ %.065, %65 ], [ %.065, %63 ], [ %.065, %49 ], [ %.065, %39 ], [ %.065, %38 ], [ %.065, %34 ], [ %.065, %31 ], [ %.065, %30 ], [ %.065, %20 ], [ %.065, %10 ]
  %.063.be = phi i32 [ %.063, %9 ], [ %.063, %371 ], [ %.063, %368 ], [ %.063, %367 ], [ %.063, %366 ], [ %.063, %365 ], [ %364, %363 ], [ %.063, %355 ], [ %.067, %354 ], [ %.063, %352 ], [ %.063, %349 ], [ %.063, %348 ], [ %.063, %337 ], [ %.063, %327 ], [ %.063, %326 ], [ %.063, %314 ], [ %.063, %304 ], [ %.063, %303 ], [ %.063, %295 ], [ %.063, %291 ], [ %.063, %290 ], [ %.063, %280 ], [ %.063, %270 ], [ %.063, %268 ], [ %.063, %267 ], [ %.063, %265 ], [ %.063, %256 ], [ %.063, %254 ], [ %.063, %244 ], [ %.063, %234 ], [ %.063, %232 ], [ %.063, %228 ], [ %.063, %227 ], [ %.063, %217 ], [ %.063, %207 ], [ %.063, %203 ], [ %.063, %202 ], [ %.063, %201 ], [ %.063, %200 ], [ %.063, %199 ], [ %189, %188 ], [ %.063, %178 ], [ %.063, %177 ], [ %.063, %159 ], [ %.063, %149 ], [ %.063, %147 ], [ %.063, %145 ], [ %.063, %141 ], [ %.063, %140 ], [ %.067, %130 ], [ %.063, %120 ], [ %.063, %116 ], [ %.063, %113 ], [ %.063, %112 ], [ %.063, %105 ], [ %.063, %101 ], [ %.063, %100 ], [ %.063, %99 ], [ %.063, %88 ], [ %.063, %78 ], [ %.063, %71 ], [ %.063, %67 ], [ %.063, %66 ], [ %.063, %65 ], [ %.063, %63 ], [ %.063, %49 ], [ %.063, %39 ], [ %.063, %38 ], [ %.063, %34 ], [ %.063, %31 ], [ %.063, %30 ], [ %.063, %20 ], [ %.063, %10 ]
  %.061.be = phi i32 [ %.061, %9 ], [ %.061, %371 ], [ %.061, %368 ], [ %.061, %367 ], [ %.061, %366 ], [ %.061, %365 ], [ %.061, %363 ], [ %.061, %355 ], [ %.061, %354 ], [ %.061, %352 ], [ %.061, %349 ], [ %.061, %348 ], [ %.061, %337 ], [ %.061, %327 ], [ %.061, %326 ], [ %.061, %314 ], [ %.061, %304 ], [ %.061, %303 ], [ %.061, %295 ], [ %.061, %291 ], [ %.061, %290 ], [ %.061, %280 ], [ %.061, %270 ], [ %269, %268 ], [ %.061, %267 ], [ %.061, %265 ], [ %.061, %256 ], [ %.061, %254 ], [ %.061, %244 ], [ %.061, %234 ], [ %.061, %232 ], [ %.061, %228 ], [ %.061, %227 ], [ %.061, %217 ], [ %.061, %207 ], [ %.061, %203 ], [ 0, %202 ], [ %.061, %201 ], [ %.061, %200 ], [ %.061, %199 ], [ %.061, %188 ], [ %.061, %178 ], [ %.061, %177 ], [ %.061, %159 ], [ %.061, %149 ], [ %.061, %147 ], [ %.061, %145 ], [ %.061, %141 ], [ %.061, %140 ], [ %.061, %130 ], [ %.061, %120 ], [ %.061, %116 ], [ %.061, %113 ], [ %.061, %112 ], [ %.061, %105 ], [ %.061, %101 ], [ %.061, %100 ], [ %.061, %99 ], [ %.061, %88 ], [ %.061, %78 ], [ %.061, %71 ], [ %.061, %67 ], [ %.061, %66 ], [ %.061, %65 ], [ %.061, %63 ], [ %.061, %49 ], [ %.061, %39 ], [ %.061, %38 ], [ %.061, %34 ], [ %.061, %31 ], [ %.061, %30 ], [ %.061, %20 ], [ %.061, %10 ]
  %.059.be = phi i32 [ %.059, %9 ], [ %.059, %371 ], [ %.059, %368 ], [ %.059, %367 ], [ %.059, %366 ], [ 0, %365 ], [ %.059, %363 ], [ %.059, %355 ], [ %.059, %354 ], [ %.059, %352 ], [ %.059, %349 ], [ %.059, %348 ], [ %.059, %337 ], [ %.059, %327 ], [ %.059, %326 ], [ %.059, %314 ], [ %.059, %304 ], [ %.059, %303 ], [ %.059, %295 ], [ %.059, %291 ], [ %.059, %290 ], [ %.059, %280 ], [ %.059, %270 ], [ %.059, %268 ], [ %.059, %267 ], [ %.059, %265 ], [ %260, %256 ], [ %.059, %254 ], [ %.059, %244 ], [ %.059, %234 ], [ %.059, %232 ], [ %.059, %228 ], [ %.059, %227 ], [ 0, %217 ], [ %.059, %207 ], [ %.059, %203 ], [ %.059, %202 ], [ %.059, %201 ], [ %.059, %200 ], [ %.059, %199 ], [ %.059, %188 ], [ %.059, %178 ], [ %.059, %177 ], [ %.059, %159 ], [ %.059, %149 ], [ %.059, %147 ], [ %.059, %145 ], [ %.059, %141 ], [ %.059, %140 ], [ %.059, %130 ], [ %.059, %120 ], [ %.059, %116 ], [ %.059, %113 ], [ %.059, %112 ], [ %.059, %105 ], [ %.059, %101 ], [ %.059, %100 ], [ %.059, %99 ], [ %.059, %88 ], [ %.059, %78 ], [ %.059, %71 ], [ %.059, %67 ], [ %.059, %66 ], [ %.059, %65 ], [ %.059, %63 ], [ %.059, %49 ], [ %.059, %39 ], [ %.059, %38 ], [ %.059, %34 ], [ %.059, %31 ], [ %.059, %30 ], [ %.059, %20 ], [ %.059, %10 ]
  %.057.be = phi i32 [ %.057, %9 ], [ %.057, %371 ], [ %.057, %368 ], [ %.057, %367 ], [ %.057, %366 ], [ %.061, %365 ], [ %.057, %363 ], [ %.057, %355 ], [ %.057, %354 ], [ %.057, %352 ], [ %.057, %349 ], [ %.057, %348 ], [ %.057, %337 ], [ %.057, %327 ], [ %.057, %326 ], [ %.057, %314 ], [ %.057, %304 ], [ %.057, %303 ], [ %.057, %295 ], [ %.057, %291 ], [ %.057, %290 ], [ %.057, %280 ], [ %.057, %270 ], [ %.057, %268 ], [ %.057, %267 ], [ %266, %265 ], [ %.057, %256 ], [ %.057, %254 ], [ %.057, %244 ], [ %.057, %234 ], [ %.057, %232 ], [ %.057, %228 ], [ %.057, %227 ], [ %.061, %217 ], [ %.057, %207 ], [ %.057, %203 ], [ %.057, %202 ], [ %.057, %201 ], [ %.057, %200 ], [ %.057, %199 ], [ %.057, %188 ], [ %.057, %178 ], [ %.057, %177 ], [ %.057, %159 ], [ %.057, %149 ], [ %.057, %147 ], [ %.057, %145 ], [ %.057, %141 ], [ %.057, %140 ], [ %.057, %130 ], [ %.057, %120 ], [ %.057, %116 ], [ %.057, %113 ], [ %.057, %112 ], [ %.057, %105 ], [ %.057, %101 ], [ %.057, %100 ], [ %.057, %99 ], [ %.057, %88 ], [ %.057, %78 ], [ %.057, %71 ], [ %.057, %67 ], [ %.057, %66 ], [ %.057, %65 ], [ %.057, %63 ], [ %.057, %49 ], [ %.057, %39 ], [ %.057, %38 ], [ %.057, %34 ], [ %.057, %31 ], [ %.057, %30 ], [ %.057, %20 ], [ %.057, %10 ]
  %.055.be = phi i32 [ %.055, %9 ], [ %.055, %371 ], [ %.055, %368 ], [ 1, %367 ], [ %.055, %366 ], [ %.055, %365 ], [ %.055, %363 ], [ %.055, %355 ], [ %.055, %354 ], [ %.055, %352 ], [ %.055, %349 ], [ %.055, %348 ], [ %.055, %337 ], [ %.055, %327 ], [ %.055, %326 ], [ %.055, %314 ], [ %.055, %304 ], [ %.neg79, %303 ], [ %.055, %295 ], [ %.055, %291 ], [ %.055, %290 ], [ 1, %280 ], [ %.055, %270 ], [ %.055, %268 ], [ %.055, %267 ], [ %.055, %265 ], [ %.055, %256 ], [ %.055, %254 ], [ %.055, %244 ], [ %.055, %234 ], [ %.055, %232 ], [ %.055, %228 ], [ %.055, %227 ], [ %.055, %217 ], [ %.055, %207 ], [ %.055, %203 ], [ %.055, %202 ], [ %.055, %201 ], [ %.055, %200 ], [ %.055, %199 ], [ %.055, %188 ], [ %.055, %178 ], [ %.055, %177 ], [ %.055, %159 ], [ %.055, %149 ], [ %.055, %147 ], [ %.055, %145 ], [ %.055, %141 ], [ %.055, %140 ], [ %.055, %130 ], [ %.055, %120 ], [ %.055, %116 ], [ %.055, %113 ], [ %.055, %112 ], [ %.055, %105 ], [ %.055, %101 ], [ %.055, %100 ], [ %.055, %99 ], [ %.055, %88 ], [ %.055, %78 ], [ %.055, %71 ], [ %.055, %67 ], [ %.055, %66 ], [ %.055, %65 ], [ %.055, %63 ], [ %.055, %49 ], [ %.055, %39 ], [ %.055, %38 ], [ %.055, %34 ], [ %.055, %31 ], [ %.055, %30 ], [ %.055, %20 ], [ %.055, %10 ]
  %.053.be = phi i32 [ %.053, %9 ], [ 1264476946, %371 ], [ -1762254465, %368 ], [ -1998768878, %367 ], [ 502229834, %366 ], [ -1553136872, %365 ], [ -932940332, %363 ], [ 728691753, %355 ], [ 1344627405, %354 ], [ -1806290237, %352 ], [ 121153492, %349 ], [ 1874404643, %348 ], [ %346, %337 ], [ %336, %327 ], [ -1845612062, %326 ], [ %325, %314 ], [ %313, %304 ], [ 465926210, %303 ], [ -1118521698, %295 ], [ %294, %291 ], [ 465926210, %290 ], [ %289, %280 ], [ %279, %270 ], [ -1938017201, %268 ], [ -146485438, %267 ], [ 32730719, %265 ], [ -2009980519, %256 ], [ %255, %254 ], [ %253, %244 ], [ %243, %234 ], [ 1957783214, %232 ], [ %231, %228 ], [ 32730719, %227 ], [ %226, %217 ], [ %216, %207 ], [ %206, %203 ], [ -1938017201, %202 ], [ -325553570, %201 ], [ -927801764, %200 ], [ 2068394404, %199 ], [ %198, %188 ], [ %187, %178 ], [ 1418637710, %177 ], [ %176, %159 ], [ %158, %149 ], [ %148, %147 ], [ -1467353768, %145 ], [ %144, %141 ], [ 2068394404, %140 ], [ %139, %130 ], [ %129, %120 ], [ %119, %116 ], [ -325553570, %113 ], [ 1386549582, %112 ], [ 224242611, %105 ], [ %104, %101 ], [ 1386549582, %100 ], [ 2049856695, %99 ], [ %98, %88 ], [ %87, %78 ], [ 1859837532, %71 ], [ %70, %67 ], [ 2049856695, %66 ], [ -829644651, %65 ], [ %64, %63 ], [ %62, %49 ], [ %48, %39 ], [ 1991004863, %38 ], [ -1274062292, %34 ], [ %33, %31 ], [ 1991004863, %30 ], [ %29, %20 ], [ %19, %10 ]
  %.051.be = phi i1 [ %.051, %9 ], [ %.051, %371 ], [ %.051, %368 ], [ %.051, %367 ], [ %.051, %366 ], [ %.051, %365 ], [ %.051, %363 ], [ %.051, %355 ], [ %.051, %354 ], [ %.051, %352 ], [ %.051, %349 ], [ %.051, %348 ], [ %.051, %337 ], [ %.051, %327 ], [ %.051, %326 ], [ %.051, %314 ], [ %.051, %304 ], [ %.051, %303 ], [ %.051, %295 ], [ %.051, %291 ], [ %.051, %290 ], [ %.051, %280 ], [ %.051, %270 ], [ %.051, %268 ], [ %.051, %267 ], [ %.051, %265 ], [ %.051, %256 ], [ %.051, %254 ], [ %.051, %244 ], [ %.051, %234 ], [ %.051, %232 ], [ %.051, %228 ], [ %.051, %227 ], [ %.051, %217 ], [ %.051, %207 ], [ %.051, %203 ], [ %.051, %202 ], [ %.051, %201 ], [ %.051, %200 ], [ %.051, %199 ], [ %.051, %188 ], [ %.051, %178 ], [ %.051, %177 ], [ %.051, %159 ], [ %.051, %149 ], [ %.051, %147 ], [ %146, %145 ], [ false, %141 ], [ %.051, %140 ], [ %.051, %130 ], [ %.051, %120 ], [ %.051, %116 ], [ %.051, %113 ], [ %.051, %112 ], [ %.051, %105 ], [ %.051, %101 ], [ %.051, %100 ], [ %.051, %99 ], [ %.051, %88 ], [ %.051, %78 ], [ %.051, %71 ], [ %.051, %67 ], [ %.051, %66 ], [ %.051, %65 ], [ %.051, %63 ], [ %.051, %49 ], [ %.051, %39 ], [ %.051, %38 ], [ %.051, %34 ], [ %.051, %31 ], [ %.051, %30 ], [ %.051, %20 ], [ %.051, %10 ]
  %.0.be = phi i1 [ %.0, %9 ], [ %.0, %371 ], [ %.0, %368 ], [ %.0, %367 ], [ %.0, %366 ], [ %.0, %365 ], [ %.0, %363 ], [ %.0, %355 ], [ %.0, %354 ], [ %.0, %352 ], [ %.0, %349 ], [ %.0, %348 ], [ %.0, %337 ], [ %.0, %327 ], [ %.0, %326 ], [ %.0, %314 ], [ %.0, %304 ], [ %.0, %303 ], [ %.0, %295 ], [ %.0, %291 ], [ %.0, %290 ], [ %.0, %280 ], [ %.0, %270 ], [ %.0, %268 ], [ %.0, %267 ], [ %.0, %265 ], [ %.0, %256 ], [ %.0, %254 ], [ %.0, %244 ], [ %.0, %234 ], [ %233, %232 ], [ false, %228 ], [ %.0, %227 ], [ %.0, %217 ], [ %.0, %207 ], [ %.0, %203 ], [ %.0, %202 ], [ %.0, %201 ], [ %.0, %200 ], [ %.0, %199 ], [ %.0, %188 ], [ %.0, %178 ], [ %.0, %177 ], [ %.0, %159 ], [ %.0, %149 ], [ %.0, %147 ], [ %.0, %145 ], [ %.0, %141 ], [ %.0, %140 ], [ %.0, %130 ], [ %.0, %120 ], [ %.0, %116 ], [ %.0, %113 ], [ %.0, %112 ], [ %.0, %105 ], [ %.0, %101 ], [ %.0, %100 ], [ %.0, %99 ], [ %.0, %88 ], [ %.0, %78 ], [ %.0, %71 ], [ %.0, %67 ], [ %.0, %66 ], [ %.0, %65 ], [ %.0, %63 ], [ %.0, %49 ], [ %.0, %39 ], [ %.0, %38 ], [ %.0, %34 ], [ %.0, %31 ], [ %.0, %30 ], [ %.0, %20 ], [ %.0, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @x.1, align 4
  %12 = load i32, i32* @y.2, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 1874404643, i32 1273477725
  br label %.backedge

20:                                               ; preds = %9
  %21 = load i32, i32* @x.1, align 4
  %22 = load i32, i32* @y.2, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 1527121331, i32 1273477725
  br label %.backedge

30:                                               ; preds = %9
  br label %.backedge

31:                                               ; preds = %9
  %32 = icmp slt i32 %.077, 1501500
  %33 = select i1 %32, i32 403682242, i32 -1407955530
  br label %.backedge

34:                                               ; preds = %9
  %35 = sext i32 %.077 to i64
  %36 = getelementptr inbounds [1501500 x i32], [1501500 x i32]* @ih, i64 0, i64 %35
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds [1501500 x i32], [1501500 x i32]* @iw, i64 0, i64 %35
  store i32 0, i32* %37, align 4
  br label %.backedge

38:                                               ; preds = %9
  %.neg82 = add i32 %.077, 1
  br label %.backedge

39:                                               ; preds = %9
  %40 = load i32, i32* @x.1, align 4
  %41 = load i32, i32* @y.2, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 121153492, i32 235293060
  br label %.backedge

49:                                               ; preds = %9
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %50 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %3)
  %51 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %50, i32* nonnull dereferenceable(4) %4)
  %52 = load i32, i32* %3, align 4
  %53 = icmp eq i32 %52, 0
  store i1 %53, i1* %2, align 1
  %54 = load i32, i32* @x.1, align 4
  %55 = load i32, i32* @y.2, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -1197915007, i32 235293060
  br label %.backedge

63:                                               ; preds = %9
  %.0..0..0.49 = load volatile i1, i1* %2, align 1
  %64 = select i1 %.0..0..0.49, i32 1638507033, i32 33040536
  br label %.backedge

65:                                               ; preds = %9
  br label %.backedge

66:                                               ; preds = %9
  br label %.backedge

67:                                               ; preds = %9
  %68 = load i32, i32* %3, align 4
  %69 = icmp slt i32 %.073, %68
  %70 = select i1 %69, i32 1889391310, i32 -302036038
  br label %.backedge

71:                                               ; preds = %9
  %72 = sext i32 %.073 to i64
  %73 = getelementptr inbounds [1520 x i32], [1520 x i32]* %5, i64 0, i64 %72
  %74 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %73)
  %75 = load i32, i32* %73, align 4
  %76 = load i32, i32* %7, align 4
  %77 = add i32 %76, %75
  store i32 %77, i32* %7, align 4
  br label %.backedge

78:                                               ; preds = %9
  %79 = load i32, i32* @x.1, align 4
  %80 = load i32, i32* @y.2, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 -1806290237, i32 -923712264
  br label %.backedge

88:                                               ; preds = %9
  %89 = add i32 %.073, 1
  %90 = load i32, i32* @x.1, align 4
  %91 = load i32, i32* @y.2, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 621658257, i32 -923712264
  br label %.backedge

99:                                               ; preds = %9
  br label %.backedge

100:                                              ; preds = %9
  br label %.backedge

101:                                              ; preds = %9
  %102 = load i32, i32* %4, align 4
  %103 = icmp slt i32 %.071, %102
  %104 = select i1 %103, i32 2068105931, i32 -140414584
  br label %.backedge

105:                                              ; preds = %9
  %106 = sext i32 %.071 to i64
  %107 = getelementptr inbounds [1010 x i32], [1010 x i32]* %6, i64 0, i64 %106
  %108 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %107)
  %109 = load i32, i32* %107, align 4
  %110 = load i32, i32* %8, align 4
  %111 = add i32 %110, %109
  store i32 %111, i32* %8, align 4
  br label %.backedge

112:                                              ; preds = %9
  %.neg81 = add i32 %.071, 1
  br label %.backedge

113:                                              ; preds = %9
  %114 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8)
  %115 = load i32, i32* %114, align 4
  br label %.backedge

116:                                              ; preds = %9
  %117 = load i32, i32* %3, align 4
  %118 = icmp slt i32 %.067, %117
  %119 = select i1 %118, i32 722693365, i32 839449261
  br label %.backedge

120:                                              ; preds = %9
  %121 = load i32, i32* @x.1, align 4
  %122 = load i32, i32* @y.2, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 1344627405, i32 1565331292
  br label %.backedge

130:                                              ; preds = %9
  %131 = load i32, i32* @x.1, align 4
  %132 = load i32, i32* @y.2, align 4
  %133 = add i32 %131, -1
  %134 = mul i32 %133, %131
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %137, %136
  %139 = select i1 %138, i32 -200536617, i32 1565331292
  br label %.backedge

140:                                              ; preds = %9
  br label %.backedge

141:                                              ; preds = %9
  %142 = load i32, i32* %3, align 4
  %143 = icmp slt i32 %.063, %142
  %144 = select i1 %143, i32 -1343324664, i32 -1467353768
  br label %.backedge

145:                                              ; preds = %9
  %146 = icmp sle i32 %.065, %.069
  br label %.backedge

147:                                              ; preds = %9
  %148 = select i1 %.051, i32 1641849105, i32 -1935842503
  br label %.backedge

149:                                              ; preds = %9
  %150 = load i32, i32* @x.1, align 4
  %151 = load i32, i32* @y.2, align 4
  %152 = add i32 %150, -1
  %153 = mul i32 %152, %150
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %156, %155
  %158 = select i1 %157, i32 728691753, i32 -203718815
  br label %.backedge

159:                                              ; preds = %9
  %160 = sext i32 %.063 to i64
  %161 = getelementptr inbounds [1520 x i32], [1520 x i32]* %5, i64 0, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, %.065
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [1501500 x i32], [1501500 x i32]* @ih, i64 0, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = load i32, i32* @x.1, align 4
  %169 = load i32, i32* @y.2, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -2127254745, i32 -203718815
  br label %.backedge

177:                                              ; preds = %9
  br label %.backedge

178:                                              ; preds = %9
  %179 = load i32, i32* @x.1, align 4
  %180 = load i32, i32* @y.2, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 -932940332, i32 1102220933
  br label %.backedge

188:                                              ; preds = %9
  %189 = add i32 %.063, 1
  %190 = load i32, i32* @x.1, align 4
  %191 = load i32, i32* @y.2, align 4
  %192 = add i32 %190, -1
  %193 = mul i32 %192, %190
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %196, %195
  %198 = select i1 %197, i32 511465089, i32 1102220933
  br label %.backedge

199:                                              ; preds = %9
  br label %.backedge

200:                                              ; preds = %9
  br label %.backedge

201:                                              ; preds = %9
  %.neg80 = add i32 %.067, 1
  br label %.backedge

202:                                              ; preds = %9
  br label %.backedge

203:                                              ; preds = %9
  %204 = load i32, i32* %4, align 4
  %205 = icmp slt i32 %.061, %204
  %206 = select i1 %205, i32 687303536, i32 -629694194
  br label %.backedge

207:                                              ; preds = %9
  %208 = load i32, i32* @x.1, align 4
  %209 = load i32, i32* @y.2, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 -1553136872, i32 814824487
  br label %.backedge

217:                                              ; preds = %9
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -960454710, i32 814824487
  br label %.backedge

227:                                              ; preds = %9
  br label %.backedge

228:                                              ; preds = %9
  %229 = load i32, i32* %4, align 4
  %230 = icmp slt i32 %.057, %229
  %231 = select i1 %230, i32 -1893570698, i32 1957783214
  br label %.backedge

232:                                              ; preds = %9
  %233 = icmp sle i32 %.059, %.069
  br label %.backedge

234:                                              ; preds = %9
  store i1 %.0, i1* %1, align 1
  %235 = load i32, i32* @x.1, align 4
  %236 = load i32, i32* @y.2, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 502229834, i32 298408660
  br label %.backedge

244:                                              ; preds = %9
  %245 = load i32, i32* @x.1, align 4
  %246 = load i32, i32* @y.2, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 -1584230407, i32 298408660
  br label %.backedge

254:                                              ; preds = %9
  %.0..0..0.50 = load volatile i1, i1* %1, align 1
  %255 = select i1 %.0..0..0.50, i32 -594305275, i32 1641755891
  br label %.backedge

256:                                              ; preds = %9
  %257 = sext i32 %.057 to i64
  %258 = getelementptr inbounds [1010 x i32], [1010 x i32]* %6, i64 0, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = add i32 %259, %.059
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds [1501500 x i32], [1501500 x i32]* @iw, i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = add i32 %263, 1
  store i32 %264, i32* %262, align 4
  br label %.backedge

265:                                              ; preds = %9
  %266 = add i32 %.057, 1
  br label %.backedge

267:                                              ; preds = %9
  br label %.backedge

268:                                              ; preds = %9
  %269 = add i32 %.061, 1
  br label %.backedge

270:                                              ; preds = %9
  %271 = load i32, i32* @x.1, align 4
  %272 = load i32, i32* @y.2, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 -1998768878, i32 -1595679283
  br label %.backedge

280:                                              ; preds = %9
  %281 = load i32, i32* @x.1, align 4
  %282 = load i32, i32* @y.2, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 205738031, i32 -1595679283
  br label %.backedge

290:                                              ; preds = %9
  br label %.backedge

291:                                              ; preds = %9
  %292 = add i32 %.069, 1
  %293 = icmp slt i32 %.055, %292
  %294 = select i1 %293, i32 -425187348, i32 1229576418
  br label %.backedge

295:                                              ; preds = %9
  %296 = sext i32 %.055 to i64
  %297 = getelementptr inbounds [1501500 x i32], [1501500 x i32]* @ih, i64 0, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds [1501500 x i32], [1501500 x i32]* @iw, i64 0, i64 %296
  %300 = load i32, i32* %299, align 4
  %301 = mul nsw i32 %300, %298
  %302 = add i32 %301, %.075
  br label %.backedge

303:                                              ; preds = %9
  %.neg79 = add i32 %.055, 1
  br label %.backedge

304:                                              ; preds = %9
  %305 = load i32, i32* @x.1, align 4
  %306 = load i32, i32* @y.2, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 -1762254465, i32 -1287323236
  br label %.backedge

314:                                              ; preds = %9
  %315 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.075)
  %316 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %315, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %317 = load i32, i32* @x.1, align 4
  %318 = load i32, i32* @y.2, align 4
  %319 = add i32 %317, -1
  %320 = mul i32 %319, %317
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %323, %322
  %325 = select i1 %324, i32 215952295, i32 -1287323236
  br label %.backedge

326:                                              ; preds = %9
  br label %.backedge

327:                                              ; preds = %9
  %328 = load i32, i32* @x.1, align 4
  %329 = load i32, i32* @y.2, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 1264476946, i32 -1771274663
  br label %.backedge

337:                                              ; preds = %9
  %338 = load i32, i32* @x.1, align 4
  %339 = load i32, i32* @y.2, align 4
  %340 = add i32 %338, -1
  %341 = mul i32 %340, %338
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %344, %343
  %346 = select i1 %345, i32 199827642, i32 -1771274663
  br label %.backedge

347:                                              ; preds = %9
  ret i32 0

348:                                              ; preds = %9
  br label %.backedge

349:                                              ; preds = %9
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %350 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %3)
  %351 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %350, i32* nonnull dereferenceable(4) %4)
  br label %.backedge

352:                                              ; preds = %9
  %353 = add i32 %.073, 1
  br label %.backedge

354:                                              ; preds = %9
  br label %.backedge

355:                                              ; preds = %9
  %356 = sext i32 %.063 to i64
  %357 = getelementptr inbounds [1520 x i32], [1520 x i32]* %5, i64 0, i64 %356
  %358 = load i32, i32* %357, align 4
  %359 = add i32 %358, %.065
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [1501500 x i32], [1501500 x i32]* @ih, i64 0, i64 %360
  %362 = load i32, i32* %361, align 4
  %.neg = add i32 %362, 1
  store i32 %.neg, i32* %361, align 4
  br label %.backedge

363:                                              ; preds = %9
  %364 = add i32 %.063, 1
  br label %.backedge

365:                                              ; preds = %9
  br label %.backedge

366:                                              ; preds = %9
  br label %.backedge

367:                                              ; preds = %9
  br label %.backedge

368:                                              ; preds = %9
  %369 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.075)
  %370 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %369, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

371:                                              ; preds = %9
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.3, align 4
  %8 = load i32, i32* @y.4, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -934070012, i32 -2023013165
  %16 = select i1 %14, i32 -2044774393, i32 -2023013165
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 2072923137, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 2072923137, label %18
    i32 1657619544, label %.outer10.backedge
    i32 -2044774393, label %.outer.backedge
    i32 -934070012, label %21
    i32 -729256493, label %22
    i32 1135310939, label %23
    i32 -2023013165, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 1657619544, i32 -729256493
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 1135310939, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 1135310939, %22 ], [ -2044774393, %24 ], [ %15, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s186589443.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.5, align 4
  %4 = load i32, i32* @y.6, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -858443047, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -858443047, label %11
    i32 -335172542, label %14
    i32 -986283315, label %24
    i32 1401584166, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -335172542, i32 1401584166
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -986283315, i32 1401584166
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -335172542, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
