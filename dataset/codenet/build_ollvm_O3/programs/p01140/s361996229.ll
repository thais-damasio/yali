; ModuleID = 'build_ollvm/programs/p01140/s361996229.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s361996229.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt3maxIiERKT_S2_S2_ = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

@heightTable = local_unnamed_addr global i32* null, align 8
@widthTable = local_unnamed_addr global i32* null, align 8
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline nounwind uwtable
define void @_Z4funcii(i32 %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = zext i32 %0 to i64
  %10 = alloca i32, i64 %9, align 16
  %11 = zext i32 %1 to i64
  %12 = alloca i32, i64 %11, align 16
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %13

13:                                               ; preds = %.backedge, %2
  %.088 = phi i32 [ 0, %2 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %2 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %2 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %2 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %2 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %2 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %2 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %2 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %2 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %2 ], [ %.070.be, %.backedge ]
  %.0 = phi i32 [ -1384542239, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1384542239, label %14
    i32 1522631444, label %24
    i32 359751844, label %35
    i32 -247714773, label %37
    i32 2053709425, label %48
    i32 1057258243, label %50
    i32 -112184399, label %51
    i32 513657805, label %61
    i32 -1904579235, label %72
    i32 1554677414, label %74
    i32 172061442, label %84
    i32 -1522001211, label %104
    i32 -803358657, label %105
    i32 259003891, label %106
    i32 -298904825, label %107
    i32 1397577175, label %109
    i32 71104398, label %110
    i32 859884806, label %120
    i32 -1708034388, label %131
    i32 -1459336959, label %133
    i32 783427226, label %143
    i32 823043764, label %158
    i32 1899580755, label %159
    i32 -776683500, label %161
    i32 -1614495465, label %170
    i32 -1932535092, label %173
    i32 485520137, label %183
    i32 -1089763164, label %213
    i32 -1255744368, label %214
    i32 -1338766800, label %216
    i32 875588490, label %226
    i32 360092309, label %236
    i32 -978082974, label %237
    i32 1551905294, label %239
    i32 -1897002811, label %240
    i32 -915329292, label %242
    i32 990287543, label %243
    i32 -945474866, label %246
    i32 -792371695, label %252
    i32 -147479289, label %253
    i32 -604160598, label %262
    i32 -1118732384, label %265
    i32 -2024944789, label %284
    i32 667348462, label %294
    i32 -1790658011, label %305
    i32 -844404353, label %306
    i32 -857989904, label %307
    i32 -752142456, label %317
    i32 1456241172, label %328
    i32 -1045985516, label %329
    i32 55015681, label %330
    i32 1425550820, label %334
    i32 -801315490, label %344
    i32 -2027786921, label %363
    i32 -735802692, label %364
    i32 1693054331, label %366
    i32 1535517787, label %368
    i32 2119945475, label %369
    i32 707560532, label %370
    i32 490762842, label %382
    i32 -1078101076, label %383
    i32 1952993760, label %389
    i32 -888953187, label %410
    i32 95256825, label %411
    i32 985459675, label %413
    i32 -1121428737, label %414
  ]

.backedge:                                        ; preds = %13, %414, %413, %411, %410, %389, %383, %382, %370, %369, %368, %364, %363, %344, %334, %330, %329, %328, %317, %307, %306, %305, %294, %284, %265, %262, %253, %252, %246, %243, %242, %240, %239, %237, %236, %226, %216, %214, %213, %183, %173, %170, %161, %159, %158, %143, %133, %131, %120, %110, %109, %107, %106, %105, %104, %84, %74, %72, %61, %51, %50, %48, %37, %35, %24, %14
  %.088.be = phi i32 [ %.088, %13 ], [ %.088, %414 ], [ %.088, %413 ], [ %.088, %411 ], [ %.088, %410 ], [ %.088, %389 ], [ %.088, %383 ], [ %.088, %382 ], [ %.088, %370 ], [ %.088, %369 ], [ %.088, %368 ], [ %.088, %364 ], [ %.088, %363 ], [ %.088, %344 ], [ %.088, %334 ], [ %.088, %330 ], [ %.088, %329 ], [ %.088, %328 ], [ %.088, %317 ], [ %.088, %307 ], [ %.088, %306 ], [ %.088, %305 ], [ %.088, %294 ], [ %.088, %284 ], [ %.088, %265 ], [ %.088, %262 ], [ %.088, %253 ], [ %.088, %252 ], [ %.088, %246 ], [ %.088, %243 ], [ %.088, %242 ], [ %.088, %240 ], [ %.088, %239 ], [ %.088, %237 ], [ %.088, %236 ], [ %.088, %226 ], [ %.088, %216 ], [ %.088, %214 ], [ %.088, %213 ], [ %.088, %183 ], [ %.088, %173 ], [ %.088, %170 ], [ %.088, %161 ], [ %.088, %159 ], [ %.088, %158 ], [ %.088, %143 ], [ %.088, %133 ], [ %.088, %131 ], [ %.088, %120 ], [ %.088, %110 ], [ %.088, %109 ], [ %.088, %107 ], [ %.088, %106 ], [ %.088, %105 ], [ %.088, %104 ], [ %.088, %84 ], [ %.088, %74 ], [ %.088, %72 ], [ %.088, %61 ], [ %.088, %51 ], [ %.088, %50 ], [ %49, %48 ], [ %.088, %37 ], [ %.088, %35 ], [ %.088, %24 ], [ %.088, %14 ]
  %.086.be = phi i32 [ %.086, %13 ], [ %.086, %414 ], [ %.086, %413 ], [ %.086, %411 ], [ %.086, %410 ], [ %.086, %389 ], [ %.086, %383 ], [ %.086, %382 ], [ %.086, %370 ], [ %.086, %369 ], [ %.086, %368 ], [ %.086, %364 ], [ %.086, %363 ], [ %.086, %344 ], [ %.086, %334 ], [ %.086, %330 ], [ %.086, %329 ], [ %.086, %328 ], [ %.086, %317 ], [ %.086, %307 ], [ %.086, %306 ], [ %.086, %305 ], [ %.086, %294 ], [ %.086, %284 ], [ %.086, %265 ], [ %.086, %262 ], [ %.086, %253 ], [ %.086, %252 ], [ %.086, %246 ], [ %.086, %243 ], [ %.086, %242 ], [ %.086, %240 ], [ %.086, %239 ], [ %.086, %237 ], [ %.086, %236 ], [ %.086, %226 ], [ %.086, %216 ], [ %.086, %214 ], [ %.086, %213 ], [ %.086, %183 ], [ %.086, %173 ], [ %.086, %170 ], [ %.086, %161 ], [ %.086, %159 ], [ %.086, %158 ], [ %.086, %143 ], [ %.086, %133 ], [ %.086, %131 ], [ %.086, %120 ], [ %.086, %110 ], [ %.086, %109 ], [ %.086, %107 ], [ %.086, %106 ], [ %.neg95, %105 ], [ %.086, %104 ], [ %.086, %84 ], [ %.086, %74 ], [ %.086, %72 ], [ %.086, %61 ], [ %.086, %51 ], [ 0, %50 ], [ %.086, %48 ], [ %.086, %37 ], [ %.086, %35 ], [ %.086, %24 ], [ %.086, %14 ]
  %.084.be = phi i32 [ %.084, %13 ], [ %.084, %414 ], [ %.084, %413 ], [ %.084, %411 ], [ %.084, %410 ], [ %.084, %389 ], [ %.084, %383 ], [ %.084, %382 ], [ %.084, %370 ], [ %.084, %369 ], [ %.084, %368 ], [ %.084, %364 ], [ %.084, %363 ], [ %.084, %344 ], [ %.084, %334 ], [ %.084, %330 ], [ %.084, %329 ], [ %.084, %328 ], [ %.084, %317 ], [ %.084, %307 ], [ %.084, %306 ], [ %.084, %305 ], [ %.084, %294 ], [ %.084, %284 ], [ %.084, %265 ], [ %.084, %262 ], [ %.084, %253 ], [ %.084, %252 ], [ %.084, %246 ], [ %.084, %243 ], [ %.084, %242 ], [ %.084, %240 ], [ %.084, %239 ], [ %238, %237 ], [ %.084, %236 ], [ %.084, %226 ], [ %.084, %216 ], [ %.084, %214 ], [ %.084, %213 ], [ %.084, %183 ], [ %.084, %173 ], [ %.084, %170 ], [ %.084, %161 ], [ %.084, %159 ], [ %.084, %158 ], [ %.084, %143 ], [ %.084, %133 ], [ %.084, %131 ], [ %.084, %120 ], [ %.084, %110 ], [ %.084, %109 ], [ %.084, %107 ], [ 2, %106 ], [ %.084, %105 ], [ %.084, %104 ], [ %.084, %84 ], [ %.084, %74 ], [ %.084, %72 ], [ %.084, %61 ], [ %.084, %51 ], [ %.084, %50 ], [ %.084, %48 ], [ %.084, %37 ], [ %.084, %35 ], [ %.084, %24 ], [ %.084, %14 ]
  %.082.be = phi i32 [ %.082, %13 ], [ %.082, %414 ], [ %.082, %413 ], [ %.082, %411 ], [ %.082, %410 ], [ %.082, %389 ], [ %.082, %383 ], [ %.082, %382 ], [ %.082, %370 ], [ %.082, %369 ], [ %.082, %368 ], [ %.082, %364 ], [ %.082, %363 ], [ %.082, %344 ], [ %.082, %334 ], [ %.082, %330 ], [ %.082, %329 ], [ %.082, %328 ], [ %.082, %317 ], [ %.082, %307 ], [ %.082, %306 ], [ %.082, %305 ], [ %.082, %294 ], [ %.082, %284 ], [ %.082, %265 ], [ %.082, %262 ], [ %.082, %253 ], [ %.082, %252 ], [ %.082, %246 ], [ %.082, %243 ], [ %.082, %242 ], [ %.082, %240 ], [ %.082, %239 ], [ %.082, %237 ], [ %.082, %236 ], [ %.082, %226 ], [ %.082, %216 ], [ %.082, %214 ], [ %.082, %213 ], [ %.082, %183 ], [ %.082, %173 ], [ %.082, %170 ], [ %.082, %161 ], [ %160, %159 ], [ %.082, %158 ], [ %.082, %143 ], [ %.082, %133 ], [ %.082, %131 ], [ %.082, %120 ], [ %.082, %110 ], [ 0, %109 ], [ %.082, %107 ], [ %.082, %106 ], [ %.082, %105 ], [ %.082, %104 ], [ %.082, %84 ], [ %.082, %74 ], [ %.082, %72 ], [ %.082, %61 ], [ %.082, %51 ], [ %.082, %50 ], [ %.082, %48 ], [ %.082, %37 ], [ %.082, %35 ], [ %.082, %24 ], [ %.082, %14 ]
  %.080.be = phi i32 [ %.080, %13 ], [ %.080, %414 ], [ %.080, %413 ], [ %.080, %411 ], [ %.080, %410 ], [ %.080, %389 ], [ %.080, %383 ], [ %.080, %382 ], [ %.080, %370 ], [ %.080, %369 ], [ %.080, %368 ], [ %.080, %364 ], [ %.080, %363 ], [ %.080, %344 ], [ %.080, %334 ], [ %.080, %330 ], [ %.080, %329 ], [ %.080, %328 ], [ %.080, %317 ], [ %.080, %307 ], [ %.080, %306 ], [ %.080, %305 ], [ %.080, %294 ], [ %.080, %284 ], [ %.080, %265 ], [ %.080, %262 ], [ %.080, %253 ], [ %.080, %252 ], [ %.080, %246 ], [ %.080, %243 ], [ %.080, %242 ], [ %.080, %240 ], [ %.080, %239 ], [ %.080, %237 ], [ %.080, %236 ], [ %.080, %226 ], [ %.080, %216 ], [ %215, %214 ], [ %.080, %213 ], [ %.080, %183 ], [ %.080, %173 ], [ %.080, %170 ], [ 1, %161 ], [ %.080, %159 ], [ %.080, %158 ], [ %.080, %143 ], [ %.080, %133 ], [ %.080, %131 ], [ %.080, %120 ], [ %.080, %110 ], [ %.080, %109 ], [ %.080, %107 ], [ %.080, %106 ], [ %.080, %105 ], [ %.080, %104 ], [ %.080, %84 ], [ %.080, %74 ], [ %.080, %72 ], [ %.080, %61 ], [ %.080, %51 ], [ %.080, %50 ], [ %.080, %48 ], [ %.080, %37 ], [ %.080, %35 ], [ %.080, %24 ], [ %.080, %14 ]
  %.078.be = phi i32 [ %.078, %13 ], [ %.078, %414 ], [ %.neg, %413 ], [ %.078, %411 ], [ %.078, %410 ], [ %.078, %389 ], [ %.078, %383 ], [ %.078, %382 ], [ %.078, %370 ], [ %.078, %369 ], [ %.078, %368 ], [ %.078, %364 ], [ %.078, %363 ], [ %.078, %344 ], [ %.078, %334 ], [ %.078, %330 ], [ %.078, %329 ], [ %.078, %328 ], [ %318, %317 ], [ %.078, %307 ], [ %.078, %306 ], [ %.078, %305 ], [ %.078, %294 ], [ %.078, %284 ], [ %.078, %265 ], [ %.078, %262 ], [ %.078, %253 ], [ %.078, %252 ], [ %.078, %246 ], [ %.078, %243 ], [ %.078, %242 ], [ %.078, %240 ], [ 2, %239 ], [ %.078, %237 ], [ %.078, %236 ], [ %.078, %226 ], [ %.078, %216 ], [ %.078, %214 ], [ %.078, %213 ], [ %.078, %183 ], [ %.078, %173 ], [ %.078, %170 ], [ %.078, %161 ], [ %.078, %159 ], [ %.078, %158 ], [ %.078, %143 ], [ %.078, %133 ], [ %.078, %131 ], [ %.078, %120 ], [ %.078, %110 ], [ %.078, %109 ], [ %.078, %107 ], [ %.078, %106 ], [ %.078, %105 ], [ %.078, %104 ], [ %.078, %84 ], [ %.078, %74 ], [ %.078, %72 ], [ %.078, %61 ], [ %.078, %51 ], [ %.078, %50 ], [ %.078, %48 ], [ %.078, %37 ], [ %.078, %35 ], [ %.078, %24 ], [ %.078, %14 ]
  %.076.be = phi i32 [ %.076, %13 ], [ %.076, %414 ], [ %.076, %413 ], [ %.076, %411 ], [ %.076, %410 ], [ %.076, %389 ], [ %.076, %383 ], [ %.076, %382 ], [ %.076, %370 ], [ %.076, %369 ], [ %.076, %368 ], [ %.076, %364 ], [ %.076, %363 ], [ %.076, %344 ], [ %.076, %334 ], [ %.076, %330 ], [ %.076, %329 ], [ %.076, %328 ], [ %.076, %317 ], [ %.076, %307 ], [ %.076, %306 ], [ %.076, %305 ], [ %.076, %294 ], [ %.076, %284 ], [ %.076, %265 ], [ %.076, %262 ], [ %.076, %253 ], [ %.neg91, %252 ], [ %.076, %246 ], [ %.076, %243 ], [ 0, %242 ], [ %.076, %240 ], [ %.076, %239 ], [ %.076, %237 ], [ %.076, %236 ], [ %.076, %226 ], [ %.076, %216 ], [ %.076, %214 ], [ %.076, %213 ], [ %.076, %183 ], [ %.076, %173 ], [ %.076, %170 ], [ %.076, %161 ], [ %.076, %159 ], [ %.076, %158 ], [ %.076, %143 ], [ %.076, %133 ], [ %.076, %131 ], [ %.076, %120 ], [ %.076, %110 ], [ %.076, %109 ], [ %.076, %107 ], [ %.076, %106 ], [ %.076, %105 ], [ %.076, %104 ], [ %.076, %84 ], [ %.076, %74 ], [ %.076, %72 ], [ %.076, %61 ], [ %.076, %51 ], [ %.076, %50 ], [ %.076, %48 ], [ %.076, %37 ], [ %.076, %35 ], [ %.076, %24 ], [ %.076, %14 ]
  %.074.be = phi i32 [ %.074, %13 ], [ %.074, %414 ], [ %.074, %413 ], [ %412, %411 ], [ %.074, %410 ], [ %.074, %389 ], [ %.074, %383 ], [ %.074, %382 ], [ %.074, %370 ], [ %.074, %369 ], [ %.074, %368 ], [ %.074, %364 ], [ %.074, %363 ], [ %.074, %344 ], [ %.074, %334 ], [ %.074, %330 ], [ %.074, %329 ], [ %.074, %328 ], [ %.074, %317 ], [ %.074, %307 ], [ %.074, %306 ], [ %.074, %305 ], [ %295, %294 ], [ %.074, %284 ], [ %.074, %265 ], [ %.074, %262 ], [ 1, %253 ], [ %.074, %252 ], [ %.074, %246 ], [ %.074, %243 ], [ %.074, %242 ], [ %.074, %240 ], [ %.074, %239 ], [ %.074, %237 ], [ %.074, %236 ], [ %.074, %226 ], [ %.074, %216 ], [ %.074, %214 ], [ %.074, %213 ], [ %.074, %183 ], [ %.074, %173 ], [ %.074, %170 ], [ %.074, %161 ], [ %.074, %159 ], [ %.074, %158 ], [ %.074, %143 ], [ %.074, %133 ], [ %.074, %131 ], [ %.074, %120 ], [ %.074, %110 ], [ %.074, %109 ], [ %.074, %107 ], [ %.074, %106 ], [ %.074, %105 ], [ %.074, %104 ], [ %.074, %84 ], [ %.074, %74 ], [ %.074, %72 ], [ %.074, %61 ], [ %.074, %51 ], [ %.074, %50 ], [ %.074, %48 ], [ %.074, %37 ], [ %.074, %35 ], [ %.074, %24 ], [ %.074, %14 ]
  %.072.be = phi i32 [ %.072, %13 ], [ %423, %414 ], [ %.072, %413 ], [ %.072, %411 ], [ %.072, %410 ], [ %.072, %389 ], [ %.072, %383 ], [ %.072, %382 ], [ %.072, %370 ], [ %.072, %369 ], [ %.072, %368 ], [ %.072, %364 ], [ %.072, %363 ], [ %353, %344 ], [ %.072, %334 ], [ %.072, %330 ], [ 0, %329 ], [ %.072, %328 ], [ %.072, %317 ], [ %.072, %307 ], [ %.072, %306 ], [ %.072, %305 ], [ %.072, %294 ], [ %.072, %284 ], [ %.072, %265 ], [ %.072, %262 ], [ %.072, %253 ], [ %.072, %252 ], [ %.072, %246 ], [ %.072, %243 ], [ %.072, %242 ], [ %.072, %240 ], [ %.072, %239 ], [ %.072, %237 ], [ %.072, %236 ], [ %.072, %226 ], [ %.072, %216 ], [ %.072, %214 ], [ %.072, %213 ], [ %.072, %183 ], [ %.072, %173 ], [ %.072, %170 ], [ %.072, %161 ], [ %.072, %159 ], [ %.072, %158 ], [ %.072, %143 ], [ %.072, %133 ], [ %.072, %131 ], [ %.072, %120 ], [ %.072, %110 ], [ %.072, %109 ], [ %.072, %107 ], [ %.072, %106 ], [ %.072, %105 ], [ %.072, %104 ], [ %.072, %84 ], [ %.072, %74 ], [ %.072, %72 ], [ %.072, %61 ], [ %.072, %51 ], [ %.072, %50 ], [ %.072, %48 ], [ %.072, %37 ], [ %.072, %35 ], [ %.072, %24 ], [ %.072, %14 ]
  %.070.be = phi i32 [ %.070, %13 ], [ %.070, %414 ], [ %.070, %413 ], [ %.070, %411 ], [ %.070, %410 ], [ %.070, %389 ], [ %.070, %383 ], [ %.070, %382 ], [ %.070, %370 ], [ %.070, %369 ], [ %.070, %368 ], [ %365, %364 ], [ %.070, %363 ], [ %.070, %344 ], [ %.070, %334 ], [ %.070, %330 ], [ 1, %329 ], [ %.070, %328 ], [ %.070, %317 ], [ %.070, %307 ], [ %.070, %306 ], [ %.070, %305 ], [ %.070, %294 ], [ %.070, %284 ], [ %.070, %265 ], [ %.070, %262 ], [ %.070, %253 ], [ %.070, %252 ], [ %.070, %246 ], [ %.070, %243 ], [ %.070, %242 ], [ %.070, %240 ], [ %.070, %239 ], [ %.070, %237 ], [ %.070, %236 ], [ %.070, %226 ], [ %.070, %216 ], [ %.070, %214 ], [ %.070, %213 ], [ %.070, %183 ], [ %.070, %173 ], [ %.070, %170 ], [ %.070, %161 ], [ %.070, %159 ], [ %.070, %158 ], [ %.070, %143 ], [ %.070, %133 ], [ %.070, %131 ], [ %.070, %120 ], [ %.070, %110 ], [ %.070, %109 ], [ %.070, %107 ], [ %.070, %106 ], [ %.070, %105 ], [ %.070, %104 ], [ %.070, %84 ], [ %.070, %74 ], [ %.070, %72 ], [ %.070, %61 ], [ %.070, %51 ], [ %.070, %50 ], [ %.070, %48 ], [ %.070, %37 ], [ %.070, %35 ], [ %.070, %24 ], [ %.070, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ -801315490, %414 ], [ -752142456, %413 ], [ 667348462, %411 ], [ 875588490, %410 ], [ 485520137, %389 ], [ 783427226, %383 ], [ 859884806, %382 ], [ 172061442, %370 ], [ 513657805, %369 ], [ 1522631444, %368 ], [ 55015681, %364 ], [ -735802692, %363 ], [ %362, %344 ], [ %343, %334 ], [ %333, %330 ], [ 55015681, %329 ], [ -1897002811, %328 ], [ %327, %317 ], [ %316, %307 ], [ -857989904, %306 ], [ -604160598, %305 ], [ %304, %294 ], [ %293, %284 ], [ -2024944789, %265 ], [ %264, %262 ], [ -604160598, %253 ], [ 990287543, %252 ], [ -792371695, %246 ], [ %245, %243 ], [ 990287543, %242 ], [ %241, %240 ], [ -1897002811, %239 ], [ -298904825, %237 ], [ -978082974, %236 ], [ %235, %226 ], [ %225, %216 ], [ -1614495465, %214 ], [ -1255744368, %213 ], [ %212, %183 ], [ %182, %173 ], [ %172, %170 ], [ -1614495465, %161 ], [ 71104398, %159 ], [ 1899580755, %158 ], [ %157, %143 ], [ %142, %133 ], [ %132, %131 ], [ %130, %120 ], [ %119, %110 ], [ 71104398, %109 ], [ %108, %107 ], [ -298904825, %106 ], [ -112184399, %105 ], [ -803358657, %104 ], [ %103, %84 ], [ %83, %74 ], [ %73, %72 ], [ %71, %61 ], [ %60, %51 ], [ -112184399, %50 ], [ -1384542239, %48 ], [ 2053709425, %37 ], [ %36, %35 ], [ %34, %24 ], [ %23, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = load i32, i32* @x, align 4
  %16 = load i32, i32* @y, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1522631444, i32 1535517787
  br label %.backedge

24:                                               ; preds = %13
  %25 = icmp slt i32 %.088, %0
  store i1 %25, i1* %5, align 1
  %26 = load i32, i32* @x, align 4
  %27 = load i32, i32* @y, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 359751844, i32 1535517787
  br label %.backedge

35:                                               ; preds = %13
  %.0..0..0.67 = load volatile i1, i1* %5, align 1
  %36 = select i1 %.0..0..0.67, i32 -247714773, i32 1057258243
  br label %.backedge

37:                                               ; preds = %13
  %38 = sext i32 %.088 to i64
  %39 = getelementptr inbounds i32, i32* %10, i64 %38
  %40 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %39)
  %41 = load i32*, i32** @heightTable, align 8
  %42 = load i32, i32* %39, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %.neg97 = add i32 %45, 1
  store i32 %.neg97, i32* %44, align 4
  %46 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %39)
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %6, align 4
  br label %.backedge

48:                                               ; preds = %13
  %49 = add i32 %.088, 1
  br label %.backedge

50:                                               ; preds = %13
  br label %.backedge

51:                                               ; preds = %13
  %52 = load i32, i32* @x, align 4
  %53 = load i32, i32* @y, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 513657805, i32 2119945475
  br label %.backedge

61:                                               ; preds = %13
  %62 = icmp slt i32 %.086, %1
  store i1 %62, i1* %4, align 1
  %63 = load i32, i32* @x, align 4
  %64 = load i32, i32* @y, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -1904579235, i32 2119945475
  br label %.backedge

72:                                               ; preds = %13
  %.0..0..0.68 = load volatile i1, i1* %4, align 1
  %73 = select i1 %.0..0..0.68, i32 1554677414, i32 259003891
  br label %.backedge

74:                                               ; preds = %13
  %75 = load i32, i32* @x, align 4
  %76 = load i32, i32* @y, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 172061442, i32 707560532
  br label %.backedge

84:                                               ; preds = %13
  %85 = sext i32 %.086 to i64
  %86 = getelementptr inbounds i32, i32* %12, i64 %85
  %87 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %86)
  %88 = load i32*, i32** @widthTable, align 8
  %89 = load i32, i32* %86, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  %92 = load i32, i32* %91, align 4
  %.neg96 = add i32 %92, 1
  store i32 %.neg96, i32* %91, align 4
  %93 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %86)
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %7, align 4
  %95 = load i32, i32* @x, align 4
  %96 = load i32, i32* @y, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -1522001211, i32 707560532
  br label %.backedge

104:                                              ; preds = %13
  br label %.backedge

105:                                              ; preds = %13
  %.neg95 = add i32 %.086, 1
  br label %.backedge

106:                                              ; preds = %13
  br label %.backedge

107:                                              ; preds = %13
  %.not94 = icmp sgt i32 %.084, %0
  %108 = select i1 %.not94, i32 1551905294, i32 1397577175
  br label %.backedge

109:                                              ; preds = %13
  store i32 0, i32* %8, align 4
  br label %.backedge

110:                                              ; preds = %13
  %111 = load i32, i32* @x, align 4
  %112 = load i32, i32* @y, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 859884806, i32 490762842
  br label %.backedge

120:                                              ; preds = %13
  %121 = icmp slt i32 %.082, %.084
  store i1 %121, i1* %3, align 1
  %122 = load i32, i32* @x, align 4
  %123 = load i32, i32* @y, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 -1708034388, i32 490762842
  br label %.backedge

131:                                              ; preds = %13
  %.0..0..0.69 = load volatile i1, i1* %3, align 1
  %132 = select i1 %.0..0..0.69, i32 -1459336959, i32 -776683500
  br label %.backedge

133:                                              ; preds = %13
  %134 = load i32, i32* @x, align 4
  %135 = load i32, i32* @y, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 783427226, i32 -1078101076
  br label %.backedge

143:                                              ; preds = %13
  %144 = sext i32 %.082 to i64
  %145 = getelementptr inbounds i32, i32* %10, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = load i32, i32* %8, align 4
  %148 = add i32 %147, %146
  store i32 %148, i32* %8, align 4
  %149 = load i32, i32* @x, align 4
  %150 = load i32, i32* @y, align 4
  %151 = add i32 %149, -1
  %152 = mul i32 %151, %149
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %155, %154
  %157 = select i1 %156, i32 823043764, i32 -1078101076
  br label %.backedge

158:                                              ; preds = %13
  br label %.backedge

159:                                              ; preds = %13
  %160 = add i32 %.082, 1
  br label %.backedge

161:                                              ; preds = %13
  %162 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %8)
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %6, align 4
  %164 = load i32*, i32** @heightTable, align 8
  %165 = load i32, i32* %8, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i32, i32* %164, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %167, align 4
  br label %.backedge

170:                                              ; preds = %13
  %171 = sub i32 %0, %.084
  %.not93 = icmp sgt i32 %.080, %171
  %172 = select i1 %.not93, i32 -1338766800, i32 -1932535092
  br label %.backedge

173:                                              ; preds = %13
  %174 = load i32, i32* @x, align 4
  %175 = load i32, i32* @y, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 485520137, i32 1952993760
  br label %.backedge

183:                                              ; preds = %13
  %184 = add i32 %.080, -1
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i32, i32* %10, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = load i32, i32* %8, align 4
  %189 = sub i32 28904421, %187
  %190 = add i32 %189, %188
  %191 = add i32 %190, -28904421
  %192 = add i32 %184, %.084
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i32, i32* %10, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = add i32 %191, %195
  store i32 %196, i32* %8, align 4
  %197 = load i32*, i32** @heightTable, align 8
  %198 = sext i32 %196 to i64
  %199 = getelementptr inbounds i32, i32* %197, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %199, align 4
  %202 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %8)
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %6, align 4
  %204 = load i32, i32* @x, align 4
  %205 = load i32, i32* @y, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 -1089763164, i32 1952993760
  br label %.backedge

213:                                              ; preds = %13
  br label %.backedge

214:                                              ; preds = %13
  %215 = add i32 %.080, 1
  br label %.backedge

216:                                              ; preds = %13
  %217 = load i32, i32* @x, align 4
  %218 = load i32, i32* @y, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 875588490, i32 -888953187
  br label %.backedge

226:                                              ; preds = %13
  %227 = load i32, i32* @x, align 4
  %228 = load i32, i32* @y, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 360092309, i32 -888953187
  br label %.backedge

236:                                              ; preds = %13
  br label %.backedge

237:                                              ; preds = %13
  %238 = add i32 %.084, 1
  br label %.backedge

239:                                              ; preds = %13
  br label %.backedge

240:                                              ; preds = %13
  %.not92 = icmp sgt i32 %.078, %1
  %241 = select i1 %.not92, i32 -1045985516, i32 -915329292
  br label %.backedge

242:                                              ; preds = %13
  store i32 0, i32* %8, align 4
  br label %.backedge

243:                                              ; preds = %13
  %244 = icmp slt i32 %.076, %.078
  %245 = select i1 %244, i32 -945474866, i32 -147479289
  br label %.backedge

246:                                              ; preds = %13
  %247 = sext i32 %.076 to i64
  %248 = getelementptr inbounds i32, i32* %12, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = load i32, i32* %8, align 4
  %251 = add i32 %250, %249
  store i32 %251, i32* %8, align 4
  br label %.backedge

252:                                              ; preds = %13
  %.neg91 = add i32 %.076, 1
  br label %.backedge

253:                                              ; preds = %13
  %254 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8)
  %255 = load i32, i32* %254, align 4
  store i32 %255, i32* %7, align 4
  %256 = load i32*, i32** @widthTable, align 8
  %257 = load i32, i32* %8, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds i32, i32* %256, i64 %258
  %260 = load i32, i32* %259, align 4
  %261 = add i32 %260, 1
  store i32 %261, i32* %259, align 4
  br label %.backedge

262:                                              ; preds = %13
  %263 = sub i32 %1, %.078
  %.not90 = icmp sgt i32 %.074, %263
  %264 = select i1 %.not90, i32 -844404353, i32 -1118732384
  br label %.backedge

265:                                              ; preds = %13
  %266 = add i32 %.074, -1
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %12, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = load i32, i32* %8, align 4
  %271 = sub i32 %270, %269
  %272 = add i32 %266, %.078
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i32, i32* %12, i64 %273
  %275 = load i32, i32* %274, align 4
  %276 = add i32 %275, %271
  store i32 %276, i32* %8, align 4
  %277 = load i32*, i32** @widthTable, align 8
  %278 = sext i32 %276 to i64
  %279 = getelementptr inbounds i32, i32* %277, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = add i32 %280, 1
  store i32 %281, i32* %279, align 4
  %282 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8)
  %283 = load i32, i32* %282, align 4
  store i32 %283, i32* %7, align 4
  br label %.backedge

284:                                              ; preds = %13
  %285 = load i32, i32* @x, align 4
  %286 = load i32, i32* @y, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 667348462, i32 95256825
  br label %.backedge

294:                                              ; preds = %13
  %295 = add i32 %.074, 1
  %296 = load i32, i32* @x, align 4
  %297 = load i32, i32* @y, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 -1790658011, i32 95256825
  br label %.backedge

305:                                              ; preds = %13
  br label %.backedge

306:                                              ; preds = %13
  br label %.backedge

307:                                              ; preds = %13
  %308 = load i32, i32* @x, align 4
  %309 = load i32, i32* @y, align 4
  %310 = add i32 %308, -1
  %311 = mul i32 %310, %308
  %312 = and i32 %311, 1
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %314, %313
  %316 = select i1 %315, i32 -752142456, i32 985459675
  br label %.backedge

317:                                              ; preds = %13
  %318 = add i32 %.078, 1
  %319 = load i32, i32* @x, align 4
  %320 = load i32, i32* @y, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 1456241172, i32 985459675
  br label %.backedge

328:                                              ; preds = %13
  br label %.backedge

329:                                              ; preds = %13
  br label %.backedge

330:                                              ; preds = %13
  %331 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7)
  %332 = load i32, i32* %331, align 4
  %.not = icmp sgt i32 %.070, %332
  %333 = select i1 %.not, i32 1693054331, i32 1425550820
  br label %.backedge

334:                                              ; preds = %13
  %335 = load i32, i32* @x, align 4
  %336 = load i32, i32* @y, align 4
  %337 = add i32 %335, -1
  %338 = mul i32 %337, %335
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %341, %340
  %343 = select i1 %342, i32 -801315490, i32 -1121428737
  br label %.backedge

344:                                              ; preds = %13
  %345 = load i32*, i32** @heightTable, align 8
  %346 = sext i32 %.070 to i64
  %347 = getelementptr inbounds i32, i32* %345, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = load i32*, i32** @widthTable, align 8
  %350 = getelementptr inbounds i32, i32* %349, i64 %346
  %351 = load i32, i32* %350, align 4
  %352 = mul nsw i32 %351, %348
  %353 = add i32 %352, %.072
  %354 = load i32, i32* @x, align 4
  %355 = load i32, i32* @y, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 -2027786921, i32 -1121428737
  br label %.backedge

363:                                              ; preds = %13
  br label %.backedge

364:                                              ; preds = %13
  %365 = add i32 %.070, 1
  br label %.backedge

366:                                              ; preds = %13
  %367 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %.072)
  ret void

368:                                              ; preds = %13
  br label %.backedge

369:                                              ; preds = %13
  br label %.backedge

370:                                              ; preds = %13
  %371 = sext i32 %.086 to i64
  %372 = getelementptr inbounds i32, i32* %12, i64 %371
  %373 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %372)
  %374 = load i32*, i32** @widthTable, align 8
  %375 = load i32, i32* %372, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds i32, i32* %374, i64 %376
  %378 = load i32, i32* %377, align 4
  %379 = add i32 %378, 1
  store i32 %379, i32* %377, align 4
  %380 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %372)
  %381 = load i32, i32* %380, align 4
  store i32 %381, i32* %7, align 4
  br label %.backedge

382:                                              ; preds = %13
  br label %.backedge

383:                                              ; preds = %13
  %384 = sext i32 %.082 to i64
  %385 = getelementptr inbounds i32, i32* %10, i64 %384
  %386 = load i32, i32* %385, align 4
  %387 = load i32, i32* %8, align 4
  %388 = add i32 %387, %386
  store i32 %388, i32* %8, align 4
  br label %.backedge

389:                                              ; preds = %13
  %390 = add i32 %.080, -1
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i32, i32* %10, i64 %391
  %393 = load i32, i32* %392, align 4
  %394 = load i32, i32* %8, align 4
  %395 = sub i32 577890159, %393
  %396 = add i32 %395, %394
  %397 = add i32 %396, -577890159
  %398 = add i32 %390, %.084
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i32, i32* %10, i64 %399
  %401 = load i32, i32* %400, align 4
  %402 = add i32 %397, %401
  store i32 %402, i32* %8, align 4
  %403 = load i32*, i32** @heightTable, align 8
  %404 = sext i32 %402 to i64
  %405 = getelementptr inbounds i32, i32* %403, i64 %404
  %406 = load i32, i32* %405, align 4
  %407 = add i32 %406, 1
  store i32 %407, i32* %405, align 4
  %408 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %8)
  %409 = load i32, i32* %408, align 4
  store i32 %409, i32* %6, align 4
  br label %.backedge

410:                                              ; preds = %13
  br label %.backedge

411:                                              ; preds = %13
  %412 = add i32 %.074, 1
  br label %.backedge

413:                                              ; preds = %13
  %.neg = add i32 %.078, 1
  br label %.backedge

414:                                              ; preds = %13
  %415 = load i32*, i32** @heightTable, align 8
  %416 = sext i32 %.070 to i64
  %417 = getelementptr inbounds i32, i32* %415, i64 %416
  %418 = load i32, i32* %417, align 4
  %419 = load i32*, i32** @widthTable, align 8
  %420 = getelementptr inbounds i32, i32* %419, i64 %416
  %421 = load i32, i32* %420, align 4
  %422 = mul nsw i32 %421, %418
  %423 = add i32 %422, %.072
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.3, align 4
  %9 = load i32, i32* @y.4, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 479736894, i32 -1557331381
  %17 = select i1 %15, i32 1054075726, i32 -1557331381
  %18 = select i1 %15, i32 -781622116, i32 2145104646
  %19 = select i1 %15, i32 310312156, i32 2145104646
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i32* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i32* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ -472622091, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -472622091, label %21
    i32 -515241178, label %24
    i32 310312156, label %25
    i32 -781622116, label %26
    i32 -1143433653, label %27
    i32 -1268620820, label %28
    i32 1054075726, label %29
    i32 479736894, label %30
    i32 2145104646, label %31
    i32 -1557331381, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i32* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i32* [ %.010, %20 ], [ %.010, %32 ], [ %1, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %0, %27 ], [ %.010, %26 ], [ %1, %25 ], [ %.010, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 1054075726, %32 ], [ 310312156, %31 ], [ %16, %29 ], [ %17, %28 ], [ -1268620820, %27 ], [ -1268620820, %26 ], [ %18, %25 ], [ %19, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i32, i32* %5, align 4
  %.0..0..0.8 = load volatile i32, i32* %4, align 4
  %22 = icmp slt i32 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 -515241178, i32 -1143433653
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i32* %.01013, i32** %3, align 8
  %.0..0..0.9 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.5, align 4
  %9 = load i32, i32* @y.6, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -635877046, i32 -1225277874
  %17 = select i1 %15, i32 225423358, i32 -1225277874
  %18 = select i1 %15, i32 -452548006, i32 66992444
  %19 = select i1 %15, i32 9778703, i32 66992444
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i32* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i32* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ 1012610502, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1012610502, label %21
    i32 -154383280, label %24
    i32 2096240117, label %25
    i32 9778703, label %26
    i32 -452548006, label %27
    i32 899387934, label %28
    i32 225423358, label %29
    i32 -635877046, label %30
    i32 66992444, label %31
    i32 -1225277874, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i32* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i32* [ %.010, %20 ], [ %.010, %32 ], [ %0, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %.010, %27 ], [ %0, %26 ], [ %.010, %25 ], [ %1, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 225423358, %32 ], [ 9778703, %31 ], [ %16, %29 ], [ %17, %28 ], [ 899387934, %27 ], [ %18, %26 ], [ %19, %25 ], [ 899387934, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i32, i32* %5, align 4
  %.0..0..0.8 = load volatile i32, i32* %4, align 4
  %22 = icmp slt i32 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 -154383280, i32 2096240117
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i32* %.01013, i32** %3, align 8
  %.0..0..0.9 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #2 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = tail call dereferenceable(6000004) i8* @_Znam(i64 6000004) #4
  store i8* %5, i8** bitcast (i32** @heightTable to i8**), align 8
  %6 = tail call dereferenceable(6000004) i8* @_Znam(i64 6000004) #4
  store i8* %6, i8** bitcast (i32** @widthTable to i8**), align 8
  br label %7

7:                                                ; preds = %.backedge, %0
  %.010 = phi i32 [ undef, %0 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ -747168725, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -747168725, label %8
    i32 294374187, label %18
    i32 -258920452, label %31
    i32 -1760920592, label %33
    i32 -783706328, label %37
    i32 -772745795, label %47
    i32 -463074860, label %57
    i32 1599373944, label %58
    i32 -1966402606, label %68
    i32 1577748328, label %78
    i32 -707429810, label %79
    i32 -1706738649, label %89
    i32 1073614444, label %100
    i32 357624709, label %102
    i32 -1010980815, label %112
    i32 -752680626, label %127
    i32 -535367270, label %128
    i32 -457667229, label %138
    i32 845264639, label %149
    i32 -2008022845, label %150
    i32 -1719562574, label %160
    i32 -1100434080, label %172
    i32 -1397919787, label %173
    i32 -71791647, label %174
    i32 -814486972, label %176
    i32 -130513934, label %177
    i32 -959894783, label %178
    i32 -158510918, label %179
    i32 -820572121, label %185
    i32 1039094546, label %187
  ]

.backedge:                                        ; preds = %7, %187, %185, %179, %178, %177, %176, %174, %172, %160, %150, %149, %138, %128, %127, %112, %102, %100, %89, %79, %78, %68, %58, %57, %47, %37, %33, %31, %18, %8
  %.010.be = phi i32 [ %.010, %7 ], [ %.010, %187 ], [ %186, %185 ], [ %.010, %179 ], [ %.010, %178 ], [ 0, %177 ], [ %.010, %176 ], [ %.010, %174 ], [ %.010, %172 ], [ %.010, %160 ], [ %.010, %150 ], [ %.010, %149 ], [ %139, %138 ], [ %.010, %128 ], [ %.010, %127 ], [ %.010, %112 ], [ %.010, %102 ], [ %.010, %100 ], [ %.010, %89 ], [ %.010, %79 ], [ %.010, %78 ], [ 0, %68 ], [ %.010, %58 ], [ %.010, %57 ], [ %.010, %47 ], [ %.010, %37 ], [ %.010, %33 ], [ %.010, %31 ], [ %.010, %18 ], [ %.010, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ -1719562574, %187 ], [ -457667229, %185 ], [ -1010980815, %179 ], [ -1706738649, %178 ], [ -1966402606, %177 ], [ -772745795, %176 ], [ 294374187, %174 ], [ -747168725, %172 ], [ %171, %160 ], [ %159, %150 ], [ -707429810, %149 ], [ %148, %138 ], [ %137, %128 ], [ -535367270, %127 ], [ %126, %112 ], [ %111, %102 ], [ %101, %100 ], [ %99, %89 ], [ %88, %79 ], [ -707429810, %78 ], [ %77, %68 ], [ %67, %58 ], [ -1397919787, %57 ], [ %56, %47 ], [ %46, %37 ], [ %36, %33 ], [ %32, %31 ], [ %30, %18 ], [ %17, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = load i32, i32* @x.7, align 4
  %10 = load i32, i32* @y.8, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 294374187, i32 -71791647
  br label %.backedge

18:                                               ; preds = %7
  %19 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %3, i32* nonnull %4)
  %20 = load i32, i32* %3, align 4
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %2, align 1
  %22 = load i32, i32* @x.7, align 4
  %23 = load i32, i32* @y.8, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 -258920452, i32 -71791647
  br label %.backedge

31:                                               ; preds = %7
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %32 = select i1 %.0..0..0., i32 -1760920592, i32 1599373944
  br label %.backedge

33:                                               ; preds = %7
  %34 = load i32, i32* %4, align 4
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i32 -783706328, i32 1599373944
  br label %.backedge

37:                                               ; preds = %7
  %38 = load i32, i32* @x.7, align 4
  %39 = load i32, i32* @y.8, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 -772745795, i32 -814486972
  br label %.backedge

47:                                               ; preds = %7
  %48 = load i32, i32* @x.7, align 4
  %49 = load i32, i32* @y.8, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 -463074860, i32 -814486972
  br label %.backedge

57:                                               ; preds = %7
  br label %.backedge

58:                                               ; preds = %7
  %59 = load i32, i32* @x.7, align 4
  %60 = load i32, i32* @y.8, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -1966402606, i32 -130513934
  br label %.backedge

68:                                               ; preds = %7
  %69 = load i32, i32* @x.7, align 4
  %70 = load i32, i32* @y.8, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 1577748328, i32 -130513934
  br label %.backedge

78:                                               ; preds = %7
  br label %.backedge

79:                                               ; preds = %7
  %80 = load i32, i32* @x.7, align 4
  %81 = load i32, i32* @y.8, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 -1706738649, i32 -959894783
  br label %.backedge

89:                                               ; preds = %7
  %90 = icmp slt i32 %.010, 1500001
  store i1 %90, i1* %1, align 1
  %91 = load i32, i32* @x.7, align 4
  %92 = load i32, i32* @y.8, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 1073614444, i32 -959894783
  br label %.backedge

100:                                              ; preds = %7
  %.0..0..0.9 = load volatile i1, i1* %1, align 1
  %101 = select i1 %.0..0..0.9, i32 357624709, i32 -2008022845
  br label %.backedge

102:                                              ; preds = %7
  %103 = load i32, i32* @x.7, align 4
  %104 = load i32, i32* @y.8, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -1010980815, i32 -158510918
  br label %.backedge

112:                                              ; preds = %7
  %113 = load i32*, i32** @widthTable, align 8
  %114 = sext i32 %.010 to i64
  %115 = getelementptr inbounds i32, i32* %113, i64 %114
  store i32 0, i32* %115, align 4
  %116 = load i32*, i32** @heightTable, align 8
  %117 = getelementptr inbounds i32, i32* %116, i64 %114
  store i32 0, i32* %117, align 4
  %118 = load i32, i32* @x.7, align 4
  %119 = load i32, i32* @y.8, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 -752680626, i32 -158510918
  br label %.backedge

127:                                              ; preds = %7
  br label %.backedge

128:                                              ; preds = %7
  %129 = load i32, i32* @x.7, align 4
  %130 = load i32, i32* @y.8, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 -457667229, i32 -820572121
  br label %.backedge

138:                                              ; preds = %7
  %139 = add i32 %.010, 1
  %140 = load i32, i32* @x.7, align 4
  %141 = load i32, i32* @y.8, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 845264639, i32 -820572121
  br label %.backedge

149:                                              ; preds = %7
  br label %.backedge

150:                                              ; preds = %7
  %151 = load i32, i32* @x.7, align 4
  %152 = load i32, i32* @y.8, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 -1719562574, i32 1039094546
  br label %.backedge

160:                                              ; preds = %7
  %161 = load i32, i32* %3, align 4
  %162 = load i32, i32* %4, align 4
  call void @_Z4funcii(i32 %161, i32 %162)
  %163 = load i32, i32* @x.7, align 4
  %164 = load i32, i32* @y.8, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -1100434080, i32 1039094546
  br label %.backedge

172:                                              ; preds = %7
  br label %.backedge

173:                                              ; preds = %7
  ret i32 0

174:                                              ; preds = %7
  %175 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %3, i32* nonnull %4)
  br label %.backedge

176:                                              ; preds = %7
  br label %.backedge

177:                                              ; preds = %7
  br label %.backedge

178:                                              ; preds = %7
  br label %.backedge

179:                                              ; preds = %7
  %180 = load i32*, i32** @widthTable, align 8
  %181 = sext i32 %.010 to i64
  %182 = getelementptr inbounds i32, i32* %180, i64 %181
  store i32 0, i32* %182, align 4
  %183 = load i32*, i32** @heightTable, align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 %181
  store i32 0, i32* %184, align 4
  br label %.backedge

185:                                              ; preds = %7
  %186 = add i32 %.010, 1
  br label %.backedge

187:                                              ; preds = %7
  %188 = load i32, i32* %3, align 4
  %189 = load i32, i32* %4, align 4
  call void @_Z4funcii(i32 %188, i32 %189)
  br label %.backedge
}

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) local_unnamed_addr #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { builtin }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
