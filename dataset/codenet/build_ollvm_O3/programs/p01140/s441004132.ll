; ModuleID = 'build_ollvm/programs/p01140/s441004132.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s441004132.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@di = local_unnamed_addr global [4 x i32] [i32 1, i32 0, i32 -1, i32 0], align 16
@dj = local_unnamed_addr global [4 x i32] [i32 0, i32 1, i32 0, i32 -1], align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s441004132.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i1, align 1
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  br label %12

12:                                               ; preds = %.backedge, %0
  %.087 = phi i8* [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.0 = phi i32 [ 2128809283, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 2128809283, label %13
    i32 -20038375, label %26
    i32 973300850, label %32
    i32 181440257, label %42
    i32 -1212619687, label %52
    i32 884787584, label %53
    i32 1876475078, label %61
    i32 -1360363382, label %71
    i32 -1573662723, label %83
    i32 -406605775, label %85
    i32 1178067431, label %92
    i32 -2136184995, label %94
    i32 -1419521396, label %95
    i32 1729759253, label %99
    i32 -825283378, label %106
    i32 -1871951225, label %108
    i32 -634811013, label %119
    i32 -2137967614, label %123
    i32 -864511259, label %133
    i32 1391767295, label %143
    i32 -312783351, label %144
    i32 -2127573322, label %154
    i32 -2077867693, label %166
    i32 -4669519, label %168
    i32 617356495, label %178
    i32 -1919229727, label %196
    i32 1932141077, label %197
    i32 1244611366, label %199
    i32 -99060380, label %209
    i32 -1749168058, label %219
    i32 546436268, label %220
    i32 -138008888, label %222
    i32 844239281, label %223
    i32 -1463940924, label %233
    i32 566251017, label %245
    i32 1294789371, label %247
    i32 -1465439656, label %248
    i32 227586322, label %252
    i32 1997660303, label %261
    i32 -85195380, label %271
    i32 -1455766586, label %282
    i32 856059062, label %283
    i32 666503777, label %293
    i32 81102757, label %303
    i32 -803540835, label %304
    i32 -719277441, label %314
    i32 1223809098, label %325
    i32 1617235053, label %326
    i32 -1790342175, label %327
    i32 -148707168, label %334
    i32 -994964245, label %342
    i32 -1558730204, label %343
    i32 1084937758, label %346
    i32 341579203, label %347
    i32 232953599, label %348
    i32 -1475457868, label %349
    i32 -1776812782, label %350
    i32 -1558497427, label %351
    i32 683011211, label %360
    i32 -572927872, label %361
    i32 615161372, label %362
    i32 714987342, label %364
    i32 1359517518, label %365
  ]

.backedge:                                        ; preds = %12, %365, %364, %362, %361, %360, %351, %350, %349, %348, %347, %343, %342, %334, %327, %326, %325, %314, %304, %303, %293, %283, %282, %271, %261, %252, %248, %247, %245, %233, %223, %222, %220, %219, %209, %199, %197, %196, %178, %168, %166, %154, %144, %143, %133, %123, %119, %108, %106, %99, %95, %94, %92, %85, %83, %71, %61, %53, %52, %42, %32, %26, %13
  %.087.be = phi i8* [ %.087, %12 ], [ %.087, %365 ], [ %.087, %364 ], [ %.087, %362 ], [ %.087, %361 ], [ %.087, %360 ], [ %.087, %351 ], [ %.087, %350 ], [ %.087, %349 ], [ %.087, %348 ], [ %.087, %347 ], [ %.087, %343 ], [ %.087, %342 ], [ %.087, %334 ], [ %.087, %327 ], [ %.087, %326 ], [ %.087, %325 ], [ %.087, %314 ], [ %.087, %304 ], [ %.087, %303 ], [ %.087, %293 ], [ %.087, %283 ], [ %.087, %282 ], [ %.087, %271 ], [ %.087, %261 ], [ %.087, %252 ], [ %.087, %248 ], [ %.087, %247 ], [ %.087, %245 ], [ %.087, %233 ], [ %.087, %223 ], [ %.087, %222 ], [ %.087, %220 ], [ %.087, %219 ], [ %.087, %209 ], [ %.087, %199 ], [ %.087, %197 ], [ %.087, %196 ], [ %.087, %178 ], [ %.087, %168 ], [ %.087, %166 ], [ %.087, %154 ], [ %.087, %144 ], [ %.087, %143 ], [ %.087, %133 ], [ %.087, %123 ], [ %.087, %119 ], [ %.087, %108 ], [ %.087, %106 ], [ %.087, %99 ], [ %.087, %95 ], [ %.087, %94 ], [ %.087, %92 ], [ %.087, %85 ], [ %.087, %83 ], [ %.087, %71 ], [ %.087, %61 ], [ %56, %53 ], [ %.087, %52 ], [ %.087, %42 ], [ %.087, %32 ], [ %.087, %26 ], [ %.087, %13 ]
  %.085.be = phi i32 [ %.085, %12 ], [ %.085, %365 ], [ %.085, %364 ], [ %.085, %362 ], [ %.085, %361 ], [ %.085, %360 ], [ %.085, %351 ], [ %.085, %350 ], [ %.085, %349 ], [ %.085, %348 ], [ %.085, %347 ], [ %.085, %343 ], [ %.085, %342 ], [ %.085, %334 ], [ %.085, %327 ], [ %.085, %326 ], [ %.085, %325 ], [ %.085, %314 ], [ %.085, %304 ], [ %.085, %303 ], [ %.085, %293 ], [ %.085, %283 ], [ %.085, %282 ], [ %.085, %271 ], [ %.085, %261 ], [ %.085, %252 ], [ %.085, %248 ], [ %.085, %247 ], [ %.085, %245 ], [ %.085, %233 ], [ %.085, %223 ], [ %.085, %222 ], [ %.085, %220 ], [ %.085, %219 ], [ %.085, %209 ], [ %.085, %199 ], [ %.085, %197 ], [ %.085, %196 ], [ %.085, %178 ], [ %.085, %168 ], [ %.085, %166 ], [ %.085, %154 ], [ %.085, %144 ], [ %.085, %143 ], [ %.085, %133 ], [ %.085, %123 ], [ %.085, %119 ], [ %.085, %108 ], [ %.085, %106 ], [ %.085, %99 ], [ %.085, %95 ], [ %.085, %94 ], [ %.085, %92 ], [ %91, %85 ], [ %.085, %83 ], [ %.085, %71 ], [ %.085, %61 ], [ 0, %53 ], [ %.085, %52 ], [ %.085, %42 ], [ %.085, %32 ], [ %.085, %26 ], [ %.085, %13 ]
  %.083.be = phi i32 [ %.083, %12 ], [ %.083, %365 ], [ %.083, %364 ], [ %.083, %362 ], [ %.083, %361 ], [ %.083, %360 ], [ %.083, %351 ], [ %.083, %350 ], [ %.083, %349 ], [ %.083, %348 ], [ %.083, %347 ], [ %.083, %343 ], [ %.083, %342 ], [ %.083, %334 ], [ %.083, %327 ], [ %.083, %326 ], [ %.083, %325 ], [ %.083, %314 ], [ %.083, %304 ], [ %.083, %303 ], [ %.083, %293 ], [ %.083, %283 ], [ %.083, %282 ], [ %.083, %271 ], [ %.083, %261 ], [ %.083, %252 ], [ %.083, %248 ], [ %.083, %247 ], [ %.083, %245 ], [ %.083, %233 ], [ %.083, %223 ], [ %.083, %222 ], [ %.083, %220 ], [ %.083, %219 ], [ %.083, %209 ], [ %.083, %199 ], [ %.083, %197 ], [ %.083, %196 ], [ %.083, %178 ], [ %.083, %168 ], [ %.083, %166 ], [ %.083, %154 ], [ %.083, %144 ], [ %.083, %143 ], [ %.083, %133 ], [ %.083, %123 ], [ %.083, %119 ], [ %.083, %108 ], [ %.083, %106 ], [ %105, %99 ], [ %.083, %95 ], [ %.083, %94 ], [ %.083, %92 ], [ %.083, %85 ], [ %.083, %83 ], [ %.083, %71 ], [ %.083, %61 ], [ 0, %53 ], [ %.083, %52 ], [ %.083, %42 ], [ %.083, %32 ], [ %.083, %26 ], [ %.083, %13 ]
  %.081.be = phi i32 [ %.081, %12 ], [ %.081, %365 ], [ %.081, %364 ], [ %.081, %362 ], [ %.081, %361 ], [ %.081, %360 ], [ %.081, %351 ], [ %.081, %350 ], [ %.081, %349 ], [ %.081, %348 ], [ %.081, %347 ], [ %.081, %343 ], [ %.081, %342 ], [ %.081, %334 ], [ %.081, %327 ], [ %.081, %326 ], [ %.081, %325 ], [ %.081, %314 ], [ %.081, %304 ], [ %.081, %303 ], [ %.081, %293 ], [ %.081, %283 ], [ %.081, %282 ], [ %.081, %271 ], [ %.081, %261 ], [ %.081, %252 ], [ %.081, %248 ], [ %.081, %247 ], [ %.081, %245 ], [ %.081, %233 ], [ %.081, %223 ], [ %.081, %222 ], [ %.081, %220 ], [ %.081, %219 ], [ %.081, %209 ], [ %.081, %199 ], [ %.081, %197 ], [ %.081, %196 ], [ %.081, %178 ], [ %.081, %168 ], [ %.081, %166 ], [ %.081, %154 ], [ %.081, %144 ], [ %.081, %143 ], [ %.081, %133 ], [ %.081, %123 ], [ %.081, %119 ], [ %.081, %108 ], [ %.081, %106 ], [ %.081, %99 ], [ %.081, %95 ], [ %.081, %94 ], [ %93, %92 ], [ %.081, %85 ], [ %.081, %83 ], [ %.081, %71 ], [ %.081, %61 ], [ 0, %53 ], [ %.081, %52 ], [ %.081, %42 ], [ %.081, %32 ], [ %.081, %26 ], [ %.081, %13 ]
  %.079.be = phi i32 [ %.079, %12 ], [ %.079, %365 ], [ %.079, %364 ], [ %.079, %362 ], [ %.079, %361 ], [ %.079, %360 ], [ %.079, %351 ], [ %.079, %350 ], [ %.079, %349 ], [ %.079, %348 ], [ %.079, %347 ], [ %.079, %343 ], [ %.079, %342 ], [ %.079, %334 ], [ %.079, %327 ], [ %.079, %326 ], [ %.079, %325 ], [ %.079, %314 ], [ %.079, %304 ], [ %.079, %303 ], [ %.079, %293 ], [ %.079, %283 ], [ %.079, %282 ], [ %.079, %271 ], [ %.079, %261 ], [ %.079, %252 ], [ %.079, %248 ], [ %.079, %247 ], [ %.079, %245 ], [ %.079, %233 ], [ %.079, %223 ], [ %.079, %222 ], [ %.079, %220 ], [ %.079, %219 ], [ %.079, %209 ], [ %.079, %199 ], [ %.079, %197 ], [ %.079, %196 ], [ %.079, %178 ], [ %.079, %168 ], [ %.079, %166 ], [ %.079, %154 ], [ %.079, %144 ], [ %.079, %143 ], [ %.079, %133 ], [ %.079, %123 ], [ %.079, %119 ], [ %.079, %108 ], [ %107, %106 ], [ %.079, %99 ], [ %.079, %95 ], [ 0, %94 ], [ %.079, %92 ], [ %.079, %85 ], [ %.079, %83 ], [ %.079, %71 ], [ %.079, %61 ], [ %.079, %53 ], [ %.079, %52 ], [ %.079, %42 ], [ %.079, %32 ], [ %.079, %26 ], [ %.079, %13 ]
  %.077.be = phi i32 [ %.077, %12 ], [ %.077, %365 ], [ %.077, %364 ], [ %.077, %362 ], [ %.077, %361 ], [ %.077, %360 ], [ %.077, %351 ], [ %.077, %350 ], [ %.077, %349 ], [ %.077, %348 ], [ %.077, %347 ], [ %.077, %343 ], [ %.077, %342 ], [ %.077, %334 ], [ %.077, %327 ], [ %.077, %326 ], [ %.077, %325 ], [ %.077, %314 ], [ %.077, %304 ], [ %.077, %303 ], [ %.077, %293 ], [ %.077, %283 ], [ %.077, %282 ], [ %.077, %271 ], [ %.077, %261 ], [ %.077, %252 ], [ %.077, %248 ], [ %.077, %247 ], [ %.077, %245 ], [ %.077, %233 ], [ %.077, %223 ], [ %.077, %222 ], [ %221, %220 ], [ %.077, %219 ], [ %.077, %209 ], [ %.077, %199 ], [ %.077, %197 ], [ %.077, %196 ], [ %.077, %178 ], [ %.077, %168 ], [ %.077, %166 ], [ %.077, %154 ], [ %.077, %144 ], [ %.077, %143 ], [ %.077, %133 ], [ %.077, %123 ], [ %.077, %119 ], [ 0, %108 ], [ %.077, %106 ], [ %.077, %99 ], [ %.077, %95 ], [ %.077, %94 ], [ %.077, %92 ], [ %.077, %85 ], [ %.077, %83 ], [ %.077, %71 ], [ %.077, %61 ], [ %.077, %53 ], [ %.077, %52 ], [ %.077, %42 ], [ %.077, %32 ], [ %.077, %26 ], [ %.077, %13 ]
  %.075.be = phi i32 [ %.075, %12 ], [ %.075, %365 ], [ %.075, %364 ], [ %.075, %362 ], [ %.075, %361 ], [ %.075, %360 ], [ %355, %351 ], [ %.075, %350 ], [ 0, %349 ], [ %.075, %348 ], [ %.075, %347 ], [ %.075, %343 ], [ %.075, %342 ], [ %.075, %334 ], [ %.075, %327 ], [ %.075, %326 ], [ %.075, %325 ], [ %.075, %314 ], [ %.075, %304 ], [ %.075, %303 ], [ %.075, %293 ], [ %.075, %283 ], [ %.075, %282 ], [ %.075, %271 ], [ %.075, %261 ], [ %.075, %252 ], [ %.075, %248 ], [ %.075, %247 ], [ %.075, %245 ], [ %.075, %233 ], [ %.075, %223 ], [ %.075, %222 ], [ %.075, %220 ], [ %.075, %219 ], [ %.075, %209 ], [ %.075, %199 ], [ %.075, %197 ], [ %.075, %196 ], [ %182, %178 ], [ %.075, %168 ], [ %.075, %166 ], [ %.075, %154 ], [ %.075, %144 ], [ %.075, %143 ], [ 0, %133 ], [ %.075, %123 ], [ %.075, %119 ], [ %.075, %108 ], [ %.075, %106 ], [ %.075, %99 ], [ %.075, %95 ], [ %.075, %94 ], [ %.075, %92 ], [ %.075, %85 ], [ %.075, %83 ], [ %.075, %71 ], [ %.075, %61 ], [ %.075, %53 ], [ %.075, %52 ], [ %.075, %42 ], [ %.075, %32 ], [ %.075, %26 ], [ %.075, %13 ]
  %.073.be = phi i32 [ %.073, %12 ], [ %.073, %365 ], [ %.073, %364 ], [ %.073, %362 ], [ %.073, %361 ], [ %.073, %360 ], [ %.073, %351 ], [ %.073, %350 ], [ %.077, %349 ], [ %.073, %348 ], [ %.073, %347 ], [ %.073, %343 ], [ %.073, %342 ], [ %.073, %334 ], [ %.073, %327 ], [ %.073, %326 ], [ %.073, %325 ], [ %.073, %314 ], [ %.073, %304 ], [ %.073, %303 ], [ %.073, %293 ], [ %.073, %283 ], [ %.073, %282 ], [ %.073, %271 ], [ %.073, %261 ], [ %.073, %252 ], [ %.073, %248 ], [ %.073, %247 ], [ %.073, %245 ], [ %.073, %233 ], [ %.073, %223 ], [ %.073, %222 ], [ %.073, %220 ], [ %.073, %219 ], [ %.073, %209 ], [ %.073, %199 ], [ %198, %197 ], [ %.073, %196 ], [ %.073, %178 ], [ %.073, %168 ], [ %.073, %166 ], [ %.073, %154 ], [ %.073, %144 ], [ %.073, %143 ], [ %.077, %133 ], [ %.073, %123 ], [ %.073, %119 ], [ %.073, %108 ], [ %.073, %106 ], [ %.073, %99 ], [ %.073, %95 ], [ %.073, %94 ], [ %.073, %92 ], [ %.073, %85 ], [ %.073, %83 ], [ %.073, %71 ], [ %.073, %61 ], [ %.073, %53 ], [ %.073, %52 ], [ %.073, %42 ], [ %.073, %32 ], [ %.073, %26 ], [ %.073, %13 ]
  %.071.be = phi i32 [ %.071, %12 ], [ %366, %365 ], [ %.071, %364 ], [ %.071, %362 ], [ %.071, %361 ], [ %.071, %360 ], [ %.071, %351 ], [ %.071, %350 ], [ %.071, %349 ], [ %.071, %348 ], [ %.071, %347 ], [ %.071, %343 ], [ %.071, %342 ], [ %.071, %334 ], [ %.071, %327 ], [ %.071, %326 ], [ %.071, %325 ], [ %315, %314 ], [ %.071, %304 ], [ %.071, %303 ], [ %.071, %293 ], [ %.071, %283 ], [ %.071, %282 ], [ %.071, %271 ], [ %.071, %261 ], [ %.071, %252 ], [ %.071, %248 ], [ %.071, %247 ], [ %.071, %245 ], [ %.071, %233 ], [ %.071, %223 ], [ 0, %222 ], [ %.071, %220 ], [ %.071, %219 ], [ %.071, %209 ], [ %.071, %199 ], [ %.071, %197 ], [ %.071, %196 ], [ %.071, %178 ], [ %.071, %168 ], [ %.071, %166 ], [ %.071, %154 ], [ %.071, %144 ], [ %.071, %143 ], [ %.071, %133 ], [ %.071, %123 ], [ %.071, %119 ], [ %.071, %108 ], [ %.071, %106 ], [ %.071, %99 ], [ %.071, %95 ], [ %.071, %94 ], [ %.071, %92 ], [ %.071, %85 ], [ %.071, %83 ], [ %.071, %71 ], [ %.071, %61 ], [ %.071, %53 ], [ %.071, %52 ], [ %.071, %42 ], [ %.071, %32 ], [ %.071, %26 ], [ %.071, %13 ]
  %.069.be = phi i32 [ %.069, %12 ], [ %.069, %365 ], [ %.069, %364 ], [ %.069, %362 ], [ %.069, %361 ], [ %.069, %360 ], [ %.069, %351 ], [ %.069, %350 ], [ %.069, %349 ], [ %.069, %348 ], [ %.069, %347 ], [ %.069, %343 ], [ %.069, %342 ], [ %.069, %334 ], [ %.069, %327 ], [ %.069, %326 ], [ %.069, %325 ], [ %.069, %314 ], [ %.069, %304 ], [ %.069, %303 ], [ %.069, %293 ], [ %.069, %283 ], [ %.069, %282 ], [ %.069, %271 ], [ %.069, %261 ], [ %256, %252 ], [ %.069, %248 ], [ 0, %247 ], [ %.069, %245 ], [ %.069, %233 ], [ %.069, %223 ], [ %.069, %222 ], [ %.069, %220 ], [ %.069, %219 ], [ %.069, %209 ], [ %.069, %199 ], [ %.069, %197 ], [ %.069, %196 ], [ %.069, %178 ], [ %.069, %168 ], [ %.069, %166 ], [ %.069, %154 ], [ %.069, %144 ], [ %.069, %143 ], [ %.069, %133 ], [ %.069, %123 ], [ %.069, %119 ], [ %.069, %108 ], [ %.069, %106 ], [ %.069, %99 ], [ %.069, %95 ], [ %.069, %94 ], [ %.069, %92 ], [ %.069, %85 ], [ %.069, %83 ], [ %.069, %71 ], [ %.069, %61 ], [ %.069, %53 ], [ %.069, %52 ], [ %.069, %42 ], [ %.069, %32 ], [ %.069, %26 ], [ %.069, %13 ]
  %.067.be = phi i32 [ %.067, %12 ], [ %.067, %365 ], [ %.067, %364 ], [ %363, %362 ], [ %.067, %361 ], [ %.067, %360 ], [ %.067, %351 ], [ %.067, %350 ], [ %.067, %349 ], [ %.067, %348 ], [ %.067, %347 ], [ %.067, %343 ], [ %.067, %342 ], [ %.067, %334 ], [ %.067, %327 ], [ %.067, %326 ], [ %.067, %325 ], [ %.067, %314 ], [ %.067, %304 ], [ %.067, %303 ], [ %.067, %293 ], [ %.067, %283 ], [ %.067, %282 ], [ %272, %271 ], [ %.067, %261 ], [ %.067, %252 ], [ %.067, %248 ], [ %.071, %247 ], [ %.067, %245 ], [ %.067, %233 ], [ %.067, %223 ], [ %.067, %222 ], [ %.067, %220 ], [ %.067, %219 ], [ %.067, %209 ], [ %.067, %199 ], [ %.067, %197 ], [ %.067, %196 ], [ %.067, %178 ], [ %.067, %168 ], [ %.067, %166 ], [ %.067, %154 ], [ %.067, %144 ], [ %.067, %143 ], [ %.067, %133 ], [ %.067, %123 ], [ %.067, %119 ], [ %.067, %108 ], [ %.067, %106 ], [ %.067, %99 ], [ %.067, %95 ], [ %.067, %94 ], [ %.067, %92 ], [ %.067, %85 ], [ %.067, %83 ], [ %.067, %71 ], [ %.067, %61 ], [ %.067, %53 ], [ %.067, %52 ], [ %.067, %42 ], [ %.067, %32 ], [ %.067, %26 ], [ %.067, %13 ]
  %.065.be = phi i32 [ %.065, %12 ], [ %.065, %365 ], [ %.065, %364 ], [ %.065, %362 ], [ %.065, %361 ], [ %.065, %360 ], [ %.065, %351 ], [ %.065, %350 ], [ %.065, %349 ], [ %.065, %348 ], [ %.065, %347 ], [ %.065, %343 ], [ %.065, %342 ], [ %341, %334 ], [ %.065, %327 ], [ 0, %326 ], [ %.065, %325 ], [ %.065, %314 ], [ %.065, %304 ], [ %.065, %303 ], [ %.065, %293 ], [ %.065, %283 ], [ %.065, %282 ], [ %.065, %271 ], [ %.065, %261 ], [ %.065, %252 ], [ %.065, %248 ], [ %.065, %247 ], [ %.065, %245 ], [ %.065, %233 ], [ %.065, %223 ], [ %.065, %222 ], [ %.065, %220 ], [ %.065, %219 ], [ %.065, %209 ], [ %.065, %199 ], [ %.065, %197 ], [ %.065, %196 ], [ %.065, %178 ], [ %.065, %168 ], [ %.065, %166 ], [ %.065, %154 ], [ %.065, %144 ], [ %.065, %143 ], [ %.065, %133 ], [ %.065, %123 ], [ %.065, %119 ], [ %.065, %108 ], [ %.065, %106 ], [ %.065, %99 ], [ %.065, %95 ], [ %.065, %94 ], [ %.065, %92 ], [ %.065, %85 ], [ %.065, %83 ], [ %.065, %71 ], [ %.065, %61 ], [ %.065, %53 ], [ %.065, %52 ], [ %.065, %42 ], [ %.065, %32 ], [ %.065, %26 ], [ %.065, %13 ]
  %.063.be = phi i32 [ %.063, %12 ], [ %.063, %365 ], [ %.063, %364 ], [ %.063, %362 ], [ %.063, %361 ], [ %.063, %360 ], [ %.063, %351 ], [ %.063, %350 ], [ %.063, %349 ], [ %.063, %348 ], [ %.063, %347 ], [ %.063, %343 ], [ %.neg, %342 ], [ %.063, %334 ], [ %.063, %327 ], [ 0, %326 ], [ %.063, %325 ], [ %.063, %314 ], [ %.063, %304 ], [ %.063, %303 ], [ %.063, %293 ], [ %.063, %283 ], [ %.063, %282 ], [ %.063, %271 ], [ %.063, %261 ], [ %.063, %252 ], [ %.063, %248 ], [ %.063, %247 ], [ %.063, %245 ], [ %.063, %233 ], [ %.063, %223 ], [ %.063, %222 ], [ %.063, %220 ], [ %.063, %219 ], [ %.063, %209 ], [ %.063, %199 ], [ %.063, %197 ], [ %.063, %196 ], [ %.063, %178 ], [ %.063, %168 ], [ %.063, %166 ], [ %.063, %154 ], [ %.063, %144 ], [ %.063, %143 ], [ %.063, %133 ], [ %.063, %123 ], [ %.063, %119 ], [ %.063, %108 ], [ %.063, %106 ], [ %.063, %99 ], [ %.063, %95 ], [ %.063, %94 ], [ %.063, %92 ], [ %.063, %85 ], [ %.063, %83 ], [ %.063, %71 ], [ %.063, %61 ], [ %.063, %53 ], [ %.063, %52 ], [ %.063, %42 ], [ %.063, %32 ], [ %.063, %26 ], [ %.063, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -719277441, %365 ], [ 666503777, %364 ], [ -85195380, %362 ], [ -1463940924, %361 ], [ -99060380, %360 ], [ 617356495, %351 ], [ -2127573322, %350 ], [ -864511259, %349 ], [ -1360363382, %348 ], [ 181440257, %347 ], [ 2128809283, %343 ], [ -1790342175, %342 ], [ -994964245, %334 ], [ %333, %327 ], [ -1790342175, %326 ], [ 844239281, %325 ], [ %324, %314 ], [ %313, %304 ], [ -803540835, %303 ], [ %302, %293 ], [ %292, %283 ], [ -1465439656, %282 ], [ %281, %271 ], [ %270, %261 ], [ 1997660303, %252 ], [ %251, %248 ], [ -1465439656, %247 ], [ %246, %245 ], [ %244, %233 ], [ %232, %223 ], [ 844239281, %222 ], [ -634811013, %220 ], [ 546436268, %219 ], [ %218, %209 ], [ %208, %199 ], [ -312783351, %197 ], [ 1932141077, %196 ], [ %195, %178 ], [ %177, %168 ], [ %167, %166 ], [ %165, %154 ], [ %153, %144 ], [ -312783351, %143 ], [ %142, %133 ], [ %132, %123 ], [ %122, %119 ], [ -634811013, %108 ], [ -1419521396, %106 ], [ -825283378, %99 ], [ %98, %95 ], [ -1419521396, %94 ], [ 1876475078, %92 ], [ 1178067431, %85 ], [ %84, %83 ], [ %82, %71 ], [ %70, %61 ], [ 1876475078, %53 ], [ 1084937758, %52 ], [ %51, %42 ], [ %41, %32 ], [ %31, %26 ], [ %25, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %15 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %14, i32* nonnull dereferenceable(4) %9)
  %16 = bitcast %"class.std::basic_istream"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::basic_istream"* %15 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast i8* %22 to %"class.std::basic_ios"*
  %24 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %23)
  %25 = select i1 %24, i32 -20038375, i32 1084937758
  br label %.backedge

26:                                               ; preds = %12
  %27 = load i32, i32* %8, align 4
  %28 = load i32, i32* %9, align 4
  %29 = sub i32 0, %28
  %30 = icmp eq i32 %27, %29
  %31 = select i1 %30, i32 973300850, i32 884787584
  br label %.backedge

32:                                               ; preds = %12
  %33 = load i32, i32* @x.1, align 4
  %34 = load i32, i32* @y.2, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 181440257, i32 341579203
  br label %.backedge

42:                                               ; preds = %12
  %43 = load i32, i32* @x.1, align 4
  %44 = load i32, i32* @y.2, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 -1212619687, i32 341579203
  br label %.backedge

52:                                               ; preds = %12
  br label %.backedge

53:                                               ; preds = %12
  %54 = load i32, i32* %8, align 4
  %55 = zext i32 %54 to i64
  %56 = call i8* @llvm.stacksave()
  %57 = alloca i32, i64 %55, align 16
  store i32* %57, i32** %7, align 8
  %58 = load i32, i32* %9, align 4
  %59 = zext i32 %58 to i64
  %60 = alloca i32, i64 %59, align 16
  store i32* %60, i32** %6, align 8
  br label %.backedge

61:                                               ; preds = %12
  %62 = load i32, i32* @x.1, align 4
  %63 = load i32, i32* @y.2, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 -1360363382, i32 232953599
  br label %.backedge

71:                                               ; preds = %12
  %72 = load i32, i32* %8, align 4
  %73 = icmp slt i32 %.081, %72
  store i1 %73, i1* %5, align 1
  %74 = load i32, i32* @x.1, align 4
  %75 = load i32, i32* @y.2, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 -1573662723, i32 232953599
  br label %.backedge

83:                                               ; preds = %12
  %.0..0..0.53 = load volatile i1, i1* %5, align 1
  %84 = select i1 %.0..0..0.53, i32 -406605775, i32 -2136184995
  br label %.backedge

85:                                               ; preds = %12
  %86 = sext i32 %.081 to i64
  %.0..0..0.46 = load volatile i32*, i32** %7, align 8
  %87 = getelementptr inbounds i32, i32* %.0..0..0.46, i64 %86
  %88 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* dereferenceable(4) %87)
  %.0..0..0.47 = load volatile i32*, i32** %7, align 8
  %89 = getelementptr inbounds i32, i32* %.0..0..0.47, i64 %86
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, %.085
  br label %.backedge

92:                                               ; preds = %12
  %93 = add i32 %.081, 1
  br label %.backedge

94:                                               ; preds = %12
  br label %.backedge

95:                                               ; preds = %12
  %96 = load i32, i32* %9, align 4
  %97 = icmp slt i32 %.079, %96
  %98 = select i1 %97, i32 1729759253, i32 -1871951225
  br label %.backedge

99:                                               ; preds = %12
  %100 = sext i32 %.079 to i64
  %.0..0..0.50 = load volatile i32*, i32** %6, align 8
  %101 = getelementptr inbounds i32, i32* %.0..0..0.50, i64 %100
  %102 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* dereferenceable(4) %101)
  %.0..0..0.51 = load volatile i32*, i32** %6, align 8
  %103 = getelementptr inbounds i32, i32* %.0..0..0.51, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, %.083
  br label %.backedge

106:                                              ; preds = %12
  %107 = add i32 %.079, 1
  br label %.backedge

108:                                              ; preds = %12
  %109 = add i32 %.085, 1
  %110 = zext i32 %109 to i64
  %111 = alloca i32, i64 %110, align 16
  store i32* %111, i32** %4, align 8
  %112 = add i32 %.083, 1
  %113 = zext i32 %112 to i64
  %114 = alloca i32, i64 %113, align 16
  store i32* %114, i32** %3, align 8
  %.0..0..0.54 = load volatile i32*, i32** %4, align 8
  %115 = bitcast i32* %.0..0..0.54 to i8*
  %116 = shl nuw nsw i64 %110, 2
  call void @llvm.memset.p0i8.i64(i8* align 16 %115, i8 0, i64 %116, i1 false)
  %.0..0..0.58 = load volatile i32*, i32** %3, align 8
  %117 = bitcast i32* %.0..0..0.58 to i8*
  %118 = shl nuw nsw i64 %113, 2
  call void @llvm.memset.p0i8.i64(i8* align 16 %117, i8 0, i64 %118, i1 false)
  br label %.backedge

119:                                              ; preds = %12
  %120 = load i32, i32* %8, align 4
  %121 = icmp slt i32 %.077, %120
  %122 = select i1 %121, i32 -2137967614, i32 -138008888
  br label %.backedge

123:                                              ; preds = %12
  %124 = load i32, i32* @x.1, align 4
  %125 = load i32, i32* @y.2, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 -864511259, i32 -1475457868
  br label %.backedge

133:                                              ; preds = %12
  %134 = load i32, i32* @x.1, align 4
  %135 = load i32, i32* @y.2, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 1391767295, i32 -1475457868
  br label %.backedge

143:                                              ; preds = %12
  br label %.backedge

144:                                              ; preds = %12
  %145 = load i32, i32* @x.1, align 4
  %146 = load i32, i32* @y.2, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 -2127573322, i32 -1776812782
  br label %.backedge

154:                                              ; preds = %12
  %155 = load i32, i32* %8, align 4
  %156 = icmp slt i32 %.073, %155
  store i1 %156, i1* %2, align 1
  %157 = load i32, i32* @x.1, align 4
  %158 = load i32, i32* @y.2, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 -2077867693, i32 -1776812782
  br label %.backedge

166:                                              ; preds = %12
  %.0..0..0.61 = load volatile i1, i1* %2, align 1
  %167 = select i1 %.0..0..0.61, i32 -4669519, i32 1244611366
  br label %.backedge

168:                                              ; preds = %12
  %169 = load i32, i32* @x.1, align 4
  %170 = load i32, i32* @y.2, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 617356495, i32 -1558497427
  br label %.backedge

178:                                              ; preds = %12
  %179 = sext i32 %.073 to i64
  %.0..0..0.48 = load volatile i32*, i32** %7, align 8
  %180 = getelementptr inbounds i32, i32* %.0..0..0.48, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = add i32 %181, %.075
  %183 = sext i32 %182 to i64
  %.0..0..0.55 = load volatile i32*, i32** %4, align 8
  %184 = getelementptr inbounds i32, i32* %.0..0..0.55, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %184, align 4
  %187 = load i32, i32* @x.1, align 4
  %188 = load i32, i32* @y.2, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 -1919229727, i32 -1558497427
  br label %.backedge

196:                                              ; preds = %12
  br label %.backedge

197:                                              ; preds = %12
  %198 = add i32 %.073, 1
  br label %.backedge

199:                                              ; preds = %12
  %200 = load i32, i32* @x.1, align 4
  %201 = load i32, i32* @y.2, align 4
  %202 = add i32 %200, -1
  %203 = mul i32 %202, %200
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %206, %205
  %208 = select i1 %207, i32 -99060380, i32 683011211
  br label %.backedge

209:                                              ; preds = %12
  %210 = load i32, i32* @x.1, align 4
  %211 = load i32, i32* @y.2, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 -1749168058, i32 683011211
  br label %.backedge

219:                                              ; preds = %12
  br label %.backedge

220:                                              ; preds = %12
  %221 = add i32 %.077, 1
  br label %.backedge

222:                                              ; preds = %12
  br label %.backedge

223:                                              ; preds = %12
  %224 = load i32, i32* @x.1, align 4
  %225 = load i32, i32* @y.2, align 4
  %226 = add i32 %224, -1
  %227 = mul i32 %226, %224
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %230, %229
  %232 = select i1 %231, i32 -1463940924, i32 -572927872
  br label %.backedge

233:                                              ; preds = %12
  %234 = load i32, i32* %9, align 4
  %235 = icmp slt i32 %.071, %234
  store i1 %235, i1* %1, align 1
  %236 = load i32, i32* @x.1, align 4
  %237 = load i32, i32* @y.2, align 4
  %238 = add i32 %236, -1
  %239 = mul i32 %238, %236
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %242, %241
  %244 = select i1 %243, i32 566251017, i32 -572927872
  br label %.backedge

245:                                              ; preds = %12
  %.0..0..0.62 = load volatile i1, i1* %1, align 1
  %246 = select i1 %.0..0..0.62, i32 1294789371, i32 1617235053
  br label %.backedge

247:                                              ; preds = %12
  br label %.backedge

248:                                              ; preds = %12
  %249 = load i32, i32* %9, align 4
  %250 = icmp slt i32 %.067, %249
  %251 = select i1 %250, i32 227586322, i32 856059062
  br label %.backedge

252:                                              ; preds = %12
  %253 = sext i32 %.067 to i64
  %.0..0..0.52 = load volatile i32*, i32** %6, align 8
  %254 = getelementptr inbounds i32, i32* %.0..0..0.52, i64 %253
  %255 = load i32, i32* %254, align 4
  %256 = add i32 %255, %.069
  %257 = sext i32 %256 to i64
  %.0..0..0.59 = load volatile i32*, i32** %3, align 8
  %258 = getelementptr inbounds i32, i32* %.0..0..0.59, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = add i32 %259, 1
  store i32 %260, i32* %258, align 4
  br label %.backedge

261:                                              ; preds = %12
  %262 = load i32, i32* @x.1, align 4
  %263 = load i32, i32* @y.2, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 -85195380, i32 615161372
  br label %.backedge

271:                                              ; preds = %12
  %272 = add i32 %.067, 1
  %273 = load i32, i32* @x.1, align 4
  %274 = load i32, i32* @y.2, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 -1455766586, i32 615161372
  br label %.backedge

282:                                              ; preds = %12
  br label %.backedge

283:                                              ; preds = %12
  %284 = load i32, i32* @x.1, align 4
  %285 = load i32, i32* @y.2, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 666503777, i32 714987342
  br label %.backedge

293:                                              ; preds = %12
  %294 = load i32, i32* @x.1, align 4
  %295 = load i32, i32* @y.2, align 4
  %296 = add i32 %294, -1
  %297 = mul i32 %296, %294
  %298 = and i32 %297, 1
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %300, %299
  %302 = select i1 %301, i32 81102757, i32 714987342
  br label %.backedge

303:                                              ; preds = %12
  br label %.backedge

304:                                              ; preds = %12
  %305 = load i32, i32* @x.1, align 4
  %306 = load i32, i32* @y.2, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 -719277441, i32 1359517518
  br label %.backedge

314:                                              ; preds = %12
  %315 = add i32 %.071, 1
  %316 = load i32, i32* @x.1, align 4
  %317 = load i32, i32* @y.2, align 4
  %318 = add i32 %316, -1
  %319 = mul i32 %318, %316
  %320 = and i32 %319, 1
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %322, %321
  %324 = select i1 %323, i32 1223809098, i32 1359517518
  br label %.backedge

325:                                              ; preds = %12
  br label %.backedge

326:                                              ; preds = %12
  br label %.backedge

327:                                              ; preds = %12
  %328 = add i32 %.085, 1
  store i32 %328, i32* %10, align 4
  %329 = add i32 %.083, 1
  store i32 %329, i32* %11, align 4
  %330 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %10, i32* nonnull dereferenceable(4) %11)
  %331 = load i32, i32* %330, align 4
  %332 = icmp slt i32 %.063, %331
  %333 = select i1 %332, i32 -148707168, i32 -1558730204
  br label %.backedge

334:                                              ; preds = %12
  %335 = sext i32 %.063 to i64
  %.0..0..0.56 = load volatile i32*, i32** %4, align 8
  %336 = getelementptr inbounds i32, i32* %.0..0..0.56, i64 %335
  %337 = load i32, i32* %336, align 4
  %.0..0..0.60 = load volatile i32*, i32** %3, align 8
  %338 = getelementptr inbounds i32, i32* %.0..0..0.60, i64 %335
  %339 = load i32, i32* %338, align 4
  %340 = mul nsw i32 %339, %337
  %341 = add i32 %340, %.065
  br label %.backedge

342:                                              ; preds = %12
  %.neg = add i32 %.063, 1
  br label %.backedge

343:                                              ; preds = %12
  %344 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.065)
  %345 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %344, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  call void @llvm.stackrestore(i8* %.087)
  br label %.backedge

346:                                              ; preds = %12
  ret i32 0

347:                                              ; preds = %12
  br label %.backedge

348:                                              ; preds = %12
  br label %.backedge

349:                                              ; preds = %12
  br label %.backedge

350:                                              ; preds = %12
  br label %.backedge

351:                                              ; preds = %12
  %352 = sext i32 %.073 to i64
  %.0..0..0.49 = load volatile i32*, i32** %7, align 8
  %353 = getelementptr inbounds i32, i32* %.0..0..0.49, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = add i32 %354, %.075
  %356 = sext i32 %355 to i64
  %.0..0..0.57 = load volatile i32*, i32** %4, align 8
  %357 = getelementptr inbounds i32, i32* %.0..0..0.57, i64 %356
  %358 = load i32, i32* %357, align 4
  %359 = add i32 %358, 1
  store i32 %359, i32* %357, align 4
  br label %.backedge

360:                                              ; preds = %12
  br label %.backedge

361:                                              ; preds = %12
  br label %.backedge

362:                                              ; preds = %12
  %363 = add i32 %.067, 1
  br label %.backedge

364:                                              ; preds = %12
  br label %.backedge

365:                                              ; preds = %12
  %366 = add i32 %.071, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.3, align 4
  %8 = load i32, i32* @y.4, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 849498362, i32 1958517968
  %16 = select i1 %14, i32 -797597803, i32 1958517968
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1230889536, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 1230889536, label %18
    i32 -1268489932, label %.outer10.backedge
    i32 -797597803, label %.outer.backedge
    i32 849498362, label %21
    i32 -1705277416, label %22
    i32 1139395519, label %23
    i32 1958517968, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -1268489932, i32 -1705277416
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 1139395519, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 1139395519, %22 ], [ -797597803, %24 ], [ %15, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s441004132.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #8 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
