; ModuleID = 'build_ollvm/programs/p01140/s670360389.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s670360389.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s670360389.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i16*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i1, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  br label %11

11:                                               ; preds = %.backedge, %0
  %.0103 = phi i8* [ undef, %0 ], [ %.0103.be, %.backedge ]
  %.0101 = phi i32 [ undef, %0 ], [ %.0101.be, %.backedge ]
  %.099 = phi i32 [ undef, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i32 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.0 = phi i32 [ -950526426, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -950526426, label %12
    i32 -1554534018, label %22
    i32 1439184983, label %38
    i32 -362267923, label %40
    i32 1771247765, label %50
    i32 1400514060, label %60
    i32 660728744, label %61
    i32 -1375581001, label %69
    i32 -698063689, label %73
    i32 533269543, label %77
    i32 457630384, label %79
    i32 -953564650, label %80
    i32 -1001770696, label %84
    i32 1053815820, label %88
    i32 1628795570, label %90
    i32 288201059, label %92
    i32 191691512, label %95
    i32 2051628574, label %98
    i32 -1406203060, label %108
    i32 114315269, label %118
    i32 1048747853, label %119
    i32 -778249715, label %120
    i32 317731607, label %124
    i32 -282862527, label %125
    i32 798477965, label %129
    i32 -1231564499, label %132
    i32 -1125571205, label %136
    i32 604852441, label %141
    i32 -1377418352, label %146
    i32 -1534295863, label %156
    i32 -418142429, label %166
    i32 2051814985, label %167
    i32 1543256043, label %168
    i32 2139288898, label %170
    i32 304505453, label %172
    i32 -299826401, label %182
    i32 -534437823, label %193
    i32 -2100116476, label %195
    i32 -1330912799, label %205
    i32 -923048283, label %217
    i32 140591257, label %218
    i32 328000101, label %220
    i32 1890740113, label %221
    i32 85494876, label %231
    i32 -1246603025, label %243
    i32 69007344, label %245
    i32 566522229, label %246
    i32 -2057746987, label %250
    i32 1326781626, label %253
    i32 994885868, label %257
    i32 -1923201773, label %267
    i32 -148162443, label %281
    i32 -338680628, label %282
    i32 -1018820314, label %292
    i32 -2070410334, label %306
    i32 -1734429628, label %307
    i32 -21232442, label %317
    i32 1040942666, label %328
    i32 521492523, label %329
    i32 -1755430485, label %330
    i32 -4105367, label %332
    i32 1222660050, label %333
    i32 -1627639771, label %343
    i32 -1157127387, label %354
    i32 -1411744902, label %356
    i32 1722040665, label %366
    i32 -1089504791, label %368
    i32 1884401125, label %378
    i32 -1566607882, label %390
    i32 -2127743507, label %391
    i32 -6806187, label %392
    i32 -369441900, label %395
    i32 -2137204372, label %396
    i32 119288523, label %397
    i32 1026519950, label %399
    i32 2076691815, label %400
    i32 -2000271164, label %403
    i32 1026115853, label %404
    i32 1142371513, label %409
    i32 -631347799, label %414
    i32 1418834861, label %415
    i32 -1002876596, label %416
  ]

.backedge:                                        ; preds = %11, %416, %415, %414, %409, %404, %403, %400, %399, %397, %396, %395, %392, %390, %378, %368, %366, %356, %354, %343, %333, %332, %330, %329, %328, %317, %307, %306, %292, %282, %281, %267, %257, %253, %250, %246, %245, %243, %231, %221, %220, %218, %217, %205, %195, %193, %182, %172, %170, %168, %167, %166, %156, %146, %141, %136, %132, %129, %125, %124, %120, %119, %118, %108, %98, %95, %92, %90, %88, %84, %80, %79, %77, %73, %69, %61, %60, %50, %40, %38, %22, %12
  %.0103.be = phi i8* [ %.0103, %11 ], [ %.0103, %416 ], [ %.0103, %415 ], [ %.0103, %414 ], [ %.0103, %409 ], [ %.0103, %404 ], [ %.0103, %403 ], [ %.0103, %400 ], [ %.0103, %399 ], [ %.0103, %397 ], [ %.0103, %396 ], [ %.0103, %395 ], [ %.0103, %392 ], [ %.0103, %390 ], [ %.0103, %378 ], [ %.0103, %368 ], [ %.0103, %366 ], [ %.0103, %356 ], [ %.0103, %354 ], [ %.0103, %343 ], [ %.0103, %333 ], [ %.0103, %332 ], [ %.0103, %330 ], [ %.0103, %329 ], [ %.0103, %328 ], [ %.0103, %317 ], [ %.0103, %307 ], [ %.0103, %306 ], [ %.0103, %292 ], [ %.0103, %282 ], [ %.0103, %281 ], [ %.0103, %267 ], [ %.0103, %257 ], [ %.0103, %253 ], [ %.0103, %250 ], [ %.0103, %246 ], [ %.0103, %245 ], [ %.0103, %243 ], [ %.0103, %231 ], [ %.0103, %221 ], [ %.0103, %220 ], [ %.0103, %218 ], [ %.0103, %217 ], [ %.0103, %205 ], [ %.0103, %195 ], [ %.0103, %193 ], [ %.0103, %182 ], [ %.0103, %172 ], [ %.0103, %170 ], [ %.0103, %168 ], [ %.0103, %167 ], [ %.0103, %166 ], [ %.0103, %156 ], [ %.0103, %146 ], [ %.0103, %141 ], [ %.0103, %136 ], [ %.0103, %132 ], [ %.0103, %129 ], [ %.0103, %125 ], [ %.0103, %124 ], [ %.0103, %120 ], [ %.0103, %119 ], [ %.0103, %118 ], [ %.0103, %108 ], [ %.0103, %98 ], [ %.0103, %95 ], [ %.0103, %92 ], [ %.0103, %90 ], [ %.0103, %88 ], [ %.0103, %84 ], [ %.0103, %80 ], [ %.0103, %79 ], [ %.0103, %77 ], [ %.0103, %73 ], [ %.0103, %69 ], [ %64, %61 ], [ %.0103, %60 ], [ %.0103, %50 ], [ %.0103, %40 ], [ %.0103, %38 ], [ %.0103, %22 ], [ %.0103, %12 ]
  %.0101.be = phi i32 [ %.0101, %11 ], [ %.0101, %416 ], [ %.0101, %415 ], [ %.0101, %414 ], [ %.0101, %409 ], [ %.0101, %404 ], [ %.0101, %403 ], [ %.0101, %400 ], [ %.0101, %399 ], [ %.0101, %397 ], [ %.0101, %396 ], [ %.0101, %395 ], [ %.0101, %392 ], [ %.0101, %390 ], [ %.0101, %378 ], [ %.0101, %368 ], [ %.0101, %366 ], [ %.0101, %356 ], [ %.0101, %354 ], [ %.0101, %343 ], [ %.0101, %333 ], [ %.0101, %332 ], [ %.0101, %330 ], [ %.0101, %329 ], [ %.0101, %328 ], [ %.0101, %317 ], [ %.0101, %307 ], [ %.0101, %306 ], [ %.0101, %292 ], [ %.0101, %282 ], [ %.0101, %281 ], [ %.0101, %267 ], [ %.0101, %257 ], [ %.0101, %253 ], [ %.0101, %250 ], [ %.0101, %246 ], [ %.0101, %245 ], [ %.0101, %243 ], [ %.0101, %231 ], [ %.0101, %221 ], [ %.0101, %220 ], [ %.0101, %218 ], [ %.0101, %217 ], [ %.0101, %205 ], [ %.0101, %195 ], [ %.0101, %193 ], [ %.0101, %182 ], [ %.0101, %172 ], [ %.0101, %170 ], [ %.0101, %168 ], [ %.0101, %167 ], [ %.0101, %166 ], [ %.0101, %156 ], [ %.0101, %146 ], [ %.0101, %141 ], [ %.0101, %136 ], [ %.0101, %132 ], [ %.0101, %129 ], [ %.0101, %125 ], [ %.0101, %124 ], [ %.0101, %120 ], [ %.0101, %119 ], [ %.0101, %118 ], [ %.0101, %108 ], [ %.0101, %98 ], [ %.0101, %95 ], [ %.0101, %92 ], [ %.0101, %90 ], [ %.0101, %88 ], [ %.0101, %84 ], [ %.0101, %80 ], [ %.0101, %79 ], [ %78, %77 ], [ %.0101, %73 ], [ %.0101, %69 ], [ 0, %61 ], [ %.0101, %60 ], [ %.0101, %50 ], [ %.0101, %40 ], [ %.0101, %38 ], [ %.0101, %22 ], [ %.0101, %12 ]
  %.099.be = phi i32 [ %.099, %11 ], [ %.099, %416 ], [ %.099, %415 ], [ %.099, %414 ], [ %.099, %409 ], [ %.099, %404 ], [ %.099, %403 ], [ %.099, %400 ], [ %.099, %399 ], [ %.099, %397 ], [ %.099, %396 ], [ %.099, %395 ], [ %.099, %392 ], [ %.099, %390 ], [ %.099, %378 ], [ %.099, %368 ], [ %.099, %366 ], [ %.099, %356 ], [ %.099, %354 ], [ %.099, %343 ], [ %.099, %333 ], [ %.099, %332 ], [ %.099, %330 ], [ %.099, %329 ], [ %.099, %328 ], [ %.099, %317 ], [ %.099, %307 ], [ %.099, %306 ], [ %.099, %292 ], [ %.099, %282 ], [ %.099, %281 ], [ %.099, %267 ], [ %.099, %257 ], [ %.099, %253 ], [ %.099, %250 ], [ %.099, %246 ], [ %.099, %245 ], [ %.099, %243 ], [ %.099, %231 ], [ %.099, %221 ], [ %.099, %220 ], [ %.099, %218 ], [ %.099, %217 ], [ %.099, %205 ], [ %.099, %195 ], [ %.099, %193 ], [ %.099, %182 ], [ %.099, %172 ], [ %.099, %170 ], [ %.099, %168 ], [ %.099, %167 ], [ %.099, %166 ], [ %.099, %156 ], [ %.099, %146 ], [ %.099, %141 ], [ %.099, %136 ], [ %.099, %132 ], [ %.099, %129 ], [ %.099, %125 ], [ %.099, %124 ], [ %.099, %120 ], [ %.099, %119 ], [ %.099, %118 ], [ %.099, %108 ], [ %.099, %98 ], [ %.099, %95 ], [ %.099, %92 ], [ %.099, %90 ], [ %89, %88 ], [ %.099, %84 ], [ %.099, %80 ], [ 0, %79 ], [ %.099, %77 ], [ %.099, %73 ], [ %.099, %69 ], [ %.099, %61 ], [ %.099, %60 ], [ %.099, %50 ], [ %.099, %40 ], [ %.099, %38 ], [ %.099, %22 ], [ %.099, %12 ]
  %.097.be = phi i32 [ %.097, %11 ], [ %.097, %416 ], [ %.097, %415 ], [ %.097, %414 ], [ %.097, %409 ], [ %.097, %404 ], [ %.097, %403 ], [ %.097, %400 ], [ %.097, %399 ], [ %.097, %397 ], [ %.neg105, %396 ], [ %.097, %395 ], [ %.097, %392 ], [ %.097, %390 ], [ %.097, %378 ], [ %.097, %368 ], [ %.097, %366 ], [ %.097, %356 ], [ %.097, %354 ], [ %.097, %343 ], [ %.097, %333 ], [ %.097, %332 ], [ %.097, %330 ], [ %.097, %329 ], [ %.097, %328 ], [ %.097, %317 ], [ %.097, %307 ], [ %.097, %306 ], [ %.097, %292 ], [ %.097, %282 ], [ %.097, %281 ], [ %.097, %267 ], [ %.097, %257 ], [ %.097, %253 ], [ %.097, %250 ], [ %.097, %246 ], [ %.097, %245 ], [ %.097, %243 ], [ %.097, %231 ], [ %.097, %221 ], [ %.097, %220 ], [ %.097, %218 ], [ %.097, %217 ], [ %.097, %205 ], [ %.097, %195 ], [ %.097, %193 ], [ %.097, %182 ], [ %.097, %172 ], [ %.097, %170 ], [ %.097, %168 ], [ %.097, %167 ], [ %.097, %166 ], [ %.097, %156 ], [ %.097, %146 ], [ %.097, %141 ], [ %.097, %136 ], [ %.097, %132 ], [ %.097, %129 ], [ %.097, %125 ], [ %.097, %124 ], [ %.097, %120 ], [ %.097, %119 ], [ %.097, %118 ], [ %.neg107, %108 ], [ %.097, %98 ], [ %.097, %95 ], [ %.097, %92 ], [ 0, %90 ], [ %.097, %88 ], [ %.097, %84 ], [ %.097, %80 ], [ %.097, %79 ], [ %.097, %77 ], [ %.097, %73 ], [ %.097, %69 ], [ %.097, %61 ], [ %.097, %60 ], [ %.097, %50 ], [ %.097, %40 ], [ %.097, %38 ], [ %.097, %22 ], [ %.097, %12 ]
  %.095.be = phi i32 [ %.095, %11 ], [ %.095, %416 ], [ %.095, %415 ], [ %.095, %414 ], [ %.095, %409 ], [ %.095, %404 ], [ %.095, %403 ], [ %.095, %400 ], [ %.095, %399 ], [ %.095, %397 ], [ %.095, %396 ], [ %.095, %395 ], [ %.095, %392 ], [ %.095, %390 ], [ %.095, %378 ], [ %.095, %368 ], [ %.095, %366 ], [ %.095, %356 ], [ %.095, %354 ], [ %.095, %343 ], [ %.095, %333 ], [ %.095, %332 ], [ %.095, %330 ], [ %.095, %329 ], [ %.095, %328 ], [ %.095, %317 ], [ %.095, %307 ], [ %.095, %306 ], [ %.095, %292 ], [ %.095, %282 ], [ %.095, %281 ], [ %.095, %267 ], [ %.095, %257 ], [ %.095, %253 ], [ %.095, %250 ], [ %.095, %246 ], [ %.095, %245 ], [ %.095, %243 ], [ %.095, %231 ], [ %.095, %221 ], [ %.095, %220 ], [ %.095, %218 ], [ %.095, %217 ], [ %.095, %205 ], [ %.095, %195 ], [ %.095, %193 ], [ %.095, %182 ], [ %.095, %172 ], [ %.095, %170 ], [ %.095, %168 ], [ %.095, %167 ], [ %.095, %166 ], [ %.095, %156 ], [ %.095, %146 ], [ %.095, %141 ], [ %140, %136 ], [ %135, %132 ], [ %.095, %129 ], [ %.095, %125 ], [ %.095, %124 ], [ %.095, %120 ], [ 0, %119 ], [ %.095, %118 ], [ %.095, %108 ], [ %.095, %98 ], [ %.095, %95 ], [ %.095, %92 ], [ %.095, %90 ], [ %.095, %88 ], [ %.095, %84 ], [ %.095, %80 ], [ %.095, %79 ], [ %.095, %77 ], [ %.095, %73 ], [ %.095, %69 ], [ %.095, %61 ], [ %.095, %60 ], [ %.095, %50 ], [ %.095, %40 ], [ %.095, %38 ], [ %.095, %22 ], [ %.095, %12 ]
  %.093.be = phi i32 [ %.093, %11 ], [ %.093, %416 ], [ %.093, %415 ], [ %.093, %414 ], [ %.093, %409 ], [ %.093, %404 ], [ %.093, %403 ], [ %.093, %400 ], [ %.093, %399 ], [ %.093, %397 ], [ %.093, %396 ], [ %.093, %395 ], [ %.093, %392 ], [ %.093, %390 ], [ %.093, %378 ], [ %.093, %368 ], [ %.093, %366 ], [ %.093, %356 ], [ %.093, %354 ], [ %.093, %343 ], [ %.093, %333 ], [ %.093, %332 ], [ %.093, %330 ], [ %.093, %329 ], [ %.093, %328 ], [ %.093, %317 ], [ %.093, %307 ], [ %.093, %306 ], [ %.093, %292 ], [ %.093, %282 ], [ %.093, %281 ], [ %.093, %267 ], [ %.093, %257 ], [ %.093, %253 ], [ %.093, %250 ], [ %.093, %246 ], [ %.093, %245 ], [ %.093, %243 ], [ %.093, %231 ], [ %.093, %221 ], [ %.093, %220 ], [ %.093, %218 ], [ %.093, %217 ], [ %.093, %205 ], [ %.093, %195 ], [ %.093, %193 ], [ %.093, %182 ], [ %.093, %172 ], [ %.093, %170 ], [ %169, %168 ], [ %.093, %167 ], [ %.093, %166 ], [ %.093, %156 ], [ %.093, %146 ], [ %.093, %141 ], [ %.093, %136 ], [ %.093, %132 ], [ %.093, %129 ], [ %.093, %125 ], [ %.093, %124 ], [ %.093, %120 ], [ 0, %119 ], [ %.093, %118 ], [ %.093, %108 ], [ %.093, %98 ], [ %.093, %95 ], [ %.093, %92 ], [ %.093, %90 ], [ %.093, %88 ], [ %.093, %84 ], [ %.093, %80 ], [ %.093, %79 ], [ %.093, %77 ], [ %.093, %73 ], [ %.093, %69 ], [ %.093, %61 ], [ %.093, %60 ], [ %.093, %50 ], [ %.093, %40 ], [ %.093, %38 ], [ %.093, %22 ], [ %.093, %12 ]
  %.091.be = phi i32 [ %.091, %11 ], [ %.091, %416 ], [ %.091, %415 ], [ %.091, %414 ], [ %.091, %409 ], [ %.091, %404 ], [ %.091, %403 ], [ %.091, %400 ], [ %.091, %399 ], [ %398, %397 ], [ %.091, %396 ], [ %.091, %395 ], [ %.091, %392 ], [ %.091, %390 ], [ %.091, %378 ], [ %.091, %368 ], [ %.091, %366 ], [ %.091, %356 ], [ %.091, %354 ], [ %.091, %343 ], [ %.091, %333 ], [ %.091, %332 ], [ %.091, %330 ], [ %.091, %329 ], [ %.091, %328 ], [ %.091, %317 ], [ %.091, %307 ], [ %.091, %306 ], [ %.091, %292 ], [ %.091, %282 ], [ %.091, %281 ], [ %.091, %267 ], [ %.091, %257 ], [ %.091, %253 ], [ %.091, %250 ], [ %.091, %246 ], [ %.091, %245 ], [ %.091, %243 ], [ %.091, %231 ], [ %.091, %221 ], [ %.091, %220 ], [ %.091, %218 ], [ %.091, %217 ], [ %.091, %205 ], [ %.091, %195 ], [ %.091, %193 ], [ %.091, %182 ], [ %.091, %172 ], [ %.091, %170 ], [ %.091, %168 ], [ %.091, %167 ], [ %.091, %166 ], [ %.neg106, %156 ], [ %.091, %146 ], [ %.091, %141 ], [ %.091, %136 ], [ %.091, %132 ], [ %.091, %129 ], [ %.091, %125 ], [ %.093, %124 ], [ %.091, %120 ], [ %.091, %119 ], [ %.091, %118 ], [ %.091, %108 ], [ %.091, %98 ], [ %.091, %95 ], [ %.091, %92 ], [ %.091, %90 ], [ %.091, %88 ], [ %.091, %84 ], [ %.091, %80 ], [ %.091, %79 ], [ %.091, %77 ], [ %.091, %73 ], [ %.091, %69 ], [ %.091, %61 ], [ %.091, %60 ], [ %.091, %50 ], [ %.091, %40 ], [ %.091, %38 ], [ %.091, %22 ], [ %.091, %12 ]
  %.089.be = phi i32 [ %.089, %11 ], [ %.089, %416 ], [ %.089, %415 ], [ %.089, %414 ], [ %.089, %409 ], [ %.089, %404 ], [ %.089, %403 ], [ %.089, %400 ], [ %.089, %399 ], [ %.089, %397 ], [ %.089, %396 ], [ %.089, %395 ], [ %.089, %392 ], [ %.089, %390 ], [ %.089, %378 ], [ %.089, %368 ], [ %.089, %366 ], [ %.089, %356 ], [ %.089, %354 ], [ %.089, %343 ], [ %.089, %333 ], [ %.089, %332 ], [ %.089, %330 ], [ %.089, %329 ], [ %.089, %328 ], [ %.089, %317 ], [ %.089, %307 ], [ %.089, %306 ], [ %.089, %292 ], [ %.089, %282 ], [ %.089, %281 ], [ %.089, %267 ], [ %.089, %257 ], [ %.089, %253 ], [ %.089, %250 ], [ %.089, %246 ], [ %.089, %245 ], [ %.089, %243 ], [ %.089, %231 ], [ %.089, %221 ], [ %.089, %220 ], [ %219, %218 ], [ %.089, %217 ], [ %.089, %205 ], [ %.089, %195 ], [ %.089, %193 ], [ %.089, %182 ], [ %.089, %172 ], [ 0, %170 ], [ %.089, %168 ], [ %.089, %167 ], [ %.089, %166 ], [ %.089, %156 ], [ %.089, %146 ], [ %.089, %141 ], [ %.089, %136 ], [ %.089, %132 ], [ %.089, %129 ], [ %.089, %125 ], [ %.089, %124 ], [ %.089, %120 ], [ %.089, %119 ], [ %.089, %118 ], [ %.089, %108 ], [ %.089, %98 ], [ %.089, %95 ], [ %.089, %92 ], [ %.089, %90 ], [ %.089, %88 ], [ %.089, %84 ], [ %.089, %80 ], [ %.089, %79 ], [ %.089, %77 ], [ %.089, %73 ], [ %.089, %69 ], [ %.089, %61 ], [ %.089, %60 ], [ %.089, %50 ], [ %.089, %40 ], [ %.089, %38 ], [ %.089, %22 ], [ %.089, %12 ]
  %.087.be = phi i32 [ %.087, %11 ], [ %.087, %416 ], [ %.087, %415 ], [ %.087, %414 ], [ %.087, %409 ], [ %408, %404 ], [ %.087, %403 ], [ %.087, %400 ], [ %.087, %399 ], [ %.087, %397 ], [ %.087, %396 ], [ %.087, %395 ], [ %.087, %392 ], [ %.087, %390 ], [ %.087, %378 ], [ %.087, %368 ], [ %.087, %366 ], [ %.087, %356 ], [ %.087, %354 ], [ %.087, %343 ], [ %.087, %333 ], [ %.087, %332 ], [ %.087, %330 ], [ %.087, %329 ], [ %.087, %328 ], [ %.087, %317 ], [ %.087, %307 ], [ %.087, %306 ], [ %.087, %292 ], [ %.087, %282 ], [ %.087, %281 ], [ %271, %267 ], [ %.087, %257 ], [ %256, %253 ], [ %.087, %250 ], [ %.087, %246 ], [ %.087, %245 ], [ %.087, %243 ], [ %.087, %231 ], [ %.087, %221 ], [ 0, %220 ], [ %.087, %218 ], [ %.087, %217 ], [ %.087, %205 ], [ %.087, %195 ], [ %.087, %193 ], [ %.087, %182 ], [ %.087, %172 ], [ %.087, %170 ], [ %.087, %168 ], [ %.087, %167 ], [ %.087, %166 ], [ %.087, %156 ], [ %.087, %146 ], [ %.087, %141 ], [ %.087, %136 ], [ %.087, %132 ], [ %.087, %129 ], [ %.087, %125 ], [ %.087, %124 ], [ %.087, %120 ], [ %.087, %119 ], [ %.087, %118 ], [ %.087, %108 ], [ %.087, %98 ], [ %.087, %95 ], [ %.087, %92 ], [ %.087, %90 ], [ %.087, %88 ], [ %.087, %84 ], [ %.087, %80 ], [ %.087, %79 ], [ %.087, %77 ], [ %.087, %73 ], [ %.087, %69 ], [ %.087, %61 ], [ %.087, %60 ], [ %.087, %50 ], [ %.087, %40 ], [ %.087, %38 ], [ %.087, %22 ], [ %.087, %12 ]
  %.085.be = phi i32 [ %.085, %11 ], [ %.085, %416 ], [ %.085, %415 ], [ %.085, %414 ], [ %.085, %409 ], [ %.085, %404 ], [ %.085, %403 ], [ %.085, %400 ], [ %.085, %399 ], [ %.085, %397 ], [ %.085, %396 ], [ %.085, %395 ], [ %.085, %392 ], [ %.085, %390 ], [ %.085, %378 ], [ %.085, %368 ], [ %.085, %366 ], [ %.085, %356 ], [ %.085, %354 ], [ %.085, %343 ], [ %.085, %333 ], [ %.085, %332 ], [ %331, %330 ], [ %.085, %329 ], [ %.085, %328 ], [ %.085, %317 ], [ %.085, %307 ], [ %.085, %306 ], [ %.085, %292 ], [ %.085, %282 ], [ %.085, %281 ], [ %.085, %267 ], [ %.085, %257 ], [ %.085, %253 ], [ %.085, %250 ], [ %.085, %246 ], [ %.085, %245 ], [ %.085, %243 ], [ %.085, %231 ], [ %.085, %221 ], [ 0, %220 ], [ %.085, %218 ], [ %.085, %217 ], [ %.085, %205 ], [ %.085, %195 ], [ %.085, %193 ], [ %.085, %182 ], [ %.085, %172 ], [ %.085, %170 ], [ %.085, %168 ], [ %.085, %167 ], [ %.085, %166 ], [ %.085, %156 ], [ %.085, %146 ], [ %.085, %141 ], [ %.085, %136 ], [ %.085, %132 ], [ %.085, %129 ], [ %.085, %125 ], [ %.085, %124 ], [ %.085, %120 ], [ %.085, %119 ], [ %.085, %118 ], [ %.085, %108 ], [ %.085, %98 ], [ %.085, %95 ], [ %.085, %92 ], [ %.085, %90 ], [ %.085, %88 ], [ %.085, %84 ], [ %.085, %80 ], [ %.085, %79 ], [ %.085, %77 ], [ %.085, %73 ], [ %.085, %69 ], [ %.085, %61 ], [ %.085, %60 ], [ %.085, %50 ], [ %.085, %40 ], [ %.085, %38 ], [ %.085, %22 ], [ %.085, %12 ]
  %.083.be = phi i32 [ %.083, %11 ], [ %.083, %416 ], [ %.083, %415 ], [ %.neg, %414 ], [ %.083, %409 ], [ %.083, %404 ], [ %.083, %403 ], [ %.083, %400 ], [ %.083, %399 ], [ %.083, %397 ], [ %.083, %396 ], [ %.083, %395 ], [ %.083, %392 ], [ %.083, %390 ], [ %.083, %378 ], [ %.083, %368 ], [ %.083, %366 ], [ %.083, %356 ], [ %.083, %354 ], [ %.083, %343 ], [ %.083, %333 ], [ %.083, %332 ], [ %.083, %330 ], [ %.083, %329 ], [ %.083, %328 ], [ %318, %317 ], [ %.083, %307 ], [ %.083, %306 ], [ %.083, %292 ], [ %.083, %282 ], [ %.083, %281 ], [ %.083, %267 ], [ %.083, %257 ], [ %.083, %253 ], [ %.083, %250 ], [ %.083, %246 ], [ %.085, %245 ], [ %.083, %243 ], [ %.083, %231 ], [ %.083, %221 ], [ %.083, %220 ], [ %.083, %218 ], [ %.083, %217 ], [ %.083, %205 ], [ %.083, %195 ], [ %.083, %193 ], [ %.083, %182 ], [ %.083, %172 ], [ %.083, %170 ], [ %.083, %168 ], [ %.083, %167 ], [ %.083, %166 ], [ %.083, %156 ], [ %.083, %146 ], [ %.083, %141 ], [ %.083, %136 ], [ %.083, %132 ], [ %.083, %129 ], [ %.083, %125 ], [ %.083, %124 ], [ %.083, %120 ], [ %.083, %119 ], [ %.083, %118 ], [ %.083, %108 ], [ %.083, %98 ], [ %.083, %95 ], [ %.083, %92 ], [ %.083, %90 ], [ %.083, %88 ], [ %.083, %84 ], [ %.083, %80 ], [ %.083, %79 ], [ %.083, %77 ], [ %.083, %73 ], [ %.083, %69 ], [ %.083, %61 ], [ %.083, %60 ], [ %.083, %50 ], [ %.083, %40 ], [ %.083, %38 ], [ %.083, %22 ], [ %.083, %12 ]
  %.081.be = phi i32 [ %.081, %11 ], [ %.081, %416 ], [ %.081, %415 ], [ %.081, %414 ], [ %.081, %409 ], [ %.081, %404 ], [ %.081, %403 ], [ %.081, %400 ], [ %.081, %399 ], [ %.081, %397 ], [ %.081, %396 ], [ %.081, %395 ], [ %.081, %392 ], [ %.081, %390 ], [ %.081, %378 ], [ %.081, %368 ], [ %.081, %366 ], [ %365, %356 ], [ %.081, %354 ], [ %.081, %343 ], [ %.081, %333 ], [ 0, %332 ], [ %.081, %330 ], [ %.081, %329 ], [ %.081, %328 ], [ %.081, %317 ], [ %.081, %307 ], [ %.081, %306 ], [ %.081, %292 ], [ %.081, %282 ], [ %.081, %281 ], [ %.081, %267 ], [ %.081, %257 ], [ %.081, %253 ], [ %.081, %250 ], [ %.081, %246 ], [ %.081, %245 ], [ %.081, %243 ], [ %.081, %231 ], [ %.081, %221 ], [ %.081, %220 ], [ %.081, %218 ], [ %.081, %217 ], [ %.081, %205 ], [ %.081, %195 ], [ %.081, %193 ], [ %.081, %182 ], [ %.081, %172 ], [ %.081, %170 ], [ %.081, %168 ], [ %.081, %167 ], [ %.081, %166 ], [ %.081, %156 ], [ %.081, %146 ], [ %.081, %141 ], [ %.081, %136 ], [ %.081, %132 ], [ %.081, %129 ], [ %.081, %125 ], [ %.081, %124 ], [ %.081, %120 ], [ %.081, %119 ], [ %.081, %118 ], [ %.081, %108 ], [ %.081, %98 ], [ %.081, %95 ], [ %.081, %92 ], [ %.081, %90 ], [ %.081, %88 ], [ %.081, %84 ], [ %.081, %80 ], [ %.081, %79 ], [ %.081, %77 ], [ %.081, %73 ], [ %.081, %69 ], [ %.081, %61 ], [ %.081, %60 ], [ %.081, %50 ], [ %.081, %40 ], [ %.081, %38 ], [ %.081, %22 ], [ %.081, %12 ]
  %.079.be = phi i32 [ %.079, %11 ], [ %.079, %416 ], [ %.079, %415 ], [ %.079, %414 ], [ %.079, %409 ], [ %.079, %404 ], [ %.079, %403 ], [ %.079, %400 ], [ %.079, %399 ], [ %.079, %397 ], [ %.079, %396 ], [ %.079, %395 ], [ %.079, %392 ], [ %.079, %390 ], [ %.079, %378 ], [ %.079, %368 ], [ %367, %366 ], [ %.079, %356 ], [ %.079, %354 ], [ %.079, %343 ], [ %.079, %333 ], [ 0, %332 ], [ %.079, %330 ], [ %.079, %329 ], [ %.079, %328 ], [ %.079, %317 ], [ %.079, %307 ], [ %.079, %306 ], [ %.079, %292 ], [ %.079, %282 ], [ %.079, %281 ], [ %.079, %267 ], [ %.079, %257 ], [ %.079, %253 ], [ %.079, %250 ], [ %.079, %246 ], [ %.079, %245 ], [ %.079, %243 ], [ %.079, %231 ], [ %.079, %221 ], [ %.079, %220 ], [ %.079, %218 ], [ %.079, %217 ], [ %.079, %205 ], [ %.079, %195 ], [ %.079, %193 ], [ %.079, %182 ], [ %.079, %172 ], [ %.079, %170 ], [ %.079, %168 ], [ %.079, %167 ], [ %.079, %166 ], [ %.079, %156 ], [ %.079, %146 ], [ %.079, %141 ], [ %.079, %136 ], [ %.079, %132 ], [ %.079, %129 ], [ %.079, %125 ], [ %.079, %124 ], [ %.079, %120 ], [ %.079, %119 ], [ %.079, %118 ], [ %.079, %108 ], [ %.079, %98 ], [ %.079, %95 ], [ %.079, %92 ], [ %.079, %90 ], [ %.079, %88 ], [ %.079, %84 ], [ %.079, %80 ], [ %.079, %79 ], [ %.079, %77 ], [ %.079, %73 ], [ %.079, %69 ], [ %.079, %61 ], [ %.079, %60 ], [ %.079, %50 ], [ %.079, %40 ], [ %.079, %38 ], [ %.079, %22 ], [ %.079, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ 1884401125, %416 ], [ -1627639771, %415 ], [ -21232442, %414 ], [ -1018820314, %409 ], [ -1923201773, %404 ], [ 85494876, %403 ], [ -1330912799, %400 ], [ -299826401, %399 ], [ -1534295863, %397 ], [ -1406203060, %396 ], [ 1771247765, %395 ], [ -1554534018, %392 ], [ -950526426, %390 ], [ %389, %378 ], [ %377, %368 ], [ 1222660050, %366 ], [ 1722040665, %356 ], [ %355, %354 ], [ %353, %343 ], [ %342, %333 ], [ 1222660050, %332 ], [ 1890740113, %330 ], [ -1755430485, %329 ], [ 566522229, %328 ], [ %327, %317 ], [ %316, %307 ], [ -1734429628, %306 ], [ %305, %292 ], [ %291, %282 ], [ -338680628, %281 ], [ %280, %267 ], [ %266, %257 ], [ -338680628, %253 ], [ %252, %250 ], [ %249, %246 ], [ 566522229, %245 ], [ %244, %243 ], [ %242, %231 ], [ %230, %221 ], [ 1890740113, %220 ], [ 304505453, %218 ], [ 140591257, %217 ], [ %216, %205 ], [ %204, %195 ], [ %194, %193 ], [ %192, %182 ], [ %181, %172 ], [ 304505453, %170 ], [ -778249715, %168 ], [ 1543256043, %167 ], [ -282862527, %166 ], [ %165, %156 ], [ %155, %146 ], [ -1377418352, %141 ], [ 604852441, %136 ], [ 604852441, %132 ], [ %131, %129 ], [ %128, %125 ], [ -282862527, %124 ], [ %123, %120 ], [ -778249715, %119 ], [ 288201059, %118 ], [ %117, %108 ], [ %107, %98 ], [ 2051628574, %95 ], [ %94, %92 ], [ 288201059, %90 ], [ -953564650, %88 ], [ 1053815820, %84 ], [ %83, %80 ], [ -953564650, %79 ], [ -1375581001, %77 ], [ 533269543, %73 ], [ %72, %69 ], [ -1375581001, %61 ], [ -2127743507, %60 ], [ %59, %50 ], [ %49, %40 ], [ %39, %38 ], [ %37, %22 ], [ %21, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = load i32, i32* @x.1, align 4
  %14 = load i32, i32* @y.2, align 4
  %15 = add i32 %13, -1
  %16 = mul i32 %15, %13
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %19, %18
  %21 = select i1 %20, i32 -1554534018, i32 -6806187
  br label %.backedge

22:                                               ; preds = %11
  %23 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %24 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %10)
  %25 = load i32, i32* %9, align 4
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %25
  %28 = icmp eq i32 %27, 0
  store i1 %28, i1* %8, align 1
  %29 = load i32, i32* @x.1, align 4
  %30 = load i32, i32* @y.2, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 1439184983, i32 -6806187
  br label %.backedge

38:                                               ; preds = %11
  %.0..0..0.60 = load volatile i1, i1* %8, align 1
  %39 = select i1 %.0..0..0.60, i32 -362267923, i32 660728744
  br label %.backedge

40:                                               ; preds = %11
  %41 = load i32, i32* @x.1, align 4
  %42 = load i32, i32* @y.2, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1771247765, i32 -369441900
  br label %.backedge

50:                                               ; preds = %11
  %51 = load i32, i32* @x.1, align 4
  %52 = load i32, i32* @y.2, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 1400514060, i32 -369441900
  br label %.backedge

60:                                               ; preds = %11
  br label %.backedge

61:                                               ; preds = %11
  %62 = load i32, i32* %9, align 4
  %63 = zext i32 %62 to i64
  %64 = call i8* @llvm.stacksave()
  %65 = alloca i32, i64 %63, align 16
  store i32* %65, i32** %7, align 8
  %66 = load i32, i32* %10, align 4
  %67 = zext i32 %66 to i64
  %68 = alloca i32, i64 %67, align 16
  store i32* %68, i32** %6, align 8
  br label %.backedge

69:                                               ; preds = %11
  %70 = load i32, i32* %9, align 4
  %71 = icmp slt i32 %.0101, %70
  %72 = select i1 %71, i32 -698063689, i32 457630384
  br label %.backedge

73:                                               ; preds = %11
  %74 = sext i32 %.0101 to i64
  %.0..0..0.61 = load volatile i32*, i32** %7, align 8
  %75 = getelementptr inbounds i32, i32* %.0..0..0.61, i64 %74
  %76 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* dereferenceable(4) %75)
  br label %.backedge

77:                                               ; preds = %11
  %78 = add i32 %.0101, 1
  br label %.backedge

79:                                               ; preds = %11
  br label %.backedge

80:                                               ; preds = %11
  %81 = load i32, i32* %10, align 4
  %82 = icmp slt i32 %.099, %81
  %83 = select i1 %82, i32 -1001770696, i32 1628795570
  br label %.backedge

84:                                               ; preds = %11
  %85 = sext i32 %.099 to i64
  %.0..0..0.64 = load volatile i32*, i32** %6, align 8
  %86 = getelementptr inbounds i32, i32* %.0..0..0.64, i64 %85
  %87 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* dereferenceable(4) %86)
  br label %.backedge

88:                                               ; preds = %11
  %89 = add i32 %.099, 1
  br label %.backedge

90:                                               ; preds = %11
  %91 = alloca [1500001 x i16], align 16
  %.sub108 = getelementptr inbounds [1500001 x i16], [1500001 x i16]* %91, i64 0, i64 0
  store i16* %.sub108, i16** %5, align 8
  br label %.backedge

92:                                               ; preds = %11
  %93 = icmp slt i32 %.097, 1500001
  %94 = select i1 %93, i32 191691512, i32 1048747853
  br label %.backedge

95:                                               ; preds = %11
  %96 = sext i32 %.097 to i64
  %.0..0..0.68 = load volatile i16*, i16** %5, align 8
  %97 = getelementptr inbounds i16, i16* %.0..0..0.68, i64 %96
  store i16 0, i16* %97, align 2
  br label %.backedge

98:                                               ; preds = %11
  %99 = load i32, i32* @x.1, align 4
  %100 = load i32, i32* @y.2, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 -1406203060, i32 -2137204372
  br label %.backedge

108:                                              ; preds = %11
  %.neg107 = add i32 %.097, 1
  %109 = load i32, i32* @x.1, align 4
  %110 = load i32, i32* @y.2, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 114315269, i32 -2137204372
  br label %.backedge

118:                                              ; preds = %11
  br label %.backedge

119:                                              ; preds = %11
  br label %.backedge

120:                                              ; preds = %11
  %121 = load i32, i32* %9, align 4
  %122 = icmp slt i32 %.093, %121
  %123 = select i1 %122, i32 317731607, i32 2139288898
  br label %.backedge

124:                                              ; preds = %11
  br label %.backedge

125:                                              ; preds = %11
  %126 = load i32, i32* %9, align 4
  %127 = icmp slt i32 %.091, %126
  %128 = select i1 %127, i32 798477965, i32 2051814985
  br label %.backedge

129:                                              ; preds = %11
  %130 = icmp eq i32 %.093, %.091
  %131 = select i1 %130, i32 -1231564499, i32 -1125571205
  br label %.backedge

132:                                              ; preds = %11
  %133 = sext i32 %.093 to i64
  %.0..0..0.62 = load volatile i32*, i32** %7, align 8
  %134 = getelementptr inbounds i32, i32* %.0..0..0.62, i64 %133
  %135 = load i32, i32* %134, align 4
  br label %.backedge

136:                                              ; preds = %11
  %137 = sext i32 %.091 to i64
  %.0..0..0.63 = load volatile i32*, i32** %7, align 8
  %138 = getelementptr inbounds i32, i32* %.0..0..0.63, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = add i32 %139, %.095
  br label %.backedge

141:                                              ; preds = %11
  %142 = sext i32 %.095 to i64
  %.0..0..0.69 = load volatile i16*, i16** %5, align 8
  %143 = getelementptr inbounds i16, i16* %.0..0..0.69, i64 %142
  %144 = load i16, i16* %143, align 2
  %145 = add i16 %144, 1
  store i16 %145, i16* %143, align 2
  br label %.backedge

146:                                              ; preds = %11
  %147 = load i32, i32* @x.1, align 4
  %148 = load i32, i32* @y.2, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 -1534295863, i32 119288523
  br label %.backedge

156:                                              ; preds = %11
  %.neg106 = add i32 %.091, 1
  %157 = load i32, i32* @x.1, align 4
  %158 = load i32, i32* @y.2, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 -418142429, i32 119288523
  br label %.backedge

166:                                              ; preds = %11
  br label %.backedge

167:                                              ; preds = %11
  br label %.backedge

168:                                              ; preds = %11
  %169 = add i32 %.093, 1
  br label %.backedge

170:                                              ; preds = %11
  %171 = alloca [1500001 x i16], align 16
  %.sub = getelementptr inbounds [1500001 x i16], [1500001 x i16]* %171, i64 0, i64 0
  store i16* %.sub, i16** %4, align 8
  br label %.backedge

172:                                              ; preds = %11
  %173 = load i32, i32* @x.1, align 4
  %174 = load i32, i32* @y.2, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 -299826401, i32 1026519950
  br label %.backedge

182:                                              ; preds = %11
  %183 = icmp slt i32 %.089, 1500001
  store i1 %183, i1* %3, align 1
  %184 = load i32, i32* @x.1, align 4
  %185 = load i32, i32* @y.2, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 -534437823, i32 1026519950
  br label %.backedge

193:                                              ; preds = %11
  %.0..0..0.76 = load volatile i1, i1* %3, align 1
  %194 = select i1 %.0..0..0.76, i32 -2100116476, i32 328000101
  br label %.backedge

195:                                              ; preds = %11
  %196 = load i32, i32* @x.1, align 4
  %197 = load i32, i32* @y.2, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 -1330912799, i32 2076691815
  br label %.backedge

205:                                              ; preds = %11
  %206 = sext i32 %.089 to i64
  %.0..0..0.71 = load volatile i16*, i16** %4, align 8
  %207 = getelementptr inbounds i16, i16* %.0..0..0.71, i64 %206
  store i16 0, i16* %207, align 2
  %208 = load i32, i32* @x.1, align 4
  %209 = load i32, i32* @y.2, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 -923048283, i32 2076691815
  br label %.backedge

217:                                              ; preds = %11
  br label %.backedge

218:                                              ; preds = %11
  %219 = add i32 %.089, 1
  br label %.backedge

220:                                              ; preds = %11
  br label %.backedge

221:                                              ; preds = %11
  %222 = load i32, i32* @x.1, align 4
  %223 = load i32, i32* @y.2, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 85494876, i32 -2000271164
  br label %.backedge

231:                                              ; preds = %11
  %232 = load i32, i32* %10, align 4
  %233 = icmp slt i32 %.085, %232
  store i1 %233, i1* %2, align 1
  %234 = load i32, i32* @x.1, align 4
  %235 = load i32, i32* @y.2, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 -1246603025, i32 -2000271164
  br label %.backedge

243:                                              ; preds = %11
  %.0..0..0.77 = load volatile i1, i1* %2, align 1
  %244 = select i1 %.0..0..0.77, i32 69007344, i32 -4105367
  br label %.backedge

245:                                              ; preds = %11
  br label %.backedge

246:                                              ; preds = %11
  %247 = load i32, i32* %10, align 4
  %248 = icmp slt i32 %.083, %247
  %249 = select i1 %248, i32 -2057746987, i32 521492523
  br label %.backedge

250:                                              ; preds = %11
  %251 = icmp eq i32 %.085, %.083
  %252 = select i1 %251, i32 1326781626, i32 994885868
  br label %.backedge

253:                                              ; preds = %11
  %254 = sext i32 %.085 to i64
  %.0..0..0.65 = load volatile i32*, i32** %6, align 8
  %255 = getelementptr inbounds i32, i32* %.0..0..0.65, i64 %254
  %256 = load i32, i32* %255, align 4
  br label %.backedge

257:                                              ; preds = %11
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 -1923201773, i32 1026115853
  br label %.backedge

267:                                              ; preds = %11
  %268 = sext i32 %.083 to i64
  %.0..0..0.66 = load volatile i32*, i32** %6, align 8
  %269 = getelementptr inbounds i32, i32* %.0..0..0.66, i64 %268
  %270 = load i32, i32* %269, align 4
  %271 = add i32 %270, %.087
  %272 = load i32, i32* @x.1, align 4
  %273 = load i32, i32* @y.2, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 -148162443, i32 1026115853
  br label %.backedge

281:                                              ; preds = %11
  br label %.backedge

282:                                              ; preds = %11
  %283 = load i32, i32* @x.1, align 4
  %284 = load i32, i32* @y.2, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 -1018820314, i32 1142371513
  br label %.backedge

292:                                              ; preds = %11
  %293 = sext i32 %.087 to i64
  %.0..0..0.72 = load volatile i16*, i16** %4, align 8
  %294 = getelementptr inbounds i16, i16* %.0..0..0.72, i64 %293
  %295 = load i16, i16* %294, align 2
  %296 = add i16 %295, 1
  store i16 %296, i16* %294, align 2
  %297 = load i32, i32* @x.1, align 4
  %298 = load i32, i32* @y.2, align 4
  %299 = add i32 %297, -1
  %300 = mul i32 %299, %297
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %303, %302
  %305 = select i1 %304, i32 -2070410334, i32 1142371513
  br label %.backedge

306:                                              ; preds = %11
  br label %.backedge

307:                                              ; preds = %11
  %308 = load i32, i32* @x.1, align 4
  %309 = load i32, i32* @y.2, align 4
  %310 = add i32 %308, -1
  %311 = mul i32 %310, %308
  %312 = and i32 %311, 1
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %314, %313
  %316 = select i1 %315, i32 -21232442, i32 -631347799
  br label %.backedge

317:                                              ; preds = %11
  %318 = add i32 %.083, 1
  %319 = load i32, i32* @x.1, align 4
  %320 = load i32, i32* @y.2, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 1040942666, i32 -631347799
  br label %.backedge

328:                                              ; preds = %11
  br label %.backedge

329:                                              ; preds = %11
  br label %.backedge

330:                                              ; preds = %11
  %331 = add i32 %.085, 1
  br label %.backedge

332:                                              ; preds = %11
  br label %.backedge

333:                                              ; preds = %11
  %334 = load i32, i32* @x.1, align 4
  %335 = load i32, i32* @y.2, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 -1627639771, i32 1418834861
  br label %.backedge

343:                                              ; preds = %11
  %344 = icmp slt i32 %.079, 1500001
  store i1 %344, i1* %1, align 1
  %345 = load i32, i32* @x.1, align 4
  %346 = load i32, i32* @y.2, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 -1157127387, i32 1418834861
  br label %.backedge

354:                                              ; preds = %11
  %.0..0..0.78 = load volatile i1, i1* %1, align 1
  %355 = select i1 %.0..0..0.78, i32 -1411744902, i32 -1089504791
  br label %.backedge

356:                                              ; preds = %11
  %357 = sext i32 %.079 to i64
  %.0..0..0.70 = load volatile i16*, i16** %5, align 8
  %358 = getelementptr inbounds i16, i16* %.0..0..0.70, i64 %357
  %359 = load i16, i16* %358, align 2
  %360 = sext i16 %359 to i32
  %.0..0..0.73 = load volatile i16*, i16** %4, align 8
  %361 = getelementptr inbounds i16, i16* %.0..0..0.73, i64 %357
  %362 = load i16, i16* %361, align 2
  %363 = sext i16 %362 to i32
  %364 = mul nsw i32 %363, %360
  %365 = add i32 %364, %.081
  br label %.backedge

366:                                              ; preds = %11
  %367 = add i32 %.079, 1
  br label %.backedge

368:                                              ; preds = %11
  %369 = load i32, i32* @x.1, align 4
  %370 = load i32, i32* @y.2, align 4
  %371 = add i32 %369, -1
  %372 = mul i32 %371, %369
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %375, %374
  %377 = select i1 %376, i32 1884401125, i32 -1002876596
  br label %.backedge

378:                                              ; preds = %11
  %379 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.081)
  %380 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %379, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  call void @llvm.stackrestore(i8* %.0103)
  %381 = load i32, i32* @x.1, align 4
  %382 = load i32, i32* @y.2, align 4
  %383 = add i32 %381, -1
  %384 = mul i32 %383, %381
  %385 = and i32 %384, 1
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %387, %386
  %389 = select i1 %388, i32 -1566607882, i32 -1002876596
  br label %.backedge

390:                                              ; preds = %11
  br label %.backedge

391:                                              ; preds = %11
  ret i32 0

392:                                              ; preds = %11
  %393 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %394 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %10)
  br label %.backedge

395:                                              ; preds = %11
  br label %.backedge

396:                                              ; preds = %11
  %.neg105 = add i32 %.097, 1
  br label %.backedge

397:                                              ; preds = %11
  %398 = add i32 %.091, 1
  br label %.backedge

399:                                              ; preds = %11
  br label %.backedge

400:                                              ; preds = %11
  %401 = sext i32 %.089 to i64
  %.0..0..0.74 = load volatile i16*, i16** %4, align 8
  %402 = getelementptr inbounds i16, i16* %.0..0..0.74, i64 %401
  store i16 0, i16* %402, align 2
  br label %.backedge

403:                                              ; preds = %11
  br label %.backedge

404:                                              ; preds = %11
  %405 = sext i32 %.083 to i64
  %.0..0..0.67 = load volatile i32*, i32** %6, align 8
  %406 = getelementptr inbounds i32, i32* %.0..0..0.67, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = add i32 %407, %.087
  br label %.backedge

409:                                              ; preds = %11
  %410 = sext i32 %.087 to i64
  %.0..0..0.75 = load volatile i16*, i16** %4, align 8
  %411 = getelementptr inbounds i16, i16* %.0..0..0.75, i64 %410
  %412 = load i16, i16* %411, align 2
  %413 = add i16 %412, 1
  store i16 %413, i16* %411, align 2
  br label %.backedge

414:                                              ; preds = %11
  %.neg = add i32 %.083, 1
  br label %.backedge

415:                                              ; preds = %11
  br label %.backedge

416:                                              ; preds = %11
  %417 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.081)
  %418 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %417, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  call void @llvm.stackrestore(i8* %.0103)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s670360389.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 120857878, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 120857878, label %11
    i32 -2048926672, label %14
    i32 1794498259, label %24
    i32 -1969961581, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -2048926672, i32 -1969961581
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1794498259, i32 -1969961581
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -2048926672, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
