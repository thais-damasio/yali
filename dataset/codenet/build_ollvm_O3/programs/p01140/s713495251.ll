; ModuleID = 'build_ollvm/programs/p01140/s713495251.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s713495251.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@x = local_unnamed_addr global [2 x [1500001 x i32]] zeroinitializer, align 16
@w = global [1500 x i32] zeroinitializer, align 16
@h = global [1500 x i32] zeroinitializer, align 16
@sw = local_unnamed_addr global [1501 x i32] zeroinitializer, align 16
@sh = local_unnamed_addr global [1501 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@x.3 = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  br label %4

4:                                                ; preds = %.backedge, %0
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i64 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.0 = phi i32 [ -116575703, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -116575703, label %5
    i32 -661758102, label %15
    i32 1973706831, label %28
    i32 -887675321, label %30
    i32 -989594063, label %40
    i32 -1863843610, label %50
    i32 1818700316, label %51
    i32 -1061355441, label %52
    i32 -314397399, label %56
    i32 1185211717, label %60
    i32 805365927, label %62
    i32 -377194956, label %72
    i32 -349338315, label %82
    i32 -269787201, label %83
    i32 -1717318450, label %87
    i32 -2090765062, label %97
    i32 607277735, label %110
    i32 1149825824, label %111
    i32 1735203301, label %121
    i32 1200196631, label %132
    i32 1593075810, label %133
    i32 -1306836238, label %134
    i32 1032697165, label %138
    i32 1293199781, label %148
    i32 -1352435642, label %150
    i32 -86677983, label %160
    i32 1225272852, label %170
    i32 676439872, label %171
    i32 -1917416837, label %175
    i32 -767192727, label %185
    i32 1427429749, label %204
    i32 1872083809, label %205
    i32 1251235287, label %207
    i32 1133289843, label %217
    i32 -1825159249, label %227
    i32 11519466, label %228
    i32 34927431, label %233
    i32 -1014138394, label %234
    i32 1654065177, label %239
    i32 1412829735, label %251
    i32 -564821850, label %261
    i32 -1127389362, label %271
    i32 1395620251, label %272
    i32 1282490264, label %273
    i32 616930792, label %275
    i32 2091974441, label %285
    i32 -1728300718, label %295
    i32 2009932229, label %296
    i32 -1297388651, label %300
    i32 -1325782747, label %310
    i32 -969575149, label %321
    i32 -1998420664, label %322
    i32 425779884, label %327
    i32 171129834, label %339
    i32 69921353, label %341
    i32 -2096251471, label %342
    i32 1092682304, label %344
    i32 -1176834133, label %345
    i32 -204002029, label %348
    i32 539627405, label %357
    i32 1363196270, label %358
    i32 1449938709, label %360
    i32 543794384, label %361
    i32 79844190, label %363
    i32 -2022416003, label %364
    i32 145720631, label %365
    i32 -1205706118, label %369
    i32 -1883494871, label %371
    i32 -393921684, label %372
    i32 -1239862017, label %381
    i32 -246388409, label %382
    i32 -1877476047, label %384
    i32 -180982337, label %385
  ]

.backedge:                                        ; preds = %4, %385, %384, %382, %381, %372, %371, %369, %365, %364, %363, %361, %358, %357, %348, %345, %344, %342, %341, %339, %327, %322, %321, %310, %300, %296, %295, %285, %275, %273, %272, %271, %261, %251, %239, %234, %233, %228, %227, %217, %207, %205, %204, %185, %175, %171, %170, %160, %150, %148, %138, %134, %133, %132, %121, %111, %110, %97, %87, %83, %82, %72, %62, %60, %56, %52, %51, %50, %40, %30, %28, %15, %5
  %.062.be = phi i32 [ %.062, %4 ], [ %.062, %385 ], [ %.062, %384 ], [ %.062, %382 ], [ %.062, %381 ], [ %.062, %372 ], [ %.062, %371 ], [ %.062, %369 ], [ %.062, %365 ], [ %.062, %364 ], [ %.062, %363 ], [ %.062, %361 ], [ %.062, %358 ], [ %.062, %357 ], [ %.062, %348 ], [ %.062, %345 ], [ %.062, %344 ], [ %.062, %342 ], [ %.062, %341 ], [ %.062, %339 ], [ %.062, %327 ], [ %.062, %322 ], [ %.062, %321 ], [ %.062, %310 ], [ %.062, %300 ], [ %.062, %296 ], [ %.062, %295 ], [ %.062, %285 ], [ %.062, %275 ], [ %.062, %273 ], [ %.062, %272 ], [ %.062, %271 ], [ %.062, %261 ], [ %.062, %251 ], [ %.062, %239 ], [ %.062, %234 ], [ %.062, %233 ], [ %.062, %228 ], [ %.062, %227 ], [ %.062, %217 ], [ %.062, %207 ], [ %.062, %205 ], [ %.062, %204 ], [ %.062, %185 ], [ %.062, %175 ], [ %.062, %171 ], [ %.062, %170 ], [ %.062, %160 ], [ %.062, %150 ], [ %.062, %148 ], [ %.062, %138 ], [ %.062, %134 ], [ %.062, %133 ], [ %.062, %132 ], [ %.062, %121 ], [ %.062, %111 ], [ %.062, %110 ], [ %.062, %97 ], [ %.062, %87 ], [ %.062, %83 ], [ %.062, %82 ], [ %.062, %72 ], [ %.062, %62 ], [ %61, %60 ], [ %.062, %56 ], [ %.062, %52 ], [ 0, %51 ], [ %.062, %50 ], [ %.062, %40 ], [ %.062, %30 ], [ %.062, %28 ], [ %.062, %15 ], [ %.062, %5 ]
  %.060.be = phi i32 [ %.060, %4 ], [ %.060, %385 ], [ %.060, %384 ], [ %.060, %382 ], [ %.060, %381 ], [ %.060, %372 ], [ %.060, %371 ], [ %370, %369 ], [ %.060, %365 ], [ 0, %364 ], [ %.060, %363 ], [ %.060, %361 ], [ %.060, %358 ], [ %.060, %357 ], [ %.060, %348 ], [ %.060, %345 ], [ %.060, %344 ], [ %.060, %342 ], [ %.060, %341 ], [ %.060, %339 ], [ %.060, %327 ], [ %.060, %322 ], [ %.060, %321 ], [ %.060, %310 ], [ %.060, %300 ], [ %.060, %296 ], [ %.060, %295 ], [ %.060, %285 ], [ %.060, %275 ], [ %.060, %273 ], [ %.060, %272 ], [ %.060, %271 ], [ %.060, %261 ], [ %.060, %251 ], [ %.060, %239 ], [ %.060, %234 ], [ %.060, %233 ], [ %.060, %228 ], [ %.060, %227 ], [ %.060, %217 ], [ %.060, %207 ], [ %.060, %205 ], [ %.060, %204 ], [ %.060, %185 ], [ %.060, %175 ], [ %.060, %171 ], [ %.060, %170 ], [ %.060, %160 ], [ %.060, %150 ], [ %.060, %148 ], [ %.060, %138 ], [ %.060, %134 ], [ %.060, %133 ], [ %.060, %132 ], [ %122, %121 ], [ %.060, %111 ], [ %.060, %110 ], [ %.060, %97 ], [ %.060, %87 ], [ %.060, %83 ], [ %.060, %82 ], [ 0, %72 ], [ %.060, %62 ], [ %.060, %60 ], [ %.060, %56 ], [ %.060, %52 ], [ %.060, %51 ], [ %.060, %50 ], [ %.060, %40 ], [ %.060, %30 ], [ %.060, %28 ], [ %.060, %15 ], [ %.060, %5 ]
  %.058.be = phi i32 [ %.058, %4 ], [ %.058, %385 ], [ %.058, %384 ], [ %.058, %382 ], [ %.058, %381 ], [ %.058, %372 ], [ %.058, %371 ], [ %.058, %369 ], [ %.058, %365 ], [ %.058, %364 ], [ %.058, %363 ], [ %.058, %361 ], [ %.058, %358 ], [ %.058, %357 ], [ %.058, %348 ], [ %.058, %345 ], [ %.058, %344 ], [ %.058, %342 ], [ %.058, %341 ], [ %.058, %339 ], [ %.058, %327 ], [ %.058, %322 ], [ %.058, %321 ], [ %.058, %310 ], [ %.058, %300 ], [ %.058, %296 ], [ %.058, %295 ], [ %.058, %285 ], [ %.058, %275 ], [ %.058, %273 ], [ %.058, %272 ], [ %.058, %271 ], [ %.058, %261 ], [ %.058, %251 ], [ %.058, %239 ], [ %.058, %234 ], [ %.058, %233 ], [ %.058, %228 ], [ %.058, %227 ], [ %.058, %217 ], [ %.058, %207 ], [ %.058, %205 ], [ %.058, %204 ], [ %.058, %185 ], [ %.058, %175 ], [ %.058, %171 ], [ %.058, %170 ], [ %.058, %160 ], [ %.058, %150 ], [ %149, %148 ], [ %.058, %138 ], [ %.058, %134 ], [ 0, %133 ], [ %.058, %132 ], [ %.058, %121 ], [ %.058, %111 ], [ %.058, %110 ], [ %.058, %97 ], [ %.058, %87 ], [ %.058, %83 ], [ %.058, %82 ], [ %.058, %72 ], [ %.058, %62 ], [ %.058, %60 ], [ %.058, %56 ], [ %.058, %52 ], [ %.058, %51 ], [ %.058, %50 ], [ %.058, %40 ], [ %.058, %30 ], [ %.058, %28 ], [ %.058, %15 ], [ %.058, %5 ]
  %.056.be = phi i32 [ %.056, %4 ], [ %.056, %385 ], [ %.056, %384 ], [ %.056, %382 ], [ %.056, %381 ], [ %.056, %372 ], [ 0, %371 ], [ %.056, %369 ], [ %.056, %365 ], [ %.056, %364 ], [ %.056, %363 ], [ %.056, %361 ], [ %.056, %358 ], [ %.056, %357 ], [ %.056, %348 ], [ %.056, %345 ], [ %.056, %344 ], [ %.056, %342 ], [ %.056, %341 ], [ %.056, %339 ], [ %.056, %327 ], [ %.056, %322 ], [ %.056, %321 ], [ %.056, %310 ], [ %.056, %300 ], [ %.056, %296 ], [ %.056, %295 ], [ %.056, %285 ], [ %.056, %275 ], [ %.056, %273 ], [ %.056, %272 ], [ %.056, %271 ], [ %.056, %261 ], [ %.056, %251 ], [ %.056, %239 ], [ %.056, %234 ], [ %.056, %233 ], [ %.056, %228 ], [ %.056, %227 ], [ %.056, %217 ], [ %.056, %207 ], [ %206, %205 ], [ %.056, %204 ], [ %.056, %185 ], [ %.056, %175 ], [ %.056, %171 ], [ %.056, %170 ], [ 0, %160 ], [ %.056, %150 ], [ %.056, %148 ], [ %.056, %138 ], [ %.056, %134 ], [ %.056, %133 ], [ %.056, %132 ], [ %.056, %121 ], [ %.056, %111 ], [ %.056, %110 ], [ %.056, %97 ], [ %.056, %87 ], [ %.056, %83 ], [ %.056, %82 ], [ %.056, %72 ], [ %.056, %62 ], [ %.056, %60 ], [ %.056, %56 ], [ %.056, %52 ], [ %.056, %51 ], [ %.056, %50 ], [ %.056, %40 ], [ %.056, %30 ], [ %.056, %28 ], [ %.056, %15 ], [ %.056, %5 ]
  %.054.be = phi i32 [ %.054, %4 ], [ %.054, %385 ], [ %.054, %384 ], [ %.054, %382 ], [ 0, %381 ], [ %.054, %372 ], [ %.054, %371 ], [ %.054, %369 ], [ %.054, %365 ], [ %.054, %364 ], [ %.054, %363 ], [ %.054, %361 ], [ %.054, %358 ], [ %.054, %357 ], [ %.054, %348 ], [ %.054, %345 ], [ %.054, %344 ], [ %.054, %342 ], [ %.054, %341 ], [ %.054, %339 ], [ %.054, %327 ], [ %.054, %322 ], [ %.054, %321 ], [ %.054, %310 ], [ %.054, %300 ], [ %.054, %296 ], [ %.054, %295 ], [ %.054, %285 ], [ %.054, %275 ], [ %274, %273 ], [ %.054, %272 ], [ %.054, %271 ], [ %.054, %261 ], [ %.054, %251 ], [ %.054, %239 ], [ %.054, %234 ], [ %.054, %233 ], [ %.054, %228 ], [ %.054, %227 ], [ 0, %217 ], [ %.054, %207 ], [ %.054, %205 ], [ %.054, %204 ], [ %.054, %185 ], [ %.054, %175 ], [ %.054, %171 ], [ %.054, %170 ], [ %.054, %160 ], [ %.054, %150 ], [ %.054, %148 ], [ %.054, %138 ], [ %.054, %134 ], [ %.054, %133 ], [ %.054, %132 ], [ %.054, %121 ], [ %.054, %111 ], [ %.054, %110 ], [ %.054, %97 ], [ %.054, %87 ], [ %.054, %83 ], [ %.054, %82 ], [ %.054, %72 ], [ %.054, %62 ], [ %.054, %60 ], [ %.054, %56 ], [ %.054, %52 ], [ %.054, %51 ], [ %.054, %50 ], [ %.054, %40 ], [ %.054, %30 ], [ %.054, %28 ], [ %.054, %15 ], [ %.054, %5 ]
  %.052.be = phi i32 [ %.052, %4 ], [ %.052, %385 ], [ %.052, %384 ], [ %383, %382 ], [ %.052, %381 ], [ %.052, %372 ], [ %.052, %371 ], [ %.052, %369 ], [ %.052, %365 ], [ %.052, %364 ], [ %.052, %363 ], [ %.052, %361 ], [ %.052, %358 ], [ %.052, %357 ], [ %.052, %348 ], [ %.052, %345 ], [ %.052, %344 ], [ %.052, %342 ], [ %.052, %341 ], [ %.052, %339 ], [ %.052, %327 ], [ %.052, %322 ], [ %.052, %321 ], [ %.052, %310 ], [ %.052, %300 ], [ %.052, %296 ], [ %.052, %295 ], [ %.052, %285 ], [ %.052, %275 ], [ %.052, %273 ], [ %.052, %272 ], [ %.052, %271 ], [ %.neg67, %261 ], [ %.052, %251 ], [ %.052, %239 ], [ %.052, %234 ], [ %.neg68, %233 ], [ %.052, %228 ], [ %.052, %227 ], [ %.052, %217 ], [ %.052, %207 ], [ %.052, %205 ], [ %.052, %204 ], [ %.052, %185 ], [ %.052, %175 ], [ %.052, %171 ], [ %.052, %170 ], [ %.052, %160 ], [ %.052, %150 ], [ %.052, %148 ], [ %.052, %138 ], [ %.052, %134 ], [ %.052, %133 ], [ %.052, %132 ], [ %.052, %121 ], [ %.052, %111 ], [ %.052, %110 ], [ %.052, %97 ], [ %.052, %87 ], [ %.052, %83 ], [ %.052, %82 ], [ %.052, %72 ], [ %.052, %62 ], [ %.052, %60 ], [ %.052, %56 ], [ %.052, %52 ], [ %.052, %51 ], [ %.052, %50 ], [ %.052, %40 ], [ %.052, %30 ], [ %.052, %28 ], [ %.052, %15 ], [ %.052, %5 ]
  %.050.be = phi i32 [ %.050, %4 ], [ %.050, %385 ], [ 0, %384 ], [ %.050, %382 ], [ %.050, %381 ], [ %.050, %372 ], [ %.050, %371 ], [ %.050, %369 ], [ %.050, %365 ], [ %.050, %364 ], [ %.050, %363 ], [ %.050, %361 ], [ %.050, %358 ], [ %.050, %357 ], [ %.050, %348 ], [ %.050, %345 ], [ %.050, %344 ], [ %343, %342 ], [ %.050, %341 ], [ %.050, %339 ], [ %.050, %327 ], [ %.050, %322 ], [ %.050, %321 ], [ %.050, %310 ], [ %.050, %300 ], [ %.050, %296 ], [ %.050, %295 ], [ 0, %285 ], [ %.050, %275 ], [ %.050, %273 ], [ %.050, %272 ], [ %.050, %271 ], [ %.050, %261 ], [ %.050, %251 ], [ %.050, %239 ], [ %.050, %234 ], [ %.050, %233 ], [ %.050, %228 ], [ %.050, %227 ], [ %.050, %217 ], [ %.050, %207 ], [ %.050, %205 ], [ %.050, %204 ], [ %.050, %185 ], [ %.050, %175 ], [ %.050, %171 ], [ %.050, %170 ], [ %.050, %160 ], [ %.050, %150 ], [ %.050, %148 ], [ %.050, %138 ], [ %.050, %134 ], [ %.050, %133 ], [ %.050, %132 ], [ %.050, %121 ], [ %.050, %111 ], [ %.050, %110 ], [ %.050, %97 ], [ %.050, %87 ], [ %.050, %83 ], [ %.050, %82 ], [ %.050, %72 ], [ %.050, %62 ], [ %.050, %60 ], [ %.050, %56 ], [ %.050, %52 ], [ %.050, %51 ], [ %.050, %50 ], [ %.050, %40 ], [ %.050, %30 ], [ %.050, %28 ], [ %.050, %15 ], [ %.050, %5 ]
  %.048.be = phi i32 [ %.048, %4 ], [ %.neg, %385 ], [ %.048, %384 ], [ %.048, %382 ], [ %.048, %381 ], [ %.048, %372 ], [ %.048, %371 ], [ %.048, %369 ], [ %.048, %365 ], [ %.048, %364 ], [ %.048, %363 ], [ %.048, %361 ], [ %.048, %358 ], [ %.048, %357 ], [ %.048, %348 ], [ %.048, %345 ], [ %.048, %344 ], [ %.048, %342 ], [ %.048, %341 ], [ %340, %339 ], [ %.048, %327 ], [ %.048, %322 ], [ %.048, %321 ], [ %311, %310 ], [ %.048, %300 ], [ %.048, %296 ], [ %.048, %295 ], [ %.048, %285 ], [ %.048, %275 ], [ %.048, %273 ], [ %.048, %272 ], [ %.048, %271 ], [ %.048, %261 ], [ %.048, %251 ], [ %.048, %239 ], [ %.048, %234 ], [ %.048, %233 ], [ %.048, %228 ], [ %.048, %227 ], [ %.048, %217 ], [ %.048, %207 ], [ %.048, %205 ], [ %.048, %204 ], [ %.048, %185 ], [ %.048, %175 ], [ %.048, %171 ], [ %.048, %170 ], [ %.048, %160 ], [ %.048, %150 ], [ %.048, %148 ], [ %.048, %138 ], [ %.048, %134 ], [ %.048, %133 ], [ %.048, %132 ], [ %.048, %121 ], [ %.048, %111 ], [ %.048, %110 ], [ %.048, %97 ], [ %.048, %87 ], [ %.048, %83 ], [ %.048, %82 ], [ %.048, %72 ], [ %.048, %62 ], [ %.048, %60 ], [ %.048, %56 ], [ %.048, %52 ], [ %.048, %51 ], [ %.048, %50 ], [ %.048, %40 ], [ %.048, %30 ], [ %.048, %28 ], [ %.048, %15 ], [ %.048, %5 ]
  %.046.be = phi i64 [ %.046, %4 ], [ %.046, %385 ], [ %.046, %384 ], [ %.046, %382 ], [ %.046, %381 ], [ %.046, %372 ], [ %.046, %371 ], [ %.046, %369 ], [ %.046, %365 ], [ %.046, %364 ], [ %.046, %363 ], [ %.046, %361 ], [ %.046, %358 ], [ %.046, %357 ], [ %356, %348 ], [ %.046, %345 ], [ 0, %344 ], [ %.046, %342 ], [ %.046, %341 ], [ %.046, %339 ], [ %.046, %327 ], [ %.046, %322 ], [ %.046, %321 ], [ %.046, %310 ], [ %.046, %300 ], [ %.046, %296 ], [ %.046, %295 ], [ %.046, %285 ], [ %.046, %275 ], [ %.046, %273 ], [ %.046, %272 ], [ %.046, %271 ], [ %.046, %261 ], [ %.046, %251 ], [ %.046, %239 ], [ %.046, %234 ], [ %.046, %233 ], [ %.046, %228 ], [ %.046, %227 ], [ %.046, %217 ], [ %.046, %207 ], [ %.046, %205 ], [ %.046, %204 ], [ %.046, %185 ], [ %.046, %175 ], [ %.046, %171 ], [ %.046, %170 ], [ %.046, %160 ], [ %.046, %150 ], [ %.046, %148 ], [ %.046, %138 ], [ %.046, %134 ], [ %.046, %133 ], [ %.046, %132 ], [ %.046, %121 ], [ %.046, %111 ], [ %.046, %110 ], [ %.046, %97 ], [ %.046, %87 ], [ %.046, %83 ], [ %.046, %82 ], [ %.046, %72 ], [ %.046, %62 ], [ %.046, %60 ], [ %.046, %56 ], [ %.046, %52 ], [ %.046, %51 ], [ %.046, %50 ], [ %.046, %40 ], [ %.046, %30 ], [ %.046, %28 ], [ %.046, %15 ], [ %.046, %5 ]
  %.044.be = phi i32 [ %.044, %4 ], [ %.044, %385 ], [ %.044, %384 ], [ %.044, %382 ], [ %.044, %381 ], [ %.044, %372 ], [ %.044, %371 ], [ %.044, %369 ], [ %.044, %365 ], [ %.044, %364 ], [ %.044, %363 ], [ %.044, %361 ], [ %.044, %358 ], [ %.neg65, %357 ], [ %.044, %348 ], [ %.044, %345 ], [ 1, %344 ], [ %.044, %342 ], [ %.044, %341 ], [ %.044, %339 ], [ %.044, %327 ], [ %.044, %322 ], [ %.044, %321 ], [ %.044, %310 ], [ %.044, %300 ], [ %.044, %296 ], [ %.044, %295 ], [ %.044, %285 ], [ %.044, %275 ], [ %.044, %273 ], [ %.044, %272 ], [ %.044, %271 ], [ %.044, %261 ], [ %.044, %251 ], [ %.044, %239 ], [ %.044, %234 ], [ %.044, %233 ], [ %.044, %228 ], [ %.044, %227 ], [ %.044, %217 ], [ %.044, %207 ], [ %.044, %205 ], [ %.044, %204 ], [ %.044, %185 ], [ %.044, %175 ], [ %.044, %171 ], [ %.044, %170 ], [ %.044, %160 ], [ %.044, %150 ], [ %.044, %148 ], [ %.044, %138 ], [ %.044, %134 ], [ %.044, %133 ], [ %.044, %132 ], [ %.044, %121 ], [ %.044, %111 ], [ %.044, %110 ], [ %.044, %97 ], [ %.044, %87 ], [ %.044, %83 ], [ %.044, %82 ], [ %.044, %72 ], [ %.044, %62 ], [ %.044, %60 ], [ %.044, %56 ], [ %.044, %52 ], [ %.044, %51 ], [ %.044, %50 ], [ %.044, %40 ], [ %.044, %30 ], [ %.044, %28 ], [ %.044, %15 ], [ %.044, %5 ]
  %.0.be = phi i32 [ %.0, %4 ], [ -1325782747, %385 ], [ 2091974441, %384 ], [ -564821850, %382 ], [ 1133289843, %381 ], [ -767192727, %372 ], [ -86677983, %371 ], [ 1735203301, %369 ], [ -2090765062, %365 ], [ -377194956, %364 ], [ -989594063, %363 ], [ -661758102, %361 ], [ -116575703, %358 ], [ -1176834133, %357 ], [ 539627405, %348 ], [ %347, %345 ], [ -1176834133, %344 ], [ 2009932229, %342 ], [ -2096251471, %341 ], [ -1998420664, %339 ], [ 171129834, %327 ], [ %326, %322 ], [ -1998420664, %321 ], [ %320, %310 ], [ %309, %300 ], [ %299, %296 ], [ 2009932229, %295 ], [ %294, %285 ], [ %284, %275 ], [ 11519466, %273 ], [ 1282490264, %272 ], [ -1014138394, %271 ], [ %270, %261 ], [ %260, %251 ], [ 1412829735, %239 ], [ %238, %234 ], [ -1014138394, %233 ], [ %232, %228 ], [ 11519466, %227 ], [ %226, %217 ], [ %216, %207 ], [ 676439872, %205 ], [ 1872083809, %204 ], [ %203, %185 ], [ %184, %175 ], [ %174, %171 ], [ 676439872, %170 ], [ %169, %160 ], [ %159, %150 ], [ -1306836238, %148 ], [ 1293199781, %138 ], [ %137, %134 ], [ -1306836238, %133 ], [ -269787201, %132 ], [ %131, %121 ], [ %120, %111 ], [ 1149825824, %110 ], [ %109, %97 ], [ %96, %87 ], [ %86, %83 ], [ -269787201, %82 ], [ %81, %72 ], [ %71, %62 ], [ -1061355441, %60 ], [ 1185211717, %56 ], [ %55, %52 ], [ -1061355441, %51 ], [ 1449938709, %50 ], [ %49, %40 ], [ %39, %30 ], [ %29, %28 ], [ %27, %15 ], [ %14, %5 ]
  br label %4

5:                                                ; preds = %4
  %6 = load i32, i32* @x.3, align 4
  %7 = load i32, i32* @y, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 -661758102, i32 543794384
  br label %.backedge

15:                                               ; preds = %4
  %16 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3)
  %17 = load i32, i32* %2, align 4
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %1, align 1
  %19 = load i32, i32* @x.3, align 4
  %20 = load i32, i32* @y, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 1973706831, i32 543794384
  br label %.backedge

28:                                               ; preds = %4
  %.0..0..0. = load volatile i1, i1* %1, align 1
  %29 = select i1 %.0..0..0., i32 -887675321, i32 1818700316
  br label %.backedge

30:                                               ; preds = %4
  %31 = load i32, i32* @x.3, align 4
  %32 = load i32, i32* @y, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 -989594063, i32 79844190
  br label %.backedge

40:                                               ; preds = %4
  %41 = load i32, i32* @x.3, align 4
  %42 = load i32, i32* @y, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 -1863843610, i32 79844190
  br label %.backedge

50:                                               ; preds = %4
  br label %.backedge

51:                                               ; preds = %4
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(12000008) bitcast ([2 x [1500001 x i32]]* @x to i8*), i8 0, i64 12000008, i1 false)
  br label %.backedge

52:                                               ; preds = %4
  %53 = load i32, i32* %2, align 4
  %54 = icmp slt i32 %.062, %53
  %55 = select i1 %54, i32 -314397399, i32 805365927
  br label %.backedge

56:                                               ; preds = %4
  %57 = sext i32 %.062 to i64
  %58 = getelementptr inbounds [1500 x i32], [1500 x i32]* @h, i64 0, i64 %57
  %59 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %58)
  br label %.backedge

60:                                               ; preds = %4
  %61 = add i32 %.062, 1
  br label %.backedge

62:                                               ; preds = %4
  %63 = load i32, i32* @x.3, align 4
  %64 = load i32, i32* @y, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -377194956, i32 -2022416003
  br label %.backedge

72:                                               ; preds = %4
  %73 = load i32, i32* @x.3, align 4
  %74 = load i32, i32* @y, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -349338315, i32 -2022416003
  br label %.backedge

82:                                               ; preds = %4
  br label %.backedge

83:                                               ; preds = %4
  %84 = load i32, i32* %3, align 4
  %85 = icmp slt i32 %.060, %84
  %86 = select i1 %85, i32 -1717318450, i32 1593075810
  br label %.backedge

87:                                               ; preds = %4
  %88 = load i32, i32* @x.3, align 4
  %89 = load i32, i32* @y, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -2090765062, i32 145720631
  br label %.backedge

97:                                               ; preds = %4
  %98 = sext i32 %.060 to i64
  %99 = getelementptr inbounds [1500 x i32], [1500 x i32]* @w, i64 0, i64 %98
  %100 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %99)
  %101 = load i32, i32* @x.3, align 4
  %102 = load i32, i32* @y, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 607277735, i32 145720631
  br label %.backedge

110:                                              ; preds = %4
  br label %.backedge

111:                                              ; preds = %4
  %112 = load i32, i32* @x.3, align 4
  %113 = load i32, i32* @y, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 1735203301, i32 -1205706118
  br label %.backedge

121:                                              ; preds = %4
  %122 = add i32 %.060, 1
  %123 = load i32, i32* @x.3, align 4
  %124 = load i32, i32* @y, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 1200196631, i32 -1205706118
  br label %.backedge

132:                                              ; preds = %4
  br label %.backedge

133:                                              ; preds = %4
  br label %.backedge

134:                                              ; preds = %4
  %135 = load i32, i32* %2, align 4
  %136 = icmp slt i32 %.058, %135
  %137 = select i1 %136, i32 1032697165, i32 -1352435642
  br label %.backedge

138:                                              ; preds = %4
  %139 = sext i32 %.058 to i64
  %140 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sh, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds [1500 x i32], [1500 x i32]* @h, i64 0, i64 %139
  %143 = load i32, i32* %142, align 4
  %144 = add i32 %143, %141
  %145 = add i32 %.058, 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sh, i64 0, i64 %146
  store i32 %144, i32* %147, align 4
  br label %.backedge

148:                                              ; preds = %4
  %149 = add i32 %.058, 1
  br label %.backedge

150:                                              ; preds = %4
  %151 = load i32, i32* @x.3, align 4
  %152 = load i32, i32* @y, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 -86677983, i32 -1883494871
  br label %.backedge

160:                                              ; preds = %4
  %161 = load i32, i32* @x.3, align 4
  %162 = load i32, i32* @y, align 4
  %163 = add i32 %161, -1
  %164 = mul i32 %163, %161
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %167, %166
  %169 = select i1 %168, i32 1225272852, i32 -1883494871
  br label %.backedge

170:                                              ; preds = %4
  br label %.backedge

171:                                              ; preds = %4
  %172 = load i32, i32* %3, align 4
  %173 = icmp slt i32 %.056, %172
  %174 = select i1 %173, i32 -1917416837, i32 1251235287
  br label %.backedge

175:                                              ; preds = %4
  %176 = load i32, i32* @x.3, align 4
  %177 = load i32, i32* @y, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 -767192727, i32 -393921684
  br label %.backedge

185:                                              ; preds = %4
  %186 = sext i32 %.056 to i64
  %187 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sw, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds [1500 x i32], [1500 x i32]* @w, i64 0, i64 %186
  %190 = load i32, i32* %189, align 4
  %191 = add i32 %190, %188
  %192 = add i32 %.056, 1
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sw, i64 0, i64 %193
  store i32 %191, i32* %194, align 4
  %195 = load i32, i32* @x.3, align 4
  %196 = load i32, i32* @y, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 1427429749, i32 -393921684
  br label %.backedge

204:                                              ; preds = %4
  br label %.backedge

205:                                              ; preds = %4
  %206 = add i32 %.056, 1
  br label %.backedge

207:                                              ; preds = %4
  %208 = load i32, i32* @x.3, align 4
  %209 = load i32, i32* @y, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 1133289843, i32 -1239862017
  br label %.backedge

217:                                              ; preds = %4
  %218 = load i32, i32* @x.3, align 4
  %219 = load i32, i32* @y, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -1825159249, i32 -1239862017
  br label %.backedge

227:                                              ; preds = %4
  br label %.backedge

228:                                              ; preds = %4
  %229 = load i32, i32* %2, align 4
  %230 = add i32 %229, 1
  %231 = icmp slt i32 %.054, %230
  %232 = select i1 %231, i32 34927431, i32 616930792
  br label %.backedge

233:                                              ; preds = %4
  %.neg68 = add i32 %.054, 1
  br label %.backedge

234:                                              ; preds = %4
  %235 = load i32, i32* %2, align 4
  %236 = add i32 %235, 1
  %237 = icmp slt i32 %.052, %236
  %238 = select i1 %237, i32 1654065177, i32 1395620251
  br label %.backedge

239:                                              ; preds = %4
  %240 = sext i32 %.052 to i64
  %241 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sh, i64 0, i64 %240
  %242 = load i32, i32* %241, align 4
  %243 = sext i32 %.054 to i64
  %244 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sh, i64 0, i64 %243
  %245 = load i32, i32* %244, align 4
  %246 = sub i32 %242, %245
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @x, i64 0, i64 0, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = add i32 %249, 1
  store i32 %250, i32* %248, align 4
  br label %.backedge

251:                                              ; preds = %4
  %252 = load i32, i32* @x.3, align 4
  %253 = load i32, i32* @y, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 -564821850, i32 -246388409
  br label %.backedge

261:                                              ; preds = %4
  %.neg67 = add i32 %.052, 1
  %262 = load i32, i32* @x.3, align 4
  %263 = load i32, i32* @y, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 -1127389362, i32 -246388409
  br label %.backedge

271:                                              ; preds = %4
  br label %.backedge

272:                                              ; preds = %4
  br label %.backedge

273:                                              ; preds = %4
  %274 = add i32 %.054, 1
  br label %.backedge

275:                                              ; preds = %4
  %276 = load i32, i32* @x.3, align 4
  %277 = load i32, i32* @y, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 2091974441, i32 -1877476047
  br label %.backedge

285:                                              ; preds = %4
  %286 = load i32, i32* @x.3, align 4
  %287 = load i32, i32* @y, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 -1728300718, i32 -1877476047
  br label %.backedge

295:                                              ; preds = %4
  br label %.backedge

296:                                              ; preds = %4
  %297 = load i32, i32* %3, align 4
  %.neg66 = add i32 %297, 1
  %298 = icmp slt i32 %.050, %.neg66
  %299 = select i1 %298, i32 -1297388651, i32 1092682304
  br label %.backedge

300:                                              ; preds = %4
  %301 = load i32, i32* @x.3, align 4
  %302 = load i32, i32* @y, align 4
  %303 = add i32 %301, -1
  %304 = mul i32 %303, %301
  %305 = and i32 %304, 1
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %307, %306
  %309 = select i1 %308, i32 -1325782747, i32 -180982337
  br label %.backedge

310:                                              ; preds = %4
  %311 = add i32 %.050, 1
  %312 = load i32, i32* @x.3, align 4
  %313 = load i32, i32* @y, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 -969575149, i32 -180982337
  br label %.backedge

321:                                              ; preds = %4
  br label %.backedge

322:                                              ; preds = %4
  %323 = load i32, i32* %3, align 4
  %324 = add i32 %323, 1
  %325 = icmp slt i32 %.048, %324
  %326 = select i1 %325, i32 425779884, i32 69921353
  br label %.backedge

327:                                              ; preds = %4
  %328 = sext i32 %.048 to i64
  %329 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sw, i64 0, i64 %328
  %330 = load i32, i32* %329, align 4
  %331 = sext i32 %.050 to i64
  %332 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sw, i64 0, i64 %331
  %333 = load i32, i32* %332, align 4
  %334 = sub i32 %330, %333
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @x, i64 0, i64 1, i64 %335
  %337 = load i32, i32* %336, align 4
  %338 = add i32 %337, 1
  store i32 %338, i32* %336, align 4
  br label %.backedge

339:                                              ; preds = %4
  %340 = add i32 %.048, 1
  br label %.backedge

341:                                              ; preds = %4
  br label %.backedge

342:                                              ; preds = %4
  %343 = add i32 %.050, 1
  br label %.backedge

344:                                              ; preds = %4
  br label %.backedge

345:                                              ; preds = %4
  %346 = icmp slt i32 %.044, 1500001
  %347 = select i1 %346, i32 -204002029, i32 1363196270
  br label %.backedge

348:                                              ; preds = %4
  %349 = sext i32 %.044 to i64
  %350 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @x, i64 0, i64 0, i64 %349
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @x, i64 0, i64 1, i64 %349
  %353 = load i32, i32* %352, align 4
  %354 = mul nsw i32 %353, %351
  %355 = sext i32 %354 to i64
  %356 = add i64 %.046, %355
  br label %.backedge

357:                                              ; preds = %4
  %.neg65 = add i32 %.044, 1
  br label %.backedge

358:                                              ; preds = %4
  %359 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %.046)
  br label %.backedge

360:                                              ; preds = %4
  ret i32 0

361:                                              ; preds = %4
  %362 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3)
  br label %.backedge

363:                                              ; preds = %4
  br label %.backedge

364:                                              ; preds = %4
  br label %.backedge

365:                                              ; preds = %4
  %366 = sext i32 %.060 to i64
  %367 = getelementptr inbounds [1500 x i32], [1500 x i32]* @w, i64 0, i64 %366
  %368 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %367)
  br label %.backedge

369:                                              ; preds = %4
  %370 = add i32 %.060, 1
  br label %.backedge

371:                                              ; preds = %4
  br label %.backedge

372:                                              ; preds = %4
  %373 = sext i32 %.056 to i64
  %374 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sw, i64 0, i64 %373
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds [1500 x i32], [1500 x i32]* @w, i64 0, i64 %373
  %377 = load i32, i32* %376, align 4
  %378 = add i32 %377, %375
  %.neg64 = add i32 %.056, 1
  %379 = sext i32 %.neg64 to i64
  %380 = getelementptr inbounds [1501 x i32], [1501 x i32]* @sw, i64 0, i64 %379
  store i32 %378, i32* %380, align 4
  br label %.backedge

381:                                              ; preds = %4
  br label %.backedge

382:                                              ; preds = %4
  %383 = add i32 %.052, 1
  br label %.backedge

384:                                              ; preds = %4
  br label %.backedge

385:                                              ; preds = %4
  %.neg = add i32 %.050, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
