; ModuleID = 'build_ollvm/programs/p01140/s873796915.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s873796915.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@nm = global [1501 x i32] zeroinitializer, align 16
@mm = global [1501 x i32] zeroinitializer, align 16
@nc = local_unnamed_addr global [1500001 x i32] zeroinitializer, align 16
@c = local_unnamed_addr global i32 0, align 4
@k = local_unnamed_addr global i32 0, align 4
@l = local_unnamed_addr global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s873796915.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  br label %6

6:                                                ; preds = %.backedge, %0
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.0 = phi i32 [ -1565325110, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1565325110, label %7
    i32 861197065, label %8
    i32 -1243208479, label %11
    i32 -1807162009, label %15
    i32 -404852644, label %16
    i32 755067598, label %26
    i32 -1581475735, label %36
    i32 1942481801, label %37
    i32 -407442086, label %40
    i32 1079964019, label %41
    i32 -390261008, label %51
    i32 -1454972213, label %62
    i32 61537972, label %64
    i32 720343641, label %74
    i32 1078177922, label %86
    i32 -862887169, label %87
    i32 336830632, label %89
    i32 1041581859, label %90
    i32 1787545215, label %92
    i32 756768685, label %98
    i32 579897824, label %102
    i32 279983227, label %103
    i32 566498982, label %104
    i32 696119755, label %108
    i32 -1799484056, label %118
    i32 -1517715774, label %131
    i32 -268902524, label %132
    i32 1435632379, label %142
    i32 290091739, label %153
    i32 2002450522, label %154
    i32 1148117210, label %155
    i32 438518367, label %159
    i32 -406713341, label %163
    i32 206423524, label %165
    i32 -1197296990, label %175
    i32 2001423641, label %185
    i32 -561815943, label %186
    i32 1389560995, label %190
    i32 -1093607696, label %200
    i32 1909997213, label %217
    i32 745054270, label %219
    i32 1617294075, label %229
    i32 79090089, label %240
    i32 527421159, label %241
    i32 -141444087, label %245
    i32 1904461904, label %255
    i32 -1306072087, label %269
    i32 -296624817, label %270
    i32 2112386196, label %271
    i32 -365883791, label %281
    i32 509382373, label %291
    i32 -810738061, label %292
    i32 -1081761040, label %293
    i32 2090095771, label %295
    i32 -1226209787, label %305
    i32 1852651623, label %315
    i32 2016772806, label %316
    i32 -1100737396, label %320
    i32 1981259021, label %328
    i32 -457426299, label %334
    i32 -22449291, label %338
    i32 -930814426, label %340
    i32 1793019850, label %350
    i32 1331603239, label %362
    i32 478299007, label %364
    i32 -1645054855, label %373
    i32 778476273, label %379
    i32 2092491641, label %380
    i32 -497971469, label %382
    i32 -133484020, label %383
    i32 9802907, label %384
    i32 64807042, label %385
    i32 -39438115, label %389
    i32 1603898640, label %390
    i32 -979415831, label %391
    i32 -1586326408, label %392
    i32 -462740886, label %395
    i32 217398050, label %399
    i32 777184950, label %401
    i32 1630743279, label %402
    i32 -1985095478, label %407
    i32 2136674312, label %409
    i32 793914203, label %414
    i32 -1242499169, label %415
    i32 1217106918, label %416
  ]

.backedge:                                        ; preds = %6, %416, %415, %414, %409, %407, %402, %401, %399, %395, %392, %391, %390, %385, %384, %383, %382, %380, %379, %373, %364, %362, %350, %340, %338, %334, %328, %320, %316, %315, %305, %295, %293, %292, %291, %281, %271, %270, %269, %255, %245, %241, %240, %229, %219, %217, %200, %190, %186, %185, %175, %165, %163, %159, %155, %154, %153, %142, %132, %131, %118, %108, %104, %103, %102, %98, %92, %90, %89, %87, %86, %74, %64, %62, %51, %41, %40, %37, %36, %26, %16, %15, %11, %8, %7
  %.074.be = phi i32 [ %.074, %6 ], [ %.074, %416 ], [ %.074, %415 ], [ %.074, %414 ], [ %413, %409 ], [ %.074, %407 ], [ %406, %402 ], [ %.074, %401 ], [ %.074, %399 ], [ %.074, %395 ], [ %.074, %392 ], [ %.074, %391 ], [ %.074, %390 ], [ %.074, %385 ], [ %.074, %384 ], [ %.074, %383 ], [ %.074, %382 ], [ %.074, %380 ], [ %.074, %379 ], [ %.074, %373 ], [ %.074, %364 ], [ %.074, %362 ], [ %.074, %350 ], [ %.074, %340 ], [ %.074, %338 ], [ %.074, %334 ], [ %.074, %328 ], [ %.074, %320 ], [ %.074, %316 ], [ %.074, %315 ], [ %.074, %305 ], [ %.074, %295 ], [ %.074, %293 ], [ %.074, %292 ], [ %.074, %291 ], [ %.074, %281 ], [ %.074, %271 ], [ %.074, %270 ], [ %.074, %269 ], [ %259, %255 ], [ %.074, %245 ], [ %.074, %241 ], [ %.074, %240 ], [ %.074, %229 ], [ %.074, %219 ], [ %.074, %217 ], [ %204, %200 ], [ %.074, %190 ], [ %.074, %186 ], [ %.074, %185 ], [ %.074, %175 ], [ %.074, %165 ], [ %.074, %163 ], [ %.074, %159 ], [ %.074, %155 ], [ %.074, %154 ], [ %.074, %153 ], [ %.074, %142 ], [ %.074, %132 ], [ %.074, %131 ], [ %.074, %118 ], [ %.074, %108 ], [ %.074, %104 ], [ %.074, %103 ], [ %.074, %102 ], [ %.074, %98 ], [ %.074, %92 ], [ %.074, %90 ], [ %.074, %89 ], [ %.074, %87 ], [ %.074, %86 ], [ %.074, %74 ], [ %.074, %64 ], [ %.074, %62 ], [ %.074, %51 ], [ %.074, %41 ], [ %.074, %40 ], [ %.074, %37 ], [ %.074, %36 ], [ %.074, %26 ], [ %.074, %16 ], [ %.074, %15 ], [ %.074, %11 ], [ %.074, %8 ], [ %.074, %7 ]
  %.072.be = phi i32 [ %.072, %6 ], [ %.072, %416 ], [ %.072, %415 ], [ %.072, %414 ], [ %.072, %409 ], [ %.072, %407 ], [ %.072, %402 ], [ %.072, %401 ], [ %.072, %399 ], [ %.072, %395 ], [ %.072, %392 ], [ %.072, %391 ], [ %.072, %390 ], [ %.072, %385 ], [ %.072, %384 ], [ %.072, %383 ], [ %.072, %382 ], [ %.072, %380 ], [ %.072, %379 ], [ %.072, %373 ], [ %368, %364 ], [ %.072, %362 ], [ %.072, %350 ], [ %.072, %340 ], [ %.072, %338 ], [ %.072, %334 ], [ %.072, %328 ], [ %323, %320 ], [ %.072, %316 ], [ %.072, %315 ], [ %.072, %305 ], [ %.072, %295 ], [ %.072, %293 ], [ %.072, %292 ], [ %.072, %291 ], [ %.072, %281 ], [ %.072, %271 ], [ %.072, %270 ], [ %.072, %269 ], [ %.072, %255 ], [ %.072, %245 ], [ %.072, %241 ], [ %.072, %240 ], [ %.072, %229 ], [ %.072, %219 ], [ %.072, %217 ], [ %.072, %200 ], [ %.072, %190 ], [ %.072, %186 ], [ %.072, %185 ], [ %.072, %175 ], [ %.072, %165 ], [ %.072, %163 ], [ %.072, %159 ], [ %.072, %155 ], [ %.072, %154 ], [ %.072, %153 ], [ %.072, %142 ], [ %.072, %132 ], [ %.072, %131 ], [ %.072, %118 ], [ %.072, %108 ], [ %.072, %104 ], [ %.072, %103 ], [ %.072, %102 ], [ %.072, %98 ], [ %.072, %92 ], [ %.072, %90 ], [ %.072, %89 ], [ %.072, %87 ], [ %.072, %86 ], [ %.072, %74 ], [ %.072, %64 ], [ %.072, %62 ], [ %.072, %51 ], [ %.072, %41 ], [ %.072, %40 ], [ %.072, %37 ], [ %.072, %36 ], [ %.072, %26 ], [ %.072, %16 ], [ %.072, %15 ], [ %.072, %11 ], [ %.072, %8 ], [ %.072, %7 ]
  %.070.be = phi i32 [ %.070, %6 ], [ %.070, %416 ], [ %.070, %415 ], [ %.070, %414 ], [ %.070, %409 ], [ %.070, %407 ], [ %.070, %402 ], [ %.070, %401 ], [ %.070, %399 ], [ %.070, %395 ], [ %.070, %392 ], [ %.070, %391 ], [ %.070, %390 ], [ %.070, %385 ], [ %.070, %384 ], [ %.070, %383 ], [ %.070, %382 ], [ %.070, %380 ], [ %.070, %379 ], [ %.070, %373 ], [ %.070, %364 ], [ %.070, %362 ], [ %.070, %350 ], [ %.070, %340 ], [ %.070, %338 ], [ %.070, %334 ], [ %.070, %328 ], [ %.070, %320 ], [ %.070, %316 ], [ %.070, %315 ], [ %.070, %305 ], [ %.070, %295 ], [ %.070, %293 ], [ %.070, %292 ], [ %.070, %291 ], [ %.070, %281 ], [ %.070, %271 ], [ %.070, %270 ], [ %.070, %269 ], [ %.070, %255 ], [ %.070, %245 ], [ %.070, %241 ], [ %.070, %240 ], [ %.070, %229 ], [ %.070, %219 ], [ %.070, %217 ], [ %.070, %200 ], [ %.070, %190 ], [ %.070, %186 ], [ %.070, %185 ], [ %.070, %175 ], [ %.070, %165 ], [ %.070, %163 ], [ %.070, %159 ], [ %.070, %155 ], [ %.070, %154 ], [ %.070, %153 ], [ %.070, %142 ], [ %.070, %132 ], [ %.070, %131 ], [ %.070, %118 ], [ %.070, %108 ], [ %.070, %104 ], [ %.070, %103 ], [ %.070, %102 ], [ %.070, %98 ], [ %.070, %92 ], [ %.070, %90 ], [ %.070, %89 ], [ %.070, %87 ], [ %.070, %86 ], [ %.070, %74 ], [ %.070, %64 ], [ %.070, %62 ], [ %.070, %51 ], [ %.070, %41 ], [ %.070, %40 ], [ %.070, %37 ], [ %.070, %36 ], [ %.070, %26 ], [ %.070, %16 ], [ %.neg79, %15 ], [ %.070, %11 ], [ %.070, %8 ], [ 0, %7 ]
  %.068.be = phi i32 [ %.068, %6 ], [ %.068, %416 ], [ %.068, %415 ], [ %.068, %414 ], [ %.068, %409 ], [ %.068, %407 ], [ %.068, %402 ], [ %.068, %401 ], [ %.068, %399 ], [ %.068, %395 ], [ %.068, %392 ], [ %.068, %391 ], [ 0, %390 ], [ %.068, %385 ], [ %.068, %384 ], [ %.068, %383 ], [ %.068, %382 ], [ %.068, %380 ], [ %.068, %379 ], [ %.068, %373 ], [ %.068, %364 ], [ %.068, %362 ], [ %.068, %350 ], [ %.068, %340 ], [ %.068, %338 ], [ %.068, %334 ], [ %.068, %328 ], [ %.068, %320 ], [ %.068, %316 ], [ %.068, %315 ], [ %.068, %305 ], [ %.068, %295 ], [ %.068, %293 ], [ %.068, %292 ], [ %.068, %291 ], [ %.068, %281 ], [ %.068, %271 ], [ %.068, %270 ], [ %.068, %269 ], [ %.068, %255 ], [ %.068, %245 ], [ %.068, %241 ], [ %.068, %240 ], [ %.068, %229 ], [ %.068, %219 ], [ %.068, %217 ], [ %.068, %200 ], [ %.068, %190 ], [ %.068, %186 ], [ %.068, %185 ], [ %.068, %175 ], [ %.068, %165 ], [ %.068, %163 ], [ %.068, %159 ], [ %.068, %155 ], [ %.068, %154 ], [ %.068, %153 ], [ %.068, %142 ], [ %.068, %132 ], [ %.068, %131 ], [ %.068, %118 ], [ %.068, %108 ], [ %.068, %104 ], [ %.068, %103 ], [ %.068, %102 ], [ %.068, %98 ], [ %.068, %92 ], [ %91, %90 ], [ %.068, %89 ], [ %.068, %87 ], [ %.068, %86 ], [ %.068, %74 ], [ %.068, %64 ], [ %.068, %62 ], [ %.068, %51 ], [ %.068, %41 ], [ %.068, %40 ], [ %.068, %37 ], [ %.068, %36 ], [ 0, %26 ], [ %.068, %16 ], [ %.068, %15 ], [ %.068, %11 ], [ %.068, %8 ], [ %.068, %7 ]
  %.066.be = phi i32 [ %.066, %6 ], [ %.066, %416 ], [ %.066, %415 ], [ %.066, %414 ], [ %.066, %409 ], [ %.066, %407 ], [ %.066, %402 ], [ %.066, %401 ], [ %.066, %399 ], [ %.066, %395 ], [ %.066, %392 ], [ %.066, %391 ], [ %.066, %390 ], [ %.066, %385 ], [ %.066, %384 ], [ %.066, %383 ], [ %.066, %382 ], [ %.066, %380 ], [ %.066, %379 ], [ %.066, %373 ], [ %.066, %364 ], [ %.066, %362 ], [ %.066, %350 ], [ %.066, %340 ], [ %.066, %338 ], [ %.066, %334 ], [ %.066, %328 ], [ %.066, %320 ], [ %.066, %316 ], [ %.066, %315 ], [ %.066, %305 ], [ %.066, %295 ], [ %.066, %293 ], [ %.066, %292 ], [ %.066, %291 ], [ %.066, %281 ], [ %.066, %271 ], [ %.066, %270 ], [ %.066, %269 ], [ %.066, %255 ], [ %.066, %245 ], [ %.066, %241 ], [ %.066, %240 ], [ %.066, %229 ], [ %.066, %219 ], [ %.066, %217 ], [ %.066, %200 ], [ %.066, %190 ], [ %.066, %186 ], [ %.066, %185 ], [ %.066, %175 ], [ %.066, %165 ], [ %.066, %163 ], [ %.066, %159 ], [ %.066, %155 ], [ %.066, %154 ], [ %.066, %153 ], [ %.066, %142 ], [ %.066, %132 ], [ %.066, %131 ], [ %.066, %118 ], [ %.066, %108 ], [ %.066, %104 ], [ %.066, %103 ], [ %.066, %102 ], [ %.066, %98 ], [ %.066, %92 ], [ %.066, %90 ], [ %.066, %89 ], [ %88, %87 ], [ %.066, %86 ], [ %.066, %74 ], [ %.066, %64 ], [ %.066, %62 ], [ %.066, %51 ], [ %.066, %41 ], [ 0, %40 ], [ %.066, %37 ], [ %.066, %36 ], [ %.066, %26 ], [ %.066, %16 ], [ %.066, %15 ], [ %.066, %11 ], [ %.066, %8 ], [ %.066, %7 ]
  %.064.be = phi i32 [ %.064, %6 ], [ %.064, %416 ], [ %.064, %415 ], [ %.064, %414 ], [ %.064, %409 ], [ %.064, %407 ], [ %.064, %402 ], [ %.064, %401 ], [ %400, %399 ], [ %.064, %395 ], [ %.064, %392 ], [ %.064, %391 ], [ %.064, %390 ], [ %.064, %385 ], [ %.064, %384 ], [ %.064, %383 ], [ %.064, %382 ], [ %.064, %380 ], [ %.064, %379 ], [ %.064, %373 ], [ %.064, %364 ], [ %.064, %362 ], [ %.064, %350 ], [ %.064, %340 ], [ %.064, %338 ], [ %.064, %334 ], [ %.064, %328 ], [ %.064, %320 ], [ %.064, %316 ], [ %.064, %315 ], [ %.064, %305 ], [ %.064, %295 ], [ %.064, %293 ], [ %.064, %292 ], [ %.064, %291 ], [ %.064, %281 ], [ %.064, %271 ], [ %.064, %270 ], [ %.064, %269 ], [ %.064, %255 ], [ %.064, %245 ], [ %.064, %241 ], [ %.064, %240 ], [ %.064, %229 ], [ %.064, %219 ], [ %.064, %217 ], [ %.064, %200 ], [ %.064, %190 ], [ %.064, %186 ], [ %.064, %185 ], [ %.064, %175 ], [ %.064, %165 ], [ %.064, %163 ], [ %.064, %159 ], [ %.064, %155 ], [ %.064, %154 ], [ %.064, %153 ], [ %143, %142 ], [ %.064, %132 ], [ %.064, %131 ], [ %.064, %118 ], [ %.064, %108 ], [ %.064, %104 ], [ 0, %103 ], [ %.064, %102 ], [ %.064, %98 ], [ %.064, %92 ], [ %.064, %90 ], [ %.064, %89 ], [ %.064, %87 ], [ %.064, %86 ], [ %.064, %74 ], [ %.064, %64 ], [ %.064, %62 ], [ %.064, %51 ], [ %.064, %41 ], [ %.064, %40 ], [ %.064, %37 ], [ %.064, %36 ], [ %.064, %26 ], [ %.064, %16 ], [ %.064, %15 ], [ %.064, %11 ], [ %.064, %8 ], [ %.064, %7 ]
  %.062.be = phi i32 [ %.062, %6 ], [ %.062, %416 ], [ %.062, %415 ], [ %.062, %414 ], [ %.062, %409 ], [ %.062, %407 ], [ %.062, %402 ], [ %.062, %401 ], [ %.062, %399 ], [ %.062, %395 ], [ %.062, %392 ], [ %.062, %391 ], [ %.062, %390 ], [ %.062, %385 ], [ %.062, %384 ], [ %.062, %383 ], [ %.062, %382 ], [ %.062, %380 ], [ %.062, %379 ], [ %.062, %373 ], [ %.062, %364 ], [ %.062, %362 ], [ %.062, %350 ], [ %.062, %340 ], [ %.062, %338 ], [ %.062, %334 ], [ %.062, %328 ], [ %.062, %320 ], [ %.062, %316 ], [ %.062, %315 ], [ %.062, %305 ], [ %.062, %295 ], [ %.062, %293 ], [ %.062, %292 ], [ %.062, %291 ], [ %.062, %281 ], [ %.062, %271 ], [ %.062, %270 ], [ %.062, %269 ], [ %.062, %255 ], [ %.062, %245 ], [ %.062, %241 ], [ %.062, %240 ], [ %.062, %229 ], [ %.062, %219 ], [ %.062, %217 ], [ %.062, %200 ], [ %.062, %190 ], [ %.062, %186 ], [ %.062, %185 ], [ %.062, %175 ], [ %.062, %165 ], [ %164, %163 ], [ %.062, %159 ], [ %.062, %155 ], [ 0, %154 ], [ %.062, %153 ], [ %.062, %142 ], [ %.062, %132 ], [ %.062, %131 ], [ %.062, %118 ], [ %.062, %108 ], [ %.062, %104 ], [ %.062, %103 ], [ %.062, %102 ], [ %.062, %98 ], [ %.062, %92 ], [ %.062, %90 ], [ %.062, %89 ], [ %.062, %87 ], [ %.062, %86 ], [ %.062, %74 ], [ %.062, %64 ], [ %.062, %62 ], [ %.062, %51 ], [ %.062, %41 ], [ %.062, %40 ], [ %.062, %37 ], [ %.062, %36 ], [ %.062, %26 ], [ %.062, %16 ], [ %.062, %15 ], [ %.062, %11 ], [ %.062, %8 ], [ %.062, %7 ]
  %.060.be = phi i32 [ %.060, %6 ], [ %.060, %416 ], [ %.060, %415 ], [ %.060, %414 ], [ %.060, %409 ], [ %.060, %407 ], [ %.060, %402 ], [ 0, %401 ], [ %.060, %399 ], [ %.060, %395 ], [ %.060, %392 ], [ %.060, %391 ], [ %.060, %390 ], [ %.060, %385 ], [ %.060, %384 ], [ %.060, %383 ], [ %.060, %382 ], [ %.060, %380 ], [ %.060, %379 ], [ %.060, %373 ], [ %.060, %364 ], [ %.060, %362 ], [ %.060, %350 ], [ %.060, %340 ], [ %.060, %338 ], [ %.060, %334 ], [ %.060, %328 ], [ %.060, %320 ], [ %.060, %316 ], [ %.060, %315 ], [ %.060, %305 ], [ %.060, %295 ], [ %294, %293 ], [ %.060, %292 ], [ %.060, %291 ], [ %.060, %281 ], [ %.060, %271 ], [ %.060, %270 ], [ %.060, %269 ], [ %.060, %255 ], [ %.060, %245 ], [ %.060, %241 ], [ %.060, %240 ], [ %.060, %229 ], [ %.060, %219 ], [ %.060, %217 ], [ %.060, %200 ], [ %.060, %190 ], [ %.060, %186 ], [ %.060, %185 ], [ 0, %175 ], [ %.060, %165 ], [ %.060, %163 ], [ %.060, %159 ], [ %.060, %155 ], [ %.060, %154 ], [ %.060, %153 ], [ %.060, %142 ], [ %.060, %132 ], [ %.060, %131 ], [ %.060, %118 ], [ %.060, %108 ], [ %.060, %104 ], [ %.060, %103 ], [ %.060, %102 ], [ %.060, %98 ], [ %.060, %92 ], [ %.060, %90 ], [ %.060, %89 ], [ %.060, %87 ], [ %.060, %86 ], [ %.060, %74 ], [ %.060, %64 ], [ %.060, %62 ], [ %.060, %51 ], [ %.060, %41 ], [ %.060, %40 ], [ %.060, %37 ], [ %.060, %36 ], [ %.060, %26 ], [ %.060, %16 ], [ %.060, %15 ], [ %.060, %11 ], [ %.060, %8 ], [ %.060, %7 ]
  %.058.be = phi i32 [ %.058, %6 ], [ %.058, %416 ], [ %.058, %415 ], [ %.058, %414 ], [ %.058, %409 ], [ %408, %407 ], [ %.058, %402 ], [ %.058, %401 ], [ %.058, %399 ], [ %.058, %395 ], [ %.058, %392 ], [ %.058, %391 ], [ %.058, %390 ], [ %.058, %385 ], [ %.058, %384 ], [ %.058, %383 ], [ %.058, %382 ], [ %.058, %380 ], [ %.058, %379 ], [ %.058, %373 ], [ %.058, %364 ], [ %.058, %362 ], [ %.058, %350 ], [ %.058, %340 ], [ %.058, %338 ], [ %.058, %334 ], [ %.058, %328 ], [ %.058, %320 ], [ %.058, %316 ], [ %.058, %315 ], [ %.058, %305 ], [ %.058, %295 ], [ %.058, %293 ], [ %.058, %292 ], [ %.058, %291 ], [ %.058, %281 ], [ %.058, %271 ], [ %.neg78, %270 ], [ %.058, %269 ], [ %.058, %255 ], [ %.058, %245 ], [ %.058, %241 ], [ %.058, %240 ], [ %230, %229 ], [ %.058, %219 ], [ %.058, %217 ], [ %.058, %200 ], [ %.058, %190 ], [ %.058, %186 ], [ %.058, %185 ], [ %.058, %175 ], [ %.058, %165 ], [ %.058, %163 ], [ %.058, %159 ], [ %.058, %155 ], [ %.058, %154 ], [ %.058, %153 ], [ %.058, %142 ], [ %.058, %132 ], [ %.058, %131 ], [ %.058, %118 ], [ %.058, %108 ], [ %.058, %104 ], [ %.058, %103 ], [ %.058, %102 ], [ %.058, %98 ], [ %.058, %92 ], [ %.058, %90 ], [ %.058, %89 ], [ %.058, %87 ], [ %.058, %86 ], [ %.058, %74 ], [ %.058, %64 ], [ %.058, %62 ], [ %.058, %51 ], [ %.058, %41 ], [ %.058, %40 ], [ %.058, %37 ], [ %.058, %36 ], [ %.058, %26 ], [ %.058, %16 ], [ %.058, %15 ], [ %.058, %11 ], [ %.058, %8 ], [ %.058, %7 ]
  %.056.be = phi i32 [ %.056, %6 ], [ %.056, %416 ], [ 0, %415 ], [ %.056, %414 ], [ %.056, %409 ], [ %.056, %407 ], [ %.056, %402 ], [ %.056, %401 ], [ %.056, %399 ], [ %.056, %395 ], [ %.056, %392 ], [ %.056, %391 ], [ %.056, %390 ], [ %.056, %385 ], [ %.neg, %384 ], [ %.056, %383 ], [ %.056, %382 ], [ %.056, %380 ], [ %.056, %379 ], [ %.056, %373 ], [ %.056, %364 ], [ %.056, %362 ], [ %.056, %350 ], [ %.056, %340 ], [ %.056, %338 ], [ %.056, %334 ], [ %.056, %328 ], [ %.056, %320 ], [ %.056, %316 ], [ %.056, %315 ], [ 0, %305 ], [ %.056, %295 ], [ %.056, %293 ], [ %.056, %292 ], [ %.056, %291 ], [ %.056, %281 ], [ %.056, %271 ], [ %.056, %270 ], [ %.056, %269 ], [ %.056, %255 ], [ %.056, %245 ], [ %.056, %241 ], [ %.056, %240 ], [ %.056, %229 ], [ %.056, %219 ], [ %.056, %217 ], [ %.056, %200 ], [ %.056, %190 ], [ %.056, %186 ], [ %.056, %185 ], [ %.056, %175 ], [ %.056, %165 ], [ %.056, %163 ], [ %.056, %159 ], [ %.056, %155 ], [ %.056, %154 ], [ %.056, %153 ], [ %.056, %142 ], [ %.056, %132 ], [ %.056, %131 ], [ %.056, %118 ], [ %.056, %108 ], [ %.056, %104 ], [ %.056, %103 ], [ %.056, %102 ], [ %.056, %98 ], [ %.056, %92 ], [ %.056, %90 ], [ %.056, %89 ], [ %.056, %87 ], [ %.056, %86 ], [ %.056, %74 ], [ %.056, %64 ], [ %.056, %62 ], [ %.056, %51 ], [ %.056, %41 ], [ %.056, %40 ], [ %.056, %37 ], [ %.056, %36 ], [ %.056, %26 ], [ %.056, %16 ], [ %.056, %15 ], [ %.056, %11 ], [ %.056, %8 ], [ %.056, %7 ]
  %.054.be = phi i32 [ %.054, %6 ], [ %.054, %416 ], [ %.054, %415 ], [ %.054, %414 ], [ %.054, %409 ], [ %.054, %407 ], [ %.054, %402 ], [ %.054, %401 ], [ %.054, %399 ], [ %.054, %395 ], [ %.054, %392 ], [ %.054, %391 ], [ %.054, %390 ], [ %.054, %385 ], [ %.054, %384 ], [ %.054, %383 ], [ %.054, %382 ], [ %381, %380 ], [ %.054, %379 ], [ %.054, %373 ], [ %.054, %364 ], [ %.054, %362 ], [ %.054, %350 ], [ %.054, %340 ], [ %339, %338 ], [ %.054, %334 ], [ %.054, %328 ], [ %.054, %320 ], [ %.054, %316 ], [ %.054, %315 ], [ %.054, %305 ], [ %.054, %295 ], [ %.054, %293 ], [ %.054, %292 ], [ %.054, %291 ], [ %.054, %281 ], [ %.054, %271 ], [ %.054, %270 ], [ %.054, %269 ], [ %.054, %255 ], [ %.054, %245 ], [ %.054, %241 ], [ %.054, %240 ], [ %.054, %229 ], [ %.054, %219 ], [ %.054, %217 ], [ %.054, %200 ], [ %.054, %190 ], [ %.054, %186 ], [ %.054, %185 ], [ %.054, %175 ], [ %.054, %165 ], [ %.054, %163 ], [ %.054, %159 ], [ %.054, %155 ], [ %.054, %154 ], [ %.054, %153 ], [ %.054, %142 ], [ %.054, %132 ], [ %.054, %131 ], [ %.054, %118 ], [ %.054, %108 ], [ %.054, %104 ], [ %.054, %103 ], [ %.054, %102 ], [ %.054, %98 ], [ %.054, %92 ], [ %.054, %90 ], [ %.054, %89 ], [ %.054, %87 ], [ %.054, %86 ], [ %.054, %74 ], [ %.054, %64 ], [ %.054, %62 ], [ %.054, %51 ], [ %.054, %41 ], [ %.054, %40 ], [ %.054, %37 ], [ %.054, %36 ], [ %.054, %26 ], [ %.054, %16 ], [ %.054, %15 ], [ %.054, %11 ], [ %.054, %8 ], [ %.054, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ 1793019850, %416 ], [ -1226209787, %415 ], [ -365883791, %414 ], [ 1904461904, %409 ], [ 1617294075, %407 ], [ -1093607696, %402 ], [ -1197296990, %401 ], [ 1435632379, %399 ], [ -1799484056, %395 ], [ 720343641, %392 ], [ -390261008, %391 ], [ 755067598, %390 ], [ -1565325110, %385 ], [ 2016772806, %384 ], [ 9802907, %383 ], [ -133484020, %382 ], [ -930814426, %380 ], [ 2092491641, %379 ], [ 778476273, %373 ], [ %372, %364 ], [ %363, %362 ], [ %361, %350 ], [ %349, %340 ], [ -930814426, %338 ], [ %337, %334 ], [ -457426299, %328 ], [ %327, %320 ], [ %319, %316 ], [ 2016772806, %315 ], [ %314, %305 ], [ %304, %295 ], [ -561815943, %293 ], [ -1081761040, %292 ], [ -810738061, %291 ], [ %290, %281 ], [ %280, %271 ], [ 527421159, %270 ], [ -296624817, %269 ], [ %268, %255 ], [ %254, %245 ], [ %244, %241 ], [ 527421159, %240 ], [ %239, %229 ], [ %228, %219 ], [ %218, %217 ], [ %216, %200 ], [ %199, %190 ], [ %189, %186 ], [ -561815943, %185 ], [ %184, %175 ], [ %174, %165 ], [ 1148117210, %163 ], [ -406713341, %159 ], [ %158, %155 ], [ 1148117210, %154 ], [ 566498982, %153 ], [ %152, %142 ], [ %141, %132 ], [ -268902524, %131 ], [ %130, %118 ], [ %117, %108 ], [ %107, %104 ], [ 566498982, %103 ], [ -39438115, %102 ], [ %101, %98 ], [ %97, %92 ], [ 1942481801, %90 ], [ 1041581859, %89 ], [ 1079964019, %87 ], [ -862887169, %86 ], [ %85, %74 ], [ %73, %64 ], [ %63, %62 ], [ %61, %51 ], [ %50, %41 ], [ 1079964019, %40 ], [ %39, %37 ], [ 1942481801, %36 ], [ %35, %26 ], [ %25, %16 ], [ 861197065, %15 ], [ -1807162009, %11 ], [ %10, %8 ], [ 861197065, %7 ]
  br label %6

7:                                                ; preds = %6
  br label %.backedge

8:                                                ; preds = %6
  %9 = icmp slt i32 %.070, 1501
  %10 = select i1 %9, i32 -1243208479, i32 -404852644
  br label %.backedge

11:                                               ; preds = %6
  %12 = sext i32 %.070 to i64
  %13 = getelementptr inbounds [1501 x i32], [1501 x i32]* @mm, i64 0, i64 %12
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds [1501 x i32], [1501 x i32]* @nm, i64 0, i64 %12
  store i32 0, i32* %14, align 4
  br label %.backedge

15:                                               ; preds = %6
  %.neg79 = add i32 %.070, 1
  br label %.backedge

16:                                               ; preds = %6
  %17 = load i32, i32* @x.1, align 4
  %18 = load i32, i32* @y.2, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 755067598, i32 1603898640
  br label %.backedge

26:                                               ; preds = %6
  %27 = load i32, i32* @x.1, align 4
  %28 = load i32, i32* @y.2, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -1581475735, i32 1603898640
  br label %.backedge

36:                                               ; preds = %6
  br label %.backedge

37:                                               ; preds = %6
  %38 = icmp slt i32 %.068, 1500001
  %39 = select i1 %38, i32 -407442086, i32 1787545215
  br label %.backedge

40:                                               ; preds = %6
  br label %.backedge

41:                                               ; preds = %6
  %42 = load i32, i32* @x.1, align 4
  %43 = load i32, i32* @y.2, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -390261008, i32 -979415831
  br label %.backedge

51:                                               ; preds = %6
  %52 = icmp slt i32 %.066, 2
  store i1 %52, i1* %3, align 1
  %53 = load i32, i32* @x.1, align 4
  %54 = load i32, i32* @y.2, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -1454972213, i32 -979415831
  br label %.backedge

62:                                               ; preds = %6
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %63 = select i1 %.0..0..0., i32 61537972, i32 336830632
  br label %.backedge

64:                                               ; preds = %6
  %65 = load i32, i32* @x.1, align 4
  %66 = load i32, i32* @y.2, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 720343641, i32 -1586326408
  br label %.backedge

74:                                               ; preds = %6
  %75 = sext i32 %.068 to i64
  %76 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @nc, i64 0, i64 %75
  store i32 0, i32* %76, align 4
  %77 = load i32, i32* @x.1, align 4
  %78 = load i32, i32* @y.2, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 1078177922, i32 -1586326408
  br label %.backedge

86:                                               ; preds = %6
  br label %.backedge

87:                                               ; preds = %6
  %88 = add i32 %.066, 1
  br label %.backedge

89:                                               ; preds = %6
  br label %.backedge

90:                                               ; preds = %6
  %91 = add i32 %.068, 1
  br label %.backedge

92:                                               ; preds = %6
  store i32 0, i32* @c, align 4
  store i32 0, i32* @k, align 4
  store i32 0, i32* @l, align 4
  %93 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %4)
  %94 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %93, i32* nonnull dereferenceable(4) %5)
  %95 = load i32, i32* %4, align 4
  %96 = icmp eq i32 %95, 0
  %97 = select i1 %96, i32 756768685, i32 279983227
  br label %.backedge

98:                                               ; preds = %6
  %99 = load i32, i32* %5, align 4
  %100 = icmp eq i32 %99, 0
  %101 = select i1 %100, i32 579897824, i32 279983227
  br label %.backedge

102:                                              ; preds = %6
  br label %.backedge

103:                                              ; preds = %6
  br label %.backedge

104:                                              ; preds = %6
  %105 = load i32, i32* %4, align 4
  %106 = icmp slt i32 %.064, %105
  %107 = select i1 %106, i32 696119755, i32 2002450522
  br label %.backedge

108:                                              ; preds = %6
  %109 = load i32, i32* @x.1, align 4
  %110 = load i32, i32* @y.2, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 -1799484056, i32 -462740886
  br label %.backedge

118:                                              ; preds = %6
  %119 = sext i32 %.064 to i64
  %120 = getelementptr inbounds [1501 x i32], [1501 x i32]* @nm, i64 0, i64 %119
  %121 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %120)
  %122 = load i32, i32* @x.1, align 4
  %123 = load i32, i32* @y.2, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 -1517715774, i32 -462740886
  br label %.backedge

131:                                              ; preds = %6
  br label %.backedge

132:                                              ; preds = %6
  %133 = load i32, i32* @x.1, align 4
  %134 = load i32, i32* @y.2, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 1435632379, i32 217398050
  br label %.backedge

142:                                              ; preds = %6
  %143 = add i32 %.064, 1
  %144 = load i32, i32* @x.1, align 4
  %145 = load i32, i32* @y.2, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 290091739, i32 217398050
  br label %.backedge

153:                                              ; preds = %6
  br label %.backedge

154:                                              ; preds = %6
  br label %.backedge

155:                                              ; preds = %6
  %156 = load i32, i32* %5, align 4
  %157 = icmp slt i32 %.062, %156
  %158 = select i1 %157, i32 438518367, i32 206423524
  br label %.backedge

159:                                              ; preds = %6
  %160 = sext i32 %.062 to i64
  %161 = getelementptr inbounds [1501 x i32], [1501 x i32]* @mm, i64 0, i64 %160
  %162 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %161)
  br label %.backedge

163:                                              ; preds = %6
  %164 = add i32 %.062, 1
  br label %.backedge

165:                                              ; preds = %6
  %166 = load i32, i32* @x.1, align 4
  %167 = load i32, i32* @y.2, align 4
  %168 = add i32 %166, -1
  %169 = mul i32 %168, %166
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 -1197296990, i32 777184950
  br label %.backedge

175:                                              ; preds = %6
  %176 = load i32, i32* @x.1, align 4
  %177 = load i32, i32* @y.2, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 2001423641, i32 777184950
  br label %.backedge

185:                                              ; preds = %6
  br label %.backedge

186:                                              ; preds = %6
  %187 = load i32, i32* %4, align 4
  %188 = icmp slt i32 %.060, %187
  %189 = select i1 %188, i32 1389560995, i32 2090095771
  br label %.backedge

190:                                              ; preds = %6
  %191 = load i32, i32* @x.1, align 4
  %192 = load i32, i32* @y.2, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -1093607696, i32 1630743279
  br label %.backedge

200:                                              ; preds = %6
  %201 = sext i32 %.060 to i64
  %202 = getelementptr inbounds [1501 x i32], [1501 x i32]* @nm, i64 0, i64 %201
  %203 = load i32, i32* %202, align 4
  call void @_Z4lsnni(i32 %203)
  %204 = load i32, i32* %202, align 4
  %205 = load i32, i32* %4, align 4
  %206 = add i32 %205, -1
  %207 = icmp ne i32 %.060, %206
  store i1 %207, i1* %2, align 1
  %208 = load i32, i32* @x.1, align 4
  %209 = load i32, i32* @y.2, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 1909997213, i32 1630743279
  br label %.backedge

217:                                              ; preds = %6
  %.0..0..0.52 = load volatile i1, i1* %2, align 1
  %218 = select i1 %.0..0..0.52, i32 745054270, i32 -810738061
  br label %.backedge

219:                                              ; preds = %6
  %220 = load i32, i32* @x.1, align 4
  %221 = load i32, i32* @y.2, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 1617294075, i32 -1985095478
  br label %.backedge

229:                                              ; preds = %6
  %230 = add i32 %.060, 1
  %231 = load i32, i32* @x.1, align 4
  %232 = load i32, i32* @y.2, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 79090089, i32 -1985095478
  br label %.backedge

240:                                              ; preds = %6
  br label %.backedge

241:                                              ; preds = %6
  %242 = load i32, i32* %4, align 4
  %243 = icmp slt i32 %.058, %242
  %244 = select i1 %243, i32 -141444087, i32 2112386196
  br label %.backedge

245:                                              ; preds = %6
  %246 = load i32, i32* @x.1, align 4
  %247 = load i32, i32* @y.2, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 1904461904, i32 2136674312
  br label %.backedge

255:                                              ; preds = %6
  %256 = sext i32 %.058 to i64
  %257 = getelementptr inbounds [1501 x i32], [1501 x i32]* @nm, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = add i32 %258, %.074
  call void @_Z4lsnni(i32 %259)
  %260 = load i32, i32* @x.1, align 4
  %261 = load i32, i32* @y.2, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 -1306072087, i32 2136674312
  br label %.backedge

269:                                              ; preds = %6
  br label %.backedge

270:                                              ; preds = %6
  %.neg78 = add i32 %.058, 1
  br label %.backedge

271:                                              ; preds = %6
  %272 = load i32, i32* @x.1, align 4
  %273 = load i32, i32* @y.2, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 -365883791, i32 793914203
  br label %.backedge

281:                                              ; preds = %6
  %282 = load i32, i32* @x.1, align 4
  %283 = load i32, i32* @y.2, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 509382373, i32 793914203
  br label %.backedge

291:                                              ; preds = %6
  br label %.backedge

292:                                              ; preds = %6
  br label %.backedge

293:                                              ; preds = %6
  %294 = add i32 %.060, 1
  br label %.backedge

295:                                              ; preds = %6
  %296 = load i32, i32* @x.1, align 4
  %297 = load i32, i32* @y.2, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 -1226209787, i32 -1242499169
  br label %.backedge

305:                                              ; preds = %6
  %306 = load i32, i32* @x.1, align 4
  %307 = load i32, i32* @y.2, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 1852651623, i32 -1242499169
  br label %.backedge

315:                                              ; preds = %6
  br label %.backedge

316:                                              ; preds = %6
  %317 = load i32, i32* %5, align 4
  %318 = icmp slt i32 %.056, %317
  %319 = select i1 %318, i32 -1100737396, i32 64807042
  br label %.backedge

320:                                              ; preds = %6
  %321 = sext i32 %.056 to i64
  %322 = getelementptr inbounds [1501 x i32], [1501 x i32]* @mm, i64 0, i64 %321
  %323 = load i32, i32* %322, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @nc, i64 0, i64 %324
  %326 = load i32, i32* %325, align 4
  %.not77 = icmp eq i32 %326, 0
  %327 = select i1 %.not77, i32 -457426299, i32 1981259021
  br label %.backedge

328:                                              ; preds = %6
  %329 = sext i32 %.072 to i64
  %330 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @nc, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = load i32, i32* @c, align 4
  %333 = add i32 %332, %331
  store i32 %333, i32* @c, align 4
  br label %.backedge

334:                                              ; preds = %6
  %335 = load i32, i32* %5, align 4
  %336 = add i32 %335, -1
  %.not76 = icmp eq i32 %.056, %336
  %337 = select i1 %.not76, i32 -133484020, i32 -22449291
  br label %.backedge

338:                                              ; preds = %6
  %339 = add i32 %.056, 1
  br label %.backedge

340:                                              ; preds = %6
  %341 = load i32, i32* @x.1, align 4
  %342 = load i32, i32* @y.2, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 1793019850, i32 1217106918
  br label %.backedge

350:                                              ; preds = %6
  %351 = load i32, i32* %5, align 4
  %352 = icmp slt i32 %.054, %351
  store i1 %352, i1* %1, align 1
  %353 = load i32, i32* @x.1, align 4
  %354 = load i32, i32* @y.2, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 1331603239, i32 1217106918
  br label %.backedge

362:                                              ; preds = %6
  %.0..0..0.53 = load volatile i1, i1* %1, align 1
  %363 = select i1 %.0..0..0.53, i32 478299007, i32 -497971469
  br label %.backedge

364:                                              ; preds = %6
  %365 = sext i32 %.054 to i64
  %366 = getelementptr inbounds [1501 x i32], [1501 x i32]* @mm, i64 0, i64 %365
  %367 = load i32, i32* %366, align 4
  %368 = add i32 %367, %.072
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @nc, i64 0, i64 %369
  %371 = load i32, i32* %370, align 4
  %.not = icmp eq i32 %371, 0
  %372 = select i1 %.not, i32 778476273, i32 -1645054855
  br label %.backedge

373:                                              ; preds = %6
  %374 = sext i32 %.072 to i64
  %375 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @nc, i64 0, i64 %374
  %376 = load i32, i32* %375, align 4
  %377 = load i32, i32* @c, align 4
  %378 = add i32 %377, %376
  store i32 %378, i32* @c, align 4
  br label %.backedge

379:                                              ; preds = %6
  br label %.backedge

380:                                              ; preds = %6
  %381 = add i32 %.054, 1
  br label %.backedge

382:                                              ; preds = %6
  br label %.backedge

383:                                              ; preds = %6
  br label %.backedge

384:                                              ; preds = %6
  %.neg = add i32 %.056, 1
  br label %.backedge

385:                                              ; preds = %6
  %386 = load i32, i32* @c, align 4
  %387 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %386)
  %388 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %387, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

389:                                              ; preds = %6
  ret i32 0

390:                                              ; preds = %6
  br label %.backedge

391:                                              ; preds = %6
  br label %.backedge

392:                                              ; preds = %6
  %393 = sext i32 %.068 to i64
  %394 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @nc, i64 0, i64 %393
  store i32 0, i32* %394, align 4
  br label %.backedge

395:                                              ; preds = %6
  %396 = sext i32 %.064 to i64
  %397 = getelementptr inbounds [1501 x i32], [1501 x i32]* @nm, i64 0, i64 %396
  %398 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %397)
  br label %.backedge

399:                                              ; preds = %6
  %400 = add i32 %.064, 1
  br label %.backedge

401:                                              ; preds = %6
  br label %.backedge

402:                                              ; preds = %6
  %403 = sext i32 %.060 to i64
  %404 = getelementptr inbounds [1501 x i32], [1501 x i32]* @nm, i64 0, i64 %403
  %405 = load i32, i32* %404, align 4
  call void @_Z4lsnni(i32 %405)
  %406 = load i32, i32* %404, align 4
  br label %.backedge

407:                                              ; preds = %6
  %408 = add i32 %.060, 1
  br label %.backedge

409:                                              ; preds = %6
  %410 = sext i32 %.058 to i64
  %411 = getelementptr inbounds [1501 x i32], [1501 x i32]* @nm, i64 0, i64 %410
  %412 = load i32, i32* %411, align 4
  %413 = add i32 %412, %.074
  call void @_Z4lsnni(i32 %413)
  br label %.backedge

414:                                              ; preds = %6
  br label %.backedge

415:                                              ; preds = %6
  br label %.backedge

416:                                              ; preds = %6
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define void @_Z4lsnni(i32 %0) local_unnamed_addr #5 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @nc, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  store i32 %5, i32* %3, align 4
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s873796915.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.5, align 4
  %4 = load i32, i32* @y.6, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1474274045, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1474274045, label %11
    i32 388735634, label %14
    i32 -818690691, label %24
    i32 586459782, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 388735634, i32 586459782
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -818690691, i32 586459782
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 388735634, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
