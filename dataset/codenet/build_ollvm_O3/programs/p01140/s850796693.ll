; ModuleID = 'build_ollvm/programs/p01140/s850796693.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s850796693.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@DX = local_unnamed_addr global [4 x i32] [i32 1, i32 0, i32 -1, i32 0], align 16
@DY = local_unnamed_addr global [4 x i32] [i32 0, i32 1, i32 0, i32 -1], align 16
@hl = global i32 0, align 4
@gl = global i32 0, align 4
@hs = global [1502 x i32] zeroinitializer, align 16
@gs = global [1502 x i32] zeroinitializer, align 16
@shs = local_unnamed_addr global [1502 x i32] zeroinitializer, align 16
@sgs = local_unnamed_addr global [1502 x i32] zeroinitializer, align 16
@xcn = local_unnamed_addr global [1500002 x i32] zeroinitializer, align 16
@ycn = local_unnamed_addr global [1500002 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s850796693.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1468358690, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1468358690, label %11
    i32 -1275310116, label %14
    i32 -1933744235, label %25
    i32 1528415707, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1275310116, i32 1528415707
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1933744235, i32 1528415707
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1275310116, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z5solvev() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  store i32 0, i32* getelementptr inbounds ([1502 x i32], [1502 x i32]* @shs, i64 0, i64 0), align 16
  %3 = load i32, i32* @x.1, align 4
  %4 = load i32, i32* @y.2, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %9, %8
  %11 = select i1 %10, i32 -1548375103, i32 439233213
  %12 = select i1 %10, i32 -677134456, i32 439233213
  %13 = select i1 %10, i32 -690545786, i32 776952517
  %14 = select i1 %10, i32 -1282756556, i32 776952517
  %15 = select i1 %10, i32 -53112315, i32 963664071
  %16 = select i1 %10, i32 -326492066, i32 963664071
  %17 = select i1 %10, i32 1856425360, i32 1996760364
  %18 = select i1 %10, i32 1300256754, i32 1996760364
  %19 = load i32, i32* @gl, align 4
  %20 = add i32 %19, 1
  %21 = select i1 %10, i32 -1986131134, i32 -617827233
  %22 = select i1 %10, i32 -1494325828, i32 -617827233
  %23 = select i1 %10, i32 774149836, i32 -180517111
  %24 = select i1 %10, i32 1397006461, i32 -180517111
  %25 = select i1 %10, i32 -1826894506, i32 -1868299234
  %26 = select i1 %10, i32 1640821756, i32 -1868299234
  %27 = load i32, i32* @hl, align 4
  %.neg78 = add i32 %27, 1
  %28 = select i1 %10, i32 -1221780901, i32 981892048
  %29 = select i1 %10, i32 -1497394315, i32 981892048
  %30 = select i1 %10, i32 1102070007, i32 -548861135
  %31 = select i1 %10, i32 182479578, i32 -548861135
  %32 = select i1 %10, i32 1410723936, i32 125562389
  %33 = select i1 %10, i32 -218993648, i32 125562389
  %34 = select i1 %10, i32 -1627390573, i32 1864099789
  %35 = select i1 %10, i32 -25912845, i32 1864099789
  %36 = select i1 %10, i32 -243241585, i32 -1174719415
  %37 = select i1 %10, i32 98271344, i32 -1174719415
  br label %38

38:                                               ; preds = %.backedge, %0
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ 0, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.0 = phi i32 [ 1130032109, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1130032109, label %39
    i32 -1246606393, label %42
    i32 1073896236, label %51
    i32 98271344, label %52
    i32 -243241585, label %54
    i32 -1777511547, label %55
    i32 971203107, label %56
    i32 -25912845, label %57
    i32 -1627390573, label %59
    i32 96461532, label %61
    i32 -218993648, label %62
    i32 1410723936, label %65
    i32 -485397389, label %66
    i32 182479578, label %67
    i32 1102070007, label %69
    i32 -1460114826, label %70
    i32 -1497394315, label %71
    i32 -1221780901, label %72
    i32 -1046043641, label %73
    i32 36230193, label %76
    i32 1804746985, label %78
    i32 603318097, label %81
    i32 -404885687, label %92
    i32 1634996056, label %93
    i32 230583416, label %94
    i32 -334834956, label %96
    i32 1640821756, label %97
    i32 -1826894506, label %98
    i32 440463274, label %99
    i32 720704794, label %102
    i32 489069101, label %112
    i32 1655299598, label %113
    i32 -1158034942, label %114
    i32 -298373240, label %117
    i32 1397006461, label %118
    i32 774149836, label %121
    i32 -401287589, label %122
    i32 -1454887880, label %124
    i32 -1982123690, label %125
    i32 2122903047, label %128
    i32 -888560160, label %130
    i32 -1494325828, label %131
    i32 -1986131134, label %133
    i32 -44048318, label %135
    i32 1300256754, label %136
    i32 1856425360, label %147
    i32 -710419628, label %148
    i32 -402403338, label %149
    i32 -1292951607, label %150
    i32 -326492066, label %151
    i32 -53112315, label %153
    i32 1423787896, label %154
    i32 -1282756556, label %155
    i32 -690545786, label %156
    i32 -541707578, label %157
    i32 -432230368, label %160
    i32 -677134456, label %161
    i32 -1548375103, label %169
    i32 -707435930, label %170
    i32 -1534548382, label %172
    i32 -1174719415, label %173
    i32 1864099789, label %175
    i32 125562389, label %176
    i32 -548861135, label %179
    i32 981892048, label %180
    i32 -1868299234, label %181
    i32 -180517111, label %182
    i32 -617827233, label %185
    i32 1996760364, label %186
    i32 963664071, label %198
    i32 776952517, label %200
    i32 439233213, label %201
  ]

.backedge:                                        ; preds = %38, %201, %200, %198, %186, %185, %182, %181, %180, %179, %176, %175, %173, %170, %169, %161, %160, %157, %156, %155, %154, %153, %151, %150, %149, %148, %147, %136, %135, %133, %131, %130, %128, %125, %124, %122, %121, %118, %117, %114, %113, %112, %102, %99, %98, %97, %96, %94, %93, %92, %81, %78, %76, %73, %72, %71, %70, %69, %67, %66, %65, %62, %61, %59, %57, %56, %55, %54, %52, %51, %42, %39
  %.071.be = phi i32 [ %.071, %38 ], [ %.071, %201 ], [ %.071, %200 ], [ %.071, %198 ], [ %.071, %186 ], [ %.071, %185 ], [ %.071, %182 ], [ %.071, %181 ], [ %.071, %180 ], [ %.neg, %179 ], [ %.071, %176 ], [ %.071, %175 ], [ %.071, %173 ], [ %.071, %170 ], [ %.071, %169 ], [ %.071, %161 ], [ %.071, %160 ], [ %.071, %157 ], [ %.071, %156 ], [ %.071, %155 ], [ %.071, %154 ], [ %.071, %153 ], [ %.071, %151 ], [ %.071, %150 ], [ %.071, %149 ], [ %.071, %148 ], [ %.071, %147 ], [ %.071, %136 ], [ %.071, %135 ], [ %.071, %133 ], [ %.071, %131 ], [ %.071, %130 ], [ %.071, %128 ], [ %.071, %125 ], [ %.071, %124 ], [ %.071, %122 ], [ %.071, %121 ], [ %.071, %118 ], [ %.071, %117 ], [ %.071, %114 ], [ %.071, %113 ], [ %.071, %112 ], [ %.071, %102 ], [ %.071, %99 ], [ %.071, %98 ], [ %.071, %97 ], [ %.071, %96 ], [ %.071, %94 ], [ %.071, %93 ], [ %.071, %92 ], [ %.071, %81 ], [ %.071, %78 ], [ %.071, %76 ], [ %.071, %73 ], [ %.071, %72 ], [ %.071, %71 ], [ %.071, %70 ], [ %.071, %69 ], [ %68, %67 ], [ %.071, %66 ], [ %.071, %65 ], [ %.071, %62 ], [ %.071, %61 ], [ %.071, %59 ], [ %.071, %57 ], [ %.071, %56 ], [ 0, %55 ], [ %.071, %54 ], [ %.071, %52 ], [ %.071, %51 ], [ %.071, %42 ], [ %.071, %39 ]
  %.069.be = phi i32 [ %.069, %38 ], [ %.069, %201 ], [ %.069, %200 ], [ %.069, %198 ], [ %.069, %186 ], [ %.069, %185 ], [ %.069, %182 ], [ %.069, %181 ], [ 0, %180 ], [ %.069, %179 ], [ %.069, %176 ], [ %.069, %175 ], [ %.069, %173 ], [ %.069, %170 ], [ %.069, %169 ], [ %.069, %161 ], [ %.069, %160 ], [ %.069, %157 ], [ %.069, %156 ], [ %.069, %155 ], [ %.069, %154 ], [ %.069, %153 ], [ %.069, %151 ], [ %.069, %150 ], [ %.069, %149 ], [ %.069, %148 ], [ %.069, %147 ], [ %.069, %136 ], [ %.069, %135 ], [ %.069, %133 ], [ %.069, %131 ], [ %.069, %130 ], [ %.069, %128 ], [ %.069, %125 ], [ %.069, %124 ], [ %.069, %122 ], [ %.069, %121 ], [ %.069, %118 ], [ %.069, %117 ], [ %.069, %114 ], [ %.069, %113 ], [ %.069, %112 ], [ %.069, %102 ], [ %.069, %99 ], [ %.069, %98 ], [ %.069, %97 ], [ %.069, %96 ], [ %95, %94 ], [ %.069, %93 ], [ %.069, %92 ], [ %.069, %81 ], [ %.069, %78 ], [ %.069, %76 ], [ %.069, %73 ], [ %.069, %72 ], [ 0, %71 ], [ %.069, %70 ], [ %.069, %69 ], [ %.069, %67 ], [ %.069, %66 ], [ %.069, %65 ], [ %.069, %62 ], [ %.069, %61 ], [ %.069, %59 ], [ %.069, %57 ], [ %.069, %56 ], [ %.069, %55 ], [ %.069, %54 ], [ %.069, %52 ], [ %.069, %51 ], [ %.069, %42 ], [ %.069, %39 ]
  %.067.be = phi i32 [ %.067, %38 ], [ %.067, %201 ], [ %.067, %200 ], [ %.067, %198 ], [ %.067, %186 ], [ %.067, %185 ], [ %.067, %182 ], [ %.067, %181 ], [ %.067, %180 ], [ %.067, %179 ], [ %.067, %176 ], [ %.067, %175 ], [ %.067, %173 ], [ %.067, %170 ], [ %.067, %169 ], [ %.067, %161 ], [ %.067, %160 ], [ %.067, %157 ], [ %.067, %156 ], [ %.067, %155 ], [ %.067, %154 ], [ %.067, %153 ], [ %.067, %151 ], [ %.067, %150 ], [ %.067, %149 ], [ %.067, %148 ], [ %.067, %147 ], [ %.067, %136 ], [ %.067, %135 ], [ %.067, %133 ], [ %.067, %131 ], [ %.067, %130 ], [ %.067, %128 ], [ %.067, %125 ], [ %.067, %124 ], [ %.067, %122 ], [ %.067, %121 ], [ %.067, %118 ], [ %.067, %117 ], [ %.067, %114 ], [ %.067, %113 ], [ %.067, %112 ], [ %.067, %102 ], [ %.067, %99 ], [ %.067, %98 ], [ %.067, %97 ], [ %.067, %96 ], [ %.067, %94 ], [ %.067, %93 ], [ %.neg76, %92 ], [ %.067, %81 ], [ %.067, %78 ], [ %77, %76 ], [ %.067, %73 ], [ %.067, %72 ], [ %.067, %71 ], [ %.067, %70 ], [ %.067, %69 ], [ %.067, %67 ], [ %.067, %66 ], [ %.067, %65 ], [ %.067, %62 ], [ %.067, %61 ], [ %.067, %59 ], [ %.067, %57 ], [ %.067, %56 ], [ %.067, %55 ], [ %.067, %54 ], [ %.067, %52 ], [ %.067, %51 ], [ %.067, %42 ], [ %.067, %39 ]
  %.065.be = phi i32 [ %.065, %38 ], [ %.065, %201 ], [ %.065, %200 ], [ %.065, %198 ], [ %.065, %186 ], [ %.065, %185 ], [ %.065, %182 ], [ %.065, %181 ], [ %.065, %180 ], [ %.065, %179 ], [ %.065, %176 ], [ %.065, %175 ], [ %174, %173 ], [ %.065, %170 ], [ %.065, %169 ], [ %.065, %161 ], [ %.065, %160 ], [ %.065, %157 ], [ %.065, %156 ], [ %.065, %155 ], [ %.065, %154 ], [ %.065, %153 ], [ %.065, %151 ], [ %.065, %150 ], [ %.065, %149 ], [ %.065, %148 ], [ %.065, %147 ], [ %.065, %136 ], [ %.065, %135 ], [ %.065, %133 ], [ %.065, %131 ], [ %.065, %130 ], [ %.065, %128 ], [ %.065, %125 ], [ %.065, %124 ], [ %.065, %122 ], [ %.065, %121 ], [ %.065, %118 ], [ %.065, %117 ], [ %.065, %114 ], [ %.065, %113 ], [ %.065, %112 ], [ %.065, %102 ], [ %.065, %99 ], [ %.065, %98 ], [ %.065, %97 ], [ %.065, %96 ], [ %.065, %94 ], [ %.065, %93 ], [ %.065, %92 ], [ %.065, %81 ], [ %.065, %78 ], [ %.065, %76 ], [ %.065, %73 ], [ %.065, %72 ], [ %.065, %71 ], [ %.065, %70 ], [ %.065, %69 ], [ %.065, %67 ], [ %.065, %66 ], [ %.065, %65 ], [ %.065, %62 ], [ %.065, %61 ], [ %.065, %59 ], [ %.065, %57 ], [ %.065, %56 ], [ %.065, %55 ], [ %.065, %54 ], [ %53, %52 ], [ %.065, %51 ], [ %.065, %42 ], [ %.065, %39 ]
  %.063.be = phi i32 [ %.063, %38 ], [ %.063, %201 ], [ %.063, %200 ], [ %.063, %198 ], [ %.063, %186 ], [ %.063, %185 ], [ %.063, %182 ], [ 0, %181 ], [ %.063, %180 ], [ %.063, %179 ], [ %.063, %176 ], [ %.063, %175 ], [ %.063, %173 ], [ %.063, %170 ], [ %.063, %169 ], [ %.063, %161 ], [ %.063, %160 ], [ %.063, %157 ], [ %.063, %156 ], [ %.063, %155 ], [ %.063, %154 ], [ %.063, %153 ], [ %.063, %151 ], [ %.063, %150 ], [ %.063, %149 ], [ %.063, %148 ], [ %.063, %147 ], [ %.063, %136 ], [ %.063, %135 ], [ %.063, %133 ], [ %.063, %131 ], [ %.063, %130 ], [ %.063, %128 ], [ %.063, %125 ], [ %.063, %124 ], [ %.063, %122 ], [ %.063, %121 ], [ %.063, %118 ], [ %.063, %117 ], [ %.063, %114 ], [ %.063, %113 ], [ %.neg75, %112 ], [ %.063, %102 ], [ %.063, %99 ], [ %.063, %98 ], [ 0, %97 ], [ %.063, %96 ], [ %.063, %94 ], [ %.063, %93 ], [ %.063, %92 ], [ %.063, %81 ], [ %.063, %78 ], [ %.063, %76 ], [ %.063, %73 ], [ %.063, %72 ], [ %.063, %71 ], [ %.063, %70 ], [ %.063, %69 ], [ %.063, %67 ], [ %.063, %66 ], [ %.063, %65 ], [ %.063, %62 ], [ %.063, %61 ], [ %.063, %59 ], [ %.063, %57 ], [ %.063, %56 ], [ %.063, %55 ], [ %.063, %54 ], [ %.063, %52 ], [ %.063, %51 ], [ %.063, %42 ], [ %.063, %39 ]
  %.061.be = phi i32 [ %.061, %38 ], [ %.061, %201 ], [ %.061, %200 ], [ %.061, %198 ], [ %.061, %186 ], [ %.061, %185 ], [ %.061, %182 ], [ %.061, %181 ], [ %.061, %180 ], [ %.061, %179 ], [ %.061, %176 ], [ %.061, %175 ], [ %.061, %173 ], [ %.061, %170 ], [ %.061, %169 ], [ %.061, %161 ], [ %.061, %160 ], [ %.061, %157 ], [ %.061, %156 ], [ %.061, %155 ], [ %.061, %154 ], [ %.061, %153 ], [ %.061, %151 ], [ %.061, %150 ], [ %.061, %149 ], [ %.061, %148 ], [ %.061, %147 ], [ %.061, %136 ], [ %.061, %135 ], [ %.061, %133 ], [ %.061, %131 ], [ %.061, %130 ], [ %.061, %128 ], [ %.061, %125 ], [ %.061, %124 ], [ %123, %122 ], [ %.061, %121 ], [ %.061, %118 ], [ %.061, %117 ], [ %.061, %114 ], [ 0, %113 ], [ %.061, %112 ], [ %.061, %102 ], [ %.061, %99 ], [ %.061, %98 ], [ %.061, %97 ], [ %.061, %96 ], [ %.061, %94 ], [ %.061, %93 ], [ %.061, %92 ], [ %.061, %81 ], [ %.061, %78 ], [ %.061, %76 ], [ %.061, %73 ], [ %.061, %72 ], [ %.061, %71 ], [ %.061, %70 ], [ %.061, %69 ], [ %.061, %67 ], [ %.061, %66 ], [ %.061, %65 ], [ %.061, %62 ], [ %.061, %61 ], [ %.061, %59 ], [ %.061, %57 ], [ %.061, %56 ], [ %.061, %55 ], [ %.061, %54 ], [ %.061, %52 ], [ %.061, %51 ], [ %.061, %42 ], [ %.061, %39 ]
  %.059.be = phi i32 [ %.059, %38 ], [ %.059, %201 ], [ %.059, %200 ], [ %199, %198 ], [ %.059, %186 ], [ %.059, %185 ], [ %.059, %182 ], [ %.059, %181 ], [ %.059, %180 ], [ %.059, %179 ], [ %.059, %176 ], [ %.059, %175 ], [ %.059, %173 ], [ %.059, %170 ], [ %.059, %169 ], [ %.059, %161 ], [ %.059, %160 ], [ %.059, %157 ], [ %.059, %156 ], [ %.059, %155 ], [ %.059, %154 ], [ %.059, %153 ], [ %152, %151 ], [ %.059, %150 ], [ %.059, %149 ], [ %.059, %148 ], [ %.059, %147 ], [ %.059, %136 ], [ %.059, %135 ], [ %.059, %133 ], [ %.059, %131 ], [ %.059, %130 ], [ %.059, %128 ], [ %.059, %125 ], [ 0, %124 ], [ %.059, %122 ], [ %.059, %121 ], [ %.059, %118 ], [ %.059, %117 ], [ %.059, %114 ], [ %.059, %113 ], [ %.059, %112 ], [ %.059, %102 ], [ %.059, %99 ], [ %.059, %98 ], [ %.059, %97 ], [ %.059, %96 ], [ %.059, %94 ], [ %.059, %93 ], [ %.059, %92 ], [ %.059, %81 ], [ %.059, %78 ], [ %.059, %76 ], [ %.059, %73 ], [ %.059, %72 ], [ %.059, %71 ], [ %.059, %70 ], [ %.059, %69 ], [ %.059, %67 ], [ %.059, %66 ], [ %.059, %65 ], [ %.059, %62 ], [ %.059, %61 ], [ %.059, %59 ], [ %.059, %57 ], [ %.059, %56 ], [ %.059, %55 ], [ %.059, %54 ], [ %.059, %52 ], [ %.059, %51 ], [ %.059, %42 ], [ %.059, %39 ]
  %.057.be = phi i32 [ %.057, %38 ], [ %.057, %201 ], [ %.057, %200 ], [ %.057, %198 ], [ %.057, %186 ], [ %.057, %185 ], [ %.057, %182 ], [ %.057, %181 ], [ %.057, %180 ], [ %.057, %179 ], [ %.057, %176 ], [ %.057, %175 ], [ %.057, %173 ], [ %.057, %170 ], [ %.057, %169 ], [ %.057, %161 ], [ %.057, %160 ], [ %.057, %157 ], [ %.057, %156 ], [ %.057, %155 ], [ %.057, %154 ], [ %.057, %153 ], [ %.057, %151 ], [ %.057, %150 ], [ %.057, %149 ], [ %.neg73, %148 ], [ %.057, %147 ], [ %.057, %136 ], [ %.057, %135 ], [ %.057, %133 ], [ %.057, %131 ], [ %.057, %130 ], [ %129, %128 ], [ %.057, %125 ], [ %.057, %124 ], [ %.057, %122 ], [ %.057, %121 ], [ %.057, %118 ], [ %.057, %117 ], [ %.057, %114 ], [ %.057, %113 ], [ %.057, %112 ], [ %.057, %102 ], [ %.057, %99 ], [ %.057, %98 ], [ %.057, %97 ], [ %.057, %96 ], [ %.057, %94 ], [ %.057, %93 ], [ %.057, %92 ], [ %.057, %81 ], [ %.057, %78 ], [ %.057, %76 ], [ %.057, %73 ], [ %.057, %72 ], [ %.057, %71 ], [ %.057, %70 ], [ %.057, %69 ], [ %.057, %67 ], [ %.057, %66 ], [ %.057, %65 ], [ %.057, %62 ], [ %.057, %61 ], [ %.057, %59 ], [ %.057, %57 ], [ %.057, %56 ], [ %.057, %55 ], [ %.057, %54 ], [ %.057, %52 ], [ %.057, %51 ], [ %.057, %42 ], [ %.057, %39 ]
  %.055.be = phi i32 [ %.055, %38 ], [ %208, %201 ], [ 0, %200 ], [ %.055, %198 ], [ %.055, %186 ], [ %.055, %185 ], [ %.055, %182 ], [ %.055, %181 ], [ %.055, %180 ], [ %.055, %179 ], [ %.055, %176 ], [ %.055, %175 ], [ %.055, %173 ], [ %.055, %170 ], [ %.055, %169 ], [ %168, %161 ], [ %.055, %160 ], [ %.055, %157 ], [ %.055, %156 ], [ 0, %155 ], [ %.055, %154 ], [ %.055, %153 ], [ %.055, %151 ], [ %.055, %150 ], [ %.055, %149 ], [ %.055, %148 ], [ %.055, %147 ], [ %.055, %136 ], [ %.055, %135 ], [ %.055, %133 ], [ %.055, %131 ], [ %.055, %130 ], [ %.055, %128 ], [ %.055, %125 ], [ %.055, %124 ], [ %.055, %122 ], [ %.055, %121 ], [ %.055, %118 ], [ %.055, %117 ], [ %.055, %114 ], [ %.055, %113 ], [ %.055, %112 ], [ %.055, %102 ], [ %.055, %99 ], [ %.055, %98 ], [ %.055, %97 ], [ %.055, %96 ], [ %.055, %94 ], [ %.055, %93 ], [ %.055, %92 ], [ %.055, %81 ], [ %.055, %78 ], [ %.055, %76 ], [ %.055, %73 ], [ %.055, %72 ], [ %.055, %71 ], [ %.055, %70 ], [ %.055, %69 ], [ %.055, %67 ], [ %.055, %66 ], [ %.055, %65 ], [ %.055, %62 ], [ %.055, %61 ], [ %.055, %59 ], [ %.055, %57 ], [ %.055, %56 ], [ %.055, %55 ], [ %.055, %54 ], [ %.055, %52 ], [ %.055, %51 ], [ %.055, %42 ], [ %.055, %39 ]
  %.053.be = phi i32 [ %.053, %38 ], [ %.053, %201 ], [ 1, %200 ], [ %.053, %198 ], [ %.053, %186 ], [ %.053, %185 ], [ %.053, %182 ], [ %.053, %181 ], [ %.053, %180 ], [ %.053, %179 ], [ %.053, %176 ], [ %.053, %175 ], [ %.053, %173 ], [ %171, %170 ], [ %.053, %169 ], [ %.053, %161 ], [ %.053, %160 ], [ %.053, %157 ], [ %.053, %156 ], [ 1, %155 ], [ %.053, %154 ], [ %.053, %153 ], [ %.053, %151 ], [ %.053, %150 ], [ %.053, %149 ], [ %.053, %148 ], [ %.053, %147 ], [ %.053, %136 ], [ %.053, %135 ], [ %.053, %133 ], [ %.053, %131 ], [ %.053, %130 ], [ %.053, %128 ], [ %.053, %125 ], [ %.053, %124 ], [ %.053, %122 ], [ %.053, %121 ], [ %.053, %118 ], [ %.053, %117 ], [ %.053, %114 ], [ %.053, %113 ], [ %.053, %112 ], [ %.053, %102 ], [ %.053, %99 ], [ %.053, %98 ], [ %.053, %97 ], [ %.053, %96 ], [ %.053, %94 ], [ %.053, %93 ], [ %.053, %92 ], [ %.053, %81 ], [ %.053, %78 ], [ %.053, %76 ], [ %.053, %73 ], [ %.053, %72 ], [ %.053, %71 ], [ %.053, %70 ], [ %.053, %69 ], [ %.053, %67 ], [ %.053, %66 ], [ %.053, %65 ], [ %.053, %62 ], [ %.053, %61 ], [ %.053, %59 ], [ %.053, %57 ], [ %.053, %56 ], [ %.053, %55 ], [ %.053, %54 ], [ %.053, %52 ], [ %.053, %51 ], [ %.053, %42 ], [ %.053, %39 ]
  %.0.be = phi i32 [ %.0, %38 ], [ -677134456, %201 ], [ -1282756556, %200 ], [ -326492066, %198 ], [ 1300256754, %186 ], [ -1494325828, %185 ], [ 1397006461, %182 ], [ 1640821756, %181 ], [ -1497394315, %180 ], [ 182479578, %179 ], [ -218993648, %176 ], [ -25912845, %175 ], [ 98271344, %173 ], [ -541707578, %170 ], [ -707435930, %169 ], [ %11, %161 ], [ %12, %160 ], [ %159, %157 ], [ -541707578, %156 ], [ %13, %155 ], [ %14, %154 ], [ -1982123690, %153 ], [ %15, %151 ], [ %16, %150 ], [ -1292951607, %149 ], [ -888560160, %148 ], [ -710419628, %147 ], [ %17, %136 ], [ %18, %135 ], [ %134, %133 ], [ %21, %131 ], [ %22, %130 ], [ -888560160, %128 ], [ %127, %125 ], [ -1982123690, %124 ], [ -1158034942, %122 ], [ -401287589, %121 ], [ %23, %118 ], [ %24, %117 ], [ %116, %114 ], [ -1158034942, %113 ], [ 440463274, %112 ], [ 489069101, %102 ], [ %101, %99 ], [ 440463274, %98 ], [ %25, %97 ], [ %26, %96 ], [ -1046043641, %94 ], [ 230583416, %93 ], [ 1804746985, %92 ], [ -404885687, %81 ], [ %80, %78 ], [ 1804746985, %76 ], [ %75, %73 ], [ -1046043641, %72 ], [ %28, %71 ], [ %29, %70 ], [ 971203107, %69 ], [ %30, %67 ], [ %31, %66 ], [ -485397389, %65 ], [ %32, %62 ], [ %33, %61 ], [ %60, %59 ], [ %34, %57 ], [ %35, %56 ], [ 971203107, %55 ], [ 1130032109, %54 ], [ %36, %52 ], [ %37, %51 ], [ 1073896236, %42 ], [ %41, %39 ]
  br label %38

39:                                               ; preds = %38
  %40 = icmp slt i32 %.065, %27
  %41 = select i1 %40, i32 -1246606393, i32 -1777511547
  br label %.backedge

42:                                               ; preds = %38
  %43 = sext i32 %.065 to i64
  %44 = getelementptr inbounds [1502 x i32], [1502 x i32]* @shs, i64 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds [1502 x i32], [1502 x i32]* @hs, i64 0, i64 %43
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %.neg79 = add i32 %.065, 1
  %49 = sext i32 %.neg79 to i64
  %50 = getelementptr inbounds [1502 x i32], [1502 x i32]* @shs, i64 0, i64 %49
  store i32 %48, i32* %50, align 4
  br label %.backedge

51:                                               ; preds = %38
  br label %.backedge

52:                                               ; preds = %38
  %53 = add i32 %.065, 1
  br label %.backedge

54:                                               ; preds = %38
  br label %.backedge

55:                                               ; preds = %38
  br label %.backedge

56:                                               ; preds = %38
  br label %.backedge

57:                                               ; preds = %38
  %58 = icmp slt i32 %.071, 1500002
  store i1 %58, i1* %2, align 1
  br label %.backedge

59:                                               ; preds = %38
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %60 = select i1 %.0..0..0., i32 96461532, i32 -1460114826
  br label %.backedge

61:                                               ; preds = %38
  br label %.backedge

62:                                               ; preds = %38
  %63 = sext i32 %.071 to i64
  %64 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @xcn, i64 0, i64 %63
  store i32 0, i32* %64, align 4
  br label %.backedge

65:                                               ; preds = %38
  br label %.backedge

66:                                               ; preds = %38
  br label %.backedge

67:                                               ; preds = %38
  %68 = add i32 %.071, 1
  br label %.backedge

69:                                               ; preds = %38
  br label %.backedge

70:                                               ; preds = %38
  br label %.backedge

71:                                               ; preds = %38
  br label %.backedge

72:                                               ; preds = %38
  br label %.backedge

73:                                               ; preds = %38
  %74 = icmp slt i32 %.069, %27
  %75 = select i1 %74, i32 36230193, i32 -334834956
  br label %.backedge

76:                                               ; preds = %38
  %77 = add i32 %.069, 1
  br label %.backedge

78:                                               ; preds = %38
  %79 = icmp slt i32 %.067, %.neg78
  %80 = select i1 %79, i32 603318097, i32 1634996056
  br label %.backedge

81:                                               ; preds = %38
  %82 = sext i32 %.067 to i64
  %83 = getelementptr inbounds [1502 x i32], [1502 x i32]* @shs, i64 0, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = sext i32 %.069 to i64
  %86 = getelementptr inbounds [1502 x i32], [1502 x i32]* @shs, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = sub i32 %84, %87
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @xcn, i64 0, i64 %89
  %91 = load i32, i32* %90, align 4
  %.neg77 = add i32 %91, 1
  store i32 %.neg77, i32* %90, align 4
  br label %.backedge

92:                                               ; preds = %38
  %.neg76 = add i32 %.067, 1
  br label %.backedge

93:                                               ; preds = %38
  br label %.backedge

94:                                               ; preds = %38
  %95 = add i32 %.069, 1
  br label %.backedge

96:                                               ; preds = %38
  br label %.backedge

97:                                               ; preds = %38
  store i32 0, i32* getelementptr inbounds ([1502 x i32], [1502 x i32]* @sgs, i64 0, i64 0), align 16
  br label %.backedge

98:                                               ; preds = %38
  br label %.backedge

99:                                               ; preds = %38
  %100 = icmp slt i32 %.063, %19
  %101 = select i1 %100, i32 720704794, i32 1655299598
  br label %.backedge

102:                                              ; preds = %38
  %103 = sext i32 %.063 to i64
  %104 = getelementptr inbounds [1502 x i32], [1502 x i32]* @sgs, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds [1502 x i32], [1502 x i32]* @gs, i64 0, i64 %103
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, %105
  %109 = add i32 %.063, 1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [1502 x i32], [1502 x i32]* @sgs, i64 0, i64 %110
  store i32 %108, i32* %111, align 4
  br label %.backedge

112:                                              ; preds = %38
  %.neg75 = add i32 %.063, 1
  br label %.backedge

113:                                              ; preds = %38
  br label %.backedge

114:                                              ; preds = %38
  %115 = icmp slt i32 %.061, 1500002
  %116 = select i1 %115, i32 -298373240, i32 -1454887880
  br label %.backedge

117:                                              ; preds = %38
  br label %.backedge

118:                                              ; preds = %38
  %119 = sext i32 %.061 to i64
  %120 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @ycn, i64 0, i64 %119
  store i32 0, i32* %120, align 4
  br label %.backedge

121:                                              ; preds = %38
  br label %.backedge

122:                                              ; preds = %38
  %123 = add i32 %.061, 1
  br label %.backedge

124:                                              ; preds = %38
  br label %.backedge

125:                                              ; preds = %38
  %126 = icmp slt i32 %.059, %19
  %127 = select i1 %126, i32 2122903047, i32 1423787896
  br label %.backedge

128:                                              ; preds = %38
  %129 = add i32 %.059, 1
  br label %.backedge

130:                                              ; preds = %38
  br label %.backedge

131:                                              ; preds = %38
  %132 = icmp slt i32 %.057, %20
  store i1 %132, i1* %1, align 1
  br label %.backedge

133:                                              ; preds = %38
  %.0..0..0.52 = load volatile i1, i1* %1, align 1
  %134 = select i1 %.0..0..0.52, i32 -44048318, i32 -402403338
  br label %.backedge

135:                                              ; preds = %38
  br label %.backedge

136:                                              ; preds = %38
  %137 = sext i32 %.057 to i64
  %138 = getelementptr inbounds [1502 x i32], [1502 x i32]* @sgs, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %.059 to i64
  %141 = getelementptr inbounds [1502 x i32], [1502 x i32]* @sgs, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = sub i32 %139, %142
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @ycn, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  %.neg74 = add i32 %146, 1
  store i32 %.neg74, i32* %145, align 4
  br label %.backedge

147:                                              ; preds = %38
  br label %.backedge

148:                                              ; preds = %38
  %.neg73 = add i32 %.057, 1
  br label %.backedge

149:                                              ; preds = %38
  br label %.backedge

150:                                              ; preds = %38
  br label %.backedge

151:                                              ; preds = %38
  %152 = add i32 %.059, 1
  br label %.backedge

153:                                              ; preds = %38
  br label %.backedge

154:                                              ; preds = %38
  br label %.backedge

155:                                              ; preds = %38
  br label %.backedge

156:                                              ; preds = %38
  br label %.backedge

157:                                              ; preds = %38
  %158 = icmp slt i32 %.053, 1500002
  %159 = select i1 %158, i32 -432230368, i32 -1534548382
  br label %.backedge

160:                                              ; preds = %38
  br label %.backedge

161:                                              ; preds = %38
  %162 = sext i32 %.053 to i64
  %163 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @xcn, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @ycn, i64 0, i64 %162
  %166 = load i32, i32* %165, align 4
  %167 = mul nsw i32 %166, %164
  %168 = add i32 %167, %.055
  br label %.backedge

169:                                              ; preds = %38
  br label %.backedge

170:                                              ; preds = %38
  %171 = add i32 %.053, 1
  br label %.backedge

172:                                              ; preds = %38
  ret i32 %.055

173:                                              ; preds = %38
  %174 = add i32 %.065, 1
  br label %.backedge

175:                                              ; preds = %38
  br label %.backedge

176:                                              ; preds = %38
  %177 = sext i32 %.071 to i64
  %178 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @xcn, i64 0, i64 %177
  store i32 0, i32* %178, align 4
  br label %.backedge

179:                                              ; preds = %38
  %.neg = add i32 %.071, 1
  br label %.backedge

180:                                              ; preds = %38
  br label %.backedge

181:                                              ; preds = %38
  store i32 0, i32* getelementptr inbounds ([1502 x i32], [1502 x i32]* @sgs, i64 0, i64 0), align 16
  br label %.backedge

182:                                              ; preds = %38
  %183 = sext i32 %.061 to i64
  %184 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @ycn, i64 0, i64 %183
  store i32 0, i32* %184, align 4
  br label %.backedge

185:                                              ; preds = %38
  br label %.backedge

186:                                              ; preds = %38
  %187 = sext i32 %.057 to i64
  %188 = getelementptr inbounds [1502 x i32], [1502 x i32]* @sgs, i64 0, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = sext i32 %.059 to i64
  %191 = getelementptr inbounds [1502 x i32], [1502 x i32]* @sgs, i64 0, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = sub i32 %189, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @ycn, i64 0, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = add i32 %196, 1
  store i32 %197, i32* %195, align 4
  br label %.backedge

198:                                              ; preds = %38
  %199 = add i32 %.059, 1
  br label %.backedge

200:                                              ; preds = %38
  br label %.backedge

201:                                              ; preds = %38
  %202 = sext i32 %.053 to i64
  %203 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @xcn, i64 0, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds [1500002 x i32], [1500002 x i32]* @ycn, i64 0, i64 %202
  %206 = load i32, i32* %205, align 4
  %207 = mul nsw i32 %206, %204
  %208 = add i32 %207, %.055
  br label %.backedge
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  br label %2

2:                                                ; preds = %.backedge, %0
  %.011 = phi i32 [ undef, %0 ], [ %.011.be, %.backedge ]
  %.09 = phi i32 [ undef, %0 ], [ %.09.be, %.backedge ]
  %.0 = phi i32 [ 1973980463, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1973980463, label %3
    i32 -585890022, label %8
    i32 -1233025738, label %18
    i32 1595381916, label %28
    i32 -262046656, label %29
    i32 1332555628, label %30
    i32 -907135727, label %34
    i32 2125369414, label %38
    i32 -439386243, label %48
    i32 35932295, label %59
    i32 -503022410, label %60
    i32 -1392313212, label %61
    i32 83044038, label %71
    i32 -1418711161, label %83
    i32 -954030711, label %85
    i32 -923371561, label %89
    i32 -19374849, label %90
    i32 341478312, label %94
    i32 -1331609678, label %95
    i32 108430012, label %97
  ]

.backedge:                                        ; preds = %2, %97, %95, %94, %90, %89, %85, %83, %71, %61, %60, %59, %48, %38, %34, %30, %29, %18, %8, %3
  %.011.be = phi i32 [ %.011, %2 ], [ %.011, %97 ], [ %96, %95 ], [ %.011, %94 ], [ %.011, %90 ], [ %.011, %89 ], [ %.011, %85 ], [ %.011, %83 ], [ %.011, %71 ], [ %.011, %61 ], [ %.011, %60 ], [ %.011, %59 ], [ %49, %48 ], [ %.011, %38 ], [ %.011, %34 ], [ %.011, %30 ], [ 0, %29 ], [ %.011, %18 ], [ %.011, %8 ], [ %.011, %3 ]
  %.09.be = phi i32 [ %.09, %2 ], [ %.09, %97 ], [ %.09, %95 ], [ %.09, %94 ], [ %.09, %90 ], [ %.neg, %89 ], [ %.09, %85 ], [ %.09, %83 ], [ %.09, %71 ], [ %.09, %61 ], [ 0, %60 ], [ %.09, %59 ], [ %.09, %48 ], [ %.09, %38 ], [ %.09, %34 ], [ %.09, %30 ], [ %.09, %29 ], [ %.09, %18 ], [ %.09, %8 ], [ %.09, %3 ]
  %.0.be = phi i32 [ %.0, %2 ], [ 83044038, %97 ], [ -439386243, %95 ], [ -1233025738, %94 ], [ 1973980463, %90 ], [ -1392313212, %89 ], [ -923371561, %85 ], [ %84, %83 ], [ %82, %71 ], [ %70, %61 ], [ -1392313212, %60 ], [ 1332555628, %59 ], [ %58, %48 ], [ %47, %38 ], [ 2125369414, %34 ], [ %33, %30 ], [ 1332555628, %29 ], [ %27, %18 ], [ %17, %8 ], [ %7, %3 ]
  br label %2

3:                                                ; preds = %2
  %4 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @hl)
  %5 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %4, i32* nonnull dereferenceable(4) @gl)
  %6 = load i32, i32* @hl, align 4
  %.not = icmp eq i32 %6, 0
  %7 = select i1 %.not, i32 -585890022, i32 -262046656
  br label %.backedge

8:                                                ; preds = %2
  %9 = load i32, i32* @x.3, align 4
  %10 = load i32, i32* @y.4, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 -1233025738, i32 341478312
  br label %.backedge

18:                                               ; preds = %2
  %19 = load i32, i32* @x.3, align 4
  %20 = load i32, i32* @y.4, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 1595381916, i32 341478312
  br label %.backedge

28:                                               ; preds = %2
  ret i32 0

29:                                               ; preds = %2
  br label %.backedge

30:                                               ; preds = %2
  %31 = load i32, i32* @hl, align 4
  %32 = icmp slt i32 %.011, %31
  %33 = select i1 %32, i32 -907135727, i32 -503022410
  br label %.backedge

34:                                               ; preds = %2
  %35 = sext i32 %.011 to i64
  %36 = getelementptr inbounds [1502 x i32], [1502 x i32]* @hs, i64 0, i64 %35
  %37 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %36)
  br label %.backedge

38:                                               ; preds = %2
  %39 = load i32, i32* @x.3, align 4
  %40 = load i32, i32* @y.4, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 -439386243, i32 -1331609678
  br label %.backedge

48:                                               ; preds = %2
  %49 = add i32 %.011, 1
  %50 = load i32, i32* @x.3, align 4
  %51 = load i32, i32* @y.4, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 35932295, i32 -1331609678
  br label %.backedge

59:                                               ; preds = %2
  br label %.backedge

60:                                               ; preds = %2
  br label %.backedge

61:                                               ; preds = %2
  %62 = load i32, i32* @x.3, align 4
  %63 = load i32, i32* @y.4, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 83044038, i32 108430012
  br label %.backedge

71:                                               ; preds = %2
  %72 = load i32, i32* @gl, align 4
  %73 = icmp slt i32 %.09, %72
  store i1 %73, i1* %1, align 1
  %74 = load i32, i32* @x.3, align 4
  %75 = load i32, i32* @y.4, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 -1418711161, i32 108430012
  br label %.backedge

83:                                               ; preds = %2
  %.0..0..0. = load volatile i1, i1* %1, align 1
  %84 = select i1 %.0..0..0., i32 -954030711, i32 -19374849
  br label %.backedge

85:                                               ; preds = %2
  %86 = sext i32 %.09 to i64
  %87 = getelementptr inbounds [1502 x i32], [1502 x i32]* @gs, i64 0, i64 %86
  %88 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %87)
  br label %.backedge

89:                                               ; preds = %2
  %.neg = add i32 %.09, 1
  br label %.backedge

90:                                               ; preds = %2
  %91 = tail call i32 @_Z5solvev()
  %92 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %91)
  %93 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %92, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

94:                                               ; preds = %2
  br label %.backedge

95:                                               ; preds = %2
  %96 = add i32 %.011, 1
  br label %.backedge

97:                                               ; preds = %2
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s850796693.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
