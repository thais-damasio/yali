; ModuleID = 'build_ollvm/programs/p01140/s826553082.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s826553082.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@N = global i32 0, align 4
@M = global i32 0, align 4
@H = global [2000 x i32] zeroinitializer, align 16
@W = global [2000 x i32] zeroinitializer, align 16
@h = local_unnamed_addr global [2000000 x i32] zeroinitializer, align 16
@w = local_unnamed_addr global [2000000 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s826553082.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  br label %7

7:                                                ; preds = %.backedge, %0
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ -1538730235, %0 ], [ %.059.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.059, label %.backedge [
    i32 -1538730235, label %8
    i32 -749195925, label %13
    i32 1165631357, label %23
    i32 1861616816, label %35
    i32 -1629807130, label %36
    i32 849077641, label %46
    i32 -739025750, label %56
    i32 728941385, label %58
    i32 -1054575896, label %68
    i32 -1712552582, label %78
    i32 1710668228, label %79
    i32 -995729051, label %84
    i32 -1586516349, label %94
    i32 2029514144, label %107
    i32 1048026306, label %108
    i32 1323346112, label %110
    i32 1888176024, label %120
    i32 -1251096394, label %130
    i32 555126078, label %131
    i32 -777451607, label %141
    i32 2003023169, label %154
    i32 1536775180, label %156
    i32 -501601748, label %160
    i32 1628113996, label %161
    i32 -60360968, label %162
    i32 -1673928125, label %172
    i32 2375570, label %185
    i32 -1162259865, label %187
    i32 1049056474, label %197
    i32 -1300010930, label %215
    i32 462241513, label %216
    i32 1668205718, label %218
    i32 -1517216003, label %219
    i32 -163522756, label %224
    i32 -1731451130, label %234
    i32 663432735, label %251
    i32 -358155847, label %252
    i32 -1436933916, label %254
    i32 -517169029, label %255
    i32 250393256, label %258
    i32 1711963809, label %262
    i32 -32188578, label %264
    i32 -875105798, label %265
    i32 1527240357, label %270
    i32 -1756331757, label %272
    i32 -2009530781, label %277
    i32 279521339, label %288
    i32 -2070825219, label %298
    i32 383680139, label %309
    i32 -2116576823, label %310
    i32 -634740878, label %311
    i32 -1057252312, label %313
    i32 394333161, label %314
    i32 -1180618267, label %318
    i32 257977270, label %320
    i32 730349909, label %330
    i32 224831881, label %343
    i32 -1567072681, label %345
    i32 1711994100, label %357
    i32 1078773220, label %367
    i32 -648253504, label %378
    i32 -1760005251, label %379
    i32 1213583137, label %380
    i32 -996901712, label %390
    i32 -2103766518, label %401
    i32 -113192606, label %402
    i32 1593022573, label %403
    i32 442446270, label %413
    i32 1169871803, label %424
    i32 -1788855546, label %426
    i32 1653756511, label %434
    i32 -1147151008, label %444
    i32 762107479, label %454
    i32 1565673377, label %455
    i32 1798833679, label %465
    i32 1845416468, label %477
    i32 -28656951, label %478
    i32 1855060594, label %488
    i32 1393748853, label %498
    i32 291962559, label %499
    i32 1632759315, label %500
    i32 -1225878, label %501
    i32 1218302850, label %502
    i32 1989198957, label %506
    i32 -1705059397, label %507
    i32 -1203776777, label %508
    i32 342850663, label %509
    i32 982246424, label %518
    i32 1774247330, label %527
    i32 -455439163, label %529
    i32 8208970, label %530
    i32 -251510595, label %532
    i32 252767799, label %534
    i32 -1277916146, label %535
    i32 -1615824746, label %536
    i32 -2135904900, label %539
  ]

.backedge:                                        ; preds = %7, %539, %536, %535, %534, %532, %530, %529, %527, %518, %509, %508, %507, %506, %502, %501, %500, %499, %488, %478, %477, %465, %455, %454, %444, %434, %426, %424, %413, %403, %402, %401, %390, %380, %379, %378, %367, %357, %345, %343, %330, %320, %318, %314, %313, %311, %310, %309, %298, %288, %277, %272, %270, %265, %264, %262, %258, %255, %254, %252, %251, %234, %224, %219, %218, %216, %215, %197, %187, %185, %172, %162, %161, %160, %156, %154, %141, %131, %130, %120, %110, %108, %107, %94, %84, %79, %78, %68, %58, %56, %46, %36, %35, %23, %13, %8
  %.081.be = phi i32 [ %.081, %7 ], [ %.081, %539 ], [ %.081, %536 ], [ %.081, %535 ], [ %.081, %534 ], [ %.081, %532 ], [ %.081, %530 ], [ %.081, %529 ], [ %.081, %527 ], [ %.081, %518 ], [ %.081, %509 ], [ %.081, %508 ], [ %.081, %507 ], [ %.081, %506 ], [ %.081, %502 ], [ 1, %501 ], [ %.081, %500 ], [ %.081, %499 ], [ %.081, %488 ], [ %.081, %478 ], [ %.081, %477 ], [ %.081, %465 ], [ %.081, %455 ], [ %.081, %454 ], [ %.081, %444 ], [ %.081, %434 ], [ %.081, %426 ], [ %.081, %424 ], [ %.081, %413 ], [ %.081, %403 ], [ %.081, %402 ], [ %.081, %401 ], [ %.081, %390 ], [ %.081, %380 ], [ %.081, %379 ], [ %.081, %378 ], [ %.081, %367 ], [ %.081, %357 ], [ %.081, %345 ], [ %.081, %343 ], [ %.081, %330 ], [ %.081, %320 ], [ %.081, %318 ], [ %.081, %314 ], [ %.081, %313 ], [ %.081, %311 ], [ %.081, %310 ], [ %.081, %309 ], [ %.081, %298 ], [ %.081, %288 ], [ %.081, %277 ], [ %.081, %272 ], [ %.081, %270 ], [ %.081, %265 ], [ %.081, %264 ], [ %.081, %262 ], [ %.081, %258 ], [ %.081, %255 ], [ %.081, %254 ], [ %.081, %252 ], [ %.081, %251 ], [ %.081, %234 ], [ %.081, %224 ], [ %.081, %219 ], [ %.081, %218 ], [ %.081, %216 ], [ %.081, %215 ], [ %.081, %197 ], [ %.081, %187 ], [ %.081, %185 ], [ %.081, %172 ], [ %.081, %162 ], [ %.081, %161 ], [ %.081, %160 ], [ %.081, %156 ], [ %.081, %154 ], [ %.081, %141 ], [ %.081, %131 ], [ %.081, %130 ], [ %.081, %120 ], [ %.081, %110 ], [ %109, %108 ], [ %.081, %107 ], [ %.081, %94 ], [ %.081, %84 ], [ %.081, %79 ], [ %.081, %78 ], [ 1, %68 ], [ %.081, %58 ], [ %.081, %56 ], [ %.081, %46 ], [ %.081, %36 ], [ %.081, %35 ], [ %.081, %23 ], [ %.081, %13 ], [ %.081, %8 ]
  %.079.be = phi i32 [ %.079, %7 ], [ %.079, %539 ], [ %.079, %536 ], [ %.079, %535 ], [ %.079, %534 ], [ %.079, %532 ], [ %.079, %530 ], [ %.079, %529 ], [ %.079, %527 ], [ %.079, %518 ], [ %.079, %509 ], [ %.079, %508 ], [ %.079, %507 ], [ 1, %506 ], [ %.079, %502 ], [ %.079, %501 ], [ %.079, %500 ], [ %.079, %499 ], [ %.079, %488 ], [ %.079, %478 ], [ %.079, %477 ], [ %.079, %465 ], [ %.079, %455 ], [ %.079, %454 ], [ %.079, %444 ], [ %.079, %434 ], [ %.079, %426 ], [ %.079, %424 ], [ %.079, %413 ], [ %.079, %403 ], [ %.079, %402 ], [ %.079, %401 ], [ %.079, %390 ], [ %.079, %380 ], [ %.079, %379 ], [ %.079, %378 ], [ %.079, %367 ], [ %.079, %357 ], [ %.079, %345 ], [ %.079, %343 ], [ %.079, %330 ], [ %.079, %320 ], [ %.079, %318 ], [ %.079, %314 ], [ %.079, %313 ], [ %.079, %311 ], [ %.079, %310 ], [ %.079, %309 ], [ %.079, %298 ], [ %.079, %288 ], [ %.079, %277 ], [ %.079, %272 ], [ %.079, %270 ], [ %.079, %265 ], [ %.079, %264 ], [ %.079, %262 ], [ %.079, %258 ], [ %.079, %255 ], [ %.079, %254 ], [ %.079, %252 ], [ %.079, %251 ], [ %.079, %234 ], [ %.079, %224 ], [ %.079, %219 ], [ %.079, %218 ], [ %.079, %216 ], [ %.079, %215 ], [ %.079, %197 ], [ %.079, %187 ], [ %.079, %185 ], [ %.079, %172 ], [ %.079, %162 ], [ %.079, %161 ], [ %.neg87, %160 ], [ %.079, %156 ], [ %.079, %154 ], [ %.079, %141 ], [ %.079, %131 ], [ %.079, %130 ], [ 1, %120 ], [ %.079, %110 ], [ %.079, %108 ], [ %.079, %107 ], [ %.079, %94 ], [ %.079, %84 ], [ %.079, %79 ], [ %.079, %78 ], [ %.079, %68 ], [ %.079, %58 ], [ %.079, %56 ], [ %.079, %46 ], [ %.079, %36 ], [ %.079, %35 ], [ %.079, %23 ], [ %.079, %13 ], [ %.079, %8 ]
  %.077.be = phi i32 [ %.077, %7 ], [ %.077, %539 ], [ %.077, %536 ], [ %.077, %535 ], [ %.077, %534 ], [ %.077, %532 ], [ %.077, %530 ], [ %.077, %529 ], [ %.077, %527 ], [ %.077, %518 ], [ %.077, %509 ], [ %.077, %508 ], [ %.077, %507 ], [ %.077, %506 ], [ %.077, %502 ], [ %.077, %501 ], [ %.077, %500 ], [ %.077, %499 ], [ %.077, %488 ], [ %.077, %478 ], [ %.077, %477 ], [ %.077, %465 ], [ %.077, %455 ], [ %.077, %454 ], [ %.077, %444 ], [ %.077, %434 ], [ %.077, %426 ], [ %.077, %424 ], [ %.077, %413 ], [ %.077, %403 ], [ %.077, %402 ], [ %.077, %401 ], [ %.077, %390 ], [ %.077, %380 ], [ %.077, %379 ], [ %.077, %378 ], [ %.077, %367 ], [ %.077, %357 ], [ %.077, %345 ], [ %.077, %343 ], [ %.077, %330 ], [ %.077, %320 ], [ %.077, %318 ], [ %.077, %314 ], [ %.077, %313 ], [ %.077, %311 ], [ %.077, %310 ], [ %.077, %309 ], [ %.077, %298 ], [ %.077, %288 ], [ %.077, %277 ], [ %.077, %272 ], [ %.077, %270 ], [ %.077, %265 ], [ %.077, %264 ], [ %.077, %262 ], [ %.077, %258 ], [ %.077, %255 ], [ %.077, %254 ], [ %.077, %252 ], [ %.077, %251 ], [ %.077, %234 ], [ %.077, %224 ], [ %.077, %219 ], [ %.077, %218 ], [ %217, %216 ], [ %.077, %215 ], [ %.077, %197 ], [ %.077, %187 ], [ %.077, %185 ], [ %.077, %172 ], [ %.077, %162 ], [ 0, %161 ], [ %.077, %160 ], [ %.077, %156 ], [ %.077, %154 ], [ %.077, %141 ], [ %.077, %131 ], [ %.077, %130 ], [ %.077, %120 ], [ %.077, %110 ], [ %.077, %108 ], [ %.077, %107 ], [ %.077, %94 ], [ %.077, %84 ], [ %.077, %79 ], [ %.077, %78 ], [ %.077, %68 ], [ %.077, %58 ], [ %.077, %56 ], [ %.077, %46 ], [ %.077, %36 ], [ %.077, %35 ], [ %.077, %23 ], [ %.077, %13 ], [ %.077, %8 ]
  %.075.be = phi i32 [ %.075, %7 ], [ %.075, %539 ], [ %.075, %536 ], [ %.075, %535 ], [ %.075, %534 ], [ %.075, %532 ], [ %.075, %530 ], [ %.075, %529 ], [ %.075, %527 ], [ %.075, %518 ], [ %.075, %509 ], [ %.075, %508 ], [ %.075, %507 ], [ %.075, %506 ], [ %.075, %502 ], [ %.075, %501 ], [ %.075, %500 ], [ %.075, %499 ], [ %.075, %488 ], [ %.075, %478 ], [ %.075, %477 ], [ %.075, %465 ], [ %.075, %455 ], [ %.075, %454 ], [ %.075, %444 ], [ %.075, %434 ], [ %.075, %426 ], [ %.075, %424 ], [ %.075, %413 ], [ %.075, %403 ], [ %.075, %402 ], [ %.075, %401 ], [ %.075, %390 ], [ %.075, %380 ], [ %.075, %379 ], [ %.075, %378 ], [ %.075, %367 ], [ %.075, %357 ], [ %.075, %345 ], [ %.075, %343 ], [ %.075, %330 ], [ %.075, %320 ], [ %.075, %318 ], [ %.075, %314 ], [ %.075, %313 ], [ %.075, %311 ], [ %.075, %310 ], [ %.075, %309 ], [ %.075, %298 ], [ %.075, %288 ], [ %.075, %277 ], [ %.075, %272 ], [ %.075, %270 ], [ %.075, %265 ], [ %.075, %264 ], [ %.075, %262 ], [ %.075, %258 ], [ %.075, %255 ], [ %.075, %254 ], [ %253, %252 ], [ %.075, %251 ], [ %.075, %234 ], [ %.075, %224 ], [ %.075, %219 ], [ 0, %218 ], [ %.075, %216 ], [ %.075, %215 ], [ %.075, %197 ], [ %.075, %187 ], [ %.075, %185 ], [ %.075, %172 ], [ %.075, %162 ], [ %.075, %161 ], [ %.075, %160 ], [ %.075, %156 ], [ %.075, %154 ], [ %.075, %141 ], [ %.075, %131 ], [ %.075, %130 ], [ %.075, %120 ], [ %.075, %110 ], [ %.075, %108 ], [ %.075, %107 ], [ %.075, %94 ], [ %.075, %84 ], [ %.075, %79 ], [ %.075, %78 ], [ %.075, %68 ], [ %.075, %58 ], [ %.075, %56 ], [ %.075, %46 ], [ %.075, %36 ], [ %.075, %35 ], [ %.075, %23 ], [ %.075, %13 ], [ %.075, %8 ]
  %.073.be = phi i32 [ %.073, %7 ], [ %.073, %539 ], [ %.073, %536 ], [ %.073, %535 ], [ %.073, %534 ], [ %.073, %532 ], [ %.073, %530 ], [ %.073, %529 ], [ %.073, %527 ], [ %.073, %518 ], [ %.073, %509 ], [ %.073, %508 ], [ %.073, %507 ], [ %.073, %506 ], [ %.073, %502 ], [ %.073, %501 ], [ %.073, %500 ], [ %.073, %499 ], [ %.073, %488 ], [ %.073, %478 ], [ %.073, %477 ], [ %.073, %465 ], [ %.073, %455 ], [ %.073, %454 ], [ %.073, %444 ], [ %.073, %434 ], [ %.073, %426 ], [ %.073, %424 ], [ %.073, %413 ], [ %.073, %403 ], [ %.073, %402 ], [ %.073, %401 ], [ %.073, %390 ], [ %.073, %380 ], [ %.073, %379 ], [ %.073, %378 ], [ %.073, %367 ], [ %.073, %357 ], [ %.073, %345 ], [ %.073, %343 ], [ %.073, %330 ], [ %.073, %320 ], [ %.073, %318 ], [ %.073, %314 ], [ %.073, %313 ], [ %.073, %311 ], [ %.073, %310 ], [ %.073, %309 ], [ %.073, %298 ], [ %.073, %288 ], [ %.073, %277 ], [ %.073, %272 ], [ %.073, %270 ], [ %.073, %265 ], [ %.073, %264 ], [ %263, %262 ], [ %.073, %258 ], [ %.073, %255 ], [ 0, %254 ], [ %.073, %252 ], [ %.073, %251 ], [ %.073, %234 ], [ %.073, %224 ], [ %.073, %219 ], [ %.073, %218 ], [ %.073, %216 ], [ %.073, %215 ], [ %.073, %197 ], [ %.073, %187 ], [ %.073, %185 ], [ %.073, %172 ], [ %.073, %162 ], [ %.073, %161 ], [ %.073, %160 ], [ %.073, %156 ], [ %.073, %154 ], [ %.073, %141 ], [ %.073, %131 ], [ %.073, %130 ], [ %.073, %120 ], [ %.073, %110 ], [ %.073, %108 ], [ %.073, %107 ], [ %.073, %94 ], [ %.073, %84 ], [ %.073, %79 ], [ %.073, %78 ], [ %.073, %68 ], [ %.073, %58 ], [ %.073, %56 ], [ %.073, %46 ], [ %.073, %36 ], [ %.073, %35 ], [ %.073, %23 ], [ %.073, %13 ], [ %.073, %8 ]
  %.071.be = phi i32 [ %.071, %7 ], [ %.071, %539 ], [ %.071, %536 ], [ %.071, %535 ], [ %.071, %534 ], [ %.071, %532 ], [ %.071, %530 ], [ %.071, %529 ], [ %.071, %527 ], [ %.071, %518 ], [ %.071, %509 ], [ %.071, %508 ], [ %.071, %507 ], [ %.071, %506 ], [ %.071, %502 ], [ %.071, %501 ], [ %.071, %500 ], [ %.071, %499 ], [ %.071, %488 ], [ %.071, %478 ], [ %.071, %477 ], [ %.071, %465 ], [ %.071, %455 ], [ %.071, %454 ], [ %.071, %444 ], [ %.071, %434 ], [ %.071, %426 ], [ %.071, %424 ], [ %.071, %413 ], [ %.071, %403 ], [ %.071, %402 ], [ %.071, %401 ], [ %.071, %390 ], [ %.071, %380 ], [ %.071, %379 ], [ %.071, %378 ], [ %.071, %367 ], [ %.071, %357 ], [ %.071, %345 ], [ %.071, %343 ], [ %.071, %330 ], [ %.071, %320 ], [ %.071, %318 ], [ %.071, %314 ], [ %.071, %313 ], [ %312, %311 ], [ %.071, %310 ], [ %.071, %309 ], [ %.071, %298 ], [ %.071, %288 ], [ %.071, %277 ], [ %.071, %272 ], [ %.071, %270 ], [ %.071, %265 ], [ 0, %264 ], [ %.071, %262 ], [ %.071, %258 ], [ %.071, %255 ], [ %.071, %254 ], [ %.071, %252 ], [ %.071, %251 ], [ %.071, %234 ], [ %.071, %224 ], [ %.071, %219 ], [ %.071, %218 ], [ %.071, %216 ], [ %.071, %215 ], [ %.071, %197 ], [ %.071, %187 ], [ %.071, %185 ], [ %.071, %172 ], [ %.071, %162 ], [ %.071, %161 ], [ %.071, %160 ], [ %.071, %156 ], [ %.071, %154 ], [ %.071, %141 ], [ %.071, %131 ], [ %.071, %130 ], [ %.071, %120 ], [ %.071, %110 ], [ %.071, %108 ], [ %.071, %107 ], [ %.071, %94 ], [ %.071, %84 ], [ %.071, %79 ], [ %.071, %78 ], [ %.071, %68 ], [ %.071, %58 ], [ %.071, %56 ], [ %.071, %46 ], [ %.071, %36 ], [ %.071, %35 ], [ %.071, %23 ], [ %.071, %13 ], [ %.071, %8 ]
  %.069.be = phi i32 [ %.069, %7 ], [ %.069, %539 ], [ %.069, %536 ], [ %.069, %535 ], [ %.069, %534 ], [ %.069, %532 ], [ %.069, %530 ], [ %.069, %529 ], [ %528, %527 ], [ %.069, %518 ], [ %.069, %509 ], [ %.069, %508 ], [ %.069, %507 ], [ %.069, %506 ], [ %.069, %502 ], [ %.069, %501 ], [ %.069, %500 ], [ %.069, %499 ], [ %.069, %488 ], [ %.069, %478 ], [ %.069, %477 ], [ %.069, %465 ], [ %.069, %455 ], [ %.069, %454 ], [ %.069, %444 ], [ %.069, %434 ], [ %.069, %426 ], [ %.069, %424 ], [ %.069, %413 ], [ %.069, %403 ], [ %.069, %402 ], [ %.069, %401 ], [ %.069, %390 ], [ %.069, %380 ], [ %.069, %379 ], [ %.069, %378 ], [ %.069, %367 ], [ %.069, %357 ], [ %.069, %345 ], [ %.069, %343 ], [ %.069, %330 ], [ %.069, %320 ], [ %.069, %318 ], [ %.069, %314 ], [ %.069, %313 ], [ %.069, %311 ], [ %.069, %310 ], [ %.069, %309 ], [ %299, %298 ], [ %.069, %288 ], [ %.069, %277 ], [ %.069, %272 ], [ %271, %270 ], [ %.069, %265 ], [ %.069, %264 ], [ %.069, %262 ], [ %.069, %258 ], [ %.069, %255 ], [ %.069, %254 ], [ %.069, %252 ], [ %.069, %251 ], [ %.069, %234 ], [ %.069, %224 ], [ %.069, %219 ], [ %.069, %218 ], [ %.069, %216 ], [ %.069, %215 ], [ %.069, %197 ], [ %.069, %187 ], [ %.069, %185 ], [ %.069, %172 ], [ %.069, %162 ], [ %.069, %161 ], [ %.069, %160 ], [ %.069, %156 ], [ %.069, %154 ], [ %.069, %141 ], [ %.069, %131 ], [ %.069, %130 ], [ %.069, %120 ], [ %.069, %110 ], [ %.069, %108 ], [ %.069, %107 ], [ %.069, %94 ], [ %.069, %84 ], [ %.069, %79 ], [ %.069, %78 ], [ %.069, %68 ], [ %.069, %58 ], [ %.069, %56 ], [ %.069, %46 ], [ %.069, %36 ], [ %.069, %35 ], [ %.069, %23 ], [ %.069, %13 ], [ %.069, %8 ]
  %.067.be = phi i32 [ %.067, %7 ], [ %.067, %539 ], [ %.067, %536 ], [ %.067, %535 ], [ %.067, %534 ], [ %533, %532 ], [ %.067, %530 ], [ %.067, %529 ], [ %.067, %527 ], [ %.067, %518 ], [ %.067, %509 ], [ %.067, %508 ], [ %.067, %507 ], [ %.067, %506 ], [ %.067, %502 ], [ %.067, %501 ], [ %.067, %500 ], [ %.067, %499 ], [ %.067, %488 ], [ %.067, %478 ], [ %.067, %477 ], [ %.067, %465 ], [ %.067, %455 ], [ %.067, %454 ], [ %.067, %444 ], [ %.067, %434 ], [ %.067, %426 ], [ %.067, %424 ], [ %.067, %413 ], [ %.067, %403 ], [ %.067, %402 ], [ %.067, %401 ], [ %391, %390 ], [ %.067, %380 ], [ %.067, %379 ], [ %.067, %378 ], [ %.067, %367 ], [ %.067, %357 ], [ %.067, %345 ], [ %.067, %343 ], [ %.067, %330 ], [ %.067, %320 ], [ %.067, %318 ], [ %.067, %314 ], [ 0, %313 ], [ %.067, %311 ], [ %.067, %310 ], [ %.067, %309 ], [ %.067, %298 ], [ %.067, %288 ], [ %.067, %277 ], [ %.067, %272 ], [ %.067, %270 ], [ %.067, %265 ], [ %.067, %264 ], [ %.067, %262 ], [ %.067, %258 ], [ %.067, %255 ], [ %.067, %254 ], [ %.067, %252 ], [ %.067, %251 ], [ %.067, %234 ], [ %.067, %224 ], [ %.067, %219 ], [ %.067, %218 ], [ %.067, %216 ], [ %.067, %215 ], [ %.067, %197 ], [ %.067, %187 ], [ %.067, %185 ], [ %.067, %172 ], [ %.067, %162 ], [ %.067, %161 ], [ %.067, %160 ], [ %.067, %156 ], [ %.067, %154 ], [ %.067, %141 ], [ %.067, %131 ], [ %.067, %130 ], [ %.067, %120 ], [ %.067, %110 ], [ %.067, %108 ], [ %.067, %107 ], [ %.067, %94 ], [ %.067, %84 ], [ %.067, %79 ], [ %.067, %78 ], [ %.067, %68 ], [ %.067, %58 ], [ %.067, %56 ], [ %.067, %46 ], [ %.067, %36 ], [ %.067, %35 ], [ %.067, %23 ], [ %.067, %13 ], [ %.067, %8 ]
  %.065.be = phi i32 [ %.065, %7 ], [ %.065, %539 ], [ %.065, %536 ], [ %.065, %535 ], [ %.065, %534 ], [ %.065, %532 ], [ %531, %530 ], [ %.065, %529 ], [ %.065, %527 ], [ %.065, %518 ], [ %.065, %509 ], [ %.065, %508 ], [ %.065, %507 ], [ %.065, %506 ], [ %.065, %502 ], [ %.065, %501 ], [ %.065, %500 ], [ %.065, %499 ], [ %.065, %488 ], [ %.065, %478 ], [ %.065, %477 ], [ %.065, %465 ], [ %.065, %455 ], [ %.065, %454 ], [ %.065, %444 ], [ %.065, %434 ], [ %.065, %426 ], [ %.065, %424 ], [ %.065, %413 ], [ %.065, %403 ], [ %.065, %402 ], [ %.065, %401 ], [ %.065, %390 ], [ %.065, %380 ], [ %.065, %379 ], [ %.065, %378 ], [ %368, %367 ], [ %.065, %357 ], [ %.065, %345 ], [ %.065, %343 ], [ %.065, %330 ], [ %.065, %320 ], [ %319, %318 ], [ %.065, %314 ], [ %.065, %313 ], [ %.065, %311 ], [ %.065, %310 ], [ %.065, %309 ], [ %.065, %298 ], [ %.065, %288 ], [ %.065, %277 ], [ %.065, %272 ], [ %.065, %270 ], [ %.065, %265 ], [ %.065, %264 ], [ %.065, %262 ], [ %.065, %258 ], [ %.065, %255 ], [ %.065, %254 ], [ %.065, %252 ], [ %.065, %251 ], [ %.065, %234 ], [ %.065, %224 ], [ %.065, %219 ], [ %.065, %218 ], [ %.065, %216 ], [ %.065, %215 ], [ %.065, %197 ], [ %.065, %187 ], [ %.065, %185 ], [ %.065, %172 ], [ %.065, %162 ], [ %.065, %161 ], [ %.065, %160 ], [ %.065, %156 ], [ %.065, %154 ], [ %.065, %141 ], [ %.065, %131 ], [ %.065, %130 ], [ %.065, %120 ], [ %.065, %110 ], [ %.065, %108 ], [ %.065, %107 ], [ %.065, %94 ], [ %.065, %84 ], [ %.065, %79 ], [ %.065, %78 ], [ %.065, %68 ], [ %.065, %58 ], [ %.065, %56 ], [ %.065, %46 ], [ %.065, %36 ], [ %.065, %35 ], [ %.065, %23 ], [ %.065, %13 ], [ %.065, %8 ]
  %.063.be = phi i32 [ %.063, %7 ], [ %.063, %539 ], [ %.063, %536 ], [ %.063, %535 ], [ %.063, %534 ], [ %.063, %532 ], [ %.063, %530 ], [ %.063, %529 ], [ %.063, %527 ], [ %.063, %518 ], [ %.063, %509 ], [ %.063, %508 ], [ %.063, %507 ], [ %.063, %506 ], [ %.063, %502 ], [ %.063, %501 ], [ %.063, %500 ], [ %.063, %499 ], [ %.063, %488 ], [ %.063, %478 ], [ %.063, %477 ], [ %.063, %465 ], [ %.063, %455 ], [ %.063, %454 ], [ %.063, %444 ], [ %.063, %434 ], [ %433, %426 ], [ %.063, %424 ], [ %.063, %413 ], [ %.063, %403 ], [ 0, %402 ], [ %.063, %401 ], [ %.063, %390 ], [ %.063, %380 ], [ %.063, %379 ], [ %.063, %378 ], [ %.063, %367 ], [ %.063, %357 ], [ %.063, %345 ], [ %.063, %343 ], [ %.063, %330 ], [ %.063, %320 ], [ %.063, %318 ], [ %.063, %314 ], [ %.063, %313 ], [ %.063, %311 ], [ %.063, %310 ], [ %.063, %309 ], [ %.063, %298 ], [ %.063, %288 ], [ %.063, %277 ], [ %.063, %272 ], [ %.063, %270 ], [ %.063, %265 ], [ %.063, %264 ], [ %.063, %262 ], [ %.063, %258 ], [ %.063, %255 ], [ %.063, %254 ], [ %.063, %252 ], [ %.063, %251 ], [ %.063, %234 ], [ %.063, %224 ], [ %.063, %219 ], [ %.063, %218 ], [ %.063, %216 ], [ %.063, %215 ], [ %.063, %197 ], [ %.063, %187 ], [ %.063, %185 ], [ %.063, %172 ], [ %.063, %162 ], [ %.063, %161 ], [ %.063, %160 ], [ %.063, %156 ], [ %.063, %154 ], [ %.063, %141 ], [ %.063, %131 ], [ %.063, %130 ], [ %.063, %120 ], [ %.063, %110 ], [ %.063, %108 ], [ %.063, %107 ], [ %.063, %94 ], [ %.063, %84 ], [ %.063, %79 ], [ %.063, %78 ], [ %.063, %68 ], [ %.063, %58 ], [ %.063, %56 ], [ %.063, %46 ], [ %.063, %36 ], [ %.063, %35 ], [ %.063, %23 ], [ %.063, %13 ], [ %.063, %8 ]
  %.061.be = phi i32 [ %.061, %7 ], [ %.061, %539 ], [ %.061, %536 ], [ %.neg, %535 ], [ %.061, %534 ], [ %.061, %532 ], [ %.061, %530 ], [ %.061, %529 ], [ %.061, %527 ], [ %.061, %518 ], [ %.061, %509 ], [ %.061, %508 ], [ %.061, %507 ], [ %.061, %506 ], [ %.061, %502 ], [ %.061, %501 ], [ %.061, %500 ], [ %.061, %499 ], [ %.061, %488 ], [ %.061, %478 ], [ %.061, %477 ], [ %.061, %465 ], [ %.061, %455 ], [ %.061, %454 ], [ %.neg83, %444 ], [ %.061, %434 ], [ %.061, %426 ], [ %.061, %424 ], [ %.061, %413 ], [ %.061, %403 ], [ 1, %402 ], [ %.061, %401 ], [ %.061, %390 ], [ %.061, %380 ], [ %.061, %379 ], [ %.061, %378 ], [ %.061, %367 ], [ %.061, %357 ], [ %.061, %345 ], [ %.061, %343 ], [ %.061, %330 ], [ %.061, %320 ], [ %.061, %318 ], [ %.061, %314 ], [ %.061, %313 ], [ %.061, %311 ], [ %.061, %310 ], [ %.061, %309 ], [ %.061, %298 ], [ %.061, %288 ], [ %.061, %277 ], [ %.061, %272 ], [ %.061, %270 ], [ %.061, %265 ], [ %.061, %264 ], [ %.061, %262 ], [ %.061, %258 ], [ %.061, %255 ], [ %.061, %254 ], [ %.061, %252 ], [ %.061, %251 ], [ %.061, %234 ], [ %.061, %224 ], [ %.061, %219 ], [ %.061, %218 ], [ %.061, %216 ], [ %.061, %215 ], [ %.061, %197 ], [ %.061, %187 ], [ %.061, %185 ], [ %.061, %172 ], [ %.061, %162 ], [ %.061, %161 ], [ %.061, %160 ], [ %.061, %156 ], [ %.061, %154 ], [ %.061, %141 ], [ %.061, %131 ], [ %.061, %130 ], [ %.061, %120 ], [ %.061, %110 ], [ %.061, %108 ], [ %.061, %107 ], [ %.061, %94 ], [ %.061, %84 ], [ %.061, %79 ], [ %.061, %78 ], [ %.061, %68 ], [ %.061, %58 ], [ %.061, %56 ], [ %.061, %46 ], [ %.061, %36 ], [ %.061, %35 ], [ %.061, %23 ], [ %.061, %13 ], [ %.061, %8 ]
  %.059.be = phi i32 [ %.059, %7 ], [ 1855060594, %539 ], [ 1798833679, %536 ], [ -1147151008, %535 ], [ 442446270, %534 ], [ -996901712, %532 ], [ 1078773220, %530 ], [ 730349909, %529 ], [ -2070825219, %527 ], [ -1731451130, %518 ], [ 1049056474, %509 ], [ -1673928125, %508 ], [ -777451607, %507 ], [ 1888176024, %506 ], [ -1586516349, %502 ], [ -1054575896, %501 ], [ 849077641, %500 ], [ 1165631357, %499 ], [ %497, %488 ], [ %487, %478 ], [ -1538730235, %477 ], [ %476, %465 ], [ %464, %455 ], [ 1593022573, %454 ], [ %453, %444 ], [ %443, %434 ], [ 1653756511, %426 ], [ %425, %424 ], [ %423, %413 ], [ %412, %403 ], [ 1593022573, %402 ], [ 394333161, %401 ], [ %400, %390 ], [ %389, %380 ], [ 1213583137, %379 ], [ 257977270, %378 ], [ %377, %367 ], [ %366, %357 ], [ 1711994100, %345 ], [ %344, %343 ], [ %342, %330 ], [ %329, %320 ], [ 257977270, %318 ], [ %317, %314 ], [ 394333161, %313 ], [ -875105798, %311 ], [ -634740878, %310 ], [ -1756331757, %309 ], [ %308, %298 ], [ %297, %288 ], [ 279521339, %277 ], [ %276, %272 ], [ -1756331757, %270 ], [ %269, %265 ], [ -875105798, %264 ], [ -517169029, %262 ], [ 1711963809, %258 ], [ %257, %255 ], [ -517169029, %254 ], [ -1517216003, %252 ], [ -358155847, %251 ], [ %250, %234 ], [ %233, %224 ], [ %223, %219 ], [ -1517216003, %218 ], [ -60360968, %216 ], [ 462241513, %215 ], [ %214, %197 ], [ %196, %187 ], [ %186, %185 ], [ %184, %172 ], [ %171, %162 ], [ -60360968, %161 ], [ 555126078, %160 ], [ -501601748, %156 ], [ %155, %154 ], [ %153, %141 ], [ %140, %131 ], [ 555126078, %130 ], [ %129, %120 ], [ %119, %110 ], [ 1710668228, %108 ], [ 1048026306, %107 ], [ %106, %94 ], [ %93, %84 ], [ %83, %79 ], [ 1710668228, %78 ], [ %77, %68 ], [ %67, %58 ], [ %57, %56 ], [ %55, %46 ], [ %45, %36 ], [ -1629807130, %35 ], [ %34, %23 ], [ %22, %13 ], [ %12, %8 ]
  %.0.be = phi i1 [ %.0, %7 ], [ %.0, %539 ], [ %.0, %536 ], [ %.0, %535 ], [ %.0, %534 ], [ %.0, %532 ], [ %.0, %530 ], [ %.0, %529 ], [ %.0, %527 ], [ %.0, %518 ], [ %.0, %509 ], [ %.0, %508 ], [ %.0, %507 ], [ %.0, %506 ], [ %.0, %502 ], [ %.0, %501 ], [ %.0, %500 ], [ %.0, %499 ], [ %.0, %488 ], [ %.0, %478 ], [ %.0, %477 ], [ %.0, %465 ], [ %.0, %455 ], [ %.0, %454 ], [ %.0, %444 ], [ %.0, %434 ], [ %.0, %426 ], [ %.0, %424 ], [ %.0, %413 ], [ %.0, %403 ], [ %.0, %402 ], [ %.0, %401 ], [ %.0, %390 ], [ %.0, %380 ], [ %.0, %379 ], [ %.0, %378 ], [ %.0, %367 ], [ %.0, %357 ], [ %.0, %345 ], [ %.0, %343 ], [ %.0, %330 ], [ %.0, %320 ], [ %.0, %318 ], [ %.0, %314 ], [ %.0, %313 ], [ %.0, %311 ], [ %.0, %310 ], [ %.0, %309 ], [ %.0, %298 ], [ %.0, %288 ], [ %.0, %277 ], [ %.0, %272 ], [ %.0, %270 ], [ %.0, %265 ], [ %.0, %264 ], [ %.0, %262 ], [ %.0, %258 ], [ %.0, %255 ], [ %.0, %254 ], [ %.0, %252 ], [ %.0, %251 ], [ %.0, %234 ], [ %.0, %224 ], [ %.0, %219 ], [ %.0, %218 ], [ %.0, %216 ], [ %.0, %215 ], [ %.0, %197 ], [ %.0, %187 ], [ %.0, %185 ], [ %.0, %172 ], [ %.0, %162 ], [ %.0, %161 ], [ %.0, %160 ], [ %.0, %156 ], [ %.0, %154 ], [ %.0, %141 ], [ %.0, %131 ], [ %.0, %130 ], [ %.0, %120 ], [ %.0, %110 ], [ %.0, %108 ], [ %.0, %107 ], [ %.0, %94 ], [ %.0, %84 ], [ %.0, %79 ], [ %.0, %78 ], [ %.0, %68 ], [ %.0, %58 ], [ %.0, %56 ], [ %.0, %46 ], [ %.0, %36 ], [ %.0..0..0.53, %35 ], [ %.0, %23 ], [ %.0, %13 ], [ false, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @N)
  %10 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %9, i32* nonnull dereferenceable(4) @M)
  %11 = load i32, i32* @N, align 4
  %.not = icmp eq i32 %11, 0
  %12 = select i1 %.not, i32 -1629807130, i32 -749195925
  br label %.backedge

13:                                               ; preds = %7
  %14 = load i32, i32* @x.1, align 4
  %15 = load i32, i32* @y.2, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 1165631357, i32 291962559
  br label %.backedge

23:                                               ; preds = %7
  %24 = load i32, i32* @M, align 4
  %25 = icmp ne i32 %24, 0
  store i1 %25, i1* %6, align 1
  %26 = load i32, i32* @x.1, align 4
  %27 = load i32, i32* @y.2, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 1861616816, i32 291962559
  br label %.backedge

35:                                               ; preds = %7
  %.0..0..0.53 = load volatile i1, i1* %6, align 1
  br label %.backedge

36:                                               ; preds = %7
  store i1 %.0, i1* %1, align 1
  %37 = load i32, i32* @x.1, align 4
  %38 = load i32, i32* @y.2, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 849077641, i32 1632759315
  br label %.backedge

46:                                               ; preds = %7
  %47 = load i32, i32* @x.1, align 4
  %48 = load i32, i32* @y.2, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 -739025750, i32 1632759315
  br label %.backedge

56:                                               ; preds = %7
  %.0..0..0.58 = load volatile i1, i1* %1, align 1
  %57 = select i1 %.0..0..0.58, i32 728941385, i32 -28656951
  br label %.backedge

58:                                               ; preds = %7
  %59 = load i32, i32* @x.1, align 4
  %60 = load i32, i32* @y.2, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -1054575896, i32 -1225878
  br label %.backedge

68:                                               ; preds = %7
  store i32 0, i32* getelementptr inbounds ([2000 x i32], [2000 x i32]* @W, i64 0, i64 0), align 16
  store i32 0, i32* getelementptr inbounds ([2000 x i32], [2000 x i32]* @H, i64 0, i64 0), align 16
  %69 = load i32, i32* @x.1, align 4
  %70 = load i32, i32* @y.2, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 -1712552582, i32 -1225878
  br label %.backedge

78:                                               ; preds = %7
  br label %.backedge

79:                                               ; preds = %7
  %80 = load i32, i32* @N, align 4
  %81 = add i32 %80, 1
  %82 = icmp slt i32 %.081, %81
  %83 = select i1 %82, i32 -995729051, i32 1323346112
  br label %.backedge

84:                                               ; preds = %7
  %85 = load i32, i32* @x.1, align 4
  %86 = load i32, i32* @y.2, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 -1586516349, i32 1218302850
  br label %.backedge

94:                                               ; preds = %7
  %95 = sext i32 %.081 to i64
  %96 = getelementptr inbounds [2000 x i32], [2000 x i32]* @H, i64 0, i64 %95
  %97 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %96)
  %98 = load i32, i32* @x.1, align 4
  %99 = load i32, i32* @y.2, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 2029514144, i32 1218302850
  br label %.backedge

107:                                              ; preds = %7
  br label %.backedge

108:                                              ; preds = %7
  %109 = add i32 %.081, 1
  br label %.backedge

110:                                              ; preds = %7
  %111 = load i32, i32* @x.1, align 4
  %112 = load i32, i32* @y.2, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 1888176024, i32 1989198957
  br label %.backedge

120:                                              ; preds = %7
  %121 = load i32, i32* @x.1, align 4
  %122 = load i32, i32* @y.2, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 -1251096394, i32 1989198957
  br label %.backedge

130:                                              ; preds = %7
  br label %.backedge

131:                                              ; preds = %7
  %132 = load i32, i32* @x.1, align 4
  %133 = load i32, i32* @y.2, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 -777451607, i32 -1705059397
  br label %.backedge

141:                                              ; preds = %7
  %142 = load i32, i32* @M, align 4
  %143 = add i32 %142, 1
  %144 = icmp slt i32 %.079, %143
  store i1 %144, i1* %5, align 1
  %145 = load i32, i32* @x.1, align 4
  %146 = load i32, i32* @y.2, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 2003023169, i32 -1705059397
  br label %.backedge

154:                                              ; preds = %7
  %.0..0..0.54 = load volatile i1, i1* %5, align 1
  %155 = select i1 %.0..0..0.54, i32 1536775180, i32 1628113996
  br label %.backedge

156:                                              ; preds = %7
  %157 = sext i32 %.079 to i64
  %158 = getelementptr inbounds [2000 x i32], [2000 x i32]* @W, i64 0, i64 %157
  %159 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %158)
  br label %.backedge

160:                                              ; preds = %7
  %.neg87 = add i32 %.079, 1
  br label %.backedge

161:                                              ; preds = %7
  br label %.backedge

162:                                              ; preds = %7
  %163 = load i32, i32* @x.1, align 4
  %164 = load i32, i32* @y.2, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -1673928125, i32 -1203776777
  br label %.backedge

172:                                              ; preds = %7
  %173 = load i32, i32* @N, align 4
  %174 = add i32 %173, 1
  %175 = icmp slt i32 %.077, %174
  store i1 %175, i1* %4, align 1
  %176 = load i32, i32* @x.1, align 4
  %177 = load i32, i32* @y.2, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 2375570, i32 -1203776777
  br label %.backedge

185:                                              ; preds = %7
  %.0..0..0.55 = load volatile i1, i1* %4, align 1
  %186 = select i1 %.0..0..0.55, i32 -1162259865, i32 1668205718
  br label %.backedge

187:                                              ; preds = %7
  %188 = load i32, i32* @x.1, align 4
  %189 = load i32, i32* @y.2, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 1049056474, i32 342850663
  br label %.backedge

197:                                              ; preds = %7
  %198 = sext i32 %.077 to i64
  %199 = getelementptr inbounds [2000 x i32], [2000 x i32]* @H, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = add i32 %.077, 1
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [2000 x i32], [2000 x i32]* @H, i64 0, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = add i32 %204, %200
  store i32 %205, i32* %203, align 4
  %206 = load i32, i32* @x.1, align 4
  %207 = load i32, i32* @y.2, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 -1300010930, i32 342850663
  br label %.backedge

215:                                              ; preds = %7
  br label %.backedge

216:                                              ; preds = %7
  %217 = add i32 %.077, 1
  br label %.backedge

218:                                              ; preds = %7
  br label %.backedge

219:                                              ; preds = %7
  %220 = load i32, i32* @M, align 4
  %221 = add i32 %220, 1
  %222 = icmp slt i32 %.075, %221
  %223 = select i1 %222, i32 -163522756, i32 -1436933916
  br label %.backedge

224:                                              ; preds = %7
  %225 = load i32, i32* @x.1, align 4
  %226 = load i32, i32* @y.2, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 -1731451130, i32 982246424
  br label %.backedge

234:                                              ; preds = %7
  %235 = sext i32 %.075 to i64
  %236 = getelementptr inbounds [2000 x i32], [2000 x i32]* @W, i64 0, i64 %235
  %237 = load i32, i32* %236, align 4
  %.neg86 = add i32 %.075, 1
  %238 = sext i32 %.neg86 to i64
  %239 = getelementptr inbounds [2000 x i32], [2000 x i32]* @W, i64 0, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = add i32 %240, %237
  store i32 %241, i32* %239, align 4
  %242 = load i32, i32* @x.1, align 4
  %243 = load i32, i32* @y.2, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 663432735, i32 982246424
  br label %.backedge

251:                                              ; preds = %7
  br label %.backedge

252:                                              ; preds = %7
  %253 = add i32 %.075, 1
  br label %.backedge

254:                                              ; preds = %7
  br label %.backedge

255:                                              ; preds = %7
  %256 = icmp slt i32 %.073, 2000000
  %257 = select i1 %256, i32 250393256, i32 -32188578
  br label %.backedge

258:                                              ; preds = %7
  %259 = sext i32 %.073 to i64
  %260 = getelementptr inbounds [2000000 x i32], [2000000 x i32]* @w, i64 0, i64 %259
  store i32 0, i32* %260, align 4
  %261 = getelementptr inbounds [2000000 x i32], [2000000 x i32]* @h, i64 0, i64 %259
  store i32 0, i32* %261, align 4
  br label %.backedge

262:                                              ; preds = %7
  %263 = add i32 %.073, 1
  br label %.backedge

264:                                              ; preds = %7
  br label %.backedge

265:                                              ; preds = %7
  %266 = load i32, i32* @N, align 4
  %267 = add i32 %266, 1
  %268 = icmp slt i32 %.071, %267
  %269 = select i1 %268, i32 1527240357, i32 -1057252312
  br label %.backedge

270:                                              ; preds = %7
  %271 = add i32 %.071, 1
  br label %.backedge

272:                                              ; preds = %7
  %273 = load i32, i32* @N, align 4
  %274 = add i32 %273, 1
  %275 = icmp slt i32 %.069, %274
  %276 = select i1 %275, i32 -2009530781, i32 -2116576823
  br label %.backedge

277:                                              ; preds = %7
  %278 = sext i32 %.069 to i64
  %279 = getelementptr inbounds [2000 x i32], [2000 x i32]* @H, i64 0, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = sext i32 %.071 to i64
  %282 = getelementptr inbounds [2000 x i32], [2000 x i32]* @H, i64 0, i64 %281
  %283 = load i32, i32* %282, align 4
  %284 = sub i32 %280, %283
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [2000000 x i32], [2000000 x i32]* @h, i64 0, i64 %285
  %287 = load i32, i32* %286, align 4
  %.neg85 = add i32 %287, 1
  store i32 %.neg85, i32* %286, align 4
  br label %.backedge

288:                                              ; preds = %7
  %289 = load i32, i32* @x.1, align 4
  %290 = load i32, i32* @y.2, align 4
  %291 = add i32 %289, -1
  %292 = mul i32 %291, %289
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %295, %294
  %297 = select i1 %296, i32 -2070825219, i32 1774247330
  br label %.backedge

298:                                              ; preds = %7
  %299 = add i32 %.069, 1
  %300 = load i32, i32* @x.1, align 4
  %301 = load i32, i32* @y.2, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 383680139, i32 1774247330
  br label %.backedge

309:                                              ; preds = %7
  br label %.backedge

310:                                              ; preds = %7
  br label %.backedge

311:                                              ; preds = %7
  %312 = add i32 %.071, 1
  br label %.backedge

313:                                              ; preds = %7
  br label %.backedge

314:                                              ; preds = %7
  %315 = load i32, i32* @M, align 4
  %.neg84 = add i32 %315, 1
  %316 = icmp slt i32 %.067, %.neg84
  %317 = select i1 %316, i32 -1180618267, i32 -113192606
  br label %.backedge

318:                                              ; preds = %7
  %319 = add i32 %.067, 1
  br label %.backedge

320:                                              ; preds = %7
  %321 = load i32, i32* @x.1, align 4
  %322 = load i32, i32* @y.2, align 4
  %323 = add i32 %321, -1
  %324 = mul i32 %323, %321
  %325 = and i32 %324, 1
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %327, %326
  %329 = select i1 %328, i32 730349909, i32 -455439163
  br label %.backedge

330:                                              ; preds = %7
  %331 = load i32, i32* @M, align 4
  %332 = add i32 %331, 1
  %333 = icmp slt i32 %.065, %332
  store i1 %333, i1* %3, align 1
  %334 = load i32, i32* @x.1, align 4
  %335 = load i32, i32* @y.2, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 224831881, i32 -455439163
  br label %.backedge

343:                                              ; preds = %7
  %.0..0..0.56 = load volatile i1, i1* %3, align 1
  %344 = select i1 %.0..0..0.56, i32 -1567072681, i32 -1760005251
  br label %.backedge

345:                                              ; preds = %7
  %346 = sext i32 %.065 to i64
  %347 = getelementptr inbounds [2000 x i32], [2000 x i32]* @W, i64 0, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = sext i32 %.067 to i64
  %350 = getelementptr inbounds [2000 x i32], [2000 x i32]* @W, i64 0, i64 %349
  %351 = load i32, i32* %350, align 4
  %352 = sub i32 %348, %351
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds [2000000 x i32], [2000000 x i32]* @w, i64 0, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = add i32 %355, 1
  store i32 %356, i32* %354, align 4
  br label %.backedge

357:                                              ; preds = %7
  %358 = load i32, i32* @x.1, align 4
  %359 = load i32, i32* @y.2, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 1078773220, i32 8208970
  br label %.backedge

367:                                              ; preds = %7
  %368 = add i32 %.065, 1
  %369 = load i32, i32* @x.1, align 4
  %370 = load i32, i32* @y.2, align 4
  %371 = add i32 %369, -1
  %372 = mul i32 %371, %369
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %375, %374
  %377 = select i1 %376, i32 -648253504, i32 8208970
  br label %.backedge

378:                                              ; preds = %7
  br label %.backedge

379:                                              ; preds = %7
  br label %.backedge

380:                                              ; preds = %7
  %381 = load i32, i32* @x.1, align 4
  %382 = load i32, i32* @y.2, align 4
  %383 = add i32 %381, -1
  %384 = mul i32 %383, %381
  %385 = and i32 %384, 1
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %387, %386
  %389 = select i1 %388, i32 -996901712, i32 -251510595
  br label %.backedge

390:                                              ; preds = %7
  %391 = add i32 %.067, 1
  %392 = load i32, i32* @x.1, align 4
  %393 = load i32, i32* @y.2, align 4
  %394 = add i32 %392, -1
  %395 = mul i32 %394, %392
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %398, %397
  %400 = select i1 %399, i32 -2103766518, i32 -251510595
  br label %.backedge

401:                                              ; preds = %7
  br label %.backedge

402:                                              ; preds = %7
  br label %.backedge

403:                                              ; preds = %7
  %404 = load i32, i32* @x.1, align 4
  %405 = load i32, i32* @y.2, align 4
  %406 = add i32 %404, -1
  %407 = mul i32 %406, %404
  %408 = and i32 %407, 1
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %410, %409
  %412 = select i1 %411, i32 442446270, i32 252767799
  br label %.backedge

413:                                              ; preds = %7
  %414 = icmp slt i32 %.061, 2000000
  store i1 %414, i1* %2, align 1
  %415 = load i32, i32* @x.1, align 4
  %416 = load i32, i32* @y.2, align 4
  %417 = add i32 %415, -1
  %418 = mul i32 %417, %415
  %419 = and i32 %418, 1
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %421, %420
  %423 = select i1 %422, i32 1169871803, i32 252767799
  br label %.backedge

424:                                              ; preds = %7
  %.0..0..0.57 = load volatile i1, i1* %2, align 1
  %425 = select i1 %.0..0..0.57, i32 -1788855546, i32 1565673377
  br label %.backedge

426:                                              ; preds = %7
  %427 = sext i32 %.061 to i64
  %428 = getelementptr inbounds [2000000 x i32], [2000000 x i32]* @h, i64 0, i64 %427
  %429 = load i32, i32* %428, align 4
  %430 = getelementptr inbounds [2000000 x i32], [2000000 x i32]* @w, i64 0, i64 %427
  %431 = load i32, i32* %430, align 4
  %432 = mul nsw i32 %431, %429
  %433 = add i32 %432, %.063
  br label %.backedge

434:                                              ; preds = %7
  %435 = load i32, i32* @x.1, align 4
  %436 = load i32, i32* @y.2, align 4
  %437 = add i32 %435, -1
  %438 = mul i32 %437, %435
  %439 = and i32 %438, 1
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %441, %440
  %443 = select i1 %442, i32 -1147151008, i32 -1277916146
  br label %.backedge

444:                                              ; preds = %7
  %.neg83 = add i32 %.061, 1
  %445 = load i32, i32* @x.1, align 4
  %446 = load i32, i32* @y.2, align 4
  %447 = add i32 %445, -1
  %448 = mul i32 %447, %445
  %449 = and i32 %448, 1
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %451, %450
  %453 = select i1 %452, i32 762107479, i32 -1277916146
  br label %.backedge

454:                                              ; preds = %7
  br label %.backedge

455:                                              ; preds = %7
  %456 = load i32, i32* @x.1, align 4
  %457 = load i32, i32* @y.2, align 4
  %458 = add i32 %456, -1
  %459 = mul i32 %458, %456
  %460 = and i32 %459, 1
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %462, %461
  %464 = select i1 %463, i32 1798833679, i32 -1615824746
  br label %.backedge

465:                                              ; preds = %7
  %466 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.063)
  %467 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %466, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %468 = load i32, i32* @x.1, align 4
  %469 = load i32, i32* @y.2, align 4
  %470 = add i32 %468, -1
  %471 = mul i32 %470, %468
  %472 = and i32 %471, 1
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %474, %473
  %476 = select i1 %475, i32 1845416468, i32 -1615824746
  br label %.backedge

477:                                              ; preds = %7
  br label %.backedge

478:                                              ; preds = %7
  %479 = load i32, i32* @x.1, align 4
  %480 = load i32, i32* @y.2, align 4
  %481 = add i32 %479, -1
  %482 = mul i32 %481, %479
  %483 = and i32 %482, 1
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %480, 10
  %486 = or i1 %485, %484
  %487 = select i1 %486, i32 1855060594, i32 -2135904900
  br label %.backedge

488:                                              ; preds = %7
  %489 = load i32, i32* @x.1, align 4
  %490 = load i32, i32* @y.2, align 4
  %491 = add i32 %489, -1
  %492 = mul i32 %491, %489
  %493 = and i32 %492, 1
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %495, %494
  %497 = select i1 %496, i32 1393748853, i32 -2135904900
  br label %.backedge

498:                                              ; preds = %7
  ret i32 0

499:                                              ; preds = %7
  br label %.backedge

500:                                              ; preds = %7
  br label %.backedge

501:                                              ; preds = %7
  store i32 0, i32* getelementptr inbounds ([2000 x i32], [2000 x i32]* @W, i64 0, i64 0), align 16
  store i32 0, i32* getelementptr inbounds ([2000 x i32], [2000 x i32]* @H, i64 0, i64 0), align 16
  br label %.backedge

502:                                              ; preds = %7
  %503 = sext i32 %.081 to i64
  %504 = getelementptr inbounds [2000 x i32], [2000 x i32]* @H, i64 0, i64 %503
  %505 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %504)
  br label %.backedge

506:                                              ; preds = %7
  br label %.backedge

507:                                              ; preds = %7
  br label %.backedge

508:                                              ; preds = %7
  br label %.backedge

509:                                              ; preds = %7
  %510 = sext i32 %.077 to i64
  %511 = getelementptr inbounds [2000 x i32], [2000 x i32]* @H, i64 0, i64 %510
  %512 = load i32, i32* %511, align 4
  %513 = add i32 %.077, 1
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds [2000 x i32], [2000 x i32]* @H, i64 0, i64 %514
  %516 = load i32, i32* %515, align 4
  %517 = add i32 %516, %512
  store i32 %517, i32* %515, align 4
  br label %.backedge

518:                                              ; preds = %7
  %519 = sext i32 %.075 to i64
  %520 = getelementptr inbounds [2000 x i32], [2000 x i32]* @W, i64 0, i64 %519
  %521 = load i32, i32* %520, align 4
  %522 = add i32 %.075, 1
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds [2000 x i32], [2000 x i32]* @W, i64 0, i64 %523
  %525 = load i32, i32* %524, align 4
  %526 = add i32 %525, %521
  store i32 %526, i32* %524, align 4
  br label %.backedge

527:                                              ; preds = %7
  %528 = add i32 %.069, 1
  br label %.backedge

529:                                              ; preds = %7
  br label %.backedge

530:                                              ; preds = %7
  %531 = add i32 %.065, 1
  br label %.backedge

532:                                              ; preds = %7
  %533 = add i32 %.067, 1
  br label %.backedge

534:                                              ; preds = %7
  br label %.backedge

535:                                              ; preds = %7
  %.neg = add i32 %.061, 1
  br label %.backedge

536:                                              ; preds = %7
  %537 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.063)
  %538 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %537, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

539:                                              ; preds = %7
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s826553082.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
