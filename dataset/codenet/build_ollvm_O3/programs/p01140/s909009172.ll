; ModuleID = 'build_ollvm/programs/p01140/s909009172.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s909009172.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@N = global i32 0, align 4
@M = global i32 0, align 4
@H = global [1500 x i32] zeroinitializer, align 16
@W = global [1500 x i32] zeroinitializer, align 16
@dp = local_unnamed_addr global [2 x [1500001 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  br label %4

4:                                                ; preds = %.backedge, %0
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.0 = phi i32 [ 826683470, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 826683470, label %5
    i32 -1434566914, label %11
    i32 -1227842845, label %15
    i32 1079630643, label %16
    i32 2130466245, label %26
    i32 -898337560, label %36
    i32 -251416723, label %37
    i32 578832815, label %41
    i32 2010473510, label %45
    i32 1955110412, label %47
    i32 -1208772207, label %48
    i32 961668203, label %52
    i32 -1808594947, label %62
    i32 157704534, label %75
    i32 434245471, label %76
    i32 1026563237, label %86
    i32 596237592, label %97
    i32 -870177747, label %98
    i32 154904129, label %99
    i32 2084832942, label %102
    i32 -1038687232, label %112
    i32 1565567976, label %122
    i32 448151078, label %123
    i32 -1718719531, label %127
    i32 -89791007, label %137
    i32 2075342090, label %155
    i32 271363186, label %156
    i32 -1864905080, label %158
    i32 -993765588, label %168
    i32 -1485796547, label %178
    i32 -1809324454, label %179
    i32 940531694, label %189
    i32 -1854251183, label %199
    i32 1635420832, label %200
    i32 -401358414, label %201
    i32 1932784050, label %211
    i32 -980286352, label %223
    i32 -532116232, label %225
    i32 922551532, label %226
    i32 -1614656264, label %236
    i32 -1436423625, label %248
    i32 79976210, label %250
    i32 171926145, label %259
    i32 -1805147790, label %260
    i32 -2063895526, label %261
    i32 -1255954172, label %263
    i32 -381035825, label %264
    i32 -1681398031, label %274
    i32 -918050353, label %285
    i32 1705488280, label %287
    i32 -999246195, label %297
    i32 1002892325, label %314
    i32 1503836934, label %315
    i32 -44875500, label %317
    i32 -340118269, label %319
    i32 61470110, label %320
    i32 1096907387, label %321
    i32 -346895994, label %325
    i32 203219466, label %327
    i32 -1467722934, label %328
    i32 266594780, label %336
    i32 -1815946637, label %337
    i32 -1673180844, label %338
    i32 1414317364, label %339
    i32 -885493277, label %340
    i32 -305318960, label %341
  ]

.backedge:                                        ; preds = %4, %341, %340, %339, %338, %337, %336, %328, %327, %325, %321, %320, %317, %315, %314, %297, %287, %285, %274, %264, %263, %261, %260, %259, %250, %248, %236, %226, %225, %223, %211, %201, %200, %199, %189, %179, %178, %168, %158, %156, %155, %137, %127, %123, %122, %112, %102, %99, %98, %97, %86, %76, %75, %62, %52, %48, %47, %45, %41, %37, %36, %26, %16, %15, %11, %5
  %.066.be = phi i32 [ %.066, %4 ], [ %.066, %341 ], [ %.066, %340 ], [ %.066, %339 ], [ %.066, %338 ], [ %.066, %337 ], [ %.066, %336 ], [ %.066, %328 ], [ %.066, %327 ], [ %.066, %325 ], [ %.066, %321 ], [ 0, %320 ], [ %.066, %317 ], [ %.066, %315 ], [ %.066, %314 ], [ %.066, %297 ], [ %.066, %287 ], [ %.066, %285 ], [ %.066, %274 ], [ %.066, %264 ], [ %.066, %263 ], [ %.066, %261 ], [ %.066, %260 ], [ %.066, %259 ], [ %.066, %250 ], [ %.066, %248 ], [ %.066, %236 ], [ %.066, %226 ], [ %.066, %225 ], [ %.066, %223 ], [ %.066, %211 ], [ %.066, %201 ], [ %.066, %200 ], [ %.066, %199 ], [ %.066, %189 ], [ %.066, %179 ], [ %.066, %178 ], [ %.066, %168 ], [ %.066, %158 ], [ %.066, %156 ], [ %.066, %155 ], [ %.066, %137 ], [ %.066, %127 ], [ %.066, %123 ], [ %.066, %122 ], [ %.066, %112 ], [ %.066, %102 ], [ %.066, %99 ], [ %.066, %98 ], [ %.066, %97 ], [ %.066, %86 ], [ %.066, %76 ], [ %.066, %75 ], [ %.066, %62 ], [ %.066, %52 ], [ %.066, %48 ], [ %.066, %47 ], [ %46, %45 ], [ %.066, %41 ], [ %.066, %37 ], [ %.066, %36 ], [ 0, %26 ], [ %.066, %16 ], [ %.066, %15 ], [ %.066, %11 ], [ %.066, %5 ]
  %.064.be = phi i32 [ %.064, %4 ], [ %.064, %341 ], [ %.064, %340 ], [ %.064, %339 ], [ %.064, %338 ], [ %.064, %337 ], [ %.064, %336 ], [ %.064, %328 ], [ %.064, %327 ], [ %326, %325 ], [ %.064, %321 ], [ %.064, %320 ], [ %.064, %317 ], [ %.064, %315 ], [ %.064, %314 ], [ %.064, %297 ], [ %.064, %287 ], [ %.064, %285 ], [ %.064, %274 ], [ %.064, %264 ], [ %.064, %263 ], [ %.064, %261 ], [ %.064, %260 ], [ %.064, %259 ], [ %.064, %250 ], [ %.064, %248 ], [ %.064, %236 ], [ %.064, %226 ], [ %.064, %225 ], [ %.064, %223 ], [ %.064, %211 ], [ %.064, %201 ], [ %.064, %200 ], [ %.064, %199 ], [ %.064, %189 ], [ %.064, %179 ], [ %.064, %178 ], [ %.064, %168 ], [ %.064, %158 ], [ %.064, %156 ], [ %.064, %155 ], [ %.064, %137 ], [ %.064, %127 ], [ %.064, %123 ], [ %.064, %122 ], [ %.064, %112 ], [ %.064, %102 ], [ %.064, %99 ], [ %.064, %98 ], [ %.064, %97 ], [ %87, %86 ], [ %.064, %76 ], [ %.064, %75 ], [ %.064, %62 ], [ %.064, %52 ], [ %.064, %48 ], [ 0, %47 ], [ %.064, %45 ], [ %.064, %41 ], [ %.064, %37 ], [ %.064, %36 ], [ %.064, %26 ], [ %.064, %16 ], [ %.064, %15 ], [ %.064, %11 ], [ %.064, %5 ]
  %.062.be = phi i32 [ %.062, %4 ], [ %.062, %341 ], [ %.062, %340 ], [ %.062, %339 ], [ %.062, %338 ], [ %.neg, %337 ], [ %.062, %336 ], [ %.062, %328 ], [ %.062, %327 ], [ %.062, %325 ], [ %.062, %321 ], [ %.062, %320 ], [ %.062, %317 ], [ %.062, %315 ], [ %.062, %314 ], [ %.062, %297 ], [ %.062, %287 ], [ %.062, %285 ], [ %.062, %274 ], [ %.062, %264 ], [ %.062, %263 ], [ %.062, %261 ], [ %.062, %260 ], [ %.062, %259 ], [ %.062, %250 ], [ %.062, %248 ], [ %.062, %236 ], [ %.062, %226 ], [ %.062, %225 ], [ %.062, %223 ], [ %.062, %211 ], [ %.062, %201 ], [ %.062, %200 ], [ %.062, %199 ], [ %.neg70, %189 ], [ %.062, %179 ], [ %.062, %178 ], [ %.062, %168 ], [ %.062, %158 ], [ %.062, %156 ], [ %.062, %155 ], [ %.062, %137 ], [ %.062, %127 ], [ %.062, %123 ], [ %.062, %122 ], [ %.062, %112 ], [ %.062, %102 ], [ %.062, %99 ], [ 0, %98 ], [ %.062, %97 ], [ %.062, %86 ], [ %.062, %76 ], [ %.062, %75 ], [ %.062, %62 ], [ %.062, %52 ], [ %.062, %48 ], [ %.062, %47 ], [ %.062, %45 ], [ %.062, %41 ], [ %.062, %37 ], [ %.062, %36 ], [ %.062, %26 ], [ %.062, %16 ], [ %.062, %15 ], [ %.062, %11 ], [ %.062, %5 ]
  %.060.be = phi i32 [ %.060, %4 ], [ %.060, %341 ], [ %.060, %340 ], [ %.060, %339 ], [ %.060, %338 ], [ %.060, %337 ], [ %.060, %336 ], [ %332, %328 ], [ 0, %327 ], [ %.060, %325 ], [ %.060, %321 ], [ %.060, %320 ], [ %.060, %317 ], [ %.060, %315 ], [ %.060, %314 ], [ %.060, %297 ], [ %.060, %287 ], [ %.060, %285 ], [ %.060, %274 ], [ %.060, %264 ], [ %.060, %263 ], [ %.060, %261 ], [ %.060, %260 ], [ %.060, %259 ], [ %.060, %250 ], [ %.060, %248 ], [ %.060, %236 ], [ %.060, %226 ], [ %.060, %225 ], [ %.060, %223 ], [ %.060, %211 ], [ %.060, %201 ], [ %.060, %200 ], [ %.060, %199 ], [ %.060, %189 ], [ %.060, %179 ], [ %.060, %178 ], [ %.060, %168 ], [ %.060, %158 ], [ %.060, %156 ], [ %.060, %155 ], [ %141, %137 ], [ %.060, %127 ], [ %.060, %123 ], [ %.060, %122 ], [ 0, %112 ], [ %.060, %102 ], [ %.060, %99 ], [ %.060, %98 ], [ %.060, %97 ], [ %.060, %86 ], [ %.060, %76 ], [ %.060, %75 ], [ %.060, %62 ], [ %.060, %52 ], [ %.060, %48 ], [ %.060, %47 ], [ %.060, %45 ], [ %.060, %41 ], [ %.060, %37 ], [ %.060, %36 ], [ %.060, %26 ], [ %.060, %16 ], [ %.060, %15 ], [ %.060, %11 ], [ %.060, %5 ]
  %.058.be = phi i32 [ %.058, %4 ], [ %.058, %341 ], [ %.058, %340 ], [ %.058, %339 ], [ %.058, %338 ], [ %.058, %337 ], [ %.058, %336 ], [ %.058, %328 ], [ %.062, %327 ], [ %.058, %325 ], [ %.058, %321 ], [ %.058, %320 ], [ %.058, %317 ], [ %.058, %315 ], [ %.058, %314 ], [ %.058, %297 ], [ %.058, %287 ], [ %.058, %285 ], [ %.058, %274 ], [ %.058, %264 ], [ %.058, %263 ], [ %.058, %261 ], [ %.058, %260 ], [ %.058, %259 ], [ %.058, %250 ], [ %.058, %248 ], [ %.058, %236 ], [ %.058, %226 ], [ %.058, %225 ], [ %.058, %223 ], [ %.058, %211 ], [ %.058, %201 ], [ %.058, %200 ], [ %.058, %199 ], [ %.058, %189 ], [ %.058, %179 ], [ %.058, %178 ], [ %.058, %168 ], [ %.058, %158 ], [ %157, %156 ], [ %.058, %155 ], [ %.058, %137 ], [ %.058, %127 ], [ %.058, %123 ], [ %.058, %122 ], [ %.062, %112 ], [ %.058, %102 ], [ %.058, %99 ], [ %.058, %98 ], [ %.058, %97 ], [ %.058, %86 ], [ %.058, %76 ], [ %.058, %75 ], [ %.058, %62 ], [ %.058, %52 ], [ %.058, %48 ], [ %.058, %47 ], [ %.058, %45 ], [ %.058, %41 ], [ %.058, %37 ], [ %.058, %36 ], [ %.058, %26 ], [ %.058, %16 ], [ %.058, %15 ], [ %.058, %11 ], [ %.058, %5 ]
  %.056.be = phi i32 [ %.056, %4 ], [ %.056, %341 ], [ %.056, %340 ], [ %.056, %339 ], [ %.056, %338 ], [ %.056, %337 ], [ %.056, %336 ], [ %.056, %328 ], [ %.056, %327 ], [ %.056, %325 ], [ %.056, %321 ], [ %.056, %320 ], [ %.056, %317 ], [ %.056, %315 ], [ %.056, %314 ], [ %.056, %297 ], [ %.056, %287 ], [ %.056, %285 ], [ %.056, %274 ], [ %.056, %264 ], [ %.056, %263 ], [ %262, %261 ], [ %.056, %260 ], [ %.056, %259 ], [ %.056, %250 ], [ %.056, %248 ], [ %.056, %236 ], [ %.056, %226 ], [ %.056, %225 ], [ %.056, %223 ], [ %.056, %211 ], [ %.056, %201 ], [ 0, %200 ], [ %.056, %199 ], [ %.056, %189 ], [ %.056, %179 ], [ %.056, %178 ], [ %.056, %168 ], [ %.056, %158 ], [ %.056, %156 ], [ %.056, %155 ], [ %.056, %137 ], [ %.056, %127 ], [ %.056, %123 ], [ %.056, %122 ], [ %.056, %112 ], [ %.056, %102 ], [ %.056, %99 ], [ %.056, %98 ], [ %.056, %97 ], [ %.056, %86 ], [ %.056, %76 ], [ %.056, %75 ], [ %.056, %62 ], [ %.056, %52 ], [ %.056, %48 ], [ %.056, %47 ], [ %.056, %45 ], [ %.056, %41 ], [ %.056, %37 ], [ %.056, %36 ], [ %.056, %26 ], [ %.056, %16 ], [ %.056, %15 ], [ %.056, %11 ], [ %.056, %5 ]
  %.054.be = phi i32 [ %.054, %4 ], [ %.054, %341 ], [ %.054, %340 ], [ %.054, %339 ], [ %.054, %338 ], [ %.054, %337 ], [ %.054, %336 ], [ %.054, %328 ], [ %.054, %327 ], [ %.054, %325 ], [ %.054, %321 ], [ %.054, %320 ], [ %.054, %317 ], [ %.054, %315 ], [ %.054, %314 ], [ %.054, %297 ], [ %.054, %287 ], [ %.054, %285 ], [ %.054, %274 ], [ %.054, %264 ], [ %.054, %263 ], [ %.054, %261 ], [ %.054, %260 ], [ %.054, %259 ], [ %254, %250 ], [ %.054, %248 ], [ %.054, %236 ], [ %.054, %226 ], [ 0, %225 ], [ %.054, %223 ], [ %.054, %211 ], [ %.054, %201 ], [ %.054, %200 ], [ %.054, %199 ], [ %.054, %189 ], [ %.054, %179 ], [ %.054, %178 ], [ %.054, %168 ], [ %.054, %158 ], [ %.054, %156 ], [ %.054, %155 ], [ %.054, %137 ], [ %.054, %127 ], [ %.054, %123 ], [ %.054, %122 ], [ %.054, %112 ], [ %.054, %102 ], [ %.054, %99 ], [ %.054, %98 ], [ %.054, %97 ], [ %.054, %86 ], [ %.054, %76 ], [ %.054, %75 ], [ %.054, %62 ], [ %.054, %52 ], [ %.054, %48 ], [ %.054, %47 ], [ %.054, %45 ], [ %.054, %41 ], [ %.054, %37 ], [ %.054, %36 ], [ %.054, %26 ], [ %.054, %16 ], [ %.054, %15 ], [ %.054, %11 ], [ %.054, %5 ]
  %.052.be = phi i32 [ %.052, %4 ], [ %.052, %341 ], [ %.052, %340 ], [ %.052, %339 ], [ %.052, %338 ], [ %.052, %337 ], [ %.052, %336 ], [ %.052, %328 ], [ %.052, %327 ], [ %.052, %325 ], [ %.052, %321 ], [ %.052, %320 ], [ %.052, %317 ], [ %.052, %315 ], [ %.052, %314 ], [ %.052, %297 ], [ %.052, %287 ], [ %.052, %285 ], [ %.052, %274 ], [ %.052, %264 ], [ %.052, %263 ], [ %.052, %261 ], [ %.052, %260 ], [ %.neg69, %259 ], [ %.052, %250 ], [ %.052, %248 ], [ %.052, %236 ], [ %.052, %226 ], [ %.056, %225 ], [ %.052, %223 ], [ %.052, %211 ], [ %.052, %201 ], [ %.052, %200 ], [ %.052, %199 ], [ %.052, %189 ], [ %.052, %179 ], [ %.052, %178 ], [ %.052, %168 ], [ %.052, %158 ], [ %.052, %156 ], [ %.052, %155 ], [ %.052, %137 ], [ %.052, %127 ], [ %.052, %123 ], [ %.052, %122 ], [ %.052, %112 ], [ %.052, %102 ], [ %.052, %99 ], [ %.052, %98 ], [ %.052, %97 ], [ %.052, %86 ], [ %.052, %76 ], [ %.052, %75 ], [ %.052, %62 ], [ %.052, %52 ], [ %.052, %48 ], [ %.052, %47 ], [ %.052, %45 ], [ %.052, %41 ], [ %.052, %37 ], [ %.052, %36 ], [ %.052, %26 ], [ %.052, %16 ], [ %.052, %15 ], [ %.052, %11 ], [ %.052, %5 ]
  %.050.be = phi i32 [ %.050, %4 ], [ %348, %341 ], [ %.050, %340 ], [ %.050, %339 ], [ %.050, %338 ], [ %.050, %337 ], [ %.050, %336 ], [ %.050, %328 ], [ %.050, %327 ], [ %.050, %325 ], [ %.050, %321 ], [ %.050, %320 ], [ %.050, %317 ], [ %.050, %315 ], [ %.050, %314 ], [ %304, %297 ], [ %.050, %287 ], [ %.050, %285 ], [ %.050, %274 ], [ %.050, %264 ], [ 0, %263 ], [ %.050, %261 ], [ %.050, %260 ], [ %.050, %259 ], [ %.050, %250 ], [ %.050, %248 ], [ %.050, %236 ], [ %.050, %226 ], [ %.050, %225 ], [ %.050, %223 ], [ %.050, %211 ], [ %.050, %201 ], [ %.050, %200 ], [ %.050, %199 ], [ %.050, %189 ], [ %.050, %179 ], [ %.050, %178 ], [ %.050, %168 ], [ %.050, %158 ], [ %.050, %156 ], [ %.050, %155 ], [ %.050, %137 ], [ %.050, %127 ], [ %.050, %123 ], [ %.050, %122 ], [ %.050, %112 ], [ %.050, %102 ], [ %.050, %99 ], [ %.050, %98 ], [ %.050, %97 ], [ %.050, %86 ], [ %.050, %76 ], [ %.050, %75 ], [ %.050, %62 ], [ %.050, %52 ], [ %.050, %48 ], [ %.050, %47 ], [ %.050, %45 ], [ %.050, %41 ], [ %.050, %37 ], [ %.050, %36 ], [ %.050, %26 ], [ %.050, %16 ], [ %.050, %15 ], [ %.050, %11 ], [ %.050, %5 ]
  %.048.be = phi i32 [ %.048, %4 ], [ %.048, %341 ], [ %.048, %340 ], [ %.048, %339 ], [ %.048, %338 ], [ %.048, %337 ], [ %.048, %336 ], [ %.048, %328 ], [ %.048, %327 ], [ %.048, %325 ], [ %.048, %321 ], [ %.048, %320 ], [ %.048, %317 ], [ %316, %315 ], [ %.048, %314 ], [ %.048, %297 ], [ %.048, %287 ], [ %.048, %285 ], [ %.048, %274 ], [ %.048, %264 ], [ 0, %263 ], [ %.048, %261 ], [ %.048, %260 ], [ %.048, %259 ], [ %.048, %250 ], [ %.048, %248 ], [ %.048, %236 ], [ %.048, %226 ], [ %.048, %225 ], [ %.048, %223 ], [ %.048, %211 ], [ %.048, %201 ], [ %.048, %200 ], [ %.048, %199 ], [ %.048, %189 ], [ %.048, %179 ], [ %.048, %178 ], [ %.048, %168 ], [ %.048, %158 ], [ %.048, %156 ], [ %.048, %155 ], [ %.048, %137 ], [ %.048, %127 ], [ %.048, %123 ], [ %.048, %122 ], [ %.048, %112 ], [ %.048, %102 ], [ %.048, %99 ], [ %.048, %98 ], [ %.048, %97 ], [ %.048, %86 ], [ %.048, %76 ], [ %.048, %75 ], [ %.048, %62 ], [ %.048, %52 ], [ %.048, %48 ], [ %.048, %47 ], [ %.048, %45 ], [ %.048, %41 ], [ %.048, %37 ], [ %.048, %36 ], [ %.048, %26 ], [ %.048, %16 ], [ %.048, %15 ], [ %.048, %11 ], [ %.048, %5 ]
  %.0.be = phi i32 [ %.0, %4 ], [ -999246195, %341 ], [ -1681398031, %340 ], [ -1614656264, %339 ], [ 1932784050, %338 ], [ 940531694, %337 ], [ -993765588, %336 ], [ -89791007, %328 ], [ -1038687232, %327 ], [ 1026563237, %325 ], [ -1808594947, %321 ], [ 2130466245, %320 ], [ 826683470, %317 ], [ -381035825, %315 ], [ 1503836934, %314 ], [ %313, %297 ], [ %296, %287 ], [ %286, %285 ], [ %284, %274 ], [ %273, %264 ], [ -381035825, %263 ], [ -401358414, %261 ], [ -2063895526, %260 ], [ 922551532, %259 ], [ 171926145, %250 ], [ %249, %248 ], [ %247, %236 ], [ %235, %226 ], [ 922551532, %225 ], [ %224, %223 ], [ %222, %211 ], [ %210, %201 ], [ -401358414, %200 ], [ 154904129, %199 ], [ %198, %189 ], [ %188, %179 ], [ -1809324454, %178 ], [ %177, %168 ], [ %167, %158 ], [ 448151078, %156 ], [ 271363186, %155 ], [ %154, %137 ], [ %136, %127 ], [ %126, %123 ], [ 448151078, %122 ], [ %121, %112 ], [ %111, %102 ], [ %101, %99 ], [ 154904129, %98 ], [ -1208772207, %97 ], [ %96, %86 ], [ %85, %76 ], [ 434245471, %75 ], [ %74, %62 ], [ %61, %52 ], [ %51, %48 ], [ -1208772207, %47 ], [ -251416723, %45 ], [ 2010473510, %41 ], [ %40, %37 ], [ -251416723, %36 ], [ %35, %26 ], [ %25, %16 ], [ -340118269, %15 ], [ %14, %11 ], [ %10, %5 ]
  br label %4

5:                                                ; preds = %4
  %6 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull @N)
  %7 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull @M)
  %8 = load i32, i32* @N, align 4
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32 -1434566914, i32 1079630643
  br label %.backedge

11:                                               ; preds = %4
  %12 = load i32, i32* @M, align 4
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 -1227842845, i32 1079630643
  br label %.backedge

15:                                               ; preds = %4
  br label %.backedge

16:                                               ; preds = %4
  %17 = load i32, i32* @x, align 4
  %18 = load i32, i32* @y, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 2130466245, i32 61470110
  br label %.backedge

26:                                               ; preds = %4
  %27 = load i32, i32* @x, align 4
  %28 = load i32, i32* @y, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -898337560, i32 61470110
  br label %.backedge

36:                                               ; preds = %4
  br label %.backedge

37:                                               ; preds = %4
  %38 = load i32, i32* @N, align 4
  %39 = icmp slt i32 %.066, %38
  %40 = select i1 %39, i32 578832815, i32 1955110412
  br label %.backedge

41:                                               ; preds = %4
  %42 = sext i32 %.066 to i64
  %43 = getelementptr inbounds [1500 x i32], [1500 x i32]* @H, i64 0, i64 %42
  %44 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %43)
  br label %.backedge

45:                                               ; preds = %4
  %46 = add i32 %.066, 1
  br label %.backedge

47:                                               ; preds = %4
  br label %.backedge

48:                                               ; preds = %4
  %49 = load i32, i32* @M, align 4
  %50 = icmp slt i32 %.064, %49
  %51 = select i1 %50, i32 961668203, i32 -870177747
  br label %.backedge

52:                                               ; preds = %4
  %53 = load i32, i32* @x, align 4
  %54 = load i32, i32* @y, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -1808594947, i32 1096907387
  br label %.backedge

62:                                               ; preds = %4
  %63 = sext i32 %.064 to i64
  %64 = getelementptr inbounds [1500 x i32], [1500 x i32]* @W, i64 0, i64 %63
  %65 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %64)
  %66 = load i32, i32* @x, align 4
  %67 = load i32, i32* @y, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 157704534, i32 1096907387
  br label %.backedge

75:                                               ; preds = %4
  br label %.backedge

76:                                               ; preds = %4
  %77 = load i32, i32* @x, align 4
  %78 = load i32, i32* @y, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 1026563237, i32 -346895994
  br label %.backedge

86:                                               ; preds = %4
  %87 = add i32 %.064, 1
  %88 = load i32, i32* @x, align 4
  %89 = load i32, i32* @y, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 596237592, i32 -346895994
  br label %.backedge

97:                                               ; preds = %4
  br label %.backedge

98:                                               ; preds = %4
  br label %.backedge

99:                                               ; preds = %4
  %100 = load i32, i32* @N, align 4
  %.not = icmp sgt i32 %.062, %100
  %101 = select i1 %.not, i32 1635420832, i32 2084832942
  br label %.backedge

102:                                              ; preds = %4
  %103 = load i32, i32* @x, align 4
  %104 = load i32, i32* @y, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -1038687232, i32 203219466
  br label %.backedge

112:                                              ; preds = %4
  %113 = load i32, i32* @x, align 4
  %114 = load i32, i32* @y, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 1565567976, i32 203219466
  br label %.backedge

122:                                              ; preds = %4
  br label %.backedge

123:                                              ; preds = %4
  %124 = load i32, i32* @N, align 4
  %125 = icmp slt i32 %.058, %124
  %126 = select i1 %125, i32 -1718719531, i32 -1864905080
  br label %.backedge

127:                                              ; preds = %4
  %128 = load i32, i32* @x, align 4
  %129 = load i32, i32* @y, align 4
  %130 = add i32 %128, -1
  %131 = mul i32 %130, %128
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %134, %133
  %136 = select i1 %135, i32 -89791007, i32 -1467722934
  br label %.backedge

137:                                              ; preds = %4
  %138 = sext i32 %.058 to i64
  %139 = getelementptr inbounds [1500 x i32], [1500 x i32]* @H, i64 0, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = add i32 %140, %.060
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @dp, i64 0, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %143, align 4
  %146 = load i32, i32* @x, align 4
  %147 = load i32, i32* @y, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 2075342090, i32 -1467722934
  br label %.backedge

155:                                              ; preds = %4
  br label %.backedge

156:                                              ; preds = %4
  %157 = add i32 %.058, 1
  br label %.backedge

158:                                              ; preds = %4
  %159 = load i32, i32* @x, align 4
  %160 = load i32, i32* @y, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 -993765588, i32 266594780
  br label %.backedge

168:                                              ; preds = %4
  %169 = load i32, i32* @x, align 4
  %170 = load i32, i32* @y, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 -1485796547, i32 266594780
  br label %.backedge

178:                                              ; preds = %4
  br label %.backedge

179:                                              ; preds = %4
  %180 = load i32, i32* @x, align 4
  %181 = load i32, i32* @y, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 940531694, i32 -1815946637
  br label %.backedge

189:                                              ; preds = %4
  %.neg70 = add i32 %.062, 1
  %190 = load i32, i32* @x, align 4
  %191 = load i32, i32* @y, align 4
  %192 = add i32 %190, -1
  %193 = mul i32 %192, %190
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %196, %195
  %198 = select i1 %197, i32 -1854251183, i32 -1815946637
  br label %.backedge

199:                                              ; preds = %4
  br label %.backedge

200:                                              ; preds = %4
  br label %.backedge

201:                                              ; preds = %4
  %202 = load i32, i32* @x, align 4
  %203 = load i32, i32* @y, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 1932784050, i32 -1673180844
  br label %.backedge

211:                                              ; preds = %4
  %212 = load i32, i32* @M, align 4
  %213 = icmp sle i32 %.056, %212
  store i1 %213, i1* %3, align 1
  %214 = load i32, i32* @x, align 4
  %215 = load i32, i32* @y, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 -980286352, i32 -1673180844
  br label %.backedge

223:                                              ; preds = %4
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %224 = select i1 %.0..0..0., i32 -532116232, i32 -1255954172
  br label %.backedge

225:                                              ; preds = %4
  br label %.backedge

226:                                              ; preds = %4
  %227 = load i32, i32* @x, align 4
  %228 = load i32, i32* @y, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 -1614656264, i32 1414317364
  br label %.backedge

236:                                              ; preds = %4
  %237 = load i32, i32* @M, align 4
  %238 = icmp slt i32 %.052, %237
  store i1 %238, i1* %2, align 1
  %239 = load i32, i32* @x, align 4
  %240 = load i32, i32* @y, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 -1436423625, i32 1414317364
  br label %.backedge

248:                                              ; preds = %4
  %.0..0..0.46 = load volatile i1, i1* %2, align 1
  %249 = select i1 %.0..0..0.46, i32 79976210, i32 -1805147790
  br label %.backedge

250:                                              ; preds = %4
  %251 = sext i32 %.052 to i64
  %252 = getelementptr inbounds [1500 x i32], [1500 x i32]* @W, i64 0, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = add i32 %253, %.054
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @dp, i64 0, i64 1, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = add i32 %257, 1
  store i32 %258, i32* %256, align 4
  br label %.backedge

259:                                              ; preds = %4
  %.neg69 = add i32 %.052, 1
  br label %.backedge

260:                                              ; preds = %4
  br label %.backedge

261:                                              ; preds = %4
  %262 = add i32 %.056, 1
  br label %.backedge

263:                                              ; preds = %4
  br label %.backedge

264:                                              ; preds = %4
  %265 = load i32, i32* @x, align 4
  %266 = load i32, i32* @y, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 -1681398031, i32 -885493277
  br label %.backedge

274:                                              ; preds = %4
  %275 = icmp slt i32 %.048, 1500001
  store i1 %275, i1* %1, align 1
  %276 = load i32, i32* @x, align 4
  %277 = load i32, i32* @y, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 -918050353, i32 -885493277
  br label %.backedge

285:                                              ; preds = %4
  %.0..0..0.47 = load volatile i1, i1* %1, align 1
  %286 = select i1 %.0..0..0.47, i32 1705488280, i32 -44875500
  br label %.backedge

287:                                              ; preds = %4
  %288 = load i32, i32* @x, align 4
  %289 = load i32, i32* @y, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 -999246195, i32 -305318960
  br label %.backedge

297:                                              ; preds = %4
  %298 = sext i32 %.048 to i64
  %299 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @dp, i64 0, i64 0, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @dp, i64 0, i64 1, i64 %298
  %302 = load i32, i32* %301, align 4
  %303 = mul nsw i32 %302, %300
  %304 = add i32 %303, %.050
  store i32 0, i32* %299, align 4
  store i32 0, i32* %301, align 4
  %305 = load i32, i32* @x, align 4
  %306 = load i32, i32* @y, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 1002892325, i32 -305318960
  br label %.backedge

314:                                              ; preds = %4
  br label %.backedge

315:                                              ; preds = %4
  %316 = add i32 %.048, 1
  br label %.backedge

317:                                              ; preds = %4
  %318 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %.050)
  br label %.backedge

319:                                              ; preds = %4
  ret i32 0

320:                                              ; preds = %4
  br label %.backedge

321:                                              ; preds = %4
  %322 = sext i32 %.064 to i64
  %323 = getelementptr inbounds [1500 x i32], [1500 x i32]* @W, i64 0, i64 %322
  %324 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %323)
  br label %.backedge

325:                                              ; preds = %4
  %326 = add i32 %.064, 1
  br label %.backedge

327:                                              ; preds = %4
  br label %.backedge

328:                                              ; preds = %4
  %329 = sext i32 %.058 to i64
  %330 = getelementptr inbounds [1500 x i32], [1500 x i32]* @H, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = add i32 %331, %.060
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @dp, i64 0, i64 0, i64 %333
  %335 = load i32, i32* %334, align 4
  %.neg68 = add i32 %335, 1
  store i32 %.neg68, i32* %334, align 4
  br label %.backedge

336:                                              ; preds = %4
  br label %.backedge

337:                                              ; preds = %4
  %.neg = add i32 %.062, 1
  br label %.backedge

338:                                              ; preds = %4
  br label %.backedge

339:                                              ; preds = %4
  br label %.backedge

340:                                              ; preds = %4
  br label %.backedge

341:                                              ; preds = %4
  %342 = sext i32 %.048 to i64
  %343 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @dp, i64 0, i64 0, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = getelementptr inbounds [2 x [1500001 x i32]], [2 x [1500001 x i32]]* @dp, i64 0, i64 1, i64 %342
  %346 = load i32, i32* %345, align 4
  %347 = mul nsw i32 %346, %344
  %348 = add i32 %347, %.050
  store i32 0, i32* %343, align 4
  store i32 0, i32* %345, align 4
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
