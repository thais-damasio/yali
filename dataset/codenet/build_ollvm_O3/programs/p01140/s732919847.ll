; ModuleID = 'build_ollvm/programs/p01140/s732919847.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s732919847.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@INF = local_unnamed_addr global i32 10000000, align 4
@n = global i32 0, align 4
@m = global i32 0, align 4
@w = global [1510 x i32] zeroinitializer, align 16
@h = global [1510 x i32] zeroinitializer, align 16
@wf = local_unnamed_addr global [1510000 x i32] zeroinitializer, align 16
@hf = local_unnamed_addr global [1510000 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s732919847.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  br label %3

3:                                                ; preds = %.backedge, %0
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i32 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.042 = phi i32 [ undef, %0 ], [ %.042.be, %.backedge ]
  %.040 = phi i32 [ undef, %0 ], [ %.040.be, %.backedge ]
  %.0 = phi i32 [ 87139335, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 87139335, label %4
    i32 1772665537, label %9
    i32 930209989, label %12
    i32 848578075, label %13
    i32 101928234, label %23
    i32 245859507, label %33
    i32 -1196173311, label %34
    i32 -1613527804, label %38
    i32 1858865855, label %42
    i32 1569684662, label %44
    i32 2115809945, label %54
    i32 -1645605931, label %64
    i32 -596370201, label %65
    i32 -525368003, label %69
    i32 -1824614623, label %79
    i32 46355868, label %92
    i32 1080607941, label %93
    i32 -254597446, label %95
    i32 -2005323714, label %96
    i32 567361134, label %106
    i32 168260222, label %118
    i32 1583935660, label %120
    i32 949527729, label %130
    i32 1600117406, label %140
    i32 -425378594, label %141
    i32 67314689, label %145
    i32 -1727288540, label %154
    i32 1259431266, label %155
    i32 1499920136, label %156
    i32 1821128924, label %166
    i32 2131785746, label %177
    i32 -68583172, label %178
    i32 -419686850, label %188
    i32 -1028159679, label %198
    i32 766517934, label %199
    i32 -1537586467, label %203
    i32 -1373430429, label %213
    i32 1707279542, label %223
    i32 -1140904605, label %224
    i32 392345762, label %234
    i32 1540113921, label %246
    i32 830266183, label %248
    i32 1095802161, label %257
    i32 -1547686506, label %259
    i32 -151340741, label %269
    i32 -1290644350, label %279
    i32 64582669, label %280
    i32 -746474156, label %282
    i32 -1517359643, label %283
    i32 -874467050, label %286
    i32 -264928102, label %296
    i32 393306022, label %313
    i32 -1150155114, label %314
    i32 -1904967206, label %316
    i32 1893343389, label %326
    i32 2070522232, label %338
    i32 -1737575123, label %339
    i32 671166061, label %349
    i32 -1377608503, label %359
    i32 -159314191, label %360
    i32 -1073830786, label %361
    i32 -2013963480, label %362
    i32 1095329112, label %366
    i32 1942873542, label %367
    i32 450507888, label %368
    i32 1353798944, label %370
    i32 -1709047718, label %371
    i32 -1393965505, label %372
    i32 -433425704, label %373
    i32 2067258108, label %374
    i32 1239605441, label %382
    i32 -1526971644, label %385
  ]

.backedge:                                        ; preds = %3, %385, %382, %374, %373, %372, %371, %370, %368, %367, %366, %362, %361, %360, %349, %339, %338, %326, %316, %314, %313, %296, %286, %283, %282, %280, %279, %269, %259, %257, %248, %246, %234, %224, %223, %213, %203, %199, %198, %188, %178, %177, %166, %156, %155, %154, %145, %141, %140, %130, %120, %118, %106, %96, %95, %93, %92, %79, %69, %65, %64, %54, %44, %42, %38, %34, %33, %23, %13, %12, %9, %4
  %.058.be = phi i32 [ %.058, %3 ], [ %.058, %385 ], [ %.058, %382 ], [ %.058, %374 ], [ %.058, %373 ], [ %.058, %372 ], [ %.058, %371 ], [ %.058, %370 ], [ %.058, %368 ], [ %.058, %367 ], [ %.058, %366 ], [ %.058, %362 ], [ %.058, %361 ], [ 0, %360 ], [ %.058, %349 ], [ %.058, %339 ], [ %.058, %338 ], [ %.058, %326 ], [ %.058, %316 ], [ %.058, %314 ], [ %.058, %313 ], [ %.058, %296 ], [ %.058, %286 ], [ %.058, %283 ], [ %.058, %282 ], [ %.058, %280 ], [ %.058, %279 ], [ %.058, %269 ], [ %.058, %259 ], [ %.058, %257 ], [ %.058, %248 ], [ %.058, %246 ], [ %.058, %234 ], [ %.058, %224 ], [ %.058, %223 ], [ %.058, %213 ], [ %.058, %203 ], [ %.058, %199 ], [ %.058, %198 ], [ %.058, %188 ], [ %.058, %178 ], [ %.058, %177 ], [ %.058, %166 ], [ %.058, %156 ], [ %.058, %155 ], [ %.058, %154 ], [ %.058, %145 ], [ %.058, %141 ], [ %.058, %140 ], [ %.058, %130 ], [ %.058, %120 ], [ %.058, %118 ], [ %.058, %106 ], [ %.058, %96 ], [ %.058, %95 ], [ %.058, %93 ], [ %.058, %92 ], [ %.058, %79 ], [ %.058, %69 ], [ %.058, %65 ], [ %.058, %64 ], [ %.058, %54 ], [ %.058, %44 ], [ %43, %42 ], [ %.058, %38 ], [ %.058, %34 ], [ %.058, %33 ], [ 0, %23 ], [ %.058, %13 ], [ %.058, %12 ], [ %.058, %9 ], [ %.058, %4 ]
  %.056.be = phi i32 [ %.056, %3 ], [ %.056, %385 ], [ %.056, %382 ], [ %.056, %374 ], [ %.056, %373 ], [ %.056, %372 ], [ %.056, %371 ], [ %.056, %370 ], [ %.056, %368 ], [ %.056, %367 ], [ %.056, %366 ], [ %.056, %362 ], [ 0, %361 ], [ %.056, %360 ], [ %.056, %349 ], [ %.056, %339 ], [ %.056, %338 ], [ %.056, %326 ], [ %.056, %316 ], [ %.056, %314 ], [ %.056, %313 ], [ %.056, %296 ], [ %.056, %286 ], [ %.056, %283 ], [ %.056, %282 ], [ %.056, %280 ], [ %.056, %279 ], [ %.056, %269 ], [ %.056, %259 ], [ %.056, %257 ], [ %.056, %248 ], [ %.056, %246 ], [ %.056, %234 ], [ %.056, %224 ], [ %.056, %223 ], [ %.056, %213 ], [ %.056, %203 ], [ %.056, %199 ], [ %.056, %198 ], [ %.056, %188 ], [ %.056, %178 ], [ %.056, %177 ], [ %.056, %166 ], [ %.056, %156 ], [ %.056, %155 ], [ %.056, %154 ], [ %.056, %145 ], [ %.056, %141 ], [ %.056, %140 ], [ %.056, %130 ], [ %.056, %120 ], [ %.056, %118 ], [ %.056, %106 ], [ %.056, %96 ], [ %.056, %95 ], [ %94, %93 ], [ %.056, %92 ], [ %.056, %79 ], [ %.056, %69 ], [ %.056, %65 ], [ %.056, %64 ], [ 0, %54 ], [ %.056, %44 ], [ %.056, %42 ], [ %.056, %38 ], [ %.056, %34 ], [ %.056, %33 ], [ %.056, %23 ], [ %.056, %13 ], [ %.056, %12 ], [ %.056, %9 ], [ %.056, %4 ]
  %.054.be = phi i32 [ %.054, %3 ], [ %.054, %385 ], [ %.054, %382 ], [ %.054, %374 ], [ %.054, %373 ], [ %.054, %372 ], [ %.054, %371 ], [ %.054, %370 ], [ %369, %368 ], [ %.054, %367 ], [ %.054, %366 ], [ %.054, %362 ], [ %.054, %361 ], [ %.054, %360 ], [ %.054, %349 ], [ %.054, %339 ], [ %.054, %338 ], [ %.054, %326 ], [ %.054, %316 ], [ %.054, %314 ], [ %.054, %313 ], [ %.054, %296 ], [ %.054, %286 ], [ %.054, %283 ], [ %.054, %282 ], [ %.054, %280 ], [ %.054, %279 ], [ %.054, %269 ], [ %.054, %259 ], [ %.054, %257 ], [ %.054, %248 ], [ %.054, %246 ], [ %.054, %234 ], [ %.054, %224 ], [ %.054, %223 ], [ %.054, %213 ], [ %.054, %203 ], [ %.054, %199 ], [ %.054, %198 ], [ %.054, %188 ], [ %.054, %178 ], [ %.054, %177 ], [ %167, %166 ], [ %.054, %156 ], [ %.054, %155 ], [ %.054, %154 ], [ %.054, %145 ], [ %.054, %141 ], [ %.054, %140 ], [ %.054, %130 ], [ %.054, %120 ], [ %.054, %118 ], [ %.054, %106 ], [ %.054, %96 ], [ 0, %95 ], [ %.054, %93 ], [ %.054, %92 ], [ %.054, %79 ], [ %.054, %69 ], [ %.054, %65 ], [ %.054, %64 ], [ %.054, %54 ], [ %.054, %44 ], [ %.054, %42 ], [ %.054, %38 ], [ %.054, %34 ], [ %.054, %33 ], [ %.054, %23 ], [ %.054, %13 ], [ %.054, %12 ], [ %.054, %9 ], [ %.054, %4 ]
  %.052.be = phi i32 [ %.052, %3 ], [ %.052, %385 ], [ %.052, %382 ], [ %.052, %374 ], [ %.052, %373 ], [ %.052, %372 ], [ %.052, %371 ], [ %.052, %370 ], [ %.052, %368 ], [ 0, %367 ], [ %.052, %366 ], [ %.052, %362 ], [ %.052, %361 ], [ %.052, %360 ], [ %.052, %349 ], [ %.052, %339 ], [ %.052, %338 ], [ %.052, %326 ], [ %.052, %316 ], [ %.052, %314 ], [ %.052, %313 ], [ %.052, %296 ], [ %.052, %286 ], [ %.052, %283 ], [ %.052, %282 ], [ %.052, %280 ], [ %.052, %279 ], [ %.052, %269 ], [ %.052, %259 ], [ %.052, %257 ], [ %.052, %248 ], [ %.052, %246 ], [ %.052, %234 ], [ %.052, %224 ], [ %.052, %223 ], [ %.052, %213 ], [ %.052, %203 ], [ %.052, %199 ], [ %.052, %198 ], [ %.052, %188 ], [ %.052, %178 ], [ %.052, %177 ], [ %.052, %166 ], [ %.052, %156 ], [ %.052, %155 ], [ %.052, %154 ], [ %149, %145 ], [ %.052, %141 ], [ %.052, %140 ], [ 0, %130 ], [ %.052, %120 ], [ %.052, %118 ], [ %.052, %106 ], [ %.052, %96 ], [ %.052, %95 ], [ %.052, %93 ], [ %.052, %92 ], [ %.052, %79 ], [ %.052, %69 ], [ %.052, %65 ], [ %.052, %64 ], [ %.052, %54 ], [ %.052, %44 ], [ %.052, %42 ], [ %.052, %38 ], [ %.052, %34 ], [ %.052, %33 ], [ %.052, %23 ], [ %.052, %13 ], [ %.052, %12 ], [ %.052, %9 ], [ %.052, %4 ]
  %.050.be = phi i32 [ %.050, %3 ], [ %.050, %385 ], [ %.050, %382 ], [ %.050, %374 ], [ %.050, %373 ], [ %.050, %372 ], [ %.050, %371 ], [ %.050, %370 ], [ %.050, %368 ], [ %.054, %367 ], [ %.050, %366 ], [ %.050, %362 ], [ %.050, %361 ], [ %.050, %360 ], [ %.050, %349 ], [ %.050, %339 ], [ %.050, %338 ], [ %.050, %326 ], [ %.050, %316 ], [ %.050, %314 ], [ %.050, %313 ], [ %.050, %296 ], [ %.050, %286 ], [ %.050, %283 ], [ %.050, %282 ], [ %.050, %280 ], [ %.050, %279 ], [ %.050, %269 ], [ %.050, %259 ], [ %.050, %257 ], [ %.050, %248 ], [ %.050, %246 ], [ %.050, %234 ], [ %.050, %224 ], [ %.050, %223 ], [ %.050, %213 ], [ %.050, %203 ], [ %.050, %199 ], [ %.050, %198 ], [ %.050, %188 ], [ %.050, %178 ], [ %.050, %177 ], [ %.050, %166 ], [ %.050, %156 ], [ %.050, %155 ], [ %.neg, %154 ], [ %.050, %145 ], [ %.050, %141 ], [ %.050, %140 ], [ %.054, %130 ], [ %.050, %120 ], [ %.050, %118 ], [ %.050, %106 ], [ %.050, %96 ], [ %.050, %95 ], [ %.050, %93 ], [ %.050, %92 ], [ %.050, %79 ], [ %.050, %69 ], [ %.050, %65 ], [ %.050, %64 ], [ %.050, %54 ], [ %.050, %44 ], [ %.050, %42 ], [ %.050, %38 ], [ %.050, %34 ], [ %.050, %33 ], [ %.050, %23 ], [ %.050, %13 ], [ %.050, %12 ], [ %.050, %9 ], [ %.050, %4 ]
  %.048.be = phi i32 [ %.048, %3 ], [ %.048, %385 ], [ %.048, %382 ], [ %.048, %374 ], [ %.048, %373 ], [ %.048, %372 ], [ %.048, %371 ], [ 0, %370 ], [ %.048, %368 ], [ %.048, %367 ], [ %.048, %366 ], [ %.048, %362 ], [ %.048, %361 ], [ %.048, %360 ], [ %.048, %349 ], [ %.048, %339 ], [ %.048, %338 ], [ %.048, %326 ], [ %.048, %316 ], [ %.048, %314 ], [ %.048, %313 ], [ %.048, %296 ], [ %.048, %286 ], [ %.048, %283 ], [ %.048, %282 ], [ %281, %280 ], [ %.048, %279 ], [ %.048, %269 ], [ %.048, %259 ], [ %.048, %257 ], [ %.048, %248 ], [ %.048, %246 ], [ %.048, %234 ], [ %.048, %224 ], [ %.048, %223 ], [ %.048, %213 ], [ %.048, %203 ], [ %.048, %199 ], [ %.048, %198 ], [ 0, %188 ], [ %.048, %178 ], [ %.048, %177 ], [ %.048, %166 ], [ %.048, %156 ], [ %.048, %155 ], [ %.048, %154 ], [ %.048, %145 ], [ %.048, %141 ], [ %.048, %140 ], [ %.048, %130 ], [ %.048, %120 ], [ %.048, %118 ], [ %.048, %106 ], [ %.048, %96 ], [ %.048, %95 ], [ %.048, %93 ], [ %.048, %92 ], [ %.048, %79 ], [ %.048, %69 ], [ %.048, %65 ], [ %.048, %64 ], [ %.048, %54 ], [ %.048, %44 ], [ %.048, %42 ], [ %.048, %38 ], [ %.048, %34 ], [ %.048, %33 ], [ %.048, %23 ], [ %.048, %13 ], [ %.048, %12 ], [ %.048, %9 ], [ %.048, %4 ]
  %.046.be = phi i32 [ %.046, %3 ], [ %.046, %385 ], [ %.046, %382 ], [ %.046, %374 ], [ %.046, %373 ], [ %.046, %372 ], [ 0, %371 ], [ %.046, %370 ], [ %.046, %368 ], [ %.046, %367 ], [ %.046, %366 ], [ %.046, %362 ], [ %.046, %361 ], [ %.046, %360 ], [ %.046, %349 ], [ %.046, %339 ], [ %.046, %338 ], [ %.046, %326 ], [ %.046, %316 ], [ %.046, %314 ], [ %.046, %313 ], [ %.046, %296 ], [ %.046, %286 ], [ %.046, %283 ], [ %.046, %282 ], [ %.046, %280 ], [ %.046, %279 ], [ %.046, %269 ], [ %.046, %259 ], [ %.046, %257 ], [ %252, %248 ], [ %.046, %246 ], [ %.046, %234 ], [ %.046, %224 ], [ %.046, %223 ], [ 0, %213 ], [ %.046, %203 ], [ %.046, %199 ], [ %.046, %198 ], [ %.046, %188 ], [ %.046, %178 ], [ %.046, %177 ], [ %.046, %166 ], [ %.046, %156 ], [ %.046, %155 ], [ %.046, %154 ], [ %.046, %145 ], [ %.046, %141 ], [ %.046, %140 ], [ %.046, %130 ], [ %.046, %120 ], [ %.046, %118 ], [ %.046, %106 ], [ %.046, %96 ], [ %.046, %95 ], [ %.046, %93 ], [ %.046, %92 ], [ %.046, %79 ], [ %.046, %69 ], [ %.046, %65 ], [ %.046, %64 ], [ %.046, %54 ], [ %.046, %44 ], [ %.046, %42 ], [ %.046, %38 ], [ %.046, %34 ], [ %.046, %33 ], [ %.046, %23 ], [ %.046, %13 ], [ %.046, %12 ], [ %.046, %9 ], [ %.046, %4 ]
  %.044.be = phi i32 [ %.044, %3 ], [ %.044, %385 ], [ %.044, %382 ], [ %.044, %374 ], [ %.044, %373 ], [ %.044, %372 ], [ %.048, %371 ], [ %.044, %370 ], [ %.044, %368 ], [ %.044, %367 ], [ %.044, %366 ], [ %.044, %362 ], [ %.044, %361 ], [ %.044, %360 ], [ %.044, %349 ], [ %.044, %339 ], [ %.044, %338 ], [ %.044, %326 ], [ %.044, %316 ], [ %.044, %314 ], [ %.044, %313 ], [ %.044, %296 ], [ %.044, %286 ], [ %.044, %283 ], [ %.044, %282 ], [ %.044, %280 ], [ %.044, %279 ], [ %.044, %269 ], [ %.044, %259 ], [ %258, %257 ], [ %.044, %248 ], [ %.044, %246 ], [ %.044, %234 ], [ %.044, %224 ], [ %.044, %223 ], [ %.048, %213 ], [ %.044, %203 ], [ %.044, %199 ], [ %.044, %198 ], [ %.044, %188 ], [ %.044, %178 ], [ %.044, %177 ], [ %.044, %166 ], [ %.044, %156 ], [ %.044, %155 ], [ %.044, %154 ], [ %.044, %145 ], [ %.044, %141 ], [ %.044, %140 ], [ %.044, %130 ], [ %.044, %120 ], [ %.044, %118 ], [ %.044, %106 ], [ %.044, %96 ], [ %.044, %95 ], [ %.044, %93 ], [ %.044, %92 ], [ %.044, %79 ], [ %.044, %69 ], [ %.044, %65 ], [ %.044, %64 ], [ %.044, %54 ], [ %.044, %44 ], [ %.044, %42 ], [ %.044, %38 ], [ %.044, %34 ], [ %.044, %33 ], [ %.044, %23 ], [ %.044, %13 ], [ %.044, %12 ], [ %.044, %9 ], [ %.044, %4 ]
  %.042.be = phi i32 [ %.042, %3 ], [ %.042, %385 ], [ %.042, %382 ], [ %381, %374 ], [ %.042, %373 ], [ %.042, %372 ], [ %.042, %371 ], [ %.042, %370 ], [ %.042, %368 ], [ %.042, %367 ], [ %.042, %366 ], [ %.042, %362 ], [ %.042, %361 ], [ %.042, %360 ], [ %.042, %349 ], [ %.042, %339 ], [ %.042, %338 ], [ %.042, %326 ], [ %.042, %316 ], [ %.042, %314 ], [ %.042, %313 ], [ %303, %296 ], [ %.042, %286 ], [ %.042, %283 ], [ 0, %282 ], [ %.042, %280 ], [ %.042, %279 ], [ %.042, %269 ], [ %.042, %259 ], [ %.042, %257 ], [ %.042, %248 ], [ %.042, %246 ], [ %.042, %234 ], [ %.042, %224 ], [ %.042, %223 ], [ %.042, %213 ], [ %.042, %203 ], [ %.042, %199 ], [ %.042, %198 ], [ %.042, %188 ], [ %.042, %178 ], [ %.042, %177 ], [ %.042, %166 ], [ %.042, %156 ], [ %.042, %155 ], [ %.042, %154 ], [ %.042, %145 ], [ %.042, %141 ], [ %.042, %140 ], [ %.042, %130 ], [ %.042, %120 ], [ %.042, %118 ], [ %.042, %106 ], [ %.042, %96 ], [ %.042, %95 ], [ %.042, %93 ], [ %.042, %92 ], [ %.042, %79 ], [ %.042, %69 ], [ %.042, %65 ], [ %.042, %64 ], [ %.042, %54 ], [ %.042, %44 ], [ %.042, %42 ], [ %.042, %38 ], [ %.042, %34 ], [ %.042, %33 ], [ %.042, %23 ], [ %.042, %13 ], [ %.042, %12 ], [ %.042, %9 ], [ %.042, %4 ]
  %.040.be = phi i32 [ %.040, %3 ], [ %.040, %385 ], [ %.040, %382 ], [ %.040, %374 ], [ %.040, %373 ], [ %.040, %372 ], [ %.040, %371 ], [ %.040, %370 ], [ %.040, %368 ], [ %.040, %367 ], [ %.040, %366 ], [ %.040, %362 ], [ %.040, %361 ], [ %.040, %360 ], [ %.040, %349 ], [ %.040, %339 ], [ %.040, %338 ], [ %.040, %326 ], [ %.040, %316 ], [ %315, %314 ], [ %.040, %313 ], [ %.040, %296 ], [ %.040, %286 ], [ %.040, %283 ], [ 0, %282 ], [ %.040, %280 ], [ %.040, %279 ], [ %.040, %269 ], [ %.040, %259 ], [ %.040, %257 ], [ %.040, %248 ], [ %.040, %246 ], [ %.040, %234 ], [ %.040, %224 ], [ %.040, %223 ], [ %.040, %213 ], [ %.040, %203 ], [ %.040, %199 ], [ %.040, %198 ], [ %.040, %188 ], [ %.040, %178 ], [ %.040, %177 ], [ %.040, %166 ], [ %.040, %156 ], [ %.040, %155 ], [ %.040, %154 ], [ %.040, %145 ], [ %.040, %141 ], [ %.040, %140 ], [ %.040, %130 ], [ %.040, %120 ], [ %.040, %118 ], [ %.040, %106 ], [ %.040, %96 ], [ %.040, %95 ], [ %.040, %93 ], [ %.040, %92 ], [ %.040, %79 ], [ %.040, %69 ], [ %.040, %65 ], [ %.040, %64 ], [ %.040, %54 ], [ %.040, %44 ], [ %.040, %42 ], [ %.040, %38 ], [ %.040, %34 ], [ %.040, %33 ], [ %.040, %23 ], [ %.040, %13 ], [ %.040, %12 ], [ %.040, %9 ], [ %.040, %4 ]
  %.0.be = phi i32 [ %.0, %3 ], [ 671166061, %385 ], [ 1893343389, %382 ], [ -264928102, %374 ], [ -151340741, %373 ], [ 392345762, %372 ], [ -1373430429, %371 ], [ -419686850, %370 ], [ 1821128924, %368 ], [ 949527729, %367 ], [ 567361134, %366 ], [ -1824614623, %362 ], [ 2115809945, %361 ], [ 101928234, %360 ], [ %358, %349 ], [ %348, %339 ], [ 87139335, %338 ], [ %337, %326 ], [ %325, %316 ], [ -1517359643, %314 ], [ -1150155114, %313 ], [ %312, %296 ], [ %295, %286 ], [ %285, %283 ], [ -1517359643, %282 ], [ 766517934, %280 ], [ 64582669, %279 ], [ %278, %269 ], [ %268, %259 ], [ -1140904605, %257 ], [ 1095802161, %248 ], [ %247, %246 ], [ %245, %234 ], [ %233, %224 ], [ -1140904605, %223 ], [ %222, %213 ], [ %212, %203 ], [ %202, %199 ], [ 766517934, %198 ], [ %197, %188 ], [ %187, %178 ], [ -2005323714, %177 ], [ %176, %166 ], [ %165, %156 ], [ 1499920136, %155 ], [ -425378594, %154 ], [ -1727288540, %145 ], [ %144, %141 ], [ -425378594, %140 ], [ %139, %130 ], [ %129, %120 ], [ %119, %118 ], [ %117, %106 ], [ %105, %96 ], [ -2005323714, %95 ], [ -596370201, %93 ], [ 1080607941, %92 ], [ %91, %79 ], [ %78, %69 ], [ %68, %65 ], [ -596370201, %64 ], [ %63, %54 ], [ %53, %44 ], [ -1196173311, %42 ], [ 1858865855, %38 ], [ %37, %34 ], [ -1196173311, %33 ], [ %32, %23 ], [ %22, %13 ], [ -1737575123, %12 ], [ %11, %9 ], [ %8, %4 ]
  br label %3

4:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(6040000) bitcast ([1510000 x i32]* @wf to i8*), i8 0, i64 6040000, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(6040000) bitcast ([1510000 x i32]* @hf to i8*), i8 0, i64 6040000, i1 false)
  %5 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  %6 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %5, i32* nonnull dereferenceable(4) @m)
  %7 = load i32, i32* @n, align 4
  %.not60 = icmp eq i32 %7, 0
  %8 = select i1 %.not60, i32 1772665537, i32 848578075
  br label %.backedge

9:                                                ; preds = %3
  %10 = load i32, i32* @m, align 4
  %.not = icmp eq i32 %10, 0
  %11 = select i1 %.not, i32 930209989, i32 848578075
  br label %.backedge

12:                                               ; preds = %3
  br label %.backedge

13:                                               ; preds = %3
  %14 = load i32, i32* @x.1, align 4
  %15 = load i32, i32* @y.2, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 101928234, i32 -159314191
  br label %.backedge

23:                                               ; preds = %3
  %24 = load i32, i32* @x.1, align 4
  %25 = load i32, i32* @y.2, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 245859507, i32 -159314191
  br label %.backedge

33:                                               ; preds = %3
  br label %.backedge

34:                                               ; preds = %3
  %35 = load i32, i32* @n, align 4
  %36 = icmp slt i32 %.058, %35
  %37 = select i1 %36, i32 -1613527804, i32 1569684662
  br label %.backedge

38:                                               ; preds = %3
  %39 = sext i32 %.058 to i64
  %40 = getelementptr inbounds [1510 x i32], [1510 x i32]* @w, i64 0, i64 %39
  %41 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %40)
  br label %.backedge

42:                                               ; preds = %3
  %43 = add i32 %.058, 1
  br label %.backedge

44:                                               ; preds = %3
  %45 = load i32, i32* @x.1, align 4
  %46 = load i32, i32* @y.2, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 2115809945, i32 -1073830786
  br label %.backedge

54:                                               ; preds = %3
  %55 = load i32, i32* @x.1, align 4
  %56 = load i32, i32* @y.2, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 -1645605931, i32 -1073830786
  br label %.backedge

64:                                               ; preds = %3
  br label %.backedge

65:                                               ; preds = %3
  %66 = load i32, i32* @m, align 4
  %67 = icmp slt i32 %.056, %66
  %68 = select i1 %67, i32 -525368003, i32 -254597446
  br label %.backedge

69:                                               ; preds = %3
  %70 = load i32, i32* @x.1, align 4
  %71 = load i32, i32* @y.2, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -1824614623, i32 -2013963480
  br label %.backedge

79:                                               ; preds = %3
  %80 = sext i32 %.056 to i64
  %81 = getelementptr inbounds [1510 x i32], [1510 x i32]* @h, i64 0, i64 %80
  %82 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %81)
  %83 = load i32, i32* @x.1, align 4
  %84 = load i32, i32* @y.2, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 46355868, i32 -2013963480
  br label %.backedge

92:                                               ; preds = %3
  br label %.backedge

93:                                               ; preds = %3
  %94 = add i32 %.056, 1
  br label %.backedge

95:                                               ; preds = %3
  br label %.backedge

96:                                               ; preds = %3
  %97 = load i32, i32* @x.1, align 4
  %98 = load i32, i32* @y.2, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 567361134, i32 1095329112
  br label %.backedge

106:                                              ; preds = %3
  %107 = load i32, i32* @n, align 4
  %108 = icmp slt i32 %.054, %107
  store i1 %108, i1* %2, align 1
  %109 = load i32, i32* @x.1, align 4
  %110 = load i32, i32* @y.2, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 168260222, i32 1095329112
  br label %.backedge

118:                                              ; preds = %3
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %119 = select i1 %.0..0..0., i32 1583935660, i32 -68583172
  br label %.backedge

120:                                              ; preds = %3
  %121 = load i32, i32* @x.1, align 4
  %122 = load i32, i32* @y.2, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 949527729, i32 1942873542
  br label %.backedge

130:                                              ; preds = %3
  %131 = load i32, i32* @x.1, align 4
  %132 = load i32, i32* @y.2, align 4
  %133 = add i32 %131, -1
  %134 = mul i32 %133, %131
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %137, %136
  %139 = select i1 %138, i32 1600117406, i32 1942873542
  br label %.backedge

140:                                              ; preds = %3
  br label %.backedge

141:                                              ; preds = %3
  %142 = load i32, i32* @n, align 4
  %143 = icmp slt i32 %.050, %142
  %144 = select i1 %143, i32 67314689, i32 1259431266
  br label %.backedge

145:                                              ; preds = %3
  %146 = sext i32 %.050 to i64
  %147 = getelementptr inbounds [1510 x i32], [1510 x i32]* @w, i64 0, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = add i32 %148, %.052
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [1510000 x i32], [1510000 x i32]* @wf, i64 0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %151, align 4
  br label %.backedge

154:                                              ; preds = %3
  %.neg = add i32 %.050, 1
  br label %.backedge

155:                                              ; preds = %3
  br label %.backedge

156:                                              ; preds = %3
  %157 = load i32, i32* @x.1, align 4
  %158 = load i32, i32* @y.2, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 1821128924, i32 450507888
  br label %.backedge

166:                                              ; preds = %3
  %167 = add i32 %.054, 1
  %168 = load i32, i32* @x.1, align 4
  %169 = load i32, i32* @y.2, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 2131785746, i32 450507888
  br label %.backedge

177:                                              ; preds = %3
  br label %.backedge

178:                                              ; preds = %3
  %179 = load i32, i32* @x.1, align 4
  %180 = load i32, i32* @y.2, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 -419686850, i32 1353798944
  br label %.backedge

188:                                              ; preds = %3
  %189 = load i32, i32* @x.1, align 4
  %190 = load i32, i32* @y.2, align 4
  %191 = add i32 %189, -1
  %192 = mul i32 %191, %189
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %195, %194
  %197 = select i1 %196, i32 -1028159679, i32 1353798944
  br label %.backedge

198:                                              ; preds = %3
  br label %.backedge

199:                                              ; preds = %3
  %200 = load i32, i32* @m, align 4
  %201 = icmp slt i32 %.048, %200
  %202 = select i1 %201, i32 -1537586467, i32 -746474156
  br label %.backedge

203:                                              ; preds = %3
  %204 = load i32, i32* @x.1, align 4
  %205 = load i32, i32* @y.2, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 -1373430429, i32 -1709047718
  br label %.backedge

213:                                              ; preds = %3
  %214 = load i32, i32* @x.1, align 4
  %215 = load i32, i32* @y.2, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 1707279542, i32 -1709047718
  br label %.backedge

223:                                              ; preds = %3
  br label %.backedge

224:                                              ; preds = %3
  %225 = load i32, i32* @x.1, align 4
  %226 = load i32, i32* @y.2, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 392345762, i32 -1393965505
  br label %.backedge

234:                                              ; preds = %3
  %235 = load i32, i32* @m, align 4
  %236 = icmp slt i32 %.044, %235
  store i1 %236, i1* %1, align 1
  %237 = load i32, i32* @x.1, align 4
  %238 = load i32, i32* @y.2, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 1540113921, i32 -1393965505
  br label %.backedge

246:                                              ; preds = %3
  %.0..0..0.39 = load volatile i1, i1* %1, align 1
  %247 = select i1 %.0..0..0.39, i32 830266183, i32 -1547686506
  br label %.backedge

248:                                              ; preds = %3
  %249 = sext i32 %.044 to i64
  %250 = getelementptr inbounds [1510 x i32], [1510 x i32]* @h, i64 0, i64 %249
  %251 = load i32, i32* %250, align 4
  %252 = add i32 %251, %.046
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds [1510000 x i32], [1510000 x i32]* @hf, i64 0, i64 %253
  %255 = load i32, i32* %254, align 4
  %256 = add i32 %255, 1
  store i32 %256, i32* %254, align 4
  br label %.backedge

257:                                              ; preds = %3
  %258 = add i32 %.044, 1
  br label %.backedge

259:                                              ; preds = %3
  %260 = load i32, i32* @x.1, align 4
  %261 = load i32, i32* @y.2, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 -151340741, i32 -433425704
  br label %.backedge

269:                                              ; preds = %3
  %270 = load i32, i32* @x.1, align 4
  %271 = load i32, i32* @y.2, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 -1290644350, i32 -433425704
  br label %.backedge

279:                                              ; preds = %3
  br label %.backedge

280:                                              ; preds = %3
  %281 = add i32 %.048, 1
  br label %.backedge

282:                                              ; preds = %3
  br label %.backedge

283:                                              ; preds = %3
  %284 = icmp slt i32 %.040, 1510000
  %285 = select i1 %284, i32 -874467050, i32 -1904967206
  br label %.backedge

286:                                              ; preds = %3
  %287 = load i32, i32* @x.1, align 4
  %288 = load i32, i32* @y.2, align 4
  %289 = add i32 %287, -1
  %290 = mul i32 %289, %287
  %291 = and i32 %290, 1
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %293, %292
  %295 = select i1 %294, i32 -264928102, i32 2067258108
  br label %.backedge

296:                                              ; preds = %3
  %297 = sext i32 %.040 to i64
  %298 = getelementptr inbounds [1510000 x i32], [1510000 x i32]* @wf, i64 0, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds [1510000 x i32], [1510000 x i32]* @hf, i64 0, i64 %297
  %301 = load i32, i32* %300, align 4
  %302 = mul nsw i32 %301, %299
  %303 = add i32 %302, %.042
  %304 = load i32, i32* @x.1, align 4
  %305 = load i32, i32* @y.2, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 393306022, i32 2067258108
  br label %.backedge

313:                                              ; preds = %3
  br label %.backedge

314:                                              ; preds = %3
  %315 = add i32 %.040, 1
  br label %.backedge

316:                                              ; preds = %3
  %317 = load i32, i32* @x.1, align 4
  %318 = load i32, i32* @y.2, align 4
  %319 = add i32 %317, -1
  %320 = mul i32 %319, %317
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %323, %322
  %325 = select i1 %324, i32 1893343389, i32 1239605441
  br label %.backedge

326:                                              ; preds = %3
  %327 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.042)
  %328 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %327, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %329 = load i32, i32* @x.1, align 4
  %330 = load i32, i32* @y.2, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 2070522232, i32 1239605441
  br label %.backedge

338:                                              ; preds = %3
  br label %.backedge

339:                                              ; preds = %3
  %340 = load i32, i32* @x.1, align 4
  %341 = load i32, i32* @y.2, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 671166061, i32 -1526971644
  br label %.backedge

349:                                              ; preds = %3
  %350 = load i32, i32* @x.1, align 4
  %351 = load i32, i32* @y.2, align 4
  %352 = add i32 %350, -1
  %353 = mul i32 %352, %350
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %356, %355
  %358 = select i1 %357, i32 -1377608503, i32 -1526971644
  br label %.backedge

359:                                              ; preds = %3
  ret i32 0

360:                                              ; preds = %3
  br label %.backedge

361:                                              ; preds = %3
  br label %.backedge

362:                                              ; preds = %3
  %363 = sext i32 %.056 to i64
  %364 = getelementptr inbounds [1510 x i32], [1510 x i32]* @h, i64 0, i64 %363
  %365 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %364)
  br label %.backedge

366:                                              ; preds = %3
  br label %.backedge

367:                                              ; preds = %3
  br label %.backedge

368:                                              ; preds = %3
  %369 = add i32 %.054, 1
  br label %.backedge

370:                                              ; preds = %3
  br label %.backedge

371:                                              ; preds = %3
  br label %.backedge

372:                                              ; preds = %3
  br label %.backedge

373:                                              ; preds = %3
  br label %.backedge

374:                                              ; preds = %3
  %375 = sext i32 %.040 to i64
  %376 = getelementptr inbounds [1510000 x i32], [1510000 x i32]* @wf, i64 0, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = getelementptr inbounds [1510000 x i32], [1510000 x i32]* @hf, i64 0, i64 %375
  %379 = load i32, i32* %378, align 4
  %380 = mul nsw i32 %379, %377
  %381 = add i32 %380, %.042
  br label %.backedge

382:                                              ; preds = %3
  %383 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.042)
  %384 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %383, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

385:                                              ; preds = %3
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s732919847.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1305447747, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1305447747, label %11
    i32 1520957778, label %14
    i32 1920344627, label %24
    i32 844589309, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1520957778, i32 844589309
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1920344627, i32 844589309
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 1520957778, %25 ]
  br label %.outer
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
