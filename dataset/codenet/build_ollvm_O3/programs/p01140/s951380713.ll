; ModuleID = 'build_ollvm/programs/p01140/s951380713.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s951380713.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@h_count = local_unnamed_addr global [1500001 x i32] zeroinitializer, align 16
@w_count = local_unnamed_addr global [1500001 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s951380713.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1777672131, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1777672131, label %11
    i32 -1355331232, label %14
    i32 -2011955841, label %25
    i32 -917363182, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1355331232, i32 -917363182
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -2011955841, i32 -917363182
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1355331232, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [1501 x i32], align 16
  %10 = alloca [1501 x i32], align 16
  %11 = bitcast [1501 x i32]* %9 to i8*
  %12 = bitcast [1501 x i32]* %10 to i8*
  br label %13

13:                                               ; preds = %.backedge, %0
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ -2011439403, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i1 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.058, label %.backedge [
    i32 -2011439403, label %14
    i32 -1865363310, label %27
    i32 -1311415228, label %37
    i32 316813405, label %49
    i32 866868868, label %51
    i32 -1481314125, label %54
    i32 -1105010044, label %64
    i32 1476093208, label %74
    i32 551486826, label %75
    i32 -1337487223, label %77
    i32 -1521893268, label %78
    i32 299790886, label %88
    i32 -103193324, label %100
    i32 -1431689789, label %102
    i32 1228203614, label %112
    i32 -721148138, label %131
    i32 -829890852, label %132
    i32 -1365822083, label %134
    i32 598928862, label %135
    i32 877857647, label %138
    i32 2033082678, label %148
    i32 1299999609, label %167
    i32 -584802679, label %168
    i32 -1219282073, label %169
    i32 1660136432, label %170
    i32 577071674, label %174
    i32 1831852241, label %175
    i32 -246541063, label %185
    i32 719126586, label %197
    i32 140040427, label %199
    i32 -604092667, label %209
    i32 1749885612, label %230
    i32 830237433, label %231
    i32 -299983338, label %241
    i32 -1133944759, label %251
    i32 1133532496, label %252
    i32 130770332, label %262
    i32 1821902272, label %272
    i32 1174858769, label %273
    i32 1394330783, label %283
    i32 -1049389810, label %294
    i32 -526589676, label %295
    i32 1177637724, label %296
    i32 1153763055, label %300
    i32 -2143037482, label %310
    i32 -874707043, label %321
    i32 143456261, label %322
    i32 -1078501072, label %332
    i32 -2106941651, label %344
    i32 863259971, label %346
    i32 594326037, label %358
    i32 -1464130512, label %368
    i32 -396345666, label %378
    i32 763775507, label %379
    i32 -573723668, label %380
    i32 -883982041, label %390
    i32 -27181215, label %401
    i32 -389861332, label %402
    i32 2124951605, label %412
    i32 1020172001, label %422
    i32 -1686796920, label %423
    i32 -1414530440, label %433
    i32 -869131589, label %444
    i32 -626942506, label %446
    i32 -1662043109, label %454
    i32 -689035761, label %464
    i32 788617687, label %475
    i32 1699331252, label %476
    i32 -126307239, label %479
    i32 -895311629, label %480
    i32 2131457825, label %481
    i32 -761729450, label %482
    i32 82236890, label %483
    i32 756916944, label %493
    i32 637698506, label %503
    i32 -102027465, label %504
    i32 -485705093, label %516
    i32 1800839060, label %518
    i32 185044506, label %519
    i32 2067487780, label %520
    i32 297716170, label %522
    i32 -327191879, label %523
    i32 86757696, label %525
    i32 1854008817, label %527
    i32 172669820, label %528
    i32 -1693490693, label %529
  ]

.backedge:                                        ; preds = %13, %529, %528, %527, %525, %523, %522, %520, %519, %518, %516, %504, %503, %493, %483, %482, %481, %480, %476, %475, %464, %454, %446, %444, %433, %423, %422, %412, %402, %401, %390, %380, %379, %378, %368, %358, %346, %344, %332, %322, %321, %310, %300, %296, %295, %294, %283, %273, %272, %262, %252, %251, %241, %231, %230, %209, %199, %197, %185, %175, %174, %170, %169, %168, %167, %148, %138, %135, %134, %132, %131, %112, %102, %100, %88, %78, %77, %75, %74, %64, %54, %51, %49, %37, %27, %14
  %.074.be = phi i32 [ %.074, %13 ], [ %.074, %529 ], [ %.074, %528 ], [ %.074, %527 ], [ %.074, %525 ], [ %.074, %523 ], [ %.074, %522 ], [ %.074, %520 ], [ %.074, %519 ], [ %.074, %518 ], [ %.074, %516 ], [ %.074, %504 ], [ %.074, %503 ], [ %.074, %493 ], [ %.074, %483 ], [ %.074, %482 ], [ %.074, %481 ], [ %.074, %480 ], [ %.074, %476 ], [ %.074, %475 ], [ %.074, %464 ], [ %.074, %454 ], [ %.074, %446 ], [ %.074, %444 ], [ %.074, %433 ], [ %.074, %423 ], [ %.074, %422 ], [ %.074, %412 ], [ %.074, %402 ], [ %.074, %401 ], [ %.074, %390 ], [ %.074, %380 ], [ %.074, %379 ], [ %.074, %378 ], [ %.074, %368 ], [ %.074, %358 ], [ %.074, %346 ], [ %.074, %344 ], [ %.074, %332 ], [ %.074, %322 ], [ %.074, %321 ], [ %.074, %310 ], [ %.074, %300 ], [ %.074, %296 ], [ %.074, %295 ], [ %.074, %294 ], [ %.074, %283 ], [ %.074, %273 ], [ %.074, %272 ], [ %.074, %262 ], [ %.074, %252 ], [ %.074, %251 ], [ %.074, %241 ], [ %.074, %231 ], [ %.074, %230 ], [ %.074, %209 ], [ %.074, %199 ], [ %.074, %197 ], [ %.074, %185 ], [ %.074, %175 ], [ %.074, %174 ], [ %.074, %170 ], [ %.074, %169 ], [ %.074, %168 ], [ %.074, %167 ], [ %.074, %148 ], [ %.074, %138 ], [ %.074, %135 ], [ %.074, %134 ], [ %133, %132 ], [ %.074, %131 ], [ %.074, %112 ], [ %.074, %102 ], [ %.074, %100 ], [ %.074, %88 ], [ %.074, %78 ], [ 1, %77 ], [ %.074, %75 ], [ %.074, %74 ], [ %.074, %64 ], [ %.074, %54 ], [ %.074, %51 ], [ %.074, %49 ], [ %.074, %37 ], [ %.074, %27 ], [ %.074, %14 ]
  %.072.be = phi i32 [ %.072, %13 ], [ %.072, %529 ], [ %.072, %528 ], [ %.072, %527 ], [ %.072, %525 ], [ %.072, %523 ], [ %.072, %522 ], [ %.072, %520 ], [ %.072, %519 ], [ %.072, %518 ], [ %.072, %516 ], [ %.072, %504 ], [ %.072, %503 ], [ %.072, %493 ], [ %.072, %483 ], [ %.072, %482 ], [ %.072, %481 ], [ %.072, %480 ], [ %.072, %476 ], [ %.072, %475 ], [ %.072, %464 ], [ %.072, %454 ], [ %.072, %446 ], [ %.072, %444 ], [ %.072, %433 ], [ %.072, %423 ], [ %.072, %422 ], [ %.072, %412 ], [ %.072, %402 ], [ %.072, %401 ], [ %.072, %390 ], [ %.072, %380 ], [ %.072, %379 ], [ %.072, %378 ], [ %.072, %368 ], [ %.072, %358 ], [ %.072, %346 ], [ %.072, %344 ], [ %.072, %332 ], [ %.072, %322 ], [ %.072, %321 ], [ %.072, %310 ], [ %.072, %300 ], [ %.072, %296 ], [ %.072, %295 ], [ %.072, %294 ], [ %.072, %283 ], [ %.072, %273 ], [ %.072, %272 ], [ %.072, %262 ], [ %.072, %252 ], [ %.072, %251 ], [ %.072, %241 ], [ %.072, %231 ], [ %.072, %230 ], [ %.072, %209 ], [ %.072, %199 ], [ %.072, %197 ], [ %.072, %185 ], [ %.072, %175 ], [ %.072, %174 ], [ %.072, %170 ], [ %.072, %169 ], [ %.neg79, %168 ], [ %.072, %167 ], [ %.072, %148 ], [ %.072, %138 ], [ %.072, %135 ], [ 1, %134 ], [ %.072, %132 ], [ %.072, %131 ], [ %.072, %112 ], [ %.072, %102 ], [ %.072, %100 ], [ %.072, %88 ], [ %.072, %78 ], [ %.072, %77 ], [ %.072, %75 ], [ %.072, %74 ], [ %.072, %64 ], [ %.072, %54 ], [ %.072, %51 ], [ %.072, %49 ], [ %.072, %37 ], [ %.072, %27 ], [ %.072, %14 ]
  %.070.be = phi i32 [ %.070, %13 ], [ %.070, %529 ], [ %.070, %528 ], [ %.070, %527 ], [ %.070, %525 ], [ %.070, %523 ], [ %.070, %522 ], [ %.070, %520 ], [ %.neg, %519 ], [ %.070, %518 ], [ %.070, %516 ], [ %.070, %504 ], [ %.070, %503 ], [ %.070, %493 ], [ %.070, %483 ], [ %.070, %482 ], [ %.070, %481 ], [ %.070, %480 ], [ %.070, %476 ], [ %.070, %475 ], [ %.070, %464 ], [ %.070, %454 ], [ %.070, %446 ], [ %.070, %444 ], [ %.070, %433 ], [ %.070, %423 ], [ %.070, %422 ], [ %.070, %412 ], [ %.070, %402 ], [ %.070, %401 ], [ %.070, %390 ], [ %.070, %380 ], [ %.070, %379 ], [ %.070, %378 ], [ %.070, %368 ], [ %.070, %358 ], [ %.070, %346 ], [ %.070, %344 ], [ %.070, %332 ], [ %.070, %322 ], [ %.070, %321 ], [ %.070, %310 ], [ %.070, %300 ], [ %.070, %296 ], [ %.070, %295 ], [ %.070, %294 ], [ %284, %283 ], [ %.070, %273 ], [ %.070, %272 ], [ %.070, %262 ], [ %.070, %252 ], [ %.070, %251 ], [ %.070, %241 ], [ %.070, %231 ], [ %.070, %230 ], [ %.070, %209 ], [ %.070, %199 ], [ %.070, %197 ], [ %.070, %185 ], [ %.070, %175 ], [ %.070, %174 ], [ %.070, %170 ], [ 0, %169 ], [ %.070, %168 ], [ %.070, %167 ], [ %.070, %148 ], [ %.070, %138 ], [ %.070, %135 ], [ %.070, %134 ], [ %.070, %132 ], [ %.070, %131 ], [ %.070, %112 ], [ %.070, %102 ], [ %.070, %100 ], [ %.070, %88 ], [ %.070, %78 ], [ %.070, %77 ], [ %.070, %75 ], [ %.070, %74 ], [ %.070, %64 ], [ %.070, %54 ], [ %.070, %51 ], [ %.070, %49 ], [ %.070, %37 ], [ %.070, %27 ], [ %.070, %14 ]
  %.068.be = phi i32 [ %.068, %13 ], [ %.068, %529 ], [ %.068, %528 ], [ %.068, %527 ], [ %.068, %525 ], [ %.068, %523 ], [ %.068, %522 ], [ %.068, %520 ], [ %.068, %519 ], [ %.068, %518 ], [ %517, %516 ], [ %.068, %504 ], [ %.068, %503 ], [ %.068, %493 ], [ %.068, %483 ], [ %.068, %482 ], [ %.068, %481 ], [ %.068, %480 ], [ %.068, %476 ], [ %.068, %475 ], [ %.068, %464 ], [ %.068, %454 ], [ %.068, %446 ], [ %.068, %444 ], [ %.068, %433 ], [ %.068, %423 ], [ %.068, %422 ], [ %.068, %412 ], [ %.068, %402 ], [ %.068, %401 ], [ %.068, %390 ], [ %.068, %380 ], [ %.068, %379 ], [ %.068, %378 ], [ %.068, %368 ], [ %.068, %358 ], [ %.068, %346 ], [ %.068, %344 ], [ %.068, %332 ], [ %.068, %322 ], [ %.068, %321 ], [ %.068, %310 ], [ %.068, %300 ], [ %.068, %296 ], [ %.068, %295 ], [ %.068, %294 ], [ %.068, %283 ], [ %.068, %273 ], [ %.068, %272 ], [ %.068, %262 ], [ %.068, %252 ], [ %.068, %251 ], [ %.neg77, %241 ], [ %.068, %231 ], [ %.068, %230 ], [ %.068, %209 ], [ %.068, %199 ], [ %.068, %197 ], [ %.068, %185 ], [ %.068, %175 ], [ %.neg78, %174 ], [ %.068, %170 ], [ %.068, %169 ], [ %.068, %168 ], [ %.068, %167 ], [ %.068, %148 ], [ %.068, %138 ], [ %.068, %135 ], [ %.068, %134 ], [ %.068, %132 ], [ %.068, %131 ], [ %.068, %112 ], [ %.068, %102 ], [ %.068, %100 ], [ %.068, %88 ], [ %.068, %78 ], [ %.068, %77 ], [ %.068, %75 ], [ %.068, %74 ], [ %.068, %64 ], [ %.068, %54 ], [ %.068, %51 ], [ %.068, %49 ], [ %.068, %37 ], [ %.068, %27 ], [ %.068, %14 ]
  %.066.be = phi i32 [ %.066, %13 ], [ %.066, %529 ], [ %.066, %528 ], [ %.066, %527 ], [ %526, %525 ], [ %.066, %523 ], [ %.066, %522 ], [ %.066, %520 ], [ %.066, %519 ], [ %.066, %518 ], [ %.066, %516 ], [ %.066, %504 ], [ %.066, %503 ], [ %.066, %493 ], [ %.066, %483 ], [ %.066, %482 ], [ %.066, %481 ], [ %.066, %480 ], [ %.066, %476 ], [ %.066, %475 ], [ %.066, %464 ], [ %.066, %454 ], [ %.066, %446 ], [ %.066, %444 ], [ %.066, %433 ], [ %.066, %423 ], [ %.066, %422 ], [ %.066, %412 ], [ %.066, %402 ], [ %.066, %401 ], [ %391, %390 ], [ %.066, %380 ], [ %.066, %379 ], [ %.066, %378 ], [ %.066, %368 ], [ %.066, %358 ], [ %.066, %346 ], [ %.066, %344 ], [ %.066, %332 ], [ %.066, %322 ], [ %.066, %321 ], [ %.066, %310 ], [ %.066, %300 ], [ %.066, %296 ], [ 0, %295 ], [ %.066, %294 ], [ %.066, %283 ], [ %.066, %273 ], [ %.066, %272 ], [ %.066, %262 ], [ %.066, %252 ], [ %.066, %251 ], [ %.066, %241 ], [ %.066, %231 ], [ %.066, %230 ], [ %.066, %209 ], [ %.066, %199 ], [ %.066, %197 ], [ %.066, %185 ], [ %.066, %175 ], [ %.066, %174 ], [ %.066, %170 ], [ %.066, %169 ], [ %.066, %168 ], [ %.066, %167 ], [ %.066, %148 ], [ %.066, %138 ], [ %.066, %135 ], [ %.066, %134 ], [ %.066, %132 ], [ %.066, %131 ], [ %.066, %112 ], [ %.066, %102 ], [ %.066, %100 ], [ %.066, %88 ], [ %.066, %78 ], [ %.066, %77 ], [ %.066, %75 ], [ %.066, %74 ], [ %.066, %64 ], [ %.066, %54 ], [ %.066, %51 ], [ %.066, %49 ], [ %.066, %37 ], [ %.066, %27 ], [ %.066, %14 ]
  %.064.be = phi i32 [ %.064, %13 ], [ %.064, %529 ], [ %.064, %528 ], [ %.064, %527 ], [ %.064, %525 ], [ %524, %523 ], [ %.064, %522 ], [ %521, %520 ], [ %.064, %519 ], [ %.064, %518 ], [ %.064, %516 ], [ %.064, %504 ], [ %.064, %503 ], [ %.064, %493 ], [ %.064, %483 ], [ %.064, %482 ], [ %.064, %481 ], [ %.064, %480 ], [ %.064, %476 ], [ %.064, %475 ], [ %.064, %464 ], [ %.064, %454 ], [ %.064, %446 ], [ %.064, %444 ], [ %.064, %433 ], [ %.064, %423 ], [ %.064, %422 ], [ %.064, %412 ], [ %.064, %402 ], [ %.064, %401 ], [ %.064, %390 ], [ %.064, %380 ], [ %.064, %379 ], [ %.064, %378 ], [ %.neg76, %368 ], [ %.064, %358 ], [ %.064, %346 ], [ %.064, %344 ], [ %.064, %332 ], [ %.064, %322 ], [ %.064, %321 ], [ %311, %310 ], [ %.064, %300 ], [ %.064, %296 ], [ %.064, %295 ], [ %.064, %294 ], [ %.064, %283 ], [ %.064, %273 ], [ %.064, %272 ], [ %.064, %262 ], [ %.064, %252 ], [ %.064, %251 ], [ %.064, %241 ], [ %.064, %231 ], [ %.064, %230 ], [ %.064, %209 ], [ %.064, %199 ], [ %.064, %197 ], [ %.064, %185 ], [ %.064, %175 ], [ %.064, %174 ], [ %.064, %170 ], [ %.064, %169 ], [ %.064, %168 ], [ %.064, %167 ], [ %.064, %148 ], [ %.064, %138 ], [ %.064, %135 ], [ %.064, %134 ], [ %.064, %132 ], [ %.064, %131 ], [ %.064, %112 ], [ %.064, %102 ], [ %.064, %100 ], [ %.064, %88 ], [ %.064, %78 ], [ %.064, %77 ], [ %.064, %75 ], [ %.064, %74 ], [ %.064, %64 ], [ %.064, %54 ], [ %.064, %51 ], [ %.064, %49 ], [ %.064, %37 ], [ %.064, %27 ], [ %.064, %14 ]
  %.062.be = phi i32 [ %.062, %13 ], [ %.062, %529 ], [ %.062, %528 ], [ 0, %527 ], [ %.062, %525 ], [ %.062, %523 ], [ %.062, %522 ], [ %.062, %520 ], [ %.062, %519 ], [ %.062, %518 ], [ %.062, %516 ], [ %.062, %504 ], [ %.062, %503 ], [ %.062, %493 ], [ %.062, %483 ], [ %.062, %482 ], [ %.062, %481 ], [ %.062, %480 ], [ %.062, %476 ], [ %.062, %475 ], [ %.062, %464 ], [ %.062, %454 ], [ %453, %446 ], [ %.062, %444 ], [ %.062, %433 ], [ %.062, %423 ], [ %.062, %422 ], [ 0, %412 ], [ %.062, %402 ], [ %.062, %401 ], [ %.062, %390 ], [ %.062, %380 ], [ %.062, %379 ], [ %.062, %378 ], [ %.062, %368 ], [ %.062, %358 ], [ %.062, %346 ], [ %.062, %344 ], [ %.062, %332 ], [ %.062, %322 ], [ %.062, %321 ], [ %.062, %310 ], [ %.062, %300 ], [ %.062, %296 ], [ %.062, %295 ], [ %.062, %294 ], [ %.062, %283 ], [ %.062, %273 ], [ %.062, %272 ], [ %.062, %262 ], [ %.062, %252 ], [ %.062, %251 ], [ %.062, %241 ], [ %.062, %231 ], [ %.062, %230 ], [ %.062, %209 ], [ %.062, %199 ], [ %.062, %197 ], [ %.062, %185 ], [ %.062, %175 ], [ %.062, %174 ], [ %.062, %170 ], [ %.062, %169 ], [ %.062, %168 ], [ %.062, %167 ], [ %.062, %148 ], [ %.062, %138 ], [ %.062, %135 ], [ %.062, %134 ], [ %.062, %132 ], [ %.062, %131 ], [ %.062, %112 ], [ %.062, %102 ], [ %.062, %100 ], [ %.062, %88 ], [ %.062, %78 ], [ %.062, %77 ], [ %.062, %75 ], [ %.062, %74 ], [ %.062, %64 ], [ %.062, %54 ], [ %.062, %51 ], [ %.062, %49 ], [ %.062, %37 ], [ %.062, %27 ], [ %.062, %14 ]
  %.060.be = phi i32 [ %.060, %13 ], [ %530, %529 ], [ %.060, %528 ], [ 1, %527 ], [ %.060, %525 ], [ %.060, %523 ], [ %.060, %522 ], [ %.060, %520 ], [ %.060, %519 ], [ %.060, %518 ], [ %.060, %516 ], [ %.060, %504 ], [ %.060, %503 ], [ %.060, %493 ], [ %.060, %483 ], [ %.060, %482 ], [ %.060, %481 ], [ %.060, %480 ], [ %.060, %476 ], [ %.060, %475 ], [ %465, %464 ], [ %.060, %454 ], [ %.060, %446 ], [ %.060, %444 ], [ %.060, %433 ], [ %.060, %423 ], [ %.060, %422 ], [ 1, %412 ], [ %.060, %402 ], [ %.060, %401 ], [ %.060, %390 ], [ %.060, %380 ], [ %.060, %379 ], [ %.060, %378 ], [ %.060, %368 ], [ %.060, %358 ], [ %.060, %346 ], [ %.060, %344 ], [ %.060, %332 ], [ %.060, %322 ], [ %.060, %321 ], [ %.060, %310 ], [ %.060, %300 ], [ %.060, %296 ], [ %.060, %295 ], [ %.060, %294 ], [ %.060, %283 ], [ %.060, %273 ], [ %.060, %272 ], [ %.060, %262 ], [ %.060, %252 ], [ %.060, %251 ], [ %.060, %241 ], [ %.060, %231 ], [ %.060, %230 ], [ %.060, %209 ], [ %.060, %199 ], [ %.060, %197 ], [ %.060, %185 ], [ %.060, %175 ], [ %.060, %174 ], [ %.060, %170 ], [ %.060, %169 ], [ %.060, %168 ], [ %.060, %167 ], [ %.060, %148 ], [ %.060, %138 ], [ %.060, %135 ], [ %.060, %134 ], [ %.060, %132 ], [ %.060, %131 ], [ %.060, %112 ], [ %.060, %102 ], [ %.060, %100 ], [ %.060, %88 ], [ %.060, %78 ], [ %.060, %77 ], [ %.060, %75 ], [ %.060, %74 ], [ %.060, %64 ], [ %.060, %54 ], [ %.060, %51 ], [ %.060, %49 ], [ %.060, %37 ], [ %.060, %27 ], [ %.060, %14 ]
  %.058.be = phi i32 [ %.058, %13 ], [ -689035761, %529 ], [ -1414530440, %528 ], [ 2124951605, %527 ], [ -883982041, %525 ], [ -1464130512, %523 ], [ -1078501072, %522 ], [ -2143037482, %520 ], [ 1394330783, %519 ], [ 130770332, %518 ], [ -299983338, %516 ], [ -604092667, %504 ], [ -246541063, %503 ], [ 2033082678, %493 ], [ 1228203614, %483 ], [ 299790886, %482 ], [ -1105010044, %481 ], [ -1311415228, %480 ], [ -2011439403, %476 ], [ -1686796920, %475 ], [ %474, %464 ], [ %463, %454 ], [ -1662043109, %446 ], [ %445, %444 ], [ %443, %433 ], [ %432, %423 ], [ -1686796920, %422 ], [ %421, %412 ], [ %411, %402 ], [ 1177637724, %401 ], [ %400, %390 ], [ %389, %380 ], [ -573723668, %379 ], [ 143456261, %378 ], [ %377, %368 ], [ %367, %358 ], [ 594326037, %346 ], [ %345, %344 ], [ %343, %332 ], [ %331, %322 ], [ 143456261, %321 ], [ %320, %310 ], [ %309, %300 ], [ %299, %296 ], [ 1177637724, %295 ], [ 1660136432, %294 ], [ %293, %283 ], [ %282, %273 ], [ 1174858769, %272 ], [ %271, %262 ], [ %261, %252 ], [ 1831852241, %251 ], [ %250, %241 ], [ %240, %231 ], [ 830237433, %230 ], [ %229, %209 ], [ %208, %199 ], [ %198, %197 ], [ %196, %185 ], [ %184, %175 ], [ 1831852241, %174 ], [ %173, %170 ], [ 1660136432, %169 ], [ 598928862, %168 ], [ -584802679, %167 ], [ %166, %148 ], [ %147, %138 ], [ %137, %135 ], [ 598928862, %134 ], [ -1521893268, %132 ], [ -829890852, %131 ], [ %130, %112 ], [ %111, %102 ], [ %101, %100 ], [ %99, %88 ], [ %87, %78 ], [ -1521893268, %77 ], [ %76, %75 ], [ 551486826, %74 ], [ %73, %64 ], [ %63, %54 ], [ -1481314125, %51 ], [ %50, %49 ], [ %48, %37 ], [ %36, %27 ], [ %26, %14 ]
  %.056.be = phi i1 [ %.056, %13 ], [ %.056, %529 ], [ %.056, %528 ], [ %.056, %527 ], [ %.056, %525 ], [ %.056, %523 ], [ %.056, %522 ], [ %.056, %520 ], [ %.056, %519 ], [ %.056, %518 ], [ %.056, %516 ], [ %.056, %504 ], [ %.056, %503 ], [ %.056, %493 ], [ %.056, %483 ], [ %.056, %482 ], [ %.056, %481 ], [ %.056, %480 ], [ %.056, %476 ], [ %.056, %475 ], [ %.056, %464 ], [ %.056, %454 ], [ %.056, %446 ], [ %.056, %444 ], [ %.056, %433 ], [ %.056, %423 ], [ %.056, %422 ], [ %.056, %412 ], [ %.056, %402 ], [ %.056, %401 ], [ %.056, %390 ], [ %.056, %380 ], [ %.056, %379 ], [ %.056, %378 ], [ %.056, %368 ], [ %.056, %358 ], [ %.056, %346 ], [ %.056, %344 ], [ %.056, %332 ], [ %.056, %322 ], [ %.056, %321 ], [ %.056, %310 ], [ %.056, %300 ], [ %.056, %296 ], [ %.056, %295 ], [ %.056, %294 ], [ %.056, %283 ], [ %.056, %273 ], [ %.056, %272 ], [ %.056, %262 ], [ %.056, %252 ], [ %.056, %251 ], [ %.056, %241 ], [ %.056, %231 ], [ %.056, %230 ], [ %.056, %209 ], [ %.056, %199 ], [ %.056, %197 ], [ %.056, %185 ], [ %.056, %175 ], [ %.056, %174 ], [ %.056, %170 ], [ %.056, %169 ], [ %.056, %168 ], [ %.056, %167 ], [ %.056, %148 ], [ %.056, %138 ], [ %.056, %135 ], [ %.056, %134 ], [ %.056, %132 ], [ %.056, %131 ], [ %.056, %112 ], [ %.056, %102 ], [ %.056, %100 ], [ %.056, %88 ], [ %.056, %78 ], [ %.056, %77 ], [ %.056, %75 ], [ %.056, %74 ], [ %.056, %64 ], [ %.056, %54 ], [ %53, %51 ], [ true, %49 ], [ %.056, %37 ], [ %.056, %27 ], [ %.056, %14 ]
  %.0.be = phi i1 [ %.0, %13 ], [ %.0, %529 ], [ %.0, %528 ], [ %.0, %527 ], [ %.0, %525 ], [ %.0, %523 ], [ %.0, %522 ], [ %.0, %520 ], [ %.0, %519 ], [ %.0, %518 ], [ %.0, %516 ], [ %.0, %504 ], [ %.0, %503 ], [ %.0, %493 ], [ %.0, %483 ], [ %.0, %482 ], [ %.0, %481 ], [ %.0, %480 ], [ %.0, %476 ], [ %.0, %475 ], [ %.0, %464 ], [ %.0, %454 ], [ %.0, %446 ], [ %.0, %444 ], [ %.0, %433 ], [ %.0, %423 ], [ %.0, %422 ], [ %.0, %412 ], [ %.0, %402 ], [ %.0, %401 ], [ %.0, %390 ], [ %.0, %380 ], [ %.0, %379 ], [ %.0, %378 ], [ %.0, %368 ], [ %.0, %358 ], [ %.0, %346 ], [ %.0, %344 ], [ %.0, %332 ], [ %.0, %322 ], [ %.0, %321 ], [ %.0, %310 ], [ %.0, %300 ], [ %.0, %296 ], [ %.0, %295 ], [ %.0, %294 ], [ %.0, %283 ], [ %.0, %273 ], [ %.0, %272 ], [ %.0, %262 ], [ %.0, %252 ], [ %.0, %251 ], [ %.0, %241 ], [ %.0, %231 ], [ %.0, %230 ], [ %.0, %209 ], [ %.0, %199 ], [ %.0, %197 ], [ %.0, %185 ], [ %.0, %175 ], [ %.0, %174 ], [ %.0, %170 ], [ %.0, %169 ], [ %.0, %168 ], [ %.0, %167 ], [ %.0, %148 ], [ %.0, %138 ], [ %.0, %135 ], [ %.0, %134 ], [ %.0, %132 ], [ %.0, %131 ], [ %.0, %112 ], [ %.0, %102 ], [ %.0, %100 ], [ %.0, %88 ], [ %.0, %78 ], [ %.0, %77 ], [ %.0, %75 ], [ %.0..0..0.55, %74 ], [ %.0, %64 ], [ %.0, %54 ], [ %.0, %51 ], [ %.0, %49 ], [ %.0, %37 ], [ %.0, %27 ], [ false, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %16 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %15, i32* nonnull dereferenceable(4) %8)
  %17 = bitcast %"class.std::basic_istream"* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 -24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::basic_istream"* %16 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = bitcast i8* %23 to %"class.std::basic_ios"*
  %25 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %24)
  %26 = select i1 %25, i32 -1865363310, i32 551486826
  br label %.backedge

27:                                               ; preds = %13
  %28 = load i32, i32* @x.1, align 4
  %29 = load i32, i32* @y.2, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -1311415228, i32 -895311629
  br label %.backedge

37:                                               ; preds = %13
  %38 = load i32, i32* %7, align 4
  %39 = icmp ne i32 %38, 0
  store i1 %39, i1* %6, align 1
  %40 = load i32, i32* @x.1, align 4
  %41 = load i32, i32* @y.2, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 316813405, i32 -895311629
  br label %.backedge

49:                                               ; preds = %13
  %.0..0..0.50 = load volatile i1, i1* %6, align 1
  %50 = select i1 %.0..0..0.50, i32 -1481314125, i32 866868868
  br label %.backedge

51:                                               ; preds = %13
  %52 = load i32, i32* %8, align 4
  %53 = icmp ne i32 %52, 0
  br label %.backedge

54:                                               ; preds = %13
  store i1 %.056, i1* %1, align 1
  %55 = load i32, i32* @x.1, align 4
  %56 = load i32, i32* @y.2, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 -1105010044, i32 2131457825
  br label %.backedge

64:                                               ; preds = %13
  %65 = load i32, i32* @x.1, align 4
  %66 = load i32, i32* @y.2, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 1476093208, i32 2131457825
  br label %.backedge

74:                                               ; preds = %13
  %.0..0..0.55 = load volatile i1, i1* %1, align 1
  br label %.backedge

75:                                               ; preds = %13
  %76 = select i1 %.0, i32 -1337487223, i32 -126307239
  br label %.backedge

77:                                               ; preds = %13
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(6004) %11, i8 0, i64 6004, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(6004) %12, i8 0, i64 6004, i1 false)
  br label %.backedge

78:                                               ; preds = %13
  %79 = load i32, i32* @x.1, align 4
  %80 = load i32, i32* @y.2, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 299790886, i32 -761729450
  br label %.backedge

88:                                               ; preds = %13
  %89 = load i32, i32* %7, align 4
  %90 = icmp sle i32 %.074, %89
  store i1 %90, i1* %5, align 1
  %91 = load i32, i32* @x.1, align 4
  %92 = load i32, i32* @y.2, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -103193324, i32 -761729450
  br label %.backedge

100:                                              ; preds = %13
  %.0..0..0.51 = load volatile i1, i1* %5, align 1
  %101 = select i1 %.0..0..0.51, i32 -1431689789, i32 -1365822083
  br label %.backedge

102:                                              ; preds = %13
  %103 = load i32, i32* @x.1, align 4
  %104 = load i32, i32* @y.2, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 1228203614, i32 82236890
  br label %.backedge

112:                                              ; preds = %13
  %113 = sext i32 %.074 to i64
  %114 = getelementptr inbounds [1501 x i32], [1501 x i32]* %9, i64 0, i64 %113
  %115 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %114)
  %116 = add i32 %.074, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [1501 x i32], [1501 x i32]* %9, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = load i32, i32* %114, align 4
  %121 = add i32 %120, %119
  store i32 %121, i32* %114, align 4
  %122 = load i32, i32* @x.1, align 4
  %123 = load i32, i32* @y.2, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 -721148138, i32 82236890
  br label %.backedge

131:                                              ; preds = %13
  br label %.backedge

132:                                              ; preds = %13
  %133 = add i32 %.074, 1
  br label %.backedge

134:                                              ; preds = %13
  br label %.backedge

135:                                              ; preds = %13
  %136 = load i32, i32* %8, align 4
  %.not = icmp sgt i32 %.072, %136
  %137 = select i1 %.not, i32 -1219282073, i32 877857647
  br label %.backedge

138:                                              ; preds = %13
  %139 = load i32, i32* @x.1, align 4
  %140 = load i32, i32* @y.2, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 2033082678, i32 756916944
  br label %.backedge

148:                                              ; preds = %13
  %149 = sext i32 %.072 to i64
  %150 = getelementptr inbounds [1501 x i32], [1501 x i32]* %10, i64 0, i64 %149
  %151 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %150)
  %152 = add i32 %.072, -1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [1501 x i32], [1501 x i32]* %10, i64 0, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = load i32, i32* %150, align 4
  %157 = add i32 %156, %155
  store i32 %157, i32* %150, align 4
  %158 = load i32, i32* @x.1, align 4
  %159 = load i32, i32* @y.2, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 1299999609, i32 756916944
  br label %.backedge

167:                                              ; preds = %13
  br label %.backedge

168:                                              ; preds = %13
  %.neg79 = add i32 %.072, 1
  br label %.backedge

169:                                              ; preds = %13
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(6000004) bitcast ([1500001 x i32]* @h_count to i8*), i8 0, i64 6000004, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(6000004) bitcast ([1500001 x i32]* @w_count to i8*), i8 0, i64 6000004, i1 false)
  br label %.backedge

170:                                              ; preds = %13
  %171 = load i32, i32* %7, align 4
  %172 = icmp slt i32 %.070, %171
  %173 = select i1 %172, i32 577071674, i32 -526589676
  br label %.backedge

174:                                              ; preds = %13
  %.neg78 = add i32 %.070, 1
  br label %.backedge

175:                                              ; preds = %13
  %176 = load i32, i32* @x.1, align 4
  %177 = load i32, i32* @y.2, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 -246541063, i32 637698506
  br label %.backedge

185:                                              ; preds = %13
  %186 = load i32, i32* %7, align 4
  %187 = icmp sle i32 %.068, %186
  store i1 %187, i1* %4, align 1
  %188 = load i32, i32* @x.1, align 4
  %189 = load i32, i32* @y.2, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 719126586, i32 637698506
  br label %.backedge

197:                                              ; preds = %13
  %.0..0..0.52 = load volatile i1, i1* %4, align 1
  %198 = select i1 %.0..0..0.52, i32 140040427, i32 1133532496
  br label %.backedge

199:                                              ; preds = %13
  %200 = load i32, i32* @x.1, align 4
  %201 = load i32, i32* @y.2, align 4
  %202 = add i32 %200, -1
  %203 = mul i32 %202, %200
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %206, %205
  %208 = select i1 %207, i32 -604092667, i32 -102027465
  br label %.backedge

209:                                              ; preds = %13
  %210 = sext i32 %.068 to i64
  %211 = getelementptr inbounds [1501 x i32], [1501 x i32]* %9, i64 0, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = sext i32 %.070 to i64
  %214 = getelementptr inbounds [1501 x i32], [1501 x i32]* %9, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = sub i32 %212, %215
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @h_count, i64 0, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = add i32 %219, 1
  store i32 %220, i32* %218, align 4
  %221 = load i32, i32* @x.1, align 4
  %222 = load i32, i32* @y.2, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 1749885612, i32 -102027465
  br label %.backedge

230:                                              ; preds = %13
  br label %.backedge

231:                                              ; preds = %13
  %232 = load i32, i32* @x.1, align 4
  %233 = load i32, i32* @y.2, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 -299983338, i32 -485705093
  br label %.backedge

241:                                              ; preds = %13
  %.neg77 = add i32 %.068, 1
  %242 = load i32, i32* @x.1, align 4
  %243 = load i32, i32* @y.2, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 -1133944759, i32 -485705093
  br label %.backedge

251:                                              ; preds = %13
  br label %.backedge

252:                                              ; preds = %13
  %253 = load i32, i32* @x.1, align 4
  %254 = load i32, i32* @y.2, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 130770332, i32 1800839060
  br label %.backedge

262:                                              ; preds = %13
  %263 = load i32, i32* @x.1, align 4
  %264 = load i32, i32* @y.2, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 1821902272, i32 1800839060
  br label %.backedge

272:                                              ; preds = %13
  br label %.backedge

273:                                              ; preds = %13
  %274 = load i32, i32* @x.1, align 4
  %275 = load i32, i32* @y.2, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 1394330783, i32 185044506
  br label %.backedge

283:                                              ; preds = %13
  %284 = add i32 %.070, 1
  %285 = load i32, i32* @x.1, align 4
  %286 = load i32, i32* @y.2, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 -1049389810, i32 185044506
  br label %.backedge

294:                                              ; preds = %13
  br label %.backedge

295:                                              ; preds = %13
  br label %.backedge

296:                                              ; preds = %13
  %297 = load i32, i32* %8, align 4
  %298 = icmp slt i32 %.066, %297
  %299 = select i1 %298, i32 1153763055, i32 -389861332
  br label %.backedge

300:                                              ; preds = %13
  %301 = load i32, i32* @x.1, align 4
  %302 = load i32, i32* @y.2, align 4
  %303 = add i32 %301, -1
  %304 = mul i32 %303, %301
  %305 = and i32 %304, 1
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %307, %306
  %309 = select i1 %308, i32 -2143037482, i32 2067487780
  br label %.backedge

310:                                              ; preds = %13
  %311 = add i32 %.066, 1
  %312 = load i32, i32* @x.1, align 4
  %313 = load i32, i32* @y.2, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 -874707043, i32 2067487780
  br label %.backedge

321:                                              ; preds = %13
  br label %.backedge

322:                                              ; preds = %13
  %323 = load i32, i32* @x.1, align 4
  %324 = load i32, i32* @y.2, align 4
  %325 = add i32 %323, -1
  %326 = mul i32 %325, %323
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %329, %328
  %331 = select i1 %330, i32 -1078501072, i32 297716170
  br label %.backedge

332:                                              ; preds = %13
  %333 = load i32, i32* %8, align 4
  %334 = icmp sle i32 %.064, %333
  store i1 %334, i1* %3, align 1
  %335 = load i32, i32* @x.1, align 4
  %336 = load i32, i32* @y.2, align 4
  %337 = add i32 %335, -1
  %338 = mul i32 %337, %335
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %341, %340
  %343 = select i1 %342, i32 -2106941651, i32 297716170
  br label %.backedge

344:                                              ; preds = %13
  %.0..0..0.53 = load volatile i1, i1* %3, align 1
  %345 = select i1 %.0..0..0.53, i32 863259971, i32 763775507
  br label %.backedge

346:                                              ; preds = %13
  %347 = sext i32 %.064 to i64
  %348 = getelementptr inbounds [1501 x i32], [1501 x i32]* %10, i64 0, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = sext i32 %.066 to i64
  %351 = getelementptr inbounds [1501 x i32], [1501 x i32]* %10, i64 0, i64 %350
  %352 = load i32, i32* %351, align 4
  %353 = sub i32 %349, %352
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @w_count, i64 0, i64 %354
  %356 = load i32, i32* %355, align 4
  %357 = add i32 %356, 1
  store i32 %357, i32* %355, align 4
  br label %.backedge

358:                                              ; preds = %13
  %359 = load i32, i32* @x.1, align 4
  %360 = load i32, i32* @y.2, align 4
  %361 = add i32 %359, -1
  %362 = mul i32 %361, %359
  %363 = and i32 %362, 1
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %365, %364
  %367 = select i1 %366, i32 -1464130512, i32 -327191879
  br label %.backedge

368:                                              ; preds = %13
  %.neg76 = add i32 %.064, 1
  %369 = load i32, i32* @x.1, align 4
  %370 = load i32, i32* @y.2, align 4
  %371 = add i32 %369, -1
  %372 = mul i32 %371, %369
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %375, %374
  %377 = select i1 %376, i32 -396345666, i32 -327191879
  br label %.backedge

378:                                              ; preds = %13
  br label %.backedge

379:                                              ; preds = %13
  br label %.backedge

380:                                              ; preds = %13
  %381 = load i32, i32* @x.1, align 4
  %382 = load i32, i32* @y.2, align 4
  %383 = add i32 %381, -1
  %384 = mul i32 %383, %381
  %385 = and i32 %384, 1
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %387, %386
  %389 = select i1 %388, i32 -883982041, i32 86757696
  br label %.backedge

390:                                              ; preds = %13
  %391 = add i32 %.066, 1
  %392 = load i32, i32* @x.1, align 4
  %393 = load i32, i32* @y.2, align 4
  %394 = add i32 %392, -1
  %395 = mul i32 %394, %392
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %398, %397
  %400 = select i1 %399, i32 -27181215, i32 86757696
  br label %.backedge

401:                                              ; preds = %13
  br label %.backedge

402:                                              ; preds = %13
  %403 = load i32, i32* @x.1, align 4
  %404 = load i32, i32* @y.2, align 4
  %405 = add i32 %403, -1
  %406 = mul i32 %405, %403
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %409, %408
  %411 = select i1 %410, i32 2124951605, i32 1854008817
  br label %.backedge

412:                                              ; preds = %13
  %413 = load i32, i32* @x.1, align 4
  %414 = load i32, i32* @y.2, align 4
  %415 = add i32 %413, -1
  %416 = mul i32 %415, %413
  %417 = and i32 %416, 1
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %419, %418
  %421 = select i1 %420, i32 1020172001, i32 1854008817
  br label %.backedge

422:                                              ; preds = %13
  br label %.backedge

423:                                              ; preds = %13
  %424 = load i32, i32* @x.1, align 4
  %425 = load i32, i32* @y.2, align 4
  %426 = add i32 %424, -1
  %427 = mul i32 %426, %424
  %428 = and i32 %427, 1
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %430, %429
  %432 = select i1 %431, i32 -1414530440, i32 172669820
  br label %.backedge

433:                                              ; preds = %13
  %434 = icmp slt i32 %.060, 1500001
  store i1 %434, i1* %2, align 1
  %435 = load i32, i32* @x.1, align 4
  %436 = load i32, i32* @y.2, align 4
  %437 = add i32 %435, -1
  %438 = mul i32 %437, %435
  %439 = and i32 %438, 1
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %441, %440
  %443 = select i1 %442, i32 -869131589, i32 172669820
  br label %.backedge

444:                                              ; preds = %13
  %.0..0..0.54 = load volatile i1, i1* %2, align 1
  %445 = select i1 %.0..0..0.54, i32 -626942506, i32 1699331252
  br label %.backedge

446:                                              ; preds = %13
  %447 = sext i32 %.060 to i64
  %448 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @h_count, i64 0, i64 %447
  %449 = load i32, i32* %448, align 4
  %450 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @w_count, i64 0, i64 %447
  %451 = load i32, i32* %450, align 4
  %452 = mul nsw i32 %451, %449
  %453 = add i32 %452, %.062
  br label %.backedge

454:                                              ; preds = %13
  %455 = load i32, i32* @x.1, align 4
  %456 = load i32, i32* @y.2, align 4
  %457 = add i32 %455, -1
  %458 = mul i32 %457, %455
  %459 = and i32 %458, 1
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %461, %460
  %463 = select i1 %462, i32 -689035761, i32 -1693490693
  br label %.backedge

464:                                              ; preds = %13
  %465 = add i32 %.060, 1
  %466 = load i32, i32* @x.1, align 4
  %467 = load i32, i32* @y.2, align 4
  %468 = add i32 %466, -1
  %469 = mul i32 %468, %466
  %470 = and i32 %469, 1
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %472, %471
  %474 = select i1 %473, i32 788617687, i32 -1693490693
  br label %.backedge

475:                                              ; preds = %13
  br label %.backedge

476:                                              ; preds = %13
  %477 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.062)
  %478 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %477, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

479:                                              ; preds = %13
  ret i32 0

480:                                              ; preds = %13
  br label %.backedge

481:                                              ; preds = %13
  br label %.backedge

482:                                              ; preds = %13
  br label %.backedge

483:                                              ; preds = %13
  %484 = sext i32 %.074 to i64
  %485 = getelementptr inbounds [1501 x i32], [1501 x i32]* %9, i64 0, i64 %484
  %486 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %485)
  %487 = add i32 %.074, -1
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [1501 x i32], [1501 x i32]* %9, i64 0, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = load i32, i32* %485, align 4
  %492 = add i32 %491, %490
  store i32 %492, i32* %485, align 4
  br label %.backedge

493:                                              ; preds = %13
  %494 = sext i32 %.072 to i64
  %495 = getelementptr inbounds [1501 x i32], [1501 x i32]* %10, i64 0, i64 %494
  %496 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %495)
  %497 = add i32 %.072, -1
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [1501 x i32], [1501 x i32]* %10, i64 0, i64 %498
  %500 = load i32, i32* %499, align 4
  %501 = load i32, i32* %495, align 4
  %502 = add i32 %501, %500
  store i32 %502, i32* %495, align 4
  br label %.backedge

503:                                              ; preds = %13
  br label %.backedge

504:                                              ; preds = %13
  %505 = sext i32 %.068 to i64
  %506 = getelementptr inbounds [1501 x i32], [1501 x i32]* %9, i64 0, i64 %505
  %507 = load i32, i32* %506, align 4
  %508 = sext i32 %.070 to i64
  %509 = getelementptr inbounds [1501 x i32], [1501 x i32]* %9, i64 0, i64 %508
  %510 = load i32, i32* %509, align 4
  %511 = sub i32 %507, %510
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds [1500001 x i32], [1500001 x i32]* @h_count, i64 0, i64 %512
  %514 = load i32, i32* %513, align 4
  %515 = add i32 %514, 1
  store i32 %515, i32* %513, align 4
  br label %.backedge

516:                                              ; preds = %13
  %517 = add i32 %.068, 1
  br label %.backedge

518:                                              ; preds = %13
  br label %.backedge

519:                                              ; preds = %13
  %.neg = add i32 %.070, 1
  br label %.backedge

520:                                              ; preds = %13
  %521 = add i32 %.066, 1
  br label %.backedge

522:                                              ; preds = %13
  br label %.backedge

523:                                              ; preds = %13
  %524 = add i32 %.064, 1
  br label %.backedge

525:                                              ; preds = %13
  %526 = add i32 %.066, 1
  br label %.backedge

527:                                              ; preds = %13
  br label %.backedge

528:                                              ; preds = %13
  br label %.backedge

529:                                              ; preds = %13
  %530 = add i32 %.060, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s951380713.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
