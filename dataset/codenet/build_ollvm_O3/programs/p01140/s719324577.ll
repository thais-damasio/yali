; ModuleID = 'build_ollvm/programs/p01140/s719324577.ll'
source_filename = "Project_CodeNet_C++1400/p01140/s719324577.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@m = global i32 0, align 4
@h = global [100100 x i64] zeroinitializer, align 16
@w = global [100100 x i64] zeroinitializer, align 16
@cnt = local_unnamed_addr global [2000000 x [2 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s719324577.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  br label %5

5:                                                ; preds = %.backedge, %0
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i64 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ 91170780, %0 ], [ %.056.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.056, label %.backedge [
    i32 91170780, label %6
    i32 1877763966, label %16
    i32 -406803124, label %37
    i32 1461541831, label %39
    i32 1926988153, label %49
    i32 -1959958784, label %63
    i32 2060434637, label %64
    i32 832923061, label %66
    i32 499212977, label %76
    i32 122897118, label %86
    i32 1295711597, label %87
    i32 -979579431, label %90
    i32 -1675703363, label %91
    i32 254121678, label %94
    i32 -1294911951, label %104
    i32 -1705196819, label %117
    i32 -1376140627, label %118
    i32 1267710173, label %119
    i32 -1421894908, label %120
    i32 200646977, label %130
    i32 -833818920, label %141
    i32 -648501935, label %142
    i32 -174214349, label %143
    i32 -309773093, label %147
    i32 2023098527, label %152
    i32 1390352716, label %161
    i32 1395525401, label %162
    i32 425272899, label %163
    i32 -966576213, label %164
    i32 410951136, label %174
    i32 270309824, label %186
    i32 6390795, label %188
    i32 -570318004, label %193
    i32 -1209315190, label %203
    i32 1064835820, label %221
    i32 -1827809546, label %222
    i32 -256284404, label %223
    i32 -435218608, label %225
    i32 1239386507, label %226
    i32 1958686721, label %236
    i32 1254289387, label %248
    i32 1943758460, label %250
    i32 -1345941699, label %260
    i32 36323491, label %277
    i32 1175383873, label %278
    i32 211508689, label %282
    i32 1264262610, label %292
    i32 -2077418235, label %294
    i32 -662663343, label %295
    i32 804990998, label %296
    i32 151134136, label %297
    i32 -1748661043, label %301
    i32 373659986, label %308
    i32 1242758165, label %312
    i32 2114001886, label %323
    i32 -1018766884, label %324
    i32 585218397, label %325
    i32 1519143470, label %326
    i32 -274747846, label %327
    i32 205898412, label %330
    i32 -1431959323, label %338
    i32 -2075204098, label %340
    i32 182086098, label %350
    i32 -1396737186, label %362
    i32 1683543864, label %363
    i32 346917438, label %364
    i32 -1574258879, label %376
    i32 -1934922987, label %377
    i32 1690952860, label %378
    i32 -2018596276, label %382
    i32 -658948749, label %383
    i32 466007221, label %384
    i32 1621809864, label %393
    i32 783950249, label %394
    i32 -1757602895, label %401
  ]

.backedge:                                        ; preds = %5, %401, %394, %393, %384, %383, %382, %378, %377, %376, %364, %362, %350, %340, %338, %330, %327, %326, %325, %324, %323, %312, %308, %301, %297, %296, %295, %294, %292, %282, %278, %277, %260, %250, %248, %236, %226, %225, %223, %222, %221, %203, %193, %188, %186, %174, %164, %163, %162, %161, %152, %147, %143, %142, %141, %130, %120, %119, %118, %117, %104, %94, %91, %90, %87, %86, %76, %66, %64, %63, %49, %39, %37, %16, %6
  %.076.be = phi i32 [ %.076, %5 ], [ %.076, %401 ], [ %.076, %394 ], [ %.076, %393 ], [ %.076, %384 ], [ %.076, %383 ], [ %.neg78, %382 ], [ %.076, %378 ], [ 0, %377 ], [ %.076, %376 ], [ %.076, %364 ], [ %.076, %362 ], [ %.076, %350 ], [ %.076, %340 ], [ %.076, %338 ], [ %.076, %330 ], [ %.076, %327 ], [ %.076, %326 ], [ %.076, %325 ], [ %.076, %324 ], [ %.076, %323 ], [ %.076, %312 ], [ %.076, %308 ], [ %.076, %301 ], [ %.076, %297 ], [ %.076, %296 ], [ %.076, %295 ], [ %.076, %294 ], [ %.076, %292 ], [ %.076, %282 ], [ %.076, %278 ], [ %.076, %277 ], [ %.076, %260 ], [ %.076, %250 ], [ %.076, %248 ], [ %.076, %236 ], [ %.076, %226 ], [ %.076, %225 ], [ %.076, %223 ], [ %.076, %222 ], [ %.076, %221 ], [ %.076, %203 ], [ %.076, %193 ], [ %.076, %188 ], [ %.076, %186 ], [ %.076, %174 ], [ %.076, %164 ], [ %.076, %163 ], [ %.076, %162 ], [ %.076, %161 ], [ %.076, %152 ], [ %.076, %147 ], [ %.076, %143 ], [ %.076, %142 ], [ %.076, %141 ], [ %131, %130 ], [ %.076, %120 ], [ %.076, %119 ], [ %.076, %118 ], [ %.076, %117 ], [ %.076, %104 ], [ %.076, %94 ], [ %.076, %91 ], [ %.076, %90 ], [ %.076, %87 ], [ %.076, %86 ], [ 0, %76 ], [ %.076, %66 ], [ %.076, %64 ], [ %.076, %63 ], [ %.076, %49 ], [ %.076, %39 ], [ %.076, %37 ], [ %.076, %16 ], [ %.076, %6 ]
  %.074.be = phi i32 [ %.074, %5 ], [ %.074, %401 ], [ %.074, %394 ], [ %.074, %393 ], [ %.074, %384 ], [ %.074, %383 ], [ %.074, %382 ], [ %.074, %378 ], [ %.074, %377 ], [ %.074, %376 ], [ %.074, %364 ], [ %.074, %362 ], [ %.074, %350 ], [ %.074, %340 ], [ %.074, %338 ], [ %.074, %330 ], [ %.074, %327 ], [ %.074, %326 ], [ %.074, %325 ], [ %.074, %324 ], [ %.074, %323 ], [ %.074, %312 ], [ %.074, %308 ], [ %.074, %301 ], [ %.074, %297 ], [ %.074, %296 ], [ %.074, %295 ], [ %.074, %294 ], [ %.074, %292 ], [ %.074, %282 ], [ %.074, %278 ], [ %.074, %277 ], [ %.074, %260 ], [ %.074, %250 ], [ %.074, %248 ], [ %.074, %236 ], [ %.074, %226 ], [ %.074, %225 ], [ %.074, %223 ], [ %.074, %222 ], [ %.074, %221 ], [ %.074, %203 ], [ %.074, %193 ], [ %.074, %188 ], [ %.074, %186 ], [ %.074, %174 ], [ %.074, %164 ], [ %.074, %163 ], [ %.074, %162 ], [ %.074, %161 ], [ %.074, %152 ], [ %.074, %147 ], [ %.074, %143 ], [ %.074, %142 ], [ %.074, %141 ], [ %.074, %130 ], [ %.074, %120 ], [ %.074, %119 ], [ %.neg86, %118 ], [ %.074, %117 ], [ %.074, %104 ], [ %.074, %94 ], [ %.074, %91 ], [ 0, %90 ], [ %.074, %87 ], [ %.074, %86 ], [ %.074, %76 ], [ %.074, %66 ], [ %.074, %64 ], [ %.074, %63 ], [ %.074, %49 ], [ %.074, %39 ], [ %.074, %37 ], [ %.074, %16 ], [ %.074, %6 ]
  %.072.be = phi i32 [ %.072, %5 ], [ %.072, %401 ], [ %.072, %394 ], [ %.072, %393 ], [ %.072, %384 ], [ %.072, %383 ], [ %.072, %382 ], [ %.072, %378 ], [ %.072, %377 ], [ %.072, %376 ], [ %.072, %364 ], [ %.072, %362 ], [ %.072, %350 ], [ %.072, %340 ], [ %.072, %338 ], [ %.072, %330 ], [ %.072, %327 ], [ %.072, %326 ], [ %.072, %325 ], [ %.072, %324 ], [ %.072, %323 ], [ %.072, %312 ], [ %.072, %308 ], [ %.072, %301 ], [ %.072, %297 ], [ %.072, %296 ], [ %.072, %295 ], [ %.072, %294 ], [ %.072, %292 ], [ %.072, %282 ], [ %.072, %278 ], [ %.072, %277 ], [ %.072, %260 ], [ %.072, %250 ], [ %.072, %248 ], [ %.072, %236 ], [ %.072, %226 ], [ %.072, %225 ], [ %.072, %223 ], [ %.072, %222 ], [ %.072, %221 ], [ %.072, %203 ], [ %.072, %193 ], [ %.072, %188 ], [ %.072, %186 ], [ %.072, %174 ], [ %.072, %164 ], [ %.072, %163 ], [ %.neg84, %162 ], [ %.072, %161 ], [ %.072, %152 ], [ %.072, %147 ], [ %.072, %143 ], [ 0, %142 ], [ %.072, %141 ], [ %.072, %130 ], [ %.072, %120 ], [ %.072, %119 ], [ %.072, %118 ], [ %.072, %117 ], [ %.072, %104 ], [ %.072, %94 ], [ %.072, %91 ], [ %.072, %90 ], [ %.072, %87 ], [ %.072, %86 ], [ %.072, %76 ], [ %.072, %66 ], [ %.072, %64 ], [ %.072, %63 ], [ %.072, %49 ], [ %.072, %39 ], [ %.072, %37 ], [ %.072, %16 ], [ %.072, %6 ]
  %.070.be = phi i32 [ %.070, %5 ], [ %.070, %401 ], [ %.070, %394 ], [ %.070, %393 ], [ %.070, %384 ], [ %.070, %383 ], [ %.070, %382 ], [ %.070, %378 ], [ %.070, %377 ], [ %.070, %376 ], [ %.070, %364 ], [ %.070, %362 ], [ %.070, %350 ], [ %.070, %340 ], [ %.070, %338 ], [ %.070, %330 ], [ %.070, %327 ], [ %.070, %326 ], [ %.070, %325 ], [ %.070, %324 ], [ %.070, %323 ], [ %.070, %312 ], [ %.070, %308 ], [ %.070, %301 ], [ %.070, %297 ], [ %.070, %296 ], [ %.070, %295 ], [ %.070, %294 ], [ %.070, %292 ], [ %.070, %282 ], [ %.070, %278 ], [ %.070, %277 ], [ %.070, %260 ], [ %.070, %250 ], [ %.070, %248 ], [ %.070, %236 ], [ %.070, %226 ], [ %.070, %225 ], [ %224, %223 ], [ %.070, %222 ], [ %.070, %221 ], [ %.070, %203 ], [ %.070, %193 ], [ %.070, %188 ], [ %.070, %186 ], [ %.070, %174 ], [ %.070, %164 ], [ 0, %163 ], [ %.070, %162 ], [ %.070, %161 ], [ %.070, %152 ], [ %.070, %147 ], [ %.070, %143 ], [ %.070, %142 ], [ %.070, %141 ], [ %.070, %130 ], [ %.070, %120 ], [ %.070, %119 ], [ %.070, %118 ], [ %.070, %117 ], [ %.070, %104 ], [ %.070, %94 ], [ %.070, %91 ], [ %.070, %90 ], [ %.070, %87 ], [ %.070, %86 ], [ %.070, %76 ], [ %.070, %66 ], [ %.070, %64 ], [ %.070, %63 ], [ %.070, %49 ], [ %.070, %39 ], [ %.070, %37 ], [ %.070, %16 ], [ %.070, %6 ]
  %.068.be = phi i32 [ %.068, %5 ], [ %.068, %401 ], [ %.068, %394 ], [ %.068, %393 ], [ %.068, %384 ], [ %.068, %383 ], [ %.068, %382 ], [ %.068, %378 ], [ %.068, %377 ], [ %.068, %376 ], [ %.068, %364 ], [ %.068, %362 ], [ %.068, %350 ], [ %.068, %340 ], [ %.068, %338 ], [ %.068, %330 ], [ %.068, %327 ], [ %.068, %326 ], [ %.068, %325 ], [ %.068, %324 ], [ %.068, %323 ], [ %.068, %312 ], [ %.068, %308 ], [ %.068, %301 ], [ %.068, %297 ], [ %.068, %296 ], [ %.neg82, %295 ], [ %.068, %294 ], [ %.068, %292 ], [ %.068, %282 ], [ %.068, %278 ], [ %.068, %277 ], [ %.068, %260 ], [ %.068, %250 ], [ %.068, %248 ], [ %.068, %236 ], [ %.068, %226 ], [ 0, %225 ], [ %.068, %223 ], [ %.068, %222 ], [ %.068, %221 ], [ %.068, %203 ], [ %.068, %193 ], [ %.068, %188 ], [ %.068, %186 ], [ %.068, %174 ], [ %.068, %164 ], [ %.068, %163 ], [ %.068, %162 ], [ %.068, %161 ], [ %.068, %152 ], [ %.068, %147 ], [ %.068, %143 ], [ %.068, %142 ], [ %.068, %141 ], [ %.068, %130 ], [ %.068, %120 ], [ %.068, %119 ], [ %.068, %118 ], [ %.068, %117 ], [ %.068, %104 ], [ %.068, %94 ], [ %.068, %91 ], [ %.068, %90 ], [ %.068, %87 ], [ %.068, %86 ], [ %.068, %76 ], [ %.068, %66 ], [ %.068, %64 ], [ %.068, %63 ], [ %.068, %49 ], [ %.068, %39 ], [ %.068, %37 ], [ %.068, %16 ], [ %.068, %6 ]
  %.066.be = phi i32 [ %.066, %5 ], [ %.066, %401 ], [ %400, %394 ], [ %.066, %393 ], [ %.066, %384 ], [ %.066, %383 ], [ %.066, %382 ], [ %.066, %378 ], [ %.066, %377 ], [ %.066, %376 ], [ %.066, %364 ], [ %.066, %362 ], [ %.066, %350 ], [ %.066, %340 ], [ %.066, %338 ], [ %.066, %330 ], [ %.066, %327 ], [ %.066, %326 ], [ %.066, %325 ], [ %.066, %324 ], [ %.066, %323 ], [ %.066, %312 ], [ %.066, %308 ], [ %.066, %301 ], [ %.066, %297 ], [ %.066, %296 ], [ %.066, %295 ], [ %.066, %294 ], [ %293, %292 ], [ %.066, %282 ], [ %.066, %278 ], [ %.066, %277 ], [ %267, %260 ], [ %.066, %250 ], [ %.066, %248 ], [ %.066, %236 ], [ %.066, %226 ], [ %.066, %225 ], [ %.066, %223 ], [ %.066, %222 ], [ %.066, %221 ], [ %.066, %203 ], [ %.066, %193 ], [ %.066, %188 ], [ %.066, %186 ], [ %.066, %174 ], [ %.066, %164 ], [ %.066, %163 ], [ %.066, %162 ], [ %.066, %161 ], [ %.066, %152 ], [ %.066, %147 ], [ %.066, %143 ], [ %.066, %142 ], [ %.066, %141 ], [ %.066, %130 ], [ %.066, %120 ], [ %.066, %119 ], [ %.066, %118 ], [ %.066, %117 ], [ %.066, %104 ], [ %.066, %94 ], [ %.066, %91 ], [ %.066, %90 ], [ %.066, %87 ], [ %.066, %86 ], [ %.066, %76 ], [ %.066, %66 ], [ %.066, %64 ], [ %.066, %63 ], [ %.066, %49 ], [ %.066, %39 ], [ %.066, %37 ], [ %.066, %16 ], [ %.066, %6 ]
  %.064.be = phi i32 [ %.064, %5 ], [ %.064, %401 ], [ %.064, %394 ], [ %.064, %393 ], [ %.064, %384 ], [ %.064, %383 ], [ %.064, %382 ], [ %.064, %378 ], [ %.064, %377 ], [ %.064, %376 ], [ %.064, %364 ], [ %.064, %362 ], [ %.064, %350 ], [ %.064, %340 ], [ %.064, %338 ], [ %.064, %330 ], [ %.064, %327 ], [ %.064, %326 ], [ %.neg79, %325 ], [ %.064, %324 ], [ %.064, %323 ], [ %.064, %312 ], [ %.064, %308 ], [ %.064, %301 ], [ %.064, %297 ], [ 0, %296 ], [ %.064, %295 ], [ %.064, %294 ], [ %.064, %292 ], [ %.064, %282 ], [ %.064, %278 ], [ %.064, %277 ], [ %.064, %260 ], [ %.064, %250 ], [ %.064, %248 ], [ %.064, %236 ], [ %.064, %226 ], [ %.064, %225 ], [ %.064, %223 ], [ %.064, %222 ], [ %.064, %221 ], [ %.064, %203 ], [ %.064, %193 ], [ %.064, %188 ], [ %.064, %186 ], [ %.064, %174 ], [ %.064, %164 ], [ %.064, %163 ], [ %.064, %162 ], [ %.064, %161 ], [ %.064, %152 ], [ %.064, %147 ], [ %.064, %143 ], [ %.064, %142 ], [ %.064, %141 ], [ %.064, %130 ], [ %.064, %120 ], [ %.064, %119 ], [ %.064, %118 ], [ %.064, %117 ], [ %.064, %104 ], [ %.064, %94 ], [ %.064, %91 ], [ %.064, %90 ], [ %.064, %87 ], [ %.064, %86 ], [ %.064, %76 ], [ %.064, %66 ], [ %.064, %64 ], [ %.064, %63 ], [ %.064, %49 ], [ %.064, %39 ], [ %.064, %37 ], [ %.064, %16 ], [ %.064, %6 ]
  %.062.be = phi i32 [ %.062, %5 ], [ %.062, %401 ], [ %.062, %394 ], [ %.062, %393 ], [ %.062, %384 ], [ %.062, %383 ], [ %.062, %382 ], [ %.062, %378 ], [ %.062, %377 ], [ %.062, %376 ], [ %.062, %364 ], [ %.062, %362 ], [ %.062, %350 ], [ %.062, %340 ], [ %.062, %338 ], [ %.062, %330 ], [ %.062, %327 ], [ %.062, %326 ], [ %.062, %325 ], [ %.062, %324 ], [ %.neg80, %323 ], [ %.062, %312 ], [ %.062, %308 ], [ %.neg81, %301 ], [ %.062, %297 ], [ %.062, %296 ], [ %.062, %295 ], [ %.062, %294 ], [ %.062, %292 ], [ %.062, %282 ], [ %.062, %278 ], [ %.062, %277 ], [ %.062, %260 ], [ %.062, %250 ], [ %.062, %248 ], [ %.062, %236 ], [ %.062, %226 ], [ %.062, %225 ], [ %.062, %223 ], [ %.062, %222 ], [ %.062, %221 ], [ %.062, %203 ], [ %.062, %193 ], [ %.062, %188 ], [ %.062, %186 ], [ %.062, %174 ], [ %.062, %164 ], [ %.062, %163 ], [ %.062, %162 ], [ %.062, %161 ], [ %.062, %152 ], [ %.062, %147 ], [ %.062, %143 ], [ %.062, %142 ], [ %.062, %141 ], [ %.062, %130 ], [ %.062, %120 ], [ %.062, %119 ], [ %.062, %118 ], [ %.062, %117 ], [ %.062, %104 ], [ %.062, %94 ], [ %.062, %91 ], [ %.062, %90 ], [ %.062, %87 ], [ %.062, %86 ], [ %.062, %76 ], [ %.062, %66 ], [ %.062, %64 ], [ %.062, %63 ], [ %.062, %49 ], [ %.062, %39 ], [ %.062, %37 ], [ %.062, %16 ], [ %.062, %6 ]
  %.060.be = phi i64 [ %.060, %5 ], [ %.060, %401 ], [ %.060, %394 ], [ %.060, %393 ], [ %.060, %384 ], [ %.060, %383 ], [ %.060, %382 ], [ %.060, %378 ], [ %.060, %377 ], [ %.060, %376 ], [ %.060, %364 ], [ %.060, %362 ], [ %.060, %350 ], [ %.060, %340 ], [ %.060, %338 ], [ %337, %330 ], [ %.060, %327 ], [ 0, %326 ], [ %.060, %325 ], [ %.060, %324 ], [ %.060, %323 ], [ %.060, %312 ], [ %.060, %308 ], [ %.060, %301 ], [ %.060, %297 ], [ %.060, %296 ], [ %.060, %295 ], [ %.060, %294 ], [ %.060, %292 ], [ %.060, %282 ], [ %.060, %278 ], [ %.060, %277 ], [ %.060, %260 ], [ %.060, %250 ], [ %.060, %248 ], [ %.060, %236 ], [ %.060, %226 ], [ %.060, %225 ], [ %.060, %223 ], [ %.060, %222 ], [ %.060, %221 ], [ %.060, %203 ], [ %.060, %193 ], [ %.060, %188 ], [ %.060, %186 ], [ %.060, %174 ], [ %.060, %164 ], [ %.060, %163 ], [ %.060, %162 ], [ %.060, %161 ], [ %.060, %152 ], [ %.060, %147 ], [ %.060, %143 ], [ %.060, %142 ], [ %.060, %141 ], [ %.060, %130 ], [ %.060, %120 ], [ %.060, %119 ], [ %.060, %118 ], [ %.060, %117 ], [ %.060, %104 ], [ %.060, %94 ], [ %.060, %91 ], [ %.060, %90 ], [ %.060, %87 ], [ %.060, %86 ], [ %.060, %76 ], [ %.060, %66 ], [ %.060, %64 ], [ %.060, %63 ], [ %.060, %49 ], [ %.060, %39 ], [ %.060, %37 ], [ %.060, %16 ], [ %.060, %6 ]
  %.058.be = phi i32 [ %.058, %5 ], [ %.058, %401 ], [ %.058, %394 ], [ %.058, %393 ], [ %.058, %384 ], [ %.058, %383 ], [ %.058, %382 ], [ %.058, %378 ], [ %.058, %377 ], [ %.058, %376 ], [ %.058, %364 ], [ %.058, %362 ], [ %.058, %350 ], [ %.058, %340 ], [ %339, %338 ], [ %.058, %330 ], [ %.058, %327 ], [ 0, %326 ], [ %.058, %325 ], [ %.058, %324 ], [ %.058, %323 ], [ %.058, %312 ], [ %.058, %308 ], [ %.058, %301 ], [ %.058, %297 ], [ %.058, %296 ], [ %.058, %295 ], [ %.058, %294 ], [ %.058, %292 ], [ %.058, %282 ], [ %.058, %278 ], [ %.058, %277 ], [ %.058, %260 ], [ %.058, %250 ], [ %.058, %248 ], [ %.058, %236 ], [ %.058, %226 ], [ %.058, %225 ], [ %.058, %223 ], [ %.058, %222 ], [ %.058, %221 ], [ %.058, %203 ], [ %.058, %193 ], [ %.058, %188 ], [ %.058, %186 ], [ %.058, %174 ], [ %.058, %164 ], [ %.058, %163 ], [ %.058, %162 ], [ %.058, %161 ], [ %.058, %152 ], [ %.058, %147 ], [ %.058, %143 ], [ %.058, %142 ], [ %.058, %141 ], [ %.058, %130 ], [ %.058, %120 ], [ %.058, %119 ], [ %.058, %118 ], [ %.058, %117 ], [ %.058, %104 ], [ %.058, %94 ], [ %.058, %91 ], [ %.058, %90 ], [ %.058, %87 ], [ %.058, %86 ], [ %.058, %76 ], [ %.058, %66 ], [ %.058, %64 ], [ %.058, %63 ], [ %.058, %49 ], [ %.058, %39 ], [ %.058, %37 ], [ %.058, %16 ], [ %.058, %6 ]
  %.056.be = phi i32 [ %.056, %5 ], [ 182086098, %401 ], [ -1345941699, %394 ], [ 1958686721, %393 ], [ -1209315190, %384 ], [ 410951136, %383 ], [ 200646977, %382 ], [ -1294911951, %378 ], [ 499212977, %377 ], [ 1926988153, %376 ], [ 1877763966, %364 ], [ 91170780, %362 ], [ %361, %350 ], [ %349, %340 ], [ -274747846, %338 ], [ -1431959323, %330 ], [ %329, %327 ], [ -274747846, %326 ], [ 151134136, %325 ], [ 585218397, %324 ], [ 373659986, %323 ], [ 2114001886, %312 ], [ %311, %308 ], [ 373659986, %301 ], [ %300, %297 ], [ 151134136, %296 ], [ 1239386507, %295 ], [ -662663343, %294 ], [ 1175383873, %292 ], [ 1264262610, %282 ], [ %281, %278 ], [ 1175383873, %277 ], [ %276, %260 ], [ %259, %250 ], [ %249, %248 ], [ %247, %236 ], [ %235, %226 ], [ 1239386507, %225 ], [ -966576213, %223 ], [ -256284404, %222 ], [ -1827809546, %221 ], [ %220, %203 ], [ %202, %193 ], [ %192, %188 ], [ %187, %186 ], [ %185, %174 ], [ %173, %164 ], [ -966576213, %163 ], [ -174214349, %162 ], [ 1395525401, %161 ], [ 1390352716, %152 ], [ %151, %147 ], [ %146, %143 ], [ -174214349, %142 ], [ 1295711597, %141 ], [ %140, %130 ], [ %129, %120 ], [ -1421894908, %119 ], [ -1675703363, %118 ], [ -1376140627, %117 ], [ %116, %104 ], [ %103, %94 ], [ %93, %91 ], [ -1675703363, %90 ], [ %89, %87 ], [ 1295711597, %86 ], [ %85, %76 ], [ %75, %66 ], [ %65, %64 ], [ 2060434637, %63 ], [ %62, %49 ], [ %48, %39 ], [ %38, %37 ], [ %36, %16 ], [ %15, %6 ]
  %.0.be = phi i1 [ %.0, %5 ], [ %.0, %401 ], [ %.0, %394 ], [ %.0, %393 ], [ %.0, %384 ], [ %.0, %383 ], [ %.0, %382 ], [ %.0, %378 ], [ %.0, %377 ], [ %.0, %376 ], [ %.0, %364 ], [ %.0, %362 ], [ %.0, %350 ], [ %.0, %340 ], [ %.0, %338 ], [ %.0, %330 ], [ %.0, %327 ], [ %.0, %326 ], [ %.0, %325 ], [ %.0, %324 ], [ %.0, %323 ], [ %.0, %312 ], [ %.0, %308 ], [ %.0, %301 ], [ %.0, %297 ], [ %.0, %296 ], [ %.0, %295 ], [ %.0, %294 ], [ %.0, %292 ], [ %.0, %282 ], [ %.0, %278 ], [ %.0, %277 ], [ %.0, %260 ], [ %.0, %250 ], [ %.0, %248 ], [ %.0, %236 ], [ %.0, %226 ], [ %.0, %225 ], [ %.0, %223 ], [ %.0, %222 ], [ %.0, %221 ], [ %.0, %203 ], [ %.0, %193 ], [ %.0, %188 ], [ %.0, %186 ], [ %.0, %174 ], [ %.0, %164 ], [ %.0, %163 ], [ %.0, %162 ], [ %.0, %161 ], [ %.0, %152 ], [ %.0, %147 ], [ %.0, %143 ], [ %.0, %142 ], [ %.0, %141 ], [ %.0, %130 ], [ %.0, %120 ], [ %.0, %119 ], [ %.0, %118 ], [ %.0, %117 ], [ %.0, %104 ], [ %.0, %94 ], [ %.0, %91 ], [ %.0, %90 ], [ %.0, %87 ], [ %.0, %86 ], [ %.0, %76 ], [ %.0, %66 ], [ %.0, %64 ], [ %.0..0..0.53, %63 ], [ %.0, %49 ], [ %.0, %39 ], [ false, %37 ], [ %.0, %16 ], [ %.0, %6 ]
  br label %5

6:                                                ; preds = %5
  %7 = load i32, i32* @x.1, align 4
  %8 = load i32, i32* @y.2, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1877763966, i32 346917438
  br label %.backedge

16:                                               ; preds = %5
  %17 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  %18 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %17, i32* nonnull dereferenceable(4) @m)
  %19 = bitcast %"class.std::basic_istream"* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::basic_istream"* %18 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = bitcast i8* %25 to %"class.std::basic_ios"*
  %27 = tail call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %26)
  store i1 %27, i1* %4, align 1
  %28 = load i32, i32* @x.1, align 4
  %29 = load i32, i32* @y.2, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -406803124, i32 346917438
  br label %.backedge

37:                                               ; preds = %5
  %.0..0..0.52 = load volatile i1, i1* %4, align 1
  %38 = select i1 %.0..0..0.52, i32 1461541831, i32 2060434637
  br label %.backedge

39:                                               ; preds = %5
  %40 = load i32, i32* @x.1, align 4
  %41 = load i32, i32* @y.2, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 1926988153, i32 -1574258879
  br label %.backedge

49:                                               ; preds = %5
  %50 = load i32, i32* @n, align 4
  %51 = load i32, i32* @m, align 4
  %52 = sub i32 0, %51
  %53 = icmp ne i32 %50, %52
  store i1 %53, i1* %3, align 1
  %54 = load i32, i32* @x.1, align 4
  %55 = load i32, i32* @y.2, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -1959958784, i32 -1574258879
  br label %.backedge

63:                                               ; preds = %5
  %.0..0..0.53 = load volatile i1, i1* %3, align 1
  br label %.backedge

64:                                               ; preds = %5
  %65 = select i1 %.0, i32 832923061, i32 1683543864
  br label %.backedge

66:                                               ; preds = %5
  %67 = load i32, i32* @x.1, align 4
  %68 = load i32, i32* @y.2, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 499212977, i32 -1934922987
  br label %.backedge

76:                                               ; preds = %5
  %77 = load i32, i32* @x.1, align 4
  %78 = load i32, i32* @y.2, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 122897118, i32 -1934922987
  br label %.backedge

86:                                               ; preds = %5
  br label %.backedge

87:                                               ; preds = %5
  %88 = icmp slt i32 %.076, 2000000
  %89 = select i1 %88, i32 -979579431, i32 -648501935
  br label %.backedge

90:                                               ; preds = %5
  br label %.backedge

91:                                               ; preds = %5
  %92 = icmp slt i32 %.074, 2
  %93 = select i1 %92, i32 254121678, i32 1267710173
  br label %.backedge

94:                                               ; preds = %5
  %95 = load i32, i32* @x.1, align 4
  %96 = load i32, i32* @y.2, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -1294911951, i32 1690952860
  br label %.backedge

104:                                              ; preds = %5
  %105 = sext i32 %.076 to i64
  %106 = sext i32 %.074 to i64
  %107 = getelementptr inbounds [2000000 x [2 x i64]], [2000000 x [2 x i64]]* @cnt, i64 0, i64 %105, i64 %106
  store i64 0, i64* %107, align 8
  %108 = load i32, i32* @x.1, align 4
  %109 = load i32, i32* @y.2, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -1705196819, i32 1690952860
  br label %.backedge

117:                                              ; preds = %5
  br label %.backedge

118:                                              ; preds = %5
  %.neg86 = add i32 %.074, 1
  br label %.backedge

119:                                              ; preds = %5
  br label %.backedge

120:                                              ; preds = %5
  %121 = load i32, i32* @x.1, align 4
  %122 = load i32, i32* @y.2, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 200646977, i32 -2018596276
  br label %.backedge

130:                                              ; preds = %5
  %131 = add i32 %.076, 1
  %132 = load i32, i32* @x.1, align 4
  %133 = load i32, i32* @y.2, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 -833818920, i32 -2018596276
  br label %.backedge

141:                                              ; preds = %5
  br label %.backedge

142:                                              ; preds = %5
  br label %.backedge

143:                                              ; preds = %5
  %144 = load i32, i32* @n, align 4
  %145 = icmp slt i32 %.072, %144
  %146 = select i1 %145, i32 -309773093, i32 425272899
  br label %.backedge

147:                                              ; preds = %5
  %148 = sext i32 %.072 to i64
  %149 = getelementptr inbounds [100100 x i64], [100100 x i64]* @h, i64 0, i64 %148
  %150 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %149)
  %.not85 = icmp eq i32 %.072, 0
  %151 = select i1 %.not85, i32 1390352716, i32 2023098527
  br label %.backedge

152:                                              ; preds = %5
  %153 = add i32 %.072, -1
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [100100 x i64], [100100 x i64]* @h, i64 0, i64 %154
  %156 = load i64, i64* %155, align 8
  %157 = sext i32 %.072 to i64
  %158 = getelementptr inbounds [100100 x i64], [100100 x i64]* @h, i64 0, i64 %157
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, %156
  store i64 %160, i64* %158, align 8
  br label %.backedge

161:                                              ; preds = %5
  br label %.backedge

162:                                              ; preds = %5
  %.neg84 = add i32 %.072, 1
  br label %.backedge

163:                                              ; preds = %5
  br label %.backedge

164:                                              ; preds = %5
  %165 = load i32, i32* @x.1, align 4
  %166 = load i32, i32* @y.2, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 410951136, i32 -658948749
  br label %.backedge

174:                                              ; preds = %5
  %175 = load i32, i32* @m, align 4
  %176 = icmp slt i32 %.070, %175
  store i1 %176, i1* %2, align 1
  %177 = load i32, i32* @x.1, align 4
  %178 = load i32, i32* @y.2, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 270309824, i32 -658948749
  br label %.backedge

186:                                              ; preds = %5
  %.0..0..0.54 = load volatile i1, i1* %2, align 1
  %187 = select i1 %.0..0..0.54, i32 6390795, i32 -435218608
  br label %.backedge

188:                                              ; preds = %5
  %189 = sext i32 %.070 to i64
  %190 = getelementptr inbounds [100100 x i64], [100100 x i64]* @w, i64 0, i64 %189
  %191 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %190)
  %.not = icmp eq i32 %.070, 0
  %192 = select i1 %.not, i32 -1827809546, i32 -570318004
  br label %.backedge

193:                                              ; preds = %5
  %194 = load i32, i32* @x.1, align 4
  %195 = load i32, i32* @y.2, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 -1209315190, i32 466007221
  br label %.backedge

203:                                              ; preds = %5
  %204 = add i32 %.070, -1
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [100100 x i64], [100100 x i64]* @w, i64 0, i64 %205
  %207 = load i64, i64* %206, align 8
  %208 = sext i32 %.070 to i64
  %209 = getelementptr inbounds [100100 x i64], [100100 x i64]* @w, i64 0, i64 %208
  %210 = load i64, i64* %209, align 8
  %211 = add i64 %210, %207
  store i64 %211, i64* %209, align 8
  %212 = load i32, i32* @x.1, align 4
  %213 = load i32, i32* @y.2, align 4
  %214 = add i32 %212, -1
  %215 = mul i32 %214, %212
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %218, %217
  %220 = select i1 %219, i32 1064835820, i32 466007221
  br label %.backedge

221:                                              ; preds = %5
  br label %.backedge

222:                                              ; preds = %5
  br label %.backedge

223:                                              ; preds = %5
  %224 = add i32 %.070, 1
  br label %.backedge

225:                                              ; preds = %5
  br label %.backedge

226:                                              ; preds = %5
  %227 = load i32, i32* @x.1, align 4
  %228 = load i32, i32* @y.2, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 1958686721, i32 1621809864
  br label %.backedge

236:                                              ; preds = %5
  %237 = load i32, i32* @n, align 4
  %238 = icmp slt i32 %.068, %237
  store i1 %238, i1* %1, align 1
  %239 = load i32, i32* @x.1, align 4
  %240 = load i32, i32* @y.2, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 1254289387, i32 1621809864
  br label %.backedge

248:                                              ; preds = %5
  %.0..0..0.55 = load volatile i1, i1* %1, align 1
  %249 = select i1 %.0..0..0.55, i32 1943758460, i32 804990998
  br label %.backedge

250:                                              ; preds = %5
  %251 = load i32, i32* @x.1, align 4
  %252 = load i32, i32* @y.2, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 -1345941699, i32 783950249
  br label %.backedge

260:                                              ; preds = %5
  %261 = sext i32 %.068 to i64
  %262 = getelementptr inbounds [100100 x i64], [100100 x i64]* @h, i64 0, i64 %261
  %263 = load i64, i64* %262, align 8
  %264 = getelementptr inbounds [2000000 x [2 x i64]], [2000000 x [2 x i64]]* @cnt, i64 0, i64 %263, i64 0
  %265 = load i64, i64* %264, align 16
  %266 = add i64 %265, 1
  store i64 %266, i64* %264, align 16
  %267 = add i32 %.068, 1
  %268 = load i32, i32* @x.1, align 4
  %269 = load i32, i32* @y.2, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 36323491, i32 783950249
  br label %.backedge

277:                                              ; preds = %5
  br label %.backedge

278:                                              ; preds = %5
  %279 = load i32, i32* @n, align 4
  %280 = icmp slt i32 %.066, %279
  %281 = select i1 %280, i32 211508689, i32 -2077418235
  br label %.backedge

282:                                              ; preds = %5
  %283 = sext i32 %.066 to i64
  %284 = getelementptr inbounds [100100 x i64], [100100 x i64]* @h, i64 0, i64 %283
  %285 = load i64, i64* %284, align 8
  %286 = sext i32 %.068 to i64
  %287 = getelementptr inbounds [100100 x i64], [100100 x i64]* @h, i64 0, i64 %286
  %288 = load i64, i64* %287, align 8
  %289 = sub i64 %285, %288
  %290 = getelementptr inbounds [2000000 x [2 x i64]], [2000000 x [2 x i64]]* @cnt, i64 0, i64 %289, i64 0
  %291 = load i64, i64* %290, align 16
  %.neg83 = add i64 %291, 1
  store i64 %.neg83, i64* %290, align 16
  br label %.backedge

292:                                              ; preds = %5
  %293 = add i32 %.066, 1
  br label %.backedge

294:                                              ; preds = %5
  br label %.backedge

295:                                              ; preds = %5
  %.neg82 = add i32 %.068, 1
  br label %.backedge

296:                                              ; preds = %5
  br label %.backedge

297:                                              ; preds = %5
  %298 = load i32, i32* @m, align 4
  %299 = icmp slt i32 %.064, %298
  %300 = select i1 %299, i32 -1748661043, i32 1519143470
  br label %.backedge

301:                                              ; preds = %5
  %302 = sext i32 %.064 to i64
  %303 = getelementptr inbounds [100100 x i64], [100100 x i64]* @w, i64 0, i64 %302
  %304 = load i64, i64* %303, align 8
  %305 = getelementptr inbounds [2000000 x [2 x i64]], [2000000 x [2 x i64]]* @cnt, i64 0, i64 %304, i64 1
  %306 = load i64, i64* %305, align 8
  %307 = add i64 %306, 1
  store i64 %307, i64* %305, align 8
  %.neg81 = add i32 %.064, 1
  br label %.backedge

308:                                              ; preds = %5
  %309 = load i32, i32* @m, align 4
  %310 = icmp slt i32 %.062, %309
  %311 = select i1 %310, i32 1242758165, i32 -1018766884
  br label %.backedge

312:                                              ; preds = %5
  %313 = sext i32 %.062 to i64
  %314 = getelementptr inbounds [100100 x i64], [100100 x i64]* @w, i64 0, i64 %313
  %315 = load i64, i64* %314, align 8
  %316 = sext i32 %.064 to i64
  %317 = getelementptr inbounds [100100 x i64], [100100 x i64]* @w, i64 0, i64 %316
  %318 = load i64, i64* %317, align 8
  %319 = sub i64 %315, %318
  %320 = getelementptr inbounds [2000000 x [2 x i64]], [2000000 x [2 x i64]]* @cnt, i64 0, i64 %319, i64 1
  %321 = load i64, i64* %320, align 8
  %322 = add i64 %321, 1
  store i64 %322, i64* %320, align 8
  br label %.backedge

323:                                              ; preds = %5
  %.neg80 = add i32 %.062, 1
  br label %.backedge

324:                                              ; preds = %5
  br label %.backedge

325:                                              ; preds = %5
  %.neg79 = add i32 %.064, 1
  br label %.backedge

326:                                              ; preds = %5
  br label %.backedge

327:                                              ; preds = %5
  %328 = icmp slt i32 %.058, 2000000
  %329 = select i1 %328, i32 205898412, i32 -2075204098
  br label %.backedge

330:                                              ; preds = %5
  %331 = sext i32 %.058 to i64
  %332 = getelementptr inbounds [2000000 x [2 x i64]], [2000000 x [2 x i64]]* @cnt, i64 0, i64 %331, i64 0
  %333 = load i64, i64* %332, align 16
  %334 = getelementptr inbounds [2000000 x [2 x i64]], [2000000 x [2 x i64]]* @cnt, i64 0, i64 %331, i64 1
  %335 = load i64, i64* %334, align 8
  %336 = mul nsw i64 %335, %333
  %337 = add i64 %336, %.060
  br label %.backedge

338:                                              ; preds = %5
  %339 = add i32 %.058, 1
  br label %.backedge

340:                                              ; preds = %5
  %341 = load i32, i32* @x.1, align 4
  %342 = load i32, i32* @y.2, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 182086098, i32 -1757602895
  br label %.backedge

350:                                              ; preds = %5
  %351 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.060)
  %352 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %351, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %353 = load i32, i32* @x.1, align 4
  %354 = load i32, i32* @y.2, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 -1396737186, i32 -1757602895
  br label %.backedge

362:                                              ; preds = %5
  br label %.backedge

363:                                              ; preds = %5
  ret i32 0

364:                                              ; preds = %5
  %365 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  %366 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %365, i32* nonnull dereferenceable(4) @m)
  %367 = bitcast %"class.std::basic_istream"* %366 to i8**
  %368 = load i8*, i8** %367, align 8
  %369 = getelementptr i8, i8* %368, i64 -24
  %370 = bitcast i8* %369 to i64*
  %371 = load i64, i64* %370, align 8
  %372 = bitcast %"class.std::basic_istream"* %366 to i8*
  %373 = getelementptr inbounds i8, i8* %372, i64 %371
  %374 = bitcast i8* %373 to %"class.std::basic_ios"*
  %375 = tail call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %374)
  br label %.backedge

376:                                              ; preds = %5
  br label %.backedge

377:                                              ; preds = %5
  br label %.backedge

378:                                              ; preds = %5
  %379 = sext i32 %.076 to i64
  %380 = sext i32 %.074 to i64
  %381 = getelementptr inbounds [2000000 x [2 x i64]], [2000000 x [2 x i64]]* @cnt, i64 0, i64 %379, i64 %380
  store i64 0, i64* %381, align 8
  br label %.backedge

382:                                              ; preds = %5
  %.neg78 = add i32 %.076, 1
  br label %.backedge

383:                                              ; preds = %5
  br label %.backedge

384:                                              ; preds = %5
  %385 = add i32 %.070, -1
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [100100 x i64], [100100 x i64]* @w, i64 0, i64 %386
  %388 = load i64, i64* %387, align 8
  %389 = sext i32 %.070 to i64
  %390 = getelementptr inbounds [100100 x i64], [100100 x i64]* @w, i64 0, i64 %389
  %391 = load i64, i64* %390, align 8
  %392 = add i64 %391, %388
  store i64 %392, i64* %390, align 8
  br label %.backedge

393:                                              ; preds = %5
  br label %.backedge

394:                                              ; preds = %5
  %395 = sext i32 %.068 to i64
  %396 = getelementptr inbounds [100100 x i64], [100100 x i64]* @h, i64 0, i64 %395
  %397 = load i64, i64* %396, align 8
  %398 = getelementptr inbounds [2000000 x [2 x i64]], [2000000 x [2 x i64]]* @cnt, i64 0, i64 %397, i64 0
  %399 = load i64, i64* %398, align 16
  %.neg = add i64 %399, 1
  store i64 %.neg, i64* %398, align 16
  %400 = add i32 %.068, 1
  br label %.backedge

401:                                              ; preds = %5
  %402 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.060)
  %403 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %402, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s719324577.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 177817231, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 177817231, label %11
    i32 181199171, label %14
    i32 1293780964, label %24
    i32 683045969, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 181199171, i32 683045969
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1293780964, i32 683045969
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 181199171, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
