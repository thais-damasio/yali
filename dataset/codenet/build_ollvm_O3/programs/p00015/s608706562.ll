; ModuleID = 'build_ollvm/programs/p00015/s608706562.ll'
source_filename = "Project_CodeNet_C++1400/p00015/s608706562.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c" %s \00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str = private unnamed_addr constant [9 x i8] c"overflow\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = alloca [800 x i8], align 16
  %12 = alloca [800 x i8], align 16
  %13 = alloca [801 x i8], align 16
  %14 = alloca i32, align 4
  %15 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %14)
  %16 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 0
  %17 = getelementptr inbounds [800 x i8], [800 x i8]* %11, i64 0, i64 0
  %18 = getelementptr inbounds [800 x i8], [800 x i8]* %12, i64 0, i64 0
  br label %19

19:                                               ; preds = %.backedge, %0
  %.0120 = phi i8 [ undef, %0 ], [ %.0120.be, %.backedge ]
  %.0118 = phi i32 [ undef, %0 ], [ %.0118.be, %.backedge ]
  %.0116 = phi i32 [ undef, %0 ], [ %.0116.be, %.backedge ]
  %.0114 = phi i32 [ undef, %0 ], [ %.0114.be, %.backedge ]
  %.0112 = phi i32 [ undef, %0 ], [ %.0112.be, %.backedge ]
  %.0110 = phi i32 [ 842335021, %0 ], [ %.0110.be, %.backedge ]
  %.0 = phi i32 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0110, label %.backedge [
    i32 842335021, label %20
    i32 899655147, label %23
    i32 -1129229808, label %33
    i32 1887102105, label %45
    i32 -1922813802, label %46
    i32 -1475955669, label %56
    i32 -311038826, label %67
    i32 1291079096, label %69
    i32 1554944641, label %75
    i32 -239688301, label %85
    i32 -1443382660, label %95
    i32 1606455393, label %96
    i32 797762740, label %97
    i32 -1049244084, label %98
    i32 -513870969, label %108
    i32 1241814073, label %118
    i32 81793268, label %119
    i32 1031419360, label %122
    i32 -2013163938, label %132
    i32 -504446838, label %146
    i32 -56060276, label %148
    i32 -790778256, label %158
    i32 -1791007146, label %168
    i32 -1095765486, label %169
    i32 -1363381406, label %179
    i32 580436886, label %189
    i32 -1102450170, label %190
    i32 -208611054, label %200
    i32 1974578684, label %211
    i32 1010482965, label %212
    i32 -1842197634, label %215
    i32 191391295, label %225
    i32 -751221819, label %235
    i32 202981951, label %236
    i32 -935369566, label %246
    i32 748768531, label %256
    i32 -1474981116, label %257
    i32 -1551365462, label %267
    i32 -1318656786, label %281
    i32 -689030060, label %283
    i32 512440291, label %293
    i32 -1232733452, label %304
    i32 1742079360, label %305
    i32 905363663, label %315
    i32 -275038399, label %327
    i32 -2083903994, label %329
    i32 1744042131, label %339
    i32 -416244732, label %364
    i32 -1616003302, label %366
    i32 -599278907, label %376
    i32 461740305, label %391
    i32 191347885, label %392
    i32 1026176977, label %402
    i32 870222933, label %412
    i32 -1238731478, label %413
    i32 1458167474, label %415
    i32 -489978746, label %418
    i32 1955615748, label %421
    i32 -712165455, label %430
    i32 -1441235527, label %436
    i32 2096982038, label %446
    i32 -613391017, label %456
    i32 1017544767, label %457
    i32 -97239569, label %459
    i32 -1937252784, label %460
    i32 -1011787042, label %462
    i32 39867227, label %472
    i32 -496520473, label %484
    i32 753136040, label %486
    i32 -335016915, label %503
    i32 1944372287, label %508
    i32 -344863970, label %509
    i32 1565809860, label %511
    i32 -1530625191, label %514
    i32 -704957224, label %517
    i32 -1871370003, label %526
    i32 -1274132796, label %532
    i32 -336954046, label %533
    i32 -1400715348, label %543
    i32 1235235228, label %553
    i32 139884529, label %554
    i32 66142582, label %555
    i32 379832446, label %565
    i32 -1034947400, label %577
    i32 517834066, label %579
    i32 717398368, label %580
    i32 693445137, label %582
    i32 563104414, label %588
    i32 884514736, label %590
    i32 228323134, label %592
    i32 1367822925, label %595
    i32 -173290209, label %596
    i32 -815491120, label %597
    i32 1450481467, label %607
    i32 1300248647, label %617
    i32 1519188956, label %618
    i32 1974381697, label %628
    i32 1582784613, label %638
    i32 -2100102064, label %639
    i32 1208547406, label %642
    i32 679377113, label %643
    i32 -1628366196, label %644
    i32 -154634103, label %645
    i32 -309277825, label %646
    i32 1794056919, label %647
    i32 -968099495, label %648
    i32 -239336898, label %650
    i32 1784062329, label %651
    i32 -795465311, label %652
    i32 1005240457, label %656
    i32 -774194367, label %658
    i32 1989093674, label %659
    i32 245440098, label %672
    i32 -1509530799, label %678
    i32 578292954, label %679
    i32 1825928077, label %680
    i32 224181637, label %681
    i32 -1011884600, label %683
    i32 -1961590126, label %684
    i32 1953679032, label %685
  ]

.backedge:                                        ; preds = %19, %685, %684, %683, %681, %680, %679, %678, %672, %659, %658, %656, %652, %651, %650, %648, %647, %646, %645, %644, %643, %642, %639, %628, %618, %617, %607, %597, %596, %595, %592, %590, %588, %582, %580, %579, %577, %565, %555, %554, %553, %543, %533, %532, %526, %517, %514, %511, %509, %508, %503, %486, %484, %472, %462, %460, %459, %457, %456, %446, %436, %430, %421, %418, %415, %413, %412, %402, %392, %391, %376, %366, %364, %339, %329, %327, %315, %305, %304, %293, %283, %281, %267, %257, %256, %246, %236, %235, %225, %215, %212, %211, %200, %190, %189, %179, %169, %168, %158, %148, %146, %132, %122, %119, %118, %108, %98, %97, %96, %95, %85, %75, %69, %67, %56, %46, %45, %33, %23, %20
  %.0120.be = phi i8 [ %.0120, %19 ], [ %.0120, %685 ], [ %.0120, %684 ], [ %.0120, %683 ], [ %.0120, %681 ], [ %.0120, %680 ], [ %.0120, %679 ], [ %.0120, %678 ], [ 1, %672 ], [ 0, %659 ], [ %.0120, %658 ], [ %.0120, %656 ], [ 0, %652 ], [ %.0120, %651 ], [ %.0120, %650 ], [ %.0120, %648 ], [ %.0120, %647 ], [ %.0120, %646 ], [ %.0120, %645 ], [ %.0120, %644 ], [ %.0120, %643 ], [ %.0120, %642 ], [ %.0120, %639 ], [ %.0120, %628 ], [ %.0120, %618 ], [ %.0120, %617 ], [ %.0120, %607 ], [ %.0120, %597 ], [ %.0120, %596 ], [ %.0120, %595 ], [ %.0120, %592 ], [ %.0120, %590 ], [ %.0120, %588 ], [ %.0120, %582 ], [ %.0120, %580 ], [ %.0120, %579 ], [ %.0120, %577 ], [ %.0120, %565 ], [ %.0120, %555 ], [ %.0120, %554 ], [ %.0120, %553 ], [ %.0120, %543 ], [ %.0120, %533 ], [ %.0120, %532 ], [ 1, %526 ], [ 0, %517 ], [ %.0120, %514 ], [ %.0120, %511 ], [ %.0120, %509 ], [ %.0120, %508 ], [ 1, %503 ], [ 0, %486 ], [ %.0120, %484 ], [ %.0120, %472 ], [ %.0120, %462 ], [ %.0120, %460 ], [ %.0120, %459 ], [ %.0120, %457 ], [ %.0120, %456 ], [ %.0120, %446 ], [ %.0120, %436 ], [ 1, %430 ], [ 0, %421 ], [ %.0120, %418 ], [ %.0120, %415 ], [ %.0120, %413 ], [ %.0120, %412 ], [ %.0120, %402 ], [ %.0120, %392 ], [ %.0120, %391 ], [ 1, %376 ], [ %.0120, %366 ], [ %.0120, %364 ], [ 0, %339 ], [ %.0120, %329 ], [ %.0120, %327 ], [ %.0120, %315 ], [ %.0120, %305 ], [ %.0120, %304 ], [ %.0120, %293 ], [ %.0120, %283 ], [ %.0120, %281 ], [ 0, %267 ], [ %.0120, %257 ], [ %.0120, %256 ], [ %.0120, %246 ], [ %.0120, %236 ], [ %.0120, %235 ], [ %.0120, %225 ], [ %.0120, %215 ], [ %.0120, %212 ], [ %.0120, %211 ], [ %.0120, %200 ], [ %.0120, %190 ], [ %.0120, %189 ], [ %.0120, %179 ], [ %.0120, %169 ], [ %.0120, %168 ], [ %.0120, %158 ], [ %.0120, %148 ], [ %.0120, %146 ], [ %.0120, %132 ], [ %.0120, %122 ], [ %.0120, %119 ], [ %.0120, %118 ], [ %.0120, %108 ], [ %.0120, %98 ], [ %.0120, %97 ], [ %.0120, %96 ], [ %.0120, %95 ], [ %.0120, %85 ], [ %.0120, %75 ], [ %.0120, %69 ], [ %.0120, %67 ], [ %.0120, %56 ], [ %.0120, %46 ], [ %.0120, %45 ], [ %.0120, %33 ], [ %.0120, %23 ], [ %.0120, %20 ]
  %.0118.be = phi i32 [ %.0118, %19 ], [ %.0118, %685 ], [ %.0118, %684 ], [ %.0118, %683 ], [ %682, %681 ], [ %.0118, %680 ], [ %.0118, %679 ], [ %.0118, %678 ], [ %.0118, %672 ], [ %.0118, %659 ], [ %.0118, %658 ], [ %657, %656 ], [ %.0118, %652 ], [ %.0118, %651 ], [ %.0118, %650 ], [ %649, %648 ], [ %.0118, %647 ], [ %.0118, %646 ], [ %.0118, %645 ], [ 0, %644 ], [ %.0118, %643 ], [ %.0118, %642 ], [ 0, %639 ], [ %.0118, %628 ], [ %.0118, %618 ], [ %.0118, %617 ], [ %.0118, %607 ], [ %.0118, %597 ], [ %.0118, %596 ], [ %.0118, %595 ], [ %.0118, %592 ], [ %.0118, %590 ], [ %589, %588 ], [ %.0118, %582 ], [ %.0118, %580 ], [ 0, %579 ], [ %.0118, %577 ], [ %.0118, %565 ], [ %.0118, %555 ], [ %.0118, %554 ], [ %.0118, %553 ], [ %.neg128, %543 ], [ %.0118, %533 ], [ %.0118, %532 ], [ %.0118, %526 ], [ %.0118, %517 ], [ %.0118, %514 ], [ %513, %511 ], [ %510, %509 ], [ %.0118, %508 ], [ %.0118, %503 ], [ %.0118, %486 ], [ %.0118, %484 ], [ %.0118, %472 ], [ %.0118, %462 ], [ %461, %460 ], [ %.0118, %459 ], [ %458, %457 ], [ %.0118, %456 ], [ %.0118, %446 ], [ %.0118, %436 ], [ %.0118, %430 ], [ %.0118, %421 ], [ %.0118, %418 ], [ %417, %415 ], [ %414, %413 ], [ %.0118, %412 ], [ %.0118, %402 ], [ %.0118, %392 ], [ %.0118, %391 ], [ %.0118, %376 ], [ %.0118, %366 ], [ %.0118, %364 ], [ %.0118, %339 ], [ %.0118, %329 ], [ %.0118, %327 ], [ %.0118, %315 ], [ %.0118, %305 ], [ %.0118, %304 ], [ %294, %293 ], [ %.0118, %283 ], [ %.0118, %281 ], [ %.0118, %267 ], [ %.0118, %257 ], [ %.0118, %256 ], [ %.0118, %246 ], [ %.0118, %236 ], [ %.0118, %235 ], [ %.0118, %225 ], [ %.0118, %215 ], [ %.0118, %212 ], [ %.0118, %211 ], [ %201, %200 ], [ %.0118, %190 ], [ %.0118, %189 ], [ %.0118, %179 ], [ %.0118, %169 ], [ %.0118, %168 ], [ %.0118, %158 ], [ %.0118, %148 ], [ %.0118, %146 ], [ %.0118, %132 ], [ %.0118, %122 ], [ %.0118, %119 ], [ %.0118, %118 ], [ 0, %108 ], [ %.0118, %98 ], [ %.neg133, %97 ], [ %.0118, %96 ], [ %.0118, %95 ], [ %.0118, %85 ], [ %.0118, %75 ], [ %.0118, %69 ], [ %.0118, %67 ], [ %.0118, %56 ], [ %.0118, %46 ], [ %.0118, %45 ], [ 0, %33 ], [ %.0118, %23 ], [ %.0118, %20 ]
  %.0116.be = phi i32 [ %.0116, %19 ], [ %.0116, %685 ], [ %.0116, %684 ], [ %.0116, %683 ], [ %.0116, %681 ], [ %.0116, %680 ], [ %.0116, %679 ], [ %.0116, %678 ], [ %.0116, %672 ], [ %.0116, %659 ], [ %.0116, %658 ], [ %.0116, %656 ], [ %.0116, %652 ], [ %.0116, %651 ], [ %.0116, %650 ], [ %.0116, %648 ], [ %.0116, %647 ], [ %.0116, %646 ], [ %.0116, %645 ], [ %.0118, %644 ], [ %.0116, %643 ], [ %.0116, %642 ], [ %.0116, %639 ], [ %.0116, %628 ], [ %.0116, %618 ], [ %.0116, %617 ], [ %.0116, %607 ], [ %.0116, %597 ], [ %.0116, %596 ], [ %.0116, %595 ], [ %.0116, %592 ], [ %.0116, %590 ], [ %.0116, %588 ], [ %.0116, %582 ], [ %.0116, %580 ], [ %.0116, %579 ], [ %.0116, %577 ], [ %.0116, %565 ], [ %.0116, %555 ], [ %.0116, %554 ], [ %.0116, %553 ], [ %.0116, %543 ], [ %.0116, %533 ], [ %.0116, %532 ], [ %.0116, %526 ], [ %.0116, %517 ], [ %.0116, %514 ], [ %.0116, %511 ], [ %.0116, %509 ], [ %.0116, %508 ], [ %.0116, %503 ], [ %.0116, %486 ], [ %.0116, %484 ], [ %.0116, %472 ], [ %.0116, %462 ], [ %.0116, %460 ], [ %.0116, %459 ], [ %.0116, %457 ], [ %.0116, %456 ], [ %.0116, %446 ], [ %.0116, %436 ], [ %.0116, %430 ], [ %.0116, %421 ], [ %.0116, %418 ], [ %.0116, %415 ], [ %.0116, %413 ], [ %.0116, %412 ], [ %.0116, %402 ], [ %.0116, %392 ], [ %.0116, %391 ], [ %.0116, %376 ], [ %.0116, %366 ], [ %.0116, %364 ], [ %.0116, %339 ], [ %.0116, %329 ], [ %.0116, %327 ], [ %.0116, %315 ], [ %.0116, %305 ], [ %.0116, %304 ], [ %.0116, %293 ], [ %.0116, %283 ], [ %.0116, %281 ], [ %.0116, %267 ], [ %.0116, %257 ], [ %.0116, %256 ], [ %.0116, %246 ], [ %.0116, %236 ], [ %.0116, %235 ], [ %.0116, %225 ], [ %.0116, %215 ], [ %.0116, %212 ], [ %.0116, %211 ], [ %.0116, %200 ], [ %.0116, %190 ], [ %.0116, %189 ], [ %.0116, %179 ], [ %.0116, %169 ], [ %.0116, %168 ], [ %.0116, %158 ], [ %.0116, %148 ], [ %.0116, %146 ], [ %.0116, %132 ], [ %.0116, %122 ], [ %.0116, %119 ], [ %.0116, %118 ], [ %.0118, %108 ], [ %.0116, %98 ], [ %.0116, %97 ], [ %.0116, %96 ], [ %.0116, %95 ], [ %.0116, %85 ], [ %.0116, %75 ], [ %.0116, %69 ], [ %.0116, %67 ], [ %.0116, %56 ], [ %.0116, %46 ], [ %.0116, %45 ], [ %.0116, %33 ], [ %.0116, %23 ], [ %.0116, %20 ]
  %.0114.be = phi i32 [ %.0114, %19 ], [ %.0114, %685 ], [ %.0114, %684 ], [ %.0114, %683 ], [ %.0114, %681 ], [ %.0114, %680 ], [ %.0114, %679 ], [ %.0114, %678 ], [ %.0114, %672 ], [ %.0114, %659 ], [ %.0114, %658 ], [ %.0114, %656 ], [ %.0114, %652 ], [ %.0114, %651 ], [ %.0114, %650 ], [ %.0114, %648 ], [ %.0114, %647 ], [ %.0114, %646 ], [ %.0114, %645 ], [ %.0114, %644 ], [ %.0114, %643 ], [ %.0114, %642 ], [ %.0114, %639 ], [ %.0114, %628 ], [ %.0114, %618 ], [ %.0114, %617 ], [ %.0114, %607 ], [ %.0114, %597 ], [ %.0114, %596 ], [ %.0114, %595 ], [ %.0114, %592 ], [ %.0114, %590 ], [ %.0114, %588 ], [ %.0114, %582 ], [ %.0114, %580 ], [ %.0114, %579 ], [ %.0114, %577 ], [ %.0114, %565 ], [ %.0114, %555 ], [ %.0114, %554 ], [ %.0114, %553 ], [ %.0114, %543 ], [ %.0114, %533 ], [ %.0114, %532 ], [ %.0114, %526 ], [ %.0114, %517 ], [ %.0114, %514 ], [ %.0114, %511 ], [ %.0114, %509 ], [ %.0114, %508 ], [ %.0114, %503 ], [ %.0114, %486 ], [ %.0114, %484 ], [ %.0114, %472 ], [ %.0114, %462 ], [ %.0114, %460 ], [ %.0114, %459 ], [ %.0114, %457 ], [ %.0114, %456 ], [ %.0114, %446 ], [ %.0114, %436 ], [ %.0114, %430 ], [ %.0114, %421 ], [ %.0114, %418 ], [ %.0114, %415 ], [ %.0114, %413 ], [ %.0114, %412 ], [ %.0114, %402 ], [ %.0114, %392 ], [ %.0114, %391 ], [ %.0114, %376 ], [ %.0114, %366 ], [ %.0114, %364 ], [ %.0114, %339 ], [ %.0114, %329 ], [ %.0114, %327 ], [ %.0114, %315 ], [ %.0114, %305 ], [ %.0114, %304 ], [ %.0114, %293 ], [ %.0114, %283 ], [ %.0114, %281 ], [ %.0114, %267 ], [ %.0114, %257 ], [ %.0114, %256 ], [ %.0114, %246 ], [ %.0114, %236 ], [ %.0114, %235 ], [ %.0114, %225 ], [ %.0114, %215 ], [ %.0118, %212 ], [ %.0114, %211 ], [ %.0114, %200 ], [ %.0114, %190 ], [ %.0114, %189 ], [ %.0114, %179 ], [ %.0114, %169 ], [ %.0114, %168 ], [ %.0114, %158 ], [ %.0114, %148 ], [ %.0114, %146 ], [ %.0114, %132 ], [ %.0114, %122 ], [ %.0114, %119 ], [ %.0114, %118 ], [ %.0114, %108 ], [ %.0114, %98 ], [ %.0114, %97 ], [ %.0114, %96 ], [ %.0114, %95 ], [ %.0114, %85 ], [ %.0114, %75 ], [ %.0114, %69 ], [ %.0114, %67 ], [ %.0114, %56 ], [ %.0114, %46 ], [ %.0114, %45 ], [ %.0114, %33 ], [ %.0114, %23 ], [ %.0114, %20 ]
  %.0112.be = phi i32 [ %.0112, %19 ], [ %.0112, %685 ], [ %.0112, %684 ], [ %.0112, %683 ], [ %.0112, %681 ], [ %.0112, %680 ], [ %.0112, %679 ], [ %.0112, %678 ], [ %.0112, %672 ], [ %.0112, %659 ], [ %.0112, %658 ], [ %.0112, %656 ], [ %.0..0..0.109, %652 ], [ %.0112, %651 ], [ %.0112, %650 ], [ %.0112, %648 ], [ %.0112, %647 ], [ %.0112, %646 ], [ %.0112, %645 ], [ %.0112, %644 ], [ %.0112, %643 ], [ %.0112, %642 ], [ %.0112, %639 ], [ %.0112, %628 ], [ %.0112, %618 ], [ %.0112, %617 ], [ %.0112, %607 ], [ %.0112, %597 ], [ %.0112, %596 ], [ %.0112, %595 ], [ %.0112, %592 ], [ %591, %590 ], [ %.0112, %588 ], [ %.0112, %582 ], [ %.0112, %580 ], [ %.0112, %579 ], [ %.0112, %577 ], [ %.0112, %565 ], [ %.0112, %555 ], [ %.0112, %554 ], [ %.0112, %553 ], [ %.0112, %543 ], [ %.0112, %533 ], [ %.0112, %532 ], [ %.0112, %526 ], [ %.0112, %517 ], [ %.0112, %514 ], [ %.0112, %511 ], [ %.0112, %509 ], [ %.0112, %508 ], [ %.0112, %503 ], [ %.0112, %486 ], [ %.0112, %484 ], [ %.0112, %472 ], [ %.0112, %462 ], [ %.0112, %460 ], [ %.0112, %459 ], [ %.0112, %457 ], [ %.0112, %456 ], [ %.0112, %446 ], [ %.0112, %436 ], [ %.0112, %430 ], [ %.0112, %421 ], [ %.0112, %418 ], [ %.0112, %415 ], [ %.0112, %413 ], [ %.0112, %412 ], [ %.0112, %402 ], [ %.0112, %392 ], [ %.0112, %391 ], [ %.0112, %376 ], [ %.0112, %366 ], [ %.0112, %364 ], [ %.0112, %339 ], [ %.0112, %329 ], [ %.0112, %327 ], [ %.0112, %315 ], [ %.0112, %305 ], [ %.0112, %304 ], [ %.0112, %293 ], [ %.0112, %283 ], [ %.0112, %281 ], [ %.0..0..0.108, %267 ], [ %.0112, %257 ], [ %.0112, %256 ], [ %.0112, %246 ], [ %.0112, %236 ], [ %.0112, %235 ], [ %.0112, %225 ], [ %.0112, %215 ], [ %.0112, %212 ], [ %.0112, %211 ], [ %.0112, %200 ], [ %.0112, %190 ], [ %.0112, %189 ], [ %.0112, %179 ], [ %.0112, %169 ], [ %.0112, %168 ], [ %.0112, %158 ], [ %.0112, %148 ], [ %.0112, %146 ], [ %.0112, %132 ], [ %.0112, %122 ], [ %.0112, %119 ], [ %.0112, %118 ], [ %.0112, %108 ], [ %.0112, %98 ], [ %.0112, %97 ], [ %.0112, %96 ], [ %.0112, %95 ], [ %.0112, %85 ], [ %.0112, %75 ], [ %.0112, %69 ], [ %.0112, %67 ], [ %.0112, %56 ], [ %.0112, %46 ], [ %.0112, %45 ], [ %.0112, %33 ], [ %.0112, %23 ], [ %.0112, %20 ]
  %.0110.be = phi i32 [ %.0110, %19 ], [ 1974381697, %685 ], [ 1450481467, %684 ], [ 379832446, %683 ], [ -1400715348, %681 ], [ 39867227, %680 ], [ 2096982038, %679 ], [ 1026176977, %678 ], [ -599278907, %672 ], [ 1744042131, %659 ], [ 905363663, %658 ], [ 512440291, %656 ], [ -1551365462, %652 ], [ -935369566, %651 ], [ 191391295, %650 ], [ -208611054, %648 ], [ -1363381406, %647 ], [ -790778256, %646 ], [ -2013163938, %645 ], [ -513870969, %644 ], [ -239688301, %643 ], [ -1475955669, %642 ], [ -1129229808, %639 ], [ %637, %628 ], [ %627, %618 ], [ 842335021, %617 ], [ %616, %607 ], [ %606, %597 ], [ -815491120, %596 ], [ -815491120, %595 ], [ %594, %592 ], [ 228323134, %590 ], [ 717398368, %588 ], [ 563104414, %582 ], [ %581, %580 ], [ 717398368, %579 ], [ %578, %577 ], [ %576, %565 ], [ %564, %555 ], [ 66142582, %554 ], [ -1530625191, %553 ], [ %552, %543 ], [ %542, %533 ], [ -336954046, %532 ], [ -1274132796, %526 ], [ %525, %517 ], [ %516, %514 ], [ -1530625191, %511 ], [ -1011787042, %509 ], [ -344863970, %508 ], [ 1944372287, %503 ], [ %502, %486 ], [ %485, %484 ], [ %483, %472 ], [ %471, %462 ], [ -1011787042, %460 ], [ 66142582, %459 ], [ -489978746, %457 ], [ 1017544767, %456 ], [ %455, %446 ], [ %445, %436 ], [ -1441235527, %430 ], [ %429, %421 ], [ %420, %418 ], [ -489978746, %415 ], [ 1742079360, %413 ], [ -1238731478, %412 ], [ %411, %402 ], [ %401, %392 ], [ 191347885, %391 ], [ %390, %376 ], [ %375, %366 ], [ %365, %364 ], [ %363, %339 ], [ %338, %329 ], [ %328, %327 ], [ %326, %315 ], [ %314, %305 ], [ 1742079360, %304 ], [ %303, %293 ], [ %292, %283 ], [ %282, %281 ], [ %280, %267 ], [ %266, %257 ], [ -1474981116, %256 ], [ %255, %246 ], [ %245, %236 ], [ -1474981116, %235 ], [ %234, %225 ], [ %224, %215 ], [ %214, %212 ], [ 81793268, %211 ], [ %210, %200 ], [ %199, %190 ], [ -1102450170, %189 ], [ %188, %179 ], [ %178, %169 ], [ 1010482965, %168 ], [ %167, %158 ], [ %157, %148 ], [ %147, %146 ], [ %145, %132 ], [ %131, %122 ], [ %121, %119 ], [ 81793268, %118 ], [ %117, %108 ], [ %107, %98 ], [ -1922813802, %97 ], [ 797762740, %96 ], [ -1049244084, %95 ], [ %94, %85 ], [ %84, %75 ], [ %74, %69 ], [ %68, %67 ], [ %66, %56 ], [ %55, %46 ], [ -1922813802, %45 ], [ %44, %33 ], [ %32, %23 ], [ %22, %20 ]
  %.0.be = phi i32 [ %.0, %19 ], [ %.0, %685 ], [ %.0, %684 ], [ %.0, %683 ], [ %.0, %681 ], [ %.0, %680 ], [ %.0, %679 ], [ %.0, %678 ], [ %.0, %672 ], [ %.0, %659 ], [ %.0, %658 ], [ %.0, %656 ], [ %.0, %652 ], [ %.0, %651 ], [ %.0, %650 ], [ %.0, %648 ], [ %.0, %647 ], [ %.0, %646 ], [ %.0, %645 ], [ %.0, %644 ], [ %.0, %643 ], [ %.0, %642 ], [ %.0, %639 ], [ %.0, %628 ], [ %.0, %618 ], [ %.0, %617 ], [ %.0, %607 ], [ %.0, %597 ], [ %.0, %596 ], [ %.0, %595 ], [ %.0, %592 ], [ %.0, %590 ], [ %.0, %588 ], [ %.0, %582 ], [ %.0, %580 ], [ %.0, %579 ], [ %.0, %577 ], [ %.0, %565 ], [ %.0, %555 ], [ %.0, %554 ], [ %.0, %553 ], [ %.0, %543 ], [ %.0, %533 ], [ %.0, %532 ], [ %.0, %526 ], [ %.0, %517 ], [ %.0, %514 ], [ %.0, %511 ], [ %.0, %509 ], [ %.0, %508 ], [ %.0, %503 ], [ %.0, %486 ], [ %.0, %484 ], [ %.0, %472 ], [ %.0, %462 ], [ %.0, %460 ], [ %.0, %459 ], [ %.0, %457 ], [ %.0, %456 ], [ %.0, %446 ], [ %.0, %436 ], [ %.0, %430 ], [ %.0, %421 ], [ %.0, %418 ], [ %.0, %415 ], [ %.0, %413 ], [ %.0, %412 ], [ %.0, %402 ], [ %.0, %392 ], [ %.0, %391 ], [ %.0, %376 ], [ %.0, %366 ], [ %.0, %364 ], [ %.0, %339 ], [ %.0, %329 ], [ %.0, %327 ], [ %.0, %315 ], [ %.0, %305 ], [ %.0, %304 ], [ %.0, %293 ], [ %.0, %283 ], [ %.0, %281 ], [ %.0, %267 ], [ %.0, %257 ], [ %.0..0..0.102, %256 ], [ %.0, %246 ], [ %.0, %236 ], [ %.0..0..0.101, %235 ], [ %.0, %225 ], [ %.0, %215 ], [ %.0, %212 ], [ %.0, %211 ], [ %.0, %200 ], [ %.0, %190 ], [ %.0, %189 ], [ %.0, %179 ], [ %.0, %169 ], [ %.0, %168 ], [ %.0, %158 ], [ %.0, %148 ], [ %.0, %146 ], [ %.0, %132 ], [ %.0, %122 ], [ %.0, %119 ], [ %.0, %118 ], [ %.0, %108 ], [ %.0, %98 ], [ %.0, %97 ], [ %.0, %96 ], [ %.0, %95 ], [ %.0, %85 ], [ %.0, %75 ], [ %.0, %69 ], [ %.0, %67 ], [ %.0, %56 ], [ %.0, %46 ], [ %.0, %45 ], [ %.0, %33 ], [ %.0, %23 ], [ %.0, %20 ]
  br label %19

20:                                               ; preds = %19
  %21 = load i32, i32* %14, align 4
  %.neg134 = add i32 %21, -1
  store i32 %.neg134, i32* %14, align 4
  %.not135 = icmp eq i32 %21, 0
  %22 = select i1 %.not135, i32 1519188956, i32 899655147
  br label %.backedge

23:                                               ; preds = %19
  %24 = load i32, i32* @x, align 4
  %25 = load i32, i32* @y, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -1129229808, i32 -2100102064
  br label %.backedge

33:                                               ; preds = %19
  %34 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %17)
  %35 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %18)
  %36 = load i32, i32* @x, align 4
  %37 = load i32, i32* @y, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 1887102105, i32 -2100102064
  br label %.backedge

45:                                               ; preds = %19
  br label %.backedge

46:                                               ; preds = %19
  %47 = load i32, i32* @x, align 4
  %48 = load i32, i32* @y, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 -1475955669, i32 1208547406
  br label %.backedge

56:                                               ; preds = %19
  %57 = icmp slt i32 %.0118, 800
  store i1 %57, i1* %10, align 1
  %58 = load i32, i32* @x, align 4
  %59 = load i32, i32* @y, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -311038826, i32 1208547406
  br label %.backedge

67:                                               ; preds = %19
  %.0..0..0. = load volatile i1, i1* %10, align 1
  %68 = select i1 %.0..0..0., i32 1291079096, i32 -1049244084
  br label %.backedge

69:                                               ; preds = %19
  %70 = sext i32 %.0118 to i64
  %71 = getelementptr inbounds [800 x i8], [800 x i8]* %11, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i32 1554944641, i32 1606455393
  br label %.backedge

75:                                               ; preds = %19
  %76 = load i32, i32* @x, align 4
  %77 = load i32, i32* @y, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 -239688301, i32 679377113
  br label %.backedge

85:                                               ; preds = %19
  %86 = load i32, i32* @x, align 4
  %87 = load i32, i32* @y, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 -1443382660, i32 679377113
  br label %.backedge

95:                                               ; preds = %19
  br label %.backedge

96:                                               ; preds = %19
  br label %.backedge

97:                                               ; preds = %19
  %.neg133 = add i32 %.0118, 1
  br label %.backedge

98:                                               ; preds = %19
  %99 = load i32, i32* @x, align 4
  %100 = load i32, i32* @y, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 -513870969, i32 -1628366196
  br label %.backedge

108:                                              ; preds = %19
  %109 = load i32, i32* @x, align 4
  %110 = load i32, i32* @y, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 1241814073, i32 -1628366196
  br label %.backedge

118:                                              ; preds = %19
  br label %.backedge

119:                                              ; preds = %19
  %120 = icmp slt i32 %.0118, 800
  %121 = select i1 %120, i32 1031419360, i32 1010482965
  br label %.backedge

122:                                              ; preds = %19
  %123 = load i32, i32* @x, align 4
  %124 = load i32, i32* @y, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 -2013163938, i32 -154634103
  br label %.backedge

132:                                              ; preds = %19
  %133 = sext i32 %.0118 to i64
  %134 = getelementptr inbounds [800 x i8], [800 x i8]* %12, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = icmp eq i8 %135, 0
  store i1 %136, i1* %9, align 1
  %137 = load i32, i32* @x, align 4
  %138 = load i32, i32* @y, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 -504446838, i32 -154634103
  br label %.backedge

146:                                              ; preds = %19
  %.0..0..0.100 = load volatile i1, i1* %9, align 1
  %147 = select i1 %.0..0..0.100, i32 -56060276, i32 -1095765486
  br label %.backedge

148:                                              ; preds = %19
  %149 = load i32, i32* @x, align 4
  %150 = load i32, i32* @y, align 4
  %151 = add i32 %149, -1
  %152 = mul i32 %151, %149
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %155, %154
  %157 = select i1 %156, i32 -790778256, i32 -309277825
  br label %.backedge

158:                                              ; preds = %19
  %159 = load i32, i32* @x, align 4
  %160 = load i32, i32* @y, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 -1791007146, i32 -309277825
  br label %.backedge

168:                                              ; preds = %19
  br label %.backedge

169:                                              ; preds = %19
  %170 = load i32, i32* @x, align 4
  %171 = load i32, i32* @y, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 -1363381406, i32 1794056919
  br label %.backedge

179:                                              ; preds = %19
  %180 = load i32, i32* @x, align 4
  %181 = load i32, i32* @y, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 580436886, i32 1794056919
  br label %.backedge

189:                                              ; preds = %19
  br label %.backedge

190:                                              ; preds = %19
  %191 = load i32, i32* @x, align 4
  %192 = load i32, i32* @y, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -208611054, i32 -968099495
  br label %.backedge

200:                                              ; preds = %19
  %201 = add i32 %.0118, 1
  %202 = load i32, i32* @x, align 4
  %203 = load i32, i32* @y, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 1974578684, i32 -968099495
  br label %.backedge

211:                                              ; preds = %19
  br label %.backedge

212:                                              ; preds = %19
  %213 = icmp sgt i32 %.0118, %.0116
  %214 = select i1 %213, i32 -1842197634, i32 202981951
  br label %.backedge

215:                                              ; preds = %19
  %216 = load i32, i32* @x, align 4
  %217 = load i32, i32* @y, align 4
  %218 = add i32 %216, -1
  %219 = mul i32 %218, %216
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %222, %221
  %224 = select i1 %223, i32 191391295, i32 -239336898
  br label %.backedge

225:                                              ; preds = %19
  store i32 %.0114, i32* %8, align 4
  %226 = load i32, i32* @x, align 4
  %227 = load i32, i32* @y, align 4
  %228 = add i32 %226, -1
  %229 = mul i32 %228, %226
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %232, %231
  %234 = select i1 %233, i32 -751221819, i32 -239336898
  br label %.backedge

235:                                              ; preds = %19
  %.0..0..0.101 = load volatile i32, i32* %8, align 4
  br label %.backedge

236:                                              ; preds = %19
  %237 = load i32, i32* @x, align 4
  %238 = load i32, i32* @y, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -935369566, i32 1784062329
  br label %.backedge

246:                                              ; preds = %19
  store i32 %.0116, i32* %7, align 4
  %247 = load i32, i32* @x, align 4
  %248 = load i32, i32* @y, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 748768531, i32 1784062329
  br label %.backedge

256:                                              ; preds = %19
  %.0..0..0.102 = load volatile i32, i32* %7, align 4
  br label %.backedge

257:                                              ; preds = %19
  store i32 %.0, i32* %1, align 4
  %258 = load i32, i32* @x, align 4
  %259 = load i32, i32* @y, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 -1551365462, i32 -795465311
  br label %.backedge

267:                                              ; preds = %19
  %.0..0..0.108 = load volatile i32, i32* %1, align 4
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(801) %16, i8 48, i64 801, i1 false)
  %268 = add i32 %.0..0..0.108, 1
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %269
  store i8 0, i8* %270, align 1
  %271 = icmp sgt i32 %.0116, %.0114
  store i1 %271, i1* %6, align 1
  %272 = load i32, i32* @x, align 4
  %273 = load i32, i32* @y, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 -1318656786, i32 -795465311
  br label %.backedge

281:                                              ; preds = %19
  %.0..0..0.103 = load volatile i1, i1* %6, align 1
  %282 = select i1 %.0..0..0.103, i32 -689030060, i32 -1937252784
  br label %.backedge

283:                                              ; preds = %19
  %284 = load i32, i32* @x, align 4
  %285 = load i32, i32* @y, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 512440291, i32 1005240457
  br label %.backedge

293:                                              ; preds = %19
  %294 = add i32 %.0116, -1
  %295 = load i32, i32* @x, align 4
  %296 = load i32, i32* @y, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 -1232733452, i32 1005240457
  br label %.backedge

304:                                              ; preds = %19
  br label %.backedge

305:                                              ; preds = %19
  %306 = load i32, i32* @x, align 4
  %307 = load i32, i32* @y, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 905363663, i32 -774194367
  br label %.backedge

315:                                              ; preds = %19
  %316 = sub i32 %.0116, %.0114
  %317 = icmp sge i32 %.0118, %316
  store i1 %317, i1* %5, align 1
  %318 = load i32, i32* @x, align 4
  %319 = load i32, i32* @y, align 4
  %320 = add i32 %318, -1
  %321 = mul i32 %320, %318
  %322 = and i32 %321, 1
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %324, %323
  %326 = select i1 %325, i32 -275038399, i32 -774194367
  br label %.backedge

327:                                              ; preds = %19
  %.0..0..0.104 = load volatile i1, i1* %5, align 1
  %328 = select i1 %.0..0..0.104, i32 -2083903994, i32 1458167474
  br label %.backedge

329:                                              ; preds = %19
  %330 = load i32, i32* @x, align 4
  %331 = load i32, i32* @y, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 1744042131, i32 1989093674
  br label %.backedge

339:                                              ; preds = %19
  %340 = sext i32 %.0118 to i64
  %341 = getelementptr inbounds [800 x i8], [800 x i8]* %11, i64 0, i64 %340
  %342 = load i8, i8* %341, align 1
  %343 = sub i32 %.0118, %.0116
  %344 = add i32 %343, %.0114
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [800 x i8], [800 x i8]* %12, i64 0, i64 %345
  %347 = load i8, i8* %346, align 1
  %348 = add i8 %.0120, -48
  %349 = add i8 %348, %342
  %350 = add i8 %349, %347
  %351 = add i32 %.0118, 1
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %352
  store i8 %350, i8* %353, align 1
  %354 = icmp sgt i8 %350, 57
  store i1 %354, i1* %4, align 1
  %355 = load i32, i32* @x, align 4
  %356 = load i32, i32* @y, align 4
  %357 = add i32 %355, -1
  %358 = mul i32 %357, %355
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %361, %360
  %363 = select i1 %362, i32 -416244732, i32 1989093674
  br label %.backedge

364:                                              ; preds = %19
  %.0..0..0.105 = load volatile i1, i1* %4, align 1
  %365 = select i1 %.0..0..0.105, i32 -1616003302, i32 191347885
  br label %.backedge

366:                                              ; preds = %19
  %367 = load i32, i32* @x, align 4
  %368 = load i32, i32* @y, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 -599278907, i32 245440098
  br label %.backedge

376:                                              ; preds = %19
  %377 = add i32 %.0118, 1
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %378
  %380 = load i8, i8* %379, align 1
  %381 = add i8 %380, -10
  store i8 %381, i8* %379, align 1
  %382 = load i32, i32* @x, align 4
  %383 = load i32, i32* @y, align 4
  %384 = add i32 %382, -1
  %385 = mul i32 %384, %382
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %388, %387
  %390 = select i1 %389, i32 461740305, i32 245440098
  br label %.backedge

391:                                              ; preds = %19
  br label %.backedge

392:                                              ; preds = %19
  %393 = load i32, i32* @x, align 4
  %394 = load i32, i32* @y, align 4
  %395 = add i32 %393, -1
  %396 = mul i32 %395, %393
  %397 = and i32 %396, 1
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %399, %398
  %401 = select i1 %400, i32 1026176977, i32 -1509530799
  br label %.backedge

402:                                              ; preds = %19
  %403 = load i32, i32* @x, align 4
  %404 = load i32, i32* @y, align 4
  %405 = add i32 %403, -1
  %406 = mul i32 %405, %403
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %409, %408
  %411 = select i1 %410, i32 870222933, i32 -1509530799
  br label %.backedge

412:                                              ; preds = %19
  br label %.backedge

413:                                              ; preds = %19
  %414 = add i32 %.0118, -1
  br label %.backedge

415:                                              ; preds = %19
  %416 = xor i32 %.0114, -1
  %417 = add i32 %.0116, %416
  br label %.backedge

418:                                              ; preds = %19
  %419 = icmp sgt i32 %.0118, -1
  %420 = select i1 %419, i32 1955615748, i32 -97239569
  br label %.backedge

421:                                              ; preds = %19
  %422 = sext i32 %.0118 to i64
  %423 = getelementptr inbounds [800 x i8], [800 x i8]* %11, i64 0, i64 %422
  %424 = load i8, i8* %423, align 1
  %425 = add i8 %424, %.0120
  %.neg132 = add i32 %.0118, 1
  %426 = sext i32 %.neg132 to i64
  %427 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %426
  store i8 %425, i8* %427, align 1
  %428 = icmp sgt i8 %425, 57
  %429 = select i1 %428, i32 -712165455, i32 -1441235527
  br label %.backedge

430:                                              ; preds = %19
  %431 = add i32 %.0118, 1
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = add i8 %434, -10
  store i8 %435, i8* %433, align 1
  br label %.backedge

436:                                              ; preds = %19
  %437 = load i32, i32* @x, align 4
  %438 = load i32, i32* @y, align 4
  %439 = add i32 %437, -1
  %440 = mul i32 %439, %437
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %443, %442
  %445 = select i1 %444, i32 2096982038, i32 578292954
  br label %.backedge

446:                                              ; preds = %19
  %447 = load i32, i32* @x, align 4
  %448 = load i32, i32* @y, align 4
  %449 = add i32 %447, -1
  %450 = mul i32 %449, %447
  %451 = and i32 %450, 1
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %453, %452
  %455 = select i1 %454, i32 -613391017, i32 578292954
  br label %.backedge

456:                                              ; preds = %19
  br label %.backedge

457:                                              ; preds = %19
  %458 = add i32 %.0118, -1
  br label %.backedge

459:                                              ; preds = %19
  br label %.backedge

460:                                              ; preds = %19
  %461 = add i32 %.0114, -1
  br label %.backedge

462:                                              ; preds = %19
  %463 = load i32, i32* @x, align 4
  %464 = load i32, i32* @y, align 4
  %465 = add i32 %463, -1
  %466 = mul i32 %465, %463
  %467 = and i32 %466, 1
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %469, %468
  %471 = select i1 %470, i32 39867227, i32 1825928077
  br label %.backedge

472:                                              ; preds = %19
  %473 = sub i32 %.0114, %.0116
  %474 = icmp sge i32 %.0118, %473
  store i1 %474, i1* %3, align 1
  %475 = load i32, i32* @x, align 4
  %476 = load i32, i32* @y, align 4
  %477 = add i32 %475, -1
  %478 = mul i32 %477, %475
  %479 = and i32 %478, 1
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %481, %480
  %483 = select i1 %482, i32 -496520473, i32 1825928077
  br label %.backedge

484:                                              ; preds = %19
  %.0..0..0.106 = load volatile i1, i1* %3, align 1
  %485 = select i1 %.0..0..0.106, i32 753136040, i32 1565809860
  br label %.backedge

486:                                              ; preds = %19
  %487 = sext i32 %.0118 to i64
  %488 = getelementptr inbounds [800 x i8], [800 x i8]* %12, i64 0, i64 %487
  %489 = load i8, i8* %488, align 1
  %490 = add i32 %.0116, %.0118
  %491 = sub i32 %490, %.0114
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds [800 x i8], [800 x i8]* %11, i64 0, i64 %492
  %494 = load i8, i8* %493, align 1
  %495 = add i8 %.0120, -48
  %496 = add i8 %495, %489
  %497 = add i8 %496, %494
  %498 = add i32 %.0118, 1
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %499
  store i8 %497, i8* %500, align 1
  %501 = icmp sgt i8 %497, 57
  %502 = select i1 %501, i32 -335016915, i32 1944372287
  br label %.backedge

503:                                              ; preds = %19
  %.neg130 = add i32 %.0118, 1
  %504 = sext i32 %.neg130 to i64
  %505 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %504
  %506 = load i8, i8* %505, align 1
  %507 = add i8 %506, -10
  store i8 %507, i8* %505, align 1
  br label %.backedge

508:                                              ; preds = %19
  br label %.backedge

509:                                              ; preds = %19
  %510 = add i32 %.0118, -1
  br label %.backedge

511:                                              ; preds = %19
  %512 = xor i32 %.0116, -1
  %513 = add i32 %.0114, %512
  br label %.backedge

514:                                              ; preds = %19
  %515 = icmp sgt i32 %.0118, -1
  %516 = select i1 %515, i32 -704957224, i32 139884529
  br label %.backedge

517:                                              ; preds = %19
  %518 = sext i32 %.0118 to i64
  %519 = getelementptr inbounds [800 x i8], [800 x i8]* %12, i64 0, i64 %518
  %520 = load i8, i8* %519, align 1
  %521 = add i8 %520, %.0120
  %.neg129 = add i32 %.0118, 1
  %522 = sext i32 %.neg129 to i64
  %523 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %522
  store i8 %521, i8* %523, align 1
  %524 = icmp sgt i8 %521, 57
  %525 = select i1 %524, i32 -1871370003, i32 -1274132796
  br label %.backedge

526:                                              ; preds = %19
  %527 = add i32 %.0118, 1
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %528
  %530 = load i8, i8* %529, align 1
  %531 = add i8 %530, -10
  store i8 %531, i8* %529, align 1
  br label %.backedge

532:                                              ; preds = %19
  br label %.backedge

533:                                              ; preds = %19
  %534 = load i32, i32* @x, align 4
  %535 = load i32, i32* @y, align 4
  %536 = add i32 %534, -1
  %537 = mul i32 %536, %534
  %538 = and i32 %537, 1
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %535, 10
  %541 = or i1 %540, %539
  %542 = select i1 %541, i32 -1400715348, i32 224181637
  br label %.backedge

543:                                              ; preds = %19
  %.neg128 = add i32 %.0118, -1
  %544 = load i32, i32* @x, align 4
  %545 = load i32, i32* @y, align 4
  %546 = add i32 %544, -1
  %547 = mul i32 %546, %544
  %548 = and i32 %547, 1
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %550, %549
  %552 = select i1 %551, i32 1235235228, i32 224181637
  br label %.backedge

553:                                              ; preds = %19
  br label %.backedge

554:                                              ; preds = %19
  br label %.backedge

555:                                              ; preds = %19
  %556 = load i32, i32* @x, align 4
  %557 = load i32, i32* @y, align 4
  %558 = add i32 %556, -1
  %559 = mul i32 %558, %556
  %560 = and i32 %559, 1
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %562, %561
  %564 = select i1 %563, i32 379832446, i32 -1011884600
  br label %.backedge

565:                                              ; preds = %19
  %566 = add i8 %.0120, 48
  store i8 %566, i8* %16, align 16
  %567 = icmp eq i8 %.0120, 0
  store i1 %567, i1* %2, align 1
  %568 = load i32, i32* @x, align 4
  %569 = load i32, i32* @y, align 4
  %570 = add i32 %568, -1
  %571 = mul i32 %570, %568
  %572 = and i32 %571, 1
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %574, %573
  %576 = select i1 %575, i32 -1034947400, i32 -1011884600
  br label %.backedge

577:                                              ; preds = %19
  %.0..0..0.107 = load volatile i1, i1* %2, align 1
  %578 = select i1 %.0..0..0.107, i32 517834066, i32 228323134
  br label %.backedge

579:                                              ; preds = %19
  br label %.backedge

580:                                              ; preds = %19
  %.not = icmp sgt i32 %.0118, %.0112
  %581 = select i1 %.not, i32 884514736, i32 693445137
  br label %.backedge

582:                                              ; preds = %19
  %.neg127 = add i32 %.0118, 1
  %583 = sext i32 %.neg127 to i64
  %584 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %583
  %585 = load i8, i8* %584, align 1
  %586 = sext i32 %.0118 to i64
  %587 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %586
  store i8 %585, i8* %587, align 1
  br label %.backedge

588:                                              ; preds = %19
  %589 = add i32 %.0118, 1
  br label %.backedge

590:                                              ; preds = %19
  %591 = add i32 %.0112, -1
  br label %.backedge

592:                                              ; preds = %19
  %593 = icmp sgt i32 %.0112, 79
  %594 = select i1 %593, i32 1367822925, i32 -173290209
  br label %.backedge

595:                                              ; preds = %19
  %puts126 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str, i64 0, i64 0))
  br label %.backedge

596:                                              ; preds = %19
  %puts = call i32 @puts(i8* nonnull %16)
  br label %.backedge

597:                                              ; preds = %19
  %598 = load i32, i32* @x, align 4
  %599 = load i32, i32* @y, align 4
  %600 = add i32 %598, -1
  %601 = mul i32 %600, %598
  %602 = and i32 %601, 1
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %604, %603
  %606 = select i1 %605, i32 1450481467, i32 -1961590126
  br label %.backedge

607:                                              ; preds = %19
  %608 = load i32, i32* @x, align 4
  %609 = load i32, i32* @y, align 4
  %610 = add i32 %608, -1
  %611 = mul i32 %610, %608
  %612 = and i32 %611, 1
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %614, %613
  %616 = select i1 %615, i32 1300248647, i32 -1961590126
  br label %.backedge

617:                                              ; preds = %19
  br label %.backedge

618:                                              ; preds = %19
  %619 = load i32, i32* @x, align 4
  %620 = load i32, i32* @y, align 4
  %621 = add i32 %619, -1
  %622 = mul i32 %621, %619
  %623 = and i32 %622, 1
  %624 = icmp eq i32 %623, 0
  %625 = icmp slt i32 %620, 10
  %626 = or i1 %625, %624
  %627 = select i1 %626, i32 1974381697, i32 1953679032
  br label %.backedge

628:                                              ; preds = %19
  %629 = load i32, i32* @x, align 4
  %630 = load i32, i32* @y, align 4
  %631 = add i32 %629, -1
  %632 = mul i32 %631, %629
  %633 = and i32 %632, 1
  %634 = icmp eq i32 %633, 0
  %635 = icmp slt i32 %630, 10
  %636 = or i1 %635, %634
  %637 = select i1 %636, i32 1582784613, i32 1953679032
  br label %.backedge

638:                                              ; preds = %19
  ret i32 0

639:                                              ; preds = %19
  %640 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %17)
  %641 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %18)
  br label %.backedge

642:                                              ; preds = %19
  br label %.backedge

643:                                              ; preds = %19
  br label %.backedge

644:                                              ; preds = %19
  br label %.backedge

645:                                              ; preds = %19
  br label %.backedge

646:                                              ; preds = %19
  br label %.backedge

647:                                              ; preds = %19
  br label %.backedge

648:                                              ; preds = %19
  %649 = add i32 %.0118, 1
  br label %.backedge

650:                                              ; preds = %19
  br label %.backedge

651:                                              ; preds = %19
  br label %.backedge

652:                                              ; preds = %19
  %.0..0..0.109 = load volatile i32, i32* %1, align 4
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(801) %16, i8 48, i64 801, i1 false)
  %653 = add i32 %.0..0..0.109, 1
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %654
  store i8 0, i8* %655, align 1
  br label %.backedge

656:                                              ; preds = %19
  %657 = add i32 %.0116, -1
  br label %.backedge

658:                                              ; preds = %19
  br label %.backedge

659:                                              ; preds = %19
  %660 = sext i32 %.0118 to i64
  %661 = getelementptr inbounds [800 x i8], [800 x i8]* %11, i64 0, i64 %660
  %662 = load i8, i8* %661, align 1
  %663 = sub i32 %.0118, %.0116
  %664 = add i32 %663, %.0114
  %665 = sext i32 %664 to i64
  %666 = getelementptr inbounds [800 x i8], [800 x i8]* %12, i64 0, i64 %665
  %667 = load i8, i8* %666, align 1
  %668 = add i8 %.0120, -48
  %669 = add i8 %668, %662
  %.neg124 = add i8 %669, %667
  %.neg125 = add i32 %.0118, 1
  %670 = sext i32 %.neg125 to i64
  %671 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %670
  store i8 %.neg124, i8* %671, align 1
  br label %.backedge

672:                                              ; preds = %19
  %673 = add i32 %.0118, 1
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds [801 x i8], [801 x i8]* %13, i64 0, i64 %674
  %676 = load i8, i8* %675, align 1
  %677 = add i8 %676, -10
  store i8 %677, i8* %675, align 1
  br label %.backedge

678:                                              ; preds = %19
  br label %.backedge

679:                                              ; preds = %19
  br label %.backedge

680:                                              ; preds = %19
  br label %.backedge

681:                                              ; preds = %19
  %682 = add i32 %.0118, -1
  br label %.backedge

683:                                              ; preds = %19
  %.neg = add i8 %.0120, 48
  store i8 %.neg, i8* %16, align 16
  br label %.backedge

684:                                              ; preds = %19
  br label %.backedge

685:                                              ; preds = %19
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
