; ModuleID = 'build_ollvm/programs/p00015/s438917409.ll'
source_filename = "Project_CodeNet_C++1400/p00015/s438917409.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"overflow\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = alloca [82 x i32], align 16
  %12 = alloca [82 x i32], align 16
  %13 = alloca [82 x i32], align 16
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = bitcast [82 x i32]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(328) %16, i8 0, i64 328, i1 false)
  %17 = bitcast [82 x i32]* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(328) %17, i8 0, i64 328, i1 false)
  %18 = bitcast [82 x i32]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(328) %18, i8 0, i64 328, i1 false)
  %19 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32* nonnull %14)
  br label %20

20:                                               ; preds = %.backedge, %0
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ 0, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.0 = phi i32 [ -562594134, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -562594134, label %21
    i32 -2061501452, label %31
    i32 1621051535, label %43
    i32 1621557944, label %45
    i32 1014261333, label %46
    i32 1094668683, label %56
    i32 -1192941149, label %67
    i32 -630497640, label %69
    i32 756222218, label %72
    i32 728941241, label %82
    i32 -1314176149, label %93
    i32 -1444496158, label %94
    i32 -101791134, label %104
    i32 1338439731, label %115
    i32 1620087050, label %116
    i32 -288968320, label %119
    i32 -7701893, label %129
    i32 -1618330638, label %130
    i32 933878039, label %140
    i32 1243786773, label %152
    i32 369740831, label %154
    i32 -850278225, label %156
    i32 1508613682, label %157
    i32 557494106, label %167
    i32 -142668105, label %177
    i32 1541783002, label %178
    i32 -718308756, label %180
    i32 1679811970, label %183
    i32 -1334521343, label %193
    i32 -1528313485, label %211
    i32 57440083, label %213
    i32 -1802561997, label %214
    i32 -1946636824, label %224
    i32 2126692274, label %236
    i32 -935420091, label %238
    i32 805359998, label %240
    i32 1760431510, label %241
    i32 -2946775, label %242
    i32 1688647573, label %243
    i32 -2135362310, label %245
    i32 -714665706, label %253
    i32 -1504238878, label %254
    i32 1130019563, label %256
    i32 -1994983625, label %268
    i32 875107817, label %278
    i32 1065550925, label %292
    i32 -1717294378, label %293
    i32 330329416, label %295
    i32 1034506846, label %305
    i32 -1719665208, label %315
    i32 -160772719, label %316
    i32 -1301797875, label %318
    i32 1326453845, label %328
    i32 610057370, label %343
    i32 1329037780, label %345
    i32 -831192701, label %350
    i32 -1043847032, label %360
    i32 195017887, label %371
    i32 1810488157, label %372
    i32 32201895, label %382
    i32 343574418, label %393
    i32 -1736385143, label %395
    i32 -959626828, label %396
    i32 -1403542639, label %397
    i32 1180753688, label %407
    i32 -310129068, label %418
    i32 -1325307576, label %420
    i32 -1725521319, label %423
    i32 -519968311, label %433
    i32 -481280873, label %444
    i32 1253906593, label %446
    i32 -909908955, label %448
    i32 -1828706694, label %455
    i32 -1150920340, label %457
    i32 1246539460, label %467
    i32 693039858, label %483
    i32 905410890, label %484
    i32 -1379146435, label %485
    i32 -379924009, label %486
    i32 1352576215, label %487
    i32 -2103867398, label %497
    i32 642452076, label %508
    i32 980994389, label %510
    i32 -1363984954, label %511
    i32 1567072564, label %512
    i32 670222342, label %514
    i32 -1555887177, label %524
    i32 -770881822, label %534
    i32 -1891793953, label %535
    i32 -910415948, label %536
    i32 -506458466, label %537
    i32 -455582233, label %539
    i32 1886144303, label %541
    i32 2021828724, label %542
    i32 1671865200, label %543
    i32 1443996830, label %551
    i32 -1597334538, label %552
    i32 103055506, label %557
    i32 -1384453278, label %558
    i32 325802094, label %563
    i32 51589737, label %565
    i32 -1122990614, label %566
    i32 1133184927, label %567
    i32 51328326, label %568
    i32 318682298, label %575
    i32 -1968841310, label %576
  ]

.backedge:                                        ; preds = %20, %576, %575, %568, %567, %566, %565, %563, %558, %557, %552, %551, %543, %542, %541, %539, %537, %536, %535, %524, %514, %512, %511, %510, %508, %497, %487, %486, %485, %484, %483, %467, %457, %455, %448, %446, %444, %433, %423, %420, %418, %407, %397, %396, %395, %393, %382, %372, %371, %360, %350, %345, %343, %328, %318, %316, %315, %305, %295, %293, %292, %278, %268, %256, %254, %253, %245, %243, %242, %241, %240, %238, %236, %224, %214, %213, %211, %193, %183, %180, %178, %177, %167, %157, %156, %154, %152, %140, %130, %129, %119, %116, %115, %104, %94, %93, %82, %72, %69, %67, %56, %46, %45, %43, %31, %21
  %.088.be = phi i32 [ %.088, %20 ], [ %.088, %576 ], [ %.088, %575 ], [ %.088, %568 ], [ %.088, %567 ], [ %.088, %566 ], [ %.088, %565 ], [ %.088, %563 ], [ %.088, %558 ], [ %.088, %557 ], [ %.088, %552 ], [ %.088, %551 ], [ %.088, %543 ], [ %.088, %542 ], [ %.088, %541 ], [ 0, %539 ], [ %.088, %537 ], [ %.088, %536 ], [ %.088, %535 ], [ %.088, %524 ], [ %.088, %514 ], [ %.088, %512 ], [ %.088, %511 ], [ %.088, %510 ], [ %.088, %508 ], [ %.088, %497 ], [ %.088, %487 ], [ %.088, %486 ], [ %.088, %485 ], [ %.088, %484 ], [ %.088, %483 ], [ %.088, %467 ], [ %.088, %457 ], [ %.088, %455 ], [ %.088, %448 ], [ %.088, %446 ], [ %.088, %444 ], [ %.088, %433 ], [ %.088, %423 ], [ %.088, %420 ], [ %.088, %418 ], [ %.088, %407 ], [ %.088, %397 ], [ %.088, %396 ], [ %.088, %395 ], [ %.088, %393 ], [ %.088, %382 ], [ %.088, %372 ], [ %.088, %371 ], [ %.088, %360 ], [ %.088, %350 ], [ %.088, %345 ], [ %.088, %343 ], [ %.088, %328 ], [ %.088, %318 ], [ %.088, %316 ], [ %.088, %315 ], [ %.088, %305 ], [ %.088, %295 ], [ %.088, %293 ], [ %.088, %292 ], [ %.088, %278 ], [ %.088, %268 ], [ %.088, %256 ], [ %.088, %254 ], [ %.088, %253 ], [ %.088, %245 ], [ %.088, %243 ], [ %.088, %242 ], [ %.088, %241 ], [ %.088, %240 ], [ %.088, %238 ], [ %.088, %236 ], [ %.088, %224 ], [ %.088, %214 ], [ %.088, %213 ], [ %.088, %211 ], [ %.088, %193 ], [ %.088, %183 ], [ %.088, %180 ], [ %.088, %178 ], [ %.088, %177 ], [ %.088, %167 ], [ %.088, %157 ], [ %.088, %156 ], [ %.088, %154 ], [ %.088, %152 ], [ %.088, %140 ], [ %.088, %130 ], [ %.088, %129 ], [ %120, %119 ], [ %.088, %116 ], [ %.088, %115 ], [ 0, %104 ], [ %.088, %94 ], [ %.088, %93 ], [ %.088, %82 ], [ %.088, %72 ], [ %.088, %69 ], [ %.088, %67 ], [ %.088, %56 ], [ %.088, %46 ], [ %.088, %45 ], [ %.088, %43 ], [ %.088, %31 ], [ %.088, %21 ]
  %.086.be = phi i32 [ %.086, %20 ], [ %.086, %576 ], [ %.086, %575 ], [ %.086, %568 ], [ %.086, %567 ], [ %.086, %566 ], [ %.086, %565 ], [ %.086, %563 ], [ %.086, %558 ], [ %.086, %557 ], [ %.086, %552 ], [ %.086, %551 ], [ %544, %543 ], [ %.086, %542 ], [ %.086, %541 ], [ 0, %539 ], [ %.086, %537 ], [ %.086, %536 ], [ %.086, %535 ], [ %.086, %524 ], [ %.086, %514 ], [ %.086, %512 ], [ %.086, %511 ], [ %.086, %510 ], [ %.086, %508 ], [ %.086, %497 ], [ %.086, %487 ], [ %.086, %486 ], [ %.086, %485 ], [ %.086, %484 ], [ %.086, %483 ], [ %.086, %467 ], [ %.086, %457 ], [ %.086, %455 ], [ %.086, %448 ], [ %.086, %446 ], [ %.086, %444 ], [ %.086, %433 ], [ %.086, %423 ], [ %.086, %420 ], [ %.086, %418 ], [ %.086, %407 ], [ %.086, %397 ], [ %.086, %396 ], [ %.086, %395 ], [ %.086, %393 ], [ %.086, %382 ], [ %.086, %372 ], [ %.086, %371 ], [ %.086, %360 ], [ %.086, %350 ], [ %.086, %345 ], [ %.086, %343 ], [ %.086, %328 ], [ %.086, %318 ], [ %.086, %316 ], [ %.086, %315 ], [ %.086, %305 ], [ %.086, %295 ], [ %.086, %293 ], [ %.086, %292 ], [ %.086, %278 ], [ %.086, %268 ], [ %.086, %256 ], [ %.086, %254 ], [ %.086, %253 ], [ %.086, %245 ], [ %.086, %243 ], [ %.086, %242 ], [ %.086, %241 ], [ %.086, %240 ], [ %.086, %238 ], [ %.086, %236 ], [ %.086, %224 ], [ %.086, %214 ], [ %.086, %213 ], [ %.086, %211 ], [ %194, %193 ], [ %.086, %183 ], [ %.086, %180 ], [ %.086, %178 ], [ %.086, %177 ], [ %.086, %167 ], [ %.086, %157 ], [ %.086, %156 ], [ %.086, %154 ], [ %.086, %152 ], [ %.086, %140 ], [ %.086, %130 ], [ %.086, %129 ], [ %.086, %119 ], [ %.086, %116 ], [ %.086, %115 ], [ 0, %104 ], [ %.086, %94 ], [ %.086, %93 ], [ %.086, %82 ], [ %.086, %72 ], [ %.086, %69 ], [ %.086, %67 ], [ %.086, %56 ], [ %.086, %46 ], [ %.086, %45 ], [ %.086, %43 ], [ %.086, %31 ], [ %.086, %21 ]
  %.084.be = phi i32 [ %.084, %20 ], [ %.084, %576 ], [ %.084, %575 ], [ %.084, %568 ], [ %.084, %567 ], [ %.084, %566 ], [ %.084, %565 ], [ %564, %563 ], [ %.084, %558 ], [ %.084, %557 ], [ %.084, %552 ], [ %.084, %551 ], [ %.084, %543 ], [ %.084, %542 ], [ %.084, %541 ], [ %.084, %539 ], [ %.084, %537 ], [ %.084, %536 ], [ %.084, %535 ], [ %.084, %524 ], [ %.084, %514 ], [ %.084, %512 ], [ %.084, %511 ], [ %.084, %510 ], [ %.084, %508 ], [ %.084, %497 ], [ %.084, %487 ], [ %.084, %486 ], [ %.084, %485 ], [ %.084, %484 ], [ %.084, %483 ], [ %.084, %467 ], [ %.084, %457 ], [ %.084, %455 ], [ %.084, %448 ], [ %.084, %446 ], [ %.084, %444 ], [ %.084, %433 ], [ %.084, %423 ], [ %.084, %420 ], [ %.084, %418 ], [ %.084, %407 ], [ %.084, %397 ], [ %.084, %396 ], [ %.088, %395 ], [ %.084, %393 ], [ %.084, %382 ], [ %.084, %372 ], [ %.084, %371 ], [ %361, %360 ], [ %.084, %350 ], [ %.084, %345 ], [ %.084, %343 ], [ %.084, %328 ], [ %.084, %318 ], [ %.084, %316 ], [ %.084, %315 ], [ %.084, %305 ], [ %.084, %295 ], [ %294, %293 ], [ %.084, %292 ], [ %.084, %278 ], [ %.084, %268 ], [ %.084, %256 ], [ %.084, %254 ], [ 0, %253 ], [ %252, %245 ], [ %.084, %243 ], [ 0, %242 ], [ %.084, %241 ], [ %.084, %240 ], [ %.084, %238 ], [ %.084, %236 ], [ %.084, %224 ], [ %.084, %214 ], [ %.084, %213 ], [ %.084, %211 ], [ %.084, %193 ], [ %.084, %183 ], [ %.084, %180 ], [ %.084, %178 ], [ %.084, %177 ], [ %.084, %167 ], [ %.084, %157 ], [ %.084, %156 ], [ %.084, %154 ], [ %.084, %152 ], [ %.084, %140 ], [ %.084, %130 ], [ %.084, %129 ], [ %.084, %119 ], [ %.084, %116 ], [ %.084, %115 ], [ %.084, %104 ], [ %.084, %94 ], [ %.084, %93 ], [ %.084, %82 ], [ %.084, %72 ], [ %.084, %69 ], [ %.084, %67 ], [ %.084, %56 ], [ %.084, %46 ], [ %.084, %45 ], [ %.084, %43 ], [ %.084, %31 ], [ %.084, %21 ]
  %.082.be = phi i32 [ %.082, %20 ], [ %.082, %576 ], [ %.082, %575 ], [ 1, %568 ], [ %.082, %567 ], [ %.082, %566 ], [ %.082, %565 ], [ %.082, %563 ], [ 0, %558 ], [ %.082, %557 ], [ 1, %552 ], [ %.082, %551 ], [ %.082, %543 ], [ %.082, %542 ], [ %.082, %541 ], [ %.082, %539 ], [ %.082, %537 ], [ %.082, %536 ], [ %.082, %535 ], [ %.082, %524 ], [ %.082, %514 ], [ %.082, %512 ], [ %.082, %511 ], [ %.082, %510 ], [ %.082, %508 ], [ %.082, %497 ], [ %.082, %487 ], [ %.082, %486 ], [ %.082, %485 ], [ %.082, %484 ], [ %.082, %483 ], [ 1, %467 ], [ %.082, %457 ], [ %.082, %455 ], [ %.082, %448 ], [ 1, %446 ], [ %.082, %444 ], [ %.082, %433 ], [ %.082, %423 ], [ %.082, %420 ], [ %.082, %418 ], [ %.082, %407 ], [ %.082, %397 ], [ %.082, %396 ], [ %.082, %395 ], [ %.082, %393 ], [ %.082, %382 ], [ %.082, %372 ], [ %.082, %371 ], [ %.082, %360 ], [ %.082, %350 ], [ 1, %345 ], [ %.082, %343 ], [ 0, %328 ], [ %.082, %318 ], [ %.082, %316 ], [ %.082, %315 ], [ %.082, %305 ], [ %.082, %295 ], [ %.082, %293 ], [ %.082, %292 ], [ 1, %278 ], [ %.082, %268 ], [ 0, %256 ], [ %.082, %254 ], [ %.082, %253 ], [ %.082, %245 ], [ %.082, %243 ], [ 0, %242 ], [ %.082, %241 ], [ %.082, %240 ], [ %.082, %238 ], [ %.082, %236 ], [ %.082, %224 ], [ %.082, %214 ], [ %.082, %213 ], [ %.082, %211 ], [ %.082, %193 ], [ %.082, %183 ], [ %.082, %180 ], [ %.082, %178 ], [ %.082, %177 ], [ %.082, %167 ], [ %.082, %157 ], [ %.082, %156 ], [ %.082, %154 ], [ %.082, %152 ], [ %.082, %140 ], [ %.082, %130 ], [ %.082, %129 ], [ %.082, %119 ], [ %.082, %116 ], [ %.082, %115 ], [ %.082, %104 ], [ %.082, %94 ], [ %.082, %93 ], [ %.082, %82 ], [ %.082, %72 ], [ %.082, %69 ], [ %.082, %67 ], [ %.082, %56 ], [ %.082, %46 ], [ %.082, %45 ], [ %.082, %43 ], [ %.082, %31 ], [ %.082, %21 ]
  %.080.be = phi i32 [ %.080, %20 ], [ %.080, %576 ], [ %.080, %575 ], [ %.080, %568 ], [ %.080, %567 ], [ %.080, %566 ], [ %.080, %565 ], [ %.080, %563 ], [ %.080, %558 ], [ %.080, %557 ], [ %.080, %552 ], [ %.080, %551 ], [ %.080, %543 ], [ %.080, %542 ], [ %.080, %541 ], [ 0, %539 ], [ %.080, %537 ], [ %.080, %536 ], [ %.080, %535 ], [ %.080, %524 ], [ %.080, %514 ], [ %.080, %512 ], [ %.080, %511 ], [ %.080, %510 ], [ %.080, %508 ], [ %.080, %497 ], [ %.080, %487 ], [ %.080, %486 ], [ %.080, %485 ], [ %.080, %484 ], [ %.080, %483 ], [ %.080, %467 ], [ %.080, %457 ], [ %.080, %455 ], [ %.080, %448 ], [ %.080, %446 ], [ %.080, %444 ], [ %.080, %433 ], [ %.080, %423 ], [ %.080, %420 ], [ %.080, %418 ], [ %.080, %407 ], [ %.080, %397 ], [ %.080, %396 ], [ %.080, %395 ], [ %.080, %393 ], [ %.080, %382 ], [ %.080, %372 ], [ %.080, %371 ], [ %.080, %360 ], [ %.080, %350 ], [ %.080, %345 ], [ %.080, %343 ], [ %.080, %328 ], [ %.080, %318 ], [ %.080, %316 ], [ %.080, %315 ], [ %.080, %305 ], [ %.080, %295 ], [ %.080, %293 ], [ %.080, %292 ], [ %.080, %278 ], [ %.080, %268 ], [ %.080, %256 ], [ %.080, %254 ], [ %.080, %253 ], [ %.080, %245 ], [ %.080, %243 ], [ %.080, %242 ], [ %.080, %241 ], [ %.080, %240 ], [ %.080, %238 ], [ %.080, %236 ], [ %.080, %224 ], [ %.080, %214 ], [ 1, %213 ], [ %.080, %211 ], [ %.080, %193 ], [ %.080, %183 ], [ %.080, %180 ], [ %.080, %178 ], [ %.080, %177 ], [ %.080, %167 ], [ %.080, %157 ], [ %.080, %156 ], [ %.080, %154 ], [ %.080, %152 ], [ %.080, %140 ], [ %.080, %130 ], [ 1, %129 ], [ %.080, %119 ], [ %.080, %116 ], [ %.080, %115 ], [ 0, %104 ], [ %.080, %94 ], [ %.080, %93 ], [ %.080, %82 ], [ %.080, %72 ], [ %.080, %69 ], [ %.080, %67 ], [ %.080, %56 ], [ %.080, %46 ], [ %.080, %45 ], [ %.080, %43 ], [ %.080, %31 ], [ %.080, %21 ]
  %.078.be = phi i32 [ %.078, %20 ], [ %.078, %576 ], [ %.078, %575 ], [ %.078, %568 ], [ %.078, %567 ], [ %.078, %566 ], [ %.078, %565 ], [ %.078, %563 ], [ %.078, %558 ], [ %.078, %557 ], [ %.078, %552 ], [ %.078, %551 ], [ %.078, %543 ], [ %.078, %542 ], [ %.078, %541 ], [ %.078, %539 ], [ %.078, %537 ], [ %.078, %536 ], [ %.078, %535 ], [ %.078, %524 ], [ %.078, %514 ], [ %513, %512 ], [ %.078, %511 ], [ %.078, %510 ], [ %.078, %508 ], [ %.078, %497 ], [ %.078, %487 ], [ %.078, %486 ], [ %.078, %485 ], [ %.078, %484 ], [ %.078, %483 ], [ %.078, %467 ], [ %.078, %457 ], [ %.078, %455 ], [ %.078, %448 ], [ %.078, %446 ], [ %.078, %444 ], [ %.078, %433 ], [ %.078, %423 ], [ %.078, %420 ], [ %.078, %418 ], [ %.078, %407 ], [ %.078, %397 ], [ %.078, %396 ], [ %.078, %395 ], [ %.078, %393 ], [ %.078, %382 ], [ %.078, %372 ], [ %.078, %371 ], [ %.078, %360 ], [ %.078, %350 ], [ %.078, %345 ], [ %.078, %343 ], [ %.078, %328 ], [ %.078, %318 ], [ %.078, %316 ], [ %.078, %315 ], [ %.078, %305 ], [ %.078, %295 ], [ %.078, %293 ], [ %.078, %292 ], [ %.078, %278 ], [ %.078, %268 ], [ %.078, %256 ], [ %.078, %254 ], [ %.078, %253 ], [ %.078, %245 ], [ %.078, %243 ], [ %.078, %242 ], [ %.078, %241 ], [ %.078, %240 ], [ %.078, %238 ], [ %.078, %236 ], [ %.078, %224 ], [ %.078, %214 ], [ %.078, %213 ], [ %.078, %211 ], [ %.078, %193 ], [ %.078, %183 ], [ %.078, %180 ], [ %.078, %178 ], [ %.078, %177 ], [ %.078, %167 ], [ %.078, %157 ], [ %.078, %156 ], [ %.078, %154 ], [ %.078, %152 ], [ %.078, %140 ], [ %.078, %130 ], [ %.078, %129 ], [ %.078, %119 ], [ %.078, %116 ], [ %.078, %115 ], [ %.078, %104 ], [ %.078, %94 ], [ %.078, %93 ], [ %.078, %82 ], [ %.078, %72 ], [ %.078, %69 ], [ %.078, %67 ], [ %.078, %56 ], [ %.078, %46 ], [ %.078, %45 ], [ %.078, %43 ], [ %.078, %31 ], [ %.078, %21 ]
  %.076.be = phi i32 [ %.076, %20 ], [ %.076, %576 ], [ %.076, %575 ], [ %.076, %568 ], [ %.076, %567 ], [ %.076, %566 ], [ %.076, %565 ], [ %.076, %563 ], [ %.076, %558 ], [ %.076, %557 ], [ %.076, %552 ], [ %.076, %551 ], [ %.076, %543 ], [ %.076, %542 ], [ %.076, %541 ], [ %.076, %539 ], [ %538, %537 ], [ %.076, %536 ], [ %.076, %535 ], [ %.076, %524 ], [ %.076, %514 ], [ %.076, %512 ], [ %.076, %511 ], [ %.076, %510 ], [ %.076, %508 ], [ %.076, %497 ], [ %.076, %487 ], [ %.076, %486 ], [ %.076, %485 ], [ %.076, %484 ], [ %.076, %483 ], [ %.076, %467 ], [ %.076, %457 ], [ %.076, %455 ], [ %.076, %448 ], [ %.076, %446 ], [ %.076, %444 ], [ %.076, %433 ], [ %.076, %423 ], [ %.076, %420 ], [ %.076, %418 ], [ %.076, %407 ], [ %.076, %397 ], [ %.076, %396 ], [ %.076, %395 ], [ %.076, %393 ], [ %.076, %382 ], [ %.076, %372 ], [ %.076, %371 ], [ %.076, %360 ], [ %.076, %350 ], [ %.076, %345 ], [ %.076, %343 ], [ %.076, %328 ], [ %.076, %318 ], [ %.076, %316 ], [ %.076, %315 ], [ %.076, %305 ], [ %.076, %295 ], [ %.076, %293 ], [ %.076, %292 ], [ %.076, %278 ], [ %.076, %268 ], [ %.076, %256 ], [ %.076, %254 ], [ %.076, %253 ], [ %.076, %245 ], [ %.076, %243 ], [ %.076, %242 ], [ %.076, %241 ], [ %.076, %240 ], [ %.076, %238 ], [ %.076, %236 ], [ %.076, %224 ], [ %.076, %214 ], [ %.076, %213 ], [ %.076, %211 ], [ %.076, %193 ], [ %.076, %183 ], [ %.076, %180 ], [ %.076, %178 ], [ %.076, %177 ], [ %.076, %167 ], [ %.076, %157 ], [ %.076, %156 ], [ %.076, %154 ], [ %.076, %152 ], [ %.076, %140 ], [ %.076, %130 ], [ %.076, %129 ], [ %.076, %119 ], [ %.076, %116 ], [ %.076, %115 ], [ %.076, %104 ], [ %.076, %94 ], [ %.076, %93 ], [ %83, %82 ], [ %.076, %72 ], [ %.076, %69 ], [ %.076, %67 ], [ %.076, %56 ], [ %.076, %46 ], [ 0, %45 ], [ %.076, %43 ], [ %.076, %31 ], [ %.076, %21 ]
  %.074.be = phi i32 [ %.074, %20 ], [ %.074, %576 ], [ %.074, %575 ], [ %.074, %568 ], [ %.074, %567 ], [ %.074, %566 ], [ %.074, %565 ], [ %.074, %563 ], [ %.074, %558 ], [ %.074, %557 ], [ %.074, %552 ], [ %.074, %551 ], [ %.074, %543 ], [ %.074, %542 ], [ %.074, %541 ], [ %.074, %539 ], [ %.074, %537 ], [ %.074, %536 ], [ %.074, %535 ], [ %.074, %524 ], [ %.074, %514 ], [ %.074, %512 ], [ %.074, %511 ], [ %.074, %510 ], [ %.074, %508 ], [ %.074, %497 ], [ %.074, %487 ], [ %.neg, %486 ], [ %.074, %485 ], [ %.074, %484 ], [ %.074, %483 ], [ %.074, %467 ], [ %.074, %457 ], [ %.074, %455 ], [ %.074, %448 ], [ %.084, %446 ], [ %.074, %444 ], [ %.074, %433 ], [ %.074, %423 ], [ %.074, %420 ], [ %.074, %418 ], [ %.074, %407 ], [ %.074, %397 ], [ 0, %396 ], [ %.074, %395 ], [ %.074, %393 ], [ %.074, %382 ], [ %.074, %372 ], [ %.074, %371 ], [ %.074, %360 ], [ %.074, %350 ], [ %.074, %345 ], [ %.074, %343 ], [ %.074, %328 ], [ %.074, %318 ], [ %.074, %316 ], [ %.074, %315 ], [ %.074, %305 ], [ %.074, %295 ], [ %.074, %293 ], [ %.074, %292 ], [ %.074, %278 ], [ %.074, %268 ], [ %.074, %256 ], [ %.074, %254 ], [ %.074, %253 ], [ %.074, %245 ], [ %.074, %243 ], [ %.074, %242 ], [ %.074, %241 ], [ %.074, %240 ], [ %.074, %238 ], [ %.074, %236 ], [ %.074, %224 ], [ %.074, %214 ], [ %.074, %213 ], [ %.074, %211 ], [ %.074, %193 ], [ %.074, %183 ], [ %.074, %180 ], [ %.074, %178 ], [ %.074, %177 ], [ %.074, %167 ], [ %.074, %157 ], [ %.074, %156 ], [ %.074, %154 ], [ %.074, %152 ], [ %.074, %140 ], [ %.074, %130 ], [ %.074, %129 ], [ %.074, %119 ], [ %.074, %116 ], [ %.074, %115 ], [ %.074, %104 ], [ %.074, %94 ], [ %.074, %93 ], [ %.074, %82 ], [ %.074, %72 ], [ %.074, %69 ], [ %.074, %67 ], [ %.074, %56 ], [ %.074, %46 ], [ %.074, %45 ], [ %.074, %43 ], [ %.074, %31 ], [ %.074, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ -1555887177, %576 ], [ -2103867398, %575 ], [ 1246539460, %568 ], [ -519968311, %567 ], [ 1180753688, %566 ], [ 32201895, %565 ], [ -1043847032, %563 ], [ 1326453845, %558 ], [ 1034506846, %557 ], [ 875107817, %552 ], [ -1946636824, %551 ], [ -1334521343, %543 ], [ 557494106, %542 ], [ 933878039, %541 ], [ -101791134, %539 ], [ 728941241, %537 ], [ 1094668683, %536 ], [ -2061501452, %535 ], [ %533, %524 ], [ %523, %514 ], [ -562594134, %512 ], [ 1567072564, %511 ], [ -1363984954, %510 ], [ %509, %508 ], [ %507, %497 ], [ %496, %487 ], [ -1403542639, %486 ], [ -379924009, %485 ], [ -1379146435, %484 ], [ 905410890, %483 ], [ %482, %467 ], [ %466, %457 ], [ %456, %455 ], [ %454, %448 ], [ -1379146435, %446 ], [ %445, %444 ], [ %443, %433 ], [ %432, %423 ], [ %422, %420 ], [ %419, %418 ], [ %417, %407 ], [ %406, %397 ], [ -1403542639, %396 ], [ -959626828, %395 ], [ %394, %393 ], [ %392, %382 ], [ %381, %372 ], [ -160772719, %371 ], [ %370, %360 ], [ %359, %350 ], [ -831192701, %345 ], [ %344, %343 ], [ %342, %328 ], [ %327, %318 ], [ %317, %316 ], [ -160772719, %315 ], [ %314, %305 ], [ %304, %295 ], [ -1504238878, %293 ], [ -1717294378, %292 ], [ %291, %278 ], [ %277, %268 ], [ %267, %256 ], [ %255, %254 ], [ -1504238878, %253 ], [ 1688647573, %245 ], [ %244, %243 ], [ 1688647573, %242 ], [ -718308756, %241 ], [ 1760431510, %240 ], [ -1802561997, %238 ], [ %237, %236 ], [ %235, %224 ], [ %223, %214 ], [ -1802561997, %213 ], [ %212, %211 ], [ %210, %193 ], [ %192, %183 ], [ %182, %180 ], [ -718308756, %178 ], [ 1620087050, %177 ], [ %176, %167 ], [ %166, %157 ], [ 1508613682, %156 ], [ -1618330638, %154 ], [ %153, %152 ], [ %151, %140 ], [ %139, %130 ], [ -1618330638, %129 ], [ %128, %119 ], [ %118, %116 ], [ 1620087050, %115 ], [ %114, %104 ], [ %103, %94 ], [ 1014261333, %93 ], [ %92, %82 ], [ %81, %72 ], [ 756222218, %69 ], [ %68, %67 ], [ %66, %56 ], [ %55, %46 ], [ 1014261333, %45 ], [ %44, %43 ], [ %42, %31 ], [ %30, %21 ]
  br label %20

21:                                               ; preds = %20
  %22 = load i32, i32* @x, align 4
  %23 = load i32, i32* @y, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 -2061501452, i32 -1891793953
  br label %.backedge

31:                                               ; preds = %20
  %32 = load i32, i32* %14, align 4
  %33 = icmp slt i32 %.078, %32
  store i1 %33, i1* %10, align 1
  %34 = load i32, i32* @x, align 4
  %35 = load i32, i32* @y, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 1621051535, i32 -1891793953
  br label %.backedge

43:                                               ; preds = %20
  %.0..0..0. = load volatile i1, i1* %10, align 1
  %44 = select i1 %.0..0..0., i32 1621557944, i32 670222342
  br label %.backedge

45:                                               ; preds = %20
  br label %.backedge

46:                                               ; preds = %20
  %47 = load i32, i32* @x, align 4
  %48 = load i32, i32* @y, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 1094668683, i32 -910415948
  br label %.backedge

56:                                               ; preds = %20
  %57 = icmp slt i32 %.076, 82
  store i1 %57, i1* %9, align 1
  %58 = load i32, i32* @x, align 4
  %59 = load i32, i32* @y, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -1192941149, i32 -910415948
  br label %.backedge

67:                                               ; preds = %20
  %.0..0..0.65 = load volatile i1, i1* %9, align 1
  %68 = select i1 %.0..0..0.65, i32 -630497640, i32 -1444496158
  br label %.backedge

69:                                               ; preds = %20
  %70 = sext i32 %.076 to i64
  %71 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %70
  store i32 0, i32* %71, align 4
  br label %.backedge

72:                                               ; preds = %20
  %73 = load i32, i32* @x, align 4
  %74 = load i32, i32* @y, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 728941241, i32 -506458466
  br label %.backedge

82:                                               ; preds = %20
  %83 = add i32 %.076, 1
  %84 = load i32, i32* @x, align 4
  %85 = load i32, i32* @y, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 -1314176149, i32 -506458466
  br label %.backedge

93:                                               ; preds = %20
  br label %.backedge

94:                                               ; preds = %20
  %95 = load i32, i32* @x, align 4
  %96 = load i32, i32* @y, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -101791134, i32 -455582233
  br label %.backedge

104:                                              ; preds = %20
  %105 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %15)
  %106 = load i32, i32* @x, align 4
  %107 = load i32, i32* @y, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 1338439731, i32 -455582233
  br label %.backedge

115:                                              ; preds = %20
  br label %.backedge

116:                                              ; preds = %20
  %117 = load i8, i8* %15, align 1
  %.not96 = icmp eq i8 %117, 10
  %118 = select i1 %.not96, i32 1541783002, i32 -288968320
  br label %.backedge

119:                                              ; preds = %20
  %120 = add i32 %.088, 1
  %121 = load i8, i8* %15, align 1
  %122 = sext i8 %121 to i32
  %123 = add nsw i32 %122, -48
  %124 = sext i32 %120 to i64
  %125 = getelementptr inbounds [82 x i32], [82 x i32]* %11, i64 0, i64 %124
  store i32 %123, i32* %125, align 4
  %126 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %15)
  %127 = icmp eq i32 %120, 81
  %128 = select i1 %127, i32 -7701893, i32 1508613682
  br label %.backedge

129:                                              ; preds = %20
  br label %.backedge

130:                                              ; preds = %20
  %131 = load i32, i32* @x, align 4
  %132 = load i32, i32* @y, align 4
  %133 = add i32 %131, -1
  %134 = mul i32 %133, %131
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %137, %136
  %139 = select i1 %138, i32 933878039, i32 1886144303
  br label %.backedge

140:                                              ; preds = %20
  %141 = load i8, i8* %15, align 1
  %142 = icmp ne i8 %141, 10
  store i1 %142, i1* %8, align 1
  %143 = load i32, i32* @x, align 4
  %144 = load i32, i32* @y, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 1243786773, i32 1886144303
  br label %.backedge

152:                                              ; preds = %20
  %.0..0..0.66 = load volatile i1, i1* %8, align 1
  %153 = select i1 %.0..0..0.66, i32 369740831, i32 -850278225
  br label %.backedge

154:                                              ; preds = %20
  %155 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %15)
  br label %.backedge

156:                                              ; preds = %20
  br label %.backedge

157:                                              ; preds = %20
  %158 = load i32, i32* @x, align 4
  %159 = load i32, i32* @y, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 557494106, i32 2021828724
  br label %.backedge

167:                                              ; preds = %20
  %168 = load i32, i32* @x, align 4
  %169 = load i32, i32* @y, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -142668105, i32 2021828724
  br label %.backedge

177:                                              ; preds = %20
  br label %.backedge

178:                                              ; preds = %20
  %179 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %15)
  br label %.backedge

180:                                              ; preds = %20
  %181 = load i8, i8* %15, align 1
  %.not95 = icmp eq i8 %181, 10
  %182 = select i1 %.not95, i32 -2946775, i32 1679811970
  br label %.backedge

183:                                              ; preds = %20
  %184 = load i32, i32* @x, align 4
  %185 = load i32, i32* @y, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 -1334521343, i32 1671865200
  br label %.backedge

193:                                              ; preds = %20
  %194 = add i32 %.086, 1
  %195 = load i8, i8* %15, align 1
  %196 = sext i8 %195 to i32
  %197 = add nsw i32 %196, -48
  %198 = sext i32 %194 to i64
  %199 = getelementptr inbounds [82 x i32], [82 x i32]* %12, i64 0, i64 %198
  store i32 %197, i32* %199, align 4
  %200 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %15)
  %201 = icmp eq i32 %194, 81
  store i1 %201, i1* %7, align 1
  %202 = load i32, i32* @x, align 4
  %203 = load i32, i32* @y, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 -1528313485, i32 1671865200
  br label %.backedge

211:                                              ; preds = %20
  %.0..0..0.67 = load volatile i1, i1* %7, align 1
  %212 = select i1 %.0..0..0.67, i32 57440083, i32 1760431510
  br label %.backedge

213:                                              ; preds = %20
  br label %.backedge

214:                                              ; preds = %20
  %215 = load i32, i32* @x, align 4
  %216 = load i32, i32* @y, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 -1946636824, i32 1443996830
  br label %.backedge

224:                                              ; preds = %20
  %225 = load i8, i8* %15, align 1
  %226 = icmp ne i8 %225, 10
  store i1 %226, i1* %6, align 1
  %227 = load i32, i32* @x, align 4
  %228 = load i32, i32* @y, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 2126692274, i32 1443996830
  br label %.backedge

236:                                              ; preds = %20
  %.0..0..0.68 = load volatile i1, i1* %6, align 1
  %237 = select i1 %.0..0..0.68, i32 -935420091, i32 805359998
  br label %.backedge

238:                                              ; preds = %20
  %239 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %15)
  br label %.backedge

240:                                              ; preds = %20
  br label %.backedge

241:                                              ; preds = %20
  br label %.backedge

242:                                              ; preds = %20
  br label %.backedge

243:                                              ; preds = %20
  %.not94 = icmp eq i32 %.088, %.084
  %244 = select i1 %.not94, i32 -714665706, i32 -2135362310
  br label %.backedge

245:                                              ; preds = %20
  %246 = sub i32 %.088, %.084
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [82 x i32], [82 x i32]* %11, i64 0, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %.084 to i64
  %251 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %250
  store i32 %249, i32* %251, align 4
  %252 = add i32 %.084, 1
  br label %.backedge

253:                                              ; preds = %20
  br label %.backedge

254:                                              ; preds = %20
  %.not93 = icmp eq i32 %.086, %.084
  %255 = select i1 %.not93, i32 330329416, i32 1130019563
  br label %.backedge

256:                                              ; preds = %20
  %257 = sub i32 %.086, %.084
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [82 x i32], [82 x i32]* %12, i64 0, i64 %258
  %260 = load i32, i32* %259, align 4
  %261 = add i32 %260, %.082
  %262 = sext i32 %.084 to i64
  %263 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %262
  %264 = load i32, i32* %263, align 4
  %265 = add i32 %261, %264
  store i32 %265, i32* %263, align 4
  %266 = icmp sgt i32 %265, 9
  %267 = select i1 %266, i32 -1994983625, i32 -1717294378
  br label %.backedge

268:                                              ; preds = %20
  %269 = load i32, i32* @x, align 4
  %270 = load i32, i32* @y, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 875107817, i32 -1597334538
  br label %.backedge

278:                                              ; preds = %20
  %279 = sext i32 %.084 to i64
  %280 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = add i32 %281, -10
  store i32 %282, i32* %280, align 4
  %283 = load i32, i32* @x, align 4
  %284 = load i32, i32* @y, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 1065550925, i32 -1597334538
  br label %.backedge

292:                                              ; preds = %20
  br label %.backedge

293:                                              ; preds = %20
  %294 = add i32 %.084, 1
  br label %.backedge

295:                                              ; preds = %20
  %296 = load i32, i32* @x, align 4
  %297 = load i32, i32* @y, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 1034506846, i32 103055506
  br label %.backedge

305:                                              ; preds = %20
  %306 = load i32, i32* @x, align 4
  %307 = load i32, i32* @y, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 -1719665208, i32 103055506
  br label %.backedge

315:                                              ; preds = %20
  br label %.backedge

316:                                              ; preds = %20
  %.not92 = icmp eq i32 %.082, 0
  %317 = select i1 %.not92, i32 1810488157, i32 -1301797875
  br label %.backedge

318:                                              ; preds = %20
  %319 = load i32, i32* @x, align 4
  %320 = load i32, i32* @y, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 1326453845, i32 -1384453278
  br label %.backedge

328:                                              ; preds = %20
  %329 = sext i32 %.084 to i64
  %330 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = add i32 %331, 1
  store i32 %332, i32* %330, align 4
  %333 = icmp sgt i32 %332, 9
  store i1 %333, i1* %5, align 1
  %334 = load i32, i32* @x, align 4
  %335 = load i32, i32* @y, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 610057370, i32 -1384453278
  br label %.backedge

343:                                              ; preds = %20
  %.0..0..0.69 = load volatile i1, i1* %5, align 1
  %344 = select i1 %.0..0..0.69, i32 1329037780, i32 -831192701
  br label %.backedge

345:                                              ; preds = %20
  %346 = sext i32 %.084 to i64
  %347 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = add i32 %348, -10
  store i32 %349, i32* %347, align 4
  br label %.backedge

350:                                              ; preds = %20
  %351 = load i32, i32* @x, align 4
  %352 = load i32, i32* @y, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 -1043847032, i32 325802094
  br label %.backedge

360:                                              ; preds = %20
  %361 = add i32 %.084, 1
  %362 = load i32, i32* @x, align 4
  %363 = load i32, i32* @y, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 195017887, i32 325802094
  br label %.backedge

371:                                              ; preds = %20
  br label %.backedge

372:                                              ; preds = %20
  %373 = load i32, i32* @x, align 4
  %374 = load i32, i32* @y, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 32201895, i32 51589737
  br label %.backedge

382:                                              ; preds = %20
  %383 = icmp sgt i32 %.088, %.084
  store i1 %383, i1* %4, align 1
  %384 = load i32, i32* @x, align 4
  %385 = load i32, i32* @y, align 4
  %386 = add i32 %384, -1
  %387 = mul i32 %386, %384
  %388 = and i32 %387, 1
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %390, %389
  %392 = select i1 %391, i32 343574418, i32 51589737
  br label %.backedge

393:                                              ; preds = %20
  %.0..0..0.70 = load volatile i1, i1* %4, align 1
  %394 = select i1 %.0..0..0.70, i32 -1736385143, i32 -959626828
  br label %.backedge

395:                                              ; preds = %20
  br label %.backedge

396:                                              ; preds = %20
  br label %.backedge

397:                                              ; preds = %20
  %398 = load i32, i32* @x, align 4
  %399 = load i32, i32* @y, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 1180753688, i32 -1122990614
  br label %.backedge

407:                                              ; preds = %20
  %408 = icmp slt i32 %.074, %.084
  store i1 %408, i1* %3, align 1
  %409 = load i32, i32* @x, align 4
  %410 = load i32, i32* @y, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 -310129068, i32 -1122990614
  br label %.backedge

418:                                              ; preds = %20
  %.0..0..0.71 = load volatile i1, i1* %3, align 1
  %419 = select i1 %.0..0..0.71, i32 -1325307576, i32 1352576215
  br label %.backedge

420:                                              ; preds = %20
  %421 = icmp eq i32 %.084, 81
  %422 = select i1 %421, i32 1253906593, i32 -1725521319
  br label %.backedge

423:                                              ; preds = %20
  %424 = load i32, i32* @x, align 4
  %425 = load i32, i32* @y, align 4
  %426 = add i32 %424, -1
  %427 = mul i32 %426, %424
  %428 = and i32 %427, 1
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %430, %429
  %432 = select i1 %431, i32 -519968311, i32 1133184927
  br label %.backedge

433:                                              ; preds = %20
  %434 = icmp ne i32 %.080, 0
  store i1 %434, i1* %2, align 1
  %435 = load i32, i32* @x, align 4
  %436 = load i32, i32* @y, align 4
  %437 = add i32 %435, -1
  %438 = mul i32 %437, %435
  %439 = and i32 %438, 1
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %441, %440
  %443 = select i1 %442, i32 -481280873, i32 1133184927
  br label %.backedge

444:                                              ; preds = %20
  %.0..0..0.72 = load volatile i1, i1* %2, align 1
  %445 = select i1 %.0..0..0.72, i32 1253906593, i32 -909908955
  br label %.backedge

446:                                              ; preds = %20
  %447 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

448:                                              ; preds = %20
  %449 = xor i32 %.074, -1
  %450 = add i32 %.084, %449
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %451
  %453 = load i32, i32* %452, align 4
  %.not91 = icmp eq i32 %453, 0
  %454 = select i1 %.not91, i32 -1828706694, i32 -1150920340
  br label %.backedge

455:                                              ; preds = %20
  %.not = icmp eq i32 %.082, 0
  %456 = select i1 %.not, i32 905410890, i32 -1150920340
  br label %.backedge

457:                                              ; preds = %20
  %458 = load i32, i32* @x, align 4
  %459 = load i32, i32* @y, align 4
  %460 = add i32 %458, -1
  %461 = mul i32 %460, %458
  %462 = and i32 %461, 1
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %464, %463
  %466 = select i1 %465, i32 1246539460, i32 51328326
  br label %.backedge

467:                                              ; preds = %20
  %468 = xor i32 %.074, -1
  %469 = add i32 %.084, %468
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %470
  %472 = load i32, i32* %471, align 4
  %473 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %472)
  %474 = load i32, i32* @x, align 4
  %475 = load i32, i32* @y, align 4
  %476 = add i32 %474, -1
  %477 = mul i32 %476, %474
  %478 = and i32 %477, 1
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %480, %479
  %482 = select i1 %481, i32 693039858, i32 51328326
  br label %.backedge

483:                                              ; preds = %20
  br label %.backedge

484:                                              ; preds = %20
  br label %.backedge

485:                                              ; preds = %20
  br label %.backedge

486:                                              ; preds = %20
  %.neg = add i32 %.074, 1
  br label %.backedge

487:                                              ; preds = %20
  %488 = load i32, i32* @x, align 4
  %489 = load i32, i32* @y, align 4
  %490 = add i32 %488, -1
  %491 = mul i32 %490, %488
  %492 = and i32 %491, 1
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %494, %493
  %496 = select i1 %495, i32 -2103867398, i32 318682298
  br label %.backedge

497:                                              ; preds = %20
  %498 = icmp ne i32 %.082, 1
  store i1 %498, i1* %1, align 1
  %499 = load i32, i32* @x, align 4
  %500 = load i32, i32* @y, align 4
  %501 = add i32 %499, -1
  %502 = mul i32 %501, %499
  %503 = and i32 %502, 1
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %505, %504
  %507 = select i1 %506, i32 642452076, i32 318682298
  br label %.backedge

508:                                              ; preds = %20
  %.0..0..0.73 = load volatile i1, i1* %1, align 1
  %509 = select i1 %.0..0..0.73, i32 980994389, i32 -1363984954
  br label %.backedge

510:                                              ; preds = %20
  %putchar90 = call i32 @putchar(i32 48)
  br label %.backedge

511:                                              ; preds = %20
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

512:                                              ; preds = %20
  %513 = add i32 %.078, 1
  br label %.backedge

514:                                              ; preds = %20
  %515 = load i32, i32* @x, align 4
  %516 = load i32, i32* @y, align 4
  %517 = add i32 %515, -1
  %518 = mul i32 %517, %515
  %519 = and i32 %518, 1
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %521, %520
  %523 = select i1 %522, i32 -1555887177, i32 -1968841310
  br label %.backedge

524:                                              ; preds = %20
  %525 = load i32, i32* @x, align 4
  %526 = load i32, i32* @y, align 4
  %527 = add i32 %525, -1
  %528 = mul i32 %527, %525
  %529 = and i32 %528, 1
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %531, %530
  %533 = select i1 %532, i32 -770881822, i32 -1968841310
  br label %.backedge

534:                                              ; preds = %20
  ret i32 0

535:                                              ; preds = %20
  br label %.backedge

536:                                              ; preds = %20
  br label %.backedge

537:                                              ; preds = %20
  %538 = add i32 %.076, 1
  br label %.backedge

539:                                              ; preds = %20
  %540 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %15)
  br label %.backedge

541:                                              ; preds = %20
  br label %.backedge

542:                                              ; preds = %20
  br label %.backedge

543:                                              ; preds = %20
  %544 = add i32 %.086, 1
  %545 = load i8, i8* %15, align 1
  %546 = sext i8 %545 to i32
  %547 = add nsw i32 %546, -48
  %548 = sext i32 %544 to i64
  %549 = getelementptr inbounds [82 x i32], [82 x i32]* %12, i64 0, i64 %548
  store i32 %547, i32* %549, align 4
  %550 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %15)
  br label %.backedge

551:                                              ; preds = %20
  br label %.backedge

552:                                              ; preds = %20
  %553 = sext i32 %.084 to i64
  %554 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = add i32 %555, -10
  store i32 %556, i32* %554, align 4
  br label %.backedge

557:                                              ; preds = %20
  br label %.backedge

558:                                              ; preds = %20
  %559 = sext i32 %.084 to i64
  %560 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %559
  %561 = load i32, i32* %560, align 4
  %562 = add i32 %561, 1
  store i32 %562, i32* %560, align 4
  br label %.backedge

563:                                              ; preds = %20
  %564 = add i32 %.084, 1
  br label %.backedge

565:                                              ; preds = %20
  br label %.backedge

566:                                              ; preds = %20
  br label %.backedge

567:                                              ; preds = %20
  br label %.backedge

568:                                              ; preds = %20
  %569 = xor i32 %.074, -1
  %570 = add i32 %.084, %569
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds [82 x i32], [82 x i32]* %13, i64 0, i64 %571
  %573 = load i32, i32* %572, align 4
  %574 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %573)
  br label %.backedge

575:                                              ; preds = %20
  br label %.backedge

576:                                              ; preds = %20
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
