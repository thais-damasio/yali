; ModuleID = 'build_ollvm/programs/p00015/s107900710.ll'
source_filename = "Project_CodeNet_C++1400/p00015/s107900710.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"%s\0A%s\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str.3 = private unnamed_addr constant [9 x i8] c"overflow\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca [101 x i8], align 16
  %9 = alloca [101 x i8], align 16
  %10 = alloca [100 x i32], align 16
  %11 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32* nonnull %7)
  %12 = bitcast [100 x i32]* %10 to i8*
  %13 = getelementptr inbounds [101 x i8], [101 x i8]* %9, i64 0, i64 0
  %14 = getelementptr inbounds [101 x i8], [101 x i8]* %8, i64 0, i64 0
  br label %15

15:                                               ; preds = %.backedge, %0
  %.073 = phi i32 [ 0, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i8 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ 972082907, %0 ], [ %.059.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.059, label %.backedge [
    i32 972082907, label %16
    i32 886030332, label %26
    i32 1866927915, label %38
    i32 -1035986824, label %40
    i32 1501600462, label %46
    i32 -1361134222, label %51
    i32 -1110385872, label %61
    i32 -874805192, label %71
    i32 261302073, label %72
    i32 -2024081912, label %73
    i32 1935025817, label %76
    i32 -683575249, label %86
    i32 -393306557, label %97
    i32 -712302541, label %98
    i32 528030494, label %100
    i32 -1146378185, label %110
    i32 -1241425559, label %124
    i32 -991911402, label %126
    i32 1984288341, label %136
    i32 -1793691678, label %157
    i32 190698182, label %158
    i32 1928141436, label %168
    i32 2113230783, label %180
    i32 -1528050170, label %182
    i32 856609119, label %192
    i32 1693763747, label %213
    i32 -1952168321, label %214
    i32 1394649068, label %224
    i32 -1445880172, label %234
    i32 -269285846, label %235
    i32 1069830433, label %237
    i32 1615826085, label %247
    i32 1956936801, label %257
    i32 -104535529, label %258
    i32 271249309, label %263
    i32 -122028242, label %269
    i32 1650584296, label %279
    i32 430922392, label %291
    i32 581709940, label %293
    i32 -304362173, label %303
    i32 99473848, label %313
    i32 1231822082, label %314
    i32 -1014144577, label %325
    i32 -1666133527, label %335
    i32 390769143, label %348
    i32 -558841049, label %349
    i32 -1114157934, label %359
    i32 -1464708336, label %374
    i32 527455410, label %375
    i32 988495179, label %376
    i32 1192186477, label %377
    i32 1183356942, label %379
    i32 -130359147, label %382
    i32 -349197753, label %392
    i32 -1859311775, label %403
    i32 429427028, label %405
    i32 -596020529, label %415
    i32 -1190697507, label %425
    i32 1069086492, label %426
    i32 -211741739, label %427
    i32 -392473482, label %430
    i32 1809779747, label %435
    i32 176402038, label %437
    i32 565676316, label %438
    i32 -314471500, label %439
    i32 1108212719, label %441
    i32 -323475127, label %451
    i32 424132754, label %461
    i32 250254759, label %462
    i32 -503770897, label %463
    i32 1066807716, label %464
    i32 8009715, label %465
    i32 -579076753, label %468
    i32 1893422457, label %480
    i32 1360961859, label %481
    i32 -193437245, label %493
    i32 1561481159, label %494
    i32 1414995492, label %495
    i32 -782477672, label %496
    i32 1507466750, label %497
    i32 -1170678662, label %500
    i32 143035868, label %505
    i32 354799679, label %506
    i32 -1356534966, label %507
  ]

.backedge:                                        ; preds = %15, %507, %506, %505, %500, %497, %496, %495, %494, %493, %481, %480, %468, %465, %464, %463, %462, %451, %441, %439, %438, %437, %435, %430, %427, %426, %425, %415, %405, %403, %392, %382, %379, %377, %376, %375, %374, %359, %349, %348, %335, %325, %314, %313, %303, %293, %291, %279, %269, %263, %258, %257, %247, %237, %235, %234, %224, %214, %213, %192, %182, %180, %168, %158, %157, %136, %126, %124, %110, %100, %98, %97, %86, %76, %73, %72, %71, %61, %51, %46, %40, %38, %26, %16
  %.073.be = phi i32 [ %.073, %15 ], [ %.073, %507 ], [ %.073, %506 ], [ %.073, %505 ], [ %.073, %500 ], [ %.073, %497 ], [ %.073, %496 ], [ %.073, %495 ], [ %.073, %494 ], [ %.073, %493 ], [ %.073, %481 ], [ %.073, %480 ], [ %.073, %468 ], [ %.073, %465 ], [ %.073, %464 ], [ %.073, %463 ], [ %.073, %462 ], [ %.073, %451 ], [ %.073, %441 ], [ %440, %439 ], [ %.073, %438 ], [ %.073, %437 ], [ %.073, %435 ], [ %.073, %430 ], [ %.073, %427 ], [ %.073, %426 ], [ %.073, %425 ], [ %.073, %415 ], [ %.073, %405 ], [ %.073, %403 ], [ %.073, %392 ], [ %.073, %382 ], [ %.073, %379 ], [ %.073, %377 ], [ %.073, %376 ], [ %.073, %375 ], [ %.073, %374 ], [ %.073, %359 ], [ %.073, %349 ], [ %.073, %348 ], [ %.073, %335 ], [ %.073, %325 ], [ %.073, %314 ], [ %.073, %313 ], [ %.073, %303 ], [ %.073, %293 ], [ %.073, %291 ], [ %.073, %279 ], [ %.073, %269 ], [ %.073, %263 ], [ %.073, %258 ], [ %.073, %257 ], [ %.073, %247 ], [ %.073, %237 ], [ %.073, %235 ], [ %.073, %234 ], [ %.073, %224 ], [ %.073, %214 ], [ %.073, %213 ], [ %.073, %192 ], [ %.073, %182 ], [ %.073, %180 ], [ %.073, %168 ], [ %.073, %158 ], [ %.073, %157 ], [ %.073, %136 ], [ %.073, %126 ], [ %.073, %124 ], [ %.073, %110 ], [ %.073, %100 ], [ %.073, %98 ], [ %.073, %97 ], [ %.073, %86 ], [ %.073, %76 ], [ %.073, %73 ], [ %.073, %72 ], [ %.073, %71 ], [ %.073, %61 ], [ %.073, %51 ], [ %.073, %46 ], [ %.073, %40 ], [ %.073, %38 ], [ %.073, %26 ], [ %.073, %16 ]
  %.071.be = phi i32 [ %.071, %15 ], [ %.071, %507 ], [ %.071, %506 ], [ %.071, %505 ], [ %.071, %500 ], [ %.071, %497 ], [ %.071, %496 ], [ %.071, %495 ], [ %.071, %494 ], [ %.071, %493 ], [ %.071, %481 ], [ %.071, %480 ], [ %.071, %468 ], [ %.071, %465 ], [ %.071, %464 ], [ %.071, %463 ], [ %.071, %462 ], [ %.071, %451 ], [ %.071, %441 ], [ %.071, %439 ], [ %.071, %438 ], [ %.071, %437 ], [ %.071, %435 ], [ %.071, %430 ], [ %.071, %427 ], [ %.071, %426 ], [ %.071, %425 ], [ %.071, %415 ], [ %.071, %405 ], [ %.071, %403 ], [ %.071, %392 ], [ %.071, %382 ], [ %.071, %379 ], [ %.071, %377 ], [ %.071, %376 ], [ %.071, %375 ], [ %.071, %374 ], [ %.071, %359 ], [ %.071, %349 ], [ %.071, %348 ], [ %.071, %335 ], [ %.071, %325 ], [ %.071, %314 ], [ %.071, %313 ], [ %.071, %303 ], [ %.071, %293 ], [ %.071, %291 ], [ %.071, %279 ], [ %.071, %269 ], [ %.071, %263 ], [ %.071, %258 ], [ %.071, %257 ], [ %.071, %247 ], [ %.071, %237 ], [ %.071, %235 ], [ %.071, %234 ], [ %.071, %224 ], [ %.071, %214 ], [ %.071, %213 ], [ %.071, %192 ], [ %.071, %182 ], [ %.071, %180 ], [ %.071, %168 ], [ %.071, %158 ], [ %.071, %157 ], [ %.071, %136 ], [ %.071, %126 ], [ %.071, %124 ], [ %.071, %110 ], [ %.071, %100 ], [ %.071, %98 ], [ %.071, %97 ], [ %.071, %86 ], [ %.071, %76 ], [ %.071, %73 ], [ %.071, %72 ], [ %.071, %71 ], [ %.071, %61 ], [ %.071, %51 ], [ %.071, %46 ], [ %43, %40 ], [ %.071, %38 ], [ %.071, %26 ], [ %.071, %16 ]
  %.069.be = phi i32 [ %.069, %15 ], [ %.069, %507 ], [ %.069, %506 ], [ %.069, %505 ], [ %.069, %500 ], [ %.069, %497 ], [ %.069, %496 ], [ %.069, %495 ], [ %.069, %494 ], [ %.069, %493 ], [ %.069, %481 ], [ %.069, %480 ], [ %.069, %468 ], [ %.069, %465 ], [ %.069, %464 ], [ %.069, %463 ], [ %.069, %462 ], [ %.069, %451 ], [ %.069, %441 ], [ %.069, %439 ], [ %.069, %438 ], [ %.069, %437 ], [ %.069, %435 ], [ %.069, %430 ], [ %.069, %427 ], [ %.069, %426 ], [ %.069, %425 ], [ %.069, %415 ], [ %.069, %405 ], [ %.069, %403 ], [ %.069, %392 ], [ %.069, %382 ], [ %.069, %379 ], [ %.069, %377 ], [ %.069, %376 ], [ %.069, %375 ], [ %.069, %374 ], [ %.069, %359 ], [ %.069, %349 ], [ %.069, %348 ], [ %.069, %335 ], [ %.069, %325 ], [ %.069, %314 ], [ %.069, %313 ], [ %.069, %303 ], [ %.069, %293 ], [ %.069, %291 ], [ %.069, %279 ], [ %.069, %269 ], [ %.069, %263 ], [ %.069, %258 ], [ %.069, %257 ], [ %.069, %247 ], [ %.069, %237 ], [ %.069, %235 ], [ %.069, %234 ], [ %.069, %224 ], [ %.069, %214 ], [ %.069, %213 ], [ %.069, %192 ], [ %.069, %182 ], [ %.069, %180 ], [ %.069, %168 ], [ %.069, %158 ], [ %.069, %157 ], [ %.069, %136 ], [ %.069, %126 ], [ %.069, %124 ], [ %.069, %110 ], [ %.069, %100 ], [ %.069, %98 ], [ %.069, %97 ], [ %.069, %86 ], [ %.069, %76 ], [ %.069, %73 ], [ %.069, %72 ], [ %.069, %71 ], [ %.069, %61 ], [ %.069, %51 ], [ %48, %46 ], [ %.069, %40 ], [ %.069, %38 ], [ %.069, %26 ], [ %.069, %16 ]
  %.067.be = phi i32 [ %.067, %15 ], [ %.067, %507 ], [ %.067, %506 ], [ %.067, %505 ], [ %.067, %500 ], [ %.067, %497 ], [ %.067, %496 ], [ %.067, %495 ], [ %.067, %494 ], [ %.067, %493 ], [ %.067, %481 ], [ %.067, %480 ], [ %.067, %468 ], [ %.067, %465 ], [ %.067, %464 ], [ %.067, %463 ], [ %.067, %462 ], [ %.067, %451 ], [ %.067, %441 ], [ %.067, %439 ], [ %.067, %438 ], [ %.067, %437 ], [ %.067, %435 ], [ %.067, %430 ], [ %.067, %427 ], [ %.067, %426 ], [ %.067, %425 ], [ %.067, %415 ], [ %.067, %405 ], [ %.067, %403 ], [ %.067, %392 ], [ %.067, %382 ], [ %.067, %379 ], [ %.067, %377 ], [ %.067, %376 ], [ %.067, %375 ], [ %.067, %374 ], [ %.067, %359 ], [ %.067, %349 ], [ %.067, %348 ], [ %.067, %335 ], [ %.067, %325 ], [ %.067, %314 ], [ %.067, %313 ], [ %.067, %303 ], [ %.067, %293 ], [ %.067, %291 ], [ %.067, %279 ], [ %.067, %269 ], [ %.067, %263 ], [ %.067, %258 ], [ %.067, %257 ], [ %.067, %247 ], [ %.067, %237 ], [ %236, %235 ], [ %.067, %234 ], [ %.067, %224 ], [ %.067, %214 ], [ %.067, %213 ], [ %.067, %192 ], [ %.067, %182 ], [ %.067, %180 ], [ %.067, %168 ], [ %.067, %158 ], [ %.067, %157 ], [ %.067, %136 ], [ %.067, %126 ], [ %.067, %124 ], [ %.067, %110 ], [ %.067, %100 ], [ %.067, %98 ], [ %.067, %97 ], [ %.067, %86 ], [ %.067, %76 ], [ %.067, %73 ], [ 0, %72 ], [ %.067, %71 ], [ %.067, %61 ], [ %.067, %51 ], [ %.067, %46 ], [ %.067, %40 ], [ %.067, %38 ], [ %.067, %26 ], [ %.067, %16 ]
  %.065.be = phi i8 [ %.065, %15 ], [ %.065, %507 ], [ %.065, %506 ], [ %.065, %505 ], [ %.065, %500 ], [ %.065, %497 ], [ 1, %496 ], [ %.065, %495 ], [ 0, %494 ], [ %.065, %493 ], [ %.065, %481 ], [ %.065, %480 ], [ %.065, %468 ], [ %.065, %465 ], [ %.065, %464 ], [ %.065, %463 ], [ %.065, %462 ], [ %.065, %451 ], [ %.065, %441 ], [ %.065, %439 ], [ %.065, %438 ], [ %.065, %437 ], [ %.065, %435 ], [ %.065, %430 ], [ %.065, %427 ], [ %.065, %426 ], [ %.065, %425 ], [ %.065, %415 ], [ %.065, %405 ], [ %.065, %403 ], [ %.065, %392 ], [ %.065, %382 ], [ %.065, %379 ], [ %.065, %377 ], [ %.065, %376 ], [ %.065, %375 ], [ %.065, %374 ], [ %.065, %359 ], [ %.065, %349 ], [ %.065, %348 ], [ %.065, %335 ], [ %.065, %325 ], [ %.065, %314 ], [ %.065, %313 ], [ 1, %303 ], [ %.065, %293 ], [ %.065, %291 ], [ %.065, %279 ], [ %.065, %269 ], [ %.065, %263 ], [ %.065, %258 ], [ %.065, %257 ], [ 0, %247 ], [ %.065, %237 ], [ %.065, %235 ], [ %.065, %234 ], [ %.065, %224 ], [ %.065, %214 ], [ %.065, %213 ], [ %.065, %192 ], [ %.065, %182 ], [ %.065, %180 ], [ %.065, %168 ], [ %.065, %158 ], [ %.065, %157 ], [ %.065, %136 ], [ %.065, %126 ], [ %.065, %124 ], [ %.065, %110 ], [ %.065, %100 ], [ %.065, %98 ], [ %.065, %97 ], [ %.065, %86 ], [ %.065, %76 ], [ %.065, %73 ], [ %.065, %72 ], [ %.065, %71 ], [ %.065, %61 ], [ %.065, %51 ], [ %.065, %46 ], [ %.065, %40 ], [ %.065, %38 ], [ %.065, %26 ], [ %.065, %16 ]
  %.063.be = phi i32 [ %.063, %15 ], [ %.063, %507 ], [ %.063, %506 ], [ %.063, %505 ], [ %501, %500 ], [ %.063, %497 ], [ %.063, %496 ], [ %.063, %495 ], [ %.063, %494 ], [ %.063, %493 ], [ %.063, %481 ], [ %.063, %480 ], [ %.063, %468 ], [ %.063, %465 ], [ %.063, %464 ], [ %.063, %463 ], [ %.063, %462 ], [ %.063, %451 ], [ %.063, %441 ], [ %.063, %439 ], [ %.063, %438 ], [ %.063, %437 ], [ %436, %435 ], [ %.063, %430 ], [ %.063, %427 ], [ %.063, %426 ], [ %.063, %425 ], [ %.063, %415 ], [ %.063, %405 ], [ %.063, %403 ], [ %.063, %392 ], [ %.063, %382 ], [ %.063, %379 ], [ %.063, %377 ], [ %.063, %376 ], [ %.063, %375 ], [ %.063, %374 ], [ %360, %359 ], [ %.063, %349 ], [ %.063, %348 ], [ %.063, %335 ], [ %.063, %325 ], [ %.063, %314 ], [ %.063, %313 ], [ %.063, %303 ], [ %.063, %293 ], [ %.063, %291 ], [ %.063, %279 ], [ %.063, %269 ], [ %.061, %263 ], [ %.063, %258 ], [ %.063, %257 ], [ %.063, %247 ], [ %.063, %237 ], [ %.063, %235 ], [ %.063, %234 ], [ %.063, %224 ], [ %.063, %214 ], [ %.063, %213 ], [ %.063, %192 ], [ %.063, %182 ], [ %.063, %180 ], [ %.063, %168 ], [ %.063, %158 ], [ %.063, %157 ], [ %.063, %136 ], [ %.063, %126 ], [ %.063, %124 ], [ %.063, %110 ], [ %.063, %100 ], [ %.063, %98 ], [ %.063, %97 ], [ %.063, %86 ], [ %.063, %76 ], [ %.063, %73 ], [ %.063, %72 ], [ %.063, %71 ], [ %.063, %61 ], [ %.063, %51 ], [ %.063, %46 ], [ %.063, %40 ], [ %.063, %38 ], [ %.063, %26 ], [ %.063, %16 ]
  %.061.be = phi i32 [ %.061, %15 ], [ %.061, %507 ], [ %.061, %506 ], [ %.061, %505 ], [ %.061, %500 ], [ %.061, %497 ], [ %.061, %496 ], [ %.061, %495 ], [ 0, %494 ], [ %.061, %493 ], [ %.061, %481 ], [ %.061, %480 ], [ %.061, %468 ], [ %.061, %465 ], [ %.061, %464 ], [ %.061, %463 ], [ %.061, %462 ], [ %.061, %451 ], [ %.061, %441 ], [ %.061, %439 ], [ %.061, %438 ], [ %.061, %437 ], [ %.061, %435 ], [ %.061, %430 ], [ %.061, %427 ], [ %.061, %426 ], [ %.061, %425 ], [ %.061, %415 ], [ %.061, %405 ], [ %.061, %403 ], [ %.061, %392 ], [ %.061, %382 ], [ %.061, %379 ], [ %378, %377 ], [ %.061, %376 ], [ %.061, %375 ], [ %.061, %374 ], [ %.061, %359 ], [ %.061, %349 ], [ %.061, %348 ], [ %.061, %335 ], [ %.061, %325 ], [ %.061, %314 ], [ %.061, %313 ], [ %.061, %303 ], [ %.061, %293 ], [ %.061, %291 ], [ %.061, %279 ], [ %.061, %269 ], [ %.061, %263 ], [ %.061, %258 ], [ %.061, %257 ], [ 0, %247 ], [ %.061, %237 ], [ %.061, %235 ], [ %.061, %234 ], [ %.061, %224 ], [ %.061, %214 ], [ %.061, %213 ], [ %.061, %192 ], [ %.061, %182 ], [ %.061, %180 ], [ %.061, %168 ], [ %.061, %158 ], [ %.061, %157 ], [ %.061, %136 ], [ %.061, %126 ], [ %.061, %124 ], [ %.061, %110 ], [ %.061, %100 ], [ %.061, %98 ], [ %.061, %97 ], [ %.061, %86 ], [ %.061, %76 ], [ %.061, %73 ], [ %.061, %72 ], [ %.061, %71 ], [ %.061, %61 ], [ %.061, %51 ], [ %.061, %46 ], [ %.061, %40 ], [ %.061, %38 ], [ %.061, %26 ], [ %.061, %16 ]
  %.059.be = phi i32 [ %.059, %15 ], [ -323475127, %507 ], [ -596020529, %506 ], [ -349197753, %505 ], [ -1114157934, %500 ], [ -1666133527, %497 ], [ -304362173, %496 ], [ 1650584296, %495 ], [ 1615826085, %494 ], [ 1394649068, %493 ], [ 856609119, %481 ], [ 1928141436, %480 ], [ 1984288341, %468 ], [ -1146378185, %465 ], [ -683575249, %464 ], [ -1110385872, %463 ], [ 886030332, %462 ], [ %460, %451 ], [ %450, %441 ], [ 972082907, %439 ], [ -314471500, %438 ], [ 565676316, %437 ], [ -211741739, %435 ], [ 1809779747, %430 ], [ %429, %427 ], [ -211741739, %426 ], [ 565676316, %425 ], [ %424, %415 ], [ %414, %405 ], [ %404, %403 ], [ %402, %392 ], [ %391, %382 ], [ %381, %379 ], [ -104535529, %377 ], [ 1192186477, %376 ], [ 988495179, %375 ], [ 527455410, %374 ], [ %373, %359 ], [ %358, %349 ], [ -558841049, %348 ], [ %347, %335 ], [ %334, %325 ], [ %324, %314 ], [ 527455410, %313 ], [ %312, %303 ], [ %302, %293 ], [ %292, %291 ], [ %290, %279 ], [ %278, %269 ], [ %268, %263 ], [ %262, %258 ], [ -104535529, %257 ], [ %256, %247 ], [ %246, %237 ], [ -2024081912, %235 ], [ -269285846, %234 ], [ %233, %224 ], [ %223, %214 ], [ -1952168321, %213 ], [ %212, %192 ], [ %191, %182 ], [ %181, %180 ], [ %179, %168 ], [ %167, %158 ], [ 190698182, %157 ], [ %156, %136 ], [ %135, %126 ], [ %125, %124 ], [ %123, %110 ], [ %109, %100 ], [ %99, %98 ], [ -712302541, %97 ], [ %96, %86 ], [ %85, %76 ], [ %75, %73 ], [ -2024081912, %72 ], [ -314471500, %71 ], [ %70, %61 ], [ %60, %51 ], [ %50, %46 ], [ %45, %40 ], [ %39, %38 ], [ %37, %26 ], [ %25, %16 ]
  %.0.be = phi i1 [ %.0, %15 ], [ %.0, %507 ], [ %.0, %506 ], [ %.0, %505 ], [ %.0, %500 ], [ %.0, %497 ], [ %.0, %496 ], [ %.0, %495 ], [ %.0, %494 ], [ %.0, %493 ], [ %.0, %481 ], [ %.0, %480 ], [ %.0, %468 ], [ %.0, %465 ], [ %.0, %464 ], [ %.0, %463 ], [ %.0, %462 ], [ %.0, %451 ], [ %.0, %441 ], [ %.0, %439 ], [ %.0, %438 ], [ %.0, %437 ], [ %.0, %435 ], [ %.0, %430 ], [ %.0, %427 ], [ %.0, %426 ], [ %.0, %425 ], [ %.0, %415 ], [ %.0, %405 ], [ %.0, %403 ], [ %.0, %392 ], [ %.0, %382 ], [ %.0, %379 ], [ %.0, %377 ], [ %.0, %376 ], [ %.0, %375 ], [ %.0, %374 ], [ %.0, %359 ], [ %.0, %349 ], [ %.0, %348 ], [ %.0, %335 ], [ %.0, %325 ], [ %.0, %314 ], [ %.0, %313 ], [ %.0, %303 ], [ %.0, %293 ], [ %.0, %291 ], [ %.0, %279 ], [ %.0, %269 ], [ %.0, %263 ], [ %.0, %258 ], [ %.0, %257 ], [ %.0, %247 ], [ %.0, %237 ], [ %.0, %235 ], [ %.0, %234 ], [ %.0, %224 ], [ %.0, %214 ], [ %.0, %213 ], [ %.0, %192 ], [ %.0, %182 ], [ %.0, %180 ], [ %.0, %168 ], [ %.0, %158 ], [ %.0, %157 ], [ %.0, %136 ], [ %.0, %126 ], [ %.0, %124 ], [ %.0, %110 ], [ %.0, %100 ], [ %.0, %98 ], [ %.0..0..0.54, %97 ], [ %.0, %86 ], [ %.0, %76 ], [ true, %73 ], [ %.0, %72 ], [ %.0, %71 ], [ %.0, %61 ], [ %.0, %51 ], [ %.0, %46 ], [ %.0, %40 ], [ %.0, %38 ], [ %.0, %26 ], [ %.0, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* @x, align 4
  %18 = load i32, i32* @y, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 886030332, i32 250254759
  br label %.backedge

26:                                               ; preds = %15
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %.073, %27
  store i1 %28, i1* %6, align 1
  %29 = load i32, i32* @x, align 4
  %30 = load i32, i32* @y, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 1866927915, i32 250254759
  br label %.backedge

38:                                               ; preds = %15
  %.0..0..0.53 = load volatile i1, i1* %6, align 1
  %39 = select i1 %.0..0..0.53, i32 -1035986824, i32 1108212719
  br label %.backedge

40:                                               ; preds = %15
  %41 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %14, i8* nonnull %13)
  %42 = call i64 @strlen(i8* noundef nonnull %14) #5
  %43 = trunc i64 %42 to i32
  %44 = icmp sgt i32 %43, 80
  %45 = select i1 %44, i32 -1361134222, i32 1501600462
  br label %.backedge

46:                                               ; preds = %15
  %47 = call i64 @strlen(i8* noundef nonnull %13) #5
  %48 = trunc i64 %47 to i32
  %49 = icmp sgt i32 %48, 80
  %50 = select i1 %49, i32 -1361134222, i32 261302073
  br label %.backedge

51:                                               ; preds = %15
  %52 = load i32, i32* @x, align 4
  %53 = load i32, i32* @y, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 -1110385872, i32 -503770897
  br label %.backedge

61:                                               ; preds = %15
  %puts80 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.3, i64 0, i64 0))
  %62 = load i32, i32* @x, align 4
  %63 = load i32, i32* @y, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 -874805192, i32 -503770897
  br label %.backedge

71:                                               ; preds = %15
  br label %.backedge

72:                                               ; preds = %15
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(400) %12, i8 -1, i64 400, i1 false)
  br label %.backedge

73:                                               ; preds = %15
  %74 = icmp sgt i32 %.071, %.067
  %75 = select i1 %74, i32 -712302541, i32 1935025817
  br label %.backedge

76:                                               ; preds = %15
  %77 = load i32, i32* @x, align 4
  %78 = load i32, i32* @y, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 -683575249, i32 1066807716
  br label %.backedge

86:                                               ; preds = %15
  %87 = icmp sgt i32 %.069, %.067
  store i1 %87, i1* %5, align 1
  %88 = load i32, i32* @x, align 4
  %89 = load i32, i32* @y, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -393306557, i32 1066807716
  br label %.backedge

97:                                               ; preds = %15
  %.0..0..0.54 = load volatile i1, i1* %5, align 1
  br label %.backedge

98:                                               ; preds = %15
  %99 = select i1 %.0, i32 528030494, i32 1069830433
  br label %.backedge

100:                                              ; preds = %15
  %101 = load i32, i32* @x, align 4
  %102 = load i32, i32* @y, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 -1146378185, i32 8009715
  br label %.backedge

110:                                              ; preds = %15
  %111 = sext i32 %.067 to i64
  %112 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %111
  store i32 0, i32* %112, align 4
  %113 = sub i32 %.071, %.067
  %114 = icmp sgt i32 %113, 0
  store i1 %114, i1* %4, align 1
  %115 = load i32, i32* @x, align 4
  %116 = load i32, i32* @y, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 -1241425559, i32 8009715
  br label %.backedge

124:                                              ; preds = %15
  %.0..0..0.55 = load volatile i1, i1* %4, align 1
  %125 = select i1 %.0..0..0.55, i32 -991911402, i32 190698182
  br label %.backedge

126:                                              ; preds = %15
  %127 = load i32, i32* @x, align 4
  %128 = load i32, i32* @y, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 1984288341, i32 -579076753
  br label %.backedge

136:                                              ; preds = %15
  %137 = xor i32 %.067, -1
  %138 = add i32 %.071, %137
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [101 x i8], [101 x i8]* %8, i64 0, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = sext i8 %141 to i32
  %143 = sext i32 %.067 to i64
  %144 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = add nsw i32 %142, -48
  %147 = add i32 %146, %145
  store i32 %147, i32* %144, align 4
  %148 = load i32, i32* @x, align 4
  %149 = load i32, i32* @y, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 -1793691678, i32 -579076753
  br label %.backedge

157:                                              ; preds = %15
  br label %.backedge

158:                                              ; preds = %15
  %159 = load i32, i32* @x, align 4
  %160 = load i32, i32* @y, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 1928141436, i32 1893422457
  br label %.backedge

168:                                              ; preds = %15
  %169 = sub i32 %.069, %.067
  %170 = icmp sgt i32 %169, 0
  store i1 %170, i1* %3, align 1
  %171 = load i32, i32* @x, align 4
  %172 = load i32, i32* @y, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 2113230783, i32 1893422457
  br label %.backedge

180:                                              ; preds = %15
  %.0..0..0.56 = load volatile i1, i1* %3, align 1
  %181 = select i1 %.0..0..0.56, i32 -1528050170, i32 -1952168321
  br label %.backedge

182:                                              ; preds = %15
  %183 = load i32, i32* @x, align 4
  %184 = load i32, i32* @y, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 856609119, i32 1360961859
  br label %.backedge

192:                                              ; preds = %15
  %193 = xor i32 %.067, -1
  %194 = add i32 %.069, %193
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [101 x i8], [101 x i8]* %9, i64 0, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = sext i8 %197 to i32
  %199 = sext i32 %.067 to i64
  %200 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = add nsw i32 %198, -48
  %203 = add i32 %202, %201
  store i32 %203, i32* %200, align 4
  %204 = load i32, i32* @x, align 4
  %205 = load i32, i32* @y, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 1693763747, i32 1360961859
  br label %.backedge

213:                                              ; preds = %15
  br label %.backedge

214:                                              ; preds = %15
  %215 = load i32, i32* @x, align 4
  %216 = load i32, i32* @y, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 1394649068, i32 -193437245
  br label %.backedge

224:                                              ; preds = %15
  %225 = load i32, i32* @x, align 4
  %226 = load i32, i32* @y, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 -1445880172, i32 -193437245
  br label %.backedge

234:                                              ; preds = %15
  br label %.backedge

235:                                              ; preds = %15
  %236 = add i32 %.067, 1
  br label %.backedge

237:                                              ; preds = %15
  %238 = load i32, i32* @x, align 4
  %239 = load i32, i32* @y, align 4
  %240 = add i32 %238, -1
  %241 = mul i32 %240, %238
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %244, %243
  %246 = select i1 %245, i32 1615826085, i32 1561481159
  br label %.backedge

247:                                              ; preds = %15
  %248 = load i32, i32* @x, align 4
  %249 = load i32, i32* @y, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 1956936801, i32 1561481159
  br label %.backedge

257:                                              ; preds = %15
  br label %.backedge

258:                                              ; preds = %15
  %259 = sext i32 %.061 to i64
  %260 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %259
  %261 = load i32, i32* %260, align 4
  %.not79 = icmp eq i32 %261, -1
  %262 = select i1 %.not79, i32 1183356942, i32 271249309
  br label %.backedge

263:                                              ; preds = %15
  %264 = sext i32 %.061 to i64
  %265 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %264
  %266 = load i32, i32* %265, align 4
  %267 = icmp sgt i32 %266, 9
  %268 = select i1 %267, i32 -122028242, i32 988495179
  br label %.backedge

269:                                              ; preds = %15
  %270 = load i32, i32* @x, align 4
  %271 = load i32, i32* @y, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 1650584296, i32 1414995492
  br label %.backedge

279:                                              ; preds = %15
  %280 = add i32 %.061, 1
  %281 = icmp sgt i32 %280, 79
  store i1 %281, i1* %2, align 1
  %282 = load i32, i32* @x, align 4
  %283 = load i32, i32* @y, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 430922392, i32 1414995492
  br label %.backedge

291:                                              ; preds = %15
  %.0..0..0.57 = load volatile i1, i1* %2, align 1
  %292 = select i1 %.0..0..0.57, i32 581709940, i32 1231822082
  br label %.backedge

293:                                              ; preds = %15
  %294 = load i32, i32* @x, align 4
  %295 = load i32, i32* @y, align 4
  %296 = add i32 %294, -1
  %297 = mul i32 %296, %294
  %298 = and i32 %297, 1
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %300, %299
  %302 = select i1 %301, i32 -304362173, i32 -782477672
  br label %.backedge

303:                                              ; preds = %15
  %304 = load i32, i32* @x, align 4
  %305 = load i32, i32* @y, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 99473848, i32 -782477672
  br label %.backedge

313:                                              ; preds = %15
  br label %.backedge

314:                                              ; preds = %15
  %315 = sext i32 %.061 to i64
  %316 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %315
  %317 = load i32, i32* %316, align 4
  %318 = add i32 %317, -10
  store i32 %318, i32* %316, align 4
  %319 = add i32 %.061, 1
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, -1
  %324 = select i1 %323, i32 -1014144577, i32 -558841049
  br label %.backedge

325:                                              ; preds = %15
  %326 = load i32, i32* @x, align 4
  %327 = load i32, i32* @y, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 -1666133527, i32 1507466750
  br label %.backedge

335:                                              ; preds = %15
  %336 = add i32 %.061, 1
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %337
  store i32 0, i32* %338, align 4
  %339 = load i32, i32* @x, align 4
  %340 = load i32, i32* @y, align 4
  %341 = add i32 %339, -1
  %342 = mul i32 %341, %339
  %343 = and i32 %342, 1
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %345, %344
  %347 = select i1 %346, i32 390769143, i32 1507466750
  br label %.backedge

348:                                              ; preds = %15
  br label %.backedge

349:                                              ; preds = %15
  %350 = load i32, i32* @x, align 4
  %351 = load i32, i32* @y, align 4
  %352 = add i32 %350, -1
  %353 = mul i32 %352, %350
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %356, %355
  %358 = select i1 %357, i32 -1114157934, i32 -1170678662
  br label %.backedge

359:                                              ; preds = %15
  %360 = add i32 %.061, 1
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %361
  %363 = load i32, i32* %362, align 4
  %364 = add i32 %363, 1
  store i32 %364, i32* %362, align 4
  %365 = load i32, i32* @x, align 4
  %366 = load i32, i32* @y, align 4
  %367 = add i32 %365, -1
  %368 = mul i32 %367, %365
  %369 = and i32 %368, 1
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %371, %370
  %373 = select i1 %372, i32 -1464708336, i32 -1170678662
  br label %.backedge

374:                                              ; preds = %15
  br label %.backedge

375:                                              ; preds = %15
  br label %.backedge

376:                                              ; preds = %15
  br label %.backedge

377:                                              ; preds = %15
  %378 = add i32 %.061, 1
  br label %.backedge

379:                                              ; preds = %15
  %380 = and i8 %.065, 1
  %.not = icmp eq i8 %380, 0
  %381 = select i1 %.not, i32 -130359147, i32 429427028
  br label %.backedge

382:                                              ; preds = %15
  %383 = load i32, i32* @x, align 4
  %384 = load i32, i32* @y, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 -349197753, i32 143035868
  br label %.backedge

392:                                              ; preds = %15
  %393 = icmp sgt i32 %.063, 79
  store i1 %393, i1* %1, align 1
  %394 = load i32, i32* @x, align 4
  %395 = load i32, i32* @y, align 4
  %396 = add i32 %394, -1
  %397 = mul i32 %396, %394
  %398 = and i32 %397, 1
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %400, %399
  %402 = select i1 %401, i32 -1859311775, i32 143035868
  br label %.backedge

403:                                              ; preds = %15
  %.0..0..0.58 = load volatile i1, i1* %1, align 1
  %404 = select i1 %.0..0..0.58, i32 429427028, i32 1069086492
  br label %.backedge

405:                                              ; preds = %15
  %406 = load i32, i32* @x, align 4
  %407 = load i32, i32* @y, align 4
  %408 = add i32 %406, -1
  %409 = mul i32 %408, %406
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %412, %411
  %414 = select i1 %413, i32 -596020529, i32 354799679
  br label %.backedge

415:                                              ; preds = %15
  %puts77 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.3, i64 0, i64 0))
  %416 = load i32, i32* @x, align 4
  %417 = load i32, i32* @y, align 4
  %418 = add i32 %416, -1
  %419 = mul i32 %418, %416
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %422, %421
  %424 = select i1 %423, i32 -1190697507, i32 354799679
  br label %.backedge

425:                                              ; preds = %15
  br label %.backedge

426:                                              ; preds = %15
  br label %.backedge

427:                                              ; preds = %15
  %428 = icmp sgt i32 %.063, -1
  %429 = select i1 %428, i32 -392473482, i32 176402038
  br label %.backedge

430:                                              ; preds = %15
  %431 = sext i32 %.063 to i64
  %432 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %431
  %433 = load i32, i32* %432, align 4
  %434 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %433)
  br label %.backedge

435:                                              ; preds = %15
  %436 = add i32 %.063, -1
  br label %.backedge

437:                                              ; preds = %15
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

438:                                              ; preds = %15
  br label %.backedge

439:                                              ; preds = %15
  %440 = add i32 %.073, 1
  br label %.backedge

441:                                              ; preds = %15
  %442 = load i32, i32* @x, align 4
  %443 = load i32, i32* @y, align 4
  %444 = add i32 %442, -1
  %445 = mul i32 %444, %442
  %446 = and i32 %445, 1
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %448, %447
  %450 = select i1 %449, i32 -323475127, i32 -1356534966
  br label %.backedge

451:                                              ; preds = %15
  %452 = load i32, i32* @x, align 4
  %453 = load i32, i32* @y, align 4
  %454 = add i32 %452, -1
  %455 = mul i32 %454, %452
  %456 = and i32 %455, 1
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %458, %457
  %460 = select i1 %459, i32 424132754, i32 -1356534966
  br label %.backedge

461:                                              ; preds = %15
  ret i32 0

462:                                              ; preds = %15
  br label %.backedge

463:                                              ; preds = %15
  %puts76 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

464:                                              ; preds = %15
  br label %.backedge

465:                                              ; preds = %15
  %466 = sext i32 %.067 to i64
  %467 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %466
  store i32 0, i32* %467, align 4
  br label %.backedge

468:                                              ; preds = %15
  %469 = xor i32 %.067, -1
  %470 = add i32 %.071, %469
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds [101 x i8], [101 x i8]* %8, i64 0, i64 %471
  %473 = load i8, i8* %472, align 1
  %474 = sext i8 %473 to i32
  %475 = sext i32 %.067 to i64
  %476 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %475
  %477 = load i32, i32* %476, align 4
  %478 = add nsw i32 %474, -48
  %479 = add i32 %478, %477
  store i32 %479, i32* %476, align 4
  br label %.backedge

480:                                              ; preds = %15
  br label %.backedge

481:                                              ; preds = %15
  %482 = xor i32 %.067, -1
  %483 = add i32 %.069, %482
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds [101 x i8], [101 x i8]* %9, i64 0, i64 %484
  %486 = load i8, i8* %485, align 1
  %487 = sext i8 %486 to i32
  %488 = sext i32 %.067 to i64
  %489 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = add nsw i32 %487, -48
  %492 = add i32 %491, %490
  store i32 %492, i32* %489, align 4
  br label %.backedge

493:                                              ; preds = %15
  br label %.backedge

494:                                              ; preds = %15
  br label %.backedge

495:                                              ; preds = %15
  br label %.backedge

496:                                              ; preds = %15
  br label %.backedge

497:                                              ; preds = %15
  %.neg75 = add i32 %.061, 1
  %498 = sext i32 %.neg75 to i64
  %499 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %498
  store i32 0, i32* %499, align 4
  br label %.backedge

500:                                              ; preds = %15
  %501 = add i32 %.061, 1
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %502
  %504 = load i32, i32* %503, align 4
  %.neg = add i32 %504, 1
  store i32 %.neg, i32* %503, align 4
  br label %.backedge

505:                                              ; preds = %15
  br label %.backedge

506:                                              ; preds = %15
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

507:                                              ; preds = %15
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #4

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly mustprogress nofree nounwind readonly willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
