; ModuleID = 'build_ollvm/programs/p00015/s353990494.ll'
source_filename = "Project_CodeNet_C++1400/p00015/s353990494.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@stdin = external local_unnamed_addr global %struct._IO_FILE*, align 8
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str = private unnamed_addr constant [9 x i8] c"overflow\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [102 x i8], align 16
  %5 = alloca [102 x i8], align 16
  %6 = alloca [103 x i8], align 16
  %7 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32* nonnull %3)
  %8 = getelementptr inbounds [103 x i8], [103 x i8]* %6, i64 0, i64 102
  %9 = getelementptr inbounds [102 x i8], [102 x i8]* %4, i64 0, i64 0
  %10 = getelementptr inbounds [102 x i8], [102 x i8]* %5, i64 0, i64 0
  br label %11

11:                                               ; preds = %.backedge, %0
  %.057 = phi i32 [ 0, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.045 = phi i32 [ undef, %0 ], [ %.045.be, %.backedge ]
  %.043 = phi i32 [ undef, %0 ], [ %.043.be, %.backedge ]
  %.041 = phi i32 [ undef, %0 ], [ %.041.be, %.backedge ]
  %.039 = phi i32 [ -754752203, %0 ], [ %.039.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.039, label %.backedge [
    i32 -754752203, label %12
    i32 -1847793921, label %16
    i32 -645543592, label %31
    i32 589443233, label %41
    i32 1387222584, label %54
    i32 117620733, label %55
    i32 1206227507, label %65
    i32 -869984638, label %80
    i32 1812933136, label %82
    i32 2007311991, label %86
    i32 2124052851, label %87
    i32 39613950, label %90
    i32 1875443801, label %93
    i32 1758911398, label %103
    i32 -1053449060, label %114
    i32 -1900927060, label %115
    i32 -1949247348, label %116
    i32 -939303215, label %119
    i32 -1375763668, label %123
    i32 1269522860, label %129
    i32 -798317582, label %139
    i32 1898145884, label %149
    i32 -1154551612, label %150
    i32 429608326, label %154
    i32 1296515455, label %164
    i32 -788513083, label %179
    i32 -396382878, label %180
    i32 763915253, label %181
    i32 -105113099, label %193
    i32 -1529600162, label %203
    i32 1530800228, label %219
    i32 -1554118110, label %220
    i32 1795496437, label %230
    i32 652608417, label %240
    i32 1205791540, label %241
    i32 -551286920, label %242
    i32 -1127312240, label %243
    i32 -1712270344, label %246
    i32 -1845693360, label %251
    i32 1750683171, label %253
    i32 509412857, label %255
    i32 -370885499, label %265
    i32 -944269244, label %276
    i32 -997581060, label %278
    i32 -1268801715, label %281
    i32 -313535765, label %282
    i32 -493723636, label %292
    i32 -1525438514, label %302
    i32 1728729035, label %303
    i32 39176586, label %313
    i32 124862608, label %324
    i32 -2057185410, label %325
    i32 921772157, label %326
    i32 483417531, label %330
    i32 1479382601, label %331
    i32 124558339, label %333
    i32 -441058965, label %334
    i32 -1045900964, label %340
    i32 -486869736, label %348
    i32 1780767853, label %349
    i32 -1617805885, label %350
    i32 279580377, label %351
  ]

.backedge:                                        ; preds = %11, %351, %350, %349, %348, %340, %334, %333, %331, %330, %326, %324, %313, %303, %302, %292, %282, %281, %278, %276, %265, %255, %253, %251, %246, %243, %242, %241, %240, %230, %220, %219, %203, %193, %181, %180, %179, %164, %154, %150, %149, %139, %129, %123, %119, %116, %115, %114, %103, %93, %90, %87, %86, %82, %80, %65, %55, %54, %41, %31, %16, %12
  %.057.be = phi i32 [ %.057, %11 ], [ %.neg, %351 ], [ %.057, %350 ], [ %.057, %349 ], [ %.057, %348 ], [ %.057, %340 ], [ %.057, %334 ], [ %.057, %333 ], [ %.057, %331 ], [ %.057, %330 ], [ %.057, %326 ], [ %.057, %324 ], [ %314, %313 ], [ %.057, %303 ], [ %.057, %302 ], [ %.057, %292 ], [ %.057, %282 ], [ %.057, %281 ], [ %.057, %278 ], [ %.057, %276 ], [ %.057, %265 ], [ %.057, %255 ], [ %.057, %253 ], [ %.057, %251 ], [ %.057, %246 ], [ %.057, %243 ], [ %.057, %242 ], [ %.057, %241 ], [ %.057, %240 ], [ %.057, %230 ], [ %.057, %220 ], [ %.057, %219 ], [ %.057, %203 ], [ %.057, %193 ], [ %.057, %181 ], [ %.057, %180 ], [ %.057, %179 ], [ %.057, %164 ], [ %.057, %154 ], [ %.057, %150 ], [ %.057, %149 ], [ %.057, %139 ], [ %.057, %129 ], [ %.057, %123 ], [ %.057, %119 ], [ %.057, %116 ], [ %.057, %115 ], [ %.057, %114 ], [ %.057, %103 ], [ %.057, %93 ], [ %.057, %90 ], [ %.057, %87 ], [ %.057, %86 ], [ %.057, %82 ], [ %.057, %80 ], [ %.057, %65 ], [ %.057, %55 ], [ %.057, %54 ], [ %.057, %41 ], [ %.057, %31 ], [ %.057, %16 ], [ %.057, %12 ]
  %.055.be = phi i32 [ %.055, %11 ], [ %.055, %351 ], [ %.055, %350 ], [ %.055, %349 ], [ %.055, %348 ], [ %.055, %340 ], [ %.055, %334 ], [ %.055, %333 ], [ %.055, %331 ], [ %.055, %330 ], [ %327, %326 ], [ %.055, %324 ], [ %.055, %313 ], [ %.055, %303 ], [ %.055, %302 ], [ %.055, %292 ], [ %.055, %282 ], [ %.055, %281 ], [ %.055, %278 ], [ %.055, %276 ], [ %.055, %265 ], [ %.055, %255 ], [ %.055, %253 ], [ %.055, %251 ], [ %.055, %246 ], [ %.055, %243 ], [ %.055, %242 ], [ %.055, %241 ], [ %.055, %240 ], [ %.055, %230 ], [ %.055, %220 ], [ %.055, %219 ], [ %.055, %203 ], [ %.055, %193 ], [ %.055, %181 ], [ %.055, %180 ], [ %.055, %179 ], [ %.055, %164 ], [ %.055, %154 ], [ %.055, %150 ], [ %.055, %149 ], [ %.055, %139 ], [ %.055, %129 ], [ %.055, %123 ], [ %120, %119 ], [ %.055, %116 ], [ %.055, %115 ], [ %.055, %114 ], [ %.055, %103 ], [ %.055, %93 ], [ %.055, %90 ], [ %.055, %87 ], [ %.055, %86 ], [ %.055, %82 ], [ %.055, %80 ], [ %.055, %65 ], [ %.055, %55 ], [ %.055, %54 ], [ %42, %41 ], [ %.055, %31 ], [ %22, %16 ], [ %.055, %12 ]
  %.053.be = phi i32 [ %.053, %11 ], [ %.053, %351 ], [ %.053, %350 ], [ %.053, %349 ], [ %.053, %348 ], [ %.053, %340 ], [ %.053, %334 ], [ %.053, %333 ], [ %.053, %331 ], [ %.053, %330 ], [ %.053, %326 ], [ %.053, %324 ], [ %.053, %313 ], [ %.053, %303 ], [ %.053, %302 ], [ %.053, %292 ], [ %.053, %282 ], [ %.053, %281 ], [ %.053, %278 ], [ %.053, %276 ], [ %.053, %265 ], [ %.053, %255 ], [ %.053, %253 ], [ %.053, %251 ], [ %.053, %246 ], [ %.053, %243 ], [ %.053, %242 ], [ %.053, %241 ], [ %.053, %240 ], [ %.053, %230 ], [ %.053, %220 ], [ %.053, %219 ], [ %.053, %203 ], [ %.053, %193 ], [ %.053, %181 ], [ %.053, %180 ], [ %.053, %179 ], [ %.053, %164 ], [ %.053, %154 ], [ %151, %150 ], [ %.053, %149 ], [ %.053, %139 ], [ %.053, %129 ], [ %.053, %123 ], [ %.053, %119 ], [ %.053, %116 ], [ %.053, %115 ], [ %.053, %114 ], [ %.053, %103 ], [ %.053, %93 ], [ %.053, %90 ], [ %.053, %87 ], [ %.053, %86 ], [ %83, %82 ], [ %.053, %80 ], [ %.053, %65 ], [ %.053, %55 ], [ %.053, %54 ], [ %.053, %41 ], [ %.053, %31 ], [ %24, %16 ], [ %.053, %12 ]
  %.051.be = phi i32 [ %.051, %11 ], [ %.051, %351 ], [ %.051, %350 ], [ %.051, %349 ], [ %.051, %348 ], [ %.051, %340 ], [ %.051, %334 ], [ %.051, %333 ], [ %332, %331 ], [ %.051, %330 ], [ %.051, %326 ], [ %.051, %324 ], [ %.051, %313 ], [ %.051, %303 ], [ %.051, %302 ], [ %.051, %292 ], [ %.051, %282 ], [ %.051, %281 ], [ %.051, %278 ], [ %.051, %276 ], [ %.051, %265 ], [ %.051, %255 ], [ %.051, %253 ], [ %.051, %251 ], [ %.051, %246 ], [ %.051, %243 ], [ %.051, %242 ], [ %.051, %241 ], [ %.051, %240 ], [ %.051, %230 ], [ %.051, %220 ], [ %.051, %219 ], [ %.051, %203 ], [ %.051, %193 ], [ %.051, %181 ], [ %.051, %180 ], [ %.051, %179 ], [ %.051, %164 ], [ %.051, %154 ], [ %.051, %150 ], [ %.051, %149 ], [ %.051, %139 ], [ %.051, %129 ], [ %.051, %123 ], [ %.051, %119 ], [ %.051, %116 ], [ %.051, %115 ], [ %.051, %114 ], [ %104, %103 ], [ %.051, %93 ], [ %.051, %90 ], [ %.051, %87 ], [ 0, %86 ], [ %.051, %82 ], [ %.051, %80 ], [ %.051, %65 ], [ %.051, %55 ], [ %.051, %54 ], [ %.051, %41 ], [ %.051, %31 ], [ %.051, %16 ], [ %.051, %12 ]
  %.049.be = phi i32 [ %.049, %11 ], [ %.049, %351 ], [ %.049, %350 ], [ %.049, %349 ], [ %.049, %348 ], [ %.049, %340 ], [ %.049, %334 ], [ %.049, %333 ], [ %.049, %331 ], [ %.049, %330 ], [ %.049, %326 ], [ %.049, %324 ], [ %.049, %313 ], [ %.049, %303 ], [ %.049, %302 ], [ %.049, %292 ], [ %.049, %282 ], [ %.049, %281 ], [ %.049, %278 ], [ %.049, %276 ], [ %.049, %265 ], [ %.049, %255 ], [ %.049, %253 ], [ %.049, %251 ], [ %.049, %246 ], [ %.049, %243 ], [ %.049, %242 ], [ %.neg60, %241 ], [ %.049, %240 ], [ %.049, %230 ], [ %.049, %220 ], [ %.049, %219 ], [ %.049, %203 ], [ %.049, %193 ], [ %.049, %181 ], [ %.049, %180 ], [ %.049, %179 ], [ %.049, %164 ], [ %.049, %154 ], [ %.049, %150 ], [ %.049, %149 ], [ %.049, %139 ], [ %.049, %129 ], [ %.049, %123 ], [ %.049, %119 ], [ %.049, %116 ], [ 101, %115 ], [ %.049, %114 ], [ %.049, %103 ], [ %.049, %93 ], [ %.049, %90 ], [ %.049, %87 ], [ %.049, %86 ], [ %.049, %82 ], [ %.049, %80 ], [ %.049, %65 ], [ %.049, %55 ], [ %.049, %54 ], [ %.049, %41 ], [ %.049, %31 ], [ %.049, %16 ], [ %.049, %12 ]
  %.047.be = phi i32 [ %.047, %11 ], [ %.047, %351 ], [ %.047, %350 ], [ %.047, %349 ], [ %.047, %348 ], [ %.047, %340 ], [ %.047, %334 ], [ 0, %333 ], [ %.047, %331 ], [ %.047, %330 ], [ %.047, %326 ], [ %.047, %324 ], [ %.047, %313 ], [ %.047, %303 ], [ %.047, %302 ], [ %.047, %292 ], [ %.047, %282 ], [ %.047, %281 ], [ %.047, %278 ], [ %.047, %276 ], [ %.047, %265 ], [ %.047, %255 ], [ %.047, %253 ], [ %.047, %251 ], [ %.047, %246 ], [ %.047, %243 ], [ %.047, %242 ], [ %.047, %241 ], [ %.047, %240 ], [ %.047, %230 ], [ %.047, %220 ], [ %.047, %219 ], [ %.047, %203 ], [ %.047, %193 ], [ %.047, %181 ], [ %.047, %180 ], [ %.047, %179 ], [ %.047, %164 ], [ %.047, %154 ], [ %.047, %150 ], [ %.047, %149 ], [ 0, %139 ], [ %.047, %129 ], [ %128, %123 ], [ %.047, %119 ], [ %.047, %116 ], [ %.047, %115 ], [ %.047, %114 ], [ %.047, %103 ], [ %.047, %93 ], [ %.047, %90 ], [ %.047, %87 ], [ %.047, %86 ], [ %.047, %82 ], [ %.047, %80 ], [ %.047, %65 ], [ %.047, %55 ], [ %.047, %54 ], [ %.047, %41 ], [ %.047, %31 ], [ %.047, %16 ], [ %.047, %12 ]
  %.045.be = phi i32 [ %.045, %11 ], [ %.045, %351 ], [ %.045, %350 ], [ %.045, %349 ], [ %.045, %348 ], [ %.045, %340 ], [ %339, %334 ], [ %.045, %333 ], [ %.045, %331 ], [ %.045, %330 ], [ %.045, %326 ], [ %.045, %324 ], [ %.045, %313 ], [ %.045, %303 ], [ %.045, %302 ], [ %.045, %292 ], [ %.045, %282 ], [ %.045, %281 ], [ %.045, %278 ], [ %.045, %276 ], [ %.045, %265 ], [ %.045, %255 ], [ %.045, %253 ], [ %.045, %251 ], [ %.045, %246 ], [ %.045, %243 ], [ %.045, %242 ], [ %.045, %241 ], [ %.045, %240 ], [ %.045, %230 ], [ %.045, %220 ], [ %.045, %219 ], [ %.045, %203 ], [ %.045, %193 ], [ %.045, %181 ], [ 0, %180 ], [ %.045, %179 ], [ %169, %164 ], [ %.045, %154 ], [ %.045, %150 ], [ %.045, %149 ], [ %.045, %139 ], [ %.045, %129 ], [ %.045, %123 ], [ %.045, %119 ], [ %.045, %116 ], [ %.045, %115 ], [ %.045, %114 ], [ %.045, %103 ], [ %.045, %93 ], [ %.045, %90 ], [ %.045, %87 ], [ %.045, %86 ], [ %.045, %82 ], [ %.045, %80 ], [ %.045, %65 ], [ %.045, %55 ], [ %.045, %54 ], [ %.045, %41 ], [ %.045, %31 ], [ %.045, %16 ], [ %.045, %12 ]
  %.043.be = phi i32 [ %.043, %11 ], [ %.043, %351 ], [ %.043, %350 ], [ %.043, %349 ], [ %.043, %348 ], [ %.043, %340 ], [ %.043, %334 ], [ %.043, %333 ], [ %.043, %331 ], [ %.043, %330 ], [ %.043, %326 ], [ %.043, %324 ], [ %.043, %313 ], [ %.043, %303 ], [ %.043, %302 ], [ %.043, %292 ], [ %.043, %282 ], [ %.043, %281 ], [ %.043, %278 ], [ %.043, %276 ], [ %.043, %265 ], [ %.043, %255 ], [ %.043, %253 ], [ %.043, %251 ], [ %.043, %246 ], [ %.043, %243 ], [ %.043, %242 ], [ %.043, %241 ], [ %.043, %240 ], [ %.043, %230 ], [ %.043, %220 ], [ %.043, %219 ], [ %.043, %203 ], [ %.043, %193 ], [ %188, %181 ], [ %.043, %180 ], [ %.043, %179 ], [ %.043, %164 ], [ %.043, %154 ], [ %.043, %150 ], [ %.043, %149 ], [ %.043, %139 ], [ %.043, %129 ], [ %.043, %123 ], [ %.043, %119 ], [ %.043, %116 ], [ %.043, %115 ], [ %.043, %114 ], [ %.043, %103 ], [ %.043, %93 ], [ %.043, %90 ], [ %.043, %87 ], [ %.043, %86 ], [ %.043, %82 ], [ %.043, %80 ], [ %.043, %65 ], [ %.043, %55 ], [ %.043, %54 ], [ %.043, %41 ], [ %.043, %31 ], [ %.043, %16 ], [ %.043, %12 ]
  %.041.be = phi i32 [ %.041, %11 ], [ %.041, %351 ], [ %.041, %350 ], [ %.041, %349 ], [ %.041, %348 ], [ %.041, %340 ], [ %.041, %334 ], [ %.041, %333 ], [ %.041, %331 ], [ %.041, %330 ], [ %.041, %326 ], [ %.041, %324 ], [ %.041, %313 ], [ %.041, %303 ], [ %.041, %302 ], [ %.041, %292 ], [ %.041, %282 ], [ %.041, %281 ], [ %.041, %278 ], [ %.041, %276 ], [ %.041, %265 ], [ %.041, %255 ], [ %254, %253 ], [ %.041, %251 ], [ %.041, %246 ], [ %.041, %243 ], [ 0, %242 ], [ %.041, %241 ], [ %.041, %240 ], [ %.041, %230 ], [ %.041, %220 ], [ %.041, %219 ], [ %.041, %203 ], [ %.041, %193 ], [ %.041, %181 ], [ %.041, %180 ], [ %.041, %179 ], [ %.041, %164 ], [ %.041, %154 ], [ %.041, %150 ], [ %.041, %149 ], [ %.041, %139 ], [ %.041, %129 ], [ %.041, %123 ], [ %.041, %119 ], [ %.041, %116 ], [ %.041, %115 ], [ %.041, %114 ], [ %.041, %103 ], [ %.041, %93 ], [ %.041, %90 ], [ %.041, %87 ], [ %.041, %86 ], [ %.041, %82 ], [ %.041, %80 ], [ %.041, %65 ], [ %.041, %55 ], [ %.041, %54 ], [ %.041, %41 ], [ %.041, %31 ], [ %.041, %16 ], [ %.041, %12 ]
  %.039.be = phi i32 [ %.039, %11 ], [ 39176586, %351 ], [ -493723636, %350 ], [ -370885499, %349 ], [ 1795496437, %348 ], [ -1529600162, %340 ], [ 1296515455, %334 ], [ -798317582, %333 ], [ 1758911398, %331 ], [ 1206227507, %330 ], [ 589443233, %326 ], [ -754752203, %324 ], [ %323, %313 ], [ %312, %303 ], [ 1728729035, %302 ], [ %301, %292 ], [ %291, %282 ], [ -313535765, %281 ], [ -313535765, %278 ], [ %277, %276 ], [ %275, %265 ], [ %264, %255 ], [ -1127312240, %253 ], [ %252, %251 ], [ -1845693360, %246 ], [ %245, %243 ], [ -1127312240, %242 ], [ -1949247348, %241 ], [ 1205791540, %240 ], [ %239, %230 ], [ %229, %220 ], [ -1554118110, %219 ], [ %218, %203 ], [ %202, %193 ], [ %192, %181 ], [ 763915253, %180 ], [ 763915253, %179 ], [ %178, %164 ], [ %163, %154 ], [ %153, %150 ], [ -1154551612, %149 ], [ %148, %139 ], [ %138, %129 ], [ -1154551612, %123 ], [ %122, %119 ], [ %118, %116 ], [ -1949247348, %115 ], [ 2124052851, %114 ], [ %113, %103 ], [ %102, %93 ], [ 1875443801, %90 ], [ %89, %87 ], [ 2124052851, %86 ], [ 2007311991, %82 ], [ %81, %80 ], [ %79, %65 ], [ %64, %55 ], [ 117620733, %54 ], [ %53, %41 ], [ %40, %31 ], [ %30, %16 ], [ %15, %12 ]
  %.0.be = phi i1 [ %.0, %11 ], [ %.0, %351 ], [ %.0, %350 ], [ %.0, %349 ], [ %.0, %348 ], [ %.0, %340 ], [ %.0, %334 ], [ %.0, %333 ], [ %.0, %331 ], [ %.0, %330 ], [ %.0, %326 ], [ %.0, %324 ], [ %.0, %313 ], [ %.0, %303 ], [ %.0, %302 ], [ %.0, %292 ], [ %.0, %282 ], [ %.0, %281 ], [ %.0, %278 ], [ %.0, %276 ], [ %.0, %265 ], [ %.0, %255 ], [ %.0, %253 ], [ %.0, %251 ], [ %250, %246 ], [ false, %243 ], [ %.0, %242 ], [ %.0, %241 ], [ %.0, %240 ], [ %.0, %230 ], [ %.0, %220 ], [ %.0, %219 ], [ %.0, %203 ], [ %.0, %193 ], [ %.0, %181 ], [ %.0, %180 ], [ %.0, %179 ], [ %.0, %164 ], [ %.0, %154 ], [ %.0, %150 ], [ %.0, %149 ], [ %.0, %139 ], [ %.0, %129 ], [ %.0, %123 ], [ %.0, %119 ], [ %.0, %116 ], [ %.0, %115 ], [ %.0, %114 ], [ %.0, %103 ], [ %.0, %93 ], [ %.0, %90 ], [ %.0, %87 ], [ %.0, %86 ], [ %.0, %82 ], [ %.0, %80 ], [ %.0, %65 ], [ %.0, %55 ], [ %.0, %54 ], [ %.0, %41 ], [ %.0, %31 ], [ %.0, %16 ], [ %.0, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = load i32, i32* %3, align 4
  %14 = icmp slt i32 %.057, %13
  %15 = select i1 %14, i32 -1847793921, i32 -2057185410
  br label %.backedge

16:                                               ; preds = %11
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %18 = call i8* @fgets(i8* nonnull %9, i32 101, %struct._IO_FILE* %17)
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %20 = call i8* @fgets(i8* nonnull %10, i32 101, %struct._IO_FILE* %19)
  %21 = call i64 @strlen(i8* noundef nonnull %9) #4
  %22 = trunc i64 %21 to i32
  %23 = call i64 @strlen(i8* noundef nonnull %10) #4
  %24 = trunc i64 %23 to i32
  %25 = shl i64 %21, 32
  %sext = add i64 %25, -4294967296
  %26 = ashr exact i64 %sext, 32
  %27 = getelementptr inbounds [102 x i8], [102 x i8]* %4, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 10
  %30 = select i1 %29, i32 -645543592, i32 117620733
  br label %.backedge

31:                                               ; preds = %11
  %32 = load i32, i32* @x, align 4
  %33 = load i32, i32* @y, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 589443233, i32 921772157
  br label %.backedge

41:                                               ; preds = %11
  %42 = add i32 %.055, -1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [102 x i8], [102 x i8]* %4, i64 0, i64 %43
  store i8 0, i8* %44, align 1
  %45 = load i32, i32* @x, align 4
  %46 = load i32, i32* @y, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 1387222584, i32 921772157
  br label %.backedge

54:                                               ; preds = %11
  br label %.backedge

55:                                               ; preds = %11
  %56 = load i32, i32* @x, align 4
  %57 = load i32, i32* @y, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 1206227507, i32 483417531
  br label %.backedge

65:                                               ; preds = %11
  %66 = add i32 %.053, -1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [102 x i8], [102 x i8]* %5, i64 0, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 10
  store i1 %70, i1* %2, align 1
  %71 = load i32, i32* @x, align 4
  %72 = load i32, i32* @y, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 -869984638, i32 483417531
  br label %.backedge

80:                                               ; preds = %11
  %.0..0..0.37 = load volatile i1, i1* %2, align 1
  %81 = select i1 %.0..0..0.37, i32 1812933136, i32 2007311991
  br label %.backedge

82:                                               ; preds = %11
  %83 = add i32 %.053, -1
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [102 x i8], [102 x i8]* %5, i64 0, i64 %84
  store i8 0, i8* %85, align 1
  br label %.backedge

86:                                               ; preds = %11
  br label %.backedge

87:                                               ; preds = %11
  %88 = icmp slt i32 %.051, 102
  %89 = select i1 %88, i32 39613950, i32 -1900927060
  br label %.backedge

90:                                               ; preds = %11
  %91 = sext i32 %.051 to i64
  %92 = getelementptr inbounds [103 x i8], [103 x i8]* %6, i64 0, i64 %91
  store i8 48, i8* %92, align 1
  br label %.backedge

93:                                               ; preds = %11
  %94 = load i32, i32* @x, align 4
  %95 = load i32, i32* @y, align 4
  %96 = add i32 %94, -1
  %97 = mul i32 %96, %94
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %100, %99
  %102 = select i1 %101, i32 1758911398, i32 1479382601
  br label %.backedge

103:                                              ; preds = %11
  %104 = add i32 %.051, 1
  %105 = load i32, i32* @x, align 4
  %106 = load i32, i32* @y, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 -1053449060, i32 1479382601
  br label %.backedge

114:                                              ; preds = %11
  br label %.backedge

115:                                              ; preds = %11
  store i8 0, i8* %8, align 2
  br label %.backedge

116:                                              ; preds = %11
  %117 = icmp sgt i32 %.049, -1
  %118 = select i1 %117, i32 -939303215, i32 -551286920
  br label %.backedge

119:                                              ; preds = %11
  %120 = add i32 %.055, -1
  %121 = icmp sgt i32 %120, -1
  %122 = select i1 %121, i32 -1375763668, i32 1269522860
  br label %.backedge

123:                                              ; preds = %11
  %124 = sext i32 %.055 to i64
  %125 = getelementptr inbounds [102 x i8], [102 x i8]* %4, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = sext i8 %126 to i32
  %128 = add nsw i32 %127, -48
  br label %.backedge

129:                                              ; preds = %11
  %130 = load i32, i32* @x, align 4
  %131 = load i32, i32* @y, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -798317582, i32 124558339
  br label %.backedge

139:                                              ; preds = %11
  %140 = load i32, i32* @x, align 4
  %141 = load i32, i32* @y, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 1898145884, i32 124558339
  br label %.backedge

149:                                              ; preds = %11
  br label %.backedge

150:                                              ; preds = %11
  %151 = add i32 %.053, -1
  %152 = icmp sgt i32 %151, -1
  %153 = select i1 %152, i32 429608326, i32 -396382878
  br label %.backedge

154:                                              ; preds = %11
  %155 = load i32, i32* @x, align 4
  %156 = load i32, i32* @y, align 4
  %157 = add i32 %155, -1
  %158 = mul i32 %157, %155
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %161, %160
  %163 = select i1 %162, i32 1296515455, i32 -441058965
  br label %.backedge

164:                                              ; preds = %11
  %165 = sext i32 %.053 to i64
  %166 = getelementptr inbounds [102 x i8], [102 x i8]* %5, i64 0, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = sext i8 %167 to i32
  %169 = add nsw i32 %168, -48
  %170 = load i32, i32* @x, align 4
  %171 = load i32, i32* @y, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 -788513083, i32 -441058965
  br label %.backedge

179:                                              ; preds = %11
  br label %.backedge

180:                                              ; preds = %11
  br label %.backedge

181:                                              ; preds = %11
  %182 = sext i32 %.049 to i64
  %183 = getelementptr inbounds [103 x i8], [103 x i8]* %6, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = add i32 %.047, -48
  %187 = add i32 %186, %.045
  %188 = add i32 %187, %185
  %189 = srem i32 %188, 10
  %190 = trunc i32 %189 to i8
  %191 = add nsw i8 %190, 48
  store i8 %191, i8* %183, align 1
  %.not = icmp eq i32 %.049, 0
  %192 = select i1 %.not, i32 -1554118110, i32 -105113099
  br label %.backedge

193:                                              ; preds = %11
  %194 = load i32, i32* @x, align 4
  %195 = load i32, i32* @y, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 -1529600162, i32 -1045900964
  br label %.backedge

203:                                              ; preds = %11
  %.neg61.neg = sdiv i32 %.043, 10
  %204 = add i32 %.049, -1
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [103 x i8], [103 x i8]* %6, i64 0, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = trunc i32 %.neg61.neg to i8
  %209 = add i8 %207, %208
  store i8 %209, i8* %206, align 1
  %210 = load i32, i32* @x, align 4
  %211 = load i32, i32* @y, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 1530800228, i32 -1045900964
  br label %.backedge

219:                                              ; preds = %11
  br label %.backedge

220:                                              ; preds = %11
  %221 = load i32, i32* @x, align 4
  %222 = load i32, i32* @y, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 1795496437, i32 -486869736
  br label %.backedge

230:                                              ; preds = %11
  %231 = load i32, i32* @x, align 4
  %232 = load i32, i32* @y, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 652608417, i32 -486869736
  br label %.backedge

240:                                              ; preds = %11
  br label %.backedge

241:                                              ; preds = %11
  %.neg60 = add i32 %.049, -1
  br label %.backedge

242:                                              ; preds = %11
  br label %.backedge

243:                                              ; preds = %11
  %244 = icmp slt i32 %.041, 101
  %245 = select i1 %244, i32 -1712270344, i32 -1845693360
  br label %.backedge

246:                                              ; preds = %11
  %247 = sext i32 %.041 to i64
  %248 = getelementptr inbounds [103 x i8], [103 x i8]* %6, i64 0, i64 %247
  %249 = load i8, i8* %248, align 1
  %250 = icmp eq i8 %249, 48
  br label %.backedge

251:                                              ; preds = %11
  %252 = select i1 %.0, i32 1750683171, i32 509412857
  br label %.backedge

253:                                              ; preds = %11
  %254 = add i32 %.041, 1
  br label %.backedge

255:                                              ; preds = %11
  %256 = load i32, i32* @x, align 4
  %257 = load i32, i32* @y, align 4
  %258 = add i32 %256, -1
  %259 = mul i32 %258, %256
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %262, %261
  %264 = select i1 %263, i32 -370885499, i32 1780767853
  br label %.backedge

265:                                              ; preds = %11
  %266 = icmp sgt i32 %.041, 21
  store i1 %266, i1* %1, align 1
  %267 = load i32, i32* @x, align 4
  %268 = load i32, i32* @y, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 -944269244, i32 1780767853
  br label %.backedge

276:                                              ; preds = %11
  %.0..0..0.38 = load volatile i1, i1* %1, align 1
  %277 = select i1 %.0..0..0.38, i32 -997581060, i32 -1268801715
  br label %.backedge

278:                                              ; preds = %11
  %279 = sext i32 %.041 to i64
  %280 = getelementptr inbounds [103 x i8], [103 x i8]* %6, i64 0, i64 %279
  %puts59 = call i32 @puts(i8* nonnull %280)
  br label %.backedge

281:                                              ; preds = %11
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str, i64 0, i64 0))
  br label %.backedge

282:                                              ; preds = %11
  %283 = load i32, i32* @x, align 4
  %284 = load i32, i32* @y, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 -493723636, i32 -1617805885
  br label %.backedge

292:                                              ; preds = %11
  %293 = load i32, i32* @x, align 4
  %294 = load i32, i32* @y, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 -1525438514, i32 -1617805885
  br label %.backedge

302:                                              ; preds = %11
  br label %.backedge

303:                                              ; preds = %11
  %304 = load i32, i32* @x, align 4
  %305 = load i32, i32* @y, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 39176586, i32 279580377
  br label %.backedge

313:                                              ; preds = %11
  %314 = add i32 %.057, 1
  %315 = load i32, i32* @x, align 4
  %316 = load i32, i32* @y, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 124862608, i32 279580377
  br label %.backedge

324:                                              ; preds = %11
  br label %.backedge

325:                                              ; preds = %11
  ret i32 0

326:                                              ; preds = %11
  %327 = add i32 %.055, -1
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [102 x i8], [102 x i8]* %4, i64 0, i64 %328
  store i8 0, i8* %329, align 1
  br label %.backedge

330:                                              ; preds = %11
  br label %.backedge

331:                                              ; preds = %11
  %332 = add i32 %.051, 1
  br label %.backedge

333:                                              ; preds = %11
  br label %.backedge

334:                                              ; preds = %11
  %335 = sext i32 %.053 to i64
  %336 = getelementptr inbounds [102 x i8], [102 x i8]* %5, i64 0, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = sext i8 %337 to i32
  %339 = add nsw i32 %338, -48
  br label %.backedge

340:                                              ; preds = %11
  %341 = sdiv i32 %.043, 10
  %342 = add i32 %.049, -1
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds [103 x i8], [103 x i8]* %6, i64 0, i64 %343
  %345 = load i8, i8* %344, align 1
  %346 = trunc i32 %341 to i8
  %347 = add i8 %345, %346
  store i8 %347, i8* %344, align 1
  br label %.backedge

348:                                              ; preds = %11
  br label %.backedge

349:                                              ; preds = %11
  br label %.backedge

350:                                              ; preds = %11
  br label %.backedge

351:                                              ; preds = %11
  %.neg = add i32 %.057, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i8* @fgets(i8* noundef, i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly mustprogress nofree nounwind readonly willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
