; ModuleID = 'build_ollvm/programs/p03090/s282183930.ll'
source_filename = "Project_CodeNet_C++1400/p03090/s282183930.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s282183930.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1537911015, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1537911015, label %11
    i32 -1484119637, label %14
    i32 -1282224514, label %25
    i32 883655577, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1484119637, i32 883655577
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1282224514, i32 883655577
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1484119637, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i32*, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %8 = load i32, i32* %6, align 4
  %9 = srem i32 %8, 2
  store i32 %9, i32* %5, align 4
  br label %10

10:                                               ; preds = %.backedge, %0
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i8* [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.0 = phi i32 [ 37427562, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 37427562, label %11
    i32 958086836, label %14
    i32 -1976918267, label %21
    i32 1035082758, label %31
    i32 -1093843664, label %44
    i32 -809007147, label %46
    i32 2057669867, label %47
    i32 509604759, label %57
    i32 -316196131, label %69
    i32 1030985610, label %71
    i32 -1905216505, label %76
    i32 -1044191414, label %86
    i32 233129683, label %100
    i32 1702422020, label %101
    i32 -247591450, label %111
    i32 973793197, label %121
    i32 -1559147818, label %122
    i32 716227641, label %124
    i32 -1826989263, label %125
    i32 1186966783, label %126
    i32 -1691189972, label %127
    i32 214127418, label %137
    i32 732614236, label %152
    i32 -272656981, label %153
    i32 1969947702, label %157
    i32 337689994, label %165
    i32 755804452, label %166
    i32 -1161629190, label %167
    i32 2146992615, label %172
    i32 -982765718, label %182
    i32 -546762711, label %194
    i32 -1914182568, label %195
    i32 1492078041, label %205
    i32 1752515048, label %216
    i32 587937964, label %218
    i32 -165732641, label %222
    i32 -1105802574, label %228
    i32 629337823, label %229
    i32 -1303774098, label %230
    i32 1966426611, label %231
    i32 759608757, label %233
    i32 -292808575, label %236
    i32 -1587042695, label %240
    i32 620512700, label %246
    i32 -2127222264, label %256
    i32 637277970, label %266
    i32 936291850, label %267
    i32 1500674204, label %277
    i32 -1823464804, label %287
    i32 1206532778, label %288
    i32 153386870, label %293
    i32 101649961, label %296
    i32 -1712951411, label %299
    i32 -1621013063, label %303
    i32 350946598, label %308
    i32 -24845844, label %309
    i32 -1753395193, label %311
    i32 -2085374703, label %312
    i32 -492886146, label %322
    i32 12221181, label %333
    i32 1112790363, label %334
    i32 -1380117195, label %344
    i32 -1752965763, label %354
    i32 -1280058205, label %355
    i32 1455233723, label %356
    i32 -1611448839, label %357
    i32 93558856, label %358
    i32 1948911952, label %363
    i32 -332584058, label %364
    i32 -226202815, label %368
    i32 -1618706586, label %371
    i32 -867569179, label %372
    i32 -1742227761, label %373
    i32 -1345261826, label %374
    i32 -1004777122, label %375
  ]

.backedge:                                        ; preds = %10, %375, %374, %373, %372, %371, %368, %364, %363, %358, %357, %356, %354, %344, %334, %333, %322, %312, %311, %309, %308, %303, %299, %296, %293, %288, %287, %277, %267, %266, %256, %246, %240, %236, %233, %231, %230, %229, %228, %222, %218, %216, %205, %195, %194, %182, %172, %167, %166, %165, %157, %153, %152, %137, %127, %126, %125, %124, %122, %121, %111, %101, %100, %86, %76, %71, %69, %57, %47, %46, %44, %31, %21, %14, %11
  %.070.be = phi i32 [ %.070, %10 ], [ %.070, %375 ], [ %.070, %374 ], [ %.070, %373 ], [ %.070, %372 ], [ %.070, %371 ], [ %.070, %368 ], [ %.070, %364 ], [ %.070, %363 ], [ %.070, %358 ], [ %.070, %357 ], [ %.070, %356 ], [ %.070, %354 ], [ %.070, %344 ], [ %.070, %334 ], [ %.070, %333 ], [ %.070, %322 ], [ %.070, %312 ], [ %.070, %311 ], [ %.070, %309 ], [ %.070, %308 ], [ %.070, %303 ], [ %.070, %299 ], [ %.070, %296 ], [ %.070, %293 ], [ %.070, %288 ], [ %.070, %287 ], [ %.070, %277 ], [ %.070, %267 ], [ %.070, %266 ], [ %.070, %256 ], [ %.070, %246 ], [ %.070, %240 ], [ %.070, %236 ], [ %.070, %233 ], [ %.070, %231 ], [ %.070, %230 ], [ %.070, %229 ], [ %.070, %228 ], [ %.070, %222 ], [ %.070, %218 ], [ %.070, %216 ], [ %.070, %205 ], [ %.070, %195 ], [ %.070, %194 ], [ %.070, %182 ], [ %.070, %172 ], [ %.070, %167 ], [ %.070, %166 ], [ %.070, %165 ], [ %.070, %157 ], [ %.070, %153 ], [ %.070, %152 ], [ %.070, %137 ], [ %.070, %127 ], [ %.070, %126 ], [ %.neg79, %125 ], [ %.070, %124 ], [ %.070, %122 ], [ %.070, %121 ], [ %.070, %111 ], [ %.070, %101 ], [ %.070, %100 ], [ %.070, %86 ], [ %.070, %76 ], [ %.070, %71 ], [ %.070, %69 ], [ %.070, %57 ], [ %.070, %47 ], [ %.070, %46 ], [ %.070, %44 ], [ %.070, %31 ], [ %.070, %21 ], [ 1, %14 ], [ %.070, %11 ]
  %.068.be = phi i32 [ %.068, %10 ], [ %.068, %375 ], [ %.068, %374 ], [ %.068, %373 ], [ %.068, %372 ], [ %.068, %371 ], [ %.068, %368 ], [ %.068, %364 ], [ %.068, %363 ], [ %.068, %358 ], [ %.068, %357 ], [ %.068, %356 ], [ %.068, %354 ], [ %.068, %344 ], [ %.068, %334 ], [ %.068, %333 ], [ %.068, %322 ], [ %.068, %312 ], [ %.068, %311 ], [ %.068, %309 ], [ %.068, %308 ], [ %.068, %303 ], [ %.068, %299 ], [ %.068, %296 ], [ %.068, %293 ], [ %.068, %288 ], [ %.068, %287 ], [ %.068, %277 ], [ %.068, %267 ], [ %.068, %266 ], [ %.068, %256 ], [ %.068, %246 ], [ %.068, %240 ], [ %.068, %236 ], [ %.068, %233 ], [ %.068, %231 ], [ %.068, %230 ], [ %.068, %229 ], [ %.068, %228 ], [ %.068, %222 ], [ %.068, %218 ], [ %.068, %216 ], [ %.068, %205 ], [ %.068, %195 ], [ %.068, %194 ], [ %.068, %182 ], [ %.068, %172 ], [ %.068, %167 ], [ %.068, %166 ], [ %.068, %165 ], [ %.068, %157 ], [ %.068, %153 ], [ %.068, %152 ], [ %.068, %137 ], [ %.068, %127 ], [ %.068, %126 ], [ %.068, %125 ], [ %.068, %124 ], [ %123, %122 ], [ %.068, %121 ], [ %.068, %111 ], [ %.068, %101 ], [ %.068, %100 ], [ %.068, %86 ], [ %.068, %76 ], [ %.068, %71 ], [ %.068, %69 ], [ %.068, %57 ], [ %.068, %47 ], [ %.neg81, %46 ], [ %.068, %44 ], [ %.068, %31 ], [ %.068, %21 ], [ %.068, %14 ], [ %.068, %11 ]
  %.066.be = phi i32 [ %.066, %10 ], [ %.066, %375 ], [ %.066, %374 ], [ %.066, %373 ], [ %.066, %372 ], [ %.066, %371 ], [ %.066, %368 ], [ %366, %364 ], [ %.066, %363 ], [ %.066, %358 ], [ %.066, %357 ], [ %.066, %356 ], [ %.066, %354 ], [ %.066, %344 ], [ %.066, %334 ], [ %.066, %333 ], [ %.066, %322 ], [ %.066, %312 ], [ %.066, %311 ], [ %.066, %309 ], [ %.066, %308 ], [ %.066, %303 ], [ %.066, %299 ], [ %.066, %296 ], [ %.066, %293 ], [ %.066, %288 ], [ %.066, %287 ], [ %.066, %277 ], [ %.066, %267 ], [ %.066, %266 ], [ %.066, %256 ], [ %.066, %246 ], [ %.066, %240 ], [ %.066, %236 ], [ %.066, %233 ], [ %.066, %231 ], [ %.066, %230 ], [ %.066, %229 ], [ %.066, %228 ], [ %227, %222 ], [ %.066, %218 ], [ %.066, %216 ], [ %.066, %205 ], [ %.066, %195 ], [ %.066, %194 ], [ %.066, %182 ], [ %.066, %172 ], [ %.066, %167 ], [ %.066, %166 ], [ %.066, %165 ], [ %.066, %157 ], [ %.066, %153 ], [ %.066, %152 ], [ %139, %137 ], [ %.066, %127 ], [ %.066, %126 ], [ %.066, %125 ], [ %.066, %124 ], [ %.066, %122 ], [ %.066, %121 ], [ %.066, %111 ], [ %.066, %101 ], [ %.066, %100 ], [ %.066, %86 ], [ %.066, %76 ], [ %.066, %71 ], [ %.066, %69 ], [ %.066, %57 ], [ %.066, %47 ], [ %.066, %46 ], [ %.066, %44 ], [ %.066, %31 ], [ %.066, %21 ], [ %.066, %14 ], [ %.066, %11 ]
  %.064.be = phi i8* [ %.064, %10 ], [ %.064, %375 ], [ %.064, %374 ], [ %.064, %373 ], [ %.064, %372 ], [ %.064, %371 ], [ %.064, %368 ], [ %367, %364 ], [ %.064, %363 ], [ %.064, %358 ], [ %.064, %357 ], [ %.064, %356 ], [ %.064, %354 ], [ %.064, %344 ], [ %.064, %334 ], [ %.064, %333 ], [ %.064, %322 ], [ %.064, %312 ], [ %.064, %311 ], [ %.064, %309 ], [ %.064, %308 ], [ %.064, %303 ], [ %.064, %299 ], [ %.064, %296 ], [ %.064, %293 ], [ %.064, %288 ], [ %.064, %287 ], [ %.064, %277 ], [ %.064, %267 ], [ %.064, %266 ], [ %.064, %256 ], [ %.064, %246 ], [ %.064, %240 ], [ %.064, %236 ], [ %.064, %233 ], [ %.064, %231 ], [ %.064, %230 ], [ %.064, %229 ], [ %.064, %228 ], [ %.064, %222 ], [ %.064, %218 ], [ %.064, %216 ], [ %.064, %205 ], [ %.064, %195 ], [ %.064, %194 ], [ %.064, %182 ], [ %.064, %172 ], [ %.064, %167 ], [ %.064, %166 ], [ %.064, %165 ], [ %.064, %157 ], [ %.064, %153 ], [ %.064, %152 ], [ %141, %137 ], [ %.064, %127 ], [ %.064, %126 ], [ %.064, %125 ], [ %.064, %124 ], [ %.064, %122 ], [ %.064, %121 ], [ %.064, %111 ], [ %.064, %101 ], [ %.064, %100 ], [ %.064, %86 ], [ %.064, %76 ], [ %.064, %71 ], [ %.064, %69 ], [ %.064, %57 ], [ %.064, %47 ], [ %.064, %46 ], [ %.064, %44 ], [ %.064, %31 ], [ %.064, %21 ], [ %.064, %14 ], [ %.064, %11 ]
  %.062.be = phi i32 [ %.062, %10 ], [ %.062, %375 ], [ %.062, %374 ], [ %.062, %373 ], [ %.062, %372 ], [ %.062, %371 ], [ %.062, %368 ], [ 1, %364 ], [ %.062, %363 ], [ %.062, %358 ], [ %.062, %357 ], [ %.062, %356 ], [ %.062, %354 ], [ %.062, %344 ], [ %.062, %334 ], [ %.062, %333 ], [ %.062, %322 ], [ %.062, %312 ], [ %.062, %311 ], [ %.062, %309 ], [ %.062, %308 ], [ %.062, %303 ], [ %.062, %299 ], [ %.062, %296 ], [ %.062, %293 ], [ %.062, %288 ], [ %.062, %287 ], [ %.062, %277 ], [ %.062, %267 ], [ %.062, %266 ], [ %.062, %256 ], [ %.062, %246 ], [ %.062, %240 ], [ %.062, %236 ], [ %.062, %233 ], [ %.062, %231 ], [ %.062, %230 ], [ %.062, %229 ], [ %.062, %228 ], [ %.062, %222 ], [ %.062, %218 ], [ %.062, %216 ], [ %.062, %205 ], [ %.062, %195 ], [ %.062, %194 ], [ %.062, %182 ], [ %.062, %172 ], [ %.062, %167 ], [ %.062, %166 ], [ %.neg78, %165 ], [ %.062, %157 ], [ %.062, %153 ], [ %.062, %152 ], [ 1, %137 ], [ %.062, %127 ], [ %.062, %126 ], [ %.062, %125 ], [ %.062, %124 ], [ %.062, %122 ], [ %.062, %121 ], [ %.062, %111 ], [ %.062, %101 ], [ %.062, %100 ], [ %.062, %86 ], [ %.062, %76 ], [ %.062, %71 ], [ %.062, %69 ], [ %.062, %57 ], [ %.062, %47 ], [ %.062, %46 ], [ %.062, %44 ], [ %.062, %31 ], [ %.062, %21 ], [ %.062, %14 ], [ %.062, %11 ]
  %.060.be = phi i32 [ %.060, %10 ], [ %.060, %375 ], [ %.060, %374 ], [ %.060, %373 ], [ %.060, %372 ], [ %.060, %371 ], [ %.060, %368 ], [ %.060, %364 ], [ %.060, %363 ], [ %.060, %358 ], [ %.060, %357 ], [ %.060, %356 ], [ %.060, %354 ], [ %.060, %344 ], [ %.060, %334 ], [ %.060, %333 ], [ %.060, %322 ], [ %.060, %312 ], [ %.060, %311 ], [ %.060, %309 ], [ %.060, %308 ], [ %.060, %303 ], [ %.060, %299 ], [ %.060, %296 ], [ %.060, %293 ], [ %.060, %288 ], [ %.060, %287 ], [ %.060, %277 ], [ %.060, %267 ], [ %.060, %266 ], [ %.060, %256 ], [ %.060, %246 ], [ %.060, %240 ], [ %.060, %236 ], [ %.060, %233 ], [ %232, %231 ], [ %.060, %230 ], [ %.060, %229 ], [ %.060, %228 ], [ %.060, %222 ], [ %.060, %218 ], [ %.060, %216 ], [ %.060, %205 ], [ %.060, %195 ], [ %.060, %194 ], [ %.060, %182 ], [ %.060, %172 ], [ %.060, %167 ], [ 1, %166 ], [ %.060, %165 ], [ %.060, %157 ], [ %.060, %153 ], [ %.060, %152 ], [ %.060, %137 ], [ %.060, %127 ], [ %.060, %126 ], [ %.060, %125 ], [ %.060, %124 ], [ %.060, %122 ], [ %.060, %121 ], [ %.060, %111 ], [ %.060, %101 ], [ %.060, %100 ], [ %.060, %86 ], [ %.060, %76 ], [ %.060, %71 ], [ %.060, %69 ], [ %.060, %57 ], [ %.060, %47 ], [ %.060, %46 ], [ %.060, %44 ], [ %.060, %31 ], [ %.060, %21 ], [ %.060, %14 ], [ %.060, %11 ]
  %.058.be = phi i32 [ %.058, %10 ], [ %.058, %375 ], [ %.058, %374 ], [ %.058, %373 ], [ %.058, %372 ], [ %.058, %371 ], [ %370, %368 ], [ %.058, %364 ], [ %.058, %363 ], [ %.058, %358 ], [ %.058, %357 ], [ %.058, %356 ], [ %.058, %354 ], [ %.058, %344 ], [ %.058, %334 ], [ %.058, %333 ], [ %.058, %322 ], [ %.058, %312 ], [ %.058, %311 ], [ %.058, %309 ], [ %.058, %308 ], [ %.058, %303 ], [ %.058, %299 ], [ %.058, %296 ], [ %.058, %293 ], [ %.058, %288 ], [ %.058, %287 ], [ %.058, %277 ], [ %.058, %267 ], [ %.058, %266 ], [ %.058, %256 ], [ %.058, %246 ], [ %.058, %240 ], [ %.058, %236 ], [ %.058, %233 ], [ %.058, %231 ], [ %.058, %230 ], [ %.neg76, %229 ], [ %.058, %228 ], [ %.058, %222 ], [ %.058, %218 ], [ %.058, %216 ], [ %.058, %205 ], [ %.058, %195 ], [ %.058, %194 ], [ %184, %182 ], [ %.058, %172 ], [ %.058, %167 ], [ %.058, %166 ], [ %.058, %165 ], [ %.058, %157 ], [ %.058, %153 ], [ %.058, %152 ], [ %.058, %137 ], [ %.058, %127 ], [ %.058, %126 ], [ %.058, %125 ], [ %.058, %124 ], [ %.058, %122 ], [ %.058, %121 ], [ %.058, %111 ], [ %.058, %101 ], [ %.058, %100 ], [ %.058, %86 ], [ %.058, %76 ], [ %.058, %71 ], [ %.058, %69 ], [ %.058, %57 ], [ %.058, %47 ], [ %.058, %46 ], [ %.058, %44 ], [ %.058, %31 ], [ %.058, %21 ], [ %.058, %14 ], [ %.058, %11 ]
  %.056.be = phi i32 [ %.056, %10 ], [ %.056, %375 ], [ %.056, %374 ], [ %.056, %373 ], [ %.neg74, %372 ], [ %.056, %371 ], [ %.056, %368 ], [ %.056, %364 ], [ %.056, %363 ], [ %.056, %358 ], [ %.056, %357 ], [ %.056, %356 ], [ %.056, %354 ], [ %.056, %344 ], [ %.056, %334 ], [ %.056, %333 ], [ %.056, %322 ], [ %.056, %312 ], [ %.056, %311 ], [ %.056, %309 ], [ %.056, %308 ], [ %.056, %303 ], [ %.056, %299 ], [ %.056, %296 ], [ %.056, %293 ], [ %.056, %288 ], [ %.056, %287 ], [ %.056, %277 ], [ %.056, %267 ], [ %.056, %266 ], [ %.neg75, %256 ], [ %.056, %246 ], [ %.056, %240 ], [ %.056, %236 ], [ 1, %233 ], [ %.056, %231 ], [ %.056, %230 ], [ %.056, %229 ], [ %.056, %228 ], [ %.056, %222 ], [ %.056, %218 ], [ %.056, %216 ], [ %.056, %205 ], [ %.056, %195 ], [ %.056, %194 ], [ %.056, %182 ], [ %.056, %172 ], [ %.056, %167 ], [ %.056, %166 ], [ %.056, %165 ], [ %.056, %157 ], [ %.056, %153 ], [ %.056, %152 ], [ %.056, %137 ], [ %.056, %127 ], [ %.056, %126 ], [ %.056, %125 ], [ %.056, %124 ], [ %.056, %122 ], [ %.056, %121 ], [ %.056, %111 ], [ %.056, %101 ], [ %.056, %100 ], [ %.056, %86 ], [ %.056, %76 ], [ %.056, %71 ], [ %.056, %69 ], [ %.056, %57 ], [ %.056, %47 ], [ %.056, %46 ], [ %.056, %44 ], [ %.056, %31 ], [ %.056, %21 ], [ %.056, %14 ], [ %.056, %11 ]
  %.054.be = phi i32 [ %.054, %10 ], [ %.054, %375 ], [ %.neg, %374 ], [ 1, %373 ], [ %.054, %372 ], [ %.054, %371 ], [ %.054, %368 ], [ %.054, %364 ], [ %.054, %363 ], [ %.054, %358 ], [ %.054, %357 ], [ %.054, %356 ], [ %.054, %354 ], [ %.054, %344 ], [ %.054, %334 ], [ %.054, %333 ], [ %323, %322 ], [ %.054, %312 ], [ %.054, %311 ], [ %.054, %309 ], [ %.054, %308 ], [ %.054, %303 ], [ %.054, %299 ], [ %.054, %296 ], [ %.054, %293 ], [ %.054, %288 ], [ %.054, %287 ], [ 1, %277 ], [ %.054, %267 ], [ %.054, %266 ], [ %.054, %256 ], [ %.054, %246 ], [ %.054, %240 ], [ %.054, %236 ], [ %.054, %233 ], [ %.054, %231 ], [ %.054, %230 ], [ %.054, %229 ], [ %.054, %228 ], [ %.054, %222 ], [ %.054, %218 ], [ %.054, %216 ], [ %.054, %205 ], [ %.054, %195 ], [ %.054, %194 ], [ %.054, %182 ], [ %.054, %172 ], [ %.054, %167 ], [ %.054, %166 ], [ %.054, %165 ], [ %.054, %157 ], [ %.054, %153 ], [ %.054, %152 ], [ %.054, %137 ], [ %.054, %127 ], [ %.054, %126 ], [ %.054, %125 ], [ %.054, %124 ], [ %.054, %122 ], [ %.054, %121 ], [ %.054, %111 ], [ %.054, %101 ], [ %.054, %100 ], [ %.054, %86 ], [ %.054, %76 ], [ %.054, %71 ], [ %.054, %69 ], [ %.054, %57 ], [ %.054, %47 ], [ %.054, %46 ], [ %.054, %44 ], [ %.054, %31 ], [ %.054, %21 ], [ %.054, %14 ], [ %.054, %11 ]
  %.052.be = phi i32 [ %.052, %10 ], [ %.052, %375 ], [ %.052, %374 ], [ %.052, %373 ], [ %.052, %372 ], [ %.052, %371 ], [ %.052, %368 ], [ %.052, %364 ], [ %.052, %363 ], [ %.052, %358 ], [ %.052, %357 ], [ %.052, %356 ], [ %.052, %354 ], [ %.052, %344 ], [ %.052, %334 ], [ %.052, %333 ], [ %.052, %322 ], [ %.052, %312 ], [ %.052, %311 ], [ %310, %309 ], [ %.052, %308 ], [ %.052, %303 ], [ %.052, %299 ], [ %.052, %296 ], [ %295, %293 ], [ %.052, %288 ], [ %.052, %287 ], [ %.052, %277 ], [ %.052, %267 ], [ %.052, %266 ], [ %.052, %256 ], [ %.052, %246 ], [ %.052, %240 ], [ %.052, %236 ], [ %.052, %233 ], [ %.052, %231 ], [ %.052, %230 ], [ %.052, %229 ], [ %.052, %228 ], [ %.052, %222 ], [ %.052, %218 ], [ %.052, %216 ], [ %.052, %205 ], [ %.052, %195 ], [ %.052, %194 ], [ %.052, %182 ], [ %.052, %172 ], [ %.052, %167 ], [ %.052, %166 ], [ %.052, %165 ], [ %.052, %157 ], [ %.052, %153 ], [ %.052, %152 ], [ %.052, %137 ], [ %.052, %127 ], [ %.052, %126 ], [ %.052, %125 ], [ %.052, %124 ], [ %.052, %122 ], [ %.052, %121 ], [ %.052, %111 ], [ %.052, %101 ], [ %.052, %100 ], [ %.052, %86 ], [ %.052, %76 ], [ %.052, %71 ], [ %.052, %69 ], [ %.052, %57 ], [ %.052, %47 ], [ %.052, %46 ], [ %.052, %44 ], [ %.052, %31 ], [ %.052, %21 ], [ %.052, %14 ], [ %.052, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ -1380117195, %375 ], [ -492886146, %374 ], [ 1500674204, %373 ], [ -2127222264, %372 ], [ 1492078041, %371 ], [ -982765718, %368 ], [ 214127418, %364 ], [ -247591450, %363 ], [ -1044191414, %358 ], [ 509604759, %357 ], [ 1035082758, %356 ], [ -1280058205, %354 ], [ %353, %344 ], [ %343, %334 ], [ 1206532778, %333 ], [ %332, %322 ], [ %321, %312 ], [ -2085374703, %311 ], [ 101649961, %309 ], [ -24845844, %308 ], [ 350946598, %303 ], [ %302, %299 ], [ %298, %296 ], [ 101649961, %293 ], [ %292, %288 ], [ 1206532778, %287 ], [ %286, %277 ], [ %276, %267 ], [ -292808575, %266 ], [ %265, %256 ], [ %255, %246 ], [ 620512700, %240 ], [ %239, %236 ], [ -292808575, %233 ], [ -1161629190, %231 ], [ 1966426611, %230 ], [ -1914182568, %229 ], [ 629337823, %228 ], [ -1105802574, %222 ], [ %221, %218 ], [ %217, %216 ], [ %215, %205 ], [ %204, %195 ], [ -1914182568, %194 ], [ %193, %182 ], [ %181, %172 ], [ %171, %167 ], [ -1161629190, %166 ], [ -272656981, %165 ], [ 337689994, %157 ], [ %156, %153 ], [ -272656981, %152 ], [ %151, %137 ], [ %136, %127 ], [ -1280058205, %126 ], [ -1976918267, %125 ], [ -1826989263, %124 ], [ 2057669867, %122 ], [ -1559147818, %121 ], [ %120, %111 ], [ %110, %101 ], [ 1702422020, %100 ], [ %99, %86 ], [ %85, %76 ], [ %75, %71 ], [ %70, %69 ], [ %68, %57 ], [ %56, %47 ], [ 2057669867, %46 ], [ %45, %44 ], [ %43, %31 ], [ %30, %21 ], [ -1976918267, %14 ], [ %13, %11 ]
  br label %10

11:                                               ; preds = %10
  %.0..0..0.46 = load volatile i32, i32* %5, align 4
  %12 = icmp eq i32 %.0..0..0.46, 0
  %13 = select i1 %12, i32 958086836, i32 -1691189972
  br label %.backedge

14:                                               ; preds = %10
  %15 = load i32, i32* %6, align 4
  %16 = add i32 %15, -2
  %17 = mul nsw i32 %16, %15
  %18 = sdiv i32 %17, 2
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %18)
  %20 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %19, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

21:                                               ; preds = %10
  %22 = load i32, i32* @x.1, align 4
  %23 = load i32, i32* @y.2, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 1035082758, i32 1455233723
  br label %.backedge

31:                                               ; preds = %10
  %32 = load i32, i32* %6, align 4
  %33 = add i32 %32, -1
  %34 = icmp sle i32 %.070, %33
  store i1 %34, i1* %4, align 1
  %35 = load i32, i32* @x.1, align 4
  %36 = load i32, i32* @y.2, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1093843664, i32 1455233723
  br label %.backedge

44:                                               ; preds = %10
  %.0..0..0.47 = load volatile i1, i1* %4, align 1
  %45 = select i1 %.0..0..0.47, i32 -809007147, i32 1186966783
  br label %.backedge

46:                                               ; preds = %10
  %.neg81 = add i32 %.070, 1
  br label %.backedge

47:                                               ; preds = %10
  %48 = load i32, i32* @x.1, align 4
  %49 = load i32, i32* @y.2, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 509604759, i32 -1611448839
  br label %.backedge

57:                                               ; preds = %10
  %58 = load i32, i32* %6, align 4
  %59 = icmp sle i32 %.068, %58
  store i1 %59, i1* %3, align 1
  %60 = load i32, i32* @x.1, align 4
  %61 = load i32, i32* @y.2, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 -316196131, i32 -1611448839
  br label %.backedge

69:                                               ; preds = %10
  %.0..0..0.48 = load volatile i1, i1* %3, align 1
  %70 = select i1 %.0..0..0.48, i32 1030985610, i32 716227641
  br label %.backedge

71:                                               ; preds = %10
  %72 = add i32 %.068, %.070
  %73 = load i32, i32* %6, align 4
  %74 = add i32 %73, 1
  %.not80 = icmp eq i32 %72, %74
  %75 = select i1 %.not80, i32 1702422020, i32 -1905216505
  br label %.backedge

76:                                               ; preds = %10
  %77 = load i32, i32* @x.1, align 4
  %78 = load i32, i32* @y.2, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 -1044191414, i32 93558856
  br label %.backedge

86:                                               ; preds = %10
  %87 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.070)
  %88 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %89 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %88, i32 %.068)
  %90 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %89, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %91 = load i32, i32* @x.1, align 4
  %92 = load i32, i32* @y.2, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 233129683, i32 93558856
  br label %.backedge

100:                                              ; preds = %10
  br label %.backedge

101:                                              ; preds = %10
  %102 = load i32, i32* @x.1, align 4
  %103 = load i32, i32* @y.2, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 -247591450, i32 1948911952
  br label %.backedge

111:                                              ; preds = %10
  %112 = load i32, i32* @x.1, align 4
  %113 = load i32, i32* @y.2, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 973793197, i32 1948911952
  br label %.backedge

121:                                              ; preds = %10
  br label %.backedge

122:                                              ; preds = %10
  %123 = add i32 %.068, 1
  br label %.backedge

124:                                              ; preds = %10
  br label %.backedge

125:                                              ; preds = %10
  %.neg79 = add i32 %.070, 1
  br label %.backedge

126:                                              ; preds = %10
  br label %.backedge

127:                                              ; preds = %10
  %128 = load i32, i32* @x.1, align 4
  %129 = load i32, i32* @y.2, align 4
  %130 = add i32 %128, -1
  %131 = mul i32 %130, %128
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %134, %133
  %136 = select i1 %135, i32 214127418, i32 -332584058
  br label %.backedge

137:                                              ; preds = %10
  %138 = load i32, i32* %6, align 4
  %139 = add i32 %138, -1
  %140 = zext i32 %138 to i64
  %141 = call i8* @llvm.stacksave()
  %142 = alloca i32, i64 %140, align 16
  store i32* %142, i32** %2, align 8
  %143 = load i32, i32* @x.1, align 4
  %144 = load i32, i32* @y.2, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 732614236, i32 -332584058
  br label %.backedge

152:                                              ; preds = %10
  br label %.backedge

153:                                              ; preds = %10
  %154 = load i32, i32* %6, align 4
  %155 = icmp slt i32 %.062, %154
  %156 = select i1 %155, i32 1969947702, i32 755804452
  br label %.backedge

157:                                              ; preds = %10
  %158 = load i32, i32* %6, align 4
  %159 = add i32 %158, -1
  %160 = mul nsw i32 %159, %158
  %161 = sdiv i32 %160, 2
  %162 = sub i32 %161, %158
  %163 = sext i32 %.062 to i64
  %.0..0..0.49 = load volatile i32*, i32** %2, align 8
  %164 = getelementptr inbounds i32, i32* %.0..0..0.49, i64 %163
  store i32 %162, i32* %164, align 4
  br label %.backedge

165:                                              ; preds = %10
  %.neg78 = add i32 %.062, 1
  br label %.backedge

166:                                              ; preds = %10
  br label %.backedge

167:                                              ; preds = %10
  %168 = load i32, i32* %6, align 4
  %169 = add i32 %168, -1
  %170 = icmp slt i32 %.060, %169
  %171 = select i1 %170, i32 2146992615, i32 759608757
  br label %.backedge

172:                                              ; preds = %10
  %173 = load i32, i32* @x.1, align 4
  %174 = load i32, i32* @y.2, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 -982765718, i32 -226202815
  br label %.backedge

182:                                              ; preds = %10
  %183 = load i32, i32* %6, align 4
  %184 = add i32 %183, -1
  %185 = load i32, i32* @x.1, align 4
  %186 = load i32, i32* @y.2, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 -546762711, i32 -226202815
  br label %.backedge

194:                                              ; preds = %10
  br label %.backedge

195:                                              ; preds = %10
  %196 = load i32, i32* @x.1, align 4
  %197 = load i32, i32* @y.2, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 1492078041, i32 -1618706586
  br label %.backedge

205:                                              ; preds = %10
  %206 = icmp sgt i32 %.058, %.060
  store i1 %206, i1* %1, align 1
  %207 = load i32, i32* @x.1, align 4
  %208 = load i32, i32* @y.2, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 1752515048, i32 -1618706586
  br label %.backedge

216:                                              ; preds = %10
  %.0..0..0.51 = load volatile i1, i1* %1, align 1
  %217 = select i1 %.0..0..0.51, i32 587937964, i32 -1303774098
  br label %.backedge

218:                                              ; preds = %10
  %219 = add i32 %.058, %.060
  %220 = load i32, i32* %6, align 4
  %.not77 = icmp eq i32 %219, %220
  %221 = select i1 %.not77, i32 -1105802574, i32 -165732641
  br label %.backedge

222:                                              ; preds = %10
  %223 = sext i32 %.060 to i64
  %.0..0..0.50 = load volatile i32*, i32** %2, align 8
  %224 = getelementptr inbounds i32, i32* %.0..0..0.50, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = sub i32 %225, %.058
  store i32 %226, i32* %224, align 4
  %227 = add i32 %.066, 1
  br label %.backedge

228:                                              ; preds = %10
  br label %.backedge

229:                                              ; preds = %10
  %.neg76 = add i32 %.058, -1
  br label %.backedge

230:                                              ; preds = %10
  br label %.backedge

231:                                              ; preds = %10
  %232 = add i32 %.060, 1
  br label %.backedge

233:                                              ; preds = %10
  %234 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.066)
  %235 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %234, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

236:                                              ; preds = %10
  %237 = load i32, i32* %6, align 4
  %238 = icmp slt i32 %.056, %237
  %239 = select i1 %238, i32 -1587042695, i32 936291850
  br label %.backedge

240:                                              ; preds = %10
  %241 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.056)
  %242 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %241, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %243 = load i32, i32* %6, align 4
  %244 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %242, i32 %243)
  %245 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %244, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

246:                                              ; preds = %10
  %247 = load i32, i32* @x.1, align 4
  %248 = load i32, i32* @y.2, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 -2127222264, i32 -867569179
  br label %.backedge

256:                                              ; preds = %10
  %.neg75 = add i32 %.056, 1
  %257 = load i32, i32* @x.1, align 4
  %258 = load i32, i32* @y.2, align 4
  %259 = add i32 %257, -1
  %260 = mul i32 %259, %257
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %263, %262
  %265 = select i1 %264, i32 637277970, i32 -867569179
  br label %.backedge

266:                                              ; preds = %10
  br label %.backedge

267:                                              ; preds = %10
  %268 = load i32, i32* @x.1, align 4
  %269 = load i32, i32* @y.2, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 1500674204, i32 -1742227761
  br label %.backedge

277:                                              ; preds = %10
  %278 = load i32, i32* @x.1, align 4
  %279 = load i32, i32* @y.2, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 -1823464804, i32 -1742227761
  br label %.backedge

287:                                              ; preds = %10
  br label %.backedge

288:                                              ; preds = %10
  %289 = load i32, i32* %6, align 4
  %290 = add i32 %289, -1
  %291 = icmp slt i32 %.054, %290
  %292 = select i1 %291, i32 153386870, i32 1112790363
  br label %.backedge

293:                                              ; preds = %10
  %294 = load i32, i32* %6, align 4
  %295 = add i32 %294, -1
  br label %.backedge

296:                                              ; preds = %10
  %297 = icmp sgt i32 %.052, %.054
  %298 = select i1 %297, i32 -1712951411, i32 -1753395193
  br label %.backedge

299:                                              ; preds = %10
  %300 = add i32 %.052, %.054
  %301 = load i32, i32* %6, align 4
  %.not = icmp eq i32 %300, %301
  %302 = select i1 %.not, i32 350946598, i32 -1621013063
  br label %.backedge

303:                                              ; preds = %10
  %304 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.054)
  %305 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %304, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %306 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %305, i32 %.052)
  %307 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %306, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

308:                                              ; preds = %10
  br label %.backedge

309:                                              ; preds = %10
  %310 = add i32 %.052, -1
  br label %.backedge

311:                                              ; preds = %10
  br label %.backedge

312:                                              ; preds = %10
  %313 = load i32, i32* @x.1, align 4
  %314 = load i32, i32* @y.2, align 4
  %315 = add i32 %313, -1
  %316 = mul i32 %315, %313
  %317 = and i32 %316, 1
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %319, %318
  %321 = select i1 %320, i32 -492886146, i32 -1345261826
  br label %.backedge

322:                                              ; preds = %10
  %323 = add i32 %.054, 1
  %324 = load i32, i32* @x.1, align 4
  %325 = load i32, i32* @y.2, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 12221181, i32 -1345261826
  br label %.backedge

333:                                              ; preds = %10
  br label %.backedge

334:                                              ; preds = %10
  %335 = load i32, i32* @x.1, align 4
  %336 = load i32, i32* @y.2, align 4
  %337 = add i32 %335, -1
  %338 = mul i32 %337, %335
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %341, %340
  %343 = select i1 %342, i32 -1380117195, i32 -1004777122
  br label %.backedge

344:                                              ; preds = %10
  call void @llvm.stackrestore(i8* %.064)
  %345 = load i32, i32* @x.1, align 4
  %346 = load i32, i32* @y.2, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 -1752965763, i32 -1004777122
  br label %.backedge

354:                                              ; preds = %10
  br label %.backedge

355:                                              ; preds = %10
  ret i32 0

356:                                              ; preds = %10
  br label %.backedge

357:                                              ; preds = %10
  br label %.backedge

358:                                              ; preds = %10
  %359 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.070)
  %360 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %359, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %361 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %360, i32 %.068)
  %362 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %361, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

363:                                              ; preds = %10
  br label %.backedge

364:                                              ; preds = %10
  %365 = load i32, i32* %6, align 4
  %366 = add i32 %365, -1
  %367 = call i8* @llvm.stacksave()
  br label %.backedge

368:                                              ; preds = %10
  %369 = load i32, i32* %6, align 4
  %370 = add i32 %369, -1
  br label %.backedge

371:                                              ; preds = %10
  br label %.backedge

372:                                              ; preds = %10
  %.neg74 = add i32 %.056, 1
  br label %.backedge

373:                                              ; preds = %10
  br label %.backedge

374:                                              ; preds = %10
  %.neg = add i32 %.054, 1
  br label %.backedge

375:                                              ; preds = %10
  call void @llvm.stackrestore(i8* %.064)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s282183930.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
