; ModuleID = 'build_ollvm/programs/p03090/s055773601.ll'
source_filename = "Project_CodeNet_C++1400/p03090/s055773601.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s055773601.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %8 = load i32, i32* %6, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %5, align 8
  %.0..0..0.53 = load volatile i64, i64* %5, align 8
  %10 = mul nuw i64 %.0..0..0.53, %9
  %11 = alloca i8, i64 %10, align 16
  %12 = srem i32 %8, 2
  store i32 %12, i32* %4, align 4
  br label %13

13:                                               ; preds = %.backedge, %0
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.0 = phi i32 [ -575190326, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -575190326, label %14
    i32 -1640846775, label %17
    i32 1268511447, label %18
    i32 381839136, label %22
    i32 -1210424751, label %32
    i32 -1382217875, label %42
    i32 -1791657914, label %43
    i32 2100866424, label %47
    i32 -184982553, label %53
    i32 -1244035118, label %58
    i32 321978884, label %63
    i32 -346150297, label %73
    i32 434157096, label %83
    i32 886792771, label %84
    i32 -11250201, label %94
    i32 1780963470, label %105
    i32 -1074238448, label %106
    i32 1274989664, label %107
    i32 -122274239, label %109
    i32 -1102332032, label %110
    i32 -943356344, label %120
    i32 1828078211, label %130
    i32 -1176212549, label %131
    i32 -316249535, label %135
    i32 402227255, label %136
    i32 1677454130, label %140
    i32 1669258577, label %146
    i32 1890280134, label %151
    i32 721566835, label %156
    i32 -1313515394, label %166
    i32 536475326, label %176
    i32 -1035646667, label %177
    i32 -305924598, label %178
    i32 -497698373, label %179
    i32 -1259455245, label %181
    i32 276785503, label %182
    i32 301886342, label %183
    i32 1925541877, label %193
    i32 206798856, label %205
    i32 -1130267673, label %207
    i32 52439166, label %209
    i32 2143263742, label %213
    i32 -790211776, label %223
    i32 1736028725, label %240
    i32 -698548334, label %242
    i32 576642682, label %244
    i32 -582908976, label %245
    i32 -1616726878, label %247
    i32 -1590546869, label %248
    i32 529919895, label %250
    i32 174480956, label %260
    i32 1678583474, label %272
    i32 1476695499, label %273
    i32 92072768, label %283
    i32 1577802914, label %295
    i32 1876487331, label %297
    i32 2005689181, label %307
    i32 304014214, label %318
    i32 -60104810, label %319
    i32 1578214693, label %323
    i32 -229220606, label %331
    i32 1026622237, label %341
    i32 847708686, label %357
    i32 -1787314076, label %358
    i32 325721677, label %359
    i32 -777445308, label %361
    i32 323808001, label %362
    i32 978928835, label %363
    i32 -211185278, label %364
    i32 912160564, label %365
    i32 -1561794643, label %366
    i32 -229764043, label %368
    i32 2144768174, label %369
    i32 -827537017, label %370
    i32 979693008, label %371
    i32 851453314, label %372
    i32 -309802184, label %375
    i32 810736873, label %376
    i32 -68371600, label %377
  ]

.backedge:                                        ; preds = %13, %377, %376, %375, %372, %371, %370, %369, %368, %366, %365, %364, %362, %361, %359, %358, %357, %341, %331, %323, %319, %318, %307, %297, %295, %283, %273, %272, %260, %250, %248, %247, %245, %244, %242, %240, %223, %213, %209, %207, %205, %193, %183, %182, %181, %179, %178, %177, %176, %166, %156, %151, %146, %140, %136, %135, %131, %130, %120, %110, %109, %107, %106, %105, %94, %84, %83, %73, %63, %58, %53, %47, %43, %42, %32, %22, %18, %17, %14
  %.090.be = phi i32 [ %.090, %13 ], [ %.090, %377 ], [ %.090, %376 ], [ %.090, %375 ], [ %.090, %372 ], [ %.090, %371 ], [ %.090, %370 ], [ %.090, %369 ], [ %.090, %368 ], [ %.090, %366 ], [ %.090, %365 ], [ %.090, %364 ], [ %.090, %362 ], [ %.090, %361 ], [ %.090, %359 ], [ %.090, %358 ], [ %.090, %357 ], [ %.090, %341 ], [ %.090, %331 ], [ %.090, %323 ], [ %.090, %319 ], [ %.090, %318 ], [ %.090, %307 ], [ %.090, %297 ], [ %.090, %295 ], [ %.090, %283 ], [ %.090, %273 ], [ %.090, %272 ], [ %.090, %260 ], [ %.090, %250 ], [ %.090, %248 ], [ %.090, %247 ], [ %.090, %245 ], [ %.090, %244 ], [ %.090, %242 ], [ %.090, %240 ], [ %.090, %223 ], [ %.090, %213 ], [ %.090, %209 ], [ %.090, %207 ], [ %.090, %205 ], [ %.090, %193 ], [ %.090, %183 ], [ %.090, %182 ], [ %.090, %181 ], [ %.090, %179 ], [ %.090, %178 ], [ %.090, %177 ], [ %.090, %176 ], [ %.090, %166 ], [ %.090, %156 ], [ %.090, %151 ], [ %.090, %146 ], [ %.090, %140 ], [ %.090, %136 ], [ %.090, %135 ], [ %.090, %131 ], [ %.090, %130 ], [ %.090, %120 ], [ %.090, %110 ], [ %.090, %109 ], [ %108, %107 ], [ %.090, %106 ], [ %.090, %105 ], [ %.090, %94 ], [ %.090, %84 ], [ %.090, %83 ], [ %.090, %73 ], [ %.090, %63 ], [ %.090, %58 ], [ %.090, %53 ], [ %.090, %47 ], [ %.090, %43 ], [ %.090, %42 ], [ %.090, %32 ], [ %.090, %22 ], [ %.090, %18 ], [ 0, %17 ], [ %.090, %14 ]
  %.088.be = phi i32 [ %.088, %13 ], [ %.088, %377 ], [ %.088, %376 ], [ %.088, %375 ], [ %.088, %372 ], [ %.088, %371 ], [ %.088, %370 ], [ %.088, %369 ], [ %.088, %368 ], [ %367, %366 ], [ %.088, %365 ], [ 0, %364 ], [ %.088, %362 ], [ %.088, %361 ], [ %.088, %359 ], [ %.088, %358 ], [ %.088, %357 ], [ %.088, %341 ], [ %.088, %331 ], [ %.088, %323 ], [ %.088, %319 ], [ %.088, %318 ], [ %.088, %307 ], [ %.088, %297 ], [ %.088, %295 ], [ %.088, %283 ], [ %.088, %273 ], [ %.088, %272 ], [ %.088, %260 ], [ %.088, %250 ], [ %.088, %248 ], [ %.088, %247 ], [ %.088, %245 ], [ %.088, %244 ], [ %.088, %242 ], [ %.088, %240 ], [ %.088, %223 ], [ %.088, %213 ], [ %.088, %209 ], [ %.088, %207 ], [ %.088, %205 ], [ %.088, %193 ], [ %.088, %183 ], [ %.088, %182 ], [ %.088, %181 ], [ %.088, %179 ], [ %.088, %178 ], [ %.088, %177 ], [ %.088, %176 ], [ %.088, %166 ], [ %.088, %156 ], [ %.088, %151 ], [ %.088, %146 ], [ %.088, %140 ], [ %.088, %136 ], [ %.088, %135 ], [ %.088, %131 ], [ %.088, %130 ], [ %.088, %120 ], [ %.088, %110 ], [ %.088, %109 ], [ %.088, %107 ], [ %.088, %106 ], [ %.088, %105 ], [ %95, %94 ], [ %.088, %84 ], [ %.088, %83 ], [ %.088, %73 ], [ %.088, %63 ], [ %.088, %58 ], [ %.088, %53 ], [ %.088, %47 ], [ %.088, %43 ], [ %.088, %42 ], [ 0, %32 ], [ %.088, %22 ], [ %.088, %18 ], [ %.088, %17 ], [ %.088, %14 ]
  %.086.be = phi i32 [ %.086, %13 ], [ %.086, %377 ], [ %.086, %376 ], [ %.086, %375 ], [ %.086, %372 ], [ %.086, %371 ], [ %.086, %370 ], [ %.086, %369 ], [ 0, %368 ], [ %.086, %366 ], [ %.086, %365 ], [ %.086, %364 ], [ %.086, %362 ], [ %.086, %361 ], [ %.086, %359 ], [ %.086, %358 ], [ %.086, %357 ], [ %.086, %341 ], [ %.086, %331 ], [ %.086, %323 ], [ %.086, %319 ], [ %.086, %318 ], [ %.086, %307 ], [ %.086, %297 ], [ %.086, %295 ], [ %.086, %283 ], [ %.086, %273 ], [ %.086, %272 ], [ %.086, %260 ], [ %.086, %250 ], [ %.086, %248 ], [ %.086, %247 ], [ %.086, %245 ], [ %.086, %244 ], [ %.086, %242 ], [ %.086, %240 ], [ %.086, %223 ], [ %.086, %213 ], [ %.086, %209 ], [ %.086, %207 ], [ %.086, %205 ], [ %.086, %193 ], [ %.086, %183 ], [ %.086, %182 ], [ %.086, %181 ], [ %180, %179 ], [ %.086, %178 ], [ %.086, %177 ], [ %.086, %176 ], [ %.086, %166 ], [ %.086, %156 ], [ %.086, %151 ], [ %.086, %146 ], [ %.086, %140 ], [ %.086, %136 ], [ %.086, %135 ], [ %.086, %131 ], [ %.086, %130 ], [ 0, %120 ], [ %.086, %110 ], [ %.086, %109 ], [ %.086, %107 ], [ %.086, %106 ], [ %.086, %105 ], [ %.086, %94 ], [ %.086, %84 ], [ %.086, %83 ], [ %.086, %73 ], [ %.086, %63 ], [ %.086, %58 ], [ %.086, %53 ], [ %.086, %47 ], [ %.086, %43 ], [ %.086, %42 ], [ %.086, %32 ], [ %.086, %22 ], [ %.086, %18 ], [ %.086, %17 ], [ %.086, %14 ]
  %.084.be = phi i32 [ %.084, %13 ], [ %.084, %377 ], [ %.084, %376 ], [ %.084, %375 ], [ %.084, %372 ], [ %.084, %371 ], [ %.084, %370 ], [ %.084, %369 ], [ %.084, %368 ], [ %.084, %366 ], [ %.084, %365 ], [ %.084, %364 ], [ %.084, %362 ], [ %.084, %361 ], [ %.084, %359 ], [ %.084, %358 ], [ %.084, %357 ], [ %.084, %341 ], [ %.084, %331 ], [ %.084, %323 ], [ %.084, %319 ], [ %.084, %318 ], [ %.084, %307 ], [ %.084, %297 ], [ %.084, %295 ], [ %.084, %283 ], [ %.084, %273 ], [ %.084, %272 ], [ %.084, %260 ], [ %.084, %250 ], [ %.084, %248 ], [ %.084, %247 ], [ %.084, %245 ], [ %.084, %244 ], [ %.084, %242 ], [ %.084, %240 ], [ %.084, %223 ], [ %.084, %213 ], [ %.084, %209 ], [ %.084, %207 ], [ %.084, %205 ], [ %.084, %193 ], [ %.084, %183 ], [ %.084, %182 ], [ %.084, %181 ], [ %.084, %179 ], [ %.084, %178 ], [ %.neg95, %177 ], [ %.084, %176 ], [ %.084, %166 ], [ %.084, %156 ], [ %.084, %151 ], [ %.084, %146 ], [ %.084, %140 ], [ %.084, %136 ], [ 0, %135 ], [ %.084, %131 ], [ %.084, %130 ], [ %.084, %120 ], [ %.084, %110 ], [ %.084, %109 ], [ %.084, %107 ], [ %.084, %106 ], [ %.084, %105 ], [ %.084, %94 ], [ %.084, %84 ], [ %.084, %83 ], [ %.084, %73 ], [ %.084, %63 ], [ %.084, %58 ], [ %.084, %53 ], [ %.084, %47 ], [ %.084, %43 ], [ %.084, %42 ], [ %.084, %32 ], [ %.084, %22 ], [ %.084, %18 ], [ %.084, %17 ], [ %.084, %14 ]
  %.082.be = phi i32 [ %.082, %13 ], [ %.082, %377 ], [ %.082, %376 ], [ %.082, %375 ], [ %.082, %372 ], [ %.082, %371 ], [ %.082, %370 ], [ %.082, %369 ], [ %.082, %368 ], [ %.082, %366 ], [ %.082, %365 ], [ %.082, %364 ], [ %.082, %362 ], [ %.082, %361 ], [ %.082, %359 ], [ %.082, %358 ], [ %.082, %357 ], [ %.082, %341 ], [ %.082, %331 ], [ %.082, %323 ], [ %.082, %319 ], [ %.082, %318 ], [ %.082, %307 ], [ %.082, %297 ], [ %.082, %295 ], [ %.082, %283 ], [ %.082, %273 ], [ %.082, %272 ], [ %.082, %260 ], [ %.082, %250 ], [ %.082, %248 ], [ %.082, %247 ], [ %.082, %245 ], [ %.082, %244 ], [ %243, %242 ], [ %.082, %240 ], [ %.082, %223 ], [ %.082, %213 ], [ %.082, %209 ], [ %.082, %207 ], [ %.082, %205 ], [ %.082, %193 ], [ %.082, %183 ], [ 0, %182 ], [ %.082, %181 ], [ %.082, %179 ], [ %.082, %178 ], [ %.082, %177 ], [ %.082, %176 ], [ %.082, %166 ], [ %.082, %156 ], [ %.082, %151 ], [ %.082, %146 ], [ %.082, %140 ], [ %.082, %136 ], [ %.082, %135 ], [ %.082, %131 ], [ %.082, %130 ], [ %.082, %120 ], [ %.082, %110 ], [ %.082, %109 ], [ %.082, %107 ], [ %.082, %106 ], [ %.082, %105 ], [ %.082, %94 ], [ %.082, %84 ], [ %.082, %83 ], [ %.082, %73 ], [ %.082, %63 ], [ %.082, %58 ], [ %.082, %53 ], [ %.082, %47 ], [ %.082, %43 ], [ %.082, %42 ], [ %.082, %32 ], [ %.082, %22 ], [ %.082, %18 ], [ %.082, %17 ], [ %.082, %14 ]
  %.080.be = phi i32 [ %.080, %13 ], [ %.080, %377 ], [ %.080, %376 ], [ %.080, %375 ], [ %.080, %372 ], [ %.080, %371 ], [ %.080, %370 ], [ %.080, %369 ], [ %.080, %368 ], [ %.080, %366 ], [ %.080, %365 ], [ %.080, %364 ], [ %.080, %362 ], [ %.080, %361 ], [ %.080, %359 ], [ %.080, %358 ], [ %.080, %357 ], [ %.080, %341 ], [ %.080, %331 ], [ %.080, %323 ], [ %.080, %319 ], [ %.080, %318 ], [ %.080, %307 ], [ %.080, %297 ], [ %.080, %295 ], [ %.080, %283 ], [ %.080, %273 ], [ %.080, %272 ], [ %.080, %260 ], [ %.080, %250 ], [ %249, %248 ], [ %.080, %247 ], [ %.080, %245 ], [ %.080, %244 ], [ %.080, %242 ], [ %.080, %240 ], [ %.080, %223 ], [ %.080, %213 ], [ %.080, %209 ], [ %.080, %207 ], [ %.080, %205 ], [ %.080, %193 ], [ %.080, %183 ], [ 0, %182 ], [ %.080, %181 ], [ %.080, %179 ], [ %.080, %178 ], [ %.080, %177 ], [ %.080, %176 ], [ %.080, %166 ], [ %.080, %156 ], [ %.080, %151 ], [ %.080, %146 ], [ %.080, %140 ], [ %.080, %136 ], [ %.080, %135 ], [ %.080, %131 ], [ %.080, %130 ], [ %.080, %120 ], [ %.080, %110 ], [ %.080, %109 ], [ %.080, %107 ], [ %.080, %106 ], [ %.080, %105 ], [ %.080, %94 ], [ %.080, %84 ], [ %.080, %83 ], [ %.080, %73 ], [ %.080, %63 ], [ %.080, %58 ], [ %.080, %53 ], [ %.080, %47 ], [ %.080, %43 ], [ %.080, %42 ], [ %.080, %32 ], [ %.080, %22 ], [ %.080, %18 ], [ %.080, %17 ], [ %.080, %14 ]
  %.078.be = phi i32 [ %.078, %13 ], [ %.078, %377 ], [ %.078, %376 ], [ %.078, %375 ], [ %.078, %372 ], [ %.078, %371 ], [ %.078, %370 ], [ %.078, %369 ], [ %.078, %368 ], [ %.078, %366 ], [ %.078, %365 ], [ %.078, %364 ], [ %.078, %362 ], [ %.078, %361 ], [ %.078, %359 ], [ %.078, %358 ], [ %.078, %357 ], [ %.078, %341 ], [ %.078, %331 ], [ %.078, %323 ], [ %.078, %319 ], [ %.078, %318 ], [ %.078, %307 ], [ %.078, %297 ], [ %.078, %295 ], [ %.078, %283 ], [ %.078, %273 ], [ %.078, %272 ], [ %.078, %260 ], [ %.078, %250 ], [ %.078, %248 ], [ %.078, %247 ], [ %246, %245 ], [ %.078, %244 ], [ %.078, %242 ], [ %.078, %240 ], [ %.078, %223 ], [ %.078, %213 ], [ %.078, %209 ], [ %208, %207 ], [ %.078, %205 ], [ %.078, %193 ], [ %.078, %183 ], [ %.078, %182 ], [ %.078, %181 ], [ %.078, %179 ], [ %.078, %178 ], [ %.078, %177 ], [ %.078, %176 ], [ %.078, %166 ], [ %.078, %156 ], [ %.078, %151 ], [ %.078, %146 ], [ %.078, %140 ], [ %.078, %136 ], [ %.078, %135 ], [ %.078, %131 ], [ %.078, %130 ], [ %.078, %120 ], [ %.078, %110 ], [ %.078, %109 ], [ %.078, %107 ], [ %.078, %106 ], [ %.078, %105 ], [ %.078, %94 ], [ %.078, %84 ], [ %.078, %83 ], [ %.078, %73 ], [ %.078, %63 ], [ %.078, %58 ], [ %.078, %53 ], [ %.078, %47 ], [ %.078, %43 ], [ %.078, %42 ], [ %.078, %32 ], [ %.078, %22 ], [ %.078, %18 ], [ %.078, %17 ], [ %.078, %14 ]
  %.076.be = phi i32 [ %.076, %13 ], [ %.076, %377 ], [ %.076, %376 ], [ %.076, %375 ], [ 0, %372 ], [ %.076, %371 ], [ %.076, %370 ], [ %.076, %369 ], [ %.076, %368 ], [ %.076, %366 ], [ %.076, %365 ], [ %.076, %364 ], [ %.neg93, %362 ], [ %.076, %361 ], [ %.076, %359 ], [ %.076, %358 ], [ %.076, %357 ], [ %.076, %341 ], [ %.076, %331 ], [ %.076, %323 ], [ %.076, %319 ], [ %.076, %318 ], [ %.076, %307 ], [ %.076, %297 ], [ %.076, %295 ], [ %.076, %283 ], [ %.076, %273 ], [ %.076, %272 ], [ 0, %260 ], [ %.076, %250 ], [ %.076, %248 ], [ %.076, %247 ], [ %.076, %245 ], [ %.076, %244 ], [ %.076, %242 ], [ %.076, %240 ], [ %.076, %223 ], [ %.076, %213 ], [ %.076, %209 ], [ %.076, %207 ], [ %.076, %205 ], [ %.076, %193 ], [ %.076, %183 ], [ %.076, %182 ], [ %.076, %181 ], [ %.076, %179 ], [ %.076, %178 ], [ %.076, %177 ], [ %.076, %176 ], [ %.076, %166 ], [ %.076, %156 ], [ %.076, %151 ], [ %.076, %146 ], [ %.076, %140 ], [ %.076, %136 ], [ %.076, %135 ], [ %.076, %131 ], [ %.076, %130 ], [ %.076, %120 ], [ %.076, %110 ], [ %.076, %109 ], [ %.076, %107 ], [ %.076, %106 ], [ %.076, %105 ], [ %.076, %94 ], [ %.076, %84 ], [ %.076, %83 ], [ %.076, %73 ], [ %.076, %63 ], [ %.076, %58 ], [ %.076, %53 ], [ %.076, %47 ], [ %.076, %43 ], [ %.076, %42 ], [ %.076, %32 ], [ %.076, %22 ], [ %.076, %18 ], [ %.076, %17 ], [ %.076, %14 ]
  %.074.be = phi i32 [ %.074, %13 ], [ %.074, %377 ], [ %.neg92, %376 ], [ %.074, %375 ], [ %.074, %372 ], [ %.074, %371 ], [ %.074, %370 ], [ %.074, %369 ], [ %.074, %368 ], [ %.074, %366 ], [ %.074, %365 ], [ %.074, %364 ], [ %.074, %362 ], [ %.074, %361 ], [ %360, %359 ], [ %.074, %358 ], [ %.074, %357 ], [ %.074, %341 ], [ %.074, %331 ], [ %.074, %323 ], [ %.074, %319 ], [ %.074, %318 ], [ %308, %307 ], [ %.074, %297 ], [ %.074, %295 ], [ %.074, %283 ], [ %.074, %273 ], [ %.074, %272 ], [ %.074, %260 ], [ %.074, %250 ], [ %.074, %248 ], [ %.074, %247 ], [ %.074, %245 ], [ %.074, %244 ], [ %.074, %242 ], [ %.074, %240 ], [ %.074, %223 ], [ %.074, %213 ], [ %.074, %209 ], [ %.074, %207 ], [ %.074, %205 ], [ %.074, %193 ], [ %.074, %183 ], [ %.074, %182 ], [ %.074, %181 ], [ %.074, %179 ], [ %.074, %178 ], [ %.074, %177 ], [ %.074, %176 ], [ %.074, %166 ], [ %.074, %156 ], [ %.074, %151 ], [ %.074, %146 ], [ %.074, %140 ], [ %.074, %136 ], [ %.074, %135 ], [ %.074, %131 ], [ %.074, %130 ], [ %.074, %120 ], [ %.074, %110 ], [ %.074, %109 ], [ %.074, %107 ], [ %.074, %106 ], [ %.074, %105 ], [ %.074, %94 ], [ %.074, %84 ], [ %.074, %83 ], [ %.074, %73 ], [ %.074, %63 ], [ %.074, %58 ], [ %.074, %53 ], [ %.074, %47 ], [ %.074, %43 ], [ %.074, %42 ], [ %.074, %32 ], [ %.074, %22 ], [ %.074, %18 ], [ %.074, %17 ], [ %.074, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ 1026622237, %377 ], [ 2005689181, %376 ], [ 92072768, %375 ], [ 174480956, %372 ], [ -790211776, %371 ], [ 1925541877, %370 ], [ -1313515394, %369 ], [ -943356344, %368 ], [ -11250201, %366 ], [ -346150297, %365 ], [ -1210424751, %364 ], [ 1476695499, %362 ], [ 323808001, %361 ], [ -60104810, %359 ], [ 325721677, %358 ], [ -1787314076, %357 ], [ %356, %341 ], [ %340, %331 ], [ %330, %323 ], [ %322, %319 ], [ -60104810, %318 ], [ %317, %307 ], [ %306, %297 ], [ %296, %295 ], [ %294, %283 ], [ %282, %273 ], [ 1476695499, %272 ], [ %271, %260 ], [ %259, %250 ], [ 301886342, %248 ], [ -1590546869, %247 ], [ 52439166, %245 ], [ -582908976, %244 ], [ 576642682, %242 ], [ %241, %240 ], [ %239, %223 ], [ %222, %213 ], [ %212, %209 ], [ 52439166, %207 ], [ %206, %205 ], [ %204, %193 ], [ %192, %183 ], [ 301886342, %182 ], [ 276785503, %181 ], [ -1176212549, %179 ], [ -497698373, %178 ], [ 402227255, %177 ], [ -1035646667, %176 ], [ %175, %166 ], [ %165, %156 ], [ 721566835, %151 ], [ %150, %146 ], [ %145, %140 ], [ %139, %136 ], [ 402227255, %135 ], [ %134, %131 ], [ -1176212549, %130 ], [ %129, %120 ], [ %119, %110 ], [ 276785503, %109 ], [ 1268511447, %107 ], [ 1274989664, %106 ], [ -1791657914, %105 ], [ %104, %94 ], [ %93, %84 ], [ 886792771, %83 ], [ %82, %73 ], [ %72, %63 ], [ 321978884, %58 ], [ %57, %53 ], [ %52, %47 ], [ %46, %43 ], [ -1791657914, %42 ], [ %41, %32 ], [ %31, %22 ], [ %21, %18 ], [ 1268511447, %17 ], [ %16, %14 ]
  br label %13

14:                                               ; preds = %13
  %.0..0..0.70 = load volatile i32, i32* %4, align 4
  %15 = icmp eq i32 %.0..0..0.70, 1
  %16 = select i1 %15, i32 -1640846775, i32 -1102332032
  br label %.backedge

17:                                               ; preds = %13
  br label %.backedge

18:                                               ; preds = %13
  %19 = load i32, i32* %6, align 4
  %20 = icmp slt i32 %.090, %19
  %21 = select i1 %20, i32 381839136, i32 -122274239
  br label %.backedge

22:                                               ; preds = %13
  %23 = load i32, i32* @x.1, align 4
  %24 = load i32, i32* @y.2, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 -1210424751, i32 -211185278
  br label %.backedge

32:                                               ; preds = %13
  %33 = load i32, i32* @x.1, align 4
  %34 = load i32, i32* @y.2, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 -1382217875, i32 -211185278
  br label %.backedge

42:                                               ; preds = %13
  br label %.backedge

43:                                               ; preds = %13
  %44 = load i32, i32* %6, align 4
  %45 = icmp slt i32 %.088, %44
  %46 = select i1 %45, i32 2100866424, i32 -1074238448
  br label %.backedge

47:                                               ; preds = %13
  %48 = sext i32 %.090 to i64
  %.0..0..0.54 = load volatile i64, i64* %5, align 8
  %49 = mul nsw i64 %.0..0..0.54, %48
  %50 = sext i32 %.088 to i64
  %.idx102 = add nsw i64 %49, %50
  %51 = getelementptr inbounds i8, i8* %11, i64 %.idx102
  store i8 0, i8* %51, align 1
  %.not103 = icmp eq i32 %.090, %.088
  %52 = select i1 %.not103, i32 321978884, i32 -184982553
  br label %.backedge

53:                                               ; preds = %13
  %54 = load i32, i32* %6, align 4
  %55 = sub i32 -2, %.090
  %56 = add i32 %55, %54
  %.not101 = icmp eq i32 %.088, %56
  %57 = select i1 %.not101, i32 321978884, i32 -1244035118
  br label %.backedge

58:                                               ; preds = %13
  %59 = sext i32 %.090 to i64
  %.0..0..0.55 = load volatile i64, i64* %5, align 8
  %60 = mul nsw i64 %.0..0..0.55, %59
  %61 = sext i32 %.088 to i64
  %.idx100 = add nsw i64 %60, %61
  %62 = getelementptr inbounds i8, i8* %11, i64 %.idx100
  store i8 1, i8* %62, align 1
  br label %.backedge

63:                                               ; preds = %13
  %64 = load i32, i32* @x.1, align 4
  %65 = load i32, i32* @y.2, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 -346150297, i32 912160564
  br label %.backedge

73:                                               ; preds = %13
  %74 = load i32, i32* @x.1, align 4
  %75 = load i32, i32* @y.2, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 434157096, i32 912160564
  br label %.backedge

83:                                               ; preds = %13
  br label %.backedge

84:                                               ; preds = %13
  %85 = load i32, i32* @x.1, align 4
  %86 = load i32, i32* @y.2, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 -11250201, i32 -1561794643
  br label %.backedge

94:                                               ; preds = %13
  %95 = add i32 %.088, 1
  %96 = load i32, i32* @x.1, align 4
  %97 = load i32, i32* @y.2, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 1780963470, i32 -1561794643
  br label %.backedge

105:                                              ; preds = %13
  br label %.backedge

106:                                              ; preds = %13
  br label %.backedge

107:                                              ; preds = %13
  %108 = add i32 %.090, 1
  br label %.backedge

109:                                              ; preds = %13
  br label %.backedge

110:                                              ; preds = %13
  %111 = load i32, i32* @x.1, align 4
  %112 = load i32, i32* @y.2, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -943356344, i32 -229764043
  br label %.backedge

120:                                              ; preds = %13
  %121 = load i32, i32* @x.1, align 4
  %122 = load i32, i32* @y.2, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 1828078211, i32 -229764043
  br label %.backedge

130:                                              ; preds = %13
  br label %.backedge

131:                                              ; preds = %13
  %132 = load i32, i32* %6, align 4
  %133 = icmp slt i32 %.086, %132
  %134 = select i1 %133, i32 -316249535, i32 -1259455245
  br label %.backedge

135:                                              ; preds = %13
  br label %.backedge

136:                                              ; preds = %13
  %137 = load i32, i32* %6, align 4
  %138 = icmp slt i32 %.084, %137
  %139 = select i1 %138, i32 1677454130, i32 -305924598
  br label %.backedge

140:                                              ; preds = %13
  %141 = sext i32 %.086 to i64
  %.0..0..0.56 = load volatile i64, i64* %5, align 8
  %142 = mul nsw i64 %.0..0..0.56, %141
  %143 = sext i32 %.084 to i64
  %.idx98 = add nsw i64 %142, %143
  %144 = getelementptr inbounds i8, i8* %11, i64 %.idx98
  store i8 0, i8* %144, align 1
  %.not99 = icmp eq i32 %.084, %.086
  %145 = select i1 %.not99, i32 721566835, i32 1669258577
  br label %.backedge

146:                                              ; preds = %13
  %147 = load i32, i32* %6, align 4
  %148 = xor i32 %.086, -1
  %149 = add i32 %147, %148
  %.not97 = icmp eq i32 %.084, %149
  %150 = select i1 %.not97, i32 721566835, i32 1890280134
  br label %.backedge

151:                                              ; preds = %13
  %152 = sext i32 %.086 to i64
  %.0..0..0.57 = load volatile i64, i64* %5, align 8
  %153 = mul nsw i64 %.0..0..0.57, %152
  %154 = sext i32 %.084 to i64
  %.idx96 = add nsw i64 %153, %154
  %155 = getelementptr inbounds i8, i8* %11, i64 %.idx96
  store i8 1, i8* %155, align 1
  br label %.backedge

156:                                              ; preds = %13
  %157 = load i32, i32* @x.1, align 4
  %158 = load i32, i32* @y.2, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 -1313515394, i32 2144768174
  br label %.backedge

166:                                              ; preds = %13
  %167 = load i32, i32* @x.1, align 4
  %168 = load i32, i32* @y.2, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 536475326, i32 2144768174
  br label %.backedge

176:                                              ; preds = %13
  br label %.backedge

177:                                              ; preds = %13
  %.neg95 = add i32 %.084, 1
  br label %.backedge

178:                                              ; preds = %13
  br label %.backedge

179:                                              ; preds = %13
  %180 = add i32 %.086, 1
  br label %.backedge

181:                                              ; preds = %13
  br label %.backedge

182:                                              ; preds = %13
  br label %.backedge

183:                                              ; preds = %13
  %184 = load i32, i32* @x.1, align 4
  %185 = load i32, i32* @y.2, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 1925541877, i32 -827537017
  br label %.backedge

193:                                              ; preds = %13
  %194 = load i32, i32* %6, align 4
  %195 = icmp slt i32 %.080, %194
  store i1 %195, i1* %3, align 1
  %196 = load i32, i32* @x.1, align 4
  %197 = load i32, i32* @y.2, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 206798856, i32 -827537017
  br label %.backedge

205:                                              ; preds = %13
  %.0..0..0.71 = load volatile i1, i1* %3, align 1
  %206 = select i1 %.0..0..0.71, i32 -1130267673, i32 529919895
  br label %.backedge

207:                                              ; preds = %13
  %208 = add i32 %.080, 1
  br label %.backedge

209:                                              ; preds = %13
  %210 = load i32, i32* %6, align 4
  %211 = icmp slt i32 %.078, %210
  %212 = select i1 %211, i32 2143263742, i32 -1616726878
  br label %.backedge

213:                                              ; preds = %13
  %214 = load i32, i32* @x.1, align 4
  %215 = load i32, i32* @y.2, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 -790211776, i32 979693008
  br label %.backedge

223:                                              ; preds = %13
  %224 = sext i32 %.080 to i64
  %.0..0..0.58 = load volatile i64, i64* %5, align 8
  %225 = mul nsw i64 %.0..0..0.58, %224
  %226 = sext i32 %.078 to i64
  %.idx94 = add nsw i64 %225, %226
  %227 = getelementptr inbounds i8, i8* %11, i64 %.idx94
  %228 = load i8, i8* %227, align 1
  %229 = and i8 %228, 1
  %230 = icmp ne i8 %229, 0
  store i1 %230, i1* %2, align 1
  %231 = load i32, i32* @x.1, align 4
  %232 = load i32, i32* @y.2, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 1736028725, i32 979693008
  br label %.backedge

240:                                              ; preds = %13
  %.0..0..0.72 = load volatile i1, i1* %2, align 1
  %241 = select i1 %.0..0..0.72, i32 -698548334, i32 576642682
  br label %.backedge

242:                                              ; preds = %13
  %243 = add i32 %.082, 1
  br label %.backedge

244:                                              ; preds = %13
  br label %.backedge

245:                                              ; preds = %13
  %246 = add i32 %.078, 1
  br label %.backedge

247:                                              ; preds = %13
  br label %.backedge

248:                                              ; preds = %13
  %249 = add i32 %.080, 1
  br label %.backedge

250:                                              ; preds = %13
  %251 = load i32, i32* @x.1, align 4
  %252 = load i32, i32* @y.2, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 174480956, i32 851453314
  br label %.backedge

260:                                              ; preds = %13
  %261 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.082)
  %262 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %261, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %263 = load i32, i32* @x.1, align 4
  %264 = load i32, i32* @y.2, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 1678583474, i32 851453314
  br label %.backedge

272:                                              ; preds = %13
  br label %.backedge

273:                                              ; preds = %13
  %274 = load i32, i32* @x.1, align 4
  %275 = load i32, i32* @y.2, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 92072768, i32 -309802184
  br label %.backedge

283:                                              ; preds = %13
  %284 = load i32, i32* %6, align 4
  %285 = icmp slt i32 %.076, %284
  store i1 %285, i1* %1, align 1
  %286 = load i32, i32* @x.1, align 4
  %287 = load i32, i32* @y.2, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 1577802914, i32 -309802184
  br label %.backedge

295:                                              ; preds = %13
  %.0..0..0.73 = load volatile i1, i1* %1, align 1
  %296 = select i1 %.0..0..0.73, i32 1876487331, i32 978928835
  br label %.backedge

297:                                              ; preds = %13
  %298 = load i32, i32* @x.1, align 4
  %299 = load i32, i32* @y.2, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 2005689181, i32 810736873
  br label %.backedge

307:                                              ; preds = %13
  %308 = add i32 %.076, 1
  %309 = load i32, i32* @x.1, align 4
  %310 = load i32, i32* @y.2, align 4
  %311 = add i32 %309, -1
  %312 = mul i32 %311, %309
  %313 = and i32 %312, 1
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %315, %314
  %317 = select i1 %316, i32 304014214, i32 810736873
  br label %.backedge

318:                                              ; preds = %13
  br label %.backedge

319:                                              ; preds = %13
  %320 = load i32, i32* %6, align 4
  %321 = icmp slt i32 %.074, %320
  %322 = select i1 %321, i32 1578214693, i32 -777445308
  br label %.backedge

323:                                              ; preds = %13
  %324 = sext i32 %.076 to i64
  %.0..0..0.59 = load volatile i64, i64* %5, align 8
  %325 = mul nsw i64 %.0..0..0.59, %324
  %326 = sext i32 %.074 to i64
  %.idx = add nsw i64 %325, %326
  %327 = getelementptr inbounds i8, i8* %11, i64 %.idx
  %328 = load i8, i8* %327, align 1
  %329 = and i8 %328, 1
  %.not = icmp eq i8 %329, 0
  %330 = select i1 %.not, i32 -1787314076, i32 -229220606
  br label %.backedge

331:                                              ; preds = %13
  %332 = load i32, i32* @x.1, align 4
  %333 = load i32, i32* @y.2, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 1026622237, i32 -68371600
  br label %.backedge

341:                                              ; preds = %13
  %342 = add i32 %.076, 1
  %343 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %342)
  %344 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %343, i8 signext 32)
  %345 = add i32 %.074, 1
  %346 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %344, i32 %345)
  %347 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %346, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %348 = load i32, i32* @x.1, align 4
  %349 = load i32, i32* @y.2, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 847708686, i32 -68371600
  br label %.backedge

357:                                              ; preds = %13
  br label %.backedge

358:                                              ; preds = %13
  br label %.backedge

359:                                              ; preds = %13
  %360 = add i32 %.074, 1
  br label %.backedge

361:                                              ; preds = %13
  br label %.backedge

362:                                              ; preds = %13
  %.neg93 = add i32 %.076, 1
  br label %.backedge

363:                                              ; preds = %13
  ret i32 0

364:                                              ; preds = %13
  br label %.backedge

365:                                              ; preds = %13
  br label %.backedge

366:                                              ; preds = %13
  %367 = add i32 %.088, 1
  br label %.backedge

368:                                              ; preds = %13
  br label %.backedge

369:                                              ; preds = %13
  br label %.backedge

370:                                              ; preds = %13
  br label %.backedge

371:                                              ; preds = %13
  %.0..0..0.60 = load volatile i64, i64* %5, align 8
  %.0..0..0.61 = load volatile i64, i64* %5, align 8
  %.0..0..0.62 = load volatile i64, i64* %5, align 8
  %.0..0..0.63 = load volatile i64, i64* %5, align 8
  %.0..0..0.64 = load volatile i64, i64* %5, align 8
  %.0..0..0.65 = load volatile i64, i64* %5, align 8
  %.0..0..0.66 = load volatile i64, i64* %5, align 8
  %.0..0..0.67 = load volatile i64, i64* %5, align 8
  %.0..0..0.68 = load volatile i64, i64* %5, align 8
  %.0..0..0.69 = load volatile i64, i64* %5, align 8
  br label %.backedge

372:                                              ; preds = %13
  %373 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.082)
  %374 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %373, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

375:                                              ; preds = %13
  br label %.backedge

376:                                              ; preds = %13
  %.neg92 = add i32 %.076, 1
  br label %.backedge

377:                                              ; preds = %13
  %378 = add i32 %.076, 1
  %379 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %378)
  %380 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %379, i8 signext 32)
  %.neg = add i32 %.074, 1
  %381 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %380, i32 %.neg)
  %382 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %381, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s055773601.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1247712772, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1247712772, label %11
    i32 894663394, label %14
    i32 -671660403, label %24
    i32 -59576043, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 894663394, i32 -59576043
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -671660403, i32 -59576043
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 894663394, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
