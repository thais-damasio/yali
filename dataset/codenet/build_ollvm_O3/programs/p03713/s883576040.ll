; ModuleID = 'build_ollvm/programs/p03713/s883576040.ll'
source_filename = "Project_CodeNet_C++1400/p03713/s883576040.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3maxIxERKT_S2_S2_ = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s883576040.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %8)
  %20 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %19, i64* nonnull dereferenceable(8) %9)
  %21 = load i64, i64* %8, align 8
  %22 = srem i64 %21, 3
  store i64 %22, i64* %7, align 8
  br label %23

23:                                               ; preds = %.backedge, %0
  %.075 = phi i64 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i64 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i64 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i64 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.061 = phi i64 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i64 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i64 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i64 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.0 = phi i32 [ 763482361, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 763482361, label %24
    i32 2009667385, label %27
    i32 91982432, label %32
    i32 -252241805, label %42
    i32 -1613494712, label %54
    i32 -1522897625, label %55
    i32 220699288, label %62
    i32 1754548141, label %65
    i32 -1168146789, label %66
    i32 -936664739, label %76
    i32 1683556534, label %87
    i32 1346815797, label %89
    i32 1378369322, label %96
    i32 -1784232558, label %99
    i32 -2077941362, label %100
    i32 890558823, label %103
    i32 1116397366, label %113
    i32 -2089883088, label %125
    i32 -399449230, label %127
    i32 -2086907130, label %128
    i32 -405480996, label %138
    i32 987296287, label %157
    i32 -1800214937, label %159
    i32 -1878047896, label %169
    i32 950739600, label %181
    i32 -767606475, label %183
    i32 -887181226, label %187
    i32 -1226290979, label %188
    i32 874661146, label %198
    i32 -1851535801, label %199
    i32 754380021, label %200
    i32 1904915359, label %210
    i32 1889905462, label %221
    i32 2025818170, label %222
    i32 -914850181, label %232
    i32 -1508049977, label %248
    i32 -17003931, label %249
    i32 -1139822901, label %259
    i32 2035066432, label %270
    i32 -1315917691, label %272
    i32 -1963825678, label %282
    i32 954043655, label %292
    i32 2129390445, label %293
    i32 1457071208, label %296
    i32 -1489693569, label %303
    i32 259929798, label %306
    i32 -176873973, label %316
    i32 -500343771, label %326
    i32 148947885, label %327
    i32 -15404416, label %330
    i32 544680238, label %333
    i32 -1812942250, label %334
    i32 -932853390, label %345
    i32 427227536, label %355
    i32 -931295154, label %367
    i32 2070110696, label %369
    i32 -2008145359, label %373
    i32 -180490636, label %374
    i32 634744527, label %384
    i32 29838193, label %403
    i32 -1045603665, label %404
    i32 -1876681153, label %406
    i32 -1550617825, label %416
    i32 1429803886, label %426
    i32 -1762878063, label %427
    i32 349575702, label %429
    i32 997852814, label %436
    i32 1045847962, label %437
    i32 -242517790, label %440
    i32 -1391457590, label %441
    i32 285553236, label %442
    i32 -1588331424, label %451
    i32 557891729, label %452
    i32 -1089165905, label %453
    i32 -1246776571, label %460
    i32 1031396863, label %461
    i32 -1701173841, label %462
    i32 -1924471122, label %463
    i32 -312591070, label %464
    i32 140534434, label %474
  ]

.backedge:                                        ; preds = %23, %474, %464, %463, %462, %461, %460, %453, %452, %451, %442, %441, %440, %437, %429, %427, %426, %416, %406, %404, %403, %384, %374, %373, %369, %367, %355, %345, %334, %333, %330, %327, %326, %316, %306, %303, %296, %293, %292, %282, %272, %270, %259, %249, %248, %232, %222, %221, %210, %200, %199, %198, %188, %187, %183, %181, %169, %159, %157, %138, %128, %127, %125, %113, %103, %100, %99, %96, %89, %87, %76, %66, %65, %62, %55, %54, %42, %32, %27, %24
  %.075.be = phi i64 [ %.075, %23 ], [ %.075, %474 ], [ %.075, %464 ], [ %.075, %463 ], [ %.075, %462 ], [ %.075, %461 ], [ %.075, %460 ], [ %.075, %453 ], [ %.075, %452 ], [ %.075, %451 ], [ %.075, %442 ], [ %.075, %441 ], [ %.075, %440 ], [ %.075, %437 ], [ %.075, %429 ], [ %.075, %427 ], [ %.075, %426 ], [ %.075, %416 ], [ %.075, %406 ], [ %.075, %404 ], [ %.075, %403 ], [ %.075, %384 ], [ %.075, %374 ], [ %.075, %373 ], [ %.075, %369 ], [ %.075, %367 ], [ %.075, %355 ], [ %.075, %345 ], [ %.075, %334 ], [ %.075, %333 ], [ %.075, %330 ], [ %.075, %327 ], [ %.075, %326 ], [ %.075, %316 ], [ %.075, %306 ], [ %.075, %303 ], [ %.075, %296 ], [ %.075, %293 ], [ %.075, %292 ], [ %.075, %282 ], [ %.075, %272 ], [ %.075, %270 ], [ %.075, %259 ], [ %.075, %249 ], [ %.075, %248 ], [ %.075, %232 ], [ %.075, %222 ], [ %.075, %221 ], [ %.075, %210 ], [ %.075, %200 ], [ %.075, %199 ], [ %.075, %198 ], [ %.075, %188 ], [ %.075, %187 ], [ %.075, %183 ], [ %.075, %181 ], [ %.075, %169 ], [ %.075, %159 ], [ %.075, %157 ], [ %.075, %138 ], [ %.075, %128 ], [ %.075, %127 ], [ %.075, %125 ], [ %.075, %113 ], [ %.075, %103 ], [ %.075, %100 ], [ %.075, %99 ], [ %.075, %96 ], [ %.075, %89 ], [ %.075, %87 ], [ %.075, %76 ], [ %.075, %66 ], [ %.075, %65 ], [ %.075, %62 ], [ %61, %55 ], [ %.075, %54 ], [ %.075, %42 ], [ %.075, %32 ], [ %.075, %27 ], [ %.075, %24 ]
  %.073.be = phi i32 [ %.073, %23 ], [ %.073, %474 ], [ %.073, %464 ], [ %.073, %463 ], [ %.073, %462 ], [ %.073, %461 ], [ %.073, %460 ], [ %.073, %453 ], [ %.neg, %452 ], [ %.073, %451 ], [ %.073, %442 ], [ %.073, %441 ], [ %.073, %440 ], [ %.073, %437 ], [ %.073, %429 ], [ %.073, %427 ], [ %.073, %426 ], [ %.073, %416 ], [ %.073, %406 ], [ %.073, %404 ], [ %.073, %403 ], [ %.073, %384 ], [ %.073, %374 ], [ %.073, %373 ], [ %.073, %369 ], [ %.073, %367 ], [ %.073, %355 ], [ %.073, %345 ], [ %.073, %334 ], [ %.073, %333 ], [ %.073, %330 ], [ %.073, %327 ], [ %.073, %326 ], [ %.073, %316 ], [ %.073, %306 ], [ %.073, %303 ], [ %.073, %296 ], [ %.073, %293 ], [ %.073, %292 ], [ %.073, %282 ], [ %.073, %272 ], [ %.073, %270 ], [ %.073, %259 ], [ %.073, %249 ], [ %.073, %248 ], [ %.073, %232 ], [ %.073, %222 ], [ %.073, %221 ], [ %211, %210 ], [ %.073, %200 ], [ %.073, %199 ], [ %.073, %198 ], [ %.073, %188 ], [ %.073, %187 ], [ %.073, %183 ], [ %.073, %181 ], [ %.073, %169 ], [ %.073, %159 ], [ %.073, %157 ], [ %.073, %138 ], [ %.073, %128 ], [ %.073, %127 ], [ %.073, %125 ], [ %.073, %113 ], [ %.073, %103 ], [ %.073, %100 ], [ %.073, %99 ], [ %.073, %96 ], [ %.073, %89 ], [ %.073, %87 ], [ %.073, %76 ], [ %.073, %66 ], [ %.073, %65 ], [ %.073, %62 ], [ 0, %55 ], [ %.073, %54 ], [ %.073, %42 ], [ %.073, %32 ], [ %.073, %27 ], [ %.073, %24 ]
  %.071.be = phi i32 [ %.071, %23 ], [ %.071, %474 ], [ %.071, %464 ], [ %.071, %463 ], [ %.071, %462 ], [ %.071, %461 ], [ %.071, %460 ], [ %.071, %453 ], [ %.071, %452 ], [ %.071, %451 ], [ %.071, %442 ], [ %.071, %441 ], [ %.071, %440 ], [ %.071, %437 ], [ %.071, %429 ], [ %.071, %427 ], [ %.071, %426 ], [ %.071, %416 ], [ %.071, %406 ], [ %.071, %404 ], [ %.071, %403 ], [ %.071, %384 ], [ %.071, %374 ], [ %.071, %373 ], [ %.071, %369 ], [ %.071, %367 ], [ %.071, %355 ], [ %.071, %345 ], [ %.071, %334 ], [ %.071, %333 ], [ %.071, %330 ], [ %.071, %327 ], [ %.071, %326 ], [ %.071, %316 ], [ %.071, %306 ], [ %.071, %303 ], [ %.071, %296 ], [ %.071, %293 ], [ %.071, %292 ], [ %.071, %282 ], [ %.071, %272 ], [ %.071, %270 ], [ %.071, %259 ], [ %.071, %249 ], [ %.071, %248 ], [ %.071, %232 ], [ %.071, %222 ], [ %.071, %221 ], [ %.071, %210 ], [ %.071, %200 ], [ %.071, %199 ], [ %.neg78, %198 ], [ %.071, %188 ], [ %.071, %187 ], [ %.071, %183 ], [ %.071, %181 ], [ %.071, %169 ], [ %.071, %159 ], [ %.071, %157 ], [ %.071, %138 ], [ %.071, %128 ], [ %.071, %127 ], [ %.071, %125 ], [ %.071, %113 ], [ %.071, %103 ], [ %.071, %100 ], [ %.071, %99 ], [ %.071, %96 ], [ %.071, %89 ], [ %.071, %87 ], [ %.071, %76 ], [ %.071, %66 ], [ 0, %65 ], [ %.071, %62 ], [ %.071, %55 ], [ %.071, %54 ], [ %.071, %42 ], [ %.071, %32 ], [ %.071, %27 ], [ %.071, %24 ]
  %.069.be = phi i64 [ %.069, %23 ], [ %.069, %474 ], [ %.069, %464 ], [ %.069, %463 ], [ %.069, %462 ], [ %.069, %461 ], [ %.069, %460 ], [ %.069, %453 ], [ %.069, %452 ], [ %.069, %451 ], [ %.069, %442 ], [ %.069, %441 ], [ %.069, %440 ], [ %.069, %437 ], [ %.069, %429 ], [ %.069, %427 ], [ %.069, %426 ], [ %.069, %416 ], [ %.069, %406 ], [ %.069, %404 ], [ %.069, %403 ], [ %.069, %384 ], [ %.069, %374 ], [ %.069, %373 ], [ %.069, %369 ], [ %.069, %367 ], [ %.069, %355 ], [ %.069, %345 ], [ %.069, %334 ], [ %.069, %333 ], [ %.069, %330 ], [ %.069, %327 ], [ %.069, %326 ], [ %.069, %316 ], [ %.069, %306 ], [ %.069, %303 ], [ %.069, %296 ], [ %.069, %293 ], [ %.069, %292 ], [ %.069, %282 ], [ %.069, %272 ], [ %.069, %270 ], [ %.069, %259 ], [ %.069, %249 ], [ %.069, %248 ], [ %.069, %232 ], [ %.069, %222 ], [ %.069, %221 ], [ %.069, %210 ], [ %.069, %200 ], [ %.069, %199 ], [ %.069, %198 ], [ %.069, %188 ], [ %.069, %187 ], [ %.069, %183 ], [ %.069, %181 ], [ %.069, %169 ], [ %.069, %159 ], [ %.069, %157 ], [ %.069, %138 ], [ %.069, %128 ], [ %.069, %127 ], [ %.069, %125 ], [ %.069, %113 ], [ %.069, %103 ], [ %.069, %100 ], [ %.069, %99 ], [ %.069, %96 ], [ %91, %89 ], [ %.069, %87 ], [ %.069, %76 ], [ %.069, %66 ], [ %.069, %65 ], [ %.069, %62 ], [ %.069, %55 ], [ %.069, %54 ], [ %.069, %42 ], [ %.069, %32 ], [ %.069, %27 ], [ %.069, %24 ]
  %.067.be = phi i64 [ %.067, %23 ], [ %.067, %474 ], [ %.067, %464 ], [ %.067, %463 ], [ %.067, %462 ], [ %.067, %461 ], [ %.067, %460 ], [ %.067, %453 ], [ %.067, %452 ], [ %.067, %451 ], [ %.067, %442 ], [ %.067, %441 ], [ %.067, %440 ], [ %.067, %437 ], [ %.067, %429 ], [ %.067, %427 ], [ %.067, %426 ], [ %.067, %416 ], [ %.067, %406 ], [ %.067, %404 ], [ %.067, %403 ], [ %.067, %384 ], [ %.067, %374 ], [ %.067, %373 ], [ %.067, %369 ], [ %.067, %367 ], [ %.067, %355 ], [ %.067, %345 ], [ %.067, %334 ], [ %.067, %333 ], [ %.067, %330 ], [ %.067, %327 ], [ %.067, %326 ], [ %.067, %316 ], [ %.067, %306 ], [ %.067, %303 ], [ %.067, %296 ], [ %.067, %293 ], [ %.067, %292 ], [ %.067, %282 ], [ %.067, %272 ], [ %.067, %270 ], [ %.067, %259 ], [ %.067, %249 ], [ %.067, %248 ], [ %.067, %232 ], [ %.067, %222 ], [ %.067, %221 ], [ %.067, %210 ], [ %.067, %200 ], [ %.067, %199 ], [ %.067, %198 ], [ %.067, %188 ], [ %.067, %187 ], [ %.067, %183 ], [ %.067, %181 ], [ %.067, %169 ], [ %.067, %159 ], [ %.067, %157 ], [ %.067, %138 ], [ %.067, %128 ], [ %.067, %127 ], [ %.067, %125 ], [ %.067, %113 ], [ %.067, %103 ], [ %.067, %100 ], [ %.067, %99 ], [ %.067, %96 ], [ %93, %89 ], [ %.067, %87 ], [ %.067, %76 ], [ %.067, %66 ], [ %.067, %65 ], [ %.067, %62 ], [ %.067, %55 ], [ %.067, %54 ], [ %.067, %42 ], [ %.067, %32 ], [ %.067, %27 ], [ %.067, %24 ]
  %.065.be = phi i64 [ %.065, %23 ], [ %.065, %474 ], [ %.065, %464 ], [ %.065, %463 ], [ %.065, %462 ], [ %.065, %461 ], [ %.065, %460 ], [ %.065, %453 ], [ %.065, %452 ], [ %.065, %451 ], [ %.065, %442 ], [ %.065, %441 ], [ %.065, %440 ], [ %.065, %437 ], [ %.065, %429 ], [ %.065, %427 ], [ %.065, %426 ], [ %.065, %416 ], [ %.065, %406 ], [ %.065, %404 ], [ %.065, %403 ], [ %.065, %384 ], [ %.065, %374 ], [ %.065, %373 ], [ %.065, %369 ], [ %.065, %367 ], [ %.065, %355 ], [ %.065, %345 ], [ %.065, %334 ], [ %.065, %333 ], [ %.065, %330 ], [ %.065, %327 ], [ %.065, %326 ], [ %.065, %316 ], [ %.065, %306 ], [ %.065, %303 ], [ %.065, %296 ], [ %.065, %293 ], [ %.065, %292 ], [ %.065, %282 ], [ %.065, %272 ], [ %.065, %270 ], [ %.065, %259 ], [ %.065, %249 ], [ %.065, %248 ], [ %.065, %232 ], [ %.065, %222 ], [ %.065, %221 ], [ %.065, %210 ], [ %.065, %200 ], [ %.065, %199 ], [ %.065, %198 ], [ %.065, %188 ], [ %.065, %187 ], [ %.065, %183 ], [ %.065, %181 ], [ %.065, %169 ], [ %.065, %159 ], [ %.065, %157 ], [ %.065, %138 ], [ %.065, %128 ], [ %.065, %127 ], [ %.065, %125 ], [ %.065, %113 ], [ %.065, %103 ], [ %.065, %100 ], [ %.065, %99 ], [ %.065, %96 ], [ %.065, %89 ], [ %.065, %87 ], [ %.065, %76 ], [ %.065, %66 ], [ %.065, %65 ], [ %.065, %62 ], [ %58, %55 ], [ %.065, %54 ], [ %.065, %42 ], [ %.065, %32 ], [ %.065, %27 ], [ %.065, %24 ]
  %.061.be = phi i64 [ %.061, %23 ], [ %.061, %474 ], [ %.061, %464 ], [ %.061, %463 ], [ %.061, %462 ], [ %.061, %461 ], [ %.061, %460 ], [ %456, %453 ], [ %.061, %452 ], [ %.061, %451 ], [ %.061, %442 ], [ %.061, %441 ], [ %.061, %440 ], [ %.061, %437 ], [ %.061, %429 ], [ %.061, %427 ], [ %.061, %426 ], [ %.061, %416 ], [ %.061, %406 ], [ %.061, %404 ], [ %.061, %403 ], [ %.061, %384 ], [ %.061, %374 ], [ %.061, %373 ], [ %.061, %369 ], [ %.061, %367 ], [ %.061, %355 ], [ %.061, %345 ], [ %.061, %334 ], [ %.061, %333 ], [ %.061, %330 ], [ %.061, %327 ], [ %.061, %326 ], [ %.061, %316 ], [ %.061, %306 ], [ %.061, %303 ], [ %.061, %296 ], [ %.061, %293 ], [ %.061, %292 ], [ %.061, %282 ], [ %.061, %272 ], [ %.061, %270 ], [ %.061, %259 ], [ %.061, %249 ], [ %.061, %248 ], [ %235, %232 ], [ %.061, %222 ], [ %.061, %221 ], [ %.061, %210 ], [ %.061, %200 ], [ %.061, %199 ], [ %.061, %198 ], [ %.061, %188 ], [ %.061, %187 ], [ %.061, %183 ], [ %.061, %181 ], [ %.061, %169 ], [ %.061, %159 ], [ %.061, %157 ], [ %.061, %138 ], [ %.061, %128 ], [ %.061, %127 ], [ %.061, %125 ], [ %.061, %113 ], [ %.061, %103 ], [ %.061, %100 ], [ %.061, %99 ], [ %.061, %96 ], [ %.061, %89 ], [ %.061, %87 ], [ %.061, %76 ], [ %.061, %66 ], [ %.061, %65 ], [ %.061, %62 ], [ %.061, %55 ], [ %.061, %54 ], [ %.061, %42 ], [ %.061, %32 ], [ %.061, %27 ], [ %.061, %24 ]
  %.059.be = phi i64 [ %.059, %23 ], [ %.059, %474 ], [ %.059, %464 ], [ %.059, %463 ], [ %.059, %462 ], [ %.059, %461 ], [ %.059, %460 ], [ %459, %453 ], [ %.059, %452 ], [ %.059, %451 ], [ %.059, %442 ], [ %.059, %441 ], [ %.059, %440 ], [ %.059, %437 ], [ %.059, %429 ], [ %.059, %427 ], [ %.059, %426 ], [ %.059, %416 ], [ %.059, %406 ], [ %.059, %404 ], [ %.059, %403 ], [ %.059, %384 ], [ %.059, %374 ], [ %.059, %373 ], [ %.059, %369 ], [ %.059, %367 ], [ %.059, %355 ], [ %.059, %345 ], [ %.059, %334 ], [ %.059, %333 ], [ %.059, %330 ], [ %.059, %327 ], [ %.059, %326 ], [ %.059, %316 ], [ %.059, %306 ], [ %.059, %303 ], [ %.059, %296 ], [ %.059, %293 ], [ %.059, %292 ], [ %.059, %282 ], [ %.059, %272 ], [ %.059, %270 ], [ %.059, %259 ], [ %.059, %249 ], [ %.059, %248 ], [ %238, %232 ], [ %.059, %222 ], [ %.059, %221 ], [ %.059, %210 ], [ %.059, %200 ], [ %.059, %199 ], [ %.059, %198 ], [ %.059, %188 ], [ %.059, %187 ], [ %.059, %183 ], [ %.059, %181 ], [ %.059, %169 ], [ %.059, %159 ], [ %.059, %157 ], [ %.059, %138 ], [ %.059, %128 ], [ %.059, %127 ], [ %.059, %125 ], [ %.059, %113 ], [ %.059, %103 ], [ %.059, %100 ], [ %.059, %99 ], [ %.059, %96 ], [ %.059, %89 ], [ %.059, %87 ], [ %.059, %76 ], [ %.059, %66 ], [ %.059, %65 ], [ %.059, %62 ], [ %.059, %55 ], [ %.059, %54 ], [ %.059, %42 ], [ %.059, %32 ], [ %.059, %27 ], [ %.059, %24 ]
  %.057.be = phi i32 [ %.057, %23 ], [ %.057, %474 ], [ %.057, %464 ], [ %.057, %463 ], [ %.057, %462 ], [ %.057, %461 ], [ %.057, %460 ], [ 0, %453 ], [ %.057, %452 ], [ %.057, %451 ], [ %.057, %442 ], [ %.057, %441 ], [ %.057, %440 ], [ %.057, %437 ], [ %.057, %429 ], [ %428, %427 ], [ %.057, %426 ], [ %.057, %416 ], [ %.057, %406 ], [ %.057, %404 ], [ %.057, %403 ], [ %.057, %384 ], [ %.057, %374 ], [ %.057, %373 ], [ %.057, %369 ], [ %.057, %367 ], [ %.057, %355 ], [ %.057, %345 ], [ %.057, %334 ], [ %.057, %333 ], [ %.057, %330 ], [ %.057, %327 ], [ %.057, %326 ], [ %.057, %316 ], [ %.057, %306 ], [ %.057, %303 ], [ %.057, %296 ], [ %.057, %293 ], [ %.057, %292 ], [ %.057, %282 ], [ %.057, %272 ], [ %.057, %270 ], [ %.057, %259 ], [ %.057, %249 ], [ %.057, %248 ], [ 0, %232 ], [ %.057, %222 ], [ %.057, %221 ], [ %.057, %210 ], [ %.057, %200 ], [ %.057, %199 ], [ %.057, %198 ], [ %.057, %188 ], [ %.057, %187 ], [ %.057, %183 ], [ %.057, %181 ], [ %.057, %169 ], [ %.057, %159 ], [ %.057, %157 ], [ %.057, %138 ], [ %.057, %128 ], [ %.057, %127 ], [ %.057, %125 ], [ %.057, %113 ], [ %.057, %103 ], [ %.057, %100 ], [ %.057, %99 ], [ %.057, %96 ], [ %.057, %89 ], [ %.057, %87 ], [ %.057, %76 ], [ %.057, %66 ], [ %.057, %65 ], [ %.057, %62 ], [ %.057, %55 ], [ %.057, %54 ], [ %.057, %42 ], [ %.057, %32 ], [ %.057, %27 ], [ %.057, %24 ]
  %.055.be = phi i32 [ %.055, %23 ], [ %.055, %474 ], [ %.055, %464 ], [ %.055, %463 ], [ %.055, %462 ], [ 0, %461 ], [ %.055, %460 ], [ %.055, %453 ], [ %.055, %452 ], [ %.055, %451 ], [ %.055, %442 ], [ %.055, %441 ], [ %.055, %440 ], [ %.055, %437 ], [ %.055, %429 ], [ %.055, %427 ], [ %.055, %426 ], [ %.055, %416 ], [ %.055, %406 ], [ %405, %404 ], [ %.055, %403 ], [ %.055, %384 ], [ %.055, %374 ], [ %.055, %373 ], [ %.055, %369 ], [ %.055, %367 ], [ %.055, %355 ], [ %.055, %345 ], [ %.055, %334 ], [ %.055, %333 ], [ %.055, %330 ], [ %.055, %327 ], [ %.055, %326 ], [ %.055, %316 ], [ %.055, %306 ], [ %.055, %303 ], [ %.055, %296 ], [ %.055, %293 ], [ %.055, %292 ], [ 0, %282 ], [ %.055, %272 ], [ %.055, %270 ], [ %.055, %259 ], [ %.055, %249 ], [ %.055, %248 ], [ %.055, %232 ], [ %.055, %222 ], [ %.055, %221 ], [ %.055, %210 ], [ %.055, %200 ], [ %.055, %199 ], [ %.055, %198 ], [ %.055, %188 ], [ %.055, %187 ], [ %.055, %183 ], [ %.055, %181 ], [ %.055, %169 ], [ %.055, %159 ], [ %.055, %157 ], [ %.055, %138 ], [ %.055, %128 ], [ %.055, %127 ], [ %.055, %125 ], [ %.055, %113 ], [ %.055, %103 ], [ %.055, %100 ], [ %.055, %99 ], [ %.055, %96 ], [ %.055, %89 ], [ %.055, %87 ], [ %.055, %76 ], [ %.055, %66 ], [ %.055, %65 ], [ %.055, %62 ], [ %.055, %55 ], [ %.055, %54 ], [ %.055, %42 ], [ %.055, %32 ], [ %.055, %27 ], [ %.055, %24 ]
  %.053.be = phi i64 [ %.053, %23 ], [ %.053, %474 ], [ %.053, %464 ], [ %.053, %463 ], [ %.053, %462 ], [ %.053, %461 ], [ %.053, %460 ], [ %.053, %453 ], [ %.053, %452 ], [ %.053, %451 ], [ %.053, %442 ], [ %.053, %441 ], [ %.053, %440 ], [ %.053, %437 ], [ %.053, %429 ], [ %.053, %427 ], [ %.053, %426 ], [ %.053, %416 ], [ %.053, %406 ], [ %.053, %404 ], [ %.053, %403 ], [ %.053, %384 ], [ %.053, %374 ], [ %.053, %373 ], [ %.053, %369 ], [ %.053, %367 ], [ %.053, %355 ], [ %.053, %345 ], [ %.053, %334 ], [ %.053, %333 ], [ %.053, %330 ], [ %.053, %327 ], [ %.053, %326 ], [ %.053, %316 ], [ %.053, %306 ], [ %.053, %303 ], [ %298, %296 ], [ %.053, %293 ], [ %.053, %292 ], [ %.053, %282 ], [ %.053, %272 ], [ %.053, %270 ], [ %.053, %259 ], [ %.053, %249 ], [ %.053, %248 ], [ %.053, %232 ], [ %.053, %222 ], [ %.053, %221 ], [ %.053, %210 ], [ %.053, %200 ], [ %.053, %199 ], [ %.053, %198 ], [ %.053, %188 ], [ %.053, %187 ], [ %.053, %183 ], [ %.053, %181 ], [ %.053, %169 ], [ %.053, %159 ], [ %.053, %157 ], [ %.053, %138 ], [ %.053, %128 ], [ %.053, %127 ], [ %.053, %125 ], [ %.053, %113 ], [ %.053, %103 ], [ %.053, %100 ], [ %.053, %99 ], [ %.053, %96 ], [ %.053, %89 ], [ %.053, %87 ], [ %.053, %76 ], [ %.053, %66 ], [ %.053, %65 ], [ %.053, %62 ], [ %.053, %55 ], [ %.053, %54 ], [ %.053, %42 ], [ %.053, %32 ], [ %.053, %27 ], [ %.053, %24 ]
  %.051.be = phi i64 [ %.051, %23 ], [ %.051, %474 ], [ %.051, %464 ], [ %.051, %463 ], [ %.051, %462 ], [ %.051, %461 ], [ %.051, %460 ], [ %.051, %453 ], [ %.051, %452 ], [ %.051, %451 ], [ %.051, %442 ], [ %.051, %441 ], [ %.051, %440 ], [ %.051, %437 ], [ %.051, %429 ], [ %.051, %427 ], [ %.051, %426 ], [ %.051, %416 ], [ %.051, %406 ], [ %.051, %404 ], [ %.051, %403 ], [ %.051, %384 ], [ %.051, %374 ], [ %.051, %373 ], [ %.051, %369 ], [ %.051, %367 ], [ %.051, %355 ], [ %.051, %345 ], [ %.051, %334 ], [ %.051, %333 ], [ %.051, %330 ], [ %.051, %327 ], [ %.051, %326 ], [ %.051, %316 ], [ %.051, %306 ], [ %.051, %303 ], [ %300, %296 ], [ %.051, %293 ], [ %.051, %292 ], [ %.051, %282 ], [ %.051, %272 ], [ %.051, %270 ], [ %.051, %259 ], [ %.051, %249 ], [ %.051, %248 ], [ %.051, %232 ], [ %.051, %222 ], [ %.051, %221 ], [ %.051, %210 ], [ %.051, %200 ], [ %.051, %199 ], [ %.051, %198 ], [ %.051, %188 ], [ %.051, %187 ], [ %.051, %183 ], [ %.051, %181 ], [ %.051, %169 ], [ %.051, %159 ], [ %.051, %157 ], [ %.051, %138 ], [ %.051, %128 ], [ %.051, %127 ], [ %.051, %125 ], [ %.051, %113 ], [ %.051, %103 ], [ %.051, %100 ], [ %.051, %99 ], [ %.051, %96 ], [ %.051, %89 ], [ %.051, %87 ], [ %.051, %76 ], [ %.051, %66 ], [ %.051, %65 ], [ %.051, %62 ], [ %.051, %55 ], [ %.051, %54 ], [ %.051, %42 ], [ %.051, %32 ], [ %.051, %27 ], [ %.051, %24 ]
  %.0.be = phi i32 [ %.0, %23 ], [ -1550617825, %474 ], [ 634744527, %464 ], [ 427227536, %463 ], [ -176873973, %462 ], [ -1963825678, %461 ], [ -1139822901, %460 ], [ -914850181, %453 ], [ 1904915359, %452 ], [ -1878047896, %451 ], [ -405480996, %442 ], [ 1116397366, %441 ], [ -936664739, %440 ], [ -252241805, %437 ], [ 997852814, %429 ], [ -17003931, %427 ], [ -1762878063, %426 ], [ %425, %416 ], [ %415, %406 ], [ 2129390445, %404 ], [ -1045603665, %403 ], [ %402, %384 ], [ %383, %374 ], [ -1045603665, %373 ], [ %372, %369 ], [ %368, %367 ], [ %366, %355 ], [ %354, %345 ], [ %344, %334 ], [ -1045603665, %333 ], [ %332, %330 ], [ %329, %327 ], [ -1045603665, %326 ], [ %325, %316 ], [ %315, %306 ], [ %305, %303 ], [ %302, %296 ], [ %295, %293 ], [ 2129390445, %292 ], [ %291, %282 ], [ %281, %272 ], [ %271, %270 ], [ %269, %259 ], [ %258, %249 ], [ -17003931, %248 ], [ %247, %232 ], [ %231, %222 ], [ 220699288, %221 ], [ %220, %210 ], [ %209, %200 ], [ 754380021, %199 ], [ -1168146789, %198 ], [ 874661146, %188 ], [ 874661146, %187 ], [ %186, %183 ], [ %182, %181 ], [ %180, %169 ], [ %168, %159 ], [ %158, %157 ], [ %156, %138 ], [ %137, %128 ], [ 874661146, %127 ], [ %126, %125 ], [ %124, %113 ], [ %112, %103 ], [ %102, %100 ], [ 874661146, %99 ], [ %98, %96 ], [ %95, %89 ], [ %88, %87 ], [ %86, %76 ], [ %75, %66 ], [ -1168146789, %65 ], [ %64, %62 ], [ 220699288, %55 ], [ 997852814, %54 ], [ %53, %42 ], [ %41, %32 ], [ %31, %27 ], [ %26, %24 ]
  br label %23

24:                                               ; preds = %23
  %.0..0..0. = load volatile i64, i64* %7, align 8
  %25 = icmp eq i64 %.0..0..0., 0
  %26 = select i1 %25, i32 91982432, i32 2009667385
  br label %.backedge

27:                                               ; preds = %23
  %28 = load i64, i64* %9, align 8
  %29 = srem i64 %28, 3
  %30 = icmp eq i64 %29, 0
  %31 = select i1 %30, i32 91982432, i32 -1522897625
  br label %.backedge

32:                                               ; preds = %23
  %33 = load i32, i32* @x.1, align 4
  %34 = load i32, i32* @y.2, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 -252241805, i32 1045847962
  br label %.backedge

42:                                               ; preds = %23
  %43 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 0)
  %44 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %43, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %45 = load i32, i32* @x.1, align 4
  %46 = load i32, i32* @y.2, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 -1613494712, i32 1045847962
  br label %.backedge

54:                                               ; preds = %23
  br label %.backedge

55:                                               ; preds = %23
  store i64 9223372036854775807, i64* %10, align 8
  %56 = load i64, i64* %9, align 8
  %57 = sdiv i64 %56, 3
  %58 = add nsw i64 %57, -10
  %59 = load i64, i64* %8, align 8
  %60 = sdiv i64 %59, 2
  %61 = add nsw i64 %60, -10
  br label %.backedge

62:                                               ; preds = %23
  %63 = icmp slt i32 %.073, 20
  %64 = select i1 %63, i32 1754548141, i32 2025818170
  br label %.backedge

65:                                               ; preds = %23
  br label %.backedge

66:                                               ; preds = %23
  %67 = load i32, i32* @x.1, align 4
  %68 = load i32, i32* @y.2, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 -936664739, i32 -242517790
  br label %.backedge

76:                                               ; preds = %23
  %77 = icmp slt i32 %.071, 20
  store i1 %77, i1* %6, align 1
  %78 = load i32, i32* @x.1, align 4
  %79 = load i32, i32* @y.2, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 1683556534, i32 -242517790
  br label %.backedge

87:                                               ; preds = %23
  %.0..0..0.45 = load volatile i1, i1* %6, align 1
  %88 = select i1 %.0..0..0.45, i32 1346815797, i32 -1851535801
  br label %.backedge

89:                                               ; preds = %23
  %90 = sext i32 %.073 to i64
  %91 = add i64 %.065, %90
  %92 = sext i32 %.071 to i64
  %93 = add i64 %.075, %92
  %94 = icmp slt i64 %91, 1
  %95 = select i1 %94, i32 -1784232558, i32 1378369322
  br label %.backedge

96:                                               ; preds = %23
  %97 = icmp slt i64 %.067, 1
  %98 = select i1 %97, i32 -1784232558, i32 -2077941362
  br label %.backedge

99:                                               ; preds = %23
  br label %.backedge

100:                                              ; preds = %23
  %101 = load i64, i64* %9, align 8
  %.not79 = icmp slt i64 %.069, %101
  %102 = select i1 %.not79, i32 890558823, i32 -399449230
  br label %.backedge

103:                                              ; preds = %23
  %104 = load i32, i32* @x.1, align 4
  %105 = load i32, i32* @y.2, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 1116397366, i32 -1391457590
  br label %.backedge

113:                                              ; preds = %23
  %114 = load i64, i64* %8, align 8
  %115 = icmp sge i64 %.067, %114
  store i1 %115, i1* %5, align 1
  %116 = load i32, i32* @x.1, align 4
  %117 = load i32, i32* @y.2, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 -2089883088, i32 -1391457590
  br label %.backedge

125:                                              ; preds = %23
  %.0..0..0.46 = load volatile i1, i1* %5, align 1
  %126 = select i1 %.0..0..0.46, i32 -399449230, i32 -2086907130
  br label %.backedge

127:                                              ; preds = %23
  br label %.backedge

128:                                              ; preds = %23
  %129 = load i32, i32* @x.1, align 4
  %130 = load i32, i32* @y.2, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 -405480996, i32 285553236
  br label %.backedge

138:                                              ; preds = %23
  %139 = load i64, i64* %8, align 8
  %140 = mul nsw i64 %139, %.069
  store i64 %140, i64* %11, align 8
  %141 = load i64, i64* %9, align 8
  %142 = sub i64 %141, %.069
  %143 = mul nsw i64 %142, %.067
  store i64 %143, i64* %12, align 8
  %144 = mul nsw i64 %141, %139
  %145 = add i64 %140, %143
  %146 = sub i64 %144, %145
  store i64 %146, i64* %13, align 8
  %147 = icmp slt i64 %140, 1
  store i1 %147, i1* %4, align 1
  %148 = load i32, i32* @x.1, align 4
  %149 = load i32, i32* @y.2, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 987296287, i32 285553236
  br label %.backedge

157:                                              ; preds = %23
  %.0..0..0.47 = load volatile i1, i1* %4, align 1
  %158 = select i1 %.0..0..0.47, i32 -887181226, i32 -1800214937
  br label %.backedge

159:                                              ; preds = %23
  %160 = load i32, i32* @x.1, align 4
  %161 = load i32, i32* @y.2, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -1878047896, i32 -1588331424
  br label %.backedge

169:                                              ; preds = %23
  %170 = load i64, i64* %12, align 8
  %171 = icmp slt i64 %170, 1
  store i1 %171, i1* %3, align 1
  %172 = load i32, i32* @x.1, align 4
  %173 = load i32, i32* @y.2, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 950739600, i32 -1588331424
  br label %.backedge

181:                                              ; preds = %23
  %.0..0..0.48 = load volatile i1, i1* %3, align 1
  %182 = select i1 %.0..0..0.48, i32 -887181226, i32 -767606475
  br label %.backedge

183:                                              ; preds = %23
  %184 = load i64, i64* %13, align 8
  %185 = icmp slt i64 %184, 1
  %186 = select i1 %185, i32 -887181226, i32 -1226290979
  br label %.backedge

187:                                              ; preds = %23
  br label %.backedge

188:                                              ; preds = %23
  %189 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %12, i64* nonnull dereferenceable(8) %13)
  %190 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %11, i64* nonnull dereferenceable(8) %189)
  %191 = load i64, i64* %190, align 8
  %192 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %12, i64* nonnull dereferenceable(8) %13)
  %193 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %11, i64* nonnull dereferenceable(8) %192)
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %191, %194
  store i64 %195, i64* %14, align 8
  %196 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %10, i64* nonnull dereferenceable(8) %14)
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %10, align 8
  br label %.backedge

198:                                              ; preds = %23
  %.neg78 = add i32 %.071, 1
  br label %.backedge

199:                                              ; preds = %23
  br label %.backedge

200:                                              ; preds = %23
  %201 = load i32, i32* @x.1, align 4
  %202 = load i32, i32* @y.2, align 4
  %203 = add i32 %201, -1
  %204 = mul i32 %203, %201
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %207, %206
  %209 = select i1 %208, i32 1904915359, i32 557891729
  br label %.backedge

210:                                              ; preds = %23
  %211 = add i32 %.073, 1
  %212 = load i32, i32* @x.1, align 4
  %213 = load i32, i32* @y.2, align 4
  %214 = add i32 %212, -1
  %215 = mul i32 %214, %212
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %218, %217
  %220 = select i1 %219, i32 1889905462, i32 557891729
  br label %.backedge

221:                                              ; preds = %23
  br label %.backedge

222:                                              ; preds = %23
  %223 = load i32, i32* @x.1, align 4
  %224 = load i32, i32* @y.2, align 4
  %225 = add i32 %223, -1
  %226 = mul i32 %225, %223
  %227 = and i32 %226, 1
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %229, %228
  %231 = select i1 %230, i32 -914850181, i32 -1089165905
  br label %.backedge

232:                                              ; preds = %23
  %233 = load i64, i64* %8, align 8
  %234 = sdiv i64 %233, 3
  %235 = add nsw i64 %234, -10
  %236 = load i64, i64* %9, align 8
  %237 = sdiv i64 %236, 2
  %238 = add nsw i64 %237, -10
  %239 = load i32, i32* @x.1, align 4
  %240 = load i32, i32* @y.2, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 -1508049977, i32 -1089165905
  br label %.backedge

248:                                              ; preds = %23
  br label %.backedge

249:                                              ; preds = %23
  %250 = load i32, i32* @x.1, align 4
  %251 = load i32, i32* @y.2, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 -1139822901, i32 -1246776571
  br label %.backedge

259:                                              ; preds = %23
  %260 = icmp slt i32 %.057, 20
  store i1 %260, i1* %2, align 1
  %261 = load i32, i32* @x.1, align 4
  %262 = load i32, i32* @y.2, align 4
  %263 = add i32 %261, -1
  %264 = mul i32 %263, %261
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %267, %266
  %269 = select i1 %268, i32 2035066432, i32 -1246776571
  br label %.backedge

270:                                              ; preds = %23
  %.0..0..0.49 = load volatile i1, i1* %2, align 1
  %271 = select i1 %.0..0..0.49, i32 -1315917691, i32 349575702
  br label %.backedge

272:                                              ; preds = %23
  %273 = load i32, i32* @x.1, align 4
  %274 = load i32, i32* @y.2, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 -1963825678, i32 1031396863
  br label %.backedge

282:                                              ; preds = %23
  %283 = load i32, i32* @x.1, align 4
  %284 = load i32, i32* @y.2, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 954043655, i32 1031396863
  br label %.backedge

292:                                              ; preds = %23
  br label %.backedge

293:                                              ; preds = %23
  %294 = icmp slt i32 %.055, 20
  %295 = select i1 %294, i32 1457071208, i32 -1876681153
  br label %.backedge

296:                                              ; preds = %23
  %297 = sext i32 %.057 to i64
  %298 = add i64 %.061, %297
  %299 = sext i32 %.055 to i64
  %300 = add i64 %.059, %299
  %301 = icmp slt i64 %298, 1
  %302 = select i1 %301, i32 259929798, i32 -1489693569
  br label %.backedge

303:                                              ; preds = %23
  %304 = icmp slt i64 %.051, 1
  %305 = select i1 %304, i32 259929798, i32 148947885
  br label %.backedge

306:                                              ; preds = %23
  %307 = load i32, i32* @x.1, align 4
  %308 = load i32, i32* @y.2, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -176873973, i32 -1701173841
  br label %.backedge

316:                                              ; preds = %23
  %317 = load i32, i32* @x.1, align 4
  %318 = load i32, i32* @y.2, align 4
  %319 = add i32 %317, -1
  %320 = mul i32 %319, %317
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %323, %322
  %325 = select i1 %324, i32 -500343771, i32 -1701173841
  br label %.backedge

326:                                              ; preds = %23
  br label %.backedge

327:                                              ; preds = %23
  %328 = load i64, i64* %8, align 8
  %.not77 = icmp slt i64 %.053, %328
  %329 = select i1 %.not77, i32 -15404416, i32 544680238
  br label %.backedge

330:                                              ; preds = %23
  %331 = load i64, i64* %9, align 8
  %.not = icmp slt i64 %.051, %331
  %332 = select i1 %.not, i32 -1812942250, i32 544680238
  br label %.backedge

333:                                              ; preds = %23
  br label %.backedge

334:                                              ; preds = %23
  %335 = load i64, i64* %9, align 8
  %336 = mul nsw i64 %335, %.053
  store i64 %336, i64* %15, align 8
  %337 = load i64, i64* %8, align 8
  %338 = sub i64 %337, %.053
  %339 = mul nsw i64 %338, %.051
  store i64 %339, i64* %16, align 8
  %340 = mul nsw i64 %337, %335
  %341 = add i64 %336, %339
  %342 = sub i64 %340, %341
  store i64 %342, i64* %17, align 8
  %343 = icmp slt i64 %336, 1
  %344 = select i1 %343, i32 -2008145359, i32 -932853390
  br label %.backedge

345:                                              ; preds = %23
  %346 = load i32, i32* @x.1, align 4
  %347 = load i32, i32* @y.2, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 427227536, i32 -1924471122
  br label %.backedge

355:                                              ; preds = %23
  %356 = load i64, i64* %16, align 8
  %357 = icmp slt i64 %356, 1
  store i1 %357, i1* %1, align 1
  %358 = load i32, i32* @x.1, align 4
  %359 = load i32, i32* @y.2, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 -931295154, i32 -1924471122
  br label %.backedge

367:                                              ; preds = %23
  %.0..0..0.50 = load volatile i1, i1* %1, align 1
  %368 = select i1 %.0..0..0.50, i32 -2008145359, i32 2070110696
  br label %.backedge

369:                                              ; preds = %23
  %370 = load i64, i64* %17, align 8
  %371 = icmp slt i64 %370, 1
  %372 = select i1 %371, i32 -2008145359, i32 -180490636
  br label %.backedge

373:                                              ; preds = %23
  br label %.backedge

374:                                              ; preds = %23
  %375 = load i32, i32* @x.1, align 4
  %376 = load i32, i32* @y.2, align 4
  %377 = add i32 %375, -1
  %378 = mul i32 %377, %375
  %379 = and i32 %378, 1
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %381, %380
  %383 = select i1 %382, i32 634744527, i32 -312591070
  br label %.backedge

384:                                              ; preds = %23
  %385 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %16, i64* nonnull dereferenceable(8) %17)
  %386 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %15, i64* nonnull dereferenceable(8) %385)
  %387 = load i64, i64* %386, align 8
  %388 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %16, i64* nonnull dereferenceable(8) %17)
  %389 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %15, i64* nonnull dereferenceable(8) %388)
  %390 = load i64, i64* %389, align 8
  %391 = sub i64 %387, %390
  store i64 %391, i64* %18, align 8
  %392 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %10, i64* nonnull dereferenceable(8) %18)
  %393 = load i64, i64* %392, align 8
  store i64 %393, i64* %10, align 8
  %394 = load i32, i32* @x.1, align 4
  %395 = load i32, i32* @y.2, align 4
  %396 = add i32 %394, -1
  %397 = mul i32 %396, %394
  %398 = and i32 %397, 1
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %400, %399
  %402 = select i1 %401, i32 29838193, i32 -312591070
  br label %.backedge

403:                                              ; preds = %23
  br label %.backedge

404:                                              ; preds = %23
  %405 = add i32 %.055, 1
  br label %.backedge

406:                                              ; preds = %23
  %407 = load i32, i32* @x.1, align 4
  %408 = load i32, i32* @y.2, align 4
  %409 = add i32 %407, -1
  %410 = mul i32 %409, %407
  %411 = and i32 %410, 1
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %413, %412
  %415 = select i1 %414, i32 -1550617825, i32 140534434
  br label %.backedge

416:                                              ; preds = %23
  %417 = load i32, i32* @x.1, align 4
  %418 = load i32, i32* @y.2, align 4
  %419 = add i32 %417, -1
  %420 = mul i32 %419, %417
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %423, %422
  %425 = select i1 %424, i32 1429803886, i32 140534434
  br label %.backedge

426:                                              ; preds = %23
  br label %.backedge

427:                                              ; preds = %23
  %428 = add i32 %.057, 1
  br label %.backedge

429:                                              ; preds = %23
  %430 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %10, i64* nonnull dereferenceable(8) %8)
  %431 = load i64, i64* %430, align 8
  store i64 %431, i64* %10, align 8
  %432 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %10, i64* nonnull dereferenceable(8) %9)
  %433 = load i64, i64* %432, align 8
  store i64 %433, i64* %10, align 8
  %434 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %433)
  %435 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %434, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

436:                                              ; preds = %23
  ret i32 0

437:                                              ; preds = %23
  %438 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 0)
  %439 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %438, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

440:                                              ; preds = %23
  br label %.backedge

441:                                              ; preds = %23
  br label %.backedge

442:                                              ; preds = %23
  %443 = load i64, i64* %8, align 8
  %444 = mul nsw i64 %443, %.069
  store i64 %444, i64* %11, align 8
  %445 = load i64, i64* %9, align 8
  %446 = sub i64 %445, %.069
  %447 = mul nsw i64 %446, %.067
  store i64 %447, i64* %12, align 8
  %448 = mul nsw i64 %445, %443
  %449 = add i64 %444, %447
  %450 = sub i64 %448, %449
  store i64 %450, i64* %13, align 8
  br label %.backedge

451:                                              ; preds = %23
  br label %.backedge

452:                                              ; preds = %23
  %.neg = add i32 %.073, 1
  br label %.backedge

453:                                              ; preds = %23
  %454 = load i64, i64* %8, align 8
  %455 = sdiv i64 %454, 3
  %456 = add nsw i64 %455, -10
  %457 = load i64, i64* %9, align 8
  %458 = sdiv i64 %457, 2
  %459 = add nsw i64 %458, -10
  br label %.backedge

460:                                              ; preds = %23
  br label %.backedge

461:                                              ; preds = %23
  br label %.backedge

462:                                              ; preds = %23
  br label %.backedge

463:                                              ; preds = %23
  br label %.backedge

464:                                              ; preds = %23
  %465 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %16, i64* nonnull dereferenceable(8) %17)
  %466 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %15, i64* nonnull dereferenceable(8) %465)
  %467 = load i64, i64* %466, align 8
  %468 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %16, i64* nonnull dereferenceable(8) %17)
  %469 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %15, i64* nonnull dereferenceable(8) %468)
  %470 = load i64, i64* %469, align 8
  %471 = sub i64 %467, %470
  store i64 %471, i64* %18, align 8
  %472 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %10, i64* nonnull dereferenceable(8) %18)
  %473 = load i64, i64* %472, align 8
  store i64 %473, i64* %10, align 8
  br label %.backedge

474:                                              ; preds = %23
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i64**, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.3, align 4
  %11 = load i32, i32* @y.4, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ -1358315992, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1358315992, label %18
    i32 1936625329, label %21
    i32 1064099414, label %39
    i32 -282957929, label %41
    i32 -2069505921, label %43
    i32 -351393328, label %45
    i32 -950437874, label %55
    i32 -1783241715, label %66
    i32 1884813963, label %67
    i32 793558414, label %68
  ]

.backedge:                                        ; preds = %17, %68, %67, %55, %45, %43, %41, %39, %21, %18
  %.0.be = phi i32 [ %.0, %17 ], [ -950437874, %68 ], [ 1936625329, %67 ], [ %65, %55 ], [ %54, %45 ], [ -351393328, %43 ], [ -351393328, %41 ], [ %40, %39 ], [ %38, %21 ], [ %20, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %.0..0..0.1 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0., %.0..0..0.1
  %20 = select i1 %19, i32 1936625329, i32 1884813963
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %7, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %6, align 8
  %24 = alloca i64*, align 8
  store i64** %24, i64*** %5, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %6, align 8
  store i64* %0, i64** %.0..0..0.6, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %5, align 8
  store i64* %1, i64** %.0..0..0.9, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %6, align 8
  %25 = load i64*, i64** %.0..0..0.7, align 8
  %26 = load i64, i64* %25, align 8
  %.0..0..0.10 = load volatile i64**, i64*** %5, align 8
  %27 = load i64*, i64** %.0..0..0.10, align 8
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %26, %28
  store i1 %29, i1* %4, align 1
  %30 = load i32, i32* @x.3, align 4
  %31 = load i32, i32* @y.4, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 1064099414, i32 1884813963
  br label %.backedge

39:                                               ; preds = %17
  %.0..0..0.12 = load volatile i1, i1* %4, align 1
  %40 = select i1 %.0..0..0.12, i32 -282957929, i32 -2069505921
  br label %.backedge

41:                                               ; preds = %17
  %.0..0..0.11 = load volatile i64**, i64*** %5, align 8
  %42 = load i64*, i64** %.0..0..0.11, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %7, align 8
  store i64* %42, i64** %.0..0..0.2, align 8
  br label %.backedge

43:                                               ; preds = %17
  %.0..0..0.8 = load volatile i64**, i64*** %6, align 8
  %44 = load i64*, i64** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %7, align 8
  store i64* %44, i64** %.0..0..0.3, align 8
  br label %.backedge

45:                                               ; preds = %17
  %46 = load i32, i32* @x.3, align 4
  %47 = load i32, i32* @y.4, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -950437874, i32 793558414
  br label %.backedge

55:                                               ; preds = %17
  %.0..0..0.4 = load volatile i64**, i64*** %7, align 8
  %56 = load i64*, i64** %.0..0..0.4, align 8
  store i64* %56, i64** %3, align 8
  %57 = load i32, i32* @x.3, align 4
  %58 = load i32, i32* @y.4, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 -1783241715, i32 793558414
  br label %.backedge

66:                                               ; preds = %17
  %.0..0..0.13 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.13

67:                                               ; preds = %17
  br label %.backedge

68:                                               ; preds = %17
  %.0..0..0.5 = load volatile i64**, i64*** %7, align 8
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.5, align 4
  %8 = load i32, i32* @y.6, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1822885010, i32 -1213046131
  %16 = select i1 %14, i32 -1031103592, i32 -1213046131
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1008983731, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 1008983731, label %18
    i32 -1781266840, label %.outer.backedge
    i32 -99044767, label %.outer10.backedge
    i32 -1031103592, label %21
    i32 1822885010, label %22
    i32 -1888198397, label %23
    i32 -1213046131, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -1781266840, i32 -99044767
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer.backedge

22:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %22, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -1888198397, %22 ], [ %16, %17 ]
  br label %.outer10

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %21
  %.08.ph.be = phi i64* [ %0, %21 ], [ %0, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ %15, %21 ], [ -1031103592, %24 ], [ -1888198397, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s883576040.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
