; ModuleID = 'build_ollvm/programs/p03097/s207977527.ll'
source_filename = "Project_CodeNet_C++1400/p03097/s207977527.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@N = global i32 0, align 4
@change = local_unnamed_addr global [20 x i32] zeroinitializer, align 16
@g = local_unnamed_addr global [150000 x i32] zeroinitializer, align 16
@h = local_unnamed_addr global [150000 x i32] zeroinitializer, align 16
@ans = local_unnamed_addr global [150000 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [3 x i8] c"NO\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s207977527.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @N)
  %7 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %6, i32* nonnull dereferenceable(4) %4)
  %8 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %7, i32* nonnull dereferenceable(4) %5)
  br label %9

9:                                                ; preds = %.backedge, %0
  %.091 = phi i32 [ 0, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ 0, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.0 = phi i32 [ -4496440, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -4496440, label %10
    i32 -1210035314, label %14
    i32 -850846647, label %21
    i32 1276124176, label %27
    i32 -1546604118, label %31
    i32 1078238147, label %32
    i32 -336416085, label %42
    i32 -1143687274, label %53
    i32 1646013710, label %54
    i32 -841027528, label %58
    i32 951647076, label %61
    i32 -851310716, label %71
    i32 26158522, label %81
    i32 -167556935, label %82
    i32 -1073529967, label %92
    i32 -82586329, label %106
    i32 -40582941, label %108
    i32 2060353787, label %109
    i32 -1777864958, label %119
    i32 428630365, label %134
    i32 -1147007510, label %136
    i32 -1608702088, label %146
    i32 -1701553178, label %160
    i32 1938368112, label %161
    i32 -275410420, label %171
    i32 -113474230, label %181
    i32 332702522, label %182
    i32 -28856689, label %184
    i32 -12490889, label %185
    i32 1235696597, label %195
    i32 253602366, label %206
    i32 1689730643, label %208
    i32 -1972588663, label %215
    i32 -674432065, label %216
    i32 -570629191, label %219
    i32 -177049488, label %229
    i32 -485998368, label %245
    i32 532405164, label %246
    i32 -451838447, label %247
    i32 941888738, label %248
    i32 -1141851869, label %249
    i32 -1197466152, label %252
    i32 -2044760280, label %256
    i32 1892609221, label %264
    i32 913143375, label %269
    i32 -1268779541, label %270
    i32 2102976432, label %280
    i32 233786909, label %291
    i32 1159401173, label %292
    i32 32229461, label %293
    i32 -846677909, label %295
    i32 -940574572, label %305
    i32 -1188234444, label %316
    i32 1589510481, label %317
    i32 1790998594, label %318
    i32 -1284848302, label %323
    i32 1307668799, label %329
    i32 -435814345, label %342
    i32 1907943597, label %354
    i32 374844161, label %355
    i32 -1004510627, label %357
    i32 -1265664371, label %362
    i32 869537855, label %367
    i32 -424572162, label %377
    i32 -1874504431, label %396
    i32 834510695, label %397
    i32 -2018362667, label %407
    i32 -217965625, label %417
    i32 1266598185, label %418
    i32 1291204908, label %420
    i32 939341129, label %421
    i32 -1008214873, label %422
    i32 -1104577596, label %423
    i32 -2107429485, label %424
    i32 1410746363, label %425
    i32 -1165650058, label %429
    i32 753366092, label %430
    i32 -1457519288, label %431
    i32 -918844046, label %438
    i32 1766902458, label %440
    i32 -1543268114, label %441
    i32 836843748, label %451
  ]

.backedge:                                        ; preds = %9, %451, %441, %440, %438, %431, %430, %429, %425, %424, %423, %422, %421, %418, %417, %407, %397, %396, %377, %367, %362, %357, %355, %354, %342, %329, %323, %318, %317, %316, %305, %295, %293, %292, %291, %280, %270, %269, %264, %256, %252, %249, %248, %247, %246, %245, %229, %219, %216, %215, %208, %206, %195, %185, %184, %182, %181, %171, %161, %160, %146, %136, %134, %119, %109, %108, %106, %92, %82, %81, %71, %61, %58, %54, %53, %42, %32, %31, %27, %21, %14, %10
  %.091.be = phi i32 [ %.091, %9 ], [ %.091, %451 ], [ %.091, %441 ], [ %.091, %440 ], [ %.091, %438 ], [ %.091, %431 ], [ %.091, %430 ], [ %.091, %429 ], [ %.091, %425 ], [ %.091, %424 ], [ %.091, %423 ], [ %.091, %422 ], [ %.091, %421 ], [ %.091, %418 ], [ %.091, %417 ], [ %.091, %407 ], [ %.091, %397 ], [ %.091, %396 ], [ %.091, %377 ], [ %.091, %367 ], [ %.091, %362 ], [ %.091, %357 ], [ %.091, %355 ], [ %.091, %354 ], [ %.091, %342 ], [ %.091, %329 ], [ %.091, %323 ], [ %.091, %318 ], [ %.091, %317 ], [ %.091, %316 ], [ %.091, %305 ], [ %.091, %295 ], [ %.091, %293 ], [ %.091, %292 ], [ %.091, %291 ], [ %.091, %280 ], [ %.091, %270 ], [ %.091, %269 ], [ %.091, %264 ], [ %.091, %256 ], [ %.091, %252 ], [ %.091, %249 ], [ %.091, %248 ], [ %.091, %247 ], [ %.091, %246 ], [ %.091, %245 ], [ %.091, %229 ], [ %.091, %219 ], [ %.091, %216 ], [ %.091, %215 ], [ %.091, %208 ], [ %.091, %206 ], [ %.091, %195 ], [ %.091, %185 ], [ %.091, %184 ], [ %.091, %182 ], [ %.091, %181 ], [ %.091, %171 ], [ %.091, %161 ], [ %.091, %160 ], [ %.091, %146 ], [ %.091, %136 ], [ %.091, %134 ], [ %.091, %119 ], [ %.091, %109 ], [ %.091, %108 ], [ %.091, %106 ], [ %.091, %92 ], [ %.091, %82 ], [ %.091, %81 ], [ %.091, %71 ], [ %.091, %61 ], [ %.091, %58 ], [ %.091, %54 ], [ %.091, %53 ], [ %.091, %42 ], [ %.091, %32 ], [ %.091, %31 ], [ %.091, %27 ], [ %22, %21 ], [ %.091, %14 ], [ %.091, %10 ]
  %.089.be = phi i32 [ %.089, %9 ], [ %.089, %451 ], [ %.089, %441 ], [ %.089, %440 ], [ %.089, %438 ], [ %.089, %431 ], [ %.089, %430 ], [ %.089, %429 ], [ %.089, %425 ], [ %.089, %424 ], [ %.089, %423 ], [ %.089, %422 ], [ %.neg96, %421 ], [ %.089, %418 ], [ %.089, %417 ], [ %.089, %407 ], [ %.089, %397 ], [ %.089, %396 ], [ %.089, %377 ], [ %.089, %367 ], [ %.089, %362 ], [ %.089, %357 ], [ %.089, %355 ], [ %.089, %354 ], [ %.089, %342 ], [ %.089, %329 ], [ %.089, %323 ], [ %.089, %318 ], [ %.089, %317 ], [ %.089, %316 ], [ %.089, %305 ], [ %.089, %295 ], [ %.089, %293 ], [ %.089, %292 ], [ %.089, %291 ], [ %.089, %280 ], [ %.089, %270 ], [ %.089, %269 ], [ %.089, %264 ], [ %.089, %256 ], [ %.089, %252 ], [ %.089, %249 ], [ %.089, %248 ], [ %.089, %247 ], [ %.089, %246 ], [ %.089, %245 ], [ %.089, %229 ], [ %.089, %219 ], [ %.089, %216 ], [ %.089, %215 ], [ %.089, %208 ], [ %.089, %206 ], [ %.089, %195 ], [ %.089, %185 ], [ %.089, %184 ], [ %.089, %182 ], [ %.089, %181 ], [ %.089, %171 ], [ %.089, %161 ], [ %.089, %160 ], [ %.089, %146 ], [ %.089, %136 ], [ %.089, %134 ], [ %.089, %119 ], [ %.089, %109 ], [ %.089, %108 ], [ %.089, %106 ], [ %.089, %92 ], [ %.089, %82 ], [ %.089, %81 ], [ %.089, %71 ], [ %.089, %61 ], [ %.089, %58 ], [ %.089, %54 ], [ %.089, %53 ], [ %43, %42 ], [ %.089, %32 ], [ %.089, %31 ], [ %.089, %27 ], [ %.089, %21 ], [ %.089, %14 ], [ %.089, %10 ]
  %.087.be = phi i32 [ %.087, %9 ], [ %.087, %451 ], [ %.087, %441 ], [ %.087, %440 ], [ %.087, %438 ], [ %.087, %431 ], [ %.087, %430 ], [ %.087, %429 ], [ %.087, %425 ], [ %.087, %424 ], [ %.087, %423 ], [ 1, %422 ], [ %.087, %421 ], [ %.087, %418 ], [ %.087, %417 ], [ %.087, %407 ], [ %.087, %397 ], [ %.087, %396 ], [ %.087, %377 ], [ %.087, %367 ], [ %.087, %362 ], [ %.087, %357 ], [ %.087, %355 ], [ %.087, %354 ], [ %.087, %342 ], [ %.087, %329 ], [ %.087, %323 ], [ %.087, %318 ], [ %.087, %317 ], [ %.087, %316 ], [ %.087, %305 ], [ %.087, %295 ], [ %.087, %293 ], [ %.087, %292 ], [ %.087, %291 ], [ %.087, %280 ], [ %.087, %270 ], [ %.087, %269 ], [ %.087, %264 ], [ %.087, %256 ], [ %.087, %252 ], [ %.087, %249 ], [ %.087, %248 ], [ %.087, %247 ], [ %.087, %246 ], [ %.087, %245 ], [ %.087, %229 ], [ %.087, %219 ], [ %.087, %216 ], [ %.087, %215 ], [ %.087, %208 ], [ %.087, %206 ], [ %.087, %195 ], [ %.087, %185 ], [ %.087, %184 ], [ %183, %182 ], [ %.087, %181 ], [ %.087, %171 ], [ %.087, %161 ], [ %.087, %160 ], [ %.087, %146 ], [ %.087, %136 ], [ %.087, %134 ], [ %.087, %119 ], [ %.087, %109 ], [ %.087, %108 ], [ %.087, %106 ], [ %.087, %92 ], [ %.087, %82 ], [ %.087, %81 ], [ 1, %71 ], [ %.087, %61 ], [ %.087, %58 ], [ %.087, %54 ], [ %.087, %53 ], [ %.087, %42 ], [ %.087, %32 ], [ %.087, %31 ], [ %.087, %27 ], [ %.087, %21 ], [ %.087, %14 ], [ %.087, %10 ]
  %.085.be = phi i32 [ %.085, %9 ], [ %.085, %451 ], [ %.085, %441 ], [ %.085, %440 ], [ %.085, %438 ], [ %.085, %431 ], [ %.085, %430 ], [ %.085, %429 ], [ %.085, %425 ], [ %.085, %424 ], [ %.085, %423 ], [ %.085, %422 ], [ %.085, %421 ], [ %.085, %418 ], [ %.085, %417 ], [ %.085, %407 ], [ %.085, %397 ], [ %.085, %396 ], [ %.085, %377 ], [ %.085, %367 ], [ %.085, %362 ], [ %.085, %357 ], [ %.085, %355 ], [ %.085, %354 ], [ %.085, %342 ], [ %.085, %329 ], [ %.085, %323 ], [ %.085, %318 ], [ %.085, %317 ], [ %.085, %316 ], [ %.085, %305 ], [ %.085, %295 ], [ %294, %293 ], [ %.085, %292 ], [ %.085, %291 ], [ %.085, %280 ], [ %.085, %270 ], [ %.085, %269 ], [ %.085, %264 ], [ %.085, %256 ], [ %.085, %252 ], [ %.085, %249 ], [ %.085, %248 ], [ %.085, %247 ], [ %.085, %246 ], [ %.085, %245 ], [ %.085, %229 ], [ %.085, %219 ], [ %.085, %216 ], [ %.085, %215 ], [ %.085, %208 ], [ %.085, %206 ], [ %.085, %195 ], [ %.085, %185 ], [ 2, %184 ], [ %.085, %182 ], [ %.085, %181 ], [ %.085, %171 ], [ %.085, %161 ], [ %.085, %160 ], [ %.085, %146 ], [ %.085, %136 ], [ %.085, %134 ], [ %.085, %119 ], [ %.085, %109 ], [ %.085, %108 ], [ %.085, %106 ], [ %.085, %92 ], [ %.085, %82 ], [ %.085, %81 ], [ %.085, %71 ], [ %.085, %61 ], [ %.085, %58 ], [ %.085, %54 ], [ %.085, %53 ], [ %.085, %42 ], [ %.085, %32 ], [ %.085, %31 ], [ %.085, %27 ], [ %.085, %21 ], [ %.085, %14 ], [ %.085, %10 ]
  %.083.be = phi i32 [ %.083, %9 ], [ %.083, %451 ], [ %.083, %441 ], [ %.neg, %440 ], [ %.083, %438 ], [ %.083, %431 ], [ %.083, %430 ], [ %.083, %429 ], [ %.083, %425 ], [ %.083, %424 ], [ %.083, %423 ], [ %.083, %422 ], [ %.083, %421 ], [ %.083, %418 ], [ %.083, %417 ], [ %.083, %407 ], [ %.083, %397 ], [ %.083, %396 ], [ %.083, %377 ], [ %.083, %367 ], [ %.083, %362 ], [ %.083, %357 ], [ %.083, %355 ], [ %.083, %354 ], [ %.083, %342 ], [ %.083, %329 ], [ %.083, %323 ], [ %.083, %318 ], [ %.083, %317 ], [ %.083, %316 ], [ %306, %305 ], [ %.083, %295 ], [ %.083, %293 ], [ %.083, %292 ], [ %.083, %291 ], [ %.083, %280 ], [ %.083, %270 ], [ %.083, %269 ], [ %.083, %264 ], [ %.083, %256 ], [ %.083, %252 ], [ %.083, %249 ], [ %.083, %248 ], [ %.083, %247 ], [ %.083, %246 ], [ %.083, %245 ], [ %.083, %229 ], [ %.083, %219 ], [ %.083, %216 ], [ %.083, %215 ], [ %.083, %208 ], [ %.083, %206 ], [ %.083, %195 ], [ %.083, %185 ], [ 2, %184 ], [ %.083, %182 ], [ %.083, %181 ], [ %.083, %171 ], [ %.083, %161 ], [ %.083, %160 ], [ %.083, %146 ], [ %.083, %136 ], [ %.083, %134 ], [ %.083, %119 ], [ %.083, %109 ], [ %.083, %108 ], [ %.083, %106 ], [ %.083, %92 ], [ %.083, %82 ], [ %.083, %81 ], [ %.083, %71 ], [ %.083, %61 ], [ %.083, %58 ], [ %.083, %54 ], [ %.083, %53 ], [ %.083, %42 ], [ %.083, %32 ], [ %.083, %31 ], [ %.083, %27 ], [ %.083, %21 ], [ %.083, %14 ], [ %.083, %10 ]
  %.081.be = phi i32 [ %.081, %9 ], [ %.081, %451 ], [ %.081, %441 ], [ %.081, %440 ], [ %.081, %438 ], [ %.081, %431 ], [ %.081, %430 ], [ %.081, %429 ], [ %.081, %425 ], [ %.081, %424 ], [ %.081, %423 ], [ %.081, %422 ], [ %.081, %421 ], [ %.081, %418 ], [ %.081, %417 ], [ %.081, %407 ], [ %.081, %397 ], [ %.081, %396 ], [ %.081, %377 ], [ %.081, %367 ], [ %.081, %362 ], [ %.081, %357 ], [ %.081, %355 ], [ %.081, %354 ], [ %.081, %342 ], [ %.081, %329 ], [ %.081, %323 ], [ %.081, %318 ], [ %.081, %317 ], [ %.081, %316 ], [ %.081, %305 ], [ %.081, %295 ], [ %.081, %293 ], [ %.081, %292 ], [ %.081, %291 ], [ %.081, %280 ], [ %.081, %270 ], [ %.081, %269 ], [ %.081, %264 ], [ %.081, %256 ], [ %.081, %252 ], [ %.081, %249 ], [ %.081, %248 ], [ %.081, %247 ], [ %.neg99, %246 ], [ %.081, %245 ], [ %.081, %229 ], [ %.081, %219 ], [ %.081, %216 ], [ 1, %215 ], [ %.081, %208 ], [ %.081, %206 ], [ %.081, %195 ], [ %.081, %185 ], [ %.081, %184 ], [ %.081, %182 ], [ %.081, %181 ], [ %.081, %171 ], [ %.081, %161 ], [ %.081, %160 ], [ %.081, %146 ], [ %.081, %136 ], [ %.081, %134 ], [ %.081, %119 ], [ %.081, %109 ], [ %.081, %108 ], [ %.081, %106 ], [ %.081, %92 ], [ %.081, %82 ], [ %.081, %81 ], [ %.081, %71 ], [ %.081, %61 ], [ %.081, %58 ], [ %.081, %54 ], [ %.081, %53 ], [ %.081, %42 ], [ %.081, %32 ], [ %.081, %31 ], [ %.081, %27 ], [ %.081, %21 ], [ %.081, %14 ], [ %.081, %10 ]
  %.079.be = phi i32 [ %.079, %9 ], [ %.079, %451 ], [ %.079, %441 ], [ %.079, %440 ], [ %439, %438 ], [ %.079, %431 ], [ %.079, %430 ], [ %.079, %429 ], [ %.079, %425 ], [ %.079, %424 ], [ %.079, %423 ], [ %.079, %422 ], [ %.079, %421 ], [ %.079, %418 ], [ %.079, %417 ], [ %.079, %407 ], [ %.079, %397 ], [ %.079, %396 ], [ %.079, %377 ], [ %.079, %367 ], [ %.079, %362 ], [ %.079, %357 ], [ %.079, %355 ], [ %.079, %354 ], [ %.079, %342 ], [ %.079, %329 ], [ %.079, %323 ], [ %.079, %318 ], [ %.079, %317 ], [ %.079, %316 ], [ %.079, %305 ], [ %.079, %295 ], [ %.079, %293 ], [ %.079, %292 ], [ %.079, %291 ], [ %281, %280 ], [ %.079, %270 ], [ %.079, %269 ], [ %.079, %264 ], [ %.079, %256 ], [ %.079, %252 ], [ %.079, %249 ], [ 1, %248 ], [ %.079, %247 ], [ %.079, %246 ], [ %.079, %245 ], [ %.079, %229 ], [ %.079, %219 ], [ %.079, %216 ], [ %.079, %215 ], [ %.079, %208 ], [ %.079, %206 ], [ %.079, %195 ], [ %.079, %185 ], [ %.079, %184 ], [ %.079, %182 ], [ %.079, %181 ], [ %.079, %171 ], [ %.079, %161 ], [ %.079, %160 ], [ %.079, %146 ], [ %.079, %136 ], [ %.079, %134 ], [ %.079, %119 ], [ %.079, %109 ], [ %.079, %108 ], [ %.079, %106 ], [ %.079, %92 ], [ %.079, %82 ], [ %.079, %81 ], [ %.079, %71 ], [ %.079, %61 ], [ %.079, %58 ], [ %.079, %54 ], [ %.079, %53 ], [ %.079, %42 ], [ %.079, %32 ], [ %.079, %31 ], [ %.079, %27 ], [ %.079, %21 ], [ %.079, %14 ], [ %.079, %10 ]
  %.077.be = phi i32 [ %.077, %9 ], [ %.077, %451 ], [ %.077, %441 ], [ %.077, %440 ], [ %.077, %438 ], [ %.077, %431 ], [ %.077, %430 ], [ %.077, %429 ], [ %.077, %425 ], [ %.077, %424 ], [ %.077, %423 ], [ %.077, %422 ], [ %.077, %421 ], [ %.077, %418 ], [ %.077, %417 ], [ %.077, %407 ], [ %.077, %397 ], [ %.077, %396 ], [ %.077, %377 ], [ %.077, %367 ], [ %.077, %362 ], [ %.077, %357 ], [ %.077, %355 ], [ %.077, %354 ], [ %.neg98, %342 ], [ %.077, %329 ], [ %.077, %323 ], [ %.077, %318 ], [ 1, %317 ], [ %.077, %316 ], [ %.077, %305 ], [ %.077, %295 ], [ %.077, %293 ], [ %.077, %292 ], [ %.077, %291 ], [ %.077, %280 ], [ %.077, %270 ], [ %.077, %269 ], [ %.077, %264 ], [ %.077, %256 ], [ %.077, %252 ], [ %.077, %249 ], [ %.077, %248 ], [ %.077, %247 ], [ %.077, %246 ], [ %.077, %245 ], [ %.077, %229 ], [ %.077, %219 ], [ %.077, %216 ], [ %.077, %215 ], [ %.077, %208 ], [ %.077, %206 ], [ %.077, %195 ], [ %.077, %185 ], [ %.077, %184 ], [ %.077, %182 ], [ %.077, %181 ], [ %.077, %171 ], [ %.077, %161 ], [ %.077, %160 ], [ %.077, %146 ], [ %.077, %136 ], [ %.077, %134 ], [ %.077, %119 ], [ %.077, %109 ], [ %.077, %108 ], [ %.077, %106 ], [ %.077, %92 ], [ %.077, %82 ], [ %.077, %81 ], [ %.077, %71 ], [ %.077, %61 ], [ %.077, %58 ], [ %.077, %54 ], [ %.077, %53 ], [ %.077, %42 ], [ %.077, %32 ], [ %.077, %31 ], [ %.077, %27 ], [ %.077, %21 ], [ %.077, %14 ], [ %.077, %10 ]
  %.075.be = phi i32 [ %.075, %9 ], [ %.075, %451 ], [ %.075, %441 ], [ %.075, %440 ], [ %.075, %438 ], [ %.075, %431 ], [ %.075, %430 ], [ %.075, %429 ], [ %.075, %425 ], [ %.075, %424 ], [ %.075, %423 ], [ %.075, %422 ], [ %.075, %421 ], [ %.075, %418 ], [ %.075, %417 ], [ %.075, %407 ], [ %.075, %397 ], [ %.075, %396 ], [ %.075, %377 ], [ %.075, %367 ], [ %.075, %362 ], [ %.075, %357 ], [ %356, %355 ], [ %.075, %354 ], [ %.075, %342 ], [ %.075, %329 ], [ %.075, %323 ], [ %.075, %318 ], [ 1, %317 ], [ %.075, %316 ], [ %.075, %305 ], [ %.075, %295 ], [ %.075, %293 ], [ %.075, %292 ], [ %.075, %291 ], [ %.075, %280 ], [ %.075, %270 ], [ %.075, %269 ], [ %.075, %264 ], [ %.075, %256 ], [ %.075, %252 ], [ %.075, %249 ], [ %.075, %248 ], [ %.075, %247 ], [ %.075, %246 ], [ %.075, %245 ], [ %.075, %229 ], [ %.075, %219 ], [ %.075, %216 ], [ %.075, %215 ], [ %.075, %208 ], [ %.075, %206 ], [ %.075, %195 ], [ %.075, %185 ], [ %.075, %184 ], [ %.075, %182 ], [ %.075, %181 ], [ %.075, %171 ], [ %.075, %161 ], [ %.075, %160 ], [ %.075, %146 ], [ %.075, %136 ], [ %.075, %134 ], [ %.075, %119 ], [ %.075, %109 ], [ %.075, %108 ], [ %.075, %106 ], [ %.075, %92 ], [ %.075, %82 ], [ %.075, %81 ], [ %.075, %71 ], [ %.075, %61 ], [ %.075, %58 ], [ %.075, %54 ], [ %.075, %53 ], [ %.075, %42 ], [ %.075, %32 ], [ %.075, %31 ], [ %.075, %27 ], [ %.075, %21 ], [ %.075, %14 ], [ %.075, %10 ]
  %.073.be = phi i32 [ %.073, %9 ], [ %452, %451 ], [ %.073, %441 ], [ %.073, %440 ], [ %.073, %438 ], [ %.073, %431 ], [ %.073, %430 ], [ %.073, %429 ], [ %.073, %425 ], [ %.073, %424 ], [ %.073, %423 ], [ %.073, %422 ], [ %.073, %421 ], [ %.073, %418 ], [ %.073, %417 ], [ %.neg97, %407 ], [ %.073, %397 ], [ %.073, %396 ], [ %.073, %377 ], [ %.073, %367 ], [ %.073, %362 ], [ 1, %357 ], [ %.073, %355 ], [ %.073, %354 ], [ %.073, %342 ], [ %.073, %329 ], [ %.073, %323 ], [ %.073, %318 ], [ %.073, %317 ], [ %.073, %316 ], [ %.073, %305 ], [ %.073, %295 ], [ %.073, %293 ], [ %.073, %292 ], [ %.073, %291 ], [ %.073, %280 ], [ %.073, %270 ], [ %.073, %269 ], [ %.073, %264 ], [ %.073, %256 ], [ %.073, %252 ], [ %.073, %249 ], [ %.073, %248 ], [ %.073, %247 ], [ %.073, %246 ], [ %.073, %245 ], [ %.073, %229 ], [ %.073, %219 ], [ %.073, %216 ], [ %.073, %215 ], [ %.073, %208 ], [ %.073, %206 ], [ %.073, %195 ], [ %.073, %185 ], [ %.073, %184 ], [ %.073, %182 ], [ %.073, %181 ], [ %.073, %171 ], [ %.073, %161 ], [ %.073, %160 ], [ %.073, %146 ], [ %.073, %136 ], [ %.073, %134 ], [ %.073, %119 ], [ %.073, %109 ], [ %.073, %108 ], [ %.073, %106 ], [ %.073, %92 ], [ %.073, %82 ], [ %.073, %81 ], [ %.073, %71 ], [ %.073, %61 ], [ %.073, %58 ], [ %.073, %54 ], [ %.073, %53 ], [ %.073, %42 ], [ %.073, %32 ], [ %.073, %31 ], [ %.073, %27 ], [ %.073, %21 ], [ %.073, %14 ], [ %.073, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ -2018362667, %451 ], [ -424572162, %441 ], [ -940574572, %440 ], [ 2102976432, %438 ], [ -177049488, %431 ], [ 1235696597, %430 ], [ -275410420, %429 ], [ -1608702088, %425 ], [ -1777864958, %424 ], [ -1073529967, %423 ], [ -851310716, %422 ], [ -336416085, %421 ], [ 1291204908, %418 ], [ -1265664371, %417 ], [ %416, %407 ], [ %406, %397 ], [ 834510695, %396 ], [ %395, %377 ], [ %376, %367 ], [ %366, %362 ], [ -1265664371, %357 ], [ 1790998594, %355 ], [ 374844161, %354 ], [ 1907943597, %342 ], [ 1907943597, %329 ], [ %328, %323 ], [ %322, %318 ], [ 1790998594, %317 ], [ -12490889, %316 ], [ %315, %305 ], [ %304, %295 ], [ -846677909, %293 ], [ 32229461, %292 ], [ -1141851869, %291 ], [ %290, %280 ], [ %279, %270 ], [ -1268779541, %269 ], [ 913143375, %264 ], [ 913143375, %256 ], [ %255, %252 ], [ %251, %249 ], [ -1141851869, %248 ], [ 32229461, %247 ], [ -674432065, %246 ], [ 532405164, %245 ], [ %244, %229 ], [ %228, %219 ], [ %218, %216 ], [ -674432065, %215 ], [ %214, %208 ], [ %207, %206 ], [ %205, %195 ], [ %194, %185 ], [ -12490889, %184 ], [ -167556935, %182 ], [ 332702522, %181 ], [ %180, %171 ], [ %170, %161 ], [ 2060353787, %160 ], [ %159, %146 ], [ %145, %136 ], [ %135, %134 ], [ %133, %119 ], [ %118, %109 ], [ 2060353787, %108 ], [ %107, %106 ], [ %105, %92 ], [ %91, %82 ], [ -167556935, %81 ], [ %80, %71 ], [ %70, %61 ], [ 1291204908, %58 ], [ %57, %54 ], [ -4496440, %53 ], [ %52, %42 ], [ %41, %32 ], [ 1078238147, %31 ], [ -1546604118, %27 ], [ -1546604118, %21 ], [ %20, %14 ], [ %13, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @N, align 4
  %12 = icmp slt i32 %.089, %11
  %13 = select i1 %12, i32 -1210035314, i32 1646013710
  br label %.backedge

14:                                               ; preds = %9
  %15 = load i32, i32* %4, align 4
  %16 = shl nuw i32 1, %.089
  %17 = load i32, i32* %5, align 4
  %18 = xor i32 %17, %15
  %19 = and i32 %18, %16
  %.not101 = icmp eq i32 %19, 0
  %20 = select i1 %.not101, i32 1276124176, i32 -850846647
  br label %.backedge

21:                                               ; preds = %9
  %22 = add i32 %.091, 1
  %23 = load i32, i32* @N, align 4
  %.neg102 = xor i32 %.091, -1
  %24 = add i32 %23, %.neg102
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [20 x i32], [20 x i32]* @change, i64 0, i64 %25
  store i32 %.089, i32* %26, align 4
  br label %.backedge

27:                                               ; preds = %9
  %28 = sub i32 %.089, %.091
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [20 x i32], [20 x i32]* @change, i64 0, i64 %29
  store i32 %.089, i32* %30, align 4
  br label %.backedge

31:                                               ; preds = %9
  br label %.backedge

32:                                               ; preds = %9
  %33 = load i32, i32* @x.2, align 4
  %34 = load i32, i32* @y.3, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 -336416085, i32 939341129
  br label %.backedge

42:                                               ; preds = %9
  %43 = add i32 %.089, 1
  %44 = load i32, i32* @x.2, align 4
  %45 = load i32, i32* @y.3, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 -1143687274, i32 939341129
  br label %.backedge

53:                                               ; preds = %9
  br label %.backedge

54:                                               ; preds = %9
  %55 = and i32 %.091, 1
  %56 = icmp eq i32 %55, 0
  %57 = select i1 %56, i32 -841027528, i32 951647076
  br label %.backedge

58:                                               ; preds = %9
  %59 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %60 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %59, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

61:                                               ; preds = %9
  %62 = load i32, i32* @x.2, align 4
  %63 = load i32, i32* @y.3, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 -851310716, i32 -1008214873
  br label %.backedge

71:                                               ; preds = %9
  %72 = load i32, i32* @x.2, align 4
  %73 = load i32, i32* @y.3, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 26158522, i32 -1008214873
  br label %.backedge

81:                                               ; preds = %9
  br label %.backedge

82:                                               ; preds = %9
  %83 = load i32, i32* @x.2, align 4
  %84 = load i32, i32* @y.3, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -1073529967, i32 -1104577596
  br label %.backedge

92:                                               ; preds = %9
  %93 = load i32, i32* @N, align 4
  %94 = sub i32 %93, %.091
  %95 = shl nuw i32 1, %94
  %96 = icmp slt i32 %.087, %95
  store i1 %96, i1* %3, align 1
  %97 = load i32, i32* @x.2, align 4
  %98 = load i32, i32* @y.3, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 -82586329, i32 -1104577596
  br label %.backedge

106:                                              ; preds = %9
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %107 = select i1 %.0..0..0., i32 -40582941, i32 -28856689
  br label %.backedge

108:                                              ; preds = %9
  br label %.backedge

109:                                              ; preds = %9
  %110 = load i32, i32* @x.2, align 4
  %111 = load i32, i32* @y.3, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 -1777864958, i32 -2107429485
  br label %.backedge

119:                                              ; preds = %9
  %120 = sext i32 %.087 to i64
  %121 = getelementptr inbounds [150000 x i32], [150000 x i32]* @g, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = shl nuw i32 1, %122
  %124 = and i32 %123, %.087
  %.not100 = icmp eq i32 %124, 0
  store i1 %.not100, i1* %2, align 1
  %125 = load i32, i32* @x.2, align 4
  %126 = load i32, i32* @y.3, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 428630365, i32 -2107429485
  br label %.backedge

134:                                              ; preds = %9
  %.0..0..0.71 = load volatile i1, i1* %2, align 1
  %135 = select i1 %.0..0..0.71, i32 -1147007510, i32 1938368112
  br label %.backedge

136:                                              ; preds = %9
  %137 = load i32, i32* @x.2, align 4
  %138 = load i32, i32* @y.3, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 -1608702088, i32 1410746363
  br label %.backedge

146:                                              ; preds = %9
  %147 = sext i32 %.087 to i64
  %148 = getelementptr inbounds [150000 x i32], [150000 x i32]* @g, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %148, align 4
  %151 = load i32, i32* @x.2, align 4
  %152 = load i32, i32* @y.3, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 -1701553178, i32 1410746363
  br label %.backedge

160:                                              ; preds = %9
  br label %.backedge

161:                                              ; preds = %9
  %162 = load i32, i32* @x.2, align 4
  %163 = load i32, i32* @y.3, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 -275410420, i32 -1165650058
  br label %.backedge

171:                                              ; preds = %9
  %172 = load i32, i32* @x.2, align 4
  %173 = load i32, i32* @y.3, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 -113474230, i32 -1165650058
  br label %.backedge

181:                                              ; preds = %9
  br label %.backedge

182:                                              ; preds = %9
  %183 = add i32 %.087, 1
  br label %.backedge

184:                                              ; preds = %9
  br label %.backedge

185:                                              ; preds = %9
  %186 = load i32, i32* @x.2, align 4
  %187 = load i32, i32* @y.3, align 4
  %188 = add i32 %186, -1
  %189 = mul i32 %188, %186
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %192, %191
  %194 = select i1 %193, i32 1235696597, i32 753366092
  br label %.backedge

195:                                              ; preds = %9
  %196 = icmp sle i32 %.083, %.091
  store i1 %196, i1* %1, align 1
  %197 = load i32, i32* @x.2, align 4
  %198 = load i32, i32* @y.3, align 4
  %199 = add i32 %197, -1
  %200 = mul i32 %199, %197
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %203, %202
  %205 = select i1 %204, i32 253602366, i32 753366092
  br label %.backedge

206:                                              ; preds = %9
  %.0..0..0.72 = load volatile i1, i1* %1, align 1
  %207 = select i1 %.0..0..0.72, i32 1689730643, i32 1589510481
  br label %.backedge

208:                                              ; preds = %9
  %209 = add i32 %.083, -1
  %210 = sext i32 %.085 to i64
  %211 = getelementptr inbounds [150000 x i32], [150000 x i32]* @h, i64 0, i64 %210
  store i32 %209, i32* %211, align 4
  %212 = and i32 %.083, 1
  %213 = icmp eq i32 %212, 0
  %214 = select i1 %213, i32 -1972588663, i32 941888738
  br label %.backedge

215:                                              ; preds = %9
  br label %.backedge

216:                                              ; preds = %9
  %217 = icmp slt i32 %.081, %.085
  %218 = select i1 %217, i32 -570629191, i32 -451838447
  br label %.backedge

219:                                              ; preds = %9
  %220 = load i32, i32* @x.2, align 4
  %221 = load i32, i32* @y.3, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 -177049488, i32 -1457519288
  br label %.backedge

229:                                              ; preds = %9
  %230 = sext i32 %.081 to i64
  %231 = getelementptr inbounds [150000 x i32], [150000 x i32]* @h, i64 0, i64 %230
  %232 = load i32, i32* %231, align 4
  %233 = add i32 %.081, %.085
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [150000 x i32], [150000 x i32]* @h, i64 0, i64 %234
  store i32 %232, i32* %235, align 4
  %236 = load i32, i32* @x.2, align 4
  %237 = load i32, i32* @y.3, align 4
  %238 = add i32 %236, -1
  %239 = mul i32 %238, %236
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %242, %241
  %244 = select i1 %243, i32 -485998368, i32 -1457519288
  br label %.backedge

245:                                              ; preds = %9
  br label %.backedge

246:                                              ; preds = %9
  %.neg99 = add i32 %.081, 1
  br label %.backedge

247:                                              ; preds = %9
  br label %.backedge

248:                                              ; preds = %9
  br label %.backedge

249:                                              ; preds = %9
  %250 = icmp slt i32 %.079, %.085
  %251 = select i1 %250, i32 -1197466152, i32 1159401173
  br label %.backedge

252:                                              ; preds = %9
  %253 = and i32 %.079, 1
  %254 = icmp eq i32 %253, 0
  %255 = select i1 %254, i32 -2044760280, i32 1892609221
  br label %.backedge

256:                                              ; preds = %9
  %257 = sdiv i32 %.079, 2
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [150000 x i32], [150000 x i32]* @h, i64 0, i64 %258
  %260 = load i32, i32* %259, align 4
  %261 = add i32 %.079, %.085
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [150000 x i32], [150000 x i32]* @h, i64 0, i64 %262
  store i32 %260, i32* %263, align 4
  br label %.backedge

264:                                              ; preds = %9
  %265 = add i32 %.083, -2
  %266 = add i32 %.079, %.085
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [150000 x i32], [150000 x i32]* @h, i64 0, i64 %267
  store i32 %265, i32* %268, align 4
  br label %.backedge

269:                                              ; preds = %9
  br label %.backedge

270:                                              ; preds = %9
  %271 = load i32, i32* @x.2, align 4
  %272 = load i32, i32* @y.3, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 2102976432, i32 -918844046
  br label %.backedge

280:                                              ; preds = %9
  %281 = add i32 %.079, 1
  %282 = load i32, i32* @x.2, align 4
  %283 = load i32, i32* @y.3, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 233786909, i32 -918844046
  br label %.backedge

291:                                              ; preds = %9
  br label %.backedge

292:                                              ; preds = %9
  br label %.backedge

293:                                              ; preds = %9
  %294 = shl nsw i32 %.085, 1
  br label %.backedge

295:                                              ; preds = %9
  %296 = load i32, i32* @x.2, align 4
  %297 = load i32, i32* @y.3, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 -940574572, i32 1766902458
  br label %.backedge

305:                                              ; preds = %9
  %306 = add i32 %.083, 1
  %307 = load i32, i32* @x.2, align 4
  %308 = load i32, i32* @y.3, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -1188234444, i32 1766902458
  br label %.backedge

316:                                              ; preds = %9
  br label %.backedge

317:                                              ; preds = %9
  br label %.backedge

318:                                              ; preds = %9
  %319 = load i32, i32* @N, align 4
  %320 = shl nuw i32 1, %319
  %321 = icmp slt i32 %.075, %320
  %322 = select i1 %321, i32 -1284848302, i32 -1004510627
  br label %.backedge

323:                                              ; preds = %9
  %324 = load i32, i32* @N, align 4
  %325 = sub i32 %324, %.091
  %notmask = shl nsw i32 -1, %325
  %326 = xor i32 %notmask, -1
  %327 = and i32 %.075, %326
  %.not = icmp eq i32 %327, 0
  %328 = select i1 %.not, i32 -435814345, i32 1307668799
  br label %.backedge

329:                                              ; preds = %9
  %330 = load i32, i32* @N, align 4
  %331 = sub i32 %330, %.091
  %332 = shl nuw i32 1, %331
  %333 = srem i32 %.075, %332
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds [150000 x i32], [150000 x i32]* @g, i64 0, i64 %334
  %336 = load i32, i32* %335, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds [20 x i32], [20 x i32]* @change, i64 0, i64 %337
  %339 = load i32, i32* %338, align 4
  %340 = sext i32 %.075 to i64
  %341 = getelementptr inbounds [150000 x i32], [150000 x i32]* @ans, i64 0, i64 %340
  store i32 %339, i32* %341, align 4
  br label %.backedge

342:                                              ; preds = %9
  %343 = sext i32 %.077 to i64
  %344 = getelementptr inbounds [150000 x i32], [150000 x i32]* @h, i64 0, i64 %343
  %345 = load i32, i32* %344, align 4
  %346 = load i32, i32* @N, align 4
  %347 = sub i32 %345, %.091
  %348 = add i32 %347, %346
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds [20 x i32], [20 x i32]* @change, i64 0, i64 %349
  %351 = load i32, i32* %350, align 4
  %352 = sext i32 %.075 to i64
  %353 = getelementptr inbounds [150000 x i32], [150000 x i32]* @ans, i64 0, i64 %352
  store i32 %351, i32* %353, align 4
  %.neg98 = add i32 %.077, 1
  br label %.backedge

354:                                              ; preds = %9
  br label %.backedge

355:                                              ; preds = %9
  %356 = add i32 %.075, 1
  br label %.backedge

357:                                              ; preds = %9
  %358 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  %359 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %358, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %360 = load i32, i32* %4, align 4
  %361 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %360)
  br label %.backedge

362:                                              ; preds = %9
  %363 = load i32, i32* @N, align 4
  %364 = shl nuw i32 1, %363
  %365 = icmp slt i32 %.073, %364
  %366 = select i1 %365, i32 869537855, i32 1266598185
  br label %.backedge

367:                                              ; preds = %9
  %368 = load i32, i32* @x.2, align 4
  %369 = load i32, i32* @y.3, align 4
  %370 = add i32 %368, -1
  %371 = mul i32 %370, %368
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %374, %373
  %376 = select i1 %375, i32 -424572162, i32 -1543268114
  br label %.backedge

377:                                              ; preds = %9
  %378 = sext i32 %.073 to i64
  %379 = getelementptr inbounds [150000 x i32], [150000 x i32]* @ans, i64 0, i64 %378
  %380 = load i32, i32* %379, align 4
  %381 = shl nuw i32 1, %380
  %382 = load i32, i32* %4, align 4
  %383 = xor i32 %381, %382
  store i32 %383, i32* %4, align 4
  %384 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %385 = load i32, i32* %4, align 4
  %386 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %384, i32 %385)
  %387 = load i32, i32* @x.2, align 4
  %388 = load i32, i32* @y.3, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 -1874504431, i32 -1543268114
  br label %.backedge

396:                                              ; preds = %9
  br label %.backedge

397:                                              ; preds = %9
  %398 = load i32, i32* @x.2, align 4
  %399 = load i32, i32* @y.3, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 -2018362667, i32 836843748
  br label %.backedge

407:                                              ; preds = %9
  %.neg97 = add i32 %.073, 1
  %408 = load i32, i32* @x.2, align 4
  %409 = load i32, i32* @y.3, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 -217965625, i32 836843748
  br label %.backedge

417:                                              ; preds = %9
  br label %.backedge

418:                                              ; preds = %9
  %419 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

420:                                              ; preds = %9
  ret i32 0

421:                                              ; preds = %9
  %.neg96 = add i32 %.089, 1
  br label %.backedge

422:                                              ; preds = %9
  br label %.backedge

423:                                              ; preds = %9
  br label %.backedge

424:                                              ; preds = %9
  br label %.backedge

425:                                              ; preds = %9
  %426 = sext i32 %.087 to i64
  %427 = getelementptr inbounds [150000 x i32], [150000 x i32]* @g, i64 0, i64 %426
  %428 = load i32, i32* %427, align 4
  %.neg95 = add i32 %428, 1
  store i32 %.neg95, i32* %427, align 4
  br label %.backedge

429:                                              ; preds = %9
  br label %.backedge

430:                                              ; preds = %9
  br label %.backedge

431:                                              ; preds = %9
  %432 = sext i32 %.081 to i64
  %433 = getelementptr inbounds [150000 x i32], [150000 x i32]* @h, i64 0, i64 %432
  %434 = load i32, i32* %433, align 4
  %435 = add i32 %.081, %.085
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [150000 x i32], [150000 x i32]* @h, i64 0, i64 %436
  store i32 %434, i32* %437, align 4
  br label %.backedge

438:                                              ; preds = %9
  %439 = add i32 %.079, 1
  br label %.backedge

440:                                              ; preds = %9
  %.neg = add i32 %.083, 1
  br label %.backedge

441:                                              ; preds = %9
  %442 = sext i32 %.073 to i64
  %443 = getelementptr inbounds [150000 x i32], [150000 x i32]* @ans, i64 0, i64 %442
  %444 = load i32, i32* %443, align 4
  %445 = shl nuw i32 1, %444
  %446 = load i32, i32* %4, align 4
  %447 = xor i32 %446, %445
  store i32 %447, i32* %4, align 4
  %448 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %449 = load i32, i32* %4, align 4
  %450 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %448, i32 %449)
  br label %.backedge

451:                                              ; preds = %9
  %452 = add i32 %.073, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s207977527.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
