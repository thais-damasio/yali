; ModuleID = 'build_ollvm/programs/p03097/s055698864.ll'
source_filename = "Project_CodeNet_C++1400/p03097/s055698864.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@result = local_unnamed_addr global [131072 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@str.1 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@str.2 = private unnamed_addr constant [3 x i8] c"NO\00", align 1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define void @_Z4swapRiS_(i32* nocapture dereferenceable(4) %0, i32* nocapture dereferenceable(4) %1) local_unnamed_addr #0 {
  %3 = load i32, i32* %0, align 4
  %4 = load i32, i32* %1, align 4
  store i32 %4, i32* %0, align 4
  store i32 %3, i32* %1, align 4
  ret void
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z9insert_atiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #1 {
  %4 = alloca i32, align 4
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = load i32, i32* @x.5, align 4
  %8 = load i32, i32* @y.6, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %6, align 1
  %13 = icmp slt i32 %8, 10
  store i1 %13, i1* %5, align 1
  %14 = add i32 %0, 1
  %notmask = shl nsw i32 -1, %14
  %15 = or i1 %13, %12
  %16 = select i1 %15, i32 1404540455, i32 1994177230
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %3
  %.0.ph = phi i32 [ 586487301, %3 ], [ %.0.ph.be, %.outer.backedge ]
  br label %17

17:                                               ; preds = %.outer, %17
  switch i32 %.0.ph, label %17 [
    i32 586487301, label %18
    i32 1368845731, label %.outer.backedge
    i32 1404540455, label %21
    i32 1994177230, label %29
  ]

18:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %.0..0..0.1 = load volatile i1, i1* %5, align 1
  %19 = or i1 %.0..0..0., %.0..0..0.1
  %20 = select i1 %19, i32 1368845731, i32 1994177230
  br label %.outer.backedge

21:                                               ; preds = %17
  %22 = shl i32 %2, 1
  %23 = and i32 %22, %notmask
  %24 = shl i32 %1, %0
  %25 = or i32 %23, %24
  %26 = ashr i32 %notmask, 1
  %27 = xor i32 %26, -1
  %.demorgan = and i32 %27, %2
  %28 = or i32 %25, %.demorgan
  store i32 %28, i32* %4, align 4
  %.0..0..0.2 = load volatile i32, i32* %4, align 4
  ret i32 %.0..0..0.2

29:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %29, %18
  %.0.ph.be = phi i32 [ %20, %18 ], [ 1368845731, %29 ], [ %16, %17 ]
  br label %.outer
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z9remove_atii(i32 %0, i32 %1) local_unnamed_addr #1 {
  %3 = alloca i32, align 4
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x.7, align 4
  %7 = load i32, i32* @y.8, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %5, align 1
  %12 = icmp slt i32 %7, 10
  store i1 %12, i1* %4, align 1
  %13 = add i32 %0, 1
  %notmask = shl nsw i32 -1, %13
  %14 = and i32 %notmask, %1
  %15 = ashr i32 %14, 1
  %16 = ashr i32 %notmask, 1
  %17 = xor i32 %1, -1
  %18 = or i32 %16, %17
  %19 = or i1 %12, %11
  %20 = select i1 %19, i32 -474040495, i32 1064204655
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ -237896653, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %21

21:                                               ; preds = %.outer, %21
  switch i32 %.0.ph, label %21 [
    i32 -237896653, label %22
    i32 509073239, label %.outer.backedge
    i32 -474040495, label %25
    i32 1064204655, label %30
  ]

22:                                               ; preds = %21
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %.0..0..0.1 = load volatile i1, i1* %4, align 1
  %23 = or i1 %.0..0..0., %.0..0..0.1
  %24 = select i1 %23, i32 509073239, i32 1064204655
  br label %.outer.backedge

25:                                               ; preds = %21
  %.not = xor i32 %18, -1
  %26 = and i32 %15, %.not
  %27 = xor i32 %18, %15
  %28 = xor i32 %27, -1
  %29 = or i32 %26, %28
  store i32 %29, i32* %3, align 4
  %.0..0..0.2 = load volatile i32, i32* %3, align 4
  ret i32 %.0..0..0.2

30:                                               ; preds = %21
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %21, %30, %22
  %.0.ph.be = phi i32 [ %24, %22 ], [ 509073239, %30 ], [ %20, %21 ]
  br label %.outer
}

; Function Attrs: nofree noinline nounwind uwtable
define void @_Z9constructiiii(i32 %0, i32 %1, i32 %2, i32 %3) local_unnamed_addr #2 {
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %7, align 4
  %10 = add i32 %3, -1
  %11 = shl nuw i32 1, %10
  %12 = add i32 %11, %0
  %notmask = shl nsw i32 -1, %3
  %13 = sext i32 %0 to i64
  %14 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %13
  %15 = add i32 %0, 1
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %16
  br label %18

18:                                               ; preds = %.backedge, %4
  %.0153 = phi i32 [ undef, %4 ], [ %.0153.be, %.backedge ]
  %.0151 = phi i32 [ undef, %4 ], [ %.0151.be, %.backedge ]
  %.0149 = phi i32 [ undef, %4 ], [ %.0149.be, %.backedge ]
  %.0147 = phi i8 [ undef, %4 ], [ %.0147.be, %.backedge ]
  %.0145 = phi i32 [ undef, %4 ], [ %.0145.be, %.backedge ]
  %.0143 = phi i32 [ undef, %4 ], [ %.0143.be, %.backedge ]
  %.0141 = phi i32 [ undef, %4 ], [ %.0141.be, %.backedge ]
  %.0139 = phi i32 [ undef, %4 ], [ %.0139.be, %.backedge ]
  %.0137 = phi i32 [ undef, %4 ], [ %.0137.be, %.backedge ]
  %.0135 = phi i32 [ undef, %4 ], [ %.0135.be, %.backedge ]
  %.0133 = phi i32 [ undef, %4 ], [ %.0133.be, %.backedge ]
  %.0131 = phi i32 [ undef, %4 ], [ %.0131.be, %.backedge ]
  %.0129 = phi i32 [ undef, %4 ], [ %.0129.be, %.backedge ]
  %.0127 = phi i32 [ undef, %4 ], [ %.0127.be, %.backedge ]
  %.0 = phi i32 [ 199398090, %4 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 199398090, label %19
    i32 1458182994, label %22
    i32 2003602855, label %25
    i32 -627321749, label %28
    i32 -1715766876, label %31
    i32 1081070401, label %41
    i32 -208968276, label %62
    i32 656301554, label %64
    i32 82880646, label %67
    i32 -1371731839, label %77
    i32 1690006131, label %89
    i32 -676872420, label %90
    i32 679744306, label %100
    i32 1983052662, label %110
    i32 2070959433, label %111
    i32 -411692046, label %115
    i32 -1042005367, label %116
    i32 472171168, label %120
    i32 -707383640, label %130
    i32 783017875, label %142
    i32 -2137860267, label %144
    i32 132460556, label %146
    i32 -1202670994, label %154
    i32 -1359713356, label %157
    i32 617773051, label %167
    i32 -1382274031, label %183
    i32 943648250, label %184
    i32 -2127579626, label %187
    i32 157304615, label %188
    i32 -1440258190, label %191
    i32 1664307572, label %201
    i32 1225051306, label %202
    i32 -2000147314, label %212
    i32 -1912845593, label %222
    i32 -143425766, label %223
    i32 -2017766360, label %233
    i32 -2040158882, label %243
    i32 1219559826, label %244
    i32 -1158444689, label %247
    i32 493493002, label %257
    i32 -326071899, label %276
    i32 2141765765, label %277
    i32 352192153, label %279
    i32 931652184, label %280
    i32 2063851458, label %281
    i32 -792571222, label %287
    i32 -1153943010, label %290
    i32 488490049, label %292
    i32 -107463069, label %293
    i32 -2042227674, label %300
    i32 521038611, label %301
    i32 -432652842, label %302
  ]

.backedge:                                        ; preds = %18, %302, %301, %300, %293, %292, %290, %287, %281, %279, %277, %276, %257, %247, %244, %243, %233, %223, %222, %212, %202, %201, %191, %188, %187, %184, %183, %167, %157, %154, %146, %144, %142, %130, %120, %116, %115, %111, %110, %100, %90, %89, %77, %67, %64, %62, %41, %31, %28, %25, %22, %19
  %.0153.be = phi i32 [ %.0153, %18 ], [ %.0153, %302 ], [ %.0153, %301 ], [ %.0153, %300 ], [ %.0153, %293 ], [ %.0153, %292 ], [ %.0153, %290 ], [ %289, %287 ], [ %.0153, %281 ], [ %.0153, %279 ], [ %.0153, %277 ], [ %.0153, %276 ], [ %.0153, %257 ], [ %.0153, %247 ], [ %.0153, %244 ], [ %.0153, %243 ], [ %.0153, %233 ], [ %.0153, %223 ], [ %.0153, %222 ], [ %.0153, %212 ], [ %.0153, %202 ], [ %.0153, %201 ], [ %.0153, %191 ], [ %.0153, %188 ], [ %.0153, %187 ], [ %.0153, %184 ], [ %.0153, %183 ], [ %.0153, %167 ], [ %.0153, %157 ], [ %.0153, %154 ], [ %.0153, %146 ], [ %.0153, %144 ], [ %.0153, %142 ], [ %.0153, %130 ], [ %.0153, %120 ], [ %.0153, %116 ], [ %.0153, %115 ], [ %.0153, %111 ], [ %.0153, %110 ], [ %.0153, %100 ], [ %.0153, %90 ], [ %.0153, %89 ], [ %79, %77 ], [ %.0153, %67 ], [ %.0153, %64 ], [ %.0153, %62 ], [ %.0153, %41 ], [ %.0153, %31 ], [ %.0153, %28 ], [ %27, %25 ], [ %.0153, %22 ], [ %.0153, %19 ]
  %.0151.be = phi i32 [ %.0151, %18 ], [ %.0151, %302 ], [ %.0151, %301 ], [ %.0151, %300 ], [ %.0151, %293 ], [ %.0151, %292 ], [ %.0151, %290 ], [ %.0151, %287 ], [ %.0151, %281 ], [ %.0151, %279 ], [ %.0151, %277 ], [ %.0151, %276 ], [ %.0151, %257 ], [ %.0151, %247 ], [ %.0151, %244 ], [ %.0151, %243 ], [ %.0151, %233 ], [ %.0151, %223 ], [ %.0151, %222 ], [ %.0151, %212 ], [ %.0151, %202 ], [ %.0151, %201 ], [ %.0151, %191 ], [ %.0151, %188 ], [ %.0151, %187 ], [ %.0151, %184 ], [ %.0151, %183 ], [ %.0151, %167 ], [ %.0151, %157 ], [ %.0151, %154 ], [ %.0151, %146 ], [ %.0151, %144 ], [ %.0151, %142 ], [ %.0151, %130 ], [ %.0151, %120 ], [ %.0151, %116 ], [ %.0151, %115 ], [ %.0151, %111 ], [ %.0151, %110 ], [ %.0151, %100 ], [ %.0151, %90 ], [ %.0151, %89 ], [ %.0151, %77 ], [ %.0151, %67 ], [ %66, %64 ], [ %.0151, %62 ], [ %.0151, %41 ], [ %.0151, %31 ], [ %.0151, %28 ], [ 0, %25 ], [ %.0151, %22 ], [ %.0151, %19 ]
  %.0149.be = phi i32 [ %.0149, %18 ], [ %.0149, %302 ], [ %.0149, %301 ], [ %.0149, %300 ], [ %.0149, %293 ], [ %.0149, %292 ], [ %291, %290 ], [ %.0149, %287 ], [ %.0149, %281 ], [ %.0149, %279 ], [ %.0149, %277 ], [ %.0149, %276 ], [ %.0149, %257 ], [ %.0149, %247 ], [ %.0149, %244 ], [ %.0149, %243 ], [ %.0149, %233 ], [ %.0149, %223 ], [ %.0149, %222 ], [ %.0149, %212 ], [ %.0149, %202 ], [ %.0149, %201 ], [ %.0149, %191 ], [ %.0149, %188 ], [ %.0149, %187 ], [ %.0149, %184 ], [ %.0149, %183 ], [ %.0149, %167 ], [ %.0149, %157 ], [ %.0149, %154 ], [ %.0149, %146 ], [ %.0149, %144 ], [ %.0149, %142 ], [ %.0149, %130 ], [ %.0149, %120 ], [ %.0149, %116 ], [ %.0149, %115 ], [ %.0149, %111 ], [ %.0149, %110 ], [ %.neg165, %100 ], [ %.0149, %90 ], [ %.0149, %89 ], [ %.0149, %77 ], [ %.0149, %67 ], [ %.0149, %64 ], [ %.0149, %62 ], [ %.0149, %41 ], [ %.0149, %31 ], [ %.0149, %28 ], [ 0, %25 ], [ %.0149, %22 ], [ %.0149, %19 ]
  %.0147.be = phi i8 [ %.0147, %18 ], [ %.0147, %302 ], [ %.0147, %301 ], [ %.0147, %300 ], [ %.0147, %293 ], [ %.0147, %292 ], [ %.0147, %290 ], [ %.0147, %287 ], [ %.0147, %281 ], [ %.0147, %279 ], [ %.0147, %277 ], [ %.0147, %276 ], [ %.0147, %257 ], [ %.0147, %247 ], [ %.0147, %244 ], [ %.0147, %243 ], [ %.0147, %233 ], [ %.0147, %223 ], [ %.0147, %222 ], [ %.0147, %212 ], [ %.0147, %202 ], [ %.0147, %201 ], [ %.0147, %191 ], [ %.0147, %188 ], [ %.0147, %187 ], [ %.0147, %184 ], [ %.0147, %183 ], [ %.0147, %167 ], [ %.0147, %157 ], [ %.0147, %154 ], [ %.0147, %146 ], [ %.0147, %144 ], [ %.0147, %142 ], [ %.0147, %130 ], [ %.0147, %120 ], [ %.0147, %116 ], [ 1, %115 ], [ 0, %111 ], [ %.0147, %110 ], [ %.0147, %100 ], [ %.0147, %90 ], [ %.0147, %89 ], [ %.0147, %77 ], [ %.0147, %67 ], [ %.0147, %64 ], [ %.0147, %62 ], [ %.0147, %41 ], [ %.0147, %31 ], [ %.0147, %28 ], [ %.0147, %25 ], [ %.0147, %22 ], [ %.0147, %19 ]
  %.0145.be = phi i32 [ %.0145, %18 ], [ %.0145, %302 ], [ %.0145, %301 ], [ %.0145, %300 ], [ %.0145, %293 ], [ %.0145, %292 ], [ %.0145, %290 ], [ %288, %287 ], [ %.0145, %281 ], [ %.0145, %279 ], [ %.0145, %277 ], [ %.0145, %276 ], [ %.0145, %257 ], [ %.0145, %247 ], [ %.0145, %244 ], [ %.0145, %243 ], [ %.0145, %233 ], [ %.0145, %223 ], [ %.0145, %222 ], [ %.0145, %212 ], [ %.0145, %202 ], [ %.0145, %201 ], [ %.0145, %191 ], [ %.0145, %188 ], [ %.0145, %187 ], [ %.0145, %184 ], [ %.0145, %183 ], [ %.0145, %167 ], [ %.0145, %157 ], [ %.0145, %154 ], [ %.0145, %146 ], [ %.0145, %144 ], [ %.0145, %142 ], [ %.0145, %130 ], [ %.0145, %120 ], [ %.0145, %116 ], [ %.0145, %115 ], [ %.0145, %111 ], [ %.0145, %110 ], [ %.0145, %100 ], [ %.0145, %90 ], [ %.0145, %89 ], [ %78, %77 ], [ %.0145, %67 ], [ %.0145, %64 ], [ %.0145, %62 ], [ %.0145, %41 ], [ %.0145, %31 ], [ %.0145, %28 ], [ %26, %25 ], [ %.0145, %22 ], [ %.0145, %19 ]
  %.0143.be = phi i32 [ %.0143, %18 ], [ %.0143, %302 ], [ %.0143, %301 ], [ %.0143, %300 ], [ %.0143, %293 ], [ %.0143, %292 ], [ %.0143, %290 ], [ %.0143, %287 ], [ %.0143, %281 ], [ %.0143, %279 ], [ %.0143, %277 ], [ %.0143, %276 ], [ %.0143, %257 ], [ %.0143, %247 ], [ %.0143, %244 ], [ %.0143, %243 ], [ %.0143, %233 ], [ %.0143, %223 ], [ %.0143, %222 ], [ %.0143, %212 ], [ %.0143, %202 ], [ %.0143, %201 ], [ %.0143, %191 ], [ %.0143, %188 ], [ %.0143, %187 ], [ %.0143, %184 ], [ %.0143, %183 ], [ %.0143, %167 ], [ %.0143, %157 ], [ %.0143, %154 ], [ %.0143, %146 ], [ %145, %144 ], [ %.0143, %142 ], [ %.0143, %130 ], [ %.0143, %120 ], [ %119, %116 ], [ %.0143, %115 ], [ %.0143, %111 ], [ %.0143, %110 ], [ %.0143, %100 ], [ %.0143, %90 ], [ %.0143, %89 ], [ %.0143, %77 ], [ %.0143, %67 ], [ %.0143, %64 ], [ %.0143, %62 ], [ %.0143, %41 ], [ %.0143, %31 ], [ %.0143, %28 ], [ %.0143, %25 ], [ %.0143, %22 ], [ %.0143, %19 ]
  %.0141.be = phi i32 [ %.0141, %18 ], [ %.0141, %302 ], [ %.0141, %301 ], [ %.0141, %300 ], [ %.0141, %293 ], [ %.0141, %292 ], [ %.0141, %290 ], [ %.0141, %287 ], [ %.0141, %281 ], [ %.0141, %279 ], [ %.0141, %277 ], [ %.0141, %276 ], [ %.0141, %257 ], [ %.0141, %247 ], [ %.0141, %244 ], [ %.0141, %243 ], [ %.0141, %233 ], [ %.0141, %223 ], [ %.0141, %222 ], [ %.0141, %212 ], [ %.0141, %202 ], [ %.0141, %201 ], [ %.0141, %191 ], [ %.0141, %188 ], [ %.0141, %187 ], [ %.0141, %184 ], [ %.0141, %183 ], [ %.0141, %167 ], [ %.0141, %157 ], [ %.0141, %154 ], [ %.0141, %146 ], [ %.neg161, %144 ], [ %.0141, %142 ], [ %.0141, %130 ], [ %.0141, %120 ], [ 0, %116 ], [ %.0141, %115 ], [ %.0141, %111 ], [ %.0141, %110 ], [ %.0141, %100 ], [ %.0141, %90 ], [ %.0141, %89 ], [ %.0141, %77 ], [ %.0141, %67 ], [ %.0141, %64 ], [ %.0141, %62 ], [ %.0141, %41 ], [ %.0141, %31 ], [ %.0141, %28 ], [ %.0141, %25 ], [ %.0141, %22 ], [ %.0141, %19 ]
  %.0139.be = phi i32 [ %.0139, %18 ], [ %.0139, %302 ], [ %.0139, %301 ], [ %.0139, %300 ], [ %.0139, %293 ], [ %.0139, %292 ], [ %.0139, %290 ], [ %.0139, %287 ], [ %.0139, %281 ], [ %.0139, %279 ], [ %.0139, %277 ], [ %.0139, %276 ], [ %.0139, %257 ], [ %.0139, %247 ], [ %.0139, %244 ], [ %.0139, %243 ], [ %.0139, %233 ], [ %.0139, %223 ], [ %.0139, %222 ], [ %.0139, %212 ], [ %.0139, %202 ], [ %.0139, %201 ], [ %.0139, %191 ], [ %.0139, %188 ], [ %.0139, %187 ], [ %.0139, %184 ], [ %.0139, %183 ], [ %.0139, %167 ], [ %.0139, %157 ], [ %.0139, %154 ], [ %148, %146 ], [ %.0139, %144 ], [ %.0139, %142 ], [ %.0139, %130 ], [ %.0139, %120 ], [ %.0139, %116 ], [ %.0139, %115 ], [ %.0139, %111 ], [ %.0139, %110 ], [ %.0139, %100 ], [ %.0139, %90 ], [ %.0139, %89 ], [ %.0139, %77 ], [ %.0139, %67 ], [ %.0139, %64 ], [ %.0139, %62 ], [ %.0139, %41 ], [ %.0139, %31 ], [ %.0139, %28 ], [ %.0139, %25 ], [ %.0139, %22 ], [ %.0139, %19 ]
  %.0137.be = phi i32 [ %.0137, %18 ], [ %.0137, %302 ], [ %.0137, %301 ], [ %.0137, %300 ], [ %.0137, %293 ], [ %.0137, %292 ], [ %.0137, %290 ], [ %.0137, %287 ], [ %.0137, %281 ], [ %.0137, %279 ], [ %.0137, %277 ], [ %.0137, %276 ], [ %.0137, %257 ], [ %.0137, %247 ], [ %.0137, %244 ], [ %.0137, %243 ], [ %.0137, %233 ], [ %.0137, %223 ], [ %.0137, %222 ], [ %.0137, %212 ], [ %.0137, %202 ], [ %.0137, %201 ], [ %.0137, %191 ], [ %.0137, %188 ], [ %.0137, %187 ], [ %.0137, %184 ], [ %.0137, %183 ], [ %.0137, %167 ], [ %.0137, %157 ], [ %.0137, %154 ], [ %150, %146 ], [ %.0137, %144 ], [ %.0137, %142 ], [ %.0137, %130 ], [ %.0137, %120 ], [ %.0137, %116 ], [ %.0137, %115 ], [ %.0137, %111 ], [ %.0137, %110 ], [ %.0137, %100 ], [ %.0137, %90 ], [ %.0137, %89 ], [ %.0137, %77 ], [ %.0137, %67 ], [ %.0137, %64 ], [ %.0137, %62 ], [ %.0137, %41 ], [ %.0137, %31 ], [ %.0137, %28 ], [ %.0137, %25 ], [ %.0137, %22 ], [ %.0137, %19 ]
  %.0135.be = phi i32 [ %.0135, %18 ], [ %.0135, %302 ], [ %.0135, %301 ], [ %.0135, %300 ], [ %299, %293 ], [ %.0135, %292 ], [ %.0135, %290 ], [ %.0135, %287 ], [ %.0135, %281 ], [ %.0135, %279 ], [ %.0135, %277 ], [ %.0135, %276 ], [ %.0135, %257 ], [ %.0135, %247 ], [ %.0135, %244 ], [ %.0135, %243 ], [ %.0135, %233 ], [ %.0135, %223 ], [ %.0135, %222 ], [ %.0135, %212 ], [ %.0135, %202 ], [ %.0135, %201 ], [ %.0135, %191 ], [ %.0135, %188 ], [ %.0135, %187 ], [ %.0135, %184 ], [ %.0135, %183 ], [ %173, %167 ], [ %.0135, %157 ], [ %156, %154 ], [ %.0135, %146 ], [ %.0135, %144 ], [ %.0135, %142 ], [ %.0135, %130 ], [ %.0135, %120 ], [ %.0135, %116 ], [ %.0135, %115 ], [ %.0135, %111 ], [ %.0135, %110 ], [ %.0135, %100 ], [ %.0135, %90 ], [ %.0135, %89 ], [ %.0135, %77 ], [ %.0135, %67 ], [ %.0135, %64 ], [ %.0135, %62 ], [ %.0135, %41 ], [ %.0135, %31 ], [ %.0135, %28 ], [ %.0135, %25 ], [ %.0135, %22 ], [ %.0135, %19 ]
  %.0133.be = phi i32 [ %.0133, %18 ], [ %.0133, %302 ], [ %.0133, %301 ], [ %.0133, %300 ], [ %.0133, %293 ], [ %.0133, %292 ], [ %.0133, %290 ], [ %.0133, %287 ], [ %.0133, %281 ], [ %.0133, %279 ], [ %.0133, %277 ], [ %.0133, %276 ], [ %.0133, %257 ], [ %.0133, %247 ], [ %.0133, %244 ], [ %.0133, %243 ], [ %.0133, %233 ], [ %.0133, %223 ], [ %.0133, %222 ], [ %.0133, %212 ], [ %.0133, %202 ], [ %.0133, %201 ], [ %.0133, %191 ], [ %.0133, %188 ], [ %.0133, %187 ], [ %.0133, %184 ], [ %.0133, %183 ], [ %.0133, %167 ], [ %.0133, %157 ], [ %.0133, %154 ], [ %151, %146 ], [ %.0133, %144 ], [ %.0133, %142 ], [ %.0133, %130 ], [ %.0133, %120 ], [ %.0133, %116 ], [ %.0133, %115 ], [ %.0133, %111 ], [ %.0133, %110 ], [ %.0133, %100 ], [ %.0133, %90 ], [ %.0133, %89 ], [ %.0133, %77 ], [ %.0133, %67 ], [ %.0133, %64 ], [ %.0133, %62 ], [ %.0133, %41 ], [ %.0133, %31 ], [ %.0133, %28 ], [ %.0133, %25 ], [ %.0133, %22 ], [ %.0133, %19 ]
  %.0131.be = phi i32 [ %.0131, %18 ], [ %.0131, %302 ], [ %.0131, %301 ], [ %.0131, %300 ], [ %.0131, %293 ], [ %.0131, %292 ], [ %.0131, %290 ], [ %.0131, %287 ], [ %286, %281 ], [ %.0131, %279 ], [ %.0131, %277 ], [ %.0131, %276 ], [ %.0131, %257 ], [ %.0131, %247 ], [ %.0131, %244 ], [ %.0131, %243 ], [ %.0131, %233 ], [ %.0131, %223 ], [ %.0131, %222 ], [ %.0131, %212 ], [ %.0131, %202 ], [ %.0131, %201 ], [ %.0131, %191 ], [ %.0131, %188 ], [ %.0131, %187 ], [ %.0131, %184 ], [ %.0131, %183 ], [ %.0131, %167 ], [ %.0131, %157 ], [ %.0131, %154 ], [ %.0131, %146 ], [ %.0131, %144 ], [ %.0131, %142 ], [ %.0131, %130 ], [ %.0131, %120 ], [ %.0131, %116 ], [ %.0131, %115 ], [ %.0131, %111 ], [ %.0131, %110 ], [ %.0131, %100 ], [ %.0131, %90 ], [ %.0131, %89 ], [ %.0131, %77 ], [ %.0131, %67 ], [ %.0131, %64 ], [ %.0131, %62 ], [ %51, %41 ], [ %.0131, %31 ], [ %.0131, %28 ], [ 0, %25 ], [ %.0131, %22 ], [ %.0131, %19 ]
  %.0129.be = phi i32 [ %.0129, %18 ], [ %.0129, %302 ], [ %.0129, %301 ], [ %.0129, %300 ], [ %.0129, %293 ], [ %.0129, %292 ], [ %.0129, %290 ], [ %.0129, %287 ], [ %.0129, %281 ], [ %.0129, %279 ], [ %.0129, %277 ], [ %.0129, %276 ], [ %.0129, %257 ], [ %.0129, %247 ], [ %.0129, %244 ], [ %.0129, %243 ], [ %.0129, %233 ], [ %.0129, %223 ], [ %.0129, %222 ], [ %.0129, %212 ], [ %.0129, %202 ], [ %.neg, %201 ], [ %.0129, %191 ], [ %.0129, %188 ], [ %0, %187 ], [ %.0129, %184 ], [ %.0129, %183 ], [ %.0129, %167 ], [ %.0129, %157 ], [ %.0129, %154 ], [ %.0129, %146 ], [ %.0129, %144 ], [ %.0129, %142 ], [ %.0129, %130 ], [ %.0129, %120 ], [ %.0129, %116 ], [ %.0129, %115 ], [ %.0129, %111 ], [ %.0129, %110 ], [ %.0129, %100 ], [ %.0129, %90 ], [ %.0129, %89 ], [ %.0129, %77 ], [ %.0129, %67 ], [ %.0129, %64 ], [ %.0129, %62 ], [ %.0129, %41 ], [ %.0129, %31 ], [ %.0129, %28 ], [ %.0129, %25 ], [ %.0129, %22 ], [ %.0129, %19 ]
  %.0127.be = phi i32 [ %.0127, %18 ], [ %.0127, %302 ], [ %0, %301 ], [ %.0127, %300 ], [ %.0127, %293 ], [ %.0127, %292 ], [ %.0127, %290 ], [ %.0127, %287 ], [ %.0127, %281 ], [ %.0127, %279 ], [ %278, %277 ], [ %.0127, %276 ], [ %.0127, %257 ], [ %.0127, %247 ], [ %.0127, %244 ], [ %.0127, %243 ], [ %0, %233 ], [ %.0127, %223 ], [ %.0127, %222 ], [ %.0127, %212 ], [ %.0127, %202 ], [ %.0127, %201 ], [ %.0127, %191 ], [ %.0127, %188 ], [ %.0127, %187 ], [ %.0127, %184 ], [ %.0127, %183 ], [ %.0127, %167 ], [ %.0127, %157 ], [ %.0127, %154 ], [ %.0127, %146 ], [ %.0127, %144 ], [ %.0127, %142 ], [ %.0127, %130 ], [ %.0127, %120 ], [ %.0127, %116 ], [ %.0127, %115 ], [ %.0127, %111 ], [ %.0127, %110 ], [ %.0127, %100 ], [ %.0127, %90 ], [ %.0127, %89 ], [ %.0127, %77 ], [ %.0127, %67 ], [ %.0127, %64 ], [ %.0127, %62 ], [ %.0127, %41 ], [ %.0127, %31 ], [ %.0127, %28 ], [ %.0127, %25 ], [ %.0127, %22 ], [ %.0127, %19 ]
  %.0.be = phi i32 [ %.0, %18 ], [ 493493002, %302 ], [ -2017766360, %301 ], [ -2000147314, %300 ], [ 617773051, %293 ], [ -707383640, %292 ], [ 679744306, %290 ], [ -1371731839, %287 ], [ 1081070401, %281 ], [ 931652184, %279 ], [ 1219559826, %277 ], [ 2141765765, %276 ], [ %275, %257 ], [ %256, %247 ], [ %246, %244 ], [ 1219559826, %243 ], [ %242, %233 ], [ %232, %223 ], [ 931652184, %222 ], [ %221, %212 ], [ %211, %202 ], [ 157304615, %201 ], [ 1664307572, %191 ], [ %190, %188 ], [ 157304615, %187 ], [ %186, %184 ], [ 943648250, %183 ], [ %182, %167 ], [ %166, %157 ], [ 943648250, %154 ], [ %153, %146 ], [ 472171168, %144 ], [ %143, %142 ], [ %141, %130 ], [ %129, %120 ], [ 472171168, %116 ], [ -1042005367, %115 ], [ %114, %111 ], [ -627321749, %110 ], [ %109, %100 ], [ %99, %90 ], [ -676872420, %89 ], [ %88, %77 ], [ %76, %67 ], [ 82880646, %64 ], [ %63, %62 ], [ %61, %41 ], [ %40, %31 ], [ %30, %28 ], [ -627321749, %25 ], [ 931652184, %22 ], [ %21, %19 ]
  br label %18

19:                                               ; preds = %18
  %.0..0..0. = load volatile i32, i32* %7, align 4
  %20 = icmp eq i32 %.0..0..0., 1
  %21 = select i1 %20, i32 1458182994, i32 2003602855
  br label %.backedge

22:                                               ; preds = %18
  %23 = load i32, i32* %8, align 4
  store i32 %23, i32* %14, align 4
  %24 = load i32, i32* %9, align 4
  store i32 %24, i32* %17, align 4
  br label %.backedge

25:                                               ; preds = %18
  %26 = load i32, i32* %8, align 4
  %27 = load i32, i32* %9, align 4
  br label %.backedge

28:                                               ; preds = %18
  %29 = icmp slt i32 %.0149, %3
  %30 = select i1 %29, i32 -1715766876, i32 2070959433
  br label %.backedge

31:                                               ; preds = %18
  %32 = load i32, i32* @x.9, align 4
  %33 = load i32, i32* @y.10, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 1081070401, i32 2063851458
  br label %.backedge

41:                                               ; preds = %18
  %42 = and i32 %.0145, 1
  %43 = xor i32 %.0153, -1
  %44 = and i32 %.0153, 1
  %45 = xor i32 %42, -1
  %46 = and i32 %44, %45
  %47 = and i32 %42, %43
  %48 = or i32 %46, %47
  %49 = xor i32 %48, 1
  %50 = shl i32 %49, %.0149
  %51 = or i32 %.0131, %50
  %52 = icmp ne i32 %48, 0
  store i1 %52, i1* %6, align 1
  %53 = load i32, i32* @x.9, align 4
  %54 = load i32, i32* @y.10, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -208968276, i32 2063851458
  br label %.backedge

62:                                               ; preds = %18
  %.0..0..0.125 = load volatile i1, i1* %6, align 1
  %63 = select i1 %.0..0..0.125, i32 656301554, i32 82880646
  br label %.backedge

64:                                               ; preds = %18
  %65 = and i32 %.0145, 1
  %66 = add i32 %65, %.0151
  br label %.backedge

67:                                               ; preds = %18
  %68 = load i32, i32* @x.9, align 4
  %69 = load i32, i32* @y.10, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 -1371731839, i32 -792571222
  br label %.backedge

77:                                               ; preds = %18
  %78 = ashr i32 %.0145, 1
  %79 = ashr i32 %.0153, 1
  %80 = load i32, i32* @x.9, align 4
  %81 = load i32, i32* @y.10, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 1690006131, i32 -792571222
  br label %.backedge

89:                                               ; preds = %18
  br label %.backedge

90:                                               ; preds = %18
  %91 = load i32, i32* @x.9, align 4
  %92 = load i32, i32* @y.10, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 679744306, i32 -1153943010
  br label %.backedge

100:                                              ; preds = %18
  %.neg165 = add i32 %.0149, 1
  %101 = load i32, i32* @x.9, align 4
  %102 = load i32, i32* @y.10, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 1983052662, i32 -1153943010
  br label %.backedge

110:                                              ; preds = %18
  br label %.backedge

111:                                              ; preds = %18
  %112 = and i32 %.0151, 1
  %113 = icmp eq i32 %112, 0
  %114 = select i1 %113, i32 -411692046, i32 -1042005367
  br label %.backedge

115:                                              ; preds = %18
  call void @_Z4swapRiS_(i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9)
  br label %.backedge

116:                                              ; preds = %18
  %117 = load i32, i32* %8, align 4
  %118 = xor i32 %notmask, %.0131
  %.not163 = xor i32 %118, -1
  %119 = and i32 %117, %.not163
  br label %.backedge

120:                                              ; preds = %18
  %121 = load i32, i32* @x.9, align 4
  %122 = load i32, i32* @y.10, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 -707383640, i32 488490049
  br label %.backedge

130:                                              ; preds = %18
  %131 = and i32 %.0143, 1
  %132 = icmp eq i32 %131, 0
  store i1 %132, i1* %5, align 1
  %133 = load i32, i32* @x.9, align 4
  %134 = load i32, i32* @y.10, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 783017875, i32 488490049
  br label %.backedge

142:                                              ; preds = %18
  %.0..0..0.126 = load volatile i1, i1* %5, align 1
  %143 = select i1 %.0..0..0.126, i32 -2137860267, i32 132460556
  br label %.backedge

144:                                              ; preds = %18
  %145 = ashr i32 %.0143, 1
  %.neg161 = add i32 %.0141, 1
  br label %.backedge

146:                                              ; preds = %18
  %147 = load i32, i32* %8, align 4
  %148 = tail call i32 @_Z9remove_atii(i32 %.0141, i32 %147)
  %149 = load i32, i32* %9, align 4
  %150 = tail call i32 @_Z9remove_atii(i32 %.0141, i32 %149)
  %151 = tail call i32 @_Z9remove_atii(i32 %.0141, i32 %.0131)
  %152 = icmp eq i32 %.0131, 0
  %153 = select i1 %152, i32 -1202670994, i32 -1359713356
  br label %.backedge

154:                                              ; preds = %18
  %155 = xor i32 %.0137, %.0139
  %.not159 = add i32 %155, -1
  %156 = and i32 %.not159, %155
  br label %.backedge

157:                                              ; preds = %18
  %158 = load i32, i32* @x.9, align 4
  %159 = load i32, i32* @y.10, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 617773051, i32 -107463069
  br label %.backedge

167:                                              ; preds = %18
  %168 = xor i32 %.0137, %.0139
  %169 = and i32 %.0133, %.0139
  %170 = or i32 %169, %168
  %171 = sub i32 0, %.0133
  %172 = and i32 %.0133, %171
  %173 = xor i32 %170, %172
  %174 = load i32, i32* @x.9, align 4
  %175 = load i32, i32* @y.10, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 -1382274031, i32 -107463069
  br label %.backedge

183:                                              ; preds = %18
  br label %.backedge

184:                                              ; preds = %18
  %185 = and i8 %.0147, 1
  %.not = icmp eq i8 %185, 0
  %186 = select i1 %.not, i32 -143425766, i32 -2127579626
  br label %.backedge

187:                                              ; preds = %18
  tail call void @_Z9constructiiii(i32 %0, i32 %.0137, i32 %.0135, i32 %10)
  tail call void @_Z9constructiiii(i32 %12, i32 %.0135, i32 %.0139, i32 %10)
  br label %.backedge

188:                                              ; preds = %18
  %189 = icmp slt i32 %.0129, %12
  %190 = select i1 %189, i32 -1440258190, i32 1225051306
  br label %.backedge

191:                                              ; preds = %18
  %192 = sext i32 %.0129 to i64
  %193 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = tail call i32 @_Z9insert_atiii(i32 %.0141, i32 0, i32 %194)
  store i32 %195, i32* %193, align 4
  %196 = add i32 %.0129, %11
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = tail call i32 @_Z9insert_atiii(i32 %.0141, i32 1, i32 %199)
  store i32 %200, i32* %198, align 4
  br label %.backedge

201:                                              ; preds = %18
  %.neg = add i32 %.0129, 1
  br label %.backedge

202:                                              ; preds = %18
  %203 = load i32, i32* @x.9, align 4
  %204 = load i32, i32* @y.10, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 -2000147314, i32 -2042227674
  br label %.backedge

212:                                              ; preds = %18
  %213 = load i32, i32* @x.9, align 4
  %214 = load i32, i32* @y.10, align 4
  %215 = add i32 %213, -1
  %216 = mul i32 %215, %213
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %219, %218
  %221 = select i1 %220, i32 -1912845593, i32 -2042227674
  br label %.backedge

222:                                              ; preds = %18
  br label %.backedge

223:                                              ; preds = %18
  %224 = load i32, i32* @x.9, align 4
  %225 = load i32, i32* @y.10, align 4
  %226 = add i32 %224, -1
  %227 = mul i32 %226, %224
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %230, %229
  %232 = select i1 %231, i32 -2017766360, i32 521038611
  br label %.backedge

233:                                              ; preds = %18
  tail call void @_Z9constructiiii(i32 %0, i32 %.0139, i32 %.0135, i32 %10)
  tail call void @_Z9constructiiii(i32 %12, i32 %.0135, i32 %.0137, i32 %10)
  %234 = load i32, i32* @x.9, align 4
  %235 = load i32, i32* @y.10, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 -2040158882, i32 521038611
  br label %.backedge

243:                                              ; preds = %18
  br label %.backedge

244:                                              ; preds = %18
  %245 = icmp slt i32 %.0127, %12
  %246 = select i1 %245, i32 -1158444689, i32 352192153
  br label %.backedge

247:                                              ; preds = %18
  %248 = load i32, i32* @x.9, align 4
  %249 = load i32, i32* @y.10, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 493493002, i32 -432652842
  br label %.backedge

257:                                              ; preds = %18
  %258 = sext i32 %.0127 to i64
  %259 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %258
  %260 = load i32, i32* %259, align 4
  %261 = tail call i32 @_Z9insert_atiii(i32 %.0141, i32 1, i32 %260)
  store i32 %261, i32* %259, align 4
  %262 = add i32 %.0127, %11
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = tail call i32 @_Z9insert_atiii(i32 %.0141, i32 0, i32 %265)
  store i32 %266, i32* %264, align 4
  %267 = load i32, i32* @x.9, align 4
  %268 = load i32, i32* @y.10, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 -326071899, i32 -432652842
  br label %.backedge

276:                                              ; preds = %18
  br label %.backedge

277:                                              ; preds = %18
  %278 = add i32 %.0127, 1
  br label %.backedge

279:                                              ; preds = %18
  br label %.backedge

280:                                              ; preds = %18
  ret void

281:                                              ; preds = %18
  %282 = xor i32 %.0145, %.0153
  %283 = and i32 %282, 1
  %284 = xor i32 %283, 1
  %285 = shl i32 %284, %.0149
  %286 = or i32 %.0131, %285
  br label %.backedge

287:                                              ; preds = %18
  %288 = ashr i32 %.0145, 1
  %289 = ashr i32 %.0153, 1
  br label %.backedge

290:                                              ; preds = %18
  %291 = add i32 %.0149, 1
  br label %.backedge

292:                                              ; preds = %18
  br label %.backedge

293:                                              ; preds = %18
  %294 = xor i32 %.0137, %.0139
  %295 = and i32 %.0133, %.0139
  %296 = or i32 %295, %294
  %297 = sub i32 0, %.0133
  %298 = and i32 %.0133, %297
  %299 = xor i32 %296, %298
  br label %.backedge

300:                                              ; preds = %18
  br label %.backedge

301:                                              ; preds = %18
  tail call void @_Z9constructiiii(i32 %0, i32 %.0139, i32 %.0135, i32 %10)
  tail call void @_Z9constructiiii(i32 %12, i32 %.0135, i32 %.0137, i32 %10)
  br label %.backedge

302:                                              ; preds = %18
  %303 = sext i32 %.0127 to i64
  %304 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = tail call i32 @_Z9insert_atiii(i32 %.0141, i32 1, i32 %305)
  store i32 %306, i32* %304, align 4
  %307 = add i32 %.0127, %11
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = tail call i32 @_Z9insert_atiii(i32 %.0141, i32 0, i32 %310)
  store i32 %311, i32* %309, align 4
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %5 = load i32, i32* %2, align 4
  %6 = load i32, i32* %3, align 4
  %7 = xor i32 %6, %5
  br label %8

8:                                                ; preds = %.backedge, %0
  %.015 = phi i32 [ %7, %0 ], [ %.015.be, %.backedge ]
  %.013 = phi i32 [ 0, %0 ], [ %.013.be, %.backedge ]
  %.011 = phi i32 [ undef, %0 ], [ %.011.be, %.backedge ]
  %.0 = phi i32 [ -1351259559, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1351259559, label %9
    i32 105342054, label %11
    i32 1136727532, label %15
    i32 -299085275, label %19
    i32 -456600624, label %29
    i32 1400987997, label %39
    i32 -1742202129, label %40
    i32 -1335224253, label %44
    i32 -227793946, label %49
    i32 1158533517, label %54
    i32 1841808386, label %56
    i32 -917626626, label %61
    i32 -1368765110, label %62
  ]

.backedge:                                        ; preds = %8, %62, %56, %54, %49, %44, %40, %39, %29, %19, %15, %11, %9
  %.015.be = phi i32 [ %.015, %8 ], [ %.015, %62 ], [ %.015, %56 ], [ %.015, %54 ], [ %.015, %49 ], [ %.015, %44 ], [ %.015, %40 ], [ %.015, %39 ], [ %.015, %29 ], [ %.015, %19 ], [ %.015, %15 ], [ %14, %11 ], [ %.015, %9 ]
  %.013.be = phi i32 [ %.013, %8 ], [ %.013, %62 ], [ %.013, %56 ], [ %.013, %54 ], [ %.013, %49 ], [ %.013, %44 ], [ %.013, %40 ], [ %.013, %39 ], [ %.013, %29 ], [ %.013, %19 ], [ %.013, %15 ], [ %13, %11 ], [ %.013, %9 ]
  %.011.be = phi i32 [ %.011, %8 ], [ %.011, %62 ], [ %.011, %56 ], [ %55, %54 ], [ %.011, %49 ], [ %.011, %44 ], [ 0, %40 ], [ %.011, %39 ], [ %.011, %29 ], [ %.011, %19 ], [ %.011, %15 ], [ %.011, %11 ], [ %.011, %9 ]
  %.0.be = phi i32 [ %.0, %8 ], [ -456600624, %62 ], [ -917626626, %56 ], [ -1335224253, %54 ], [ 1158533517, %49 ], [ %48, %44 ], [ -1335224253, %40 ], [ -917626626, %39 ], [ %38, %29 ], [ %28, %19 ], [ %18, %15 ], [ -1351259559, %11 ], [ %10, %9 ]
  br label %8

9:                                                ; preds = %8
  %.not = icmp eq i32 %.015, 0
  %10 = select i1 %.not, i32 1136727532, i32 105342054
  br label %.backedge

11:                                               ; preds = %8
  %12 = and i32 %.015, 1
  %13 = add i32 %.013, %12
  %14 = ashr i32 %.015, 1
  br label %.backedge

15:                                               ; preds = %8
  %16 = and i32 %.013, 1
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i32 -299085275, i32 -1742202129
  br label %.backedge

19:                                               ; preds = %8
  %20 = load i32, i32* @x.11, align 4
  %21 = load i32, i32* @y.12, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -456600624, i32 -1368765110
  br label %.backedge

29:                                               ; preds = %8
  %puts20 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.2, i64 0, i64 0))
  %30 = load i32, i32* @x.11, align 4
  %31 = load i32, i32* @y.12, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 1400987997, i32 -1368765110
  br label %.backedge

39:                                               ; preds = %8
  br label %.backedge

40:                                               ; preds = %8
  %41 = load i32, i32* %2, align 4
  %42 = load i32, i32* %3, align 4
  %43 = load i32, i32* %1, align 4
  call void @_Z9constructiiii(i32 0, i32 %41, i32 %42, i32 %43)
  %puts19 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0))
  br label %.backedge

44:                                               ; preds = %8
  %45 = load i32, i32* %1, align 4
  %notmask = shl nsw i32 -1, %45
  %46 = xor i32 %notmask, -1
  %47 = icmp slt i32 %.011, %46
  %48 = select i1 %47, i32 -227793946, i32 1841808386
  br label %.backedge

49:                                               ; preds = %8
  %50 = sext i32 %.011 to i64
  %51 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %52)
  br label %.backedge

54:                                               ; preds = %8
  %55 = add i32 %.011, 1
  br label %.backedge

56:                                               ; preds = %8
  %57 = sext i32 %.011 to i64
  %58 = getelementptr inbounds [131072 x i32], [131072 x i32]* @result, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 %59)
  br label %.backedge

61:                                               ; preds = %8
  ret i32 0

62:                                               ; preds = %8
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.2, i64 0, i64 0))
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #4

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
