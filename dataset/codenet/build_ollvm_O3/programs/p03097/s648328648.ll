; ModuleID = 'build_ollvm/programs/p03097/s648328648.ll'
source_filename = "Project_CodeNet_C++1400/p03097/s648328648.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"struct.std::pair" = type { i32, i32 }

$_ZSt9make_pairIRiiESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_ = comdat any

$_ZNSt4pairIiiEaSEOS0_ = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairIiiEC2IRiivEEOT_OT0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@a = global i32 0, align 4
@b = global i32 0, align 4
@cnt = local_unnamed_addr global i32 0, align 4
@len = local_unnamed_addr global i32 0, align 4
@ans = local_unnamed_addr global [150007 x i32] zeroinitializer, align 16
@ans1 = local_unnamed_addr global [150007 x i32] zeroinitializer, align 16
@que = global [150007 x %"struct.std::pair"] zeroinitializer, align 16
@.str = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s648328648.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0
@x.15 = common local_unnamed_addr global i32 0
@y.16 = common local_unnamed_addr global i32 0
@x.17 = common local_unnamed_addr global i32 0
@y.18 = common local_unnamed_addr global i32 0
@str.2 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@str.3 = private unnamed_addr constant [3 x i8] c"NO\00", align 1

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %tmpcast170 = bitcast i64* %10 to %"struct.std::pair"*
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %tmpcast = bitcast i64* %13 to %"struct.std::pair"*
  %14 = alloca i32, align 4
  %15 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull @a, i32* nonnull @b)
  %16 = load i32, i32* @a, align 4
  %17 = load i32, i32* @b, align 4
  %18 = xor i32 %17, %16
  store i32 %18, i32* @b, align 4
  store i32 0, i32* @cnt, align 4
  br label %19

19:                                               ; preds = %.backedge, %0
  %.0146 = phi i32 [ undef, %0 ], [ %.0146.be, %.backedge ]
  %.0144 = phi i32 [ 0, %0 ], [ %.0144.be, %.backedge ]
  %.0140 = phi i32 [ undef, %0 ], [ %.0140.be, %.backedge ]
  %.0138 = phi i32 [ undef, %0 ], [ %.0138.be, %.backedge ]
  %.0136 = phi i32 [ undef, %0 ], [ %.0136.be, %.backedge ]
  %.0134 = phi i32 [ undef, %0 ], [ %.0134.be, %.backedge ]
  %.0132 = phi i32 [ undef, %0 ], [ %.0132.be, %.backedge ]
  %.0130 = phi i32 [ undef, %0 ], [ %.0130.be, %.backedge ]
  %.0128 = phi i32 [ undef, %0 ], [ %.0128.be, %.backedge ]
  %.0126 = phi i32 [ undef, %0 ], [ %.0126.be, %.backedge ]
  %.0124 = phi i32 [ undef, %0 ], [ %.0124.be, %.backedge ]
  %.0122 = phi i32 [ undef, %0 ], [ %.0122.be, %.backedge ]
  %.0 = phi i32 [ -36826638, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -36826638, label %20
    i32 -1596320515, label %24
    i32 -1911701621, label %29
    i32 -662796196, label %39
    i32 150829647, label %51
    i32 1163775610, label %52
    i32 -1069658975, label %62
    i32 -114864771, label %72
    i32 603037631, label %73
    i32 -1078930527, label %74
    i32 1776172065, label %84
    i32 -1695258372, label %97
    i32 570507731, label %99
    i32 -592466453, label %109
    i32 309696049, label %119
    i32 1858998659, label %120
    i32 1728398776, label %130
    i32 913548757, label %140
    i32 43461388, label %141
    i32 -921979408, label %151
    i32 590036305, label %164
    i32 446436267, label %166
    i32 -726990606, label %176
    i32 771262891, label %190
    i32 889800367, label %192
    i32 885799989, label %198
    i32 -1366692860, label %208
    i32 1457374435, label %218
    i32 -1978418294, label %219
    i32 1524050109, label %222
    i32 -1139412898, label %223
    i32 -514388063, label %233
    i32 660103088, label %246
    i32 -401167506, label %248
    i32 -1501762471, label %258
    i32 -259466399, label %273
    i32 270702831, label %275
    i32 -524672350, label %285
    i32 -1008286284, label %301
    i32 -1280374967, label %302
    i32 515630150, label %303
    i32 -1041938329, label %306
    i32 -355761106, label %316
    i32 1360273410, label %328
    i32 1441573831, label %329
    i32 2017548751, label %332
    i32 -1425821939, label %342
    i32 1366680583, label %356
    i32 -1603888523, label %358
    i32 53414702, label %368
    i32 400275215, label %371
    i32 -1047546526, label %374
    i32 1614640182, label %384
    i32 1722180537, label %410
    i32 13401616, label %411
    i32 1311284992, label %421
    i32 640292133, label %433
    i32 1382591600, label %435
    i32 -1777305440, label %453
    i32 -146904663, label %463
    i32 240586790, label %489
    i32 -1206048200, label %490
    i32 348745598, label %491
    i32 1025772864, label %501
    i32 -783843865, label %511
    i32 -31765527, label %512
    i32 -1144173065, label %513
    i32 405687719, label %514
    i32 734471081, label %517
    i32 675022889, label %522
    i32 -1122110937, label %523
    i32 1605307687, label %524
    i32 -407303587, label %534
    i32 -1898152721, label %549
    i32 1338984650, label %550
    i32 -639685830, label %553
    i32 -1940985809, label %557
    i32 -970888087, label %567
    i32 903646708, label %577
    i32 278678408, label %587
    i32 -1795614920, label %597
    i32 2067152245, label %598
    i32 287228226, label %608
    i32 -923447196, label %619
    i32 -1617843865, label %620
    i32 -1349804787, label %621
    i32 -1364913691, label %624
    i32 1505055623, label %629
    i32 -1368951911, label %639
    i32 -1414292905, label %650
    i32 -634275251, label %651
    i32 1140883004, label %652
    i32 1130184228, label %653
    i32 243804433, label %663
    i32 519273181, label %673
    i32 1073030222, label %674
    i32 -1200231912, label %677
    i32 1780782067, label %687
    i32 1831372754, label %703
    i32 58669349, label %704
    i32 874415440, label %714
    i32 -705382929, label %724
    i32 -1065866918, label %725
    i32 1055729371, label %735
    i32 626600676, label %745
    i32 -595998531, label %746
    i32 2101659843, label %756
    i32 -1856461115, label %766
    i32 -923073895, label %767
    i32 -416463623, label %769
    i32 252989456, label %770
    i32 -1325231547, label %771
    i32 85457794, label %772
    i32 -1009418758, label %773
    i32 -997040793, label %774
    i32 647178873, label %775
    i32 -1482059843, label %776
    i32 1491952420, label %777
    i32 334782792, label %778
    i32 938897123, label %785
    i32 1813554976, label %788
    i32 -1917535762, label %789
    i32 -1339393973, label %806
    i32 -394736122, label %807
    i32 -1860477098, label %825
    i32 -1806372199, label %826
    i32 1397285688, label %831
    i32 -190910191, label %832
    i32 1799476508, label %834
    i32 -1389907205, label %836
    i32 -1257459614, label %837
    i32 -875568372, label %844
    i32 -495670, label %846
    i32 453463890, label %847
  ]

.backedge:                                        ; preds = %19, %847, %846, %844, %837, %836, %834, %832, %831, %826, %825, %807, %806, %789, %788, %785, %778, %777, %776, %775, %774, %773, %772, %771, %770, %769, %767, %756, %746, %745, %735, %725, %724, %714, %704, %703, %687, %677, %674, %673, %663, %653, %652, %651, %650, %639, %629, %624, %621, %620, %619, %608, %598, %597, %587, %577, %567, %557, %553, %550, %549, %534, %524, %523, %522, %517, %514, %513, %512, %511, %501, %491, %490, %489, %463, %453, %435, %433, %421, %411, %410, %384, %374, %371, %368, %358, %356, %342, %332, %329, %328, %316, %306, %303, %302, %301, %285, %275, %273, %258, %248, %246, %233, %223, %222, %219, %218, %208, %198, %192, %190, %176, %166, %164, %151, %141, %140, %130, %120, %119, %109, %99, %97, %84, %74, %73, %72, %62, %52, %51, %39, %29, %24, %20
  %.0146.be = phi i32 [ %.0146, %19 ], [ %.0146, %847 ], [ %.0146, %846 ], [ %.0146, %844 ], [ %.0146, %837 ], [ %.0146, %836 ], [ %.0146, %834 ], [ %.0146, %832 ], [ %.0146, %831 ], [ %.neg, %826 ], [ %.0146, %825 ], [ %.0146, %807 ], [ %.0146, %806 ], [ %.0146, %789 ], [ %.0146, %788 ], [ 2, %785 ], [ %.0146, %778 ], [ %.0146, %777 ], [ %.0146, %776 ], [ %.0146, %775 ], [ %.0146, %774 ], [ %.0146, %773 ], [ %.0146, %772 ], [ %.0146, %771 ], [ %.0146, %770 ], [ %.0146, %769 ], [ %.0146, %767 ], [ %.0146, %756 ], [ %.0146, %746 ], [ %.0146, %745 ], [ %.0146, %735 ], [ %.0146, %725 ], [ %.0146, %724 ], [ %.0146, %714 ], [ %.0146, %704 ], [ %.0146, %703 ], [ %.0146, %687 ], [ %.0146, %677 ], [ %.0146, %674 ], [ %.0146, %673 ], [ %.0146, %663 ], [ %.0146, %653 ], [ %.0146, %652 ], [ %.0146, %651 ], [ %.0146, %650 ], [ %.0146, %639 ], [ %.0146, %629 ], [ %.0146, %624 ], [ %.0146, %621 ], [ %.0146, %620 ], [ %.0146, %619 ], [ %.0146, %608 ], [ %.0146, %598 ], [ %.0146, %597 ], [ %.0146, %587 ], [ %.0146, %577 ], [ %.0146, %567 ], [ %.0146, %557 ], [ %.0146, %553 ], [ %.0146, %550 ], [ %.0146, %549 ], [ %539, %534 ], [ %.0146, %524 ], [ %.0146, %523 ], [ %.0146, %522 ], [ %.0146, %517 ], [ %.0146, %514 ], [ %.0146, %513 ], [ %.0146, %512 ], [ %.0146, %511 ], [ %.0146, %501 ], [ %.0146, %491 ], [ %.0146, %490 ], [ %.0146, %489 ], [ %.0146, %463 ], [ %.0146, %453 ], [ %.0146, %435 ], [ %.0146, %433 ], [ %.0146, %421 ], [ %.0146, %411 ], [ %.0146, %410 ], [ %.0146, %384 ], [ %.0146, %374 ], [ %.0146, %371 ], [ %.0146, %368 ], [ %367, %358 ], [ %.0146, %356 ], [ %.0146, %342 ], [ %.0146, %332 ], [ %.0146, %329 ], [ %.0146, %328 ], [ 2, %316 ], [ %.0146, %306 ], [ %.0146, %303 ], [ %.0146, %302 ], [ %.0146, %301 ], [ %.0146, %285 ], [ %.0146, %275 ], [ %.0146, %273 ], [ %.0146, %258 ], [ %.0146, %248 ], [ %.0146, %246 ], [ %.0146, %233 ], [ %.0146, %223 ], [ %.0146, %222 ], [ %.0146, %219 ], [ %.0146, %218 ], [ %.0146, %208 ], [ %.0146, %198 ], [ %.0146, %192 ], [ %.0146, %190 ], [ %.0146, %176 ], [ %.0146, %166 ], [ %.0146, %164 ], [ %.0146, %151 ], [ %.0146, %141 ], [ %.0146, %140 ], [ %.0146, %130 ], [ %.0146, %120 ], [ %.0146, %119 ], [ %.0146, %109 ], [ %.0146, %99 ], [ %.0146, %97 ], [ %.0146, %84 ], [ %.0146, %74 ], [ %.0146, %73 ], [ %.0146, %72 ], [ %.0146, %62 ], [ %.0146, %52 ], [ %.0146, %51 ], [ %.0146, %39 ], [ %.0146, %29 ], [ %.0146, %24 ], [ %.0146, %20 ]
  %.0144.be = phi i32 [ %.0144, %19 ], [ %.0144, %847 ], [ %.0144, %846 ], [ %.0144, %844 ], [ %.0144, %837 ], [ %.0144, %836 ], [ %.0144, %834 ], [ %.0144, %832 ], [ %.0144, %831 ], [ %.0144, %826 ], [ %.0144, %825 ], [ %.0144, %807 ], [ %.0144, %806 ], [ %.0144, %789 ], [ %.0144, %788 ], [ %.0144, %785 ], [ %.0144, %778 ], [ %.0144, %777 ], [ %.0144, %776 ], [ %.0144, %775 ], [ %.0144, %774 ], [ %.0144, %773 ], [ %.0144, %772 ], [ %.0144, %771 ], [ %.0144, %770 ], [ %.0144, %769 ], [ %.0144, %767 ], [ %.0144, %756 ], [ %.0144, %746 ], [ %.0144, %745 ], [ %.0144, %735 ], [ %.0144, %725 ], [ %.0144, %724 ], [ %.0144, %714 ], [ %.0144, %704 ], [ %.0144, %703 ], [ %.0144, %687 ], [ %.0144, %677 ], [ %.0144, %674 ], [ %.0144, %673 ], [ %.0144, %663 ], [ %.0144, %653 ], [ %.0144, %652 ], [ %.0144, %651 ], [ %.0144, %650 ], [ %.0144, %639 ], [ %.0144, %629 ], [ %.0144, %624 ], [ %.0144, %621 ], [ %.0144, %620 ], [ %.0144, %619 ], [ %.0144, %608 ], [ %.0144, %598 ], [ %.0144, %597 ], [ %.0144, %587 ], [ %.0144, %577 ], [ %.0144, %567 ], [ %.0144, %557 ], [ %.0144, %553 ], [ %.0144, %550 ], [ %.0144, %549 ], [ %.0144, %534 ], [ %.0144, %524 ], [ %.0144, %523 ], [ %.0144, %522 ], [ %.0144, %517 ], [ %.0144, %514 ], [ %.0144, %513 ], [ %.0144, %512 ], [ %.0144, %511 ], [ %.0144, %501 ], [ %.0144, %491 ], [ %.0144, %490 ], [ %.0144, %489 ], [ %.0144, %463 ], [ %.0144, %453 ], [ %.0144, %435 ], [ %.0144, %433 ], [ %.0144, %421 ], [ %.0144, %411 ], [ %.0144, %410 ], [ %.0144, %384 ], [ %.0144, %374 ], [ %.0144, %371 ], [ %.0144, %368 ], [ %.0144, %358 ], [ %.0144, %356 ], [ %.0144, %342 ], [ %.0144, %332 ], [ %.0144, %329 ], [ %.0144, %328 ], [ %.0144, %316 ], [ %.0144, %306 ], [ %.0144, %303 ], [ %.0144, %302 ], [ %.0144, %301 ], [ %.0144, %285 ], [ %.0144, %275 ], [ %.0144, %273 ], [ %.0144, %258 ], [ %.0144, %248 ], [ %.0144, %246 ], [ %.0144, %233 ], [ %.0144, %223 ], [ %.0144, %222 ], [ %.0144, %219 ], [ %.0144, %218 ], [ %.0144, %208 ], [ %.0144, %198 ], [ %.0144, %192 ], [ %.0144, %190 ], [ %.0144, %176 ], [ %.0144, %166 ], [ %.0144, %164 ], [ %.0144, %151 ], [ %.0144, %141 ], [ %.0144, %140 ], [ %.0144, %130 ], [ %.0144, %120 ], [ %.0144, %119 ], [ %.0144, %109 ], [ %.0144, %99 ], [ %.0144, %97 ], [ %.0144, %84 ], [ %.0144, %74 ], [ %.neg175, %73 ], [ %.0144, %72 ], [ %.0144, %62 ], [ %.0144, %52 ], [ %.0144, %51 ], [ %.0144, %39 ], [ %.0144, %29 ], [ %.0144, %24 ], [ %.0144, %20 ]
  %.0140.be = phi i32 [ %.0140, %19 ], [ %.0140, %847 ], [ %.0140, %846 ], [ %.0140, %844 ], [ %.0140, %837 ], [ %.0140, %836 ], [ %.0140, %834 ], [ %.0140, %832 ], [ %.0140, %831 ], [ %.0140, %826 ], [ %.0140, %825 ], [ %.0140, %807 ], [ %.0140, %806 ], [ %.0140, %789 ], [ %.0140, %788 ], [ %.0140, %785 ], [ %.0140, %778 ], [ %.0140, %777 ], [ %.0140, %776 ], [ %.0140, %775 ], [ %.0140, %774 ], [ %.0140, %773 ], [ %.0140, %772 ], [ %.0140, %771 ], [ %.0140, %770 ], [ %.0140, %769 ], [ %.0140, %767 ], [ %.0140, %756 ], [ %.0140, %746 ], [ %.0140, %745 ], [ %.0140, %735 ], [ %.0140, %725 ], [ %.0140, %724 ], [ %.0140, %714 ], [ %.0140, %704 ], [ %.0140, %703 ], [ %.0140, %687 ], [ %.0140, %677 ], [ %.0140, %674 ], [ %.0140, %673 ], [ %.0140, %663 ], [ %.0140, %653 ], [ %.0140, %652 ], [ %.0140, %651 ], [ %.0140, %650 ], [ %.0140, %639 ], [ %.0140, %629 ], [ %.0140, %624 ], [ %.0140, %621 ], [ %.0140, %620 ], [ %.0140, %619 ], [ %.0140, %608 ], [ %.0140, %598 ], [ %.0140, %597 ], [ %.0140, %587 ], [ %.0140, %577 ], [ %.0140, %567 ], [ %.0140, %557 ], [ %.0140, %553 ], [ %.0140, %550 ], [ %.0140, %549 ], [ %.0140, %534 ], [ %.0140, %524 ], [ %.0140, %523 ], [ %.0140, %522 ], [ %.0140, %517 ], [ %.0140, %514 ], [ %.0140, %513 ], [ %.0140, %512 ], [ %.0140, %511 ], [ %.0140, %501 ], [ %.0140, %491 ], [ %.0140, %490 ], [ %.0140, %489 ], [ %.0140, %463 ], [ %.0140, %453 ], [ %.0140, %435 ], [ %.0140, %433 ], [ %.0140, %421 ], [ %.0140, %411 ], [ %.0140, %410 ], [ %.0140, %384 ], [ %.0140, %374 ], [ %.0140, %371 ], [ %.0140, %368 ], [ %365, %358 ], [ %.0140, %356 ], [ %.0140, %342 ], [ %.0140, %332 ], [ %.0140, %329 ], [ %.0140, %328 ], [ %.0140, %316 ], [ %.0140, %306 ], [ %.0140, %303 ], [ %.0140, %302 ], [ %.0140, %301 ], [ %.0140, %285 ], [ %.0140, %275 ], [ %.0140, %273 ], [ %.0140, %258 ], [ %.0140, %248 ], [ %.0140, %246 ], [ %.0140, %233 ], [ %.0140, %223 ], [ %.0140, %222 ], [ %.0140, %219 ], [ %.0140, %218 ], [ %.0140, %208 ], [ %.0140, %198 ], [ %.0140, %192 ], [ %.0140, %190 ], [ %.0140, %176 ], [ %.0140, %166 ], [ %.0140, %164 ], [ %.0140, %151 ], [ %.0140, %141 ], [ %.0140, %140 ], [ %.0140, %130 ], [ %.0140, %120 ], [ %.0140, %119 ], [ %.0140, %109 ], [ %.0140, %99 ], [ %.0140, %97 ], [ %.0140, %84 ], [ %.0140, %74 ], [ %.0140, %73 ], [ %.0140, %72 ], [ %.0140, %62 ], [ %.0140, %52 ], [ %.0140, %51 ], [ %.0140, %39 ], [ %.0140, %29 ], [ %.0140, %24 ], [ %.0140, %20 ]
  %.0138.be = phi i32 [ %.0138, %19 ], [ %.0138, %847 ], [ %.0138, %846 ], [ %.0138, %844 ], [ %.0138, %837 ], [ %.0138, %836 ], [ %.0138, %834 ], [ %.0138, %832 ], [ %.0138, %831 ], [ %.0138, %826 ], [ %.0138, %825 ], [ %.0138, %807 ], [ %.0138, %806 ], [ %.0138, %789 ], [ %.0138, %788 ], [ %.0138, %785 ], [ %.0138, %778 ], [ %.0138, %777 ], [ %.0138, %776 ], [ %.0138, %775 ], [ %.0138, %774 ], [ %.0138, %773 ], [ %.0138, %772 ], [ %.0138, %771 ], [ %.0138, %770 ], [ %.0138, %769 ], [ %.0138, %767 ], [ %.0138, %756 ], [ %.0138, %746 ], [ %.0138, %745 ], [ %.0138, %735 ], [ %.0138, %725 ], [ %.0138, %724 ], [ %.0138, %714 ], [ %.0138, %704 ], [ %.0138, %703 ], [ %.0138, %687 ], [ %.0138, %677 ], [ %.0138, %674 ], [ %.0138, %673 ], [ %.0138, %663 ], [ %.0138, %653 ], [ %.0138, %652 ], [ %.0138, %651 ], [ %.0138, %650 ], [ %.0138, %639 ], [ %.0138, %629 ], [ %.0138, %624 ], [ %.0138, %621 ], [ %.0138, %620 ], [ %.0138, %619 ], [ %.0138, %608 ], [ %.0138, %598 ], [ %.0138, %597 ], [ %.0138, %587 ], [ %.0138, %577 ], [ %.0138, %567 ], [ %.0138, %557 ], [ %.0138, %553 ], [ %.0138, %550 ], [ %.0138, %549 ], [ %.0138, %534 ], [ %.0138, %524 ], [ %.0138, %523 ], [ %.0138, %522 ], [ %.0138, %517 ], [ %.0138, %514 ], [ %.0138, %513 ], [ %.0138, %512 ], [ %.0138, %511 ], [ %.0138, %501 ], [ %.0138, %491 ], [ %.0138, %490 ], [ %.0138, %489 ], [ %.0138, %463 ], [ %.0138, %453 ], [ %.0138, %435 ], [ %.0138, %433 ], [ %.0138, %421 ], [ %.0138, %411 ], [ %.0138, %410 ], [ %.0138, %384 ], [ %.0138, %374 ], [ %.0138, %371 ], [ %.0138, %368 ], [ %366, %358 ], [ %.0138, %356 ], [ %.0138, %342 ], [ %.0138, %332 ], [ %.0138, %329 ], [ %.0138, %328 ], [ %.0138, %316 ], [ %.0138, %306 ], [ %.0138, %303 ], [ %.0138, %302 ], [ %.0138, %301 ], [ %.0138, %285 ], [ %.0138, %275 ], [ %.0138, %273 ], [ %.0138, %258 ], [ %.0138, %248 ], [ %.0138, %246 ], [ %.0138, %233 ], [ %.0138, %223 ], [ %.0138, %222 ], [ %.0138, %219 ], [ %.0138, %218 ], [ %.0138, %208 ], [ %.0138, %198 ], [ %.0138, %192 ], [ %.0138, %190 ], [ %.0138, %176 ], [ %.0138, %166 ], [ %.0138, %164 ], [ %.0138, %151 ], [ %.0138, %141 ], [ %.0138, %140 ], [ %.0138, %130 ], [ %.0138, %120 ], [ %.0138, %119 ], [ %.0138, %109 ], [ %.0138, %99 ], [ %.0138, %97 ], [ %.0138, %84 ], [ %.0138, %74 ], [ %.0138, %73 ], [ %.0138, %72 ], [ %.0138, %62 ], [ %.0138, %52 ], [ %.0138, %51 ], [ %.0138, %39 ], [ %.0138, %29 ], [ %.0138, %24 ], [ %.0138, %20 ]
  %.0136.be = phi i32 [ %.0136, %19 ], [ %.0136, %847 ], [ %.0136, %846 ], [ %.0136, %844 ], [ %.0136, %837 ], [ %.0136, %836 ], [ %.0136, %834 ], [ %.0136, %832 ], [ %.0136, %831 ], [ %.0136, %826 ], [ %.0136, %825 ], [ %822, %807 ], [ %.0136, %806 ], [ %.neg150, %789 ], [ %.0136, %788 ], [ %.0136, %785 ], [ %.0136, %778 ], [ %.0136, %777 ], [ %.0136, %776 ], [ %.0136, %775 ], [ %.0136, %774 ], [ %.0136, %773 ], [ %.0136, %772 ], [ %.0136, %771 ], [ %.0136, %770 ], [ %.0136, %769 ], [ %.0136, %767 ], [ %.0136, %756 ], [ %.0136, %746 ], [ %.0136, %745 ], [ %.0136, %735 ], [ %.0136, %725 ], [ %.0136, %724 ], [ %.0136, %714 ], [ %.0136, %704 ], [ %.0136, %703 ], [ %.0136, %687 ], [ %.0136, %677 ], [ %.0136, %674 ], [ %.0136, %673 ], [ %.0136, %663 ], [ %.0136, %653 ], [ %.0136, %652 ], [ %.0136, %651 ], [ %.0136, %650 ], [ %.0136, %639 ], [ %.0136, %629 ], [ %.0136, %624 ], [ %.0136, %621 ], [ %.0136, %620 ], [ %.0136, %619 ], [ %.0136, %608 ], [ %.0136, %598 ], [ %.0136, %597 ], [ %.0136, %587 ], [ %.0136, %577 ], [ %.0136, %567 ], [ %.0136, %557 ], [ %.0136, %553 ], [ %.0136, %550 ], [ %.0136, %549 ], [ %.0136, %534 ], [ %.0136, %524 ], [ %.0136, %523 ], [ %.0136, %522 ], [ %.0136, %517 ], [ %.0136, %514 ], [ %.0136, %513 ], [ %.0136, %512 ], [ %.0136, %511 ], [ %.0136, %501 ], [ %.0136, %491 ], [ %.0136, %490 ], [ %.0136, %489 ], [ %.neg163, %463 ], [ %.0136, %453 ], [ %450, %435 ], [ %.0136, %433 ], [ %.0136, %421 ], [ %.0136, %411 ], [ %.0136, %410 ], [ %.neg166, %384 ], [ %.0136, %374 ], [ %.0136, %371 ], [ %.0136, %368 ], [ 0, %358 ], [ %.0136, %356 ], [ %.0136, %342 ], [ %.0136, %332 ], [ %.0136, %329 ], [ %.0136, %328 ], [ %.0136, %316 ], [ %.0136, %306 ], [ %.0136, %303 ], [ %.0136, %302 ], [ %.0136, %301 ], [ %.0136, %285 ], [ %.0136, %275 ], [ %.0136, %273 ], [ %.0136, %258 ], [ %.0136, %248 ], [ %.0136, %246 ], [ %.0136, %233 ], [ %.0136, %223 ], [ %.0136, %222 ], [ %.0136, %219 ], [ %.0136, %218 ], [ %.0136, %208 ], [ %.0136, %198 ], [ %.0136, %192 ], [ %.0136, %190 ], [ %.0136, %176 ], [ %.0136, %166 ], [ %.0136, %164 ], [ %.0136, %151 ], [ %.0136, %141 ], [ %.0136, %140 ], [ %.0136, %130 ], [ %.0136, %120 ], [ %.0136, %119 ], [ %.0136, %109 ], [ %.0136, %99 ], [ %.0136, %97 ], [ %.0136, %84 ], [ %.0136, %74 ], [ %.0136, %73 ], [ %.0136, %72 ], [ %.0136, %62 ], [ %.0136, %52 ], [ %.0136, %51 ], [ %.0136, %39 ], [ %.0136, %29 ], [ %.0136, %24 ], [ %.0136, %20 ]
  %.0134.be = phi i32 [ %.0134, %19 ], [ %.0134, %847 ], [ %.0134, %846 ], [ %.0134, %844 ], [ %.0134, %837 ], [ %.0134, %836 ], [ %.0134, %834 ], [ %.0134, %832 ], [ %.0134, %831 ], [ %.0134, %826 ], [ %.0134, %825 ], [ %.0134, %807 ], [ %.0134, %806 ], [ %.0134, %789 ], [ %.0134, %788 ], [ %.0134, %785 ], [ %.0134, %778 ], [ %.0134, %777 ], [ %.0134, %776 ], [ %.0134, %775 ], [ %.0134, %774 ], [ %.0134, %773 ], [ %.0134, %772 ], [ %.0134, %771 ], [ %.0134, %770 ], [ %.0134, %769 ], [ %.0134, %767 ], [ %.0134, %756 ], [ %.0134, %746 ], [ %.0134, %745 ], [ %.0134, %735 ], [ %.0134, %725 ], [ %.0134, %724 ], [ %.0134, %714 ], [ %.0134, %704 ], [ %.0134, %703 ], [ %.0134, %687 ], [ %.0134, %677 ], [ %.0134, %674 ], [ %.0134, %673 ], [ %.0134, %663 ], [ %.0134, %653 ], [ %.0134, %652 ], [ %.0134, %651 ], [ %.0134, %650 ], [ %.0134, %639 ], [ %.0134, %629 ], [ %.0134, %624 ], [ %.0134, %621 ], [ %.0134, %620 ], [ %.0134, %619 ], [ %.0134, %608 ], [ %.0134, %598 ], [ %.0134, %597 ], [ %.0134, %587 ], [ %.0134, %577 ], [ %.0134, %567 ], [ %.0134, %557 ], [ %.0134, %553 ], [ %.0134, %550 ], [ %.0134, %549 ], [ %.0134, %534 ], [ %.0134, %524 ], [ %.0134, %523 ], [ %.0134, %522 ], [ %.0134, %517 ], [ %.0134, %514 ], [ %.0134, %513 ], [ %.neg161, %512 ], [ %.0134, %511 ], [ %.0134, %501 ], [ %.0134, %491 ], [ %.0134, %490 ], [ %.0134, %489 ], [ %.0134, %463 ], [ %.0134, %453 ], [ %.0134, %435 ], [ %.0134, %433 ], [ %.0134, %421 ], [ %.0134, %411 ], [ %.0134, %410 ], [ %.0134, %384 ], [ %.0134, %374 ], [ %.0134, %371 ], [ %.0134, %368 ], [ 1, %358 ], [ %.0134, %356 ], [ %.0134, %342 ], [ %.0134, %332 ], [ %.0134, %329 ], [ %.0134, %328 ], [ %.0134, %316 ], [ %.0134, %306 ], [ %.0134, %303 ], [ %.0134, %302 ], [ %.0134, %301 ], [ %.0134, %285 ], [ %.0134, %275 ], [ %.0134, %273 ], [ %.0134, %258 ], [ %.0134, %248 ], [ %.0134, %246 ], [ %.0134, %233 ], [ %.0134, %223 ], [ %.0134, %222 ], [ %.0134, %219 ], [ %.0134, %218 ], [ %.0134, %208 ], [ %.0134, %198 ], [ %.0134, %192 ], [ %.0134, %190 ], [ %.0134, %176 ], [ %.0134, %166 ], [ %.0134, %164 ], [ %.0134, %151 ], [ %.0134, %141 ], [ %.0134, %140 ], [ %.0134, %130 ], [ %.0134, %120 ], [ %.0134, %119 ], [ %.0134, %109 ], [ %.0134, %99 ], [ %.0134, %97 ], [ %.0134, %84 ], [ %.0134, %74 ], [ %.0134, %73 ], [ %.0134, %72 ], [ %.0134, %62 ], [ %.0134, %52 ], [ %.0134, %51 ], [ %.0134, %39 ], [ %.0134, %29 ], [ %.0134, %24 ], [ %.0134, %20 ]
  %.0132.be = phi i32 [ %.0132, %19 ], [ %.0132, %847 ], [ %.0132, %846 ], [ %.0132, %844 ], [ %.0132, %837 ], [ %.0132, %836 ], [ %.0132, %834 ], [ %.0132, %832 ], [ %.0132, %831 ], [ %.0132, %826 ], [ %.0132, %825 ], [ %.0132, %807 ], [ %.0132, %806 ], [ %.0132, %789 ], [ %.0132, %788 ], [ %.0132, %785 ], [ %.0132, %778 ], [ %.0132, %777 ], [ %.0132, %776 ], [ %.0132, %775 ], [ %.0132, %774 ], [ %.0132, %773 ], [ %.0132, %772 ], [ %.0132, %771 ], [ %.0132, %770 ], [ %.0132, %769 ], [ %.0132, %767 ], [ %.0132, %756 ], [ %.0132, %746 ], [ %.0132, %745 ], [ %.0132, %735 ], [ %.0132, %725 ], [ %.0132, %724 ], [ %.0132, %714 ], [ %.0132, %704 ], [ %.0132, %703 ], [ %.0132, %687 ], [ %.0132, %677 ], [ %.0132, %674 ], [ %.0132, %673 ], [ %.0132, %663 ], [ %.0132, %653 ], [ %.0132, %652 ], [ %.0132, %651 ], [ %.0132, %650 ], [ %.0132, %639 ], [ %.0132, %629 ], [ %.0132, %624 ], [ %.0132, %621 ], [ %.0132, %620 ], [ %.0132, %619 ], [ %.0132, %608 ], [ %.0132, %598 ], [ %.0132, %597 ], [ %.0132, %587 ], [ %.0132, %577 ], [ %.0132, %567 ], [ %.0132, %557 ], [ %.0132, %553 ], [ %.0132, %550 ], [ %.0132, %549 ], [ %.0132, %534 ], [ %.0132, %524 ], [ %.0132, %523 ], [ %.neg159, %522 ], [ %.0132, %517 ], [ %.0132, %514 ], [ 1, %513 ], [ %.0132, %512 ], [ %.0132, %511 ], [ %.0132, %501 ], [ %.0132, %491 ], [ %.0132, %490 ], [ %.0132, %489 ], [ %.0132, %463 ], [ %.0132, %453 ], [ %.0132, %435 ], [ %.0132, %433 ], [ %.0132, %421 ], [ %.0132, %411 ], [ %.0132, %410 ], [ %.0132, %384 ], [ %.0132, %374 ], [ %.0132, %371 ], [ %.0132, %368 ], [ %.0132, %358 ], [ %.0132, %356 ], [ %.0132, %342 ], [ %.0132, %332 ], [ %.0132, %329 ], [ %.0132, %328 ], [ %.0132, %316 ], [ %.0132, %306 ], [ %.0132, %303 ], [ %.0132, %302 ], [ %.0132, %301 ], [ %.0132, %285 ], [ %.0132, %275 ], [ %.0132, %273 ], [ %.0132, %258 ], [ %.0132, %248 ], [ %.0132, %246 ], [ %.0132, %233 ], [ %.0132, %223 ], [ %.0132, %222 ], [ %.0132, %219 ], [ %.0132, %218 ], [ %.0132, %208 ], [ %.0132, %198 ], [ %.0132, %192 ], [ %.0132, %190 ], [ %.0132, %176 ], [ %.0132, %166 ], [ %.0132, %164 ], [ %.0132, %151 ], [ %.0132, %141 ], [ %.0132, %140 ], [ %.0132, %130 ], [ %.0132, %120 ], [ %.0132, %119 ], [ %.0132, %109 ], [ %.0132, %99 ], [ %.0132, %97 ], [ %.0132, %84 ], [ %.0132, %74 ], [ %.0132, %73 ], [ %.0132, %72 ], [ %.0132, %62 ], [ %.0132, %52 ], [ %.0132, %51 ], [ %.0132, %39 ], [ %.0132, %29 ], [ %.0132, %24 ], [ %.0132, %20 ]
  %.0130.be = phi i32 [ %.0130, %19 ], [ %.0130, %847 ], [ %.0130, %846 ], [ %.0130, %844 ], [ %.0130, %837 ], [ %.0130, %836 ], [ %.0130, %834 ], [ %.0130, %832 ], [ %.0130, %831 ], [ %830, %826 ], [ %.0130, %825 ], [ %.0130, %807 ], [ %.0130, %806 ], [ %.0130, %789 ], [ %.0130, %788 ], [ %.0130, %785 ], [ %.0130, %778 ], [ %.0130, %777 ], [ %.0130, %776 ], [ %.0130, %775 ], [ %.0130, %774 ], [ %.0130, %773 ], [ %.0130, %772 ], [ %.0130, %771 ], [ %.0130, %770 ], [ %.0130, %769 ], [ %.0130, %767 ], [ %.0130, %756 ], [ %.0130, %746 ], [ %.0130, %745 ], [ %.0130, %735 ], [ %.0130, %725 ], [ %.0130, %724 ], [ %.0130, %714 ], [ %.0130, %704 ], [ %.0130, %703 ], [ %.0130, %687 ], [ %.0130, %677 ], [ %.0130, %674 ], [ %.0130, %673 ], [ %.0130, %663 ], [ %.0130, %653 ], [ %.0130, %652 ], [ %.0130, %651 ], [ %.0130, %650 ], [ %.0130, %639 ], [ %.0130, %629 ], [ %.0130, %624 ], [ %.0130, %621 ], [ %.0130, %620 ], [ %.0130, %619 ], [ %.0130, %608 ], [ %.0130, %598 ], [ %.0130, %597 ], [ %.0130, %587 ], [ %.0130, %577 ], [ %.0130, %567 ], [ %.0130, %557 ], [ %.0130, %553 ], [ %.0130, %550 ], [ %.0130, %549 ], [ %538, %534 ], [ %.0130, %524 ], [ %.0130, %523 ], [ %.0130, %522 ], [ %.0130, %517 ], [ %.0130, %514 ], [ %.0130, %513 ], [ %.0130, %512 ], [ %.0130, %511 ], [ %.0130, %501 ], [ %.0130, %491 ], [ %.0130, %490 ], [ %.0130, %489 ], [ %.0130, %463 ], [ %.0130, %453 ], [ %.0130, %435 ], [ %.0130, %433 ], [ %.0130, %421 ], [ %.0130, %411 ], [ %.0130, %410 ], [ %.0130, %384 ], [ %.0130, %374 ], [ %.0130, %371 ], [ %.0130, %368 ], [ %.0130, %358 ], [ %.0130, %356 ], [ %.0130, %342 ], [ %.0130, %332 ], [ %.0130, %329 ], [ %.0130, %328 ], [ %.0130, %316 ], [ %.0130, %306 ], [ %.0130, %303 ], [ %.0130, %302 ], [ %.0130, %301 ], [ %.0130, %285 ], [ %.0130, %275 ], [ %.0130, %273 ], [ %.0130, %258 ], [ %.0130, %248 ], [ %.0130, %246 ], [ %.0130, %233 ], [ %.0130, %223 ], [ %.0130, %222 ], [ %.0130, %219 ], [ %.0130, %218 ], [ %.0130, %208 ], [ %.0130, %198 ], [ %.0130, %192 ], [ %.0130, %190 ], [ %.0130, %176 ], [ %.0130, %166 ], [ %.0130, %164 ], [ %.0130, %151 ], [ %.0130, %141 ], [ %.0130, %140 ], [ %.0130, %130 ], [ %.0130, %120 ], [ %.0130, %119 ], [ %.0130, %109 ], [ %.0130, %99 ], [ %.0130, %97 ], [ %.0130, %84 ], [ %.0130, %74 ], [ %.0130, %73 ], [ %.0130, %72 ], [ %.0130, %62 ], [ %.0130, %52 ], [ %.0130, %51 ], [ %.0130, %39 ], [ %.0130, %29 ], [ %.0130, %24 ], [ %.0130, %20 ]
  %.0128.be = phi i32 [ %.0128, %19 ], [ %.0128, %847 ], [ %.0128, %846 ], [ %.0128, %844 ], [ %.0128, %837 ], [ %.0128, %836 ], [ %.0128, %834 ], [ %.0128, %832 ], [ %.0128, %831 ], [ 0, %826 ], [ %.0128, %825 ], [ %.0128, %807 ], [ %.0128, %806 ], [ %.0128, %789 ], [ %.0128, %788 ], [ %.0128, %785 ], [ %.0128, %778 ], [ %.0128, %777 ], [ %.0128, %776 ], [ %.0128, %775 ], [ %.0128, %774 ], [ %.0128, %773 ], [ %.0128, %772 ], [ %.0128, %771 ], [ %.0128, %770 ], [ %.0128, %769 ], [ %.0128, %767 ], [ %.0128, %756 ], [ %.0128, %746 ], [ %.0128, %745 ], [ %.0128, %735 ], [ %.0128, %725 ], [ %.0128, %724 ], [ %.0128, %714 ], [ %.0128, %704 ], [ %.0128, %703 ], [ %.0128, %687 ], [ %.0128, %677 ], [ %.0128, %674 ], [ %.0128, %673 ], [ %.0128, %663 ], [ %.0128, %653 ], [ %.0128, %652 ], [ %.0128, %651 ], [ %.0128, %650 ], [ %.0128, %639 ], [ %.0128, %629 ], [ %.0128, %624 ], [ %.0128, %621 ], [ %.0128, %620 ], [ %.0128, %619 ], [ %.0128, %608 ], [ %.0128, %598 ], [ %.0128, %597 ], [ %.0128, %587 ], [ %.0128, %577 ], [ %574, %567 ], [ %564, %557 ], [ %.0128, %553 ], [ %.0128, %550 ], [ %.0128, %549 ], [ 0, %534 ], [ %.0128, %524 ], [ %.0128, %523 ], [ %.0128, %522 ], [ %.0128, %517 ], [ %.0128, %514 ], [ %.0128, %513 ], [ %.0128, %512 ], [ %.0128, %511 ], [ %.0128, %501 ], [ %.0128, %491 ], [ %.0128, %490 ], [ %.0128, %489 ], [ %.0128, %463 ], [ %.0128, %453 ], [ %.0128, %435 ], [ %.0128, %433 ], [ %.0128, %421 ], [ %.0128, %411 ], [ %.0128, %410 ], [ %.0128, %384 ], [ %.0128, %374 ], [ %.0128, %371 ], [ %.0128, %368 ], [ %.0128, %358 ], [ %.0128, %356 ], [ %.0128, %342 ], [ %.0128, %332 ], [ %.0128, %329 ], [ %.0128, %328 ], [ %.0128, %316 ], [ %.0128, %306 ], [ %.0128, %303 ], [ %.0128, %302 ], [ %.0128, %301 ], [ %.0128, %285 ], [ %.0128, %275 ], [ %.0128, %273 ], [ %.0128, %258 ], [ %.0128, %248 ], [ %.0128, %246 ], [ %.0128, %233 ], [ %.0128, %223 ], [ %.0128, %222 ], [ %.0128, %219 ], [ %.0128, %218 ], [ %.0128, %208 ], [ %.0128, %198 ], [ %.0128, %192 ], [ %.0128, %190 ], [ %.0128, %176 ], [ %.0128, %166 ], [ %.0128, %164 ], [ %.0128, %151 ], [ %.0128, %141 ], [ %.0128, %140 ], [ %.0128, %130 ], [ %.0128, %120 ], [ %.0128, %119 ], [ %.0128, %109 ], [ %.0128, %99 ], [ %.0128, %97 ], [ %.0128, %84 ], [ %.0128, %74 ], [ %.0128, %73 ], [ %.0128, %72 ], [ %.0128, %62 ], [ %.0128, %52 ], [ %.0128, %51 ], [ %.0128, %39 ], [ %.0128, %29 ], [ %.0128, %24 ], [ %.0128, %20 ]
  %.0126.be = phi i32 [ %.0126, %19 ], [ %.0126, %847 ], [ %.0126, %846 ], [ %.0126, %844 ], [ %.0126, %837 ], [ %.0126, %836 ], [ %.0126, %834 ], [ %833, %832 ], [ %.0126, %831 ], [ 1, %826 ], [ %.0126, %825 ], [ %.0126, %807 ], [ %.0126, %806 ], [ %.0126, %789 ], [ %.0126, %788 ], [ %.0126, %785 ], [ %.0126, %778 ], [ %.0126, %777 ], [ %.0126, %776 ], [ %.0126, %775 ], [ %.0126, %774 ], [ %.0126, %773 ], [ %.0126, %772 ], [ %.0126, %771 ], [ %.0126, %770 ], [ %.0126, %769 ], [ %.0126, %767 ], [ %.0126, %756 ], [ %.0126, %746 ], [ %.0126, %745 ], [ %.0126, %735 ], [ %.0126, %725 ], [ %.0126, %724 ], [ %.0126, %714 ], [ %.0126, %704 ], [ %.0126, %703 ], [ %.0126, %687 ], [ %.0126, %677 ], [ %.0126, %674 ], [ %.0126, %673 ], [ %.0126, %663 ], [ %.0126, %653 ], [ %.0126, %652 ], [ %.0126, %651 ], [ %.0126, %650 ], [ %.0126, %639 ], [ %.0126, %629 ], [ %.0126, %624 ], [ %.0126, %621 ], [ %.0126, %620 ], [ %.0126, %619 ], [ %609, %608 ], [ %.0126, %598 ], [ %.0126, %597 ], [ %.0126, %587 ], [ %.0126, %577 ], [ %.0126, %567 ], [ %.0126, %557 ], [ %.0126, %553 ], [ %.0126, %550 ], [ %.0126, %549 ], [ 1, %534 ], [ %.0126, %524 ], [ %.0126, %523 ], [ %.0126, %522 ], [ %.0126, %517 ], [ %.0126, %514 ], [ %.0126, %513 ], [ %.0126, %512 ], [ %.0126, %511 ], [ %.0126, %501 ], [ %.0126, %491 ], [ %.0126, %490 ], [ %.0126, %489 ], [ %.0126, %463 ], [ %.0126, %453 ], [ %.0126, %435 ], [ %.0126, %433 ], [ %.0126, %421 ], [ %.0126, %411 ], [ %.0126, %410 ], [ %.0126, %384 ], [ %.0126, %374 ], [ %.0126, %371 ], [ %.0126, %368 ], [ %.0126, %358 ], [ %.0126, %356 ], [ %.0126, %342 ], [ %.0126, %332 ], [ %.0126, %329 ], [ %.0126, %328 ], [ %.0126, %316 ], [ %.0126, %306 ], [ %.0126, %303 ], [ %.0126, %302 ], [ %.0126, %301 ], [ %.0126, %285 ], [ %.0126, %275 ], [ %.0126, %273 ], [ %.0126, %258 ], [ %.0126, %248 ], [ %.0126, %246 ], [ %.0126, %233 ], [ %.0126, %223 ], [ %.0126, %222 ], [ %.0126, %219 ], [ %.0126, %218 ], [ %.0126, %208 ], [ %.0126, %198 ], [ %.0126, %192 ], [ %.0126, %190 ], [ %.0126, %176 ], [ %.0126, %166 ], [ %.0126, %164 ], [ %.0126, %151 ], [ %.0126, %141 ], [ %.0126, %140 ], [ %.0126, %130 ], [ %.0126, %120 ], [ %.0126, %119 ], [ %.0126, %109 ], [ %.0126, %99 ], [ %.0126, %97 ], [ %.0126, %84 ], [ %.0126, %74 ], [ %.0126, %73 ], [ %.0126, %72 ], [ %.0126, %62 ], [ %.0126, %52 ], [ %.0126, %51 ], [ %.0126, %39 ], [ %.0126, %29 ], [ %.0126, %24 ], [ %.0126, %20 ]
  %.0124.be = phi i32 [ %.0124, %19 ], [ %.0124, %847 ], [ %.0124, %846 ], [ %.0124, %844 ], [ %.0124, %837 ], [ %.0124, %836 ], [ %835, %834 ], [ %.0124, %832 ], [ %.0124, %831 ], [ %.0124, %826 ], [ %.0124, %825 ], [ %.0124, %807 ], [ %.0124, %806 ], [ %.0124, %789 ], [ %.0124, %788 ], [ %.0124, %785 ], [ %.0124, %778 ], [ %.0124, %777 ], [ %.0124, %776 ], [ %.0124, %775 ], [ %.0124, %774 ], [ %.0124, %773 ], [ %.0124, %772 ], [ %.0124, %771 ], [ %.0124, %770 ], [ %.0124, %769 ], [ %.0124, %767 ], [ %.0124, %756 ], [ %.0124, %746 ], [ %.0124, %745 ], [ %.0124, %735 ], [ %.0124, %725 ], [ %.0124, %724 ], [ %.0124, %714 ], [ %.0124, %704 ], [ %.0124, %703 ], [ %.0124, %687 ], [ %.0124, %677 ], [ %.0124, %674 ], [ %.0124, %673 ], [ %.0124, %663 ], [ %.0124, %653 ], [ %.0124, %652 ], [ %.0124, %651 ], [ %.0124, %650 ], [ %640, %639 ], [ %.0124, %629 ], [ %.0124, %624 ], [ %.0124, %621 ], [ 1, %620 ], [ %.0124, %619 ], [ %.0124, %608 ], [ %.0124, %598 ], [ %.0124, %597 ], [ %.0124, %587 ], [ %.0124, %577 ], [ %.0124, %567 ], [ %.0124, %557 ], [ %.0124, %553 ], [ %.0124, %550 ], [ %.0124, %549 ], [ %.0124, %534 ], [ %.0124, %524 ], [ %.0124, %523 ], [ %.0124, %522 ], [ %.0124, %517 ], [ %.0124, %514 ], [ %.0124, %513 ], [ %.0124, %512 ], [ %.0124, %511 ], [ %.0124, %501 ], [ %.0124, %491 ], [ %.0124, %490 ], [ %.0124, %489 ], [ %.0124, %463 ], [ %.0124, %453 ], [ %.0124, %435 ], [ %.0124, %433 ], [ %.0124, %421 ], [ %.0124, %411 ], [ %.0124, %410 ], [ %.0124, %384 ], [ %.0124, %374 ], [ %.0124, %371 ], [ %.0124, %368 ], [ %.0124, %358 ], [ %.0124, %356 ], [ %.0124, %342 ], [ %.0124, %332 ], [ %.0124, %329 ], [ %.0124, %328 ], [ %.0124, %316 ], [ %.0124, %306 ], [ %.0124, %303 ], [ %.0124, %302 ], [ %.0124, %301 ], [ %.0124, %285 ], [ %.0124, %275 ], [ %.0124, %273 ], [ %.0124, %258 ], [ %.0124, %248 ], [ %.0124, %246 ], [ %.0124, %233 ], [ %.0124, %223 ], [ %.0124, %222 ], [ %.0124, %219 ], [ %.0124, %218 ], [ %.0124, %208 ], [ %.0124, %198 ], [ %.0124, %192 ], [ %.0124, %190 ], [ %.0124, %176 ], [ %.0124, %166 ], [ %.0124, %164 ], [ %.0124, %151 ], [ %.0124, %141 ], [ %.0124, %140 ], [ %.0124, %130 ], [ %.0124, %120 ], [ %.0124, %119 ], [ %.0124, %109 ], [ %.0124, %99 ], [ %.0124, %97 ], [ %.0124, %84 ], [ %.0124, %74 ], [ %.0124, %73 ], [ %.0124, %72 ], [ %.0124, %62 ], [ %.0124, %52 ], [ %.0124, %51 ], [ %.0124, %39 ], [ %.0124, %29 ], [ %.0124, %24 ], [ %.0124, %20 ]
  %.0122.be = phi i32 [ %.0122, %19 ], [ %.0122, %847 ], [ %.0122, %846 ], [ %845, %844 ], [ %.0122, %837 ], [ 1, %836 ], [ %.0122, %834 ], [ %.0122, %832 ], [ %.0122, %831 ], [ %.0122, %826 ], [ %.0122, %825 ], [ %.0122, %807 ], [ %.0122, %806 ], [ %.0122, %789 ], [ %.0122, %788 ], [ %.0122, %785 ], [ %.0122, %778 ], [ %.0122, %777 ], [ %.0122, %776 ], [ %.0122, %775 ], [ %.0122, %774 ], [ %.0122, %773 ], [ %.0122, %772 ], [ %.0122, %771 ], [ %.0122, %770 ], [ %.0122, %769 ], [ %.0122, %767 ], [ %.0122, %756 ], [ %.0122, %746 ], [ %.0122, %745 ], [ %.0122, %735 ], [ %.0122, %725 ], [ %.0122, %724 ], [ %.neg154, %714 ], [ %.0122, %704 ], [ %.0122, %703 ], [ %.0122, %687 ], [ %.0122, %677 ], [ %.0122, %674 ], [ %.0122, %673 ], [ 1, %663 ], [ %.0122, %653 ], [ %.0122, %652 ], [ %.0122, %651 ], [ %.0122, %650 ], [ %.0122, %639 ], [ %.0122, %629 ], [ %.0122, %624 ], [ %.0122, %621 ], [ %.0122, %620 ], [ %.0122, %619 ], [ %.0122, %608 ], [ %.0122, %598 ], [ %.0122, %597 ], [ %.0122, %587 ], [ %.0122, %577 ], [ %.0122, %567 ], [ %.0122, %557 ], [ %.0122, %553 ], [ %.0122, %550 ], [ %.0122, %549 ], [ %.0122, %534 ], [ %.0122, %524 ], [ %.0122, %523 ], [ %.0122, %522 ], [ %.0122, %517 ], [ %.0122, %514 ], [ %.0122, %513 ], [ %.0122, %512 ], [ %.0122, %511 ], [ %.0122, %501 ], [ %.0122, %491 ], [ %.0122, %490 ], [ %.0122, %489 ], [ %.0122, %463 ], [ %.0122, %453 ], [ %.0122, %435 ], [ %.0122, %433 ], [ %.0122, %421 ], [ %.0122, %411 ], [ %.0122, %410 ], [ %.0122, %384 ], [ %.0122, %374 ], [ %.0122, %371 ], [ %.0122, %368 ], [ %.0122, %358 ], [ %.0122, %356 ], [ %.0122, %342 ], [ %.0122, %332 ], [ %.0122, %329 ], [ %.0122, %328 ], [ %.0122, %316 ], [ %.0122, %306 ], [ %.0122, %303 ], [ %.0122, %302 ], [ %.0122, %301 ], [ %.0122, %285 ], [ %.0122, %275 ], [ %.0122, %273 ], [ %.0122, %258 ], [ %.0122, %248 ], [ %.0122, %246 ], [ %.0122, %233 ], [ %.0122, %223 ], [ %.0122, %222 ], [ %.0122, %219 ], [ %.0122, %218 ], [ %.0122, %208 ], [ %.0122, %198 ], [ %.0122, %192 ], [ %.0122, %190 ], [ %.0122, %176 ], [ %.0122, %166 ], [ %.0122, %164 ], [ %.0122, %151 ], [ %.0122, %141 ], [ %.0122, %140 ], [ %.0122, %130 ], [ %.0122, %120 ], [ %.0122, %119 ], [ %.0122, %109 ], [ %.0122, %99 ], [ %.0122, %97 ], [ %.0122, %84 ], [ %.0122, %74 ], [ %.0122, %73 ], [ %.0122, %72 ], [ %.0122, %62 ], [ %.0122, %52 ], [ %.0122, %51 ], [ %.0122, %39 ], [ %.0122, %29 ], [ %.0122, %24 ], [ %.0122, %20 ]
  %.0.be = phi i32 [ %.0, %19 ], [ 2101659843, %847 ], [ 1055729371, %846 ], [ 874415440, %844 ], [ 1780782067, %837 ], [ 243804433, %836 ], [ -1368951911, %834 ], [ 287228226, %832 ], [ 278678408, %831 ], [ -407303587, %826 ], [ 1025772864, %825 ], [ -146904663, %807 ], [ 1311284992, %806 ], [ 1614640182, %789 ], [ -1425821939, %788 ], [ -355761106, %785 ], [ -524672350, %778 ], [ -1501762471, %777 ], [ -514388063, %776 ], [ -1366692860, %775 ], [ -726990606, %774 ], [ -921979408, %773 ], [ 1728398776, %772 ], [ -592466453, %771 ], [ 1776172065, %770 ], [ -1069658975, %769 ], [ -662796196, %767 ], [ %765, %756 ], [ %755, %746 ], [ -595998531, %745 ], [ %744, %735 ], [ %734, %725 ], [ 1073030222, %724 ], [ %723, %714 ], [ %713, %704 ], [ 58669349, %703 ], [ %702, %687 ], [ %686, %677 ], [ %676, %674 ], [ 1073030222, %673 ], [ %672, %663 ], [ %662, %653 ], [ 1441573831, %652 ], [ 1140883004, %651 ], [ -1349804787, %650 ], [ %649, %639 ], [ %638, %629 ], [ 1505055623, %624 ], [ %623, %621 ], [ -1349804787, %620 ], [ 1338984650, %619 ], [ %618, %608 ], [ %607, %598 ], [ 2067152245, %597 ], [ %596, %587 ], [ %586, %577 ], [ 903646708, %567 ], [ 903646708, %557 ], [ %556, %553 ], [ %552, %550 ], [ 1338984650, %549 ], [ %548, %534 ], [ %533, %524 ], [ 1140883004, %523 ], [ 405687719, %522 ], [ 675022889, %517 ], [ %516, %514 ], [ 405687719, %513 ], [ 53414702, %512 ], [ -31765527, %511 ], [ %510, %501 ], [ %500, %491 ], [ 348745598, %490 ], [ -1206048200, %489 ], [ %488, %463 ], [ %462, %453 ], [ -1206048200, %435 ], [ %434, %433 ], [ %432, %421 ], [ %420, %411 ], [ 348745598, %410 ], [ %409, %384 ], [ %383, %374 ], [ %373, %371 ], [ %370, %368 ], [ 53414702, %358 ], [ %357, %356 ], [ %355, %342 ], [ %341, %332 ], [ %331, %329 ], [ 1441573831, %328 ], [ %327, %316 ], [ %315, %306 ], [ -1139412898, %303 ], [ 515630150, %302 ], [ -1280374967, %301 ], [ %300, %285 ], [ %284, %275 ], [ %274, %273 ], [ %272, %258 ], [ %257, %248 ], [ %247, %246 ], [ %245, %233 ], [ %232, %223 ], [ -1139412898, %222 ], [ 43461388, %219 ], [ -1978418294, %218 ], [ %217, %208 ], [ %207, %198 ], [ 885799989, %192 ], [ %191, %190 ], [ %189, %176 ], [ %175, %166 ], [ %165, %164 ], [ %163, %151 ], [ %150, %141 ], [ 43461388, %140 ], [ %139, %130 ], [ %129, %120 ], [ -595998531, %119 ], [ %118, %109 ], [ %108, %99 ], [ %98, %97 ], [ %96, %84 ], [ %83, %74 ], [ -36826638, %73 ], [ 603037631, %72 ], [ %71, %62 ], [ %61, %52 ], [ 1163775610, %51 ], [ %50, %39 ], [ %38, %29 ], [ %28, %24 ], [ %23, %20 ]
  br label %19

20:                                               ; preds = %19
  %21 = load i32, i32* @n, align 4
  %22 = icmp slt i32 %.0144, %21
  %23 = select i1 %22, i32 -1596320515, i32 -1078930527
  br label %.backedge

24:                                               ; preds = %19
  %25 = shl nuw i32 1, %.0144
  %26 = load i32, i32* @b, align 4
  %27 = and i32 %26, %25
  %.not178 = icmp eq i32 %27, 0
  %28 = select i1 %.not178, i32 1163775610, i32 -1911701621
  br label %.backedge

29:                                               ; preds = %19
  %30 = load i32, i32* @x.5, align 4
  %31 = load i32, i32* @y.6, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -662796196, i32 -923073895
  br label %.backedge

39:                                               ; preds = %19
  %40 = load i32, i32* @cnt, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* @cnt, align 4
  %42 = load i32, i32* @x.5, align 4
  %43 = load i32, i32* @y.6, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 150829647, i32 -923073895
  br label %.backedge

51:                                               ; preds = %19
  br label %.backedge

52:                                               ; preds = %19
  %53 = load i32, i32* @x.5, align 4
  %54 = load i32, i32* @y.6, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -1069658975, i32 -416463623
  br label %.backedge

62:                                               ; preds = %19
  %63 = load i32, i32* @x.5, align 4
  %64 = load i32, i32* @y.6, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -114864771, i32 -416463623
  br label %.backedge

72:                                               ; preds = %19
  br label %.backedge

73:                                               ; preds = %19
  %.neg175 = add i32 %.0144, 1
  br label %.backedge

74:                                               ; preds = %19
  %75 = load i32, i32* @x.5, align 4
  %76 = load i32, i32* @y.6, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 1776172065, i32 252989456
  br label %.backedge

84:                                               ; preds = %19
  %85 = load i32, i32* @cnt, align 4
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  store i1 %87, i1* %8, align 1
  %88 = load i32, i32* @x.5, align 4
  %89 = load i32, i32* @y.6, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -1695258372, i32 252989456
  br label %.backedge

97:                                               ; preds = %19
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %98 = select i1 %.0..0..0., i32 570507731, i32 1858998659
  br label %.backedge

99:                                               ; preds = %19
  %100 = load i32, i32* @x.5, align 4
  %101 = load i32, i32* @y.6, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 -592466453, i32 -1325231547
  br label %.backedge

109:                                              ; preds = %19
  %puts174 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.3, i64 0, i64 0))
  %110 = load i32, i32* @x.5, align 4
  %111 = load i32, i32* @y.6, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 309696049, i32 -1325231547
  br label %.backedge

119:                                              ; preds = %19
  br label %.backedge

120:                                              ; preds = %19
  %121 = load i32, i32* @x.5, align 4
  %122 = load i32, i32* @y.6, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 1728398776, i32 85457794
  br label %.backedge

130:                                              ; preds = %19
  %puts172 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str.2, i64 0, i64 0))
  store i32 0, i32* @cnt, align 4
  store i32 0, i32* %9, align 4
  %131 = load i32, i32* @x.5, align 4
  %132 = load i32, i32* @y.6, align 4
  %133 = add i32 %131, -1
  %134 = mul i32 %133, %131
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %137, %136
  %139 = select i1 %138, i32 913548757, i32 85457794
  br label %.backedge

140:                                              ; preds = %19
  br label %.backedge

141:                                              ; preds = %19
  %142 = load i32, i32* @x.5, align 4
  %143 = load i32, i32* @y.6, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -921979408, i32 -1009418758
  br label %.backedge

151:                                              ; preds = %19
  %152 = load i32, i32* %9, align 4
  %153 = load i32, i32* @n, align 4
  %154 = icmp slt i32 %152, %153
  store i1 %154, i1* %7, align 1
  %155 = load i32, i32* @x.5, align 4
  %156 = load i32, i32* @y.6, align 4
  %157 = add i32 %155, -1
  %158 = mul i32 %157, %155
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %161, %160
  %163 = select i1 %162, i32 590036305, i32 -1009418758
  br label %.backedge

164:                                              ; preds = %19
  %.0..0..0.115 = load volatile i1, i1* %7, align 1
  %165 = select i1 %.0..0..0.115, i32 446436267, i32 1524050109
  br label %.backedge

166:                                              ; preds = %19
  %167 = load i32, i32* @x.5, align 4
  %168 = load i32, i32* @y.6, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 -726990606, i32 -997040793
  br label %.backedge

176:                                              ; preds = %19
  %177 = load i32, i32* %9, align 4
  %178 = shl nuw i32 1, %177
  %179 = load i32, i32* @b, align 4
  %.demorgan = and i32 %178, %179
  %180 = icmp ne i32 %.demorgan, 0
  store i1 %180, i1* %6, align 1
  %181 = load i32, i32* @x.5, align 4
  %182 = load i32, i32* @y.6, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 771262891, i32 -997040793
  br label %.backedge

190:                                              ; preds = %19
  %.0..0..0.116 = load volatile i1, i1* %6, align 1
  %191 = select i1 %.0..0..0.116, i32 889800367, i32 885799989
  br label %.backedge

192:                                              ; preds = %19
  store i32 1, i32* %11, align 4
  %193 = call i64 @_ZSt9make_pairIRiiESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %11)
  store i64 %193, i64* %10, align 8
  %194 = load i32, i32* @cnt, align 4
  %.neg171 = add i32 %194, 1
  store i32 %.neg171, i32* @cnt, align 4
  %195 = sext i32 %.neg171 to i64
  %196 = getelementptr inbounds [150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 %195
  %197 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* nonnull %196, %"struct.std::pair"* nonnull dereferenceable(8) %tmpcast170) #7
  br label %.backedge

198:                                              ; preds = %19
  %199 = load i32, i32* @x.5, align 4
  %200 = load i32, i32* @y.6, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 -1366692860, i32 647178873
  br label %.backedge

208:                                              ; preds = %19
  %209 = load i32, i32* @x.5, align 4
  %210 = load i32, i32* @y.6, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 1457374435, i32 647178873
  br label %.backedge

218:                                              ; preds = %19
  br label %.backedge

219:                                              ; preds = %19
  %220 = load i32, i32* %9, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %9, align 4
  br label %.backedge

222:                                              ; preds = %19
  store i32 0, i32* %12, align 4
  br label %.backedge

223:                                              ; preds = %19
  %224 = load i32, i32* @x.5, align 4
  %225 = load i32, i32* @y.6, align 4
  %226 = add i32 %224, -1
  %227 = mul i32 %226, %224
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %230, %229
  %232 = select i1 %231, i32 -514388063, i32 -1482059843
  br label %.backedge

233:                                              ; preds = %19
  %234 = load i32, i32* %12, align 4
  %235 = load i32, i32* @n, align 4
  %236 = icmp slt i32 %234, %235
  store i1 %236, i1* %5, align 1
  %237 = load i32, i32* @x.5, align 4
  %238 = load i32, i32* @y.6, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 660103088, i32 -1482059843
  br label %.backedge

246:                                              ; preds = %19
  %.0..0..0.117 = load volatile i1, i1* %5, align 1
  %247 = select i1 %.0..0..0.117, i32 -401167506, i32 -1041938329
  br label %.backedge

248:                                              ; preds = %19
  %249 = load i32, i32* @x.5, align 4
  %250 = load i32, i32* @y.6, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 -1501762471, i32 1491952420
  br label %.backedge

258:                                              ; preds = %19
  %259 = load i32, i32* %12, align 4
  %260 = shl nuw i32 1, %259
  %261 = load i32, i32* @b, align 4
  %262 = and i32 %260, %261
  %263 = icmp ne i32 %262, 0
  store i1 %263, i1* %4, align 1
  %264 = load i32, i32* @x.5, align 4
  %265 = load i32, i32* @y.6, align 4
  %266 = add i32 %264, -1
  %267 = mul i32 %266, %264
  %268 = and i32 %267, 1
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %270, %269
  %272 = select i1 %271, i32 -259466399, i32 1491952420
  br label %.backedge

273:                                              ; preds = %19
  %.0..0..0.118 = load volatile i1, i1* %4, align 1
  %274 = select i1 %.0..0..0.118, i32 -1280374967, i32 270702831
  br label %.backedge

275:                                              ; preds = %19
  %276 = load i32, i32* @x.5, align 4
  %277 = load i32, i32* @y.6, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 -524672350, i32 334782792
  br label %.backedge

285:                                              ; preds = %19
  store i32 0, i32* %14, align 4
  %286 = call i64 @_ZSt9make_pairIRiiESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %14)
  store i64 %286, i64* %13, align 8
  %287 = load i32, i32* @cnt, align 4
  %288 = add i32 %287, 1
  store i32 %288, i32* @cnt, align 4
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 %289
  %291 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* nonnull %290, %"struct.std::pair"* nonnull dereferenceable(8) %tmpcast) #7
  %292 = load i32, i32* @x.5, align 4
  %293 = load i32, i32* @y.6, align 4
  %294 = add i32 %292, -1
  %295 = mul i32 %294, %292
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %298, %297
  %300 = select i1 %299, i32 -1008286284, i32 334782792
  br label %.backedge

301:                                              ; preds = %19
  br label %.backedge

302:                                              ; preds = %19
  br label %.backedge

303:                                              ; preds = %19
  %304 = load i32, i32* %12, align 4
  %305 = add i32 %304, 1
  store i32 %305, i32* %12, align 4
  br label %.backedge

306:                                              ; preds = %19
  %307 = load i32, i32* @x.5, align 4
  %308 = load i32, i32* @y.6, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -355761106, i32 938897123
  br label %.backedge

316:                                              ; preds = %19
  store i32 0, i32* getelementptr inbounds ([150007 x i32], [150007 x i32]* @ans, i64 0, i64 1), align 4
  %317 = load i32, i32* getelementptr inbounds ([150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 1, i32 0), align 8
  %318 = shl nuw i32 1, %317
  store i32 %318, i32* getelementptr inbounds ([150007 x i32], [150007 x i32]* @ans, i64 0, i64 2), align 8
  store i32 2, i32* @len, align 4
  %319 = load i32, i32* @x.5, align 4
  %320 = load i32, i32* @y.6, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 1360273410, i32 938897123
  br label %.backedge

328:                                              ; preds = %19
  br label %.backedge

329:                                              ; preds = %19
  %330 = load i32, i32* @cnt, align 4
  %.not169 = icmp sgt i32 %.0146, %330
  %331 = select i1 %.not169, i32 1130184228, i32 2017548751
  br label %.backedge

332:                                              ; preds = %19
  %333 = load i32, i32* @x.5, align 4
  %334 = load i32, i32* @y.6, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 -1425821939, i32 1813554976
  br label %.backedge

342:                                              ; preds = %19
  %343 = sext i32 %.0146 to i64
  %344 = getelementptr inbounds [150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 %343, i32 1
  %345 = load i32, i32* %344, align 4
  %346 = icmp eq i32 %345, 1
  store i1 %346, i1* %3, align 1
  %347 = load i32, i32* @x.5, align 4
  %348 = load i32, i32* @y.6, align 4
  %349 = add i32 %347, -1
  %350 = mul i32 %349, %347
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %353, %352
  %355 = select i1 %354, i32 1366680583, i32 1813554976
  br label %.backedge

356:                                              ; preds = %19
  %.0..0..0.119 = load volatile i1, i1* %3, align 1
  %357 = select i1 %.0..0..0.119, i32 -1603888523, i32 1605307687
  br label %.backedge

358:                                              ; preds = %19
  %359 = sext i32 %.0146 to i64
  %360 = getelementptr inbounds [150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 %359, i32 0
  %361 = load i32, i32* %360, align 8
  %.neg168 = add i32 %.0146, 1
  %362 = sext i32 %.neg168 to i64
  %363 = getelementptr inbounds [150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 %362, i32 0
  %364 = load i32, i32* %363, align 8
  %365 = shl nuw i32 1, %361
  %366 = shl nuw i32 1, %364
  %367 = add i32 %.0146, 2
  br label %.backedge

368:                                              ; preds = %19
  %369 = load i32, i32* @len, align 4
  %.not167 = icmp sgt i32 %.0134, %369
  %370 = select i1 %.not167, i32 -1144173065, i32 400275215
  br label %.backedge

371:                                              ; preds = %19
  %372 = icmp eq i32 %.0134, 1
  %373 = select i1 %372, i32 -1047546526, i32 13401616
  br label %.backedge

374:                                              ; preds = %19
  %375 = load i32, i32* @x.5, align 4
  %376 = load i32, i32* @y.6, align 4
  %377 = add i32 %375, -1
  %378 = mul i32 %377, %375
  %379 = and i32 %378, 1
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %381, %380
  %383 = select i1 %382, i32 1614640182, i32 -1917535762
  br label %.backedge

384:                                              ; preds = %19
  %385 = sext i32 %.0134 to i64
  %386 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %385
  %387 = load i32, i32* %386, align 4
  %.neg165 = add i32 %.0136, 1
  %388 = sext i32 %.neg165 to i64
  %389 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %388
  store i32 %387, i32* %389, align 4
  %390 = xor i32 %387, %.0138
  %391 = add i32 %.0136, 2
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %392
  store i32 %390, i32* %393, align 4
  %394 = xor i32 %387, %.0140
  %395 = xor i32 %394, %.0138
  %396 = add i32 %.0136, 3
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %397
  store i32 %395, i32* %398, align 4
  %.neg166 = add i32 %.0136, 4
  %399 = sext i32 %.neg166 to i64
  %400 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %399
  store i32 %394, i32* %400, align 4
  %401 = load i32, i32* @x.5, align 4
  %402 = load i32, i32* @y.6, align 4
  %403 = add i32 %401, -1
  %404 = mul i32 %403, %401
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %407, %406
  %409 = select i1 %408, i32 1722180537, i32 -1917535762
  br label %.backedge

410:                                              ; preds = %19
  br label %.backedge

411:                                              ; preds = %19
  %412 = load i32, i32* @x.5, align 4
  %413 = load i32, i32* @y.6, align 4
  %414 = add i32 %412, -1
  %415 = mul i32 %414, %412
  %416 = and i32 %415, 1
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %418, %417
  %420 = select i1 %419, i32 1311284992, i32 -1339393973
  br label %.backedge

421:                                              ; preds = %19
  %422 = and i32 %.0134, 1
  %423 = icmp eq i32 %422, 0
  store i1 %423, i1* %2, align 1
  %424 = load i32, i32* @x.5, align 4
  %425 = load i32, i32* @y.6, align 4
  %426 = add i32 %424, -1
  %427 = mul i32 %426, %424
  %428 = and i32 %427, 1
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %430, %429
  %432 = select i1 %431, i32 640292133, i32 -1339393973
  br label %.backedge

433:                                              ; preds = %19
  %.0..0..0.120 = load volatile i1, i1* %2, align 1
  %434 = select i1 %.0..0..0.120, i32 1382591600, i32 -1777305440
  br label %.backedge

435:                                              ; preds = %19
  %436 = sext i32 %.0134 to i64
  %437 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %436
  %438 = load i32, i32* %437, align 4
  %439 = xor i32 %438, %.0140
  %.neg164 = add i32 %.0136, 1
  %440 = sext i32 %.neg164 to i64
  %441 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %440
  store i32 %439, i32* %441, align 4
  %442 = add i32 %.0136, 2
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %443
  store i32 %438, i32* %444, align 4
  %445 = xor i32 %438, %.0138
  %446 = add i32 %.0136, 3
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %447
  store i32 %445, i32* %448, align 4
  %449 = xor i32 %439, %.0138
  %450 = add i32 %.0136, 4
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %451
  store i32 %449, i32* %452, align 4
  br label %.backedge

453:                                              ; preds = %19
  %454 = load i32, i32* @x.5, align 4
  %455 = load i32, i32* @y.6, align 4
  %456 = add i32 %454, -1
  %457 = mul i32 %456, %454
  %458 = and i32 %457, 1
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %460, %459
  %462 = select i1 %461, i32 -146904663, i32 -394736122
  br label %.backedge

463:                                              ; preds = %19
  %464 = sext i32 %.0134 to i64
  %465 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = xor i32 %466, %.0140
  %468 = xor i32 %467, %.0138
  %469 = add i32 %.0136, 1
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %470
  store i32 %468, i32* %471, align 4
  %472 = xor i32 %466, %.0138
  %473 = add i32 %.0136, 2
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %474
  store i32 %472, i32* %475, align 4
  %.neg162 = add i32 %.0136, 3
  %476 = sext i32 %.neg162 to i64
  %477 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %476
  store i32 %466, i32* %477, align 4
  %.neg163 = add i32 %.0136, 4
  %478 = sext i32 %.neg163 to i64
  %479 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %478
  store i32 %467, i32* %479, align 4
  %480 = load i32, i32* @x.5, align 4
  %481 = load i32, i32* @y.6, align 4
  %482 = add i32 %480, -1
  %483 = mul i32 %482, %480
  %484 = and i32 %483, 1
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %486, %485
  %488 = select i1 %487, i32 240586790, i32 -394736122
  br label %.backedge

489:                                              ; preds = %19
  br label %.backedge

490:                                              ; preds = %19
  br label %.backedge

491:                                              ; preds = %19
  %492 = load i32, i32* @x.5, align 4
  %493 = load i32, i32* @y.6, align 4
  %494 = add i32 %492, -1
  %495 = mul i32 %494, %492
  %496 = and i32 %495, 1
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %498, %497
  %500 = select i1 %499, i32 1025772864, i32 -1860477098
  br label %.backedge

501:                                              ; preds = %19
  %502 = load i32, i32* @x.5, align 4
  %503 = load i32, i32* @y.6, align 4
  %504 = add i32 %502, -1
  %505 = mul i32 %504, %502
  %506 = and i32 %505, 1
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %508, %507
  %510 = select i1 %509, i32 -783843865, i32 -1860477098
  br label %.backedge

511:                                              ; preds = %19
  br label %.backedge

512:                                              ; preds = %19
  %.neg161 = add i32 %.0134, 1
  br label %.backedge

513:                                              ; preds = %19
  store i32 %.0136, i32* @len, align 4
  br label %.backedge

514:                                              ; preds = %19
  %515 = load i32, i32* @len, align 4
  %.not160 = icmp sgt i32 %.0132, %515
  %516 = select i1 %.not160, i32 -1122110937, i32 734471081
  br label %.backedge

517:                                              ; preds = %19
  %518 = sext i32 %.0132 to i64
  %519 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %518
  %520 = load i32, i32* %519, align 4
  %521 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %518
  store i32 %520, i32* %521, align 4
  br label %.backedge

522:                                              ; preds = %19
  %.neg159 = add i32 %.0132, 1
  br label %.backedge

523:                                              ; preds = %19
  br label %.backedge

524:                                              ; preds = %19
  %525 = load i32, i32* @x.5, align 4
  %526 = load i32, i32* @y.6, align 4
  %527 = add i32 %525, -1
  %528 = mul i32 %527, %525
  %529 = and i32 %528, 1
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %531, %530
  %533 = select i1 %532, i32 -407303587, i32 -1806372199
  br label %.backedge

534:                                              ; preds = %19
  %535 = sext i32 %.0146 to i64
  %536 = getelementptr inbounds [150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 %535, i32 0
  %537 = load i32, i32* %536, align 8
  %538 = shl nuw i32 1, %537
  %539 = add i32 %.0146, 1
  %540 = load i32, i32* @x.5, align 4
  %541 = load i32, i32* @y.6, align 4
  %542 = add i32 %540, -1
  %543 = mul i32 %542, %540
  %544 = and i32 %543, 1
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %546, %545
  %548 = select i1 %547, i32 -1898152721, i32 -1806372199
  br label %.backedge

549:                                              ; preds = %19
  br label %.backedge

550:                                              ; preds = %19
  %551 = load i32, i32* @len, align 4
  %.not158 = icmp sgt i32 %.0126, %551
  %552 = select i1 %.not158, i32 -1617843865, i32 -639685830
  br label %.backedge

553:                                              ; preds = %19
  %554 = srem i32 %.0126, 2
  %555 = icmp eq i32 %554, 1
  %556 = select i1 %555, i32 -1940985809, i32 -970888087
  br label %.backedge

557:                                              ; preds = %19
  %558 = sext i32 %.0126 to i64
  %559 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %558
  %560 = load i32, i32* %559, align 4
  %.neg157 = add i32 %.0128, 1
  %561 = sext i32 %.neg157 to i64
  %562 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %561
  store i32 %560, i32* %562, align 4
  %563 = xor i32 %560, %.0130
  %564 = add i32 %.0128, 2
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %565
  store i32 %563, i32* %566, align 4
  br label %.backedge

567:                                              ; preds = %19
  %568 = sext i32 %.0126 to i64
  %569 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %568
  %570 = load i32, i32* %569, align 4
  %571 = xor i32 %570, %.0130
  %.neg156 = add i32 %.0128, 1
  %572 = sext i32 %.neg156 to i64
  %573 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %572
  store i32 %571, i32* %573, align 4
  %574 = add i32 %.0128, 2
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %575
  store i32 %570, i32* %576, align 4
  br label %.backedge

577:                                              ; preds = %19
  %578 = load i32, i32* @x.5, align 4
  %579 = load i32, i32* @y.6, align 4
  %580 = add i32 %578, -1
  %581 = mul i32 %580, %578
  %582 = and i32 %581, 1
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %584, %583
  %586 = select i1 %585, i32 278678408, i32 1397285688
  br label %.backedge

587:                                              ; preds = %19
  %588 = load i32, i32* @x.5, align 4
  %589 = load i32, i32* @y.6, align 4
  %590 = add i32 %588, -1
  %591 = mul i32 %590, %588
  %592 = and i32 %591, 1
  %593 = icmp eq i32 %592, 0
  %594 = icmp slt i32 %589, 10
  %595 = or i1 %594, %593
  %596 = select i1 %595, i32 -1795614920, i32 1397285688
  br label %.backedge

597:                                              ; preds = %19
  br label %.backedge

598:                                              ; preds = %19
  %599 = load i32, i32* @x.5, align 4
  %600 = load i32, i32* @y.6, align 4
  %601 = add i32 %599, -1
  %602 = mul i32 %601, %599
  %603 = and i32 %602, 1
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %605, %604
  %607 = select i1 %606, i32 287228226, i32 -190910191
  br label %.backedge

608:                                              ; preds = %19
  %609 = add i32 %.0126, 1
  %610 = load i32, i32* @x.5, align 4
  %611 = load i32, i32* @y.6, align 4
  %612 = add i32 %610, -1
  %613 = mul i32 %612, %610
  %614 = and i32 %613, 1
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %616, %615
  %618 = select i1 %617, i32 -923447196, i32 -190910191
  br label %.backedge

619:                                              ; preds = %19
  br label %.backedge

620:                                              ; preds = %19
  store i32 %.0128, i32* @len, align 4
  br label %.backedge

621:                                              ; preds = %19
  %622 = load i32, i32* @len, align 4
  %.not155 = icmp sgt i32 %.0124, %622
  %623 = select i1 %.not155, i32 -634275251, i32 -1364913691
  br label %.backedge

624:                                              ; preds = %19
  %625 = sext i32 %.0124 to i64
  %626 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %625
  %627 = load i32, i32* %626, align 4
  %628 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %625
  store i32 %627, i32* %628, align 4
  br label %.backedge

629:                                              ; preds = %19
  %630 = load i32, i32* @x.5, align 4
  %631 = load i32, i32* @y.6, align 4
  %632 = add i32 %630, -1
  %633 = mul i32 %632, %630
  %634 = and i32 %633, 1
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %631, 10
  %637 = or i1 %636, %635
  %638 = select i1 %637, i32 -1368951911, i32 1799476508
  br label %.backedge

639:                                              ; preds = %19
  %640 = add i32 %.0124, 1
  %641 = load i32, i32* @x.5, align 4
  %642 = load i32, i32* @y.6, align 4
  %643 = add i32 %641, -1
  %644 = mul i32 %643, %641
  %645 = and i32 %644, 1
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %647, %646
  %649 = select i1 %648, i32 -1414292905, i32 1799476508
  br label %.backedge

650:                                              ; preds = %19
  br label %.backedge

651:                                              ; preds = %19
  br label %.backedge

652:                                              ; preds = %19
  br label %.backedge

653:                                              ; preds = %19
  %654 = load i32, i32* @x.5, align 4
  %655 = load i32, i32* @y.6, align 4
  %656 = add i32 %654, -1
  %657 = mul i32 %656, %654
  %658 = and i32 %657, 1
  %659 = icmp eq i32 %658, 0
  %660 = icmp slt i32 %655, 10
  %661 = or i1 %660, %659
  %662 = select i1 %661, i32 243804433, i32 -1389907205
  br label %.backedge

663:                                              ; preds = %19
  %664 = load i32, i32* @x.5, align 4
  %665 = load i32, i32* @y.6, align 4
  %666 = add i32 %664, -1
  %667 = mul i32 %666, %664
  %668 = and i32 %667, 1
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %670, %669
  %672 = select i1 %671, i32 519273181, i32 -1389907205
  br label %.backedge

673:                                              ; preds = %19
  br label %.backedge

674:                                              ; preds = %19
  %675 = load i32, i32* @len, align 4
  %.not = icmp sgt i32 %.0122, %675
  %676 = select i1 %.not, i32 -1065866918, i32 -1200231912
  br label %.backedge

677:                                              ; preds = %19
  %678 = load i32, i32* @x.5, align 4
  %679 = load i32, i32* @y.6, align 4
  %680 = add i32 %678, -1
  %681 = mul i32 %680, %678
  %682 = and i32 %681, 1
  %683 = icmp eq i32 %682, 0
  %684 = icmp slt i32 %679, 10
  %685 = or i1 %684, %683
  %686 = select i1 %685, i32 1780782067, i32 -1257459614
  br label %.backedge

687:                                              ; preds = %19
  %688 = sext i32 %.0122 to i64
  %689 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %688
  %690 = load i32, i32* %689, align 4
  %691 = load i32, i32* @a, align 4
  %692 = xor i32 %691, %690
  %693 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %692)
  %694 = load i32, i32* @x.5, align 4
  %695 = load i32, i32* @y.6, align 4
  %696 = add i32 %694, -1
  %697 = mul i32 %696, %694
  %698 = and i32 %697, 1
  %699 = icmp eq i32 %698, 0
  %700 = icmp slt i32 %695, 10
  %701 = or i1 %700, %699
  %702 = select i1 %701, i32 1831372754, i32 -1257459614
  br label %.backedge

703:                                              ; preds = %19
  br label %.backedge

704:                                              ; preds = %19
  %705 = load i32, i32* @x.5, align 4
  %706 = load i32, i32* @y.6, align 4
  %707 = add i32 %705, -1
  %708 = mul i32 %707, %705
  %709 = and i32 %708, 1
  %710 = icmp eq i32 %709, 0
  %711 = icmp slt i32 %706, 10
  %712 = or i1 %711, %710
  %713 = select i1 %712, i32 874415440, i32 -875568372
  br label %.backedge

714:                                              ; preds = %19
  %.neg154 = add i32 %.0122, 1
  %715 = load i32, i32* @x.5, align 4
  %716 = load i32, i32* @y.6, align 4
  %717 = add i32 %715, -1
  %718 = mul i32 %717, %715
  %719 = and i32 %718, 1
  %720 = icmp eq i32 %719, 0
  %721 = icmp slt i32 %716, 10
  %722 = or i1 %721, %720
  %723 = select i1 %722, i32 -705382929, i32 -875568372
  br label %.backedge

724:                                              ; preds = %19
  br label %.backedge

725:                                              ; preds = %19
  %726 = load i32, i32* @x.5, align 4
  %727 = load i32, i32* @y.6, align 4
  %728 = add i32 %726, -1
  %729 = mul i32 %728, %726
  %730 = and i32 %729, 1
  %731 = icmp eq i32 %730, 0
  %732 = icmp slt i32 %727, 10
  %733 = or i1 %732, %731
  %734 = select i1 %733, i32 1055729371, i32 -495670
  br label %.backedge

735:                                              ; preds = %19
  %putchar153 = call i32 @putchar(i32 10)
  %736 = load i32, i32* @x.5, align 4
  %737 = load i32, i32* @y.6, align 4
  %738 = add i32 %736, -1
  %739 = mul i32 %738, %736
  %740 = and i32 %739, 1
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %737, 10
  %743 = or i1 %742, %741
  %744 = select i1 %743, i32 626600676, i32 -495670
  br label %.backedge

745:                                              ; preds = %19
  br label %.backedge

746:                                              ; preds = %19
  %747 = load i32, i32* @x.5, align 4
  %748 = load i32, i32* @y.6, align 4
  %749 = add i32 %747, -1
  %750 = mul i32 %749, %747
  %751 = and i32 %750, 1
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %748, 10
  %754 = or i1 %753, %752
  %755 = select i1 %754, i32 2101659843, i32 453463890
  br label %.backedge

756:                                              ; preds = %19
  store i32 0, i32* %1, align 4
  %757 = load i32, i32* @x.5, align 4
  %758 = load i32, i32* @y.6, align 4
  %759 = add i32 %757, -1
  %760 = mul i32 %759, %757
  %761 = and i32 %760, 1
  %762 = icmp eq i32 %761, 0
  %763 = icmp slt i32 %758, 10
  %764 = or i1 %763, %762
  %765 = select i1 %764, i32 -1856461115, i32 453463890
  br label %.backedge

766:                                              ; preds = %19
  %.0..0..0.121 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.121

767:                                              ; preds = %19
  %768 = load i32, i32* @cnt, align 4
  %.neg152 = add i32 %768, 1
  store i32 %.neg152, i32* @cnt, align 4
  br label %.backedge

769:                                              ; preds = %19
  br label %.backedge

770:                                              ; preds = %19
  br label %.backedge

771:                                              ; preds = %19
  %puts151 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

772:                                              ; preds = %19
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str.2, i64 0, i64 0))
  store i32 0, i32* @cnt, align 4
  store i32 0, i32* %9, align 4
  br label %.backedge

773:                                              ; preds = %19
  br label %.backedge

774:                                              ; preds = %19
  br label %.backedge

775:                                              ; preds = %19
  br label %.backedge

776:                                              ; preds = %19
  br label %.backedge

777:                                              ; preds = %19
  br label %.backedge

778:                                              ; preds = %19
  store i32 0, i32* %14, align 4
  %779 = call i64 @_ZSt9make_pairIRiiESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %14)
  store i64 %779, i64* %13, align 8
  %780 = load i32, i32* @cnt, align 4
  %781 = add i32 %780, 1
  store i32 %781, i32* @cnt, align 4
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds [150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 %782
  %784 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* nonnull %783, %"struct.std::pair"* nonnull dereferenceable(8) %tmpcast) #7
  br label %.backedge

785:                                              ; preds = %19
  store i32 0, i32* getelementptr inbounds ([150007 x i32], [150007 x i32]* @ans, i64 0, i64 1), align 4
  %786 = load i32, i32* getelementptr inbounds ([150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 1, i32 0), align 8
  %787 = shl nuw i32 1, %786
  store i32 %787, i32* getelementptr inbounds ([150007 x i32], [150007 x i32]* @ans, i64 0, i64 2), align 8
  store i32 2, i32* @len, align 4
  br label %.backedge

788:                                              ; preds = %19
  br label %.backedge

789:                                              ; preds = %19
  %790 = sext i32 %.0134 to i64
  %791 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %790
  %792 = load i32, i32* %791, align 4
  %793 = add i32 %.0136, 1
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %794
  store i32 %792, i32* %795, align 4
  %796 = xor i32 %792, %.0138
  %797 = add i32 %.0136, 2
  %798 = sext i32 %797 to i64
  %799 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %798
  store i32 %796, i32* %799, align 4
  %800 = xor i32 %792, %.0140
  %801 = xor i32 %800, %.0138
  %.neg149 = add i32 %.0136, 3
  %802 = sext i32 %.neg149 to i64
  %803 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %802
  store i32 %801, i32* %803, align 4
  %.neg150 = add i32 %.0136, 4
  %804 = sext i32 %.neg150 to i64
  %805 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %804
  store i32 %800, i32* %805, align 4
  br label %.backedge

806:                                              ; preds = %19
  br label %.backedge

807:                                              ; preds = %19
  %808 = sext i32 %.0134 to i64
  %809 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %808
  %810 = load i32, i32* %809, align 4
  %811 = xor i32 %810, %.0140
  %812 = xor i32 %811, %.0138
  %813 = add i32 %.0136, 1
  %814 = sext i32 %813 to i64
  %815 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %814
  store i32 %812, i32* %815, align 4
  %816 = xor i32 %810, %.0138
  %.neg148 = add i32 %.0136, 2
  %817 = sext i32 %.neg148 to i64
  %818 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %817
  store i32 %816, i32* %818, align 4
  %819 = add i32 %.0136, 3
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %820
  store i32 %810, i32* %821, align 4
  %822 = add i32 %.0136, 4
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans1, i64 0, i64 %823
  store i32 %811, i32* %824, align 4
  br label %.backedge

825:                                              ; preds = %19
  br label %.backedge

826:                                              ; preds = %19
  %827 = sext i32 %.0146 to i64
  %828 = getelementptr inbounds [150007 x %"struct.std::pair"], [150007 x %"struct.std::pair"]* @que, i64 0, i64 %827, i32 0
  %829 = load i32, i32* %828, align 8
  %830 = shl nuw i32 1, %829
  %.neg = add i32 %.0146, 1
  br label %.backedge

831:                                              ; preds = %19
  br label %.backedge

832:                                              ; preds = %19
  %833 = add i32 %.0126, 1
  br label %.backedge

834:                                              ; preds = %19
  %835 = add i32 %.0124, 1
  br label %.backedge

836:                                              ; preds = %19
  br label %.backedge

837:                                              ; preds = %19
  %838 = sext i32 %.0122 to i64
  %839 = getelementptr inbounds [150007 x i32], [150007 x i32]* @ans, i64 0, i64 %838
  %840 = load i32, i32* %839, align 4
  %841 = load i32, i32* @a, align 4
  %842 = xor i32 %841, %840
  %843 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %842)
  br label %.backedge

844:                                              ; preds = %19
  %845 = add i32 %.0122, 1
  br label %.backedge

846:                                              ; preds = %19
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

847:                                              ; preds = %19
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt9make_pairIRiiESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #0 comdat {
  %3 = alloca i64, align 8
  %tmpcast = bitcast i64* %3 to %"struct.std::pair"*
  %4 = tail call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* nonnull dereferenceable(4) %0) #7
  %5 = tail call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* nonnull dereferenceable(4) %1) #7
  call void @_ZNSt4pairIiiEC2IRiivEEOT_OT0_(%"struct.std::pair"* nonnull %tmpcast, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5)
  %6 = load i64, i64* %3, align 8
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* %0, %"struct.std::pair"* dereferenceable(8) %1) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 0
  %4 = tail call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* nonnull dereferenceable(4) %3) #7
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* nonnull dereferenceable(4) %7) #7
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1
  store i32 %9, i32* %10, align 4
  ret %"struct.std::pair"* %0
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %0) local_unnamed_addr #6 comdat {
  ret i32* %0
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %0) local_unnamed_addr #6 comdat {
  ret i32* %0
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2IRiivEEOT_OT0_(%"struct.std::pair"* %0, i32* dereferenceable(4) %1, i32* dereferenceable(4) %2) unnamed_addr #6 comdat align 2 {
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x.15, align 4
  %7 = load i32, i32* @y.16, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %5, align 1
  %12 = icmp slt i32 %7, 10
  store i1 %12, i1* %4, align 1
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %3
  %.0.ph = phi i32 [ -722942819, %3 ], [ %.0.ph.be, %.outer.backedge ]
  br label %15

15:                                               ; preds = %.outer, %15
  switch i32 %.0.ph, label %15 [
    i32 -722942819, label %16
    i32 751563630, label %19
    i32 443696337, label %33
    i32 1019708440, label %34
  ]

16:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %.0..0..0.1 = load volatile i1, i1* %4, align 1
  %17 = or i1 %.0..0..0., %.0..0..0.1
  %18 = select i1 %17, i32 751563630, i32 1019708440
  br label %.outer.backedge

19:                                               ; preds = %15
  %20 = tail call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* nonnull dereferenceable(4) %1) #7
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  %22 = tail call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* nonnull dereferenceable(4) %2) #7
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %14, align 4
  %24 = load i32, i32* @x.15, align 4
  %25 = load i32, i32* @y.16, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 443696337, i32 1019708440
  br label %.outer.backedge

33:                                               ; preds = %15
  ret void

34:                                               ; preds = %15
  %35 = tail call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* nonnull dereferenceable(4) %1) #7
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %13, align 4
  %37 = tail call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* nonnull dereferenceable(4) %2) #7
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %14, align 4
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %34, %19, %16
  %.0.ph.be = phi i32 [ %18, %16 ], [ %32, %19 ], [ 751563630, %34 ]
  br label %.outer
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s648328648.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
