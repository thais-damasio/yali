; ModuleID = 'build_ollvm/programs/p03097/s260368461.ll'
source_filename = "Project_CodeNet_C++1400/p03097/s260368461.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@even = local_unnamed_addr global i32 0, align 4
@keta = local_unnamed_addr global [200010 x [20 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"YES\0A%d\0A%d\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"NO\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s260368461.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@str.1 = private unnamed_addr constant [4 x i8] c"YES\00", align 1

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1444277468, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1444277468, label %11
    i32 -219556681, label %14
    i32 -607274340, label %25
    i32 748346206, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -219556681, i32 748346206
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -607274340, i32 748346206
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -219556681, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline nounwind uwtable
define i32 @_Z5haitiiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #4 {
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = add i32 %1, -1
  %9 = shl nuw i32 1, %8
  store i32 %0, i32* %7, align 4
  %10 = load i32, i32* @even, align 4
  store i32 %10, i32* %6, align 4
  %11 = sext i32 %0 to i64
  %.neg61.neg = shl i32 2, %8
  %12 = add i32 %2, -1
  %13 = add i32 %12, %.neg61.neg
  %14 = shl nsw i32 %9, 1
  %.not = icmp eq i32 %0, -1
  %15 = select i1 %.not, i32 -1715091089, i32 1326682884
  %16 = add i32 %0, -1
  %17 = select i1 %.not, i32 -1677883306, i32 -2025227435
  br label %18

18:                                               ; preds = %.backedge, %3
  %.059 = phi i32 [ undef, %3 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %3 ], [ %.057.be, %.backedge ]
  %.0 = phi i32 [ -1717441225, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1717441225, label %19
    i32 2076108699, label %22
    i32 316052776, label %32
    i32 1661795269, label %44
    i32 1063449796, label %46
    i32 -1681720497, label %56
    i32 2125286707, label %67
    i32 -245654388, label %68
    i32 -1219174570, label %73
    i32 -776224101, label %77
    i32 -2025227435, label %78
    i32 -1677883306, label %80
    i32 889134214, label %81
    i32 -158615915, label %82
    i32 1326682884, label %83
    i32 -1322681726, label %93
    i32 -173538298, label %103
    i32 -308505681, label %104
    i32 551844118, label %107
    i32 -273703284, label %108
    i32 1924412668, label %118
    i32 836731730, label %129
    i32 165355840, label %131
    i32 928811718, label %141
    i32 -1955227411, label %159
    i32 1849438741, label %160
    i32 284212459, label %162
    i32 -174294029, label %172
    i32 2053004905, label %187
    i32 -1417755094, label %188
    i32 -814958265, label %198
    i32 -1584018361, label %209
    i32 952109664, label %210
    i32 -252657515, label %220
    i32 -1317011612, label %230
    i32 -1715091089, label %231
    i32 -1842016324, label %241
    i32 -1754211722, label %251
    i32 -454212563, label %252
    i32 2058616824, label %253
    i32 596539752, label %255
    i32 1469489579, label %256
    i32 -1846803923, label %257
    i32 1991012492, label %266
    i32 664910580, label %272
    i32 -1435737644, label %273
    i32 407683684, label %274
  ]

.backedge:                                        ; preds = %18, %274, %273, %272, %266, %257, %256, %255, %253, %252, %241, %231, %230, %220, %210, %209, %198, %188, %187, %172, %162, %160, %159, %141, %131, %129, %118, %108, %107, %104, %103, %93, %83, %82, %81, %80, %78, %77, %73, %68, %67, %56, %46, %44, %32, %22, %19
  %.059.be = phi i32 [ %.059, %18 ], [ %.059, %274 ], [ %.059, %273 ], [ %.059, %272 ], [ %.059, %266 ], [ %.059, %257 ], [ %.059, %256 ], [ %.059, %255 ], [ %.059, %253 ], [ %.059, %252 ], [ %.059, %241 ], [ %.059, %231 ], [ %.059, %230 ], [ %.059, %220 ], [ %.059, %210 ], [ %.059, %209 ], [ %.059, %198 ], [ %.059, %188 ], [ %.059, %187 ], [ %.059, %172 ], [ %.059, %162 ], [ %161, %160 ], [ %.059, %159 ], [ %.059, %141 ], [ %.059, %131 ], [ %.059, %129 ], [ %.059, %118 ], [ %.059, %108 ], [ 0, %107 ], [ %.059, %104 ], [ %.059, %103 ], [ %.059, %93 ], [ %.059, %83 ], [ %.059, %82 ], [ %.059, %81 ], [ %.059, %80 ], [ %.059, %78 ], [ %.059, %77 ], [ %.059, %73 ], [ %.059, %68 ], [ %.059, %67 ], [ %.059, %56 ], [ %.059, %46 ], [ %.059, %44 ], [ %.059, %32 ], [ %.059, %22 ], [ %.059, %19 ]
  %.057.be = phi i32 [ %.057, %18 ], [ %.057, %274 ], [ %.057, %273 ], [ %.neg, %272 ], [ %.057, %266 ], [ %.057, %257 ], [ %.057, %256 ], [ %9, %255 ], [ %.057, %253 ], [ %.057, %252 ], [ %.057, %241 ], [ %.057, %231 ], [ %.057, %230 ], [ %.057, %220 ], [ %.057, %210 ], [ %.057, %209 ], [ %199, %198 ], [ %.057, %188 ], [ %.057, %187 ], [ %.057, %172 ], [ %.057, %162 ], [ %.057, %160 ], [ %.057, %159 ], [ %.057, %141 ], [ %.057, %131 ], [ %.057, %129 ], [ %.057, %118 ], [ %.057, %108 ], [ %.057, %107 ], [ %.057, %104 ], [ %.057, %103 ], [ %9, %93 ], [ %.057, %83 ], [ %.057, %82 ], [ %.057, %81 ], [ %.057, %80 ], [ %.057, %78 ], [ %.057, %77 ], [ %.057, %73 ], [ %.057, %68 ], [ %.057, %67 ], [ %.057, %56 ], [ %.057, %46 ], [ %.057, %44 ], [ %.057, %32 ], [ %.057, %22 ], [ %.057, %19 ]
  %.0.be = phi i32 [ %.0, %18 ], [ -1842016324, %274 ], [ -252657515, %273 ], [ -814958265, %272 ], [ -174294029, %266 ], [ 928811718, %257 ], [ 1924412668, %256 ], [ -1322681726, %255 ], [ -1681720497, %253 ], [ 316052776, %252 ], [ %250, %241 ], [ %240, %231 ], [ -1715091089, %230 ], [ %229, %220 ], [ %219, %210 ], [ -308505681, %209 ], [ %208, %198 ], [ %197, %188 ], [ -1417755094, %187 ], [ %186, %172 ], [ %171, %162 ], [ -273703284, %160 ], [ 1849438741, %159 ], [ %158, %141 ], [ %140, %131 ], [ %130, %129 ], [ %128, %118 ], [ %117, %108 ], [ -273703284, %107 ], [ %106, %104 ], [ -308505681, %103 ], [ %102, %93 ], [ %92, %83 ], [ %15, %82 ], [ -158615915, %81 ], [ 889134214, %80 ], [ -1677883306, %78 ], [ %17, %77 ], [ 889134214, %73 ], [ %72, %68 ], [ -158615915, %67 ], [ %66, %56 ], [ %55, %46 ], [ %45, %44 ], [ %43, %32 ], [ %31, %22 ], [ %21, %19 ]
  br label %18

19:                                               ; preds = %18
  %.0..0..0. = load volatile i32, i32* %7, align 4
  %.0..0..0.54 = load volatile i32, i32* %6, align 4
  %20 = icmp eq i32 %.0..0..0., %.0..0..0.54
  %21 = select i1 %20, i32 2076108699, i32 -245654388
  br label %.backedge

22:                                               ; preds = %18
  %23 = load i32, i32* @x.5, align 4
  %24 = load i32, i32* @y.6, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 316052776, i32 -454212563
  br label %.backedge

32:                                               ; preds = %18
  %33 = load i32, i32* @even, align 4
  %.neg65 = add i32 %33, 1
  %34 = icmp ne i32 %.neg65, %1
  store i1 %34, i1* %5, align 1
  %35 = load i32, i32* @x.5, align 4
  %36 = load i32, i32* @y.6, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 1661795269, i32 -454212563
  br label %.backedge

44:                                               ; preds = %18
  %.0..0..0.55 = load volatile i1, i1* %5, align 1
  %45 = select i1 %.0..0..0.55, i32 1063449796, i32 -245654388
  br label %.backedge

46:                                               ; preds = %18
  %47 = load i32, i32* @x.5, align 4
  %48 = load i32, i32* @y.6, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 -1681720497, i32 2058616824
  br label %.backedge

56:                                               ; preds = %18
  %57 = tail call i32 @_Z5haitiiii(i32 %8, i32 %8, i32 %2)
  %58 = load i32, i32* @x.5, align 4
  %59 = load i32, i32* @y.6, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 2125286707, i32 2058616824
  br label %.backedge

67:                                               ; preds = %18
  br label %.backedge

68:                                               ; preds = %18
  %69 = load i32, i32* @even, align 4
  %70 = add i32 %69, 1
  %71 = icmp eq i32 %70, %0
  %72 = select i1 %71, i32 -1219174570, i32 -776224101
  br label %.backedge

73:                                               ; preds = %18
  %74 = load i32, i32* @even, align 4
  %75 = add i32 %74, -1
  %76 = tail call i32 @_Z5haitiiii(i32 %75, i32 %8, i32 %2)
  br label %.backedge

77:                                               ; preds = %18
  br label %.backedge

78:                                               ; preds = %18
  %79 = tail call i32 @_Z5haitiiii(i32 %16, i32 %8, i32 %2)
  br label %.backedge

80:                                               ; preds = %18
  br label %.backedge

81:                                               ; preds = %18
  br label %.backedge

82:                                               ; preds = %18
  br label %.backedge

83:                                               ; preds = %18
  %84 = load i32, i32* @x.5, align 4
  %85 = load i32, i32* @y.6, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 -1322681726, i32 596539752
  br label %.backedge

93:                                               ; preds = %18
  %94 = load i32, i32* @x.5, align 4
  %95 = load i32, i32* @y.6, align 4
  %96 = add i32 %94, -1
  %97 = mul i32 %96, %94
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %100, %99
  %102 = select i1 %101, i32 -173538298, i32 596539752
  br label %.backedge

103:                                              ; preds = %18
  br label %.backedge

104:                                              ; preds = %18
  %105 = icmp slt i32 %.057, %14
  %106 = select i1 %105, i32 551844118, i32 952109664
  br label %.backedge

107:                                              ; preds = %18
  br label %.backedge

108:                                              ; preds = %18
  %109 = load i32, i32* @x.5, align 4
  %110 = load i32, i32* @y.6, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 1924412668, i32 1469489579
  br label %.backedge

118:                                              ; preds = %18
  %119 = icmp slt i32 %.059, 20
  store i1 %119, i1* %4, align 1
  %120 = load i32, i32* @x.5, align 4
  %121 = load i32, i32* @y.6, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 836731730, i32 1469489579
  br label %.backedge

129:                                              ; preds = %18
  %.0..0..0.56 = load volatile i1, i1* %4, align 1
  %130 = select i1 %.0..0..0.56, i32 165355840, i32 284212459
  br label %.backedge

131:                                              ; preds = %18
  %132 = load i32, i32* @x.5, align 4
  %133 = load i32, i32* @y.6, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 928811718, i32 -1846803923
  br label %.backedge

141:                                              ; preds = %18
  %142 = sub i32 %13, %.057
  %143 = sext i32 %142 to i64
  %144 = sext i32 %.059 to i64
  %145 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %143, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = add i32 %.057, %2
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %148, i64 %144
  store i32 %146, i32* %149, align 4
  %150 = load i32, i32* @x.5, align 4
  %151 = load i32, i32* @y.6, align 4
  %152 = add i32 %150, -1
  %153 = mul i32 %152, %150
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %156, %155
  %158 = select i1 %157, i32 -1955227411, i32 -1846803923
  br label %.backedge

159:                                              ; preds = %18
  br label %.backedge

160:                                              ; preds = %18
  %161 = add i32 %.059, 1
  br label %.backedge

162:                                              ; preds = %18
  %163 = load i32, i32* @x.5, align 4
  %164 = load i32, i32* @y.6, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -174294029, i32 1991012492
  br label %.backedge

172:                                              ; preds = %18
  %173 = add i32 %.057, %2
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %174, i64 %11
  %176 = load i32, i32* %175, align 4
  %177 = xor i32 %176, 1
  store i32 %177, i32* %175, align 4
  %178 = load i32, i32* @x.5, align 4
  %179 = load i32, i32* @y.6, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 2053004905, i32 1991012492
  br label %.backedge

187:                                              ; preds = %18
  br label %.backedge

188:                                              ; preds = %18
  %189 = load i32, i32* @x.5, align 4
  %190 = load i32, i32* @y.6, align 4
  %191 = add i32 %189, -1
  %192 = mul i32 %191, %189
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %195, %194
  %197 = select i1 %196, i32 -814958265, i32 664910580
  br label %.backedge

198:                                              ; preds = %18
  %199 = add i32 %.057, 1
  %200 = load i32, i32* @x.5, align 4
  %201 = load i32, i32* @y.6, align 4
  %202 = add i32 %200, -1
  %203 = mul i32 %202, %200
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %206, %205
  %208 = select i1 %207, i32 -1584018361, i32 664910580
  br label %.backedge

209:                                              ; preds = %18
  br label %.backedge

210:                                              ; preds = %18
  %211 = load i32, i32* @x.5, align 4
  %212 = load i32, i32* @y.6, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 -252657515, i32 -1435737644
  br label %.backedge

220:                                              ; preds = %18
  %221 = load i32, i32* @x.5, align 4
  %222 = load i32, i32* @y.6, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 -1317011612, i32 -1435737644
  br label %.backedge

230:                                              ; preds = %18
  br label %.backedge

231:                                              ; preds = %18
  %232 = load i32, i32* @x.5, align 4
  %233 = load i32, i32* @y.6, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 -1842016324, i32 407683684
  br label %.backedge

241:                                              ; preds = %18
  %242 = load i32, i32* @x.5, align 4
  %243 = load i32, i32* @y.6, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 -1754211722, i32 407683684
  br label %.backedge

251:                                              ; preds = %18
  ret i32 0

252:                                              ; preds = %18
  br label %.backedge

253:                                              ; preds = %18
  %254 = tail call i32 @_Z5haitiiii(i32 %8, i32 %8, i32 %2)
  br label %.backedge

255:                                              ; preds = %18
  br label %.backedge

256:                                              ; preds = %18
  br label %.backedge

257:                                              ; preds = %18
  %258 = sub i32 %13, %.057
  %259 = sext i32 %258 to i64
  %260 = sext i32 %.059 to i64
  %261 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %259, i64 %260
  %262 = load i32, i32* %261, align 4
  %263 = add i32 %.057, %2
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %264, i64 %260
  store i32 %262, i32* %265, align 4
  br label %.backedge

266:                                              ; preds = %18
  %267 = add i32 %.057, %2
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %268, i64 %11
  %270 = load i32, i32* %269, align 4
  %271 = xor i32 %270, 1
  store i32 %271, i32* %269, align 4
  br label %.backedge

272:                                              ; preds = %18
  %.neg = add i32 %.057, 1
  br label %.backedge

273:                                              ; preds = %18
  br label %.backedge

274:                                              ; preds = %18
  br label %.backedge
}

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [20 x i32], align 16
  %10 = alloca [20 x i32], align 16
  %11 = alloca [20 x i32], align 16
  %12 = alloca [20 x i32], align 16
  %13 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull %7, i32* nonnull %8)
  %14 = load i32, i32* @n, align 4
  store i32 %14, i32* %6, align 4
  br label %15

15:                                               ; preds = %.backedge, %0
  %.0138 = phi i32 [ undef, %0 ], [ %.0138.be, %.backedge ]
  %.0136 = phi i32 [ undef, %0 ], [ %.0136.be, %.backedge ]
  %.0134 = phi i32 [ 0, %0 ], [ %.0134.be, %.backedge ]
  %.0132 = phi i32 [ undef, %0 ], [ %.0132.be, %.backedge ]
  %.0130 = phi i32 [ undef, %0 ], [ %.0130.be, %.backedge ]
  %.0128 = phi i32 [ undef, %0 ], [ %.0128.be, %.backedge ]
  %.0126 = phi i32 [ undef, %0 ], [ %.0126.be, %.backedge ]
  %.0 = phi i32 [ -1014729048, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1014729048, label %16
    i32 -1928299380, label %19
    i32 2066906776, label %23
    i32 -681999906, label %27
    i32 -708052950, label %29
    i32 -1076511240, label %30
    i32 -392939750, label %40
    i32 1858403654, label %53
    i32 -1109660671, label %54
    i32 -506021160, label %58
    i32 -949237181, label %64
    i32 265209807, label %66
    i32 -1191158560, label %68
    i32 112325169, label %72
    i32 212695820, label %82
    i32 1361528241, label %96
    i32 1975765184, label %97
    i32 1861137272, label %107
    i32 -1033585378, label %117
    i32 57843001, label %118
    i32 972730283, label %121
    i32 -2073204037, label %125
    i32 395897032, label %131
    i32 1922967329, label %141
    i32 300046373, label %154
    i32 73926838, label %155
    i32 -1713214400, label %165
    i32 -281275384, label %177
    i32 1417147586, label %178
    i32 -2048532863, label %179
    i32 -2090414142, label %189
    i32 -86009382, label %200
    i32 36297340, label %201
    i32 1034823042, label %205
    i32 671091644, label %207
    i32 -424919082, label %217
    i32 -1774822918, label %227
    i32 -784725022, label %228
    i32 1234768214, label %229
    i32 1820861397, label %232
    i32 -918182415, label %233
    i32 -1244545450, label %236
    i32 217089661, label %240
    i32 1734416098, label %242
    i32 -1607133498, label %252
    i32 1464654795, label %262
    i32 1562797169, label %263
    i32 -964844427, label %265
    i32 -1963631794, label %275
    i32 1236391999, label %293
    i32 -1846558578, label %294
    i32 -2079379224, label %304
    i32 226165447, label %317
    i32 313017401, label %319
    i32 -1820497375, label %320
    i32 1091663124, label %324
    i32 -183796319, label %334
    i32 -2070430163, label %351
    i32 -557169299, label %352
    i32 -1708078798, label %362
    i32 1556807984, label %373
    i32 1814561745, label %374
    i32 -2026985626, label %381
    i32 1081859920, label %391
    i32 1917696031, label %407
    i32 -1638907237, label %408
    i32 -349578094, label %418
    i32 440279995, label %434
    i32 -1822051556, label %435
    i32 -875026292, label %445
    i32 1991180156, label %460
    i32 -2032676228, label %462
    i32 931559168, label %472
    i32 -363952366, label %487
    i32 1922982364, label %488
    i32 -1668261242, label %495
    i32 -2122610968, label %505
    i32 -99600369, label %519
    i32 1542318853, label %520
    i32 -179088516, label %522
    i32 -26892439, label %523
    i32 -517428232, label %527
    i32 -130141489, label %535
    i32 959613429, label %537
    i32 -1711983472, label %547
    i32 -729641144, label %560
    i32 -1960742773, label %561
    i32 -1651993632, label %571
    i32 -1026463842, label %584
    i32 -2078991501, label %586
    i32 691492208, label %587
    i32 523939724, label %591
    i32 1021848407, label %597
    i32 1839960903, label %607
    i32 -2009146672, label %617
    i32 339022403, label %618
    i32 -1918180214, label %619
    i32 -803422991, label %629
    i32 -1474893719, label %641
    i32 -1250823062, label %643
    i32 -1547619652, label %655
    i32 -1736824455, label %665
    i32 816477956, label %676
    i32 -512371760, label %677
    i32 516322103, label %678
    i32 475964044, label %680
    i32 84251235, label %681
    i32 421765185, label %686
    i32 -1242171738, label %687
    i32 -418962656, label %691
    i32 -1167363424, label %698
    i32 741828025, label %708
    i32 1450908960, label %719
    i32 1730255331, label %720
    i32 196446015, label %722
    i32 2026095355, label %732
    i32 -735719826, label %743
    i32 -153382900, label %744
    i32 -353310578, label %745
    i32 -588393293, label %755
    i32 1902774848, label %765
    i32 1916093614, label %766
    i32 -1624652511, label %770
    i32 1119117181, label %775
    i32 1318635456, label %776
    i32 126833035, label %780
    i32 -1416130956, label %784
    i32 -980463605, label %786
    i32 331625054, label %787
    i32 1660553805, label %788
    i32 -1611375585, label %797
    i32 -1924575471, label %798
    i32 2018033662, label %806
    i32 -1335099395, label %807
    i32 952622650, label %814
    i32 -1586374144, label %821
    i32 -975275486, label %822
    i32 1795021972, label %828
    i32 776535018, label %834
    i32 870497912, label %837
    i32 1337457709, label %838
    i32 -1744349078, label %839
    i32 -271336643, label %840
    i32 99090627, label %842
    i32 2142491495, label %843
    i32 -2085140121, label %845
  ]

.backedge:                                        ; preds = %15, %845, %843, %842, %840, %839, %838, %837, %834, %828, %822, %821, %814, %807, %806, %798, %797, %788, %787, %786, %784, %780, %776, %775, %770, %766, %755, %745, %744, %743, %732, %722, %720, %719, %708, %698, %691, %687, %686, %681, %680, %678, %677, %676, %665, %655, %643, %641, %629, %619, %618, %617, %607, %597, %591, %587, %586, %584, %571, %561, %560, %547, %537, %535, %527, %523, %522, %520, %519, %505, %495, %488, %487, %472, %462, %460, %445, %435, %434, %418, %408, %407, %391, %381, %374, %373, %362, %352, %351, %334, %324, %320, %319, %317, %304, %294, %293, %275, %265, %263, %262, %252, %242, %240, %236, %233, %232, %229, %228, %227, %217, %207, %205, %201, %200, %189, %179, %178, %177, %165, %155, %154, %141, %131, %125, %121, %118, %117, %107, %97, %96, %82, %72, %68, %66, %64, %58, %54, %53, %40, %30, %29, %27, %23, %19, %16
  %.0138.be = phi i32 [ %.0138, %15 ], [ %.0138, %845 ], [ %.0138, %843 ], [ %.neg, %842 ], [ %841, %840 ], [ %.0138, %839 ], [ %.neg140, %838 ], [ %.0138, %837 ], [ %.0138, %834 ], [ %.0138, %828 ], [ %.0138, %822 ], [ %.0138, %821 ], [ %.0138, %814 ], [ %.0138, %807 ], [ %.neg142, %806 ], [ %.0138, %798 ], [ %.0138, %797 ], [ %.0138, %788 ], [ %.0138, %787 ], [ %.0138, %786 ], [ %.0138, %784 ], [ %.0138, %780 ], [ %.0138, %776 ], [ %.0138, %775 ], [ %.0138, %770 ], [ %.0138, %766 ], [ %.0138, %755 ], [ %.0138, %745 ], [ %.0138, %744 ], [ %.0138, %743 ], [ %.0138, %732 ], [ %.0138, %722 ], [ %.0138, %720 ], [ %.0138, %719 ], [ %709, %708 ], [ %.0138, %698 ], [ %.0138, %691 ], [ %.0138, %687 ], [ 0, %686 ], [ %.0138, %681 ], [ %.0138, %680 ], [ %.0138, %678 ], [ %.0138, %677 ], [ %.0138, %676 ], [ %666, %665 ], [ %.0138, %655 ], [ %.0138, %643 ], [ %.0138, %641 ], [ %.0138, %629 ], [ %.0138, %619 ], [ 0, %618 ], [ %.0138, %617 ], [ %.neg144, %607 ], [ %.0138, %597 ], [ %.0138, %591 ], [ %.0138, %587 ], [ 0, %586 ], [ %.0138, %584 ], [ %.0138, %571 ], [ %.0138, %561 ], [ %.0138, %560 ], [ %.0138, %547 ], [ %.0138, %537 ], [ %.0138, %535 ], [ %.0138, %527 ], [ %.0138, %523 ], [ %.0138, %522 ], [ %.0138, %520 ], [ %.0138, %519 ], [ %.0138, %505 ], [ %.0138, %495 ], [ %.0138, %488 ], [ %.0138, %487 ], [ %.0138, %472 ], [ %.0138, %462 ], [ %.0138, %460 ], [ %.0138, %445 ], [ %.0138, %435 ], [ %.0138, %434 ], [ %.0138, %418 ], [ %.0138, %408 ], [ %.0138, %407 ], [ %.0138, %391 ], [ %.0138, %381 ], [ %.0138, %374 ], [ %.0138, %373 ], [ %363, %362 ], [ %.0138, %352 ], [ %.0138, %351 ], [ %.0138, %334 ], [ %.0138, %324 ], [ %.0138, %320 ], [ 0, %319 ], [ %.0138, %317 ], [ %.0138, %304 ], [ %.0138, %294 ], [ %.0138, %293 ], [ %.0138, %275 ], [ %.0138, %265 ], [ %.0138, %263 ], [ %.0138, %262 ], [ %.0138, %252 ], [ %.0138, %242 ], [ %241, %240 ], [ %.0138, %236 ], [ %.0138, %233 ], [ 0, %232 ], [ %.0138, %229 ], [ %.0138, %228 ], [ %.0138, %227 ], [ %.0138, %217 ], [ %.0138, %207 ], [ %.0138, %205 ], [ %.0138, %201 ], [ %.0138, %200 ], [ %.0138, %189 ], [ %.0138, %179 ], [ %.0138, %178 ], [ %.0138, %177 ], [ %.0138, %165 ], [ %.0138, %155 ], [ %.0138, %154 ], [ %.0138, %141 ], [ %.0138, %131 ], [ %.0138, %125 ], [ %.0138, %121 ], [ %.0138, %118 ], [ %.0138, %117 ], [ %.0138, %107 ], [ %.0138, %97 ], [ %.0138, %96 ], [ %.0138, %82 ], [ %.0138, %72 ], [ %.0138, %68 ], [ %.0138, %66 ], [ %.0138, %64 ], [ %.0138, %58 ], [ %.0138, %54 ], [ %.0138, %53 ], [ %.0138, %40 ], [ %.0138, %30 ], [ %.0138, %29 ], [ %.0138, %27 ], [ %.0138, %23 ], [ %.0138, %19 ], [ %.0138, %16 ]
  %.0136.be = phi i32 [ %.0136, %15 ], [ %.0136, %845 ], [ %844, %843 ], [ %.0136, %842 ], [ %.0136, %840 ], [ %.0136, %839 ], [ %.0136, %838 ], [ %.0136, %837 ], [ 0, %834 ], [ %.0136, %828 ], [ %.0136, %822 ], [ %.0136, %821 ], [ %.0136, %814 ], [ %.0136, %807 ], [ %.0136, %806 ], [ %.0136, %798 ], [ %.0136, %797 ], [ 0, %788 ], [ %.0136, %787 ], [ %.0136, %786 ], [ %785, %784 ], [ %.0136, %780 ], [ %.0136, %776 ], [ %.neg143, %775 ], [ %.0136, %770 ], [ 0, %766 ], [ %.0136, %755 ], [ %.0136, %745 ], [ %.0136, %744 ], [ %.0136, %743 ], [ %733, %732 ], [ %.0136, %722 ], [ %.0136, %720 ], [ %.0136, %719 ], [ %.0136, %708 ], [ %.0136, %698 ], [ %.0136, %691 ], [ %.0136, %687 ], [ %.0136, %686 ], [ %.0136, %681 ], [ 0, %680 ], [ %679, %678 ], [ %.0136, %677 ], [ %.0136, %676 ], [ %.0136, %665 ], [ %.0136, %655 ], [ %.0136, %643 ], [ %.0136, %641 ], [ %.0136, %629 ], [ %.0136, %619 ], [ %.0136, %618 ], [ %.0136, %617 ], [ %.0136, %607 ], [ %.0136, %597 ], [ %.0136, %591 ], [ %.0136, %587 ], [ %.0136, %586 ], [ %.0136, %584 ], [ %.0136, %571 ], [ %.0136, %561 ], [ %.0136, %560 ], [ 0, %547 ], [ %.0136, %537 ], [ %536, %535 ], [ %.0136, %527 ], [ %.0136, %523 ], [ 0, %522 ], [ %521, %520 ], [ %.0136, %519 ], [ %.0136, %505 ], [ %.0136, %495 ], [ %.0136, %488 ], [ %.0136, %487 ], [ %.0136, %472 ], [ %.0136, %462 ], [ %.0136, %460 ], [ %.0136, %445 ], [ %.0136, %435 ], [ %.0136, %434 ], [ %.0136, %418 ], [ %.0136, %408 ], [ %.0136, %407 ], [ %.0136, %391 ], [ %.0136, %381 ], [ %.0136, %374 ], [ %.0136, %373 ], [ %.0136, %362 ], [ %.0136, %352 ], [ %.0136, %351 ], [ %.0136, %334 ], [ %.0136, %324 ], [ %.0136, %320 ], [ %.0136, %319 ], [ %.0136, %317 ], [ %.0136, %304 ], [ %.0136, %294 ], [ %.0136, %293 ], [ 0, %275 ], [ %.0136, %265 ], [ %264, %263 ], [ %.0136, %262 ], [ %.0136, %252 ], [ %.0136, %242 ], [ %.0136, %240 ], [ %.0136, %236 ], [ %.0136, %233 ], [ %.0136, %232 ], [ %.0136, %229 ], [ 0, %228 ], [ %.0136, %227 ], [ %.0136, %217 ], [ %.0136, %207 ], [ %.0136, %205 ], [ %.0136, %201 ], [ %.0136, %200 ], [ %190, %189 ], [ %.0136, %179 ], [ %.0136, %178 ], [ %.0136, %177 ], [ %.0136, %165 ], [ %.0136, %155 ], [ %.0136, %154 ], [ %.0136, %141 ], [ %.0136, %131 ], [ %.0136, %125 ], [ %.0136, %121 ], [ 0, %118 ], [ %.0136, %117 ], [ %.neg148, %107 ], [ %.0136, %97 ], [ %.0136, %96 ], [ %.0136, %82 ], [ %.0136, %72 ], [ %.0136, %68 ], [ 0, %66 ], [ %65, %64 ], [ %.0136, %58 ], [ %.0136, %54 ], [ %.0136, %53 ], [ 0, %40 ], [ %.0136, %30 ], [ %.0136, %29 ], [ %.0136, %27 ], [ %.0136, %23 ], [ %.0136, %19 ], [ %.0136, %16 ]
  %.0134.be = phi i32 [ %.0134, %15 ], [ %.0134, %845 ], [ %.0134, %843 ], [ %.0134, %842 ], [ %.0134, %840 ], [ %.0134, %839 ], [ %.0134, %838 ], [ %.0134, %837 ], [ %.0134, %834 ], [ %.0134, %828 ], [ %.0134, %822 ], [ %.0134, %821 ], [ %.0134, %814 ], [ %.0134, %807 ], [ %.0134, %806 ], [ %.0134, %798 ], [ %.0134, %797 ], [ %.0134, %788 ], [ %.0134, %787 ], [ %.0134, %786 ], [ %.0134, %784 ], [ %.0134, %780 ], [ %.0134, %776 ], [ %.0134, %775 ], [ %.0134, %770 ], [ %.0134, %766 ], [ %.0134, %755 ], [ %.0134, %745 ], [ %.0134, %744 ], [ %.0134, %743 ], [ %.0134, %732 ], [ %.0134, %722 ], [ %.0134, %720 ], [ %.0134, %719 ], [ %.0134, %708 ], [ %.0134, %698 ], [ %697, %691 ], [ %.0134, %687 ], [ 0, %686 ], [ %.0134, %681 ], [ %.0134, %680 ], [ %.0134, %678 ], [ %.0134, %677 ], [ %.0134, %676 ], [ %.0134, %665 ], [ %.0134, %655 ], [ %.0134, %643 ], [ %.0134, %641 ], [ %.0134, %629 ], [ %.0134, %619 ], [ %.0134, %618 ], [ %.0134, %617 ], [ %.0134, %607 ], [ %.0134, %597 ], [ %.0134, %591 ], [ %.0134, %587 ], [ %.0134, %586 ], [ %.0134, %584 ], [ %.0134, %571 ], [ %.0134, %561 ], [ %.0134, %560 ], [ %.0134, %547 ], [ %.0134, %537 ], [ %.0134, %535 ], [ %.0134, %527 ], [ %.0134, %523 ], [ %.0134, %522 ], [ %.0134, %520 ], [ %.0134, %519 ], [ %.0134, %505 ], [ %.0134, %495 ], [ %.0134, %488 ], [ %.0134, %487 ], [ %.0134, %472 ], [ %.0134, %462 ], [ %.0134, %460 ], [ %.0134, %445 ], [ %.0134, %435 ], [ %.0134, %434 ], [ %.0134, %418 ], [ %.0134, %408 ], [ %.0134, %407 ], [ %.0134, %391 ], [ %.0134, %381 ], [ %.0134, %374 ], [ %.0134, %373 ], [ %.0134, %362 ], [ %.0134, %352 ], [ %.0134, %351 ], [ %.0134, %334 ], [ %.0134, %324 ], [ %.0134, %320 ], [ %.0134, %319 ], [ %.0134, %317 ], [ %.0134, %304 ], [ %.0134, %294 ], [ %.0134, %293 ], [ %.0134, %275 ], [ %.0134, %265 ], [ %.0134, %263 ], [ %.0134, %262 ], [ %.0134, %252 ], [ %.0134, %242 ], [ %.0134, %240 ], [ %.0134, %236 ], [ %.0134, %233 ], [ %.0134, %232 ], [ %.0134, %229 ], [ %.0134, %228 ], [ %.0134, %227 ], [ %.0134, %217 ], [ %.0134, %207 ], [ %.0134, %205 ], [ %.0134, %201 ], [ %.0134, %200 ], [ %.0134, %189 ], [ %.0134, %179 ], [ %.0134, %178 ], [ %.0134, %177 ], [ %.0134, %165 ], [ %.0134, %155 ], [ %.0134, %154 ], [ %.0134, %141 ], [ %.0134, %131 ], [ %.0134, %125 ], [ %.0134, %121 ], [ %.0134, %118 ], [ %.0134, %117 ], [ %.0134, %107 ], [ %.0134, %97 ], [ %.0134, %96 ], [ %.0134, %82 ], [ %.0134, %72 ], [ %.0134, %68 ], [ %.0134, %66 ], [ %.0134, %64 ], [ %.0134, %58 ], [ %.0134, %54 ], [ %.0134, %53 ], [ %.0134, %40 ], [ %.0134, %30 ], [ %.0134, %29 ], [ %.0134, %27 ], [ %.0134, %23 ], [ %.0134, %19 ], [ %.0134, %16 ]
  %.0132.be = phi i32 [ %.0132, %15 ], [ %.0132, %845 ], [ %.0132, %843 ], [ %.0132, %842 ], [ %.0132, %840 ], [ %.0132, %839 ], [ %.0132, %838 ], [ %.0132, %837 ], [ %.0132, %834 ], [ %.0132, %828 ], [ %.0132, %822 ], [ %.0132, %821 ], [ %.0132, %814 ], [ %.0132, %807 ], [ %.0132, %806 ], [ %.0132, %798 ], [ %.0132, %797 ], [ %.0132, %788 ], [ %.0132, %787 ], [ %.0132, %786 ], [ %.0132, %784 ], [ %.0132, %780 ], [ %.0132, %776 ], [ %.0132, %775 ], [ %.0132, %770 ], [ 0, %766 ], [ %.0132, %755 ], [ %.0132, %745 ], [ %.0132, %744 ], [ %.0132, %743 ], [ %.0132, %732 ], [ %.0132, %722 ], [ %.0132, %720 ], [ %.0132, %719 ], [ %.0132, %708 ], [ %.0132, %698 ], [ %.0132, %691 ], [ %.0132, %687 ], [ %.0132, %686 ], [ %.0132, %681 ], [ %.0132, %680 ], [ %.0132, %678 ], [ %.0132, %677 ], [ %.0132, %676 ], [ %.0132, %665 ], [ %.0132, %655 ], [ %.0132, %643 ], [ %.0132, %641 ], [ %.0132, %629 ], [ %.0132, %619 ], [ %.0132, %618 ], [ %.0132, %617 ], [ %.0132, %607 ], [ %.0132, %597 ], [ %.0132, %591 ], [ %.0132, %587 ], [ %.0132, %586 ], [ %.0132, %584 ], [ %.0132, %571 ], [ %.0132, %561 ], [ %.0132, %560 ], [ %.0132, %547 ], [ %.0132, %537 ], [ %.0132, %535 ], [ %.0132, %527 ], [ %.0132, %523 ], [ %.0132, %522 ], [ %.0132, %520 ], [ %.0132, %519 ], [ %.0132, %505 ], [ %.0132, %495 ], [ %.0132, %488 ], [ %.0132, %487 ], [ %.0132, %472 ], [ %.0132, %462 ], [ %.0132, %460 ], [ %.0132, %445 ], [ %.0132, %435 ], [ %.0132, %434 ], [ %.0132, %418 ], [ %.0132, %408 ], [ %.0132, %407 ], [ %.0132, %391 ], [ %.0132, %381 ], [ %.0132, %374 ], [ %.0132, %373 ], [ %.0132, %362 ], [ %.0132, %352 ], [ %.0132, %351 ], [ %.0132, %334 ], [ %.0132, %324 ], [ %.0132, %320 ], [ %.0132, %319 ], [ %.0132, %317 ], [ %.0132, %304 ], [ %.0132, %294 ], [ %.0132, %293 ], [ %.0132, %275 ], [ %.0132, %265 ], [ %.0132, %263 ], [ %.0132, %262 ], [ %.0132, %252 ], [ %.0132, %242 ], [ %.0132, %240 ], [ %.0132, %236 ], [ %.0132, %233 ], [ %.0132, %232 ], [ %.0132, %229 ], [ %.0132, %228 ], [ %.0132, %227 ], [ %.0132, %217 ], [ %.0132, %207 ], [ %.0132, %205 ], [ %.0132, %201 ], [ %.0132, %200 ], [ %.0132, %189 ], [ %.0132, %179 ], [ %.0132, %178 ], [ %.0132, %177 ], [ %.0132, %165 ], [ %.0132, %155 ], [ %.0132, %154 ], [ %.0132, %141 ], [ %.0132, %131 ], [ %.0132, %125 ], [ %.0132, %121 ], [ %.0132, %118 ], [ %.0132, %117 ], [ %.0132, %107 ], [ %.0132, %97 ], [ %.0132, %96 ], [ %.0132, %82 ], [ %.0132, %72 ], [ %.0132, %68 ], [ %.0132, %66 ], [ %.0132, %64 ], [ %62, %58 ], [ %.0132, %54 ], [ %.0132, %53 ], [ 0, %40 ], [ %.0132, %30 ], [ %.0132, %29 ], [ %.0132, %27 ], [ %.0132, %23 ], [ %.0132, %19 ], [ %.0132, %16 ]
  %.0130.be = phi i32 [ %.0130, %15 ], [ %.0130, %845 ], [ %.0130, %843 ], [ %.0130, %842 ], [ %.0130, %840 ], [ %.0130, %839 ], [ %.0130, %838 ], [ %.0130, %837 ], [ %.neg141, %834 ], [ %833, %828 ], [ %.0130, %822 ], [ %.0130, %821 ], [ %.0130, %814 ], [ %.0130, %807 ], [ %.0130, %806 ], [ %.0130, %798 ], [ %.0130, %797 ], [ %796, %788 ], [ %.0130, %787 ], [ %.0130, %786 ], [ %.0130, %784 ], [ %.0130, %780 ], [ %.0130, %776 ], [ %.0130, %775 ], [ %774, %770 ], [ %769, %766 ], [ %.0130, %755 ], [ %.0130, %745 ], [ %.0130, %744 ], [ %.0130, %743 ], [ %.0130, %732 ], [ %.0130, %722 ], [ %.0130, %720 ], [ %.0130, %719 ], [ %.0130, %708 ], [ %.0130, %698 ], [ %.0130, %691 ], [ %.0130, %687 ], [ %.0130, %686 ], [ %.0130, %681 ], [ %.0130, %680 ], [ %.0130, %678 ], [ %.0130, %677 ], [ %.0130, %676 ], [ %.0130, %665 ], [ %.0130, %655 ], [ %.0130, %643 ], [ %.0130, %641 ], [ %.0130, %629 ], [ %.0130, %619 ], [ %.0130, %618 ], [ %.0130, %617 ], [ %.0130, %607 ], [ %.0130, %597 ], [ %.0130, %591 ], [ %.0130, %587 ], [ %.0130, %586 ], [ %.0130, %584 ], [ %.0130, %571 ], [ %.0130, %561 ], [ %.0130, %560 ], [ %550, %547 ], [ %.0130, %537 ], [ %.0130, %535 ], [ %.0130, %527 ], [ %.0130, %523 ], [ %.0130, %522 ], [ %.0130, %520 ], [ %.0130, %519 ], [ %509, %505 ], [ %.0130, %495 ], [ %.0130, %488 ], [ %.0130, %487 ], [ %.0130, %472 ], [ %.0130, %462 ], [ %.0130, %460 ], [ %.0130, %445 ], [ %.0130, %435 ], [ %.0130, %434 ], [ %.0130, %418 ], [ %.0130, %408 ], [ %.0130, %407 ], [ %.0130, %391 ], [ %.0130, %381 ], [ %.0130, %374 ], [ %.0130, %373 ], [ %.0130, %362 ], [ %.0130, %352 ], [ %.0130, %351 ], [ %.0130, %334 ], [ %.0130, %324 ], [ %.0130, %320 ], [ %.0130, %319 ], [ %.0130, %317 ], [ %.0130, %304 ], [ %.0130, %294 ], [ %.0130, %293 ], [ %283, %275 ], [ %.0130, %265 ], [ %.0130, %263 ], [ %.0130, %262 ], [ %.0130, %252 ], [ %.0130, %242 ], [ %.0130, %240 ], [ %.0130, %236 ], [ %.0130, %233 ], [ %.0130, %232 ], [ %.0130, %229 ], [ %.0130, %228 ], [ %.0130, %227 ], [ %.0130, %217 ], [ %.0130, %207 ], [ %.0130, %205 ], [ %.0130, %201 ], [ %.0130, %200 ], [ %.0130, %189 ], [ %.0130, %179 ], [ %.0130, %178 ], [ %.0130, %177 ], [ %.0130, %165 ], [ %.0130, %155 ], [ %.0130, %154 ], [ %.0130, %141 ], [ %.0130, %131 ], [ %.0130, %125 ], [ %.0130, %121 ], [ %.0130, %118 ], [ %.0130, %117 ], [ %.0130, %107 ], [ %.0130, %97 ], [ %.0130, %96 ], [ %86, %82 ], [ %.0130, %72 ], [ %.0130, %68 ], [ %67, %66 ], [ %.0130, %64 ], [ %63, %58 ], [ %.0130, %54 ], [ %.0130, %53 ], [ %43, %40 ], [ %.0130, %30 ], [ %.0130, %29 ], [ %.0130, %27 ], [ %.0130, %23 ], [ %.0130, %19 ], [ %.0130, %16 ]
  %.0128.be = phi i32 [ %.0128, %15 ], [ %.0128, %845 ], [ %.0128, %843 ], [ %.0128, %842 ], [ %.0128, %840 ], [ %.0128, %839 ], [ %.0128, %838 ], [ %.0128, %837 ], [ %.0128, %834 ], [ %.0128, %828 ], [ %.0128, %822 ], [ %.0128, %821 ], [ %.0128, %814 ], [ %.0128, %807 ], [ %.0128, %806 ], [ %.0128, %798 ], [ %.0128, %797 ], [ %.0128, %788 ], [ %.0128, %787 ], [ %.0128, %786 ], [ %.0128, %784 ], [ %783, %780 ], [ %.0128, %776 ], [ %.0128, %775 ], [ %.0128, %770 ], [ %.0128, %766 ], [ %.0128, %755 ], [ %.0128, %745 ], [ %.0128, %744 ], [ %.0128, %743 ], [ %.0128, %732 ], [ %.0128, %722 ], [ %.0128, %720 ], [ %.0128, %719 ], [ %.0128, %708 ], [ %.0128, %698 ], [ %.0128, %691 ], [ %.0128, %687 ], [ %.0128, %686 ], [ %.0128, %681 ], [ %.0128, %680 ], [ %.0128, %678 ], [ %.0128, %677 ], [ %.0128, %676 ], [ %.0128, %665 ], [ %.0128, %655 ], [ %.0128, %643 ], [ %.0128, %641 ], [ %.0128, %629 ], [ %.0128, %619 ], [ %.0128, %618 ], [ %.0128, %617 ], [ %.0128, %607 ], [ %.0128, %597 ], [ %.0128, %591 ], [ %.0128, %587 ], [ %.0128, %586 ], [ %.0128, %584 ], [ %.0128, %571 ], [ %.0128, %561 ], [ %.0128, %560 ], [ %.0128, %547 ], [ %.0128, %537 ], [ %.0128, %535 ], [ %.0128, %527 ], [ %.0128, %523 ], [ %.0128, %522 ], [ %.0128, %520 ], [ %.0128, %519 ], [ %.0128, %505 ], [ %.0128, %495 ], [ %.0128, %488 ], [ %.0128, %487 ], [ %.0128, %472 ], [ %.0128, %462 ], [ %.0128, %460 ], [ %.0128, %445 ], [ %.0128, %435 ], [ %.0128, %434 ], [ %.0128, %418 ], [ %.0128, %408 ], [ %.0128, %407 ], [ %.0128, %391 ], [ %.0128, %381 ], [ %.0128, %374 ], [ %.0128, %373 ], [ %.0128, %362 ], [ %.0128, %352 ], [ %.0128, %351 ], [ %.0128, %334 ], [ %.0128, %324 ], [ %.0128, %320 ], [ %.0128, %319 ], [ %.0128, %317 ], [ %.0128, %304 ], [ %.0128, %294 ], [ %.0128, %293 ], [ %.0128, %275 ], [ %.0128, %265 ], [ %.0128, %263 ], [ %.0128, %262 ], [ %.0128, %252 ], [ %.0128, %242 ], [ %.0128, %240 ], [ %.0128, %236 ], [ %.0128, %233 ], [ %.0128, %232 ], [ %.0128, %229 ], [ %.0128, %228 ], [ %.0128, %227 ], [ %.0128, %217 ], [ %.0128, %207 ], [ %.0128, %205 ], [ %.0128, %201 ], [ %.0128, %200 ], [ %.0128, %189 ], [ %.0128, %179 ], [ %.0128, %178 ], [ %.0128, %177 ], [ %.neg147, %165 ], [ %.0128, %155 ], [ %.0128, %154 ], [ %.0128, %141 ], [ %.0128, %131 ], [ %.0128, %125 ], [ %.0128, %121 ], [ 0, %118 ], [ %.0128, %117 ], [ %.0128, %107 ], [ %.0128, %97 ], [ %.0128, %96 ], [ %.0128, %82 ], [ %.0128, %72 ], [ %.0128, %68 ], [ %.0128, %66 ], [ %.0128, %64 ], [ %.0128, %58 ], [ %.0128, %54 ], [ %.0128, %53 ], [ %.0128, %40 ], [ %.0128, %30 ], [ %.0128, %29 ], [ %.0128, %27 ], [ %.0128, %23 ], [ %.0128, %19 ], [ %.0128, %16 ]
  %.0126.be = phi i32 [ %.0126, %15 ], [ %.0126, %845 ], [ %.0126, %843 ], [ %.0126, %842 ], [ %.0126, %840 ], [ %.0126, %839 ], [ %.0126, %838 ], [ %.0126, %837 ], [ %.0126, %834 ], [ %.0126, %828 ], [ %.0126, %822 ], [ %.0126, %821 ], [ %.0126, %814 ], [ %.0126, %807 ], [ %.0126, %806 ], [ %.0126, %798 ], [ %.0126, %797 ], [ %.0126, %788 ], [ %.0126, %787 ], [ %.0126, %786 ], [ %.0126, %784 ], [ %.0126, %780 ], [ %779, %776 ], [ %.0126, %775 ], [ %.0126, %770 ], [ %.0126, %766 ], [ %.0126, %755 ], [ %.0126, %745 ], [ %.0126, %744 ], [ %.0126, %743 ], [ %.0126, %732 ], [ %.0126, %722 ], [ %.0126, %720 ], [ %.0126, %719 ], [ %.0126, %708 ], [ %.0126, %698 ], [ %.0126, %691 ], [ %.0126, %687 ], [ %.0126, %686 ], [ %.0126, %681 ], [ %.0126, %680 ], [ %.0126, %678 ], [ %.0126, %677 ], [ %.0126, %676 ], [ %.0126, %665 ], [ %.0126, %655 ], [ %.0126, %643 ], [ %.0126, %641 ], [ %.0126, %629 ], [ %.0126, %619 ], [ %.0126, %618 ], [ %.0126, %617 ], [ %.0126, %607 ], [ %.0126, %597 ], [ %.0126, %591 ], [ %.0126, %587 ], [ %.0126, %586 ], [ %.0126, %584 ], [ %.0126, %571 ], [ %.0126, %561 ], [ %.0126, %560 ], [ %.0126, %547 ], [ %.0126, %537 ], [ %.0126, %535 ], [ %.0126, %527 ], [ %.0126, %523 ], [ %.0126, %522 ], [ %.0126, %520 ], [ %.0126, %519 ], [ %.0126, %505 ], [ %.0126, %495 ], [ %.0126, %488 ], [ %.0126, %487 ], [ %.0126, %472 ], [ %.0126, %462 ], [ %.0126, %460 ], [ %.0126, %445 ], [ %.0126, %435 ], [ %.0126, %434 ], [ %.0126, %418 ], [ %.0126, %408 ], [ %.0126, %407 ], [ %.0126, %391 ], [ %.0126, %381 ], [ %.0126, %374 ], [ %.0126, %373 ], [ %.0126, %362 ], [ %.0126, %352 ], [ %.0126, %351 ], [ %.0126, %334 ], [ %.0126, %324 ], [ %.0126, %320 ], [ %.0126, %319 ], [ %.0126, %317 ], [ %.0126, %304 ], [ %.0126, %294 ], [ %.0126, %293 ], [ %.0126, %275 ], [ %.0126, %265 ], [ %.0126, %263 ], [ %.0126, %262 ], [ %.0126, %252 ], [ %.0126, %242 ], [ %.0126, %240 ], [ %.0126, %236 ], [ %.0126, %233 ], [ %.0126, %232 ], [ %.0126, %229 ], [ %.0126, %228 ], [ %.0126, %227 ], [ %.0126, %217 ], [ %.0126, %207 ], [ %.0126, %205 ], [ %.0126, %201 ], [ %.0126, %200 ], [ %.0126, %189 ], [ %.0126, %179 ], [ %.0126, %178 ], [ %.0126, %177 ], [ %.0126, %165 ], [ %.0126, %155 ], [ %.0126, %154 ], [ %144, %141 ], [ %.0126, %131 ], [ %.0126, %125 ], [ %.0126, %121 ], [ %120, %118 ], [ %.0126, %117 ], [ %.0126, %107 ], [ %.0126, %97 ], [ %.0126, %96 ], [ %.0126, %82 ], [ %.0126, %72 ], [ %.0126, %68 ], [ %.0126, %66 ], [ %.0126, %64 ], [ %.0126, %58 ], [ %.0126, %54 ], [ %.0126, %53 ], [ %.0126, %40 ], [ %.0126, %30 ], [ %.0126, %29 ], [ %.0126, %27 ], [ %.0126, %23 ], [ %.0126, %19 ], [ %.0126, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ -588393293, %845 ], [ 2026095355, %843 ], [ 741828025, %842 ], [ -1736824455, %840 ], [ -803422991, %839 ], [ 1839960903, %838 ], [ -1651993632, %837 ], [ -1711983472, %834 ], [ -2122610968, %828 ], [ 931559168, %822 ], [ -875026292, %821 ], [ -349578094, %814 ], [ 1081859920, %807 ], [ -1708078798, %806 ], [ -183796319, %798 ], [ -2079379224, %797 ], [ -1963631794, %788 ], [ -1607133498, %787 ], [ -424919082, %786 ], [ -2090414142, %784 ], [ -1713214400, %780 ], [ 1922967329, %776 ], [ 1861137272, %775 ], [ 212695820, %770 ], [ -392939750, %766 ], [ %764, %755 ], [ %754, %745 ], [ -353310578, %744 ], [ 84251235, %743 ], [ %742, %732 ], [ %731, %722 ], [ 196446015, %720 ], [ -1242171738, %719 ], [ %718, %708 ], [ %707, %698 ], [ -1167363424, %691 ], [ %690, %687 ], [ -1242171738, %686 ], [ %685, %681 ], [ 84251235, %680 ], [ -1960742773, %678 ], [ 516322103, %677 ], [ -1918180214, %676 ], [ %675, %665 ], [ %664, %655 ], [ -1547619652, %643 ], [ %642, %641 ], [ %640, %629 ], [ %628, %619 ], [ -1918180214, %618 ], [ 691492208, %617 ], [ %616, %607 ], [ %606, %597 ], [ 1021848407, %591 ], [ %590, %587 ], [ 691492208, %586 ], [ %585, %584 ], [ %583, %571 ], [ %570, %561 ], [ -1960742773, %560 ], [ %559, %547 ], [ %546, %537 ], [ -26892439, %535 ], [ -130141489, %527 ], [ %526, %523 ], [ -26892439, %522 ], [ -1846558578, %520 ], [ 1542318853, %519 ], [ %518, %505 ], [ %504, %495 ], [ -1668261242, %488 ], [ -1668261242, %487 ], [ %486, %472 ], [ %471, %462 ], [ %461, %460 ], [ %459, %445 ], [ %444, %435 ], [ -1822051556, %434 ], [ %433, %418 ], [ %417, %408 ], [ -1822051556, %407 ], [ %406, %391 ], [ %390, %381 ], [ %380, %374 ], [ -1820497375, %373 ], [ %372, %362 ], [ %361, %352 ], [ -557169299, %351 ], [ %350, %334 ], [ %333, %324 ], [ %323, %320 ], [ -1820497375, %319 ], [ %318, %317 ], [ %316, %304 ], [ %303, %294 ], [ -1846558578, %293 ], [ %292, %275 ], [ %274, %265 ], [ 1234768214, %263 ], [ 1562797169, %262 ], [ %261, %252 ], [ %251, %242 ], [ -918182415, %240 ], [ 217089661, %236 ], [ %235, %233 ], [ -918182415, %232 ], [ %231, %229 ], [ 1234768214, %228 ], [ -784725022, %227 ], [ %226, %217 ], [ %216, %207 ], [ -353310578, %205 ], [ %204, %201 ], [ 972730283, %200 ], [ %199, %189 ], [ %188, %179 ], [ -2048532863, %178 ], [ 1417147586, %177 ], [ %176, %165 ], [ %164, %155 ], [ 1417147586, %154 ], [ %153, %141 ], [ %140, %131 ], [ %130, %125 ], [ %124, %121 ], [ 972730283, %118 ], [ -1191158560, %117 ], [ %116, %107 ], [ %106, %97 ], [ 1975765184, %96 ], [ %95, %82 ], [ %81, %72 ], [ %71, %68 ], [ -1191158560, %66 ], [ -1109660671, %64 ], [ -949237181, %58 ], [ %57, %54 ], [ -1109660671, %53 ], [ %52, %40 ], [ %39, %30 ], [ -353310578, %29 ], [ -708052950, %27 ], [ -708052950, %23 ], [ %22, %19 ], [ %18, %16 ]
  br label %15

16:                                               ; preds = %15
  %.0..0..0. = load volatile i32, i32* %6, align 4
  %17 = icmp eq i32 %.0..0..0., 1
  %18 = select i1 %17, i32 -1928299380, i32 -1076511240
  br label %.backedge

19:                                               ; preds = %15
  %20 = load i32, i32* %7, align 4
  %21 = load i32, i32* %8, align 4
  %.not = icmp eq i32 %20, %21
  %22 = select i1 %.not, i32 -681999906, i32 2066906776
  br label %.backedge

23:                                               ; preds = %15
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %8, align 4
  %26 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %24, i32 %25)
  br label %.backedge

27:                                               ; preds = %15
  %28 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

29:                                               ; preds = %15
  br label %.backedge

30:                                               ; preds = %15
  %31 = load i32, i32* @x.7, align 4
  %32 = load i32, i32* @y.8, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 -392939750, i32 1916093614
  br label %.backedge

40:                                               ; preds = %15
  %41 = load i32, i32* %7, align 4
  %42 = load i32, i32* %8, align 4
  %43 = xor i32 %42, %41
  %44 = load i32, i32* @x.7, align 4
  %45 = load i32, i32* @y.8, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 1858403654, i32 1916093614
  br label %.backedge

53:                                               ; preds = %15
  br label %.backedge

54:                                               ; preds = %15
  %55 = load i32, i32* @n, align 4
  %56 = icmp slt i32 %.0136, %55
  %57 = select i1 %56, i32 -506021160, i32 265209807
  br label %.backedge

58:                                               ; preds = %15
  %59 = srem i32 %.0130, 2
  %60 = sext i32 %.0136 to i64
  %61 = getelementptr inbounds [20 x i32], [20 x i32]* %9, i64 0, i64 %60
  store i32 %59, i32* %61, align 4
  %62 = add i32 %59, %.0132
  %63 = sdiv i32 %.0130, 2
  br label %.backedge

64:                                               ; preds = %15
  %65 = add i32 %.0136, 1
  br label %.backedge

66:                                               ; preds = %15
  %67 = load i32, i32* %7, align 4
  br label %.backedge

68:                                               ; preds = %15
  %69 = load i32, i32* @n, align 4
  %70 = icmp slt i32 %.0136, %69
  %71 = select i1 %70, i32 112325169, i32 57843001
  br label %.backedge

72:                                               ; preds = %15
  %73 = load i32, i32* @x.7, align 4
  %74 = load i32, i32* @y.8, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 212695820, i32 -1624652511
  br label %.backedge

82:                                               ; preds = %15
  %83 = srem i32 %.0130, 2
  %84 = sext i32 %.0136 to i64
  %85 = getelementptr inbounds [20 x i32], [20 x i32]* %10, i64 0, i64 %84
  store i32 %83, i32* %85, align 4
  %86 = sdiv i32 %.0130, 2
  %87 = load i32, i32* @x.7, align 4
  %88 = load i32, i32* @y.8, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 1361528241, i32 -1624652511
  br label %.backedge

96:                                               ; preds = %15
  br label %.backedge

97:                                               ; preds = %15
  %98 = load i32, i32* @x.7, align 4
  %99 = load i32, i32* @y.8, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 1861137272, i32 1119117181
  br label %.backedge

107:                                              ; preds = %15
  %.neg148 = add i32 %.0136, 1
  %108 = load i32, i32* @x.7, align 4
  %109 = load i32, i32* @y.8, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -1033585378, i32 1119117181
  br label %.backedge

117:                                              ; preds = %15
  br label %.backedge

118:                                              ; preds = %15
  %119 = load i32, i32* @n, align 4
  %120 = sub i32 %119, %.0132
  br label %.backedge

121:                                              ; preds = %15
  %122 = load i32, i32* @n, align 4
  %123 = icmp slt i32 %.0136, %122
  %124 = select i1 %123, i32 -2073204037, i32 36297340
  br label %.backedge

125:                                              ; preds = %15
  %126 = sext i32 %.0136 to i64
  %127 = getelementptr inbounds [20 x i32], [20 x i32]* %9, i64 0, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 1
  %130 = select i1 %129, i32 395897032, i32 73926838
  br label %.backedge

131:                                              ; preds = %15
  %132 = load i32, i32* @x.7, align 4
  %133 = load i32, i32* @y.8, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 1922967329, i32 1318635456
  br label %.backedge

141:                                              ; preds = %15
  %142 = sext i32 %.0136 to i64
  %143 = getelementptr inbounds [20 x i32], [20 x i32]* %11, i64 0, i64 %142
  store i32 %.0126, i32* %143, align 4
  %144 = add i32 %.0126, 1
  %145 = load i32, i32* @x.7, align 4
  %146 = load i32, i32* @y.8, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 300046373, i32 1318635456
  br label %.backedge

154:                                              ; preds = %15
  br label %.backedge

155:                                              ; preds = %15
  %156 = load i32, i32* @x.7, align 4
  %157 = load i32, i32* @y.8, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 -1713214400, i32 126833035
  br label %.backedge

165:                                              ; preds = %15
  %166 = sext i32 %.0136 to i64
  %167 = getelementptr inbounds [20 x i32], [20 x i32]* %11, i64 0, i64 %166
  store i32 %.0128, i32* %167, align 4
  %.neg147 = add i32 %.0128, 1
  %168 = load i32, i32* @x.7, align 4
  %169 = load i32, i32* @y.8, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -281275384, i32 126833035
  br label %.backedge

177:                                              ; preds = %15
  br label %.backedge

178:                                              ; preds = %15
  br label %.backedge

179:                                              ; preds = %15
  %180 = load i32, i32* @x.7, align 4
  %181 = load i32, i32* @y.8, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 -2090414142, i32 -1416130956
  br label %.backedge

189:                                              ; preds = %15
  %190 = add i32 %.0136, 1
  %191 = load i32, i32* @x.7, align 4
  %192 = load i32, i32* @y.8, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -86009382, i32 -1416130956
  br label %.backedge

200:                                              ; preds = %15
  br label %.backedge

201:                                              ; preds = %15
  %202 = and i32 %.0132, 1
  %203 = icmp eq i32 %202, 0
  %204 = select i1 %203, i32 1034823042, i32 671091644
  br label %.backedge

205:                                              ; preds = %15
  %206 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

207:                                              ; preds = %15
  %208 = load i32, i32* @x.7, align 4
  %209 = load i32, i32* @y.8, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 -424919082, i32 -980463605
  br label %.backedge

217:                                              ; preds = %15
  %puts146 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0))
  %218 = load i32, i32* @x.7, align 4
  %219 = load i32, i32* @y.8, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -1774822918, i32 -980463605
  br label %.backedge

227:                                              ; preds = %15
  br label %.backedge

228:                                              ; preds = %15
  br label %.backedge

229:                                              ; preds = %15
  %230 = icmp slt i32 %.0136, 200010
  %231 = select i1 %230, i32 1820861397, i32 -964844427
  br label %.backedge

232:                                              ; preds = %15
  br label %.backedge

233:                                              ; preds = %15
  %234 = icmp slt i32 %.0138, 20
  %235 = select i1 %234, i32 -1244545450, i32 1734416098
  br label %.backedge

236:                                              ; preds = %15
  %237 = sext i32 %.0136 to i64
  %238 = sext i32 %.0138 to i64
  %239 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %237, i64 %238
  store i32 0, i32* %239, align 4
  br label %.backedge

240:                                              ; preds = %15
  %241 = add i32 %.0138, 1
  br label %.backedge

242:                                              ; preds = %15
  %243 = load i32, i32* @x.7, align 4
  %244 = load i32, i32* @y.8, align 4
  %245 = add i32 %243, -1
  %246 = mul i32 %245, %243
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %249, %248
  %251 = select i1 %250, i32 -1607133498, i32 331625054
  br label %.backedge

252:                                              ; preds = %15
  %253 = load i32, i32* @x.7, align 4
  %254 = load i32, i32* @y.8, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 1464654795, i32 331625054
  br label %.backedge

262:                                              ; preds = %15
  br label %.backedge

263:                                              ; preds = %15
  %264 = add i32 %.0136, 1
  br label %.backedge

265:                                              ; preds = %15
  %266 = load i32, i32* @x.7, align 4
  %267 = load i32, i32* @y.8, align 4
  %268 = add i32 %266, -1
  %269 = mul i32 %268, %266
  %270 = and i32 %269, 1
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %272, %271
  %274 = select i1 %273, i32 -1963631794, i32 1660553805
  br label %.backedge

275:                                              ; preds = %15
  %276 = load i32, i32* @n, align 4
  %277 = xor i32 %.0132, -1
  %278 = add i32 %276, %277
  store i32 %278, i32* @even, align 4
  %279 = add i32 %276, -1
  %280 = call i32 @_Z5haitiiii(i32 %278, i32 %279, i32 0)
  %281 = load i32, i32* @n, align 4
  %282 = add i32 %281, -1
  %283 = shl nuw i32 1, %282
  %284 = load i32, i32* @x.7, align 4
  %285 = load i32, i32* @y.8, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 1236391999, i32 1660553805
  br label %.backedge

293:                                              ; preds = %15
  br label %.backedge

294:                                              ; preds = %15
  %295 = load i32, i32* @x.7, align 4
  %296 = load i32, i32* @y.8, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 -2079379224, i32 -1611375585
  br label %.backedge

304:                                              ; preds = %15
  %305 = load i32, i32* @n, align 4
  %306 = add i32 %305, -1
  %307 = icmp slt i32 %.0136, %306
  store i1 %307, i1* %5, align 1
  %308 = load i32, i32* @x.7, align 4
  %309 = load i32, i32* @y.8, align 4
  %310 = add i32 %308, -1
  %311 = mul i32 %310, %308
  %312 = and i32 %311, 1
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %314, %313
  %316 = select i1 %315, i32 226165447, i32 -1611375585
  br label %.backedge

317:                                              ; preds = %15
  %.0..0..0.119 = load volatile i1, i1* %5, align 1
  %318 = select i1 %.0..0..0.119, i32 313017401, i32 -179088516
  br label %.backedge

319:                                              ; preds = %15
  br label %.backedge

320:                                              ; preds = %15
  %321 = load i32, i32* @n, align 4
  %322 = icmp slt i32 %.0138, %321
  %323 = select i1 %322, i32 1091663124, i32 1814561745
  br label %.backedge

324:                                              ; preds = %15
  %325 = load i32, i32* @x.7, align 4
  %326 = load i32, i32* @y.8, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 -183796319, i32 -1924575471
  br label %.backedge

334:                                              ; preds = %15
  %335 = add i32 %.0130, -1
  %336 = sext i32 %335 to i64
  %337 = sext i32 %.0138 to i64
  %338 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %336, i64 %337
  %339 = load i32, i32* %338, align 4
  %340 = sext i32 %.0130 to i64
  %341 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %340, i64 %337
  store i32 %339, i32* %341, align 4
  %342 = load i32, i32* @x.7, align 4
  %343 = load i32, i32* @y.8, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 -2070430163, i32 -1924575471
  br label %.backedge

351:                                              ; preds = %15
  br label %.backedge

352:                                              ; preds = %15
  %353 = load i32, i32* @x.7, align 4
  %354 = load i32, i32* @y.8, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 -1708078798, i32 2018033662
  br label %.backedge

362:                                              ; preds = %15
  %363 = add i32 %.0138, 1
  %364 = load i32, i32* @x.7, align 4
  %365 = load i32, i32* @y.8, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 1556807984, i32 2018033662
  br label %.backedge

373:                                              ; preds = %15
  br label %.backedge

374:                                              ; preds = %15
  %375 = load i32, i32* @n, align 4
  %376 = xor i32 %.0136, -1
  %377 = add i32 %375, %376
  %378 = load i32, i32* @even, align 4
  %379 = icmp sgt i32 %377, %378
  %380 = select i1 %379, i32 -2026985626, i32 -1638907237
  br label %.backedge

381:                                              ; preds = %15
  %382 = load i32, i32* @x.7, align 4
  %383 = load i32, i32* @y.8, align 4
  %384 = add i32 %382, -1
  %385 = mul i32 %384, %382
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %388, %387
  %390 = select i1 %389, i32 1081859920, i32 -1335099395
  br label %.backedge

391:                                              ; preds = %15
  %392 = sext i32 %.0130 to i64
  %393 = load i32, i32* @n, align 4
  %394 = xor i32 %.0136, -1
  %395 = add i32 %393, %394
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %392, i64 %396
  store i32 1, i32* %397, align 4
  %398 = load i32, i32* @x.7, align 4
  %399 = load i32, i32* @y.8, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 1917696031, i32 -1335099395
  br label %.backedge

407:                                              ; preds = %15
  br label %.backedge

408:                                              ; preds = %15
  %409 = load i32, i32* @x.7, align 4
  %410 = load i32, i32* @y.8, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 -349578094, i32 952622650
  br label %.backedge

418:                                              ; preds = %15
  %419 = sext i32 %.0130 to i64
  %420 = load i32, i32* @n, align 4
  %421 = xor i32 %.0136, -1
  %422 = add i32 %420, %421
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %419, i64 %423
  store i32 0, i32* %424, align 4
  %425 = load i32, i32* @x.7, align 4
  %426 = load i32, i32* @y.8, align 4
  %427 = add i32 %425, -1
  %428 = mul i32 %427, %425
  %429 = and i32 %428, 1
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %431, %430
  %433 = select i1 %432, i32 440279995, i32 952622650
  br label %.backedge

434:                                              ; preds = %15
  br label %.backedge

435:                                              ; preds = %15
  %436 = load i32, i32* @x.7, align 4
  %437 = load i32, i32* @y.8, align 4
  %438 = add i32 %436, -1
  %439 = mul i32 %438, %436
  %440 = and i32 %439, 1
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %442, %441
  %444 = select i1 %443, i32 -875026292, i32 -1586374144
  br label %.backedge

445:                                              ; preds = %15
  %446 = load i32, i32* @n, align 4
  %447 = sub i32 -2, %.0136
  %448 = add i32 %447, %446
  %449 = load i32, i32* @even, align 4
  %450 = icmp sgt i32 %448, %449
  store i1 %450, i1* %4, align 1
  %451 = load i32, i32* @x.7, align 4
  %452 = load i32, i32* @y.8, align 4
  %453 = add i32 %451, -1
  %454 = mul i32 %453, %451
  %455 = and i32 %454, 1
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %457, %456
  %459 = select i1 %458, i32 1991180156, i32 -1586374144
  br label %.backedge

460:                                              ; preds = %15
  %.0..0..0.120 = load volatile i1, i1* %4, align 1
  %461 = select i1 %.0..0..0.120, i32 -2032676228, i32 1922982364
  br label %.backedge

462:                                              ; preds = %15
  %463 = load i32, i32* @x.7, align 4
  %464 = load i32, i32* @y.8, align 4
  %465 = add i32 %463, -1
  %466 = mul i32 %465, %463
  %467 = and i32 %466, 1
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %469, %468
  %471 = select i1 %470, i32 931559168, i32 -975275486
  br label %.backedge

472:                                              ; preds = %15
  %473 = load i32, i32* @even, align 4
  %474 = load i32, i32* @n, align 4
  %475 = sub i32 -2, %.0136
  %476 = add i32 %475, %474
  %477 = call i32 @_Z5haitiiii(i32 %473, i32 %476, i32 %.0130)
  %478 = load i32, i32* @x.7, align 4
  %479 = load i32, i32* @y.8, align 4
  %480 = add i32 %478, -1
  %481 = mul i32 %480, %478
  %482 = and i32 %481, 1
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %484, %483
  %486 = select i1 %485, i32 -363952366, i32 -975275486
  br label %.backedge

487:                                              ; preds = %15
  br label %.backedge

488:                                              ; preds = %15
  %489 = load i32, i32* @n, align 4
  %490 = sub i32 -3, %.0136
  %491 = add i32 %490, %489
  %492 = sub i32 -2, %.0136
  %493 = add i32 %492, %489
  %494 = call i32 @_Z5haitiiii(i32 %491, i32 %493, i32 %.0130)
  br label %.backedge

495:                                              ; preds = %15
  %496 = load i32, i32* @x.7, align 4
  %497 = load i32, i32* @y.8, align 4
  %498 = add i32 %496, -1
  %499 = mul i32 %498, %496
  %500 = and i32 %499, 1
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %502, %501
  %504 = select i1 %503, i32 -2122610968, i32 1795021972
  br label %.backedge

505:                                              ; preds = %15
  %506 = load i32, i32* @n, align 4
  %507 = sub i32 -2, %.0136
  %508 = add i32 %507, %506
  %.neg145.neg = shl nuw i32 1, %508
  %509 = add i32 %.neg145.neg, %.0130
  %510 = load i32, i32* @x.7, align 4
  %511 = load i32, i32* @y.8, align 4
  %512 = add i32 %510, -1
  %513 = mul i32 %512, %510
  %514 = and i32 %513, 1
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %516, %515
  %518 = select i1 %517, i32 -99600369, i32 1795021972
  br label %.backedge

519:                                              ; preds = %15
  br label %.backedge

520:                                              ; preds = %15
  %521 = add i32 %.0136, 1
  br label %.backedge

522:                                              ; preds = %15
  br label %.backedge

523:                                              ; preds = %15
  %524 = load i32, i32* @n, align 4
  %525 = icmp slt i32 %.0136, %524
  %526 = select i1 %525, i32 -517428232, i32 959613429
  br label %.backedge

527:                                              ; preds = %15
  %528 = add i32 %.0130, -1
  %529 = sext i32 %528 to i64
  %530 = sext i32 %.0136 to i64
  %531 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %529, i64 %530
  %532 = load i32, i32* %531, align 4
  %533 = sext i32 %.0130 to i64
  %534 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %533, i64 %530
  store i32 %532, i32* %534, align 4
  br label %.backedge

535:                                              ; preds = %15
  %536 = add i32 %.0136, 1
  br label %.backedge

537:                                              ; preds = %15
  %538 = load i32, i32* @x.7, align 4
  %539 = load i32, i32* @y.8, align 4
  %540 = add i32 %538, -1
  %541 = mul i32 %540, %538
  %542 = and i32 %541, 1
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %539, 10
  %545 = or i1 %544, %543
  %546 = select i1 %545, i32 -1711983472, i32 776535018
  br label %.backedge

547:                                              ; preds = %15
  %548 = sext i32 %.0130 to i64
  %549 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %548, i64 0
  store i32 0, i32* %549, align 16
  %550 = add i32 %.0130, 1
  %551 = load i32, i32* @x.7, align 4
  %552 = load i32, i32* @y.8, align 4
  %553 = add i32 %551, -1
  %554 = mul i32 %553, %551
  %555 = and i32 %554, 1
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %557, %556
  %559 = select i1 %558, i32 -729641144, i32 776535018
  br label %.backedge

560:                                              ; preds = %15
  br label %.backedge

561:                                              ; preds = %15
  %562 = load i32, i32* @x.7, align 4
  %563 = load i32, i32* @y.8, align 4
  %564 = add i32 %562, -1
  %565 = mul i32 %564, %562
  %566 = and i32 %565, 1
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %568, %567
  %570 = select i1 %569, i32 -1651993632, i32 870497912
  br label %.backedge

571:                                              ; preds = %15
  %572 = load i32, i32* @n, align 4
  %573 = shl nuw i32 1, %572
  %574 = icmp slt i32 %.0136, %573
  store i1 %574, i1* %3, align 1
  %575 = load i32, i32* @x.7, align 4
  %576 = load i32, i32* @y.8, align 4
  %577 = add i32 %575, -1
  %578 = mul i32 %577, %575
  %579 = and i32 %578, 1
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %581, %580
  %583 = select i1 %582, i32 -1026463842, i32 870497912
  br label %.backedge

584:                                              ; preds = %15
  %.0..0..0.121 = load volatile i1, i1* %3, align 1
  %585 = select i1 %.0..0..0.121, i32 -2078991501, i32 475964044
  br label %.backedge

586:                                              ; preds = %15
  br label %.backedge

587:                                              ; preds = %15
  %588 = load i32, i32* @n, align 4
  %589 = icmp slt i32 %.0138, %588
  %590 = select i1 %589, i32 523939724, i32 339022403
  br label %.backedge

591:                                              ; preds = %15
  %592 = sext i32 %.0136 to i64
  %593 = sext i32 %.0138 to i64
  %594 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %592, i64 %593
  %595 = load i32, i32* %594, align 4
  %596 = getelementptr inbounds [20 x i32], [20 x i32]* %12, i64 0, i64 %593
  store i32 %595, i32* %596, align 4
  br label %.backedge

597:                                              ; preds = %15
  %598 = load i32, i32* @x.7, align 4
  %599 = load i32, i32* @y.8, align 4
  %600 = add i32 %598, -1
  %601 = mul i32 %600, %598
  %602 = and i32 %601, 1
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %604, %603
  %606 = select i1 %605, i32 1839960903, i32 1337457709
  br label %.backedge

607:                                              ; preds = %15
  %.neg144 = add i32 %.0138, 1
  %608 = load i32, i32* @x.7, align 4
  %609 = load i32, i32* @y.8, align 4
  %610 = add i32 %608, -1
  %611 = mul i32 %610, %608
  %612 = and i32 %611, 1
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %614, %613
  %616 = select i1 %615, i32 -2009146672, i32 1337457709
  br label %.backedge

617:                                              ; preds = %15
  br label %.backedge

618:                                              ; preds = %15
  br label %.backedge

619:                                              ; preds = %15
  %620 = load i32, i32* @x.7, align 4
  %621 = load i32, i32* @y.8, align 4
  %622 = add i32 %620, -1
  %623 = mul i32 %622, %620
  %624 = and i32 %623, 1
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %626, %625
  %628 = select i1 %627, i32 -803422991, i32 -1744349078
  br label %.backedge

629:                                              ; preds = %15
  %630 = load i32, i32* @n, align 4
  %631 = icmp slt i32 %.0138, %630
  store i1 %631, i1* %2, align 1
  %632 = load i32, i32* @x.7, align 4
  %633 = load i32, i32* @y.8, align 4
  %634 = add i32 %632, -1
  %635 = mul i32 %634, %632
  %636 = and i32 %635, 1
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %638, %637
  %640 = select i1 %639, i32 -1474893719, i32 -1744349078
  br label %.backedge

641:                                              ; preds = %15
  %.0..0..0.122 = load volatile i1, i1* %2, align 1
  %642 = select i1 %.0..0..0.122, i32 -1250823062, i32 -512371760
  br label %.backedge

643:                                              ; preds = %15
  %644 = sext i32 %.0138 to i64
  %645 = getelementptr inbounds [20 x i32], [20 x i32]* %11, i64 0, i64 %644
  %646 = load i32, i32* %645, align 4
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds [20 x i32], [20 x i32]* %12, i64 0, i64 %647
  %649 = load i32, i32* %648, align 4
  %650 = getelementptr inbounds [20 x i32], [20 x i32]* %10, i64 0, i64 %644
  %651 = load i32, i32* %650, align 4
  %652 = xor i32 %651, %649
  %653 = sext i32 %.0136 to i64
  %654 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %653, i64 %644
  store i32 %652, i32* %654, align 4
  br label %.backedge

655:                                              ; preds = %15
  %656 = load i32, i32* @x.7, align 4
  %657 = load i32, i32* @y.8, align 4
  %658 = add i32 %656, -1
  %659 = mul i32 %658, %656
  %660 = and i32 %659, 1
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %657, 10
  %663 = or i1 %662, %661
  %664 = select i1 %663, i32 -1736824455, i32 -271336643
  br label %.backedge

665:                                              ; preds = %15
  %666 = add i32 %.0138, 1
  %667 = load i32, i32* @x.7, align 4
  %668 = load i32, i32* @y.8, align 4
  %669 = add i32 %667, -1
  %670 = mul i32 %669, %667
  %671 = and i32 %670, 1
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %673, %672
  %675 = select i1 %674, i32 816477956, i32 -271336643
  br label %.backedge

676:                                              ; preds = %15
  br label %.backedge

677:                                              ; preds = %15
  br label %.backedge

678:                                              ; preds = %15
  %679 = add i32 %.0136, 1
  br label %.backedge

680:                                              ; preds = %15
  br label %.backedge

681:                                              ; preds = %15
  %682 = load i32, i32* @n, align 4
  %683 = shl nuw i32 1, %682
  %684 = icmp slt i32 %.0136, %683
  %685 = select i1 %684, i32 421765185, i32 -153382900
  br label %.backedge

686:                                              ; preds = %15
  br label %.backedge

687:                                              ; preds = %15
  %688 = load i32, i32* @n, align 4
  %689 = icmp slt i32 %.0138, %688
  %690 = select i1 %689, i32 -418962656, i32 1730255331
  br label %.backedge

691:                                              ; preds = %15
  %692 = sext i32 %.0136 to i64
  %693 = sext i32 %.0138 to i64
  %694 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %692, i64 %693
  %695 = load i32, i32* %694, align 4
  %696 = shl i32 %695, %.0138
  %697 = add i32 %696, %.0134
  br label %.backedge

698:                                              ; preds = %15
  %699 = load i32, i32* @x.7, align 4
  %700 = load i32, i32* @y.8, align 4
  %701 = add i32 %699, -1
  %702 = mul i32 %701, %699
  %703 = and i32 %702, 1
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %700, 10
  %706 = or i1 %705, %704
  %707 = select i1 %706, i32 741828025, i32 99090627
  br label %.backedge

708:                                              ; preds = %15
  %709 = add i32 %.0138, 1
  %710 = load i32, i32* @x.7, align 4
  %711 = load i32, i32* @y.8, align 4
  %712 = add i32 %710, -1
  %713 = mul i32 %712, %710
  %714 = and i32 %713, 1
  %715 = icmp eq i32 %714, 0
  %716 = icmp slt i32 %711, 10
  %717 = or i1 %716, %715
  %718 = select i1 %717, i32 1450908960, i32 99090627
  br label %.backedge

719:                                              ; preds = %15
  br label %.backedge

720:                                              ; preds = %15
  %721 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 %.0134)
  br label %.backedge

722:                                              ; preds = %15
  %723 = load i32, i32* @x.7, align 4
  %724 = load i32, i32* @y.8, align 4
  %725 = add i32 %723, -1
  %726 = mul i32 %725, %723
  %727 = and i32 %726, 1
  %728 = icmp eq i32 %727, 0
  %729 = icmp slt i32 %724, 10
  %730 = or i1 %729, %728
  %731 = select i1 %730, i32 2026095355, i32 2142491495
  br label %.backedge

732:                                              ; preds = %15
  %733 = add i32 %.0136, 1
  %734 = load i32, i32* @x.7, align 4
  %735 = load i32, i32* @y.8, align 4
  %736 = add i32 %734, -1
  %737 = mul i32 %736, %734
  %738 = and i32 %737, 1
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %735, 10
  %741 = or i1 %740, %739
  %742 = select i1 %741, i32 -735719826, i32 2142491495
  br label %.backedge

743:                                              ; preds = %15
  br label %.backedge

744:                                              ; preds = %15
  br label %.backedge

745:                                              ; preds = %15
  %746 = load i32, i32* @x.7, align 4
  %747 = load i32, i32* @y.8, align 4
  %748 = add i32 %746, -1
  %749 = mul i32 %748, %746
  %750 = and i32 %749, 1
  %751 = icmp eq i32 %750, 0
  %752 = icmp slt i32 %747, 10
  %753 = or i1 %752, %751
  %754 = select i1 %753, i32 -588393293, i32 -2085140121
  br label %.backedge

755:                                              ; preds = %15
  store i32 0, i32* %1, align 4
  %756 = load i32, i32* @x.7, align 4
  %757 = load i32, i32* @y.8, align 4
  %758 = add i32 %756, -1
  %759 = mul i32 %758, %756
  %760 = and i32 %759, 1
  %761 = icmp eq i32 %760, 0
  %762 = icmp slt i32 %757, 10
  %763 = or i1 %762, %761
  %764 = select i1 %763, i32 1902774848, i32 -2085140121
  br label %.backedge

765:                                              ; preds = %15
  %.0..0..0.123 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.123

766:                                              ; preds = %15
  %767 = load i32, i32* %7, align 4
  %768 = load i32, i32* %8, align 4
  %769 = xor i32 %768, %767
  br label %.backedge

770:                                              ; preds = %15
  %771 = srem i32 %.0130, 2
  %772 = sext i32 %.0136 to i64
  %773 = getelementptr inbounds [20 x i32], [20 x i32]* %10, i64 0, i64 %772
  store i32 %771, i32* %773, align 4
  %774 = sdiv i32 %.0130, 2
  br label %.backedge

775:                                              ; preds = %15
  %.neg143 = add i32 %.0136, 1
  br label %.backedge

776:                                              ; preds = %15
  %777 = sext i32 %.0136 to i64
  %778 = getelementptr inbounds [20 x i32], [20 x i32]* %11, i64 0, i64 %777
  store i32 %.0126, i32* %778, align 4
  %779 = add i32 %.0126, 1
  br label %.backedge

780:                                              ; preds = %15
  %781 = sext i32 %.0136 to i64
  %782 = getelementptr inbounds [20 x i32], [20 x i32]* %11, i64 0, i64 %781
  store i32 %.0128, i32* %782, align 4
  %783 = add i32 %.0128, 1
  br label %.backedge

784:                                              ; preds = %15
  %785 = add i32 %.0136, 1
  br label %.backedge

786:                                              ; preds = %15
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0))
  br label %.backedge

787:                                              ; preds = %15
  br label %.backedge

788:                                              ; preds = %15
  %789 = load i32, i32* @n, align 4
  %790 = xor i32 %.0132, -1
  %791 = add i32 %789, %790
  store i32 %791, i32* @even, align 4
  %792 = add i32 %789, -1
  %793 = call i32 @_Z5haitiiii(i32 %791, i32 %792, i32 0)
  %794 = load i32, i32* @n, align 4
  %795 = add i32 %794, -1
  %796 = shl nuw i32 1, %795
  br label %.backedge

797:                                              ; preds = %15
  br label %.backedge

798:                                              ; preds = %15
  %799 = add i32 %.0130, -1
  %800 = sext i32 %799 to i64
  %801 = sext i32 %.0138 to i64
  %802 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %800, i64 %801
  %803 = load i32, i32* %802, align 4
  %804 = sext i32 %.0130 to i64
  %805 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %804, i64 %801
  store i32 %803, i32* %805, align 4
  br label %.backedge

806:                                              ; preds = %15
  %.neg142 = add i32 %.0138, 1
  br label %.backedge

807:                                              ; preds = %15
  %808 = sext i32 %.0130 to i64
  %809 = load i32, i32* @n, align 4
  %810 = xor i32 %.0136, -1
  %811 = add i32 %809, %810
  %812 = sext i32 %811 to i64
  %813 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %808, i64 %812
  store i32 1, i32* %813, align 4
  br label %.backedge

814:                                              ; preds = %15
  %815 = sext i32 %.0130 to i64
  %816 = load i32, i32* @n, align 4
  %817 = xor i32 %.0136, -1
  %818 = add i32 %816, %817
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %815, i64 %819
  store i32 0, i32* %820, align 4
  br label %.backedge

821:                                              ; preds = %15
  br label %.backedge

822:                                              ; preds = %15
  %823 = load i32, i32* @even, align 4
  %824 = load i32, i32* @n, align 4
  %825 = sub i32 -2, %.0136
  %826 = add i32 %825, %824
  %827 = call i32 @_Z5haitiiii(i32 %823, i32 %826, i32 %.0130)
  br label %.backedge

828:                                              ; preds = %15
  %829 = load i32, i32* @n, align 4
  %830 = sub i32 -2, %.0136
  %831 = add i32 %830, %829
  %832 = shl nuw i32 1, %831
  %833 = add i32 %832, %.0130
  br label %.backedge

834:                                              ; preds = %15
  %835 = sext i32 %.0130 to i64
  %836 = getelementptr inbounds [200010 x [20 x i32]], [200010 x [20 x i32]]* @keta, i64 0, i64 %835, i64 0
  store i32 0, i32* %836, align 16
  %.neg141 = add i32 %.0130, 1
  br label %.backedge

837:                                              ; preds = %15
  br label %.backedge

838:                                              ; preds = %15
  %.neg140 = add i32 %.0138, 1
  br label %.backedge

839:                                              ; preds = %15
  br label %.backedge

840:                                              ; preds = %15
  %841 = add i32 %.0138, 1
  br label %.backedge

842:                                              ; preds = %15
  %.neg = add i32 %.0138, 1
  br label %.backedge

843:                                              ; preds = %15
  %844 = add i32 %.0136, 1
  br label %.backedge

845:                                              ; preds = %15
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s260368461.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
