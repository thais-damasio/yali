; ModuleID = 'build_ollvm/programs/p02363/s156366442.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s156366442.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@m = global i32 0, align 4
@dp = global [100 x [100 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s156366442.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@x.12 = common local_unnamed_addr global i32 0
@y.13 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 331035475, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 331035475, label %11
    i32 643941201, label %14
    i32 -1668032528, label %25
    i32 1729266198, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 643941201, i32 1729266198
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1668032528, i32 1729266198
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 643941201, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define void @_Z5floydv() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i64, align 8
  br label %4

4:                                                ; preds = %.backedge, %0
  %.028 = phi i32 [ 0, %0 ], [ %.028.be, %.backedge ]
  %.026 = phi i32 [ undef, %0 ], [ %.026.be, %.backedge ]
  %.024 = phi i32 [ undef, %0 ], [ %.024.be, %.backedge ]
  %.0 = phi i32 [ -1236491853, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1236491853, label %5
    i32 -1032320716, label %9
    i32 1507184565, label %19
    i32 1246033439, label %29
    i32 -1052502734, label %30
    i32 1631245100, label %40
    i32 -1386949202, label %52
    i32 -656751154, label %54
    i32 715408748, label %61
    i32 689446074, label %71
    i32 921121382, label %81
    i32 190701449, label %82
    i32 256022409, label %83
    i32 1383480323, label %93
    i32 1126168255, label %105
    i32 659083383, label %107
    i32 1627893682, label %114
    i32 1967097169, label %115
    i32 1601460313, label %127
    i32 1295531101, label %137
    i32 -806267356, label %148
    i32 -1023772581, label %149
    i32 1444225745, label %150
    i32 -1327839672, label %160
    i32 -1412002917, label %171
    i32 -1893587829, label %172
    i32 -1698773130, label %173
    i32 -446846345, label %175
    i32 -661989728, label %176
    i32 -313726362, label %177
    i32 535571305, label %178
    i32 1305135760, label %179
    i32 1647657944, label %180
    i32 1216129597, label %181
  ]

.backedge:                                        ; preds = %4, %181, %180, %179, %178, %177, %176, %173, %172, %171, %160, %150, %149, %148, %137, %127, %115, %114, %107, %105, %93, %83, %82, %81, %71, %61, %54, %52, %40, %30, %29, %19, %9, %5
  %.028.be = phi i32 [ %.028, %4 ], [ %.028, %181 ], [ %.028, %180 ], [ %.028, %179 ], [ %.028, %178 ], [ %.028, %177 ], [ %.028, %176 ], [ %174, %173 ], [ %.028, %172 ], [ %.028, %171 ], [ %.028, %160 ], [ %.028, %150 ], [ %.028, %149 ], [ %.028, %148 ], [ %.028, %137 ], [ %.028, %127 ], [ %.028, %115 ], [ %.028, %114 ], [ %.028, %107 ], [ %.028, %105 ], [ %.028, %93 ], [ %.028, %83 ], [ %.028, %82 ], [ %.028, %81 ], [ %.028, %71 ], [ %.028, %61 ], [ %.028, %54 ], [ %.028, %52 ], [ %.028, %40 ], [ %.028, %30 ], [ %.028, %29 ], [ %.028, %19 ], [ %.028, %9 ], [ %.028, %5 ]
  %.026.be = phi i32 [ %.026, %4 ], [ %.neg, %181 ], [ %.026, %180 ], [ %.026, %179 ], [ %.026, %178 ], [ %.026, %177 ], [ 0, %176 ], [ %.026, %173 ], [ %.026, %172 ], [ %.026, %171 ], [ %161, %160 ], [ %.026, %150 ], [ %.026, %149 ], [ %.026, %148 ], [ %.026, %137 ], [ %.026, %127 ], [ %.026, %115 ], [ %.026, %114 ], [ %.026, %107 ], [ %.026, %105 ], [ %.026, %93 ], [ %.026, %83 ], [ %.026, %82 ], [ %.026, %81 ], [ %.026, %71 ], [ %.026, %61 ], [ %.026, %54 ], [ %.026, %52 ], [ %.026, %40 ], [ %.026, %30 ], [ %.026, %29 ], [ 0, %19 ], [ %.026, %9 ], [ %.026, %5 ]
  %.024.be = phi i32 [ %.024, %4 ], [ %.024, %181 ], [ %.neg30, %180 ], [ %.024, %179 ], [ %.024, %178 ], [ %.024, %177 ], [ %.024, %176 ], [ %.024, %173 ], [ %.024, %172 ], [ %.024, %171 ], [ %.024, %160 ], [ %.024, %150 ], [ %.024, %149 ], [ %.024, %148 ], [ %138, %137 ], [ %.024, %127 ], [ %.024, %115 ], [ %.024, %114 ], [ %.024, %107 ], [ %.024, %105 ], [ %.024, %93 ], [ %.024, %83 ], [ 0, %82 ], [ %.024, %81 ], [ %.024, %71 ], [ %.024, %61 ], [ %.024, %54 ], [ %.024, %52 ], [ %.024, %40 ], [ %.024, %30 ], [ %.024, %29 ], [ %.024, %19 ], [ %.024, %9 ], [ %.024, %5 ]
  %.0.be = phi i32 [ %.0, %4 ], [ -1327839672, %181 ], [ 1295531101, %180 ], [ 1383480323, %179 ], [ 689446074, %178 ], [ 1631245100, %177 ], [ 1507184565, %176 ], [ -1236491853, %173 ], [ -1698773130, %172 ], [ -1052502734, %171 ], [ %170, %160 ], [ %159, %150 ], [ 1444225745, %149 ], [ 256022409, %148 ], [ %147, %137 ], [ %136, %127 ], [ 1601460313, %115 ], [ 1601460313, %114 ], [ %113, %107 ], [ %106, %105 ], [ %104, %93 ], [ %92, %83 ], [ 256022409, %82 ], [ 1444225745, %81 ], [ %80, %71 ], [ %70, %61 ], [ %60, %54 ], [ %53, %52 ], [ %51, %40 ], [ %39, %30 ], [ -1052502734, %29 ], [ %28, %19 ], [ %18, %9 ], [ %8, %5 ]
  br label %4

5:                                                ; preds = %4
  %6 = load i32, i32* @n, align 4
  %7 = icmp slt i32 %.028, %6
  %8 = select i1 %7, i32 -1032320716, i32 -446846345
  br label %.backedge

9:                                                ; preds = %4
  %10 = load i32, i32* @x.6, align 4
  %11 = load i32, i32* @y.7, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %16, %15
  %18 = select i1 %17, i32 1507184565, i32 -661989728
  br label %.backedge

19:                                               ; preds = %4
  %20 = load i32, i32* @x.6, align 4
  %21 = load i32, i32* @y.7, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 1246033439, i32 -661989728
  br label %.backedge

29:                                               ; preds = %4
  br label %.backedge

30:                                               ; preds = %4
  %31 = load i32, i32* @x.6, align 4
  %32 = load i32, i32* @y.7, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 1631245100, i32 -313726362
  br label %.backedge

40:                                               ; preds = %4
  %41 = load i32, i32* @n, align 4
  %42 = icmp slt i32 %.026, %41
  store i1 %42, i1* %2, align 1
  %43 = load i32, i32* @x.6, align 4
  %44 = load i32, i32* @y.7, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 -1386949202, i32 -313726362
  br label %.backedge

52:                                               ; preds = %4
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %53 = select i1 %.0..0..0., i32 -656751154, i32 -1893587829
  br label %.backedge

54:                                               ; preds = %4
  %55 = sext i32 %.026 to i64
  %56 = sext i32 %.028 to i64
  %57 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %55, i64 %56
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 4294967296
  %60 = select i1 %59, i32 715408748, i32 190701449
  br label %.backedge

61:                                               ; preds = %4
  %62 = load i32, i32* @x.6, align 4
  %63 = load i32, i32* @y.7, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 689446074, i32 535571305
  br label %.backedge

71:                                               ; preds = %4
  %72 = load i32, i32* @x.6, align 4
  %73 = load i32, i32* @y.7, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 921121382, i32 535571305
  br label %.backedge

81:                                               ; preds = %4
  br label %.backedge

82:                                               ; preds = %4
  br label %.backedge

83:                                               ; preds = %4
  %84 = load i32, i32* @x.6, align 4
  %85 = load i32, i32* @y.7, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 1383480323, i32 1305135760
  br label %.backedge

93:                                               ; preds = %4
  %94 = load i32, i32* @n, align 4
  %95 = icmp slt i32 %.024, %94
  store i1 %95, i1* %1, align 1
  %96 = load i32, i32* @x.6, align 4
  %97 = load i32, i32* @y.7, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 1126168255, i32 1305135760
  br label %.backedge

105:                                              ; preds = %4
  %.0..0..0.23 = load volatile i1, i1* %1, align 1
  %106 = select i1 %.0..0..0.23, i32 659083383, i32 -1023772581
  br label %.backedge

107:                                              ; preds = %4
  %108 = sext i32 %.028 to i64
  %109 = sext i32 %.024 to i64
  %110 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %108, i64 %109
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 4294967296
  %113 = select i1 %112, i32 1627893682, i32 1967097169
  br label %.backedge

114:                                              ; preds = %4
  br label %.backedge

115:                                              ; preds = %4
  %116 = sext i32 %.026 to i64
  %117 = sext i32 %.024 to i64
  %118 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %116, i64 %117
  %119 = sext i32 %.028 to i64
  %120 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %116, i64 %119
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %119, i64 %117
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, %121
  store i64 %124, i64* %3, align 8
  %125 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %118, i64* nonnull dereferenceable(8) %3)
  %126 = load i64, i64* %125, align 8
  store i64 %126, i64* %118, align 8
  br label %.backedge

127:                                              ; preds = %4
  %128 = load i32, i32* @x.6, align 4
  %129 = load i32, i32* @y.7, align 4
  %130 = add i32 %128, -1
  %131 = mul i32 %130, %128
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %134, %133
  %136 = select i1 %135, i32 1295531101, i32 1647657944
  br label %.backedge

137:                                              ; preds = %4
  %138 = add i32 %.024, 1
  %139 = load i32, i32* @x.6, align 4
  %140 = load i32, i32* @y.7, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 -806267356, i32 1647657944
  br label %.backedge

148:                                              ; preds = %4
  br label %.backedge

149:                                              ; preds = %4
  br label %.backedge

150:                                              ; preds = %4
  %151 = load i32, i32* @x.6, align 4
  %152 = load i32, i32* @y.7, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 -1327839672, i32 1216129597
  br label %.backedge

160:                                              ; preds = %4
  %161 = add i32 %.026, 1
  %162 = load i32, i32* @x.6, align 4
  %163 = load i32, i32* @y.7, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 -1412002917, i32 1216129597
  br label %.backedge

171:                                              ; preds = %4
  br label %.backedge

172:                                              ; preds = %4
  br label %.backedge

173:                                              ; preds = %4
  %174 = add i32 %.028, 1
  br label %.backedge

175:                                              ; preds = %4
  ret void

176:                                              ; preds = %4
  br label %.backedge

177:                                              ; preds = %4
  br label %.backedge

178:                                              ; preds = %4
  br label %.backedge

179:                                              ; preds = %4
  br label %.backedge

180:                                              ; preds = %4
  %.neg30 = add i32 %.024, 1
  br label %.backedge

181:                                              ; preds = %4
  %.neg = add i32 %.026, 1
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  %8 = load i32, i32* @x.8, align 4
  %9 = load i32, i32* @y.9, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -625426837, i32 1950641229
  %17 = select i1 %15, i32 -1345037549, i32 1950641229
  %18 = select i1 %15, i32 493805642, i32 -1369758467
  %19 = select i1 %15, i32 508267954, i32 -1369758467
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i64* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i64* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ 1092370323, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1092370323, label %21
    i32 775478238, label %24
    i32 508267954, label %25
    i32 493805642, label %26
    i32 -1787052890, label %27
    i32 -149804388, label %28
    i32 -1345037549, label %29
    i32 -625426837, label %30
    i32 -1369758467, label %31
    i32 1950641229, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i64* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i64* [ %.010, %20 ], [ %.010, %32 ], [ %1, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %0, %27 ], [ %.010, %26 ], [ %1, %25 ], [ %.010, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ -1345037549, %32 ], [ 508267954, %31 ], [ %16, %29 ], [ %17, %28 ], [ -149804388, %27 ], [ -149804388, %26 ], [ %18, %25 ], [ %19, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i64, i64* %5, align 8
  %.0..0..0.8 = load volatile i64, i64* %4, align 8
  %22 = icmp slt i64 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 775478238, i32 -1787052890
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i64* %.01013, i64** %3, align 8
  %.0..0..0.9 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  %9 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %8, i32* nonnull dereferenceable(4) @m)
  br label %10

10:                                               ; preds = %.backedge, %0
  %.054 = phi i32 [ 0, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i8 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i32 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.042 = phi i32 [ undef, %0 ], [ %.042.be, %.backedge ]
  %.0 = phi i32 [ -609409003, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -609409003, label %11
    i32 2036590267, label %21
    i32 -1226174481, label %33
    i32 -938179321, label %35
    i32 -459211046, label %36
    i32 513350625, label %40
    i32 1704270638, label %50
    i32 535348788, label %64
    i32 766752458, label %66
    i32 1720094645, label %76
    i32 -1674393335, label %89
    i32 1930934880, label %90
    i32 -1441490676, label %100
    i32 -1685014884, label %110
    i32 -840762628, label %111
    i32 828985797, label %113
    i32 -1523609037, label %114
    i32 1506336596, label %124
    i32 2126570134, label %135
    i32 953174447, label %136
    i32 -1588478669, label %137
    i32 -864963651, label %141
    i32 1185985904, label %152
    i32 1215438826, label %162
    i32 1197519807, label %173
    i32 -1657999135, label %174
    i32 856247519, label %175
    i32 -1649019555, label %179
    i32 -1462304374, label %185
    i32 886850737, label %195
    i32 1511645239, label %205
    i32 1562899213, label %206
    i32 -698967994, label %207
    i32 -1940425157, label %209
    i32 -123478602, label %219
    i32 778758381, label %231
    i32 1552238979, label %233
    i32 -1022615211, label %236
    i32 -545221399, label %246
    i32 -1677820832, label %256
    i32 -1687771019, label %257
    i32 -1939810525, label %261
    i32 -633017557, label %271
    i32 -1253686134, label %281
    i32 2097757186, label %282
    i32 105622720, label %286
    i32 -1544315055, label %296
    i32 -419410613, label %307
    i32 738515014, label %309
    i32 -1131291828, label %311
    i32 -1883528687, label %318
    i32 45342614, label %328
    i32 -1794350489, label %339
    i32 316341893, label %340
    i32 -1176090173, label %346
    i32 379341479, label %347
    i32 820363411, label %349
    i32 -911060857, label %351
    i32 -1999429711, label %361
    i32 152243608, label %371
    i32 642765048, label %372
    i32 -1843532563, label %382
    i32 1837488785, label %392
    i32 -1220083047, label %393
    i32 534095043, label %394
    i32 1872786325, label %395
    i32 -1277323431, label %399
    i32 1451549350, label %403
    i32 -1104168762, label %404
    i32 -1812344471, label %406
    i32 -1464333405, label %408
    i32 -1054786156, label %409
    i32 441159728, label %410
    i32 440693387, label %411
    i32 1773946297, label %412
    i32 177072821, label %413
    i32 659863343, label %415
    i32 -1894740797, label %417
  ]

.backedge:                                        ; preds = %10, %417, %415, %413, %412, %411, %410, %409, %408, %406, %404, %403, %399, %395, %394, %392, %382, %372, %371, %361, %351, %349, %347, %346, %340, %339, %328, %318, %311, %309, %307, %296, %286, %282, %281, %271, %261, %257, %256, %246, %236, %233, %231, %219, %209, %207, %206, %205, %195, %185, %179, %175, %174, %173, %162, %152, %141, %137, %136, %135, %124, %114, %113, %111, %110, %100, %90, %89, %76, %66, %64, %50, %40, %36, %35, %33, %21, %11
  %.054.be = phi i32 [ %.054, %10 ], [ %.054, %417 ], [ %.054, %415 ], [ %.054, %413 ], [ %.054, %412 ], [ %.054, %411 ], [ %.054, %410 ], [ %.054, %409 ], [ %.054, %408 ], [ %.054, %406 ], [ %405, %404 ], [ %.054, %403 ], [ %.054, %399 ], [ %.054, %395 ], [ %.054, %394 ], [ %.054, %392 ], [ %.054, %382 ], [ %.054, %372 ], [ %.054, %371 ], [ %.054, %361 ], [ %.054, %351 ], [ %.054, %349 ], [ %.054, %347 ], [ %.054, %346 ], [ %.054, %340 ], [ %.054, %339 ], [ %.054, %328 ], [ %.054, %318 ], [ %.054, %311 ], [ %.054, %309 ], [ %.054, %307 ], [ %.054, %296 ], [ %.054, %286 ], [ %.054, %282 ], [ %.054, %281 ], [ %.054, %271 ], [ %.054, %261 ], [ %.054, %257 ], [ %.054, %256 ], [ %.054, %246 ], [ %.054, %236 ], [ %.054, %233 ], [ %.054, %231 ], [ %.054, %219 ], [ %.054, %209 ], [ %.054, %207 ], [ %.054, %206 ], [ %.054, %205 ], [ %.054, %195 ], [ %.054, %185 ], [ %.054, %179 ], [ %.054, %175 ], [ %.054, %174 ], [ %.054, %173 ], [ %.054, %162 ], [ %.054, %152 ], [ %.054, %141 ], [ %.054, %137 ], [ %.054, %136 ], [ %.054, %135 ], [ %125, %124 ], [ %.054, %114 ], [ %.054, %113 ], [ %.054, %111 ], [ %.054, %110 ], [ %.054, %100 ], [ %.054, %90 ], [ %.054, %89 ], [ %.054, %76 ], [ %.054, %66 ], [ %.054, %64 ], [ %.054, %50 ], [ %.054, %40 ], [ %.054, %36 ], [ %.054, %35 ], [ %.054, %33 ], [ %.054, %21 ], [ %.054, %11 ]
  %.052.be = phi i32 [ %.052, %10 ], [ %.052, %417 ], [ %.052, %415 ], [ %.052, %413 ], [ %.052, %412 ], [ %.052, %411 ], [ %.052, %410 ], [ %.052, %409 ], [ %.052, %408 ], [ %.052, %406 ], [ %.052, %404 ], [ %.052, %403 ], [ %.052, %399 ], [ %.052, %395 ], [ %.052, %394 ], [ %.052, %392 ], [ %.052, %382 ], [ %.052, %372 ], [ %.052, %371 ], [ %.052, %361 ], [ %.052, %351 ], [ %.052, %349 ], [ %.052, %347 ], [ %.052, %346 ], [ %.052, %340 ], [ %.052, %339 ], [ %.052, %328 ], [ %.052, %318 ], [ %.052, %311 ], [ %.052, %309 ], [ %.052, %307 ], [ %.052, %296 ], [ %.052, %286 ], [ %.052, %282 ], [ %.052, %281 ], [ %.052, %271 ], [ %.052, %261 ], [ %.052, %257 ], [ %.052, %256 ], [ %.052, %246 ], [ %.052, %236 ], [ %.052, %233 ], [ %.052, %231 ], [ %.052, %219 ], [ %.052, %209 ], [ %.052, %207 ], [ %.052, %206 ], [ %.052, %205 ], [ %.052, %195 ], [ %.052, %185 ], [ %.052, %179 ], [ %.052, %175 ], [ %.052, %174 ], [ %.052, %173 ], [ %.052, %162 ], [ %.052, %152 ], [ %.052, %141 ], [ %.052, %137 ], [ %.052, %136 ], [ %.052, %135 ], [ %.052, %124 ], [ %.052, %114 ], [ %.052, %113 ], [ %112, %111 ], [ %.052, %110 ], [ %.052, %100 ], [ %.052, %90 ], [ %.052, %89 ], [ %.052, %76 ], [ %.052, %66 ], [ %.052, %64 ], [ %.052, %50 ], [ %.052, %40 ], [ %.052, %36 ], [ 0, %35 ], [ %.052, %33 ], [ %.052, %21 ], [ %.052, %11 ]
  %.050.be = phi i32 [ %.050, %10 ], [ %.050, %417 ], [ %.050, %415 ], [ %.050, %413 ], [ %.050, %412 ], [ %.050, %411 ], [ %.050, %410 ], [ %.050, %409 ], [ %.050, %408 ], [ %407, %406 ], [ %.050, %404 ], [ %.050, %403 ], [ %.050, %399 ], [ %.050, %395 ], [ %.050, %394 ], [ %.050, %392 ], [ %.050, %382 ], [ %.050, %372 ], [ %.050, %371 ], [ %.050, %361 ], [ %.050, %351 ], [ %.050, %349 ], [ %.050, %347 ], [ %.050, %346 ], [ %.050, %340 ], [ %.050, %339 ], [ %.050, %328 ], [ %.050, %318 ], [ %.050, %311 ], [ %.050, %309 ], [ %.050, %307 ], [ %.050, %296 ], [ %.050, %286 ], [ %.050, %282 ], [ %.050, %281 ], [ %.050, %271 ], [ %.050, %261 ], [ %.050, %257 ], [ %.050, %256 ], [ %.050, %246 ], [ %.050, %236 ], [ %.050, %233 ], [ %.050, %231 ], [ %.050, %219 ], [ %.050, %209 ], [ %.050, %207 ], [ %.050, %206 ], [ %.050, %205 ], [ %.050, %195 ], [ %.050, %185 ], [ %.050, %179 ], [ %.050, %175 ], [ %.050, %174 ], [ %.050, %173 ], [ %163, %162 ], [ %.050, %152 ], [ %.050, %141 ], [ %.050, %137 ], [ 0, %136 ], [ %.050, %135 ], [ %.050, %124 ], [ %.050, %114 ], [ %.050, %113 ], [ %.050, %111 ], [ %.050, %110 ], [ %.050, %100 ], [ %.050, %90 ], [ %.050, %89 ], [ %.050, %76 ], [ %.050, %66 ], [ %.050, %64 ], [ %.050, %50 ], [ %.050, %40 ], [ %.050, %36 ], [ %.050, %35 ], [ %.050, %33 ], [ %.050, %21 ], [ %.050, %11 ]
  %.048.be = phi i8 [ %.048, %10 ], [ %.048, %417 ], [ %.048, %415 ], [ %.048, %413 ], [ %.048, %412 ], [ %.048, %411 ], [ %.048, %410 ], [ %.048, %409 ], [ 1, %408 ], [ %.048, %406 ], [ %.048, %404 ], [ %.048, %403 ], [ %.048, %399 ], [ %.048, %395 ], [ %.048, %394 ], [ %.048, %392 ], [ %.048, %382 ], [ %.048, %372 ], [ %.048, %371 ], [ %.048, %361 ], [ %.048, %351 ], [ %.048, %349 ], [ %.048, %347 ], [ %.048, %346 ], [ %.048, %340 ], [ %.048, %339 ], [ %.048, %328 ], [ %.048, %318 ], [ %.048, %311 ], [ %.048, %309 ], [ %.048, %307 ], [ %.048, %296 ], [ %.048, %286 ], [ %.048, %282 ], [ %.048, %281 ], [ %.048, %271 ], [ %.048, %261 ], [ %.048, %257 ], [ %.048, %256 ], [ %.048, %246 ], [ %.048, %236 ], [ %.048, %233 ], [ %.048, %231 ], [ %.048, %219 ], [ %.048, %209 ], [ %.048, %207 ], [ %.048, %206 ], [ %.048, %205 ], [ 1, %195 ], [ %.048, %185 ], [ %.048, %179 ], [ %.048, %175 ], [ 0, %174 ], [ %.048, %173 ], [ %.048, %162 ], [ %.048, %152 ], [ %.048, %141 ], [ %.048, %137 ], [ %.048, %136 ], [ %.048, %135 ], [ %.048, %124 ], [ %.048, %114 ], [ %.048, %113 ], [ %.048, %111 ], [ %.048, %110 ], [ %.048, %100 ], [ %.048, %90 ], [ %.048, %89 ], [ %.048, %76 ], [ %.048, %66 ], [ %.048, %64 ], [ %.048, %50 ], [ %.048, %40 ], [ %.048, %36 ], [ %.048, %35 ], [ %.048, %33 ], [ %.048, %21 ], [ %.048, %11 ]
  %.046.be = phi i32 [ %.046, %10 ], [ %.046, %417 ], [ %.046, %415 ], [ %.046, %413 ], [ %.046, %412 ], [ %.046, %411 ], [ %.046, %410 ], [ %.046, %409 ], [ %.046, %408 ], [ %.046, %406 ], [ %.046, %404 ], [ %.046, %403 ], [ %.046, %399 ], [ %.046, %395 ], [ %.046, %394 ], [ %.046, %392 ], [ %.046, %382 ], [ %.046, %372 ], [ %.046, %371 ], [ %.046, %361 ], [ %.046, %351 ], [ %.046, %349 ], [ %.046, %347 ], [ %.046, %346 ], [ %.046, %340 ], [ %.046, %339 ], [ %.046, %328 ], [ %.046, %318 ], [ %.046, %311 ], [ %.046, %309 ], [ %.046, %307 ], [ %.046, %296 ], [ %.046, %286 ], [ %.046, %282 ], [ %.046, %281 ], [ %.046, %271 ], [ %.046, %261 ], [ %.046, %257 ], [ %.046, %256 ], [ %.046, %246 ], [ %.046, %236 ], [ %.046, %233 ], [ %.046, %231 ], [ %.046, %219 ], [ %.046, %209 ], [ %208, %207 ], [ %.046, %206 ], [ %.046, %205 ], [ %.046, %195 ], [ %.046, %185 ], [ %.046, %179 ], [ %.046, %175 ], [ 0, %174 ], [ %.046, %173 ], [ %.046, %162 ], [ %.046, %152 ], [ %.046, %141 ], [ %.046, %137 ], [ %.046, %136 ], [ %.046, %135 ], [ %.046, %124 ], [ %.046, %114 ], [ %.046, %113 ], [ %.046, %111 ], [ %.046, %110 ], [ %.046, %100 ], [ %.046, %90 ], [ %.046, %89 ], [ %.046, %76 ], [ %.046, %66 ], [ %.046, %64 ], [ %.046, %50 ], [ %.046, %40 ], [ %.046, %36 ], [ %.046, %35 ], [ %.046, %33 ], [ %.046, %21 ], [ %.046, %11 ]
  %.044.be = phi i32 [ %.044, %10 ], [ %.044, %417 ], [ %416, %415 ], [ %.044, %413 ], [ %.044, %412 ], [ %.044, %411 ], [ 0, %410 ], [ %.044, %409 ], [ %.044, %408 ], [ %.044, %406 ], [ %.044, %404 ], [ %.044, %403 ], [ %.044, %399 ], [ %.044, %395 ], [ %.044, %394 ], [ %.044, %392 ], [ %.044, %382 ], [ %.044, %372 ], [ %.044, %371 ], [ %.neg, %361 ], [ %.044, %351 ], [ %.044, %349 ], [ %.044, %347 ], [ %.044, %346 ], [ %.044, %340 ], [ %.044, %339 ], [ %.044, %328 ], [ %.044, %318 ], [ %.044, %311 ], [ %.044, %309 ], [ %.044, %307 ], [ %.044, %296 ], [ %.044, %286 ], [ %.044, %282 ], [ %.044, %281 ], [ %.044, %271 ], [ %.044, %261 ], [ %.044, %257 ], [ %.044, %256 ], [ 0, %246 ], [ %.044, %236 ], [ %.044, %233 ], [ %.044, %231 ], [ %.044, %219 ], [ %.044, %209 ], [ %.044, %207 ], [ %.044, %206 ], [ %.044, %205 ], [ %.044, %195 ], [ %.044, %185 ], [ %.044, %179 ], [ %.044, %175 ], [ %.044, %174 ], [ %.044, %173 ], [ %.044, %162 ], [ %.044, %152 ], [ %.044, %141 ], [ %.044, %137 ], [ %.044, %136 ], [ %.044, %135 ], [ %.044, %124 ], [ %.044, %114 ], [ %.044, %113 ], [ %.044, %111 ], [ %.044, %110 ], [ %.044, %100 ], [ %.044, %90 ], [ %.044, %89 ], [ %.044, %76 ], [ %.044, %66 ], [ %.044, %64 ], [ %.044, %50 ], [ %.044, %40 ], [ %.044, %36 ], [ %.044, %35 ], [ %.044, %33 ], [ %.044, %21 ], [ %.044, %11 ]
  %.042.be = phi i32 [ %.042, %10 ], [ %.042, %417 ], [ %.042, %415 ], [ %.042, %413 ], [ %.042, %412 ], [ 0, %411 ], [ %.042, %410 ], [ %.042, %409 ], [ %.042, %408 ], [ %.042, %406 ], [ %.042, %404 ], [ %.042, %403 ], [ %.042, %399 ], [ %.042, %395 ], [ %.042, %394 ], [ %.042, %392 ], [ %.042, %382 ], [ %.042, %372 ], [ %.042, %371 ], [ %.042, %361 ], [ %.042, %351 ], [ %.042, %349 ], [ %348, %347 ], [ %.042, %346 ], [ %.042, %340 ], [ %.042, %339 ], [ %.042, %328 ], [ %.042, %318 ], [ %.042, %311 ], [ %.042, %309 ], [ %.042, %307 ], [ %.042, %296 ], [ %.042, %286 ], [ %.042, %282 ], [ %.042, %281 ], [ 0, %271 ], [ %.042, %261 ], [ %.042, %257 ], [ %.042, %256 ], [ %.042, %246 ], [ %.042, %236 ], [ %.042, %233 ], [ %.042, %231 ], [ %.042, %219 ], [ %.042, %209 ], [ %.042, %207 ], [ %.042, %206 ], [ %.042, %205 ], [ %.042, %195 ], [ %.042, %185 ], [ %.042, %179 ], [ %.042, %175 ], [ %.042, %174 ], [ %.042, %173 ], [ %.042, %162 ], [ %.042, %152 ], [ %.042, %141 ], [ %.042, %137 ], [ %.042, %136 ], [ %.042, %135 ], [ %.042, %124 ], [ %.042, %114 ], [ %.042, %113 ], [ %.042, %111 ], [ %.042, %110 ], [ %.042, %100 ], [ %.042, %90 ], [ %.042, %89 ], [ %.042, %76 ], [ %.042, %66 ], [ %.042, %64 ], [ %.042, %50 ], [ %.042, %40 ], [ %.042, %36 ], [ %.042, %35 ], [ %.042, %33 ], [ %.042, %21 ], [ %.042, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ -1843532563, %417 ], [ -1999429711, %415 ], [ 45342614, %413 ], [ -1544315055, %412 ], [ -633017557, %411 ], [ -545221399, %410 ], [ -123478602, %409 ], [ 886850737, %408 ], [ 1215438826, %406 ], [ 1506336596, %404 ], [ -1441490676, %403 ], [ 1720094645, %399 ], [ 1704270638, %395 ], [ 2036590267, %394 ], [ -1220083047, %392 ], [ %391, %382 ], [ %381, %372 ], [ -1687771019, %371 ], [ %370, %361 ], [ %360, %351 ], [ -911060857, %349 ], [ 2097757186, %347 ], [ 379341479, %346 ], [ -1176090173, %340 ], [ -1176090173, %339 ], [ %338, %328 ], [ %327, %318 ], [ %317, %311 ], [ -1131291828, %309 ], [ %308, %307 ], [ %306, %296 ], [ %295, %286 ], [ %285, %282 ], [ 2097757186, %281 ], [ %280, %271 ], [ %270, %261 ], [ %260, %257 ], [ -1687771019, %256 ], [ %255, %246 ], [ %245, %236 ], [ -1220083047, %233 ], [ %232, %231 ], [ %230, %219 ], [ %218, %209 ], [ 856247519, %207 ], [ -698967994, %206 ], [ 1562899213, %205 ], [ %204, %195 ], [ %194, %185 ], [ %184, %179 ], [ %178, %175 ], [ 856247519, %174 ], [ -1588478669, %173 ], [ %172, %162 ], [ %161, %152 ], [ 1185985904, %141 ], [ %140, %137 ], [ -1588478669, %136 ], [ -609409003, %135 ], [ %134, %124 ], [ %123, %114 ], [ -1523609037, %113 ], [ -459211046, %111 ], [ -840762628, %110 ], [ %109, %100 ], [ %99, %90 ], [ 1930934880, %89 ], [ %88, %76 ], [ %75, %66 ], [ %65, %64 ], [ %63, %50 ], [ %49, %40 ], [ %39, %36 ], [ -459211046, %35 ], [ %34, %33 ], [ %32, %21 ], [ %20, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* @x.10, align 4
  %13 = load i32, i32* @y.11, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 2036590267, i32 534095043
  br label %.backedge

21:                                               ; preds = %10
  %22 = load i32, i32* @n, align 4
  %23 = icmp slt i32 %.054, %22
  store i1 %23, i1* %4, align 1
  %24 = load i32, i32* @x.10, align 4
  %25 = load i32, i32* @y.11, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -1226174481, i32 534095043
  br label %.backedge

33:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %34 = select i1 %.0..0..0., i32 -938179321, i32 953174447
  br label %.backedge

35:                                               ; preds = %10
  br label %.backedge

36:                                               ; preds = %10
  %37 = load i32, i32* @n, align 4
  %38 = icmp slt i32 %.052, %37
  %39 = select i1 %38, i32 513350625, i32 828985797
  br label %.backedge

40:                                               ; preds = %10
  %41 = load i32, i32* @x.10, align 4
  %42 = load i32, i32* @y.11, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1704270638, i32 1872786325
  br label %.backedge

50:                                               ; preds = %10
  %51 = sext i32 %.054 to i64
  %52 = sext i32 %.052 to i64
  %53 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %51, i64 %52
  store i64 4294967296, i64* %53, align 8
  %54 = icmp eq i32 %.054, %.052
  store i1 %54, i1* %3, align 1
  %55 = load i32, i32* @x.10, align 4
  %56 = load i32, i32* @y.11, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 535348788, i32 1872786325
  br label %.backedge

64:                                               ; preds = %10
  %.0..0..0.39 = load volatile i1, i1* %3, align 1
  %65 = select i1 %.0..0..0.39, i32 766752458, i32 1930934880
  br label %.backedge

66:                                               ; preds = %10
  %67 = load i32, i32* @x.10, align 4
  %68 = load i32, i32* @y.11, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 1720094645, i32 -1277323431
  br label %.backedge

76:                                               ; preds = %10
  %77 = sext i32 %.054 to i64
  %78 = sext i32 %.052 to i64
  %79 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %77, i64 %78
  store i64 0, i64* %79, align 8
  %80 = load i32, i32* @x.10, align 4
  %81 = load i32, i32* @y.11, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 -1674393335, i32 -1277323431
  br label %.backedge

89:                                               ; preds = %10
  br label %.backedge

90:                                               ; preds = %10
  %91 = load i32, i32* @x.10, align 4
  %92 = load i32, i32* @y.11, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -1441490676, i32 1451549350
  br label %.backedge

100:                                              ; preds = %10
  %101 = load i32, i32* @x.10, align 4
  %102 = load i32, i32* @y.11, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 -1685014884, i32 1451549350
  br label %.backedge

110:                                              ; preds = %10
  br label %.backedge

111:                                              ; preds = %10
  %112 = add i32 %.052, 1
  br label %.backedge

113:                                              ; preds = %10
  br label %.backedge

114:                                              ; preds = %10
  %115 = load i32, i32* @x.10, align 4
  %116 = load i32, i32* @y.11, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 1506336596, i32 -1104168762
  br label %.backedge

124:                                              ; preds = %10
  %125 = add i32 %.054, 1
  %126 = load i32, i32* @x.10, align 4
  %127 = load i32, i32* @y.11, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 2126570134, i32 -1104168762
  br label %.backedge

135:                                              ; preds = %10
  br label %.backedge

136:                                              ; preds = %10
  br label %.backedge

137:                                              ; preds = %10
  %138 = load i32, i32* @m, align 4
  %139 = icmp slt i32 %.050, %138
  %140 = select i1 %139, i32 -864963651, i32 -1657999135
  br label %.backedge

141:                                              ; preds = %10
  %142 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %143 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %142, i32* nonnull dereferenceable(4) %6)
  %144 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %143, i32* nonnull dereferenceable(4) %7)
  %145 = load i32, i32* %7, align 4
  %146 = sext i32 %145 to i64
  %147 = load i32, i32* %5, align 4
  %148 = sext i32 %147 to i64
  %149 = load i32, i32* %6, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %148, i64 %150
  store i64 %146, i64* %151, align 8
  br label %.backedge

152:                                              ; preds = %10
  %153 = load i32, i32* @x.10, align 4
  %154 = load i32, i32* @y.11, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 1215438826, i32 -1812344471
  br label %.backedge

162:                                              ; preds = %10
  %163 = add i32 %.050, 1
  %164 = load i32, i32* @x.10, align 4
  %165 = load i32, i32* @y.11, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 1197519807, i32 -1812344471
  br label %.backedge

173:                                              ; preds = %10
  br label %.backedge

174:                                              ; preds = %10
  call void @_Z5floydv()
  br label %.backedge

175:                                              ; preds = %10
  %176 = load i32, i32* @n, align 4
  %177 = icmp slt i32 %.046, %176
  %178 = select i1 %177, i32 -1649019555, i32 -1940425157
  br label %.backedge

179:                                              ; preds = %10
  %180 = sext i32 %.046 to i64
  %181 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %180, i64 %180
  %182 = load i64, i64* %181, align 8
  %183 = icmp slt i64 %182, 0
  %184 = select i1 %183, i32 -1462304374, i32 1562899213
  br label %.backedge

185:                                              ; preds = %10
  %186 = load i32, i32* @x.10, align 4
  %187 = load i32, i32* @y.11, align 4
  %188 = add i32 %186, -1
  %189 = mul i32 %188, %186
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %192, %191
  %194 = select i1 %193, i32 886850737, i32 -1464333405
  br label %.backedge

195:                                              ; preds = %10
  %196 = load i32, i32* @x.10, align 4
  %197 = load i32, i32* @y.11, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 1511645239, i32 -1464333405
  br label %.backedge

205:                                              ; preds = %10
  br label %.backedge

206:                                              ; preds = %10
  br label %.backedge

207:                                              ; preds = %10
  %208 = add i32 %.046, 1
  br label %.backedge

209:                                              ; preds = %10
  %210 = load i32, i32* @x.10, align 4
  %211 = load i32, i32* @y.11, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 -123478602, i32 -1054786156
  br label %.backedge

219:                                              ; preds = %10
  %220 = and i8 %.048, 1
  %221 = icmp ne i8 %220, 0
  store i1 %221, i1* %2, align 1
  %222 = load i32, i32* @x.10, align 4
  %223 = load i32, i32* @y.11, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 778758381, i32 -1054786156
  br label %.backedge

231:                                              ; preds = %10
  %.0..0..0.40 = load volatile i1, i1* %2, align 1
  %232 = select i1 %.0..0..0.40, i32 1552238979, i32 -1022615211
  br label %.backedge

233:                                              ; preds = %10
  %234 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %235 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %234, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

236:                                              ; preds = %10
  %237 = load i32, i32* @x.10, align 4
  %238 = load i32, i32* @y.11, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -545221399, i32 441159728
  br label %.backedge

246:                                              ; preds = %10
  %247 = load i32, i32* @x.10, align 4
  %248 = load i32, i32* @y.11, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 -1677820832, i32 441159728
  br label %.backedge

256:                                              ; preds = %10
  br label %.backedge

257:                                              ; preds = %10
  %258 = load i32, i32* @n, align 4
  %259 = icmp slt i32 %.044, %258
  %260 = select i1 %259, i32 -1939810525, i32 642765048
  br label %.backedge

261:                                              ; preds = %10
  %262 = load i32, i32* @x.10, align 4
  %263 = load i32, i32* @y.11, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 -633017557, i32 440693387
  br label %.backedge

271:                                              ; preds = %10
  %272 = load i32, i32* @x.10, align 4
  %273 = load i32, i32* @y.11, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 -1253686134, i32 440693387
  br label %.backedge

281:                                              ; preds = %10
  br label %.backedge

282:                                              ; preds = %10
  %283 = load i32, i32* @n, align 4
  %284 = icmp slt i32 %.042, %283
  %285 = select i1 %284, i32 105622720, i32 820363411
  br label %.backedge

286:                                              ; preds = %10
  %287 = load i32, i32* @x.10, align 4
  %288 = load i32, i32* @y.11, align 4
  %289 = add i32 %287, -1
  %290 = mul i32 %289, %287
  %291 = and i32 %290, 1
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %293, %292
  %295 = select i1 %294, i32 -1544315055, i32 1773946297
  br label %.backedge

296:                                              ; preds = %10
  %297 = icmp ne i32 %.042, 0
  store i1 %297, i1* %1, align 1
  %298 = load i32, i32* @x.10, align 4
  %299 = load i32, i32* @y.11, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 -419410613, i32 1773946297
  br label %.backedge

307:                                              ; preds = %10
  %.0..0..0.41 = load volatile i1, i1* %1, align 1
  %308 = select i1 %.0..0..0.41, i32 738515014, i32 -1131291828
  br label %.backedge

309:                                              ; preds = %10
  %310 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

311:                                              ; preds = %10
  %312 = sext i32 %.044 to i64
  %313 = sext i32 %.042 to i64
  %314 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %312, i64 %313
  %315 = load i64, i64* %314, align 8
  %316 = icmp eq i64 %315, 4294967296
  %317 = select i1 %316, i32 -1883528687, i32 316341893
  br label %.backedge

318:                                              ; preds = %10
  %319 = load i32, i32* @x.10, align 4
  %320 = load i32, i32* @y.11, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 45342614, i32 177072821
  br label %.backedge

328:                                              ; preds = %10
  %329 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  %330 = load i32, i32* @x.10, align 4
  %331 = load i32, i32* @y.11, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 -1794350489, i32 177072821
  br label %.backedge

339:                                              ; preds = %10
  br label %.backedge

340:                                              ; preds = %10
  %341 = sext i32 %.044 to i64
  %342 = sext i32 %.042 to i64
  %343 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %341, i64 %342
  %344 = load i64, i64* %343, align 8
  %345 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %344)
  br label %.backedge

346:                                              ; preds = %10
  br label %.backedge

347:                                              ; preds = %10
  %348 = add i32 %.042, 1
  br label %.backedge

349:                                              ; preds = %10
  %350 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

351:                                              ; preds = %10
  %352 = load i32, i32* @x.10, align 4
  %353 = load i32, i32* @y.11, align 4
  %354 = add i32 %352, -1
  %355 = mul i32 %354, %352
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %358, %357
  %360 = select i1 %359, i32 -1999429711, i32 659863343
  br label %.backedge

361:                                              ; preds = %10
  %.neg = add i32 %.044, 1
  %362 = load i32, i32* @x.10, align 4
  %363 = load i32, i32* @y.11, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 152243608, i32 659863343
  br label %.backedge

371:                                              ; preds = %10
  br label %.backedge

372:                                              ; preds = %10
  %373 = load i32, i32* @x.10, align 4
  %374 = load i32, i32* @y.11, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 -1843532563, i32 -1894740797
  br label %.backedge

382:                                              ; preds = %10
  %383 = load i32, i32* @x.10, align 4
  %384 = load i32, i32* @y.11, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 1837488785, i32 -1894740797
  br label %.backedge

392:                                              ; preds = %10
  br label %.backedge

393:                                              ; preds = %10
  ret i32 0

394:                                              ; preds = %10
  br label %.backedge

395:                                              ; preds = %10
  %396 = sext i32 %.054 to i64
  %397 = sext i32 %.052 to i64
  %398 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %396, i64 %397
  store i64 4294967296, i64* %398, align 8
  br label %.backedge

399:                                              ; preds = %10
  %400 = sext i32 %.054 to i64
  %401 = sext i32 %.052 to i64
  %402 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dp, i64 0, i64 %400, i64 %401
  store i64 0, i64* %402, align 8
  br label %.backedge

403:                                              ; preds = %10
  br label %.backedge

404:                                              ; preds = %10
  %405 = add i32 %.054, 1
  br label %.backedge

406:                                              ; preds = %10
  %407 = add i32 %.050, 1
  br label %.backedge

408:                                              ; preds = %10
  br label %.backedge

409:                                              ; preds = %10
  br label %.backedge

410:                                              ; preds = %10
  br label %.backedge

411:                                              ; preds = %10
  br label %.backedge

412:                                              ; preds = %10
  br label %.backedge

413:                                              ; preds = %10
  %414 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

415:                                              ; preds = %10
  %416 = add i32 %.044, 1
  br label %.backedge

417:                                              ; preds = %10
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s156366442.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
