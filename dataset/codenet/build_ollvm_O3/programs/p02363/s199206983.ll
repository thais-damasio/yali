; ModuleID = 'build_ollvm/programs/p02363/s199206983.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s199206983.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@fw = global [110 x [110 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s199206983.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %11, i32* nonnull dereferenceable(4) %6)
  br label %13

13:                                               ; preds = %.backedge, %0
  %.082 = phi i32 [ 0, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.0 = phi i32 [ 452461852, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 452461852, label %14
    i32 -611996196, label %18
    i32 -478715708, label %19
    i32 -636629382, label %29
    i32 -514943278, label %41
    i32 989713157, label %43
    i32 1151566277, label %49
    i32 752699585, label %51
    i32 1490160487, label %52
    i32 -998841065, label %62
    i32 -1189069918, label %73
    i32 461369037, label %74
    i32 213972670, label %75
    i32 983086092, label %79
    i32 -670014957, label %87
    i32 1781256989, label %88
    i32 -1523227271, label %98
    i32 -271069192, label %108
    i32 878030819, label %109
    i32 2116650918, label %113
    i32 -513666244, label %114
    i32 -1604758676, label %118
    i32 -1833565953, label %119
    i32 -937787392, label %123
    i32 201549138, label %133
    i32 822587913, label %148
    i32 1301213967, label %150
    i32 -1155244820, label %157
    i32 -1286345285, label %158
    i32 -1061669861, label %168
    i32 1966345081, label %189
    i32 -1865796143, label %190
    i32 41179158, label %200
    i32 1051025794, label %211
    i32 1694799887, label %212
    i32 -2015008630, label %213
    i32 1617877616, label %214
    i32 394795917, label %224
    i32 1961469978, label %234
    i32 -560445680, label %235
    i32 -1877702718, label %245
    i32 2066122865, label %255
    i32 -1529562068, label %256
    i32 1771375622, label %257
    i32 490390833, label %261
    i32 1977379670, label %271
    i32 493374588, label %285
    i32 936658757, label %287
    i32 1891578901, label %297
    i32 -1865867902, label %307
    i32 -1368215655, label %308
    i32 399679815, label %309
    i32 -2123584550, label %310
    i32 -1984627503, label %313
    i32 1457912724, label %316
    i32 2042048558, label %317
    i32 -402752473, label %321
    i32 1707576609, label %322
    i32 -300065596, label %326
    i32 971696263, label %328
    i32 -896705499, label %338
    i32 -1619199280, label %349
    i32 -1819737690, label %350
    i32 -1182041511, label %360
    i32 810715477, label %375
    i32 -1508446899, label %377
    i32 -444410220, label %387
    i32 873894139, label %398
    i32 1653775038, label %399
    i32 612290141, label %405
    i32 -2107086587, label %406
    i32 1227636873, label %408
    i32 1522107573, label %418
    i32 495111784, label %429
    i32 -533811912, label %430
    i32 -1193941538, label %432
    i32 1289324669, label %433
    i32 555462701, label %434
    i32 1643450190, label %435
    i32 1820168988, label %436
    i32 -404550962, label %437
    i32 1186516112, label %438
    i32 361742218, label %450
    i32 -1038653319, label %452
    i32 76059923, label %453
    i32 632475384, label %455
    i32 -1548842309, label %456
    i32 2109359921, label %457
    i32 2073855064, label %459
    i32 1824802367, label %460
    i32 1420896672, label %462
  ]

.backedge:                                        ; preds = %13, %462, %460, %459, %457, %456, %455, %453, %452, %450, %438, %437, %436, %435, %434, %432, %430, %429, %418, %408, %406, %405, %399, %398, %387, %377, %375, %360, %350, %349, %338, %328, %326, %322, %321, %317, %316, %313, %310, %309, %308, %307, %297, %287, %285, %271, %261, %257, %256, %255, %245, %235, %234, %224, %214, %213, %212, %211, %200, %190, %189, %168, %158, %157, %150, %148, %133, %123, %119, %118, %114, %113, %109, %108, %98, %88, %87, %79, %75, %74, %73, %62, %52, %51, %49, %43, %41, %29, %19, %18, %14
  %.082.be = phi i32 [ %.082, %13 ], [ %.082, %462 ], [ %.082, %460 ], [ %.082, %459 ], [ %.082, %457 ], [ %.082, %456 ], [ %.082, %455 ], [ %.082, %453 ], [ %.082, %452 ], [ %.082, %450 ], [ %.082, %438 ], [ %.082, %437 ], [ %.082, %436 ], [ %.neg, %435 ], [ %.082, %434 ], [ %.082, %432 ], [ %.082, %430 ], [ %.082, %429 ], [ %.082, %418 ], [ %.082, %408 ], [ %.082, %406 ], [ %.082, %405 ], [ %.082, %399 ], [ %.082, %398 ], [ %.082, %387 ], [ %.082, %377 ], [ %.082, %375 ], [ %.082, %360 ], [ %.082, %350 ], [ %.082, %349 ], [ %.082, %338 ], [ %.082, %328 ], [ %.082, %326 ], [ %.082, %322 ], [ %.082, %321 ], [ %.082, %317 ], [ %.082, %316 ], [ %.082, %313 ], [ %.082, %310 ], [ %.082, %309 ], [ %.082, %308 ], [ %.082, %307 ], [ %.082, %297 ], [ %.082, %287 ], [ %.082, %285 ], [ %.082, %271 ], [ %.082, %261 ], [ %.082, %257 ], [ %.082, %256 ], [ %.082, %255 ], [ %.082, %245 ], [ %.082, %235 ], [ %.082, %234 ], [ %.082, %224 ], [ %.082, %214 ], [ %.082, %213 ], [ %.082, %212 ], [ %.082, %211 ], [ %.082, %200 ], [ %.082, %190 ], [ %.082, %189 ], [ %.082, %168 ], [ %.082, %158 ], [ %.082, %157 ], [ %.082, %150 ], [ %.082, %148 ], [ %.082, %133 ], [ %.082, %123 ], [ %.082, %119 ], [ %.082, %118 ], [ %.082, %114 ], [ %.082, %113 ], [ %.082, %109 ], [ %.082, %108 ], [ %.082, %98 ], [ %.082, %88 ], [ %.082, %87 ], [ %.082, %79 ], [ %.082, %75 ], [ %.082, %74 ], [ %.082, %73 ], [ %63, %62 ], [ %.082, %52 ], [ %.082, %51 ], [ %.082, %49 ], [ %.082, %43 ], [ %.082, %41 ], [ %.082, %29 ], [ %.082, %19 ], [ %.082, %18 ], [ %.082, %14 ]
  %.080.be = phi i32 [ %.080, %13 ], [ %.080, %462 ], [ %.080, %460 ], [ %.080, %459 ], [ %.080, %457 ], [ %.080, %456 ], [ %.080, %455 ], [ %.080, %453 ], [ %.080, %452 ], [ %.080, %450 ], [ %.080, %438 ], [ %.080, %437 ], [ %.080, %436 ], [ %.080, %435 ], [ %.080, %434 ], [ %.080, %432 ], [ %.080, %430 ], [ %.080, %429 ], [ %.080, %418 ], [ %.080, %408 ], [ %.080, %406 ], [ %.080, %405 ], [ %.080, %399 ], [ %.080, %398 ], [ %.080, %387 ], [ %.080, %377 ], [ %.080, %375 ], [ %.080, %360 ], [ %.080, %350 ], [ %.080, %349 ], [ %.080, %338 ], [ %.080, %328 ], [ %.080, %326 ], [ %.080, %322 ], [ %.080, %321 ], [ %.080, %317 ], [ %.080, %316 ], [ %.080, %313 ], [ %.080, %310 ], [ %.080, %309 ], [ %.080, %308 ], [ %.080, %307 ], [ %.080, %297 ], [ %.080, %287 ], [ %.080, %285 ], [ %.080, %271 ], [ %.080, %261 ], [ %.080, %257 ], [ %.080, %256 ], [ %.080, %255 ], [ %.080, %245 ], [ %.080, %235 ], [ %.080, %234 ], [ %.080, %224 ], [ %.080, %214 ], [ %.080, %213 ], [ %.080, %212 ], [ %.080, %211 ], [ %.080, %200 ], [ %.080, %190 ], [ %.080, %189 ], [ %.080, %168 ], [ %.080, %158 ], [ %.080, %157 ], [ %.080, %150 ], [ %.080, %148 ], [ %.080, %133 ], [ %.080, %123 ], [ %.080, %119 ], [ %.080, %118 ], [ %.080, %114 ], [ %.080, %113 ], [ %.080, %109 ], [ %.080, %108 ], [ %.080, %98 ], [ %.080, %88 ], [ %.080, %87 ], [ %.080, %79 ], [ %.080, %75 ], [ %.080, %74 ], [ %.080, %73 ], [ %.080, %62 ], [ %.080, %52 ], [ %.080, %51 ], [ %50, %49 ], [ %.080, %43 ], [ %.080, %41 ], [ %.080, %29 ], [ %.080, %19 ], [ 0, %18 ], [ %.080, %14 ]
  %.078.be = phi i32 [ %.078, %13 ], [ %.078, %462 ], [ %.078, %460 ], [ %.078, %459 ], [ %.078, %457 ], [ %.078, %456 ], [ %.078, %455 ], [ %.078, %453 ], [ %.078, %452 ], [ %.078, %450 ], [ %.078, %438 ], [ %.078, %437 ], [ %.078, %436 ], [ %.078, %435 ], [ %.078, %434 ], [ %.078, %432 ], [ %.078, %430 ], [ %.078, %429 ], [ %.078, %418 ], [ %.078, %408 ], [ %.078, %406 ], [ %.078, %405 ], [ %.078, %399 ], [ %.078, %398 ], [ %.078, %387 ], [ %.078, %377 ], [ %.078, %375 ], [ %.078, %360 ], [ %.078, %350 ], [ %.078, %349 ], [ %.078, %338 ], [ %.078, %328 ], [ %.078, %326 ], [ %.078, %322 ], [ %.078, %321 ], [ %.078, %317 ], [ %.078, %316 ], [ %.078, %313 ], [ %.078, %310 ], [ %.078, %309 ], [ %.078, %308 ], [ %.078, %307 ], [ %.078, %297 ], [ %.078, %287 ], [ %.078, %285 ], [ %.078, %271 ], [ %.078, %261 ], [ %.078, %257 ], [ %.078, %256 ], [ %.078, %255 ], [ %.078, %245 ], [ %.078, %235 ], [ %.078, %234 ], [ %.078, %224 ], [ %.078, %214 ], [ %.078, %213 ], [ %.078, %212 ], [ %.078, %211 ], [ %.078, %200 ], [ %.078, %190 ], [ %.078, %189 ], [ %.078, %168 ], [ %.078, %158 ], [ %.078, %157 ], [ %.078, %150 ], [ %.078, %148 ], [ %.078, %133 ], [ %.078, %123 ], [ %.078, %119 ], [ %.078, %118 ], [ %.078, %114 ], [ %.078, %113 ], [ %.078, %109 ], [ %.078, %108 ], [ %.078, %98 ], [ %.078, %88 ], [ %.neg87, %87 ], [ %.078, %79 ], [ %.078, %75 ], [ 0, %74 ], [ %.078, %73 ], [ %.078, %62 ], [ %.078, %52 ], [ %.078, %51 ], [ %.078, %49 ], [ %.078, %43 ], [ %.078, %41 ], [ %.078, %29 ], [ %.078, %19 ], [ %.078, %18 ], [ %.078, %14 ]
  %.076.be = phi i32 [ %.076, %13 ], [ %.076, %462 ], [ %.076, %460 ], [ %.076, %459 ], [ %.076, %457 ], [ %.076, %456 ], [ %.076, %455 ], [ %454, %453 ], [ %.076, %452 ], [ %.076, %450 ], [ %.076, %438 ], [ %.076, %437 ], [ 0, %436 ], [ %.076, %435 ], [ %.076, %434 ], [ %.076, %432 ], [ %.076, %430 ], [ %.076, %429 ], [ %.076, %418 ], [ %.076, %408 ], [ %.076, %406 ], [ %.076, %405 ], [ %.076, %399 ], [ %.076, %398 ], [ %.076, %387 ], [ %.076, %377 ], [ %.076, %375 ], [ %.076, %360 ], [ %.076, %350 ], [ %.076, %349 ], [ %.076, %338 ], [ %.076, %328 ], [ %.076, %326 ], [ %.076, %322 ], [ %.076, %321 ], [ %.076, %317 ], [ %.076, %316 ], [ %.076, %313 ], [ %.076, %310 ], [ %.076, %309 ], [ %.076, %308 ], [ %.076, %307 ], [ %.076, %297 ], [ %.076, %287 ], [ %.076, %285 ], [ %.076, %271 ], [ %.076, %261 ], [ %.076, %257 ], [ %.076, %256 ], [ %.076, %255 ], [ %.neg85, %245 ], [ %.076, %235 ], [ %.076, %234 ], [ %.076, %224 ], [ %.076, %214 ], [ %.076, %213 ], [ %.076, %212 ], [ %.076, %211 ], [ %.076, %200 ], [ %.076, %190 ], [ %.076, %189 ], [ %.076, %168 ], [ %.076, %158 ], [ %.076, %157 ], [ %.076, %150 ], [ %.076, %148 ], [ %.076, %133 ], [ %.076, %123 ], [ %.076, %119 ], [ %.076, %118 ], [ %.076, %114 ], [ %.076, %113 ], [ %.076, %109 ], [ %.076, %108 ], [ 0, %98 ], [ %.076, %88 ], [ %.076, %87 ], [ %.076, %79 ], [ %.076, %75 ], [ %.076, %74 ], [ %.076, %73 ], [ %.076, %62 ], [ %.076, %52 ], [ %.076, %51 ], [ %.076, %49 ], [ %.076, %43 ], [ %.076, %41 ], [ %.076, %29 ], [ %.076, %19 ], [ %.076, %18 ], [ %.076, %14 ]
  %.074.be = phi i32 [ %.074, %13 ], [ %.074, %462 ], [ %.074, %460 ], [ %.074, %459 ], [ %.074, %457 ], [ %.074, %456 ], [ %.074, %455 ], [ %.074, %453 ], [ %.074, %452 ], [ %.074, %450 ], [ %.074, %438 ], [ %.074, %437 ], [ %.074, %436 ], [ %.074, %435 ], [ %.074, %434 ], [ %.074, %432 ], [ %.074, %430 ], [ %.074, %429 ], [ %.074, %418 ], [ %.074, %408 ], [ %.074, %406 ], [ %.074, %405 ], [ %.074, %399 ], [ %.074, %398 ], [ %.074, %387 ], [ %.074, %377 ], [ %.074, %375 ], [ %.074, %360 ], [ %.074, %350 ], [ %.074, %349 ], [ %.074, %338 ], [ %.074, %328 ], [ %.074, %326 ], [ %.074, %322 ], [ %.074, %321 ], [ %.074, %317 ], [ %.074, %316 ], [ %.074, %313 ], [ %.074, %310 ], [ %.074, %309 ], [ %.074, %308 ], [ %.074, %307 ], [ %.074, %297 ], [ %.074, %287 ], [ %.074, %285 ], [ %.074, %271 ], [ %.074, %261 ], [ %.074, %257 ], [ %.074, %256 ], [ %.074, %255 ], [ %.074, %245 ], [ %.074, %235 ], [ %.074, %234 ], [ %.074, %224 ], [ %.074, %214 ], [ %.neg86, %213 ], [ %.074, %212 ], [ %.074, %211 ], [ %.074, %200 ], [ %.074, %190 ], [ %.074, %189 ], [ %.074, %168 ], [ %.074, %158 ], [ %.074, %157 ], [ %.074, %150 ], [ %.074, %148 ], [ %.074, %133 ], [ %.074, %123 ], [ %.074, %119 ], [ %.074, %118 ], [ %.074, %114 ], [ 0, %113 ], [ %.074, %109 ], [ %.074, %108 ], [ %.074, %98 ], [ %.074, %88 ], [ %.074, %87 ], [ %.074, %79 ], [ %.074, %75 ], [ %.074, %74 ], [ %.074, %73 ], [ %.074, %62 ], [ %.074, %52 ], [ %.074, %51 ], [ %.074, %49 ], [ %.074, %43 ], [ %.074, %41 ], [ %.074, %29 ], [ %.074, %19 ], [ %.074, %18 ], [ %.074, %14 ]
  %.072.be = phi i32 [ %.072, %13 ], [ %.072, %462 ], [ %.072, %460 ], [ %.072, %459 ], [ %.072, %457 ], [ %.072, %456 ], [ %.072, %455 ], [ %.072, %453 ], [ %.072, %452 ], [ %451, %450 ], [ %.072, %438 ], [ %.072, %437 ], [ %.072, %436 ], [ %.072, %435 ], [ %.072, %434 ], [ %.072, %432 ], [ %.072, %430 ], [ %.072, %429 ], [ %.072, %418 ], [ %.072, %408 ], [ %.072, %406 ], [ %.072, %405 ], [ %.072, %399 ], [ %.072, %398 ], [ %.072, %387 ], [ %.072, %377 ], [ %.072, %375 ], [ %.072, %360 ], [ %.072, %350 ], [ %.072, %349 ], [ %.072, %338 ], [ %.072, %328 ], [ %.072, %326 ], [ %.072, %322 ], [ %.072, %321 ], [ %.072, %317 ], [ %.072, %316 ], [ %.072, %313 ], [ %.072, %310 ], [ %.072, %309 ], [ %.072, %308 ], [ %.072, %307 ], [ %.072, %297 ], [ %.072, %287 ], [ %.072, %285 ], [ %.072, %271 ], [ %.072, %261 ], [ %.072, %257 ], [ %.072, %256 ], [ %.072, %255 ], [ %.072, %245 ], [ %.072, %235 ], [ %.072, %234 ], [ %.072, %224 ], [ %.072, %214 ], [ %.072, %213 ], [ %.072, %212 ], [ %.072, %211 ], [ %201, %200 ], [ %.072, %190 ], [ %.072, %189 ], [ %.072, %168 ], [ %.072, %158 ], [ %.072, %157 ], [ %.072, %150 ], [ %.072, %148 ], [ %.072, %133 ], [ %.072, %123 ], [ %.072, %119 ], [ 0, %118 ], [ %.072, %114 ], [ %.072, %113 ], [ %.072, %109 ], [ %.072, %108 ], [ %.072, %98 ], [ %.072, %88 ], [ %.072, %87 ], [ %.072, %79 ], [ %.072, %75 ], [ %.072, %74 ], [ %.072, %73 ], [ %.072, %62 ], [ %.072, %52 ], [ %.072, %51 ], [ %.072, %49 ], [ %.072, %43 ], [ %.072, %41 ], [ %.072, %29 ], [ %.072, %19 ], [ %.072, %18 ], [ %.072, %14 ]
  %.070.be = phi i32 [ %.070, %13 ], [ %.070, %462 ], [ %.070, %460 ], [ %.070, %459 ], [ %.070, %457 ], [ 1, %456 ], [ %.070, %455 ], [ %.070, %453 ], [ %.070, %452 ], [ %.070, %450 ], [ %.070, %438 ], [ %.070, %437 ], [ %.070, %436 ], [ %.070, %435 ], [ %.070, %434 ], [ %.070, %432 ], [ %.070, %430 ], [ %.070, %429 ], [ %.070, %418 ], [ %.070, %408 ], [ %.070, %406 ], [ %.070, %405 ], [ %.070, %399 ], [ %.070, %398 ], [ %.070, %387 ], [ %.070, %377 ], [ %.070, %375 ], [ %.070, %360 ], [ %.070, %350 ], [ %.070, %349 ], [ %.070, %338 ], [ %.070, %328 ], [ %.070, %326 ], [ %.070, %322 ], [ %.070, %321 ], [ %.070, %317 ], [ %.070, %316 ], [ %.070, %313 ], [ %.070, %310 ], [ %.070, %309 ], [ %.070, %308 ], [ %.070, %307 ], [ 1, %297 ], [ %.070, %287 ], [ %.070, %285 ], [ %.070, %271 ], [ %.070, %261 ], [ %.070, %257 ], [ 0, %256 ], [ %.070, %255 ], [ %.070, %245 ], [ %.070, %235 ], [ %.070, %234 ], [ %.070, %224 ], [ %.070, %214 ], [ %.070, %213 ], [ %.070, %212 ], [ %.070, %211 ], [ %.070, %200 ], [ %.070, %190 ], [ %.070, %189 ], [ %.070, %168 ], [ %.070, %158 ], [ %.070, %157 ], [ %.070, %150 ], [ %.070, %148 ], [ %.070, %133 ], [ %.070, %123 ], [ %.070, %119 ], [ %.070, %118 ], [ %.070, %114 ], [ %.070, %113 ], [ %.070, %109 ], [ %.070, %108 ], [ %.070, %98 ], [ %.070, %88 ], [ %.070, %87 ], [ %.070, %79 ], [ %.070, %75 ], [ %.070, %74 ], [ %.070, %73 ], [ %.070, %62 ], [ %.070, %52 ], [ %.070, %51 ], [ %.070, %49 ], [ %.070, %43 ], [ %.070, %41 ], [ %.070, %29 ], [ %.070, %19 ], [ %.070, %18 ], [ %.070, %14 ]
  %.068.be = phi i32 [ %.068, %13 ], [ %.068, %462 ], [ %.068, %460 ], [ %.068, %459 ], [ %.068, %457 ], [ %.068, %456 ], [ %.068, %455 ], [ %.068, %453 ], [ %.068, %452 ], [ %.068, %450 ], [ %.068, %438 ], [ %.068, %437 ], [ %.068, %436 ], [ %.068, %435 ], [ %.068, %434 ], [ %.068, %432 ], [ %.068, %430 ], [ %.068, %429 ], [ %.068, %418 ], [ %.068, %408 ], [ %.068, %406 ], [ %.068, %405 ], [ %.068, %399 ], [ %.068, %398 ], [ %.068, %387 ], [ %.068, %377 ], [ %.068, %375 ], [ %.068, %360 ], [ %.068, %350 ], [ %.068, %349 ], [ %.068, %338 ], [ %.068, %328 ], [ %.068, %326 ], [ %.068, %322 ], [ %.068, %321 ], [ %.068, %317 ], [ %.068, %316 ], [ %.068, %313 ], [ %.068, %310 ], [ %.neg84, %309 ], [ %.068, %308 ], [ %.068, %307 ], [ %.068, %297 ], [ %.068, %287 ], [ %.068, %285 ], [ %.068, %271 ], [ %.068, %261 ], [ %.068, %257 ], [ 0, %256 ], [ %.068, %255 ], [ %.068, %245 ], [ %.068, %235 ], [ %.068, %234 ], [ %.068, %224 ], [ %.068, %214 ], [ %.068, %213 ], [ %.068, %212 ], [ %.068, %211 ], [ %.068, %200 ], [ %.068, %190 ], [ %.068, %189 ], [ %.068, %168 ], [ %.068, %158 ], [ %.068, %157 ], [ %.068, %150 ], [ %.068, %148 ], [ %.068, %133 ], [ %.068, %123 ], [ %.068, %119 ], [ %.068, %118 ], [ %.068, %114 ], [ %.068, %113 ], [ %.068, %109 ], [ %.068, %108 ], [ %.068, %98 ], [ %.068, %88 ], [ %.068, %87 ], [ %.068, %79 ], [ %.068, %75 ], [ %.068, %74 ], [ %.068, %73 ], [ %.068, %62 ], [ %.068, %52 ], [ %.068, %51 ], [ %.068, %49 ], [ %.068, %43 ], [ %.068, %41 ], [ %.068, %29 ], [ %.068, %19 ], [ %.068, %18 ], [ %.068, %14 ]
  %.066.be = phi i32 [ %.066, %13 ], [ %.066, %462 ], [ %.066, %460 ], [ %.066, %459 ], [ %.066, %457 ], [ %.066, %456 ], [ %.066, %455 ], [ %.066, %453 ], [ %.066, %452 ], [ %.066, %450 ], [ %.066, %438 ], [ %.066, %437 ], [ %.066, %436 ], [ %.066, %435 ], [ %.066, %434 ], [ %.066, %432 ], [ %431, %430 ], [ %.066, %429 ], [ %.066, %418 ], [ %.066, %408 ], [ %.066, %406 ], [ %.066, %405 ], [ %.066, %399 ], [ %.066, %398 ], [ %.066, %387 ], [ %.066, %377 ], [ %.066, %375 ], [ %.066, %360 ], [ %.066, %350 ], [ %.066, %349 ], [ %.066, %338 ], [ %.066, %328 ], [ %.066, %326 ], [ %.066, %322 ], [ %.066, %321 ], [ %.066, %317 ], [ 0, %316 ], [ %.066, %313 ], [ %.066, %310 ], [ %.066, %309 ], [ %.066, %308 ], [ %.066, %307 ], [ %.066, %297 ], [ %.066, %287 ], [ %.066, %285 ], [ %.066, %271 ], [ %.066, %261 ], [ %.066, %257 ], [ %.066, %256 ], [ %.066, %255 ], [ %.066, %245 ], [ %.066, %235 ], [ %.066, %234 ], [ %.066, %224 ], [ %.066, %214 ], [ %.066, %213 ], [ %.066, %212 ], [ %.066, %211 ], [ %.066, %200 ], [ %.066, %190 ], [ %.066, %189 ], [ %.066, %168 ], [ %.066, %158 ], [ %.066, %157 ], [ %.066, %150 ], [ %.066, %148 ], [ %.066, %133 ], [ %.066, %123 ], [ %.066, %119 ], [ %.066, %118 ], [ %.066, %114 ], [ %.066, %113 ], [ %.066, %109 ], [ %.066, %108 ], [ %.066, %98 ], [ %.066, %88 ], [ %.066, %87 ], [ %.066, %79 ], [ %.066, %75 ], [ %.066, %74 ], [ %.066, %73 ], [ %.066, %62 ], [ %.066, %52 ], [ %.066, %51 ], [ %.066, %49 ], [ %.066, %43 ], [ %.066, %41 ], [ %.066, %29 ], [ %.066, %19 ], [ %.066, %18 ], [ %.066, %14 ]
  %.064.be = phi i32 [ %.064, %13 ], [ %.064, %462 ], [ %.064, %460 ], [ %.064, %459 ], [ %.064, %457 ], [ %.064, %456 ], [ %.064, %455 ], [ %.064, %453 ], [ %.064, %452 ], [ %.064, %450 ], [ %.064, %438 ], [ %.064, %437 ], [ %.064, %436 ], [ %.064, %435 ], [ %.064, %434 ], [ %.064, %432 ], [ %.064, %430 ], [ %.064, %429 ], [ %.064, %418 ], [ %.064, %408 ], [ %407, %406 ], [ %.064, %405 ], [ %.064, %399 ], [ %.064, %398 ], [ %.064, %387 ], [ %.064, %377 ], [ %.064, %375 ], [ %.064, %360 ], [ %.064, %350 ], [ %.064, %349 ], [ %.064, %338 ], [ %.064, %328 ], [ %.064, %326 ], [ %.064, %322 ], [ 0, %321 ], [ %.064, %317 ], [ %.064, %316 ], [ %.064, %313 ], [ %.064, %310 ], [ %.064, %309 ], [ %.064, %308 ], [ %.064, %307 ], [ %.064, %297 ], [ %.064, %287 ], [ %.064, %285 ], [ %.064, %271 ], [ %.064, %261 ], [ %.064, %257 ], [ %.064, %256 ], [ %.064, %255 ], [ %.064, %245 ], [ %.064, %235 ], [ %.064, %234 ], [ %.064, %224 ], [ %.064, %214 ], [ %.064, %213 ], [ %.064, %212 ], [ %.064, %211 ], [ %.064, %200 ], [ %.064, %190 ], [ %.064, %189 ], [ %.064, %168 ], [ %.064, %158 ], [ %.064, %157 ], [ %.064, %150 ], [ %.064, %148 ], [ %.064, %133 ], [ %.064, %123 ], [ %.064, %119 ], [ %.064, %118 ], [ %.064, %114 ], [ %.064, %113 ], [ %.064, %109 ], [ %.064, %108 ], [ %.064, %98 ], [ %.064, %88 ], [ %.064, %87 ], [ %.064, %79 ], [ %.064, %75 ], [ %.064, %74 ], [ %.064, %73 ], [ %.064, %62 ], [ %.064, %52 ], [ %.064, %51 ], [ %.064, %49 ], [ %.064, %43 ], [ %.064, %41 ], [ %.064, %29 ], [ %.064, %19 ], [ %.064, %18 ], [ %.064, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ 1522107573, %462 ], [ -444410220, %460 ], [ -1182041511, %459 ], [ -896705499, %457 ], [ 1891578901, %456 ], [ 1977379670, %455 ], [ -1877702718, %453 ], [ 394795917, %452 ], [ 41179158, %450 ], [ -1061669861, %438 ], [ 201549138, %437 ], [ -1523227271, %436 ], [ -998841065, %435 ], [ -636629382, %434 ], [ 1289324669, %432 ], [ 2042048558, %430 ], [ -533811912, %429 ], [ %428, %418 ], [ %417, %408 ], [ 1707576609, %406 ], [ -2107086587, %405 ], [ 612290141, %399 ], [ 612290141, %398 ], [ %397, %387 ], [ %386, %377 ], [ %376, %375 ], [ %374, %360 ], [ %359, %350 ], [ -1819737690, %349 ], [ %348, %338 ], [ %337, %328 ], [ %327, %326 ], [ %325, %322 ], [ 1707576609, %321 ], [ %320, %317 ], [ 2042048558, %316 ], [ 1289324669, %313 ], [ %312, %310 ], [ 1771375622, %309 ], [ 399679815, %308 ], [ -2123584550, %307 ], [ %306, %297 ], [ %296, %287 ], [ %286, %285 ], [ %284, %271 ], [ %270, %261 ], [ %260, %257 ], [ 1771375622, %256 ], [ 878030819, %255 ], [ %254, %245 ], [ %244, %235 ], [ -560445680, %234 ], [ %233, %224 ], [ %223, %214 ], [ -513666244, %213 ], [ -2015008630, %212 ], [ -1833565953, %211 ], [ %210, %200 ], [ %199, %190 ], [ -1865796143, %189 ], [ %188, %168 ], [ %167, %158 ], [ -1865796143, %157 ], [ %156, %150 ], [ %149, %148 ], [ %147, %133 ], [ %132, %123 ], [ %122, %119 ], [ -1833565953, %118 ], [ %117, %114 ], [ -513666244, %113 ], [ %112, %109 ], [ 878030819, %108 ], [ %107, %98 ], [ %97, %88 ], [ 213972670, %87 ], [ -670014957, %79 ], [ %78, %75 ], [ 213972670, %74 ], [ 452461852, %73 ], [ %72, %62 ], [ %61, %52 ], [ 1490160487, %51 ], [ -478715708, %49 ], [ 1151566277, %43 ], [ %42, %41 ], [ %40, %29 ], [ %28, %19 ], [ -478715708, %18 ], [ %17, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %.082, %15
  %17 = select i1 %16, i32 -611996196, i32 461369037
  br label %.backedge

18:                                               ; preds = %13
  br label %.backedge

19:                                               ; preds = %13
  %20 = load i32, i32* @x.3, align 4
  %21 = load i32, i32* @y.4, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -636629382, i32 555462701
  br label %.backedge

29:                                               ; preds = %13
  %30 = load i32, i32* %5, align 4
  %31 = icmp slt i32 %.080, %30
  store i1 %31, i1* %4, align 1
  %32 = load i32, i32* @x.3, align 4
  %33 = load i32, i32* @y.4, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -514943278, i32 555462701
  br label %.backedge

41:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %42 = select i1 %.0..0..0., i32 989713157, i32 752699585
  br label %.backedge

43:                                               ; preds = %13
  %44 = icmp eq i32 %.082, %.080
  %45 = select i1 %44, i64 0, i64 1000000000000000000
  %46 = sext i32 %.082 to i64
  %47 = sext i32 %.080 to i64
  %48 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %46, i64 %47
  store i64 %45, i64* %48, align 8
  br label %.backedge

49:                                               ; preds = %13
  %50 = add i32 %.080, 1
  br label %.backedge

51:                                               ; preds = %13
  br label %.backedge

52:                                               ; preds = %13
  %53 = load i32, i32* @x.3, align 4
  %54 = load i32, i32* @y.4, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -998841065, i32 1643450190
  br label %.backedge

62:                                               ; preds = %13
  %63 = add i32 %.082, 1
  %64 = load i32, i32* @x.3, align 4
  %65 = load i32, i32* @y.4, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 -1189069918, i32 1643450190
  br label %.backedge

73:                                               ; preds = %13
  br label %.backedge

74:                                               ; preds = %13
  br label %.backedge

75:                                               ; preds = %13
  %76 = load i32, i32* %6, align 4
  %77 = icmp slt i32 %.078, %76
  %78 = select i1 %77, i32 983086092, i32 1781256989
  br label %.backedge

79:                                               ; preds = %13
  %80 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %7)
  %81 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %80, i64* nonnull dereferenceable(8) %8)
  %82 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %81, i64* nonnull dereferenceable(8) %9)
  %83 = load i64, i64* %9, align 8
  %84 = load i64, i64* %7, align 8
  %85 = load i64, i64* %8, align 8
  %86 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %84, i64 %85
  store i64 %83, i64* %86, align 8
  br label %.backedge

87:                                               ; preds = %13
  %.neg87 = add i32 %.078, 1
  br label %.backedge

88:                                               ; preds = %13
  %89 = load i32, i32* @x.3, align 4
  %90 = load i32, i32* @y.4, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 -1523227271, i32 1820168988
  br label %.backedge

98:                                               ; preds = %13
  %99 = load i32, i32* @x.3, align 4
  %100 = load i32, i32* @y.4, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 -271069192, i32 1820168988
  br label %.backedge

108:                                              ; preds = %13
  br label %.backedge

109:                                              ; preds = %13
  %110 = load i32, i32* %5, align 4
  %111 = icmp slt i32 %.076, %110
  %112 = select i1 %111, i32 2116650918, i32 -1529562068
  br label %.backedge

113:                                              ; preds = %13
  br label %.backedge

114:                                              ; preds = %13
  %115 = load i32, i32* %5, align 4
  %116 = icmp slt i32 %.074, %115
  %117 = select i1 %116, i32 -1604758676, i32 1617877616
  br label %.backedge

118:                                              ; preds = %13
  br label %.backedge

119:                                              ; preds = %13
  %120 = load i32, i32* %5, align 4
  %121 = icmp slt i32 %.072, %120
  %122 = select i1 %121, i32 -937787392, i32 1694799887
  br label %.backedge

123:                                              ; preds = %13
  %124 = load i32, i32* @x.3, align 4
  %125 = load i32, i32* @y.4, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 201549138, i32 -404550962
  br label %.backedge

133:                                              ; preds = %13
  %134 = sext i32 %.074 to i64
  %135 = sext i32 %.076 to i64
  %136 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %134, i64 %135
  %137 = load i64, i64* %136, align 8
  %138 = icmp eq i64 %137, 1000000000000000000
  store i1 %138, i1* %3, align 1
  %139 = load i32, i32* @x.3, align 4
  %140 = load i32, i32* @y.4, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 822587913, i32 -404550962
  br label %.backedge

148:                                              ; preds = %13
  %.0..0..0.61 = load volatile i1, i1* %3, align 1
  %149 = select i1 %.0..0..0.61, i32 -1155244820, i32 1301213967
  br label %.backedge

150:                                              ; preds = %13
  %151 = sext i32 %.076 to i64
  %152 = sext i32 %.072 to i64
  %153 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %151, i64 %152
  %154 = load i64, i64* %153, align 8
  %155 = icmp eq i64 %154, 1000000000000000000
  %156 = select i1 %155, i32 -1155244820, i32 -1286345285
  br label %.backedge

157:                                              ; preds = %13
  br label %.backedge

158:                                              ; preds = %13
  %159 = load i32, i32* @x.3, align 4
  %160 = load i32, i32* @y.4, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 -1061669861, i32 1186516112
  br label %.backedge

168:                                              ; preds = %13
  %169 = sext i32 %.074 to i64
  %170 = sext i32 %.072 to i64
  %171 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %169, i64 %170
  %172 = sext i32 %.076 to i64
  %173 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %169, i64 %172
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %172, i64 %170
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, %174
  store i64 %177, i64* %10, align 8
  %178 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %171, i64* nonnull dereferenceable(8) %10)
  %179 = load i64, i64* %178, align 8
  store i64 %179, i64* %171, align 8
  %180 = load i32, i32* @x.3, align 4
  %181 = load i32, i32* @y.4, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 1966345081, i32 1186516112
  br label %.backedge

189:                                              ; preds = %13
  br label %.backedge

190:                                              ; preds = %13
  %191 = load i32, i32* @x.3, align 4
  %192 = load i32, i32* @y.4, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 41179158, i32 361742218
  br label %.backedge

200:                                              ; preds = %13
  %201 = add i32 %.072, 1
  %202 = load i32, i32* @x.3, align 4
  %203 = load i32, i32* @y.4, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 1051025794, i32 361742218
  br label %.backedge

211:                                              ; preds = %13
  br label %.backedge

212:                                              ; preds = %13
  br label %.backedge

213:                                              ; preds = %13
  %.neg86 = add i32 %.074, 1
  br label %.backedge

214:                                              ; preds = %13
  %215 = load i32, i32* @x.3, align 4
  %216 = load i32, i32* @y.4, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 394795917, i32 -1038653319
  br label %.backedge

224:                                              ; preds = %13
  %225 = load i32, i32* @x.3, align 4
  %226 = load i32, i32* @y.4, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 1961469978, i32 -1038653319
  br label %.backedge

234:                                              ; preds = %13
  br label %.backedge

235:                                              ; preds = %13
  %236 = load i32, i32* @x.3, align 4
  %237 = load i32, i32* @y.4, align 4
  %238 = add i32 %236, -1
  %239 = mul i32 %238, %236
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %242, %241
  %244 = select i1 %243, i32 -1877702718, i32 76059923
  br label %.backedge

245:                                              ; preds = %13
  %.neg85 = add i32 %.076, 1
  %246 = load i32, i32* @x.3, align 4
  %247 = load i32, i32* @y.4, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 2066122865, i32 76059923
  br label %.backedge

255:                                              ; preds = %13
  br label %.backedge

256:                                              ; preds = %13
  br label %.backedge

257:                                              ; preds = %13
  %258 = load i32, i32* %5, align 4
  %259 = icmp slt i32 %.068, %258
  %260 = select i1 %259, i32 490390833, i32 -2123584550
  br label %.backedge

261:                                              ; preds = %13
  %262 = load i32, i32* @x.3, align 4
  %263 = load i32, i32* @y.4, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 1977379670, i32 632475384
  br label %.backedge

271:                                              ; preds = %13
  %272 = sext i32 %.068 to i64
  %273 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %272, i64 %272
  %274 = load i64, i64* %273, align 8
  %275 = icmp slt i64 %274, 0
  store i1 %275, i1* %2, align 1
  %276 = load i32, i32* @x.3, align 4
  %277 = load i32, i32* @y.4, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 493374588, i32 632475384
  br label %.backedge

285:                                              ; preds = %13
  %.0..0..0.62 = load volatile i1, i1* %2, align 1
  %286 = select i1 %.0..0..0.62, i32 936658757, i32 -1368215655
  br label %.backedge

287:                                              ; preds = %13
  %288 = load i32, i32* @x.3, align 4
  %289 = load i32, i32* @y.4, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 1891578901, i32 -1548842309
  br label %.backedge

297:                                              ; preds = %13
  %298 = load i32, i32* @x.3, align 4
  %299 = load i32, i32* @y.4, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 -1865867902, i32 -1548842309
  br label %.backedge

307:                                              ; preds = %13
  br label %.backedge

308:                                              ; preds = %13
  br label %.backedge

309:                                              ; preds = %13
  %.neg84 = add i32 %.068, 1
  br label %.backedge

310:                                              ; preds = %13
  %311 = icmp eq i32 %.070, 1
  %312 = select i1 %311, i32 -1984627503, i32 1457912724
  br label %.backedge

313:                                              ; preds = %13
  %314 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %315 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %314, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

316:                                              ; preds = %13
  br label %.backedge

317:                                              ; preds = %13
  %318 = load i32, i32* %5, align 4
  %319 = icmp slt i32 %.066, %318
  %320 = select i1 %319, i32 -402752473, i32 -1193941538
  br label %.backedge

321:                                              ; preds = %13
  br label %.backedge

322:                                              ; preds = %13
  %323 = load i32, i32* %5, align 4
  %324 = icmp slt i32 %.064, %323
  %325 = select i1 %324, i32 -300065596, i32 1227636873
  br label %.backedge

326:                                              ; preds = %13
  %.not = icmp eq i32 %.064, 0
  %327 = select i1 %.not, i32 -1819737690, i32 971696263
  br label %.backedge

328:                                              ; preds = %13
  %329 = load i32, i32* @x.3, align 4
  %330 = load i32, i32* @y.4, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 -896705499, i32 2109359921
  br label %.backedge

338:                                              ; preds = %13
  %339 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %340 = load i32, i32* @x.3, align 4
  %341 = load i32, i32* @y.4, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 -1619199280, i32 2109359921
  br label %.backedge

349:                                              ; preds = %13
  br label %.backedge

350:                                              ; preds = %13
  %351 = load i32, i32* @x.3, align 4
  %352 = load i32, i32* @y.4, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 -1182041511, i32 2073855064
  br label %.backedge

360:                                              ; preds = %13
  %361 = sext i32 %.066 to i64
  %362 = sext i32 %.064 to i64
  %363 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %361, i64 %362
  %364 = load i64, i64* %363, align 8
  %365 = icmp eq i64 %364, 1000000000000000000
  store i1 %365, i1* %1, align 1
  %366 = load i32, i32* @x.3, align 4
  %367 = load i32, i32* @y.4, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 810715477, i32 2073855064
  br label %.backedge

375:                                              ; preds = %13
  %.0..0..0.63 = load volatile i1, i1* %1, align 1
  %376 = select i1 %.0..0..0.63, i32 -1508446899, i32 1653775038
  br label %.backedge

377:                                              ; preds = %13
  %378 = load i32, i32* @x.3, align 4
  %379 = load i32, i32* @y.4, align 4
  %380 = add i32 %378, -1
  %381 = mul i32 %380, %378
  %382 = and i32 %381, 1
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %384, %383
  %386 = select i1 %385, i32 -444410220, i32 1824802367
  br label %.backedge

387:                                              ; preds = %13
  %388 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %389 = load i32, i32* @x.3, align 4
  %390 = load i32, i32* @y.4, align 4
  %391 = add i32 %389, -1
  %392 = mul i32 %391, %389
  %393 = and i32 %392, 1
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %395, %394
  %397 = select i1 %396, i32 873894139, i32 1824802367
  br label %.backedge

398:                                              ; preds = %13
  br label %.backedge

399:                                              ; preds = %13
  %400 = sext i32 %.066 to i64
  %401 = sext i32 %.064 to i64
  %402 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %400, i64 %401
  %403 = load i64, i64* %402, align 8
  %404 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %403)
  br label %.backedge

405:                                              ; preds = %13
  br label %.backedge

406:                                              ; preds = %13
  %407 = add i32 %.064, 1
  br label %.backedge

408:                                              ; preds = %13
  %409 = load i32, i32* @x.3, align 4
  %410 = load i32, i32* @y.4, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 1522107573, i32 1420896672
  br label %.backedge

418:                                              ; preds = %13
  %419 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %420 = load i32, i32* @x.3, align 4
  %421 = load i32, i32* @y.4, align 4
  %422 = add i32 %420, -1
  %423 = mul i32 %422, %420
  %424 = and i32 %423, 1
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %426, %425
  %428 = select i1 %427, i32 495111784, i32 1420896672
  br label %.backedge

429:                                              ; preds = %13
  br label %.backedge

430:                                              ; preds = %13
  %431 = add i32 %.066, 1
  br label %.backedge

432:                                              ; preds = %13
  br label %.backedge

433:                                              ; preds = %13
  ret i32 0

434:                                              ; preds = %13
  br label %.backedge

435:                                              ; preds = %13
  %.neg = add i32 %.082, 1
  br label %.backedge

436:                                              ; preds = %13
  br label %.backedge

437:                                              ; preds = %13
  br label %.backedge

438:                                              ; preds = %13
  %439 = sext i32 %.074 to i64
  %440 = sext i32 %.072 to i64
  %441 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %439, i64 %440
  %442 = sext i32 %.076 to i64
  %443 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %439, i64 %442
  %444 = load i64, i64* %443, align 8
  %445 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @fw, i64 0, i64 %442, i64 %440
  %446 = load i64, i64* %445, align 8
  %447 = add i64 %446, %444
  store i64 %447, i64* %10, align 8
  %448 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %441, i64* nonnull dereferenceable(8) %10)
  %449 = load i64, i64* %448, align 8
  store i64 %449, i64* %441, align 8
  br label %.backedge

450:                                              ; preds = %13
  %451 = add i32 %.072, 1
  br label %.backedge

452:                                              ; preds = %13
  br label %.backedge

453:                                              ; preds = %13
  %454 = add i32 %.076, 1
  br label %.backedge

455:                                              ; preds = %13
  br label %.backedge

456:                                              ; preds = %13
  br label %.backedge

457:                                              ; preds = %13
  %458 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

459:                                              ; preds = %13
  br label %.backedge

460:                                              ; preds = %13
  %461 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

462:                                              ; preds = %13
  %463 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.5, align 4
  %8 = load i32, i32* @y.6, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -1548171257, i32 2030896812
  %16 = select i1 %14, i32 -1074576165, i32 2030896812
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 75144801, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 75144801, label %18
    i32 -1615724106, label %.outer.backedge
    i32 1577213635, label %.outer10.backedge
    i32 -1074576165, label %21
    i32 -1548171257, label %22
    i32 -1966820130, label %23
    i32 2030896812, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -1615724106, i32 1577213635
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer.backedge

22:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %22, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -1966820130, %22 ], [ %16, %17 ]
  br label %.outer10

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %21
  %.08.ph.be = phi i64* [ %0, %21 ], [ %0, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ %15, %21 ], [ -1074576165, %24 ], [ -1966820130, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s199206983.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
