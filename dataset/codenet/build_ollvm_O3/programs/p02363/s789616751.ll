; ModuleID = 'build_ollvm/programs/p02363/s789616751.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s789616751.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dist = global [110 x [110 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s789616751.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1271366681, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1271366681, label %11
    i32 374331431, label %14
    i32 625016511, label %25
    i32 1128815391, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 374331431, i32 1128815391
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 625016511, i32 1128815391
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 374331431, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %13
  %15 = bitcast i8* %14 to %"class.std::basic_ios"*
  %16 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %15, %"class.std::basic_ostream"* null)
  %17 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %18 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %4)
  %19 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %18, i32* nonnull dereferenceable(4) %5)
  br label %20

20:                                               ; preds = %.backedge, %0
  %.070 = phi i32 [ 0, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.0 = phi i32 [ 256448085, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 256448085, label %21
    i32 -403365880, label %25
    i32 390982368, label %26
    i32 1118382509, label %30
    i32 308661812, label %34
    i32 489484147, label %44
    i32 2047808719, label %55
    i32 -950177046, label %56
    i32 -229604788, label %57
    i32 -964653619, label %59
    i32 1054472642, label %60
    i32 -494779412, label %70
    i32 -1641641504, label %82
    i32 -1466504079, label %84
    i32 469115444, label %87
    i32 -1574064744, label %97
    i32 1486877960, label %108
    i32 516058660, label %109
    i32 76324740, label %119
    i32 1237328803, label %129
    i32 580734693, label %130
    i32 -685724880, label %134
    i32 2119667733, label %145
    i32 774366684, label %147
    i32 -903180486, label %148
    i32 -1704956111, label %152
    i32 -1881846969, label %162
    i32 -646859587, label %172
    i32 -1776691847, label %173
    i32 -757727158, label %183
    i32 1352940605, label %195
    i32 1547651005, label %197
    i32 1650816959, label %198
    i32 2087057147, label %202
    i32 1824960390, label %208
    i32 1893619183, label %214
    i32 326523711, label %228
    i32 1727699001, label %235
    i32 2029590619, label %236
    i32 -1933887304, label %246
    i32 937024422, label %256
    i32 1707894020, label %257
    i32 1542155049, label %258
    i32 -772539063, label %268
    i32 -2058630592, label %279
    i32 2086053937, label %280
    i32 1197834162, label %290
    i32 -1257274157, label %300
    i32 -361488859, label %301
    i32 -1722089511, label %303
    i32 282704451, label %313
    i32 1585709425, label %323
    i32 -63739777, label %324
    i32 1414986033, label %326
    i32 -2102484215, label %327
    i32 130630178, label %337
    i32 -427275196, label %349
    i32 1647062108, label %351
    i32 -828534603, label %355
    i32 1965506870, label %359
    i32 -223304979, label %369
    i32 551296077, label %384
    i32 -1352663860, label %385
    i32 568980749, label %386
    i32 166442368, label %396
    i32 -2128845824, label %407
    i32 2109306972, label %408
    i32 940726063, label %418
    i32 1023698810, label %428
    i32 511921422, label %429
    i32 824934782, label %430
    i32 -1215214038, label %433
    i32 -795178548, label %434
    i32 -1781920754, label %436
    i32 -1434148349, label %437
    i32 1342422044, label %439
    i32 -1649123606, label %440
    i32 -1633113916, label %441
    i32 -892049850, label %442
    i32 2035692034, label %443
    i32 1841417680, label %445
    i32 650361947, label %446
    i32 1292015361, label %447
    i32 -1008711569, label %448
    i32 -428054738, label %454
    i32 843904781, label %456
  ]

.backedge:                                        ; preds = %20, %456, %454, %448, %447, %446, %445, %443, %442, %441, %440, %439, %437, %436, %434, %430, %429, %428, %418, %408, %407, %396, %386, %385, %384, %369, %359, %355, %351, %349, %337, %327, %326, %324, %323, %313, %303, %301, %300, %290, %280, %279, %268, %258, %257, %256, %246, %236, %235, %228, %214, %208, %202, %198, %197, %195, %183, %173, %172, %162, %152, %148, %147, %145, %134, %130, %129, %119, %109, %108, %97, %87, %84, %82, %70, %60, %59, %57, %56, %55, %44, %34, %30, %26, %25, %21
  %.070.be = phi i32 [ %.070, %20 ], [ %.070, %456 ], [ %.070, %454 ], [ %.070, %448 ], [ %.070, %447 ], [ %.070, %446 ], [ %.070, %445 ], [ %.070, %443 ], [ %.070, %442 ], [ %.070, %441 ], [ %.070, %440 ], [ %.070, %439 ], [ %.070, %437 ], [ %.070, %436 ], [ %.070, %434 ], [ %.070, %430 ], [ %.070, %429 ], [ %.070, %428 ], [ %.070, %418 ], [ %.070, %408 ], [ %.070, %407 ], [ %.070, %396 ], [ %.070, %386 ], [ %.070, %385 ], [ %.070, %384 ], [ %.070, %369 ], [ %.070, %359 ], [ %.070, %355 ], [ %.070, %351 ], [ %.070, %349 ], [ %.070, %337 ], [ %.070, %327 ], [ %.070, %326 ], [ %.070, %324 ], [ %.070, %323 ], [ %.070, %313 ], [ %.070, %303 ], [ %.070, %301 ], [ %.070, %300 ], [ %.070, %290 ], [ %.070, %280 ], [ %.070, %279 ], [ %.070, %268 ], [ %.070, %258 ], [ %.070, %257 ], [ %.070, %256 ], [ %.070, %246 ], [ %.070, %236 ], [ %.070, %235 ], [ %.070, %228 ], [ %.070, %214 ], [ %.070, %208 ], [ %.070, %202 ], [ %.070, %198 ], [ %.070, %197 ], [ %.070, %195 ], [ %.070, %183 ], [ %.070, %173 ], [ %.070, %172 ], [ %.070, %162 ], [ %.070, %152 ], [ %.070, %148 ], [ %.070, %147 ], [ %.070, %145 ], [ %.070, %134 ], [ %.070, %130 ], [ %.070, %129 ], [ %.070, %119 ], [ %.070, %109 ], [ %.070, %108 ], [ %.070, %97 ], [ %.070, %87 ], [ %.070, %84 ], [ %.070, %82 ], [ %.070, %70 ], [ %.070, %60 ], [ %.070, %59 ], [ %58, %57 ], [ %.070, %56 ], [ %.070, %55 ], [ %.070, %44 ], [ %.070, %34 ], [ %.070, %30 ], [ %.070, %26 ], [ %.070, %25 ], [ %.070, %21 ]
  %.068.be = phi i32 [ %.068, %20 ], [ %.068, %456 ], [ %.068, %454 ], [ %.068, %448 ], [ %.068, %447 ], [ %.068, %446 ], [ %.068, %445 ], [ %.068, %443 ], [ %.068, %442 ], [ %.068, %441 ], [ %.068, %440 ], [ %.068, %439 ], [ %.068, %437 ], [ %.068, %436 ], [ %435, %434 ], [ %.068, %430 ], [ %.068, %429 ], [ %.068, %428 ], [ %.068, %418 ], [ %.068, %408 ], [ %.068, %407 ], [ %.068, %396 ], [ %.068, %386 ], [ %.068, %385 ], [ %.068, %384 ], [ %.068, %369 ], [ %.068, %359 ], [ %.068, %355 ], [ %.068, %351 ], [ %.068, %349 ], [ %.068, %337 ], [ %.068, %327 ], [ %.068, %326 ], [ %.068, %324 ], [ %.068, %323 ], [ %.068, %313 ], [ %.068, %303 ], [ %.068, %301 ], [ %.068, %300 ], [ %.068, %290 ], [ %.068, %280 ], [ %.068, %279 ], [ %.068, %268 ], [ %.068, %258 ], [ %.068, %257 ], [ %.068, %256 ], [ %.068, %246 ], [ %.068, %236 ], [ %.068, %235 ], [ %.068, %228 ], [ %.068, %214 ], [ %.068, %208 ], [ %.068, %202 ], [ %.068, %198 ], [ %.068, %197 ], [ %.068, %195 ], [ %.068, %183 ], [ %.068, %173 ], [ %.068, %172 ], [ %.068, %162 ], [ %.068, %152 ], [ %.068, %148 ], [ %.068, %147 ], [ %.068, %145 ], [ %.068, %134 ], [ %.068, %130 ], [ %.068, %129 ], [ %.068, %119 ], [ %.068, %109 ], [ %.068, %108 ], [ %.068, %97 ], [ %.068, %87 ], [ %.068, %84 ], [ %.068, %82 ], [ %.068, %70 ], [ %.068, %60 ], [ %.068, %59 ], [ %.068, %57 ], [ %.068, %56 ], [ %.068, %55 ], [ %45, %44 ], [ %.068, %34 ], [ %.068, %30 ], [ %.068, %26 ], [ 0, %25 ], [ %.068, %21 ]
  %.066.be = phi i32 [ %.066, %20 ], [ %.066, %456 ], [ %.066, %454 ], [ %.066, %448 ], [ %.066, %447 ], [ %.066, %446 ], [ %.066, %445 ], [ %.066, %443 ], [ %.066, %442 ], [ %.066, %441 ], [ %.066, %440 ], [ %.066, %439 ], [ %438, %437 ], [ %.066, %436 ], [ %.066, %434 ], [ %.066, %430 ], [ %.066, %429 ], [ %.066, %428 ], [ %.066, %418 ], [ %.066, %408 ], [ %.066, %407 ], [ %.066, %396 ], [ %.066, %386 ], [ %.066, %385 ], [ %.066, %384 ], [ %.066, %369 ], [ %.066, %359 ], [ %.066, %355 ], [ %.066, %351 ], [ %.066, %349 ], [ %.066, %337 ], [ %.066, %327 ], [ %.066, %326 ], [ %.066, %324 ], [ %.066, %323 ], [ %.066, %313 ], [ %.066, %303 ], [ %.066, %301 ], [ %.066, %300 ], [ %.066, %290 ], [ %.066, %280 ], [ %.066, %279 ], [ %.066, %268 ], [ %.066, %258 ], [ %.066, %257 ], [ %.066, %256 ], [ %.066, %246 ], [ %.066, %236 ], [ %.066, %235 ], [ %.066, %228 ], [ %.066, %214 ], [ %.066, %208 ], [ %.066, %202 ], [ %.066, %198 ], [ %.066, %197 ], [ %.066, %195 ], [ %.066, %183 ], [ %.066, %173 ], [ %.066, %172 ], [ %.066, %162 ], [ %.066, %152 ], [ %.066, %148 ], [ %.066, %147 ], [ %.066, %145 ], [ %.066, %134 ], [ %.066, %130 ], [ %.066, %129 ], [ %.066, %119 ], [ %.066, %109 ], [ %.066, %108 ], [ %98, %97 ], [ %.066, %87 ], [ %.066, %84 ], [ %.066, %82 ], [ %.066, %70 ], [ %.066, %60 ], [ 0, %59 ], [ %.066, %57 ], [ %.066, %56 ], [ %.066, %55 ], [ %.066, %44 ], [ %.066, %34 ], [ %.066, %30 ], [ %.066, %26 ], [ %.066, %25 ], [ %.066, %21 ]
  %.064.be = phi i32 [ %.064, %20 ], [ %.064, %456 ], [ %.064, %454 ], [ %.064, %448 ], [ %.064, %447 ], [ %.064, %446 ], [ %.064, %445 ], [ %.064, %443 ], [ %.064, %442 ], [ %.064, %441 ], [ %.064, %440 ], [ 0, %439 ], [ %.064, %437 ], [ %.064, %436 ], [ %.064, %434 ], [ %.064, %430 ], [ %.064, %429 ], [ %.064, %428 ], [ %.064, %418 ], [ %.064, %408 ], [ %.064, %407 ], [ %.064, %396 ], [ %.064, %386 ], [ %.064, %385 ], [ %.064, %384 ], [ %.064, %369 ], [ %.064, %359 ], [ %.064, %355 ], [ %.064, %351 ], [ %.064, %349 ], [ %.064, %337 ], [ %.064, %327 ], [ %.064, %326 ], [ %.064, %324 ], [ %.064, %323 ], [ %.064, %313 ], [ %.064, %303 ], [ %.064, %301 ], [ %.064, %300 ], [ %.064, %290 ], [ %.064, %280 ], [ %.064, %279 ], [ %.064, %268 ], [ %.064, %258 ], [ %.064, %257 ], [ %.064, %256 ], [ %.064, %246 ], [ %.064, %236 ], [ %.064, %235 ], [ %.064, %228 ], [ %.064, %214 ], [ %.064, %208 ], [ %.064, %202 ], [ %.064, %198 ], [ %.064, %197 ], [ %.064, %195 ], [ %.064, %183 ], [ %.064, %173 ], [ %.064, %172 ], [ %.064, %162 ], [ %.064, %152 ], [ %.064, %148 ], [ %.064, %147 ], [ %146, %145 ], [ %.064, %134 ], [ %.064, %130 ], [ %.064, %129 ], [ 0, %119 ], [ %.064, %109 ], [ %.064, %108 ], [ %.064, %97 ], [ %.064, %87 ], [ %.064, %84 ], [ %.064, %82 ], [ %.064, %70 ], [ %.064, %60 ], [ %.064, %59 ], [ %.064, %57 ], [ %.064, %56 ], [ %.064, %55 ], [ %.064, %44 ], [ %.064, %34 ], [ %.064, %30 ], [ %.064, %26 ], [ %.064, %25 ], [ %.064, %21 ]
  %.062.be = phi i32 [ %.062, %20 ], [ %.062, %456 ], [ %.062, %454 ], [ %.062, %448 ], [ %.062, %447 ], [ %.062, %446 ], [ %.062, %445 ], [ %.062, %443 ], [ %.062, %442 ], [ %.062, %441 ], [ %.062, %440 ], [ %.062, %439 ], [ %.062, %437 ], [ %.062, %436 ], [ %.062, %434 ], [ %.062, %430 ], [ %.062, %429 ], [ %.062, %428 ], [ %.062, %418 ], [ %.062, %408 ], [ %.062, %407 ], [ %.062, %396 ], [ %.062, %386 ], [ %.062, %385 ], [ %.062, %384 ], [ %.062, %369 ], [ %.062, %359 ], [ %.062, %355 ], [ %.062, %351 ], [ %.062, %349 ], [ %.062, %337 ], [ %.062, %327 ], [ %.062, %326 ], [ %325, %324 ], [ %.062, %323 ], [ %.062, %313 ], [ %.062, %303 ], [ %.062, %301 ], [ %.062, %300 ], [ %.062, %290 ], [ %.062, %280 ], [ %.062, %279 ], [ %.062, %268 ], [ %.062, %258 ], [ %.062, %257 ], [ %.062, %256 ], [ %.062, %246 ], [ %.062, %236 ], [ %.062, %235 ], [ %.062, %228 ], [ %.062, %214 ], [ %.062, %208 ], [ %.062, %202 ], [ %.062, %198 ], [ %.062, %197 ], [ %.062, %195 ], [ %.062, %183 ], [ %.062, %173 ], [ %.062, %172 ], [ %.062, %162 ], [ %.062, %152 ], [ %.062, %148 ], [ 0, %147 ], [ %.062, %145 ], [ %.062, %134 ], [ %.062, %130 ], [ %.062, %129 ], [ %.062, %119 ], [ %.062, %109 ], [ %.062, %108 ], [ %.062, %97 ], [ %.062, %87 ], [ %.062, %84 ], [ %.062, %82 ], [ %.062, %70 ], [ %.062, %60 ], [ %.062, %59 ], [ %.062, %57 ], [ %.062, %56 ], [ %.062, %55 ], [ %.062, %44 ], [ %.062, %34 ], [ %.062, %30 ], [ %.062, %26 ], [ %.062, %25 ], [ %.062, %21 ]
  %.060.be = phi i32 [ %.060, %20 ], [ %.060, %456 ], [ %.060, %454 ], [ %.060, %448 ], [ %.060, %447 ], [ %.060, %446 ], [ %.060, %445 ], [ %.060, %443 ], [ %.060, %442 ], [ %.060, %441 ], [ 0, %440 ], [ %.060, %439 ], [ %.060, %437 ], [ %.060, %436 ], [ %.060, %434 ], [ %.060, %430 ], [ %.060, %429 ], [ %.060, %428 ], [ %.060, %418 ], [ %.060, %408 ], [ %.060, %407 ], [ %.060, %396 ], [ %.060, %386 ], [ %.060, %385 ], [ %.060, %384 ], [ %.060, %369 ], [ %.060, %359 ], [ %.060, %355 ], [ %.060, %351 ], [ %.060, %349 ], [ %.060, %337 ], [ %.060, %327 ], [ %.060, %326 ], [ %.060, %324 ], [ %.060, %323 ], [ %.060, %313 ], [ %.060, %303 ], [ %302, %301 ], [ %.060, %300 ], [ %.060, %290 ], [ %.060, %280 ], [ %.060, %279 ], [ %.060, %268 ], [ %.060, %258 ], [ %.060, %257 ], [ %.060, %256 ], [ %.060, %246 ], [ %.060, %236 ], [ %.060, %235 ], [ %.060, %228 ], [ %.060, %214 ], [ %.060, %208 ], [ %.060, %202 ], [ %.060, %198 ], [ %.060, %197 ], [ %.060, %195 ], [ %.060, %183 ], [ %.060, %173 ], [ %.060, %172 ], [ 0, %162 ], [ %.060, %152 ], [ %.060, %148 ], [ %.060, %147 ], [ %.060, %145 ], [ %.060, %134 ], [ %.060, %130 ], [ %.060, %129 ], [ %.060, %119 ], [ %.060, %109 ], [ %.060, %108 ], [ %.060, %97 ], [ %.060, %87 ], [ %.060, %84 ], [ %.060, %82 ], [ %.060, %70 ], [ %.060, %60 ], [ %.060, %59 ], [ %.060, %57 ], [ %.060, %56 ], [ %.060, %55 ], [ %.060, %44 ], [ %.060, %34 ], [ %.060, %30 ], [ %.060, %26 ], [ %.060, %25 ], [ %.060, %21 ]
  %.058.be = phi i32 [ %.058, %20 ], [ %.058, %456 ], [ %.058, %454 ], [ %.058, %448 ], [ %.058, %447 ], [ %.058, %446 ], [ %.058, %445 ], [ %444, %443 ], [ %.058, %442 ], [ %.058, %441 ], [ %.058, %440 ], [ %.058, %439 ], [ %.058, %437 ], [ %.058, %436 ], [ %.058, %434 ], [ %.058, %430 ], [ %.058, %429 ], [ %.058, %428 ], [ %.058, %418 ], [ %.058, %408 ], [ %.058, %407 ], [ %.058, %396 ], [ %.058, %386 ], [ %.058, %385 ], [ %.058, %384 ], [ %.058, %369 ], [ %.058, %359 ], [ %.058, %355 ], [ %.058, %351 ], [ %.058, %349 ], [ %.058, %337 ], [ %.058, %327 ], [ %.058, %326 ], [ %.058, %324 ], [ %.058, %323 ], [ %.058, %313 ], [ %.058, %303 ], [ %.058, %301 ], [ %.058, %300 ], [ %.058, %290 ], [ %.058, %280 ], [ %.058, %279 ], [ %269, %268 ], [ %.058, %258 ], [ %.058, %257 ], [ %.058, %256 ], [ %.058, %246 ], [ %.058, %236 ], [ %.058, %235 ], [ %.058, %228 ], [ %.058, %214 ], [ %.058, %208 ], [ %.058, %202 ], [ %.058, %198 ], [ 0, %197 ], [ %.058, %195 ], [ %.058, %183 ], [ %.058, %173 ], [ %.058, %172 ], [ %.058, %162 ], [ %.058, %152 ], [ %.058, %148 ], [ %.058, %147 ], [ %.058, %145 ], [ %.058, %134 ], [ %.058, %130 ], [ %.058, %129 ], [ %.058, %119 ], [ %.058, %109 ], [ %.058, %108 ], [ %.058, %97 ], [ %.058, %87 ], [ %.058, %84 ], [ %.058, %82 ], [ %.058, %70 ], [ %.058, %60 ], [ %.058, %59 ], [ %.058, %57 ], [ %.058, %56 ], [ %.058, %55 ], [ %.058, %44 ], [ %.058, %34 ], [ %.058, %30 ], [ %.058, %26 ], [ %.058, %25 ], [ %.058, %21 ]
  %.056.be = phi i32 [ %.056, %20 ], [ %.neg, %456 ], [ %.056, %454 ], [ %.056, %448 ], [ %.056, %447 ], [ %.056, %446 ], [ %.056, %445 ], [ %.056, %443 ], [ %.056, %442 ], [ %.056, %441 ], [ %.056, %440 ], [ %.056, %439 ], [ %.056, %437 ], [ %.056, %436 ], [ %.056, %434 ], [ %.056, %430 ], [ %.056, %429 ], [ %.056, %428 ], [ %.neg74, %418 ], [ %.056, %408 ], [ %.056, %407 ], [ %.056, %396 ], [ %.056, %386 ], [ %.056, %385 ], [ %.056, %384 ], [ %.056, %369 ], [ %.056, %359 ], [ %.056, %355 ], [ %.056, %351 ], [ %.056, %349 ], [ %.056, %337 ], [ %.056, %327 ], [ 0, %326 ], [ %.056, %324 ], [ %.056, %323 ], [ %.056, %313 ], [ %.056, %303 ], [ %.056, %301 ], [ %.056, %300 ], [ %.056, %290 ], [ %.056, %280 ], [ %.056, %279 ], [ %.056, %268 ], [ %.056, %258 ], [ %.056, %257 ], [ %.056, %256 ], [ %.056, %246 ], [ %.056, %236 ], [ %.056, %235 ], [ %.056, %228 ], [ %.056, %214 ], [ %.056, %208 ], [ %.056, %202 ], [ %.056, %198 ], [ %.056, %197 ], [ %.056, %195 ], [ %.056, %183 ], [ %.056, %173 ], [ %.056, %172 ], [ %.056, %162 ], [ %.056, %152 ], [ %.056, %148 ], [ %.056, %147 ], [ %.056, %145 ], [ %.056, %134 ], [ %.056, %130 ], [ %.056, %129 ], [ %.056, %119 ], [ %.056, %109 ], [ %.056, %108 ], [ %.056, %97 ], [ %.056, %87 ], [ %.056, %84 ], [ %.056, %82 ], [ %.056, %70 ], [ %.056, %60 ], [ %.056, %59 ], [ %.056, %57 ], [ %.056, %56 ], [ %.056, %55 ], [ %.056, %44 ], [ %.056, %34 ], [ %.056, %30 ], [ %.056, %26 ], [ %.056, %25 ], [ %.056, %21 ]
  %.054.be = phi i32 [ %.054, %20 ], [ %.054, %456 ], [ %.054, %454 ], [ %.054, %448 ], [ %.054, %447 ], [ %.054, %446 ], [ %.054, %445 ], [ %.054, %443 ], [ %.054, %442 ], [ %.054, %441 ], [ %.054, %440 ], [ %.054, %439 ], [ %.054, %437 ], [ %.054, %436 ], [ %.054, %434 ], [ %.054, %430 ], [ %.054, %429 ], [ %.054, %428 ], [ %.054, %418 ], [ %.054, %408 ], [ %.054, %407 ], [ %.054, %396 ], [ %.054, %386 ], [ %.neg75, %385 ], [ %.054, %384 ], [ %.054, %369 ], [ %.054, %359 ], [ %.054, %355 ], [ 1, %351 ], [ %.054, %349 ], [ %.054, %337 ], [ %.054, %327 ], [ %.054, %326 ], [ %.054, %324 ], [ %.054, %323 ], [ %.054, %313 ], [ %.054, %303 ], [ %.054, %301 ], [ %.054, %300 ], [ %.054, %290 ], [ %.054, %280 ], [ %.054, %279 ], [ %.054, %268 ], [ %.054, %258 ], [ %.054, %257 ], [ %.054, %256 ], [ %.054, %246 ], [ %.054, %236 ], [ %.054, %235 ], [ %.054, %228 ], [ %.054, %214 ], [ %.054, %208 ], [ %.054, %202 ], [ %.054, %198 ], [ %.054, %197 ], [ %.054, %195 ], [ %.054, %183 ], [ %.054, %173 ], [ %.054, %172 ], [ %.054, %162 ], [ %.054, %152 ], [ %.054, %148 ], [ %.054, %147 ], [ %.054, %145 ], [ %.054, %134 ], [ %.054, %130 ], [ %.054, %129 ], [ %.054, %119 ], [ %.054, %109 ], [ %.054, %108 ], [ %.054, %97 ], [ %.054, %87 ], [ %.054, %84 ], [ %.054, %82 ], [ %.054, %70 ], [ %.054, %60 ], [ %.054, %59 ], [ %.054, %57 ], [ %.054, %56 ], [ %.054, %55 ], [ %.054, %44 ], [ %.054, %34 ], [ %.054, %30 ], [ %.054, %26 ], [ %.054, %25 ], [ %.054, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 940726063, %456 ], [ 166442368, %454 ], [ -223304979, %448 ], [ 130630178, %447 ], [ 282704451, %446 ], [ 1197834162, %445 ], [ -772539063, %443 ], [ -1933887304, %442 ], [ -757727158, %441 ], [ -1881846969, %440 ], [ 76324740, %439 ], [ -1574064744, %437 ], [ -494779412, %436 ], [ 489484147, %434 ], [ -1215214038, %430 ], [ -1215214038, %429 ], [ -2102484215, %428 ], [ %427, %418 ], [ %417, %408 ], [ 2109306972, %407 ], [ %406, %396 ], [ %395, %386 ], [ -828534603, %385 ], [ -1352663860, %384 ], [ %383, %369 ], [ %368, %359 ], [ %358, %355 ], [ -828534603, %351 ], [ %350, %349 ], [ %348, %337 ], [ %336, %327 ], [ -2102484215, %326 ], [ -903180486, %324 ], [ -63739777, %323 ], [ %322, %313 ], [ %312, %303 ], [ -1776691847, %301 ], [ -361488859, %300 ], [ %299, %290 ], [ %289, %280 ], [ 1650816959, %279 ], [ %278, %268 ], [ %267, %258 ], [ 1542155049, %257 ], [ 1707894020, %256 ], [ %255, %246 ], [ %245, %236 ], [ 824934782, %235 ], [ %234, %228 ], [ %227, %214 ], [ %213, %208 ], [ %207, %202 ], [ %201, %198 ], [ 1650816959, %197 ], [ %196, %195 ], [ %194, %183 ], [ %182, %173 ], [ -1776691847, %172 ], [ %171, %162 ], [ %161, %152 ], [ %151, %148 ], [ -903180486, %147 ], [ 580734693, %145 ], [ 2119667733, %134 ], [ %133, %130 ], [ 580734693, %129 ], [ %128, %119 ], [ %118, %109 ], [ 1054472642, %108 ], [ %107, %97 ], [ %96, %87 ], [ 469115444, %84 ], [ %83, %82 ], [ %81, %70 ], [ %69, %60 ], [ 1054472642, %59 ], [ 256448085, %57 ], [ -229604788, %56 ], [ 390982368, %55 ], [ %54, %44 ], [ %43, %34 ], [ 308661812, %30 ], [ %29, %26 ], [ 390982368, %25 ], [ %24, %21 ]
  br label %20

21:                                               ; preds = %20
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %.070, %22
  %24 = select i1 %23, i32 -403365880, i32 -964653619
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  %27 = load i32, i32* %4, align 4
  %28 = icmp slt i32 %.068, %27
  %29 = select i1 %28, i32 1118382509, i32 -950177046
  br label %.backedge

30:                                               ; preds = %20
  %31 = sext i32 %.070 to i64
  %32 = sext i32 %.068 to i64
  %33 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %31, i64 %32
  store i64 9223372036854775807, i64* %33, align 8
  br label %.backedge

34:                                               ; preds = %20
  %35 = load i32, i32* @x.2, align 4
  %36 = load i32, i32* @y.3, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 489484147, i32 -795178548
  br label %.backedge

44:                                               ; preds = %20
  %45 = add i32 %.068, 1
  %46 = load i32, i32* @x.2, align 4
  %47 = load i32, i32* @y.3, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 2047808719, i32 -795178548
  br label %.backedge

55:                                               ; preds = %20
  br label %.backedge

56:                                               ; preds = %20
  br label %.backedge

57:                                               ; preds = %20
  %58 = add i32 %.070, 1
  br label %.backedge

59:                                               ; preds = %20
  br label %.backedge

60:                                               ; preds = %20
  %61 = load i32, i32* @x.2, align 4
  %62 = load i32, i32* @y.3, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 -494779412, i32 -1781920754
  br label %.backedge

70:                                               ; preds = %20
  %71 = load i32, i32* %4, align 4
  %72 = icmp slt i32 %.066, %71
  store i1 %72, i1* %3, align 1
  %73 = load i32, i32* @x.2, align 4
  %74 = load i32, i32* @y.3, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -1641641504, i32 -1781920754
  br label %.backedge

82:                                               ; preds = %20
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %83 = select i1 %.0..0..0., i32 -1466504079, i32 516058660
  br label %.backedge

84:                                               ; preds = %20
  %85 = sext i32 %.066 to i64
  %86 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %85, i64 %85
  store i64 0, i64* %86, align 8
  br label %.backedge

87:                                               ; preds = %20
  %88 = load i32, i32* @x.2, align 4
  %89 = load i32, i32* @y.3, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -1574064744, i32 -1434148349
  br label %.backedge

97:                                               ; preds = %20
  %98 = add i32 %.066, 1
  %99 = load i32, i32* @x.2, align 4
  %100 = load i32, i32* @y.3, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 1486877960, i32 -1434148349
  br label %.backedge

108:                                              ; preds = %20
  br label %.backedge

109:                                              ; preds = %20
  %110 = load i32, i32* @x.2, align 4
  %111 = load i32, i32* @y.3, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 76324740, i32 1342422044
  br label %.backedge

119:                                              ; preds = %20
  %120 = load i32, i32* @x.2, align 4
  %121 = load i32, i32* @y.3, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 1237328803, i32 1342422044
  br label %.backedge

129:                                              ; preds = %20
  br label %.backedge

130:                                              ; preds = %20
  %131 = load i32, i32* %5, align 4
  %132 = icmp slt i32 %.064, %131
  %133 = select i1 %132, i32 -685724880, i32 774366684
  br label %.backedge

134:                                              ; preds = %20
  %135 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %136 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %135, i32* nonnull dereferenceable(4) %7)
  %137 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %136, i32* nonnull dereferenceable(4) %8)
  %138 = load i32, i32* %8, align 4
  %139 = sext i32 %138 to i64
  %140 = load i32, i32* %6, align 4
  %141 = sext i32 %140 to i64
  %142 = load i32, i32* %7, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %141, i64 %143
  store i64 %139, i64* %144, align 8
  br label %.backedge

145:                                              ; preds = %20
  %146 = add i32 %.064, 1
  br label %.backedge

147:                                              ; preds = %20
  br label %.backedge

148:                                              ; preds = %20
  %149 = load i32, i32* %4, align 4
  %150 = icmp slt i32 %.062, %149
  %151 = select i1 %150, i32 -1704956111, i32 1414986033
  br label %.backedge

152:                                              ; preds = %20
  %153 = load i32, i32* @x.2, align 4
  %154 = load i32, i32* @y.3, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 -1881846969, i32 -1649123606
  br label %.backedge

162:                                              ; preds = %20
  %163 = load i32, i32* @x.2, align 4
  %164 = load i32, i32* @y.3, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -646859587, i32 -1649123606
  br label %.backedge

172:                                              ; preds = %20
  br label %.backedge

173:                                              ; preds = %20
  %174 = load i32, i32* @x.2, align 4
  %175 = load i32, i32* @y.3, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 -757727158, i32 -1633113916
  br label %.backedge

183:                                              ; preds = %20
  %184 = load i32, i32* %4, align 4
  %185 = icmp slt i32 %.060, %184
  store i1 %185, i1* %2, align 1
  %186 = load i32, i32* @x.2, align 4
  %187 = load i32, i32* @y.3, align 4
  %188 = add i32 %186, -1
  %189 = mul i32 %188, %186
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %192, %191
  %194 = select i1 %193, i32 1352940605, i32 -1633113916
  br label %.backedge

195:                                              ; preds = %20
  %.0..0..0.52 = load volatile i1, i1* %2, align 1
  %196 = select i1 %.0..0..0.52, i32 1547651005, i32 -1722089511
  br label %.backedge

197:                                              ; preds = %20
  br label %.backedge

198:                                              ; preds = %20
  %199 = load i32, i32* %4, align 4
  %200 = icmp slt i32 %.058, %199
  %201 = select i1 %200, i32 2087057147, i32 2086053937
  br label %.backedge

202:                                              ; preds = %20
  %203 = sext i32 %.060 to i64
  %204 = sext i32 %.062 to i64
  %205 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %203, i64 %204
  %206 = load i64, i64* %205, align 8
  %.not76 = icmp eq i64 %206, 9223372036854775807
  %207 = select i1 %.not76, i32 1707894020, i32 1824960390
  br label %.backedge

208:                                              ; preds = %20
  %209 = sext i32 %.062 to i64
  %210 = sext i32 %.058 to i64
  %211 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %209, i64 %210
  %212 = load i64, i64* %211, align 8
  %.not = icmp eq i64 %212, 9223372036854775807
  %213 = select i1 %.not, i32 1707894020, i32 1893619183
  br label %.backedge

214:                                              ; preds = %20
  %215 = sext i32 %.060 to i64
  %216 = sext i32 %.058 to i64
  %217 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %215, i64 %216
  %218 = sext i32 %.062 to i64
  %219 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %215, i64 %218
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %218, i64 %216
  %222 = load i64, i64* %221, align 8
  %223 = add i64 %222, %220
  store i64 %223, i64* %9, align 8
  %224 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %217, i64* nonnull dereferenceable(8) %9)
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %217, align 8
  %226 = icmp eq i32 %.060, %.058
  %227 = select i1 %226, i32 326523711, i32 2029590619
  br label %.backedge

228:                                              ; preds = %20
  %229 = sext i32 %.060 to i64
  %230 = sext i32 %.058 to i64
  %231 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %229, i64 %230
  %232 = load i64, i64* %231, align 8
  %233 = icmp slt i64 %232, 0
  %234 = select i1 %233, i32 1727699001, i32 2029590619
  br label %.backedge

235:                                              ; preds = %20
  br label %.backedge

236:                                              ; preds = %20
  %237 = load i32, i32* @x.2, align 4
  %238 = load i32, i32* @y.3, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -1933887304, i32 -892049850
  br label %.backedge

246:                                              ; preds = %20
  %247 = load i32, i32* @x.2, align 4
  %248 = load i32, i32* @y.3, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 937024422, i32 -892049850
  br label %.backedge

256:                                              ; preds = %20
  br label %.backedge

257:                                              ; preds = %20
  br label %.backedge

258:                                              ; preds = %20
  %259 = load i32, i32* @x.2, align 4
  %260 = load i32, i32* @y.3, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 -772539063, i32 2035692034
  br label %.backedge

268:                                              ; preds = %20
  %269 = add i32 %.058, 1
  %270 = load i32, i32* @x.2, align 4
  %271 = load i32, i32* @y.3, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 -2058630592, i32 2035692034
  br label %.backedge

279:                                              ; preds = %20
  br label %.backedge

280:                                              ; preds = %20
  %281 = load i32, i32* @x.2, align 4
  %282 = load i32, i32* @y.3, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 1197834162, i32 1841417680
  br label %.backedge

290:                                              ; preds = %20
  %291 = load i32, i32* @x.2, align 4
  %292 = load i32, i32* @y.3, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 -1257274157, i32 1841417680
  br label %.backedge

300:                                              ; preds = %20
  br label %.backedge

301:                                              ; preds = %20
  %302 = add i32 %.060, 1
  br label %.backedge

303:                                              ; preds = %20
  %304 = load i32, i32* @x.2, align 4
  %305 = load i32, i32* @y.3, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 282704451, i32 650361947
  br label %.backedge

313:                                              ; preds = %20
  %314 = load i32, i32* @x.2, align 4
  %315 = load i32, i32* @y.3, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 1585709425, i32 650361947
  br label %.backedge

323:                                              ; preds = %20
  br label %.backedge

324:                                              ; preds = %20
  %325 = add i32 %.062, 1
  br label %.backedge

326:                                              ; preds = %20
  br label %.backedge

327:                                              ; preds = %20
  %328 = load i32, i32* @x.2, align 4
  %329 = load i32, i32* @y.3, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 130630178, i32 1292015361
  br label %.backedge

337:                                              ; preds = %20
  %338 = load i32, i32* %4, align 4
  %339 = icmp slt i32 %.056, %338
  store i1 %339, i1* %1, align 1
  %340 = load i32, i32* @x.2, align 4
  %341 = load i32, i32* @y.3, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 -427275196, i32 1292015361
  br label %.backedge

349:                                              ; preds = %20
  %.0..0..0.53 = load volatile i1, i1* %1, align 1
  %350 = select i1 %.0..0..0.53, i32 1647062108, i32 511921422
  br label %.backedge

351:                                              ; preds = %20
  %352 = sext i32 %.056 to i64
  %353 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %352, i64 0
  %354 = load i64, i64* %353, align 16
  call fastcc void @"_ZZ4mainENK3$_0clEx"(i64 %354)
  br label %.backedge

355:                                              ; preds = %20
  %356 = load i32, i32* %4, align 4
  %357 = icmp slt i32 %.054, %356
  %358 = select i1 %357, i32 1965506870, i32 568980749
  br label %.backedge

359:                                              ; preds = %20
  %360 = load i32, i32* @x.2, align 4
  %361 = load i32, i32* @y.3, align 4
  %362 = add i32 %360, -1
  %363 = mul i32 %362, %360
  %364 = and i32 %363, 1
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %366, %365
  %368 = select i1 %367, i32 -223304979, i32 -1008711569
  br label %.backedge

369:                                              ; preds = %20
  %370 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %371 = sext i32 %.056 to i64
  %372 = sext i32 %.054 to i64
  %373 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %371, i64 %372
  %374 = load i64, i64* %373, align 8
  call fastcc void @"_ZZ4mainENK3$_0clEx"(i64 %374)
  %375 = load i32, i32* @x.2, align 4
  %376 = load i32, i32* @y.3, align 4
  %377 = add i32 %375, -1
  %378 = mul i32 %377, %375
  %379 = and i32 %378, 1
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %381, %380
  %383 = select i1 %382, i32 551296077, i32 -1008711569
  br label %.backedge

384:                                              ; preds = %20
  br label %.backedge

385:                                              ; preds = %20
  %.neg75 = add i32 %.054, 1
  br label %.backedge

386:                                              ; preds = %20
  %387 = load i32, i32* @x.2, align 4
  %388 = load i32, i32* @y.3, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 166442368, i32 -428054738
  br label %.backedge

396:                                              ; preds = %20
  %397 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 10)
  %398 = load i32, i32* @x.2, align 4
  %399 = load i32, i32* @y.3, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 -2128845824, i32 -428054738
  br label %.backedge

407:                                              ; preds = %20
  br label %.backedge

408:                                              ; preds = %20
  %409 = load i32, i32* @x.2, align 4
  %410 = load i32, i32* @y.3, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 940726063, i32 843904781
  br label %.backedge

418:                                              ; preds = %20
  %.neg74 = add i32 %.056, 1
  %419 = load i32, i32* @x.2, align 4
  %420 = load i32, i32* @y.3, align 4
  %421 = add i32 %419, -1
  %422 = mul i32 %421, %419
  %423 = and i32 %422, 1
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %425, %424
  %427 = select i1 %426, i32 1023698810, i32 843904781
  br label %.backedge

428:                                              ; preds = %20
  br label %.backedge

429:                                              ; preds = %20
  br label %.backedge

430:                                              ; preds = %20
  %431 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %432 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %431, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

433:                                              ; preds = %20
  ret i32 0

434:                                              ; preds = %20
  %435 = add i32 %.068, 1
  br label %.backedge

436:                                              ; preds = %20
  br label %.backedge

437:                                              ; preds = %20
  %438 = add i32 %.066, 1
  br label %.backedge

439:                                              ; preds = %20
  br label %.backedge

440:                                              ; preds = %20
  br label %.backedge

441:                                              ; preds = %20
  br label %.backedge

442:                                              ; preds = %20
  br label %.backedge

443:                                              ; preds = %20
  %444 = add i32 %.058, 1
  br label %.backedge

445:                                              ; preds = %20
  br label %.backedge

446:                                              ; preds = %20
  br label %.backedge

447:                                              ; preds = %20
  br label %.backedge

448:                                              ; preds = %20
  %449 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  %450 = sext i32 %.056 to i64
  %451 = sext i32 %.054 to i64
  %452 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dist, i64 0, i64 %450, i64 %451
  %453 = load i64, i64* %452, align 8
  call fastcc void @"_ZZ4mainENK3$_0clEx"(i64 %453)
  br label %.backedge

454:                                              ; preds = %20
  %455 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 10)
  br label %.backedge

456:                                              ; preds = %20
  %.neg = add i32 %.056, 1
  br label %.backedge
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i64**, align 8
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.4, align 4
  %10 = load i32, i32* @y.5, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ -1484102830, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %16

16:                                               ; preds = %.outer, %16
  switch i32 %.0.ph, label %16 [
    i32 -1484102830, label %17
    i32 -487403156, label %20
    i32 -406196986, label %38
    i32 1255465559, label %40
    i32 -398064541, label %42
    i32 -995488877, label %44
    i32 -2147218924, label %.outer.backedge
  ]

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 -487403156, i32 -2147218924
  br label %.outer.backedge

20:                                               ; preds = %16
  %21 = alloca i64*, align 8
  store i64** %21, i64*** %6, align 8
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %5, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %4, align 8
  %.0..0..0.5 = load volatile i64**, i64*** %5, align 8
  store i64* %0, i64** %.0..0..0.5, align 8
  %.0..0..0.8 = load volatile i64**, i64*** %4, align 8
  store i64* %1, i64** %.0..0..0.8, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %4, align 8
  %24 = load i64*, i64** %.0..0..0.9, align 8
  %25 = load i64, i64* %24, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %5, align 8
  %26 = load i64*, i64** %.0..0..0.6, align 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.4, align 4
  %30 = load i32, i32* @y.5, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -406196986, i32 -2147218924
  br label %.outer.backedge

38:                                               ; preds = %16
  %.0..0..0.11 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.11, i32 1255465559, i32 -398064541
  br label %.outer.backedge

40:                                               ; preds = %16
  %.0..0..0.10 = load volatile i64**, i64*** %4, align 8
  %41 = load i64*, i64** %.0..0..0.10, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %6, align 8
  store i64* %41, i64** %.0..0..0.2, align 8
  br label %.outer.backedge

42:                                               ; preds = %16
  %.0..0..0.7 = load volatile i64**, i64*** %5, align 8
  %43 = load i64*, i64** %.0..0..0.7, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %6, align 8
  store i64* %43, i64** %.0..0..0.3, align 8
  br label %.outer.backedge

44:                                               ; preds = %16
  %.0..0..0.4 = load volatile i64**, i64*** %6, align 8
  %45 = load i64*, i64** %.0..0..0.4, align 8
  ret i64* %45

.outer.backedge:                                  ; preds = %16, %42, %40, %38, %20, %17
  %.0.ph.be = phi i32 [ %19, %17 ], [ %37, %20 ], [ %39, %38 ], [ -995488877, %40 ], [ -995488877, %42 ], [ -487403156, %16 ]
  br label %.outer
}

; Function Attrs: noinline norecurse uwtable
define internal fastcc void @"_ZZ4mainENK3$_0clEx"(i64 %0) unnamed_addr #4 align 2 {
  %2 = alloca i1, align 1
  %3 = alloca i64*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x.6, align 4
  %7 = load i32, i32* @y.7, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %5, align 1
  %12 = icmp slt i32 %7, 10
  store i1 %12, i1* %4, align 1
  br label %13

13:                                               ; preds = %.backedge, %1
  %.0 = phi i32 [ 356112229, %1 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 356112229, label %14
    i32 -2053393978, label %17
    i32 -347327174, label %30
    i32 1617332938, label %32
    i32 -1681291025, label %42
    i32 936360359, label %53
    i32 1808314282, label %54
    i32 1230524246, label %64
    i32 519072149, label %76
    i32 812189578, label %77
    i32 -1902634090, label %78
    i32 -299218362, label %79
    i32 1110960164, label %81
  ]

.backedge:                                        ; preds = %13, %81, %79, %78, %76, %64, %54, %53, %42, %32, %30, %17, %14
  %.0.be = phi i32 [ %.0, %13 ], [ 1230524246, %81 ], [ -1681291025, %79 ], [ -2053393978, %78 ], [ 812189578, %76 ], [ %75, %64 ], [ %63, %54 ], [ 812189578, %53 ], [ %52, %42 ], [ %41, %32 ], [ %31, %30 ], [ %29, %17 ], [ %16, %14 ]
  br label %13

14:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %.0..0..0.1 = load volatile i1, i1* %4, align 1
  %15 = or i1 %.0..0..0., %.0..0..0.1
  %16 = select i1 %15, i32 -2053393978, i32 -1902634090
  br label %.backedge

17:                                               ; preds = %13
  %18 = alloca i64, align 8
  store i64* %18, i64** %3, align 8
  %.0..0..0.2 = load volatile i64*, i64** %3, align 8
  store i64 %0, i64* %.0..0..0.2, align 8
  %.0..0..0.3 = load volatile i64*, i64** %3, align 8
  %19 = load i64, i64* %.0..0..0.3, align 8
  %20 = icmp eq i64 %19, 9223372036854775807
  store i1 %20, i1* %2, align 1
  %21 = load i32, i32* @x.6, align 4
  %22 = load i32, i32* @y.7, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 -347327174, i32 -1902634090
  br label %.backedge

30:                                               ; preds = %13
  %.0..0..0.6 = load volatile i1, i1* %2, align 1
  %31 = select i1 %.0..0..0.6, i32 1617332938, i32 1808314282
  br label %.backedge

32:                                               ; preds = %13
  %33 = load i32, i32* @x.6, align 4
  %34 = load i32, i32* @y.7, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 -1681291025, i32 -299218362
  br label %.backedge

42:                                               ; preds = %13
  %43 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  %44 = load i32, i32* @x.6, align 4
  %45 = load i32, i32* @y.7, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 936360359, i32 -299218362
  br label %.backedge

53:                                               ; preds = %13
  br label %.backedge

54:                                               ; preds = %13
  %55 = load i32, i32* @x.6, align 4
  %56 = load i32, i32* @y.7, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 1230524246, i32 1110960164
  br label %.backedge

64:                                               ; preds = %13
  %.0..0..0.4 = load volatile i64*, i64** %3, align 8
  %65 = load i64, i64* %.0..0..0.4, align 8
  %66 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %65)
  %67 = load i32, i32* @x.6, align 4
  %68 = load i32, i32* @y.7, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 519072149, i32 1110960164
  br label %.backedge

76:                                               ; preds = %13
  br label %.backedge

77:                                               ; preds = %13
  ret void

78:                                               ; preds = %13
  br label %.backedge

79:                                               ; preds = %13
  %80 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

81:                                               ; preds = %13
  %.0..0..0.5 = load volatile i64*, i64** %3, align 8
  %82 = load i64, i64* %.0..0..0.5, align 8
  %83 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %82)
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s789616751.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.8, align 4
  %4 = load i32, i32* @y.9, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1118683872, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1118683872, label %11
    i32 -1718313784, label %14
    i32 2146136711, label %24
    i32 -442568805, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1718313784, i32 -442568805
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.8, align 4
  %16 = load i32, i32* @y.9, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 2146136711, i32 -442568805
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1718313784, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
