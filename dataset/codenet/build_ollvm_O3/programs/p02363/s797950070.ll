; ModuleID = 'build_ollvm/programs/p02363/s797950070.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s797950070.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt4fillIPxxEvT_S1_RKT0_ = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

@v = global i32 0, align 4
@e = global i32 0, align 4
@d = global [100 x [100 x i64]] zeroinitializer, align 16
@.str = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@_ZL3INF = internal constant i64 10000000000, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0
@x.15 = common local_unnamed_addr global i32 0
@y.16 = common local_unnamed_addr global i32 0
@str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @v, i32* nonnull @e)
  tail call void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* getelementptr inbounds ([100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 0, i64 0), i64* getelementptr inbounds ([100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 1, i64 0, i64 0), i64* nonnull dereferenceable(8) @_ZL3INF)
  br label %12

12:                                               ; preds = %.backedge, %0
  %.074 = phi i32 [ 0, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i8 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.0 = phi i32 [ 561513453, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 561513453, label %13
    i32 197537190, label %23
    i32 -49542363, label %35
    i32 -1400514472, label %37
    i32 -1379929064, label %47
    i32 -1207119065, label %59
    i32 -926263400, label %60
    i32 -1591898434, label %61
    i32 599897819, label %71
    i32 500192004, label %81
    i32 2132447861, label %82
    i32 -452114688, label %86
    i32 1951281907, label %95
    i32 1543602025, label %97
    i32 917996576, label %98
    i32 515279690, label %102
    i32 1054203185, label %103
    i32 -1845080385, label %113
    i32 -912144402, label %125
    i32 -535030629, label %127
    i32 -1743010177, label %137
    i32 -812286416, label %147
    i32 -1262269698, label %148
    i32 -950955567, label %152
    i32 -308392551, label %158
    i32 337239589, label %168
    i32 580812657, label %183
    i32 -156981190, label %185
    i32 -1989141051, label %197
    i32 -862752974, label %198
    i32 488518460, label %199
    i32 -1457088626, label %200
    i32 1759866828, label %202
    i32 1594747833, label %212
    i32 961142232, label %222
    i32 -2011513450, label %223
    i32 -515965376, label %233
    i32 -1307181859, label %244
    i32 -1866435846, label %245
    i32 -1587222798, label %246
    i32 1898974775, label %250
    i32 -240817648, label %260
    i32 1129181625, label %274
    i32 862635315, label %276
    i32 1099374753, label %277
    i32 -1468004231, label %278
    i32 250131106, label %280
    i32 1781558992, label %283
    i32 2077916393, label %284
    i32 -733128579, label %285
    i32 1192629399, label %295
    i32 -402017190, label %307
    i32 1083322415, label %309
    i32 -234125341, label %310
    i32 -480240993, label %320
    i32 545761705, label %332
    i32 -1355378594, label %334
    i32 1090902153, label %336
    i32 1561153522, label %346
    i32 -92813354, label %356
    i32 567141939, label %357
    i32 -1490275628, label %364
    i32 1070584769, label %366
    i32 -589066476, label %376
    i32 -1066417050, label %391
    i32 -218937527, label %392
    i32 1790958544, label %393
    i32 759170922, label %395
    i32 -2107157780, label %405
    i32 -2121712333, label %415
    i32 -468654698, label %416
    i32 -387565439, label %426
    i32 1614709003, label %436
    i32 -1119926961, label %437
    i32 829724768, label %438
    i32 177360518, label %439
    i32 499007799, label %440
    i32 -1334702478, label %443
    i32 1119461090, label %444
    i32 -1090261639, label %445
    i32 -1988814075, label %446
    i32 2008754433, label %447
    i32 -157440910, label %448
    i32 1340733002, label %450
    i32 1515050075, label %451
    i32 -1996006677, label %452
    i32 -1468143016, label %453
    i32 183576955, label %454
    i32 41973891, label %460
    i32 494321554, label %461
  ]

.backedge:                                        ; preds = %12, %461, %460, %454, %453, %452, %451, %450, %448, %447, %446, %445, %444, %443, %440, %439, %437, %436, %426, %416, %415, %405, %395, %393, %392, %391, %376, %366, %364, %357, %356, %346, %336, %334, %332, %320, %310, %309, %307, %295, %285, %284, %283, %280, %278, %277, %276, %274, %260, %250, %246, %245, %244, %233, %223, %222, %212, %202, %200, %199, %198, %197, %185, %183, %168, %158, %152, %148, %147, %137, %127, %125, %113, %103, %102, %98, %97, %95, %86, %82, %81, %71, %61, %60, %59, %47, %37, %35, %23, %13
  %.074.be = phi i32 [ %.074, %12 ], [ %.074, %461 ], [ %.074, %460 ], [ %.074, %454 ], [ %.074, %453 ], [ %.074, %452 ], [ %.074, %451 ], [ %.074, %450 ], [ %.074, %448 ], [ %.074, %447 ], [ %.074, %446 ], [ %.074, %445 ], [ %.074, %444 ], [ %.074, %443 ], [ %.074, %440 ], [ %.074, %439 ], [ %.074, %437 ], [ %.074, %436 ], [ %.074, %426 ], [ %.074, %416 ], [ %.074, %415 ], [ %.074, %405 ], [ %.074, %395 ], [ %.074, %393 ], [ %.074, %392 ], [ %.074, %391 ], [ %.074, %376 ], [ %.074, %366 ], [ %.074, %364 ], [ %.074, %357 ], [ %.074, %356 ], [ %.074, %346 ], [ %.074, %336 ], [ %.074, %334 ], [ %.074, %332 ], [ %.074, %320 ], [ %.074, %310 ], [ %.074, %309 ], [ %.074, %307 ], [ %.074, %295 ], [ %.074, %285 ], [ %.074, %284 ], [ %.074, %283 ], [ %.074, %280 ], [ %.074, %278 ], [ %.074, %277 ], [ %.074, %276 ], [ %.074, %274 ], [ %.074, %260 ], [ %.074, %250 ], [ %.074, %246 ], [ %.074, %245 ], [ %.074, %244 ], [ %.074, %233 ], [ %.074, %223 ], [ %.074, %222 ], [ %.074, %212 ], [ %.074, %202 ], [ %.074, %200 ], [ %.074, %199 ], [ %.074, %198 ], [ %.074, %197 ], [ %.074, %185 ], [ %.074, %183 ], [ %.074, %168 ], [ %.074, %158 ], [ %.074, %152 ], [ %.074, %148 ], [ %.074, %147 ], [ %.074, %137 ], [ %.074, %127 ], [ %.074, %125 ], [ %.074, %113 ], [ %.074, %103 ], [ %.074, %102 ], [ %.074, %98 ], [ %.074, %97 ], [ %.074, %95 ], [ %.074, %86 ], [ %.074, %82 ], [ %.074, %81 ], [ %.074, %71 ], [ %.074, %61 ], [ %.neg83, %60 ], [ %.074, %59 ], [ %.074, %47 ], [ %.074, %37 ], [ %.074, %35 ], [ %.074, %23 ], [ %.074, %13 ]
  %.072.be = phi i32 [ %.072, %12 ], [ %.072, %461 ], [ %.072, %460 ], [ %.072, %454 ], [ %.072, %453 ], [ %.072, %452 ], [ %.072, %451 ], [ %.072, %450 ], [ %.072, %448 ], [ %.072, %447 ], [ %.072, %446 ], [ %.072, %445 ], [ %.072, %444 ], [ 0, %443 ], [ %.072, %440 ], [ %.072, %439 ], [ %.072, %437 ], [ %.072, %436 ], [ %.072, %426 ], [ %.072, %416 ], [ %.072, %415 ], [ %.072, %405 ], [ %.072, %395 ], [ %.072, %393 ], [ %.072, %392 ], [ %.072, %391 ], [ %.072, %376 ], [ %.072, %366 ], [ %.072, %364 ], [ %.072, %357 ], [ %.072, %356 ], [ %.072, %346 ], [ %.072, %336 ], [ %.072, %334 ], [ %.072, %332 ], [ %.072, %320 ], [ %.072, %310 ], [ %.072, %309 ], [ %.072, %307 ], [ %.072, %295 ], [ %.072, %285 ], [ %.072, %284 ], [ %.072, %283 ], [ %.072, %280 ], [ %.072, %278 ], [ %.072, %277 ], [ %.072, %276 ], [ %.072, %274 ], [ %.072, %260 ], [ %.072, %250 ], [ %.072, %246 ], [ %.072, %245 ], [ %.072, %244 ], [ %.072, %233 ], [ %.072, %223 ], [ %.072, %222 ], [ %.072, %212 ], [ %.072, %202 ], [ %.072, %200 ], [ %.072, %199 ], [ %.072, %198 ], [ %.072, %197 ], [ %.072, %185 ], [ %.072, %183 ], [ %.072, %168 ], [ %.072, %158 ], [ %.072, %152 ], [ %.072, %148 ], [ %.072, %147 ], [ %.072, %137 ], [ %.072, %127 ], [ %.072, %125 ], [ %.072, %113 ], [ %.072, %103 ], [ %.072, %102 ], [ %.072, %98 ], [ %.072, %97 ], [ %96, %95 ], [ %.072, %86 ], [ %.072, %82 ], [ %.072, %81 ], [ 0, %71 ], [ %.072, %61 ], [ %.072, %60 ], [ %.072, %59 ], [ %.072, %47 ], [ %.072, %37 ], [ %.072, %35 ], [ %.072, %23 ], [ %.072, %13 ]
  %.070.be = phi i32 [ %.070, %12 ], [ %.070, %461 ], [ %.070, %460 ], [ %.070, %454 ], [ %.070, %453 ], [ %.070, %452 ], [ %.070, %451 ], [ %.070, %450 ], [ %449, %448 ], [ %.070, %447 ], [ %.070, %446 ], [ %.070, %445 ], [ %.070, %444 ], [ %.070, %443 ], [ %.070, %440 ], [ %.070, %439 ], [ %.070, %437 ], [ %.070, %436 ], [ %.070, %426 ], [ %.070, %416 ], [ %.070, %415 ], [ %.070, %405 ], [ %.070, %395 ], [ %.070, %393 ], [ %.070, %392 ], [ %.070, %391 ], [ %.070, %376 ], [ %.070, %366 ], [ %.070, %364 ], [ %.070, %357 ], [ %.070, %356 ], [ %.070, %346 ], [ %.070, %336 ], [ %.070, %334 ], [ %.070, %332 ], [ %.070, %320 ], [ %.070, %310 ], [ %.070, %309 ], [ %.070, %307 ], [ %.070, %295 ], [ %.070, %285 ], [ %.070, %284 ], [ %.070, %283 ], [ %.070, %280 ], [ %.070, %278 ], [ %.070, %277 ], [ %.070, %276 ], [ %.070, %274 ], [ %.070, %260 ], [ %.070, %250 ], [ %.070, %246 ], [ %.070, %245 ], [ %.070, %244 ], [ %234, %233 ], [ %.070, %223 ], [ %.070, %222 ], [ %.070, %212 ], [ %.070, %202 ], [ %.070, %200 ], [ %.070, %199 ], [ %.070, %198 ], [ %.070, %197 ], [ %.070, %185 ], [ %.070, %183 ], [ %.070, %168 ], [ %.070, %158 ], [ %.070, %152 ], [ %.070, %148 ], [ %.070, %147 ], [ %.070, %137 ], [ %.070, %127 ], [ %.070, %125 ], [ %.070, %113 ], [ %.070, %103 ], [ %.070, %102 ], [ %.070, %98 ], [ 0, %97 ], [ %.070, %95 ], [ %.070, %86 ], [ %.070, %82 ], [ %.070, %81 ], [ %.070, %71 ], [ %.070, %61 ], [ %.070, %60 ], [ %.070, %59 ], [ %.070, %47 ], [ %.070, %37 ], [ %.070, %35 ], [ %.070, %23 ], [ %.070, %13 ]
  %.068.be = phi i32 [ %.068, %12 ], [ %.068, %461 ], [ %.068, %460 ], [ %.068, %454 ], [ %.068, %453 ], [ %.068, %452 ], [ %.068, %451 ], [ %.068, %450 ], [ %.068, %448 ], [ %.068, %447 ], [ %.068, %446 ], [ %.068, %445 ], [ %.068, %444 ], [ %.068, %443 ], [ %.068, %440 ], [ %.068, %439 ], [ %.068, %437 ], [ %.068, %436 ], [ %.068, %426 ], [ %.068, %416 ], [ %.068, %415 ], [ %.068, %405 ], [ %.068, %395 ], [ %.068, %393 ], [ %.068, %392 ], [ %.068, %391 ], [ %.068, %376 ], [ %.068, %366 ], [ %.068, %364 ], [ %.068, %357 ], [ %.068, %356 ], [ %.068, %346 ], [ %.068, %336 ], [ %.068, %334 ], [ %.068, %332 ], [ %.068, %320 ], [ %.068, %310 ], [ %.068, %309 ], [ %.068, %307 ], [ %.068, %295 ], [ %.068, %285 ], [ %.068, %284 ], [ %.068, %283 ], [ %.068, %280 ], [ %.068, %278 ], [ %.068, %277 ], [ %.068, %276 ], [ %.068, %274 ], [ %.068, %260 ], [ %.068, %250 ], [ %.068, %246 ], [ %.068, %245 ], [ %.068, %244 ], [ %.068, %233 ], [ %.068, %223 ], [ %.068, %222 ], [ %.068, %212 ], [ %.068, %202 ], [ %201, %200 ], [ %.068, %199 ], [ %.068, %198 ], [ %.068, %197 ], [ %.068, %185 ], [ %.068, %183 ], [ %.068, %168 ], [ %.068, %158 ], [ %.068, %152 ], [ %.068, %148 ], [ %.068, %147 ], [ %.068, %137 ], [ %.068, %127 ], [ %.068, %125 ], [ %.068, %113 ], [ %.068, %103 ], [ 0, %102 ], [ %.068, %98 ], [ %.068, %97 ], [ %.068, %95 ], [ %.068, %86 ], [ %.068, %82 ], [ %.068, %81 ], [ %.068, %71 ], [ %.068, %61 ], [ %.068, %60 ], [ %.068, %59 ], [ %.068, %47 ], [ %.068, %37 ], [ %.068, %35 ], [ %.068, %23 ], [ %.068, %13 ]
  %.066.be = phi i32 [ %.066, %12 ], [ %.066, %461 ], [ %.066, %460 ], [ %.066, %454 ], [ %.066, %453 ], [ %.066, %452 ], [ %.066, %451 ], [ %.066, %450 ], [ %.066, %448 ], [ %.066, %447 ], [ %.066, %446 ], [ 0, %445 ], [ %.066, %444 ], [ %.066, %443 ], [ %.066, %440 ], [ %.066, %439 ], [ %.066, %437 ], [ %.066, %436 ], [ %.066, %426 ], [ %.066, %416 ], [ %.066, %415 ], [ %.066, %405 ], [ %.066, %395 ], [ %.066, %393 ], [ %.066, %392 ], [ %.066, %391 ], [ %.066, %376 ], [ %.066, %366 ], [ %.066, %364 ], [ %.066, %357 ], [ %.066, %356 ], [ %.066, %346 ], [ %.066, %336 ], [ %.066, %334 ], [ %.066, %332 ], [ %.066, %320 ], [ %.066, %310 ], [ %.066, %309 ], [ %.066, %307 ], [ %.066, %295 ], [ %.066, %285 ], [ %.066, %284 ], [ %.066, %283 ], [ %.066, %280 ], [ %.066, %278 ], [ %.066, %277 ], [ %.066, %276 ], [ %.066, %274 ], [ %.066, %260 ], [ %.066, %250 ], [ %.066, %246 ], [ %.066, %245 ], [ %.066, %244 ], [ %.066, %233 ], [ %.066, %223 ], [ %.066, %222 ], [ %.066, %212 ], [ %.066, %202 ], [ %.066, %200 ], [ %.066, %199 ], [ %.neg81, %198 ], [ %.066, %197 ], [ %.066, %185 ], [ %.066, %183 ], [ %.066, %168 ], [ %.066, %158 ], [ %.066, %152 ], [ %.066, %148 ], [ %.066, %147 ], [ 0, %137 ], [ %.066, %127 ], [ %.066, %125 ], [ %.066, %113 ], [ %.066, %103 ], [ %.066, %102 ], [ %.066, %98 ], [ %.066, %97 ], [ %.066, %95 ], [ %.066, %86 ], [ %.066, %82 ], [ %.066, %81 ], [ %.066, %71 ], [ %.066, %61 ], [ %.066, %60 ], [ %.066, %59 ], [ %.066, %47 ], [ %.066, %37 ], [ %.066, %35 ], [ %.066, %23 ], [ %.066, %13 ]
  %.064.be = phi i8 [ %.064, %12 ], [ %.064, %461 ], [ %.064, %460 ], [ %.064, %454 ], [ %.064, %453 ], [ %.064, %452 ], [ %.064, %451 ], [ %.064, %450 ], [ %.064, %448 ], [ %.064, %447 ], [ %.064, %446 ], [ %.064, %445 ], [ %.064, %444 ], [ %.064, %443 ], [ %.064, %440 ], [ %.064, %439 ], [ %.064, %437 ], [ %.064, %436 ], [ %.064, %426 ], [ %.064, %416 ], [ %.064, %415 ], [ %.064, %405 ], [ %.064, %395 ], [ %.064, %393 ], [ %.064, %392 ], [ %.064, %391 ], [ %.064, %376 ], [ %.064, %366 ], [ %.064, %364 ], [ %.064, %357 ], [ %.064, %356 ], [ %.064, %346 ], [ %.064, %336 ], [ %.064, %334 ], [ %.064, %332 ], [ %.064, %320 ], [ %.064, %310 ], [ %.064, %309 ], [ %.064, %307 ], [ %.064, %295 ], [ %.064, %285 ], [ %.064, %284 ], [ %.064, %283 ], [ %.064, %280 ], [ %.064, %278 ], [ %.064, %277 ], [ 1, %276 ], [ %.064, %274 ], [ %.064, %260 ], [ %.064, %250 ], [ %.064, %246 ], [ 0, %245 ], [ %.064, %244 ], [ %.064, %233 ], [ %.064, %223 ], [ %.064, %222 ], [ %.064, %212 ], [ %.064, %202 ], [ %.064, %200 ], [ %.064, %199 ], [ %.064, %198 ], [ %.064, %197 ], [ %.064, %185 ], [ %.064, %183 ], [ %.064, %168 ], [ %.064, %158 ], [ %.064, %152 ], [ %.064, %148 ], [ %.064, %147 ], [ %.064, %137 ], [ %.064, %127 ], [ %.064, %125 ], [ %.064, %113 ], [ %.064, %103 ], [ %.064, %102 ], [ %.064, %98 ], [ %.064, %97 ], [ %.064, %95 ], [ %.064, %86 ], [ %.064, %82 ], [ %.064, %81 ], [ %.064, %71 ], [ %.064, %61 ], [ %.064, %60 ], [ %.064, %59 ], [ %.064, %47 ], [ %.064, %37 ], [ %.064, %35 ], [ %.064, %23 ], [ %.064, %13 ]
  %.062.be = phi i32 [ %.062, %12 ], [ %.062, %461 ], [ %.062, %460 ], [ %.062, %454 ], [ %.062, %453 ], [ %.062, %452 ], [ %.062, %451 ], [ %.062, %450 ], [ %.062, %448 ], [ %.062, %447 ], [ %.062, %446 ], [ %.062, %445 ], [ %.062, %444 ], [ %.062, %443 ], [ %.062, %440 ], [ %.062, %439 ], [ %.062, %437 ], [ %.062, %436 ], [ %.062, %426 ], [ %.062, %416 ], [ %.062, %415 ], [ %.062, %405 ], [ %.062, %395 ], [ %.062, %393 ], [ %.062, %392 ], [ %.062, %391 ], [ %.062, %376 ], [ %.062, %366 ], [ %.062, %364 ], [ %.062, %357 ], [ %.062, %356 ], [ %.062, %346 ], [ %.062, %336 ], [ %.062, %334 ], [ %.062, %332 ], [ %.062, %320 ], [ %.062, %310 ], [ %.062, %309 ], [ %.062, %307 ], [ %.062, %295 ], [ %.062, %285 ], [ %.062, %284 ], [ %.062, %283 ], [ %.062, %280 ], [ %279, %278 ], [ %.062, %277 ], [ %.062, %276 ], [ %.062, %274 ], [ %.062, %260 ], [ %.062, %250 ], [ %.062, %246 ], [ 0, %245 ], [ %.062, %244 ], [ %.062, %233 ], [ %.062, %223 ], [ %.062, %222 ], [ %.062, %212 ], [ %.062, %202 ], [ %.062, %200 ], [ %.062, %199 ], [ %.062, %198 ], [ %.062, %197 ], [ %.062, %185 ], [ %.062, %183 ], [ %.062, %168 ], [ %.062, %158 ], [ %.062, %152 ], [ %.062, %148 ], [ %.062, %147 ], [ %.062, %137 ], [ %.062, %127 ], [ %.062, %125 ], [ %.062, %113 ], [ %.062, %103 ], [ %.062, %102 ], [ %.062, %98 ], [ %.062, %97 ], [ %.062, %95 ], [ %.062, %86 ], [ %.062, %82 ], [ %.062, %81 ], [ %.062, %71 ], [ %.062, %61 ], [ %.062, %60 ], [ %.062, %59 ], [ %.062, %47 ], [ %.062, %37 ], [ %.062, %35 ], [ %.062, %23 ], [ %.062, %13 ]
  %.060.be = phi i32 [ %.060, %12 ], [ %.neg, %461 ], [ %.060, %460 ], [ %.060, %454 ], [ %.060, %453 ], [ %.060, %452 ], [ %.060, %451 ], [ %.060, %450 ], [ %.060, %448 ], [ %.060, %447 ], [ %.060, %446 ], [ %.060, %445 ], [ %.060, %444 ], [ %.060, %443 ], [ %.060, %440 ], [ %.060, %439 ], [ %.060, %437 ], [ %.060, %436 ], [ %.neg77, %426 ], [ %.060, %416 ], [ %.060, %415 ], [ %.060, %405 ], [ %.060, %395 ], [ %.060, %393 ], [ %.060, %392 ], [ %.060, %391 ], [ %.060, %376 ], [ %.060, %366 ], [ %.060, %364 ], [ %.060, %357 ], [ %.060, %356 ], [ %.060, %346 ], [ %.060, %336 ], [ %.060, %334 ], [ %.060, %332 ], [ %.060, %320 ], [ %.060, %310 ], [ %.060, %309 ], [ %.060, %307 ], [ %.060, %295 ], [ %.060, %285 ], [ 0, %284 ], [ %.060, %283 ], [ %.060, %280 ], [ %.060, %278 ], [ %.060, %277 ], [ %.060, %276 ], [ %.060, %274 ], [ %.060, %260 ], [ %.060, %250 ], [ %.060, %246 ], [ %.060, %245 ], [ %.060, %244 ], [ %.060, %233 ], [ %.060, %223 ], [ %.060, %222 ], [ %.060, %212 ], [ %.060, %202 ], [ %.060, %200 ], [ %.060, %199 ], [ %.060, %198 ], [ %.060, %197 ], [ %.060, %185 ], [ %.060, %183 ], [ %.060, %168 ], [ %.060, %158 ], [ %.060, %152 ], [ %.060, %148 ], [ %.060, %147 ], [ %.060, %137 ], [ %.060, %127 ], [ %.060, %125 ], [ %.060, %113 ], [ %.060, %103 ], [ %.060, %102 ], [ %.060, %98 ], [ %.060, %97 ], [ %.060, %95 ], [ %.060, %86 ], [ %.060, %82 ], [ %.060, %81 ], [ %.060, %71 ], [ %.060, %61 ], [ %.060, %60 ], [ %.060, %59 ], [ %.060, %47 ], [ %.060, %37 ], [ %.060, %35 ], [ %.060, %23 ], [ %.060, %13 ]
  %.058.be = phi i32 [ %.058, %12 ], [ %.058, %461 ], [ %.058, %460 ], [ %.058, %454 ], [ %.058, %453 ], [ %.058, %452 ], [ %.058, %451 ], [ %.058, %450 ], [ %.058, %448 ], [ %.058, %447 ], [ %.058, %446 ], [ %.058, %445 ], [ %.058, %444 ], [ %.058, %443 ], [ %.058, %440 ], [ %.058, %439 ], [ %.058, %437 ], [ %.058, %436 ], [ %.058, %426 ], [ %.058, %416 ], [ %.058, %415 ], [ %.058, %405 ], [ %.058, %395 ], [ %394, %393 ], [ %.058, %392 ], [ %.058, %391 ], [ %.058, %376 ], [ %.058, %366 ], [ %.058, %364 ], [ %.058, %357 ], [ %.058, %356 ], [ %.058, %346 ], [ %.058, %336 ], [ %.058, %334 ], [ %.058, %332 ], [ %.058, %320 ], [ %.058, %310 ], [ 0, %309 ], [ %.058, %307 ], [ %.058, %295 ], [ %.058, %285 ], [ %.058, %284 ], [ %.058, %283 ], [ %.058, %280 ], [ %.058, %278 ], [ %.058, %277 ], [ %.058, %276 ], [ %.058, %274 ], [ %.058, %260 ], [ %.058, %250 ], [ %.058, %246 ], [ %.058, %245 ], [ %.058, %244 ], [ %.058, %233 ], [ %.058, %223 ], [ %.058, %222 ], [ %.058, %212 ], [ %.058, %202 ], [ %.058, %200 ], [ %.058, %199 ], [ %.058, %198 ], [ %.058, %197 ], [ %.058, %185 ], [ %.058, %183 ], [ %.058, %168 ], [ %.058, %158 ], [ %.058, %152 ], [ %.058, %148 ], [ %.058, %147 ], [ %.058, %137 ], [ %.058, %127 ], [ %.058, %125 ], [ %.058, %113 ], [ %.058, %103 ], [ %.058, %102 ], [ %.058, %98 ], [ %.058, %97 ], [ %.058, %95 ], [ %.058, %86 ], [ %.058, %82 ], [ %.058, %81 ], [ %.058, %71 ], [ %.058, %61 ], [ %.058, %60 ], [ %.058, %59 ], [ %.058, %47 ], [ %.058, %37 ], [ %.058, %35 ], [ %.058, %23 ], [ %.058, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -387565439, %461 ], [ -2107157780, %460 ], [ -589066476, %454 ], [ 1561153522, %453 ], [ -480240993, %452 ], [ 1192629399, %451 ], [ -240817648, %450 ], [ -515965376, %448 ], [ 1594747833, %447 ], [ 337239589, %446 ], [ -1743010177, %445 ], [ -1845080385, %444 ], [ 599897819, %443 ], [ -1379929064, %440 ], [ 197537190, %439 ], [ 829724768, %437 ], [ -733128579, %436 ], [ %435, %426 ], [ %425, %416 ], [ -468654698, %415 ], [ %414, %405 ], [ %404, %395 ], [ -234125341, %393 ], [ 1790958544, %392 ], [ -218937527, %391 ], [ %390, %376 ], [ %375, %366 ], [ -218937527, %364 ], [ %363, %357 ], [ 567141939, %356 ], [ %355, %346 ], [ %345, %336 ], [ %335, %334 ], [ %333, %332 ], [ %331, %320 ], [ %319, %310 ], [ -234125341, %309 ], [ %308, %307 ], [ %306, %295 ], [ %294, %285 ], [ -733128579, %284 ], [ 829724768, %283 ], [ %282, %280 ], [ -1587222798, %278 ], [ -1468004231, %277 ], [ 1099374753, %276 ], [ %275, %274 ], [ %273, %260 ], [ %259, %250 ], [ %249, %246 ], [ -1587222798, %245 ], [ 917996576, %244 ], [ %243, %233 ], [ %232, %223 ], [ -2011513450, %222 ], [ %221, %212 ], [ %211, %202 ], [ 1054203185, %200 ], [ -1457088626, %199 ], [ -1262269698, %198 ], [ -862752974, %197 ], [ -1989141051, %185 ], [ %184, %183 ], [ %182, %168 ], [ %167, %158 ], [ %157, %152 ], [ %151, %148 ], [ -1262269698, %147 ], [ %146, %137 ], [ %136, %127 ], [ %126, %125 ], [ %124, %113 ], [ %112, %103 ], [ 1054203185, %102 ], [ %101, %98 ], [ 917996576, %97 ], [ 2132447861, %95 ], [ 1951281907, %86 ], [ %85, %82 ], [ 2132447861, %81 ], [ %80, %71 ], [ %70, %61 ], [ 561513453, %60 ], [ -926263400, %59 ], [ %58, %47 ], [ %46, %37 ], [ %36, %35 ], [ %34, %23 ], [ %22, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* @x, align 4
  %15 = load i32, i32* @y, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 197537190, i32 177360518
  br label %.backedge

23:                                               ; preds = %12
  %24 = load i32, i32* @v, align 4
  %25 = icmp slt i32 %.074, %24
  store i1 %25, i1* %6, align 1
  %26 = load i32, i32* @x, align 4
  %27 = load i32, i32* @y, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 -49542363, i32 177360518
  br label %.backedge

35:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %36 = select i1 %.0..0..0., i32 -1400514472, i32 -1591898434
  br label %.backedge

37:                                               ; preds = %12
  %38 = load i32, i32* @x, align 4
  %39 = load i32, i32* @y, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 -1379929064, i32 499007799
  br label %.backedge

47:                                               ; preds = %12
  %48 = sext i32 %.074 to i64
  %49 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %48, i64 %48
  store i64 0, i64* %49, align 8
  %50 = load i32, i32* @x, align 4
  %51 = load i32, i32* @y, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -1207119065, i32 499007799
  br label %.backedge

59:                                               ; preds = %12
  br label %.backedge

60:                                               ; preds = %12
  %.neg83 = add i32 %.074, 1
  br label %.backedge

61:                                               ; preds = %12
  %62 = load i32, i32* @x, align 4
  %63 = load i32, i32* @y, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 599897819, i32 -1334702478
  br label %.backedge

71:                                               ; preds = %12
  %72 = load i32, i32* @x, align 4
  %73 = load i32, i32* @y, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 500192004, i32 -1334702478
  br label %.backedge

81:                                               ; preds = %12
  br label %.backedge

82:                                               ; preds = %12
  %83 = load i32, i32* @e, align 4
  %84 = icmp slt i32 %.072, %83
  %85 = select i1 %84, i32 -452114688, i32 1543602025
  br label %.backedge

86:                                               ; preds = %12
  %87 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %7, i32* nonnull %8, i32* nonnull %9)
  %88 = load i32, i32* %9, align 4
  %89 = sext i32 %88 to i64
  %90 = load i32, i32* %7, align 4
  %91 = sext i32 %90 to i64
  %92 = load i32, i32* %8, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %91, i64 %93
  store i64 %89, i64* %94, align 8
  br label %.backedge

95:                                               ; preds = %12
  %96 = add i32 %.072, 1
  br label %.backedge

97:                                               ; preds = %12
  br label %.backedge

98:                                               ; preds = %12
  %99 = load i32, i32* @v, align 4
  %100 = icmp slt i32 %.070, %99
  %101 = select i1 %100, i32 515279690, i32 -1866435846
  br label %.backedge

102:                                              ; preds = %12
  br label %.backedge

103:                                              ; preds = %12
  %104 = load i32, i32* @x, align 4
  %105 = load i32, i32* @y, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 -1845080385, i32 1119461090
  br label %.backedge

113:                                              ; preds = %12
  %114 = load i32, i32* @v, align 4
  %115 = icmp slt i32 %.068, %114
  store i1 %115, i1* %5, align 1
  %116 = load i32, i32* @x, align 4
  %117 = load i32, i32* @y, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 -912144402, i32 1119461090
  br label %.backedge

125:                                              ; preds = %12
  %.0..0..0.53 = load volatile i1, i1* %5, align 1
  %126 = select i1 %.0..0..0.53, i32 -535030629, i32 1759866828
  br label %.backedge

127:                                              ; preds = %12
  %128 = load i32, i32* @x, align 4
  %129 = load i32, i32* @y, align 4
  %130 = add i32 %128, -1
  %131 = mul i32 %130, %128
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %134, %133
  %136 = select i1 %135, i32 -1743010177, i32 -1090261639
  br label %.backedge

137:                                              ; preds = %12
  %138 = load i32, i32* @x, align 4
  %139 = load i32, i32* @y, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 -812286416, i32 -1090261639
  br label %.backedge

147:                                              ; preds = %12
  br label %.backedge

148:                                              ; preds = %12
  %149 = load i32, i32* @v, align 4
  %150 = icmp slt i32 %.066, %149
  %151 = select i1 %150, i32 -950955567, i32 488518460
  br label %.backedge

152:                                              ; preds = %12
  %153 = sext i32 %.068 to i64
  %154 = sext i32 %.070 to i64
  %155 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %153, i64 %154
  %156 = load i64, i64* %155, align 8
  %.not82 = icmp eq i64 %156, 10000000000
  %157 = select i1 %.not82, i32 -1989141051, i32 -308392551
  br label %.backedge

158:                                              ; preds = %12
  %159 = load i32, i32* @x, align 4
  %160 = load i32, i32* @y, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 337239589, i32 -1988814075
  br label %.backedge

168:                                              ; preds = %12
  %169 = sext i32 %.070 to i64
  %170 = sext i32 %.066 to i64
  %171 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %169, i64 %170
  %172 = load i64, i64* %171, align 8
  %173 = icmp ne i64 %172, 10000000000
  store i1 %173, i1* %4, align 1
  %174 = load i32, i32* @x, align 4
  %175 = load i32, i32* @y, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 580812657, i32 -1988814075
  br label %.backedge

183:                                              ; preds = %12
  %.0..0..0.54 = load volatile i1, i1* %4, align 1
  %184 = select i1 %.0..0..0.54, i32 -156981190, i32 -1989141051
  br label %.backedge

185:                                              ; preds = %12
  %186 = sext i32 %.068 to i64
  %187 = sext i32 %.066 to i64
  %188 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %186, i64 %187
  %189 = sext i32 %.070 to i64
  %190 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %186, i64 %189
  %191 = load i64, i64* %190, align 8
  %192 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %189, i64 %187
  %193 = load i64, i64* %192, align 8
  %194 = add i64 %193, %191
  store i64 %194, i64* %10, align 8
  %195 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %188, i64* nonnull dereferenceable(8) %10)
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %188, align 8
  br label %.backedge

197:                                              ; preds = %12
  br label %.backedge

198:                                              ; preds = %12
  %.neg81 = add i32 %.066, 1
  br label %.backedge

199:                                              ; preds = %12
  br label %.backedge

200:                                              ; preds = %12
  %201 = add i32 %.068, 1
  br label %.backedge

202:                                              ; preds = %12
  %203 = load i32, i32* @x, align 4
  %204 = load i32, i32* @y, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 1594747833, i32 2008754433
  br label %.backedge

212:                                              ; preds = %12
  %213 = load i32, i32* @x, align 4
  %214 = load i32, i32* @y, align 4
  %215 = add i32 %213, -1
  %216 = mul i32 %215, %213
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %219, %218
  %221 = select i1 %220, i32 961142232, i32 2008754433
  br label %.backedge

222:                                              ; preds = %12
  br label %.backedge

223:                                              ; preds = %12
  %224 = load i32, i32* @x, align 4
  %225 = load i32, i32* @y, align 4
  %226 = add i32 %224, -1
  %227 = mul i32 %226, %224
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %230, %229
  %232 = select i1 %231, i32 -515965376, i32 -157440910
  br label %.backedge

233:                                              ; preds = %12
  %234 = add i32 %.070, 1
  %235 = load i32, i32* @x, align 4
  %236 = load i32, i32* @y, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 -1307181859, i32 -157440910
  br label %.backedge

244:                                              ; preds = %12
  br label %.backedge

245:                                              ; preds = %12
  br label %.backedge

246:                                              ; preds = %12
  %247 = load i32, i32* @v, align 4
  %248 = icmp slt i32 %.062, %247
  %249 = select i1 %248, i32 1898974775, i32 250131106
  br label %.backedge

250:                                              ; preds = %12
  %251 = load i32, i32* @x, align 4
  %252 = load i32, i32* @y, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 -240817648, i32 1340733002
  br label %.backedge

260:                                              ; preds = %12
  %261 = sext i32 %.062 to i64
  %262 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %261, i64 %261
  %263 = load i64, i64* %262, align 8
  %264 = icmp slt i64 %263, 0
  store i1 %264, i1* %3, align 1
  %265 = load i32, i32* @x, align 4
  %266 = load i32, i32* @y, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 1129181625, i32 1340733002
  br label %.backedge

274:                                              ; preds = %12
  %.0..0..0.55 = load volatile i1, i1* %3, align 1
  %275 = select i1 %.0..0..0.55, i32 862635315, i32 1099374753
  br label %.backedge

276:                                              ; preds = %12
  br label %.backedge

277:                                              ; preds = %12
  br label %.backedge

278:                                              ; preds = %12
  %279 = add i32 %.062, 1
  br label %.backedge

280:                                              ; preds = %12
  %281 = and i8 %.064, 1
  %.not80 = icmp eq i8 %281, 0
  %282 = select i1 %.not80, i32 2077916393, i32 1781558992
  br label %.backedge

283:                                              ; preds = %12
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str, i64 0, i64 0))
  br label %.backedge

284:                                              ; preds = %12
  br label %.backedge

285:                                              ; preds = %12
  %286 = load i32, i32* @x, align 4
  %287 = load i32, i32* @y, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 1192629399, i32 1515050075
  br label %.backedge

295:                                              ; preds = %12
  %296 = load i32, i32* @v, align 4
  %297 = icmp slt i32 %.060, %296
  store i1 %297, i1* %2, align 1
  %298 = load i32, i32* @x, align 4
  %299 = load i32, i32* @y, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 -402017190, i32 1515050075
  br label %.backedge

307:                                              ; preds = %12
  %.0..0..0.56 = load volatile i1, i1* %2, align 1
  %308 = select i1 %.0..0..0.56, i32 1083322415, i32 -1119926961
  br label %.backedge

309:                                              ; preds = %12
  br label %.backedge

310:                                              ; preds = %12
  %311 = load i32, i32* @x, align 4
  %312 = load i32, i32* @y, align 4
  %313 = add i32 %311, -1
  %314 = mul i32 %313, %311
  %315 = and i32 %314, 1
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %317, %316
  %319 = select i1 %318, i32 -480240993, i32 -1996006677
  br label %.backedge

320:                                              ; preds = %12
  %321 = load i32, i32* @v, align 4
  %322 = icmp slt i32 %.058, %321
  store i1 %322, i1* %1, align 1
  %323 = load i32, i32* @x, align 4
  %324 = load i32, i32* @y, align 4
  %325 = add i32 %323, -1
  %326 = mul i32 %325, %323
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %329, %328
  %331 = select i1 %330, i32 545761705, i32 -1996006677
  br label %.backedge

332:                                              ; preds = %12
  %.0..0..0.57 = load volatile i1, i1* %1, align 1
  %333 = select i1 %.0..0..0.57, i32 -1355378594, i32 759170922
  br label %.backedge

334:                                              ; preds = %12
  %.not = icmp eq i32 %.058, 0
  %335 = select i1 %.not, i32 567141939, i32 1090902153
  br label %.backedge

336:                                              ; preds = %12
  %337 = load i32, i32* @x, align 4
  %338 = load i32, i32* @y, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 1561153522, i32 -1468143016
  br label %.backedge

346:                                              ; preds = %12
  %putchar79 = call i32 @putchar(i32 32)
  %347 = load i32, i32* @x, align 4
  %348 = load i32, i32* @y, align 4
  %349 = add i32 %347, -1
  %350 = mul i32 %349, %347
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %353, %352
  %355 = select i1 %354, i32 -92813354, i32 -1468143016
  br label %.backedge

356:                                              ; preds = %12
  br label %.backedge

357:                                              ; preds = %12
  %358 = sext i32 %.060 to i64
  %359 = sext i32 %.058 to i64
  %360 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %358, i64 %359
  %361 = load i64, i64* %360, align 8
  %362 = icmp eq i64 %361, 10000000000
  %363 = select i1 %362, i32 -1490275628, i32 1070584769
  br label %.backedge

364:                                              ; preds = %12
  %365 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  br label %.backedge

366:                                              ; preds = %12
  %367 = load i32, i32* @x, align 4
  %368 = load i32, i32* @y, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 -589066476, i32 183576955
  br label %.backedge

376:                                              ; preds = %12
  %377 = sext i32 %.060 to i64
  %378 = sext i32 %.058 to i64
  %379 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %377, i64 %378
  %380 = load i64, i64* %379, align 8
  %381 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 %380)
  %382 = load i32, i32* @x, align 4
  %383 = load i32, i32* @y, align 4
  %384 = add i32 %382, -1
  %385 = mul i32 %384, %382
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %388, %387
  %390 = select i1 %389, i32 -1066417050, i32 183576955
  br label %.backedge

391:                                              ; preds = %12
  br label %.backedge

392:                                              ; preds = %12
  br label %.backedge

393:                                              ; preds = %12
  %394 = add i32 %.058, 1
  br label %.backedge

395:                                              ; preds = %12
  %396 = load i32, i32* @x, align 4
  %397 = load i32, i32* @y, align 4
  %398 = add i32 %396, -1
  %399 = mul i32 %398, %396
  %400 = and i32 %399, 1
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %402, %401
  %404 = select i1 %403, i32 -2107157780, i32 41973891
  br label %.backedge

405:                                              ; preds = %12
  %putchar78 = call i32 @putchar(i32 10)
  %406 = load i32, i32* @x, align 4
  %407 = load i32, i32* @y, align 4
  %408 = add i32 %406, -1
  %409 = mul i32 %408, %406
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %412, %411
  %414 = select i1 %413, i32 -2121712333, i32 41973891
  br label %.backedge

415:                                              ; preds = %12
  br label %.backedge

416:                                              ; preds = %12
  %417 = load i32, i32* @x, align 4
  %418 = load i32, i32* @y, align 4
  %419 = add i32 %417, -1
  %420 = mul i32 %419, %417
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %423, %422
  %425 = select i1 %424, i32 -387565439, i32 494321554
  br label %.backedge

426:                                              ; preds = %12
  %.neg77 = add i32 %.060, 1
  %427 = load i32, i32* @x, align 4
  %428 = load i32, i32* @y, align 4
  %429 = add i32 %427, -1
  %430 = mul i32 %429, %427
  %431 = and i32 %430, 1
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %433, %432
  %435 = select i1 %434, i32 1614709003, i32 494321554
  br label %.backedge

436:                                              ; preds = %12
  br label %.backedge

437:                                              ; preds = %12
  br label %.backedge

438:                                              ; preds = %12
  ret i32 0

439:                                              ; preds = %12
  br label %.backedge

440:                                              ; preds = %12
  %441 = sext i32 %.074 to i64
  %442 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %441, i64 %441
  store i64 0, i64* %442, align 8
  br label %.backedge

443:                                              ; preds = %12
  br label %.backedge

444:                                              ; preds = %12
  br label %.backedge

445:                                              ; preds = %12
  br label %.backedge

446:                                              ; preds = %12
  br label %.backedge

447:                                              ; preds = %12
  br label %.backedge

448:                                              ; preds = %12
  %449 = add i32 %.070, 1
  br label %.backedge

450:                                              ; preds = %12
  br label %.backedge

451:                                              ; preds = %12
  br label %.backedge

452:                                              ; preds = %12
  br label %.backedge

453:                                              ; preds = %12
  %putchar76 = call i32 @putchar(i32 32)
  br label %.backedge

454:                                              ; preds = %12
  %455 = sext i32 %.060 to i64
  %456 = sext i32 %.058 to i64
  %457 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %455, i64 %456
  %458 = load i64, i64* %457, align 8
  %459 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 %458)
  br label %.backedge

460:                                              ; preds = %12
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

461:                                              ; preds = %12
  %.neg = add i32 %.060, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* %0, i64* %1, i64* dereferenceable(8) %2) local_unnamed_addr #2 comdat {
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x.7, align 4
  %7 = load i32, i32* @y.8, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %5, align 1
  %12 = icmp slt i32 %7, 10
  store i1 %12, i1* %4, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %3
  %.0.ph = phi i32 [ -558809700, %3 ], [ %.0.ph.be, %.outer.backedge ]
  br label %13

13:                                               ; preds = %.outer, %13
  switch i32 %.0.ph, label %13 [
    i32 -558809700, label %14
    i32 -1099035306, label %17
    i32 -1915903506, label %29
    i32 1832024498, label %30
  ]

14:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %.0..0..0.1 = load volatile i1, i1* %4, align 1
  %15 = or i1 %.0..0..0., %.0..0..0.1
  %16 = select i1 %15, i32 -1099035306, i32 1832024498
  br label %.outer.backedge

17:                                               ; preds = %13
  %18 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %0)
  %19 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %1)
  tail call void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %18, i64* %19, i64* nonnull dereferenceable(8) %2)
  %20 = load i32, i32* @x.7, align 4
  %21 = load i32, i32* @y.8, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -1915903506, i32 1832024498
  br label %.outer.backedge

29:                                               ; preds = %13
  ret void

30:                                               ; preds = %13
  %31 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %0)
  %32 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %1)
  tail call void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %31, i64* %32, i64* nonnull dereferenceable(8) %2)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %30, %17, %14
  %.0.ph.be = phi i32 [ %16, %14 ], [ %28, %17 ], [ -1099035306, %30 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #3 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  %8 = load i32, i32* @x.9, align 4
  %9 = load i32, i32* @y.10, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -1437720283, i32 -2033973970
  %17 = select i1 %15, i32 -1831113497, i32 -2033973970
  br label %.outer

.outer:                                           ; preds = %18, %2
  %.09.ph = phi i64* [ undef, %2 ], [ %.09.ph14, %18 ]
  %.0.ph = phi i32 [ -30179419, %2 ], [ %16, %18 ]
  br label %.outer13

.outer13:                                         ; preds = %.outer13.backedge, %.outer
  %.09.ph14 = phi i64* [ %.09.ph, %.outer ], [ %.09.ph14.be, %.outer13.backedge ]
  %.0.ph15 = phi i32 [ %.0.ph, %.outer ], [ -1414409147, %.outer13.backedge ]
  br label %.outer16

.outer16:                                         ; preds = %.outer16.backedge, %.outer13
  %.0.ph17 = phi i32 [ %.0.ph15, %.outer13 ], [ %.0.ph17.be, %.outer16.backedge ]
  br label %18

18:                                               ; preds = %.outer16, %18
  switch i32 %.0.ph17, label %18 [
    i32 -30179419, label %19
    i32 987844909, label %.outer13.backedge
    i32 -650345513, label %22
    i32 -1414409147, label %.outer16.backedge
    i32 -1831113497, label %.outer
    i32 -1437720283, label %23
    i32 -2033973970, label %24
  ]

19:                                               ; preds = %18
  %.0..0..0.6 = load volatile i64, i64* %5, align 8
  %.0..0..0.7 = load volatile i64, i64* %4, align 8
  %20 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %21 = select i1 %20, i32 987844909, i32 -650345513
  br label %.outer16.backedge

22:                                               ; preds = %18
  br label %.outer13.backedge

.outer13.backedge:                                ; preds = %18, %22
  %.09.ph14.be = phi i64* [ %0, %22 ], [ %1, %18 ]
  br label %.outer13

23:                                               ; preds = %18
  store i64* %.09.ph, i64** %3, align 8
  %.0..0..0.8 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.8

24:                                               ; preds = %18
  br label %.outer16.backedge

.outer16.backedge:                                ; preds = %18, %24, %19
  %.0.ph17.be = phi i32 [ %21, %19 ], [ -1831113497, %24 ], [ %17, %18 ]
  br label %.outer16
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %0, i64* %1, i64* dereferenceable(8) %2) local_unnamed_addr #3 comdat {
  %4 = load i64, i64* %2, align 8
  br label %5

5:                                                ; preds = %.backedge, %3
  %.07 = phi i64* [ %0, %3 ], [ %.07.be, %.backedge ]
  %.0 = phi i32 [ 1966417413, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1966417413, label %6
    i32 167512685, label %8
    i32 -1495569435, label %9
    i32 605263327, label %19
    i32 -2055706377, label %30
    i32 1620480602, label %31
    i32 -368292105, label %41
    i32 -876091228, label %51
    i32 136204997, label %52
    i32 -434190654, label %54
  ]

.backedge:                                        ; preds = %5, %54, %52, %41, %31, %30, %19, %9, %8, %6
  %.07.be = phi i64* [ %.07, %5 ], [ %.07, %54 ], [ %53, %52 ], [ %.07, %41 ], [ %.07, %31 ], [ %.07, %30 ], [ %20, %19 ], [ %.07, %9 ], [ %.07, %8 ], [ %.07, %6 ]
  %.0.be = phi i32 [ %.0, %5 ], [ -368292105, %54 ], [ 605263327, %52 ], [ %50, %41 ], [ %40, %31 ], [ 1966417413, %30 ], [ %29, %19 ], [ %18, %9 ], [ -1495569435, %8 ], [ %7, %6 ]
  br label %5

6:                                                ; preds = %5
  %.not = icmp eq i64* %.07, %1
  %7 = select i1 %.not, i32 1620480602, i32 167512685
  br label %.backedge

8:                                                ; preds = %5
  store i64 %4, i64* %.07, align 8
  br label %.backedge

9:                                                ; preds = %5
  %10 = load i32, i32* @x.11, align 4
  %11 = load i32, i32* @y.12, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %16, %15
  %18 = select i1 %17, i32 605263327, i32 136204997
  br label %.backedge

19:                                               ; preds = %5
  %20 = getelementptr inbounds i64, i64* %.07, i64 1
  %21 = load i32, i32* @x.11, align 4
  %22 = load i32, i32* @y.12, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 -2055706377, i32 136204997
  br label %.backedge

30:                                               ; preds = %5
  br label %.backedge

31:                                               ; preds = %5
  %32 = load i32, i32* @x.11, align 4
  %33 = load i32, i32* @y.12, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -368292105, i32 -434190654
  br label %.backedge

41:                                               ; preds = %5
  %42 = load i32, i32* @x.11, align 4
  %43 = load i32, i32* @y.12, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -876091228, i32 -434190654
  br label %.backedge

51:                                               ; preds = %5
  ret void

52:                                               ; preds = %5
  %53 = getelementptr inbounds i64, i64* %.07, i64 1
  br label %.backedge

54:                                               ; preds = %5
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %0) local_unnamed_addr #2 comdat {
  %2 = alloca i64*, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.13, align 4
  %6 = load i32, i32* @y.14, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  br label %.outer

.outer:                                           ; preds = %16, %1
  %.ph = phi i64* [ %17, %16 ], [ undef, %1 ]
  %.0.ph = phi i32 [ %26, %16 ], [ 8936154, %1 ]
  br label %.outer3

.outer3:                                          ; preds = %.outer3.backedge, %.outer
  %.0.ph4 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph4.be, %.outer3.backedge ]
  br label %12

12:                                               ; preds = %.outer3, %12
  switch i32 %.0.ph4, label %12 [
    i32 8936154, label %13
    i32 -877535293, label %16
    i32 1892406305, label %27
    i32 -708525145, label %28
  ]

13:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %14 = or i1 %.0..0..0., %.0..0..0.1
  %15 = select i1 %14, i32 -877535293, i32 -708525145
  br label %.outer3.backedge

16:                                               ; preds = %12
  %17 = tail call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %0)
  %18 = load i32, i32* @x.13, align 4
  %19 = load i32, i32* @y.14, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 1892406305, i32 -708525145
  br label %.outer

27:                                               ; preds = %12
  store i64* %.ph, i64** %2, align 8
  %.0..0..0.2 = load volatile i64*, i64** %2, align 8
  ret i64* %.0..0..0.2

28:                                               ; preds = %12
  %29 = tail call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %0)
  br label %.outer3.backedge

.outer3.backedge:                                 ; preds = %28, %13
  %.0.ph4.be = phi i32 [ %15, %13 ], [ -877535293, %28 ]
  br label %.outer3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %0) local_unnamed_addr #3 comdat align 2 {
  ret i64* %0
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #4

attributes #0 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
