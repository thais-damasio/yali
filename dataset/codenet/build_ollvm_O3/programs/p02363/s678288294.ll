; ModuleID = 'build_ollvm/programs/p02363/s678288294.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s678288294.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZL5graph = internal unnamed_addr global [100 x [100 x i64]] zeroinitializer, align 16
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s678288294.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERj(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERj(%"class.std::basic_istream"* nonnull %12, i32* nonnull dereferenceable(4) %8)
  br label %14

14:                                               ; preds = %.backedge, %0
  %.079 = phi i32 [ 0, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.0 = phi i32 [ 1738747630, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1738747630, label %15
    i32 774271957, label %19
    i32 -749531811, label %20
    i32 1986027616, label %24
    i32 1221650249, label %27
    i32 -335092995, label %37
    i32 1631145908, label %50
    i32 -1046224555, label %51
    i32 699954714, label %55
    i32 -1119309190, label %65
    i32 1371442871, label %75
    i32 222028491, label %76
    i32 1358124904, label %78
    i32 1316718663, label %79
    i32 -1502063802, label %80
    i32 1168455432, label %81
    i32 -1090406481, label %85
    i32 -372566504, label %93
    i32 1496154263, label %95
    i32 -658585023, label %96
    i32 -1766878394, label %106
    i32 -1290294836, label %118
    i32 -934330220, label %120
    i32 613333975, label %121
    i32 -1398499792, label %131
    i32 1827581088, label %143
    i32 265313884, label %145
    i32 111177329, label %146
    i32 -1640170227, label %156
    i32 -1063243000, label %168
    i32 -1718207631, label %170
    i32 1003452896, label %177
    i32 -1181362483, label %184
    i32 1929779962, label %194
    i32 1925691370, label %204
    i32 -1979134062, label %205
    i32 -354383029, label %218
    i32 -1305075680, label %228
    i32 -401642173, label %229
    i32 1312287609, label %231
    i32 -542945375, label %232
    i32 1074001702, label %234
    i32 706704898, label %235
    i32 -577202854, label %245
    i32 -967522268, label %255
    i32 -484396302, label %256
    i32 -57810641, label %266
    i32 -222893537, label %276
    i32 1125861568, label %277
    i32 -157642078, label %287
    i32 2070932466, label %299
    i32 321842945, label %301
    i32 -992767887, label %307
    i32 -1320281505, label %317
    i32 -1736072024, label %329
    i32 143233152, label %330
    i32 1849866065, label %340
    i32 -2089136578, label %350
    i32 -1766618364, label %351
    i32 -1856418452, label %353
    i32 -1481069863, label %354
    i32 2053191675, label %364
    i32 100825132, label %376
    i32 -334481103, label %378
    i32 -310211363, label %379
    i32 -1406432702, label %383
    i32 -244841461, label %393
    i32 -726811380, label %404
    i32 -269826292, label %406
    i32 -1522700007, label %408
    i32 211235963, label %415
    i32 1787851201, label %417
    i32 -2069194415, label %423
    i32 -1058166082, label %424
    i32 1647441382, label %426
    i32 -1189427972, label %436
    i32 -781340398, label %447
    i32 349695357, label %448
    i32 1302214341, label %450
    i32 -312147339, label %451
    i32 572258111, label %452
    i32 -612245629, label %456
    i32 98589202, label %457
    i32 -1649634291, label %458
    i32 1419285304, label %459
    i32 -1516498050, label %460
    i32 -1102826007, label %461
    i32 -577590663, label %462
    i32 1520433256, label %463
    i32 -3390513, label %464
    i32 815495067, label %467
    i32 -932168308, label %468
    i32 1902864841, label %469
    i32 -1707029258, label %470
  ]

.backedge:                                        ; preds = %14, %470, %469, %468, %467, %464, %463, %462, %461, %460, %459, %458, %457, %456, %452, %450, %448, %447, %436, %426, %424, %423, %417, %415, %408, %406, %404, %393, %383, %379, %378, %376, %364, %354, %353, %351, %350, %340, %330, %329, %317, %307, %301, %299, %287, %277, %276, %266, %256, %255, %245, %235, %234, %232, %231, %229, %228, %218, %205, %204, %194, %184, %177, %170, %168, %156, %146, %145, %143, %131, %121, %120, %118, %106, %96, %95, %93, %85, %81, %80, %79, %78, %76, %75, %65, %55, %51, %50, %37, %27, %24, %20, %19, %15
  %.079.be = phi i32 [ %.079, %14 ], [ %.079, %470 ], [ %.079, %469 ], [ %.079, %468 ], [ %.079, %467 ], [ %.079, %464 ], [ %.079, %463 ], [ %.079, %462 ], [ %.079, %461 ], [ %.079, %460 ], [ %.079, %459 ], [ %.079, %458 ], [ %.079, %457 ], [ %.079, %456 ], [ %.079, %452 ], [ %.079, %450 ], [ %.079, %448 ], [ %.079, %447 ], [ %.079, %436 ], [ %.079, %426 ], [ %.079, %424 ], [ %.079, %423 ], [ %.079, %417 ], [ %.079, %415 ], [ %.079, %408 ], [ %.079, %406 ], [ %.079, %404 ], [ %.079, %393 ], [ %.079, %383 ], [ %.079, %379 ], [ %.079, %378 ], [ %.079, %376 ], [ %.079, %364 ], [ %.079, %354 ], [ %.079, %353 ], [ %.079, %351 ], [ %.079, %350 ], [ %.079, %340 ], [ %.079, %330 ], [ %.079, %329 ], [ %.079, %317 ], [ %.079, %307 ], [ %.079, %301 ], [ %.079, %299 ], [ %.079, %287 ], [ %.079, %277 ], [ %.079, %276 ], [ %.079, %266 ], [ %.079, %256 ], [ %.079, %255 ], [ %.079, %245 ], [ %.079, %235 ], [ %.079, %234 ], [ %.079, %232 ], [ %.079, %231 ], [ %.079, %229 ], [ %.079, %228 ], [ %.079, %218 ], [ %.079, %205 ], [ %.079, %204 ], [ %.079, %194 ], [ %.079, %184 ], [ %.079, %177 ], [ %.079, %170 ], [ %.079, %168 ], [ %.079, %156 ], [ %.079, %146 ], [ %.079, %145 ], [ %.079, %143 ], [ %.079, %131 ], [ %.079, %121 ], [ %.079, %120 ], [ %.079, %118 ], [ %.079, %106 ], [ %.079, %96 ], [ %.079, %95 ], [ %.079, %93 ], [ %.079, %85 ], [ %.079, %81 ], [ %.079, %80 ], [ %.neg84, %79 ], [ %.079, %78 ], [ %.079, %76 ], [ %.079, %75 ], [ %.079, %65 ], [ %.079, %55 ], [ %.079, %51 ], [ %.079, %50 ], [ %.079, %37 ], [ %.079, %27 ], [ %.079, %24 ], [ %.079, %20 ], [ %.079, %19 ], [ %.079, %15 ]
  %.077.be = phi i32 [ %.077, %14 ], [ %.077, %470 ], [ %.077, %469 ], [ %.077, %468 ], [ %.077, %467 ], [ %.077, %464 ], [ %.077, %463 ], [ %.077, %462 ], [ %.077, %461 ], [ %.077, %460 ], [ %.077, %459 ], [ %.077, %458 ], [ %.077, %457 ], [ %.077, %456 ], [ %.077, %452 ], [ %.077, %450 ], [ %.077, %448 ], [ %.077, %447 ], [ %.077, %436 ], [ %.077, %426 ], [ %.077, %424 ], [ %.077, %423 ], [ %.077, %417 ], [ %.077, %415 ], [ %.077, %408 ], [ %.077, %406 ], [ %.077, %404 ], [ %.077, %393 ], [ %.077, %383 ], [ %.077, %379 ], [ %.077, %378 ], [ %.077, %376 ], [ %.077, %364 ], [ %.077, %354 ], [ %.077, %353 ], [ %.077, %351 ], [ %.077, %350 ], [ %.077, %340 ], [ %.077, %330 ], [ %.077, %329 ], [ %.077, %317 ], [ %.077, %307 ], [ %.077, %301 ], [ %.077, %299 ], [ %.077, %287 ], [ %.077, %277 ], [ %.077, %276 ], [ %.077, %266 ], [ %.077, %256 ], [ %.077, %255 ], [ %.077, %245 ], [ %.077, %235 ], [ %.077, %234 ], [ %.077, %232 ], [ %.077, %231 ], [ %.077, %229 ], [ %.077, %228 ], [ %.077, %218 ], [ %.077, %205 ], [ %.077, %204 ], [ %.077, %194 ], [ %.077, %184 ], [ %.077, %177 ], [ %.077, %170 ], [ %.077, %168 ], [ %.077, %156 ], [ %.077, %146 ], [ %.077, %145 ], [ %.077, %143 ], [ %.077, %131 ], [ %.077, %121 ], [ %.077, %120 ], [ %.077, %118 ], [ %.077, %106 ], [ %.077, %96 ], [ %.077, %95 ], [ %.077, %93 ], [ %.077, %85 ], [ %.077, %81 ], [ %.077, %80 ], [ %.077, %79 ], [ %.077, %78 ], [ %77, %76 ], [ %.077, %75 ], [ %.077, %65 ], [ %.077, %55 ], [ %.077, %51 ], [ %.077, %50 ], [ %.077, %37 ], [ %.077, %27 ], [ %.077, %24 ], [ %.077, %20 ], [ 0, %19 ], [ %.077, %15 ]
  %.075.be = phi i32 [ %.075, %14 ], [ %.075, %470 ], [ %.075, %469 ], [ %.075, %468 ], [ %.075, %467 ], [ %.075, %464 ], [ %.075, %463 ], [ %.075, %462 ], [ %.075, %461 ], [ %.075, %460 ], [ %.075, %459 ], [ %.075, %458 ], [ %.075, %457 ], [ %.075, %456 ], [ %.075, %452 ], [ %.075, %450 ], [ %.075, %448 ], [ %.075, %447 ], [ %.075, %436 ], [ %.075, %426 ], [ %.075, %424 ], [ %.075, %423 ], [ %.075, %417 ], [ %.075, %415 ], [ %.075, %408 ], [ %.075, %406 ], [ %.075, %404 ], [ %.075, %393 ], [ %.075, %383 ], [ %.075, %379 ], [ %.075, %378 ], [ %.075, %376 ], [ %.075, %364 ], [ %.075, %354 ], [ %.075, %353 ], [ %.075, %351 ], [ %.075, %350 ], [ %.075, %340 ], [ %.075, %330 ], [ %.075, %329 ], [ %.075, %317 ], [ %.075, %307 ], [ %.075, %301 ], [ %.075, %299 ], [ %.075, %287 ], [ %.075, %277 ], [ %.075, %276 ], [ %.075, %266 ], [ %.075, %256 ], [ %.075, %255 ], [ %.075, %245 ], [ %.075, %235 ], [ %.075, %234 ], [ %.075, %232 ], [ %.075, %231 ], [ %.075, %229 ], [ %.075, %228 ], [ %.075, %218 ], [ %.075, %205 ], [ %.075, %204 ], [ %.075, %194 ], [ %.075, %184 ], [ %.075, %177 ], [ %.075, %170 ], [ %.075, %168 ], [ %.075, %156 ], [ %.075, %146 ], [ %.075, %145 ], [ %.075, %143 ], [ %.075, %131 ], [ %.075, %121 ], [ %.075, %120 ], [ %.075, %118 ], [ %.075, %106 ], [ %.075, %96 ], [ %.075, %95 ], [ %94, %93 ], [ %.075, %85 ], [ %.075, %81 ], [ 0, %80 ], [ %.075, %79 ], [ %.075, %78 ], [ %.075, %76 ], [ %.075, %75 ], [ %.075, %65 ], [ %.075, %55 ], [ %.075, %51 ], [ %.075, %50 ], [ %.075, %37 ], [ %.075, %27 ], [ %.075, %24 ], [ %.075, %20 ], [ %.075, %19 ], [ %.075, %15 ]
  %.073.be = phi i32 [ %.073, %14 ], [ %.073, %470 ], [ %.073, %469 ], [ %.073, %468 ], [ %.073, %467 ], [ %.073, %464 ], [ %.073, %463 ], [ %.073, %462 ], [ %.neg, %461 ], [ %.073, %460 ], [ %.073, %459 ], [ %.073, %458 ], [ %.073, %457 ], [ %.073, %456 ], [ %.073, %452 ], [ %.073, %450 ], [ %.073, %448 ], [ %.073, %447 ], [ %.073, %436 ], [ %.073, %426 ], [ %.073, %424 ], [ %.073, %423 ], [ %.073, %417 ], [ %.073, %415 ], [ %.073, %408 ], [ %.073, %406 ], [ %.073, %404 ], [ %.073, %393 ], [ %.073, %383 ], [ %.073, %379 ], [ %.073, %378 ], [ %.073, %376 ], [ %.073, %364 ], [ %.073, %354 ], [ %.073, %353 ], [ %.073, %351 ], [ %.073, %350 ], [ %.073, %340 ], [ %.073, %330 ], [ %.073, %329 ], [ %.073, %317 ], [ %.073, %307 ], [ %.073, %301 ], [ %.073, %299 ], [ %.073, %287 ], [ %.073, %277 ], [ %.073, %276 ], [ %.073, %266 ], [ %.073, %256 ], [ %.073, %255 ], [ %.neg83, %245 ], [ %.073, %235 ], [ %.073, %234 ], [ %.073, %232 ], [ %.073, %231 ], [ %.073, %229 ], [ %.073, %228 ], [ %.073, %218 ], [ %.073, %205 ], [ %.073, %204 ], [ %.073, %194 ], [ %.073, %184 ], [ %.073, %177 ], [ %.073, %170 ], [ %.073, %168 ], [ %.073, %156 ], [ %.073, %146 ], [ %.073, %145 ], [ %.073, %143 ], [ %.073, %131 ], [ %.073, %121 ], [ %.073, %120 ], [ %.073, %118 ], [ %.073, %106 ], [ %.073, %96 ], [ 0, %95 ], [ %.073, %93 ], [ %.073, %85 ], [ %.073, %81 ], [ %.073, %80 ], [ %.073, %79 ], [ %.073, %78 ], [ %.073, %76 ], [ %.073, %75 ], [ %.073, %65 ], [ %.073, %55 ], [ %.073, %51 ], [ %.073, %50 ], [ %.073, %37 ], [ %.073, %27 ], [ %.073, %24 ], [ %.073, %20 ], [ %.073, %19 ], [ %.073, %15 ]
  %.071.be = phi i32 [ %.071, %14 ], [ %.071, %470 ], [ %.071, %469 ], [ %.071, %468 ], [ %.071, %467 ], [ %.071, %464 ], [ %.071, %463 ], [ %.071, %462 ], [ %.071, %461 ], [ %.071, %460 ], [ %.071, %459 ], [ %.071, %458 ], [ %.071, %457 ], [ %.071, %456 ], [ %.071, %452 ], [ %.071, %450 ], [ %.071, %448 ], [ %.071, %447 ], [ %.071, %436 ], [ %.071, %426 ], [ %.071, %424 ], [ %.071, %423 ], [ %.071, %417 ], [ %.071, %415 ], [ %.071, %408 ], [ %.071, %406 ], [ %.071, %404 ], [ %.071, %393 ], [ %.071, %383 ], [ %.071, %379 ], [ %.071, %378 ], [ %.071, %376 ], [ %.071, %364 ], [ %.071, %354 ], [ %.071, %353 ], [ %.071, %351 ], [ %.071, %350 ], [ %.071, %340 ], [ %.071, %330 ], [ %.071, %329 ], [ %.071, %317 ], [ %.071, %307 ], [ %.071, %301 ], [ %.071, %299 ], [ %.071, %287 ], [ %.071, %277 ], [ %.071, %276 ], [ %.071, %266 ], [ %.071, %256 ], [ %.071, %255 ], [ %.071, %245 ], [ %.071, %235 ], [ %.071, %234 ], [ %233, %232 ], [ %.071, %231 ], [ %.071, %229 ], [ %.071, %228 ], [ %.071, %218 ], [ %.071, %205 ], [ %.071, %204 ], [ %.071, %194 ], [ %.071, %184 ], [ %.071, %177 ], [ %.071, %170 ], [ %.071, %168 ], [ %.071, %156 ], [ %.071, %146 ], [ %.071, %145 ], [ %.071, %143 ], [ %.071, %131 ], [ %.071, %121 ], [ 0, %120 ], [ %.071, %118 ], [ %.071, %106 ], [ %.071, %96 ], [ %.071, %95 ], [ %.071, %93 ], [ %.071, %85 ], [ %.071, %81 ], [ %.071, %80 ], [ %.071, %79 ], [ %.071, %78 ], [ %.071, %76 ], [ %.071, %75 ], [ %.071, %65 ], [ %.071, %55 ], [ %.071, %51 ], [ %.071, %50 ], [ %.071, %37 ], [ %.071, %27 ], [ %.071, %24 ], [ %.071, %20 ], [ %.071, %19 ], [ %.071, %15 ]
  %.069.be = phi i32 [ %.069, %14 ], [ %.069, %470 ], [ %.069, %469 ], [ %.069, %468 ], [ %.069, %467 ], [ %.069, %464 ], [ %.069, %463 ], [ %.069, %462 ], [ %.069, %461 ], [ %.069, %460 ], [ %.069, %459 ], [ %.069, %458 ], [ %.069, %457 ], [ %.069, %456 ], [ %.069, %452 ], [ %.069, %450 ], [ %.069, %448 ], [ %.069, %447 ], [ %.069, %436 ], [ %.069, %426 ], [ %.069, %424 ], [ %.069, %423 ], [ %.069, %417 ], [ %.069, %415 ], [ %.069, %408 ], [ %.069, %406 ], [ %.069, %404 ], [ %.069, %393 ], [ %.069, %383 ], [ %.069, %379 ], [ %.069, %378 ], [ %.069, %376 ], [ %.069, %364 ], [ %.069, %354 ], [ %.069, %353 ], [ %.069, %351 ], [ %.069, %350 ], [ %.069, %340 ], [ %.069, %330 ], [ %.069, %329 ], [ %.069, %317 ], [ %.069, %307 ], [ %.069, %301 ], [ %.069, %299 ], [ %.069, %287 ], [ %.069, %277 ], [ %.069, %276 ], [ %.069, %266 ], [ %.069, %256 ], [ %.069, %255 ], [ %.069, %245 ], [ %.069, %235 ], [ %.069, %234 ], [ %.069, %232 ], [ %.069, %231 ], [ %230, %229 ], [ %.069, %228 ], [ %.069, %218 ], [ %.069, %205 ], [ %.069, %204 ], [ %.069, %194 ], [ %.069, %184 ], [ %.069, %177 ], [ %.069, %170 ], [ %.069, %168 ], [ %.069, %156 ], [ %.069, %146 ], [ 0, %145 ], [ %.069, %143 ], [ %.069, %131 ], [ %.069, %121 ], [ %.069, %120 ], [ %.069, %118 ], [ %.069, %106 ], [ %.069, %96 ], [ %.069, %95 ], [ %.069, %93 ], [ %.069, %85 ], [ %.069, %81 ], [ %.069, %80 ], [ %.069, %79 ], [ %.069, %78 ], [ %.069, %76 ], [ %.069, %75 ], [ %.069, %65 ], [ %.069, %55 ], [ %.069, %51 ], [ %.069, %50 ], [ %.069, %37 ], [ %.069, %27 ], [ %.069, %24 ], [ %.069, %20 ], [ %.069, %19 ], [ %.069, %15 ]
  %.067.be = phi i32 [ %.067, %14 ], [ %.067, %470 ], [ %.067, %469 ], [ %.067, %468 ], [ %.067, %467 ], [ %.067, %464 ], [ %.067, %463 ], [ 0, %462 ], [ %.067, %461 ], [ %.067, %460 ], [ %.067, %459 ], [ %.067, %458 ], [ %.067, %457 ], [ %.067, %456 ], [ %.067, %452 ], [ %.067, %450 ], [ %.067, %448 ], [ %.067, %447 ], [ %.067, %436 ], [ %.067, %426 ], [ %.067, %424 ], [ %.067, %423 ], [ %.067, %417 ], [ %.067, %415 ], [ %.067, %408 ], [ %.067, %406 ], [ %.067, %404 ], [ %.067, %393 ], [ %.067, %383 ], [ %.067, %379 ], [ %.067, %378 ], [ %.067, %376 ], [ %.067, %364 ], [ %.067, %354 ], [ %.067, %353 ], [ %352, %351 ], [ %.067, %350 ], [ %.067, %340 ], [ %.067, %330 ], [ %.067, %329 ], [ %.067, %317 ], [ %.067, %307 ], [ %.067, %301 ], [ %.067, %299 ], [ %.067, %287 ], [ %.067, %277 ], [ %.067, %276 ], [ 0, %266 ], [ %.067, %256 ], [ %.067, %255 ], [ %.067, %245 ], [ %.067, %235 ], [ %.067, %234 ], [ %.067, %232 ], [ %.067, %231 ], [ %.067, %229 ], [ %.067, %228 ], [ %.067, %218 ], [ %.067, %205 ], [ %.067, %204 ], [ %.067, %194 ], [ %.067, %184 ], [ %.067, %177 ], [ %.067, %170 ], [ %.067, %168 ], [ %.067, %156 ], [ %.067, %146 ], [ %.067, %145 ], [ %.067, %143 ], [ %.067, %131 ], [ %.067, %121 ], [ %.067, %120 ], [ %.067, %118 ], [ %.067, %106 ], [ %.067, %96 ], [ %.067, %95 ], [ %.067, %93 ], [ %.067, %85 ], [ %.067, %81 ], [ %.067, %80 ], [ %.067, %79 ], [ %.067, %78 ], [ %.067, %76 ], [ %.067, %75 ], [ %.067, %65 ], [ %.067, %55 ], [ %.067, %51 ], [ %.067, %50 ], [ %.067, %37 ], [ %.067, %27 ], [ %.067, %24 ], [ %.067, %20 ], [ %.067, %19 ], [ %.067, %15 ]
  %.065.be = phi i32 [ %.065, %14 ], [ %.065, %470 ], [ %.065, %469 ], [ %.065, %468 ], [ %.065, %467 ], [ %.065, %464 ], [ %.065, %463 ], [ %.065, %462 ], [ %.065, %461 ], [ %.065, %460 ], [ %.065, %459 ], [ %.065, %458 ], [ %.065, %457 ], [ %.065, %456 ], [ %.065, %452 ], [ %.065, %450 ], [ %449, %448 ], [ %.065, %447 ], [ %.065, %436 ], [ %.065, %426 ], [ %.065, %424 ], [ %.065, %423 ], [ %.065, %417 ], [ %.065, %415 ], [ %.065, %408 ], [ %.065, %406 ], [ %.065, %404 ], [ %.065, %393 ], [ %.065, %383 ], [ %.065, %379 ], [ %.065, %378 ], [ %.065, %376 ], [ %.065, %364 ], [ %.065, %354 ], [ 0, %353 ], [ %.065, %351 ], [ %.065, %350 ], [ %.065, %340 ], [ %.065, %330 ], [ %.065, %329 ], [ %.065, %317 ], [ %.065, %307 ], [ %.065, %301 ], [ %.065, %299 ], [ %.065, %287 ], [ %.065, %277 ], [ %.065, %276 ], [ %.065, %266 ], [ %.065, %256 ], [ %.065, %255 ], [ %.065, %245 ], [ %.065, %235 ], [ %.065, %234 ], [ %.065, %232 ], [ %.065, %231 ], [ %.065, %229 ], [ %.065, %228 ], [ %.065, %218 ], [ %.065, %205 ], [ %.065, %204 ], [ %.065, %194 ], [ %.065, %184 ], [ %.065, %177 ], [ %.065, %170 ], [ %.065, %168 ], [ %.065, %156 ], [ %.065, %146 ], [ %.065, %145 ], [ %.065, %143 ], [ %.065, %131 ], [ %.065, %121 ], [ %.065, %120 ], [ %.065, %118 ], [ %.065, %106 ], [ %.065, %96 ], [ %.065, %95 ], [ %.065, %93 ], [ %.065, %85 ], [ %.065, %81 ], [ %.065, %80 ], [ %.065, %79 ], [ %.065, %78 ], [ %.065, %76 ], [ %.065, %75 ], [ %.065, %65 ], [ %.065, %55 ], [ %.065, %51 ], [ %.065, %50 ], [ %.065, %37 ], [ %.065, %27 ], [ %.065, %24 ], [ %.065, %20 ], [ %.065, %19 ], [ %.065, %15 ]
  %.063.be = phi i32 [ %.063, %14 ], [ %.063, %470 ], [ %.063, %469 ], [ %.063, %468 ], [ %.063, %467 ], [ %.063, %464 ], [ %.063, %463 ], [ %.063, %462 ], [ %.063, %461 ], [ %.063, %460 ], [ %.063, %459 ], [ %.063, %458 ], [ %.063, %457 ], [ %.063, %456 ], [ %.063, %452 ], [ %.063, %450 ], [ %.063, %448 ], [ %.063, %447 ], [ %.063, %436 ], [ %.063, %426 ], [ %425, %424 ], [ %.063, %423 ], [ %.063, %417 ], [ %.063, %415 ], [ %.063, %408 ], [ %.063, %406 ], [ %.063, %404 ], [ %.063, %393 ], [ %.063, %383 ], [ %.063, %379 ], [ 0, %378 ], [ %.063, %376 ], [ %.063, %364 ], [ %.063, %354 ], [ %.063, %353 ], [ %.063, %351 ], [ %.063, %350 ], [ %.063, %340 ], [ %.063, %330 ], [ %.063, %329 ], [ %.063, %317 ], [ %.063, %307 ], [ %.063, %301 ], [ %.063, %299 ], [ %.063, %287 ], [ %.063, %277 ], [ %.063, %276 ], [ %.063, %266 ], [ %.063, %256 ], [ %.063, %255 ], [ %.063, %245 ], [ %.063, %235 ], [ %.063, %234 ], [ %.063, %232 ], [ %.063, %231 ], [ %.063, %229 ], [ %.063, %228 ], [ %.063, %218 ], [ %.063, %205 ], [ %.063, %204 ], [ %.063, %194 ], [ %.063, %184 ], [ %.063, %177 ], [ %.063, %170 ], [ %.063, %168 ], [ %.063, %156 ], [ %.063, %146 ], [ %.063, %145 ], [ %.063, %143 ], [ %.063, %131 ], [ %.063, %121 ], [ %.063, %120 ], [ %.063, %118 ], [ %.063, %106 ], [ %.063, %96 ], [ %.063, %95 ], [ %.063, %93 ], [ %.063, %85 ], [ %.063, %81 ], [ %.063, %80 ], [ %.063, %79 ], [ %.063, %78 ], [ %.063, %76 ], [ %.063, %75 ], [ %.063, %65 ], [ %.063, %55 ], [ %.063, %51 ], [ %.063, %50 ], [ %.063, %37 ], [ %.063, %27 ], [ %.063, %24 ], [ %.063, %20 ], [ %.063, %19 ], [ %.063, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ -1189427972, %470 ], [ -244841461, %469 ], [ 2053191675, %468 ], [ 1849866065, %467 ], [ -1320281505, %464 ], [ -157642078, %463 ], [ -57810641, %462 ], [ -577202854, %461 ], [ 1929779962, %460 ], [ -1640170227, %459 ], [ -1398499792, %458 ], [ -1766878394, %457 ], [ -1119309190, %456 ], [ -335092995, %452 ], [ -312147339, %450 ], [ -1481069863, %448 ], [ 349695357, %447 ], [ %446, %436 ], [ %435, %426 ], [ -310211363, %424 ], [ -1058166082, %423 ], [ -2069194415, %417 ], [ -2069194415, %415 ], [ %414, %408 ], [ -1522700007, %406 ], [ %405, %404 ], [ %403, %393 ], [ %392, %383 ], [ %382, %379 ], [ -310211363, %378 ], [ %377, %376 ], [ %375, %364 ], [ %363, %354 ], [ -1481069863, %353 ], [ 1125861568, %351 ], [ -1766618364, %350 ], [ %349, %340 ], [ %339, %330 ], [ -312147339, %329 ], [ %328, %317 ], [ %316, %307 ], [ %306, %301 ], [ %300, %299 ], [ %298, %287 ], [ %286, %277 ], [ 1125861568, %276 ], [ %275, %266 ], [ %265, %256 ], [ -658585023, %255 ], [ %254, %245 ], [ %244, %235 ], [ 706704898, %234 ], [ 613333975, %232 ], [ -542945375, %231 ], [ 111177329, %229 ], [ -401642173, %228 ], [ -1305075680, %218 ], [ %217, %205 ], [ -401642173, %204 ], [ %203, %194 ], [ %193, %184 ], [ %183, %177 ], [ %176, %170 ], [ %169, %168 ], [ %167, %156 ], [ %155, %146 ], [ 111177329, %145 ], [ %144, %143 ], [ %142, %131 ], [ %130, %121 ], [ 613333975, %120 ], [ %119, %118 ], [ %117, %106 ], [ %105, %96 ], [ -658585023, %95 ], [ 1168455432, %93 ], [ -372566504, %85 ], [ %84, %81 ], [ 1168455432, %80 ], [ 1738747630, %79 ], [ 1316718663, %78 ], [ -749531811, %76 ], [ 222028491, %75 ], [ %74, %65 ], [ %64, %55 ], [ 699954714, %51 ], [ 699954714, %50 ], [ %49, %37 ], [ %36, %27 ], [ %26, %24 ], [ %23, %20 ], [ -749531811, %19 ], [ %18, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* %7, align 4
  %17 = icmp ult i32 %.079, %16
  %18 = select i1 %17, i32 774271957, i32 -1502063802
  br label %.backedge

19:                                               ; preds = %14
  br label %.backedge

20:                                               ; preds = %14
  %21 = load i32, i32* %7, align 4
  %22 = icmp ult i32 %.077, %21
  %23 = select i1 %22, i32 1986027616, i32 1358124904
  br label %.backedge

24:                                               ; preds = %14
  %25 = icmp eq i32 %.079, %.077
  %26 = select i1 %25, i32 1221650249, i32 -1046224555
  br label %.backedge

27:                                               ; preds = %14
  %28 = load i32, i32* @x.3, align 4
  %29 = load i32, i32* @y.4, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -335092995, i32 572258111
  br label %.backedge

37:                                               ; preds = %14
  %38 = zext i32 %.079 to i64
  %39 = zext i32 %.077 to i64
  %40 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %38, i64 %39
  store i64 0, i64* %40, align 8
  %41 = load i32, i32* @x.3, align 4
  %42 = load i32, i32* @y.4, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1631145908, i32 572258111
  br label %.backedge

50:                                               ; preds = %14
  br label %.backedge

51:                                               ; preds = %14
  %52 = zext i32 %.079 to i64
  %53 = zext i32 %.077 to i64
  %54 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %52, i64 %53
  store i64 2147483647, i64* %54, align 8
  br label %.backedge

55:                                               ; preds = %14
  %56 = load i32, i32* @x.3, align 4
  %57 = load i32, i32* @y.4, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 -1119309190, i32 -612245629
  br label %.backedge

65:                                               ; preds = %14
  %66 = load i32, i32* @x.3, align 4
  %67 = load i32, i32* @y.4, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 1371442871, i32 -612245629
  br label %.backedge

75:                                               ; preds = %14
  br label %.backedge

76:                                               ; preds = %14
  %77 = add i32 %.077, 1
  br label %.backedge

78:                                               ; preds = %14
  br label %.backedge

79:                                               ; preds = %14
  %.neg84 = add i32 %.079, 1
  br label %.backedge

80:                                               ; preds = %14
  br label %.backedge

81:                                               ; preds = %14
  %82 = load i32, i32* %8, align 4
  %83 = icmp ult i32 %.075, %82
  %84 = select i1 %83, i32 -1090406481, i32 1496154263
  br label %.backedge

85:                                               ; preds = %14
  %86 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %9)
  %87 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* nonnull %86, i64* nonnull dereferenceable(8) %10)
  %88 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* nonnull %87, i64* nonnull dereferenceable(8) %11)
  %89 = load i64, i64* %11, align 8
  %90 = load i64, i64* %9, align 8
  %91 = load i64, i64* %10, align 8
  %92 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %90, i64 %91
  store i64 %89, i64* %92, align 8
  br label %.backedge

93:                                               ; preds = %14
  %94 = add i32 %.075, 1
  br label %.backedge

95:                                               ; preds = %14
  br label %.backedge

96:                                               ; preds = %14
  %97 = load i32, i32* @x.3, align 4
  %98 = load i32, i32* @y.4, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 -1766878394, i32 98589202
  br label %.backedge

106:                                              ; preds = %14
  %107 = load i32, i32* %7, align 4
  %108 = icmp ult i32 %.073, %107
  store i1 %108, i1* %6, align 1
  %109 = load i32, i32* @x.3, align 4
  %110 = load i32, i32* @y.4, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 -1290294836, i32 98589202
  br label %.backedge

118:                                              ; preds = %14
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %119 = select i1 %.0..0..0., i32 -934330220, i32 -484396302
  br label %.backedge

120:                                              ; preds = %14
  br label %.backedge

121:                                              ; preds = %14
  %122 = load i32, i32* @x.3, align 4
  %123 = load i32, i32* @y.4, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 -1398499792, i32 -1649634291
  br label %.backedge

131:                                              ; preds = %14
  %132 = load i32, i32* %7, align 4
  %133 = icmp ult i32 %.071, %132
  store i1 %133, i1* %5, align 1
  %134 = load i32, i32* @x.3, align 4
  %135 = load i32, i32* @y.4, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 1827581088, i32 -1649634291
  br label %.backedge

143:                                              ; preds = %14
  %.0..0..0.58 = load volatile i1, i1* %5, align 1
  %144 = select i1 %.0..0..0.58, i32 265313884, i32 1074001702
  br label %.backedge

145:                                              ; preds = %14
  br label %.backedge

146:                                              ; preds = %14
  %147 = load i32, i32* @x.3, align 4
  %148 = load i32, i32* @y.4, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 -1640170227, i32 1419285304
  br label %.backedge

156:                                              ; preds = %14
  %157 = load i32, i32* %7, align 4
  %158 = icmp ult i32 %.069, %157
  store i1 %158, i1* %4, align 1
  %159 = load i32, i32* @x.3, align 4
  %160 = load i32, i32* @y.4, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 -1063243000, i32 1419285304
  br label %.backedge

168:                                              ; preds = %14
  %.0..0..0.59 = load volatile i1, i1* %4, align 1
  %169 = select i1 %.0..0..0.59, i32 -1718207631, i32 1312287609
  br label %.backedge

170:                                              ; preds = %14
  %171 = zext i32 %.071 to i64
  %172 = zext i32 %.073 to i64
  %173 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %171, i64 %172
  %174 = load i64, i64* %173, align 8
  %175 = icmp eq i64 %174, 2147483647
  %176 = select i1 %175, i32 -1181362483, i32 1003452896
  br label %.backedge

177:                                              ; preds = %14
  %178 = zext i32 %.073 to i64
  %179 = zext i32 %.069 to i64
  %180 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %178, i64 %179
  %181 = load i64, i64* %180, align 8
  %182 = icmp eq i64 %181, 2147483647
  %183 = select i1 %182, i32 -1181362483, i32 -1979134062
  br label %.backedge

184:                                              ; preds = %14
  %185 = load i32, i32* @x.3, align 4
  %186 = load i32, i32* @y.4, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 1929779962, i32 -1516498050
  br label %.backedge

194:                                              ; preds = %14
  %195 = load i32, i32* @x.3, align 4
  %196 = load i32, i32* @y.4, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 1925691370, i32 -1516498050
  br label %.backedge

204:                                              ; preds = %14
  br label %.backedge

205:                                              ; preds = %14
  %206 = zext i32 %.071 to i64
  %207 = zext i32 %.073 to i64
  %208 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %206, i64 %207
  %209 = load i64, i64* %208, align 8
  %210 = zext i32 %.069 to i64
  %211 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %207, i64 %210
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, %209
  %214 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %206, i64 %210
  %215 = load i64, i64* %214, align 8
  %216 = icmp slt i64 %213, %215
  %217 = select i1 %216, i32 -354383029, i32 -1305075680
  br label %.backedge

218:                                              ; preds = %14
  %219 = zext i32 %.071 to i64
  %220 = zext i32 %.073 to i64
  %221 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %219, i64 %220
  %222 = load i64, i64* %221, align 8
  %223 = zext i32 %.069 to i64
  %224 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %220, i64 %223
  %225 = load i64, i64* %224, align 8
  %226 = add i64 %225, %222
  %227 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %219, i64 %223
  store i64 %226, i64* %227, align 8
  br label %.backedge

228:                                              ; preds = %14
  br label %.backedge

229:                                              ; preds = %14
  %230 = add i32 %.069, 1
  br label %.backedge

231:                                              ; preds = %14
  br label %.backedge

232:                                              ; preds = %14
  %233 = add i32 %.071, 1
  br label %.backedge

234:                                              ; preds = %14
  br label %.backedge

235:                                              ; preds = %14
  %236 = load i32, i32* @x.3, align 4
  %237 = load i32, i32* @y.4, align 4
  %238 = add i32 %236, -1
  %239 = mul i32 %238, %236
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %242, %241
  %244 = select i1 %243, i32 -577202854, i32 -1102826007
  br label %.backedge

245:                                              ; preds = %14
  %.neg83 = add i32 %.073, 1
  %246 = load i32, i32* @x.3, align 4
  %247 = load i32, i32* @y.4, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 -967522268, i32 -1102826007
  br label %.backedge

255:                                              ; preds = %14
  br label %.backedge

256:                                              ; preds = %14
  %257 = load i32, i32* @x.3, align 4
  %258 = load i32, i32* @y.4, align 4
  %259 = add i32 %257, -1
  %260 = mul i32 %259, %257
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %263, %262
  %265 = select i1 %264, i32 -57810641, i32 -577590663
  br label %.backedge

266:                                              ; preds = %14
  %267 = load i32, i32* @x.3, align 4
  %268 = load i32, i32* @y.4, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 -222893537, i32 -577590663
  br label %.backedge

276:                                              ; preds = %14
  br label %.backedge

277:                                              ; preds = %14
  %278 = load i32, i32* @x.3, align 4
  %279 = load i32, i32* @y.4, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 -157642078, i32 1520433256
  br label %.backedge

287:                                              ; preds = %14
  %288 = load i32, i32* %7, align 4
  %289 = icmp ult i32 %.067, %288
  store i1 %289, i1* %3, align 1
  %290 = load i32, i32* @x.3, align 4
  %291 = load i32, i32* @y.4, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 2070932466, i32 1520433256
  br label %.backedge

299:                                              ; preds = %14
  %.0..0..0.60 = load volatile i1, i1* %3, align 1
  %300 = select i1 %.0..0..0.60, i32 321842945, i32 -1856418452
  br label %.backedge

301:                                              ; preds = %14
  %302 = zext i32 %.067 to i64
  %303 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %302, i64 %302
  %304 = load i64, i64* %303, align 8
  %305 = icmp slt i64 %304, 0
  %306 = select i1 %305, i32 -992767887, i32 143233152
  br label %.backedge

307:                                              ; preds = %14
  %308 = load i32, i32* @x.3, align 4
  %309 = load i32, i32* @y.4, align 4
  %310 = add i32 %308, -1
  %311 = mul i32 %310, %308
  %312 = and i32 %311, 1
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %314, %313
  %316 = select i1 %315, i32 -1320281505, i32 -3390513
  br label %.backedge

317:                                              ; preds = %14
  %318 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %319 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %318, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %320 = load i32, i32* @x.3, align 4
  %321 = load i32, i32* @y.4, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 -1736072024, i32 -3390513
  br label %.backedge

329:                                              ; preds = %14
  br label %.backedge

330:                                              ; preds = %14
  %331 = load i32, i32* @x.3, align 4
  %332 = load i32, i32* @y.4, align 4
  %333 = add i32 %331, -1
  %334 = mul i32 %333, %331
  %335 = and i32 %334, 1
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %337, %336
  %339 = select i1 %338, i32 1849866065, i32 815495067
  br label %.backedge

340:                                              ; preds = %14
  %341 = load i32, i32* @x.3, align 4
  %342 = load i32, i32* @y.4, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 -2089136578, i32 815495067
  br label %.backedge

350:                                              ; preds = %14
  br label %.backedge

351:                                              ; preds = %14
  %352 = add i32 %.067, 1
  br label %.backedge

353:                                              ; preds = %14
  br label %.backedge

354:                                              ; preds = %14
  %355 = load i32, i32* @x.3, align 4
  %356 = load i32, i32* @y.4, align 4
  %357 = add i32 %355, -1
  %358 = mul i32 %357, %355
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %361, %360
  %363 = select i1 %362, i32 2053191675, i32 -932168308
  br label %.backedge

364:                                              ; preds = %14
  %365 = load i32, i32* %7, align 4
  %366 = icmp ult i32 %.065, %365
  store i1 %366, i1* %2, align 1
  %367 = load i32, i32* @x.3, align 4
  %368 = load i32, i32* @y.4, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 100825132, i32 -932168308
  br label %.backedge

376:                                              ; preds = %14
  %.0..0..0.61 = load volatile i1, i1* %2, align 1
  %377 = select i1 %.0..0..0.61, i32 -334481103, i32 1302214341
  br label %.backedge

378:                                              ; preds = %14
  br label %.backedge

379:                                              ; preds = %14
  %380 = load i32, i32* %7, align 4
  %381 = icmp ult i32 %.063, %380
  %382 = select i1 %381, i32 -1406432702, i32 1647441382
  br label %.backedge

383:                                              ; preds = %14
  %384 = load i32, i32* @x.3, align 4
  %385 = load i32, i32* @y.4, align 4
  %386 = add i32 %384, -1
  %387 = mul i32 %386, %384
  %388 = and i32 %387, 1
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %390, %389
  %392 = select i1 %391, i32 -244841461, i32 1902864841
  br label %.backedge

393:                                              ; preds = %14
  %394 = icmp ne i32 %.063, 0
  store i1 %394, i1* %1, align 1
  %395 = load i32, i32* @x.3, align 4
  %396 = load i32, i32* @y.4, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 -726811380, i32 1902864841
  br label %.backedge

404:                                              ; preds = %14
  %.0..0..0.62 = load volatile i1, i1* %1, align 1
  %405 = select i1 %.0..0..0.62, i32 -269826292, i32 -1522700007
  br label %.backedge

406:                                              ; preds = %14
  %407 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

408:                                              ; preds = %14
  %409 = zext i32 %.065 to i64
  %410 = zext i32 %.063 to i64
  %411 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %409, i64 %410
  %412 = load i64, i64* %411, align 8
  %413 = icmp eq i64 %412, 2147483647
  %414 = select i1 %413, i32 211235963, i32 1787851201
  br label %.backedge

415:                                              ; preds = %14
  %416 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

417:                                              ; preds = %14
  %418 = zext i32 %.065 to i64
  %419 = zext i32 %.063 to i64
  %420 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %418, i64 %419
  %421 = load i64, i64* %420, align 8
  %422 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEl(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %421)
  br label %.backedge

423:                                              ; preds = %14
  br label %.backedge

424:                                              ; preds = %14
  %425 = add i32 %.063, 1
  br label %.backedge

426:                                              ; preds = %14
  %427 = load i32, i32* @x.3, align 4
  %428 = load i32, i32* @y.4, align 4
  %429 = add i32 %427, -1
  %430 = mul i32 %429, %427
  %431 = and i32 %430, 1
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %433, %432
  %435 = select i1 %434, i32 -1189427972, i32 -1707029258
  br label %.backedge

436:                                              ; preds = %14
  %437 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %438 = load i32, i32* @x.3, align 4
  %439 = load i32, i32* @y.4, align 4
  %440 = add i32 %438, -1
  %441 = mul i32 %440, %438
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %444, %443
  %446 = select i1 %445, i32 -781340398, i32 -1707029258
  br label %.backedge

447:                                              ; preds = %14
  br label %.backedge

448:                                              ; preds = %14
  %449 = add i32 %.065, 1
  br label %.backedge

450:                                              ; preds = %14
  br label %.backedge

451:                                              ; preds = %14
  ret i32 0

452:                                              ; preds = %14
  %453 = zext i32 %.079 to i64
  %454 = zext i32 %.077 to i64
  %455 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL5graph, i64 0, i64 %453, i64 %454
  store i64 0, i64* %455, align 8
  br label %.backedge

456:                                              ; preds = %14
  br label %.backedge

457:                                              ; preds = %14
  br label %.backedge

458:                                              ; preds = %14
  br label %.backedge

459:                                              ; preds = %14
  br label %.backedge

460:                                              ; preds = %14
  br label %.backedge

461:                                              ; preds = %14
  %.neg = add i32 %.073, 1
  br label %.backedge

462:                                              ; preds = %14
  br label %.backedge

463:                                              ; preds = %14
  br label %.backedge

464:                                              ; preds = %14
  %465 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %466 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %465, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

467:                                              ; preds = %14
  br label %.backedge

468:                                              ; preds = %14
  br label %.backedge

469:                                              ; preds = %14
  br label %.backedge

470:                                              ; preds = %14
  %471 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERj(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEl(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s678288294.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.5, align 4
  %4 = load i32, i32* @y.6, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1559995578, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1559995578, label %11
    i32 -369740354, label %14
    i32 1524200811, label %24
    i32 1719309413, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -369740354, i32 1719309413
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1524200811, i32 1719309413
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -369740354, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
