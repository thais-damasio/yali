; ModuleID = 'build_ollvm/programs/p02363/s006123352.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s006123352.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s006123352.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [110 x [110 x i64]], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %13, i32* nonnull dereferenceable(4) %7)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.085 = phi i32 [ 0, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.0 = phi i32 [ 1079235977, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1079235977, label %16
    i32 2127509888, label %19
    i32 365283938, label %20
    i32 1808938812, label %23
    i32 794765555, label %26
    i32 -1254291171, label %30
    i32 -423432729, label %40
    i32 1253664292, label %53
    i32 263072623, label %54
    i32 -290971928, label %55
    i32 387586158, label %56
    i32 -19068365, label %57
    i32 -2037515574, label %67
    i32 -1296890560, label %77
    i32 313024572, label %78
    i32 192252563, label %79
    i32 621284029, label %89
    i32 -1349992624, label %101
    i32 -468649549, label %103
    i32 -1328410937, label %113
    i32 -1419499655, label %138
    i32 414316011, label %139
    i32 -1811582935, label %140
    i32 1317177778, label %141
    i32 -1407026962, label %145
    i32 -23560533, label %146
    i32 1502187562, label %156
    i32 -1499409559, label %168
    i32 1689075495, label %170
    i32 1405301111, label %180
    i32 -1436985688, label %190
    i32 -856465435, label %191
    i32 -351625618, label %195
    i32 -393589225, label %205
    i32 1977373276, label %220
    i32 -1299693152, label %222
    i32 -1213852728, label %228
    i32 918569855, label %238
    i32 1680234891, label %259
    i32 618399709, label %260
    i32 -1175312162, label %261
    i32 -869569117, label %271
    i32 -1504697369, label %282
    i32 367153018, label %283
    i32 1500217887, label %284
    i32 756305787, label %294
    i32 -1339980778, label %305
    i32 1076128871, label %306
    i32 -246874009, label %316
    i32 -1598102163, label %326
    i32 -1249137767, label %327
    i32 -444333450, label %329
    i32 740427245, label %330
    i32 -145240241, label %334
    i32 1360638198, label %344
    i32 20219348, label %358
    i32 786427169, label %360
    i32 -1532861548, label %363
    i32 43134257, label %364
    i32 -852928663, label %366
    i32 -209505376, label %376
    i32 -1737138942, label %386
    i32 -2118628375, label %387
    i32 1996260867, label %397
    i32 1784073945, label %409
    i32 -638574893, label %411
    i32 291787294, label %421
    i32 -599829972, label %431
    i32 -949977229, label %432
    i32 980607664, label %436
    i32 -567528467, label %443
    i32 658932502, label %445
    i32 -1987897864, label %451
    i32 -1269209843, label %455
    i32 -1964600019, label %457
    i32 577826994, label %458
    i32 -76607521, label %460
    i32 353626362, label %462
    i32 -1909989457, label %464
    i32 -55302452, label %465
    i32 -26244109, label %466
    i32 -2031428767, label %470
    i32 325828732, label %472
    i32 -105297110, label %473
    i32 333947676, label %489
    i32 459860062, label %490
    i32 -175938729, label %491
    i32 972947432, label %492
    i32 1591727720, label %504
    i32 1149596373, label %506
    i32 1910685945, label %508
    i32 -1200038806, label %509
    i32 -1580517628, label %510
    i32 -1017319574, label %511
    i32 1875556241, label %512
  ]

.backedge:                                        ; preds = %15, %512, %511, %510, %509, %508, %506, %504, %492, %491, %490, %489, %473, %472, %470, %466, %464, %462, %460, %458, %457, %455, %451, %445, %443, %436, %432, %431, %421, %411, %409, %397, %387, %386, %376, %366, %364, %363, %360, %358, %344, %334, %330, %329, %327, %326, %316, %306, %305, %294, %284, %283, %282, %271, %261, %260, %259, %238, %228, %222, %220, %205, %195, %191, %190, %180, %170, %168, %156, %146, %145, %141, %140, %139, %138, %113, %103, %101, %89, %79, %78, %77, %67, %57, %56, %55, %54, %53, %40, %30, %26, %23, %20, %19, %16
  %.085.be = phi i32 [ %.085, %15 ], [ %.085, %512 ], [ %.085, %511 ], [ %.085, %510 ], [ %.085, %509 ], [ %.085, %508 ], [ %.085, %506 ], [ %.085, %504 ], [ %.085, %492 ], [ %.085, %491 ], [ %.085, %490 ], [ %.085, %489 ], [ %.085, %473 ], [ %.085, %472 ], [ %471, %470 ], [ %.085, %466 ], [ %.085, %464 ], [ %.085, %462 ], [ %.085, %460 ], [ %.085, %458 ], [ %.085, %457 ], [ %.085, %455 ], [ %.085, %451 ], [ %.085, %445 ], [ %.085, %443 ], [ %.085, %436 ], [ %.085, %432 ], [ %.085, %431 ], [ %.085, %421 ], [ %.085, %411 ], [ %.085, %409 ], [ %.085, %397 ], [ %.085, %387 ], [ %.085, %386 ], [ %.085, %376 ], [ %.085, %366 ], [ %.085, %364 ], [ %.085, %363 ], [ %.085, %360 ], [ %.085, %358 ], [ %.085, %344 ], [ %.085, %334 ], [ %.085, %330 ], [ %.085, %329 ], [ %.085, %327 ], [ %.085, %326 ], [ %.085, %316 ], [ %.085, %306 ], [ %.085, %305 ], [ %.085, %294 ], [ %.085, %284 ], [ %.085, %283 ], [ %.085, %282 ], [ %.085, %271 ], [ %.085, %261 ], [ %.085, %260 ], [ %.085, %259 ], [ %.085, %238 ], [ %.085, %228 ], [ %.085, %222 ], [ %.085, %220 ], [ %.085, %205 ], [ %.085, %195 ], [ %.085, %191 ], [ %.085, %190 ], [ %.085, %180 ], [ %.085, %170 ], [ %.085, %168 ], [ %.085, %156 ], [ %.085, %146 ], [ %.085, %145 ], [ %.085, %141 ], [ %.085, %140 ], [ %.085, %139 ], [ %.085, %138 ], [ %.085, %113 ], [ %.085, %103 ], [ %.085, %101 ], [ %.085, %89 ], [ %.085, %79 ], [ %.085, %78 ], [ %.085, %77 ], [ %.neg90, %67 ], [ %.085, %57 ], [ %.085, %56 ], [ %.085, %55 ], [ %.085, %54 ], [ %.085, %53 ], [ %.085, %40 ], [ %.085, %30 ], [ %.085, %26 ], [ %.085, %23 ], [ %.085, %20 ], [ %.085, %19 ], [ %.085, %16 ]
  %.083.be = phi i32 [ %.083, %15 ], [ %.083, %512 ], [ %.083, %511 ], [ %.083, %510 ], [ %.083, %509 ], [ %.083, %508 ], [ %.083, %506 ], [ %.083, %504 ], [ %.083, %492 ], [ %.083, %491 ], [ %.083, %490 ], [ %.083, %489 ], [ %.083, %473 ], [ %.083, %472 ], [ %.083, %470 ], [ %.083, %466 ], [ %.083, %464 ], [ %.083, %462 ], [ %.083, %460 ], [ %.083, %458 ], [ %.083, %457 ], [ %.083, %455 ], [ %.083, %451 ], [ %.083, %445 ], [ %.083, %443 ], [ %.083, %436 ], [ %.083, %432 ], [ %.083, %431 ], [ %.083, %421 ], [ %.083, %411 ], [ %.083, %409 ], [ %.083, %397 ], [ %.083, %387 ], [ %.083, %386 ], [ %.083, %376 ], [ %.083, %366 ], [ %.083, %364 ], [ %.083, %363 ], [ %.083, %360 ], [ %.083, %358 ], [ %.083, %344 ], [ %.083, %334 ], [ %.083, %330 ], [ %.083, %329 ], [ %.083, %327 ], [ %.083, %326 ], [ %.083, %316 ], [ %.083, %306 ], [ %.083, %305 ], [ %.083, %294 ], [ %.083, %284 ], [ %.083, %283 ], [ %.083, %282 ], [ %.083, %271 ], [ %.083, %261 ], [ %.083, %260 ], [ %.083, %259 ], [ %.083, %238 ], [ %.083, %228 ], [ %.083, %222 ], [ %.083, %220 ], [ %.083, %205 ], [ %.083, %195 ], [ %.083, %191 ], [ %.083, %190 ], [ %.083, %180 ], [ %.083, %170 ], [ %.083, %168 ], [ %.083, %156 ], [ %.083, %146 ], [ %.083, %145 ], [ %.083, %141 ], [ %.083, %140 ], [ %.083, %139 ], [ %.083, %138 ], [ %.083, %113 ], [ %.083, %103 ], [ %.083, %101 ], [ %.083, %89 ], [ %.083, %79 ], [ %.083, %78 ], [ %.083, %77 ], [ %.083, %67 ], [ %.083, %57 ], [ %.083, %56 ], [ %.neg91, %55 ], [ %.083, %54 ], [ %.083, %53 ], [ %.083, %40 ], [ %.083, %30 ], [ %.083, %26 ], [ %.083, %23 ], [ %.083, %20 ], [ 0, %19 ], [ %.083, %16 ]
  %.081.be = phi i32 [ %.081, %15 ], [ %.081, %512 ], [ %.081, %511 ], [ %.081, %510 ], [ %.081, %509 ], [ %.081, %508 ], [ %.081, %506 ], [ %.081, %504 ], [ %.081, %492 ], [ %.081, %491 ], [ %.081, %490 ], [ %.081, %489 ], [ %.081, %473 ], [ %.081, %472 ], [ %.081, %470 ], [ %.081, %466 ], [ %.081, %464 ], [ %.081, %462 ], [ %.081, %460 ], [ %.081, %458 ], [ %.081, %457 ], [ %.081, %455 ], [ %.081, %451 ], [ %.081, %445 ], [ %.081, %443 ], [ %.081, %436 ], [ %.081, %432 ], [ %.081, %431 ], [ %.081, %421 ], [ %.081, %411 ], [ %.081, %409 ], [ %.081, %397 ], [ %.081, %387 ], [ %.081, %386 ], [ %.081, %376 ], [ %.081, %366 ], [ %.081, %364 ], [ %.081, %363 ], [ %.081, %360 ], [ %.081, %358 ], [ %.081, %344 ], [ %.081, %334 ], [ %.081, %330 ], [ %.081, %329 ], [ %.081, %327 ], [ %.081, %326 ], [ %.081, %316 ], [ %.081, %306 ], [ %.081, %305 ], [ %.081, %294 ], [ %.081, %284 ], [ %.081, %283 ], [ %.081, %282 ], [ %.081, %271 ], [ %.081, %261 ], [ %.081, %260 ], [ %.081, %259 ], [ %.081, %238 ], [ %.081, %228 ], [ %.081, %222 ], [ %.081, %220 ], [ %.081, %205 ], [ %.081, %195 ], [ %.081, %191 ], [ %.081, %190 ], [ %.081, %180 ], [ %.081, %170 ], [ %.081, %168 ], [ %.081, %156 ], [ %.081, %146 ], [ %.081, %145 ], [ %.081, %141 ], [ %.081, %140 ], [ %.neg, %139 ], [ %.081, %138 ], [ %.081, %113 ], [ %.081, %103 ], [ %.081, %101 ], [ %.081, %89 ], [ %.081, %79 ], [ 0, %78 ], [ %.081, %77 ], [ %.081, %67 ], [ %.081, %57 ], [ %.081, %56 ], [ %.081, %55 ], [ %.081, %54 ], [ %.081, %53 ], [ %.081, %40 ], [ %.081, %30 ], [ %.081, %26 ], [ %.081, %23 ], [ %.081, %20 ], [ %.081, %19 ], [ %.081, %16 ]
  %.079.be = phi i32 [ %.079, %15 ], [ %.079, %512 ], [ %.079, %511 ], [ %.079, %510 ], [ %.079, %509 ], [ %.079, %508 ], [ %.079, %506 ], [ %.079, %504 ], [ %.079, %492 ], [ %.079, %491 ], [ %.079, %490 ], [ %.079, %489 ], [ %.079, %473 ], [ %.079, %472 ], [ %.079, %470 ], [ %.079, %466 ], [ %.079, %464 ], [ %.079, %462 ], [ %.079, %460 ], [ %.079, %458 ], [ %.079, %457 ], [ %.079, %455 ], [ %.079, %451 ], [ %.079, %445 ], [ %.079, %443 ], [ %.079, %436 ], [ %.079, %432 ], [ %.079, %431 ], [ %.079, %421 ], [ %.079, %411 ], [ %.079, %409 ], [ %.079, %397 ], [ %.079, %387 ], [ %.079, %386 ], [ %.079, %376 ], [ %.079, %366 ], [ %.079, %364 ], [ %.079, %363 ], [ %.079, %360 ], [ %.079, %358 ], [ %.079, %344 ], [ %.079, %334 ], [ %.079, %330 ], [ %.079, %329 ], [ %328, %327 ], [ %.079, %326 ], [ %.079, %316 ], [ %.079, %306 ], [ %.079, %305 ], [ %.079, %294 ], [ %.079, %284 ], [ %.079, %283 ], [ %.079, %282 ], [ %.079, %271 ], [ %.079, %261 ], [ %.079, %260 ], [ %.079, %259 ], [ %.079, %238 ], [ %.079, %228 ], [ %.079, %222 ], [ %.079, %220 ], [ %.079, %205 ], [ %.079, %195 ], [ %.079, %191 ], [ %.079, %190 ], [ %.079, %180 ], [ %.079, %170 ], [ %.079, %168 ], [ %.079, %156 ], [ %.079, %146 ], [ %.079, %145 ], [ %.079, %141 ], [ 0, %140 ], [ %.079, %139 ], [ %.079, %138 ], [ %.079, %113 ], [ %.079, %103 ], [ %.079, %101 ], [ %.079, %89 ], [ %.079, %79 ], [ %.079, %78 ], [ %.079, %77 ], [ %.079, %67 ], [ %.079, %57 ], [ %.079, %56 ], [ %.079, %55 ], [ %.079, %54 ], [ %.079, %53 ], [ %.079, %40 ], [ %.079, %30 ], [ %.079, %26 ], [ %.079, %23 ], [ %.079, %20 ], [ %.079, %19 ], [ %.079, %16 ]
  %.077.be = phi i32 [ %.077, %15 ], [ %.077, %512 ], [ %.077, %511 ], [ %.077, %510 ], [ %.077, %509 ], [ %.077, %508 ], [ %507, %506 ], [ %.077, %504 ], [ %.077, %492 ], [ %.077, %491 ], [ %.077, %490 ], [ %.077, %489 ], [ %.077, %473 ], [ %.077, %472 ], [ %.077, %470 ], [ %.077, %466 ], [ %.077, %464 ], [ %.077, %462 ], [ %.077, %460 ], [ %.077, %458 ], [ %.077, %457 ], [ %.077, %455 ], [ %.077, %451 ], [ %.077, %445 ], [ %.077, %443 ], [ %.077, %436 ], [ %.077, %432 ], [ %.077, %431 ], [ %.077, %421 ], [ %.077, %411 ], [ %.077, %409 ], [ %.077, %397 ], [ %.077, %387 ], [ %.077, %386 ], [ %.077, %376 ], [ %.077, %366 ], [ %.077, %364 ], [ %.077, %363 ], [ %.077, %360 ], [ %.077, %358 ], [ %.077, %344 ], [ %.077, %334 ], [ %.077, %330 ], [ %.077, %329 ], [ %.077, %327 ], [ %.077, %326 ], [ %.077, %316 ], [ %.077, %306 ], [ %.077, %305 ], [ %295, %294 ], [ %.077, %284 ], [ %.077, %283 ], [ %.077, %282 ], [ %.077, %271 ], [ %.077, %261 ], [ %.077, %260 ], [ %.077, %259 ], [ %.077, %238 ], [ %.077, %228 ], [ %.077, %222 ], [ %.077, %220 ], [ %.077, %205 ], [ %.077, %195 ], [ %.077, %191 ], [ %.077, %190 ], [ %.077, %180 ], [ %.077, %170 ], [ %.077, %168 ], [ %.077, %156 ], [ %.077, %146 ], [ 0, %145 ], [ %.077, %141 ], [ %.077, %140 ], [ %.077, %139 ], [ %.077, %138 ], [ %.077, %113 ], [ %.077, %103 ], [ %.077, %101 ], [ %.077, %89 ], [ %.077, %79 ], [ %.077, %78 ], [ %.077, %77 ], [ %.077, %67 ], [ %.077, %57 ], [ %.077, %56 ], [ %.077, %55 ], [ %.077, %54 ], [ %.077, %53 ], [ %.077, %40 ], [ %.077, %30 ], [ %.077, %26 ], [ %.077, %23 ], [ %.077, %20 ], [ %.077, %19 ], [ %.077, %16 ]
  %.075.be = phi i32 [ %.075, %15 ], [ %.075, %512 ], [ %.075, %511 ], [ %.075, %510 ], [ %.075, %509 ], [ %.075, %508 ], [ %.075, %506 ], [ %505, %504 ], [ %.075, %492 ], [ %.075, %491 ], [ 0, %490 ], [ %.075, %489 ], [ %.075, %473 ], [ %.075, %472 ], [ %.075, %470 ], [ %.075, %466 ], [ %.075, %464 ], [ %.075, %462 ], [ %.075, %460 ], [ %.075, %458 ], [ %.075, %457 ], [ %.075, %455 ], [ %.075, %451 ], [ %.075, %445 ], [ %.075, %443 ], [ %.075, %436 ], [ %.075, %432 ], [ %.075, %431 ], [ %.075, %421 ], [ %.075, %411 ], [ %.075, %409 ], [ %.075, %397 ], [ %.075, %387 ], [ %.075, %386 ], [ %.075, %376 ], [ %.075, %366 ], [ %.075, %364 ], [ %.075, %363 ], [ %.075, %360 ], [ %.075, %358 ], [ %.075, %344 ], [ %.075, %334 ], [ %.075, %330 ], [ %.075, %329 ], [ %.075, %327 ], [ %.075, %326 ], [ %.075, %316 ], [ %.075, %306 ], [ %.075, %305 ], [ %.075, %294 ], [ %.075, %284 ], [ %.075, %283 ], [ %.075, %282 ], [ %272, %271 ], [ %.075, %261 ], [ %.075, %260 ], [ %.075, %259 ], [ %.075, %238 ], [ %.075, %228 ], [ %.075, %222 ], [ %.075, %220 ], [ %.075, %205 ], [ %.075, %195 ], [ %.075, %191 ], [ %.075, %190 ], [ 0, %180 ], [ %.075, %170 ], [ %.075, %168 ], [ %.075, %156 ], [ %.075, %146 ], [ %.075, %145 ], [ %.075, %141 ], [ %.075, %140 ], [ %.075, %139 ], [ %.075, %138 ], [ %.075, %113 ], [ %.075, %103 ], [ %.075, %101 ], [ %.075, %89 ], [ %.075, %79 ], [ %.075, %78 ], [ %.075, %77 ], [ %.075, %67 ], [ %.075, %57 ], [ %.075, %56 ], [ %.075, %55 ], [ %.075, %54 ], [ %.075, %53 ], [ %.075, %40 ], [ %.075, %30 ], [ %.075, %26 ], [ %.075, %23 ], [ %.075, %20 ], [ %.075, %19 ], [ %.075, %16 ]
  %.073.be = phi i32 [ %.073, %15 ], [ %.073, %512 ], [ %.073, %511 ], [ %.073, %510 ], [ %.073, %509 ], [ %.073, %508 ], [ %.073, %506 ], [ %.073, %504 ], [ %.073, %492 ], [ %.073, %491 ], [ %.073, %490 ], [ %.073, %489 ], [ %.073, %473 ], [ %.073, %472 ], [ %.073, %470 ], [ %.073, %466 ], [ %.073, %464 ], [ %.073, %462 ], [ %.073, %460 ], [ %.073, %458 ], [ %.073, %457 ], [ %.073, %455 ], [ %.073, %451 ], [ %.073, %445 ], [ %.073, %443 ], [ %.073, %436 ], [ %.073, %432 ], [ %.073, %431 ], [ %.073, %421 ], [ %.073, %411 ], [ %.073, %409 ], [ %.073, %397 ], [ %.073, %387 ], [ %.073, %386 ], [ %.073, %376 ], [ %.073, %366 ], [ %365, %364 ], [ %.073, %363 ], [ %.073, %360 ], [ %.073, %358 ], [ %.073, %344 ], [ %.073, %334 ], [ %.073, %330 ], [ 0, %329 ], [ %.073, %327 ], [ %.073, %326 ], [ %.073, %316 ], [ %.073, %306 ], [ %.073, %305 ], [ %.073, %294 ], [ %.073, %284 ], [ %.073, %283 ], [ %.073, %282 ], [ %.073, %271 ], [ %.073, %261 ], [ %.073, %260 ], [ %.073, %259 ], [ %.073, %238 ], [ %.073, %228 ], [ %.073, %222 ], [ %.073, %220 ], [ %.073, %205 ], [ %.073, %195 ], [ %.073, %191 ], [ %.073, %190 ], [ %.073, %180 ], [ %.073, %170 ], [ %.073, %168 ], [ %.073, %156 ], [ %.073, %146 ], [ %.073, %145 ], [ %.073, %141 ], [ %.073, %140 ], [ %.073, %139 ], [ %.073, %138 ], [ %.073, %113 ], [ %.073, %103 ], [ %.073, %101 ], [ %.073, %89 ], [ %.073, %79 ], [ %.073, %78 ], [ %.073, %77 ], [ %.073, %67 ], [ %.073, %57 ], [ %.073, %56 ], [ %.073, %55 ], [ %.073, %54 ], [ %.073, %53 ], [ %.073, %40 ], [ %.073, %30 ], [ %.073, %26 ], [ %.073, %23 ], [ %.073, %20 ], [ %.073, %19 ], [ %.073, %16 ]
  %.071.be = phi i32 [ %.071, %15 ], [ %.071, %512 ], [ %.071, %511 ], [ 0, %510 ], [ %.071, %509 ], [ %.071, %508 ], [ %.071, %506 ], [ %.071, %504 ], [ %.071, %492 ], [ %.071, %491 ], [ %.071, %490 ], [ %.071, %489 ], [ %.071, %473 ], [ %.071, %472 ], [ %.071, %470 ], [ %.071, %466 ], [ %.071, %464 ], [ %463, %462 ], [ %.071, %460 ], [ %.071, %458 ], [ %.071, %457 ], [ %.071, %455 ], [ %.071, %451 ], [ %.071, %445 ], [ %.071, %443 ], [ %.071, %436 ], [ %.071, %432 ], [ %.071, %431 ], [ %.071, %421 ], [ %.071, %411 ], [ %.071, %409 ], [ %.071, %397 ], [ %.071, %387 ], [ %.071, %386 ], [ 0, %376 ], [ %.071, %366 ], [ %.071, %364 ], [ %.071, %363 ], [ %.071, %360 ], [ %.071, %358 ], [ %.071, %344 ], [ %.071, %334 ], [ %.071, %330 ], [ %.071, %329 ], [ %.071, %327 ], [ %.071, %326 ], [ %.071, %316 ], [ %.071, %306 ], [ %.071, %305 ], [ %.071, %294 ], [ %.071, %284 ], [ %.071, %283 ], [ %.071, %282 ], [ %.071, %271 ], [ %.071, %261 ], [ %.071, %260 ], [ %.071, %259 ], [ %.071, %238 ], [ %.071, %228 ], [ %.071, %222 ], [ %.071, %220 ], [ %.071, %205 ], [ %.071, %195 ], [ %.071, %191 ], [ %.071, %190 ], [ %.071, %180 ], [ %.071, %170 ], [ %.071, %168 ], [ %.071, %156 ], [ %.071, %146 ], [ %.071, %145 ], [ %.071, %141 ], [ %.071, %140 ], [ %.071, %139 ], [ %.071, %138 ], [ %.071, %113 ], [ %.071, %103 ], [ %.071, %101 ], [ %.071, %89 ], [ %.071, %79 ], [ %.071, %78 ], [ %.071, %77 ], [ %.071, %67 ], [ %.071, %57 ], [ %.071, %56 ], [ %.071, %55 ], [ %.071, %54 ], [ %.071, %53 ], [ %.071, %40 ], [ %.071, %30 ], [ %.071, %26 ], [ %.071, %23 ], [ %.071, %20 ], [ %.071, %19 ], [ %.071, %16 ]
  %.069.be = phi i32 [ %.069, %15 ], [ 0, %512 ], [ %.069, %511 ], [ %.069, %510 ], [ %.069, %509 ], [ %.069, %508 ], [ %.069, %506 ], [ %.069, %504 ], [ %.069, %492 ], [ %.069, %491 ], [ %.069, %490 ], [ %.069, %489 ], [ %.069, %473 ], [ %.069, %472 ], [ %.069, %470 ], [ %.069, %466 ], [ %.069, %464 ], [ %.069, %462 ], [ %.069, %460 ], [ %459, %458 ], [ %.069, %457 ], [ %.069, %455 ], [ %.069, %451 ], [ %.069, %445 ], [ %.069, %443 ], [ %.069, %436 ], [ %.069, %432 ], [ %.069, %431 ], [ 0, %421 ], [ %.069, %411 ], [ %.069, %409 ], [ %.069, %397 ], [ %.069, %387 ], [ %.069, %386 ], [ %.069, %376 ], [ %.069, %366 ], [ %.069, %364 ], [ %.069, %363 ], [ %.069, %360 ], [ %.069, %358 ], [ %.069, %344 ], [ %.069, %334 ], [ %.069, %330 ], [ %.069, %329 ], [ %.069, %327 ], [ %.069, %326 ], [ %.069, %316 ], [ %.069, %306 ], [ %.069, %305 ], [ %.069, %294 ], [ %.069, %284 ], [ %.069, %283 ], [ %.069, %282 ], [ %.069, %271 ], [ %.069, %261 ], [ %.069, %260 ], [ %.069, %259 ], [ %.069, %238 ], [ %.069, %228 ], [ %.069, %222 ], [ %.069, %220 ], [ %.069, %205 ], [ %.069, %195 ], [ %.069, %191 ], [ %.069, %190 ], [ %.069, %180 ], [ %.069, %170 ], [ %.069, %168 ], [ %.069, %156 ], [ %.069, %146 ], [ %.069, %145 ], [ %.069, %141 ], [ %.069, %140 ], [ %.069, %139 ], [ %.069, %138 ], [ %.069, %113 ], [ %.069, %103 ], [ %.069, %101 ], [ %.069, %89 ], [ %.069, %79 ], [ %.069, %78 ], [ %.069, %77 ], [ %.069, %67 ], [ %.069, %57 ], [ %.069, %56 ], [ %.069, %55 ], [ %.069, %54 ], [ %.069, %53 ], [ %.069, %40 ], [ %.069, %30 ], [ %.069, %26 ], [ %.069, %23 ], [ %.069, %20 ], [ %.069, %19 ], [ %.069, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ 291787294, %512 ], [ 1996260867, %511 ], [ -209505376, %510 ], [ 1360638198, %509 ], [ -246874009, %508 ], [ 756305787, %506 ], [ -869569117, %504 ], [ 918569855, %492 ], [ -393589225, %491 ], [ 1405301111, %490 ], [ 1502187562, %489 ], [ -1328410937, %473 ], [ 621284029, %472 ], [ -2037515574, %470 ], [ -423432729, %466 ], [ -55302452, %464 ], [ -2118628375, %462 ], [ 353626362, %460 ], [ -949977229, %458 ], [ 577826994, %457 ], [ -1964600019, %455 ], [ %454, %451 ], [ -1987897864, %445 ], [ -1987897864, %443 ], [ %442, %436 ], [ %435, %432 ], [ -949977229, %431 ], [ %430, %421 ], [ %420, %411 ], [ %410, %409 ], [ %408, %397 ], [ %396, %387 ], [ -2118628375, %386 ], [ %385, %376 ], [ %375, %366 ], [ 740427245, %364 ], [ 43134257, %363 ], [ -55302452, %360 ], [ %359, %358 ], [ %357, %344 ], [ %343, %334 ], [ %333, %330 ], [ 740427245, %329 ], [ 1317177778, %327 ], [ -1249137767, %326 ], [ %325, %316 ], [ %315, %306 ], [ -23560533, %305 ], [ %304, %294 ], [ %293, %284 ], [ 1500217887, %283 ], [ -856465435, %282 ], [ %281, %271 ], [ %270, %261 ], [ -1175312162, %260 ], [ 618399709, %259 ], [ %258, %238 ], [ %237, %228 ], [ %227, %222 ], [ %221, %220 ], [ %219, %205 ], [ %204, %195 ], [ %194, %191 ], [ -856465435, %190 ], [ %189, %180 ], [ %179, %170 ], [ %169, %168 ], [ %167, %156 ], [ %155, %146 ], [ -23560533, %145 ], [ %144, %141 ], [ 1317177778, %140 ], [ 192252563, %139 ], [ 414316011, %138 ], [ %137, %113 ], [ %112, %103 ], [ %102, %101 ], [ %100, %89 ], [ %88, %79 ], [ 192252563, %78 ], [ 1079235977, %77 ], [ %76, %67 ], [ %66, %57 ], [ -19068365, %56 ], [ 365283938, %55 ], [ -290971928, %54 ], [ 263072623, %53 ], [ %52, %40 ], [ %39, %30 ], [ 263072623, %26 ], [ %25, %23 ], [ %22, %20 ], [ 365283938, %19 ], [ %18, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* %6, align 4
  %.not93 = icmp sgt i32 %.085, %17
  %18 = select i1 %.not93, i32 313024572, i32 2127509888
  br label %.backedge

19:                                               ; preds = %15
  br label %.backedge

20:                                               ; preds = %15
  %21 = load i32, i32* %6, align 4
  %.not92 = icmp sgt i32 %.083, %21
  %22 = select i1 %.not92, i32 387586158, i32 1808938812
  br label %.backedge

23:                                               ; preds = %15
  %24 = icmp eq i32 %.085, %.083
  %25 = select i1 %24, i32 794765555, i32 -1254291171
  br label %.backedge

26:                                               ; preds = %15
  %27 = sext i32 %.085 to i64
  %28 = sext i32 %.083 to i64
  %29 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %27, i64 %28
  store i64 0, i64* %29, align 8
  br label %.backedge

30:                                               ; preds = %15
  %31 = load i32, i32* @x.3, align 4
  %32 = load i32, i32* @y.4, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 -423432729, i32 -26244109
  br label %.backedge

40:                                               ; preds = %15
  %41 = sext i32 %.085 to i64
  %42 = sext i32 %.083 to i64
  %43 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %41, i64 %42
  store i64 1000000000000, i64* %43, align 8
  %44 = load i32, i32* @x.3, align 4
  %45 = load i32, i32* @y.4, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 1253664292, i32 -26244109
  br label %.backedge

53:                                               ; preds = %15
  br label %.backedge

54:                                               ; preds = %15
  br label %.backedge

55:                                               ; preds = %15
  %.neg91 = add i32 %.083, 1
  br label %.backedge

56:                                               ; preds = %15
  br label %.backedge

57:                                               ; preds = %15
  %58 = load i32, i32* @x.3, align 4
  %59 = load i32, i32* @y.4, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -2037515574, i32 -2031428767
  br label %.backedge

67:                                               ; preds = %15
  %.neg90 = add i32 %.085, 1
  %68 = load i32, i32* @x.3, align 4
  %69 = load i32, i32* @y.4, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 -1296890560, i32 -2031428767
  br label %.backedge

77:                                               ; preds = %15
  br label %.backedge

78:                                               ; preds = %15
  br label %.backedge

79:                                               ; preds = %15
  %80 = load i32, i32* @x.3, align 4
  %81 = load i32, i32* @y.4, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 621284029, i32 325828732
  br label %.backedge

89:                                               ; preds = %15
  %90 = load i32, i32* %7, align 4
  %91 = icmp slt i32 %.081, %90
  store i1 %91, i1* %5, align 1
  %92 = load i32, i32* @x.3, align 4
  %93 = load i32, i32* @y.4, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 -1349992624, i32 325828732
  br label %.backedge

101:                                              ; preds = %15
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %102 = select i1 %.0..0..0., i32 -468649549, i32 -1811582935
  br label %.backedge

103:                                              ; preds = %15
  %104 = load i32, i32* @x.3, align 4
  %105 = load i32, i32* @y.4, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 -1328410937, i32 -105297110
  br label %.backedge

113:                                              ; preds = %15
  %114 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %115 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %114, i32* nonnull dereferenceable(4) %10)
  %116 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %115, i64* nonnull dereferenceable(8) %11)
  %117 = load i32, i32* %9, align 4
  %118 = sext i32 %117 to i64
  %119 = load i32, i32* %10, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %118, i64 %120
  %122 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %121, i64* nonnull dereferenceable(8) %11)
  %123 = load i64, i64* %122, align 8
  %124 = load i32, i32* %9, align 4
  %125 = sext i32 %124 to i64
  %126 = load i32, i32* %10, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %125, i64 %127
  store i64 %123, i64* %128, align 8
  %129 = load i32, i32* @x.3, align 4
  %130 = load i32, i32* @y.4, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 -1419499655, i32 -105297110
  br label %.backedge

138:                                              ; preds = %15
  br label %.backedge

139:                                              ; preds = %15
  %.neg = add i32 %.081, 1
  br label %.backedge

140:                                              ; preds = %15
  br label %.backedge

141:                                              ; preds = %15
  %142 = load i32, i32* %6, align 4
  %143 = icmp slt i32 %.079, %142
  %144 = select i1 %143, i32 -1407026962, i32 -444333450
  br label %.backedge

145:                                              ; preds = %15
  br label %.backedge

146:                                              ; preds = %15
  %147 = load i32, i32* @x.3, align 4
  %148 = load i32, i32* @y.4, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 1502187562, i32 333947676
  br label %.backedge

156:                                              ; preds = %15
  %157 = load i32, i32* %6, align 4
  %158 = icmp slt i32 %.077, %157
  store i1 %158, i1* %4, align 1
  %159 = load i32, i32* @x.3, align 4
  %160 = load i32, i32* @y.4, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 -1499409559, i32 333947676
  br label %.backedge

168:                                              ; preds = %15
  %.0..0..0.65 = load volatile i1, i1* %4, align 1
  %169 = select i1 %.0..0..0.65, i32 1689075495, i32 1076128871
  br label %.backedge

170:                                              ; preds = %15
  %171 = load i32, i32* @x.3, align 4
  %172 = load i32, i32* @y.4, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 1405301111, i32 459860062
  br label %.backedge

180:                                              ; preds = %15
  %181 = load i32, i32* @x.3, align 4
  %182 = load i32, i32* @y.4, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 -1436985688, i32 459860062
  br label %.backedge

190:                                              ; preds = %15
  br label %.backedge

191:                                              ; preds = %15
  %192 = load i32, i32* %6, align 4
  %193 = icmp slt i32 %.075, %192
  %194 = select i1 %193, i32 -351625618, i32 367153018
  br label %.backedge

195:                                              ; preds = %15
  %196 = load i32, i32* @x.3, align 4
  %197 = load i32, i32* @y.4, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 -393589225, i32 -175938729
  br label %.backedge

205:                                              ; preds = %15
  %206 = sext i32 %.077 to i64
  %207 = sext i32 %.079 to i64
  %208 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %206, i64 %207
  %209 = load i64, i64* %208, align 8
  %210 = icmp ne i64 %209, 1000000000000
  store i1 %210, i1* %3, align 1
  %211 = load i32, i32* @x.3, align 4
  %212 = load i32, i32* @y.4, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 1977373276, i32 -175938729
  br label %.backedge

220:                                              ; preds = %15
  %.0..0..0.66 = load volatile i1, i1* %3, align 1
  %221 = select i1 %.0..0..0.66, i32 -1299693152, i32 618399709
  br label %.backedge

222:                                              ; preds = %15
  %223 = sext i32 %.079 to i64
  %224 = sext i32 %.075 to i64
  %225 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %223, i64 %224
  %226 = load i64, i64* %225, align 8
  %.not89 = icmp eq i64 %226, 1000000000000
  %227 = select i1 %.not89, i32 618399709, i32 -1213852728
  br label %.backedge

228:                                              ; preds = %15
  %229 = load i32, i32* @x.3, align 4
  %230 = load i32, i32* @y.4, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 918569855, i32 972947432
  br label %.backedge

238:                                              ; preds = %15
  %239 = sext i32 %.077 to i64
  %240 = sext i32 %.075 to i64
  %241 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %239, i64 %240
  %242 = sext i32 %.079 to i64
  %243 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %239, i64 %242
  %244 = load i64, i64* %243, align 8
  %245 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %242, i64 %240
  %246 = load i64, i64* %245, align 8
  %247 = add i64 %246, %244
  store i64 %247, i64* %12, align 8
  %248 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %241, i64* nonnull dereferenceable(8) %12)
  %249 = load i64, i64* %248, align 8
  store i64 %249, i64* %241, align 8
  %250 = load i32, i32* @x.3, align 4
  %251 = load i32, i32* @y.4, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 1680234891, i32 972947432
  br label %.backedge

259:                                              ; preds = %15
  br label %.backedge

260:                                              ; preds = %15
  br label %.backedge

261:                                              ; preds = %15
  %262 = load i32, i32* @x.3, align 4
  %263 = load i32, i32* @y.4, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 -869569117, i32 1591727720
  br label %.backedge

271:                                              ; preds = %15
  %272 = add i32 %.075, 1
  %273 = load i32, i32* @x.3, align 4
  %274 = load i32, i32* @y.4, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 -1504697369, i32 1591727720
  br label %.backedge

282:                                              ; preds = %15
  br label %.backedge

283:                                              ; preds = %15
  br label %.backedge

284:                                              ; preds = %15
  %285 = load i32, i32* @x.3, align 4
  %286 = load i32, i32* @y.4, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 756305787, i32 1149596373
  br label %.backedge

294:                                              ; preds = %15
  %295 = add i32 %.077, 1
  %296 = load i32, i32* @x.3, align 4
  %297 = load i32, i32* @y.4, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 -1339980778, i32 1149596373
  br label %.backedge

305:                                              ; preds = %15
  br label %.backedge

306:                                              ; preds = %15
  %307 = load i32, i32* @x.3, align 4
  %308 = load i32, i32* @y.4, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -246874009, i32 1910685945
  br label %.backedge

316:                                              ; preds = %15
  %317 = load i32, i32* @x.3, align 4
  %318 = load i32, i32* @y.4, align 4
  %319 = add i32 %317, -1
  %320 = mul i32 %319, %317
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %323, %322
  %325 = select i1 %324, i32 -1598102163, i32 1910685945
  br label %.backedge

326:                                              ; preds = %15
  br label %.backedge

327:                                              ; preds = %15
  %328 = add i32 %.079, 1
  br label %.backedge

329:                                              ; preds = %15
  br label %.backedge

330:                                              ; preds = %15
  %331 = load i32, i32* %6, align 4
  %332 = icmp slt i32 %.073, %331
  %333 = select i1 %332, i32 -145240241, i32 -852928663
  br label %.backedge

334:                                              ; preds = %15
  %335 = load i32, i32* @x.3, align 4
  %336 = load i32, i32* @y.4, align 4
  %337 = add i32 %335, -1
  %338 = mul i32 %337, %335
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %341, %340
  %343 = select i1 %342, i32 1360638198, i32 -1200038806
  br label %.backedge

344:                                              ; preds = %15
  %345 = sext i32 %.073 to i64
  %346 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %345, i64 %345
  %347 = load i64, i64* %346, align 8
  %348 = icmp slt i64 %347, 0
  store i1 %348, i1* %2, align 1
  %349 = load i32, i32* @x.3, align 4
  %350 = load i32, i32* @y.4, align 4
  %351 = add i32 %349, -1
  %352 = mul i32 %351, %349
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %355, %354
  %357 = select i1 %356, i32 20219348, i32 -1200038806
  br label %.backedge

358:                                              ; preds = %15
  %.0..0..0.67 = load volatile i1, i1* %2, align 1
  %359 = select i1 %.0..0..0.67, i32 786427169, i32 -1532861548
  br label %.backedge

360:                                              ; preds = %15
  %361 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %362 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %361, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

363:                                              ; preds = %15
  br label %.backedge

364:                                              ; preds = %15
  %365 = add i32 %.073, 1
  br label %.backedge

366:                                              ; preds = %15
  %367 = load i32, i32* @x.3, align 4
  %368 = load i32, i32* @y.4, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 -209505376, i32 -1580517628
  br label %.backedge

376:                                              ; preds = %15
  %377 = load i32, i32* @x.3, align 4
  %378 = load i32, i32* @y.4, align 4
  %379 = add i32 %377, -1
  %380 = mul i32 %379, %377
  %381 = and i32 %380, 1
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %383, %382
  %385 = select i1 %384, i32 -1737138942, i32 -1580517628
  br label %.backedge

386:                                              ; preds = %15
  br label %.backedge

387:                                              ; preds = %15
  %388 = load i32, i32* @x.3, align 4
  %389 = load i32, i32* @y.4, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 1996260867, i32 -1017319574
  br label %.backedge

397:                                              ; preds = %15
  %398 = load i32, i32* %6, align 4
  %399 = icmp slt i32 %.071, %398
  store i1 %399, i1* %1, align 1
  %400 = load i32, i32* @x.3, align 4
  %401 = load i32, i32* @y.4, align 4
  %402 = add i32 %400, -1
  %403 = mul i32 %402, %400
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %406, %405
  %408 = select i1 %407, i32 1784073945, i32 -1017319574
  br label %.backedge

409:                                              ; preds = %15
  %.0..0..0.68 = load volatile i1, i1* %1, align 1
  %410 = select i1 %.0..0..0.68, i32 -638574893, i32 -1909989457
  br label %.backedge

411:                                              ; preds = %15
  %412 = load i32, i32* @x.3, align 4
  %413 = load i32, i32* @y.4, align 4
  %414 = add i32 %412, -1
  %415 = mul i32 %414, %412
  %416 = and i32 %415, 1
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %418, %417
  %420 = select i1 %419, i32 291787294, i32 1875556241
  br label %.backedge

421:                                              ; preds = %15
  %422 = load i32, i32* @x.3, align 4
  %423 = load i32, i32* @y.4, align 4
  %424 = add i32 %422, -1
  %425 = mul i32 %424, %422
  %426 = and i32 %425, 1
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %428, %427
  %430 = select i1 %429, i32 -599829972, i32 1875556241
  br label %.backedge

431:                                              ; preds = %15
  br label %.backedge

432:                                              ; preds = %15
  %433 = load i32, i32* %6, align 4
  %434 = icmp slt i32 %.069, %433
  %435 = select i1 %434, i32 980607664, i32 -76607521
  br label %.backedge

436:                                              ; preds = %15
  %437 = sext i32 %.071 to i64
  %438 = sext i32 %.069 to i64
  %439 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %437, i64 %438
  %440 = load i64, i64* %439, align 8
  %441 = icmp eq i64 %440, 1000000000000
  %442 = select i1 %441, i32 -567528467, i32 658932502
  br label %.backedge

443:                                              ; preds = %15
  %444 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

445:                                              ; preds = %15
  %446 = sext i32 %.071 to i64
  %447 = sext i32 %.069 to i64
  %448 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %446, i64 %447
  %449 = load i64, i64* %448, align 8
  %450 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %449)
  br label %.backedge

451:                                              ; preds = %15
  %452 = load i32, i32* %6, align 4
  %453 = add i32 %452, -1
  %.not = icmp eq i32 %.069, %453
  %454 = select i1 %.not, i32 -1964600019, i32 -1269209843
  br label %.backedge

455:                                              ; preds = %15
  %456 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

457:                                              ; preds = %15
  br label %.backedge

458:                                              ; preds = %15
  %459 = add i32 %.069, 1
  br label %.backedge

460:                                              ; preds = %15
  %461 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

462:                                              ; preds = %15
  %463 = add i32 %.071, 1
  br label %.backedge

464:                                              ; preds = %15
  br label %.backedge

465:                                              ; preds = %15
  ret i32 0

466:                                              ; preds = %15
  %467 = sext i32 %.085 to i64
  %468 = sext i32 %.083 to i64
  %469 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %467, i64 %468
  store i64 1000000000000, i64* %469, align 8
  br label %.backedge

470:                                              ; preds = %15
  %471 = add i32 %.085, 1
  br label %.backedge

472:                                              ; preds = %15
  br label %.backedge

473:                                              ; preds = %15
  %474 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %475 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %474, i32* nonnull dereferenceable(4) %10)
  %476 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %475, i64* nonnull dereferenceable(8) %11)
  %477 = load i32, i32* %9, align 4
  %478 = sext i32 %477 to i64
  %479 = load i32, i32* %10, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %478, i64 %480
  %482 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %481, i64* nonnull dereferenceable(8) %11)
  %483 = load i64, i64* %482, align 8
  %484 = load i32, i32* %9, align 4
  %485 = sext i32 %484 to i64
  %486 = load i32, i32* %10, align 4
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %485, i64 %487
  store i64 %483, i64* %488, align 8
  br label %.backedge

489:                                              ; preds = %15
  br label %.backedge

490:                                              ; preds = %15
  br label %.backedge

491:                                              ; preds = %15
  br label %.backedge

492:                                              ; preds = %15
  %493 = sext i32 %.077 to i64
  %494 = sext i32 %.075 to i64
  %495 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %493, i64 %494
  %496 = sext i32 %.079 to i64
  %497 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %493, i64 %496
  %498 = load i64, i64* %497, align 8
  %499 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* %8, i64 0, i64 %496, i64 %494
  %500 = load i64, i64* %499, align 8
  %501 = add i64 %500, %498
  store i64 %501, i64* %12, align 8
  %502 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %495, i64* nonnull dereferenceable(8) %12)
  %503 = load i64, i64* %502, align 8
  store i64 %503, i64* %495, align 8
  br label %.backedge

504:                                              ; preds = %15
  %505 = add i32 %.075, 1
  br label %.backedge

506:                                              ; preds = %15
  %507 = add i32 %.077, 1
  br label %.backedge

508:                                              ; preds = %15
  br label %.backedge

509:                                              ; preds = %15
  br label %.backedge

510:                                              ; preds = %15
  br label %.backedge

511:                                              ; preds = %15
  br label %.backedge

512:                                              ; preds = %15
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  %8 = load i32, i32* @x.5, align 4
  %9 = load i32, i32* @y.6, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 8201973, i32 -91281838
  %17 = select i1 %15, i32 -1733714962, i32 -91281838
  br label %.outer

.outer:                                           ; preds = %18, %2
  %.09.ph = phi i64* [ undef, %2 ], [ %.09.ph14, %18 ]
  %.0.ph = phi i32 [ -2042070564, %2 ], [ %16, %18 ]
  br label %.outer13

.outer13:                                         ; preds = %.outer13.backedge, %.outer
  %.09.ph14 = phi i64* [ %.09.ph, %.outer ], [ %.09.ph14.be, %.outer13.backedge ]
  %.0.ph15 = phi i32 [ %.0.ph, %.outer ], [ -1323387295, %.outer13.backedge ]
  br label %.outer16

.outer16:                                         ; preds = %.outer16.backedge, %.outer13
  %.0.ph17 = phi i32 [ %.0.ph15, %.outer13 ], [ %.0.ph17.be, %.outer16.backedge ]
  br label %18

18:                                               ; preds = %.outer16, %18
  switch i32 %.0.ph17, label %18 [
    i32 -2042070564, label %19
    i32 -1432377127, label %.outer13.backedge
    i32 751185912, label %22
    i32 -1323387295, label %.outer16.backedge
    i32 -1733714962, label %.outer
    i32 8201973, label %23
    i32 -91281838, label %24
  ]

19:                                               ; preds = %18
  %.0..0..0.6 = load volatile i64, i64* %5, align 8
  %.0..0..0.7 = load volatile i64, i64* %4, align 8
  %20 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %21 = select i1 %20, i32 -1432377127, i32 751185912
  br label %.outer16.backedge

22:                                               ; preds = %18
  br label %.outer13.backedge

.outer13.backedge:                                ; preds = %18, %22
  %.09.ph14.be = phi i64* [ %0, %22 ], [ %1, %18 ]
  br label %.outer13

23:                                               ; preds = %18
  store i64* %.09.ph, i64** %3, align 8
  %.0..0..0.8 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.8

24:                                               ; preds = %18
  br label %.outer16.backedge

.outer16.backedge:                                ; preds = %18, %24, %19
  %.0.ph17.be = phi i32 [ %21, %19 ], [ -1733714962, %24 ], [ %17, %18 ]
  br label %.outer16
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s006123352.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.7, align 4
  %4 = load i32, i32* @y.8, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -762799793, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -762799793, label %11
    i32 -1083940745, label %14
    i32 963315720, label %24
    i32 -1738585704, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1083940745, i32 -1738585704
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 963315720, i32 -1738585704
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1083940745, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
