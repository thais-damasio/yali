; ModuleID = 'build_ollvm/programs/p02363/s649639632.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s649639632.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s649639632.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %4)
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %10, i32* nonnull dereferenceable(4) %5)
  %12 = load i32, i32* %4, align 4
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %3, align 8
  %.0..0..0.56 = load volatile i64, i64* %3, align 8
  %14 = mul nuw i64 %.0..0..0.56, %13
  %15 = alloca i64, i64 %14, align 16
  br label %16

16:                                               ; preds = %.backedge, %0
  %.095 = phi i32 [ 0, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.0 = phi i32 [ -1950302558, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1950302558, label %17
    i32 1101778833, label %27
    i32 1151071569, label %39
    i32 1816355644, label %41
    i32 -166779692, label %51
    i32 1325810331, label %61
    i32 -1511379000, label %62
    i32 -1607829624, label %66
    i32 1652051486, label %69
    i32 -289970859, label %79
    i32 -198252954, label %93
    i32 1661388959, label %94
    i32 1037025694, label %99
    i32 988419927, label %109
    i32 1157344260, label %119
    i32 -1150456487, label %120
    i32 1553909598, label %122
    i32 -314379781, label %132
    i32 -44612530, label %142
    i32 855696755, label %143
    i32 1489297796, label %145
    i32 1246841871, label %146
    i32 2008050211, label %150
    i32 -294108608, label %162
    i32 609198736, label %164
    i32 -1796260684, label %165
    i32 510887034, label %169
    i32 228121158, label %170
    i32 1302282383, label %174
    i32 -901981725, label %184
    i32 -930646543, label %194
    i32 -297166154, label %195
    i32 -1225942530, label %199
    i32 -916854209, label %206
    i32 2061571135, label %213
    i32 -716845943, label %230
    i32 576595696, label %233
    i32 -1899160772, label %241
    i32 -435098196, label %244
    i32 1162116064, label %245
    i32 -196782982, label %255
    i32 1754114830, label %265
    i32 -520163419, label %266
    i32 206911969, label %276
    i32 966186304, label %286
    i32 -150959152, label %287
    i32 1075647138, label %289
    i32 1168581645, label %299
    i32 998781199, label %309
    i32 -1782158990, label %310
    i32 -1039796336, label %312
    i32 -1718254963, label %313
    i32 1302068330, label %317
    i32 1827977845, label %327
    i32 256528894, label %337
    i32 -2036208574, label %338
    i32 -1387231218, label %342
    i32 1134227519, label %352
    i32 1783324060, label %365
    i32 756283897, label %367
    i32 73708944, label %374
    i32 -54258855, label %384
    i32 -210877666, label %401
    i32 862567756, label %402
    i32 1771663788, label %412
    i32 -1541687323, label %424
    i32 -748519092, label %425
    i32 900450520, label %426
    i32 27520324, label %433
    i32 -1080553365, label %440
    i32 1258091625, label %450
    i32 -1852951998, label %461
    i32 376141064, label %462
    i32 -1650970100, label %463
    i32 -1707099529, label %464
    i32 1808759184, label %465
    i32 268335383, label %467
    i32 -1267201081, label %468
    i32 215360600, label %469
    i32 -1963427001, label %470
    i32 -1763038772, label %471
    i32 -1138370477, label %472
    i32 -863242435, label %477
    i32 -2001084820, label %478
    i32 -1215049970, label %479
    i32 1144845403, label %480
    i32 -1587496033, label %482
    i32 942340422, label %483
    i32 -1544373493, label %484
    i32 -570911501, label %485
    i32 -1066958486, label %486
    i32 711147962, label %494
    i32 1352697853, label %497
  ]

.backedge:                                        ; preds = %16, %497, %494, %486, %485, %484, %483, %482, %480, %479, %478, %477, %472, %471, %470, %468, %467, %465, %464, %463, %462, %461, %450, %440, %433, %426, %425, %424, %412, %402, %401, %384, %374, %367, %365, %352, %342, %338, %337, %327, %317, %313, %312, %310, %309, %299, %289, %287, %286, %276, %266, %265, %255, %245, %244, %241, %233, %230, %213, %206, %199, %195, %194, %184, %174, %170, %169, %165, %164, %162, %150, %146, %145, %143, %142, %132, %122, %120, %119, %109, %99, %94, %93, %79, %69, %66, %62, %61, %51, %41, %39, %27, %17
  %.095.be = phi i32 [ %.095, %16 ], [ %.095, %497 ], [ %.095, %494 ], [ %.095, %486 ], [ %.095, %485 ], [ %.095, %484 ], [ %.095, %483 ], [ %.095, %482 ], [ %.095, %480 ], [ %.095, %479 ], [ %.095, %478 ], [ %.095, %477 ], [ %.095, %472 ], [ %.095, %471 ], [ %.095, %470 ], [ %.095, %468 ], [ %.095, %467 ], [ %.095, %465 ], [ %.095, %464 ], [ %.095, %463 ], [ %.095, %462 ], [ %.095, %461 ], [ %.095, %450 ], [ %.095, %440 ], [ %.095, %433 ], [ %.095, %426 ], [ %.095, %425 ], [ %.095, %424 ], [ %.095, %412 ], [ %.095, %402 ], [ %.095, %401 ], [ %.095, %384 ], [ %.095, %374 ], [ %.095, %367 ], [ %.095, %365 ], [ %.095, %352 ], [ %.095, %342 ], [ %.095, %338 ], [ %.095, %337 ], [ %.095, %327 ], [ %.095, %317 ], [ %.095, %313 ], [ %.095, %312 ], [ %.095, %310 ], [ %.095, %309 ], [ %.095, %299 ], [ %.095, %289 ], [ %.095, %287 ], [ %.095, %286 ], [ %.095, %276 ], [ %.095, %266 ], [ %.095, %265 ], [ %.095, %255 ], [ %.095, %245 ], [ %.095, %244 ], [ %.095, %241 ], [ %.095, %233 ], [ %.095, %230 ], [ %.095, %213 ], [ %.095, %206 ], [ %.095, %199 ], [ %.095, %195 ], [ %.095, %194 ], [ %.095, %184 ], [ %.095, %174 ], [ %.095, %170 ], [ %.095, %169 ], [ %.095, %165 ], [ %.095, %164 ], [ %.095, %162 ], [ %.095, %150 ], [ %.095, %146 ], [ %.095, %145 ], [ %144, %143 ], [ %.095, %142 ], [ %.095, %132 ], [ %.095, %122 ], [ %.095, %120 ], [ %.095, %119 ], [ %.095, %109 ], [ %.095, %99 ], [ %.095, %94 ], [ %.095, %93 ], [ %.095, %79 ], [ %.095, %69 ], [ %.095, %66 ], [ %.095, %62 ], [ %.095, %61 ], [ %.095, %51 ], [ %.095, %41 ], [ %.095, %39 ], [ %.095, %27 ], [ %.095, %17 ]
  %.093.be = phi i32 [ %.093, %16 ], [ %.093, %497 ], [ %.093, %494 ], [ %.093, %486 ], [ %.093, %485 ], [ %.093, %484 ], [ %.093, %483 ], [ %.093, %482 ], [ %.093, %480 ], [ %.093, %479 ], [ %.093, %478 ], [ %.093, %477 ], [ %.093, %472 ], [ 0, %471 ], [ %.093, %470 ], [ %.093, %468 ], [ %.093, %467 ], [ %.093, %465 ], [ %.093, %464 ], [ %.093, %463 ], [ %.093, %462 ], [ %.093, %461 ], [ %.093, %450 ], [ %.093, %440 ], [ %.093, %433 ], [ %.093, %426 ], [ %.093, %425 ], [ %.093, %424 ], [ %.093, %412 ], [ %.093, %402 ], [ %.093, %401 ], [ %.093, %384 ], [ %.093, %374 ], [ %.093, %367 ], [ %.093, %365 ], [ %.093, %352 ], [ %.093, %342 ], [ %.093, %338 ], [ %.093, %337 ], [ %.093, %327 ], [ %.093, %317 ], [ %.093, %313 ], [ %.093, %312 ], [ %.093, %310 ], [ %.093, %309 ], [ %.093, %299 ], [ %.093, %289 ], [ %.093, %287 ], [ %.093, %286 ], [ %.093, %276 ], [ %.093, %266 ], [ %.093, %265 ], [ %.093, %255 ], [ %.093, %245 ], [ %.093, %244 ], [ %.093, %241 ], [ %.093, %233 ], [ %.093, %230 ], [ %.093, %213 ], [ %.093, %206 ], [ %.093, %199 ], [ %.093, %195 ], [ %.093, %194 ], [ %.093, %184 ], [ %.093, %174 ], [ %.093, %170 ], [ %.093, %169 ], [ %.093, %165 ], [ %.093, %164 ], [ %.093, %162 ], [ %.093, %150 ], [ %.093, %146 ], [ %.093, %145 ], [ %.093, %143 ], [ %.093, %142 ], [ %.093, %132 ], [ %.093, %122 ], [ %121, %120 ], [ %.093, %119 ], [ %.093, %109 ], [ %.093, %99 ], [ %.093, %94 ], [ %.093, %93 ], [ %.093, %79 ], [ %.093, %69 ], [ %.093, %66 ], [ %.093, %62 ], [ %.093, %61 ], [ 0, %51 ], [ %.093, %41 ], [ %.093, %39 ], [ %.093, %27 ], [ %.093, %17 ]
  %.091.be = phi i32 [ %.091, %16 ], [ %.091, %497 ], [ %.091, %494 ], [ %.091, %486 ], [ %.091, %485 ], [ %.091, %484 ], [ %.091, %483 ], [ %.091, %482 ], [ %.091, %480 ], [ %.091, %479 ], [ %.091, %478 ], [ %.091, %477 ], [ %.091, %472 ], [ %.091, %471 ], [ %.091, %470 ], [ %.091, %468 ], [ %.091, %467 ], [ %.091, %465 ], [ %.091, %464 ], [ %.091, %463 ], [ %.091, %462 ], [ %.091, %461 ], [ %.091, %450 ], [ %.091, %440 ], [ %.091, %433 ], [ %.091, %426 ], [ %.091, %425 ], [ %.091, %424 ], [ %.091, %412 ], [ %.091, %402 ], [ %.091, %401 ], [ %.091, %384 ], [ %.091, %374 ], [ %.091, %367 ], [ %.091, %365 ], [ %.091, %352 ], [ %.091, %342 ], [ %.091, %338 ], [ %.091, %337 ], [ %.091, %327 ], [ %.091, %317 ], [ %.091, %313 ], [ %.091, %312 ], [ %.091, %310 ], [ %.091, %309 ], [ %.091, %299 ], [ %.091, %289 ], [ %.091, %287 ], [ %.091, %286 ], [ %.091, %276 ], [ %.091, %266 ], [ %.091, %265 ], [ %.091, %255 ], [ %.091, %245 ], [ %.091, %244 ], [ %.091, %241 ], [ %.091, %233 ], [ %.091, %230 ], [ %.091, %213 ], [ %.091, %206 ], [ %.091, %199 ], [ %.091, %195 ], [ %.091, %194 ], [ %.091, %184 ], [ %.091, %174 ], [ %.091, %170 ], [ %.091, %169 ], [ %.091, %165 ], [ %.091, %164 ], [ %163, %162 ], [ %.091, %150 ], [ %.091, %146 ], [ 0, %145 ], [ %.091, %143 ], [ %.091, %142 ], [ %.091, %132 ], [ %.091, %122 ], [ %.091, %120 ], [ %.091, %119 ], [ %.091, %109 ], [ %.091, %99 ], [ %.091, %94 ], [ %.091, %93 ], [ %.091, %79 ], [ %.091, %69 ], [ %.091, %66 ], [ %.091, %62 ], [ %.091, %61 ], [ %.091, %51 ], [ %.091, %41 ], [ %.091, %39 ], [ %.091, %27 ], [ %.091, %17 ]
  %.089.be = phi i32 [ %.089, %16 ], [ %.089, %497 ], [ %.089, %494 ], [ %.089, %486 ], [ %.089, %485 ], [ %.089, %484 ], [ %.089, %483 ], [ %.089, %482 ], [ %.089, %480 ], [ %.089, %479 ], [ %.089, %478 ], [ %.089, %477 ], [ %.089, %472 ], [ %.089, %471 ], [ %.089, %470 ], [ %.089, %468 ], [ %.089, %467 ], [ %.089, %465 ], [ %.089, %464 ], [ %.089, %463 ], [ %.089, %462 ], [ %.089, %461 ], [ %.089, %450 ], [ %.089, %440 ], [ %.089, %433 ], [ %.089, %426 ], [ %.089, %425 ], [ %.089, %424 ], [ %.089, %412 ], [ %.089, %402 ], [ %.089, %401 ], [ %.089, %384 ], [ %.089, %374 ], [ %.089, %367 ], [ %.089, %365 ], [ %.089, %352 ], [ %.089, %342 ], [ %.089, %338 ], [ %.089, %337 ], [ %.089, %327 ], [ %.089, %317 ], [ %.089, %313 ], [ %.089, %312 ], [ %311, %310 ], [ %.089, %309 ], [ %.089, %299 ], [ %.089, %289 ], [ %.089, %287 ], [ %.089, %286 ], [ %.089, %276 ], [ %.089, %266 ], [ %.089, %265 ], [ %.089, %255 ], [ %.089, %245 ], [ %.089, %244 ], [ %.089, %241 ], [ %.089, %233 ], [ %.089, %230 ], [ %.089, %213 ], [ %.089, %206 ], [ %.089, %199 ], [ %.089, %195 ], [ %.089, %194 ], [ %.089, %184 ], [ %.089, %174 ], [ %.089, %170 ], [ %.089, %169 ], [ %.089, %165 ], [ 0, %164 ], [ %.089, %162 ], [ %.089, %150 ], [ %.089, %146 ], [ %.089, %145 ], [ %.089, %143 ], [ %.089, %142 ], [ %.089, %132 ], [ %.089, %122 ], [ %.089, %120 ], [ %.089, %119 ], [ %.089, %109 ], [ %.089, %99 ], [ %.089, %94 ], [ %.089, %93 ], [ %.089, %79 ], [ %.089, %69 ], [ %.089, %66 ], [ %.089, %62 ], [ %.089, %61 ], [ %.089, %51 ], [ %.089, %41 ], [ %.089, %39 ], [ %.089, %27 ], [ %.089, %17 ]
  %.087.be = phi i32 [ %.087, %16 ], [ %.087, %497 ], [ %.087, %494 ], [ %.087, %486 ], [ %.087, %485 ], [ %.087, %484 ], [ %.087, %483 ], [ %.087, %482 ], [ %.087, %480 ], [ %.087, %479 ], [ %.087, %478 ], [ %.087, %477 ], [ %.087, %472 ], [ %.087, %471 ], [ %.087, %470 ], [ %.087, %468 ], [ %.087, %467 ], [ %.087, %465 ], [ %.087, %464 ], [ %.087, %463 ], [ %.087, %462 ], [ %.087, %461 ], [ %.087, %450 ], [ %.087, %440 ], [ %.087, %433 ], [ %.087, %426 ], [ %.087, %425 ], [ %.087, %424 ], [ %.087, %412 ], [ %.087, %402 ], [ %.087, %401 ], [ %.087, %384 ], [ %.087, %374 ], [ %.087, %367 ], [ %.087, %365 ], [ %.087, %352 ], [ %.087, %342 ], [ %.087, %338 ], [ %.087, %337 ], [ %.087, %327 ], [ %.087, %317 ], [ %.087, %313 ], [ %.087, %312 ], [ %.087, %310 ], [ %.087, %309 ], [ %.087, %299 ], [ %.087, %289 ], [ %288, %287 ], [ %.087, %286 ], [ %.087, %276 ], [ %.087, %266 ], [ %.087, %265 ], [ %.087, %255 ], [ %.087, %245 ], [ %.087, %244 ], [ %.087, %241 ], [ %.087, %233 ], [ %.087, %230 ], [ %.087, %213 ], [ %.087, %206 ], [ %.087, %199 ], [ %.087, %195 ], [ %.087, %194 ], [ %.087, %184 ], [ %.087, %174 ], [ %.087, %170 ], [ 0, %169 ], [ %.087, %165 ], [ %.087, %164 ], [ %.087, %162 ], [ %.087, %150 ], [ %.087, %146 ], [ %.087, %145 ], [ %.087, %143 ], [ %.087, %142 ], [ %.087, %132 ], [ %.087, %122 ], [ %.087, %120 ], [ %.087, %119 ], [ %.087, %109 ], [ %.087, %99 ], [ %.087, %94 ], [ %.087, %93 ], [ %.087, %79 ], [ %.087, %69 ], [ %.087, %66 ], [ %.087, %62 ], [ %.087, %61 ], [ %.087, %51 ], [ %.087, %41 ], [ %.087, %39 ], [ %.087, %27 ], [ %.087, %17 ]
  %.085.be = phi i32 [ %.085, %16 ], [ %.085, %497 ], [ %.085, %494 ], [ %.085, %486 ], [ %.085, %485 ], [ %.085, %484 ], [ %.085, %483 ], [ %.085, %482 ], [ %481, %480 ], [ 0, %479 ], [ %.085, %478 ], [ %.085, %477 ], [ %.085, %472 ], [ %.085, %471 ], [ %.085, %470 ], [ %.085, %468 ], [ %.085, %467 ], [ %.085, %465 ], [ %.085, %464 ], [ %.085, %463 ], [ %.085, %462 ], [ %.085, %461 ], [ %.085, %450 ], [ %.085, %440 ], [ %.085, %433 ], [ %.085, %426 ], [ %.085, %425 ], [ %.085, %424 ], [ %.085, %412 ], [ %.085, %402 ], [ %.085, %401 ], [ %.085, %384 ], [ %.085, %374 ], [ %.085, %367 ], [ %.085, %365 ], [ %.085, %352 ], [ %.085, %342 ], [ %.085, %338 ], [ %.085, %337 ], [ %.085, %327 ], [ %.085, %317 ], [ %.085, %313 ], [ %.085, %312 ], [ %.085, %310 ], [ %.085, %309 ], [ %.085, %299 ], [ %.085, %289 ], [ %.085, %287 ], [ %.085, %286 ], [ %.085, %276 ], [ %.085, %266 ], [ %.085, %265 ], [ %.neg106, %255 ], [ %.085, %245 ], [ %.085, %244 ], [ %.085, %241 ], [ %.085, %233 ], [ %.085, %230 ], [ %.085, %213 ], [ %.085, %206 ], [ %.085, %199 ], [ %.085, %195 ], [ %.085, %194 ], [ 0, %184 ], [ %.085, %174 ], [ %.085, %170 ], [ %.085, %169 ], [ %.085, %165 ], [ %.085, %164 ], [ %.085, %162 ], [ %.085, %150 ], [ %.085, %146 ], [ %.085, %145 ], [ %.085, %143 ], [ %.085, %142 ], [ %.085, %132 ], [ %.085, %122 ], [ %.085, %120 ], [ %.085, %119 ], [ %.085, %109 ], [ %.085, %99 ], [ %.085, %94 ], [ %.085, %93 ], [ %.085, %79 ], [ %.085, %69 ], [ %.085, %66 ], [ %.085, %62 ], [ %.085, %61 ], [ %.085, %51 ], [ %.085, %41 ], [ %.085, %39 ], [ %.085, %27 ], [ %.085, %17 ]
  %.083.be = phi i32 [ %.083, %16 ], [ %.083, %497 ], [ %.083, %494 ], [ %.083, %486 ], [ %.083, %485 ], [ %.083, %484 ], [ %.083, %483 ], [ %.083, %482 ], [ %.083, %480 ], [ %.083, %479 ], [ %.083, %478 ], [ %.083, %477 ], [ %.083, %472 ], [ %.083, %471 ], [ %.083, %470 ], [ %.083, %468 ], [ %.neg, %467 ], [ %.083, %465 ], [ %.083, %464 ], [ %.083, %463 ], [ %.083, %462 ], [ %.083, %461 ], [ %.083, %450 ], [ %.083, %440 ], [ %.083, %433 ], [ %.083, %426 ], [ %.083, %425 ], [ %.083, %424 ], [ %.083, %412 ], [ %.083, %402 ], [ %.083, %401 ], [ %.083, %384 ], [ %.083, %374 ], [ %.083, %367 ], [ %.083, %365 ], [ %.083, %352 ], [ %.083, %342 ], [ %.083, %338 ], [ %.083, %337 ], [ %.083, %327 ], [ %.083, %317 ], [ %.083, %313 ], [ 0, %312 ], [ %.083, %310 ], [ %.083, %309 ], [ %.083, %299 ], [ %.083, %289 ], [ %.083, %287 ], [ %.083, %286 ], [ %.083, %276 ], [ %.083, %266 ], [ %.083, %265 ], [ %.083, %255 ], [ %.083, %245 ], [ %.083, %244 ], [ %.083, %241 ], [ %.083, %233 ], [ %.083, %230 ], [ %.083, %213 ], [ %.083, %206 ], [ %.083, %199 ], [ %.083, %195 ], [ %.083, %194 ], [ %.083, %184 ], [ %.083, %174 ], [ %.083, %170 ], [ %.083, %169 ], [ %.083, %165 ], [ %.083, %164 ], [ %.083, %162 ], [ %.083, %150 ], [ %.083, %146 ], [ %.083, %145 ], [ %.083, %143 ], [ %.083, %142 ], [ %.083, %132 ], [ %.083, %122 ], [ %.083, %120 ], [ %.083, %119 ], [ %.083, %109 ], [ %.083, %99 ], [ %.083, %94 ], [ %.083, %93 ], [ %.083, %79 ], [ %.083, %69 ], [ %.083, %66 ], [ %.083, %62 ], [ %.083, %61 ], [ %.083, %51 ], [ %.083, %41 ], [ %.083, %39 ], [ %.083, %27 ], [ %.083, %17 ]
  %.081.be = phi i32 [ %.081, %16 ], [ %.081, %497 ], [ %.081, %494 ], [ %.081, %486 ], [ %.081, %485 ], [ 0, %484 ], [ %.081, %483 ], [ %.081, %482 ], [ %.081, %480 ], [ %.081, %479 ], [ %.081, %478 ], [ %.081, %477 ], [ %.081, %472 ], [ %.081, %471 ], [ %.081, %470 ], [ %.081, %468 ], [ %.081, %467 ], [ %.081, %465 ], [ %.neg100, %464 ], [ %.081, %463 ], [ %.081, %462 ], [ %.081, %461 ], [ %.081, %450 ], [ %.081, %440 ], [ %.081, %433 ], [ %.081, %426 ], [ %.081, %425 ], [ %.081, %424 ], [ %.081, %412 ], [ %.081, %402 ], [ %.081, %401 ], [ %.081, %384 ], [ %.081, %374 ], [ %.081, %367 ], [ %.081, %365 ], [ %.081, %352 ], [ %.081, %342 ], [ %.081, %338 ], [ %.081, %337 ], [ 0, %327 ], [ %.081, %317 ], [ %.081, %313 ], [ %.081, %312 ], [ %.081, %310 ], [ %.081, %309 ], [ %.081, %299 ], [ %.081, %289 ], [ %.081, %287 ], [ %.081, %286 ], [ %.081, %276 ], [ %.081, %266 ], [ %.081, %265 ], [ %.081, %255 ], [ %.081, %245 ], [ %.081, %244 ], [ %.081, %241 ], [ %.081, %233 ], [ %.081, %230 ], [ %.081, %213 ], [ %.081, %206 ], [ %.081, %199 ], [ %.081, %195 ], [ %.081, %194 ], [ %.081, %184 ], [ %.081, %174 ], [ %.081, %170 ], [ %.081, %169 ], [ %.081, %165 ], [ %.081, %164 ], [ %.081, %162 ], [ %.081, %150 ], [ %.081, %146 ], [ %.081, %145 ], [ %.081, %143 ], [ %.081, %142 ], [ %.081, %132 ], [ %.081, %122 ], [ %.081, %120 ], [ %.081, %119 ], [ %.081, %109 ], [ %.081, %99 ], [ %.081, %94 ], [ %.081, %93 ], [ %.081, %79 ], [ %.081, %69 ], [ %.081, %66 ], [ %.081, %62 ], [ %.081, %61 ], [ %.081, %51 ], [ %.081, %41 ], [ %.081, %39 ], [ %.081, %27 ], [ %.081, %17 ]
  %.0.be = phi i32 [ %.0, %16 ], [ 1258091625, %497 ], [ 1771663788, %494 ], [ -54258855, %486 ], [ 1134227519, %485 ], [ 1827977845, %484 ], [ 1168581645, %483 ], [ 206911969, %482 ], [ -196782982, %480 ], [ -901981725, %479 ], [ -314379781, %478 ], [ 988419927, %477 ], [ -289970859, %472 ], [ -166779692, %471 ], [ 1101778833, %470 ], [ 215360600, %468 ], [ -1718254963, %467 ], [ 268335383, %465 ], [ -2036208574, %464 ], [ -1707099529, %463 ], [ -1650970100, %462 ], [ 376141064, %461 ], [ %460, %450 ], [ %449, %440 ], [ 376141064, %433 ], [ %432, %426 ], [ -1650970100, %425 ], [ -748519092, %424 ], [ %423, %412 ], [ %411, %402 ], [ -748519092, %401 ], [ %400, %384 ], [ %383, %374 ], [ %373, %367 ], [ %366, %365 ], [ %364, %352 ], [ %351, %342 ], [ %341, %338 ], [ -2036208574, %337 ], [ %336, %327 ], [ %326, %317 ], [ %316, %313 ], [ -1718254963, %312 ], [ -1796260684, %310 ], [ -1782158990, %309 ], [ %308, %299 ], [ %298, %289 ], [ 228121158, %287 ], [ -150959152, %286 ], [ %285, %276 ], [ %275, %266 ], [ -297166154, %265 ], [ %264, %255 ], [ %254, %245 ], [ 1162116064, %244 ], [ 215360600, %241 ], [ %240, %233 ], [ %232, %230 ], [ -716845943, %213 ], [ %212, %206 ], [ %205, %199 ], [ %198, %195 ], [ -297166154, %194 ], [ %193, %184 ], [ %183, %174 ], [ %173, %170 ], [ 228121158, %169 ], [ %168, %165 ], [ -1796260684, %164 ], [ 1246841871, %162 ], [ -294108608, %150 ], [ %149, %146 ], [ 1246841871, %145 ], [ -1950302558, %143 ], [ 855696755, %142 ], [ %141, %132 ], [ %131, %122 ], [ -1511379000, %120 ], [ -1150456487, %119 ], [ %118, %109 ], [ %108, %99 ], [ 1037025694, %94 ], [ 1037025694, %93 ], [ %92, %79 ], [ %78, %69 ], [ %68, %66 ], [ %65, %62 ], [ -1511379000, %61 ], [ %60, %51 ], [ %50, %41 ], [ %40, %39 ], [ %38, %27 ], [ %26, %17 ]
  br label %16

17:                                               ; preds = %16
  %18 = load i32, i32* @x.3, align 4
  %19 = load i32, i32* @y.4, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 1101778833, i32 -1963427001
  br label %.backedge

27:                                               ; preds = %16
  %28 = load i32, i32* %4, align 4
  %29 = icmp slt i32 %.095, %28
  store i1 %29, i1* %2, align 1
  %30 = load i32, i32* @x.3, align 4
  %31 = load i32, i32* @y.4, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 1151071569, i32 -1963427001
  br label %.backedge

39:                                               ; preds = %16
  %.0..0..0.79 = load volatile i1, i1* %2, align 1
  %40 = select i1 %.0..0..0.79, i32 1816355644, i32 1489297796
  br label %.backedge

41:                                               ; preds = %16
  %42 = load i32, i32* @x.3, align 4
  %43 = load i32, i32* @y.4, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -166779692, i32 -1763038772
  br label %.backedge

51:                                               ; preds = %16
  %52 = load i32, i32* @x.3, align 4
  %53 = load i32, i32* @y.4, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 1325810331, i32 -1763038772
  br label %.backedge

61:                                               ; preds = %16
  br label %.backedge

62:                                               ; preds = %16
  %63 = load i32, i32* %4, align 4
  %64 = icmp slt i32 %.093, %63
  %65 = select i1 %64, i32 -1607829624, i32 1553909598
  br label %.backedge

66:                                               ; preds = %16
  %67 = icmp eq i32 %.095, %.093
  %68 = select i1 %67, i32 1652051486, i32 1661388959
  br label %.backedge

69:                                               ; preds = %16
  %70 = load i32, i32* @x.3, align 4
  %71 = load i32, i32* @y.4, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -289970859, i32 -1138370477
  br label %.backedge

79:                                               ; preds = %16
  %80 = sext i32 %.095 to i64
  %.0..0..0.57 = load volatile i64, i64* %3, align 8
  %81 = mul nsw i64 %.0..0..0.57, %80
  %82 = sext i32 %.093 to i64
  %.idx118 = add nsw i64 %81, %82
  %83 = getelementptr inbounds i64, i64* %15, i64 %.idx118
  store i64 0, i64* %83, align 8
  %84 = load i32, i32* @x.3, align 4
  %85 = load i32, i32* @y.4, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 -198252954, i32 -1138370477
  br label %.backedge

93:                                               ; preds = %16
  br label %.backedge

94:                                               ; preds = %16
  %95 = sext i32 %.095 to i64
  %.0..0..0.58 = load volatile i64, i64* %3, align 8
  %96 = mul nsw i64 %.0..0..0.58, %95
  %97 = sext i32 %.093 to i64
  %.idx117 = add nsw i64 %96, %97
  %98 = getelementptr inbounds i64, i64* %15, i64 %.idx117
  store i64 99999999999, i64* %98, align 8
  br label %.backedge

99:                                               ; preds = %16
  %100 = load i32, i32* @x.3, align 4
  %101 = load i32, i32* @y.4, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 988419927, i32 -863242435
  br label %.backedge

109:                                              ; preds = %16
  %110 = load i32, i32* @x.3, align 4
  %111 = load i32, i32* @y.4, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 1157344260, i32 -863242435
  br label %.backedge

119:                                              ; preds = %16
  br label %.backedge

120:                                              ; preds = %16
  %121 = add i32 %.093, 1
  br label %.backedge

122:                                              ; preds = %16
  %123 = load i32, i32* @x.3, align 4
  %124 = load i32, i32* @y.4, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 -314379781, i32 -2001084820
  br label %.backedge

132:                                              ; preds = %16
  %133 = load i32, i32* @x.3, align 4
  %134 = load i32, i32* @y.4, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 -44612530, i32 -2001084820
  br label %.backedge

142:                                              ; preds = %16
  br label %.backedge

143:                                              ; preds = %16
  %144 = add i32 %.095, 1
  br label %.backedge

145:                                              ; preds = %16
  br label %.backedge

146:                                              ; preds = %16
  %147 = load i32, i32* %5, align 4
  %148 = icmp slt i32 %.091, %147
  %149 = select i1 %148, i32 2008050211, i32 609198736
  br label %.backedge

150:                                              ; preds = %16
  %151 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %152 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %151, i32* nonnull dereferenceable(4) %7)
  %153 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %152, i32* nonnull dereferenceable(4) %8)
  %154 = load i32, i32* %8, align 4
  %155 = sext i32 %154 to i64
  %156 = load i32, i32* %6, align 4
  %157 = sext i32 %156 to i64
  %.0..0..0.59 = load volatile i64, i64* %3, align 8
  %158 = mul nsw i64 %.0..0..0.59, %157
  %159 = load i32, i32* %7, align 4
  %160 = sext i32 %159 to i64
  %.idx116 = add nsw i64 %158, %160
  %161 = getelementptr inbounds i64, i64* %15, i64 %.idx116
  store i64 %155, i64* %161, align 8
  br label %.backedge

162:                                              ; preds = %16
  %163 = add i32 %.091, 1
  br label %.backedge

164:                                              ; preds = %16
  br label %.backedge

165:                                              ; preds = %16
  %166 = load i32, i32* %4, align 4
  %167 = icmp slt i32 %.089, %166
  %168 = select i1 %167, i32 510887034, i32 -1039796336
  br label %.backedge

169:                                              ; preds = %16
  br label %.backedge

170:                                              ; preds = %16
  %171 = load i32, i32* %4, align 4
  %172 = icmp slt i32 %.087, %171
  %173 = select i1 %172, i32 1302282383, i32 1075647138
  br label %.backedge

174:                                              ; preds = %16
  %175 = load i32, i32* @x.3, align 4
  %176 = load i32, i32* @y.4, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 -901981725, i32 -1215049970
  br label %.backedge

184:                                              ; preds = %16
  %185 = load i32, i32* @x.3, align 4
  %186 = load i32, i32* @y.4, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 -930646543, i32 -1215049970
  br label %.backedge

194:                                              ; preds = %16
  br label %.backedge

195:                                              ; preds = %16
  %196 = load i32, i32* %4, align 4
  %197 = icmp slt i32 %.085, %196
  %198 = select i1 %197, i32 -1225942530, i32 -520163419
  br label %.backedge

199:                                              ; preds = %16
  %200 = sext i32 %.087 to i64
  %.0..0..0.60 = load volatile i64, i64* %3, align 8
  %201 = mul nsw i64 %.0..0..0.60, %200
  %202 = sext i32 %.089 to i64
  %.idx114 = add nsw i64 %201, %202
  %203 = getelementptr inbounds i64, i64* %15, i64 %.idx114
  %204 = load i64, i64* %203, align 8
  %.not115 = icmp eq i64 %204, 99999999999
  %205 = select i1 %.not115, i32 -716845943, i32 -916854209
  br label %.backedge

206:                                              ; preds = %16
  %207 = sext i32 %.089 to i64
  %.0..0..0.61 = load volatile i64, i64* %3, align 8
  %208 = mul nsw i64 %.0..0..0.61, %207
  %209 = sext i32 %.085 to i64
  %.idx112 = add nsw i64 %208, %209
  %210 = getelementptr inbounds i64, i64* %15, i64 %.idx112
  %211 = load i64, i64* %210, align 8
  %.not113 = icmp eq i64 %211, 99999999999
  %212 = select i1 %.not113, i32 -716845943, i32 2061571135
  br label %.backedge

213:                                              ; preds = %16
  %214 = sext i32 %.087 to i64
  %.0..0..0.62 = load volatile i64, i64* %3, align 8
  %215 = mul nsw i64 %.0..0..0.62, %214
  %216 = sext i32 %.085 to i64
  %.idx108 = add nsw i64 %215, %216
  %217 = getelementptr inbounds i64, i64* %15, i64 %.idx108
  %.0..0..0.63 = load volatile i64, i64* %3, align 8
  %218 = mul nsw i64 %.0..0..0.63, %214
  %219 = sext i32 %.089 to i64
  %.idx109 = add nsw i64 %218, %219
  %220 = getelementptr inbounds i64, i64* %15, i64 %.idx109
  %221 = load i64, i64* %220, align 8
  %.0..0..0.64 = load volatile i64, i64* %3, align 8
  %222 = mul nsw i64 %.0..0..0.64, %219
  %.idx110 = add nsw i64 %222, %216
  %223 = getelementptr inbounds i64, i64* %15, i64 %.idx110
  %224 = load i64, i64* %223, align 8
  %225 = add i64 %224, %221
  store i64 %225, i64* %9, align 8
  %226 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %217, i64* nonnull dereferenceable(8) %9)
  %227 = load i64, i64* %226, align 8
  %.0..0..0.65 = load volatile i64, i64* %3, align 8
  %228 = mul nsw i64 %.0..0..0.65, %214
  %.idx111 = add nsw i64 %228, %216
  %229 = getelementptr inbounds i64, i64* %15, i64 %.idx111
  store i64 %227, i64* %229, align 8
  br label %.backedge

230:                                              ; preds = %16
  %231 = icmp eq i32 %.087, %.085
  %232 = select i1 %231, i32 576595696, i32 -435098196
  br label %.backedge

233:                                              ; preds = %16
  %234 = sext i32 %.087 to i64
  %.0..0..0.66 = load volatile i64, i64* %3, align 8
  %235 = mul nsw i64 %.0..0..0.66, %234
  %236 = sext i32 %.085 to i64
  %.idx107 = add nsw i64 %235, %236
  %237 = getelementptr inbounds i64, i64* %15, i64 %.idx107
  %238 = load i64, i64* %237, align 8
  %239 = icmp slt i64 %238, 0
  %240 = select i1 %239, i32 -1899160772, i32 -435098196
  br label %.backedge

241:                                              ; preds = %16
  %242 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %243 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %242, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

244:                                              ; preds = %16
  br label %.backedge

245:                                              ; preds = %16
  %246 = load i32, i32* @x.3, align 4
  %247 = load i32, i32* @y.4, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 -196782982, i32 1144845403
  br label %.backedge

255:                                              ; preds = %16
  %.neg106 = add i32 %.085, 1
  %256 = load i32, i32* @x.3, align 4
  %257 = load i32, i32* @y.4, align 4
  %258 = add i32 %256, -1
  %259 = mul i32 %258, %256
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %262, %261
  %264 = select i1 %263, i32 1754114830, i32 1144845403
  br label %.backedge

265:                                              ; preds = %16
  br label %.backedge

266:                                              ; preds = %16
  %267 = load i32, i32* @x.3, align 4
  %268 = load i32, i32* @y.4, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 206911969, i32 -1587496033
  br label %.backedge

276:                                              ; preds = %16
  %277 = load i32, i32* @x.3, align 4
  %278 = load i32, i32* @y.4, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 966186304, i32 -1587496033
  br label %.backedge

286:                                              ; preds = %16
  br label %.backedge

287:                                              ; preds = %16
  %288 = add i32 %.087, 1
  br label %.backedge

289:                                              ; preds = %16
  %290 = load i32, i32* @x.3, align 4
  %291 = load i32, i32* @y.4, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 1168581645, i32 942340422
  br label %.backedge

299:                                              ; preds = %16
  %300 = load i32, i32* @x.3, align 4
  %301 = load i32, i32* @y.4, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 998781199, i32 942340422
  br label %.backedge

309:                                              ; preds = %16
  br label %.backedge

310:                                              ; preds = %16
  %311 = add i32 %.089, 1
  br label %.backedge

312:                                              ; preds = %16
  br label %.backedge

313:                                              ; preds = %16
  %314 = load i32, i32* %4, align 4
  %315 = icmp slt i32 %.083, %314
  %316 = select i1 %315, i32 1302068330, i32 -1267201081
  br label %.backedge

317:                                              ; preds = %16
  %318 = load i32, i32* @x.3, align 4
  %319 = load i32, i32* @y.4, align 4
  %320 = add i32 %318, -1
  %321 = mul i32 %320, %318
  %322 = and i32 %321, 1
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %324, %323
  %326 = select i1 %325, i32 1827977845, i32 -1544373493
  br label %.backedge

327:                                              ; preds = %16
  %328 = load i32, i32* @x.3, align 4
  %329 = load i32, i32* @y.4, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 256528894, i32 -1544373493
  br label %.backedge

337:                                              ; preds = %16
  br label %.backedge

338:                                              ; preds = %16
  %339 = load i32, i32* %4, align 4
  %340 = icmp slt i32 %.081, %339
  %341 = select i1 %340, i32 -1387231218, i32 1808759184
  br label %.backedge

342:                                              ; preds = %16
  %343 = load i32, i32* @x.3, align 4
  %344 = load i32, i32* @y.4, align 4
  %345 = add i32 %343, -1
  %346 = mul i32 %345, %343
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %349, %348
  %351 = select i1 %350, i32 1134227519, i32 -570911501
  br label %.backedge

352:                                              ; preds = %16
  %353 = load i32, i32* %4, align 4
  %354 = add i32 %353, -1
  %355 = icmp ne i32 %.081, %354
  store i1 %355, i1* %1, align 1
  %356 = load i32, i32* @x.3, align 4
  %357 = load i32, i32* @y.4, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 1783324060, i32 -570911501
  br label %.backedge

365:                                              ; preds = %16
  %.0..0..0.80 = load volatile i1, i1* %1, align 1
  %366 = select i1 %.0..0..0.80, i32 756283897, i32 900450520
  br label %.backedge

367:                                              ; preds = %16
  %368 = sext i32 %.083 to i64
  %.0..0..0.67 = load volatile i64, i64* %3, align 8
  %369 = mul nsw i64 %.0..0..0.67, %368
  %370 = sext i32 %.081 to i64
  %.idx104 = add nsw i64 %369, %370
  %371 = getelementptr inbounds i64, i64* %15, i64 %.idx104
  %372 = load i64, i64* %371, align 8
  %.not105 = icmp eq i64 %372, 99999999999
  %373 = select i1 %.not105, i32 862567756, i32 73708944
  br label %.backedge

374:                                              ; preds = %16
  %375 = load i32, i32* @x.3, align 4
  %376 = load i32, i32* @y.4, align 4
  %377 = add i32 %375, -1
  %378 = mul i32 %377, %375
  %379 = and i32 %378, 1
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %381, %380
  %383 = select i1 %382, i32 -54258855, i32 -1066958486
  br label %.backedge

384:                                              ; preds = %16
  %385 = sext i32 %.083 to i64
  %.0..0..0.68 = load volatile i64, i64* %3, align 8
  %386 = mul nsw i64 %.0..0..0.68, %385
  %387 = sext i32 %.081 to i64
  %.idx103 = add nsw i64 %386, %387
  %388 = getelementptr inbounds i64, i64* %15, i64 %.idx103
  %389 = load i64, i64* %388, align 8
  %390 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %389)
  %391 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %390, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %392 = load i32, i32* @x.3, align 4
  %393 = load i32, i32* @y.4, align 4
  %394 = add i32 %392, -1
  %395 = mul i32 %394, %392
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %398, %397
  %400 = select i1 %399, i32 -210877666, i32 -1066958486
  br label %.backedge

401:                                              ; preds = %16
  br label %.backedge

402:                                              ; preds = %16
  %403 = load i32, i32* @x.3, align 4
  %404 = load i32, i32* @y.4, align 4
  %405 = add i32 %403, -1
  %406 = mul i32 %405, %403
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %409, %408
  %411 = select i1 %410, i32 1771663788, i32 711147962
  br label %.backedge

412:                                              ; preds = %16
  %413 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %414 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %413, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %415 = load i32, i32* @x.3, align 4
  %416 = load i32, i32* @y.4, align 4
  %417 = add i32 %415, -1
  %418 = mul i32 %417, %415
  %419 = and i32 %418, 1
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %421, %420
  %423 = select i1 %422, i32 -1541687323, i32 711147962
  br label %.backedge

424:                                              ; preds = %16
  br label %.backedge

425:                                              ; preds = %16
  br label %.backedge

426:                                              ; preds = %16
  %427 = sext i32 %.083 to i64
  %.0..0..0.69 = load volatile i64, i64* %3, align 8
  %428 = mul nsw i64 %.0..0..0.69, %427
  %429 = sext i32 %.081 to i64
  %.idx102 = add nsw i64 %428, %429
  %430 = getelementptr inbounds i64, i64* %15, i64 %.idx102
  %431 = load i64, i64* %430, align 8
  %.not = icmp eq i64 %431, 99999999999
  %432 = select i1 %.not, i32 -1080553365, i32 27520324
  br label %.backedge

433:                                              ; preds = %16
  %434 = sext i32 %.083 to i64
  %.0..0..0.70 = load volatile i64, i64* %3, align 8
  %435 = mul nsw i64 %.0..0..0.70, %434
  %436 = sext i32 %.081 to i64
  %.idx101 = add nsw i64 %435, %436
  %437 = getelementptr inbounds i64, i64* %15, i64 %.idx101
  %438 = load i64, i64* %437, align 8
  %439 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %438)
  br label %.backedge

440:                                              ; preds = %16
  %441 = load i32, i32* @x.3, align 4
  %442 = load i32, i32* @y.4, align 4
  %443 = add i32 %441, -1
  %444 = mul i32 %443, %441
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %447, %446
  %449 = select i1 %448, i32 1258091625, i32 1352697853
  br label %.backedge

450:                                              ; preds = %16
  %451 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %452 = load i32, i32* @x.3, align 4
  %453 = load i32, i32* @y.4, align 4
  %454 = add i32 %452, -1
  %455 = mul i32 %454, %452
  %456 = and i32 %455, 1
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %458, %457
  %460 = select i1 %459, i32 -1852951998, i32 1352697853
  br label %.backedge

461:                                              ; preds = %16
  br label %.backedge

462:                                              ; preds = %16
  br label %.backedge

463:                                              ; preds = %16
  br label %.backedge

464:                                              ; preds = %16
  %.neg100 = add i32 %.081, 1
  br label %.backedge

465:                                              ; preds = %16
  %466 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

467:                                              ; preds = %16
  %.neg = add i32 %.083, 1
  br label %.backedge

468:                                              ; preds = %16
  br label %.backedge

469:                                              ; preds = %16
  ret i32 0

470:                                              ; preds = %16
  br label %.backedge

471:                                              ; preds = %16
  br label %.backedge

472:                                              ; preds = %16
  %473 = sext i32 %.095 to i64
  %.0..0..0.71 = load volatile i64, i64* %3, align 8
  %.0..0..0.72 = load volatile i64, i64* %3, align 8
  %.0..0..0.73 = load volatile i64, i64* %3, align 8
  %474 = mul nsw i64 %.0..0..0.73, %473
  %475 = sext i32 %.093 to i64
  %.idx99 = add nsw i64 %474, %475
  %476 = getelementptr inbounds i64, i64* %15, i64 %.idx99
  store i64 0, i64* %476, align 8
  br label %.backedge

477:                                              ; preds = %16
  br label %.backedge

478:                                              ; preds = %16
  br label %.backedge

479:                                              ; preds = %16
  br label %.backedge

480:                                              ; preds = %16
  %481 = add i32 %.085, 1
  br label %.backedge

482:                                              ; preds = %16
  br label %.backedge

483:                                              ; preds = %16
  br label %.backedge

484:                                              ; preds = %16
  br label %.backedge

485:                                              ; preds = %16
  br label %.backedge

486:                                              ; preds = %16
  %487 = sext i32 %.083 to i64
  %.0..0..0.74 = load volatile i64, i64* %3, align 8
  %.0..0..0.75 = load volatile i64, i64* %3, align 8
  %.0..0..0.76 = load volatile i64, i64* %3, align 8
  %.0..0..0.77 = load volatile i64, i64* %3, align 8
  %.0..0..0.78 = load volatile i64, i64* %3, align 8
  %488 = mul nsw i64 %.0..0..0.78, %487
  %489 = sext i32 %.081 to i64
  %.idx = add nsw i64 %488, %489
  %490 = getelementptr inbounds i64, i64* %15, i64 %.idx
  %491 = load i64, i64* %490, align 8
  %492 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %491)
  %493 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %492, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

494:                                              ; preds = %16
  %495 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %496 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %495, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

497:                                              ; preds = %16
  %498 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  %8 = load i32, i32* @x.5, align 4
  %9 = load i32, i32* @y.6, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -655775673, i32 2076063640
  %17 = select i1 %15, i32 -340003324, i32 2076063640
  %18 = select i1 %15, i32 1508668745, i32 -864336800
  %19 = select i1 %15, i32 1674736865, i32 -864336800
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i64* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i64* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ -1535981939, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1535981939, label %21
    i32 -944905075, label %24
    i32 -1910239436, label %25
    i32 1674736865, label %26
    i32 1508668745, label %27
    i32 138472189, label %28
    i32 -340003324, label %29
    i32 -655775673, label %30
    i32 -864336800, label %31
    i32 2076063640, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i64* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i64* [ %.010, %20 ], [ %.010, %32 ], [ %0, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %.010, %27 ], [ %0, %26 ], [ %.010, %25 ], [ %1, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ -340003324, %32 ], [ 1674736865, %31 ], [ %16, %29 ], [ %17, %28 ], [ 138472189, %27 ], [ %18, %26 ], [ %19, %25 ], [ 138472189, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i64, i64* %5, align 8
  %.0..0..0.8 = load volatile i64, i64* %4, align 8
  %22 = icmp slt i64 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 -944905075, i32 -1910239436
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i64* %.01013, i64** %3, align 8
  %.0..0..0.9 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s649639632.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
