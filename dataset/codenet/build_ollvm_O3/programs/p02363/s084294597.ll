; ModuleID = 'build_ollvm/programs/p02363/s084294597.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s084294597.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@G = local_unnamed_addr global [105 x [105 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"INF \00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s084294597.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i64 @_Z3minix(i32 %0, i64 %1) local_unnamed_addr #4 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = sext i32 %0 to i64
  store i64 %5, i64* %4, align 8
  store i64 %1, i64* %3, align 8
  br label %.outer.outer

.outer.outer:                                     ; preds = %.outer.outer.backedge, %2
  %.07.ph.ph = phi i32 [ 548012042, %2 ], [ -237030923, %.outer.outer.backedge ]
  %.0.ph.ph = phi i64 [ undef, %2 ], [ %.0.ph.ph.be, %.outer.outer.backedge ]
  br label %.outer

.outer:                                           ; preds = %.outer.outer, %7
  %.07.ph = phi i32 [ %9, %7 ], [ %.07.ph.ph, %.outer.outer ]
  br label %6

6:                                                ; preds = %.outer, %6
  switch i32 %.07.ph, label %6 [
    i32 548012042, label %7
    i32 -203425559, label %.outer.outer.backedge
    i32 -210634034, label %10
    i32 -237030923, label %11
  ]

7:                                                ; preds = %6
  %.0..0..0. = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %8 = icmp slt i64 %.0..0..0., %.0..0..0.6
  %9 = select i1 %8, i32 -203425559, i32 -210634034
  br label %.outer

.outer.outer.backedge:                            ; preds = %6, %10
  %.0.ph.ph.be = phi i64 [ %1, %10 ], [ %5, %6 ]
  br label %.outer.outer

10:                                               ; preds = %6
  br label %.outer.outer.backedge

11:                                               ; preds = %6
  ret i64 %.0.ph.ph
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %12, i32* nonnull dereferenceable(4) %8)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(88200) bitcast ([105 x [105 x i64]]* @G to i8*), i8 63, i64 88200, i1 false)
  br label %14

14:                                               ; preds = %.backedge, %0
  %.075 = phi i32 [ 0, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.0 = phi i32 [ -468323964, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -468323964, label %15
    i32 302804546, label %25
    i32 -532634012, label %36
    i32 486437388, label %38
    i32 783133380, label %41
    i32 1480929764, label %51
    i32 1301638242, label %62
    i32 -444367641, label %63
    i32 1135585283, label %64
    i32 943639017, label %67
    i32 -1260547363, label %77
    i32 -297469886, label %105
    i32 -233992591, label %106
    i32 1175255698, label %116
    i32 603261977, label %127
    i32 -736678492, label %128
    i32 -2040252288, label %129
    i32 -406162643, label %139
    i32 677175971, label %151
    i32 1607955931, label %153
    i32 1624078356, label %154
    i32 -270255542, label %164
    i32 -745970827, label %176
    i32 1552839059, label %178
    i32 -998603169, label %179
    i32 458123737, label %189
    i32 256623963, label %201
    i32 -1308647912, label %203
    i32 -2067753578, label %213
    i32 -523719495, label %234
    i32 861707989, label %236
    i32 618049600, label %246
    i32 908292753, label %247
    i32 51237919, label %249
    i32 1701635151, label %259
    i32 2113198424, label %269
    i32 -1661580404, label %270
    i32 -468452515, label %272
    i32 -746117732, label %273
    i32 -810276998, label %283
    i32 1493385417, label %293
    i32 -561189173, label %294
    i32 -1741967409, label %295
    i32 504873170, label %298
    i32 345296215, label %304
    i32 530151497, label %307
    i32 -273278774, label %317
    i32 2020148682, label %327
    i32 1126001025, label %328
    i32 -327098721, label %338
    i32 -1378624749, label %349
    i32 1382440353, label %350
    i32 -1889036738, label %351
    i32 -1642060462, label %361
    i32 1783484668, label %373
    i32 501158231, label %375
    i32 561875317, label %385
    i32 -177481661, label %395
    i32 117354785, label %396
    i32 -1653343942, label %401
    i32 -1997210835, label %408
    i32 -1139713357, label %415
    i32 -1528152925, label %417
    i32 835958156, label %418
    i32 901722712, label %420
    i32 -550464893, label %429
    i32 -112086755, label %439
    i32 -1726025941, label %457
    i32 468444882, label %458
    i32 -2073817271, label %461
    i32 -1506326094, label %462
    i32 -1138030122, label %464
    i32 454138930, label %465
    i32 -850849358, label %466
    i32 -1874471725, label %468
    i32 995786406, label %487
    i32 647476276, label %489
    i32 561305665, label %490
    i32 -1763295775, label %491
    i32 1546119877, label %492
    i32 -1205632807, label %493
    i32 79067471, label %494
    i32 -316290717, label %496
    i32 -1029909361, label %497
    i32 -289490611, label %498
    i32 201559455, label %499
    i32 2072795918, label %500
  ]

.backedge:                                        ; preds = %14, %500, %499, %498, %497, %496, %494, %493, %492, %491, %490, %489, %487, %468, %466, %465, %462, %461, %458, %457, %439, %429, %420, %418, %417, %415, %408, %401, %396, %395, %385, %375, %373, %361, %351, %350, %349, %338, %328, %327, %317, %307, %304, %298, %295, %294, %293, %283, %273, %272, %270, %269, %259, %249, %247, %246, %236, %234, %213, %203, %201, %189, %179, %178, %176, %164, %154, %153, %151, %139, %129, %128, %127, %116, %106, %105, %77, %67, %64, %63, %62, %51, %41, %38, %36, %25, %15
  %.075.be = phi i32 [ %.075, %14 ], [ %.075, %500 ], [ %.075, %499 ], [ %.075, %498 ], [ %.075, %497 ], [ %.075, %496 ], [ %.075, %494 ], [ %.075, %493 ], [ %.075, %492 ], [ %.075, %491 ], [ %.075, %490 ], [ %.075, %489 ], [ %.075, %487 ], [ %.075, %468 ], [ %467, %466 ], [ %.075, %465 ], [ %.075, %462 ], [ %.075, %461 ], [ %.075, %458 ], [ %.075, %457 ], [ %.075, %439 ], [ %.075, %429 ], [ %.075, %420 ], [ %.075, %418 ], [ %.075, %417 ], [ %.075, %415 ], [ %.075, %408 ], [ %.075, %401 ], [ %.075, %396 ], [ %.075, %395 ], [ %.075, %385 ], [ %.075, %375 ], [ %.075, %373 ], [ %.075, %361 ], [ %.075, %351 ], [ %.075, %350 ], [ %.075, %349 ], [ %.075, %338 ], [ %.075, %328 ], [ %.075, %327 ], [ %.075, %317 ], [ %.075, %307 ], [ %.075, %304 ], [ %.075, %298 ], [ %.075, %295 ], [ %.075, %294 ], [ %.075, %293 ], [ %.075, %283 ], [ %.075, %273 ], [ %.075, %272 ], [ %.075, %270 ], [ %.075, %269 ], [ %.075, %259 ], [ %.075, %249 ], [ %.075, %247 ], [ %.075, %246 ], [ %.075, %236 ], [ %.075, %234 ], [ %.075, %213 ], [ %.075, %203 ], [ %.075, %201 ], [ %.075, %189 ], [ %.075, %179 ], [ %.075, %178 ], [ %.075, %176 ], [ %.075, %164 ], [ %.075, %154 ], [ %.075, %153 ], [ %.075, %151 ], [ %.075, %139 ], [ %.075, %129 ], [ %.075, %128 ], [ %.075, %127 ], [ %.075, %116 ], [ %.075, %106 ], [ %.075, %105 ], [ %.075, %77 ], [ %.075, %67 ], [ %.075, %64 ], [ %.075, %63 ], [ %.075, %62 ], [ %52, %51 ], [ %.075, %41 ], [ %.075, %38 ], [ %.075, %36 ], [ %.075, %25 ], [ %.075, %15 ]
  %.073.be = phi i32 [ %.073, %14 ], [ %.073, %500 ], [ %.073, %499 ], [ %.073, %498 ], [ %.073, %497 ], [ %.073, %496 ], [ %.073, %494 ], [ %.073, %493 ], [ %.073, %492 ], [ %.073, %491 ], [ %.073, %490 ], [ %.073, %489 ], [ %488, %487 ], [ %.073, %468 ], [ %.073, %466 ], [ %.073, %465 ], [ %.073, %462 ], [ %.073, %461 ], [ %.073, %458 ], [ %.073, %457 ], [ %.073, %439 ], [ %.073, %429 ], [ %.073, %420 ], [ %.073, %418 ], [ %.073, %417 ], [ %.073, %415 ], [ %.073, %408 ], [ %.073, %401 ], [ %.073, %396 ], [ %.073, %395 ], [ %.073, %385 ], [ %.073, %375 ], [ %.073, %373 ], [ %.073, %361 ], [ %.073, %351 ], [ %.073, %350 ], [ %.073, %349 ], [ %.073, %338 ], [ %.073, %328 ], [ %.073, %327 ], [ %.073, %317 ], [ %.073, %307 ], [ %.073, %304 ], [ %.073, %298 ], [ %.073, %295 ], [ %.073, %294 ], [ %.073, %293 ], [ %.073, %283 ], [ %.073, %273 ], [ %.073, %272 ], [ %.073, %270 ], [ %.073, %269 ], [ %.073, %259 ], [ %.073, %249 ], [ %.073, %247 ], [ %.073, %246 ], [ %.073, %236 ], [ %.073, %234 ], [ %.073, %213 ], [ %.073, %203 ], [ %.073, %201 ], [ %.073, %189 ], [ %.073, %179 ], [ %.073, %178 ], [ %.073, %176 ], [ %.073, %164 ], [ %.073, %154 ], [ %.073, %153 ], [ %.073, %151 ], [ %.073, %139 ], [ %.073, %129 ], [ %.073, %128 ], [ %.073, %127 ], [ %117, %116 ], [ %.073, %106 ], [ %.073, %105 ], [ %.073, %77 ], [ %.073, %67 ], [ %.073, %64 ], [ 1, %63 ], [ %.073, %62 ], [ %.073, %51 ], [ %.073, %41 ], [ %.073, %38 ], [ %.073, %36 ], [ %.073, %25 ], [ %.073, %15 ]
  %.071.be = phi i32 [ %.071, %14 ], [ %.071, %500 ], [ %.071, %499 ], [ %.071, %498 ], [ %.071, %497 ], [ %.071, %496 ], [ %495, %494 ], [ %.071, %493 ], [ %.071, %492 ], [ %.071, %491 ], [ %.071, %490 ], [ %.071, %489 ], [ %.071, %487 ], [ %.071, %468 ], [ %.071, %466 ], [ %.071, %465 ], [ %.071, %462 ], [ %.071, %461 ], [ %.071, %458 ], [ %.071, %457 ], [ %.071, %439 ], [ %.071, %429 ], [ %.071, %420 ], [ %.071, %418 ], [ %.071, %417 ], [ %.071, %415 ], [ %.071, %408 ], [ %.071, %401 ], [ %.071, %396 ], [ %.071, %395 ], [ %.071, %385 ], [ %.071, %375 ], [ %.071, %373 ], [ %.071, %361 ], [ %.071, %351 ], [ %.071, %350 ], [ %.071, %349 ], [ %.071, %338 ], [ %.071, %328 ], [ %.071, %327 ], [ %.071, %317 ], [ %.071, %307 ], [ %.071, %304 ], [ %.071, %298 ], [ %.071, %295 ], [ %.071, %294 ], [ %.071, %293 ], [ %.neg79, %283 ], [ %.071, %273 ], [ %.071, %272 ], [ %.071, %270 ], [ %.071, %269 ], [ %.071, %259 ], [ %.071, %249 ], [ %.071, %247 ], [ %.071, %246 ], [ %.071, %236 ], [ %.071, %234 ], [ %.071, %213 ], [ %.071, %203 ], [ %.071, %201 ], [ %.071, %189 ], [ %.071, %179 ], [ %.071, %178 ], [ %.071, %176 ], [ %.071, %164 ], [ %.071, %154 ], [ %.071, %153 ], [ %.071, %151 ], [ %.071, %139 ], [ %.071, %129 ], [ 0, %128 ], [ %.071, %127 ], [ %.071, %116 ], [ %.071, %106 ], [ %.071, %105 ], [ %.071, %77 ], [ %.071, %67 ], [ %.071, %64 ], [ %.071, %63 ], [ %.071, %62 ], [ %.071, %51 ], [ %.071, %41 ], [ %.071, %38 ], [ %.071, %36 ], [ %.071, %25 ], [ %.071, %15 ]
  %.069.be = phi i32 [ %.069, %14 ], [ %.069, %500 ], [ %.069, %499 ], [ %.069, %498 ], [ %.069, %497 ], [ %.069, %496 ], [ %.069, %494 ], [ %.069, %493 ], [ %.069, %492 ], [ %.069, %491 ], [ %.069, %490 ], [ %.069, %489 ], [ %.069, %487 ], [ %.069, %468 ], [ %.069, %466 ], [ %.069, %465 ], [ %.069, %462 ], [ %.069, %461 ], [ %.069, %458 ], [ %.069, %457 ], [ %.069, %439 ], [ %.069, %429 ], [ %.069, %420 ], [ %.069, %418 ], [ %.069, %417 ], [ %.069, %415 ], [ %.069, %408 ], [ %.069, %401 ], [ %.069, %396 ], [ %.069, %395 ], [ %.069, %385 ], [ %.069, %375 ], [ %.069, %373 ], [ %.069, %361 ], [ %.069, %351 ], [ %.069, %350 ], [ %.069, %349 ], [ %.069, %338 ], [ %.069, %328 ], [ %.069, %327 ], [ %.069, %317 ], [ %.069, %307 ], [ %.069, %304 ], [ %.069, %298 ], [ %.069, %295 ], [ %.069, %294 ], [ %.069, %293 ], [ %.069, %283 ], [ %.069, %273 ], [ %.069, %272 ], [ %271, %270 ], [ %.069, %269 ], [ %.069, %259 ], [ %.069, %249 ], [ %.069, %247 ], [ %.069, %246 ], [ %.069, %236 ], [ %.069, %234 ], [ %.069, %213 ], [ %.069, %203 ], [ %.069, %201 ], [ %.069, %189 ], [ %.069, %179 ], [ %.069, %178 ], [ %.069, %176 ], [ %.069, %164 ], [ %.069, %154 ], [ 0, %153 ], [ %.069, %151 ], [ %.069, %139 ], [ %.069, %129 ], [ %.069, %128 ], [ %.069, %127 ], [ %.069, %116 ], [ %.069, %106 ], [ %.069, %105 ], [ %.069, %77 ], [ %.069, %67 ], [ %.069, %64 ], [ %.069, %63 ], [ %.069, %62 ], [ %.069, %51 ], [ %.069, %41 ], [ %.069, %38 ], [ %.069, %36 ], [ %.069, %25 ], [ %.069, %15 ]
  %.067.be = phi i32 [ %.067, %14 ], [ %.067, %500 ], [ %.067, %499 ], [ %.067, %498 ], [ %.067, %497 ], [ %.067, %496 ], [ %.067, %494 ], [ %.067, %493 ], [ %.067, %492 ], [ %.067, %491 ], [ %.067, %490 ], [ %.067, %489 ], [ %.067, %487 ], [ %.067, %468 ], [ %.067, %466 ], [ %.067, %465 ], [ %.067, %462 ], [ %.067, %461 ], [ %.067, %458 ], [ %.067, %457 ], [ %.067, %439 ], [ %.067, %429 ], [ %.067, %420 ], [ %.067, %418 ], [ %.067, %417 ], [ %.067, %415 ], [ %.067, %408 ], [ %.067, %401 ], [ %.067, %396 ], [ %.067, %395 ], [ %.067, %385 ], [ %.067, %375 ], [ %.067, %373 ], [ %.067, %361 ], [ %.067, %351 ], [ %.067, %350 ], [ %.067, %349 ], [ %.067, %338 ], [ %.067, %328 ], [ %.067, %327 ], [ %.067, %317 ], [ %.067, %307 ], [ %.067, %304 ], [ %.067, %298 ], [ %.067, %295 ], [ %.067, %294 ], [ %.067, %293 ], [ %.067, %283 ], [ %.067, %273 ], [ %.067, %272 ], [ %.067, %270 ], [ %.067, %269 ], [ %.067, %259 ], [ %.067, %249 ], [ %248, %247 ], [ %.067, %246 ], [ %.067, %236 ], [ %.067, %234 ], [ %.067, %213 ], [ %.067, %203 ], [ %.067, %201 ], [ %.067, %189 ], [ %.067, %179 ], [ 0, %178 ], [ %.067, %176 ], [ %.067, %164 ], [ %.067, %154 ], [ %.067, %153 ], [ %.067, %151 ], [ %.067, %139 ], [ %.067, %129 ], [ %.067, %128 ], [ %.067, %127 ], [ %.067, %116 ], [ %.067, %106 ], [ %.067, %105 ], [ %.067, %77 ], [ %.067, %67 ], [ %.067, %64 ], [ %.067, %63 ], [ %.067, %62 ], [ %.067, %51 ], [ %.067, %41 ], [ %.067, %38 ], [ %.067, %36 ], [ %.067, %25 ], [ %.067, %15 ]
  %.065.be = phi i32 [ %.065, %14 ], [ %.065, %500 ], [ %.065, %499 ], [ %.065, %498 ], [ %.neg, %497 ], [ %.065, %496 ], [ %.065, %494 ], [ %.065, %493 ], [ %.065, %492 ], [ %.065, %491 ], [ %.065, %490 ], [ %.065, %489 ], [ %.065, %487 ], [ %.065, %468 ], [ %.065, %466 ], [ %.065, %465 ], [ %.065, %462 ], [ %.065, %461 ], [ %.065, %458 ], [ %.065, %457 ], [ %.065, %439 ], [ %.065, %429 ], [ %.065, %420 ], [ %.065, %418 ], [ %.065, %417 ], [ %.065, %415 ], [ %.065, %408 ], [ %.065, %401 ], [ %.065, %396 ], [ %.065, %395 ], [ %.065, %385 ], [ %.065, %375 ], [ %.065, %373 ], [ %.065, %361 ], [ %.065, %351 ], [ %.065, %350 ], [ %.065, %349 ], [ %339, %338 ], [ %.065, %328 ], [ %.065, %327 ], [ %.065, %317 ], [ %.065, %307 ], [ %.065, %304 ], [ %.065, %298 ], [ %.065, %295 ], [ 0, %294 ], [ %.065, %293 ], [ %.065, %283 ], [ %.065, %273 ], [ %.065, %272 ], [ %.065, %270 ], [ %.065, %269 ], [ %.065, %259 ], [ %.065, %249 ], [ %.065, %247 ], [ %.065, %246 ], [ %.065, %236 ], [ %.065, %234 ], [ %.065, %213 ], [ %.065, %203 ], [ %.065, %201 ], [ %.065, %189 ], [ %.065, %179 ], [ %.065, %178 ], [ %.065, %176 ], [ %.065, %164 ], [ %.065, %154 ], [ %.065, %153 ], [ %.065, %151 ], [ %.065, %139 ], [ %.065, %129 ], [ %.065, %128 ], [ %.065, %127 ], [ %.065, %116 ], [ %.065, %106 ], [ %.065, %105 ], [ %.065, %77 ], [ %.065, %67 ], [ %.065, %64 ], [ %.065, %63 ], [ %.065, %62 ], [ %.065, %51 ], [ %.065, %41 ], [ %.065, %38 ], [ %.065, %36 ], [ %.065, %25 ], [ %.065, %15 ]
  %.063.be = phi i32 [ %.063, %14 ], [ %.063, %500 ], [ %.063, %499 ], [ %.063, %498 ], [ %.063, %497 ], [ %.063, %496 ], [ %.063, %494 ], [ %.063, %493 ], [ %.063, %492 ], [ %.063, %491 ], [ %.063, %490 ], [ %.063, %489 ], [ %.063, %487 ], [ %.063, %468 ], [ %.063, %466 ], [ %.063, %465 ], [ %463, %462 ], [ %.063, %461 ], [ %.063, %458 ], [ %.063, %457 ], [ %.063, %439 ], [ %.063, %429 ], [ %.063, %420 ], [ %.063, %418 ], [ %.063, %417 ], [ %.063, %415 ], [ %.063, %408 ], [ %.063, %401 ], [ %.063, %396 ], [ %.063, %395 ], [ %.063, %385 ], [ %.063, %375 ], [ %.063, %373 ], [ %.063, %361 ], [ %.063, %351 ], [ 0, %350 ], [ %.063, %349 ], [ %.063, %338 ], [ %.063, %328 ], [ %.063, %327 ], [ %.063, %317 ], [ %.063, %307 ], [ %.063, %304 ], [ %.063, %298 ], [ %.063, %295 ], [ %.063, %294 ], [ %.063, %293 ], [ %.063, %283 ], [ %.063, %273 ], [ %.063, %272 ], [ %.063, %270 ], [ %.063, %269 ], [ %.063, %259 ], [ %.063, %249 ], [ %.063, %247 ], [ %.063, %246 ], [ %.063, %236 ], [ %.063, %234 ], [ %.063, %213 ], [ %.063, %203 ], [ %.063, %201 ], [ %.063, %189 ], [ %.063, %179 ], [ %.063, %178 ], [ %.063, %176 ], [ %.063, %164 ], [ %.063, %154 ], [ %.063, %153 ], [ %.063, %151 ], [ %.063, %139 ], [ %.063, %129 ], [ %.063, %128 ], [ %.063, %127 ], [ %.063, %116 ], [ %.063, %106 ], [ %.063, %105 ], [ %.063, %77 ], [ %.063, %67 ], [ %.063, %64 ], [ %.063, %63 ], [ %.063, %62 ], [ %.063, %51 ], [ %.063, %41 ], [ %.063, %38 ], [ %.063, %36 ], [ %.063, %25 ], [ %.063, %15 ]
  %.061.be = phi i32 [ %.061, %14 ], [ %.061, %500 ], [ 0, %499 ], [ %.061, %498 ], [ %.061, %497 ], [ %.061, %496 ], [ %.061, %494 ], [ %.061, %493 ], [ %.061, %492 ], [ %.061, %491 ], [ %.061, %490 ], [ %.061, %489 ], [ %.061, %487 ], [ %.061, %468 ], [ %.061, %466 ], [ %.061, %465 ], [ %.061, %462 ], [ %.061, %461 ], [ %.061, %458 ], [ %.061, %457 ], [ %.061, %439 ], [ %.061, %429 ], [ %.061, %420 ], [ %419, %418 ], [ %.061, %417 ], [ %.061, %415 ], [ %.061, %408 ], [ %.061, %401 ], [ %.061, %396 ], [ %.061, %395 ], [ 0, %385 ], [ %.061, %375 ], [ %.061, %373 ], [ %.061, %361 ], [ %.061, %351 ], [ %.061, %350 ], [ %.061, %349 ], [ %.061, %338 ], [ %.061, %328 ], [ %.061, %327 ], [ %.061, %317 ], [ %.061, %307 ], [ %.061, %304 ], [ %.061, %298 ], [ %.061, %295 ], [ %.061, %294 ], [ %.061, %293 ], [ %.061, %283 ], [ %.061, %273 ], [ %.061, %272 ], [ %.061, %270 ], [ %.061, %269 ], [ %.061, %259 ], [ %.061, %249 ], [ %.061, %247 ], [ %.061, %246 ], [ %.061, %236 ], [ %.061, %234 ], [ %.061, %213 ], [ %.061, %203 ], [ %.061, %201 ], [ %.061, %189 ], [ %.061, %179 ], [ %.061, %178 ], [ %.061, %176 ], [ %.061, %164 ], [ %.061, %154 ], [ %.061, %153 ], [ %.061, %151 ], [ %.061, %139 ], [ %.061, %129 ], [ %.061, %128 ], [ %.061, %127 ], [ %.061, %116 ], [ %.061, %106 ], [ %.061, %105 ], [ %.061, %77 ], [ %.061, %67 ], [ %.061, %64 ], [ %.061, %63 ], [ %.061, %62 ], [ %.061, %51 ], [ %.061, %41 ], [ %.061, %38 ], [ %.061, %36 ], [ %.061, %25 ], [ %.061, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ -112086755, %500 ], [ 561875317, %499 ], [ -1642060462, %498 ], [ -327098721, %497 ], [ -273278774, %496 ], [ -810276998, %494 ], [ 1701635151, %493 ], [ -2067753578, %492 ], [ 458123737, %491 ], [ -270255542, %490 ], [ -406162643, %489 ], [ 1175255698, %487 ], [ -1260547363, %468 ], [ 1480929764, %466 ], [ 302804546, %465 ], [ -1889036738, %462 ], [ -1506326094, %461 ], [ -2073817271, %458 ], [ -2073817271, %457 ], [ %456, %439 ], [ %438, %429 ], [ %428, %420 ], [ 117354785, %418 ], [ 835958156, %417 ], [ -1528152925, %415 ], [ -1528152925, %408 ], [ %407, %401 ], [ %400, %396 ], [ 117354785, %395 ], [ %394, %385 ], [ %384, %375 ], [ %374, %373 ], [ %372, %361 ], [ %360, %351 ], [ -1889036738, %350 ], [ -1741967409, %349 ], [ %348, %338 ], [ %337, %328 ], [ 1126001025, %327 ], [ %326, %317 ], [ %316, %307 ], [ -1138030122, %304 ], [ %303, %298 ], [ %297, %295 ], [ -1741967409, %294 ], [ -2040252288, %293 ], [ %292, %283 ], [ %282, %273 ], [ -746117732, %272 ], [ 1624078356, %270 ], [ -1661580404, %269 ], [ %268, %259 ], [ %258, %249 ], [ -998603169, %247 ], [ 908292753, %246 ], [ 618049600, %236 ], [ %235, %234 ], [ %233, %213 ], [ %212, %203 ], [ %202, %201 ], [ %200, %189 ], [ %188, %179 ], [ -998603169, %178 ], [ %177, %176 ], [ %175, %164 ], [ %163, %154 ], [ 1624078356, %153 ], [ %152, %151 ], [ %150, %139 ], [ %138, %129 ], [ -2040252288, %128 ], [ 1135585283, %127 ], [ %126, %116 ], [ %115, %106 ], [ -233992591, %105 ], [ %104, %77 ], [ %76, %67 ], [ %66, %64 ], [ 1135585283, %63 ], [ -468323964, %62 ], [ %61, %51 ], [ %50, %41 ], [ 783133380, %38 ], [ %37, %36 ], [ %35, %25 ], [ %24, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* @x.6, align 4
  %17 = load i32, i32* @y.7, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 302804546, i32 454138930
  br label %.backedge

25:                                               ; preds = %14
  %26 = icmp slt i32 %.075, 105
  store i1 %26, i1* %6, align 1
  %27 = load i32, i32* @x.6, align 4
  %28 = load i32, i32* @y.7, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -532634012, i32 454138930
  br label %.backedge

36:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %37 = select i1 %.0..0..0., i32 486437388, i32 -444367641
  br label %.backedge

38:                                               ; preds = %14
  %39 = sext i32 %.075 to i64
  %40 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %39, i64 %39
  store i64 0, i64* %40, align 8
  br label %.backedge

41:                                               ; preds = %14
  %42 = load i32, i32* @x.6, align 4
  %43 = load i32, i32* @y.7, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 1480929764, i32 -850849358
  br label %.backedge

51:                                               ; preds = %14
  %52 = add i32 %.075, 1
  %53 = load i32, i32* @x.6, align 4
  %54 = load i32, i32* @y.7, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 1301638242, i32 -850849358
  br label %.backedge

62:                                               ; preds = %14
  br label %.backedge

63:                                               ; preds = %14
  br label %.backedge

64:                                               ; preds = %14
  %65 = load i32, i32* %8, align 4
  %.not = icmp sgt i32 %.073, %65
  %66 = select i1 %.not, i32 -736678492, i32 943639017
  br label %.backedge

67:                                               ; preds = %14
  %68 = load i32, i32* @x.6, align 4
  %69 = load i32, i32* @y.7, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 -1260547363, i32 -1874471725
  br label %.backedge

77:                                               ; preds = %14
  %78 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %79 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %78, i32* nonnull dereferenceable(4) %10)
  %80 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %79, i32* nonnull dereferenceable(4) %11)
  %81 = load i32, i32* %9, align 4
  %82 = sext i32 %81 to i64
  %83 = load i32, i32* %10, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %82, i64 %84
  %86 = load i64, i64* %85, align 8
  %87 = trunc i64 %86 to i32
  %88 = load i32, i32* %11, align 4
  %89 = sext i32 %88 to i64
  %90 = call i64 @_Z3minix(i32 %87, i64 %89)
  %91 = load i32, i32* %9, align 4
  %92 = sext i32 %91 to i64
  %93 = load i32, i32* %10, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %92, i64 %94
  store i64 %90, i64* %95, align 8
  %96 = load i32, i32* @x.6, align 4
  %97 = load i32, i32* @y.7, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 -297469886, i32 -1874471725
  br label %.backedge

105:                                              ; preds = %14
  br label %.backedge

106:                                              ; preds = %14
  %107 = load i32, i32* @x.6, align 4
  %108 = load i32, i32* @y.7, align 4
  %109 = add i32 %107, -1
  %110 = mul i32 %109, %107
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %113, %112
  %115 = select i1 %114, i32 1175255698, i32 995786406
  br label %.backedge

116:                                              ; preds = %14
  %117 = add i32 %.073, 1
  %118 = load i32, i32* @x.6, align 4
  %119 = load i32, i32* @y.7, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 603261977, i32 995786406
  br label %.backedge

127:                                              ; preds = %14
  br label %.backedge

128:                                              ; preds = %14
  br label %.backedge

129:                                              ; preds = %14
  %130 = load i32, i32* @x.6, align 4
  %131 = load i32, i32* @y.7, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -406162643, i32 647476276
  br label %.backedge

139:                                              ; preds = %14
  %140 = load i32, i32* %7, align 4
  %141 = icmp slt i32 %.071, %140
  store i1 %141, i1* %5, align 1
  %142 = load i32, i32* @x.6, align 4
  %143 = load i32, i32* @y.7, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 677175971, i32 647476276
  br label %.backedge

151:                                              ; preds = %14
  %.0..0..0.56 = load volatile i1, i1* %5, align 1
  %152 = select i1 %.0..0..0.56, i32 1607955931, i32 -561189173
  br label %.backedge

153:                                              ; preds = %14
  br label %.backedge

154:                                              ; preds = %14
  %155 = load i32, i32* @x.6, align 4
  %156 = load i32, i32* @y.7, align 4
  %157 = add i32 %155, -1
  %158 = mul i32 %157, %155
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %161, %160
  %163 = select i1 %162, i32 -270255542, i32 561305665
  br label %.backedge

164:                                              ; preds = %14
  %165 = load i32, i32* %7, align 4
  %166 = icmp slt i32 %.069, %165
  store i1 %166, i1* %4, align 1
  %167 = load i32, i32* @x.6, align 4
  %168 = load i32, i32* @y.7, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 -745970827, i32 561305665
  br label %.backedge

176:                                              ; preds = %14
  %.0..0..0.57 = load volatile i1, i1* %4, align 1
  %177 = select i1 %.0..0..0.57, i32 1552839059, i32 -468452515
  br label %.backedge

178:                                              ; preds = %14
  br label %.backedge

179:                                              ; preds = %14
  %180 = load i32, i32* @x.6, align 4
  %181 = load i32, i32* @y.7, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 458123737, i32 -1763295775
  br label %.backedge

189:                                              ; preds = %14
  %190 = load i32, i32* %7, align 4
  %191 = icmp slt i32 %.067, %190
  store i1 %191, i1* %3, align 1
  %192 = load i32, i32* @x.6, align 4
  %193 = load i32, i32* @y.7, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 256623963, i32 -1763295775
  br label %.backedge

201:                                              ; preds = %14
  %.0..0..0.58 = load volatile i1, i1* %3, align 1
  %202 = select i1 %.0..0..0.58, i32 -1308647912, i32 51237919
  br label %.backedge

203:                                              ; preds = %14
  %204 = load i32, i32* @x.6, align 4
  %205 = load i32, i32* @y.7, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 -2067753578, i32 1546119877
  br label %.backedge

213:                                              ; preds = %14
  %214 = sext i32 %.069 to i64
  %215 = sext i32 %.067 to i64
  %216 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %214, i64 %215
  %217 = load i64, i64* %216, align 8
  %218 = sext i32 %.071 to i64
  %219 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %214, i64 %218
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %218, i64 %215
  %222 = load i64, i64* %221, align 8
  %223 = add i64 %222, %220
  %224 = icmp sgt i64 %217, %223
  store i1 %224, i1* %2, align 1
  %225 = load i32, i32* @x.6, align 4
  %226 = load i32, i32* @y.7, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 -523719495, i32 1546119877
  br label %.backedge

234:                                              ; preds = %14
  %.0..0..0.59 = load volatile i1, i1* %2, align 1
  %235 = select i1 %.0..0..0.59, i32 861707989, i32 618049600
  br label %.backedge

236:                                              ; preds = %14
  %237 = sext i32 %.069 to i64
  %238 = sext i32 %.071 to i64
  %239 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %237, i64 %238
  %240 = load i64, i64* %239, align 8
  %241 = sext i32 %.067 to i64
  %242 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %238, i64 %241
  %243 = load i64, i64* %242, align 8
  %244 = add i64 %243, %240
  %245 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %237, i64 %241
  store i64 %244, i64* %245, align 8
  br label %.backedge

246:                                              ; preds = %14
  br label %.backedge

247:                                              ; preds = %14
  %248 = add i32 %.067, 1
  br label %.backedge

249:                                              ; preds = %14
  %250 = load i32, i32* @x.6, align 4
  %251 = load i32, i32* @y.7, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 1701635151, i32 -1205632807
  br label %.backedge

259:                                              ; preds = %14
  %260 = load i32, i32* @x.6, align 4
  %261 = load i32, i32* @y.7, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 2113198424, i32 -1205632807
  br label %.backedge

269:                                              ; preds = %14
  br label %.backedge

270:                                              ; preds = %14
  %271 = add i32 %.069, 1
  br label %.backedge

272:                                              ; preds = %14
  br label %.backedge

273:                                              ; preds = %14
  %274 = load i32, i32* @x.6, align 4
  %275 = load i32, i32* @y.7, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 -810276998, i32 79067471
  br label %.backedge

283:                                              ; preds = %14
  %.neg79 = add i32 %.071, 1
  %284 = load i32, i32* @x.6, align 4
  %285 = load i32, i32* @y.7, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 1493385417, i32 79067471
  br label %.backedge

293:                                              ; preds = %14
  br label %.backedge

294:                                              ; preds = %14
  br label %.backedge

295:                                              ; preds = %14
  %296 = icmp slt i32 %.065, 105
  %297 = select i1 %296, i32 504873170, i32 1382440353
  br label %.backedge

298:                                              ; preds = %14
  %299 = sext i32 %.065 to i64
  %300 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %299, i64 %299
  %301 = load i64, i64* %300, align 8
  %302 = icmp slt i64 %301, 0
  %303 = select i1 %302, i32 345296215, i32 530151497
  br label %.backedge

304:                                              ; preds = %14
  %305 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %306 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %305, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

307:                                              ; preds = %14
  %308 = load i32, i32* @x.6, align 4
  %309 = load i32, i32* @y.7, align 4
  %310 = add i32 %308, -1
  %311 = mul i32 %310, %308
  %312 = and i32 %311, 1
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %314, %313
  %316 = select i1 %315, i32 -273278774, i32 -316290717
  br label %.backedge

317:                                              ; preds = %14
  %318 = load i32, i32* @x.6, align 4
  %319 = load i32, i32* @y.7, align 4
  %320 = add i32 %318, -1
  %321 = mul i32 %320, %318
  %322 = and i32 %321, 1
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %324, %323
  %326 = select i1 %325, i32 2020148682, i32 -316290717
  br label %.backedge

327:                                              ; preds = %14
  br label %.backedge

328:                                              ; preds = %14
  %329 = load i32, i32* @x.6, align 4
  %330 = load i32, i32* @y.7, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 -327098721, i32 -1029909361
  br label %.backedge

338:                                              ; preds = %14
  %339 = add i32 %.065, 1
  %340 = load i32, i32* @x.6, align 4
  %341 = load i32, i32* @y.7, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 -1378624749, i32 -1029909361
  br label %.backedge

349:                                              ; preds = %14
  br label %.backedge

350:                                              ; preds = %14
  br label %.backedge

351:                                              ; preds = %14
  %352 = load i32, i32* @x.6, align 4
  %353 = load i32, i32* @y.7, align 4
  %354 = add i32 %352, -1
  %355 = mul i32 %354, %352
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %358, %357
  %360 = select i1 %359, i32 -1642060462, i32 -289490611
  br label %.backedge

361:                                              ; preds = %14
  %362 = load i32, i32* %7, align 4
  %363 = icmp slt i32 %.063, %362
  store i1 %363, i1* %1, align 1
  %364 = load i32, i32* @x.6, align 4
  %365 = load i32, i32* @y.7, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 1783484668, i32 -289490611
  br label %.backedge

373:                                              ; preds = %14
  %.0..0..0.60 = load volatile i1, i1* %1, align 1
  %374 = select i1 %.0..0..0.60, i32 501158231, i32 -1138030122
  br label %.backedge

375:                                              ; preds = %14
  %376 = load i32, i32* @x.6, align 4
  %377 = load i32, i32* @y.7, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 561875317, i32 201559455
  br label %.backedge

385:                                              ; preds = %14
  %386 = load i32, i32* @x.6, align 4
  %387 = load i32, i32* @y.7, align 4
  %388 = add i32 %386, -1
  %389 = mul i32 %388, %386
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %392, %391
  %394 = select i1 %393, i32 -177481661, i32 201559455
  br label %.backedge

395:                                              ; preds = %14
  br label %.backedge

396:                                              ; preds = %14
  %397 = load i32, i32* %7, align 4
  %398 = add i32 %397, -1
  %399 = icmp slt i32 %.061, %398
  %400 = select i1 %399, i32 -1653343942, i32 901722712
  br label %.backedge

401:                                              ; preds = %14
  %402 = sext i32 %.063 to i64
  %403 = sext i32 %.061 to i64
  %404 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %402, i64 %403
  %405 = load i64, i64* %404, align 8
  %406 = icmp slt i64 %405, 2000000001
  %407 = select i1 %406, i32 -1997210835, i32 -1139713357
  br label %.backedge

408:                                              ; preds = %14
  %409 = sext i32 %.063 to i64
  %410 = sext i32 %.061 to i64
  %411 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %409, i64 %410
  %412 = load i64, i64* %411, align 8
  %413 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %412)
  %414 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %413, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

415:                                              ; preds = %14
  %416 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

417:                                              ; preds = %14
  br label %.backedge

418:                                              ; preds = %14
  %419 = add i32 %.061, 1
  br label %.backedge

420:                                              ; preds = %14
  %421 = sext i32 %.063 to i64
  %422 = load i32, i32* %7, align 4
  %423 = add i32 %422, -1
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %421, i64 %424
  %426 = load i64, i64* %425, align 8
  %427 = icmp slt i64 %426, 2000000001
  %428 = select i1 %427, i32 -550464893, i32 468444882
  br label %.backedge

429:                                              ; preds = %14
  %430 = load i32, i32* @x.6, align 4
  %431 = load i32, i32* @y.7, align 4
  %432 = add i32 %430, -1
  %433 = mul i32 %432, %430
  %434 = and i32 %433, 1
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %436, %435
  %438 = select i1 %437, i32 -112086755, i32 2072795918
  br label %.backedge

439:                                              ; preds = %14
  %440 = sext i32 %.063 to i64
  %441 = load i32, i32* %7, align 4
  %442 = add i32 %441, -1
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %440, i64 %443
  %445 = load i64, i64* %444, align 8
  %446 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %445)
  %447 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %446, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %448 = load i32, i32* @x.6, align 4
  %449 = load i32, i32* @y.7, align 4
  %450 = add i32 %448, -1
  %451 = mul i32 %450, %448
  %452 = and i32 %451, 1
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %454, %453
  %456 = select i1 %455, i32 -1726025941, i32 2072795918
  br label %.backedge

457:                                              ; preds = %14
  br label %.backedge

458:                                              ; preds = %14
  %459 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  %460 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %459, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

461:                                              ; preds = %14
  br label %.backedge

462:                                              ; preds = %14
  %463 = add i32 %.063, 1
  br label %.backedge

464:                                              ; preds = %14
  ret i32 0

465:                                              ; preds = %14
  br label %.backedge

466:                                              ; preds = %14
  %467 = add i32 %.075, 1
  br label %.backedge

468:                                              ; preds = %14
  %469 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %470 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %469, i32* nonnull dereferenceable(4) %10)
  %471 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %470, i32* nonnull dereferenceable(4) %11)
  %472 = load i32, i32* %9, align 4
  %473 = sext i32 %472 to i64
  %474 = load i32, i32* %10, align 4
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %473, i64 %475
  %477 = load i64, i64* %476, align 8
  %478 = trunc i64 %477 to i32
  %479 = load i32, i32* %11, align 4
  %480 = sext i32 %479 to i64
  %481 = call i64 @_Z3minix(i32 %478, i64 %480)
  %482 = load i32, i32* %9, align 4
  %483 = sext i32 %482 to i64
  %484 = load i32, i32* %10, align 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %483, i64 %485
  store i64 %481, i64* %486, align 8
  br label %.backedge

487:                                              ; preds = %14
  %488 = add i32 %.073, 1
  br label %.backedge

489:                                              ; preds = %14
  br label %.backedge

490:                                              ; preds = %14
  br label %.backedge

491:                                              ; preds = %14
  br label %.backedge

492:                                              ; preds = %14
  br label %.backedge

493:                                              ; preds = %14
  br label %.backedge

494:                                              ; preds = %14
  %495 = add i32 %.071, 1
  br label %.backedge

496:                                              ; preds = %14
  br label %.backedge

497:                                              ; preds = %14
  %.neg = add i32 %.065, 1
  br label %.backedge

498:                                              ; preds = %14
  br label %.backedge

499:                                              ; preds = %14
  br label %.backedge

500:                                              ; preds = %14
  %501 = sext i32 %.063 to i64
  %502 = load i32, i32* %7, align 4
  %503 = add i32 %502, -1
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @G, i64 0, i64 %501, i64 %504
  %506 = load i64, i64* %505, align 8
  %507 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %506)
  %508 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %507, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s084294597.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.8, align 4
  %4 = load i32, i32* @y.9, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 652258896, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 652258896, label %11
    i32 1877385340, label %14
    i32 -635606522, label %24
    i32 -443079523, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1877385340, i32 -443079523
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.8, align 4
  %16 = load i32, i32* @y.9, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -635606522, i32 -443079523
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 1877385340, %25 ]
  br label %.outer
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
