; ModuleID = 'build_ollvm/programs/p02363/s624058560.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s624058560.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt4fillIPxxEvT_S1_RKT0_ = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

@d = global [100 x [100 x i64]] zeroinitializer, align 16
@v = global i32 0, align 4
@e = global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@_ZL3INF = internal constant i64 10000000000000, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0
@x.15 = common local_unnamed_addr global i32 0
@y.16 = common local_unnamed_addr global i32 0
@str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @v, i32* nonnull @e)
  tail call void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* getelementptr inbounds ([100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 0, i64 0), i64* getelementptr inbounds ([100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 1, i64 0, i64 0), i64* nonnull dereferenceable(8) @_ZL3INF)
  br label %11

11:                                               ; preds = %.backedge, %0
  %.065 = phi i32 [ 0, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.0 = phi i32 [ 789694047, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 789694047, label %12
    i32 650090488, label %22
    i32 1985268292, label %34
    i32 -377170488, label %36
    i32 -245091985, label %45
    i32 1062566647, label %46
    i32 -2083364276, label %47
    i32 -1407695729, label %57
    i32 -915541360, label %69
    i32 1200265088, label %71
    i32 396549307, label %81
    i32 1007945758, label %93
    i32 682631602, label %94
    i32 -359476055, label %96
    i32 -1376845066, label %97
    i32 159188063, label %107
    i32 1415758532, label %119
    i32 948642607, label %121
    i32 -752794869, label %131
    i32 -1516998234, label %141
    i32 1730433348, label %142
    i32 825304442, label %146
    i32 -193923113, label %147
    i32 -615154633, label %151
    i32 -1354204272, label %157
    i32 954559234, label %163
    i32 -1863590352, label %175
    i32 1609671141, label %185
    i32 -139720694, label %195
    i32 645588337, label %196
    i32 -416243112, label %197
    i32 -733247578, label %207
    i32 -1604530885, label %217
    i32 224163082, label %218
    i32 -1465905441, label %220
    i32 -1675377882, label %230
    i32 2044726906, label %240
    i32 -1773024222, label %241
    i32 808065878, label %243
    i32 -2132167746, label %244
    i32 917042867, label %248
    i32 1048095160, label %254
    i32 419751468, label %255
    i32 -1616965199, label %256
    i32 1355351679, label %257
    i32 826007955, label %267
    i32 294111369, label %277
    i32 1424655207, label %278
    i32 1004078104, label %282
    i32 -387787418, label %283
    i32 1925711393, label %293
    i32 -1007447976, label %305
    i32 -1574110198, label %307
    i32 -1808120731, label %314
    i32 185291098, label %316
    i32 -316873394, label %322
    i32 1124761652, label %327
    i32 -1543914951, label %328
    i32 -1529403062, label %329
    i32 1139497597, label %339
    i32 -366494593, label %349
    i32 -1627200323, label %350
    i32 1958720729, label %360
    i32 380294660, label %370
    i32 -512833471, label %371
    i32 1671480109, label %373
    i32 -400954879, label %383
    i32 2129800836, label %393
    i32 552827257, label %394
    i32 -1252202781, label %404
    i32 -174346222, label %414
    i32 -661337429, label %415
    i32 1857153901, label %416
    i32 761382450, label %417
    i32 -2116822086, label %420
    i32 630209616, label %421
    i32 -1880229629, label %422
    i32 -1034245637, label %423
    i32 39225365, label %424
    i32 1864358306, label %425
    i32 -1621047188, label %426
    i32 -1346341822, label %427
    i32 -1026689771, label %429
    i32 1195845031, label %430
    i32 168898788, label %431
  ]

.backedge:                                        ; preds = %11, %431, %430, %429, %427, %426, %425, %424, %423, %422, %421, %420, %417, %416, %415, %404, %394, %393, %383, %373, %371, %370, %360, %350, %349, %339, %329, %328, %327, %322, %316, %314, %307, %305, %293, %283, %282, %278, %277, %267, %257, %256, %255, %254, %248, %244, %243, %241, %240, %230, %220, %218, %217, %207, %197, %196, %195, %185, %175, %163, %157, %151, %147, %146, %142, %141, %131, %121, %119, %107, %97, %96, %94, %93, %81, %71, %69, %57, %47, %46, %45, %36, %34, %22, %12
  %.065.be = phi i32 [ %.065, %11 ], [ %.065, %431 ], [ %.065, %430 ], [ %.065, %429 ], [ %.065, %427 ], [ %.065, %426 ], [ %.065, %425 ], [ %.065, %424 ], [ %.065, %423 ], [ %.065, %422 ], [ %.065, %421 ], [ %.065, %420 ], [ %.065, %417 ], [ %.065, %416 ], [ %.065, %415 ], [ %.065, %404 ], [ %.065, %394 ], [ %.065, %393 ], [ %.065, %383 ], [ %.065, %373 ], [ %.065, %371 ], [ %.065, %370 ], [ %.065, %360 ], [ %.065, %350 ], [ %.065, %349 ], [ %.065, %339 ], [ %.065, %329 ], [ %.065, %328 ], [ %.065, %327 ], [ %.065, %322 ], [ %.065, %316 ], [ %.065, %314 ], [ %.065, %307 ], [ %.065, %305 ], [ %.065, %293 ], [ %.065, %283 ], [ %.065, %282 ], [ %.065, %278 ], [ %.065, %277 ], [ %.065, %267 ], [ %.065, %257 ], [ %.065, %256 ], [ %.065, %255 ], [ %.065, %254 ], [ %.065, %248 ], [ %.065, %244 ], [ %.065, %243 ], [ %.065, %241 ], [ %.065, %240 ], [ %.065, %230 ], [ %.065, %220 ], [ %.065, %218 ], [ %.065, %217 ], [ %.065, %207 ], [ %.065, %197 ], [ %.065, %196 ], [ %.065, %195 ], [ %.065, %185 ], [ %.065, %175 ], [ %.065, %163 ], [ %.065, %157 ], [ %.065, %151 ], [ %.065, %147 ], [ %.065, %146 ], [ %.065, %142 ], [ %.065, %141 ], [ %.065, %131 ], [ %.065, %121 ], [ %.065, %119 ], [ %.065, %107 ], [ %.065, %97 ], [ %.065, %96 ], [ %.065, %94 ], [ %.065, %93 ], [ %.065, %81 ], [ %.065, %71 ], [ %.065, %69 ], [ %.065, %57 ], [ %.065, %47 ], [ %.065, %46 ], [ %.neg74, %45 ], [ %.065, %36 ], [ %.065, %34 ], [ %.065, %22 ], [ %.065, %12 ]
  %.063.be = phi i32 [ %.063, %11 ], [ %.063, %431 ], [ %.063, %430 ], [ %.063, %429 ], [ %.063, %427 ], [ %.063, %426 ], [ %.063, %425 ], [ %.063, %424 ], [ %.063, %423 ], [ %.063, %422 ], [ %.063, %421 ], [ %.063, %420 ], [ %.063, %417 ], [ %.063, %416 ], [ %.063, %415 ], [ %.063, %404 ], [ %.063, %394 ], [ %.063, %393 ], [ %.063, %383 ], [ %.063, %373 ], [ %.063, %371 ], [ %.063, %370 ], [ %.063, %360 ], [ %.063, %350 ], [ %.063, %349 ], [ %.063, %339 ], [ %.063, %329 ], [ %.063, %328 ], [ %.063, %327 ], [ %.063, %322 ], [ %.063, %316 ], [ %.063, %314 ], [ %.063, %307 ], [ %.063, %305 ], [ %.063, %293 ], [ %.063, %283 ], [ %.063, %282 ], [ %.063, %278 ], [ %.063, %277 ], [ %.063, %267 ], [ %.063, %257 ], [ %.063, %256 ], [ %.063, %255 ], [ %.063, %254 ], [ %.063, %248 ], [ %.063, %244 ], [ %.063, %243 ], [ %.063, %241 ], [ %.063, %240 ], [ %.063, %230 ], [ %.063, %220 ], [ %.063, %218 ], [ %.063, %217 ], [ %.063, %207 ], [ %.063, %197 ], [ %.063, %196 ], [ %.063, %195 ], [ %.063, %185 ], [ %.063, %175 ], [ %.063, %163 ], [ %.063, %157 ], [ %.063, %151 ], [ %.063, %147 ], [ %.063, %146 ], [ %.063, %142 ], [ %.063, %141 ], [ %.063, %131 ], [ %.063, %121 ], [ %.063, %119 ], [ %.063, %107 ], [ %.063, %97 ], [ %.063, %96 ], [ %95, %94 ], [ %.063, %93 ], [ %.063, %81 ], [ %.063, %71 ], [ %.063, %69 ], [ %.063, %57 ], [ %.063, %47 ], [ 0, %46 ], [ %.063, %45 ], [ %.063, %36 ], [ %.063, %34 ], [ %.063, %22 ], [ %.063, %12 ]
  %.061.be = phi i32 [ %.061, %11 ], [ %.061, %431 ], [ %.061, %430 ], [ %.061, %429 ], [ %.061, %427 ], [ %.061, %426 ], [ %.061, %425 ], [ %.061, %424 ], [ %.061, %423 ], [ %.061, %422 ], [ %.061, %421 ], [ %.061, %420 ], [ %.061, %417 ], [ %.061, %416 ], [ %.061, %415 ], [ %.061, %404 ], [ %.061, %394 ], [ %.061, %393 ], [ %.061, %383 ], [ %.061, %373 ], [ %.061, %371 ], [ %.061, %370 ], [ %.061, %360 ], [ %.061, %350 ], [ %.061, %349 ], [ %.061, %339 ], [ %.061, %329 ], [ %.061, %328 ], [ %.061, %327 ], [ %.061, %322 ], [ %.061, %316 ], [ %.061, %314 ], [ %.061, %307 ], [ %.061, %305 ], [ %.061, %293 ], [ %.061, %283 ], [ %.061, %282 ], [ %.061, %278 ], [ %.061, %277 ], [ %.061, %267 ], [ %.061, %257 ], [ %.061, %256 ], [ %.061, %255 ], [ %.061, %254 ], [ %.061, %248 ], [ %.061, %244 ], [ %.061, %243 ], [ %242, %241 ], [ %.061, %240 ], [ %.061, %230 ], [ %.061, %220 ], [ %.061, %218 ], [ %.061, %217 ], [ %.061, %207 ], [ %.061, %197 ], [ %.061, %196 ], [ %.061, %195 ], [ %.061, %185 ], [ %.061, %175 ], [ %.061, %163 ], [ %.061, %157 ], [ %.061, %151 ], [ %.061, %147 ], [ %.061, %146 ], [ %.061, %142 ], [ %.061, %141 ], [ %.061, %131 ], [ %.061, %121 ], [ %.061, %119 ], [ %.061, %107 ], [ %.061, %97 ], [ 0, %96 ], [ %.061, %94 ], [ %.061, %93 ], [ %.061, %81 ], [ %.061, %71 ], [ %.061, %69 ], [ %.061, %57 ], [ %.061, %47 ], [ %.061, %46 ], [ %.061, %45 ], [ %.061, %36 ], [ %.061, %34 ], [ %.061, %22 ], [ %.061, %12 ]
  %.059.be = phi i32 [ %.059, %11 ], [ %.059, %431 ], [ %.059, %430 ], [ %.059, %429 ], [ %.059, %427 ], [ %.059, %426 ], [ %.059, %425 ], [ %.059, %424 ], [ %.059, %423 ], [ %.059, %422 ], [ 0, %421 ], [ %.059, %420 ], [ %.059, %417 ], [ %.059, %416 ], [ %.059, %415 ], [ %.059, %404 ], [ %.059, %394 ], [ %.059, %393 ], [ %.059, %383 ], [ %.059, %373 ], [ %.059, %371 ], [ %.059, %370 ], [ %.059, %360 ], [ %.059, %350 ], [ %.059, %349 ], [ %.059, %339 ], [ %.059, %329 ], [ %.059, %328 ], [ %.059, %327 ], [ %.059, %322 ], [ %.059, %316 ], [ %.059, %314 ], [ %.059, %307 ], [ %.059, %305 ], [ %.059, %293 ], [ %.059, %283 ], [ %.059, %282 ], [ %.059, %278 ], [ %.059, %277 ], [ %.059, %267 ], [ %.059, %257 ], [ %.059, %256 ], [ %.059, %255 ], [ %.059, %254 ], [ %.059, %248 ], [ %.059, %244 ], [ %.059, %243 ], [ %.059, %241 ], [ %.059, %240 ], [ %.059, %230 ], [ %.059, %220 ], [ %219, %218 ], [ %.059, %217 ], [ %.059, %207 ], [ %.059, %197 ], [ %.059, %196 ], [ %.059, %195 ], [ %.059, %185 ], [ %.059, %175 ], [ %.059, %163 ], [ %.059, %157 ], [ %.059, %151 ], [ %.059, %147 ], [ %.059, %146 ], [ %.059, %142 ], [ %.059, %141 ], [ 0, %131 ], [ %.059, %121 ], [ %.059, %119 ], [ %.059, %107 ], [ %.059, %97 ], [ %.059, %96 ], [ %.059, %94 ], [ %.059, %93 ], [ %.059, %81 ], [ %.059, %71 ], [ %.059, %69 ], [ %.059, %57 ], [ %.059, %47 ], [ %.059, %46 ], [ %.059, %45 ], [ %.059, %36 ], [ %.059, %34 ], [ %.059, %22 ], [ %.059, %12 ]
  %.057.be = phi i32 [ %.057, %11 ], [ %.057, %431 ], [ %.057, %430 ], [ %.057, %429 ], [ %.057, %427 ], [ %.057, %426 ], [ %.057, %425 ], [ %.057, %424 ], [ %.057, %423 ], [ %.057, %422 ], [ %.057, %421 ], [ %.057, %420 ], [ %.057, %417 ], [ %.057, %416 ], [ %.057, %415 ], [ %.057, %404 ], [ %.057, %394 ], [ %.057, %393 ], [ %.057, %383 ], [ %.057, %373 ], [ %.057, %371 ], [ %.057, %370 ], [ %.057, %360 ], [ %.057, %350 ], [ %.057, %349 ], [ %.057, %339 ], [ %.057, %329 ], [ %.057, %328 ], [ %.057, %327 ], [ %.057, %322 ], [ %.057, %316 ], [ %.057, %314 ], [ %.057, %307 ], [ %.057, %305 ], [ %.057, %293 ], [ %.057, %283 ], [ %.057, %282 ], [ %.057, %278 ], [ %.057, %277 ], [ %.057, %267 ], [ %.057, %257 ], [ %.057, %256 ], [ %.057, %255 ], [ %.057, %254 ], [ %.057, %248 ], [ %.057, %244 ], [ %.057, %243 ], [ %.057, %241 ], [ %.057, %240 ], [ %.057, %230 ], [ %.057, %220 ], [ %.057, %218 ], [ %.057, %217 ], [ %.057, %207 ], [ %.057, %197 ], [ %.neg72, %196 ], [ %.057, %195 ], [ %.057, %185 ], [ %.057, %175 ], [ %.057, %163 ], [ %.057, %157 ], [ %.057, %151 ], [ %.057, %147 ], [ 0, %146 ], [ %.057, %142 ], [ %.057, %141 ], [ %.057, %131 ], [ %.057, %121 ], [ %.057, %119 ], [ %.057, %107 ], [ %.057, %97 ], [ %.057, %96 ], [ %.057, %94 ], [ %.057, %93 ], [ %.057, %81 ], [ %.057, %71 ], [ %.057, %69 ], [ %.057, %57 ], [ %.057, %47 ], [ %.057, %46 ], [ %.057, %45 ], [ %.057, %36 ], [ %.057, %34 ], [ %.057, %22 ], [ %.057, %12 ]
  %.055.be = phi i32 [ %.055, %11 ], [ %.055, %431 ], [ %.055, %430 ], [ %.055, %429 ], [ %.055, %427 ], [ %.055, %426 ], [ %.055, %425 ], [ %.055, %424 ], [ %.055, %423 ], [ %.055, %422 ], [ %.055, %421 ], [ %.055, %420 ], [ %.055, %417 ], [ %.055, %416 ], [ %.055, %415 ], [ %.055, %404 ], [ %.055, %394 ], [ %.055, %393 ], [ %.055, %383 ], [ %.055, %373 ], [ %.055, %371 ], [ %.055, %370 ], [ %.055, %360 ], [ %.055, %350 ], [ %.055, %349 ], [ %.055, %339 ], [ %.055, %329 ], [ %.055, %328 ], [ %.055, %327 ], [ %.055, %322 ], [ %.055, %316 ], [ %.055, %314 ], [ %.055, %307 ], [ %.055, %305 ], [ %.055, %293 ], [ %.055, %283 ], [ %.055, %282 ], [ %.055, %278 ], [ %.055, %277 ], [ %.055, %267 ], [ %.055, %257 ], [ %.neg71, %256 ], [ %.055, %255 ], [ %.055, %254 ], [ %.055, %248 ], [ %.055, %244 ], [ 0, %243 ], [ %.055, %241 ], [ %.055, %240 ], [ %.055, %230 ], [ %.055, %220 ], [ %.055, %218 ], [ %.055, %217 ], [ %.055, %207 ], [ %.055, %197 ], [ %.055, %196 ], [ %.055, %195 ], [ %.055, %185 ], [ %.055, %175 ], [ %.055, %163 ], [ %.055, %157 ], [ %.055, %151 ], [ %.055, %147 ], [ %.055, %146 ], [ %.055, %142 ], [ %.055, %141 ], [ %.055, %131 ], [ %.055, %121 ], [ %.055, %119 ], [ %.055, %107 ], [ %.055, %97 ], [ %.055, %96 ], [ %.055, %94 ], [ %.055, %93 ], [ %.055, %81 ], [ %.055, %71 ], [ %.055, %69 ], [ %.055, %57 ], [ %.055, %47 ], [ %.055, %46 ], [ %.055, %45 ], [ %.055, %36 ], [ %.055, %34 ], [ %.055, %22 ], [ %.055, %12 ]
  %.053.be = phi i32 [ %.053, %11 ], [ %.053, %431 ], [ %.053, %430 ], [ %.053, %429 ], [ %.053, %427 ], [ %.053, %426 ], [ 0, %425 ], [ %.053, %424 ], [ %.053, %423 ], [ %.053, %422 ], [ %.053, %421 ], [ %.053, %420 ], [ %.053, %417 ], [ %.053, %416 ], [ %.053, %415 ], [ %.053, %404 ], [ %.053, %394 ], [ %.053, %393 ], [ %.053, %383 ], [ %.053, %373 ], [ %372, %371 ], [ %.053, %370 ], [ %.053, %360 ], [ %.053, %350 ], [ %.053, %349 ], [ %.053, %339 ], [ %.053, %329 ], [ %.053, %328 ], [ %.053, %327 ], [ %.053, %322 ], [ %.053, %316 ], [ %.053, %314 ], [ %.053, %307 ], [ %.053, %305 ], [ %.053, %293 ], [ %.053, %283 ], [ %.053, %282 ], [ %.053, %278 ], [ %.053, %277 ], [ 0, %267 ], [ %.053, %257 ], [ %.053, %256 ], [ %.053, %255 ], [ %.053, %254 ], [ %.053, %248 ], [ %.053, %244 ], [ %.053, %243 ], [ %.053, %241 ], [ %.053, %240 ], [ %.053, %230 ], [ %.053, %220 ], [ %.053, %218 ], [ %.053, %217 ], [ %.053, %207 ], [ %.053, %197 ], [ %.053, %196 ], [ %.053, %195 ], [ %.053, %185 ], [ %.053, %175 ], [ %.053, %163 ], [ %.053, %157 ], [ %.053, %151 ], [ %.053, %147 ], [ %.053, %146 ], [ %.053, %142 ], [ %.053, %141 ], [ %.053, %131 ], [ %.053, %121 ], [ %.053, %119 ], [ %.053, %107 ], [ %.053, %97 ], [ %.053, %96 ], [ %.053, %94 ], [ %.053, %93 ], [ %.053, %81 ], [ %.053, %71 ], [ %.053, %69 ], [ %.053, %57 ], [ %.053, %47 ], [ %.053, %46 ], [ %.053, %45 ], [ %.053, %36 ], [ %.053, %34 ], [ %.053, %22 ], [ %.053, %12 ]
  %.051.be = phi i32 [ %.051, %11 ], [ %.051, %431 ], [ %.051, %430 ], [ %.051, %429 ], [ %428, %427 ], [ %.051, %426 ], [ %.051, %425 ], [ %.051, %424 ], [ %.051, %423 ], [ %.051, %422 ], [ %.051, %421 ], [ %.051, %420 ], [ %.051, %417 ], [ %.051, %416 ], [ %.051, %415 ], [ %.051, %404 ], [ %.051, %394 ], [ %.051, %393 ], [ %.051, %383 ], [ %.051, %373 ], [ %.051, %371 ], [ %.051, %370 ], [ %.051, %360 ], [ %.051, %350 ], [ %.051, %349 ], [ %.neg, %339 ], [ %.051, %329 ], [ %.051, %328 ], [ %.051, %327 ], [ %.051, %322 ], [ %.051, %316 ], [ %.051, %314 ], [ %.051, %307 ], [ %.051, %305 ], [ %.051, %293 ], [ %.051, %283 ], [ 0, %282 ], [ %.051, %278 ], [ %.051, %277 ], [ %.051, %267 ], [ %.051, %257 ], [ %.051, %256 ], [ %.051, %255 ], [ %.051, %254 ], [ %.051, %248 ], [ %.051, %244 ], [ %.051, %243 ], [ %.051, %241 ], [ %.051, %240 ], [ %.051, %230 ], [ %.051, %220 ], [ %.051, %218 ], [ %.051, %217 ], [ %.051, %207 ], [ %.051, %197 ], [ %.051, %196 ], [ %.051, %195 ], [ %.051, %185 ], [ %.051, %175 ], [ %.051, %163 ], [ %.051, %157 ], [ %.051, %151 ], [ %.051, %147 ], [ %.051, %146 ], [ %.051, %142 ], [ %.051, %141 ], [ %.051, %131 ], [ %.051, %121 ], [ %.051, %119 ], [ %.051, %107 ], [ %.051, %97 ], [ %.051, %96 ], [ %.051, %94 ], [ %.051, %93 ], [ %.051, %81 ], [ %.051, %71 ], [ %.051, %69 ], [ %.051, %57 ], [ %.051, %47 ], [ %.051, %46 ], [ %.051, %45 ], [ %.051, %36 ], [ %.051, %34 ], [ %.051, %22 ], [ %.051, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ -1252202781, %431 ], [ -400954879, %430 ], [ 1958720729, %429 ], [ 1139497597, %427 ], [ 1925711393, %426 ], [ 826007955, %425 ], [ -1675377882, %424 ], [ -733247578, %423 ], [ 1609671141, %422 ], [ -752794869, %421 ], [ 159188063, %420 ], [ 396549307, %417 ], [ -1407695729, %416 ], [ 650090488, %415 ], [ %413, %404 ], [ %403, %394 ], [ 552827257, %393 ], [ %392, %383 ], [ %382, %373 ], [ 1424655207, %371 ], [ -512833471, %370 ], [ %369, %360 ], [ %359, %350 ], [ -387787418, %349 ], [ %348, %339 ], [ %338, %329 ], [ -1529403062, %328 ], [ -1543914951, %327 ], [ %326, %322 ], [ -316873394, %316 ], [ -316873394, %314 ], [ %313, %307 ], [ %306, %305 ], [ %304, %293 ], [ %292, %283 ], [ -387787418, %282 ], [ %281, %278 ], [ 1424655207, %277 ], [ %276, %267 ], [ %266, %257 ], [ -2132167746, %256 ], [ -1616965199, %255 ], [ 552827257, %254 ], [ %253, %248 ], [ %247, %244 ], [ -2132167746, %243 ], [ -1376845066, %241 ], [ -1773024222, %240 ], [ %239, %230 ], [ %229, %220 ], [ 1730433348, %218 ], [ 224163082, %217 ], [ %216, %207 ], [ %206, %197 ], [ -193923113, %196 ], [ 645588337, %195 ], [ %194, %185 ], [ %184, %175 ], [ -1863590352, %163 ], [ %162, %157 ], [ %156, %151 ], [ %150, %147 ], [ -193923113, %146 ], [ %145, %142 ], [ 1730433348, %141 ], [ %140, %131 ], [ %130, %121 ], [ %120, %119 ], [ %118, %107 ], [ %106, %97 ], [ -1376845066, %96 ], [ -2083364276, %94 ], [ 682631602, %93 ], [ %92, %81 ], [ %80, %71 ], [ %70, %69 ], [ %68, %57 ], [ %56, %47 ], [ -2083364276, %46 ], [ 789694047, %45 ], [ -245091985, %36 ], [ %35, %34 ], [ %33, %22 ], [ %21, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = load i32, i32* @x, align 4
  %14 = load i32, i32* @y, align 4
  %15 = add i32 %13, -1
  %16 = mul i32 %15, %13
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %19, %18
  %21 = select i1 %20, i32 650090488, i32 -661337429
  br label %.backedge

22:                                               ; preds = %11
  %23 = load i32, i32* @e, align 4
  %24 = icmp slt i32 %.065, %23
  store i1 %24, i1* %5, align 1
  %25 = load i32, i32* @x, align 4
  %26 = load i32, i32* @y, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 1985268292, i32 -661337429
  br label %.backedge

34:                                               ; preds = %11
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %35 = select i1 %.0..0..0., i32 -377170488, i32 1062566647
  br label %.backedge

36:                                               ; preds = %11
  %37 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  %38 = load i32, i32* %8, align 4
  %39 = sext i32 %38 to i64
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %41, i64 %43
  store i64 %39, i64* %44, align 8
  br label %.backedge

45:                                               ; preds = %11
  %.neg74 = add i32 %.065, 1
  br label %.backedge

46:                                               ; preds = %11
  br label %.backedge

47:                                               ; preds = %11
  %48 = load i32, i32* @x, align 4
  %49 = load i32, i32* @y, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 -1407695729, i32 1857153901
  br label %.backedge

57:                                               ; preds = %11
  %58 = load i32, i32* @v, align 4
  %59 = icmp slt i32 %.063, %58
  store i1 %59, i1* %4, align 1
  %60 = load i32, i32* @x, align 4
  %61 = load i32, i32* @y, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 -915541360, i32 1857153901
  br label %.backedge

69:                                               ; preds = %11
  %.0..0..0.47 = load volatile i1, i1* %4, align 1
  %70 = select i1 %.0..0..0.47, i32 1200265088, i32 -359476055
  br label %.backedge

71:                                               ; preds = %11
  %72 = load i32, i32* @x, align 4
  %73 = load i32, i32* @y, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 396549307, i32 761382450
  br label %.backedge

81:                                               ; preds = %11
  %82 = sext i32 %.063 to i64
  %83 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %82, i64 %82
  store i64 0, i64* %83, align 8
  %84 = load i32, i32* @x, align 4
  %85 = load i32, i32* @y, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 1007945758, i32 761382450
  br label %.backedge

93:                                               ; preds = %11
  br label %.backedge

94:                                               ; preds = %11
  %95 = add i32 %.063, 1
  br label %.backedge

96:                                               ; preds = %11
  br label %.backedge

97:                                               ; preds = %11
  %98 = load i32, i32* @x, align 4
  %99 = load i32, i32* @y, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 159188063, i32 -2116822086
  br label %.backedge

107:                                              ; preds = %11
  %108 = load i32, i32* @v, align 4
  %109 = icmp slt i32 %.061, %108
  store i1 %109, i1* %3, align 1
  %110 = load i32, i32* @x, align 4
  %111 = load i32, i32* @y, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 1415758532, i32 -2116822086
  br label %.backedge

119:                                              ; preds = %11
  %.0..0..0.48 = load volatile i1, i1* %3, align 1
  %120 = select i1 %.0..0..0.48, i32 948642607, i32 808065878
  br label %.backedge

121:                                              ; preds = %11
  %122 = load i32, i32* @x, align 4
  %123 = load i32, i32* @y, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 -752794869, i32 630209616
  br label %.backedge

131:                                              ; preds = %11
  %132 = load i32, i32* @x, align 4
  %133 = load i32, i32* @y, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 -1516998234, i32 630209616
  br label %.backedge

141:                                              ; preds = %11
  br label %.backedge

142:                                              ; preds = %11
  %143 = load i32, i32* @v, align 4
  %144 = icmp slt i32 %.059, %143
  %145 = select i1 %144, i32 825304442, i32 -1465905441
  br label %.backedge

146:                                              ; preds = %11
  br label %.backedge

147:                                              ; preds = %11
  %148 = load i32, i32* @v, align 4
  %149 = icmp slt i32 %.057, %148
  %150 = select i1 %149, i32 -615154633, i32 -416243112
  br label %.backedge

151:                                              ; preds = %11
  %152 = sext i32 %.059 to i64
  %153 = sext i32 %.061 to i64
  %154 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %152, i64 %153
  %155 = load i64, i64* %154, align 8
  %.not73 = icmp eq i64 %155, 10000000000000
  %156 = select i1 %.not73, i32 -1863590352, i32 -1354204272
  br label %.backedge

157:                                              ; preds = %11
  %158 = sext i32 %.061 to i64
  %159 = sext i32 %.057 to i64
  %160 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %158, i64 %159
  %161 = load i64, i64* %160, align 8
  %.not = icmp eq i64 %161, 10000000000000
  %162 = select i1 %.not, i32 -1863590352, i32 954559234
  br label %.backedge

163:                                              ; preds = %11
  %164 = sext i32 %.059 to i64
  %165 = sext i32 %.057 to i64
  %166 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %164, i64 %165
  %167 = sext i32 %.061 to i64
  %168 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %164, i64 %167
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %167, i64 %165
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %171, %169
  store i64 %172, i64* %9, align 8
  %173 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %166, i64* nonnull dereferenceable(8) %9)
  %174 = load i64, i64* %173, align 8
  store i64 %174, i64* %166, align 8
  br label %.backedge

175:                                              ; preds = %11
  %176 = load i32, i32* @x, align 4
  %177 = load i32, i32* @y, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 1609671141, i32 -1880229629
  br label %.backedge

185:                                              ; preds = %11
  %186 = load i32, i32* @x, align 4
  %187 = load i32, i32* @y, align 4
  %188 = add i32 %186, -1
  %189 = mul i32 %188, %186
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %192, %191
  %194 = select i1 %193, i32 -139720694, i32 -1880229629
  br label %.backedge

195:                                              ; preds = %11
  br label %.backedge

196:                                              ; preds = %11
  %.neg72 = add i32 %.057, 1
  br label %.backedge

197:                                              ; preds = %11
  %198 = load i32, i32* @x, align 4
  %199 = load i32, i32* @y, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 -733247578, i32 -1034245637
  br label %.backedge

207:                                              ; preds = %11
  %208 = load i32, i32* @x, align 4
  %209 = load i32, i32* @y, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 -1604530885, i32 -1034245637
  br label %.backedge

217:                                              ; preds = %11
  br label %.backedge

218:                                              ; preds = %11
  %219 = add i32 %.059, 1
  br label %.backedge

220:                                              ; preds = %11
  %221 = load i32, i32* @x, align 4
  %222 = load i32, i32* @y, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 -1675377882, i32 39225365
  br label %.backedge

230:                                              ; preds = %11
  %231 = load i32, i32* @x, align 4
  %232 = load i32, i32* @y, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 2044726906, i32 39225365
  br label %.backedge

240:                                              ; preds = %11
  br label %.backedge

241:                                              ; preds = %11
  %242 = add i32 %.061, 1
  br label %.backedge

243:                                              ; preds = %11
  br label %.backedge

244:                                              ; preds = %11
  %245 = load i32, i32* @v, align 4
  %246 = icmp slt i32 %.055, %245
  %247 = select i1 %246, i32 917042867, i32 1355351679
  br label %.backedge

248:                                              ; preds = %11
  %249 = sext i32 %.055 to i64
  %250 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %249, i64 %249
  %251 = load i64, i64* %250, align 8
  %252 = icmp slt i64 %251, 0
  %253 = select i1 %252, i32 1048095160, i32 419751468
  br label %.backedge

254:                                              ; preds = %11
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str, i64 0, i64 0))
  br label %.backedge

255:                                              ; preds = %11
  br label %.backedge

256:                                              ; preds = %11
  %.neg71 = add i32 %.055, 1
  br label %.backedge

257:                                              ; preds = %11
  %258 = load i32, i32* @x, align 4
  %259 = load i32, i32* @y, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 826007955, i32 1864358306
  br label %.backedge

267:                                              ; preds = %11
  %268 = load i32, i32* @x, align 4
  %269 = load i32, i32* @y, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 294111369, i32 1864358306
  br label %.backedge

277:                                              ; preds = %11
  br label %.backedge

278:                                              ; preds = %11
  %279 = load i32, i32* @v, align 4
  %280 = icmp slt i32 %.053, %279
  %281 = select i1 %280, i32 1004078104, i32 1671480109
  br label %.backedge

282:                                              ; preds = %11
  br label %.backedge

283:                                              ; preds = %11
  %284 = load i32, i32* @x, align 4
  %285 = load i32, i32* @y, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 1925711393, i32 -1621047188
  br label %.backedge

293:                                              ; preds = %11
  %294 = load i32, i32* @v, align 4
  %295 = icmp slt i32 %.051, %294
  store i1 %295, i1* %2, align 1
  %296 = load i32, i32* @x, align 4
  %297 = load i32, i32* @y, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 -1007447976, i32 -1621047188
  br label %.backedge

305:                                              ; preds = %11
  %.0..0..0.49 = load volatile i1, i1* %2, align 1
  %306 = select i1 %.0..0..0.49, i32 -1574110198, i32 -1627200323
  br label %.backedge

307:                                              ; preds = %11
  %308 = sext i32 %.053 to i64
  %309 = sext i32 %.051 to i64
  %310 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %308, i64 %309
  %311 = load i64, i64* %310, align 8
  %312 = icmp eq i64 %311, 10000000000000
  %313 = select i1 %312, i32 -1808120731, i32 185291098
  br label %.backedge

314:                                              ; preds = %11
  %315 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

316:                                              ; preds = %11
  %317 = sext i32 %.053 to i64
  %318 = sext i32 %.051 to i64
  %319 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %317, i64 %318
  %320 = load i64, i64* %319, align 8
  %321 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 %320)
  br label %.backedge

322:                                              ; preds = %11
  %323 = load i32, i32* @v, align 4
  %324 = add i32 %323, -1
  %325 = icmp slt i32 %.051, %324
  %326 = select i1 %325, i32 1124761652, i32 -1543914951
  br label %.backedge

327:                                              ; preds = %11
  %putchar70 = call i32 @putchar(i32 32)
  br label %.backedge

328:                                              ; preds = %11
  br label %.backedge

329:                                              ; preds = %11
  %330 = load i32, i32* @x, align 4
  %331 = load i32, i32* @y, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 1139497597, i32 -1346341822
  br label %.backedge

339:                                              ; preds = %11
  %.neg = add i32 %.051, 1
  %340 = load i32, i32* @x, align 4
  %341 = load i32, i32* @y, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 -366494593, i32 -1346341822
  br label %.backedge

349:                                              ; preds = %11
  br label %.backedge

350:                                              ; preds = %11
  %351 = load i32, i32* @x, align 4
  %352 = load i32, i32* @y, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 1958720729, i32 -1026689771
  br label %.backedge

360:                                              ; preds = %11
  %putchar69 = call i32 @putchar(i32 10)
  %361 = load i32, i32* @x, align 4
  %362 = load i32, i32* @y, align 4
  %363 = add i32 %361, -1
  %364 = mul i32 %363, %361
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %367, %366
  %369 = select i1 %368, i32 380294660, i32 -1026689771
  br label %.backedge

370:                                              ; preds = %11
  br label %.backedge

371:                                              ; preds = %11
  %372 = add i32 %.053, 1
  br label %.backedge

373:                                              ; preds = %11
  %374 = load i32, i32* @x, align 4
  %375 = load i32, i32* @y, align 4
  %376 = add i32 %374, -1
  %377 = mul i32 %376, %374
  %378 = and i32 %377, 1
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %380, %379
  %382 = select i1 %381, i32 -400954879, i32 1195845031
  br label %.backedge

383:                                              ; preds = %11
  %384 = load i32, i32* @x, align 4
  %385 = load i32, i32* @y, align 4
  %386 = add i32 %384, -1
  %387 = mul i32 %386, %384
  %388 = and i32 %387, 1
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %390, %389
  %392 = select i1 %391, i32 2129800836, i32 1195845031
  br label %.backedge

393:                                              ; preds = %11
  br label %.backedge

394:                                              ; preds = %11
  %395 = load i32, i32* @x, align 4
  %396 = load i32, i32* @y, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 -1252202781, i32 168898788
  br label %.backedge

404:                                              ; preds = %11
  store i32 0, i32* %1, align 4
  %405 = load i32, i32* @x, align 4
  %406 = load i32, i32* @y, align 4
  %407 = add i32 %405, -1
  %408 = mul i32 %407, %405
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %411, %410
  %413 = select i1 %412, i32 -174346222, i32 168898788
  br label %.backedge

414:                                              ; preds = %11
  %.0..0..0.50 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.50

415:                                              ; preds = %11
  br label %.backedge

416:                                              ; preds = %11
  br label %.backedge

417:                                              ; preds = %11
  %418 = sext i32 %.063 to i64
  %419 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %418, i64 %418
  store i64 0, i64* %419, align 8
  br label %.backedge

420:                                              ; preds = %11
  br label %.backedge

421:                                              ; preds = %11
  br label %.backedge

422:                                              ; preds = %11
  br label %.backedge

423:                                              ; preds = %11
  br label %.backedge

424:                                              ; preds = %11
  br label %.backedge

425:                                              ; preds = %11
  br label %.backedge

426:                                              ; preds = %11
  br label %.backedge

427:                                              ; preds = %11
  %428 = add i32 %.051, 1
  br label %.backedge

429:                                              ; preds = %11
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

430:                                              ; preds = %11
  br label %.backedge

431:                                              ; preds = %11
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* %0, i64* %1, i64* dereferenceable(8) %2) local_unnamed_addr #2 comdat {
  %4 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %0)
  %5 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %1)
  tail call void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %4, i64* %5, i64* nonnull dereferenceable(8) %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #3 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.9, align 4
  %8 = load i32, i32* @y.10, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -91915170, i32 -1458337459
  %16 = select i1 %14, i32 -1127824906, i32 -1458337459
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -1294650173, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 -1294650173, label %18
    i32 -2043309418, label %.outer.backedge
    i32 -1542269970, label %.outer10.backedge
    i32 -1127824906, label %21
    i32 -91915170, label %22
    i32 212490191, label %23
    i32 -1458337459, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -2043309418, i32 -1542269970
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer.backedge

22:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %22, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 212490191, %22 ], [ %16, %17 ]
  br label %.outer10

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %21
  %.08.ph.be = phi i64* [ %0, %21 ], [ %0, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ %15, %21 ], [ -1127824906, %24 ], [ 212490191, %17 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %0, i64* %1, i64* dereferenceable(8) %2) local_unnamed_addr #3 comdat {
  %4 = load i64, i64* %2, align 8
  br label %5

5:                                                ; preds = %.backedge, %3
  %.07 = phi i64* [ %0, %3 ], [ %.07.be, %.backedge ]
  %.0 = phi i32 [ 1154375994, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1154375994, label %6
    i32 1935154296, label %8
    i32 2047664621, label %9
    i32 -1309689756, label %19
    i32 -1721657009, label %30
    i32 -1107768864, label %31
    i32 -1107679990, label %41
    i32 507611494, label %51
    i32 -1903945764, label %52
    i32 -149234211, label %54
  ]

.backedge:                                        ; preds = %5, %54, %52, %41, %31, %30, %19, %9, %8, %6
  %.07.be = phi i64* [ %.07, %5 ], [ %.07, %54 ], [ %53, %52 ], [ %.07, %41 ], [ %.07, %31 ], [ %.07, %30 ], [ %20, %19 ], [ %.07, %9 ], [ %.07, %8 ], [ %.07, %6 ]
  %.0.be = phi i32 [ %.0, %5 ], [ -1107679990, %54 ], [ -1309689756, %52 ], [ %50, %41 ], [ %40, %31 ], [ 1154375994, %30 ], [ %29, %19 ], [ %18, %9 ], [ 2047664621, %8 ], [ %7, %6 ]
  br label %5

6:                                                ; preds = %5
  %.not = icmp eq i64* %.07, %1
  %7 = select i1 %.not, i32 -1107768864, i32 1935154296
  br label %.backedge

8:                                                ; preds = %5
  store i64 %4, i64* %.07, align 8
  br label %.backedge

9:                                                ; preds = %5
  %10 = load i32, i32* @x.11, align 4
  %11 = load i32, i32* @y.12, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %16, %15
  %18 = select i1 %17, i32 -1309689756, i32 -1903945764
  br label %.backedge

19:                                               ; preds = %5
  %20 = getelementptr inbounds i64, i64* %.07, i64 1
  %21 = load i32, i32* @x.11, align 4
  %22 = load i32, i32* @y.12, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 -1721657009, i32 -1903945764
  br label %.backedge

30:                                               ; preds = %5
  br label %.backedge

31:                                               ; preds = %5
  %32 = load i32, i32* @x.11, align 4
  %33 = load i32, i32* @y.12, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -1107679990, i32 -149234211
  br label %.backedge

41:                                               ; preds = %5
  %42 = load i32, i32* @x.11, align 4
  %43 = load i32, i32* @y.12, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 507611494, i32 -149234211
  br label %.backedge

51:                                               ; preds = %5
  ret void

52:                                               ; preds = %5
  %53 = getelementptr inbounds i64, i64* %.07, i64 1
  br label %.backedge

54:                                               ; preds = %5
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %0) local_unnamed_addr #2 comdat {
  %2 = tail call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %0)
  ret i64* %2
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %0) local_unnamed_addr #3 comdat align 2 {
  ret i64* %0
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #4

attributes #0 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
