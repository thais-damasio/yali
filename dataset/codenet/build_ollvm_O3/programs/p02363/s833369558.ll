; ModuleID = 'build_ollvm/programs/p02363/s833369558.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s833369558.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@M = global [101 x [101 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s833369558.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1041811445, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1041811445, label %11
    i32 775112542, label %14
    i32 -1038902284, label %25
    i32 1022994292, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 775112542, i32 1022994292
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1038902284, i32 1022994292
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 775112542, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %6)
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %12, i64* nonnull dereferenceable(8) %7)
  br label %14

14:                                               ; preds = %.backedge, %0
  %.081 = phi i64 [ 0, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i64 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i64 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i64 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i64 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i64 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i8 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i64 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i64 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i64 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.0 = phi i32 [ 1233772484, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1233772484, label %15
    i32 -974666748, label %25
    i32 -155534995, label %37
    i32 -89079397, label %39
    i32 -1706111230, label %40
    i32 -292142976, label %50
    i32 999416022, label %62
    i32 945396279, label %64
    i32 760571034, label %68
    i32 -255904192, label %70
    i32 1552802427, label %71
    i32 416738183, label %72
    i32 -643566295, label %82
    i32 -1827942839, label %92
    i32 1502792825, label %93
    i32 -1477717555, label %97
    i32 -1423511208, label %105
    i32 1865334721, label %106
    i32 -997613944, label %107
    i32 662883277, label %111
    i32 -1823785278, label %112
    i32 -1870179586, label %116
    i32 -949421654, label %117
    i32 1460257353, label %121
    i32 703089353, label %125
    i32 402935545, label %135
    i32 20437809, label %148
    i32 254767330, label %150
    i32 702964286, label %160
    i32 -2019530877, label %178
    i32 2111482584, label %179
    i32 -1612228314, label %189
    i32 696438093, label %199
    i32 2062522001, label %200
    i32 819517717, label %202
    i32 845500234, label %203
    i32 456395753, label %205
    i32 -343947095, label %206
    i32 -1968507241, label %216
    i32 -579924389, label %227
    i32 1249580109, label %228
    i32 -1490828994, label %238
    i32 82980089, label %248
    i32 -830805526, label %249
    i32 132230903, label %253
    i32 274363866, label %258
    i32 -493012438, label %259
    i32 1014455695, label %269
    i32 -561106120, label %279
    i32 -1782079494, label %280
    i32 -1321108296, label %282
    i32 2038093516, label %292
    i32 531892043, label %304
    i32 116590719, label %306
    i32 212949374, label %309
    i32 -214716680, label %310
    i32 -1192286694, label %314
    i32 -1365468212, label %315
    i32 434144695, label %319
    i32 -756262424, label %321
    i32 -1959329989, label %323
    i32 -861401700, label %333
    i32 -1780238051, label %346
    i32 597500087, label %348
    i32 -1889414750, label %350
    i32 -706856470, label %354
    i32 1600436853, label %355
    i32 -1575266826, label %357
    i32 1278569246, label %359
    i32 -479734577, label %361
    i32 1377506509, label %362
    i32 506795031, label %372
    i32 -200385858, label %382
    i32 -306208823, label %383
    i32 -1056944522, label %384
    i32 15363652, label %385
    i32 -1610872112, label %386
    i32 868574466, label %387
    i32 -1362102729, label %396
    i32 1821469956, label %397
    i32 -370027376, label %399
    i32 -1966482578, label %400
    i32 1216741124, label %401
    i32 949685087, label %402
    i32 318867113, label %403
  ]

.backedge:                                        ; preds = %14, %403, %402, %401, %400, %399, %397, %396, %387, %386, %385, %384, %383, %372, %362, %361, %359, %357, %355, %354, %350, %348, %346, %333, %323, %321, %319, %315, %314, %310, %309, %306, %304, %292, %282, %280, %279, %269, %259, %258, %253, %249, %248, %238, %228, %227, %216, %206, %205, %203, %202, %200, %199, %189, %179, %178, %160, %150, %148, %135, %125, %121, %117, %116, %112, %111, %107, %106, %105, %97, %93, %92, %82, %72, %71, %70, %68, %64, %62, %50, %40, %39, %37, %25, %15
  %.081.be = phi i64 [ %.081, %14 ], [ %.081, %403 ], [ %.081, %402 ], [ %.081, %401 ], [ %.081, %400 ], [ %.081, %399 ], [ %.081, %397 ], [ %.081, %396 ], [ %.081, %387 ], [ %.081, %386 ], [ %.081, %385 ], [ %.081, %384 ], [ %.081, %383 ], [ %.081, %372 ], [ %.081, %362 ], [ %.081, %361 ], [ %.081, %359 ], [ %.081, %357 ], [ %.081, %355 ], [ %.081, %354 ], [ %.081, %350 ], [ %.081, %348 ], [ %.081, %346 ], [ %.081, %333 ], [ %.081, %323 ], [ %.081, %321 ], [ %.081, %319 ], [ %.081, %315 ], [ %.081, %314 ], [ %.081, %310 ], [ %.081, %309 ], [ %.081, %306 ], [ %.081, %304 ], [ %.081, %292 ], [ %.081, %282 ], [ %.081, %280 ], [ %.081, %279 ], [ %.081, %269 ], [ %.081, %259 ], [ %.081, %258 ], [ %.081, %253 ], [ %.081, %249 ], [ %.081, %248 ], [ %.081, %238 ], [ %.081, %228 ], [ %.081, %227 ], [ %.081, %216 ], [ %.081, %206 ], [ %.081, %205 ], [ %.081, %203 ], [ %.081, %202 ], [ %.081, %200 ], [ %.081, %199 ], [ %.081, %189 ], [ %.081, %179 ], [ %.081, %178 ], [ %.081, %160 ], [ %.081, %150 ], [ %.081, %148 ], [ %.081, %135 ], [ %.081, %125 ], [ %.081, %121 ], [ %.081, %117 ], [ %.081, %116 ], [ %.081, %112 ], [ %.081, %111 ], [ %.081, %107 ], [ %.081, %106 ], [ %.081, %105 ], [ %.081, %97 ], [ %.081, %93 ], [ %.081, %92 ], [ %.081, %82 ], [ %.081, %72 ], [ %.neg84, %71 ], [ %.081, %70 ], [ %.081, %68 ], [ %.081, %64 ], [ %.081, %62 ], [ %.081, %50 ], [ %.081, %40 ], [ %.081, %39 ], [ %.081, %37 ], [ %.081, %25 ], [ %.081, %15 ]
  %.079.be = phi i64 [ %.079, %14 ], [ %.079, %403 ], [ %.079, %402 ], [ %.079, %401 ], [ %.079, %400 ], [ %.079, %399 ], [ %.079, %397 ], [ %.079, %396 ], [ %.079, %387 ], [ %.079, %386 ], [ %.079, %385 ], [ %.079, %384 ], [ %.079, %383 ], [ %.079, %372 ], [ %.079, %362 ], [ %.079, %361 ], [ %.079, %359 ], [ %.079, %357 ], [ %.079, %355 ], [ %.079, %354 ], [ %.079, %350 ], [ %.079, %348 ], [ %.079, %346 ], [ %.079, %333 ], [ %.079, %323 ], [ %.079, %321 ], [ %.079, %319 ], [ %.079, %315 ], [ %.079, %314 ], [ %.079, %310 ], [ %.079, %309 ], [ %.079, %306 ], [ %.079, %304 ], [ %.079, %292 ], [ %.079, %282 ], [ %.079, %280 ], [ %.079, %279 ], [ %.079, %269 ], [ %.079, %259 ], [ %.079, %258 ], [ %.079, %253 ], [ %.079, %249 ], [ %.079, %248 ], [ %.079, %238 ], [ %.079, %228 ], [ %.079, %227 ], [ %.079, %216 ], [ %.079, %206 ], [ %.079, %205 ], [ %.079, %203 ], [ %.079, %202 ], [ %.079, %200 ], [ %.079, %199 ], [ %.079, %189 ], [ %.079, %179 ], [ %.079, %178 ], [ %.079, %160 ], [ %.079, %150 ], [ %.079, %148 ], [ %.079, %135 ], [ %.079, %125 ], [ %.079, %121 ], [ %.079, %117 ], [ %.079, %116 ], [ %.079, %112 ], [ %.079, %111 ], [ %.079, %107 ], [ %.079, %106 ], [ %.079, %105 ], [ %.079, %97 ], [ %.079, %93 ], [ %.079, %92 ], [ %.079, %82 ], [ %.079, %72 ], [ %.079, %71 ], [ %.079, %70 ], [ %69, %68 ], [ %.079, %64 ], [ %.079, %62 ], [ %.079, %50 ], [ %.079, %40 ], [ 0, %39 ], [ %.079, %37 ], [ %.079, %25 ], [ %.079, %15 ]
  %.077.be = phi i64 [ %.077, %14 ], [ %.077, %403 ], [ %.077, %402 ], [ %.077, %401 ], [ %.077, %400 ], [ %.077, %399 ], [ %.077, %397 ], [ %.077, %396 ], [ %.077, %387 ], [ %.077, %386 ], [ 0, %385 ], [ %.077, %384 ], [ %.077, %383 ], [ %.077, %372 ], [ %.077, %362 ], [ %.077, %361 ], [ %.077, %359 ], [ %.077, %357 ], [ %.077, %355 ], [ %.077, %354 ], [ %.077, %350 ], [ %.077, %348 ], [ %.077, %346 ], [ %.077, %333 ], [ %.077, %323 ], [ %.077, %321 ], [ %.077, %319 ], [ %.077, %315 ], [ %.077, %314 ], [ %.077, %310 ], [ %.077, %309 ], [ %.077, %306 ], [ %.077, %304 ], [ %.077, %292 ], [ %.077, %282 ], [ %.077, %280 ], [ %.077, %279 ], [ %.077, %269 ], [ %.077, %259 ], [ %.077, %258 ], [ %.077, %253 ], [ %.077, %249 ], [ %.077, %248 ], [ %.077, %238 ], [ %.077, %228 ], [ %.077, %227 ], [ %.077, %216 ], [ %.077, %206 ], [ %.077, %205 ], [ %.077, %203 ], [ %.077, %202 ], [ %.077, %200 ], [ %.077, %199 ], [ %.077, %189 ], [ %.077, %179 ], [ %.077, %178 ], [ %.077, %160 ], [ %.077, %150 ], [ %.077, %148 ], [ %.077, %135 ], [ %.077, %125 ], [ %.077, %121 ], [ %.077, %117 ], [ %.077, %116 ], [ %.077, %112 ], [ %.077, %111 ], [ %.077, %107 ], [ %.077, %106 ], [ %.neg, %105 ], [ %.077, %97 ], [ %.077, %93 ], [ %.077, %92 ], [ 0, %82 ], [ %.077, %72 ], [ %.077, %71 ], [ %.077, %70 ], [ %.077, %68 ], [ %.077, %64 ], [ %.077, %62 ], [ %.077, %50 ], [ %.077, %40 ], [ %.077, %39 ], [ %.077, %37 ], [ %.077, %25 ], [ %.077, %15 ]
  %.075.be = phi i64 [ %.075, %14 ], [ %.075, %403 ], [ %.075, %402 ], [ %.075, %401 ], [ %.075, %400 ], [ %.075, %399 ], [ %398, %397 ], [ %.075, %396 ], [ %.075, %387 ], [ %.075, %386 ], [ %.075, %385 ], [ %.075, %384 ], [ %.075, %383 ], [ %.075, %372 ], [ %.075, %362 ], [ %.075, %361 ], [ %.075, %359 ], [ %.075, %357 ], [ %.075, %355 ], [ %.075, %354 ], [ %.075, %350 ], [ %.075, %348 ], [ %.075, %346 ], [ %.075, %333 ], [ %.075, %323 ], [ %.075, %321 ], [ %.075, %319 ], [ %.075, %315 ], [ %.075, %314 ], [ %.075, %310 ], [ %.075, %309 ], [ %.075, %306 ], [ %.075, %304 ], [ %.075, %292 ], [ %.075, %282 ], [ %.075, %280 ], [ %.075, %279 ], [ %.075, %269 ], [ %.075, %259 ], [ %.075, %258 ], [ %.075, %253 ], [ %.075, %249 ], [ %.075, %248 ], [ %.075, %238 ], [ %.075, %228 ], [ %.075, %227 ], [ %217, %216 ], [ %.075, %206 ], [ %.075, %205 ], [ %.075, %203 ], [ %.075, %202 ], [ %.075, %200 ], [ %.075, %199 ], [ %.075, %189 ], [ %.075, %179 ], [ %.075, %178 ], [ %.075, %160 ], [ %.075, %150 ], [ %.075, %148 ], [ %.075, %135 ], [ %.075, %125 ], [ %.075, %121 ], [ %.075, %117 ], [ %.075, %116 ], [ %.075, %112 ], [ %.075, %111 ], [ %.075, %107 ], [ 0, %106 ], [ %.075, %105 ], [ %.075, %97 ], [ %.075, %93 ], [ %.075, %92 ], [ %.075, %82 ], [ %.075, %72 ], [ %.075, %71 ], [ %.075, %70 ], [ %.075, %68 ], [ %.075, %64 ], [ %.075, %62 ], [ %.075, %50 ], [ %.075, %40 ], [ %.075, %39 ], [ %.075, %37 ], [ %.075, %25 ], [ %.075, %15 ]
  %.073.be = phi i64 [ %.073, %14 ], [ %.073, %403 ], [ %.073, %402 ], [ %.073, %401 ], [ %.073, %400 ], [ %.073, %399 ], [ %.073, %397 ], [ %.073, %396 ], [ %.073, %387 ], [ %.073, %386 ], [ %.073, %385 ], [ %.073, %384 ], [ %.073, %383 ], [ %.073, %372 ], [ %.073, %362 ], [ %.073, %361 ], [ %.073, %359 ], [ %.073, %357 ], [ %.073, %355 ], [ %.073, %354 ], [ %.073, %350 ], [ %.073, %348 ], [ %.073, %346 ], [ %.073, %333 ], [ %.073, %323 ], [ %.073, %321 ], [ %.073, %319 ], [ %.073, %315 ], [ %.073, %314 ], [ %.073, %310 ], [ %.073, %309 ], [ %.073, %306 ], [ %.073, %304 ], [ %.073, %292 ], [ %.073, %282 ], [ %.073, %280 ], [ %.073, %279 ], [ %.073, %269 ], [ %.073, %259 ], [ %.073, %258 ], [ %.073, %253 ], [ %.073, %249 ], [ %.073, %248 ], [ %.073, %238 ], [ %.073, %228 ], [ %.073, %227 ], [ %.073, %216 ], [ %.073, %206 ], [ %.073, %205 ], [ %204, %203 ], [ %.073, %202 ], [ %.073, %200 ], [ %.073, %199 ], [ %.073, %189 ], [ %.073, %179 ], [ %.073, %178 ], [ %.073, %160 ], [ %.073, %150 ], [ %.073, %148 ], [ %.073, %135 ], [ %.073, %125 ], [ %.073, %121 ], [ %.073, %117 ], [ %.073, %116 ], [ %.073, %112 ], [ 0, %111 ], [ %.073, %107 ], [ %.073, %106 ], [ %.073, %105 ], [ %.073, %97 ], [ %.073, %93 ], [ %.073, %92 ], [ %.073, %82 ], [ %.073, %72 ], [ %.073, %71 ], [ %.073, %70 ], [ %.073, %68 ], [ %.073, %64 ], [ %.073, %62 ], [ %.073, %50 ], [ %.073, %40 ], [ %.073, %39 ], [ %.073, %37 ], [ %.073, %25 ], [ %.073, %15 ]
  %.071.be = phi i64 [ %.071, %14 ], [ %.071, %403 ], [ %.071, %402 ], [ %.071, %401 ], [ %.071, %400 ], [ %.071, %399 ], [ %.071, %397 ], [ %.071, %396 ], [ %.071, %387 ], [ %.071, %386 ], [ %.071, %385 ], [ %.071, %384 ], [ %.071, %383 ], [ %.071, %372 ], [ %.071, %362 ], [ %.071, %361 ], [ %.071, %359 ], [ %.071, %357 ], [ %.071, %355 ], [ %.071, %354 ], [ %.071, %350 ], [ %.071, %348 ], [ %.071, %346 ], [ %.071, %333 ], [ %.071, %323 ], [ %.071, %321 ], [ %.071, %319 ], [ %.071, %315 ], [ %.071, %314 ], [ %.071, %310 ], [ %.071, %309 ], [ %.071, %306 ], [ %.071, %304 ], [ %.071, %292 ], [ %.071, %282 ], [ %.071, %280 ], [ %.071, %279 ], [ %.071, %269 ], [ %.071, %259 ], [ %.071, %258 ], [ %.071, %253 ], [ %.071, %249 ], [ %.071, %248 ], [ %.071, %238 ], [ %.071, %228 ], [ %.071, %227 ], [ %.071, %216 ], [ %.071, %206 ], [ %.071, %205 ], [ %.071, %203 ], [ %.071, %202 ], [ %201, %200 ], [ %.071, %199 ], [ %.071, %189 ], [ %.071, %179 ], [ %.071, %178 ], [ %.071, %160 ], [ %.071, %150 ], [ %.071, %148 ], [ %.071, %135 ], [ %.071, %125 ], [ %.071, %121 ], [ %.071, %117 ], [ 0, %116 ], [ %.071, %112 ], [ %.071, %111 ], [ %.071, %107 ], [ %.071, %106 ], [ %.071, %105 ], [ %.071, %97 ], [ %.071, %93 ], [ %.071, %92 ], [ %.071, %82 ], [ %.071, %72 ], [ %.071, %71 ], [ %.071, %70 ], [ %.071, %68 ], [ %.071, %64 ], [ %.071, %62 ], [ %.071, %50 ], [ %.071, %40 ], [ %.071, %39 ], [ %.071, %37 ], [ %.071, %25 ], [ %.071, %15 ]
  %.069.be = phi i8 [ %.069, %14 ], [ %.069, %403 ], [ %.069, %402 ], [ %.069, %401 ], [ %.069, %400 ], [ 0, %399 ], [ %.069, %397 ], [ %.069, %396 ], [ %.069, %387 ], [ %.069, %386 ], [ %.069, %385 ], [ %.069, %384 ], [ %.069, %383 ], [ %.069, %372 ], [ %.069, %362 ], [ %.069, %361 ], [ %.069, %359 ], [ %.069, %357 ], [ %.069, %355 ], [ %.069, %354 ], [ %.069, %350 ], [ %.069, %348 ], [ %.069, %346 ], [ %.069, %333 ], [ %.069, %323 ], [ %.069, %321 ], [ %.069, %319 ], [ %.069, %315 ], [ %.069, %314 ], [ %.069, %310 ], [ %.069, %309 ], [ %.069, %306 ], [ %.069, %304 ], [ %.069, %292 ], [ %.069, %282 ], [ %.069, %280 ], [ %.069, %279 ], [ %.069, %269 ], [ %.069, %259 ], [ 1, %258 ], [ %.069, %253 ], [ %.069, %249 ], [ %.069, %248 ], [ 0, %238 ], [ %.069, %228 ], [ %.069, %227 ], [ %.069, %216 ], [ %.069, %206 ], [ %.069, %205 ], [ %.069, %203 ], [ %.069, %202 ], [ %.069, %200 ], [ %.069, %199 ], [ %.069, %189 ], [ %.069, %179 ], [ %.069, %178 ], [ %.069, %160 ], [ %.069, %150 ], [ %.069, %148 ], [ %.069, %135 ], [ %.069, %125 ], [ %.069, %121 ], [ %.069, %117 ], [ %.069, %116 ], [ %.069, %112 ], [ %.069, %111 ], [ %.069, %107 ], [ %.069, %106 ], [ %.069, %105 ], [ %.069, %97 ], [ %.069, %93 ], [ %.069, %92 ], [ %.069, %82 ], [ %.069, %72 ], [ %.069, %71 ], [ %.069, %70 ], [ %.069, %68 ], [ %.069, %64 ], [ %.069, %62 ], [ %.069, %50 ], [ %.069, %40 ], [ %.069, %39 ], [ %.069, %37 ], [ %.069, %25 ], [ %.069, %15 ]
  %.067.be = phi i64 [ %.067, %14 ], [ %.067, %403 ], [ %.067, %402 ], [ %.067, %401 ], [ %.067, %400 ], [ 0, %399 ], [ %.067, %397 ], [ %.067, %396 ], [ %.067, %387 ], [ %.067, %386 ], [ %.067, %385 ], [ %.067, %384 ], [ %.067, %383 ], [ %.067, %372 ], [ %.067, %362 ], [ %.067, %361 ], [ %.067, %359 ], [ %.067, %357 ], [ %.067, %355 ], [ %.067, %354 ], [ %.067, %350 ], [ %.067, %348 ], [ %.067, %346 ], [ %.067, %333 ], [ %.067, %323 ], [ %.067, %321 ], [ %.067, %319 ], [ %.067, %315 ], [ %.067, %314 ], [ %.067, %310 ], [ %.067, %309 ], [ %.067, %306 ], [ %.067, %304 ], [ %.067, %292 ], [ %.067, %282 ], [ %281, %280 ], [ %.067, %279 ], [ %.067, %269 ], [ %.067, %259 ], [ %.067, %258 ], [ %.067, %253 ], [ %.067, %249 ], [ %.067, %248 ], [ 0, %238 ], [ %.067, %228 ], [ %.067, %227 ], [ %.067, %216 ], [ %.067, %206 ], [ %.067, %205 ], [ %.067, %203 ], [ %.067, %202 ], [ %.067, %200 ], [ %.067, %199 ], [ %.067, %189 ], [ %.067, %179 ], [ %.067, %178 ], [ %.067, %160 ], [ %.067, %150 ], [ %.067, %148 ], [ %.067, %135 ], [ %.067, %125 ], [ %.067, %121 ], [ %.067, %117 ], [ %.067, %116 ], [ %.067, %112 ], [ %.067, %111 ], [ %.067, %107 ], [ %.067, %106 ], [ %.067, %105 ], [ %.067, %97 ], [ %.067, %93 ], [ %.067, %92 ], [ %.067, %82 ], [ %.067, %72 ], [ %.067, %71 ], [ %.067, %70 ], [ %.067, %68 ], [ %.067, %64 ], [ %.067, %62 ], [ %.067, %50 ], [ %.067, %40 ], [ %.067, %39 ], [ %.067, %37 ], [ %.067, %25 ], [ %.067, %15 ]
  %.065.be = phi i64 [ %.065, %14 ], [ %.065, %403 ], [ %.065, %402 ], [ %.065, %401 ], [ %.065, %400 ], [ %.065, %399 ], [ %.065, %397 ], [ %.065, %396 ], [ %.065, %387 ], [ %.065, %386 ], [ %.065, %385 ], [ %.065, %384 ], [ %.065, %383 ], [ %.065, %372 ], [ %.065, %362 ], [ %.065, %361 ], [ %360, %359 ], [ %.065, %357 ], [ %.065, %355 ], [ %.065, %354 ], [ %.065, %350 ], [ %.065, %348 ], [ %.065, %346 ], [ %.065, %333 ], [ %.065, %323 ], [ %.065, %321 ], [ %.065, %319 ], [ %.065, %315 ], [ %.065, %314 ], [ %.065, %310 ], [ 0, %309 ], [ %.065, %306 ], [ %.065, %304 ], [ %.065, %292 ], [ %.065, %282 ], [ %.065, %280 ], [ %.065, %279 ], [ %.065, %269 ], [ %.065, %259 ], [ %.065, %258 ], [ %.065, %253 ], [ %.065, %249 ], [ %.065, %248 ], [ %.065, %238 ], [ %.065, %228 ], [ %.065, %227 ], [ %.065, %216 ], [ %.065, %206 ], [ %.065, %205 ], [ %.065, %203 ], [ %.065, %202 ], [ %.065, %200 ], [ %.065, %199 ], [ %.065, %189 ], [ %.065, %179 ], [ %.065, %178 ], [ %.065, %160 ], [ %.065, %150 ], [ %.065, %148 ], [ %.065, %135 ], [ %.065, %125 ], [ %.065, %121 ], [ %.065, %117 ], [ %.065, %116 ], [ %.065, %112 ], [ %.065, %111 ], [ %.065, %107 ], [ %.065, %106 ], [ %.065, %105 ], [ %.065, %97 ], [ %.065, %93 ], [ %.065, %92 ], [ %.065, %82 ], [ %.065, %72 ], [ %.065, %71 ], [ %.065, %70 ], [ %.065, %68 ], [ %.065, %64 ], [ %.065, %62 ], [ %.065, %50 ], [ %.065, %40 ], [ %.065, %39 ], [ %.065, %37 ], [ %.065, %25 ], [ %.065, %15 ]
  %.063.be = phi i64 [ %.063, %14 ], [ %.063, %403 ], [ %.063, %402 ], [ %.063, %401 ], [ %.063, %400 ], [ %.063, %399 ], [ %.063, %397 ], [ %.063, %396 ], [ %.063, %387 ], [ %.063, %386 ], [ %.063, %385 ], [ %.063, %384 ], [ %.063, %383 ], [ %.063, %372 ], [ %.063, %362 ], [ %.063, %361 ], [ %.063, %359 ], [ %.063, %357 ], [ %356, %355 ], [ %.063, %354 ], [ %.063, %350 ], [ %.063, %348 ], [ %.063, %346 ], [ %.063, %333 ], [ %.063, %323 ], [ %.063, %321 ], [ %.063, %319 ], [ %.063, %315 ], [ 0, %314 ], [ %.063, %310 ], [ %.063, %309 ], [ %.063, %306 ], [ %.063, %304 ], [ %.063, %292 ], [ %.063, %282 ], [ %.063, %280 ], [ %.063, %279 ], [ %.063, %269 ], [ %.063, %259 ], [ %.063, %258 ], [ %.063, %253 ], [ %.063, %249 ], [ %.063, %248 ], [ %.063, %238 ], [ %.063, %228 ], [ %.063, %227 ], [ %.063, %216 ], [ %.063, %206 ], [ %.063, %205 ], [ %.063, %203 ], [ %.063, %202 ], [ %.063, %200 ], [ %.063, %199 ], [ %.063, %189 ], [ %.063, %179 ], [ %.063, %178 ], [ %.063, %160 ], [ %.063, %150 ], [ %.063, %148 ], [ %.063, %135 ], [ %.063, %125 ], [ %.063, %121 ], [ %.063, %117 ], [ %.063, %116 ], [ %.063, %112 ], [ %.063, %111 ], [ %.063, %107 ], [ %.063, %106 ], [ %.063, %105 ], [ %.063, %97 ], [ %.063, %93 ], [ %.063, %92 ], [ %.063, %82 ], [ %.063, %72 ], [ %.063, %71 ], [ %.063, %70 ], [ %.063, %68 ], [ %.063, %64 ], [ %.063, %62 ], [ %.063, %50 ], [ %.063, %40 ], [ %.063, %39 ], [ %.063, %37 ], [ %.063, %25 ], [ %.063, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ 506795031, %403 ], [ -861401700, %402 ], [ 2038093516, %401 ], [ 1014455695, %400 ], [ -1490828994, %399 ], [ -1968507241, %397 ], [ -1612228314, %396 ], [ 702964286, %387 ], [ 402935545, %386 ], [ -643566295, %385 ], [ -292142976, %384 ], [ -974666748, %383 ], [ %381, %372 ], [ %371, %362 ], [ 1377506509, %361 ], [ -214716680, %359 ], [ 1278569246, %357 ], [ -1365468212, %355 ], [ 1600436853, %354 ], [ -706856470, %350 ], [ -706856470, %348 ], [ %347, %346 ], [ %345, %333 ], [ %332, %323 ], [ -1959329989, %321 ], [ %320, %319 ], [ %318, %315 ], [ -1365468212, %314 ], [ %313, %310 ], [ -214716680, %309 ], [ 1377506509, %306 ], [ %305, %304 ], [ %303, %292 ], [ %291, %282 ], [ -830805526, %280 ], [ -1782079494, %279 ], [ %278, %269 ], [ %268, %259 ], [ -493012438, %258 ], [ %257, %253 ], [ %252, %249 ], [ -830805526, %248 ], [ %247, %238 ], [ %237, %228 ], [ -997613944, %227 ], [ %226, %216 ], [ %215, %206 ], [ -343947095, %205 ], [ -1823785278, %203 ], [ 845500234, %202 ], [ -949421654, %200 ], [ 2062522001, %199 ], [ %198, %189 ], [ %188, %179 ], [ 2111482584, %178 ], [ %177, %160 ], [ %159, %150 ], [ %149, %148 ], [ %147, %135 ], [ %134, %125 ], [ %124, %121 ], [ %120, %117 ], [ -949421654, %116 ], [ %115, %112 ], [ -1823785278, %111 ], [ %110, %107 ], [ -997613944, %106 ], [ 1502792825, %105 ], [ -1423511208, %97 ], [ %96, %93 ], [ 1502792825, %92 ], [ %91, %82 ], [ %81, %72 ], [ 1233772484, %71 ], [ 1552802427, %70 ], [ -1706111230, %68 ], [ 760571034, %64 ], [ %63, %62 ], [ %61, %50 ], [ %49, %40 ], [ -1706111230, %39 ], [ %38, %37 ], [ %36, %25 ], [ %24, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* @x.2, align 4
  %17 = load i32, i32* @y.3, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -974666748, i32 -306208823
  br label %.backedge

25:                                               ; preds = %14
  %26 = load i64, i64* %6, align 8
  %27 = icmp slt i64 %.081, %26
  store i1 %27, i1* %5, align 1
  %28 = load i32, i32* @x.2, align 4
  %29 = load i32, i32* @y.3, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -155534995, i32 -306208823
  br label %.backedge

37:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %38 = select i1 %.0..0..0., i32 -89079397, i32 416738183
  br label %.backedge

39:                                               ; preds = %14
  br label %.backedge

40:                                               ; preds = %14
  %41 = load i32, i32* @x.2, align 4
  %42 = load i32, i32* @y.3, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 -292142976, i32 -1056944522
  br label %.backedge

50:                                               ; preds = %14
  %51 = load i64, i64* %6, align 8
  %52 = icmp slt i64 %.079, %51
  store i1 %52, i1* %4, align 1
  %53 = load i32, i32* @x.2, align 4
  %54 = load i32, i32* @y.3, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 999416022, i32 -1056944522
  br label %.backedge

62:                                               ; preds = %14
  %.0..0..0.59 = load volatile i1, i1* %4, align 1
  %63 = select i1 %.0..0..0.59, i32 945396279, i32 -255904192
  br label %.backedge

64:                                               ; preds = %14
  %65 = icmp eq i64 %.081, %.079
  %66 = select i1 %65, i64 0, i64 9000000009
  %67 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.081, i64 %.079
  store i64 %66, i64* %67, align 8
  br label %.backedge

68:                                               ; preds = %14
  %69 = add i64 %.079, 1
  br label %.backedge

70:                                               ; preds = %14
  br label %.backedge

71:                                               ; preds = %14
  %.neg84 = add i64 %.081, 1
  br label %.backedge

72:                                               ; preds = %14
  %73 = load i32, i32* @x.2, align 4
  %74 = load i32, i32* @y.3, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -643566295, i32 15363652
  br label %.backedge

82:                                               ; preds = %14
  %83 = load i32, i32* @x.2, align 4
  %84 = load i32, i32* @y.3, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -1827942839, i32 15363652
  br label %.backedge

92:                                               ; preds = %14
  br label %.backedge

93:                                               ; preds = %14
  %94 = load i64, i64* %7, align 8
  %95 = icmp slt i64 %.077, %94
  %96 = select i1 %95, i32 -1477717555, i32 1865334721
  br label %.backedge

97:                                               ; preds = %14
  %98 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %8)
  %99 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %98, i64* nonnull dereferenceable(8) %9)
  %100 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %99, i64* nonnull dereferenceable(8) %10)
  %101 = load i64, i64* %10, align 8
  %102 = load i64, i64* %8, align 8
  %103 = load i64, i64* %9, align 8
  %104 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %102, i64 %103
  store i64 %101, i64* %104, align 8
  br label %.backedge

105:                                              ; preds = %14
  %.neg = add i64 %.077, 1
  br label %.backedge

106:                                              ; preds = %14
  br label %.backedge

107:                                              ; preds = %14
  %108 = load i64, i64* %6, align 8
  %109 = icmp slt i64 %.075, %108
  %110 = select i1 %109, i32 662883277, i32 1249580109
  br label %.backedge

111:                                              ; preds = %14
  br label %.backedge

112:                                              ; preds = %14
  %113 = load i64, i64* %6, align 8
  %114 = icmp slt i64 %.073, %113
  %115 = select i1 %114, i32 -1870179586, i32 456395753
  br label %.backedge

116:                                              ; preds = %14
  br label %.backedge

117:                                              ; preds = %14
  %118 = load i64, i64* %6, align 8
  %119 = icmp slt i64 %.071, %118
  %120 = select i1 %119, i32 1460257353, i32 819517717
  br label %.backedge

121:                                              ; preds = %14
  %122 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.073, i64 %.075
  %123 = load i64, i64* %122, align 8
  %.not83 = icmp eq i64 %123, 9000000009
  %124 = select i1 %.not83, i32 2111482584, i32 703089353
  br label %.backedge

125:                                              ; preds = %14
  %126 = load i32, i32* @x.2, align 4
  %127 = load i32, i32* @y.3, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 402935545, i32 -1610872112
  br label %.backedge

135:                                              ; preds = %14
  %136 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.075, i64 %.071
  %137 = load i64, i64* %136, align 8
  %138 = icmp ne i64 %137, 9000000009
  store i1 %138, i1* %3, align 1
  %139 = load i32, i32* @x.2, align 4
  %140 = load i32, i32* @y.3, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 20437809, i32 -1610872112
  br label %.backedge

148:                                              ; preds = %14
  %.0..0..0.60 = load volatile i1, i1* %3, align 1
  %149 = select i1 %.0..0..0.60, i32 254767330, i32 2111482584
  br label %.backedge

150:                                              ; preds = %14
  %151 = load i32, i32* @x.2, align 4
  %152 = load i32, i32* @y.3, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 702964286, i32 868574466
  br label %.backedge

160:                                              ; preds = %14
  %161 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.073, i64 %.071
  %162 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.073, i64 %.075
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.075, i64 %.071
  %165 = load i64, i64* %164, align 8
  %166 = add i64 %165, %163
  store i64 %166, i64* %11, align 8
  %167 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %161, i64* nonnull dereferenceable(8) %11)
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %161, align 8
  %169 = load i32, i32* @x.2, align 4
  %170 = load i32, i32* @y.3, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 -2019530877, i32 868574466
  br label %.backedge

178:                                              ; preds = %14
  br label %.backedge

179:                                              ; preds = %14
  %180 = load i32, i32* @x.2, align 4
  %181 = load i32, i32* @y.3, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 -1612228314, i32 -1362102729
  br label %.backedge

189:                                              ; preds = %14
  %190 = load i32, i32* @x.2, align 4
  %191 = load i32, i32* @y.3, align 4
  %192 = add i32 %190, -1
  %193 = mul i32 %192, %190
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %196, %195
  %198 = select i1 %197, i32 696438093, i32 -1362102729
  br label %.backedge

199:                                              ; preds = %14
  br label %.backedge

200:                                              ; preds = %14
  %201 = add i64 %.071, 1
  br label %.backedge

202:                                              ; preds = %14
  br label %.backedge

203:                                              ; preds = %14
  %204 = add i64 %.073, 1
  br label %.backedge

205:                                              ; preds = %14
  br label %.backedge

206:                                              ; preds = %14
  %207 = load i32, i32* @x.2, align 4
  %208 = load i32, i32* @y.3, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1968507241, i32 1821469956
  br label %.backedge

216:                                              ; preds = %14
  %217 = add i64 %.075, 1
  %218 = load i32, i32* @x.2, align 4
  %219 = load i32, i32* @y.3, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -579924389, i32 1821469956
  br label %.backedge

227:                                              ; preds = %14
  br label %.backedge

228:                                              ; preds = %14
  %229 = load i32, i32* @x.2, align 4
  %230 = load i32, i32* @y.3, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 -1490828994, i32 -370027376
  br label %.backedge

238:                                              ; preds = %14
  %239 = load i32, i32* @x.2, align 4
  %240 = load i32, i32* @y.3, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 82980089, i32 -370027376
  br label %.backedge

248:                                              ; preds = %14
  br label %.backedge

249:                                              ; preds = %14
  %250 = load i64, i64* %6, align 8
  %251 = icmp slt i64 %.067, %250
  %252 = select i1 %251, i32 132230903, i32 -1321108296
  br label %.backedge

253:                                              ; preds = %14
  %254 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.067, i64 %.067
  %255 = load i64, i64* %254, align 8
  %256 = icmp slt i64 %255, 0
  %257 = select i1 %256, i32 274363866, i32 -493012438
  br label %.backedge

258:                                              ; preds = %14
  br label %.backedge

259:                                              ; preds = %14
  %260 = load i32, i32* @x.2, align 4
  %261 = load i32, i32* @y.3, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 1014455695, i32 -1966482578
  br label %.backedge

269:                                              ; preds = %14
  %270 = load i32, i32* @x.2, align 4
  %271 = load i32, i32* @y.3, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 -561106120, i32 -1966482578
  br label %.backedge

279:                                              ; preds = %14
  br label %.backedge

280:                                              ; preds = %14
  %281 = add i64 %.067, 1
  br label %.backedge

282:                                              ; preds = %14
  %283 = load i32, i32* @x.2, align 4
  %284 = load i32, i32* @y.3, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 2038093516, i32 1216741124
  br label %.backedge

292:                                              ; preds = %14
  %293 = and i8 %.069, 1
  %294 = icmp ne i8 %293, 0
  store i1 %294, i1* %2, align 1
  %295 = load i32, i32* @x.2, align 4
  %296 = load i32, i32* @y.3, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 531892043, i32 1216741124
  br label %.backedge

304:                                              ; preds = %14
  %.0..0..0.61 = load volatile i1, i1* %2, align 1
  %305 = select i1 %.0..0..0.61, i32 116590719, i32 212949374
  br label %.backedge

306:                                              ; preds = %14
  %307 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %308 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %307, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

309:                                              ; preds = %14
  br label %.backedge

310:                                              ; preds = %14
  %311 = load i64, i64* %6, align 8
  %312 = icmp slt i64 %.065, %311
  %313 = select i1 %312, i32 -1192286694, i32 -479734577
  br label %.backedge

314:                                              ; preds = %14
  br label %.backedge

315:                                              ; preds = %14
  %316 = load i64, i64* %6, align 8
  %317 = icmp slt i64 %.063, %316
  %318 = select i1 %317, i32 434144695, i32 -1575266826
  br label %.backedge

319:                                              ; preds = %14
  %.not = icmp eq i64 %.063, 0
  %320 = select i1 %.not, i32 -1959329989, i32 -756262424
  br label %.backedge

321:                                              ; preds = %14
  %322 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  br label %.backedge

323:                                              ; preds = %14
  %324 = load i32, i32* @x.2, align 4
  %325 = load i32, i32* @y.3, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 -861401700, i32 949685087
  br label %.backedge

333:                                              ; preds = %14
  %334 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.065, i64 %.063
  %335 = load i64, i64* %334, align 8
  %336 = icmp eq i64 %335, 9000000009
  store i1 %336, i1* %1, align 1
  %337 = load i32, i32* @x.2, align 4
  %338 = load i32, i32* @y.3, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 -1780238051, i32 949685087
  br label %.backedge

346:                                              ; preds = %14
  %.0..0..0.62 = load volatile i1, i1* %1, align 1
  %347 = select i1 %.0..0..0.62, i32 597500087, i32 -1889414750
  br label %.backedge

348:                                              ; preds = %14
  %349 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

350:                                              ; preds = %14
  %351 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.065, i64 %.063
  %352 = load i64, i64* %351, align 8
  %353 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %352)
  br label %.backedge

354:                                              ; preds = %14
  br label %.backedge

355:                                              ; preds = %14
  %356 = add i64 %.063, 1
  br label %.backedge

357:                                              ; preds = %14
  %358 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

359:                                              ; preds = %14
  %360 = add i64 %.065, 1
  br label %.backedge

361:                                              ; preds = %14
  br label %.backedge

362:                                              ; preds = %14
  %363 = load i32, i32* @x.2, align 4
  %364 = load i32, i32* @y.3, align 4
  %365 = add i32 %363, -1
  %366 = mul i32 %365, %363
  %367 = and i32 %366, 1
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %369, %368
  %371 = select i1 %370, i32 506795031, i32 318867113
  br label %.backedge

372:                                              ; preds = %14
  %373 = load i32, i32* @x.2, align 4
  %374 = load i32, i32* @y.3, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 -200385858, i32 318867113
  br label %.backedge

382:                                              ; preds = %14
  ret i32 0

383:                                              ; preds = %14
  br label %.backedge

384:                                              ; preds = %14
  br label %.backedge

385:                                              ; preds = %14
  br label %.backedge

386:                                              ; preds = %14
  br label %.backedge

387:                                              ; preds = %14
  %388 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.073, i64 %.071
  %389 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.073, i64 %.075
  %390 = load i64, i64* %389, align 8
  %391 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @M, i64 0, i64 %.075, i64 %.071
  %392 = load i64, i64* %391, align 8
  %393 = add i64 %392, %390
  store i64 %393, i64* %11, align 8
  %394 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %388, i64* nonnull dereferenceable(8) %11)
  %395 = load i64, i64* %394, align 8
  store i64 %395, i64* %388, align 8
  br label %.backedge

396:                                              ; preds = %14
  br label %.backedge

397:                                              ; preds = %14
  %398 = add i64 %.075, 1
  br label %.backedge

399:                                              ; preds = %14
  br label %.backedge

400:                                              ; preds = %14
  br label %.backedge

401:                                              ; preds = %14
  br label %.backedge

402:                                              ; preds = %14
  br label %.backedge

403:                                              ; preds = %14
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i64**, align 8
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.4, align 4
  %10 = load i32, i32* @y.5, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ -2088395724, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -2088395724, label %17
    i32 1378447135, label %20
    i32 -1407224446, label %38
    i32 -1977252157, label %40
    i32 -1707199093, label %50
    i32 1674557032, label %61
    i32 1165130300, label %62
    i32 1786194556, label %64
    i32 1234953002, label %66
    i32 787919523, label %67
  ]

.backedge:                                        ; preds = %16, %67, %66, %62, %61, %50, %40, %38, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ -1707199093, %67 ], [ 1378447135, %66 ], [ 1786194556, %62 ], [ 1786194556, %61 ], [ %60, %50 ], [ %49, %40 ], [ %39, %38 ], [ %37, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 1378447135, i32 1234953002
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i64*, align 8
  store i64** %21, i64*** %6, align 8
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %5, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %4, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %5, align 8
  store i64* %0, i64** %.0..0..0.6, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %4, align 8
  store i64* %1, i64** %.0..0..0.9, align 8
  %.0..0..0.10 = load volatile i64**, i64*** %4, align 8
  %24 = load i64*, i64** %.0..0..0.10, align 8
  %25 = load i64, i64* %24, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %5, align 8
  %26 = load i64*, i64** %.0..0..0.7, align 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.4, align 4
  %30 = load i32, i32* @y.5, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -1407224446, i32 1234953002
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0.13 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.13, i32 -1977252157, i32 1165130300
  br label %.backedge

40:                                               ; preds = %16
  %41 = load i32, i32* @x.4, align 4
  %42 = load i32, i32* @y.5, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 -1707199093, i32 787919523
  br label %.backedge

50:                                               ; preds = %16
  %.0..0..0.11 = load volatile i64**, i64*** %4, align 8
  %51 = load i64*, i64** %.0..0..0.11, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %6, align 8
  store i64* %51, i64** %.0..0..0.2, align 8
  %52 = load i32, i32* @x.4, align 4
  %53 = load i32, i32* @y.5, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 1674557032, i32 787919523
  br label %.backedge

61:                                               ; preds = %16
  br label %.backedge

62:                                               ; preds = %16
  %.0..0..0.8 = load volatile i64**, i64*** %5, align 8
  %63 = load i64*, i64** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %6, align 8
  store i64* %63, i64** %.0..0..0.3, align 8
  br label %.backedge

64:                                               ; preds = %16
  %.0..0..0.4 = load volatile i64**, i64*** %6, align 8
  %65 = load i64*, i64** %.0..0..0.4, align 8
  ret i64* %65

66:                                               ; preds = %16
  br label %.backedge

67:                                               ; preds = %16
  %.0..0..0.12 = load volatile i64**, i64*** %4, align 8
  %68 = load i64*, i64** %.0..0..0.12, align 8
  %.0..0..0.5 = load volatile i64**, i64*** %6, align 8
  store i64* %68, i64** %.0..0..0.5, align 8
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s833369558.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.6, align 4
  %4 = load i32, i32* @y.7, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1145208644, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1145208644, label %11
    i32 1156455033, label %14
    i32 -1491831561, label %24
    i32 1003581950, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1156455033, i32 1003581950
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.6, align 4
  %16 = load i32, i32* @y.7, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1491831561, i32 1003581950
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 1156455033, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
