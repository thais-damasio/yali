; ModuleID = 'build_ollvm/programs/p02363/s890177385.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s890177385.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt4fillIPxxEvT_S1_RKT0_ = comdat any

$_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZL2MX = internal constant i64 10000000000000, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s890177385.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 236465558, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 236465558, label %11
    i32 1224501700, label %14
    i32 -1160794316, label %25
    i32 -528127653, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1224501700, i32 -528127653
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1160794316, i32 -528127653
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1224501700, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1000 x [1000 x i64]], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 0, i64 0
  %13 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 999, i64 1000
  call void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* nonnull %12, i64* nonnull %13, i64* nonnull dereferenceable(8) @_ZL2MX)
  br label %14

14:                                               ; preds = %.backedge, %0
  %.081 = phi i32 [ 0, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i8 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.0 = phi i32 [ 1364108207, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1364108207, label %15
    i32 801304518, label %25
    i32 2081286608, label %36
    i32 -1140336131, label %38
    i32 -345354706, label %41
    i32 1564424859, label %43
    i32 1931094220, label %46
    i32 101064600, label %50
    i32 -1252376944, label %64
    i32 346788738, label %74
    i32 1514912572, label %91
    i32 -410404801, label %92
    i32 1322569287, label %93
    i32 1180160923, label %95
    i32 832336690, label %105
    i32 1887064577, label %115
    i32 -1827938650, label %116
    i32 1959785617, label %120
    i32 -269428542, label %121
    i32 116631135, label %125
    i32 1277052686, label %126
    i32 1454134975, label %130
    i32 -438589692, label %137
    i32 -177424986, label %147
    i32 38688878, label %162
    i32 -1189735917, label %164
    i32 -914736794, label %165
    i32 704698379, label %178
    i32 2010003594, label %188
    i32 -2028222327, label %198
    i32 -1429829464, label %208
    i32 1698045501, label %209
    i32 -293164347, label %211
    i32 -1685023450, label %212
    i32 13369906, label %214
    i32 1032281134, label %215
    i32 -897962744, label %225
    i32 -280268342, label %236
    i32 1830251547, label %237
    i32 1545718414, label %238
    i32 -1807187162, label %242
    i32 827998917, label %252
    i32 1772598143, label %262
    i32 -2064771584, label %263
    i32 -1548522034, label %273
    i32 599807647, label %285
    i32 -974236963, label %287
    i32 -1981252968, label %297
    i32 -1931448229, label %315
    i32 -206620435, label %317
    i32 -993936060, label %318
    i32 -19049461, label %328
    i32 -1743147702, label %338
    i32 -1860430260, label %339
    i32 -2136200884, label %349
    i32 -2141322324, label %360
    i32 1053270385, label %361
    i32 102303533, label %371
    i32 1967715214, label %381
    i32 -1761269991, label %382
    i32 616146571, label %384
    i32 1712926779, label %387
    i32 -1203804761, label %390
    i32 1084013784, label %391
    i32 361988557, label %395
    i32 92303464, label %405
    i32 2007289784, label %415
    i32 -1785718872, label %416
    i32 -1640764969, label %420
    i32 1770709724, label %427
    i32 1496616778, label %429
    i32 -118376962, label %435
    i32 363274680, label %439
    i32 680132491, label %441
    i32 -614004116, label %442
    i32 1690775244, label %443
    i32 1699200101, label %445
    i32 1306476061, label %446
    i32 1866189571, label %447
    i32 -837649681, label %457
    i32 -212784777, label %467
    i32 1493505489, label %468
    i32 -450511613, label %469
    i32 1901513502, label %477
    i32 753394448, label %478
    i32 -110960840, label %479
    i32 -1447013181, label %480
    i32 544543636, label %482
    i32 1275304720, label %483
    i32 76405589, label %484
    i32 1775583615, label %485
    i32 2092446687, label %486
    i32 -1071097211, label %487
    i32 1288640765, label %488
    i32 -1555024419, label %489
  ]

.backedge:                                        ; preds = %14, %489, %488, %487, %486, %485, %484, %483, %482, %480, %479, %478, %477, %469, %468, %457, %447, %446, %445, %443, %442, %441, %439, %435, %429, %427, %420, %416, %415, %405, %395, %391, %390, %387, %384, %382, %381, %371, %361, %360, %349, %339, %338, %328, %318, %317, %315, %297, %287, %285, %273, %263, %262, %252, %242, %238, %237, %236, %225, %215, %214, %212, %211, %209, %208, %198, %188, %178, %165, %164, %162, %147, %137, %130, %126, %125, %121, %120, %116, %115, %105, %95, %93, %92, %91, %74, %64, %50, %46, %43, %41, %38, %36, %25, %15
  %.081.be = phi i32 [ %.081, %14 ], [ %.081, %489 ], [ %.081, %488 ], [ %.081, %487 ], [ %.081, %486 ], [ %.081, %485 ], [ %.081, %484 ], [ %.081, %483 ], [ %.081, %482 ], [ %.081, %480 ], [ %.081, %479 ], [ %.081, %478 ], [ %.081, %477 ], [ %.081, %469 ], [ %.081, %468 ], [ %.081, %457 ], [ %.081, %447 ], [ %.081, %446 ], [ %.081, %445 ], [ %.081, %443 ], [ %.081, %442 ], [ %.081, %441 ], [ %.081, %439 ], [ %.081, %435 ], [ %.081, %429 ], [ %.081, %427 ], [ %.081, %420 ], [ %.081, %416 ], [ %.081, %415 ], [ %.081, %405 ], [ %.081, %395 ], [ %.081, %391 ], [ %.081, %390 ], [ %.081, %387 ], [ %.081, %384 ], [ %.081, %382 ], [ %.081, %381 ], [ %.081, %371 ], [ %.081, %361 ], [ %.081, %360 ], [ %.081, %349 ], [ %.081, %339 ], [ %.081, %338 ], [ %.081, %328 ], [ %.081, %318 ], [ %.081, %317 ], [ %.081, %315 ], [ %.081, %297 ], [ %.081, %287 ], [ %.081, %285 ], [ %.081, %273 ], [ %.081, %263 ], [ %.081, %262 ], [ %.081, %252 ], [ %.081, %242 ], [ %.081, %238 ], [ %.081, %237 ], [ %.081, %236 ], [ %.081, %225 ], [ %.081, %215 ], [ %.081, %214 ], [ %.081, %212 ], [ %.081, %211 ], [ %.081, %209 ], [ %.081, %208 ], [ %.081, %198 ], [ %.081, %188 ], [ %.081, %178 ], [ %.081, %165 ], [ %.081, %164 ], [ %.081, %162 ], [ %.081, %147 ], [ %.081, %137 ], [ %.081, %130 ], [ %.081, %126 ], [ %.081, %125 ], [ %.081, %121 ], [ %.081, %120 ], [ %.081, %116 ], [ %.081, %115 ], [ %.081, %105 ], [ %.081, %95 ], [ %.081, %93 ], [ %.081, %92 ], [ %.081, %91 ], [ %.081, %74 ], [ %.081, %64 ], [ %.081, %50 ], [ %.081, %46 ], [ %.081, %43 ], [ %42, %41 ], [ %.081, %38 ], [ %.081, %36 ], [ %.081, %25 ], [ %.081, %15 ]
  %.079.be = phi i32 [ %.079, %14 ], [ %.079, %489 ], [ %.079, %488 ], [ %.079, %487 ], [ %.079, %486 ], [ %.079, %485 ], [ %.079, %484 ], [ %.079, %483 ], [ %.079, %482 ], [ %.079, %480 ], [ %.079, %479 ], [ %.079, %478 ], [ %.079, %477 ], [ %.079, %469 ], [ %.079, %468 ], [ %.079, %457 ], [ %.079, %447 ], [ %.079, %446 ], [ %.079, %445 ], [ %.079, %443 ], [ %.079, %442 ], [ %.079, %441 ], [ %.079, %439 ], [ %.079, %435 ], [ %.079, %429 ], [ %.079, %427 ], [ %.079, %420 ], [ %.079, %416 ], [ %.079, %415 ], [ %.079, %405 ], [ %.079, %395 ], [ %.079, %391 ], [ %.079, %390 ], [ %.079, %387 ], [ %.079, %384 ], [ %.079, %382 ], [ %.079, %381 ], [ %.079, %371 ], [ %.079, %361 ], [ %.079, %360 ], [ %.079, %349 ], [ %.079, %339 ], [ %.079, %338 ], [ %.079, %328 ], [ %.079, %318 ], [ %.079, %317 ], [ %.079, %315 ], [ %.079, %297 ], [ %.079, %287 ], [ %.079, %285 ], [ %.079, %273 ], [ %.079, %263 ], [ %.079, %262 ], [ %.079, %252 ], [ %.079, %242 ], [ %.079, %238 ], [ %.079, %237 ], [ %.079, %236 ], [ %.079, %225 ], [ %.079, %215 ], [ %.079, %214 ], [ %.079, %212 ], [ %.079, %211 ], [ %.079, %209 ], [ %.079, %208 ], [ %.079, %198 ], [ %.079, %188 ], [ %.079, %178 ], [ %.079, %165 ], [ %.079, %164 ], [ %.079, %162 ], [ %.079, %147 ], [ %.079, %137 ], [ %.079, %130 ], [ %.079, %126 ], [ %.079, %125 ], [ %.079, %121 ], [ %.079, %120 ], [ %.079, %116 ], [ %.079, %115 ], [ %.079, %105 ], [ %.079, %95 ], [ %94, %93 ], [ %.079, %92 ], [ %.079, %91 ], [ %.079, %74 ], [ %.079, %64 ], [ %.079, %50 ], [ %.079, %46 ], [ 0, %43 ], [ %.079, %41 ], [ %.079, %38 ], [ %.079, %36 ], [ %.079, %25 ], [ %.079, %15 ]
  %.077.be = phi i32 [ %.077, %14 ], [ %.077, %489 ], [ %.077, %488 ], [ %.077, %487 ], [ %.077, %486 ], [ %.077, %485 ], [ %.077, %484 ], [ %.077, %483 ], [ %.077, %482 ], [ %481, %480 ], [ %.077, %479 ], [ %.077, %478 ], [ 0, %477 ], [ %.077, %469 ], [ %.077, %468 ], [ %.077, %457 ], [ %.077, %447 ], [ %.077, %446 ], [ %.077, %445 ], [ %.077, %443 ], [ %.077, %442 ], [ %.077, %441 ], [ %.077, %439 ], [ %.077, %435 ], [ %.077, %429 ], [ %.077, %427 ], [ %.077, %420 ], [ %.077, %416 ], [ %.077, %415 ], [ %.077, %405 ], [ %.077, %395 ], [ %.077, %391 ], [ %.077, %390 ], [ %.077, %387 ], [ %.077, %384 ], [ %.077, %382 ], [ %.077, %381 ], [ %.077, %371 ], [ %.077, %361 ], [ %.077, %360 ], [ %.077, %349 ], [ %.077, %339 ], [ %.077, %338 ], [ %.077, %328 ], [ %.077, %318 ], [ %.077, %317 ], [ %.077, %315 ], [ %.077, %297 ], [ %.077, %287 ], [ %.077, %285 ], [ %.077, %273 ], [ %.077, %263 ], [ %.077, %262 ], [ %.077, %252 ], [ %.077, %242 ], [ %.077, %238 ], [ %.077, %237 ], [ %.077, %236 ], [ %226, %225 ], [ %.077, %215 ], [ %.077, %214 ], [ %.077, %212 ], [ %.077, %211 ], [ %.077, %209 ], [ %.077, %208 ], [ %.077, %198 ], [ %.077, %188 ], [ %.077, %178 ], [ %.077, %165 ], [ %.077, %164 ], [ %.077, %162 ], [ %.077, %147 ], [ %.077, %137 ], [ %.077, %130 ], [ %.077, %126 ], [ %.077, %125 ], [ %.077, %121 ], [ %.077, %120 ], [ %.077, %116 ], [ %.077, %115 ], [ 0, %105 ], [ %.077, %95 ], [ %.077, %93 ], [ %.077, %92 ], [ %.077, %91 ], [ %.077, %74 ], [ %.077, %64 ], [ %.077, %50 ], [ %.077, %46 ], [ %.077, %43 ], [ %.077, %41 ], [ %.077, %38 ], [ %.077, %36 ], [ %.077, %25 ], [ %.077, %15 ]
  %.075.be = phi i32 [ %.075, %14 ], [ %.075, %489 ], [ %.075, %488 ], [ %.075, %487 ], [ %.075, %486 ], [ %.075, %485 ], [ %.075, %484 ], [ %.075, %483 ], [ %.075, %482 ], [ %.075, %480 ], [ %.075, %479 ], [ %.075, %478 ], [ %.075, %477 ], [ %.075, %469 ], [ %.075, %468 ], [ %.075, %457 ], [ %.075, %447 ], [ %.075, %446 ], [ %.075, %445 ], [ %.075, %443 ], [ %.075, %442 ], [ %.075, %441 ], [ %.075, %439 ], [ %.075, %435 ], [ %.075, %429 ], [ %.075, %427 ], [ %.075, %420 ], [ %.075, %416 ], [ %.075, %415 ], [ %.075, %405 ], [ %.075, %395 ], [ %.075, %391 ], [ %.075, %390 ], [ %.075, %387 ], [ %.075, %384 ], [ %.075, %382 ], [ %.075, %381 ], [ %.075, %371 ], [ %.075, %361 ], [ %.075, %360 ], [ %.075, %349 ], [ %.075, %339 ], [ %.075, %338 ], [ %.075, %328 ], [ %.075, %318 ], [ %.075, %317 ], [ %.075, %315 ], [ %.075, %297 ], [ %.075, %287 ], [ %.075, %285 ], [ %.075, %273 ], [ %.075, %263 ], [ %.075, %262 ], [ %.075, %252 ], [ %.075, %242 ], [ %.075, %238 ], [ %.075, %237 ], [ %.075, %236 ], [ %.075, %225 ], [ %.075, %215 ], [ %.075, %214 ], [ %213, %212 ], [ %.075, %211 ], [ %.075, %209 ], [ %.075, %208 ], [ %.075, %198 ], [ %.075, %188 ], [ %.075, %178 ], [ %.075, %165 ], [ %.075, %164 ], [ %.075, %162 ], [ %.075, %147 ], [ %.075, %137 ], [ %.075, %130 ], [ %.075, %126 ], [ %.075, %125 ], [ %.075, %121 ], [ 0, %120 ], [ %.075, %116 ], [ %.075, %115 ], [ %.075, %105 ], [ %.075, %95 ], [ %.075, %93 ], [ %.075, %92 ], [ %.075, %91 ], [ %.075, %74 ], [ %.075, %64 ], [ %.075, %50 ], [ %.075, %46 ], [ %.075, %43 ], [ %.075, %41 ], [ %.075, %38 ], [ %.075, %36 ], [ %.075, %25 ], [ %.075, %15 ]
  %.073.be = phi i32 [ %.073, %14 ], [ %.073, %489 ], [ %.073, %488 ], [ %.073, %487 ], [ %.073, %486 ], [ %.073, %485 ], [ %.073, %484 ], [ %.073, %483 ], [ %.073, %482 ], [ %.073, %480 ], [ %.073, %479 ], [ %.073, %478 ], [ %.073, %477 ], [ %.073, %469 ], [ %.073, %468 ], [ %.073, %457 ], [ %.073, %447 ], [ %.073, %446 ], [ %.073, %445 ], [ %.073, %443 ], [ %.073, %442 ], [ %.073, %441 ], [ %.073, %439 ], [ %.073, %435 ], [ %.073, %429 ], [ %.073, %427 ], [ %.073, %420 ], [ %.073, %416 ], [ %.073, %415 ], [ %.073, %405 ], [ %.073, %395 ], [ %.073, %391 ], [ %.073, %390 ], [ %.073, %387 ], [ %.073, %384 ], [ %.073, %382 ], [ %.073, %381 ], [ %.073, %371 ], [ %.073, %361 ], [ %.073, %360 ], [ %.073, %349 ], [ %.073, %339 ], [ %.073, %338 ], [ %.073, %328 ], [ %.073, %318 ], [ %.073, %317 ], [ %.073, %315 ], [ %.073, %297 ], [ %.073, %287 ], [ %.073, %285 ], [ %.073, %273 ], [ %.073, %263 ], [ %.073, %262 ], [ %.073, %252 ], [ %.073, %242 ], [ %.073, %238 ], [ %.073, %237 ], [ %.073, %236 ], [ %.073, %225 ], [ %.073, %215 ], [ %.073, %214 ], [ %.073, %212 ], [ %.073, %211 ], [ %210, %209 ], [ %.073, %208 ], [ %.073, %198 ], [ %.073, %188 ], [ %.073, %178 ], [ %.073, %165 ], [ %.073, %164 ], [ %.073, %162 ], [ %.073, %147 ], [ %.073, %137 ], [ %.073, %130 ], [ %.073, %126 ], [ 0, %125 ], [ %.073, %121 ], [ %.073, %120 ], [ %.073, %116 ], [ %.073, %115 ], [ %.073, %105 ], [ %.073, %95 ], [ %.073, %93 ], [ %.073, %92 ], [ %.073, %91 ], [ %.073, %74 ], [ %.073, %64 ], [ %.073, %50 ], [ %.073, %46 ], [ %.073, %43 ], [ %.073, %41 ], [ %.073, %38 ], [ %.073, %36 ], [ %.073, %25 ], [ %.073, %15 ]
  %.071.be = phi i8 [ %.071, %14 ], [ %.071, %489 ], [ %.071, %488 ], [ %.071, %487 ], [ %.071, %486 ], [ %.071, %485 ], [ %.071, %484 ], [ %.071, %483 ], [ %.071, %482 ], [ %.071, %480 ], [ %.071, %479 ], [ %.071, %478 ], [ %.071, %477 ], [ %.071, %469 ], [ %.071, %468 ], [ %.071, %457 ], [ %.071, %447 ], [ %.071, %446 ], [ %.071, %445 ], [ %.071, %443 ], [ %.071, %442 ], [ %.071, %441 ], [ %.071, %439 ], [ %.071, %435 ], [ %.071, %429 ], [ %.071, %427 ], [ %.071, %420 ], [ %.071, %416 ], [ %.071, %415 ], [ %.071, %405 ], [ %.071, %395 ], [ %.071, %391 ], [ %.071, %390 ], [ %.071, %387 ], [ %.071, %384 ], [ %.071, %382 ], [ %.071, %381 ], [ %.071, %371 ], [ %.071, %361 ], [ %.071, %360 ], [ %.071, %349 ], [ %.071, %339 ], [ %.071, %338 ], [ %.071, %328 ], [ %.071, %318 ], [ 1, %317 ], [ %.071, %315 ], [ %.071, %297 ], [ %.071, %287 ], [ %.071, %285 ], [ %.071, %273 ], [ %.071, %263 ], [ %.071, %262 ], [ %.071, %252 ], [ %.071, %242 ], [ %.071, %238 ], [ 0, %237 ], [ %.071, %236 ], [ %.071, %225 ], [ %.071, %215 ], [ %.071, %214 ], [ %.071, %212 ], [ %.071, %211 ], [ %.071, %209 ], [ %.071, %208 ], [ %.071, %198 ], [ %.071, %188 ], [ %.071, %178 ], [ %.071, %165 ], [ %.071, %164 ], [ %.071, %162 ], [ %.071, %147 ], [ %.071, %137 ], [ %.071, %130 ], [ %.071, %126 ], [ %.071, %125 ], [ %.071, %121 ], [ %.071, %120 ], [ %.071, %116 ], [ %.071, %115 ], [ %.071, %105 ], [ %.071, %95 ], [ %.071, %93 ], [ %.071, %92 ], [ %.071, %91 ], [ %.071, %74 ], [ %.071, %64 ], [ %.071, %50 ], [ %.071, %46 ], [ %.071, %43 ], [ %.071, %41 ], [ %.071, %38 ], [ %.071, %36 ], [ %.071, %25 ], [ %.071, %15 ]
  %.069.be = phi i32 [ %.069, %14 ], [ %.069, %489 ], [ %.069, %488 ], [ %.069, %487 ], [ %.069, %486 ], [ %.069, %485 ], [ %.069, %484 ], [ %.069, %483 ], [ %.069, %482 ], [ %.069, %480 ], [ %.069, %479 ], [ %.069, %478 ], [ %.069, %477 ], [ %.069, %469 ], [ %.069, %468 ], [ %.069, %457 ], [ %.069, %447 ], [ %.069, %446 ], [ %.069, %445 ], [ %.069, %443 ], [ %.069, %442 ], [ %.069, %441 ], [ %.069, %439 ], [ %.069, %435 ], [ %.069, %429 ], [ %.069, %427 ], [ %.069, %420 ], [ %.069, %416 ], [ %.069, %415 ], [ %.069, %405 ], [ %.069, %395 ], [ %.069, %391 ], [ %.069, %390 ], [ %.069, %387 ], [ %.069, %384 ], [ %383, %382 ], [ %.069, %381 ], [ %.069, %371 ], [ %.069, %361 ], [ %.069, %360 ], [ %.069, %349 ], [ %.069, %339 ], [ %.069, %338 ], [ %.069, %328 ], [ %.069, %318 ], [ %.069, %317 ], [ %.069, %315 ], [ %.069, %297 ], [ %.069, %287 ], [ %.069, %285 ], [ %.069, %273 ], [ %.069, %263 ], [ %.069, %262 ], [ %.069, %252 ], [ %.069, %242 ], [ %.069, %238 ], [ 0, %237 ], [ %.069, %236 ], [ %.069, %225 ], [ %.069, %215 ], [ %.069, %214 ], [ %.069, %212 ], [ %.069, %211 ], [ %.069, %209 ], [ %.069, %208 ], [ %.069, %198 ], [ %.069, %188 ], [ %.069, %178 ], [ %.069, %165 ], [ %.069, %164 ], [ %.069, %162 ], [ %.069, %147 ], [ %.069, %137 ], [ %.069, %130 ], [ %.069, %126 ], [ %.069, %125 ], [ %.069, %121 ], [ %.069, %120 ], [ %.069, %116 ], [ %.069, %115 ], [ %.069, %105 ], [ %.069, %95 ], [ %.069, %93 ], [ %.069, %92 ], [ %.069, %91 ], [ %.069, %74 ], [ %.069, %64 ], [ %.069, %50 ], [ %.069, %46 ], [ %.069, %43 ], [ %.069, %41 ], [ %.069, %38 ], [ %.069, %36 ], [ %.069, %25 ], [ %.069, %15 ]
  %.067.be = phi i32 [ %.067, %14 ], [ %.067, %489 ], [ %.067, %488 ], [ %.067, %487 ], [ %.neg, %486 ], [ %.067, %485 ], [ %.067, %484 ], [ %.067, %483 ], [ 0, %482 ], [ %.067, %480 ], [ %.067, %479 ], [ %.067, %478 ], [ %.067, %477 ], [ %.067, %469 ], [ %.067, %468 ], [ %.067, %457 ], [ %.067, %447 ], [ %.067, %446 ], [ %.067, %445 ], [ %.067, %443 ], [ %.067, %442 ], [ %.067, %441 ], [ %.067, %439 ], [ %.067, %435 ], [ %.067, %429 ], [ %.067, %427 ], [ %.067, %420 ], [ %.067, %416 ], [ %.067, %415 ], [ %.067, %405 ], [ %.067, %395 ], [ %.067, %391 ], [ %.067, %390 ], [ %.067, %387 ], [ %.067, %384 ], [ %.067, %382 ], [ %.067, %381 ], [ %.067, %371 ], [ %.067, %361 ], [ %.067, %360 ], [ %350, %349 ], [ %.067, %339 ], [ %.067, %338 ], [ %.067, %328 ], [ %.067, %318 ], [ %.067, %317 ], [ %.067, %315 ], [ %.067, %297 ], [ %.067, %287 ], [ %.067, %285 ], [ %.067, %273 ], [ %.067, %263 ], [ %.067, %262 ], [ 0, %252 ], [ %.067, %242 ], [ %.067, %238 ], [ %.067, %237 ], [ %.067, %236 ], [ %.067, %225 ], [ %.067, %215 ], [ %.067, %214 ], [ %.067, %212 ], [ %.067, %211 ], [ %.067, %209 ], [ %.067, %208 ], [ %.067, %198 ], [ %.067, %188 ], [ %.067, %178 ], [ %.067, %165 ], [ %.067, %164 ], [ %.067, %162 ], [ %.067, %147 ], [ %.067, %137 ], [ %.067, %130 ], [ %.067, %126 ], [ %.067, %125 ], [ %.067, %121 ], [ %.067, %120 ], [ %.067, %116 ], [ %.067, %115 ], [ %.067, %105 ], [ %.067, %95 ], [ %.067, %93 ], [ %.067, %92 ], [ %.067, %91 ], [ %.067, %74 ], [ %.067, %64 ], [ %.067, %50 ], [ %.067, %46 ], [ %.067, %43 ], [ %.067, %41 ], [ %.067, %38 ], [ %.067, %36 ], [ %.067, %25 ], [ %.067, %15 ]
  %.065.be = phi i32 [ %.065, %14 ], [ %.065, %489 ], [ %.065, %488 ], [ %.065, %487 ], [ %.065, %486 ], [ %.065, %485 ], [ %.065, %484 ], [ %.065, %483 ], [ %.065, %482 ], [ %.065, %480 ], [ %.065, %479 ], [ %.065, %478 ], [ %.065, %477 ], [ %.065, %469 ], [ %.065, %468 ], [ %.065, %457 ], [ %.065, %447 ], [ %.065, %446 ], [ %.neg85, %445 ], [ %.065, %443 ], [ %.065, %442 ], [ %.065, %441 ], [ %.065, %439 ], [ %.065, %435 ], [ %.065, %429 ], [ %.065, %427 ], [ %.065, %420 ], [ %.065, %416 ], [ %.065, %415 ], [ %.065, %405 ], [ %.065, %395 ], [ %.065, %391 ], [ 0, %390 ], [ %.065, %387 ], [ %.065, %384 ], [ %.065, %382 ], [ %.065, %381 ], [ %.065, %371 ], [ %.065, %361 ], [ %.065, %360 ], [ %.065, %349 ], [ %.065, %339 ], [ %.065, %338 ], [ %.065, %328 ], [ %.065, %318 ], [ %.065, %317 ], [ %.065, %315 ], [ %.065, %297 ], [ %.065, %287 ], [ %.065, %285 ], [ %.065, %273 ], [ %.065, %263 ], [ %.065, %262 ], [ %.065, %252 ], [ %.065, %242 ], [ %.065, %238 ], [ %.065, %237 ], [ %.065, %236 ], [ %.065, %225 ], [ %.065, %215 ], [ %.065, %214 ], [ %.065, %212 ], [ %.065, %211 ], [ %.065, %209 ], [ %.065, %208 ], [ %.065, %198 ], [ %.065, %188 ], [ %.065, %178 ], [ %.065, %165 ], [ %.065, %164 ], [ %.065, %162 ], [ %.065, %147 ], [ %.065, %137 ], [ %.065, %130 ], [ %.065, %126 ], [ %.065, %125 ], [ %.065, %121 ], [ %.065, %120 ], [ %.065, %116 ], [ %.065, %115 ], [ %.065, %105 ], [ %.065, %95 ], [ %.065, %93 ], [ %.065, %92 ], [ %.065, %91 ], [ %.065, %74 ], [ %.065, %64 ], [ %.065, %50 ], [ %.065, %46 ], [ %.065, %43 ], [ %.065, %41 ], [ %.065, %38 ], [ %.065, %36 ], [ %.065, %25 ], [ %.065, %15 ]
  %.063.be = phi i32 [ %.063, %14 ], [ %.063, %489 ], [ 0, %488 ], [ %.063, %487 ], [ %.063, %486 ], [ %.063, %485 ], [ %.063, %484 ], [ %.063, %483 ], [ %.063, %482 ], [ %.063, %480 ], [ %.063, %479 ], [ %.063, %478 ], [ %.063, %477 ], [ %.063, %469 ], [ %.063, %468 ], [ %.063, %457 ], [ %.063, %447 ], [ %.063, %446 ], [ %.063, %445 ], [ %.063, %443 ], [ %.neg86, %442 ], [ %.063, %441 ], [ %.063, %439 ], [ %.063, %435 ], [ %.063, %429 ], [ %.063, %427 ], [ %.063, %420 ], [ %.063, %416 ], [ %.063, %415 ], [ 0, %405 ], [ %.063, %395 ], [ %.063, %391 ], [ %.063, %390 ], [ %.063, %387 ], [ %.063, %384 ], [ %.063, %382 ], [ %.063, %381 ], [ %.063, %371 ], [ %.063, %361 ], [ %.063, %360 ], [ %.063, %349 ], [ %.063, %339 ], [ %.063, %338 ], [ %.063, %328 ], [ %.063, %318 ], [ %.063, %317 ], [ %.063, %315 ], [ %.063, %297 ], [ %.063, %287 ], [ %.063, %285 ], [ %.063, %273 ], [ %.063, %263 ], [ %.063, %262 ], [ %.063, %252 ], [ %.063, %242 ], [ %.063, %238 ], [ %.063, %237 ], [ %.063, %236 ], [ %.063, %225 ], [ %.063, %215 ], [ %.063, %214 ], [ %.063, %212 ], [ %.063, %211 ], [ %.063, %209 ], [ %.063, %208 ], [ %.063, %198 ], [ %.063, %188 ], [ %.063, %178 ], [ %.063, %165 ], [ %.063, %164 ], [ %.063, %162 ], [ %.063, %147 ], [ %.063, %137 ], [ %.063, %130 ], [ %.063, %126 ], [ %.063, %125 ], [ %.063, %121 ], [ %.063, %120 ], [ %.063, %116 ], [ %.063, %115 ], [ %.063, %105 ], [ %.063, %95 ], [ %.063, %93 ], [ %.063, %92 ], [ %.063, %91 ], [ %.063, %74 ], [ %.063, %64 ], [ %.063, %50 ], [ %.063, %46 ], [ %.063, %43 ], [ %.063, %41 ], [ %.063, %38 ], [ %.063, %36 ], [ %.063, %25 ], [ %.063, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ -837649681, %489 ], [ 92303464, %488 ], [ 102303533, %487 ], [ -2136200884, %486 ], [ -19049461, %485 ], [ -1981252968, %484 ], [ -1548522034, %483 ], [ 827998917, %482 ], [ -897962744, %480 ], [ -2028222327, %479 ], [ -177424986, %478 ], [ 832336690, %477 ], [ 346788738, %469 ], [ 801304518, %468 ], [ %466, %457 ], [ %456, %447 ], [ 1866189571, %446 ], [ 1084013784, %445 ], [ 1699200101, %443 ], [ -1785718872, %442 ], [ -614004116, %441 ], [ 680132491, %439 ], [ %438, %435 ], [ -118376962, %429 ], [ -118376962, %427 ], [ %426, %420 ], [ %419, %416 ], [ -1785718872, %415 ], [ %414, %405 ], [ %404, %395 ], [ %394, %391 ], [ 1084013784, %390 ], [ 1866189571, %387 ], [ %386, %384 ], [ 1545718414, %382 ], [ -1761269991, %381 ], [ %380, %371 ], [ %370, %361 ], [ -2064771584, %360 ], [ %359, %349 ], [ %348, %339 ], [ -1860430260, %338 ], [ %337, %328 ], [ %327, %318 ], [ 1053270385, %317 ], [ %316, %315 ], [ %314, %297 ], [ %296, %287 ], [ %286, %285 ], [ %284, %273 ], [ %272, %263 ], [ -2064771584, %262 ], [ %261, %252 ], [ %251, %242 ], [ %241, %238 ], [ 1545718414, %237 ], [ -1827938650, %236 ], [ %235, %225 ], [ %224, %215 ], [ 1032281134, %214 ], [ -269428542, %212 ], [ -1685023450, %211 ], [ 1277052686, %209 ], [ 1698045501, %208 ], [ %207, %198 ], [ %197, %188 ], [ 2010003594, %178 ], [ %177, %165 ], [ 1698045501, %164 ], [ %163, %162 ], [ %161, %147 ], [ %146, %137 ], [ %136, %130 ], [ %129, %126 ], [ 1277052686, %125 ], [ %124, %121 ], [ -269428542, %120 ], [ %119, %116 ], [ -1827938650, %115 ], [ %114, %105 ], [ %104, %95 ], [ 1931094220, %93 ], [ 1322569287, %92 ], [ -410404801, %91 ], [ %90, %74 ], [ %73, %64 ], [ %63, %50 ], [ %49, %46 ], [ 1931094220, %43 ], [ 1364108207, %41 ], [ -345354706, %38 ], [ %37, %36 ], [ %35, %25 ], [ %24, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* @x.3, align 4
  %17 = load i32, i32* @y.4, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 801304518, i32 1493505489
  br label %.backedge

25:                                               ; preds = %14
  %26 = icmp slt i32 %.081, 1000
  store i1 %26, i1* %5, align 1
  %27 = load i32, i32* @x.3, align 4
  %28 = load i32, i32* @y.4, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 2081286608, i32 1493505489
  br label %.backedge

36:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %37 = select i1 %.0..0..0., i32 -1140336131, i32 1564424859
  br label %.backedge

38:                                               ; preds = %14
  %39 = sext i32 %.081 to i64
  %40 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %39, i64 %39
  store i64 0, i64* %40, align 8
  br label %.backedge

41:                                               ; preds = %14
  %42 = add i32 %.081, 1
  br label %.backedge

43:                                               ; preds = %14
  %44 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %45 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %44, i32* nonnull dereferenceable(4) %7)
  br label %.backedge

46:                                               ; preds = %14
  %47 = load i32, i32* %7, align 4
  %48 = icmp slt i32 %.079, %47
  %49 = select i1 %48, i32 101064600, i32 1180160923
  br label %.backedge

50:                                               ; preds = %14
  %51 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %52 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %51, i32* nonnull dereferenceable(4) %10)
  %53 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %52, i32* nonnull dereferenceable(4) %11)
  %54 = load i32, i32* %9, align 4
  %55 = sext i32 %54 to i64
  %56 = load i32, i32* %10, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %55, i64 %57
  %59 = load i64, i64* %58, align 8
  %60 = load i32, i32* %11, align 4
  %61 = sext i32 %60 to i64
  %62 = icmp sgt i64 %59, %61
  %63 = select i1 %62, i32 -1252376944, i32 -410404801
  br label %.backedge

64:                                               ; preds = %14
  %65 = load i32, i32* @x.3, align 4
  %66 = load i32, i32* @y.4, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 346788738, i32 -450511613
  br label %.backedge

74:                                               ; preds = %14
  %75 = load i32, i32* %11, align 4
  %76 = sext i32 %75 to i64
  %77 = load i32, i32* %9, align 4
  %78 = sext i32 %77 to i64
  %79 = load i32, i32* %10, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %78, i64 %80
  store i64 %76, i64* %81, align 8
  %82 = load i32, i32* @x.3, align 4
  %83 = load i32, i32* @y.4, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 1514912572, i32 -450511613
  br label %.backedge

91:                                               ; preds = %14
  br label %.backedge

92:                                               ; preds = %14
  br label %.backedge

93:                                               ; preds = %14
  %94 = add i32 %.079, 1
  br label %.backedge

95:                                               ; preds = %14
  %96 = load i32, i32* @x.3, align 4
  %97 = load i32, i32* @y.4, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 832336690, i32 1901513502
  br label %.backedge

105:                                              ; preds = %14
  %106 = load i32, i32* @x.3, align 4
  %107 = load i32, i32* @y.4, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 1887064577, i32 1901513502
  br label %.backedge

115:                                              ; preds = %14
  br label %.backedge

116:                                              ; preds = %14
  %117 = load i32, i32* %6, align 4
  %118 = icmp slt i32 %.077, %117
  %119 = select i1 %118, i32 1959785617, i32 1830251547
  br label %.backedge

120:                                              ; preds = %14
  br label %.backedge

121:                                              ; preds = %14
  %122 = load i32, i32* %6, align 4
  %123 = icmp slt i32 %.075, %122
  %124 = select i1 %123, i32 116631135, i32 13369906
  br label %.backedge

125:                                              ; preds = %14
  br label %.backedge

126:                                              ; preds = %14
  %127 = load i32, i32* %6, align 4
  %128 = icmp slt i32 %.073, %127
  %129 = select i1 %128, i32 1454134975, i32 -293164347
  br label %.backedge

130:                                              ; preds = %14
  %131 = sext i32 %.075 to i64
  %132 = sext i32 %.077 to i64
  %133 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %131, i64 %132
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 10000000000000
  %136 = select i1 %135, i32 -1189735917, i32 -438589692
  br label %.backedge

137:                                              ; preds = %14
  %138 = load i32, i32* @x.3, align 4
  %139 = load i32, i32* @y.4, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 -177424986, i32 753394448
  br label %.backedge

147:                                              ; preds = %14
  %148 = sext i32 %.077 to i64
  %149 = sext i32 %.073 to i64
  %150 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %148, i64 %149
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %151, 10000000000000
  store i1 %152, i1* %4, align 1
  %153 = load i32, i32* @x.3, align 4
  %154 = load i32, i32* @y.4, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 38688878, i32 753394448
  br label %.backedge

162:                                              ; preds = %14
  %.0..0..0.59 = load volatile i1, i1* %4, align 1
  %163 = select i1 %.0..0..0.59, i32 -1189735917, i32 -914736794
  br label %.backedge

164:                                              ; preds = %14
  br label %.backedge

165:                                              ; preds = %14
  %166 = sext i32 %.075 to i64
  %167 = sext i32 %.073 to i64
  %168 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %166, i64 %167
  %169 = load i64, i64* %168, align 8
  %170 = sext i32 %.077 to i64
  %171 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %166, i64 %170
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %170, i64 %167
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, %172
  %176 = icmp sgt i64 %169, %175
  %177 = select i1 %176, i32 704698379, i32 2010003594
  br label %.backedge

178:                                              ; preds = %14
  %179 = sext i32 %.075 to i64
  %180 = sext i32 %.077 to i64
  %181 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %179, i64 %180
  %182 = load i64, i64* %181, align 8
  %183 = sext i32 %.073 to i64
  %184 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %180, i64 %183
  %185 = load i64, i64* %184, align 8
  %186 = add i64 %185, %182
  %187 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %179, i64 %183
  store i64 %186, i64* %187, align 8
  br label %.backedge

188:                                              ; preds = %14
  %189 = load i32, i32* @x.3, align 4
  %190 = load i32, i32* @y.4, align 4
  %191 = add i32 %189, -1
  %192 = mul i32 %191, %189
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %195, %194
  %197 = select i1 %196, i32 -2028222327, i32 -110960840
  br label %.backedge

198:                                              ; preds = %14
  %199 = load i32, i32* @x.3, align 4
  %200 = load i32, i32* @y.4, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 -1429829464, i32 -110960840
  br label %.backedge

208:                                              ; preds = %14
  br label %.backedge

209:                                              ; preds = %14
  %210 = add i32 %.073, 1
  br label %.backedge

211:                                              ; preds = %14
  br label %.backedge

212:                                              ; preds = %14
  %213 = add i32 %.075, 1
  br label %.backedge

214:                                              ; preds = %14
  br label %.backedge

215:                                              ; preds = %14
  %216 = load i32, i32* @x.3, align 4
  %217 = load i32, i32* @y.4, align 4
  %218 = add i32 %216, -1
  %219 = mul i32 %218, %216
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %222, %221
  %224 = select i1 %223, i32 -897962744, i32 -1447013181
  br label %.backedge

225:                                              ; preds = %14
  %226 = add i32 %.077, 1
  %227 = load i32, i32* @x.3, align 4
  %228 = load i32, i32* @y.4, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 -280268342, i32 -1447013181
  br label %.backedge

236:                                              ; preds = %14
  br label %.backedge

237:                                              ; preds = %14
  br label %.backedge

238:                                              ; preds = %14
  %239 = load i32, i32* %6, align 4
  %240 = icmp slt i32 %.069, %239
  %241 = select i1 %240, i32 -1807187162, i32 616146571
  br label %.backedge

242:                                              ; preds = %14
  %243 = load i32, i32* @x.3, align 4
  %244 = load i32, i32* @y.4, align 4
  %245 = add i32 %243, -1
  %246 = mul i32 %245, %243
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %249, %248
  %251 = select i1 %250, i32 827998917, i32 544543636
  br label %.backedge

252:                                              ; preds = %14
  %253 = load i32, i32* @x.3, align 4
  %254 = load i32, i32* @y.4, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 1772598143, i32 544543636
  br label %.backedge

262:                                              ; preds = %14
  br label %.backedge

263:                                              ; preds = %14
  %264 = load i32, i32* @x.3, align 4
  %265 = load i32, i32* @y.4, align 4
  %266 = add i32 %264, -1
  %267 = mul i32 %266, %264
  %268 = and i32 %267, 1
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %270, %269
  %272 = select i1 %271, i32 -1548522034, i32 1275304720
  br label %.backedge

273:                                              ; preds = %14
  %274 = load i32, i32* %6, align 4
  %275 = icmp slt i32 %.067, %274
  store i1 %275, i1* %3, align 1
  %276 = load i32, i32* @x.3, align 4
  %277 = load i32, i32* @y.4, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 599807647, i32 1275304720
  br label %.backedge

285:                                              ; preds = %14
  %.0..0..0.60 = load volatile i1, i1* %3, align 1
  %286 = select i1 %.0..0..0.60, i32 -974236963, i32 1053270385
  br label %.backedge

287:                                              ; preds = %14
  %288 = load i32, i32* @x.3, align 4
  %289 = load i32, i32* @y.4, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 -1981252968, i32 76405589
  br label %.backedge

297:                                              ; preds = %14
  %298 = sext i32 %.069 to i64
  %299 = sext i32 %.067 to i64
  %300 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %298, i64 %299
  %301 = load i64, i64* %300, align 8
  %302 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %299, i64 %298
  %303 = load i64, i64* %302, align 8
  %304 = add i64 %303, %301
  %305 = icmp slt i64 %304, 0
  store i1 %305, i1* %2, align 1
  %306 = load i32, i32* @x.3, align 4
  %307 = load i32, i32* @y.4, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 -1931448229, i32 76405589
  br label %.backedge

315:                                              ; preds = %14
  %.0..0..0.61 = load volatile i1, i1* %2, align 1
  %316 = select i1 %.0..0..0.61, i32 -206620435, i32 -993936060
  br label %.backedge

317:                                              ; preds = %14
  br label %.backedge

318:                                              ; preds = %14
  %319 = load i32, i32* @x.3, align 4
  %320 = load i32, i32* @y.4, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 -19049461, i32 1775583615
  br label %.backedge

328:                                              ; preds = %14
  %329 = load i32, i32* @x.3, align 4
  %330 = load i32, i32* @y.4, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 -1743147702, i32 1775583615
  br label %.backedge

338:                                              ; preds = %14
  br label %.backedge

339:                                              ; preds = %14
  %340 = load i32, i32* @x.3, align 4
  %341 = load i32, i32* @y.4, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 -2136200884, i32 2092446687
  br label %.backedge

349:                                              ; preds = %14
  %350 = add i32 %.067, 1
  %351 = load i32, i32* @x.3, align 4
  %352 = load i32, i32* @y.4, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 -2141322324, i32 2092446687
  br label %.backedge

360:                                              ; preds = %14
  br label %.backedge

361:                                              ; preds = %14
  %362 = load i32, i32* @x.3, align 4
  %363 = load i32, i32* @y.4, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 102303533, i32 -1071097211
  br label %.backedge

371:                                              ; preds = %14
  %372 = load i32, i32* @x.3, align 4
  %373 = load i32, i32* @y.4, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 1967715214, i32 -1071097211
  br label %.backedge

381:                                              ; preds = %14
  br label %.backedge

382:                                              ; preds = %14
  %383 = add i32 %.069, 1
  br label %.backedge

384:                                              ; preds = %14
  %385 = and i8 %.071, 1
  %.not87 = icmp eq i8 %385, 0
  %386 = select i1 %.not87, i32 -1203804761, i32 1712926779
  br label %.backedge

387:                                              ; preds = %14
  %388 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %389 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %388, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

390:                                              ; preds = %14
  br label %.backedge

391:                                              ; preds = %14
  %392 = load i32, i32* %6, align 4
  %393 = icmp slt i32 %.065, %392
  %394 = select i1 %393, i32 361988557, i32 1306476061
  br label %.backedge

395:                                              ; preds = %14
  %396 = load i32, i32* @x.3, align 4
  %397 = load i32, i32* @y.4, align 4
  %398 = add i32 %396, -1
  %399 = mul i32 %398, %396
  %400 = and i32 %399, 1
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %402, %401
  %404 = select i1 %403, i32 92303464, i32 1288640765
  br label %.backedge

405:                                              ; preds = %14
  %406 = load i32, i32* @x.3, align 4
  %407 = load i32, i32* @y.4, align 4
  %408 = add i32 %406, -1
  %409 = mul i32 %408, %406
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %412, %411
  %414 = select i1 %413, i32 2007289784, i32 1288640765
  br label %.backedge

415:                                              ; preds = %14
  br label %.backedge

416:                                              ; preds = %14
  %417 = load i32, i32* %6, align 4
  %418 = icmp slt i32 %.063, %417
  %419 = select i1 %418, i32 -1640764969, i32 1690775244
  br label %.backedge

420:                                              ; preds = %14
  %421 = sext i32 %.065 to i64
  %422 = sext i32 %.063 to i64
  %423 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %421, i64 %422
  %424 = load i64, i64* %423, align 8
  %425 = icmp eq i64 %424, 10000000000000
  %426 = select i1 %425, i32 1770709724, i32 1496616778
  br label %.backedge

427:                                              ; preds = %14
  %428 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

429:                                              ; preds = %14
  %430 = sext i32 %.065 to i64
  %431 = sext i32 %.063 to i64
  %432 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %430, i64 %431
  %433 = load i64, i64* %432, align 8
  %434 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %433)
  br label %.backedge

435:                                              ; preds = %14
  %436 = load i32, i32* %6, align 4
  %437 = add i32 %436, -1
  %.not = icmp eq i32 %.063, %437
  %438 = select i1 %.not, i32 680132491, i32 363274680
  br label %.backedge

439:                                              ; preds = %14
  %440 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

441:                                              ; preds = %14
  br label %.backedge

442:                                              ; preds = %14
  %.neg86 = add i32 %.063, 1
  br label %.backedge

443:                                              ; preds = %14
  %444 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

445:                                              ; preds = %14
  %.neg85 = add i32 %.065, 1
  br label %.backedge

446:                                              ; preds = %14
  br label %.backedge

447:                                              ; preds = %14
  %448 = load i32, i32* @x.3, align 4
  %449 = load i32, i32* @y.4, align 4
  %450 = add i32 %448, -1
  %451 = mul i32 %450, %448
  %452 = and i32 %451, 1
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %454, %453
  %456 = select i1 %455, i32 -837649681, i32 -1555024419
  br label %.backedge

457:                                              ; preds = %14
  store i32 0, i32* %1, align 4
  %458 = load i32, i32* @x.3, align 4
  %459 = load i32, i32* @y.4, align 4
  %460 = add i32 %458, -1
  %461 = mul i32 %460, %458
  %462 = and i32 %461, 1
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %464, %463
  %466 = select i1 %465, i32 -212784777, i32 -1555024419
  br label %.backedge

467:                                              ; preds = %14
  %.0..0..0.62 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.62

468:                                              ; preds = %14
  br label %.backedge

469:                                              ; preds = %14
  %470 = load i32, i32* %11, align 4
  %471 = sext i32 %470 to i64
  %472 = load i32, i32* %9, align 4
  %473 = sext i32 %472 to i64
  %474 = load i32, i32* %10, align 4
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds [1000 x [1000 x i64]], [1000 x [1000 x i64]]* %8, i64 0, i64 %473, i64 %475
  store i64 %471, i64* %476, align 8
  br label %.backedge

477:                                              ; preds = %14
  br label %.backedge

478:                                              ; preds = %14
  br label %.backedge

479:                                              ; preds = %14
  br label %.backedge

480:                                              ; preds = %14
  %481 = add i32 %.077, 1
  br label %.backedge

482:                                              ; preds = %14
  br label %.backedge

483:                                              ; preds = %14
  br label %.backedge

484:                                              ; preds = %14
  br label %.backedge

485:                                              ; preds = %14
  br label %.backedge

486:                                              ; preds = %14
  %.neg = add i32 %.067, 1
  br label %.backedge

487:                                              ; preds = %14
  br label %.backedge

488:                                              ; preds = %14
  br label %.backedge

489:                                              ; preds = %14
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* %0, i64* %1, i64* dereferenceable(8) %2) local_unnamed_addr #0 comdat {
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x.5, align 4
  %7 = load i32, i32* @y.6, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %5, align 1
  %12 = icmp slt i32 %7, 10
  store i1 %12, i1* %4, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %3
  %.0.ph = phi i32 [ -867125622, %3 ], [ %.0.ph.be, %.outer.backedge ]
  br label %13

13:                                               ; preds = %.outer, %13
  switch i32 %.0.ph, label %13 [
    i32 -867125622, label %14
    i32 971877249, label %17
    i32 -56712056, label %29
    i32 -1929217175, label %30
  ]

14:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %.0..0..0.1 = load volatile i1, i1* %4, align 1
  %15 = or i1 %.0..0..0., %.0..0..0.1
  %16 = select i1 %15, i32 971877249, i32 -1929217175
  br label %.outer.backedge

17:                                               ; preds = %13
  %18 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %0)
  %19 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %1)
  tail call void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %18, i64* %19, i64* nonnull dereferenceable(8) %2)
  %20 = load i32, i32* @x.5, align 4
  %21 = load i32, i32* @y.6, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -56712056, i32 -1929217175
  br label %.outer.backedge

29:                                               ; preds = %13
  ret void

30:                                               ; preds = %13
  %31 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %0)
  %32 = tail call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %1)
  tail call void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %31, i64* %32, i64* nonnull dereferenceable(8) %2)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %30, %17, %14
  %.0.ph.be = phi i32 [ %16, %14 ], [ %28, %17 ], [ 971877249, %30 ]
  br label %.outer
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %0, i64* %1, i64* dereferenceable(8) %2) local_unnamed_addr #5 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.7, align 4
  %10 = load i32, i32* @y.8, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %3
  %.0 = phi i32 [ 1807966015, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1807966015, label %17
    i32 -568102434, label %20
    i32 -92261590, label %34
    i32 1101951877, label %35
    i32 642188411, label %39
    i32 381881840, label %42
    i32 261619429, label %45
    i32 1861963519, label %55
    i32 -1066127740, label %65
    i32 385730936, label %66
    i32 1776982167, label %67
  ]

.backedge:                                        ; preds = %16, %67, %66, %55, %45, %42, %39, %35, %34, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ 1861963519, %67 ], [ -568102434, %66 ], [ %64, %55 ], [ %54, %45 ], [ 1101951877, %42 ], [ 381881840, %39 ], [ %38, %35 ], [ 1101951877, %34 ], [ %33, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 -568102434, i32 385730936
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i64*, align 8
  store i64** %21, i64*** %6, align 8
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %5, align 8
  %23 = alloca i64, align 8
  store i64* %23, i64** %4, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %6, align 8
  store i64* %0, i64** %.0..0..0.2, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %5, align 8
  store i64* %1, i64** %.0..0..0.7, align 8
  %24 = load i64, i64* %2, align 8
  %.0..0..0.9 = load volatile i64*, i64** %4, align 8
  store i64 %24, i64* %.0..0..0.9, align 8
  %25 = load i32, i32* @x.7, align 4
  %26 = load i32, i32* @y.8, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 -92261590, i32 385730936
  br label %.backedge

34:                                               ; preds = %16
  br label %.backedge

35:                                               ; preds = %16
  %.0..0..0.3 = load volatile i64**, i64*** %6, align 8
  %36 = load i64*, i64** %.0..0..0.3, align 8
  %.0..0..0.8 = load volatile i64**, i64*** %5, align 8
  %37 = load i64*, i64** %.0..0..0.8, align 8
  %.not = icmp eq i64* %36, %37
  %38 = select i1 %.not, i32 261619429, i32 642188411
  br label %.backedge

39:                                               ; preds = %16
  %.0..0..0.10 = load volatile i64*, i64** %4, align 8
  %40 = load i64, i64* %.0..0..0.10, align 8
  %.0..0..0.4 = load volatile i64**, i64*** %6, align 8
  %41 = load i64*, i64** %.0..0..0.4, align 8
  store i64 %40, i64* %41, align 8
  br label %.backedge

42:                                               ; preds = %16
  %.0..0..0.5 = load volatile i64**, i64*** %6, align 8
  %43 = load i64*, i64** %.0..0..0.5, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 1
  %.0..0..0.6 = load volatile i64**, i64*** %6, align 8
  store i64* %44, i64** %.0..0..0.6, align 8
  br label %.backedge

45:                                               ; preds = %16
  %46 = load i32, i32* @x.7, align 4
  %47 = load i32, i32* @y.8, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 1861963519, i32 1776982167
  br label %.backedge

55:                                               ; preds = %16
  %56 = load i32, i32* @x.7, align 4
  %57 = load i32, i32* @y.8, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 -1066127740, i32 1776982167
  br label %.backedge

65:                                               ; preds = %16
  ret void

66:                                               ; preds = %16
  br label %.backedge

67:                                               ; preds = %16
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %0) local_unnamed_addr #0 comdat {
  %2 = tail call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %0)
  ret i64* %2
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %0) local_unnamed_addr #5 comdat align 2 {
  ret i64* %0
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s890177385.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
