; ModuleID = 'build_ollvm/programs/p02363/s924992108.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s924992108.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s924992108.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %15 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %14, i32* nonnull dereferenceable(4) %9)
  %16 = load i32, i32* %8, align 4
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %7, align 8
  %.0..0..0.52 = load volatile i64, i64* %7, align 8
  %18 = mul nuw i64 %.0..0..0.52, %17
  %19 = alloca i64, i64 %18, align 16
  br label %20

20:                                               ; preds = %.backedge, %0
  %.087 = phi i32 [ 0, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i8 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.0 = phi i32 [ 1837361751, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1837361751, label %21
    i32 -1591709994, label %25
    i32 -768869289, label %26
    i32 -273655295, label %36
    i32 -123179605, label %48
    i32 366993603, label %50
    i32 1596440561, label %60
    i32 484523416, label %71
    i32 -746987076, label %73
    i32 1536893586, label %78
    i32 2000167046, label %83
    i32 191065240, label %84
    i32 105390616, label %94
    i32 1820699793, label %105
    i32 -1138779658, label %106
    i32 -951305089, label %107
    i32 -708581599, label %117
    i32 2020598423, label %128
    i32 640748156, label %129
    i32 479059501, label %130
    i32 1725389491, label %134
    i32 1867845377, label %145
    i32 313095998, label %147
    i32 260633990, label %148
    i32 213182665, label %158
    i32 -341486164, label %170
    i32 -230197985, label %172
    i32 599766785, label %173
    i32 -1394568927, label %183
    i32 1628356966, label %195
    i32 -1891720278, label %197
    i32 215851014, label %198
    i32 -3732355, label %202
    i32 -1328453560, label %219
    i32 85429951, label %221
    i32 -192479625, label %222
    i32 -1612068480, label %224
    i32 1530886441, label %225
    i32 1561305270, label %227
    i32 151419173, label %237
    i32 438224250, label %247
    i32 -2068557765, label %248
    i32 1625047060, label %252
    i32 1851000859, label %259
    i32 -305891731, label %260
    i32 -111871803, label %261
    i32 731322096, label %262
    i32 1803493841, label %272
    i32 1132193405, label %284
    i32 1719544128, label %286
    i32 159835481, label %289
    i32 -1255662240, label %299
    i32 -1934206825, label %311
    i32 609287419, label %313
    i32 -161813904, label %323
    i32 701154729, label %333
    i32 -246588352, label %334
    i32 -1384864165, label %338
    i32 -1136820285, label %348
    i32 -1766102001, label %358
    i32 2041430809, label %359
    i32 -1635865108, label %363
    i32 873190936, label %371
    i32 1279011132, label %381
    i32 678672951, label %392
    i32 1147928358, label %393
    i32 -1969882506, label %400
    i32 117908371, label %404
    i32 740704842, label %414
    i32 738522031, label %425
    i32 -62733832, label %426
    i32 1957124869, label %427
    i32 1245114052, label %428
    i32 -1076124867, label %430
    i32 709568129, label %431
    i32 465099997, label %432
    i32 -826975756, label %433
    i32 1699267215, label %434
    i32 74731043, label %435
    i32 1457627216, label %436
    i32 1495944930, label %438
    i32 -23608629, label %439
    i32 1423648166, label %440
    i32 1776865490, label %441
    i32 650967121, label %442
    i32 -1335449493, label %443
    i32 882762710, label %444
    i32 2071693714, label %445
    i32 -687917872, label %447
  ]

.backedge:                                        ; preds = %20, %447, %445, %444, %443, %442, %441, %440, %439, %438, %436, %435, %434, %433, %431, %430, %428, %427, %426, %425, %414, %404, %400, %393, %392, %381, %371, %363, %359, %358, %348, %338, %334, %333, %323, %313, %311, %299, %289, %286, %284, %272, %262, %261, %260, %259, %252, %248, %247, %237, %227, %225, %224, %222, %221, %219, %202, %198, %197, %195, %183, %173, %172, %170, %158, %148, %147, %145, %134, %130, %129, %128, %117, %107, %106, %105, %94, %84, %83, %78, %73, %71, %60, %50, %48, %36, %26, %25, %21
  %.087.be = phi i32 [ %.087, %20 ], [ %.087, %447 ], [ %.087, %445 ], [ %.087, %444 ], [ %.087, %443 ], [ %.087, %442 ], [ %.087, %441 ], [ %.087, %440 ], [ %.087, %439 ], [ %.087, %438 ], [ %437, %436 ], [ %.087, %435 ], [ %.087, %434 ], [ %.087, %433 ], [ %.087, %431 ], [ %.087, %430 ], [ %.087, %428 ], [ %.087, %427 ], [ %.087, %426 ], [ %.087, %425 ], [ %.087, %414 ], [ %.087, %404 ], [ %.087, %400 ], [ %.087, %393 ], [ %.087, %392 ], [ %.087, %381 ], [ %.087, %371 ], [ %.087, %363 ], [ %.087, %359 ], [ %.087, %358 ], [ %.087, %348 ], [ %.087, %338 ], [ %.087, %334 ], [ %.087, %333 ], [ %.087, %323 ], [ %.087, %313 ], [ %.087, %311 ], [ %.087, %299 ], [ %.087, %289 ], [ %.087, %286 ], [ %.087, %284 ], [ %.087, %272 ], [ %.087, %262 ], [ %.087, %261 ], [ %.087, %260 ], [ %.087, %259 ], [ %.087, %252 ], [ %.087, %248 ], [ %.087, %247 ], [ %.087, %237 ], [ %.087, %227 ], [ %.087, %225 ], [ %.087, %224 ], [ %.087, %222 ], [ %.087, %221 ], [ %.087, %219 ], [ %.087, %202 ], [ %.087, %198 ], [ %.087, %197 ], [ %.087, %195 ], [ %.087, %183 ], [ %.087, %173 ], [ %.087, %172 ], [ %.087, %170 ], [ %.087, %158 ], [ %.087, %148 ], [ %.087, %147 ], [ %.087, %145 ], [ %.087, %134 ], [ %.087, %130 ], [ %.087, %129 ], [ %.087, %128 ], [ %118, %117 ], [ %.087, %107 ], [ %.087, %106 ], [ %.087, %105 ], [ %.087, %94 ], [ %.087, %84 ], [ %.087, %83 ], [ %.087, %78 ], [ %.087, %73 ], [ %.087, %71 ], [ %.087, %60 ], [ %.087, %50 ], [ %.087, %48 ], [ %.087, %36 ], [ %.087, %26 ], [ %.087, %25 ], [ %.087, %21 ]
  %.085.be = phi i32 [ %.085, %20 ], [ %.085, %447 ], [ %.085, %445 ], [ %.085, %444 ], [ %.085, %443 ], [ %.085, %442 ], [ %.085, %441 ], [ %.085, %440 ], [ %.085, %439 ], [ %.085, %438 ], [ %.085, %436 ], [ %.neg, %435 ], [ %.085, %434 ], [ %.085, %433 ], [ %.085, %431 ], [ %.085, %430 ], [ %.085, %428 ], [ %.085, %427 ], [ %.085, %426 ], [ %.085, %425 ], [ %.085, %414 ], [ %.085, %404 ], [ %.085, %400 ], [ %.085, %393 ], [ %.085, %392 ], [ %.085, %381 ], [ %.085, %371 ], [ %.085, %363 ], [ %.085, %359 ], [ %.085, %358 ], [ %.085, %348 ], [ %.085, %338 ], [ %.085, %334 ], [ %.085, %333 ], [ %.085, %323 ], [ %.085, %313 ], [ %.085, %311 ], [ %.085, %299 ], [ %.085, %289 ], [ %.085, %286 ], [ %.085, %284 ], [ %.085, %272 ], [ %.085, %262 ], [ %.085, %261 ], [ %.085, %260 ], [ %.085, %259 ], [ %.085, %252 ], [ %.085, %248 ], [ %.085, %247 ], [ %.085, %237 ], [ %.085, %227 ], [ %.085, %225 ], [ %.085, %224 ], [ %.085, %222 ], [ %.085, %221 ], [ %.085, %219 ], [ %.085, %202 ], [ %.085, %198 ], [ %.085, %197 ], [ %.085, %195 ], [ %.085, %183 ], [ %.085, %173 ], [ %.085, %172 ], [ %.085, %170 ], [ %.085, %158 ], [ %.085, %148 ], [ %.085, %147 ], [ %.085, %145 ], [ %.085, %134 ], [ %.085, %130 ], [ %.085, %129 ], [ %.085, %128 ], [ %.085, %117 ], [ %.085, %107 ], [ %.085, %106 ], [ %.085, %105 ], [ %95, %94 ], [ %.085, %84 ], [ %.085, %83 ], [ %.085, %78 ], [ %.085, %73 ], [ %.085, %71 ], [ %.085, %60 ], [ %.085, %50 ], [ %.085, %48 ], [ %.085, %36 ], [ %.085, %26 ], [ 0, %25 ], [ %.085, %21 ]
  %.083.be = phi i32 [ %.083, %20 ], [ %.083, %447 ], [ %.083, %445 ], [ %.083, %444 ], [ %.083, %443 ], [ %.083, %442 ], [ %.083, %441 ], [ %.083, %440 ], [ %.083, %439 ], [ %.083, %438 ], [ %.083, %436 ], [ %.083, %435 ], [ %.083, %434 ], [ %.083, %433 ], [ %.083, %431 ], [ %.083, %430 ], [ %.083, %428 ], [ %.083, %427 ], [ %.083, %426 ], [ %.083, %425 ], [ %.083, %414 ], [ %.083, %404 ], [ %.083, %400 ], [ %.083, %393 ], [ %.083, %392 ], [ %.083, %381 ], [ %.083, %371 ], [ %.083, %363 ], [ %.083, %359 ], [ %.083, %358 ], [ %.083, %348 ], [ %.083, %338 ], [ %.083, %334 ], [ %.083, %333 ], [ %.083, %323 ], [ %.083, %313 ], [ %.083, %311 ], [ %.083, %299 ], [ %.083, %289 ], [ %.083, %286 ], [ %.083, %284 ], [ %.083, %272 ], [ %.083, %262 ], [ %.083, %261 ], [ %.083, %260 ], [ %.083, %259 ], [ %.083, %252 ], [ %.083, %248 ], [ %.083, %247 ], [ %.083, %237 ], [ %.083, %227 ], [ %.083, %225 ], [ %.083, %224 ], [ %.083, %222 ], [ %.083, %221 ], [ %.083, %219 ], [ %.083, %202 ], [ %.083, %198 ], [ %.083, %197 ], [ %.083, %195 ], [ %.083, %183 ], [ %.083, %173 ], [ %.083, %172 ], [ %.083, %170 ], [ %.083, %158 ], [ %.083, %148 ], [ %.083, %147 ], [ %146, %145 ], [ %.083, %134 ], [ %.083, %130 ], [ 0, %129 ], [ %.083, %128 ], [ %.083, %117 ], [ %.083, %107 ], [ %.083, %106 ], [ %.083, %105 ], [ %.083, %94 ], [ %.083, %84 ], [ %.083, %83 ], [ %.083, %78 ], [ %.083, %73 ], [ %.083, %71 ], [ %.083, %60 ], [ %.083, %50 ], [ %.083, %48 ], [ %.083, %36 ], [ %.083, %26 ], [ %.083, %25 ], [ %.083, %21 ]
  %.081.be = phi i32 [ %.081, %20 ], [ %.081, %447 ], [ %.081, %445 ], [ %.081, %444 ], [ %.081, %443 ], [ %.081, %442 ], [ %.081, %441 ], [ %.081, %440 ], [ %.081, %439 ], [ %.081, %438 ], [ %.081, %436 ], [ %.081, %435 ], [ %.081, %434 ], [ %.081, %433 ], [ %.081, %431 ], [ %.081, %430 ], [ %.081, %428 ], [ %.081, %427 ], [ %.081, %426 ], [ %.081, %425 ], [ %.081, %414 ], [ %.081, %404 ], [ %.081, %400 ], [ %.081, %393 ], [ %.081, %392 ], [ %.081, %381 ], [ %.081, %371 ], [ %.081, %363 ], [ %.081, %359 ], [ %.081, %358 ], [ %.081, %348 ], [ %.081, %338 ], [ %.081, %334 ], [ %.081, %333 ], [ %.081, %323 ], [ %.081, %313 ], [ %.081, %311 ], [ %.081, %299 ], [ %.081, %289 ], [ %.081, %286 ], [ %.081, %284 ], [ %.081, %272 ], [ %.081, %262 ], [ %.081, %261 ], [ %.081, %260 ], [ %.081, %259 ], [ %.081, %252 ], [ %.081, %248 ], [ %.081, %247 ], [ %.081, %237 ], [ %.081, %227 ], [ %226, %225 ], [ %.081, %224 ], [ %.081, %222 ], [ %.081, %221 ], [ %.081, %219 ], [ %.081, %202 ], [ %.081, %198 ], [ %.081, %197 ], [ %.081, %195 ], [ %.081, %183 ], [ %.081, %173 ], [ %.081, %172 ], [ %.081, %170 ], [ %.081, %158 ], [ %.081, %148 ], [ 0, %147 ], [ %.081, %145 ], [ %.081, %134 ], [ %.081, %130 ], [ %.081, %129 ], [ %.081, %128 ], [ %.081, %117 ], [ %.081, %107 ], [ %.081, %106 ], [ %.081, %105 ], [ %.081, %94 ], [ %.081, %84 ], [ %.081, %83 ], [ %.081, %78 ], [ %.081, %73 ], [ %.081, %71 ], [ %.081, %60 ], [ %.081, %50 ], [ %.081, %48 ], [ %.081, %36 ], [ %.081, %26 ], [ %.081, %25 ], [ %.081, %21 ]
  %.079.be = phi i32 [ %.079, %20 ], [ %.079, %447 ], [ %.079, %445 ], [ %.079, %444 ], [ %.079, %443 ], [ %.079, %442 ], [ %.079, %441 ], [ %.079, %440 ], [ %.079, %439 ], [ %.079, %438 ], [ %.079, %436 ], [ %.079, %435 ], [ %.079, %434 ], [ %.079, %433 ], [ %.079, %431 ], [ %.079, %430 ], [ %.079, %428 ], [ %.079, %427 ], [ %.079, %426 ], [ %.079, %425 ], [ %.079, %414 ], [ %.079, %404 ], [ %.079, %400 ], [ %.079, %393 ], [ %.079, %392 ], [ %.079, %381 ], [ %.079, %371 ], [ %.079, %363 ], [ %.079, %359 ], [ %.079, %358 ], [ %.079, %348 ], [ %.079, %338 ], [ %.079, %334 ], [ %.079, %333 ], [ %.079, %323 ], [ %.079, %313 ], [ %.079, %311 ], [ %.079, %299 ], [ %.079, %289 ], [ %.079, %286 ], [ %.079, %284 ], [ %.079, %272 ], [ %.079, %262 ], [ %.079, %261 ], [ %.079, %260 ], [ %.079, %259 ], [ %.079, %252 ], [ %.079, %248 ], [ %.079, %247 ], [ %.079, %237 ], [ %.079, %227 ], [ %.079, %225 ], [ %.079, %224 ], [ %223, %222 ], [ %.079, %221 ], [ %.079, %219 ], [ %.079, %202 ], [ %.079, %198 ], [ %.079, %197 ], [ %.079, %195 ], [ %.079, %183 ], [ %.079, %173 ], [ 0, %172 ], [ %.079, %170 ], [ %.079, %158 ], [ %.079, %148 ], [ %.079, %147 ], [ %.079, %145 ], [ %.079, %134 ], [ %.079, %130 ], [ %.079, %129 ], [ %.079, %128 ], [ %.079, %117 ], [ %.079, %107 ], [ %.079, %106 ], [ %.079, %105 ], [ %.079, %94 ], [ %.079, %84 ], [ %.079, %83 ], [ %.079, %78 ], [ %.079, %73 ], [ %.079, %71 ], [ %.079, %60 ], [ %.079, %50 ], [ %.079, %48 ], [ %.079, %36 ], [ %.079, %26 ], [ %.079, %25 ], [ %.079, %21 ]
  %.077.be = phi i32 [ %.077, %20 ], [ %.077, %447 ], [ %.077, %445 ], [ %.077, %444 ], [ %.077, %443 ], [ %.077, %442 ], [ %.077, %441 ], [ %.077, %440 ], [ %.077, %439 ], [ %.077, %438 ], [ %.077, %436 ], [ %.077, %435 ], [ %.077, %434 ], [ %.077, %433 ], [ %.077, %431 ], [ %.077, %430 ], [ %.077, %428 ], [ %.077, %427 ], [ %.077, %426 ], [ %.077, %425 ], [ %.077, %414 ], [ %.077, %404 ], [ %.077, %400 ], [ %.077, %393 ], [ %.077, %392 ], [ %.077, %381 ], [ %.077, %371 ], [ %.077, %363 ], [ %.077, %359 ], [ %.077, %358 ], [ %.077, %348 ], [ %.077, %338 ], [ %.077, %334 ], [ %.077, %333 ], [ %.077, %323 ], [ %.077, %313 ], [ %.077, %311 ], [ %.077, %299 ], [ %.077, %289 ], [ %.077, %286 ], [ %.077, %284 ], [ %.077, %272 ], [ %.077, %262 ], [ %.077, %261 ], [ %.077, %260 ], [ %.077, %259 ], [ %.077, %252 ], [ %.077, %248 ], [ %.077, %247 ], [ %.077, %237 ], [ %.077, %227 ], [ %.077, %225 ], [ %.077, %224 ], [ %.077, %222 ], [ %.077, %221 ], [ %220, %219 ], [ %.077, %202 ], [ %.077, %198 ], [ 0, %197 ], [ %.077, %195 ], [ %.077, %183 ], [ %.077, %173 ], [ %.077, %172 ], [ %.077, %170 ], [ %.077, %158 ], [ %.077, %148 ], [ %.077, %147 ], [ %.077, %145 ], [ %.077, %134 ], [ %.077, %130 ], [ %.077, %129 ], [ %.077, %128 ], [ %.077, %117 ], [ %.077, %107 ], [ %.077, %106 ], [ %.077, %105 ], [ %.077, %94 ], [ %.077, %84 ], [ %.077, %83 ], [ %.077, %78 ], [ %.077, %73 ], [ %.077, %71 ], [ %.077, %60 ], [ %.077, %50 ], [ %.077, %48 ], [ %.077, %36 ], [ %.077, %26 ], [ %.077, %25 ], [ %.077, %21 ]
  %.075.be = phi i8 [ %.075, %20 ], [ %.075, %447 ], [ %.075, %445 ], [ %.075, %444 ], [ %.075, %443 ], [ %.075, %442 ], [ %.075, %441 ], [ 0, %440 ], [ %.075, %439 ], [ %.075, %438 ], [ %.075, %436 ], [ %.075, %435 ], [ %.075, %434 ], [ %.075, %433 ], [ %.075, %431 ], [ %.075, %430 ], [ %.075, %428 ], [ %.075, %427 ], [ %.075, %426 ], [ %.075, %425 ], [ %.075, %414 ], [ %.075, %404 ], [ %.075, %400 ], [ %.075, %393 ], [ %.075, %392 ], [ %.075, %381 ], [ %.075, %371 ], [ %.075, %363 ], [ %.075, %359 ], [ %.075, %358 ], [ %.075, %348 ], [ %.075, %338 ], [ %.075, %334 ], [ %.075, %333 ], [ %.075, %323 ], [ %.075, %313 ], [ %.075, %311 ], [ %.075, %299 ], [ %.075, %289 ], [ %.075, %286 ], [ %.075, %284 ], [ %.075, %272 ], [ %.075, %262 ], [ %.075, %261 ], [ %.075, %260 ], [ 1, %259 ], [ %.075, %252 ], [ %.075, %248 ], [ %.075, %247 ], [ 0, %237 ], [ %.075, %227 ], [ %.075, %225 ], [ %.075, %224 ], [ %.075, %222 ], [ %.075, %221 ], [ %.075, %219 ], [ %.075, %202 ], [ %.075, %198 ], [ %.075, %197 ], [ %.075, %195 ], [ %.075, %183 ], [ %.075, %173 ], [ %.075, %172 ], [ %.075, %170 ], [ %.075, %158 ], [ %.075, %148 ], [ %.075, %147 ], [ %.075, %145 ], [ %.075, %134 ], [ %.075, %130 ], [ %.075, %129 ], [ %.075, %128 ], [ %.075, %117 ], [ %.075, %107 ], [ %.075, %106 ], [ %.075, %105 ], [ %.075, %94 ], [ %.075, %84 ], [ %.075, %83 ], [ %.075, %78 ], [ %.075, %73 ], [ %.075, %71 ], [ %.075, %60 ], [ %.075, %50 ], [ %.075, %48 ], [ %.075, %36 ], [ %.075, %26 ], [ %.075, %25 ], [ %.075, %21 ]
  %.073.be = phi i32 [ %.073, %20 ], [ %.073, %447 ], [ %.073, %445 ], [ %.073, %444 ], [ %.073, %443 ], [ %.073, %442 ], [ %.073, %441 ], [ 0, %440 ], [ %.073, %439 ], [ %.073, %438 ], [ %.073, %436 ], [ %.073, %435 ], [ %.073, %434 ], [ %.073, %433 ], [ %.073, %431 ], [ %.073, %430 ], [ %.073, %428 ], [ %.073, %427 ], [ %.073, %426 ], [ %.073, %425 ], [ %.073, %414 ], [ %.073, %404 ], [ %.073, %400 ], [ %.073, %393 ], [ %.073, %392 ], [ %.073, %381 ], [ %.073, %371 ], [ %.073, %363 ], [ %.073, %359 ], [ %.073, %358 ], [ %.073, %348 ], [ %.073, %338 ], [ %.073, %334 ], [ %.073, %333 ], [ %.073, %323 ], [ %.073, %313 ], [ %.073, %311 ], [ %.073, %299 ], [ %.073, %289 ], [ %.073, %286 ], [ %.073, %284 ], [ %.073, %272 ], [ %.073, %262 ], [ %.neg92, %261 ], [ %.073, %260 ], [ %.073, %259 ], [ %.073, %252 ], [ %.073, %248 ], [ %.073, %247 ], [ 0, %237 ], [ %.073, %227 ], [ %.073, %225 ], [ %.073, %224 ], [ %.073, %222 ], [ %.073, %221 ], [ %.073, %219 ], [ %.073, %202 ], [ %.073, %198 ], [ %.073, %197 ], [ %.073, %195 ], [ %.073, %183 ], [ %.073, %173 ], [ %.073, %172 ], [ %.073, %170 ], [ %.073, %158 ], [ %.073, %148 ], [ %.073, %147 ], [ %.073, %145 ], [ %.073, %134 ], [ %.073, %130 ], [ %.073, %129 ], [ %.073, %128 ], [ %.073, %117 ], [ %.073, %107 ], [ %.073, %106 ], [ %.073, %105 ], [ %.073, %94 ], [ %.073, %84 ], [ %.073, %83 ], [ %.073, %78 ], [ %.073, %73 ], [ %.073, %71 ], [ %.073, %60 ], [ %.073, %50 ], [ %.073, %48 ], [ %.073, %36 ], [ %.073, %26 ], [ %.073, %25 ], [ %.073, %21 ]
  %.071.be = phi i32 [ %.071, %20 ], [ %.071, %447 ], [ %.071, %445 ], [ %.071, %444 ], [ 0, %443 ], [ %.071, %442 ], [ %.071, %441 ], [ %.071, %440 ], [ %.071, %439 ], [ %.071, %438 ], [ %.071, %436 ], [ %.071, %435 ], [ %.071, %434 ], [ %.071, %433 ], [ %.071, %431 ], [ %.neg89, %430 ], [ %.071, %428 ], [ %.071, %427 ], [ %.071, %426 ], [ %.071, %425 ], [ %.071, %414 ], [ %.071, %404 ], [ %.071, %400 ], [ %.071, %393 ], [ %.071, %392 ], [ %.071, %381 ], [ %.071, %371 ], [ %.071, %363 ], [ %.071, %359 ], [ %.071, %358 ], [ %.071, %348 ], [ %.071, %338 ], [ %.071, %334 ], [ %.071, %333 ], [ 0, %323 ], [ %.071, %313 ], [ %.071, %311 ], [ %.071, %299 ], [ %.071, %289 ], [ %.071, %286 ], [ %.071, %284 ], [ %.071, %272 ], [ %.071, %262 ], [ %.071, %261 ], [ %.071, %260 ], [ %.071, %259 ], [ %.071, %252 ], [ %.071, %248 ], [ %.071, %247 ], [ %.071, %237 ], [ %.071, %227 ], [ %.071, %225 ], [ %.071, %224 ], [ %.071, %222 ], [ %.071, %221 ], [ %.071, %219 ], [ %.071, %202 ], [ %.071, %198 ], [ %.071, %197 ], [ %.071, %195 ], [ %.071, %183 ], [ %.071, %173 ], [ %.071, %172 ], [ %.071, %170 ], [ %.071, %158 ], [ %.071, %148 ], [ %.071, %147 ], [ %.071, %145 ], [ %.071, %134 ], [ %.071, %130 ], [ %.071, %129 ], [ %.071, %128 ], [ %.071, %117 ], [ %.071, %107 ], [ %.071, %106 ], [ %.071, %105 ], [ %.071, %94 ], [ %.071, %84 ], [ %.071, %83 ], [ %.071, %78 ], [ %.071, %73 ], [ %.071, %71 ], [ %.071, %60 ], [ %.071, %50 ], [ %.071, %48 ], [ %.071, %36 ], [ %.071, %26 ], [ %.071, %25 ], [ %.071, %21 ]
  %.069.be = phi i32 [ %.069, %20 ], [ %.069, %447 ], [ %.069, %445 ], [ 0, %444 ], [ %.069, %443 ], [ %.069, %442 ], [ %.069, %441 ], [ %.069, %440 ], [ %.069, %439 ], [ %.069, %438 ], [ %.069, %436 ], [ %.069, %435 ], [ %.069, %434 ], [ %.069, %433 ], [ %.069, %431 ], [ %.069, %430 ], [ %.069, %428 ], [ %.neg90, %427 ], [ %.069, %426 ], [ %.069, %425 ], [ %.069, %414 ], [ %.069, %404 ], [ %.069, %400 ], [ %.069, %393 ], [ %.069, %392 ], [ %.069, %381 ], [ %.069, %371 ], [ %.069, %363 ], [ %.069, %359 ], [ %.069, %358 ], [ 0, %348 ], [ %.069, %338 ], [ %.069, %334 ], [ %.069, %333 ], [ %.069, %323 ], [ %.069, %313 ], [ %.069, %311 ], [ %.069, %299 ], [ %.069, %289 ], [ %.069, %286 ], [ %.069, %284 ], [ %.069, %272 ], [ %.069, %262 ], [ %.069, %261 ], [ %.069, %260 ], [ %.069, %259 ], [ %.069, %252 ], [ %.069, %248 ], [ %.069, %247 ], [ %.069, %237 ], [ %.069, %227 ], [ %.069, %225 ], [ %.069, %224 ], [ %.069, %222 ], [ %.069, %221 ], [ %.069, %219 ], [ %.069, %202 ], [ %.069, %198 ], [ %.069, %197 ], [ %.069, %195 ], [ %.069, %183 ], [ %.069, %173 ], [ %.069, %172 ], [ %.069, %170 ], [ %.069, %158 ], [ %.069, %148 ], [ %.069, %147 ], [ %.069, %145 ], [ %.069, %134 ], [ %.069, %130 ], [ %.069, %129 ], [ %.069, %128 ], [ %.069, %117 ], [ %.069, %107 ], [ %.069, %106 ], [ %.069, %105 ], [ %.069, %94 ], [ %.069, %84 ], [ %.069, %83 ], [ %.069, %78 ], [ %.069, %73 ], [ %.069, %71 ], [ %.069, %60 ], [ %.069, %50 ], [ %.069, %48 ], [ %.069, %36 ], [ %.069, %26 ], [ %.069, %25 ], [ %.069, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 740704842, %447 ], [ 1279011132, %445 ], [ -1136820285, %444 ], [ -161813904, %443 ], [ -1255662240, %442 ], [ 1803493841, %441 ], [ 151419173, %440 ], [ -1394568927, %439 ], [ 213182665, %438 ], [ -708581599, %436 ], [ 105390616, %435 ], [ 1596440561, %434 ], [ -273655295, %433 ], [ 465099997, %431 ], [ -246588352, %430 ], [ -1076124867, %428 ], [ 2041430809, %427 ], [ 1957124869, %426 ], [ -62733832, %425 ], [ %424, %414 ], [ %413, %404 ], [ %403, %400 ], [ -1969882506, %393 ], [ -1969882506, %392 ], [ %391, %381 ], [ %380, %371 ], [ %370, %363 ], [ %362, %359 ], [ 2041430809, %358 ], [ %357, %348 ], [ %347, %338 ], [ %337, %334 ], [ -246588352, %333 ], [ %332, %323 ], [ %322, %313 ], [ %312, %311 ], [ %310, %299 ], [ %298, %289 ], [ 159835481, %286 ], [ %285, %284 ], [ %283, %272 ], [ %271, %262 ], [ -2068557765, %261 ], [ -111871803, %260 ], [ -305891731, %259 ], [ %258, %252 ], [ %251, %248 ], [ -2068557765, %247 ], [ %246, %237 ], [ %236, %227 ], [ 260633990, %225 ], [ 1530886441, %224 ], [ 599766785, %222 ], [ -192479625, %221 ], [ 215851014, %219 ], [ -1328453560, %202 ], [ %201, %198 ], [ 215851014, %197 ], [ %196, %195 ], [ %194, %183 ], [ %182, %173 ], [ 599766785, %172 ], [ %171, %170 ], [ %169, %158 ], [ %157, %148 ], [ 260633990, %147 ], [ 479059501, %145 ], [ 1867845377, %134 ], [ %133, %130 ], [ 479059501, %129 ], [ 1837361751, %128 ], [ %127, %117 ], [ %116, %107 ], [ -951305089, %106 ], [ -768869289, %105 ], [ %104, %94 ], [ %93, %84 ], [ 191065240, %83 ], [ 2000167046, %78 ], [ 2000167046, %73 ], [ %72, %71 ], [ %70, %60 ], [ %59, %50 ], [ %49, %48 ], [ %47, %36 ], [ %35, %26 ], [ -768869289, %25 ], [ %24, %21 ]
  br label %20

21:                                               ; preds = %20
  %22 = load i32, i32* %8, align 4
  %23 = icmp slt i32 %.087, %22
  %24 = select i1 %23, i32 -1591709994, i32 640748156
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  %27 = load i32, i32* @x.3, align 4
  %28 = load i32, i32* @y.4, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -273655295, i32 -826975756
  br label %.backedge

36:                                               ; preds = %20
  %37 = load i32, i32* %8, align 4
  %38 = icmp slt i32 %.085, %37
  store i1 %38, i1* %6, align 1
  %39 = load i32, i32* @x.3, align 4
  %40 = load i32, i32* @y.4, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 -123179605, i32 -826975756
  br label %.backedge

48:                                               ; preds = %20
  %.0..0..0.63 = load volatile i1, i1* %6, align 1
  %49 = select i1 %.0..0..0.63, i32 366993603, i32 -1138779658
  br label %.backedge

50:                                               ; preds = %20
  %51 = load i32, i32* @x.3, align 4
  %52 = load i32, i32* @y.4, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 1596440561, i32 1699267215
  br label %.backedge

60:                                               ; preds = %20
  %61 = icmp eq i32 %.087, %.085
  store i1 %61, i1* %5, align 1
  %62 = load i32, i32* @x.3, align 4
  %63 = load i32, i32* @y.4, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 484523416, i32 1699267215
  br label %.backedge

71:                                               ; preds = %20
  %.0..0..0.64 = load volatile i1, i1* %5, align 1
  %72 = select i1 %.0..0..0.64, i32 -746987076, i32 1536893586
  br label %.backedge

73:                                               ; preds = %20
  %74 = sext i32 %.087 to i64
  %.0..0..0.53 = load volatile i64, i64* %7, align 8
  %75 = mul nsw i64 %.0..0..0.53, %74
  %76 = sext i32 %.085 to i64
  %.idx100 = add nsw i64 %75, %76
  %77 = getelementptr inbounds i64, i64* %19, i64 %.idx100
  store i64 0, i64* %77, align 8
  br label %.backedge

78:                                               ; preds = %20
  %79 = sext i32 %.087 to i64
  %.0..0..0.54 = load volatile i64, i64* %7, align 8
  %80 = mul nsw i64 %.0..0..0.54, %79
  %81 = sext i32 %.085 to i64
  %.idx99 = add nsw i64 %80, %81
  %82 = getelementptr inbounds i64, i64* %19, i64 %.idx99
  store i64 288230376151711743, i64* %82, align 8
  br label %.backedge

83:                                               ; preds = %20
  br label %.backedge

84:                                               ; preds = %20
  %85 = load i32, i32* @x.3, align 4
  %86 = load i32, i32* @y.4, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 105390616, i32 74731043
  br label %.backedge

94:                                               ; preds = %20
  %95 = add i32 %.085, 1
  %96 = load i32, i32* @x.3, align 4
  %97 = load i32, i32* @y.4, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 1820699793, i32 74731043
  br label %.backedge

105:                                              ; preds = %20
  br label %.backedge

106:                                              ; preds = %20
  br label %.backedge

107:                                              ; preds = %20
  %108 = load i32, i32* @x.3, align 4
  %109 = load i32, i32* @y.4, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -708581599, i32 1457627216
  br label %.backedge

117:                                              ; preds = %20
  %118 = add i32 %.087, 1
  %119 = load i32, i32* @x.3, align 4
  %120 = load i32, i32* @y.4, align 4
  %121 = add i32 %119, -1
  %122 = mul i32 %121, %119
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %125, %124
  %127 = select i1 %126, i32 2020598423, i32 1457627216
  br label %.backedge

128:                                              ; preds = %20
  br label %.backedge

129:                                              ; preds = %20
  br label %.backedge

130:                                              ; preds = %20
  %131 = load i32, i32* %9, align 4
  %132 = icmp slt i32 %.083, %131
  %133 = select i1 %132, i32 1725389491, i32 313095998
  br label %.backedge

134:                                              ; preds = %20
  %135 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %10)
  %136 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %135, i32* nonnull dereferenceable(4) %11)
  %137 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %136, i64* nonnull dereferenceable(8) %12)
  %138 = load i64, i64* %12, align 8
  %139 = load i32, i32* %10, align 4
  %140 = sext i32 %139 to i64
  %.0..0..0.55 = load volatile i64, i64* %7, align 8
  %141 = mul nsw i64 %.0..0..0.55, %140
  %142 = load i32, i32* %11, align 4
  %143 = sext i32 %142 to i64
  %.idx98 = add nsw i64 %141, %143
  %144 = getelementptr inbounds i64, i64* %19, i64 %.idx98
  store i64 %138, i64* %144, align 8
  br label %.backedge

145:                                              ; preds = %20
  %146 = add i32 %.083, 1
  br label %.backedge

147:                                              ; preds = %20
  br label %.backedge

148:                                              ; preds = %20
  %149 = load i32, i32* @x.3, align 4
  %150 = load i32, i32* @y.4, align 4
  %151 = add i32 %149, -1
  %152 = mul i32 %151, %149
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %155, %154
  %157 = select i1 %156, i32 213182665, i32 1495944930
  br label %.backedge

158:                                              ; preds = %20
  %159 = load i32, i32* %8, align 4
  %160 = icmp slt i32 %.081, %159
  store i1 %160, i1* %4, align 1
  %161 = load i32, i32* @x.3, align 4
  %162 = load i32, i32* @y.4, align 4
  %163 = add i32 %161, -1
  %164 = mul i32 %163, %161
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %167, %166
  %169 = select i1 %168, i32 -341486164, i32 1495944930
  br label %.backedge

170:                                              ; preds = %20
  %.0..0..0.65 = load volatile i1, i1* %4, align 1
  %171 = select i1 %.0..0..0.65, i32 -230197985, i32 1561305270
  br label %.backedge

172:                                              ; preds = %20
  br label %.backedge

173:                                              ; preds = %20
  %174 = load i32, i32* @x.3, align 4
  %175 = load i32, i32* @y.4, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 -1394568927, i32 -23608629
  br label %.backedge

183:                                              ; preds = %20
  %184 = load i32, i32* %8, align 4
  %185 = icmp slt i32 %.079, %184
  store i1 %185, i1* %3, align 1
  %186 = load i32, i32* @x.3, align 4
  %187 = load i32, i32* @y.4, align 4
  %188 = add i32 %186, -1
  %189 = mul i32 %188, %186
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %192, %191
  %194 = select i1 %193, i32 1628356966, i32 -23608629
  br label %.backedge

195:                                              ; preds = %20
  %.0..0..0.66 = load volatile i1, i1* %3, align 1
  %196 = select i1 %.0..0..0.66, i32 -1891720278, i32 -1612068480
  br label %.backedge

197:                                              ; preds = %20
  br label %.backedge

198:                                              ; preds = %20
  %199 = load i32, i32* %8, align 4
  %200 = icmp slt i32 %.077, %199
  %201 = select i1 %200, i32 -3732355, i32 85429951
  br label %.backedge

202:                                              ; preds = %20
  %203 = sext i32 %.079 to i64
  %.0..0..0.56 = load volatile i64, i64* %7, align 8
  %204 = mul nsw i64 %.0..0..0.56, %203
  %205 = sext i32 %.081 to i64
  %.idx94 = add nsw i64 %204, %205
  %206 = getelementptr inbounds i64, i64* %19, i64 %.idx94
  %207 = load i64, i64* %206, align 8
  %.0..0..0.57 = load volatile i64, i64* %7, align 8
  %208 = mul nsw i64 %.0..0..0.57, %205
  %209 = sext i32 %.077 to i64
  %.idx95 = add nsw i64 %208, %209
  %210 = getelementptr inbounds i64, i64* %19, i64 %.idx95
  %211 = load i64, i64* %210, align 8
  %212 = add i64 %211, %207
  store i64 %212, i64* %13, align 8
  %.0..0..0.58 = load volatile i64, i64* %7, align 8
  %213 = mul nsw i64 %.0..0..0.58, %203
  %.idx96 = add nsw i64 %213, %209
  %214 = getelementptr inbounds i64, i64* %19, i64 %.idx96
  %215 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %13, i64* nonnull dereferenceable(8) %214)
  %216 = load i64, i64* %215, align 8
  %.0..0..0.59 = load volatile i64, i64* %7, align 8
  %217 = mul nsw i64 %.0..0..0.59, %203
  %.idx97 = add nsw i64 %217, %209
  %218 = getelementptr inbounds i64, i64* %19, i64 %.idx97
  store i64 %216, i64* %218, align 8
  br label %.backedge

219:                                              ; preds = %20
  %220 = add i32 %.077, 1
  br label %.backedge

221:                                              ; preds = %20
  br label %.backedge

222:                                              ; preds = %20
  %223 = add i32 %.079, 1
  br label %.backedge

224:                                              ; preds = %20
  br label %.backedge

225:                                              ; preds = %20
  %226 = add i32 %.081, 1
  br label %.backedge

227:                                              ; preds = %20
  %228 = load i32, i32* @x.3, align 4
  %229 = load i32, i32* @y.4, align 4
  %230 = add i32 %228, -1
  %231 = mul i32 %230, %228
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %234, %233
  %236 = select i1 %235, i32 151419173, i32 1423648166
  br label %.backedge

237:                                              ; preds = %20
  %238 = load i32, i32* @x.3, align 4
  %239 = load i32, i32* @y.4, align 4
  %240 = add i32 %238, -1
  %241 = mul i32 %240, %238
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %244, %243
  %246 = select i1 %245, i32 438224250, i32 1423648166
  br label %.backedge

247:                                              ; preds = %20
  br label %.backedge

248:                                              ; preds = %20
  %249 = load i32, i32* %8, align 4
  %250 = icmp slt i32 %.073, %249
  %251 = select i1 %250, i32 1625047060, i32 731322096
  br label %.backedge

252:                                              ; preds = %20
  %253 = sext i32 %.073 to i64
  %.0..0..0.60 = load volatile i64, i64* %7, align 8
  %254 = mul nsw i64 %.0..0..0.60, %253
  %.idx93 = add nsw i64 %254, %253
  %255 = getelementptr inbounds i64, i64* %19, i64 %.idx93
  %256 = load i64, i64* %255, align 8
  %257 = icmp slt i64 %256, 0
  %258 = select i1 %257, i32 1851000859, i32 -305891731
  br label %.backedge

259:                                              ; preds = %20
  br label %.backedge

260:                                              ; preds = %20
  br label %.backedge

261:                                              ; preds = %20
  %.neg92 = add i32 %.073, 1
  br label %.backedge

262:                                              ; preds = %20
  %263 = load i32, i32* @x.3, align 4
  %264 = load i32, i32* @y.4, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 1803493841, i32 1776865490
  br label %.backedge

272:                                              ; preds = %20
  %273 = and i8 %.075, 1
  %274 = icmp ne i8 %273, 0
  store i1 %274, i1* %2, align 1
  %275 = load i32, i32* @x.3, align 4
  %276 = load i32, i32* @y.4, align 4
  %277 = add i32 %275, -1
  %278 = mul i32 %277, %275
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %281, %280
  %283 = select i1 %282, i32 1132193405, i32 1776865490
  br label %.backedge

284:                                              ; preds = %20
  %.0..0..0.67 = load volatile i1, i1* %2, align 1
  %285 = select i1 %.0..0..0.67, i32 1719544128, i32 159835481
  br label %.backedge

286:                                              ; preds = %20
  %287 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %288 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %287, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

289:                                              ; preds = %20
  %290 = load i32, i32* @x.3, align 4
  %291 = load i32, i32* @y.4, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 -1255662240, i32 650967121
  br label %.backedge

299:                                              ; preds = %20
  %300 = and i8 %.075, 1
  %301 = icmp ne i8 %300, 0
  store i1 %301, i1* %1, align 1
  %302 = load i32, i32* @x.3, align 4
  %303 = load i32, i32* @y.4, align 4
  %304 = add i32 %302, -1
  %305 = mul i32 %304, %302
  %306 = and i32 %305, 1
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %308, %307
  %310 = select i1 %309, i32 -1934206825, i32 650967121
  br label %.backedge

311:                                              ; preds = %20
  %.0..0..0.68 = load volatile i1, i1* %1, align 1
  %312 = select i1 %.0..0..0.68, i32 465099997, i32 609287419
  br label %.backedge

313:                                              ; preds = %20
  %314 = load i32, i32* @x.3, align 4
  %315 = load i32, i32* @y.4, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 -161813904, i32 -1335449493
  br label %.backedge

323:                                              ; preds = %20
  %324 = load i32, i32* @x.3, align 4
  %325 = load i32, i32* @y.4, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 701154729, i32 -1335449493
  br label %.backedge

333:                                              ; preds = %20
  br label %.backedge

334:                                              ; preds = %20
  %335 = load i32, i32* %8, align 4
  %336 = icmp slt i32 %.071, %335
  %337 = select i1 %336, i32 -1384864165, i32 709568129
  br label %.backedge

338:                                              ; preds = %20
  %339 = load i32, i32* @x.3, align 4
  %340 = load i32, i32* @y.4, align 4
  %341 = add i32 %339, -1
  %342 = mul i32 %341, %339
  %343 = and i32 %342, 1
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %345, %344
  %347 = select i1 %346, i32 -1136820285, i32 882762710
  br label %.backedge

348:                                              ; preds = %20
  %349 = load i32, i32* @x.3, align 4
  %350 = load i32, i32* @y.4, align 4
  %351 = add i32 %349, -1
  %352 = mul i32 %351, %349
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %355, %354
  %357 = select i1 %356, i32 -1766102001, i32 882762710
  br label %.backedge

358:                                              ; preds = %20
  br label %.backedge

359:                                              ; preds = %20
  %360 = load i32, i32* %8, align 4
  %361 = icmp slt i32 %.069, %360
  %362 = select i1 %361, i32 -1635865108, i32 1245114052
  br label %.backedge

363:                                              ; preds = %20
  %364 = sext i32 %.071 to i64
  %.0..0..0.61 = load volatile i64, i64* %7, align 8
  %365 = mul nsw i64 %.0..0..0.61, %364
  %366 = sext i32 %.069 to i64
  %.idx91 = add nsw i64 %365, %366
  %367 = getelementptr inbounds i64, i64* %19, i64 %.idx91
  %368 = load i64, i64* %367, align 8
  %369 = icmp sgt i64 %368, 9007199254740990
  %370 = select i1 %369, i32 873190936, i32 1147928358
  br label %.backedge

371:                                              ; preds = %20
  %372 = load i32, i32* @x.3, align 4
  %373 = load i32, i32* @y.4, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 1279011132, i32 2071693714
  br label %.backedge

381:                                              ; preds = %20
  %382 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  %383 = load i32, i32* @x.3, align 4
  %384 = load i32, i32* @y.4, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 678672951, i32 2071693714
  br label %.backedge

392:                                              ; preds = %20
  br label %.backedge

393:                                              ; preds = %20
  %394 = sext i32 %.071 to i64
  %.0..0..0.62 = load volatile i64, i64* %7, align 8
  %395 = mul nsw i64 %.0..0..0.62, %394
  %396 = sext i32 %.069 to i64
  %.idx = add nsw i64 %395, %396
  %397 = getelementptr inbounds i64, i64* %19, i64 %.idx
  %398 = load i64, i64* %397, align 8
  %399 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %398)
  br label %.backedge

400:                                              ; preds = %20
  %401 = load i32, i32* %8, align 4
  %402 = add i32 %401, -1
  %.not = icmp eq i32 %.069, %402
  %403 = select i1 %.not, i32 -62733832, i32 117908371
  br label %.backedge

404:                                              ; preds = %20
  %405 = load i32, i32* @x.3, align 4
  %406 = load i32, i32* @y.4, align 4
  %407 = add i32 %405, -1
  %408 = mul i32 %407, %405
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %411, %410
  %413 = select i1 %412, i32 740704842, i32 -687917872
  br label %.backedge

414:                                              ; preds = %20
  %415 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %416 = load i32, i32* @x.3, align 4
  %417 = load i32, i32* @y.4, align 4
  %418 = add i32 %416, -1
  %419 = mul i32 %418, %416
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %422, %421
  %424 = select i1 %423, i32 738522031, i32 -687917872
  br label %.backedge

425:                                              ; preds = %20
  br label %.backedge

426:                                              ; preds = %20
  br label %.backedge

427:                                              ; preds = %20
  %.neg90 = add i32 %.069, 1
  br label %.backedge

428:                                              ; preds = %20
  %429 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

430:                                              ; preds = %20
  %.neg89 = add i32 %.071, 1
  br label %.backedge

431:                                              ; preds = %20
  br label %.backedge

432:                                              ; preds = %20
  ret i32 0

433:                                              ; preds = %20
  br label %.backedge

434:                                              ; preds = %20
  br label %.backedge

435:                                              ; preds = %20
  %.neg = add i32 %.085, 1
  br label %.backedge

436:                                              ; preds = %20
  %437 = add i32 %.087, 1
  br label %.backedge

438:                                              ; preds = %20
  br label %.backedge

439:                                              ; preds = %20
  br label %.backedge

440:                                              ; preds = %20
  br label %.backedge

441:                                              ; preds = %20
  br label %.backedge

442:                                              ; preds = %20
  br label %.backedge

443:                                              ; preds = %20
  br label %.backedge

444:                                              ; preds = %20
  br label %.backedge

445:                                              ; preds = %20
  %446 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

447:                                              ; preds = %20
  %448 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i64**, align 8
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.5, align 4
  %10 = load i32, i32* @y.6, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ -464247539, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -464247539, label %17
    i32 -1579111513, label %20
    i32 -1229261135, label %38
    i32 -802028868, label %40
    i32 -1023353131, label %42
    i32 1467273855, label %52
    i32 1955564302, label %63
    i32 689287603, label %64
    i32 -234127004, label %66
    i32 -1635231953, label %67
  ]

.backedge:                                        ; preds = %16, %67, %66, %63, %52, %42, %40, %38, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ 1467273855, %67 ], [ -1579111513, %66 ], [ 689287603, %63 ], [ %62, %52 ], [ %51, %42 ], [ 689287603, %40 ], [ %39, %38 ], [ %37, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 -1579111513, i32 -234127004
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i64*, align 8
  store i64** %21, i64*** %6, align 8
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %5, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %4, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %5, align 8
  store i64* %0, i64** %.0..0..0.6, align 8
  %.0..0..0.10 = load volatile i64**, i64*** %4, align 8
  store i64* %1, i64** %.0..0..0.10, align 8
  %.0..0..0.11 = load volatile i64**, i64*** %4, align 8
  %24 = load i64*, i64** %.0..0..0.11, align 8
  %25 = load i64, i64* %24, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %5, align 8
  %26 = load i64*, i64** %.0..0..0.7, align 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.5, align 4
  %30 = load i32, i32* @y.6, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -1229261135, i32 -234127004
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0.13 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.13, i32 -802028868, i32 -1023353131
  br label %.backedge

40:                                               ; preds = %16
  %.0..0..0.12 = load volatile i64**, i64*** %4, align 8
  %41 = load i64*, i64** %.0..0..0.12, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %6, align 8
  store i64* %41, i64** %.0..0..0.2, align 8
  br label %.backedge

42:                                               ; preds = %16
  %43 = load i32, i32* @x.5, align 4
  %44 = load i32, i32* @y.6, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 1467273855, i32 -1635231953
  br label %.backedge

52:                                               ; preds = %16
  %.0..0..0.8 = load volatile i64**, i64*** %5, align 8
  %53 = load i64*, i64** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %6, align 8
  store i64* %53, i64** %.0..0..0.3, align 8
  %54 = load i32, i32* @x.5, align 4
  %55 = load i32, i32* @y.6, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 1955564302, i32 -1635231953
  br label %.backedge

63:                                               ; preds = %16
  br label %.backedge

64:                                               ; preds = %16
  %.0..0..0.4 = load volatile i64**, i64*** %6, align 8
  %65 = load i64*, i64** %.0..0..0.4, align 8
  ret i64* %65

66:                                               ; preds = %16
  br label %.backedge

67:                                               ; preds = %16
  %.0..0..0.9 = load volatile i64**, i64*** %5, align 8
  %68 = load i64*, i64** %.0..0..0.9, align 8
  %.0..0..0.5 = load volatile i64**, i64*** %6, align 8
  store i64* %68, i64** %.0..0..0.5, align 8
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s924992108.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.7, align 4
  %4 = load i32, i32* @y.8, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -134515956, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -134515956, label %11
    i32 -1283685881, label %14
    i32 1848020187, label %24
    i32 990447672, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1283685881, i32 990447672
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1848020187, i32 990447672
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1283685881, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
