; ModuleID = 'build_ollvm/programs/p02363/s019869943.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s019869943.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@d = global [101 x [101 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s019869943.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline uwtable
define void @_Z5solvev() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  br label %11

11:                                               ; preds = %.backedge, %0
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ 0, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.0 = phi i32 [ 882128739, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 882128739, label %12
    i32 -642567130, label %15
    i32 -1727836004, label %25
    i32 -388152723, label %35
    i32 -600926538, label %36
    i32 -89323603, label %39
    i32 205490586, label %43
    i32 -1184314071, label %45
    i32 -1166924283, label %48
    i32 -616926665, label %49
    i32 -693428204, label %52
    i32 -2073141959, label %62
    i32 -101276501, label %74
    i32 998715915, label %76
    i32 -1842412733, label %87
    i32 -595211726, label %97
    i32 1288404599, label %108
    i32 1068517852, label %109
    i32 1062865092, label %119
    i32 -1989663478, label %129
    i32 1015868543, label %130
    i32 882995339, label %134
    i32 -812776061, label %135
    i32 1380278599, label %139
    i32 289310428, label %140
    i32 15345040, label %144
    i32 -1685671215, label %154
    i32 966798631, label %169
    i32 1955811255, label %171
    i32 -1061133998, label %181
    i32 -466630981, label %196
    i32 1204853678, label %198
    i32 -2025880970, label %210
    i32 -1027117965, label %211
    i32 422291065, label %213
    i32 1410279261, label %214
    i32 -1846111338, label %224
    i32 620007357, label %234
    i32 -2135603928, label %235
    i32 -1289146704, label %236
    i32 1974448533, label %246
    i32 -576265818, label %257
    i32 -693002955, label %258
    i32 -2073885910, label %259
    i32 -15104745, label %269
    i32 1314556925, label %281
    i32 -1040168844, label %283
    i32 1799610568, label %289
    i32 -1581096438, label %292
    i32 2139653712, label %293
    i32 1770479624, label %295
    i32 1752755434, label %296
    i32 -1628304889, label %300
    i32 2066176434, label %301
    i32 2093426168, label %305
    i32 1844795515, label %307
    i32 -771111265, label %309
    i32 -975673784, label %316
    i32 -601723531, label %318
    i32 -1609078598, label %324
    i32 2043063963, label %334
    i32 1329537760, label %344
    i32 246662897, label %345
    i32 -546975476, label %347
    i32 430882522, label %357
    i32 -1863770537, label %368
    i32 330009542, label %369
    i32 1772190439, label %371
    i32 -1526209825, label %372
    i32 638247723, label %373
    i32 2071843499, label %374
    i32 1659782652, label %375
    i32 1751349584, label %376
    i32 -901300979, label %377
    i32 -485189186, label %378
    i32 -230592489, label %380
    i32 733726202, label %382
    i32 2130574964, label %383
    i32 -1765586576, label %384
  ]

.backedge:                                        ; preds = %11, %384, %383, %382, %380, %378, %377, %376, %375, %374, %373, %372, %369, %368, %357, %347, %345, %344, %334, %324, %318, %316, %309, %307, %305, %301, %300, %296, %295, %293, %292, %289, %283, %281, %269, %259, %258, %257, %246, %236, %235, %234, %224, %214, %213, %211, %210, %198, %196, %181, %171, %169, %154, %144, %140, %139, %135, %134, %130, %129, %119, %109, %108, %97, %87, %76, %74, %62, %52, %49, %48, %45, %43, %39, %36, %35, %25, %15, %12
  %.070.be = phi i32 [ %.070, %11 ], [ %.070, %384 ], [ %.070, %383 ], [ %.070, %382 ], [ %.070, %380 ], [ %.070, %378 ], [ %.070, %377 ], [ %.070, %376 ], [ %.070, %375 ], [ %.070, %374 ], [ %.070, %373 ], [ 0, %372 ], [ %.070, %369 ], [ %.070, %368 ], [ %.070, %357 ], [ %.070, %347 ], [ %.070, %345 ], [ %.070, %344 ], [ %.070, %334 ], [ %.070, %324 ], [ %.070, %318 ], [ %.070, %316 ], [ %.070, %309 ], [ %.070, %307 ], [ %.070, %305 ], [ %.070, %301 ], [ %.070, %300 ], [ %.070, %296 ], [ %.070, %295 ], [ %.070, %293 ], [ %.070, %292 ], [ %.070, %289 ], [ %.070, %283 ], [ %.070, %281 ], [ %.070, %269 ], [ %.070, %259 ], [ %.070, %258 ], [ %.070, %257 ], [ %.070, %246 ], [ %.070, %236 ], [ %.070, %235 ], [ %.070, %234 ], [ %.070, %224 ], [ %.070, %214 ], [ %.070, %213 ], [ %.070, %211 ], [ %.070, %210 ], [ %.070, %198 ], [ %.070, %196 ], [ %.070, %181 ], [ %.070, %171 ], [ %.070, %169 ], [ %.070, %154 ], [ %.070, %144 ], [ %.070, %140 ], [ %.070, %139 ], [ %.070, %135 ], [ %.070, %134 ], [ %.070, %130 ], [ %.070, %129 ], [ %.070, %119 ], [ %.070, %109 ], [ %.070, %108 ], [ %.070, %97 ], [ %.070, %87 ], [ %.070, %76 ], [ %.070, %74 ], [ %.070, %62 ], [ %.070, %52 ], [ %.070, %49 ], [ %.070, %48 ], [ %.070, %45 ], [ %44, %43 ], [ %.070, %39 ], [ %.070, %36 ], [ %.070, %35 ], [ 0, %25 ], [ %.070, %15 ], [ %.070, %12 ]
  %.068.be = phi i32 [ %.068, %11 ], [ %.068, %384 ], [ %.068, %383 ], [ %.068, %382 ], [ %.068, %380 ], [ %.068, %378 ], [ %.068, %377 ], [ %.068, %376 ], [ %.068, %375 ], [ %.neg, %374 ], [ %.068, %373 ], [ %.068, %372 ], [ %.068, %369 ], [ %.068, %368 ], [ %.068, %357 ], [ %.068, %347 ], [ %.068, %345 ], [ %.068, %344 ], [ %.068, %334 ], [ %.068, %324 ], [ %.068, %318 ], [ %.068, %316 ], [ %.068, %309 ], [ %.068, %307 ], [ %.068, %305 ], [ %.068, %301 ], [ %.068, %300 ], [ %.068, %296 ], [ %.068, %295 ], [ %.068, %293 ], [ %.068, %292 ], [ %.068, %289 ], [ %.068, %283 ], [ %.068, %281 ], [ %.068, %269 ], [ %.068, %259 ], [ %.068, %258 ], [ %.068, %257 ], [ %.068, %246 ], [ %.068, %236 ], [ %.068, %235 ], [ %.068, %234 ], [ %.068, %224 ], [ %.068, %214 ], [ %.068, %213 ], [ %.068, %211 ], [ %.068, %210 ], [ %.068, %198 ], [ %.068, %196 ], [ %.068, %181 ], [ %.068, %171 ], [ %.068, %169 ], [ %.068, %154 ], [ %.068, %144 ], [ %.068, %140 ], [ %.068, %139 ], [ %.068, %135 ], [ %.068, %134 ], [ %.068, %130 ], [ %.068, %129 ], [ %.068, %119 ], [ %.068, %109 ], [ %.068, %108 ], [ %98, %97 ], [ %.068, %87 ], [ %.068, %76 ], [ %.068, %74 ], [ %.068, %62 ], [ %.068, %52 ], [ 0, %49 ], [ %.068, %48 ], [ %.068, %45 ], [ %.068, %43 ], [ %.068, %39 ], [ %.068, %36 ], [ %.068, %35 ], [ %.068, %25 ], [ %.068, %15 ], [ %.068, %12 ]
  %.066.be = phi i32 [ %.066, %11 ], [ %.066, %384 ], [ %.066, %383 ], [ %.066, %382 ], [ %381, %380 ], [ %.066, %378 ], [ %.066, %377 ], [ %.066, %376 ], [ 0, %375 ], [ %.066, %374 ], [ %.066, %373 ], [ %.066, %372 ], [ %.066, %369 ], [ %.066, %368 ], [ %.066, %357 ], [ %.066, %347 ], [ %.066, %345 ], [ %.066, %344 ], [ %.066, %334 ], [ %.066, %324 ], [ %.066, %318 ], [ %.066, %316 ], [ %.066, %309 ], [ %.066, %307 ], [ %.066, %305 ], [ %.066, %301 ], [ %.066, %300 ], [ %.066, %296 ], [ %.066, %295 ], [ %.066, %293 ], [ %.066, %292 ], [ %.066, %289 ], [ %.066, %283 ], [ %.066, %281 ], [ %.066, %269 ], [ %.066, %259 ], [ %.066, %258 ], [ %.066, %257 ], [ %247, %246 ], [ %.066, %236 ], [ %.066, %235 ], [ %.066, %234 ], [ %.066, %224 ], [ %.066, %214 ], [ %.066, %213 ], [ %.066, %211 ], [ %.066, %210 ], [ %.066, %198 ], [ %.066, %196 ], [ %.066, %181 ], [ %.066, %171 ], [ %.066, %169 ], [ %.066, %154 ], [ %.066, %144 ], [ %.066, %140 ], [ %.066, %139 ], [ %.066, %135 ], [ %.066, %134 ], [ %.066, %130 ], [ %.066, %129 ], [ 0, %119 ], [ %.066, %109 ], [ %.066, %108 ], [ %.066, %97 ], [ %.066, %87 ], [ %.066, %76 ], [ %.066, %74 ], [ %.066, %62 ], [ %.066, %52 ], [ %.066, %49 ], [ %.066, %48 ], [ %.066, %45 ], [ %.066, %43 ], [ %.066, %39 ], [ %.066, %36 ], [ %.066, %35 ], [ %.066, %25 ], [ %.066, %15 ], [ %.066, %12 ]
  %.064.be = phi i32 [ %.064, %11 ], [ %.064, %384 ], [ %.064, %383 ], [ %.064, %382 ], [ %.064, %380 ], [ %379, %378 ], [ %.064, %377 ], [ %.064, %376 ], [ %.064, %375 ], [ %.064, %374 ], [ %.064, %373 ], [ %.064, %372 ], [ %.064, %369 ], [ %.064, %368 ], [ %.064, %357 ], [ %.064, %347 ], [ %.064, %345 ], [ %.064, %344 ], [ %.064, %334 ], [ %.064, %324 ], [ %.064, %318 ], [ %.064, %316 ], [ %.064, %309 ], [ %.064, %307 ], [ %.064, %305 ], [ %.064, %301 ], [ %.064, %300 ], [ %.064, %296 ], [ %.064, %295 ], [ %.064, %293 ], [ %.064, %292 ], [ %.064, %289 ], [ %.064, %283 ], [ %.064, %281 ], [ %.064, %269 ], [ %.064, %259 ], [ %.064, %258 ], [ %.064, %257 ], [ %.064, %246 ], [ %.064, %236 ], [ %.064, %235 ], [ %.064, %234 ], [ %.neg72, %224 ], [ %.064, %214 ], [ %.064, %213 ], [ %.064, %211 ], [ %.064, %210 ], [ %.064, %198 ], [ %.064, %196 ], [ %.064, %181 ], [ %.064, %171 ], [ %.064, %169 ], [ %.064, %154 ], [ %.064, %144 ], [ %.064, %140 ], [ %.064, %139 ], [ %.064, %135 ], [ 0, %134 ], [ %.064, %130 ], [ %.064, %129 ], [ %.064, %119 ], [ %.064, %109 ], [ %.064, %108 ], [ %.064, %97 ], [ %.064, %87 ], [ %.064, %76 ], [ %.064, %74 ], [ %.064, %62 ], [ %.064, %52 ], [ %.064, %49 ], [ %.064, %48 ], [ %.064, %45 ], [ %.064, %43 ], [ %.064, %39 ], [ %.064, %36 ], [ %.064, %35 ], [ %.064, %25 ], [ %.064, %15 ], [ %.064, %12 ]
  %.062.be = phi i32 [ %.062, %11 ], [ %.062, %384 ], [ %.062, %383 ], [ %.062, %382 ], [ %.062, %380 ], [ %.062, %378 ], [ %.062, %377 ], [ %.062, %376 ], [ %.062, %375 ], [ %.062, %374 ], [ %.062, %373 ], [ %.062, %372 ], [ %.062, %369 ], [ %.062, %368 ], [ %.062, %357 ], [ %.062, %347 ], [ %.062, %345 ], [ %.062, %344 ], [ %.062, %334 ], [ %.062, %324 ], [ %.062, %318 ], [ %.062, %316 ], [ %.062, %309 ], [ %.062, %307 ], [ %.062, %305 ], [ %.062, %301 ], [ %.062, %300 ], [ %.062, %296 ], [ %.062, %295 ], [ %.062, %293 ], [ %.062, %292 ], [ %.062, %289 ], [ %.062, %283 ], [ %.062, %281 ], [ %.062, %269 ], [ %.062, %259 ], [ %.062, %258 ], [ %.062, %257 ], [ %.062, %246 ], [ %.062, %236 ], [ %.062, %235 ], [ %.062, %234 ], [ %.062, %224 ], [ %.062, %214 ], [ %.062, %213 ], [ %212, %211 ], [ %.062, %210 ], [ %.062, %198 ], [ %.062, %196 ], [ %.062, %181 ], [ %.062, %171 ], [ %.062, %169 ], [ %.062, %154 ], [ %.062, %144 ], [ %.062, %140 ], [ 0, %139 ], [ %.062, %135 ], [ %.062, %134 ], [ %.062, %130 ], [ %.062, %129 ], [ %.062, %119 ], [ %.062, %109 ], [ %.062, %108 ], [ %.062, %97 ], [ %.062, %87 ], [ %.062, %76 ], [ %.062, %74 ], [ %.062, %62 ], [ %.062, %52 ], [ %.062, %49 ], [ %.062, %48 ], [ %.062, %45 ], [ %.062, %43 ], [ %.062, %39 ], [ %.062, %36 ], [ %.062, %35 ], [ %.062, %25 ], [ %.062, %15 ], [ %.062, %12 ]
  %.060.be = phi i32 [ %.060, %11 ], [ %.060, %384 ], [ %.060, %383 ], [ %.060, %382 ], [ %.060, %380 ], [ %.060, %378 ], [ %.060, %377 ], [ %.060, %376 ], [ %.060, %375 ], [ %.060, %374 ], [ %.060, %373 ], [ %.060, %372 ], [ %.060, %369 ], [ %.060, %368 ], [ %.060, %357 ], [ %.060, %347 ], [ %.060, %345 ], [ %.060, %344 ], [ %.060, %334 ], [ %.060, %324 ], [ %.060, %318 ], [ %.060, %316 ], [ %.060, %309 ], [ %.060, %307 ], [ %.060, %305 ], [ %.060, %301 ], [ %.060, %300 ], [ %.060, %296 ], [ %.060, %295 ], [ %.060, %293 ], [ %.060, %292 ], [ %.060, %289 ], [ %.060, %283 ], [ %.060, %281 ], [ %.060, %269 ], [ %.060, %259 ], [ %.060, %258 ], [ %.060, %257 ], [ %.060, %246 ], [ %.060, %236 ], [ %.060, %235 ], [ %.060, %234 ], [ %.060, %224 ], [ %.060, %214 ], [ %.060, %213 ], [ %.060, %211 ], [ %.060, %210 ], [ %.060, %198 ], [ %.060, %196 ], [ %.060, %181 ], [ %.060, %171 ], [ %.060, %169 ], [ %.060, %154 ], [ %.060, %144 ], [ %.060, %140 ], [ %.060, %139 ], [ %.060, %135 ], [ %.060, %134 ], [ %.060, %130 ], [ %.060, %129 ], [ %.060, %119 ], [ %.060, %109 ], [ %.060, %108 ], [ %.060, %97 ], [ %.060, %87 ], [ %.060, %76 ], [ %.060, %74 ], [ %.060, %62 ], [ %.060, %52 ], [ %.060, %49 ], [ %.neg73, %48 ], [ %.060, %45 ], [ %.060, %43 ], [ %.060, %39 ], [ %.060, %36 ], [ %.060, %35 ], [ %.060, %25 ], [ %.060, %15 ], [ %.060, %12 ]
  %.058.be = phi i32 [ %.058, %11 ], [ %.058, %384 ], [ %.058, %383 ], [ %.058, %382 ], [ %.058, %380 ], [ %.058, %378 ], [ %.058, %377 ], [ %.058, %376 ], [ %.058, %375 ], [ %.058, %374 ], [ %.058, %373 ], [ %.058, %372 ], [ %.058, %369 ], [ %.058, %368 ], [ %.058, %357 ], [ %.058, %347 ], [ %.058, %345 ], [ %.058, %344 ], [ %.058, %334 ], [ %.058, %324 ], [ %.058, %318 ], [ %.058, %316 ], [ %.058, %309 ], [ %.058, %307 ], [ %.058, %305 ], [ %.058, %301 ], [ %.058, %300 ], [ %.058, %296 ], [ %.058, %295 ], [ %294, %293 ], [ %.058, %292 ], [ %.058, %289 ], [ %.058, %283 ], [ %.058, %281 ], [ %.058, %269 ], [ %.058, %259 ], [ 0, %258 ], [ %.058, %257 ], [ %.058, %246 ], [ %.058, %236 ], [ %.058, %235 ], [ %.058, %234 ], [ %.058, %224 ], [ %.058, %214 ], [ %.058, %213 ], [ %.058, %211 ], [ %.058, %210 ], [ %.058, %198 ], [ %.058, %196 ], [ %.058, %181 ], [ %.058, %171 ], [ %.058, %169 ], [ %.058, %154 ], [ %.058, %144 ], [ %.058, %140 ], [ %.058, %139 ], [ %.058, %135 ], [ %.058, %134 ], [ %.058, %130 ], [ %.058, %129 ], [ %.058, %119 ], [ %.058, %109 ], [ %.058, %108 ], [ %.058, %97 ], [ %.058, %87 ], [ %.058, %76 ], [ %.058, %74 ], [ %.058, %62 ], [ %.058, %52 ], [ %.058, %49 ], [ %.058, %48 ], [ %.058, %45 ], [ %.058, %43 ], [ %.058, %39 ], [ %.058, %36 ], [ %.058, %35 ], [ %.058, %25 ], [ %.058, %15 ], [ %.058, %12 ]
  %.056.be = phi i32 [ %.056, %11 ], [ %.056, %384 ], [ %.056, %383 ], [ %.056, %382 ], [ %.056, %380 ], [ %.056, %378 ], [ %.056, %377 ], [ %.056, %376 ], [ %.056, %375 ], [ %.056, %374 ], [ %.056, %373 ], [ %.056, %372 ], [ %370, %369 ], [ %.056, %368 ], [ %.056, %357 ], [ %.056, %347 ], [ %.056, %345 ], [ %.056, %344 ], [ %.056, %334 ], [ %.056, %324 ], [ %.056, %318 ], [ %.056, %316 ], [ %.056, %309 ], [ %.056, %307 ], [ %.056, %305 ], [ %.056, %301 ], [ %.056, %300 ], [ %.056, %296 ], [ 0, %295 ], [ %.056, %293 ], [ %.056, %292 ], [ %.056, %289 ], [ %.056, %283 ], [ %.056, %281 ], [ %.056, %269 ], [ %.056, %259 ], [ %.056, %258 ], [ %.056, %257 ], [ %.056, %246 ], [ %.056, %236 ], [ %.056, %235 ], [ %.056, %234 ], [ %.056, %224 ], [ %.056, %214 ], [ %.056, %213 ], [ %.056, %211 ], [ %.056, %210 ], [ %.056, %198 ], [ %.056, %196 ], [ %.056, %181 ], [ %.056, %171 ], [ %.056, %169 ], [ %.056, %154 ], [ %.056, %144 ], [ %.056, %140 ], [ %.056, %139 ], [ %.056, %135 ], [ %.056, %134 ], [ %.056, %130 ], [ %.056, %129 ], [ %.056, %119 ], [ %.056, %109 ], [ %.056, %108 ], [ %.056, %97 ], [ %.056, %87 ], [ %.056, %76 ], [ %.056, %74 ], [ %.056, %62 ], [ %.056, %52 ], [ %.056, %49 ], [ %.056, %48 ], [ %.056, %45 ], [ %.056, %43 ], [ %.056, %39 ], [ %.056, %36 ], [ %.056, %35 ], [ %.056, %25 ], [ %.056, %15 ], [ %.056, %12 ]
  %.054.be = phi i32 [ %.054, %11 ], [ %.054, %384 ], [ %.054, %383 ], [ %.054, %382 ], [ %.054, %380 ], [ %.054, %378 ], [ %.054, %377 ], [ %.054, %376 ], [ %.054, %375 ], [ %.054, %374 ], [ %.054, %373 ], [ %.054, %372 ], [ %.054, %369 ], [ %.054, %368 ], [ %.054, %357 ], [ %.054, %347 ], [ %346, %345 ], [ %.054, %344 ], [ %.054, %334 ], [ %.054, %324 ], [ %.054, %318 ], [ %.054, %316 ], [ %.054, %309 ], [ %.054, %307 ], [ %.054, %305 ], [ %.054, %301 ], [ 0, %300 ], [ %.054, %296 ], [ %.054, %295 ], [ %.054, %293 ], [ %.054, %292 ], [ %.054, %289 ], [ %.054, %283 ], [ %.054, %281 ], [ %.054, %269 ], [ %.054, %259 ], [ %.054, %258 ], [ %.054, %257 ], [ %.054, %246 ], [ %.054, %236 ], [ %.054, %235 ], [ %.054, %234 ], [ %.054, %224 ], [ %.054, %214 ], [ %.054, %213 ], [ %.054, %211 ], [ %.054, %210 ], [ %.054, %198 ], [ %.054, %196 ], [ %.054, %181 ], [ %.054, %171 ], [ %.054, %169 ], [ %.054, %154 ], [ %.054, %144 ], [ %.054, %140 ], [ %.054, %139 ], [ %.054, %135 ], [ %.054, %134 ], [ %.054, %130 ], [ %.054, %129 ], [ %.054, %119 ], [ %.054, %109 ], [ %.054, %108 ], [ %.054, %97 ], [ %.054, %87 ], [ %.054, %76 ], [ %.054, %74 ], [ %.054, %62 ], [ %.054, %52 ], [ %.054, %49 ], [ %.054, %48 ], [ %.054, %45 ], [ %.054, %43 ], [ %.054, %39 ], [ %.054, %36 ], [ %.054, %35 ], [ %.054, %25 ], [ %.054, %15 ], [ %.054, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ 430882522, %384 ], [ 2043063963, %383 ], [ -15104745, %382 ], [ 1974448533, %380 ], [ -1846111338, %378 ], [ -1061133998, %377 ], [ -1685671215, %376 ], [ 1062865092, %375 ], [ -595211726, %374 ], [ -2073141959, %373 ], [ -1727836004, %372 ], [ 1752755434, %369 ], [ 330009542, %368 ], [ %367, %357 ], [ %356, %347 ], [ 2066176434, %345 ], [ 246662897, %344 ], [ %343, %334 ], [ %333, %324 ], [ -1609078598, %318 ], [ -1609078598, %316 ], [ %315, %309 ], [ -771111265, %307 ], [ %306, %305 ], [ %304, %301 ], [ 2066176434, %300 ], [ %299, %296 ], [ 1752755434, %295 ], [ -2073885910, %293 ], [ 2139653712, %292 ], [ 1772190439, %289 ], [ %288, %283 ], [ %282, %281 ], [ %280, %269 ], [ %268, %259 ], [ -2073885910, %258 ], [ 1015868543, %257 ], [ %256, %246 ], [ %245, %236 ], [ -1289146704, %235 ], [ -812776061, %234 ], [ %233, %224 ], [ %223, %214 ], [ 1410279261, %213 ], [ 289310428, %211 ], [ -1027117965, %210 ], [ -2025880970, %198 ], [ %197, %196 ], [ %195, %181 ], [ %180, %171 ], [ %170, %169 ], [ %168, %154 ], [ %153, %144 ], [ %143, %140 ], [ 289310428, %139 ], [ %138, %135 ], [ -812776061, %134 ], [ %133, %130 ], [ 1015868543, %129 ], [ %128, %119 ], [ %118, %109 ], [ -693428204, %108 ], [ %107, %97 ], [ %96, %87 ], [ -1842412733, %76 ], [ %75, %74 ], [ %73, %62 ], [ %61, %52 ], [ -693428204, %49 ], [ 882128739, %48 ], [ -1166924283, %45 ], [ -600926538, %43 ], [ 205490586, %39 ], [ %38, %36 ], [ -600926538, %35 ], [ %34, %25 ], [ %24, %15 ], [ %14, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = icmp slt i32 %.060, 101
  %14 = select i1 %13, i32 -642567130, i32 -616926665
  br label %.backedge

15:                                               ; preds = %11
  %16 = load i32, i32* @x.3, align 4
  %17 = load i32, i32* @y.4, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1727836004, i32 -1526209825
  br label %.backedge

25:                                               ; preds = %11
  %26 = load i32, i32* @x.3, align 4
  %27 = load i32, i32* @y.4, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 -388152723, i32 -1526209825
  br label %.backedge

35:                                               ; preds = %11
  br label %.backedge

36:                                               ; preds = %11
  %37 = icmp slt i32 %.070, 101
  %38 = select i1 %37, i32 -89323603, i32 -1184314071
  br label %.backedge

39:                                               ; preds = %11
  %40 = sext i32 %.060 to i64
  %41 = sext i32 %.070 to i64
  %42 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %40, i64 %41
  store i64 1000000000000000000, i64* %42, align 8
  br label %.backedge

43:                                               ; preds = %11
  %44 = add i32 %.070, 1
  br label %.backedge

45:                                               ; preds = %11
  %46 = sext i32 %.060 to i64
  %47 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %46, i64 %46
  store i64 0, i64* %47, align 8
  br label %.backedge

48:                                               ; preds = %11
  %.neg73 = add i32 %.060, 1
  br label %.backedge

49:                                               ; preds = %11
  %50 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %51 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %50, i32* nonnull dereferenceable(4) %6)
  br label %.backedge

52:                                               ; preds = %11
  %53 = load i32, i32* @x.3, align 4
  %54 = load i32, i32* @y.4, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -2073141959, i32 638247723
  br label %.backedge

62:                                               ; preds = %11
  %63 = load i32, i32* %6, align 4
  %64 = icmp slt i32 %.068, %63
  store i1 %64, i1* %4, align 1
  %65 = load i32, i32* @x.3, align 4
  %66 = load i32, i32* @y.4, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 -101276501, i32 638247723
  br label %.backedge

74:                                               ; preds = %11
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %75 = select i1 %.0..0..0., i32 998715915, i32 1068517852
  br label %.backedge

76:                                               ; preds = %11
  %77 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %78 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %77, i32* nonnull dereferenceable(4) %8)
  %79 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %78, i32* nonnull dereferenceable(4) %9)
  %80 = load i32, i32* %9, align 4
  %81 = sext i32 %80 to i64
  %82 = load i32, i32* %7, align 4
  %83 = sext i32 %82 to i64
  %84 = load i32, i32* %8, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %83, i64 %85
  store i64 %81, i64* %86, align 8
  br label %.backedge

87:                                               ; preds = %11
  %88 = load i32, i32* @x.3, align 4
  %89 = load i32, i32* @y.4, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -595211726, i32 2071843499
  br label %.backedge

97:                                               ; preds = %11
  %98 = add i32 %.068, 1
  %99 = load i32, i32* @x.3, align 4
  %100 = load i32, i32* @y.4, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 1288404599, i32 2071843499
  br label %.backedge

108:                                              ; preds = %11
  br label %.backedge

109:                                              ; preds = %11
  %110 = load i32, i32* @x.3, align 4
  %111 = load i32, i32* @y.4, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 1062865092, i32 1659782652
  br label %.backedge

119:                                              ; preds = %11
  %120 = load i32, i32* @x.3, align 4
  %121 = load i32, i32* @y.4, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 -1989663478, i32 1659782652
  br label %.backedge

129:                                              ; preds = %11
  br label %.backedge

130:                                              ; preds = %11
  %131 = load i32, i32* %5, align 4
  %132 = icmp slt i32 %.066, %131
  %133 = select i1 %132, i32 882995339, i32 -693002955
  br label %.backedge

134:                                              ; preds = %11
  br label %.backedge

135:                                              ; preds = %11
  %136 = load i32, i32* %5, align 4
  %137 = icmp slt i32 %.064, %136
  %138 = select i1 %137, i32 1380278599, i32 -2135603928
  br label %.backedge

139:                                              ; preds = %11
  br label %.backedge

140:                                              ; preds = %11
  %141 = load i32, i32* %5, align 4
  %142 = icmp slt i32 %.062, %141
  %143 = select i1 %142, i32 15345040, i32 422291065
  br label %.backedge

144:                                              ; preds = %11
  %145 = load i32, i32* @x.3, align 4
  %146 = load i32, i32* @y.4, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 -1685671215, i32 1751349584
  br label %.backedge

154:                                              ; preds = %11
  %155 = sext i32 %.064 to i64
  %156 = sext i32 %.066 to i64
  %157 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %155, i64 %156
  %158 = load i64, i64* %157, align 8
  %159 = icmp ne i64 %158, 1000000000000000000
  store i1 %159, i1* %3, align 1
  %160 = load i32, i32* @x.3, align 4
  %161 = load i32, i32* @y.4, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 966798631, i32 1751349584
  br label %.backedge

169:                                              ; preds = %11
  %.0..0..0.51 = load volatile i1, i1* %3, align 1
  %170 = select i1 %.0..0..0.51, i32 1955811255, i32 -2025880970
  br label %.backedge

171:                                              ; preds = %11
  %172 = load i32, i32* @x.3, align 4
  %173 = load i32, i32* @y.4, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 -1061133998, i32 -901300979
  br label %.backedge

181:                                              ; preds = %11
  %182 = sext i32 %.066 to i64
  %183 = sext i32 %.062 to i64
  %184 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %182, i64 %183
  %185 = load i64, i64* %184, align 8
  %186 = icmp ne i64 %185, 1000000000000000000
  store i1 %186, i1* %2, align 1
  %187 = load i32, i32* @x.3, align 4
  %188 = load i32, i32* @y.4, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 -466630981, i32 -901300979
  br label %.backedge

196:                                              ; preds = %11
  %.0..0..0.52 = load volatile i1, i1* %2, align 1
  %197 = select i1 %.0..0..0.52, i32 1204853678, i32 -2025880970
  br label %.backedge

198:                                              ; preds = %11
  %199 = sext i32 %.064 to i64
  %200 = sext i32 %.062 to i64
  %201 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %199, i64 %200
  %202 = sext i32 %.066 to i64
  %203 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %199, i64 %202
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %202, i64 %200
  %206 = load i64, i64* %205, align 8
  %207 = add i64 %206, %204
  store i64 %207, i64* %10, align 8
  %208 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %201, i64* nonnull dereferenceable(8) %10)
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %201, align 8
  br label %.backedge

210:                                              ; preds = %11
  br label %.backedge

211:                                              ; preds = %11
  %212 = add i32 %.062, 1
  br label %.backedge

213:                                              ; preds = %11
  br label %.backedge

214:                                              ; preds = %11
  %215 = load i32, i32* @x.3, align 4
  %216 = load i32, i32* @y.4, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 -1846111338, i32 -485189186
  br label %.backedge

224:                                              ; preds = %11
  %.neg72 = add i32 %.064, 1
  %225 = load i32, i32* @x.3, align 4
  %226 = load i32, i32* @y.4, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 620007357, i32 -485189186
  br label %.backedge

234:                                              ; preds = %11
  br label %.backedge

235:                                              ; preds = %11
  br label %.backedge

236:                                              ; preds = %11
  %237 = load i32, i32* @x.3, align 4
  %238 = load i32, i32* @y.4, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 1974448533, i32 -230592489
  br label %.backedge

246:                                              ; preds = %11
  %247 = add i32 %.066, 1
  %248 = load i32, i32* @x.3, align 4
  %249 = load i32, i32* @y.4, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 -576265818, i32 -230592489
  br label %.backedge

257:                                              ; preds = %11
  br label %.backedge

258:                                              ; preds = %11
  br label %.backedge

259:                                              ; preds = %11
  %260 = load i32, i32* @x.3, align 4
  %261 = load i32, i32* @y.4, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 -15104745, i32 733726202
  br label %.backedge

269:                                              ; preds = %11
  %270 = load i32, i32* %5, align 4
  %271 = icmp slt i32 %.058, %270
  store i1 %271, i1* %1, align 1
  %272 = load i32, i32* @x.3, align 4
  %273 = load i32, i32* @y.4, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 1314556925, i32 733726202
  br label %.backedge

281:                                              ; preds = %11
  %.0..0..0.53 = load volatile i1, i1* %1, align 1
  %282 = select i1 %.0..0..0.53, i32 -1040168844, i32 1770479624
  br label %.backedge

283:                                              ; preds = %11
  %284 = sext i32 %.058 to i64
  %285 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %284, i64 %284
  %286 = load i64, i64* %285, align 8
  %287 = icmp slt i64 %286, 0
  %288 = select i1 %287, i32 1799610568, i32 -1581096438
  br label %.backedge

289:                                              ; preds = %11
  %290 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %291 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %290, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

292:                                              ; preds = %11
  br label %.backedge

293:                                              ; preds = %11
  %294 = add i32 %.058, 1
  br label %.backedge

295:                                              ; preds = %11
  br label %.backedge

296:                                              ; preds = %11
  %297 = load i32, i32* %5, align 4
  %298 = icmp slt i32 %.056, %297
  %299 = select i1 %298, i32 -1628304889, i32 1772190439
  br label %.backedge

300:                                              ; preds = %11
  br label %.backedge

301:                                              ; preds = %11
  %302 = load i32, i32* %5, align 4
  %303 = icmp slt i32 %.054, %302
  %304 = select i1 %303, i32 2093426168, i32 -546975476
  br label %.backedge

305:                                              ; preds = %11
  %.not = icmp eq i32 %.054, 0
  %306 = select i1 %.not, i32 -771111265, i32 1844795515
  br label %.backedge

307:                                              ; preds = %11
  %308 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

309:                                              ; preds = %11
  %310 = sext i32 %.056 to i64
  %311 = sext i32 %.054 to i64
  %312 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %310, i64 %311
  %313 = load i64, i64* %312, align 8
  %314 = icmp eq i64 %313, 1000000000000000000
  %315 = select i1 %314, i32 -975673784, i32 -601723531
  br label %.backedge

316:                                              ; preds = %11
  %317 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

318:                                              ; preds = %11
  %319 = sext i32 %.056 to i64
  %320 = sext i32 %.054 to i64
  %321 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @d, i64 0, i64 %319, i64 %320
  %322 = load i64, i64* %321, align 8
  %323 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %322)
  br label %.backedge

324:                                              ; preds = %11
  %325 = load i32, i32* @x.3, align 4
  %326 = load i32, i32* @y.4, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 2043063963, i32 2130574964
  br label %.backedge

334:                                              ; preds = %11
  %335 = load i32, i32* @x.3, align 4
  %336 = load i32, i32* @y.4, align 4
  %337 = add i32 %335, -1
  %338 = mul i32 %337, %335
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %341, %340
  %343 = select i1 %342, i32 1329537760, i32 2130574964
  br label %.backedge

344:                                              ; preds = %11
  br label %.backedge

345:                                              ; preds = %11
  %346 = add i32 %.054, 1
  br label %.backedge

347:                                              ; preds = %11
  %348 = load i32, i32* @x.3, align 4
  %349 = load i32, i32* @y.4, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 430882522, i32 -1765586576
  br label %.backedge

357:                                              ; preds = %11
  %358 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %359 = load i32, i32* @x.3, align 4
  %360 = load i32, i32* @y.4, align 4
  %361 = add i32 %359, -1
  %362 = mul i32 %361, %359
  %363 = and i32 %362, 1
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %365, %364
  %367 = select i1 %366, i32 -1863770537, i32 -1765586576
  br label %.backedge

368:                                              ; preds = %11
  br label %.backedge

369:                                              ; preds = %11
  %370 = add i32 %.056, 1
  br label %.backedge

371:                                              ; preds = %11
  ret void

372:                                              ; preds = %11
  br label %.backedge

373:                                              ; preds = %11
  br label %.backedge

374:                                              ; preds = %11
  %.neg = add i32 %.068, 1
  br label %.backedge

375:                                              ; preds = %11
  br label %.backedge

376:                                              ; preds = %11
  br label %.backedge

377:                                              ; preds = %11
  br label %.backedge

378:                                              ; preds = %11
  %379 = add i32 %.064, 1
  br label %.backedge

380:                                              ; preds = %11
  %381 = add i32 %.066, 1
  br label %.backedge

382:                                              ; preds = %11
  br label %.backedge

383:                                              ; preds = %11
  br label %.backedge

384:                                              ; preds = %11
  %385 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i64**, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.5, align 4
  %11 = load i32, i32* @y.6, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ -545454062, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -545454062, label %18
    i32 1165043736, label %21
    i32 -1237967608, label %39
    i32 1419293190, label %41
    i32 731841896, label %43
    i32 1551679464, label %45
    i32 -1005827624, label %55
    i32 1751987734, label %66
    i32 -117362390, label %67
    i32 -1139879911, label %68
  ]

.backedge:                                        ; preds = %17, %68, %67, %55, %45, %43, %41, %39, %21, %18
  %.0.be = phi i32 [ %.0, %17 ], [ -1005827624, %68 ], [ 1165043736, %67 ], [ %65, %55 ], [ %54, %45 ], [ 1551679464, %43 ], [ 1551679464, %41 ], [ %40, %39 ], [ %38, %21 ], [ %20, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %.0..0..0.1 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0., %.0..0..0.1
  %20 = select i1 %19, i32 1165043736, i32 -117362390
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %7, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %6, align 8
  %24 = alloca i64*, align 8
  store i64** %24, i64*** %5, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %6, align 8
  store i64* %0, i64** %.0..0..0.6, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %5, align 8
  store i64* %1, i64** %.0..0..0.9, align 8
  %.0..0..0.10 = load volatile i64**, i64*** %5, align 8
  %25 = load i64*, i64** %.0..0..0.10, align 8
  %26 = load i64, i64* %25, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %6, align 8
  %27 = load i64*, i64** %.0..0..0.7, align 8
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %26, %28
  store i1 %29, i1* %4, align 1
  %30 = load i32, i32* @x.5, align 4
  %31 = load i32, i32* @y.6, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -1237967608, i32 -117362390
  br label %.backedge

39:                                               ; preds = %17
  %.0..0..0.12 = load volatile i1, i1* %4, align 1
  %40 = select i1 %.0..0..0.12, i32 1419293190, i32 731841896
  br label %.backedge

41:                                               ; preds = %17
  %.0..0..0.11 = load volatile i64**, i64*** %5, align 8
  %42 = load i64*, i64** %.0..0..0.11, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %7, align 8
  store i64* %42, i64** %.0..0..0.2, align 8
  br label %.backedge

43:                                               ; preds = %17
  %.0..0..0.8 = load volatile i64**, i64*** %6, align 8
  %44 = load i64*, i64** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %7, align 8
  store i64* %44, i64** %.0..0..0.3, align 8
  br label %.backedge

45:                                               ; preds = %17
  %46 = load i32, i32* @x.5, align 4
  %47 = load i32, i32* @y.6, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -1005827624, i32 -1139879911
  br label %.backedge

55:                                               ; preds = %17
  %.0..0..0.4 = load volatile i64**, i64*** %7, align 8
  %56 = load i64*, i64** %.0..0..0.4, align 8
  store i64* %56, i64** %3, align 8
  %57 = load i32, i32* @x.5, align 4
  %58 = load i32, i32* @y.6, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 1751987734, i32 -1139879911
  br label %.backedge

66:                                               ; preds = %17
  %.0..0..0.13 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.13

67:                                               ; preds = %17
  br label %.backedge

68:                                               ; preds = %17
  %.0..0..0.5 = load volatile i64**, i64*** %7, align 8
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  tail call void @_Z5solvev()
  ret i32 0
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s019869943.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
