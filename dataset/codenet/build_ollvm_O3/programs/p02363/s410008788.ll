; ModuleID = 'build_ollvm/programs/p02363/s410008788.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s410008788.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s410008788.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1546024904, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1546024904, label %11
    i32 -1357763584, label %14
    i32 -673309742, label %25
    i32 659071737, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1357763584, i32 659071737
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -673309742, i32 659071737
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1357763584, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca [101 x [101 x i64]], align 16
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %5)
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %12, i64* nonnull dereferenceable(8) %6)
  br label %14

14:                                               ; preds = %.backedge, %0
  %.073 = phi i64 [ 0, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i64 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i64 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i64 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i64 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i64 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i64 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i64 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i64 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i64 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i64 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.0 = phi i32 [ 493862243, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 493862243, label %15
    i32 -861083330, label %18
    i32 -657218088, label %19
    i32 233162629, label %22
    i32 -1211906750, label %24
    i32 1733982577, label %34
    i32 -1142443732, label %44
    i32 -1941226331, label %45
    i32 -82455889, label %46
    i32 -2016059714, label %48
    i32 -703024708, label %58
    i32 84983050, label %68
    i32 745897585, label %69
    i32 1204266630, label %79
    i32 -290432026, label %90
    i32 -563358798, label %92
    i32 -1512688451, label %94
    i32 -1500835828, label %96
    i32 675907902, label %106
    i32 -1844474263, label %116
    i32 1001742023, label %117
    i32 2077445466, label %121
    i32 -1365493567, label %131
    i32 198503578, label %148
    i32 1857493612, label %149
    i32 844242557, label %151
    i32 1890597671, label %152
    i32 687514449, label %156
    i32 -574852984, label %157
    i32 972370781, label %161
    i32 1501644330, label %162
    i32 -1539212114, label %172
    i32 1196706999, label %184
    i32 1626169542, label %186
    i32 -1285939425, label %195
    i32 216262343, label %205
    i32 1445716715, label %215
    i32 -1155697615, label %216
    i32 -432477416, label %217
    i32 -118876953, label %219
    i32 1971164078, label %229
    i32 -1320610593, label %239
    i32 1440857541, label %240
    i32 -1526481096, label %250
    i32 -769821703, label %261
    i32 -972359314, label %262
    i32 1054041256, label %263
    i32 -1037555020, label %267
    i32 859491806, label %277
    i32 1245583789, label %290
    i32 1409757191, label %292
    i32 -98504461, label %302
    i32 -534000134, label %314
    i32 -990406930, label %315
    i32 2048361909, label %316
    i32 -2117198204, label %326
    i32 -89148541, label %336
    i32 -995607241, label %337
    i32 2109321272, label %338
    i32 -199888591, label %342
    i32 -623348581, label %343
    i32 -2131643140, label %347
    i32 -749752424, label %349
    i32 -1103381865, label %351
    i32 -1053624696, label %356
    i32 1683536434, label %358
    i32 983113878, label %360
    i32 773950655, label %361
    i32 -160350617, label %363
    i32 1930247611, label %365
    i32 -1999606699, label %367
    i32 744953248, label %377
    i32 1468389436, label %387
    i32 -1289466026, label %388
    i32 -1723049559, label %390
    i32 -1563645590, label %391
    i32 298739704, label %392
    i32 -2119446396, label %393
    i32 -735880361, label %401
    i32 -841505694, label %402
    i32 1604459670, label %404
    i32 812480662, label %405
    i32 1448034547, label %407
    i32 986725316, label %408
    i32 1648372436, label %411
    i32 973257868, label %413
  ]

.backedge:                                        ; preds = %14, %413, %411, %408, %407, %405, %404, %402, %401, %393, %392, %391, %390, %388, %377, %367, %365, %363, %361, %360, %358, %356, %351, %349, %347, %343, %342, %338, %337, %336, %326, %316, %315, %314, %302, %292, %290, %277, %267, %263, %262, %261, %250, %240, %239, %229, %219, %217, %216, %215, %205, %195, %186, %184, %172, %162, %161, %157, %156, %152, %151, %149, %148, %131, %121, %117, %116, %106, %96, %94, %92, %90, %79, %69, %68, %58, %48, %46, %45, %44, %34, %24, %22, %19, %18, %15
  %.073.be = phi i64 [ %.073, %14 ], [ %.073, %413 ], [ %.073, %411 ], [ %.073, %408 ], [ %.073, %407 ], [ %.073, %405 ], [ %.073, %404 ], [ %.073, %402 ], [ %.073, %401 ], [ %.073, %393 ], [ %.073, %392 ], [ %.073, %391 ], [ %.073, %390 ], [ %.073, %388 ], [ %.073, %377 ], [ %.073, %367 ], [ %.073, %365 ], [ %.073, %363 ], [ %.073, %361 ], [ %.073, %360 ], [ %.073, %358 ], [ %.073, %356 ], [ %.073, %351 ], [ %.073, %349 ], [ %.073, %347 ], [ %.073, %343 ], [ %.073, %342 ], [ %.073, %338 ], [ %.073, %337 ], [ %.073, %336 ], [ %.073, %326 ], [ %.073, %316 ], [ %.073, %315 ], [ %.073, %314 ], [ %.073, %302 ], [ %.073, %292 ], [ %.073, %290 ], [ %.073, %277 ], [ %.073, %267 ], [ %.073, %263 ], [ %.073, %262 ], [ %.073, %261 ], [ %.073, %250 ], [ %.073, %240 ], [ %.073, %239 ], [ %.073, %229 ], [ %.073, %219 ], [ %.073, %217 ], [ %.073, %216 ], [ %.073, %215 ], [ %.073, %205 ], [ %.073, %195 ], [ %.073, %186 ], [ %.073, %184 ], [ %.073, %172 ], [ %.073, %162 ], [ %.073, %161 ], [ %.073, %157 ], [ %.073, %156 ], [ %.073, %152 ], [ %.073, %151 ], [ %.073, %149 ], [ %.073, %148 ], [ %.073, %131 ], [ %.073, %121 ], [ %.073, %117 ], [ %.073, %116 ], [ %.073, %106 ], [ %.073, %96 ], [ %.073, %94 ], [ %.073, %92 ], [ %.073, %90 ], [ %.073, %79 ], [ %.073, %69 ], [ %.073, %68 ], [ %.073, %58 ], [ %.073, %48 ], [ %47, %46 ], [ %.073, %45 ], [ %.073, %44 ], [ %.073, %34 ], [ %.073, %24 ], [ %.073, %22 ], [ %.073, %19 ], [ %.073, %18 ], [ %.073, %15 ]
  %.071.be = phi i64 [ %.071, %14 ], [ %.071, %413 ], [ %.071, %411 ], [ %.071, %408 ], [ %.071, %407 ], [ %.071, %405 ], [ %.071, %404 ], [ %.071, %402 ], [ %.071, %401 ], [ %.071, %393 ], [ %.071, %392 ], [ %.071, %391 ], [ %.071, %390 ], [ %389, %388 ], [ %.071, %377 ], [ %.071, %367 ], [ %.071, %365 ], [ %.071, %363 ], [ %.071, %361 ], [ %.071, %360 ], [ %.071, %358 ], [ %.071, %356 ], [ %.071, %351 ], [ %.071, %349 ], [ %.071, %347 ], [ %.071, %343 ], [ %.071, %342 ], [ %.071, %338 ], [ %.071, %337 ], [ %.071, %336 ], [ %.071, %326 ], [ %.071, %316 ], [ %.071, %315 ], [ %.071, %314 ], [ %.071, %302 ], [ %.071, %292 ], [ %.071, %290 ], [ %.071, %277 ], [ %.071, %267 ], [ %.071, %263 ], [ %.071, %262 ], [ %.071, %261 ], [ %.071, %250 ], [ %.071, %240 ], [ %.071, %239 ], [ %.071, %229 ], [ %.071, %219 ], [ %.071, %217 ], [ %.071, %216 ], [ %.071, %215 ], [ %.071, %205 ], [ %.071, %195 ], [ %.071, %186 ], [ %.071, %184 ], [ %.071, %172 ], [ %.071, %162 ], [ %.071, %161 ], [ %.071, %157 ], [ %.071, %156 ], [ %.071, %152 ], [ %.071, %151 ], [ %.071, %149 ], [ %.071, %148 ], [ %.071, %131 ], [ %.071, %121 ], [ %.071, %117 ], [ %.071, %116 ], [ %.071, %106 ], [ %.071, %96 ], [ %.071, %94 ], [ %.071, %92 ], [ %.071, %90 ], [ %.071, %79 ], [ %.071, %69 ], [ %.071, %68 ], [ %.071, %58 ], [ %.071, %48 ], [ %.071, %46 ], [ %.071, %45 ], [ %.071, %44 ], [ %.neg78, %34 ], [ %.071, %24 ], [ %.071, %22 ], [ %.071, %19 ], [ 0, %18 ], [ %.071, %15 ]
  %.069.be = phi i64 [ %.069, %14 ], [ %.069, %413 ], [ %.069, %411 ], [ %.069, %408 ], [ %.069, %407 ], [ %.069, %405 ], [ %.069, %404 ], [ %.069, %402 ], [ %.069, %401 ], [ %.069, %393 ], [ %.069, %392 ], [ %.069, %391 ], [ 0, %390 ], [ %.069, %388 ], [ %.069, %377 ], [ %.069, %367 ], [ %.069, %365 ], [ %.069, %363 ], [ %.069, %361 ], [ %.069, %360 ], [ %.069, %358 ], [ %.069, %356 ], [ %.069, %351 ], [ %.069, %349 ], [ %.069, %347 ], [ %.069, %343 ], [ %.069, %342 ], [ %.069, %338 ], [ %.069, %337 ], [ %.069, %336 ], [ %.069, %326 ], [ %.069, %316 ], [ %.069, %315 ], [ %.069, %314 ], [ %.069, %302 ], [ %.069, %292 ], [ %.069, %290 ], [ %.069, %277 ], [ %.069, %267 ], [ %.069, %263 ], [ %.069, %262 ], [ %.069, %261 ], [ %.069, %250 ], [ %.069, %240 ], [ %.069, %239 ], [ %.069, %229 ], [ %.069, %219 ], [ %.069, %217 ], [ %.069, %216 ], [ %.069, %215 ], [ %.069, %205 ], [ %.069, %195 ], [ %.069, %186 ], [ %.069, %184 ], [ %.069, %172 ], [ %.069, %162 ], [ %.069, %161 ], [ %.069, %157 ], [ %.069, %156 ], [ %.069, %152 ], [ %.069, %151 ], [ %.069, %149 ], [ %.069, %148 ], [ %.069, %131 ], [ %.069, %121 ], [ %.069, %117 ], [ %.069, %116 ], [ %.069, %106 ], [ %.069, %96 ], [ %95, %94 ], [ %.069, %92 ], [ %.069, %90 ], [ %.069, %79 ], [ %.069, %69 ], [ %.069, %68 ], [ 0, %58 ], [ %.069, %48 ], [ %.069, %46 ], [ %.069, %45 ], [ %.069, %44 ], [ %.069, %34 ], [ %.069, %24 ], [ %.069, %22 ], [ %.069, %19 ], [ %.069, %18 ], [ %.069, %15 ]
  %.067.be = phi i64 [ %.067, %14 ], [ %.067, %413 ], [ %.067, %411 ], [ %.067, %408 ], [ %.067, %407 ], [ %.067, %405 ], [ %.067, %404 ], [ %.067, %402 ], [ %.067, %401 ], [ %.067, %393 ], [ 0, %392 ], [ %.067, %391 ], [ %.067, %390 ], [ %.067, %388 ], [ %.067, %377 ], [ %.067, %367 ], [ %.067, %365 ], [ %.067, %363 ], [ %.067, %361 ], [ %.067, %360 ], [ %.067, %358 ], [ %.067, %356 ], [ %.067, %351 ], [ %.067, %349 ], [ %.067, %347 ], [ %.067, %343 ], [ %.067, %342 ], [ %.067, %338 ], [ %.067, %337 ], [ %.067, %336 ], [ %.067, %326 ], [ %.067, %316 ], [ %.067, %315 ], [ %.067, %314 ], [ %.067, %302 ], [ %.067, %292 ], [ %.067, %290 ], [ %.067, %277 ], [ %.067, %267 ], [ %.067, %263 ], [ %.067, %262 ], [ %.067, %261 ], [ %.067, %250 ], [ %.067, %240 ], [ %.067, %239 ], [ %.067, %229 ], [ %.067, %219 ], [ %.067, %217 ], [ %.067, %216 ], [ %.067, %215 ], [ %.067, %205 ], [ %.067, %195 ], [ %.067, %186 ], [ %.067, %184 ], [ %.067, %172 ], [ %.067, %162 ], [ %.067, %161 ], [ %.067, %157 ], [ %.067, %156 ], [ %.067, %152 ], [ %.067, %151 ], [ %150, %149 ], [ %.067, %148 ], [ %.067, %131 ], [ %.067, %121 ], [ %.067, %117 ], [ %.067, %116 ], [ 0, %106 ], [ %.067, %96 ], [ %.067, %94 ], [ %.067, %92 ], [ %.067, %90 ], [ %.067, %79 ], [ %.067, %69 ], [ %.067, %68 ], [ %.067, %58 ], [ %.067, %48 ], [ %.067, %46 ], [ %.067, %45 ], [ %.067, %44 ], [ %.067, %34 ], [ %.067, %24 ], [ %.067, %22 ], [ %.067, %19 ], [ %.067, %18 ], [ %.067, %15 ]
  %.065.be = phi i64 [ %.065, %14 ], [ %.065, %413 ], [ %.065, %411 ], [ %.065, %408 ], [ %.065, %407 ], [ %406, %405 ], [ %.065, %404 ], [ %.065, %402 ], [ %.065, %401 ], [ %.065, %393 ], [ %.065, %392 ], [ %.065, %391 ], [ %.065, %390 ], [ %.065, %388 ], [ %.065, %377 ], [ %.065, %367 ], [ %.065, %365 ], [ %.065, %363 ], [ %.065, %361 ], [ %.065, %360 ], [ %.065, %358 ], [ %.065, %356 ], [ %.065, %351 ], [ %.065, %349 ], [ %.065, %347 ], [ %.065, %343 ], [ %.065, %342 ], [ %.065, %338 ], [ %.065, %337 ], [ %.065, %336 ], [ %.065, %326 ], [ %.065, %316 ], [ %.065, %315 ], [ %.065, %314 ], [ %.065, %302 ], [ %.065, %292 ], [ %.065, %290 ], [ %.065, %277 ], [ %.065, %267 ], [ %.065, %263 ], [ %.065, %262 ], [ %.065, %261 ], [ %251, %250 ], [ %.065, %240 ], [ %.065, %239 ], [ %.065, %229 ], [ %.065, %219 ], [ %.065, %217 ], [ %.065, %216 ], [ %.065, %215 ], [ %.065, %205 ], [ %.065, %195 ], [ %.065, %186 ], [ %.065, %184 ], [ %.065, %172 ], [ %.065, %162 ], [ %.065, %161 ], [ %.065, %157 ], [ %.065, %156 ], [ %.065, %152 ], [ 0, %151 ], [ %.065, %149 ], [ %.065, %148 ], [ %.065, %131 ], [ %.065, %121 ], [ %.065, %117 ], [ %.065, %116 ], [ %.065, %106 ], [ %.065, %96 ], [ %.065, %94 ], [ %.065, %92 ], [ %.065, %90 ], [ %.065, %79 ], [ %.065, %69 ], [ %.065, %68 ], [ %.065, %58 ], [ %.065, %48 ], [ %.065, %46 ], [ %.065, %45 ], [ %.065, %44 ], [ %.065, %34 ], [ %.065, %24 ], [ %.065, %22 ], [ %.065, %19 ], [ %.065, %18 ], [ %.065, %15 ]
  %.063.be = phi i64 [ %.063, %14 ], [ %.063, %413 ], [ %.063, %411 ], [ %.063, %408 ], [ %.063, %407 ], [ %.063, %405 ], [ %.063, %404 ], [ %.063, %402 ], [ %.063, %401 ], [ %.063, %393 ], [ %.063, %392 ], [ %.063, %391 ], [ %.063, %390 ], [ %.063, %388 ], [ %.063, %377 ], [ %.063, %367 ], [ %.063, %365 ], [ %.063, %363 ], [ %.063, %361 ], [ %.063, %360 ], [ %.063, %358 ], [ %.063, %356 ], [ %.063, %351 ], [ %.063, %349 ], [ %.063, %347 ], [ %.063, %343 ], [ %.063, %342 ], [ %.063, %338 ], [ %.063, %337 ], [ %.063, %336 ], [ %.063, %326 ], [ %.063, %316 ], [ %.063, %315 ], [ %.063, %314 ], [ %.063, %302 ], [ %.063, %292 ], [ %.063, %290 ], [ %.063, %277 ], [ %.063, %267 ], [ %.063, %263 ], [ %.063, %262 ], [ %.063, %261 ], [ %.063, %250 ], [ %.063, %240 ], [ %.063, %239 ], [ %.063, %229 ], [ %.063, %219 ], [ %218, %217 ], [ %.063, %216 ], [ %.063, %215 ], [ %.063, %205 ], [ %.063, %195 ], [ %.063, %186 ], [ %.063, %184 ], [ %.063, %172 ], [ %.063, %162 ], [ %.063, %161 ], [ %.063, %157 ], [ 0, %156 ], [ %.063, %152 ], [ %.063, %151 ], [ %.063, %149 ], [ %.063, %148 ], [ %.063, %131 ], [ %.063, %121 ], [ %.063, %117 ], [ %.063, %116 ], [ %.063, %106 ], [ %.063, %96 ], [ %.063, %94 ], [ %.063, %92 ], [ %.063, %90 ], [ %.063, %79 ], [ %.063, %69 ], [ %.063, %68 ], [ %.063, %58 ], [ %.063, %48 ], [ %.063, %46 ], [ %.063, %45 ], [ %.063, %44 ], [ %.063, %34 ], [ %.063, %24 ], [ %.063, %22 ], [ %.063, %19 ], [ %.063, %18 ], [ %.063, %15 ]
  %.061.be = phi i64 [ %.061, %14 ], [ %.061, %413 ], [ %.061, %411 ], [ %.061, %408 ], [ %.061, %407 ], [ %.061, %405 ], [ %.061, %404 ], [ %403, %402 ], [ %.061, %401 ], [ %.061, %393 ], [ %.061, %392 ], [ %.061, %391 ], [ %.061, %390 ], [ %.061, %388 ], [ %.061, %377 ], [ %.061, %367 ], [ %.061, %365 ], [ %.061, %363 ], [ %.061, %361 ], [ %.061, %360 ], [ %.061, %358 ], [ %.061, %356 ], [ %.061, %351 ], [ %.061, %349 ], [ %.061, %347 ], [ %.061, %343 ], [ %.061, %342 ], [ %.061, %338 ], [ %.061, %337 ], [ %.061, %336 ], [ %.061, %326 ], [ %.061, %316 ], [ %.061, %315 ], [ %.061, %314 ], [ %.061, %302 ], [ %.061, %292 ], [ %.061, %290 ], [ %.061, %277 ], [ %.061, %267 ], [ %.061, %263 ], [ %.061, %262 ], [ %.061, %261 ], [ %.061, %250 ], [ %.061, %240 ], [ %.061, %239 ], [ %.061, %229 ], [ %.061, %219 ], [ %.061, %217 ], [ %.061, %216 ], [ %.061, %215 ], [ %.neg77, %205 ], [ %.061, %195 ], [ %.061, %186 ], [ %.061, %184 ], [ %.061, %172 ], [ %.061, %162 ], [ 0, %161 ], [ %.061, %157 ], [ %.061, %156 ], [ %.061, %152 ], [ %.061, %151 ], [ %.061, %149 ], [ %.061, %148 ], [ %.061, %131 ], [ %.061, %121 ], [ %.061, %117 ], [ %.061, %116 ], [ %.061, %106 ], [ %.061, %96 ], [ %.061, %94 ], [ %.061, %92 ], [ %.061, %90 ], [ %.061, %79 ], [ %.061, %69 ], [ %.061, %68 ], [ %.061, %58 ], [ %.061, %48 ], [ %.061, %46 ], [ %.061, %45 ], [ %.061, %44 ], [ %.061, %34 ], [ %.061, %24 ], [ %.061, %22 ], [ %.061, %19 ], [ %.061, %18 ], [ %.061, %15 ]
  %.059.be = phi i64 [ %.059, %14 ], [ %.059, %413 ], [ %412, %411 ], [ %.059, %408 ], [ %.059, %407 ], [ %.059, %405 ], [ %.059, %404 ], [ %.059, %402 ], [ %.059, %401 ], [ %.059, %393 ], [ %.059, %392 ], [ %.059, %391 ], [ %.059, %390 ], [ %.059, %388 ], [ %.059, %377 ], [ %.059, %367 ], [ %.059, %365 ], [ %.059, %363 ], [ %.059, %361 ], [ %.059, %360 ], [ %.059, %358 ], [ %.059, %356 ], [ %.059, %351 ], [ %.059, %349 ], [ %.059, %347 ], [ %.059, %343 ], [ %.059, %342 ], [ %.059, %338 ], [ %.059, %337 ], [ %.059, %336 ], [ %.neg, %326 ], [ %.059, %316 ], [ %.059, %315 ], [ %.059, %314 ], [ %.059, %302 ], [ %.059, %292 ], [ %.059, %290 ], [ %.059, %277 ], [ %.059, %267 ], [ %.059, %263 ], [ 0, %262 ], [ %.059, %261 ], [ %.059, %250 ], [ %.059, %240 ], [ %.059, %239 ], [ %.059, %229 ], [ %.059, %219 ], [ %.059, %217 ], [ %.059, %216 ], [ %.059, %215 ], [ %.059, %205 ], [ %.059, %195 ], [ %.059, %186 ], [ %.059, %184 ], [ %.059, %172 ], [ %.059, %162 ], [ %.059, %161 ], [ %.059, %157 ], [ %.059, %156 ], [ %.059, %152 ], [ %.059, %151 ], [ %.059, %149 ], [ %.059, %148 ], [ %.059, %131 ], [ %.059, %121 ], [ %.059, %117 ], [ %.059, %116 ], [ %.059, %106 ], [ %.059, %96 ], [ %.059, %94 ], [ %.059, %92 ], [ %.059, %90 ], [ %.059, %79 ], [ %.059, %69 ], [ %.059, %68 ], [ %.059, %58 ], [ %.059, %48 ], [ %.059, %46 ], [ %.059, %45 ], [ %.059, %44 ], [ %.059, %34 ], [ %.059, %24 ], [ %.059, %22 ], [ %.059, %19 ], [ %.059, %18 ], [ %.059, %15 ]
  %.057.be = phi i64 [ %.057, %14 ], [ %.057, %413 ], [ %.057, %411 ], [ %.057, %408 ], [ %.057, %407 ], [ %.057, %405 ], [ %.057, %404 ], [ %.057, %402 ], [ %.057, %401 ], [ %.057, %393 ], [ %.057, %392 ], [ %.057, %391 ], [ %.057, %390 ], [ %.057, %388 ], [ %.057, %377 ], [ %.057, %367 ], [ %366, %365 ], [ %.057, %363 ], [ %.057, %361 ], [ %.057, %360 ], [ %.057, %358 ], [ %.057, %356 ], [ %.057, %351 ], [ %.057, %349 ], [ %.057, %347 ], [ %.057, %343 ], [ %.057, %342 ], [ %.057, %338 ], [ 0, %337 ], [ %.057, %336 ], [ %.057, %326 ], [ %.057, %316 ], [ %.057, %315 ], [ %.057, %314 ], [ %.057, %302 ], [ %.057, %292 ], [ %.057, %290 ], [ %.057, %277 ], [ %.057, %267 ], [ %.057, %263 ], [ %.057, %262 ], [ %.057, %261 ], [ %.057, %250 ], [ %.057, %240 ], [ %.057, %239 ], [ %.057, %229 ], [ %.057, %219 ], [ %.057, %217 ], [ %.057, %216 ], [ %.057, %215 ], [ %.057, %205 ], [ %.057, %195 ], [ %.057, %186 ], [ %.057, %184 ], [ %.057, %172 ], [ %.057, %162 ], [ %.057, %161 ], [ %.057, %157 ], [ %.057, %156 ], [ %.057, %152 ], [ %.057, %151 ], [ %.057, %149 ], [ %.057, %148 ], [ %.057, %131 ], [ %.057, %121 ], [ %.057, %117 ], [ %.057, %116 ], [ %.057, %106 ], [ %.057, %96 ], [ %.057, %94 ], [ %.057, %92 ], [ %.057, %90 ], [ %.057, %79 ], [ %.057, %69 ], [ %.057, %68 ], [ %.057, %58 ], [ %.057, %48 ], [ %.057, %46 ], [ %.057, %45 ], [ %.057, %44 ], [ %.057, %34 ], [ %.057, %24 ], [ %.057, %22 ], [ %.057, %19 ], [ %.057, %18 ], [ %.057, %15 ]
  %.055.be = phi i64 [ %.055, %14 ], [ %.055, %413 ], [ %.055, %411 ], [ %.055, %408 ], [ %.055, %407 ], [ %.055, %405 ], [ %.055, %404 ], [ %.055, %402 ], [ %.055, %401 ], [ %.055, %393 ], [ %.055, %392 ], [ %.055, %391 ], [ %.055, %390 ], [ %.055, %388 ], [ %.055, %377 ], [ %.055, %367 ], [ %.055, %365 ], [ %.055, %363 ], [ %362, %361 ], [ %.055, %360 ], [ %.055, %358 ], [ %.055, %356 ], [ %.055, %351 ], [ %.055, %349 ], [ %.055, %347 ], [ %.055, %343 ], [ 0, %342 ], [ %.055, %338 ], [ %.055, %337 ], [ %.055, %336 ], [ %.055, %326 ], [ %.055, %316 ], [ %.055, %315 ], [ %.055, %314 ], [ %.055, %302 ], [ %.055, %292 ], [ %.055, %290 ], [ %.055, %277 ], [ %.055, %267 ], [ %.055, %263 ], [ %.055, %262 ], [ %.055, %261 ], [ %.055, %250 ], [ %.055, %240 ], [ %.055, %239 ], [ %.055, %229 ], [ %.055, %219 ], [ %.055, %217 ], [ %.055, %216 ], [ %.055, %215 ], [ %.055, %205 ], [ %.055, %195 ], [ %.055, %186 ], [ %.055, %184 ], [ %.055, %172 ], [ %.055, %162 ], [ %.055, %161 ], [ %.055, %157 ], [ %.055, %156 ], [ %.055, %152 ], [ %.055, %151 ], [ %.055, %149 ], [ %.055, %148 ], [ %.055, %131 ], [ %.055, %121 ], [ %.055, %117 ], [ %.055, %116 ], [ %.055, %106 ], [ %.055, %96 ], [ %.055, %94 ], [ %.055, %92 ], [ %.055, %90 ], [ %.055, %79 ], [ %.055, %69 ], [ %.055, %68 ], [ %.055, %58 ], [ %.055, %48 ], [ %.055, %46 ], [ %.055, %45 ], [ %.055, %44 ], [ %.055, %34 ], [ %.055, %24 ], [ %.055, %22 ], [ %.055, %19 ], [ %.055, %18 ], [ %.055, %15 ]
  %.053.be = phi i64 [ %.053, %14 ], [ %.053, %413 ], [ %.053, %411 ], [ %.053, %408 ], [ %.053, %407 ], [ %.053, %405 ], [ %.053, %404 ], [ %.053, %402 ], [ %.053, %401 ], [ %.053, %393 ], [ %.053, %392 ], [ %.053, %391 ], [ %.053, %390 ], [ %.053, %388 ], [ %.053, %377 ], [ %.053, %367 ], [ %.053, %365 ], [ %.053, %363 ], [ %.053, %361 ], [ %.053, %360 ], [ %.053, %358 ], [ %.053, %356 ], [ %353, %351 ], [ %.053, %349 ], [ %.053, %347 ], [ %.053, %343 ], [ %.053, %342 ], [ %.053, %338 ], [ %.053, %337 ], [ %.053, %336 ], [ %.053, %326 ], [ %.053, %316 ], [ %.053, %315 ], [ %.053, %314 ], [ %.053, %302 ], [ %.053, %292 ], [ %.053, %290 ], [ %.053, %277 ], [ %.053, %267 ], [ %.053, %263 ], [ %.053, %262 ], [ %.053, %261 ], [ %.053, %250 ], [ %.053, %240 ], [ %.053, %239 ], [ %.053, %229 ], [ %.053, %219 ], [ %.053, %217 ], [ %.053, %216 ], [ %.053, %215 ], [ %.053, %205 ], [ %.053, %195 ], [ %.053, %186 ], [ %.053, %184 ], [ %.053, %172 ], [ %.053, %162 ], [ %.053, %161 ], [ %.053, %157 ], [ %.053, %156 ], [ %.053, %152 ], [ %.053, %151 ], [ %.053, %149 ], [ %.053, %148 ], [ %.053, %131 ], [ %.053, %121 ], [ %.053, %117 ], [ %.053, %116 ], [ %.053, %106 ], [ %.053, %96 ], [ %.053, %94 ], [ %.053, %92 ], [ %.053, %90 ], [ %.053, %79 ], [ %.053, %69 ], [ %.053, %68 ], [ %.053, %58 ], [ %.053, %48 ], [ %.053, %46 ], [ %.053, %45 ], [ %.053, %44 ], [ %.053, %34 ], [ %.053, %24 ], [ %.053, %22 ], [ %.053, %19 ], [ %.053, %18 ], [ %.053, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ 744953248, %413 ], [ -2117198204, %411 ], [ -98504461, %408 ], [ 859491806, %407 ], [ -1526481096, %405 ], [ 1971164078, %404 ], [ 216262343, %402 ], [ -1539212114, %401 ], [ -1365493567, %393 ], [ 675907902, %392 ], [ 1204266630, %391 ], [ -703024708, %390 ], [ 1733982577, %388 ], [ %386, %377 ], [ %376, %367 ], [ 2109321272, %365 ], [ 1930247611, %363 ], [ -623348581, %361 ], [ 773950655, %360 ], [ 983113878, %358 ], [ 983113878, %356 ], [ %355, %351 ], [ -1103381865, %349 ], [ %348, %347 ], [ %346, %343 ], [ -623348581, %342 ], [ %341, %338 ], [ 2109321272, %337 ], [ 1054041256, %336 ], [ %335, %326 ], [ %325, %316 ], [ 2048361909, %315 ], [ -1999606699, %314 ], [ %313, %302 ], [ %301, %292 ], [ %291, %290 ], [ %289, %277 ], [ %276, %267 ], [ %266, %263 ], [ 1054041256, %262 ], [ 1890597671, %261 ], [ %260, %250 ], [ %249, %240 ], [ 1440857541, %239 ], [ %238, %229 ], [ %228, %219 ], [ -574852984, %217 ], [ -432477416, %216 ], [ 1501644330, %215 ], [ %214, %205 ], [ %204, %195 ], [ -1285939425, %186 ], [ %185, %184 ], [ %183, %172 ], [ %171, %162 ], [ 1501644330, %161 ], [ %160, %157 ], [ -574852984, %156 ], [ %155, %152 ], [ 1890597671, %151 ], [ 1001742023, %149 ], [ 1857493612, %148 ], [ %147, %131 ], [ %130, %121 ], [ %120, %117 ], [ 1001742023, %116 ], [ %115, %106 ], [ %105, %96 ], [ 745897585, %94 ], [ -1512688451, %92 ], [ %91, %90 ], [ %89, %79 ], [ %78, %69 ], [ 745897585, %68 ], [ %67, %58 ], [ %57, %48 ], [ 493862243, %46 ], [ -82455889, %45 ], [ -657218088, %44 ], [ %43, %34 ], [ %33, %24 ], [ -1211906750, %22 ], [ %21, %19 ], [ -657218088, %18 ], [ %17, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = icmp slt i64 %.073, 101
  %17 = select i1 %16, i32 -861083330, i32 -2016059714
  br label %.backedge

18:                                               ; preds = %14
  br label %.backedge

19:                                               ; preds = %14
  %20 = icmp slt i64 %.071, 101
  %21 = select i1 %20, i32 233162629, i32 -1941226331
  br label %.backedge

22:                                               ; preds = %14
  %23 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %7, i64 0, i64 %.073, i64 %.071
  store i64 576460752303423488, i64* %23, align 8
  br label %.backedge

24:                                               ; preds = %14
  %25 = load i32, i32* @x.3, align 4
  %26 = load i32, i32* @y.4, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 1733982577, i32 -1289466026
  br label %.backedge

34:                                               ; preds = %14
  %.neg78 = add i64 %.071, 1
  %35 = load i32, i32* @x.3, align 4
  %36 = load i32, i32* @y.4, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1142443732, i32 -1289466026
  br label %.backedge

44:                                               ; preds = %14
  br label %.backedge

45:                                               ; preds = %14
  br label %.backedge

46:                                               ; preds = %14
  %47 = add i64 %.073, 1
  br label %.backedge

48:                                               ; preds = %14
  %49 = load i32, i32* @x.3, align 4
  %50 = load i32, i32* @y.4, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 -703024708, i32 -1723049559
  br label %.backedge

58:                                               ; preds = %14
  %59 = load i32, i32* @x.3, align 4
  %60 = load i32, i32* @y.4, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 84983050, i32 -1723049559
  br label %.backedge

68:                                               ; preds = %14
  br label %.backedge

69:                                               ; preds = %14
  %70 = load i32, i32* @x.3, align 4
  %71 = load i32, i32* @y.4, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 1204266630, i32 -1563645590
  br label %.backedge

79:                                               ; preds = %14
  %80 = icmp slt i64 %.069, 101
  store i1 %80, i1* %4, align 1
  %81 = load i32, i32* @x.3, align 4
  %82 = load i32, i32* @y.4, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 -290432026, i32 -1563645590
  br label %.backedge

90:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %91 = select i1 %.0..0..0., i32 -563358798, i32 -1500835828
  br label %.backedge

92:                                               ; preds = %14
  %93 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %7, i64 0, i64 %.069, i64 %.069
  store i64 0, i64* %93, align 8
  br label %.backedge

94:                                               ; preds = %14
  %95 = add i64 %.069, 1
  br label %.backedge

96:                                               ; preds = %14
  %97 = load i32, i32* @x.3, align 4
  %98 = load i32, i32* @y.4, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 675907902, i32 298739704
  br label %.backedge

106:                                              ; preds = %14
  %107 = load i32, i32* @x.3, align 4
  %108 = load i32, i32* @y.4, align 4
  %109 = add i32 %107, -1
  %110 = mul i32 %109, %107
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %113, %112
  %115 = select i1 %114, i32 -1844474263, i32 298739704
  br label %.backedge

116:                                              ; preds = %14
  br label %.backedge

117:                                              ; preds = %14
  %118 = load i64, i64* %6, align 8
  %119 = icmp slt i64 %.067, %118
  %120 = select i1 %119, i32 2077445466, i32 844242557
  br label %.backedge

121:                                              ; preds = %14
  %122 = load i32, i32* @x.3, align 4
  %123 = load i32, i32* @y.4, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 -1365493567, i32 -2119446396
  br label %.backedge

131:                                              ; preds = %14
  %132 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %8)
  %133 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %132, i64* nonnull dereferenceable(8) %9)
  %134 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %133, i64* nonnull dereferenceable(8) %10)
  %135 = load i64, i64* %10, align 8
  %136 = load i64, i64* %8, align 8
  %137 = load i64, i64* %9, align 8
  %138 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %7, i64 0, i64 %136, i64 %137
  store i64 %135, i64* %138, align 8
  %139 = load i32, i32* @x.3, align 4
  %140 = load i32, i32* @y.4, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 198503578, i32 -2119446396
  br label %.backedge

148:                                              ; preds = %14
  br label %.backedge

149:                                              ; preds = %14
  %150 = add i64 %.067, 1
  br label %.backedge

151:                                              ; preds = %14
  br label %.backedge

152:                                              ; preds = %14
  %153 = load i64, i64* %5, align 8
  %154 = icmp slt i64 %.065, %153
  %155 = select i1 %154, i32 687514449, i32 -972359314
  br label %.backedge

156:                                              ; preds = %14
  br label %.backedge

157:                                              ; preds = %14
  %158 = load i64, i64* %5, align 8
  %159 = icmp slt i64 %.063, %158
  %160 = select i1 %159, i32 972370781, i32 -118876953
  br label %.backedge

161:                                              ; preds = %14
  br label %.backedge

162:                                              ; preds = %14
  %163 = load i32, i32* @x.3, align 4
  %164 = load i32, i32* @y.4, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -1539212114, i32 -735880361
  br label %.backedge

172:                                              ; preds = %14
  %173 = load i64, i64* %5, align 8
  %174 = icmp slt i64 %.061, %173
  store i1 %174, i1* %3, align 1
  %175 = load i32, i32* @x.3, align 4
  %176 = load i32, i32* @y.4, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 1196706999, i32 -735880361
  br label %.backedge

184:                                              ; preds = %14
  %.0..0..0.50 = load volatile i1, i1* %3, align 1
  %185 = select i1 %.0..0..0.50, i32 1626169542, i32 -1155697615
  br label %.backedge

186:                                              ; preds = %14
  %187 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %7, i64 0, i64 %.063, i64 %.061
  %188 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %7, i64 0, i64 %.063, i64 %.065
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %7, i64 0, i64 %.065, i64 %.061
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, %189
  store i64 %192, i64* %11, align 8
  %193 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %187, i64* nonnull dereferenceable(8) %11)
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %187, align 8
  br label %.backedge

195:                                              ; preds = %14
  %196 = load i32, i32* @x.3, align 4
  %197 = load i32, i32* @y.4, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 216262343, i32 -841505694
  br label %.backedge

205:                                              ; preds = %14
  %.neg77 = add i64 %.061, 1
  %206 = load i32, i32* @x.3, align 4
  %207 = load i32, i32* @y.4, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 1445716715, i32 -841505694
  br label %.backedge

215:                                              ; preds = %14
  br label %.backedge

216:                                              ; preds = %14
  br label %.backedge

217:                                              ; preds = %14
  %218 = add i64 %.063, 1
  br label %.backedge

219:                                              ; preds = %14
  %220 = load i32, i32* @x.3, align 4
  %221 = load i32, i32* @y.4, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 1971164078, i32 1604459670
  br label %.backedge

229:                                              ; preds = %14
  %230 = load i32, i32* @x.3, align 4
  %231 = load i32, i32* @y.4, align 4
  %232 = add i32 %230, -1
  %233 = mul i32 %232, %230
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %236, %235
  %238 = select i1 %237, i32 -1320610593, i32 1604459670
  br label %.backedge

239:                                              ; preds = %14
  br label %.backedge

240:                                              ; preds = %14
  %241 = load i32, i32* @x.3, align 4
  %242 = load i32, i32* @y.4, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 -1526481096, i32 812480662
  br label %.backedge

250:                                              ; preds = %14
  %251 = add i64 %.065, 1
  %252 = load i32, i32* @x.3, align 4
  %253 = load i32, i32* @y.4, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 -769821703, i32 812480662
  br label %.backedge

261:                                              ; preds = %14
  br label %.backedge

262:                                              ; preds = %14
  br label %.backedge

263:                                              ; preds = %14
  %264 = load i64, i64* %5, align 8
  %265 = icmp slt i64 %.059, %264
  %266 = select i1 %265, i32 -1037555020, i32 -995607241
  br label %.backedge

267:                                              ; preds = %14
  %268 = load i32, i32* @x.3, align 4
  %269 = load i32, i32* @y.4, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 859491806, i32 1448034547
  br label %.backedge

277:                                              ; preds = %14
  %278 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %7, i64 0, i64 %.059, i64 %.059
  %279 = load i64, i64* %278, align 8
  %280 = icmp slt i64 %279, 0
  store i1 %280, i1* %2, align 1
  %281 = load i32, i32* @x.3, align 4
  %282 = load i32, i32* @y.4, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 1245583789, i32 1448034547
  br label %.backedge

290:                                              ; preds = %14
  %.0..0..0.51 = load volatile i1, i1* %2, align 1
  %291 = select i1 %.0..0..0.51, i32 1409757191, i32 -990406930
  br label %.backedge

292:                                              ; preds = %14
  %293 = load i32, i32* @x.3, align 4
  %294 = load i32, i32* @y.4, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 -98504461, i32 986725316
  br label %.backedge

302:                                              ; preds = %14
  %303 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %304 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %303, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %305 = load i32, i32* @x.3, align 4
  %306 = load i32, i32* @y.4, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 -534000134, i32 986725316
  br label %.backedge

314:                                              ; preds = %14
  br label %.backedge

315:                                              ; preds = %14
  br label %.backedge

316:                                              ; preds = %14
  %317 = load i32, i32* @x.3, align 4
  %318 = load i32, i32* @y.4, align 4
  %319 = add i32 %317, -1
  %320 = mul i32 %319, %317
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %323, %322
  %325 = select i1 %324, i32 -2117198204, i32 1648372436
  br label %.backedge

326:                                              ; preds = %14
  %.neg = add i64 %.059, 1
  %327 = load i32, i32* @x.3, align 4
  %328 = load i32, i32* @y.4, align 4
  %329 = add i32 %327, -1
  %330 = mul i32 %329, %327
  %331 = and i32 %330, 1
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %333, %332
  %335 = select i1 %334, i32 -89148541, i32 1648372436
  br label %.backedge

336:                                              ; preds = %14
  br label %.backedge

337:                                              ; preds = %14
  br label %.backedge

338:                                              ; preds = %14
  %339 = load i64, i64* %5, align 8
  %340 = icmp slt i64 %.057, %339
  %341 = select i1 %340, i32 -199888591, i32 -1999606699
  br label %.backedge

342:                                              ; preds = %14
  br label %.backedge

343:                                              ; preds = %14
  %344 = load i64, i64* %5, align 8
  %345 = icmp slt i64 %.055, %344
  %346 = select i1 %345, i32 -2131643140, i32 -160350617
  br label %.backedge

347:                                              ; preds = %14
  %.not = icmp eq i64 %.055, 0
  %348 = select i1 %.not, i32 -1103381865, i32 -749752424
  br label %.backedge

349:                                              ; preds = %14
  %350 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

351:                                              ; preds = %14
  %352 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %7, i64 0, i64 %.057, i64 %.055
  %353 = load i64, i64* %352, align 8
  %354 = icmp sgt i64 %353, 288230376151711743
  %355 = select i1 %354, i32 -1053624696, i32 1683536434
  br label %.backedge

356:                                              ; preds = %14
  %357 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

358:                                              ; preds = %14
  %359 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.053)
  br label %.backedge

360:                                              ; preds = %14
  br label %.backedge

361:                                              ; preds = %14
  %362 = add i64 %.055, 1
  br label %.backedge

363:                                              ; preds = %14
  %364 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

365:                                              ; preds = %14
  %366 = add i64 %.057, 1
  br label %.backedge

367:                                              ; preds = %14
  %368 = load i32, i32* @x.3, align 4
  %369 = load i32, i32* @y.4, align 4
  %370 = add i32 %368, -1
  %371 = mul i32 %370, %368
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %374, %373
  %376 = select i1 %375, i32 744953248, i32 973257868
  br label %.backedge

377:                                              ; preds = %14
  store i32 0, i32* %1, align 4
  %378 = load i32, i32* @x.3, align 4
  %379 = load i32, i32* @y.4, align 4
  %380 = add i32 %378, -1
  %381 = mul i32 %380, %378
  %382 = and i32 %381, 1
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %384, %383
  %386 = select i1 %385, i32 1468389436, i32 973257868
  br label %.backedge

387:                                              ; preds = %14
  %.0..0..0.52 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.52

388:                                              ; preds = %14
  %389 = add i64 %.071, 1
  br label %.backedge

390:                                              ; preds = %14
  br label %.backedge

391:                                              ; preds = %14
  br label %.backedge

392:                                              ; preds = %14
  br label %.backedge

393:                                              ; preds = %14
  %394 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %8)
  %395 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %394, i64* nonnull dereferenceable(8) %9)
  %396 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %395, i64* nonnull dereferenceable(8) %10)
  %397 = load i64, i64* %10, align 8
  %398 = load i64, i64* %8, align 8
  %399 = load i64, i64* %9, align 8
  %400 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %7, i64 0, i64 %398, i64 %399
  store i64 %397, i64* %400, align 8
  br label %.backedge

401:                                              ; preds = %14
  br label %.backedge

402:                                              ; preds = %14
  %403 = add i64 %.061, 1
  br label %.backedge

404:                                              ; preds = %14
  br label %.backedge

405:                                              ; preds = %14
  %406 = add i64 %.065, 1
  br label %.backedge

407:                                              ; preds = %14
  br label %.backedge

408:                                              ; preds = %14
  %409 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %410 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %409, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

411:                                              ; preds = %14
  %412 = add i64 %.059, 1
  br label %.backedge

413:                                              ; preds = %14
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.5, align 4
  %8 = load i32, i32* @y.6, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -1422126874, i32 -176984892
  %16 = select i1 %14, i32 1640433536, i32 -176984892
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -1497859547, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 -1497859547, label %18
    i32 1903748877, label %.outer10.backedge
    i32 1640433536, label %.outer.backedge
    i32 -1422126874, label %21
    i32 1434194068, label %22
    i32 -1644161390, label %23
    i32 -176984892, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 1903748877, i32 1434194068
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -1644161390, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i64* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ -1644161390, %22 ], [ 1640433536, %24 ], [ %15, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s410008788.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
