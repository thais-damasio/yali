; ModuleID = 'build_ollvm/programs/p02363/s727130940.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s727130940.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.Edge = type { i32, i32, i32 }

@edges = local_unnamed_addr global [9900 x %struct.Edge] zeroinitializer, align 16
@_ZL4Vnum = internal global i32 0, align 4
@_ZL1d = internal unnamed_addr global [100 x [100 x i64]] zeroinitializer, align 16
@_ZL4Enum = internal global i32 0, align 4
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline nounwind uwtable
define void @_Z14warshall_floydv() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = load i32, i32* @x, align 4
  %5 = load i32, i32* @y, align 4
  %6 = add i32 %4, -1
  %7 = mul i32 %6, %4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %10, %9
  %12 = select i1 %11, i32 -188374906, i32 1901212690
  %13 = select i1 %11, i32 176346543, i32 1901212690
  %14 = load i32, i32* @_ZL4Vnum, align 4
  %15 = select i1 %11, i32 294547577, i32 -251593265
  %16 = select i1 %11, i32 -470313250, i32 -251593265
  %17 = select i1 %11, i32 1281178052, i32 195740441
  %18 = select i1 %11, i32 1059826880, i32 195740441
  %19 = select i1 %11, i32 1388000709, i32 1415346542
  %20 = select i1 %11, i32 -411492003, i32 1415346542
  %21 = select i1 %11, i32 -1810582090, i32 -1526266195
  %22 = select i1 %11, i32 1809527939, i32 -1526266195
  %23 = select i1 %11, i32 480807765, i32 384110846
  %24 = select i1 %11, i32 1446325835, i32 384110846
  %25 = load i32, i32* @_ZL4Enum, align 4
  %26 = select i1 %11, i32 1975196679, i32 2004878746
  %27 = select i1 %11, i32 -1531098395, i32 2004878746
  %28 = select i1 %11, i32 -132258316, i32 -245414137
  %29 = select i1 %11, i32 -1259803135, i32 -245414137
  %30 = select i1 %11, i32 1030835719, i32 221591385
  %31 = select i1 %11, i32 1296136015, i32 221591385
  br label %32

32:                                               ; preds = %.backedge, %0
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ 0, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.0 = phi i32 [ -972371823, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -972371823, label %33
    i32 70818239, label %36
    i32 777831756, label %37
    i32 864392160, label %40
    i32 1296136015, label %41
    i32 1030835719, label %45
    i32 -1382161979, label %46
    i32 -1587064349, label %48
    i32 -1960324099, label %51
    i32 -1259803135, label %52
    i32 -132258316, label %54
    i32 1160988146, label %55
    i32 2039531775, label %56
    i32 -1531098395, label %57
    i32 1975196679, label %59
    i32 1951346453, label %61
    i32 1325778094, label %67
    i32 -1764628154, label %69
    i32 -1307139581, label %70
    i32 -281408120, label %73
    i32 -587274233, label %74
    i32 1446325835, label %75
    i32 480807765, label %77
    i32 703854214, label %79
    i32 1809527939, label %80
    i32 -1810582090, label %81
    i32 74855497, label %82
    i32 -154020551, label %85
    i32 636377597, label %92
    i32 -411492003, label %93
    i32 1388000709, label %99
    i32 487818508, label %101
    i32 -1103954965, label %102
    i32 97679118, label %115
    i32 -1291748840, label %125
    i32 1059826880, label %126
    i32 1281178052, label %127
    i32 26390264, label %128
    i32 -470313250, label %129
    i32 294547577, label %131
    i32 -601530259, label %132
    i32 -312974006, label %133
    i32 557314084, label %135
    i32 -1278668830, label %136
    i32 543557139, label %138
    i32 607200669, label %139
    i32 -1747098107, label %142
    i32 -36095452, label %148
    i32 -1407300160, label %150
    i32 176346543, label %151
    i32 -188374906, label %152
    i32 -1894070601, label %153
    i32 -1346063636, label %154
    i32 221591385, label %155
    i32 -245414137, label %159
    i32 2004878746, label %161
    i32 384110846, label %162
    i32 -1526266195, label %163
    i32 1415346542, label %164
    i32 195740441, label %165
    i32 -251593265, label %166
    i32 1901212690, label %167
  ]

.backedge:                                        ; preds = %32, %167, %166, %165, %164, %163, %162, %161, %159, %155, %153, %152, %151, %150, %142, %139, %138, %136, %135, %133, %132, %131, %129, %128, %127, %126, %125, %115, %102, %101, %99, %93, %92, %85, %82, %81, %80, %79, %77, %75, %74, %73, %70, %69, %67, %61, %59, %57, %56, %55, %54, %52, %51, %48, %46, %45, %41, %40, %37, %36, %33
  %.062.be = phi i32 [ %.062, %32 ], [ %.062, %167 ], [ %.062, %166 ], [ %.062, %165 ], [ %.062, %164 ], [ %.062, %163 ], [ %.062, %162 ], [ %.062, %161 ], [ %.062, %159 ], [ %.062, %155 ], [ %.062, %153 ], [ %.062, %152 ], [ %.062, %151 ], [ %.062, %150 ], [ %.062, %142 ], [ %.062, %139 ], [ %.062, %138 ], [ %.062, %136 ], [ %.062, %135 ], [ %.062, %133 ], [ %.062, %132 ], [ %.062, %131 ], [ %.062, %129 ], [ %.062, %128 ], [ %.062, %127 ], [ %.062, %126 ], [ %.062, %125 ], [ %.062, %115 ], [ %.062, %102 ], [ %.062, %101 ], [ %.062, %99 ], [ %.062, %93 ], [ %.062, %92 ], [ %.062, %85 ], [ %.062, %82 ], [ %.062, %81 ], [ %.062, %80 ], [ %.062, %79 ], [ %.062, %77 ], [ %.062, %75 ], [ %.062, %74 ], [ %.062, %73 ], [ %.062, %70 ], [ %.062, %69 ], [ %68, %67 ], [ %.062, %61 ], [ %.062, %59 ], [ %.062, %57 ], [ %.062, %56 ], [ 0, %55 ], [ %.062, %54 ], [ %.062, %52 ], [ %.062, %51 ], [ %.062, %48 ], [ %.062, %46 ], [ %.062, %45 ], [ %.062, %41 ], [ %.062, %40 ], [ %.062, %37 ], [ %.062, %36 ], [ %.062, %33 ]
  %.060.be = phi i32 [ %.060, %32 ], [ %.060, %167 ], [ %.060, %166 ], [ %.060, %165 ], [ %.060, %164 ], [ %.060, %163 ], [ %.060, %162 ], [ %.060, %161 ], [ %.060, %159 ], [ %.060, %155 ], [ %.060, %153 ], [ %.060, %152 ], [ %.060, %151 ], [ %.060, %150 ], [ %.060, %142 ], [ %.060, %139 ], [ %.060, %138 ], [ %.060, %136 ], [ %.060, %135 ], [ %.060, %133 ], [ %.060, %132 ], [ %.060, %131 ], [ %.060, %129 ], [ %.060, %128 ], [ %.060, %127 ], [ %.060, %126 ], [ %.060, %125 ], [ %.060, %115 ], [ %.060, %102 ], [ %.060, %101 ], [ %.060, %99 ], [ %.060, %93 ], [ %.060, %92 ], [ %.060, %85 ], [ %.060, %82 ], [ %.060, %81 ], [ %.060, %80 ], [ %.060, %79 ], [ %.060, %77 ], [ %.060, %75 ], [ %.060, %74 ], [ %.060, %73 ], [ %.060, %70 ], [ %.060, %69 ], [ %.060, %67 ], [ %.060, %61 ], [ %.060, %59 ], [ %.060, %57 ], [ %.060, %56 ], [ %.060, %55 ], [ %.060, %54 ], [ %.060, %52 ], [ %.060, %51 ], [ %.060, %48 ], [ %47, %46 ], [ %.060, %45 ], [ %.060, %41 ], [ %.060, %40 ], [ %.060, %37 ], [ 0, %36 ], [ %.060, %33 ]
  %.058.be = phi i32 [ %.058, %32 ], [ %.058, %167 ], [ %.058, %166 ], [ %.058, %165 ], [ %.058, %164 ], [ %.058, %163 ], [ %.058, %162 ], [ %.058, %161 ], [ %160, %159 ], [ %.058, %155 ], [ %.058, %153 ], [ %.058, %152 ], [ %.058, %151 ], [ %.058, %150 ], [ %.058, %142 ], [ %.058, %139 ], [ %.058, %138 ], [ %.058, %136 ], [ %.058, %135 ], [ %.058, %133 ], [ %.058, %132 ], [ %.058, %131 ], [ %.058, %129 ], [ %.058, %128 ], [ %.058, %127 ], [ %.058, %126 ], [ %.058, %125 ], [ %.058, %115 ], [ %.058, %102 ], [ %.058, %101 ], [ %.058, %99 ], [ %.058, %93 ], [ %.058, %92 ], [ %.058, %85 ], [ %.058, %82 ], [ %.058, %81 ], [ %.058, %80 ], [ %.058, %79 ], [ %.058, %77 ], [ %.058, %75 ], [ %.058, %74 ], [ %.058, %73 ], [ %.058, %70 ], [ %.058, %69 ], [ %.058, %67 ], [ %.058, %61 ], [ %.058, %59 ], [ %.058, %57 ], [ %.058, %56 ], [ %.058, %55 ], [ %.058, %54 ], [ %53, %52 ], [ %.058, %51 ], [ %.058, %48 ], [ %.058, %46 ], [ %.058, %45 ], [ %.058, %41 ], [ %.058, %40 ], [ %.058, %37 ], [ %.058, %36 ], [ %.058, %33 ]
  %.056.be = phi i32 [ %.056, %32 ], [ %.056, %167 ], [ %.056, %166 ], [ %.056, %165 ], [ %.056, %164 ], [ %.056, %163 ], [ %.056, %162 ], [ %.056, %161 ], [ %.056, %159 ], [ %.056, %155 ], [ %.056, %153 ], [ %.056, %152 ], [ %.056, %151 ], [ %.056, %150 ], [ %.056, %142 ], [ %.056, %139 ], [ %.056, %138 ], [ %137, %136 ], [ %.056, %135 ], [ %.056, %133 ], [ %.056, %132 ], [ %.056, %131 ], [ %.056, %129 ], [ %.056, %128 ], [ %.056, %127 ], [ %.056, %126 ], [ %.056, %125 ], [ %.056, %115 ], [ %.056, %102 ], [ %.056, %101 ], [ %.056, %99 ], [ %.056, %93 ], [ %.056, %92 ], [ %.056, %85 ], [ %.056, %82 ], [ %.056, %81 ], [ %.056, %80 ], [ %.056, %79 ], [ %.056, %77 ], [ %.056, %75 ], [ %.056, %74 ], [ %.056, %73 ], [ %.056, %70 ], [ 0, %69 ], [ %.056, %67 ], [ %.056, %61 ], [ %.056, %59 ], [ %.056, %57 ], [ %.056, %56 ], [ %.056, %55 ], [ %.056, %54 ], [ %.056, %52 ], [ %.056, %51 ], [ %.056, %48 ], [ %.056, %46 ], [ %.056, %45 ], [ %.056, %41 ], [ %.056, %40 ], [ %.056, %37 ], [ %.056, %36 ], [ %.056, %33 ]
  %.054.be = phi i32 [ %.054, %32 ], [ %.054, %167 ], [ %.054, %166 ], [ %.054, %165 ], [ %.054, %164 ], [ %.054, %163 ], [ %.054, %162 ], [ %.054, %161 ], [ %.054, %159 ], [ %.054, %155 ], [ %.054, %153 ], [ %.054, %152 ], [ %.054, %151 ], [ %.054, %150 ], [ %.054, %142 ], [ %.054, %139 ], [ %.054, %138 ], [ %.054, %136 ], [ %.054, %135 ], [ %134, %133 ], [ %.054, %132 ], [ %.054, %131 ], [ %.054, %129 ], [ %.054, %128 ], [ %.054, %127 ], [ %.054, %126 ], [ %.054, %125 ], [ %.054, %115 ], [ %.054, %102 ], [ %.054, %101 ], [ %.054, %99 ], [ %.054, %93 ], [ %.054, %92 ], [ %.054, %85 ], [ %.054, %82 ], [ %.054, %81 ], [ %.054, %80 ], [ %.054, %79 ], [ %.054, %77 ], [ %.054, %75 ], [ %.054, %74 ], [ 0, %73 ], [ %.054, %70 ], [ %.054, %69 ], [ %.054, %67 ], [ %.054, %61 ], [ %.054, %59 ], [ %.054, %57 ], [ %.054, %56 ], [ %.054, %55 ], [ %.054, %54 ], [ %.054, %52 ], [ %.054, %51 ], [ %.054, %48 ], [ %.054, %46 ], [ %.054, %45 ], [ %.054, %41 ], [ %.054, %40 ], [ %.054, %37 ], [ %.054, %36 ], [ %.054, %33 ]
  %.052.be = phi i32 [ %.052, %32 ], [ %.052, %167 ], [ %.neg, %166 ], [ %.052, %165 ], [ %.052, %164 ], [ 0, %163 ], [ %.052, %162 ], [ %.052, %161 ], [ %.052, %159 ], [ %.052, %155 ], [ %.052, %153 ], [ %.052, %152 ], [ %.052, %151 ], [ %.052, %150 ], [ %.052, %142 ], [ %.052, %139 ], [ %.052, %138 ], [ %.052, %136 ], [ %.052, %135 ], [ %.052, %133 ], [ %.052, %132 ], [ %.052, %131 ], [ %130, %129 ], [ %.052, %128 ], [ %.052, %127 ], [ %.052, %126 ], [ %.052, %125 ], [ %.052, %115 ], [ %.052, %102 ], [ %.052, %101 ], [ %.052, %99 ], [ %.052, %93 ], [ %.052, %92 ], [ %.052, %85 ], [ %.052, %82 ], [ %.052, %81 ], [ 0, %80 ], [ %.052, %79 ], [ %.052, %77 ], [ %.052, %75 ], [ %.052, %74 ], [ %.052, %73 ], [ %.052, %70 ], [ %.052, %69 ], [ %.052, %67 ], [ %.052, %61 ], [ %.052, %59 ], [ %.052, %57 ], [ %.052, %56 ], [ %.052, %55 ], [ %.052, %54 ], [ %.052, %52 ], [ %.052, %51 ], [ %.052, %48 ], [ %.052, %46 ], [ %.052, %45 ], [ %.052, %41 ], [ %.052, %40 ], [ %.052, %37 ], [ %.052, %36 ], [ %.052, %33 ]
  %.050.be = phi i32 [ %.050, %32 ], [ %.050, %167 ], [ %.050, %166 ], [ %.050, %165 ], [ %.050, %164 ], [ %.050, %163 ], [ %.050, %162 ], [ %.050, %161 ], [ %.050, %159 ], [ %.050, %155 ], [ %.neg64, %153 ], [ %.050, %152 ], [ %.050, %151 ], [ %.050, %150 ], [ %.050, %142 ], [ %.050, %139 ], [ 0, %138 ], [ %.050, %136 ], [ %.050, %135 ], [ %.050, %133 ], [ %.050, %132 ], [ %.050, %131 ], [ %.050, %129 ], [ %.050, %128 ], [ %.050, %127 ], [ %.050, %126 ], [ %.050, %125 ], [ %.050, %115 ], [ %.050, %102 ], [ %.050, %101 ], [ %.050, %99 ], [ %.050, %93 ], [ %.050, %92 ], [ %.050, %85 ], [ %.050, %82 ], [ %.050, %81 ], [ %.050, %80 ], [ %.050, %79 ], [ %.050, %77 ], [ %.050, %75 ], [ %.050, %74 ], [ %.050, %73 ], [ %.050, %70 ], [ %.050, %69 ], [ %.050, %67 ], [ %.050, %61 ], [ %.050, %59 ], [ %.050, %57 ], [ %.050, %56 ], [ %.050, %55 ], [ %.050, %54 ], [ %.050, %52 ], [ %.050, %51 ], [ %.050, %48 ], [ %.050, %46 ], [ %.050, %45 ], [ %.050, %41 ], [ %.050, %40 ], [ %.050, %37 ], [ %.050, %36 ], [ %.050, %33 ]
  %.0.be = phi i32 [ %.0, %32 ], [ 176346543, %167 ], [ -470313250, %166 ], [ 1059826880, %165 ], [ -411492003, %164 ], [ 1809527939, %163 ], [ 1446325835, %162 ], [ -1531098395, %161 ], [ -1259803135, %159 ], [ 1296136015, %155 ], [ 607200669, %153 ], [ -1894070601, %152 ], [ %12, %151 ], [ %13, %150 ], [ %147, %142 ], [ %141, %139 ], [ 607200669, %138 ], [ -1307139581, %136 ], [ -1278668830, %135 ], [ -587274233, %133 ], [ -312974006, %132 ], [ 74855497, %131 ], [ %15, %129 ], [ %16, %128 ], [ 26390264, %127 ], [ %17, %126 ], [ %18, %125 ], [ -1291748840, %115 ], [ %114, %102 ], [ 26390264, %101 ], [ %100, %99 ], [ %19, %93 ], [ %20, %92 ], [ %91, %85 ], [ %84, %82 ], [ 74855497, %81 ], [ %21, %80 ], [ %22, %79 ], [ %78, %77 ], [ %23, %75 ], [ %24, %74 ], [ -587274233, %73 ], [ %72, %70 ], [ -1307139581, %69 ], [ 2039531775, %67 ], [ 1325778094, %61 ], [ %60, %59 ], [ %26, %57 ], [ %27, %56 ], [ 2039531775, %55 ], [ -972371823, %54 ], [ %28, %52 ], [ %29, %51 ], [ -1960324099, %48 ], [ 777831756, %46 ], [ -1382161979, %45 ], [ %30, %41 ], [ %31, %40 ], [ %39, %37 ], [ 777831756, %36 ], [ %35, %33 ]
  br label %32

33:                                               ; preds = %32
  %34 = icmp slt i32 %.058, %14
  %35 = select i1 %34, i32 70818239, i32 1160988146
  br label %.backedge

36:                                               ; preds = %32
  br label %.backedge

37:                                               ; preds = %32
  %38 = icmp slt i32 %.060, %14
  %39 = select i1 %38, i32 864392160, i32 -1587064349
  br label %.backedge

40:                                               ; preds = %32
  br label %.backedge

41:                                               ; preds = %32
  %42 = sext i32 %.058 to i64
  %43 = sext i32 %.060 to i64
  %44 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %42, i64 %43
  store i64 100000000000, i64* %44, align 8
  br label %.backedge

45:                                               ; preds = %32
  br label %.backedge

46:                                               ; preds = %32
  %47 = add i32 %.060, 1
  br label %.backedge

48:                                               ; preds = %32
  %49 = sext i32 %.058 to i64
  %50 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %49, i64 %49
  store i64 0, i64* %50, align 8
  br label %.backedge

51:                                               ; preds = %32
  br label %.backedge

52:                                               ; preds = %32
  %53 = add i32 %.058, 1
  br label %.backedge

54:                                               ; preds = %32
  br label %.backedge

55:                                               ; preds = %32
  br label %.backedge

56:                                               ; preds = %32
  br label %.backedge

57:                                               ; preds = %32
  %58 = icmp slt i32 %.062, %25
  store i1 %58, i1* %3, align 1
  br label %.backedge

59:                                               ; preds = %32
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %60 = select i1 %.0..0..0., i32 1951346453, i32 -1764628154
  br label %.backedge

61:                                               ; preds = %32
  %62 = sext i32 %.062 to i64
  %.sroa.0.0..sroa_idx = getelementptr inbounds [9900 x %struct.Edge], [9900 x %struct.Edge]* @edges, i64 0, i64 %62, i32 0
  %.sroa.0.0.copyload = load i32, i32* %.sroa.0.0..sroa_idx, align 4
  %.sroa.2.0..sroa_idx31 = getelementptr inbounds [9900 x %struct.Edge], [9900 x %struct.Edge]* @edges, i64 0, i64 %62, i32 1
  %.sroa.2.0.copyload = load i32, i32* %.sroa.2.0..sroa_idx31, align 4
  %.sroa.3.0..sroa_idx32 = getelementptr inbounds [9900 x %struct.Edge], [9900 x %struct.Edge]* @edges, i64 0, i64 %62, i32 2
  %.sroa.3.0.copyload = load i32, i32* %.sroa.3.0..sroa_idx32, align 4
  %63 = sext i32 %.sroa.3.0.copyload to i64
  %64 = sext i32 %.sroa.0.0.copyload to i64
  %65 = sext i32 %.sroa.2.0.copyload to i64
  %66 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %64, i64 %65
  store i64 %63, i64* %66, align 8
  br label %.backedge

67:                                               ; preds = %32
  %68 = add i32 %.062, 1
  br label %.backedge

69:                                               ; preds = %32
  br label %.backedge

70:                                               ; preds = %32
  %71 = icmp slt i32 %.056, %14
  %72 = select i1 %71, i32 -281408120, i32 543557139
  br label %.backedge

73:                                               ; preds = %32
  br label %.backedge

74:                                               ; preds = %32
  br label %.backedge

75:                                               ; preds = %32
  %76 = icmp slt i32 %.054, %14
  store i1 %76, i1* %2, align 1
  br label %.backedge

77:                                               ; preds = %32
  %.0..0..0.48 = load volatile i1, i1* %2, align 1
  %78 = select i1 %.0..0..0.48, i32 703854214, i32 557314084
  br label %.backedge

79:                                               ; preds = %32
  br label %.backedge

80:                                               ; preds = %32
  br label %.backedge

81:                                               ; preds = %32
  br label %.backedge

82:                                               ; preds = %32
  %83 = icmp slt i32 %.052, %14
  %84 = select i1 %83, i32 -154020551, i32 -601530259
  br label %.backedge

85:                                               ; preds = %32
  %86 = sext i32 %.054 to i64
  %87 = sext i32 %.056 to i64
  %88 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %86, i64 %87
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 100000000000
  %91 = select i1 %90, i32 487818508, i32 636377597
  br label %.backedge

92:                                               ; preds = %32
  br label %.backedge

93:                                               ; preds = %32
  %94 = sext i32 %.056 to i64
  %95 = sext i32 %.052 to i64
  %96 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %94, i64 %95
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %97, 100000000000
  store i1 %98, i1* %1, align 1
  br label %.backedge

99:                                               ; preds = %32
  %.0..0..0.49 = load volatile i1, i1* %1, align 1
  %100 = select i1 %.0..0..0.49, i32 487818508, i32 -1103954965
  br label %.backedge

101:                                              ; preds = %32
  br label %.backedge

102:                                              ; preds = %32
  %103 = sext i32 %.054 to i64
  %104 = sext i32 %.052 to i64
  %105 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %103, i64 %104
  %106 = load i64, i64* %105, align 8
  %107 = sext i32 %.056 to i64
  %108 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %103, i64 %107
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %107, i64 %104
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, %109
  %113 = icmp sgt i64 %106, %112
  %114 = select i1 %113, i32 97679118, i32 -1291748840
  br label %.backedge

115:                                              ; preds = %32
  %116 = sext i32 %.054 to i64
  %117 = sext i32 %.056 to i64
  %118 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %116, i64 %117
  %119 = load i64, i64* %118, align 8
  %120 = sext i32 %.052 to i64
  %121 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %117, i64 %120
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, %119
  %124 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %116, i64 %120
  store i64 %123, i64* %124, align 8
  br label %.backedge

125:                                              ; preds = %32
  br label %.backedge

126:                                              ; preds = %32
  br label %.backedge

127:                                              ; preds = %32
  br label %.backedge

128:                                              ; preds = %32
  br label %.backedge

129:                                              ; preds = %32
  %130 = add i32 %.052, 1
  br label %.backedge

131:                                              ; preds = %32
  br label %.backedge

132:                                              ; preds = %32
  br label %.backedge

133:                                              ; preds = %32
  %134 = add i32 %.054, 1
  br label %.backedge

135:                                              ; preds = %32
  br label %.backedge

136:                                              ; preds = %32
  %137 = add i32 %.056, 1
  br label %.backedge

138:                                              ; preds = %32
  br label %.backedge

139:                                              ; preds = %32
  %140 = icmp slt i32 %.050, %14
  %141 = select i1 %140, i32 -1747098107, i32 -1346063636
  br label %.backedge

142:                                              ; preds = %32
  %143 = sext i32 %.050 to i64
  %144 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %143, i64 %143
  %145 = load i64, i64* %144, align 8
  %146 = icmp slt i64 %145, 0
  %147 = select i1 %146, i32 -36095452, i32 -1407300160
  br label %.backedge

148:                                              ; preds = %32
  %149 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  tail call void @exit(i32 0) #5
  unreachable

150:                                              ; preds = %32
  br label %.backedge

151:                                              ; preds = %32
  br label %.backedge

152:                                              ; preds = %32
  br label %.backedge

153:                                              ; preds = %32
  %.neg64 = add i32 %.050, 1
  br label %.backedge

154:                                              ; preds = %32
  ret void

155:                                              ; preds = %32
  %156 = sext i32 %.058 to i64
  %157 = sext i32 %.060 to i64
  %158 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %156, i64 %157
  store i64 100000000000, i64* %158, align 8
  br label %.backedge

159:                                              ; preds = %32
  %160 = add i32 %.058, 1
  br label %.backedge

161:                                              ; preds = %32
  br label %.backedge

162:                                              ; preds = %32
  br label %.backedge

163:                                              ; preds = %32
  br label %.backedge

164:                                              ; preds = %32
  br label %.backedge

165:                                              ; preds = %32
  br label %.backedge

166:                                              ; preds = %32
  %.neg = add i32 %.052, 1
  br label %.backedge

167:                                              ; preds = %32
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #2

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main(i32 %0, i8** nocapture readnone %1) local_unnamed_addr #3 {
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull @_ZL4Vnum, i32* nonnull @_ZL4Enum)
  br label %8

8:                                                ; preds = %.backedge, %2
  %.028 = phi i32 [ 0, %2 ], [ %.028.be, %.backedge ]
  %.026 = phi i32 [ undef, %2 ], [ %.026.be, %.backedge ]
  %.024 = phi i32 [ undef, %2 ], [ %.024.be, %.backedge ]
  %.0 = phi i32 [ 1418600846, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1418600846, label %9
    i32 1966121317, label %13
    i32 470130520, label %23
    i32 743407523, label %38
    i32 -1706372305, label %39
    i32 -1243930009, label %41
    i32 1641482502, label %42
    i32 1174450749, label %46
    i32 1813016807, label %56
    i32 -106634934, label %66
    i32 -286208025, label %67
    i32 -672273457, label %71
    i32 -1504567798, label %78
    i32 -1928521496, label %80
    i32 -911224058, label %86
    i32 190770943, label %96
    i32 183506547, label %109
    i32 -1230059582, label %111
    i32 -401331245, label %121
    i32 1630985991, label %131
    i32 -64997031, label %132
    i32 -2031253146, label %142
    i32 -1686237314, label %152
    i32 -426686243, label %153
    i32 458379004, label %163
    i32 -167541381, label %173
    i32 -1272902101, label %174
    i32 -864159790, label %176
    i32 1182363902, label %177
    i32 20229386, label %187
    i32 218412927, label %197
    i32 -24265237, label %198
    i32 1203919449, label %208
    i32 -1908769182, label %218
    i32 -382256594, label %219
    i32 -138703549, label %225
    i32 -1673037550, label %226
    i32 1503696209, label %227
    i32 135924281, label %228
    i32 373190569, label %229
    i32 1276766854, label %230
    i32 -1480805506, label %232
  ]

.backedge:                                        ; preds = %8, %232, %230, %229, %228, %227, %226, %225, %219, %208, %198, %197, %187, %177, %176, %174, %173, %163, %153, %152, %142, %132, %131, %121, %111, %109, %96, %86, %80, %78, %71, %67, %66, %56, %46, %42, %41, %39, %38, %23, %13, %9
  %.028.be = phi i32 [ %.028, %8 ], [ %.028, %232 ], [ %.028, %230 ], [ %.028, %229 ], [ %.028, %228 ], [ %.028, %227 ], [ %.028, %226 ], [ %.028, %225 ], [ %.028, %219 ], [ %.028, %208 ], [ %.028, %198 ], [ %.028, %197 ], [ %.028, %187 ], [ %.028, %177 ], [ %.028, %176 ], [ %.028, %174 ], [ %.028, %173 ], [ %.028, %163 ], [ %.028, %153 ], [ %.028, %152 ], [ %.028, %142 ], [ %.028, %132 ], [ %.028, %131 ], [ %.028, %121 ], [ %.028, %111 ], [ %.028, %109 ], [ %.028, %96 ], [ %.028, %86 ], [ %.028, %80 ], [ %.028, %78 ], [ %.028, %71 ], [ %.028, %67 ], [ %.028, %66 ], [ %.028, %56 ], [ %.028, %46 ], [ %.028, %42 ], [ %.028, %41 ], [ %40, %39 ], [ %.028, %38 ], [ %.028, %23 ], [ %.028, %13 ], [ %.028, %9 ]
  %.026.be = phi i32 [ %.026, %8 ], [ %.026, %232 ], [ %231, %230 ], [ %.026, %229 ], [ %.026, %228 ], [ %.026, %227 ], [ %.026, %226 ], [ %.026, %225 ], [ %.026, %219 ], [ %.026, %208 ], [ %.026, %198 ], [ %.026, %197 ], [ %.neg, %187 ], [ %.026, %177 ], [ %.026, %176 ], [ %.026, %174 ], [ %.026, %173 ], [ %.026, %163 ], [ %.026, %153 ], [ %.026, %152 ], [ %.026, %142 ], [ %.026, %132 ], [ %.026, %131 ], [ %.026, %121 ], [ %.026, %111 ], [ %.026, %109 ], [ %.026, %96 ], [ %.026, %86 ], [ %.026, %80 ], [ %.026, %78 ], [ %.026, %71 ], [ %.026, %67 ], [ %.026, %66 ], [ %.026, %56 ], [ %.026, %46 ], [ %.026, %42 ], [ 0, %41 ], [ %.026, %39 ], [ %.026, %38 ], [ %.026, %23 ], [ %.026, %13 ], [ %.026, %9 ]
  %.024.be = phi i32 [ %.024, %8 ], [ %.024, %232 ], [ %.024, %230 ], [ %.024, %229 ], [ %.024, %228 ], [ %.024, %227 ], [ %.024, %226 ], [ 0, %225 ], [ %.024, %219 ], [ %.024, %208 ], [ %.024, %198 ], [ %.024, %197 ], [ %.024, %187 ], [ %.024, %177 ], [ %.024, %176 ], [ %175, %174 ], [ %.024, %173 ], [ %.024, %163 ], [ %.024, %153 ], [ %.024, %152 ], [ %.024, %142 ], [ %.024, %132 ], [ %.024, %131 ], [ %.024, %121 ], [ %.024, %111 ], [ %.024, %109 ], [ %.024, %96 ], [ %.024, %86 ], [ %.024, %80 ], [ %.024, %78 ], [ %.024, %71 ], [ %.024, %67 ], [ %.024, %66 ], [ 0, %56 ], [ %.024, %46 ], [ %.024, %42 ], [ %.024, %41 ], [ %.024, %39 ], [ %.024, %38 ], [ %.024, %23 ], [ %.024, %13 ], [ %.024, %9 ]
  %.0.be = phi i32 [ %.0, %8 ], [ 1203919449, %232 ], [ 20229386, %230 ], [ 458379004, %229 ], [ -2031253146, %228 ], [ -401331245, %227 ], [ 190770943, %226 ], [ 1813016807, %225 ], [ 470130520, %219 ], [ %217, %208 ], [ %207, %198 ], [ 1641482502, %197 ], [ %196, %187 ], [ %186, %177 ], [ 1182363902, %176 ], [ -286208025, %174 ], [ -1272902101, %173 ], [ %172, %163 ], [ %162, %153 ], [ -426686243, %152 ], [ %151, %142 ], [ %141, %132 ], [ -426686243, %131 ], [ %130, %121 ], [ %120, %111 ], [ %110, %109 ], [ %108, %96 ], [ %95, %86 ], [ -911224058, %80 ], [ -911224058, %78 ], [ %77, %71 ], [ %70, %67 ], [ -286208025, %66 ], [ %65, %56 ], [ %55, %46 ], [ %45, %42 ], [ 1641482502, %41 ], [ 1418600846, %39 ], [ -1706372305, %38 ], [ %37, %23 ], [ %22, %13 ], [ %12, %9 ]
  br label %8

9:                                                ; preds = %8
  %10 = load i32, i32* @_ZL4Enum, align 4
  %11 = icmp slt i32 %.028, %10
  %12 = select i1 %11, i32 1966121317, i32 -1243930009
  br label %.backedge

13:                                               ; preds = %8
  %14 = load i32, i32* @x.7, align 4
  %15 = load i32, i32* @y.8, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 470130520, i32 -382256594
  br label %.backedge

23:                                               ; preds = %8
  %24 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %25 = load i32, i32* %4, align 4
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %.028 to i64
  %.sroa.0.0..sroa_idx = getelementptr inbounds [9900 x %struct.Edge], [9900 x %struct.Edge]* @edges, i64 0, i64 %28, i32 0
  store i32 %25, i32* %.sroa.0.0..sroa_idx, align 4
  %.sroa.4.0..sroa_idx14 = getelementptr inbounds [9900 x %struct.Edge], [9900 x %struct.Edge]* @edges, i64 0, i64 %28, i32 1
  store i32 %26, i32* %.sroa.4.0..sroa_idx14, align 4
  %.sroa.6.0..sroa_idx17 = getelementptr inbounds [9900 x %struct.Edge], [9900 x %struct.Edge]* @edges, i64 0, i64 %28, i32 2
  store i32 %27, i32* %.sroa.6.0..sroa_idx17, align 4
  %29 = load i32, i32* @x.7, align 4
  %30 = load i32, i32* @y.8, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 743407523, i32 -382256594
  br label %.backedge

38:                                               ; preds = %8
  br label %.backedge

39:                                               ; preds = %8
  %40 = add i32 %.028, 1
  br label %.backedge

41:                                               ; preds = %8
  call void @_Z14warshall_floydv()
  br label %.backedge

42:                                               ; preds = %8
  %43 = load i32, i32* @_ZL4Vnum, align 4
  %44 = icmp slt i32 %.026, %43
  %45 = select i1 %44, i32 1174450749, i32 -24265237
  br label %.backedge

46:                                               ; preds = %8
  %47 = load i32, i32* @x.7, align 4
  %48 = load i32, i32* @y.8, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 1813016807, i32 -138703549
  br label %.backedge

56:                                               ; preds = %8
  %57 = load i32, i32* @x.7, align 4
  %58 = load i32, i32* @y.8, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 -106634934, i32 -138703549
  br label %.backedge

66:                                               ; preds = %8
  br label %.backedge

67:                                               ; preds = %8
  %68 = load i32, i32* @_ZL4Vnum, align 4
  %69 = icmp slt i32 %.024, %68
  %70 = select i1 %69, i32 -672273457, i32 -864159790
  br label %.backedge

71:                                               ; preds = %8
  %72 = sext i32 %.026 to i64
  %73 = sext i32 %.024 to i64
  %74 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %72, i64 %73
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 100000000000
  %77 = select i1 %76, i32 -1504567798, i32 -1928521496
  br label %.backedge

78:                                               ; preds = %8
  %79 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

80:                                               ; preds = %8
  %81 = sext i32 %.026 to i64
  %82 = sext i32 %.024 to i64
  %83 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @_ZL1d, i64 0, i64 %81, i64 %82
  %84 = load i64, i64* %83, align 8
  %85 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 %84)
  br label %.backedge

86:                                               ; preds = %8
  %87 = load i32, i32* @x.7, align 4
  %88 = load i32, i32* @y.8, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 190770943, i32 -1673037550
  br label %.backedge

96:                                               ; preds = %8
  %97 = load i32, i32* @_ZL4Vnum, align 4
  %98 = add i32 %97, -1
  %99 = icmp ne i32 %.024, %98
  store i1 %99, i1* %3, align 1
  %100 = load i32, i32* @x.7, align 4
  %101 = load i32, i32* @y.8, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 183506547, i32 -1673037550
  br label %.backedge

109:                                              ; preds = %8
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %110 = select i1 %.0..0..0., i32 -1230059582, i32 -64997031
  br label %.backedge

111:                                              ; preds = %8
  %112 = load i32, i32* @x.7, align 4
  %113 = load i32, i32* @y.8, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 -401331245, i32 1503696209
  br label %.backedge

121:                                              ; preds = %8
  %putchar32 = call i32 @putchar(i32 32)
  %122 = load i32, i32* @x.7, align 4
  %123 = load i32, i32* @y.8, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 1630985991, i32 1503696209
  br label %.backedge

131:                                              ; preds = %8
  br label %.backedge

132:                                              ; preds = %8
  %133 = load i32, i32* @x.7, align 4
  %134 = load i32, i32* @y.8, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 -2031253146, i32 135924281
  br label %.backedge

142:                                              ; preds = %8
  %putchar31 = call i32 @putchar(i32 10)
  %143 = load i32, i32* @x.7, align 4
  %144 = load i32, i32* @y.8, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 -1686237314, i32 135924281
  br label %.backedge

152:                                              ; preds = %8
  br label %.backedge

153:                                              ; preds = %8
  %154 = load i32, i32* @x.7, align 4
  %155 = load i32, i32* @y.8, align 4
  %156 = add i32 %154, -1
  %157 = mul i32 %156, %154
  %158 = and i32 %157, 1
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %160, %159
  %162 = select i1 %161, i32 458379004, i32 373190569
  br label %.backedge

163:                                              ; preds = %8
  %164 = load i32, i32* @x.7, align 4
  %165 = load i32, i32* @y.8, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 -167541381, i32 373190569
  br label %.backedge

173:                                              ; preds = %8
  br label %.backedge

174:                                              ; preds = %8
  %175 = add i32 %.024, 1
  br label %.backedge

176:                                              ; preds = %8
  br label %.backedge

177:                                              ; preds = %8
  %178 = load i32, i32* @x.7, align 4
  %179 = load i32, i32* @y.8, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 20229386, i32 1276766854
  br label %.backedge

187:                                              ; preds = %8
  %.neg = add i32 %.026, 1
  %188 = load i32, i32* @x.7, align 4
  %189 = load i32, i32* @y.8, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 218412927, i32 1276766854
  br label %.backedge

197:                                              ; preds = %8
  br label %.backedge

198:                                              ; preds = %8
  %199 = load i32, i32* @x.7, align 4
  %200 = load i32, i32* @y.8, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 1203919449, i32 -1480805506
  br label %.backedge

208:                                              ; preds = %8
  %209 = load i32, i32* @x.7, align 4
  %210 = load i32, i32* @y.8, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 -1908769182, i32 -1480805506
  br label %.backedge

218:                                              ; preds = %8
  ret i32 0

219:                                              ; preds = %8
  %220 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %221 = load i32, i32* %4, align 4
  %222 = load i32, i32* %5, align 4
  %223 = load i32, i32* %6, align 4
  %224 = sext i32 %.028 to i64
  %.sroa.0.0..sroa_idx12 = getelementptr inbounds [9900 x %struct.Edge], [9900 x %struct.Edge]* @edges, i64 0, i64 %224, i32 0
  store i32 %221, i32* %.sroa.0.0..sroa_idx12, align 4
  %.sroa.4.0..sroa_idx15 = getelementptr inbounds [9900 x %struct.Edge], [9900 x %struct.Edge]* @edges, i64 0, i64 %224, i32 1
  store i32 %222, i32* %.sroa.4.0..sroa_idx15, align 4
  %.sroa.6.0..sroa_idx18 = getelementptr inbounds [9900 x %struct.Edge], [9900 x %struct.Edge]* @edges, i64 0, i64 %224, i32 2
  store i32 %223, i32* %.sroa.6.0..sroa_idx18, align 4
  br label %.backedge

225:                                              ; preds = %8
  br label %.backedge

226:                                              ; preds = %8
  br label %.backedge

227:                                              ; preds = %8
  %putchar30 = call i32 @putchar(i32 32)
  br label %.backedge

228:                                              ; preds = %8
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

229:                                              ; preds = %8
  br label %.backedge

230:                                              ; preds = %8
  %231 = add i32 %.026, 1
  br label %.backedge

232:                                              ; preds = %8
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #4

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
