; ModuleID = 'build_ollvm/programs/p02363/s982376270.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s982376270.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@d = global [110 x [110 x i64]] zeroinitializer, align 16
@V = global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s982376270.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define void @_Z14warshall_floydv() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i64, align 8
  br label %3

3:                                                ; preds = %.backedge, %0
  %.021 = phi i32 [ 0, %0 ], [ %.021.be, %.backedge ]
  %.019 = phi i32 [ undef, %0 ], [ %.019.be, %.backedge ]
  %.017 = phi i32 [ undef, %0 ], [ %.017.be, %.backedge ]
  %.0 = phi i32 [ -885536962, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -885536962, label %4
    i32 259860933, label %14
    i32 1452384633, label %26
    i32 -1915802634, label %28
    i32 380338860, label %29
    i32 1037070767, label %33
    i32 1963677842, label %34
    i32 1675918238, label %38
    i32 1866122179, label %50
    i32 1375056943, label %52
    i32 465056658, label %53
    i32 1498079736, label %63
    i32 1969511056, label %74
    i32 -516678131, label %75
    i32 -5138461, label %76
    i32 -75717599, label %78
    i32 1778459737, label %79
    i32 -614941011, label %80
  ]

.backedge:                                        ; preds = %3, %80, %79, %76, %75, %74, %63, %53, %52, %50, %38, %34, %33, %29, %28, %26, %14, %4
  %.021.be = phi i32 [ %.021, %3 ], [ %.021, %80 ], [ %.021, %79 ], [ %77, %76 ], [ %.021, %75 ], [ %.021, %74 ], [ %.021, %63 ], [ %.021, %53 ], [ %.021, %52 ], [ %.021, %50 ], [ %.021, %38 ], [ %.021, %34 ], [ %.021, %33 ], [ %.021, %29 ], [ %.021, %28 ], [ %.021, %26 ], [ %.021, %14 ], [ %.021, %4 ]
  %.019.be = phi i32 [ %.019, %3 ], [ %81, %80 ], [ %.019, %79 ], [ %.019, %76 ], [ %.019, %75 ], [ %.019, %74 ], [ %64, %63 ], [ %.019, %53 ], [ %.019, %52 ], [ %.019, %50 ], [ %.019, %38 ], [ %.019, %34 ], [ %.019, %33 ], [ %.019, %29 ], [ 0, %28 ], [ %.019, %26 ], [ %.019, %14 ], [ %.019, %4 ]
  %.017.be = phi i32 [ %.017, %3 ], [ %.017, %80 ], [ %.017, %79 ], [ %.017, %76 ], [ %.017, %75 ], [ %.017, %74 ], [ %.017, %63 ], [ %.017, %53 ], [ %.017, %52 ], [ %51, %50 ], [ %.017, %38 ], [ %.017, %34 ], [ 0, %33 ], [ %.017, %29 ], [ %.017, %28 ], [ %.017, %26 ], [ %.017, %14 ], [ %.017, %4 ]
  %.0.be = phi i32 [ %.0, %3 ], [ 1498079736, %80 ], [ 259860933, %79 ], [ -885536962, %76 ], [ -5138461, %75 ], [ 380338860, %74 ], [ %73, %63 ], [ %62, %53 ], [ 465056658, %52 ], [ 1963677842, %50 ], [ 1866122179, %38 ], [ %37, %34 ], [ 1963677842, %33 ], [ %32, %29 ], [ 380338860, %28 ], [ %27, %26 ], [ %25, %14 ], [ %13, %4 ]
  br label %3

4:                                                ; preds = %3
  %5 = load i32, i32* @x.3, align 4
  %6 = load i32, i32* @y.4, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 259860933, i32 1778459737
  br label %.backedge

14:                                               ; preds = %3
  %15 = load i32, i32* @V, align 4
  %16 = icmp slt i32 %.021, %15
  store i1 %16, i1* %1, align 1
  %17 = load i32, i32* @x.3, align 4
  %18 = load i32, i32* @y.4, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 1452384633, i32 1778459737
  br label %.backedge

26:                                               ; preds = %3
  %.0..0..0. = load volatile i1, i1* %1, align 1
  %27 = select i1 %.0..0..0., i32 -1915802634, i32 -75717599
  br label %.backedge

28:                                               ; preds = %3
  br label %.backedge

29:                                               ; preds = %3
  %30 = load i32, i32* @V, align 4
  %31 = icmp slt i32 %.019, %30
  %32 = select i1 %31, i32 1037070767, i32 -516678131
  br label %.backedge

33:                                               ; preds = %3
  br label %.backedge

34:                                               ; preds = %3
  %35 = load i32, i32* @V, align 4
  %36 = icmp slt i32 %.017, %35
  %37 = select i1 %36, i32 1675918238, i32 1375056943
  br label %.backedge

38:                                               ; preds = %3
  %39 = sext i32 %.019 to i64
  %40 = sext i32 %.017 to i64
  %41 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %39, i64 %40
  %42 = sext i32 %.021 to i64
  %43 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %39, i64 %42
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %42, i64 %40
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %44
  store i64 %47, i64* %2, align 8
  %48 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %41, i64* nonnull dereferenceable(8) %2)
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %41, align 8
  br label %.backedge

50:                                               ; preds = %3
  %51 = add i32 %.017, 1
  br label %.backedge

52:                                               ; preds = %3
  br label %.backedge

53:                                               ; preds = %3
  %54 = load i32, i32* @x.3, align 4
  %55 = load i32, i32* @y.4, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 1498079736, i32 -614941011
  br label %.backedge

63:                                               ; preds = %3
  %64 = add i32 %.019, 1
  %65 = load i32, i32* @x.3, align 4
  %66 = load i32, i32* @y.4, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 1969511056, i32 -614941011
  br label %.backedge

74:                                               ; preds = %3
  br label %.backedge

75:                                               ; preds = %3
  br label %.backedge

76:                                               ; preds = %3
  %77 = add i32 %.021, 1
  br label %.backedge

78:                                               ; preds = %3
  ret void

79:                                               ; preds = %3
  br label %.backedge

80:                                               ; preds = %3
  %81 = add i32 %.019, 1
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i64* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 944975219, %2 ], [ 2001943931, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 944975219, label %8
    i32 978123747, label %.outer.backedge
    i32 -1122255643, label %11
    i32 2001943931, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %9 = icmp slt i64 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 978123747, i32 -1122255643
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i64* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i64* %.07.ph
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @V)
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %11, i32* nonnull dereferenceable(4) %7)
  br label %13

13:                                               ; preds = %.backedge, %0
  %.061 = phi i32 [ 0, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.0 = phi i32 [ -2111693798, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -2111693798, label %14
    i32 461899408, label %17
    i32 779500323, label %18
    i32 1094050574, label %21
    i32 363888402, label %31
    i32 -1866413585, label %44
    i32 1222352525, label %45
    i32 27055829, label %47
    i32 136491222, label %57
    i32 -975976947, label %67
    i32 200908396, label %68
    i32 1080220347, label %78
    i32 -1027597566, label %89
    i32 1887960436, label %90
    i32 1037099954, label %100
    i32 -117671866, label %110
    i32 -1517835276, label %111
    i32 -1007012851, label %121
    i32 1982687403, label %132
    i32 -485369723, label %134
    i32 683776082, label %144
    i32 825976957, label %156
    i32 -253730065, label %157
    i32 -1415825849, label %159
    i32 -1669202701, label %160
    i32 1701855846, label %164
    i32 1798956819, label %174
    i32 482311900, label %175
    i32 -203503314, label %176
    i32 -1143622406, label %180
    i32 1152817468, label %190
    i32 398649621, label %204
    i32 -677292405, label %206
    i32 921066588, label %209
    i32 1561172336, label %219
    i32 360294192, label %229
    i32 -1926708462, label %230
    i32 1705844672, label %240
    i32 -1965864147, label %251
    i32 -1694393403, label %252
    i32 -572385579, label %253
    i32 -2099682398, label %263
    i32 887966656, label %275
    i32 1702890741, label %277
    i32 -2001416754, label %287
    i32 1942657904, label %297
    i32 1049890329, label %298
    i32 2126128288, label %302
    i32 554094328, label %309
    i32 1650301792, label %319
    i32 -1286377469, label %330
    i32 340619877, label %332
    i32 210662288, label %334
    i32 1658552423, label %336
    i32 332092651, label %346
    i32 -1763272626, label %357
    i32 1963654741, label %359
    i32 -112648671, label %369
    i32 865307978, label %380
    i32 1700280203, label %381
    i32 1812390976, label %391
    i32 -1543779068, label %406
    i32 625177611, label %407
    i32 -843917961, label %408
    i32 148018636, label %418
    i32 567368392, label %428
    i32 1675442856, label %429
    i32 -1136011801, label %431
    i32 -519934687, label %432
    i32 749072586, label %433
    i32 -1402102438, label %443
    i32 227494095, label %453
    i32 1810603754, label %454
    i32 222281233, label %458
    i32 1452534159, label %459
    i32 -504024161, label %460
    i32 722693010, label %461
    i32 68559866, label %462
    i32 -921762034, label %465
    i32 528732949, label %466
    i32 -669910180, label %467
    i32 -343473506, label %469
    i32 -313602186, label %470
    i32 -1346453145, label %471
    i32 657828677, label %472
    i32 -2135932686, label %473
    i32 -1577277126, label %475
    i32 -1014170, label %481
    i32 2031175423, label %482
  ]

.backedge:                                        ; preds = %13, %482, %481, %475, %473, %472, %471, %470, %469, %467, %466, %465, %462, %461, %460, %459, %458, %454, %443, %433, %432, %431, %429, %428, %418, %408, %407, %406, %391, %381, %380, %369, %359, %357, %346, %336, %334, %332, %330, %319, %309, %302, %298, %297, %287, %277, %275, %263, %253, %252, %251, %240, %230, %229, %219, %209, %206, %204, %190, %180, %176, %175, %174, %164, %160, %159, %157, %156, %144, %134, %132, %121, %111, %110, %100, %90, %89, %78, %68, %67, %57, %47, %45, %44, %31, %21, %18, %17, %14
  %.061.be = phi i32 [ %.061, %13 ], [ %.061, %482 ], [ %.061, %481 ], [ %.061, %475 ], [ %.061, %473 ], [ %.061, %472 ], [ %.061, %471 ], [ %.061, %470 ], [ %.061, %469 ], [ %.061, %467 ], [ %.061, %466 ], [ %.061, %465 ], [ %.061, %462 ], [ %.061, %461 ], [ %.061, %460 ], [ %.neg65, %459 ], [ %.061, %458 ], [ %.061, %454 ], [ %.061, %443 ], [ %.061, %433 ], [ %.061, %432 ], [ %.061, %431 ], [ %.061, %429 ], [ %.061, %428 ], [ %.061, %418 ], [ %.061, %408 ], [ %.061, %407 ], [ %.061, %406 ], [ %.061, %391 ], [ %.061, %381 ], [ %.061, %380 ], [ %.061, %369 ], [ %.061, %359 ], [ %.061, %357 ], [ %.061, %346 ], [ %.061, %336 ], [ %.061, %334 ], [ %.061, %332 ], [ %.061, %330 ], [ %.061, %319 ], [ %.061, %309 ], [ %.061, %302 ], [ %.061, %298 ], [ %.061, %297 ], [ %.061, %287 ], [ %.061, %277 ], [ %.061, %275 ], [ %.061, %263 ], [ %.061, %253 ], [ %.061, %252 ], [ %.061, %251 ], [ %.061, %240 ], [ %.061, %230 ], [ %.061, %229 ], [ %.061, %219 ], [ %.061, %209 ], [ %.061, %206 ], [ %.061, %204 ], [ %.061, %190 ], [ %.061, %180 ], [ %.061, %176 ], [ %.061, %175 ], [ %.061, %174 ], [ %.061, %164 ], [ %.061, %160 ], [ %.061, %159 ], [ %.061, %157 ], [ %.061, %156 ], [ %.061, %144 ], [ %.061, %134 ], [ %.061, %132 ], [ %.061, %121 ], [ %.061, %111 ], [ %.061, %110 ], [ %.061, %100 ], [ %.061, %90 ], [ %.061, %89 ], [ %79, %78 ], [ %.061, %68 ], [ %.061, %67 ], [ %.061, %57 ], [ %.061, %47 ], [ %.061, %45 ], [ %.061, %44 ], [ %.061, %31 ], [ %.061, %21 ], [ %.061, %18 ], [ %.061, %17 ], [ %.061, %14 ]
  %.059.be = phi i32 [ %.059, %13 ], [ %.059, %482 ], [ %.059, %481 ], [ %.059, %475 ], [ %.059, %473 ], [ %.059, %472 ], [ %.059, %471 ], [ %.059, %470 ], [ %.059, %469 ], [ %.059, %467 ], [ %.059, %466 ], [ %.059, %465 ], [ %.059, %462 ], [ %.059, %461 ], [ %.059, %460 ], [ %.059, %459 ], [ %.059, %458 ], [ %.059, %454 ], [ %.059, %443 ], [ %.059, %433 ], [ %.059, %432 ], [ %.059, %431 ], [ %.059, %429 ], [ %.059, %428 ], [ %.059, %418 ], [ %.059, %408 ], [ %.059, %407 ], [ %.059, %406 ], [ %.059, %391 ], [ %.059, %381 ], [ %.059, %380 ], [ %.059, %369 ], [ %.059, %359 ], [ %.059, %357 ], [ %.059, %346 ], [ %.059, %336 ], [ %.059, %334 ], [ %.059, %332 ], [ %.059, %330 ], [ %.059, %319 ], [ %.059, %309 ], [ %.059, %302 ], [ %.059, %298 ], [ %.059, %297 ], [ %.059, %287 ], [ %.059, %277 ], [ %.059, %275 ], [ %.059, %263 ], [ %.059, %253 ], [ %.059, %252 ], [ %.059, %251 ], [ %.059, %240 ], [ %.059, %230 ], [ %.059, %229 ], [ %.059, %219 ], [ %.059, %209 ], [ %.059, %206 ], [ %.059, %204 ], [ %.059, %190 ], [ %.059, %180 ], [ %.059, %176 ], [ %.059, %175 ], [ %.059, %174 ], [ %.059, %164 ], [ %.059, %160 ], [ %.059, %159 ], [ %.059, %157 ], [ %.059, %156 ], [ %.059, %144 ], [ %.059, %134 ], [ %.059, %132 ], [ %.059, %121 ], [ %.059, %111 ], [ %.059, %110 ], [ %.059, %100 ], [ %.059, %90 ], [ %.059, %89 ], [ %.059, %78 ], [ %.059, %68 ], [ %.059, %67 ], [ %.059, %57 ], [ %.059, %47 ], [ %46, %45 ], [ %.059, %44 ], [ %.059, %31 ], [ %.059, %21 ], [ %.059, %18 ], [ 0, %17 ], [ %.059, %14 ]
  %.057.be = phi i32 [ %.057, %13 ], [ %.057, %482 ], [ %.057, %481 ], [ %.057, %475 ], [ %.057, %473 ], [ %.057, %472 ], [ %.057, %471 ], [ %.057, %470 ], [ %.057, %469 ], [ %.057, %467 ], [ %.057, %466 ], [ %.057, %465 ], [ %.057, %462 ], [ %.057, %461 ], [ 0, %460 ], [ %.057, %459 ], [ %.057, %458 ], [ %.057, %454 ], [ %.057, %443 ], [ %.057, %433 ], [ %.057, %432 ], [ %.057, %431 ], [ %.057, %429 ], [ %.057, %428 ], [ %.057, %418 ], [ %.057, %408 ], [ %.057, %407 ], [ %.057, %406 ], [ %.057, %391 ], [ %.057, %381 ], [ %.057, %380 ], [ %.057, %369 ], [ %.057, %359 ], [ %.057, %357 ], [ %.057, %346 ], [ %.057, %336 ], [ %.057, %334 ], [ %.057, %332 ], [ %.057, %330 ], [ %.057, %319 ], [ %.057, %309 ], [ %.057, %302 ], [ %.057, %298 ], [ %.057, %297 ], [ %.057, %287 ], [ %.057, %277 ], [ %.057, %275 ], [ %.057, %263 ], [ %.057, %253 ], [ %.057, %252 ], [ %.057, %251 ], [ %.057, %240 ], [ %.057, %230 ], [ %.057, %229 ], [ %.057, %219 ], [ %.057, %209 ], [ %.057, %206 ], [ %.057, %204 ], [ %.057, %190 ], [ %.057, %180 ], [ %.057, %176 ], [ %.057, %175 ], [ %.057, %174 ], [ %.057, %164 ], [ %.057, %160 ], [ %.057, %159 ], [ %158, %157 ], [ %.057, %156 ], [ %.057, %144 ], [ %.057, %134 ], [ %.057, %132 ], [ %.057, %121 ], [ %.057, %111 ], [ %.057, %110 ], [ 0, %100 ], [ %.057, %90 ], [ %.057, %89 ], [ %.057, %78 ], [ %.057, %68 ], [ %.057, %67 ], [ %.057, %57 ], [ %.057, %47 ], [ %.057, %45 ], [ %.057, %44 ], [ %.057, %31 ], [ %.057, %21 ], [ %.057, %18 ], [ %.057, %17 ], [ %.057, %14 ]
  %.055.be = phi i32 [ %.055, %13 ], [ %.055, %482 ], [ %.055, %481 ], [ %.055, %475 ], [ %.055, %473 ], [ %.055, %472 ], [ %.055, %471 ], [ %.055, %470 ], [ %.055, %469 ], [ %.055, %467 ], [ %.055, %466 ], [ %.055, %465 ], [ %.055, %462 ], [ %.055, %461 ], [ %.055, %460 ], [ %.055, %459 ], [ %.055, %458 ], [ %.055, %454 ], [ %.055, %443 ], [ %.055, %433 ], [ %.055, %432 ], [ %.055, %431 ], [ %.055, %429 ], [ %.055, %428 ], [ %.055, %418 ], [ %.055, %408 ], [ %.055, %407 ], [ %.055, %406 ], [ %.055, %391 ], [ %.055, %381 ], [ %.055, %380 ], [ %.055, %369 ], [ %.055, %359 ], [ %.055, %357 ], [ %.055, %346 ], [ %.055, %336 ], [ %.055, %334 ], [ %.055, %332 ], [ %.055, %330 ], [ %.055, %319 ], [ %.055, %309 ], [ %.055, %302 ], [ %.055, %298 ], [ %.055, %297 ], [ %.055, %287 ], [ %.055, %277 ], [ %.055, %275 ], [ %.055, %263 ], [ %.055, %253 ], [ %.055, %252 ], [ %.055, %251 ], [ %.055, %240 ], [ %.055, %230 ], [ %.055, %229 ], [ %.055, %219 ], [ %.055, %209 ], [ %.055, %206 ], [ %.055, %204 ], [ %.055, %190 ], [ %.055, %180 ], [ %.055, %176 ], [ %.055, %175 ], [ %.neg68, %174 ], [ %.055, %164 ], [ %.055, %160 ], [ 0, %159 ], [ %.055, %157 ], [ %.055, %156 ], [ %.055, %144 ], [ %.055, %134 ], [ %.055, %132 ], [ %.055, %121 ], [ %.055, %111 ], [ %.055, %110 ], [ %.055, %100 ], [ %.055, %90 ], [ %.055, %89 ], [ %.055, %78 ], [ %.055, %68 ], [ %.055, %67 ], [ %.055, %57 ], [ %.055, %47 ], [ %.055, %45 ], [ %.055, %44 ], [ %.055, %31 ], [ %.055, %21 ], [ %.055, %18 ], [ %.055, %17 ], [ %.055, %14 ]
  %.053.be = phi i32 [ %.053, %13 ], [ %.053, %482 ], [ %.053, %481 ], [ %.053, %475 ], [ %.053, %473 ], [ %.053, %472 ], [ %.053, %471 ], [ %.053, %470 ], [ %.053, %469 ], [ %468, %467 ], [ %.053, %466 ], [ %.053, %465 ], [ %.053, %462 ], [ %.053, %461 ], [ %.053, %460 ], [ %.053, %459 ], [ %.053, %458 ], [ %.053, %454 ], [ %.053, %443 ], [ %.053, %433 ], [ %.053, %432 ], [ %.053, %431 ], [ %.053, %429 ], [ %.053, %428 ], [ %.053, %418 ], [ %.053, %408 ], [ %.053, %407 ], [ %.053, %406 ], [ %.053, %391 ], [ %.053, %381 ], [ %.053, %380 ], [ %.053, %369 ], [ %.053, %359 ], [ %.053, %357 ], [ %.053, %346 ], [ %.053, %336 ], [ %.053, %334 ], [ %.053, %332 ], [ %.053, %330 ], [ %.053, %319 ], [ %.053, %309 ], [ %.053, %302 ], [ %.053, %298 ], [ %.053, %297 ], [ %.053, %287 ], [ %.053, %277 ], [ %.053, %275 ], [ %.053, %263 ], [ %.053, %253 ], [ %.053, %252 ], [ %.053, %251 ], [ %241, %240 ], [ %.053, %230 ], [ %.053, %229 ], [ %.053, %219 ], [ %.053, %209 ], [ %.053, %206 ], [ %.053, %204 ], [ %.053, %190 ], [ %.053, %180 ], [ %.053, %176 ], [ 0, %175 ], [ %.053, %174 ], [ %.053, %164 ], [ %.053, %160 ], [ %.053, %159 ], [ %.053, %157 ], [ %.053, %156 ], [ %.053, %144 ], [ %.053, %134 ], [ %.053, %132 ], [ %.053, %121 ], [ %.053, %111 ], [ %.053, %110 ], [ %.053, %100 ], [ %.053, %90 ], [ %.053, %89 ], [ %.053, %78 ], [ %.053, %68 ], [ %.053, %67 ], [ %.053, %57 ], [ %.053, %47 ], [ %.053, %45 ], [ %.053, %44 ], [ %.053, %31 ], [ %.053, %21 ], [ %.053, %18 ], [ %.053, %17 ], [ %.053, %14 ]
  %.051.be = phi i32 [ %.051, %13 ], [ %.051, %482 ], [ %.051, %481 ], [ %.051, %475 ], [ %.051, %473 ], [ %.051, %472 ], [ %.051, %471 ], [ %.051, %470 ], [ %.051, %469 ], [ %.051, %467 ], [ %.051, %466 ], [ %.051, %465 ], [ %.051, %462 ], [ %.051, %461 ], [ %.051, %460 ], [ %.051, %459 ], [ %.051, %458 ], [ %.051, %454 ], [ %.051, %443 ], [ %.051, %433 ], [ %.051, %432 ], [ %.neg66, %431 ], [ %.051, %429 ], [ %.051, %428 ], [ %.051, %418 ], [ %.051, %408 ], [ %.051, %407 ], [ %.051, %406 ], [ %.051, %391 ], [ %.051, %381 ], [ %.051, %380 ], [ %.051, %369 ], [ %.051, %359 ], [ %.051, %357 ], [ %.051, %346 ], [ %.051, %336 ], [ %.051, %334 ], [ %.051, %332 ], [ %.051, %330 ], [ %.051, %319 ], [ %.051, %309 ], [ %.051, %302 ], [ %.051, %298 ], [ %.051, %297 ], [ %.051, %287 ], [ %.051, %277 ], [ %.051, %275 ], [ %.051, %263 ], [ %.051, %253 ], [ 0, %252 ], [ %.051, %251 ], [ %.051, %240 ], [ %.051, %230 ], [ %.051, %229 ], [ %.051, %219 ], [ %.051, %209 ], [ %.051, %206 ], [ %.051, %204 ], [ %.051, %190 ], [ %.051, %180 ], [ %.051, %176 ], [ %.051, %175 ], [ %.051, %174 ], [ %.051, %164 ], [ %.051, %160 ], [ %.051, %159 ], [ %.051, %157 ], [ %.051, %156 ], [ %.051, %144 ], [ %.051, %134 ], [ %.051, %132 ], [ %.051, %121 ], [ %.051, %111 ], [ %.051, %110 ], [ %.051, %100 ], [ %.051, %90 ], [ %.051, %89 ], [ %.051, %78 ], [ %.051, %68 ], [ %.051, %67 ], [ %.051, %57 ], [ %.051, %47 ], [ %.051, %45 ], [ %.051, %44 ], [ %.051, %31 ], [ %.051, %21 ], [ %.051, %18 ], [ %.051, %17 ], [ %.051, %14 ]
  %.049.be = phi i32 [ %.049, %13 ], [ %.049, %482 ], [ %.neg, %481 ], [ %.049, %475 ], [ %.049, %473 ], [ %.049, %472 ], [ %.049, %471 ], [ 0, %470 ], [ %.049, %469 ], [ %.049, %467 ], [ %.049, %466 ], [ %.049, %465 ], [ %.049, %462 ], [ %.049, %461 ], [ %.049, %460 ], [ %.049, %459 ], [ %.049, %458 ], [ %.049, %454 ], [ %.049, %443 ], [ %.049, %433 ], [ %.049, %432 ], [ %.049, %431 ], [ %.049, %429 ], [ %.049, %428 ], [ %.neg67, %418 ], [ %.049, %408 ], [ %.049, %407 ], [ %.049, %406 ], [ %.049, %391 ], [ %.049, %381 ], [ %.049, %380 ], [ %.049, %369 ], [ %.049, %359 ], [ %.049, %357 ], [ %.049, %346 ], [ %.049, %336 ], [ %.049, %334 ], [ %.049, %332 ], [ %.049, %330 ], [ %.049, %319 ], [ %.049, %309 ], [ %.049, %302 ], [ %.049, %298 ], [ %.049, %297 ], [ 0, %287 ], [ %.049, %277 ], [ %.049, %275 ], [ %.049, %263 ], [ %.049, %253 ], [ %.049, %252 ], [ %.049, %251 ], [ %.049, %240 ], [ %.049, %230 ], [ %.049, %229 ], [ %.049, %219 ], [ %.049, %209 ], [ %.049, %206 ], [ %.049, %204 ], [ %.049, %190 ], [ %.049, %180 ], [ %.049, %176 ], [ %.049, %175 ], [ %.049, %174 ], [ %.049, %164 ], [ %.049, %160 ], [ %.049, %159 ], [ %.049, %157 ], [ %.049, %156 ], [ %.049, %144 ], [ %.049, %134 ], [ %.049, %132 ], [ %.049, %121 ], [ %.049, %111 ], [ %.049, %110 ], [ %.049, %100 ], [ %.049, %90 ], [ %.049, %89 ], [ %.049, %78 ], [ %.049, %68 ], [ %.049, %67 ], [ %.049, %57 ], [ %.049, %47 ], [ %.049, %45 ], [ %.049, %44 ], [ %.049, %31 ], [ %.049, %21 ], [ %.049, %18 ], [ %.049, %17 ], [ %.049, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ -1402102438, %482 ], [ 148018636, %481 ], [ 1812390976, %475 ], [ -112648671, %473 ], [ 332092651, %472 ], [ 1650301792, %471 ], [ -2001416754, %470 ], [ -2099682398, %469 ], [ 1705844672, %467 ], [ 1561172336, %466 ], [ 1152817468, %465 ], [ 683776082, %462 ], [ -1007012851, %461 ], [ 1037099954, %460 ], [ 1080220347, %459 ], [ 136491222, %458 ], [ 363888402, %454 ], [ %452, %443 ], [ %442, %433 ], [ 749072586, %432 ], [ -572385579, %431 ], [ -1136011801, %429 ], [ 1049890329, %428 ], [ %427, %418 ], [ %417, %408 ], [ -843917961, %407 ], [ 625177611, %406 ], [ %405, %391 ], [ %390, %381 ], [ 1700280203, %380 ], [ %379, %369 ], [ %368, %359 ], [ %358, %357 ], [ %356, %346 ], [ %345, %336 ], [ 625177611, %334 ], [ 210662288, %332 ], [ %331, %330 ], [ %329, %319 ], [ %318, %309 ], [ %308, %302 ], [ %301, %298 ], [ 1049890329, %297 ], [ %296, %287 ], [ %286, %277 ], [ %276, %275 ], [ %274, %263 ], [ %262, %253 ], [ -572385579, %252 ], [ -203503314, %251 ], [ %250, %240 ], [ %239, %230 ], [ -1926708462, %229 ], [ %228, %219 ], [ %218, %209 ], [ 749072586, %206 ], [ %205, %204 ], [ %203, %190 ], [ %189, %180 ], [ %179, %176 ], [ -203503314, %175 ], [ -1669202701, %174 ], [ 1798956819, %164 ], [ %163, %160 ], [ -1669202701, %159 ], [ -1517835276, %157 ], [ -253730065, %156 ], [ %155, %144 ], [ %143, %134 ], [ %133, %132 ], [ %131, %121 ], [ %120, %111 ], [ -1517835276, %110 ], [ %109, %100 ], [ %99, %90 ], [ -2111693798, %89 ], [ %88, %78 ], [ %77, %68 ], [ 200908396, %67 ], [ %66, %57 ], [ %56, %47 ], [ 779500323, %45 ], [ 1222352525, %44 ], [ %43, %31 ], [ %30, %21 ], [ %20, %18 ], [ 779500323, %17 ], [ %16, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = icmp slt i32 %.061, 110
  %16 = select i1 %15, i32 461899408, i32 1887960436
  br label %.backedge

17:                                               ; preds = %13
  br label %.backedge

18:                                               ; preds = %13
  %19 = icmp slt i32 %.059, 110
  %20 = select i1 %19, i32 1094050574, i32 27055829
  br label %.backedge

21:                                               ; preds = %13
  %22 = load i32, i32* @x.7, align 4
  %23 = load i32, i32* @y.8, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 363888402, i32 1810603754
  br label %.backedge

31:                                               ; preds = %13
  %32 = sext i32 %.061 to i64
  %33 = sext i32 %.059 to i64
  %34 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %32, i64 %33
  store i64 10000000000, i64* %34, align 8
  %35 = load i32, i32* @x.7, align 4
  %36 = load i32, i32* @y.8, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1866413585, i32 1810603754
  br label %.backedge

44:                                               ; preds = %13
  br label %.backedge

45:                                               ; preds = %13
  %46 = add i32 %.059, 1
  br label %.backedge

47:                                               ; preds = %13
  %48 = load i32, i32* @x.7, align 4
  %49 = load i32, i32* @y.8, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 136491222, i32 222281233
  br label %.backedge

57:                                               ; preds = %13
  %58 = load i32, i32* @x.7, align 4
  %59 = load i32, i32* @y.8, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -975976947, i32 222281233
  br label %.backedge

67:                                               ; preds = %13
  br label %.backedge

68:                                               ; preds = %13
  %69 = load i32, i32* @x.7, align 4
  %70 = load i32, i32* @y.8, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 1080220347, i32 1452534159
  br label %.backedge

78:                                               ; preds = %13
  %79 = add i32 %.061, 1
  %80 = load i32, i32* @x.7, align 4
  %81 = load i32, i32* @y.8, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 -1027597566, i32 1452534159
  br label %.backedge

89:                                               ; preds = %13
  br label %.backedge

90:                                               ; preds = %13
  %91 = load i32, i32* @x.7, align 4
  %92 = load i32, i32* @y.8, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 1037099954, i32 -504024161
  br label %.backedge

100:                                              ; preds = %13
  %101 = load i32, i32* @x.7, align 4
  %102 = load i32, i32* @y.8, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 -117671866, i32 -504024161
  br label %.backedge

110:                                              ; preds = %13
  br label %.backedge

111:                                              ; preds = %13
  %112 = load i32, i32* @x.7, align 4
  %113 = load i32, i32* @y.8, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 -1007012851, i32 722693010
  br label %.backedge

121:                                              ; preds = %13
  %122 = icmp slt i32 %.057, 110
  store i1 %122, i1* %6, align 1
  %123 = load i32, i32* @x.7, align 4
  %124 = load i32, i32* @y.8, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 1982687403, i32 722693010
  br label %.backedge

132:                                              ; preds = %13
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %133 = select i1 %.0..0..0., i32 -485369723, i32 -1415825849
  br label %.backedge

134:                                              ; preds = %13
  %135 = load i32, i32* @x.7, align 4
  %136 = load i32, i32* @y.8, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 683776082, i32 68559866
  br label %.backedge

144:                                              ; preds = %13
  %145 = sext i32 %.057 to i64
  %146 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %145, i64 %145
  store i64 0, i64* %146, align 8
  %147 = load i32, i32* @x.7, align 4
  %148 = load i32, i32* @y.8, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 825976957, i32 68559866
  br label %.backedge

156:                                              ; preds = %13
  br label %.backedge

157:                                              ; preds = %13
  %158 = add i32 %.057, 1
  br label %.backedge

159:                                              ; preds = %13
  br label %.backedge

160:                                              ; preds = %13
  %161 = load i32, i32* %7, align 4
  %162 = icmp slt i32 %.055, %161
  %163 = select i1 %162, i32 1701855846, i32 482311900
  br label %.backedge

164:                                              ; preds = %13
  %165 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %166 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %165, i32* nonnull dereferenceable(4) %9)
  %167 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %166, i64* nonnull dereferenceable(8) %10)
  %168 = load i64, i64* %10, align 8
  %169 = load i32, i32* %8, align 4
  %170 = sext i32 %169 to i64
  %171 = load i32, i32* %9, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %170, i64 %172
  store i64 %168, i64* %173, align 8
  br label %.backedge

174:                                              ; preds = %13
  %.neg68 = add i32 %.055, 1
  br label %.backedge

175:                                              ; preds = %13
  call void @_Z14warshall_floydv()
  br label %.backedge

176:                                              ; preds = %13
  %177 = load i32, i32* @V, align 4
  %178 = icmp slt i32 %.053, %177
  %179 = select i1 %178, i32 -1143622406, i32 -1694393403
  br label %.backedge

180:                                              ; preds = %13
  %181 = load i32, i32* @x.7, align 4
  %182 = load i32, i32* @y.8, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 1152817468, i32 -921762034
  br label %.backedge

190:                                              ; preds = %13
  %191 = sext i32 %.053 to i64
  %192 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %191, i64 %191
  %193 = load i64, i64* %192, align 8
  %194 = icmp ne i64 %193, 0
  store i1 %194, i1* %5, align 1
  %195 = load i32, i32* @x.7, align 4
  %196 = load i32, i32* @y.8, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 398649621, i32 -921762034
  br label %.backedge

204:                                              ; preds = %13
  %.0..0..0.44 = load volatile i1, i1* %5, align 1
  %205 = select i1 %.0..0..0.44, i32 -677292405, i32 921066588
  br label %.backedge

206:                                              ; preds = %13
  %207 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %208 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %207, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

209:                                              ; preds = %13
  %210 = load i32, i32* @x.7, align 4
  %211 = load i32, i32* @y.8, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 1561172336, i32 528732949
  br label %.backedge

219:                                              ; preds = %13
  %220 = load i32, i32* @x.7, align 4
  %221 = load i32, i32* @y.8, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 360294192, i32 528732949
  br label %.backedge

229:                                              ; preds = %13
  br label %.backedge

230:                                              ; preds = %13
  %231 = load i32, i32* @x.7, align 4
  %232 = load i32, i32* @y.8, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 1705844672, i32 -669910180
  br label %.backedge

240:                                              ; preds = %13
  %241 = add i32 %.053, 1
  %242 = load i32, i32* @x.7, align 4
  %243 = load i32, i32* @y.8, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 -1965864147, i32 -669910180
  br label %.backedge

251:                                              ; preds = %13
  br label %.backedge

252:                                              ; preds = %13
  br label %.backedge

253:                                              ; preds = %13
  %254 = load i32, i32* @x.7, align 4
  %255 = load i32, i32* @y.8, align 4
  %256 = add i32 %254, -1
  %257 = mul i32 %256, %254
  %258 = and i32 %257, 1
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %260, %259
  %262 = select i1 %261, i32 -2099682398, i32 -343473506
  br label %.backedge

263:                                              ; preds = %13
  %264 = load i32, i32* @V, align 4
  %265 = icmp slt i32 %.051, %264
  store i1 %265, i1* %4, align 1
  %266 = load i32, i32* @x.7, align 4
  %267 = load i32, i32* @y.8, align 4
  %268 = add i32 %266, -1
  %269 = mul i32 %268, %266
  %270 = and i32 %269, 1
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %272, %271
  %274 = select i1 %273, i32 887966656, i32 -343473506
  br label %.backedge

275:                                              ; preds = %13
  %.0..0..0.45 = load volatile i1, i1* %4, align 1
  %276 = select i1 %.0..0..0.45, i32 1702890741, i32 -519934687
  br label %.backedge

277:                                              ; preds = %13
  %278 = load i32, i32* @x.7, align 4
  %279 = load i32, i32* @y.8, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 -2001416754, i32 -313602186
  br label %.backedge

287:                                              ; preds = %13
  %288 = load i32, i32* @x.7, align 4
  %289 = load i32, i32* @y.8, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 1942657904, i32 -313602186
  br label %.backedge

297:                                              ; preds = %13
  br label %.backedge

298:                                              ; preds = %13
  %299 = load i32, i32* @V, align 4
  %300 = icmp slt i32 %.049, %299
  %301 = select i1 %300, i32 2126128288, i32 1675442856
  br label %.backedge

302:                                              ; preds = %13
  %303 = sext i32 %.051 to i64
  %304 = sext i32 %.049 to i64
  %305 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %303, i64 %304
  %306 = load i64, i64* %305, align 8
  %307 = icmp sgt i64 %306, 4999999999
  %308 = select i1 %307, i32 554094328, i32 1658552423
  br label %.backedge

309:                                              ; preds = %13
  %310 = load i32, i32* @x.7, align 4
  %311 = load i32, i32* @y.8, align 4
  %312 = add i32 %310, -1
  %313 = mul i32 %312, %310
  %314 = and i32 %313, 1
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %316, %315
  %318 = select i1 %317, i32 1650301792, i32 -1346453145
  br label %.backedge

319:                                              ; preds = %13
  %320 = icmp ne i32 %.049, 0
  store i1 %320, i1* %3, align 1
  %321 = load i32, i32* @x.7, align 4
  %322 = load i32, i32* @y.8, align 4
  %323 = add i32 %321, -1
  %324 = mul i32 %323, %321
  %325 = and i32 %324, 1
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %327, %326
  %329 = select i1 %328, i32 -1286377469, i32 -1346453145
  br label %.backedge

330:                                              ; preds = %13
  %.0..0..0.46 = load volatile i1, i1* %3, align 1
  %331 = select i1 %.0..0..0.46, i32 340619877, i32 210662288
  br label %.backedge

332:                                              ; preds = %13
  %333 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

334:                                              ; preds = %13
  %335 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

336:                                              ; preds = %13
  %337 = load i32, i32* @x.7, align 4
  %338 = load i32, i32* @y.8, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 332092651, i32 657828677
  br label %.backedge

346:                                              ; preds = %13
  %347 = icmp ne i32 %.049, 0
  store i1 %347, i1* %2, align 1
  %348 = load i32, i32* @x.7, align 4
  %349 = load i32, i32* @y.8, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 -1763272626, i32 657828677
  br label %.backedge

357:                                              ; preds = %13
  %.0..0..0.47 = load volatile i1, i1* %2, align 1
  %358 = select i1 %.0..0..0.47, i32 1963654741, i32 1700280203
  br label %.backedge

359:                                              ; preds = %13
  %360 = load i32, i32* @x.7, align 4
  %361 = load i32, i32* @y.8, align 4
  %362 = add i32 %360, -1
  %363 = mul i32 %362, %360
  %364 = and i32 %363, 1
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %366, %365
  %368 = select i1 %367, i32 -112648671, i32 -2135932686
  br label %.backedge

369:                                              ; preds = %13
  %370 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %371 = load i32, i32* @x.7, align 4
  %372 = load i32, i32* @y.8, align 4
  %373 = add i32 %371, -1
  %374 = mul i32 %373, %371
  %375 = and i32 %374, 1
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %377, %376
  %379 = select i1 %378, i32 865307978, i32 -2135932686
  br label %.backedge

380:                                              ; preds = %13
  br label %.backedge

381:                                              ; preds = %13
  %382 = load i32, i32* @x.7, align 4
  %383 = load i32, i32* @y.8, align 4
  %384 = add i32 %382, -1
  %385 = mul i32 %384, %382
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %388, %387
  %390 = select i1 %389, i32 1812390976, i32 -1577277126
  br label %.backedge

391:                                              ; preds = %13
  %392 = sext i32 %.051 to i64
  %393 = sext i32 %.049 to i64
  %394 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %392, i64 %393
  %395 = load i64, i64* %394, align 8
  %396 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %395)
  %397 = load i32, i32* @x.7, align 4
  %398 = load i32, i32* @y.8, align 4
  %399 = add i32 %397, -1
  %400 = mul i32 %399, %397
  %401 = and i32 %400, 1
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %403, %402
  %405 = select i1 %404, i32 -1543779068, i32 -1577277126
  br label %.backedge

406:                                              ; preds = %13
  br label %.backedge

407:                                              ; preds = %13
  br label %.backedge

408:                                              ; preds = %13
  %409 = load i32, i32* @x.7, align 4
  %410 = load i32, i32* @y.8, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 148018636, i32 -1014170
  br label %.backedge

418:                                              ; preds = %13
  %.neg67 = add i32 %.049, 1
  %419 = load i32, i32* @x.7, align 4
  %420 = load i32, i32* @y.8, align 4
  %421 = add i32 %419, -1
  %422 = mul i32 %421, %419
  %423 = and i32 %422, 1
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %425, %424
  %427 = select i1 %426, i32 567368392, i32 -1014170
  br label %.backedge

428:                                              ; preds = %13
  br label %.backedge

429:                                              ; preds = %13
  %430 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

431:                                              ; preds = %13
  %.neg66 = add i32 %.051, 1
  br label %.backedge

432:                                              ; preds = %13
  br label %.backedge

433:                                              ; preds = %13
  %434 = load i32, i32* @x.7, align 4
  %435 = load i32, i32* @y.8, align 4
  %436 = add i32 %434, -1
  %437 = mul i32 %436, %434
  %438 = and i32 %437, 1
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %440, %439
  %442 = select i1 %441, i32 -1402102438, i32 2031175423
  br label %.backedge

443:                                              ; preds = %13
  store i32 0, i32* %1, align 4
  %444 = load i32, i32* @x.7, align 4
  %445 = load i32, i32* @y.8, align 4
  %446 = add i32 %444, -1
  %447 = mul i32 %446, %444
  %448 = and i32 %447, 1
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %450, %449
  %452 = select i1 %451, i32 227494095, i32 2031175423
  br label %.backedge

453:                                              ; preds = %13
  %.0..0..0.48 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.48

454:                                              ; preds = %13
  %455 = sext i32 %.061 to i64
  %456 = sext i32 %.059 to i64
  %457 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %455, i64 %456
  store i64 10000000000, i64* %457, align 8
  br label %.backedge

458:                                              ; preds = %13
  br label %.backedge

459:                                              ; preds = %13
  %.neg65 = add i32 %.061, 1
  br label %.backedge

460:                                              ; preds = %13
  br label %.backedge

461:                                              ; preds = %13
  br label %.backedge

462:                                              ; preds = %13
  %463 = sext i32 %.057 to i64
  %464 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %463, i64 %463
  store i64 0, i64* %464, align 8
  br label %.backedge

465:                                              ; preds = %13
  br label %.backedge

466:                                              ; preds = %13
  br label %.backedge

467:                                              ; preds = %13
  %468 = add i32 %.053, 1
  br label %.backedge

469:                                              ; preds = %13
  br label %.backedge

470:                                              ; preds = %13
  br label %.backedge

471:                                              ; preds = %13
  br label %.backedge

472:                                              ; preds = %13
  br label %.backedge

473:                                              ; preds = %13
  %474 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

475:                                              ; preds = %13
  %476 = sext i32 %.051 to i64
  %477 = sext i32 %.049 to i64
  %478 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @d, i64 0, i64 %476, i64 %477
  %479 = load i64, i64* %478, align 8
  %480 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %479)
  br label %.backedge

481:                                              ; preds = %13
  %.neg = add i32 %.049, 1
  br label %.backedge

482:                                              ; preds = %13
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s982376270.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
