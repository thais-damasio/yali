; ModuleID = 'build_ollvm/programs/p02363/s378034494.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s378034494.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@v = global i32 0, align 4
@e = global i32 0, align 4
@s = global [9901 x i32] zeroinitializer, align 16
@t = global [9901 x i32] zeroinitializer, align 16
@d = global [9901 x i32] zeroinitializer, align 16
@a = local_unnamed_addr global [101 x [101 x i64]] zeroinitializer, align 16
@s1 = local_unnamed_addr global i64 0, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s378034494.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @v)
  %7 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %6, i32* nonnull dereferenceable(4) @e)
  br label %8

8:                                                ; preds = %.backedge, %0
  %.099 = phi i32 [ 0, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i32 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.0 = phi i32 [ 1611639840, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1611639840, label %9
    i32 234554950, label %13
    i32 1388984388, label %14
    i32 1282177586, label %18
    i32 1781288875, label %28
    i32 1637042801, label %41
    i32 -1170077813, label %42
    i32 -598023629, label %44
    i32 28255003, label %45
    i32 -1093132515, label %55
    i32 -1386659680, label %65
    i32 -290814960, label %66
    i32 -1925708890, label %67
    i32 2088055022, label %71
    i32 -399976369, label %86
    i32 -1963960247, label %88
    i32 337608641, label %89
    i32 -418394231, label %93
    i32 1106956694, label %103
    i32 -1995778685, label %113
    i32 -1014091860, label %114
    i32 1275313886, label %118
    i32 1368565811, label %119
    i32 -1574496604, label %129
    i32 1923714248, label %141
    i32 1084533220, label %143
    i32 1623616955, label %153
    i32 2071790870, label %174
    i32 1322403149, label %176
    i32 1289684387, label %186
    i32 374879372, label %205
    i32 -2106357772, label %206
    i32 -1284020253, label %216
    i32 1501074959, label %234
    i32 459197121, label %236
    i32 99731872, label %246
    i32 -49091039, label %258
    i32 -1054896415, label %259
    i32 -755636443, label %269
    i32 -317536337, label %279
    i32 647731883, label %280
    i32 -9680164, label %281
    i32 638218919, label %282
    i32 -845351729, label %284
    i32 813738679, label %294
    i32 -128992884, label %304
    i32 851833496, label %305
    i32 883022088, label %307
    i32 923959609, label %311
    i32 282261743, label %321
    i32 -85726875, label %331
    i32 -322231801, label %332
    i32 -1516891803, label %336
    i32 -292907967, label %337
    i32 293634854, label %347
    i32 -979002092, label %359
    i32 1744066632, label %361
    i32 648585241, label %363
    i32 -1052704841, label %365
    i32 -1183688390, label %375
    i32 -1676876641, label %390
    i32 1328507539, label %392
    i32 -1392111615, label %394
    i32 -144742027, label %404
    i32 -1967859613, label %415
    i32 -175304619, label %416
    i32 1096513689, label %419
    i32 835833230, label %421
    i32 498937693, label %428
    i32 149319637, label %430
    i32 460188559, label %440
    i32 -1762080005, label %455
    i32 -1706035915, label %456
    i32 116605678, label %457
    i32 -374144548, label %467
    i32 -10865080, label %477
    i32 -875436164, label %478
    i32 2028247717, label %480
    i32 -1913894004, label %482
    i32 1683790690, label %483
    i32 -1216745566, label %486
    i32 1463929831, label %487
    i32 2045720689, label %491
    i32 2045246406, label %493
    i32 -684867014, label %494
    i32 -128726648, label %495
    i32 803289946, label %496
    i32 -614734881, label %506
    i32 1643844703, label %507
    i32 -757293380, label %510
    i32 1899777815, label %511
    i32 -1976562173, label %512
    i32 1070067928, label %513
    i32 1167875302, label %514
    i32 971595951, label %515
    i32 112948065, label %517
    i32 1398010378, label %523
  ]

.backedge:                                        ; preds = %8, %523, %517, %515, %514, %513, %512, %511, %510, %507, %506, %496, %495, %494, %493, %491, %487, %483, %482, %480, %478, %477, %467, %457, %456, %455, %440, %430, %428, %421, %419, %416, %415, %404, %394, %392, %390, %375, %365, %363, %361, %359, %347, %337, %336, %332, %331, %321, %311, %307, %305, %304, %294, %284, %282, %281, %280, %279, %269, %259, %258, %246, %236, %234, %216, %206, %205, %186, %176, %174, %153, %143, %141, %129, %119, %118, %114, %113, %103, %93, %89, %88, %86, %71, %67, %66, %65, %55, %45, %44, %42, %41, %28, %18, %14, %13, %9
  %.099.be = phi i32 [ %.099, %8 ], [ %.099, %523 ], [ %.099, %517 ], [ %.099, %515 ], [ %.099, %514 ], [ %.099, %513 ], [ %.099, %512 ], [ %.099, %511 ], [ %.099, %510 ], [ %.099, %507 ], [ %.099, %506 ], [ %.099, %496 ], [ %.099, %495 ], [ %.099, %494 ], [ %.099, %493 ], [ %492, %491 ], [ %.099, %487 ], [ %.099, %483 ], [ %.099, %482 ], [ %.099, %480 ], [ %.099, %478 ], [ %.099, %477 ], [ %.099, %467 ], [ %.099, %457 ], [ %.099, %456 ], [ %.099, %455 ], [ %.099, %440 ], [ %.099, %430 ], [ %.099, %428 ], [ %.099, %421 ], [ %.099, %419 ], [ %.099, %416 ], [ %.099, %415 ], [ %.099, %404 ], [ %.099, %394 ], [ %.099, %392 ], [ %.099, %390 ], [ %.099, %375 ], [ %.099, %365 ], [ %.099, %363 ], [ %.099, %361 ], [ %.099, %359 ], [ %.099, %347 ], [ %.099, %337 ], [ %.099, %336 ], [ %.099, %332 ], [ %.099, %331 ], [ %.099, %321 ], [ %.099, %311 ], [ %.099, %307 ], [ %.099, %305 ], [ %.099, %304 ], [ %.099, %294 ], [ %.099, %284 ], [ %.099, %282 ], [ %.099, %281 ], [ %.099, %280 ], [ %.099, %279 ], [ %.099, %269 ], [ %.099, %259 ], [ %.099, %258 ], [ %.099, %246 ], [ %.099, %236 ], [ %.099, %234 ], [ %.099, %216 ], [ %.099, %206 ], [ %.099, %205 ], [ %.099, %186 ], [ %.099, %176 ], [ %.099, %174 ], [ %.099, %153 ], [ %.099, %143 ], [ %.099, %141 ], [ %.099, %129 ], [ %.099, %119 ], [ %.099, %118 ], [ %.099, %114 ], [ %.099, %113 ], [ %.099, %103 ], [ %.099, %93 ], [ %.099, %89 ], [ %.099, %88 ], [ %.099, %86 ], [ %.099, %71 ], [ %.099, %67 ], [ %.099, %66 ], [ %.099, %65 ], [ %.neg104, %55 ], [ %.099, %45 ], [ %.099, %44 ], [ %.099, %42 ], [ %.099, %41 ], [ %.099, %28 ], [ %.099, %18 ], [ %.099, %14 ], [ %.099, %13 ], [ %.099, %9 ]
  %.097.be = phi i32 [ %.097, %8 ], [ %.097, %523 ], [ %.097, %517 ], [ %.097, %515 ], [ %.097, %514 ], [ %.097, %513 ], [ %.097, %512 ], [ %.097, %511 ], [ %.097, %510 ], [ %.097, %507 ], [ %.097, %506 ], [ %.097, %496 ], [ %.097, %495 ], [ %.097, %494 ], [ %.097, %493 ], [ %.097, %491 ], [ %.097, %487 ], [ %.097, %483 ], [ %.097, %482 ], [ %.097, %480 ], [ %.097, %478 ], [ %.097, %477 ], [ %.097, %467 ], [ %.097, %457 ], [ %.097, %456 ], [ %.097, %455 ], [ %.097, %440 ], [ %.097, %430 ], [ %.097, %428 ], [ %.097, %421 ], [ %.097, %419 ], [ %.097, %416 ], [ %.097, %415 ], [ %.097, %404 ], [ %.097, %394 ], [ %.097, %392 ], [ %.097, %390 ], [ %.097, %375 ], [ %.097, %365 ], [ %.097, %363 ], [ %.097, %361 ], [ %.097, %359 ], [ %.097, %347 ], [ %.097, %337 ], [ %.097, %336 ], [ %.097, %332 ], [ %.097, %331 ], [ %.097, %321 ], [ %.097, %311 ], [ %.097, %307 ], [ %.097, %305 ], [ %.097, %304 ], [ %.097, %294 ], [ %.097, %284 ], [ %.097, %282 ], [ %.097, %281 ], [ %.097, %280 ], [ %.097, %279 ], [ %.097, %269 ], [ %.097, %259 ], [ %.097, %258 ], [ %.097, %246 ], [ %.097, %236 ], [ %.097, %234 ], [ %.097, %216 ], [ %.097, %206 ], [ %.097, %205 ], [ %.097, %186 ], [ %.097, %176 ], [ %.097, %174 ], [ %.097, %153 ], [ %.097, %143 ], [ %.097, %141 ], [ %.097, %129 ], [ %.097, %119 ], [ %.097, %118 ], [ %.097, %114 ], [ %.097, %113 ], [ %.097, %103 ], [ %.097, %93 ], [ %.097, %89 ], [ %.097, %88 ], [ %.097, %86 ], [ %.097, %71 ], [ %.097, %67 ], [ %.097, %66 ], [ %.097, %65 ], [ %.097, %55 ], [ %.097, %45 ], [ %.097, %44 ], [ %43, %42 ], [ %.097, %41 ], [ %.097, %28 ], [ %.097, %18 ], [ %.097, %14 ], [ 0, %13 ], [ %.097, %9 ]
  %.095.be = phi i32 [ %.095, %8 ], [ %.095, %523 ], [ %.095, %517 ], [ %.095, %515 ], [ %.095, %514 ], [ %.095, %513 ], [ %.095, %512 ], [ %.095, %511 ], [ %.095, %510 ], [ %.095, %507 ], [ %.095, %506 ], [ %.095, %496 ], [ %.095, %495 ], [ %.095, %494 ], [ %.095, %493 ], [ %.095, %491 ], [ %.095, %487 ], [ %.095, %483 ], [ %.095, %482 ], [ %.095, %480 ], [ %.095, %478 ], [ %.095, %477 ], [ %.095, %467 ], [ %.095, %457 ], [ %.095, %456 ], [ %.095, %455 ], [ %.095, %440 ], [ %.095, %430 ], [ %.095, %428 ], [ %.095, %421 ], [ %.095, %419 ], [ %.095, %416 ], [ %.095, %415 ], [ %.095, %404 ], [ %.095, %394 ], [ %.095, %392 ], [ %.095, %390 ], [ %.095, %375 ], [ %.095, %365 ], [ %.095, %363 ], [ %.095, %361 ], [ %.095, %359 ], [ %.095, %347 ], [ %.095, %337 ], [ %.095, %336 ], [ %.095, %332 ], [ %.095, %331 ], [ %.095, %321 ], [ %.095, %311 ], [ %.095, %307 ], [ %.095, %305 ], [ %.095, %304 ], [ %.095, %294 ], [ %.095, %284 ], [ %.095, %282 ], [ %.095, %281 ], [ %.095, %280 ], [ %.095, %279 ], [ %.095, %269 ], [ %.095, %259 ], [ %.095, %258 ], [ %.095, %246 ], [ %.095, %236 ], [ %.095, %234 ], [ %.095, %216 ], [ %.095, %206 ], [ %.095, %205 ], [ %.095, %186 ], [ %.095, %176 ], [ %.095, %174 ], [ %.095, %153 ], [ %.095, %143 ], [ %.095, %141 ], [ %.095, %129 ], [ %.095, %119 ], [ %.095, %118 ], [ %.095, %114 ], [ %.095, %113 ], [ %.095, %103 ], [ %.095, %93 ], [ %.095, %89 ], [ %.095, %88 ], [ %87, %86 ], [ %.095, %71 ], [ %.095, %67 ], [ 0, %66 ], [ %.095, %65 ], [ %.095, %55 ], [ %.095, %45 ], [ %.095, %44 ], [ %.095, %42 ], [ %.095, %41 ], [ %.095, %28 ], [ %.095, %18 ], [ %.095, %14 ], [ %.095, %13 ], [ %.095, %9 ]
  %.093.be = phi i32 [ %.093, %8 ], [ %.093, %523 ], [ %.093, %517 ], [ %.093, %515 ], [ %.093, %514 ], [ %.093, %513 ], [ %.093, %512 ], [ %.093, %511 ], [ %.093, %510 ], [ %.093, %507 ], [ %.093, %506 ], [ %.093, %496 ], [ %.093, %495 ], [ %.093, %494 ], [ %.093, %493 ], [ %.093, %491 ], [ %.093, %487 ], [ %.093, %483 ], [ %.093, %482 ], [ %.093, %480 ], [ %.093, %478 ], [ %.093, %477 ], [ %.093, %467 ], [ %.093, %457 ], [ %.093, %456 ], [ %.093, %455 ], [ %.093, %440 ], [ %.093, %430 ], [ %.093, %428 ], [ %.093, %421 ], [ %.093, %419 ], [ %.093, %416 ], [ %.093, %415 ], [ %.093, %404 ], [ %.093, %394 ], [ %.093, %392 ], [ %.093, %390 ], [ %.093, %375 ], [ %.093, %365 ], [ %.093, %363 ], [ %.093, %361 ], [ %.093, %359 ], [ %.093, %347 ], [ %.093, %337 ], [ %.093, %336 ], [ %.093, %332 ], [ %.093, %331 ], [ %.093, %321 ], [ %.093, %311 ], [ %.093, %307 ], [ %306, %305 ], [ %.093, %304 ], [ %.093, %294 ], [ %.093, %284 ], [ %.093, %282 ], [ %.093, %281 ], [ %.093, %280 ], [ %.093, %279 ], [ %.093, %269 ], [ %.093, %259 ], [ %.093, %258 ], [ %.093, %246 ], [ %.093, %236 ], [ %.093, %234 ], [ %.093, %216 ], [ %.093, %206 ], [ %.093, %205 ], [ %.093, %186 ], [ %.093, %176 ], [ %.093, %174 ], [ %.093, %153 ], [ %.093, %143 ], [ %.093, %141 ], [ %.093, %129 ], [ %.093, %119 ], [ %.093, %118 ], [ %.093, %114 ], [ %.093, %113 ], [ %.093, %103 ], [ %.093, %93 ], [ %.093, %89 ], [ 0, %88 ], [ %.093, %86 ], [ %.093, %71 ], [ %.093, %67 ], [ %.093, %66 ], [ %.093, %65 ], [ %.093, %55 ], [ %.093, %45 ], [ %.093, %44 ], [ %.093, %42 ], [ %.093, %41 ], [ %.093, %28 ], [ %.093, %18 ], [ %.093, %14 ], [ %.093, %13 ], [ %.093, %9 ]
  %.091.be = phi i32 [ %.091, %8 ], [ %.091, %523 ], [ %.091, %517 ], [ %.091, %515 ], [ %.091, %514 ], [ %.091, %513 ], [ %.091, %512 ], [ %.091, %511 ], [ %.091, %510 ], [ %.091, %507 ], [ %.091, %506 ], [ %.091, %496 ], [ %.091, %495 ], [ %.091, %494 ], [ 0, %493 ], [ %.091, %491 ], [ %.091, %487 ], [ %.091, %483 ], [ %.091, %482 ], [ %.091, %480 ], [ %.091, %478 ], [ %.091, %477 ], [ %.091, %467 ], [ %.091, %457 ], [ %.091, %456 ], [ %.091, %455 ], [ %.091, %440 ], [ %.091, %430 ], [ %.091, %428 ], [ %.091, %421 ], [ %.091, %419 ], [ %.091, %416 ], [ %.091, %415 ], [ %.091, %404 ], [ %.091, %394 ], [ %.091, %392 ], [ %.091, %390 ], [ %.091, %375 ], [ %.091, %365 ], [ %.091, %363 ], [ %.091, %361 ], [ %.091, %359 ], [ %.091, %347 ], [ %.091, %337 ], [ %.091, %336 ], [ %.091, %332 ], [ %.091, %331 ], [ %.091, %321 ], [ %.091, %311 ], [ %.091, %307 ], [ %.091, %305 ], [ %.091, %304 ], [ %.091, %294 ], [ %.091, %284 ], [ %283, %282 ], [ %.091, %281 ], [ %.091, %280 ], [ %.091, %279 ], [ %.091, %269 ], [ %.091, %259 ], [ %.091, %258 ], [ %.091, %246 ], [ %.091, %236 ], [ %.091, %234 ], [ %.091, %216 ], [ %.091, %206 ], [ %.091, %205 ], [ %.091, %186 ], [ %.091, %176 ], [ %.091, %174 ], [ %.091, %153 ], [ %.091, %143 ], [ %.091, %141 ], [ %.091, %129 ], [ %.091, %119 ], [ %.091, %118 ], [ %.091, %114 ], [ %.091, %113 ], [ 0, %103 ], [ %.091, %93 ], [ %.091, %89 ], [ %.091, %88 ], [ %.091, %86 ], [ %.091, %71 ], [ %.091, %67 ], [ %.091, %66 ], [ %.091, %65 ], [ %.091, %55 ], [ %.091, %45 ], [ %.091, %44 ], [ %.091, %42 ], [ %.091, %41 ], [ %.091, %28 ], [ %.091, %18 ], [ %.091, %14 ], [ %.091, %13 ], [ %.091, %9 ]
  %.089.be = phi i32 [ %.089, %8 ], [ %.089, %523 ], [ %.089, %517 ], [ %.089, %515 ], [ %.089, %514 ], [ %.089, %513 ], [ %.089, %512 ], [ %.089, %511 ], [ %.089, %510 ], [ %.089, %507 ], [ %.089, %506 ], [ %.089, %496 ], [ %.089, %495 ], [ %.089, %494 ], [ %.089, %493 ], [ %.089, %491 ], [ %.089, %487 ], [ %.089, %483 ], [ %.089, %482 ], [ %.089, %480 ], [ %.089, %478 ], [ %.089, %477 ], [ %.089, %467 ], [ %.089, %457 ], [ %.089, %456 ], [ %.089, %455 ], [ %.089, %440 ], [ %.089, %430 ], [ %.089, %428 ], [ %.089, %421 ], [ %.089, %419 ], [ %.089, %416 ], [ %.089, %415 ], [ %.089, %404 ], [ %.089, %394 ], [ %.089, %392 ], [ %.089, %390 ], [ %.089, %375 ], [ %.089, %365 ], [ %.089, %363 ], [ %.089, %361 ], [ %.089, %359 ], [ %.089, %347 ], [ %.089, %337 ], [ %.089, %336 ], [ %.089, %332 ], [ %.089, %331 ], [ %.089, %321 ], [ %.089, %311 ], [ %.089, %307 ], [ %.089, %305 ], [ %.089, %304 ], [ %.089, %294 ], [ %.089, %284 ], [ %.089, %282 ], [ %.089, %281 ], [ %.neg103, %280 ], [ %.089, %279 ], [ %.089, %269 ], [ %.089, %259 ], [ %.089, %258 ], [ %.089, %246 ], [ %.089, %236 ], [ %.089, %234 ], [ %.089, %216 ], [ %.089, %206 ], [ %.089, %205 ], [ %.089, %186 ], [ %.089, %176 ], [ %.089, %174 ], [ %.089, %153 ], [ %.089, %143 ], [ %.089, %141 ], [ %.089, %129 ], [ %.089, %119 ], [ 0, %118 ], [ %.089, %114 ], [ %.089, %113 ], [ %.089, %103 ], [ %.089, %93 ], [ %.089, %89 ], [ %.089, %88 ], [ %.089, %86 ], [ %.089, %71 ], [ %.089, %67 ], [ %.089, %66 ], [ %.089, %65 ], [ %.089, %55 ], [ %.089, %45 ], [ %.089, %44 ], [ %.089, %42 ], [ %.089, %41 ], [ %.089, %28 ], [ %.089, %18 ], [ %.089, %14 ], [ %.089, %13 ], [ %.089, %9 ]
  %.087.be = phi i32 [ %.087, %8 ], [ %.087, %523 ], [ %.087, %517 ], [ %.087, %515 ], [ %.087, %514 ], [ %.087, %513 ], [ 0, %512 ], [ %.087, %511 ], [ %.087, %510 ], [ %.087, %507 ], [ %.087, %506 ], [ %.087, %496 ], [ %.087, %495 ], [ %.087, %494 ], [ %.087, %493 ], [ %.087, %491 ], [ %.087, %487 ], [ %.087, %483 ], [ %.087, %482 ], [ %481, %480 ], [ %.087, %478 ], [ %.087, %477 ], [ %.087, %467 ], [ %.087, %457 ], [ %.087, %456 ], [ %.087, %455 ], [ %.087, %440 ], [ %.087, %430 ], [ %.087, %428 ], [ %.087, %421 ], [ %.087, %419 ], [ %.087, %416 ], [ %.087, %415 ], [ %.087, %404 ], [ %.087, %394 ], [ %.087, %392 ], [ %.087, %390 ], [ %.087, %375 ], [ %.087, %365 ], [ %.087, %363 ], [ %.087, %361 ], [ %.087, %359 ], [ %.087, %347 ], [ %.087, %337 ], [ %.087, %336 ], [ %.087, %332 ], [ %.087, %331 ], [ 0, %321 ], [ %.087, %311 ], [ %.087, %307 ], [ %.087, %305 ], [ %.087, %304 ], [ %.087, %294 ], [ %.087, %284 ], [ %.087, %282 ], [ %.087, %281 ], [ %.087, %280 ], [ %.087, %279 ], [ %.087, %269 ], [ %.087, %259 ], [ %.087, %258 ], [ %.087, %246 ], [ %.087, %236 ], [ %.087, %234 ], [ %.087, %216 ], [ %.087, %206 ], [ %.087, %205 ], [ %.087, %186 ], [ %.087, %176 ], [ %.087, %174 ], [ %.087, %153 ], [ %.087, %143 ], [ %.087, %141 ], [ %.087, %129 ], [ %.087, %119 ], [ %.087, %118 ], [ %.087, %114 ], [ %.087, %113 ], [ %.087, %103 ], [ %.087, %93 ], [ %.087, %89 ], [ %.087, %88 ], [ %.087, %86 ], [ %.087, %71 ], [ %.087, %67 ], [ %.087, %66 ], [ %.087, %65 ], [ %.087, %55 ], [ %.087, %45 ], [ %.087, %44 ], [ %.087, %42 ], [ %.087, %41 ], [ %.087, %28 ], [ %.087, %18 ], [ %.087, %14 ], [ %.087, %13 ], [ %.087, %9 ]
  %.085.be = phi i32 [ %.085, %8 ], [ %524, %523 ], [ %.085, %517 ], [ %.085, %515 ], [ %.085, %514 ], [ %.085, %513 ], [ %.085, %512 ], [ %.085, %511 ], [ %.085, %510 ], [ %.085, %507 ], [ %.085, %506 ], [ %.085, %496 ], [ %.085, %495 ], [ %.085, %494 ], [ %.085, %493 ], [ %.085, %491 ], [ %.085, %487 ], [ %.085, %483 ], [ %.085, %482 ], [ %.085, %480 ], [ %.085, %478 ], [ %.085, %477 ], [ %.neg, %467 ], [ %.085, %457 ], [ %.085, %456 ], [ %.085, %455 ], [ %.085, %440 ], [ %.085, %430 ], [ %.085, %428 ], [ %.085, %421 ], [ %.085, %419 ], [ %.085, %416 ], [ %.085, %415 ], [ %.085, %404 ], [ %.085, %394 ], [ %.085, %392 ], [ %.085, %390 ], [ %.085, %375 ], [ %.085, %365 ], [ %.085, %363 ], [ %.085, %361 ], [ %.085, %359 ], [ %.085, %347 ], [ %.085, %337 ], [ 0, %336 ], [ %.085, %332 ], [ %.085, %331 ], [ %.085, %321 ], [ %.085, %311 ], [ %.085, %307 ], [ %.085, %305 ], [ %.085, %304 ], [ %.085, %294 ], [ %.085, %284 ], [ %.085, %282 ], [ %.085, %281 ], [ %.085, %280 ], [ %.085, %279 ], [ %.085, %269 ], [ %.085, %259 ], [ %.085, %258 ], [ %.085, %246 ], [ %.085, %236 ], [ %.085, %234 ], [ %.085, %216 ], [ %.085, %206 ], [ %.085, %205 ], [ %.085, %186 ], [ %.085, %176 ], [ %.085, %174 ], [ %.085, %153 ], [ %.085, %143 ], [ %.085, %141 ], [ %.085, %129 ], [ %.085, %119 ], [ %.085, %118 ], [ %.085, %114 ], [ %.085, %113 ], [ %.085, %103 ], [ %.085, %93 ], [ %.085, %89 ], [ %.085, %88 ], [ %.085, %86 ], [ %.085, %71 ], [ %.085, %67 ], [ %.085, %66 ], [ %.085, %65 ], [ %.085, %55 ], [ %.085, %45 ], [ %.085, %44 ], [ %.085, %42 ], [ %.085, %41 ], [ %.085, %28 ], [ %.085, %18 ], [ %.085, %14 ], [ %.085, %13 ], [ %.085, %9 ]
  %.0.be = phi i32 [ %.0, %8 ], [ -374144548, %523 ], [ 460188559, %517 ], [ -144742027, %515 ], [ -1183688390, %514 ], [ 293634854, %513 ], [ 282261743, %512 ], [ 813738679, %511 ], [ -755636443, %510 ], [ 99731872, %507 ], [ -1284020253, %506 ], [ 1289684387, %496 ], [ 1623616955, %495 ], [ -1574496604, %494 ], [ 1106956694, %493 ], [ -1093132515, %491 ], [ 1781288875, %487 ], [ -1216745566, %483 ], [ -1216745566, %482 ], [ -322231801, %480 ], [ 2028247717, %478 ], [ -292907967, %477 ], [ %476, %467 ], [ %466, %457 ], [ 116605678, %456 ], [ -1706035915, %455 ], [ %454, %440 ], [ %439, %430 ], [ %429, %428 ], [ %427, %421 ], [ 835833230, %419 ], [ %418, %416 ], [ 116605678, %415 ], [ %414, %404 ], [ %403, %394 ], [ %393, %392 ], [ %391, %390 ], [ %389, %375 ], [ %374, %365 ], [ -1052704841, %363 ], [ %362, %361 ], [ %360, %359 ], [ %358, %347 ], [ %346, %337 ], [ -292907967, %336 ], [ %335, %332 ], [ -322231801, %331 ], [ %330, %321 ], [ %320, %311 ], [ %310, %307 ], [ 337608641, %305 ], [ 851833496, %304 ], [ %303, %294 ], [ %293, %284 ], [ -1014091860, %282 ], [ 638218919, %281 ], [ 1368565811, %280 ], [ 647731883, %279 ], [ %278, %269 ], [ %268, %259 ], [ -1054896415, %258 ], [ %257, %246 ], [ %245, %236 ], [ %235, %234 ], [ %233, %216 ], [ %215, %206 ], [ -2106357772, %205 ], [ %204, %186 ], [ %185, %176 ], [ %175, %174 ], [ %173, %153 ], [ %152, %143 ], [ %142, %141 ], [ %140, %129 ], [ %128, %119 ], [ 1368565811, %118 ], [ %117, %114 ], [ -1014091860, %113 ], [ %112, %103 ], [ %102, %93 ], [ %92, %89 ], [ 337608641, %88 ], [ -1925708890, %86 ], [ -399976369, %71 ], [ %70, %67 ], [ -1925708890, %66 ], [ 1611639840, %65 ], [ %64, %55 ], [ %54, %45 ], [ 28255003, %44 ], [ 1388984388, %42 ], [ -1170077813, %41 ], [ %40, %28 ], [ %27, %18 ], [ %17, %14 ], [ 1388984388, %13 ], [ %12, %9 ]
  br label %8

9:                                                ; preds = %8
  %10 = load i32, i32* @v, align 4
  %11 = icmp slt i32 %.099, %10
  %12 = select i1 %11, i32 234554950, i32 -290814960
  br label %.backedge

13:                                               ; preds = %8
  br label %.backedge

14:                                               ; preds = %8
  %15 = load i32, i32* @v, align 4
  %16 = icmp slt i32 %.097, %15
  %17 = select i1 %16, i32 1282177586, i32 -598023629
  br label %.backedge

18:                                               ; preds = %8
  %19 = load i32, i32* @x.2, align 4
  %20 = load i32, i32* @y.3, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 1781288875, i32 1463929831
  br label %.backedge

28:                                               ; preds = %8
  %29 = sext i32 %.099 to i64
  %30 = sext i32 %.097 to i64
  %31 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %29, i64 %30
  store i64 1000000000000000000, i64* %31, align 8
  %32 = load i32, i32* @x.2, align 4
  %33 = load i32, i32* @y.3, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 1637042801, i32 1463929831
  br label %.backedge

41:                                               ; preds = %8
  br label %.backedge

42:                                               ; preds = %8
  %43 = add i32 %.097, 1
  br label %.backedge

44:                                               ; preds = %8
  br label %.backedge

45:                                               ; preds = %8
  %46 = load i32, i32* @x.2, align 4
  %47 = load i32, i32* @y.3, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -1093132515, i32 2045720689
  br label %.backedge

55:                                               ; preds = %8
  %.neg104 = add i32 %.099, 1
  %56 = load i32, i32* @x.2, align 4
  %57 = load i32, i32* @y.3, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 -1386659680, i32 2045720689
  br label %.backedge

65:                                               ; preds = %8
  br label %.backedge

66:                                               ; preds = %8
  br label %.backedge

67:                                               ; preds = %8
  %68 = load i32, i32* @e, align 4
  %69 = icmp slt i32 %.095, %68
  %70 = select i1 %69, i32 2088055022, i32 -1963960247
  br label %.backedge

71:                                               ; preds = %8
  %72 = sext i32 %.095 to i64
  %73 = getelementptr inbounds [9901 x i32], [9901 x i32]* @s, i64 0, i64 %72
  %74 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %73)
  %75 = getelementptr inbounds [9901 x i32], [9901 x i32]* @t, i64 0, i64 %72
  %76 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %74, i32* nonnull dereferenceable(4) %75)
  %77 = getelementptr inbounds [9901 x i32], [9901 x i32]* @d, i64 0, i64 %72
  %78 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %76, i32* nonnull dereferenceable(4) %77)
  %79 = load i32, i32* %77, align 4
  %80 = sext i32 %79 to i64
  %81 = load i32, i32* %73, align 4
  %82 = sext i32 %81 to i64
  %83 = load i32, i32* %75, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %82, i64 %84
  store i64 %80, i64* %85, align 8
  br label %.backedge

86:                                               ; preds = %8
  %87 = add i32 %.095, 1
  br label %.backedge

88:                                               ; preds = %8
  br label %.backedge

89:                                               ; preds = %8
  %90 = load i32, i32* @v, align 4
  %91 = icmp slt i32 %.093, %90
  %92 = select i1 %91, i32 -418394231, i32 883022088
  br label %.backedge

93:                                               ; preds = %8
  %94 = load i32, i32* @x.2, align 4
  %95 = load i32, i32* @y.3, align 4
  %96 = add i32 %94, -1
  %97 = mul i32 %96, %94
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %100, %99
  %102 = select i1 %101, i32 1106956694, i32 2045246406
  br label %.backedge

103:                                              ; preds = %8
  %104 = load i32, i32* @x.2, align 4
  %105 = load i32, i32* @y.3, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 -1995778685, i32 2045246406
  br label %.backedge

113:                                              ; preds = %8
  br label %.backedge

114:                                              ; preds = %8
  %115 = load i32, i32* @v, align 4
  %116 = icmp slt i32 %.091, %115
  %117 = select i1 %116, i32 1275313886, i32 -845351729
  br label %.backedge

118:                                              ; preds = %8
  br label %.backedge

119:                                              ; preds = %8
  %120 = load i32, i32* @x.2, align 4
  %121 = load i32, i32* @y.3, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 -1574496604, i32 -684867014
  br label %.backedge

129:                                              ; preds = %8
  %130 = load i32, i32* @v, align 4
  %131 = icmp slt i32 %.089, %130
  store i1 %131, i1* %5, align 1
  %132 = load i32, i32* @x.2, align 4
  %133 = load i32, i32* @y.3, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 1923714248, i32 -684867014
  br label %.backedge

141:                                              ; preds = %8
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %142 = select i1 %.0..0..0., i32 1084533220, i32 -9680164
  br label %.backedge

143:                                              ; preds = %8
  %144 = load i32, i32* @x.2, align 4
  %145 = load i32, i32* @y.3, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 1623616955, i32 -128726648
  br label %.backedge

153:                                              ; preds = %8
  %154 = sext i32 %.091 to i64
  %155 = sext i32 %.089 to i64
  %156 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %154, i64 %155
  %157 = load i64, i64* %156, align 8
  %158 = sext i32 %.093 to i64
  %159 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %154, i64 %158
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %158, i64 %155
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, %160
  %164 = icmp sgt i64 %157, %163
  store i1 %164, i1* %4, align 1
  %165 = load i32, i32* @x.2, align 4
  %166 = load i32, i32* @y.3, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 2071790870, i32 -128726648
  br label %.backedge

174:                                              ; preds = %8
  %.0..0..0.81 = load volatile i1, i1* %4, align 1
  %175 = select i1 %.0..0..0.81, i32 1322403149, i32 -2106357772
  br label %.backedge

176:                                              ; preds = %8
  %177 = load i32, i32* @x.2, align 4
  %178 = load i32, i32* @y.3, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 1289684387, i32 803289946
  br label %.backedge

186:                                              ; preds = %8
  %187 = sext i32 %.091 to i64
  %188 = sext i32 %.093 to i64
  %189 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %187, i64 %188
  %190 = load i64, i64* %189, align 8
  %191 = sext i32 %.089 to i64
  %192 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %188, i64 %191
  %193 = load i64, i64* %192, align 8
  %194 = add i64 %193, %190
  %195 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %187, i64 %191
  store i64 %194, i64* %195, align 8
  %196 = load i32, i32* @x.2, align 4
  %197 = load i32, i32* @y.3, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 374879372, i32 803289946
  br label %.backedge

205:                                              ; preds = %8
  br label %.backedge

206:                                              ; preds = %8
  %207 = load i32, i32* @x.2, align 4
  %208 = load i32, i32* @y.3, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1284020253, i32 -614734881
  br label %.backedge

216:                                              ; preds = %8
  %217 = sext i32 %.091 to i64
  %218 = sext i32 %.093 to i64
  %219 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %217, i64 %218
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %218, i64 %217
  %222 = load i64, i64* %221, align 8
  %223 = add i64 %222, %220
  %224 = icmp slt i64 %223, 0
  store i1 %224, i1* %3, align 1
  %225 = load i32, i32* @x.2, align 4
  %226 = load i32, i32* @y.3, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 1501074959, i32 -614734881
  br label %.backedge

234:                                              ; preds = %8
  %.0..0..0.82 = load volatile i1, i1* %3, align 1
  %235 = select i1 %.0..0..0.82, i32 459197121, i32 -1054896415
  br label %.backedge

236:                                              ; preds = %8
  %237 = load i32, i32* @x.2, align 4
  %238 = load i32, i32* @y.3, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 99731872, i32 1643844703
  br label %.backedge

246:                                              ; preds = %8
  %247 = load i64, i64* @s1, align 8
  %248 = add i64 %247, 1
  store i64 %248, i64* @s1, align 8
  %249 = load i32, i32* @x.2, align 4
  %250 = load i32, i32* @y.3, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 -49091039, i32 1643844703
  br label %.backedge

258:                                              ; preds = %8
  br label %.backedge

259:                                              ; preds = %8
  %260 = load i32, i32* @x.2, align 4
  %261 = load i32, i32* @y.3, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 -755636443, i32 -757293380
  br label %.backedge

269:                                              ; preds = %8
  %270 = load i32, i32* @x.2, align 4
  %271 = load i32, i32* @y.3, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 -317536337, i32 -757293380
  br label %.backedge

279:                                              ; preds = %8
  br label %.backedge

280:                                              ; preds = %8
  %.neg103 = add i32 %.089, 1
  br label %.backedge

281:                                              ; preds = %8
  br label %.backedge

282:                                              ; preds = %8
  %283 = add i32 %.091, 1
  br label %.backedge

284:                                              ; preds = %8
  %285 = load i32, i32* @x.2, align 4
  %286 = load i32, i32* @y.3, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 813738679, i32 1899777815
  br label %.backedge

294:                                              ; preds = %8
  %295 = load i32, i32* @x.2, align 4
  %296 = load i32, i32* @y.3, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 -128992884, i32 1899777815
  br label %.backedge

304:                                              ; preds = %8
  br label %.backedge

305:                                              ; preds = %8
  %306 = add i32 %.093, 1
  br label %.backedge

307:                                              ; preds = %8
  %308 = load i64, i64* @s1, align 8
  %309 = icmp eq i64 %308, 0
  %310 = select i1 %309, i32 923959609, i32 1683790690
  br label %.backedge

311:                                              ; preds = %8
  %312 = load i32, i32* @x.2, align 4
  %313 = load i32, i32* @y.3, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 282261743, i32 -1976562173
  br label %.backedge

321:                                              ; preds = %8
  %322 = load i32, i32* @x.2, align 4
  %323 = load i32, i32* @y.3, align 4
  %324 = add i32 %322, -1
  %325 = mul i32 %324, %322
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %328, %327
  %330 = select i1 %329, i32 -85726875, i32 -1976562173
  br label %.backedge

331:                                              ; preds = %8
  br label %.backedge

332:                                              ; preds = %8
  %333 = load i32, i32* @v, align 4
  %334 = icmp slt i32 %.087, %333
  %335 = select i1 %334, i32 -1516891803, i32 -1913894004
  br label %.backedge

336:                                              ; preds = %8
  br label %.backedge

337:                                              ; preds = %8
  %338 = load i32, i32* @x.2, align 4
  %339 = load i32, i32* @y.3, align 4
  %340 = add i32 %338, -1
  %341 = mul i32 %340, %338
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %344, %343
  %346 = select i1 %345, i32 293634854, i32 1070067928
  br label %.backedge

347:                                              ; preds = %8
  %348 = load i32, i32* @v, align 4
  %349 = icmp slt i32 %.085, %348
  store i1 %349, i1* %2, align 1
  %350 = load i32, i32* @x.2, align 4
  %351 = load i32, i32* @y.3, align 4
  %352 = add i32 %350, -1
  %353 = mul i32 %352, %350
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %356, %355
  %358 = select i1 %357, i32 -979002092, i32 1070067928
  br label %.backedge

359:                                              ; preds = %8
  %.0..0..0.83 = load volatile i1, i1* %2, align 1
  %360 = select i1 %.0..0..0.83, i32 1744066632, i32 -875436164
  br label %.backedge

361:                                              ; preds = %8
  %.not102 = icmp eq i32 %.085, 0
  %362 = select i1 %.not102, i32 -1052704841, i32 648585241
  br label %.backedge

363:                                              ; preds = %8
  %364 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  br label %.backedge

365:                                              ; preds = %8
  %366 = load i32, i32* @x.2, align 4
  %367 = load i32, i32* @y.3, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 -1183688390, i32 1167875302
  br label %.backedge

375:                                              ; preds = %8
  %376 = sext i32 %.087 to i64
  %377 = sext i32 %.085 to i64
  %378 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %376, i64 %377
  %379 = load i64, i64* %378, align 8
  %380 = icmp sgt i64 %379, 2000000000
  store i1 %380, i1* %1, align 1
  %381 = load i32, i32* @x.2, align 4
  %382 = load i32, i32* @y.3, align 4
  %383 = add i32 %381, -1
  %384 = mul i32 %383, %381
  %385 = and i32 %384, 1
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %387, %386
  %389 = select i1 %388, i32 -1676876641, i32 1167875302
  br label %.backedge

390:                                              ; preds = %8
  %.0..0..0.84 = load volatile i1, i1* %1, align 1
  %391 = select i1 %.0..0..0.84, i32 1328507539, i32 -175304619
  br label %.backedge

392:                                              ; preds = %8
  %.not101 = icmp eq i32 %.087, %.085
  %393 = select i1 %.not101, i32 -175304619, i32 -1392111615
  br label %.backedge

394:                                              ; preds = %8
  %395 = load i32, i32* @x.2, align 4
  %396 = load i32, i32* @y.3, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 -144742027, i32 971595951
  br label %.backedge

404:                                              ; preds = %8
  %405 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  %406 = load i32, i32* @x.2, align 4
  %407 = load i32, i32* @y.3, align 4
  %408 = add i32 %406, -1
  %409 = mul i32 %408, %406
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %412, %411
  %414 = select i1 %413, i32 -1967859613, i32 971595951
  br label %.backedge

415:                                              ; preds = %8
  br label %.backedge

416:                                              ; preds = %8
  %417 = icmp eq i32 %.087, %.085
  %418 = select i1 %417, i32 1096513689, i32 835833230
  br label %.backedge

419:                                              ; preds = %8
  %420 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 0)
  br label %.backedge

421:                                              ; preds = %8
  %422 = sext i32 %.087 to i64
  %423 = sext i32 %.085 to i64
  %424 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %422, i64 %423
  %425 = load i64, i64* %424, align 8
  %426 = icmp slt i64 %425, 2000000001
  %427 = select i1 %426, i32 498937693, i32 -1706035915
  br label %.backedge

428:                                              ; preds = %8
  %.not = icmp eq i32 %.087, %.085
  %429 = select i1 %.not, i32 -1706035915, i32 149319637
  br label %.backedge

430:                                              ; preds = %8
  %431 = load i32, i32* @x.2, align 4
  %432 = load i32, i32* @y.3, align 4
  %433 = add i32 %431, -1
  %434 = mul i32 %433, %431
  %435 = and i32 %434, 1
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %437, %436
  %439 = select i1 %438, i32 460188559, i32 112948065
  br label %.backedge

440:                                              ; preds = %8
  %441 = sext i32 %.087 to i64
  %442 = sext i32 %.085 to i64
  %443 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %441, i64 %442
  %444 = load i64, i64* %443, align 8
  %445 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %444)
  %446 = load i32, i32* @x.2, align 4
  %447 = load i32, i32* @y.3, align 4
  %448 = add i32 %446, -1
  %449 = mul i32 %448, %446
  %450 = and i32 %449, 1
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %452, %451
  %454 = select i1 %453, i32 -1762080005, i32 112948065
  br label %.backedge

455:                                              ; preds = %8
  br label %.backedge

456:                                              ; preds = %8
  br label %.backedge

457:                                              ; preds = %8
  %458 = load i32, i32* @x.2, align 4
  %459 = load i32, i32* @y.3, align 4
  %460 = add i32 %458, -1
  %461 = mul i32 %460, %458
  %462 = and i32 %461, 1
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %464, %463
  %466 = select i1 %465, i32 -374144548, i32 1398010378
  br label %.backedge

467:                                              ; preds = %8
  %.neg = add i32 %.085, 1
  %468 = load i32, i32* @x.2, align 4
  %469 = load i32, i32* @y.3, align 4
  %470 = add i32 %468, -1
  %471 = mul i32 %470, %468
  %472 = and i32 %471, 1
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %474, %473
  %476 = select i1 %475, i32 -10865080, i32 1398010378
  br label %.backedge

477:                                              ; preds = %8
  br label %.backedge

478:                                              ; preds = %8
  %479 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

480:                                              ; preds = %8
  %481 = add i32 %.087, 1
  br label %.backedge

482:                                              ; preds = %8
  br label %.backedge

483:                                              ; preds = %8
  %484 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0))
  %485 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %484, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

486:                                              ; preds = %8
  ret i32 0

487:                                              ; preds = %8
  %488 = sext i32 %.099 to i64
  %489 = sext i32 %.097 to i64
  %490 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %488, i64 %489
  store i64 1000000000000000000, i64* %490, align 8
  br label %.backedge

491:                                              ; preds = %8
  %492 = add i32 %.099, 1
  br label %.backedge

493:                                              ; preds = %8
  br label %.backedge

494:                                              ; preds = %8
  br label %.backedge

495:                                              ; preds = %8
  br label %.backedge

496:                                              ; preds = %8
  %497 = sext i32 %.091 to i64
  %498 = sext i32 %.093 to i64
  %499 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %497, i64 %498
  %500 = load i64, i64* %499, align 8
  %501 = sext i32 %.089 to i64
  %502 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %498, i64 %501
  %503 = load i64, i64* %502, align 8
  %504 = add i64 %503, %500
  %505 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %497, i64 %501
  store i64 %504, i64* %505, align 8
  br label %.backedge

506:                                              ; preds = %8
  br label %.backedge

507:                                              ; preds = %8
  %508 = load i64, i64* @s1, align 8
  %509 = add i64 %508, 1
  store i64 %509, i64* @s1, align 8
  br label %.backedge

510:                                              ; preds = %8
  br label %.backedge

511:                                              ; preds = %8
  br label %.backedge

512:                                              ; preds = %8
  br label %.backedge

513:                                              ; preds = %8
  br label %.backedge

514:                                              ; preds = %8
  br label %.backedge

515:                                              ; preds = %8
  %516 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

517:                                              ; preds = %8
  %518 = sext i32 %.087 to i64
  %519 = sext i32 %.085 to i64
  %520 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @a, i64 0, i64 %518, i64 %519
  %521 = load i64, i64* %520, align 8
  %522 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %521)
  br label %.backedge

523:                                              ; preds = %8
  %524 = add i32 %.085, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s378034494.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
