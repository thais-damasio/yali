; ModuleID = 'build_ollvm/programs/p02363/s382382026.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s382382026.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dist = global [100 x [100 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s382382026.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %11, i32* nonnull dereferenceable(4) %6)
  br label %13

13:                                               ; preds = %.backedge, %0
  %.078 = phi i32 [ 0, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.0 = phi i32 [ 1277550661, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1277550661, label %14
    i32 1761404988, label %24
    i32 1725631970, label %36
    i32 -1645093710, label %38
    i32 1694967354, label %39
    i32 1402436327, label %43
    i32 -1247835889, label %53
    i32 602535210, label %64
    i32 1303627643, label %66
    i32 -1811098494, label %70
    i32 -549682066, label %71
    i32 1962569830, label %81
    i32 -2073078899, label %92
    i32 -1951251681, label %93
    i32 -1086247029, label %94
    i32 1220210563, label %104
    i32 456361696, label %115
    i32 454525661, label %116
    i32 -177539886, label %126
    i32 19285068, label %136
    i32 -23899486, label %137
    i32 -1107303051, label %141
    i32 1549476967, label %151
    i32 1635104002, label %161
    i32 -1430783627, label %172
    i32 -1946146693, label %173
    i32 -1770376060, label %183
    i32 -1146709431, label %193
    i32 1461329585, label %194
    i32 -279141693, label %204
    i32 1059765898, label %216
    i32 -1542068658, label %218
    i32 -1065415454, label %219
    i32 -1131518201, label %223
    i32 1125965030, label %224
    i32 -1292247277, label %228
    i32 1244800331, label %235
    i32 1308052573, label %242
    i32 -1553505617, label %243
    i32 145729182, label %255
    i32 1933344754, label %256
    i32 1998157463, label %257
    i32 -1546506610, label %258
    i32 1005082105, label %268
    i32 1215270321, label %279
    i32 -2111199506, label %280
    i32 -1806076045, label %290
    i32 552495799, label %300
    i32 -1383092521, label %301
    i32 -763953200, label %302
    i32 575129256, label %303
    i32 -1020629816, label %307
    i32 403550866, label %317
    i32 1241591573, label %331
    i32 -2115279448, label %333
    i32 1565626245, label %336
    i32 877131009, label %346
    i32 -163416969, label %356
    i32 602895371, label %357
    i32 -1018488884, label %367
    i32 -1921528027, label %378
    i32 -2050673785, label %379
    i32 208161778, label %380
    i32 -1231893904, label %384
    i32 1312949332, label %385
    i32 609769668, label %389
    i32 1419611907, label %395
    i32 -114000173, label %401
    i32 -1676946556, label %403
    i32 -225684649, label %407
    i32 1952601208, label %417
    i32 334932284, label %428
    i32 807129763, label %429
    i32 1602799621, label %439
    i32 1090704972, label %450
    i32 1239531285, label %451
    i32 789323366, label %452
    i32 551463094, label %462
    i32 -497826249, label %472
    i32 1395051275, label %473
    i32 638203618, label %474
    i32 -993286593, label %476
    i32 1024025573, label %477
    i32 84209531, label %478
    i32 -1789631536, label %479
    i32 2078675118, label %480
    i32 1740703001, label %482
    i32 -539894911, label %484
    i32 151694218, label %485
    i32 -1220379883, label %487
    i32 232372679, label %488
    i32 1528501763, label %489
    i32 1867134463, label %491
    i32 -681534591, label %492
    i32 1244902831, label %493
    i32 -537249330, label %494
    i32 -1534806904, label %496
    i32 -2064700036, label %498
    i32 -89810366, label %500
  ]

.backedge:                                        ; preds = %13, %500, %498, %496, %494, %493, %492, %491, %489, %488, %487, %485, %484, %482, %480, %479, %478, %476, %474, %473, %472, %462, %452, %451, %450, %439, %429, %428, %417, %407, %403, %401, %395, %389, %385, %384, %380, %379, %378, %367, %357, %356, %346, %336, %333, %331, %317, %307, %303, %302, %301, %300, %290, %280, %279, %268, %258, %257, %256, %255, %243, %242, %235, %228, %224, %223, %219, %218, %216, %204, %194, %193, %183, %173, %172, %161, %151, %141, %137, %136, %126, %116, %115, %104, %94, %93, %92, %81, %71, %70, %66, %64, %53, %43, %39, %38, %36, %24, %14
  %.078.be = phi i32 [ %.078, %13 ], [ %.078, %500 ], [ %.078, %498 ], [ %.078, %496 ], [ %.078, %494 ], [ %.078, %493 ], [ %.078, %492 ], [ %.078, %491 ], [ %.078, %489 ], [ %.078, %488 ], [ %.078, %487 ], [ %.078, %485 ], [ %.078, %484 ], [ %483, %482 ], [ %.078, %480 ], [ %.078, %479 ], [ %.078, %478 ], [ %.078, %476 ], [ %.078, %474 ], [ %.078, %473 ], [ %.078, %472 ], [ %.078, %462 ], [ %.078, %452 ], [ %.078, %451 ], [ %.078, %450 ], [ %.078, %439 ], [ %.078, %429 ], [ %.078, %428 ], [ %.078, %417 ], [ %.078, %407 ], [ %.078, %403 ], [ %.078, %401 ], [ %.078, %395 ], [ %.078, %389 ], [ %.078, %385 ], [ %.078, %384 ], [ %.078, %380 ], [ %.078, %379 ], [ %.078, %378 ], [ %.078, %367 ], [ %.078, %357 ], [ %.078, %356 ], [ %.078, %346 ], [ %.078, %336 ], [ %.078, %333 ], [ %.078, %331 ], [ %.078, %317 ], [ %.078, %307 ], [ %.078, %303 ], [ %.078, %302 ], [ %.078, %301 ], [ %.078, %300 ], [ %.078, %290 ], [ %.078, %280 ], [ %.078, %279 ], [ %.078, %268 ], [ %.078, %258 ], [ %.078, %257 ], [ %.078, %256 ], [ %.078, %255 ], [ %.078, %243 ], [ %.078, %242 ], [ %.078, %235 ], [ %.078, %228 ], [ %.078, %224 ], [ %.078, %223 ], [ %.078, %219 ], [ %.078, %218 ], [ %.078, %216 ], [ %.078, %204 ], [ %.078, %194 ], [ %.078, %193 ], [ %.078, %183 ], [ %.078, %173 ], [ %.078, %172 ], [ %.078, %161 ], [ %.078, %151 ], [ %.078, %141 ], [ %.078, %137 ], [ %.078, %136 ], [ %.078, %126 ], [ %.078, %116 ], [ %.078, %115 ], [ %105, %104 ], [ %.078, %94 ], [ %.078, %93 ], [ %.078, %92 ], [ %.078, %81 ], [ %.078, %71 ], [ %.078, %70 ], [ %.078, %66 ], [ %.078, %64 ], [ %.078, %53 ], [ %.078, %43 ], [ %.078, %39 ], [ %.078, %38 ], [ %.078, %36 ], [ %.078, %24 ], [ %.078, %14 ]
  %.076.be = phi i32 [ %.076, %13 ], [ %.076, %500 ], [ %.076, %498 ], [ %.076, %496 ], [ %.076, %494 ], [ %.076, %493 ], [ %.076, %492 ], [ %.076, %491 ], [ %.076, %489 ], [ %.076, %488 ], [ %.076, %487 ], [ %.076, %485 ], [ %.076, %484 ], [ %.076, %482 ], [ %481, %480 ], [ %.076, %479 ], [ %.076, %478 ], [ %.076, %476 ], [ %.076, %474 ], [ %.076, %473 ], [ %.076, %472 ], [ %.076, %462 ], [ %.076, %452 ], [ %.076, %451 ], [ %.076, %450 ], [ %.076, %439 ], [ %.076, %429 ], [ %.076, %428 ], [ %.076, %417 ], [ %.076, %407 ], [ %.076, %403 ], [ %.076, %401 ], [ %.076, %395 ], [ %.076, %389 ], [ %.076, %385 ], [ %.076, %384 ], [ %.076, %380 ], [ %.076, %379 ], [ %.076, %378 ], [ %.076, %367 ], [ %.076, %357 ], [ %.076, %356 ], [ %.076, %346 ], [ %.076, %336 ], [ %.076, %333 ], [ %.076, %331 ], [ %.076, %317 ], [ %.076, %307 ], [ %.076, %303 ], [ %.076, %302 ], [ %.076, %301 ], [ %.076, %300 ], [ %.076, %290 ], [ %.076, %280 ], [ %.076, %279 ], [ %.076, %268 ], [ %.076, %258 ], [ %.076, %257 ], [ %.076, %256 ], [ %.076, %255 ], [ %.076, %243 ], [ %.076, %242 ], [ %.076, %235 ], [ %.076, %228 ], [ %.076, %224 ], [ %.076, %223 ], [ %.076, %219 ], [ %.076, %218 ], [ %.076, %216 ], [ %.076, %204 ], [ %.076, %194 ], [ %.076, %193 ], [ %.076, %183 ], [ %.076, %173 ], [ %.076, %172 ], [ %.076, %161 ], [ %.076, %151 ], [ %.076, %141 ], [ %.076, %137 ], [ %.076, %136 ], [ %.076, %126 ], [ %.076, %116 ], [ %.076, %115 ], [ %.076, %104 ], [ %.076, %94 ], [ %.076, %93 ], [ %.076, %92 ], [ %82, %81 ], [ %.076, %71 ], [ %.076, %70 ], [ %.076, %66 ], [ %.076, %64 ], [ %.076, %53 ], [ %.076, %43 ], [ %.076, %39 ], [ 0, %38 ], [ %.076, %36 ], [ %.076, %24 ], [ %.076, %14 ]
  %.074.be = phi i32 [ %.074, %13 ], [ %.074, %500 ], [ %.074, %498 ], [ %.074, %496 ], [ %.074, %494 ], [ %.074, %493 ], [ %.074, %492 ], [ %.074, %491 ], [ %.074, %489 ], [ %.074, %488 ], [ %.074, %487 ], [ %486, %485 ], [ 0, %484 ], [ %.074, %482 ], [ %.074, %480 ], [ %.074, %479 ], [ %.074, %478 ], [ %.074, %476 ], [ %.074, %474 ], [ %.074, %473 ], [ %.074, %472 ], [ %.074, %462 ], [ %.074, %452 ], [ %.074, %451 ], [ %.074, %450 ], [ %.074, %439 ], [ %.074, %429 ], [ %.074, %428 ], [ %.074, %417 ], [ %.074, %407 ], [ %.074, %403 ], [ %.074, %401 ], [ %.074, %395 ], [ %.074, %389 ], [ %.074, %385 ], [ %.074, %384 ], [ %.074, %380 ], [ %.074, %379 ], [ %.074, %378 ], [ %.074, %367 ], [ %.074, %357 ], [ %.074, %356 ], [ %.074, %346 ], [ %.074, %336 ], [ %.074, %333 ], [ %.074, %331 ], [ %.074, %317 ], [ %.074, %307 ], [ %.074, %303 ], [ %.074, %302 ], [ %.074, %301 ], [ %.074, %300 ], [ %.074, %290 ], [ %.074, %280 ], [ %.074, %279 ], [ %.074, %268 ], [ %.074, %258 ], [ %.074, %257 ], [ %.074, %256 ], [ %.074, %255 ], [ %.074, %243 ], [ %.074, %242 ], [ %.074, %235 ], [ %.074, %228 ], [ %.074, %224 ], [ %.074, %223 ], [ %.074, %219 ], [ %.074, %218 ], [ %.074, %216 ], [ %.074, %204 ], [ %.074, %194 ], [ %.074, %193 ], [ %.074, %183 ], [ %.074, %173 ], [ %.074, %172 ], [ %162, %161 ], [ %.074, %151 ], [ %.074, %141 ], [ %.074, %137 ], [ %.074, %136 ], [ 0, %126 ], [ %.074, %116 ], [ %.074, %115 ], [ %.074, %104 ], [ %.074, %94 ], [ %.074, %93 ], [ %.074, %92 ], [ %.074, %81 ], [ %.074, %71 ], [ %.074, %70 ], [ %.074, %66 ], [ %.074, %64 ], [ %.074, %53 ], [ %.074, %43 ], [ %.074, %39 ], [ %.074, %38 ], [ %.074, %36 ], [ %.074, %24 ], [ %.074, %14 ]
  %.072.be = phi i32 [ %.072, %13 ], [ %.072, %500 ], [ %.072, %498 ], [ %.072, %496 ], [ %.072, %494 ], [ %.072, %493 ], [ %.072, %492 ], [ %.072, %491 ], [ %.072, %489 ], [ %.072, %488 ], [ 0, %487 ], [ %.072, %485 ], [ %.072, %484 ], [ %.072, %482 ], [ %.072, %480 ], [ %.072, %479 ], [ %.072, %478 ], [ %.072, %476 ], [ %.072, %474 ], [ %.072, %473 ], [ %.072, %472 ], [ %.072, %462 ], [ %.072, %452 ], [ %.072, %451 ], [ %.072, %450 ], [ %.072, %439 ], [ %.072, %429 ], [ %.072, %428 ], [ %.072, %417 ], [ %.072, %407 ], [ %.072, %403 ], [ %.072, %401 ], [ %.072, %395 ], [ %.072, %389 ], [ %.072, %385 ], [ %.072, %384 ], [ %.072, %380 ], [ %.072, %379 ], [ %.072, %378 ], [ %.072, %367 ], [ %.072, %357 ], [ %.072, %356 ], [ %.072, %346 ], [ %.072, %336 ], [ %.072, %333 ], [ %.072, %331 ], [ %.072, %317 ], [ %.072, %307 ], [ %.072, %303 ], [ %.072, %302 ], [ %.neg83, %301 ], [ %.072, %300 ], [ %.072, %290 ], [ %.072, %280 ], [ %.072, %279 ], [ %.072, %268 ], [ %.072, %258 ], [ %.072, %257 ], [ %.072, %256 ], [ %.072, %255 ], [ %.072, %243 ], [ %.072, %242 ], [ %.072, %235 ], [ %.072, %228 ], [ %.072, %224 ], [ %.072, %223 ], [ %.072, %219 ], [ %.072, %218 ], [ %.072, %216 ], [ %.072, %204 ], [ %.072, %194 ], [ %.072, %193 ], [ 0, %183 ], [ %.072, %173 ], [ %.072, %172 ], [ %.072, %161 ], [ %.072, %151 ], [ %.072, %141 ], [ %.072, %137 ], [ %.072, %136 ], [ %.072, %126 ], [ %.072, %116 ], [ %.072, %115 ], [ %.072, %104 ], [ %.072, %94 ], [ %.072, %93 ], [ %.072, %92 ], [ %.072, %81 ], [ %.072, %71 ], [ %.072, %70 ], [ %.072, %66 ], [ %.072, %64 ], [ %.072, %53 ], [ %.072, %43 ], [ %.072, %39 ], [ %.072, %38 ], [ %.072, %36 ], [ %.072, %24 ], [ %.072, %14 ]
  %.070.be = phi i32 [ %.070, %13 ], [ %.070, %500 ], [ %.070, %498 ], [ %.070, %496 ], [ %.070, %494 ], [ %.070, %493 ], [ %.070, %492 ], [ %.070, %491 ], [ %490, %489 ], [ %.070, %488 ], [ %.070, %487 ], [ %.070, %485 ], [ %.070, %484 ], [ %.070, %482 ], [ %.070, %480 ], [ %.070, %479 ], [ %.070, %478 ], [ %.070, %476 ], [ %.070, %474 ], [ %.070, %473 ], [ %.070, %472 ], [ %.070, %462 ], [ %.070, %452 ], [ %.070, %451 ], [ %.070, %450 ], [ %.070, %439 ], [ %.070, %429 ], [ %.070, %428 ], [ %.070, %417 ], [ %.070, %407 ], [ %.070, %403 ], [ %.070, %401 ], [ %.070, %395 ], [ %.070, %389 ], [ %.070, %385 ], [ %.070, %384 ], [ %.070, %380 ], [ %.070, %379 ], [ %.070, %378 ], [ %.070, %367 ], [ %.070, %357 ], [ %.070, %356 ], [ %.070, %346 ], [ %.070, %336 ], [ %.070, %333 ], [ %.070, %331 ], [ %.070, %317 ], [ %.070, %307 ], [ %.070, %303 ], [ %.070, %302 ], [ %.070, %301 ], [ %.070, %300 ], [ %.070, %290 ], [ %.070, %280 ], [ %.070, %279 ], [ %269, %268 ], [ %.070, %258 ], [ %.070, %257 ], [ %.070, %256 ], [ %.070, %255 ], [ %.070, %243 ], [ %.070, %242 ], [ %.070, %235 ], [ %.070, %228 ], [ %.070, %224 ], [ %.070, %223 ], [ %.070, %219 ], [ 0, %218 ], [ %.070, %216 ], [ %.070, %204 ], [ %.070, %194 ], [ %.070, %193 ], [ %.070, %183 ], [ %.070, %173 ], [ %.070, %172 ], [ %.070, %161 ], [ %.070, %151 ], [ %.070, %141 ], [ %.070, %137 ], [ %.070, %136 ], [ %.070, %126 ], [ %.070, %116 ], [ %.070, %115 ], [ %.070, %104 ], [ %.070, %94 ], [ %.070, %93 ], [ %.070, %92 ], [ %.070, %81 ], [ %.070, %71 ], [ %.070, %70 ], [ %.070, %66 ], [ %.070, %64 ], [ %.070, %53 ], [ %.070, %43 ], [ %.070, %39 ], [ %.070, %38 ], [ %.070, %36 ], [ %.070, %24 ], [ %.070, %14 ]
  %.068.be = phi i32 [ %.068, %13 ], [ %.068, %500 ], [ %.068, %498 ], [ %.068, %496 ], [ %.068, %494 ], [ %.068, %493 ], [ %.068, %492 ], [ %.068, %491 ], [ %.068, %489 ], [ %.068, %488 ], [ %.068, %487 ], [ %.068, %485 ], [ %.068, %484 ], [ %.068, %482 ], [ %.068, %480 ], [ %.068, %479 ], [ %.068, %478 ], [ %.068, %476 ], [ %.068, %474 ], [ %.068, %473 ], [ %.068, %472 ], [ %.068, %462 ], [ %.068, %452 ], [ %.068, %451 ], [ %.068, %450 ], [ %.068, %439 ], [ %.068, %429 ], [ %.068, %428 ], [ %.068, %417 ], [ %.068, %407 ], [ %.068, %403 ], [ %.068, %401 ], [ %.068, %395 ], [ %.068, %389 ], [ %.068, %385 ], [ %.068, %384 ], [ %.068, %380 ], [ %.068, %379 ], [ %.068, %378 ], [ %.068, %367 ], [ %.068, %357 ], [ %.068, %356 ], [ %.068, %346 ], [ %.068, %336 ], [ %.068, %333 ], [ %.068, %331 ], [ %.068, %317 ], [ %.068, %307 ], [ %.068, %303 ], [ %.068, %302 ], [ %.068, %301 ], [ %.068, %300 ], [ %.068, %290 ], [ %.068, %280 ], [ %.068, %279 ], [ %.068, %268 ], [ %.068, %258 ], [ %.068, %257 ], [ %.neg84, %256 ], [ %.068, %255 ], [ %.068, %243 ], [ %.068, %242 ], [ %.068, %235 ], [ %.068, %228 ], [ %.068, %224 ], [ 0, %223 ], [ %.068, %219 ], [ %.068, %218 ], [ %.068, %216 ], [ %.068, %204 ], [ %.068, %194 ], [ %.068, %193 ], [ %.068, %183 ], [ %.068, %173 ], [ %.068, %172 ], [ %.068, %161 ], [ %.068, %151 ], [ %.068, %141 ], [ %.068, %137 ], [ %.068, %136 ], [ %.068, %126 ], [ %.068, %116 ], [ %.068, %115 ], [ %.068, %104 ], [ %.068, %94 ], [ %.068, %93 ], [ %.068, %92 ], [ %.068, %81 ], [ %.068, %71 ], [ %.068, %70 ], [ %.068, %66 ], [ %.068, %64 ], [ %.068, %53 ], [ %.068, %43 ], [ %.068, %39 ], [ %.068, %38 ], [ %.068, %36 ], [ %.068, %24 ], [ %.068, %14 ]
  %.066.be = phi i32 [ %.066, %13 ], [ %.066, %500 ], [ %.066, %498 ], [ %.066, %496 ], [ %495, %494 ], [ %.066, %493 ], [ %.066, %492 ], [ %.066, %491 ], [ %.066, %489 ], [ %.066, %488 ], [ %.066, %487 ], [ %.066, %485 ], [ %.066, %484 ], [ %.066, %482 ], [ %.066, %480 ], [ %.066, %479 ], [ %.066, %478 ], [ %.066, %476 ], [ %.066, %474 ], [ %.066, %473 ], [ %.066, %472 ], [ %.066, %462 ], [ %.066, %452 ], [ %.066, %451 ], [ %.066, %450 ], [ %.066, %439 ], [ %.066, %429 ], [ %.066, %428 ], [ %.066, %417 ], [ %.066, %407 ], [ %.066, %403 ], [ %.066, %401 ], [ %.066, %395 ], [ %.066, %389 ], [ %.066, %385 ], [ %.066, %384 ], [ %.066, %380 ], [ %.066, %379 ], [ %.066, %378 ], [ %368, %367 ], [ %.066, %357 ], [ %.066, %356 ], [ %.066, %346 ], [ %.066, %336 ], [ %.066, %333 ], [ %.066, %331 ], [ %.066, %317 ], [ %.066, %307 ], [ %.066, %303 ], [ 0, %302 ], [ %.066, %301 ], [ %.066, %300 ], [ %.066, %290 ], [ %.066, %280 ], [ %.066, %279 ], [ %.066, %268 ], [ %.066, %258 ], [ %.066, %257 ], [ %.066, %256 ], [ %.066, %255 ], [ %.066, %243 ], [ %.066, %242 ], [ %.066, %235 ], [ %.066, %228 ], [ %.066, %224 ], [ %.066, %223 ], [ %.066, %219 ], [ %.066, %218 ], [ %.066, %216 ], [ %.066, %204 ], [ %.066, %194 ], [ %.066, %193 ], [ %.066, %183 ], [ %.066, %173 ], [ %.066, %172 ], [ %.066, %161 ], [ %.066, %151 ], [ %.066, %141 ], [ %.066, %137 ], [ %.066, %136 ], [ %.066, %126 ], [ %.066, %116 ], [ %.066, %115 ], [ %.066, %104 ], [ %.066, %94 ], [ %.066, %93 ], [ %.066, %92 ], [ %.066, %81 ], [ %.066, %71 ], [ %.066, %70 ], [ %.066, %66 ], [ %.066, %64 ], [ %.066, %53 ], [ %.066, %43 ], [ %.066, %39 ], [ %.066, %38 ], [ %.066, %36 ], [ %.066, %24 ], [ %.066, %14 ]
  %.064.be = phi i32 [ %.064, %13 ], [ %.064, %500 ], [ %.064, %498 ], [ %.064, %496 ], [ %.064, %494 ], [ %.064, %493 ], [ %.064, %492 ], [ %.064, %491 ], [ %.064, %489 ], [ %.064, %488 ], [ %.064, %487 ], [ %.064, %485 ], [ %.064, %484 ], [ %.064, %482 ], [ %.064, %480 ], [ %.064, %479 ], [ %.064, %478 ], [ %.064, %476 ], [ %475, %474 ], [ %.064, %473 ], [ %.064, %472 ], [ %.064, %462 ], [ %.064, %452 ], [ %.064, %451 ], [ %.064, %450 ], [ %.064, %439 ], [ %.064, %429 ], [ %.064, %428 ], [ %.064, %417 ], [ %.064, %407 ], [ %.064, %403 ], [ %.064, %401 ], [ %.064, %395 ], [ %.064, %389 ], [ %.064, %385 ], [ %.064, %384 ], [ %.064, %380 ], [ 0, %379 ], [ %.064, %378 ], [ %.064, %367 ], [ %.064, %357 ], [ %.064, %356 ], [ %.064, %346 ], [ %.064, %336 ], [ %.064, %333 ], [ %.064, %331 ], [ %.064, %317 ], [ %.064, %307 ], [ %.064, %303 ], [ %.064, %302 ], [ %.064, %301 ], [ %.064, %300 ], [ %.064, %290 ], [ %.064, %280 ], [ %.064, %279 ], [ %.064, %268 ], [ %.064, %258 ], [ %.064, %257 ], [ %.064, %256 ], [ %.064, %255 ], [ %.064, %243 ], [ %.064, %242 ], [ %.064, %235 ], [ %.064, %228 ], [ %.064, %224 ], [ %.064, %223 ], [ %.064, %219 ], [ %.064, %218 ], [ %.064, %216 ], [ %.064, %204 ], [ %.064, %194 ], [ %.064, %193 ], [ %.064, %183 ], [ %.064, %173 ], [ %.064, %172 ], [ %.064, %161 ], [ %.064, %151 ], [ %.064, %141 ], [ %.064, %137 ], [ %.064, %136 ], [ %.064, %126 ], [ %.064, %116 ], [ %.064, %115 ], [ %.064, %104 ], [ %.064, %94 ], [ %.064, %93 ], [ %.064, %92 ], [ %.064, %81 ], [ %.064, %71 ], [ %.064, %70 ], [ %.064, %66 ], [ %.064, %64 ], [ %.064, %53 ], [ %.064, %43 ], [ %.064, %39 ], [ %.064, %38 ], [ %.064, %36 ], [ %.064, %24 ], [ %.064, %14 ]
  %.062.be = phi i32 [ %.062, %13 ], [ %501, %500 ], [ %.062, %498 ], [ %.062, %496 ], [ %.062, %494 ], [ %.062, %493 ], [ %.062, %492 ], [ %.062, %491 ], [ %.062, %489 ], [ %.062, %488 ], [ %.062, %487 ], [ %.062, %485 ], [ %.062, %484 ], [ %.062, %482 ], [ %.062, %480 ], [ %.062, %479 ], [ %.062, %478 ], [ %.062, %476 ], [ %.062, %474 ], [ %.062, %473 ], [ %.062, %472 ], [ %.neg, %462 ], [ %.062, %452 ], [ %.062, %451 ], [ %.062, %450 ], [ %.062, %439 ], [ %.062, %429 ], [ %.062, %428 ], [ %.062, %417 ], [ %.062, %407 ], [ %.062, %403 ], [ %.062, %401 ], [ %.062, %395 ], [ %.062, %389 ], [ %.062, %385 ], [ 0, %384 ], [ %.062, %380 ], [ %.062, %379 ], [ %.062, %378 ], [ %.062, %367 ], [ %.062, %357 ], [ %.062, %356 ], [ %.062, %346 ], [ %.062, %336 ], [ %.062, %333 ], [ %.062, %331 ], [ %.062, %317 ], [ %.062, %307 ], [ %.062, %303 ], [ %.062, %302 ], [ %.062, %301 ], [ %.062, %300 ], [ %.062, %290 ], [ %.062, %280 ], [ %.062, %279 ], [ %.062, %268 ], [ %.062, %258 ], [ %.062, %257 ], [ %.062, %256 ], [ %.062, %255 ], [ %.062, %243 ], [ %.062, %242 ], [ %.062, %235 ], [ %.062, %228 ], [ %.062, %224 ], [ %.062, %223 ], [ %.062, %219 ], [ %.062, %218 ], [ %.062, %216 ], [ %.062, %204 ], [ %.062, %194 ], [ %.062, %193 ], [ %.062, %183 ], [ %.062, %173 ], [ %.062, %172 ], [ %.062, %161 ], [ %.062, %151 ], [ %.062, %141 ], [ %.062, %137 ], [ %.062, %136 ], [ %.062, %126 ], [ %.062, %116 ], [ %.062, %115 ], [ %.062, %104 ], [ %.062, %94 ], [ %.062, %93 ], [ %.062, %92 ], [ %.062, %81 ], [ %.062, %71 ], [ %.062, %70 ], [ %.062, %66 ], [ %.062, %64 ], [ %.062, %53 ], [ %.062, %43 ], [ %.062, %39 ], [ %.062, %38 ], [ %.062, %36 ], [ %.062, %24 ], [ %.062, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ 551463094, %500 ], [ 1602799621, %498 ], [ 1952601208, %496 ], [ -1018488884, %494 ], [ 877131009, %493 ], [ 403550866, %492 ], [ -1806076045, %491 ], [ 1005082105, %489 ], [ -279141693, %488 ], [ -1770376060, %487 ], [ 1635104002, %485 ], [ -177539886, %484 ], [ 1220210563, %482 ], [ 1962569830, %480 ], [ -1247835889, %479 ], [ 1761404988, %478 ], [ 1024025573, %476 ], [ 208161778, %474 ], [ 638203618, %473 ], [ 1312949332, %472 ], [ %471, %462 ], [ %461, %452 ], [ 789323366, %451 ], [ 1239531285, %450 ], [ %449, %439 ], [ %438, %429 ], [ 1239531285, %428 ], [ %427, %417 ], [ %416, %407 ], [ %406, %403 ], [ -1676946556, %401 ], [ -1676946556, %395 ], [ %394, %389 ], [ %388, %385 ], [ 1312949332, %384 ], [ %383, %380 ], [ 208161778, %379 ], [ 575129256, %378 ], [ %377, %367 ], [ %366, %357 ], [ 602895371, %356 ], [ %355, %346 ], [ %345, %336 ], [ 1024025573, %333 ], [ %332, %331 ], [ %330, %317 ], [ %316, %307 ], [ %306, %303 ], [ 575129256, %302 ], [ 1461329585, %301 ], [ -1383092521, %300 ], [ %299, %290 ], [ %289, %280 ], [ -1065415454, %279 ], [ %278, %268 ], [ %267, %258 ], [ -1546506610, %257 ], [ 1125965030, %256 ], [ 1933344754, %255 ], [ 145729182, %243 ], [ 145729182, %242 ], [ %241, %235 ], [ %234, %228 ], [ %227, %224 ], [ 1125965030, %223 ], [ %222, %219 ], [ -1065415454, %218 ], [ %217, %216 ], [ %215, %204 ], [ %203, %194 ], [ 1461329585, %193 ], [ %192, %183 ], [ %182, %173 ], [ -23899486, %172 ], [ %171, %161 ], [ %160, %151 ], [ 1549476967, %141 ], [ %140, %137 ], [ -23899486, %136 ], [ %135, %126 ], [ %125, %116 ], [ 1277550661, %115 ], [ %114, %104 ], [ %103, %94 ], [ -1086247029, %93 ], [ 1694967354, %92 ], [ %91, %81 ], [ %80, %71 ], [ -549682066, %70 ], [ -1811098494, %66 ], [ %65, %64 ], [ %63, %53 ], [ %52, %43 ], [ %42, %39 ], [ 1694967354, %38 ], [ %37, %36 ], [ %35, %24 ], [ %23, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1761404988, i32 84209531
  br label %.backedge

24:                                               ; preds = %13
  %25 = load i32, i32* %5, align 4
  %26 = icmp slt i32 %.078, %25
  store i1 %26, i1* %4, align 1
  %27 = load i32, i32* @x.3, align 4
  %28 = load i32, i32* @y.4, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 1725631970, i32 84209531
  br label %.backedge

36:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %37 = select i1 %.0..0..0., i32 -1645093710, i32 454525661
  br label %.backedge

38:                                               ; preds = %13
  br label %.backedge

39:                                               ; preds = %13
  %40 = load i32, i32* %5, align 4
  %41 = icmp slt i32 %.076, %40
  %42 = select i1 %41, i32 1402436327, i32 -1951251681
  br label %.backedge

43:                                               ; preds = %13
  %44 = load i32, i32* @x.3, align 4
  %45 = load i32, i32* @y.4, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 -1247835889, i32 -1789631536
  br label %.backedge

53:                                               ; preds = %13
  %54 = icmp ne i32 %.078, %.076
  store i1 %54, i1* %3, align 1
  %55 = load i32, i32* @x.3, align 4
  %56 = load i32, i32* @y.4, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 602535210, i32 -1789631536
  br label %.backedge

64:                                               ; preds = %13
  %.0..0..0.59 = load volatile i1, i1* %3, align 1
  %65 = select i1 %.0..0..0.59, i32 1303627643, i32 -1811098494
  br label %.backedge

66:                                               ; preds = %13
  %67 = sext i32 %.078 to i64
  %68 = sext i32 %.076 to i64
  %69 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %67, i64 %68
  store i64 1000000000000, i64* %69, align 8
  br label %.backedge

70:                                               ; preds = %13
  br label %.backedge

71:                                               ; preds = %13
  %72 = load i32, i32* @x.3, align 4
  %73 = load i32, i32* @y.4, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 1962569830, i32 2078675118
  br label %.backedge

81:                                               ; preds = %13
  %82 = add i32 %.076, 1
  %83 = load i32, i32* @x.3, align 4
  %84 = load i32, i32* @y.4, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -2073078899, i32 2078675118
  br label %.backedge

92:                                               ; preds = %13
  br label %.backedge

93:                                               ; preds = %13
  br label %.backedge

94:                                               ; preds = %13
  %95 = load i32, i32* @x.3, align 4
  %96 = load i32, i32* @y.4, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 1220210563, i32 1740703001
  br label %.backedge

104:                                              ; preds = %13
  %105 = add i32 %.078, 1
  %106 = load i32, i32* @x.3, align 4
  %107 = load i32, i32* @y.4, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 456361696, i32 1740703001
  br label %.backedge

115:                                              ; preds = %13
  br label %.backedge

116:                                              ; preds = %13
  %117 = load i32, i32* @x.3, align 4
  %118 = load i32, i32* @y.4, align 4
  %119 = add i32 %117, -1
  %120 = mul i32 %119, %117
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %123, %122
  %125 = select i1 %124, i32 -177539886, i32 -539894911
  br label %.backedge

126:                                              ; preds = %13
  %127 = load i32, i32* @x.3, align 4
  %128 = load i32, i32* @y.4, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 19285068, i32 -539894911
  br label %.backedge

136:                                              ; preds = %13
  br label %.backedge

137:                                              ; preds = %13
  %138 = load i32, i32* %6, align 4
  %139 = icmp slt i32 %.074, %138
  %140 = select i1 %139, i32 -1107303051, i32 -1946146693
  br label %.backedge

141:                                              ; preds = %13
  %142 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %143 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %142, i32* nonnull dereferenceable(4) %8)
  %144 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %143, i64* nonnull dereferenceable(8) %9)
  %145 = load i64, i64* %9, align 8
  %146 = load i32, i32* %7, align 4
  %147 = sext i32 %146 to i64
  %148 = load i32, i32* %8, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %147, i64 %149
  store i64 %145, i64* %150, align 8
  br label %.backedge

151:                                              ; preds = %13
  %152 = load i32, i32* @x.3, align 4
  %153 = load i32, i32* @y.4, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 1635104002, i32 151694218
  br label %.backedge

161:                                              ; preds = %13
  %162 = add i32 %.074, 1
  %163 = load i32, i32* @x.3, align 4
  %164 = load i32, i32* @y.4, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -1430783627, i32 151694218
  br label %.backedge

172:                                              ; preds = %13
  br label %.backedge

173:                                              ; preds = %13
  %174 = load i32, i32* @x.3, align 4
  %175 = load i32, i32* @y.4, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 -1770376060, i32 -1220379883
  br label %.backedge

183:                                              ; preds = %13
  %184 = load i32, i32* @x.3, align 4
  %185 = load i32, i32* @y.4, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 -1146709431, i32 -1220379883
  br label %.backedge

193:                                              ; preds = %13
  br label %.backedge

194:                                              ; preds = %13
  %195 = load i32, i32* @x.3, align 4
  %196 = load i32, i32* @y.4, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 -279141693, i32 232372679
  br label %.backedge

204:                                              ; preds = %13
  %205 = load i32, i32* %5, align 4
  %206 = icmp slt i32 %.072, %205
  store i1 %206, i1* %2, align 1
  %207 = load i32, i32* @x.3, align 4
  %208 = load i32, i32* @y.4, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 1059765898, i32 232372679
  br label %.backedge

216:                                              ; preds = %13
  %.0..0..0.60 = load volatile i1, i1* %2, align 1
  %217 = select i1 %.0..0..0.60, i32 -1542068658, i32 -763953200
  br label %.backedge

218:                                              ; preds = %13
  br label %.backedge

219:                                              ; preds = %13
  %220 = load i32, i32* %5, align 4
  %221 = icmp slt i32 %.070, %220
  %222 = select i1 %221, i32 -1131518201, i32 -2111199506
  br label %.backedge

223:                                              ; preds = %13
  br label %.backedge

224:                                              ; preds = %13
  %225 = load i32, i32* %5, align 4
  %226 = icmp slt i32 %.068, %225
  %227 = select i1 %226, i32 -1292247277, i32 1998157463
  br label %.backedge

228:                                              ; preds = %13
  %229 = sext i32 %.070 to i64
  %230 = sext i32 %.072 to i64
  %231 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %229, i64 %230
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, 1000000000000
  %234 = select i1 %233, i32 1308052573, i32 1244800331
  br label %.backedge

235:                                              ; preds = %13
  %236 = sext i32 %.072 to i64
  %237 = sext i32 %.068 to i64
  %238 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %236, i64 %237
  %239 = load i64, i64* %238, align 8
  %240 = icmp eq i64 %239, 1000000000000
  %241 = select i1 %240, i32 1308052573, i32 -1553505617
  br label %.backedge

242:                                              ; preds = %13
  br label %.backedge

243:                                              ; preds = %13
  %244 = sext i32 %.070 to i64
  %245 = sext i32 %.072 to i64
  %246 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %244, i64 %245
  %247 = load i64, i64* %246, align 8
  %248 = sext i32 %.068 to i64
  %249 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %245, i64 %248
  %250 = load i64, i64* %249, align 8
  %251 = add i64 %250, %247
  store i64 %251, i64* %10, align 8
  %252 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %244, i64 %248
  %253 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %10, i64* nonnull dereferenceable(8) %252)
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %252, align 8
  br label %.backedge

255:                                              ; preds = %13
  br label %.backedge

256:                                              ; preds = %13
  %.neg84 = add i32 %.068, 1
  br label %.backedge

257:                                              ; preds = %13
  br label %.backedge

258:                                              ; preds = %13
  %259 = load i32, i32* @x.3, align 4
  %260 = load i32, i32* @y.4, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 1005082105, i32 1528501763
  br label %.backedge

268:                                              ; preds = %13
  %269 = add i32 %.070, 1
  %270 = load i32, i32* @x.3, align 4
  %271 = load i32, i32* @y.4, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 1215270321, i32 1528501763
  br label %.backedge

279:                                              ; preds = %13
  br label %.backedge

280:                                              ; preds = %13
  %281 = load i32, i32* @x.3, align 4
  %282 = load i32, i32* @y.4, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 -1806076045, i32 1867134463
  br label %.backedge

290:                                              ; preds = %13
  %291 = load i32, i32* @x.3, align 4
  %292 = load i32, i32* @y.4, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 552495799, i32 1867134463
  br label %.backedge

300:                                              ; preds = %13
  br label %.backedge

301:                                              ; preds = %13
  %.neg83 = add i32 %.072, 1
  br label %.backedge

302:                                              ; preds = %13
  br label %.backedge

303:                                              ; preds = %13
  %304 = load i32, i32* %5, align 4
  %305 = icmp slt i32 %.066, %304
  %306 = select i1 %305, i32 -1020629816, i32 -2050673785
  br label %.backedge

307:                                              ; preds = %13
  %308 = load i32, i32* @x.3, align 4
  %309 = load i32, i32* @y.4, align 4
  %310 = add i32 %308, -1
  %311 = mul i32 %310, %308
  %312 = and i32 %311, 1
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %314, %313
  %316 = select i1 %315, i32 403550866, i32 -681534591
  br label %.backedge

317:                                              ; preds = %13
  %318 = sext i32 %.066 to i64
  %319 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %318, i64 %318
  %320 = load i64, i64* %319, align 8
  %321 = icmp slt i64 %320, 0
  store i1 %321, i1* %1, align 1
  %322 = load i32, i32* @x.3, align 4
  %323 = load i32, i32* @y.4, align 4
  %324 = add i32 %322, -1
  %325 = mul i32 %324, %322
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %328, %327
  %330 = select i1 %329, i32 1241591573, i32 -681534591
  br label %.backedge

331:                                              ; preds = %13
  %.0..0..0.61 = load volatile i1, i1* %1, align 1
  %332 = select i1 %.0..0..0.61, i32 -2115279448, i32 1565626245
  br label %.backedge

333:                                              ; preds = %13
  %334 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %335 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %334, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

336:                                              ; preds = %13
  %337 = load i32, i32* @x.3, align 4
  %338 = load i32, i32* @y.4, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 877131009, i32 1244902831
  br label %.backedge

346:                                              ; preds = %13
  %347 = load i32, i32* @x.3, align 4
  %348 = load i32, i32* @y.4, align 4
  %349 = add i32 %347, -1
  %350 = mul i32 %349, %347
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %353, %352
  %355 = select i1 %354, i32 -163416969, i32 1244902831
  br label %.backedge

356:                                              ; preds = %13
  br label %.backedge

357:                                              ; preds = %13
  %358 = load i32, i32* @x.3, align 4
  %359 = load i32, i32* @y.4, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 -1018488884, i32 -537249330
  br label %.backedge

367:                                              ; preds = %13
  %368 = add i32 %.066, 1
  %369 = load i32, i32* @x.3, align 4
  %370 = load i32, i32* @y.4, align 4
  %371 = add i32 %369, -1
  %372 = mul i32 %371, %369
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %375, %374
  %377 = select i1 %376, i32 -1921528027, i32 -537249330
  br label %.backedge

378:                                              ; preds = %13
  br label %.backedge

379:                                              ; preds = %13
  br label %.backedge

380:                                              ; preds = %13
  %381 = load i32, i32* %5, align 4
  %382 = icmp slt i32 %.064, %381
  %383 = select i1 %382, i32 -1231893904, i32 -993286593
  br label %.backedge

384:                                              ; preds = %13
  br label %.backedge

385:                                              ; preds = %13
  %386 = load i32, i32* %5, align 4
  %387 = icmp slt i32 %.062, %386
  %388 = select i1 %387, i32 609769668, i32 1395051275
  br label %.backedge

389:                                              ; preds = %13
  %390 = sext i32 %.064 to i64
  %391 = sext i32 %.062 to i64
  %392 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %390, i64 %391
  %393 = load i64, i64* %392, align 8
  %.not82 = icmp eq i64 %393, 1000000000000
  %394 = select i1 %.not82, i32 -114000173, i32 1419611907
  br label %.backedge

395:                                              ; preds = %13
  %396 = sext i32 %.064 to i64
  %397 = sext i32 %.062 to i64
  %398 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @dist, i64 0, i64 %396, i64 %397
  %399 = load i64, i64* %398, align 8
  %400 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %399)
  br label %.backedge

401:                                              ; preds = %13
  %402 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

403:                                              ; preds = %13
  %404 = load i32, i32* %5, align 4
  %405 = add i32 %404, -1
  %.not = icmp eq i32 %.062, %405
  %406 = select i1 %.not, i32 807129763, i32 -225684649
  br label %.backedge

407:                                              ; preds = %13
  %408 = load i32, i32* @x.3, align 4
  %409 = load i32, i32* @y.4, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 1952601208, i32 -1534806904
  br label %.backedge

417:                                              ; preds = %13
  %418 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %419 = load i32, i32* @x.3, align 4
  %420 = load i32, i32* @y.4, align 4
  %421 = add i32 %419, -1
  %422 = mul i32 %421, %419
  %423 = and i32 %422, 1
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %425, %424
  %427 = select i1 %426, i32 334932284, i32 -1534806904
  br label %.backedge

428:                                              ; preds = %13
  br label %.backedge

429:                                              ; preds = %13
  %430 = load i32, i32* @x.3, align 4
  %431 = load i32, i32* @y.4, align 4
  %432 = add i32 %430, -1
  %433 = mul i32 %432, %430
  %434 = and i32 %433, 1
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %436, %435
  %438 = select i1 %437, i32 1602799621, i32 -2064700036
  br label %.backedge

439:                                              ; preds = %13
  %440 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %441 = load i32, i32* @x.3, align 4
  %442 = load i32, i32* @y.4, align 4
  %443 = add i32 %441, -1
  %444 = mul i32 %443, %441
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %447, %446
  %449 = select i1 %448, i32 1090704972, i32 -2064700036
  br label %.backedge

450:                                              ; preds = %13
  br label %.backedge

451:                                              ; preds = %13
  br label %.backedge

452:                                              ; preds = %13
  %453 = load i32, i32* @x.3, align 4
  %454 = load i32, i32* @y.4, align 4
  %455 = add i32 %453, -1
  %456 = mul i32 %455, %453
  %457 = and i32 %456, 1
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %459, %458
  %461 = select i1 %460, i32 551463094, i32 -89810366
  br label %.backedge

462:                                              ; preds = %13
  %.neg = add i32 %.062, 1
  %463 = load i32, i32* @x.3, align 4
  %464 = load i32, i32* @y.4, align 4
  %465 = add i32 %463, -1
  %466 = mul i32 %465, %463
  %467 = and i32 %466, 1
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %469, %468
  %471 = select i1 %470, i32 -497826249, i32 -89810366
  br label %.backedge

472:                                              ; preds = %13
  br label %.backedge

473:                                              ; preds = %13
  br label %.backedge

474:                                              ; preds = %13
  %475 = add i32 %.064, 1
  br label %.backedge

476:                                              ; preds = %13
  br label %.backedge

477:                                              ; preds = %13
  ret i32 0

478:                                              ; preds = %13
  br label %.backedge

479:                                              ; preds = %13
  br label %.backedge

480:                                              ; preds = %13
  %481 = add i32 %.076, 1
  br label %.backedge

482:                                              ; preds = %13
  %483 = add i32 %.078, 1
  br label %.backedge

484:                                              ; preds = %13
  br label %.backedge

485:                                              ; preds = %13
  %486 = add i32 %.074, 1
  br label %.backedge

487:                                              ; preds = %13
  br label %.backedge

488:                                              ; preds = %13
  br label %.backedge

489:                                              ; preds = %13
  %490 = add i32 %.070, 1
  br label %.backedge

491:                                              ; preds = %13
  br label %.backedge

492:                                              ; preds = %13
  br label %.backedge

493:                                              ; preds = %13
  br label %.backedge

494:                                              ; preds = %13
  %495 = add i32 %.066, 1
  br label %.backedge

496:                                              ; preds = %13
  %497 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

498:                                              ; preds = %13
  %499 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

500:                                              ; preds = %13
  %501 = add i32 %.062, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i64**, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.5, align 4
  %11 = load i32, i32* @y.6, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ -1916800315, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1916800315, label %18
    i32 1928319136, label %21
    i32 -1362380542, label %39
    i32 -1299120283, label %41
    i32 1849109734, label %51
    i32 -583404781, label %62
    i32 -813695392, label %63
    i32 994216046, label %73
    i32 -283618015, label %84
    i32 -1737146241, label %85
    i32 -1380082716, label %95
    i32 1970900672, label %106
    i32 -378677038, label %107
    i32 1634201553, label %108
    i32 -268291155, label %110
    i32 -34994561, label %112
  ]

.backedge:                                        ; preds = %17, %112, %110, %108, %107, %95, %85, %84, %73, %63, %62, %51, %41, %39, %21, %18
  %.0.be = phi i32 [ %.0, %17 ], [ -1380082716, %112 ], [ 994216046, %110 ], [ 1849109734, %108 ], [ 1928319136, %107 ], [ %105, %95 ], [ %94, %85 ], [ -1737146241, %84 ], [ %83, %73 ], [ %72, %63 ], [ -1737146241, %62 ], [ %61, %51 ], [ %50, %41 ], [ %40, %39 ], [ %38, %21 ], [ %20, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %.0..0..0.1 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0., %.0..0..0.1
  %20 = select i1 %19, i32 1928319136, i32 -378677038
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %7, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %6, align 8
  %24 = alloca i64*, align 8
  store i64** %24, i64*** %5, align 8
  %.0..0..0.8 = load volatile i64**, i64*** %6, align 8
  store i64* %0, i64** %.0..0..0.8, align 8
  %.0..0..0.12 = load volatile i64**, i64*** %5, align 8
  store i64* %1, i64** %.0..0..0.12, align 8
  %.0..0..0.13 = load volatile i64**, i64*** %5, align 8
  %25 = load i64*, i64** %.0..0..0.13, align 8
  %26 = load i64, i64* %25, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %6, align 8
  %27 = load i64*, i64** %.0..0..0.9, align 8
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %26, %28
  store i1 %29, i1* %4, align 1
  %30 = load i32, i32* @x.5, align 4
  %31 = load i32, i32* @y.6, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -1362380542, i32 -378677038
  br label %.backedge

39:                                               ; preds = %17
  %.0..0..0.16 = load volatile i1, i1* %4, align 1
  %40 = select i1 %.0..0..0.16, i32 -1299120283, i32 -813695392
  br label %.backedge

41:                                               ; preds = %17
  %42 = load i32, i32* @x.5, align 4
  %43 = load i32, i32* @y.6, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 1849109734, i32 1634201553
  br label %.backedge

51:                                               ; preds = %17
  %.0..0..0.14 = load volatile i64**, i64*** %5, align 8
  %52 = load i64*, i64** %.0..0..0.14, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %7, align 8
  store i64* %52, i64** %.0..0..0.2, align 8
  %53 = load i32, i32* @x.5, align 4
  %54 = load i32, i32* @y.6, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -583404781, i32 1634201553
  br label %.backedge

62:                                               ; preds = %17
  br label %.backedge

63:                                               ; preds = %17
  %64 = load i32, i32* @x.5, align 4
  %65 = load i32, i32* @y.6, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 994216046, i32 -268291155
  br label %.backedge

73:                                               ; preds = %17
  %.0..0..0.10 = load volatile i64**, i64*** %6, align 8
  %74 = load i64*, i64** %.0..0..0.10, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %7, align 8
  store i64* %74, i64** %.0..0..0.3, align 8
  %75 = load i32, i32* @x.5, align 4
  %76 = load i32, i32* @y.6, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 -283618015, i32 -268291155
  br label %.backedge

84:                                               ; preds = %17
  br label %.backedge

85:                                               ; preds = %17
  %86 = load i32, i32* @x.5, align 4
  %87 = load i32, i32* @y.6, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 -1380082716, i32 -34994561
  br label %.backedge

95:                                               ; preds = %17
  %.0..0..0.4 = load volatile i64**, i64*** %7, align 8
  %96 = load i64*, i64** %.0..0..0.4, align 8
  store i64* %96, i64** %3, align 8
  %97 = load i32, i32* @x.5, align 4
  %98 = load i32, i32* @y.6, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 1970900672, i32 -34994561
  br label %.backedge

106:                                              ; preds = %17
  %.0..0..0.17 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.17

107:                                              ; preds = %17
  br label %.backedge

108:                                              ; preds = %17
  %.0..0..0.15 = load volatile i64**, i64*** %5, align 8
  %109 = load i64*, i64** %.0..0..0.15, align 8
  %.0..0..0.5 = load volatile i64**, i64*** %7, align 8
  store i64* %109, i64** %.0..0..0.5, align 8
  br label %.backedge

110:                                              ; preds = %17
  %.0..0..0.11 = load volatile i64**, i64*** %6, align 8
  %111 = load i64*, i64** %.0..0..0.11, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %7, align 8
  store i64* %111, i64** %.0..0..0.6, align 8
  br label %.backedge

112:                                              ; preds = %17
  %.0..0..0.7 = load volatile i64**, i64*** %7, align 8
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s382382026.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.7, align 4
  %4 = load i32, i32* @y.8, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1212746273, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1212746273, label %11
    i32 -1783258919, label %14
    i32 -161105962, label %24
    i32 1586752912, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1783258919, i32 1586752912
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -161105962, i32 1586752912
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1783258919, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
