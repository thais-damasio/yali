; ModuleID = 'build_ollvm/programs/p02363/s648202754.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s648202754.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@d = local_unnamed_addr global [1005 x [1005 x i32]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s648202754.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %13, i32* nonnull dereferenceable(4) %7)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.085 = phi i32 [ 0, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.0 = phi i32 [ -2123387267, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -2123387267, label %16
    i32 -777945737, label %20
    i32 915505207, label %21
    i32 -529746253, label %25
    i32 1293918167, label %29
    i32 181534088, label %31
    i32 -1252384655, label %32
    i32 -1197773543, label %34
    i32 1553034219, label %35
    i32 -886800696, label %45
    i32 78633723, label %57
    i32 67521489, label %59
    i32 -324975525, label %62
    i32 1754663646, label %64
    i32 290151757, label %65
    i32 1420766839, label %69
    i32 -1462391301, label %79
    i32 -1385665866, label %98
    i32 -2079664338, label %99
    i32 1162199509, label %101
    i32 1385639930, label %111
    i32 -476424807, label %121
    i32 -133932983, label %122
    i32 -1799783013, label %126
    i32 -1072427327, label %136
    i32 913462408, label %146
    i32 1216265829, label %147
    i32 1870555030, label %157
    i32 -567471506, label %169
    i32 -455573288, label %171
    i32 -1570826243, label %172
    i32 1756197687, label %176
    i32 -472394653, label %183
    i32 921955035, label %190
    i32 -962589633, label %200
    i32 1644822079, label %226
    i32 1151436294, label %227
    i32 -805135509, label %228
    i32 546411960, label %230
    i32 1766575302, label %231
    i32 -1830785279, label %233
    i32 -1413882853, label %234
    i32 -462285009, label %236
    i32 -1838343817, label %237
    i32 -890178127, label %241
    i32 -91840138, label %247
    i32 -2053389883, label %250
    i32 -706120871, label %260
    i32 2011627202, label %270
    i32 2068520850, label %271
    i32 -493345949, label %281
    i32 -671317113, label %291
    i32 1628140269, label %292
    i32 1057265489, label %302
    i32 -1961081936, label %312
    i32 -1268802342, label %313
    i32 -1603301755, label %323
    i32 1640704281, label %335
    i32 -476837231, label %337
    i32 1273057470, label %338
    i32 1720975508, label %342
    i32 -1035170495, label %352
    i32 416101636, label %367
    i32 -271653866, label %369
    i32 -1185995817, label %371
    i32 -772289186, label %381
    i32 1736371514, label %396
    i32 1826628959, label %397
    i32 120444571, label %402
    i32 -110714556, label %404
    i32 832032668, label %414
    i32 -1414617822, label %424
    i32 1273780366, label %425
    i32 1190447596, label %435
    i32 1831146784, label %445
    i32 1360430045, label %446
    i32 -1718238461, label %447
    i32 388385300, label %450
    i32 -50683925, label %460
    i32 -1622854238, label %470
    i32 -1448801784, label %471
    i32 -2074446610, label %481
    i32 232344818, label %491
    i32 1962217239, label %492
    i32 -36629473, label %493
    i32 1537141658, label %503
    i32 1929924377, label %504
    i32 -1646604116, label %505
    i32 321470307, label %506
    i32 -1401570596, label %523
    i32 -200545047, label %524
    i32 329725774, label %526
    i32 393500169, label %527
    i32 -504051648, label %528
    i32 2117693721, label %529
    i32 1162141227, label %535
    i32 -691534624, label %536
    i32 122550070, label %538
    i32 1051495062, label %539
  ]

.backedge:                                        ; preds = %15, %539, %538, %536, %535, %529, %528, %527, %526, %524, %523, %506, %505, %504, %503, %493, %492, %481, %471, %470, %460, %450, %447, %446, %445, %435, %425, %424, %414, %404, %402, %397, %396, %381, %371, %369, %367, %352, %342, %338, %337, %335, %323, %313, %312, %302, %292, %291, %281, %271, %270, %260, %250, %247, %241, %237, %236, %234, %233, %231, %230, %228, %227, %226, %200, %190, %183, %176, %172, %171, %169, %157, %147, %146, %136, %126, %122, %121, %111, %101, %99, %98, %79, %69, %65, %64, %62, %59, %57, %45, %35, %34, %32, %31, %29, %25, %21, %20, %16
  %.085.be = phi i32 [ %.085, %15 ], [ %.085, %539 ], [ %.085, %538 ], [ %.085, %536 ], [ %.085, %535 ], [ %.085, %529 ], [ %.085, %528 ], [ %.085, %527 ], [ %.085, %526 ], [ %.085, %524 ], [ %.085, %523 ], [ %.085, %506 ], [ %.085, %505 ], [ %.085, %504 ], [ %.085, %503 ], [ %.085, %493 ], [ %.085, %492 ], [ %.085, %481 ], [ %.085, %471 ], [ %.085, %470 ], [ %.085, %460 ], [ %.085, %450 ], [ %.085, %447 ], [ %.085, %446 ], [ %.085, %445 ], [ %.085, %435 ], [ %.085, %425 ], [ %.085, %424 ], [ %.085, %414 ], [ %.085, %404 ], [ %.085, %402 ], [ %.085, %397 ], [ %.085, %396 ], [ %.085, %381 ], [ %.085, %371 ], [ %.085, %369 ], [ %.085, %367 ], [ %.085, %352 ], [ %.085, %342 ], [ %.085, %338 ], [ %.085, %337 ], [ %.085, %335 ], [ %.085, %323 ], [ %.085, %313 ], [ %.085, %312 ], [ %.085, %302 ], [ %.085, %292 ], [ %.085, %291 ], [ %.085, %281 ], [ %.085, %271 ], [ %.085, %270 ], [ %.085, %260 ], [ %.085, %250 ], [ %.085, %247 ], [ %.085, %241 ], [ %.085, %237 ], [ %.085, %236 ], [ %.085, %234 ], [ %.085, %233 ], [ %.085, %231 ], [ %.085, %230 ], [ %.085, %228 ], [ %.085, %227 ], [ %.085, %226 ], [ %.085, %200 ], [ %.085, %190 ], [ %.085, %183 ], [ %.085, %176 ], [ %.085, %172 ], [ %.085, %171 ], [ %.085, %169 ], [ %.085, %157 ], [ %.085, %147 ], [ %.085, %146 ], [ %.085, %136 ], [ %.085, %126 ], [ %.085, %122 ], [ %.085, %121 ], [ %.085, %111 ], [ %.085, %101 ], [ %.085, %99 ], [ %.085, %98 ], [ %.085, %79 ], [ %.085, %69 ], [ %.085, %65 ], [ %.085, %64 ], [ %.085, %62 ], [ %.085, %59 ], [ %.085, %57 ], [ %.085, %45 ], [ %.085, %35 ], [ %.085, %34 ], [ %33, %32 ], [ %.085, %31 ], [ %.085, %29 ], [ %.085, %25 ], [ %.085, %21 ], [ %.085, %20 ], [ %.085, %16 ]
  %.083.be = phi i32 [ %.083, %15 ], [ %.083, %539 ], [ %.083, %538 ], [ %.083, %536 ], [ %.083, %535 ], [ %.083, %529 ], [ %.083, %528 ], [ %.083, %527 ], [ %.083, %526 ], [ %.083, %524 ], [ %.083, %523 ], [ %.083, %506 ], [ %.083, %505 ], [ %.083, %504 ], [ %.083, %503 ], [ %.083, %493 ], [ %.083, %492 ], [ %.083, %481 ], [ %.083, %471 ], [ %.083, %470 ], [ %.083, %460 ], [ %.083, %450 ], [ %.083, %447 ], [ %.083, %446 ], [ %.083, %445 ], [ %.083, %435 ], [ %.083, %425 ], [ %.083, %424 ], [ %.083, %414 ], [ %.083, %404 ], [ %.083, %402 ], [ %.083, %397 ], [ %.083, %396 ], [ %.083, %381 ], [ %.083, %371 ], [ %.083, %369 ], [ %.083, %367 ], [ %.083, %352 ], [ %.083, %342 ], [ %.083, %338 ], [ %.083, %337 ], [ %.083, %335 ], [ %.083, %323 ], [ %.083, %313 ], [ %.083, %312 ], [ %.083, %302 ], [ %.083, %292 ], [ %.083, %291 ], [ %.083, %281 ], [ %.083, %271 ], [ %.083, %270 ], [ %.083, %260 ], [ %.083, %250 ], [ %.083, %247 ], [ %.083, %241 ], [ %.083, %237 ], [ %.083, %236 ], [ %.083, %234 ], [ %.083, %233 ], [ %.083, %231 ], [ %.083, %230 ], [ %.083, %228 ], [ %.083, %227 ], [ %.083, %226 ], [ %.083, %200 ], [ %.083, %190 ], [ %.083, %183 ], [ %.083, %176 ], [ %.083, %172 ], [ %.083, %171 ], [ %.083, %169 ], [ %.083, %157 ], [ %.083, %147 ], [ %.083, %146 ], [ %.083, %136 ], [ %.083, %126 ], [ %.083, %122 ], [ %.083, %121 ], [ %.083, %111 ], [ %.083, %101 ], [ %.083, %99 ], [ %.083, %98 ], [ %.083, %79 ], [ %.083, %69 ], [ %.083, %65 ], [ %.083, %64 ], [ %.083, %62 ], [ %.083, %59 ], [ %.083, %57 ], [ %.083, %45 ], [ %.083, %35 ], [ %.083, %34 ], [ %.083, %32 ], [ %.083, %31 ], [ %30, %29 ], [ %.083, %25 ], [ %.083, %21 ], [ 0, %20 ], [ %.083, %16 ]
  %.081.be = phi i32 [ %.081, %15 ], [ %.081, %539 ], [ %.081, %538 ], [ %.081, %536 ], [ %.081, %535 ], [ %.081, %529 ], [ %.081, %528 ], [ %.081, %527 ], [ %.081, %526 ], [ %.081, %524 ], [ %.081, %523 ], [ %.081, %506 ], [ %.081, %505 ], [ %.081, %504 ], [ %.081, %503 ], [ %.081, %493 ], [ %.081, %492 ], [ %.081, %481 ], [ %.081, %471 ], [ %.081, %470 ], [ %.081, %460 ], [ %.081, %450 ], [ %.081, %447 ], [ %.081, %446 ], [ %.081, %445 ], [ %.081, %435 ], [ %.081, %425 ], [ %.081, %424 ], [ %.081, %414 ], [ %.081, %404 ], [ %.081, %402 ], [ %.081, %397 ], [ %.081, %396 ], [ %.081, %381 ], [ %.081, %371 ], [ %.081, %369 ], [ %.081, %367 ], [ %.081, %352 ], [ %.081, %342 ], [ %.081, %338 ], [ %.081, %337 ], [ %.081, %335 ], [ %.081, %323 ], [ %.081, %313 ], [ %.081, %312 ], [ %.081, %302 ], [ %.081, %292 ], [ %.081, %291 ], [ %.081, %281 ], [ %.081, %271 ], [ %.081, %270 ], [ %.081, %260 ], [ %.081, %250 ], [ %.081, %247 ], [ %.081, %241 ], [ %.081, %237 ], [ %.081, %236 ], [ %.081, %234 ], [ %.081, %233 ], [ %.081, %231 ], [ %.081, %230 ], [ %.081, %228 ], [ %.081, %227 ], [ %.081, %226 ], [ %.081, %200 ], [ %.081, %190 ], [ %.081, %183 ], [ %.081, %176 ], [ %.081, %172 ], [ %.081, %171 ], [ %.081, %169 ], [ %.081, %157 ], [ %.081, %147 ], [ %.081, %146 ], [ %.081, %136 ], [ %.081, %126 ], [ %.081, %122 ], [ %.081, %121 ], [ %.081, %111 ], [ %.081, %101 ], [ %.081, %99 ], [ %.081, %98 ], [ %.081, %79 ], [ %.081, %69 ], [ %.081, %65 ], [ %.081, %64 ], [ %63, %62 ], [ %.081, %59 ], [ %.081, %57 ], [ %.081, %45 ], [ %.081, %35 ], [ 0, %34 ], [ %.081, %32 ], [ %.081, %31 ], [ %.081, %29 ], [ %.081, %25 ], [ %.081, %21 ], [ %.081, %20 ], [ %.081, %16 ]
  %.079.be = phi i32 [ %.079, %15 ], [ %.079, %539 ], [ %.079, %538 ], [ %.079, %536 ], [ %.079, %535 ], [ %.079, %529 ], [ %.079, %528 ], [ %.079, %527 ], [ %.079, %526 ], [ %.079, %524 ], [ %.079, %523 ], [ %.079, %506 ], [ %.079, %505 ], [ %.079, %504 ], [ %.079, %503 ], [ %.079, %493 ], [ %.079, %492 ], [ %.079, %481 ], [ %.079, %471 ], [ %.079, %470 ], [ %.079, %460 ], [ %.079, %450 ], [ %.079, %447 ], [ %.079, %446 ], [ %.079, %445 ], [ %.079, %435 ], [ %.079, %425 ], [ %.079, %424 ], [ %.079, %414 ], [ %.079, %404 ], [ %.079, %402 ], [ %.079, %397 ], [ %.079, %396 ], [ %.079, %381 ], [ %.079, %371 ], [ %.079, %369 ], [ %.079, %367 ], [ %.079, %352 ], [ %.079, %342 ], [ %.079, %338 ], [ %.079, %337 ], [ %.079, %335 ], [ %.079, %323 ], [ %.079, %313 ], [ %.079, %312 ], [ %.079, %302 ], [ %.079, %292 ], [ %.079, %291 ], [ %.079, %281 ], [ %.079, %271 ], [ %.079, %270 ], [ %.079, %260 ], [ %.079, %250 ], [ %.079, %247 ], [ %.079, %241 ], [ %.079, %237 ], [ %.079, %236 ], [ %.079, %234 ], [ %.079, %233 ], [ %.079, %231 ], [ %.079, %230 ], [ %.079, %228 ], [ %.079, %227 ], [ %.079, %226 ], [ %.079, %200 ], [ %.079, %190 ], [ %.079, %183 ], [ %.079, %176 ], [ %.079, %172 ], [ %.079, %171 ], [ %.079, %169 ], [ %.079, %157 ], [ %.079, %147 ], [ %.079, %146 ], [ %.079, %136 ], [ %.079, %126 ], [ %.079, %122 ], [ %.079, %121 ], [ %.079, %111 ], [ %.079, %101 ], [ %100, %99 ], [ %.079, %98 ], [ %.079, %79 ], [ %.079, %69 ], [ %.079, %65 ], [ 0, %64 ], [ %.079, %62 ], [ %.079, %59 ], [ %.079, %57 ], [ %.079, %45 ], [ %.079, %35 ], [ %.079, %34 ], [ %.079, %32 ], [ %.079, %31 ], [ %.079, %29 ], [ %.079, %25 ], [ %.079, %21 ], [ %.079, %20 ], [ %.079, %16 ]
  %.077.be = phi i32 [ %.077, %15 ], [ %.077, %539 ], [ %.077, %538 ], [ %.077, %536 ], [ %.077, %535 ], [ %.077, %529 ], [ %.077, %528 ], [ %.077, %527 ], [ %.077, %526 ], [ %.077, %524 ], [ %.077, %523 ], [ %.077, %506 ], [ %.077, %505 ], [ %.077, %504 ], [ 0, %503 ], [ %.077, %493 ], [ %.077, %492 ], [ %.077, %481 ], [ %.077, %471 ], [ %.077, %470 ], [ %.077, %460 ], [ %.077, %450 ], [ %.077, %447 ], [ %.077, %446 ], [ %.077, %445 ], [ %.077, %435 ], [ %.077, %425 ], [ %.077, %424 ], [ %.077, %414 ], [ %.077, %404 ], [ %.077, %402 ], [ %.077, %397 ], [ %.077, %396 ], [ %.077, %381 ], [ %.077, %371 ], [ %.077, %369 ], [ %.077, %367 ], [ %.077, %352 ], [ %.077, %342 ], [ %.077, %338 ], [ %.077, %337 ], [ %.077, %335 ], [ %.077, %323 ], [ %.077, %313 ], [ %.077, %312 ], [ %.077, %302 ], [ %.077, %292 ], [ %.077, %291 ], [ %.077, %281 ], [ %.077, %271 ], [ %.077, %270 ], [ %.077, %260 ], [ %.077, %250 ], [ %.077, %247 ], [ %.077, %241 ], [ %.077, %237 ], [ %.077, %236 ], [ %235, %234 ], [ %.077, %233 ], [ %.077, %231 ], [ %.077, %230 ], [ %.077, %228 ], [ %.077, %227 ], [ %.077, %226 ], [ %.077, %200 ], [ %.077, %190 ], [ %.077, %183 ], [ %.077, %176 ], [ %.077, %172 ], [ %.077, %171 ], [ %.077, %169 ], [ %.077, %157 ], [ %.077, %147 ], [ %.077, %146 ], [ %.077, %136 ], [ %.077, %126 ], [ %.077, %122 ], [ %.077, %121 ], [ 0, %111 ], [ %.077, %101 ], [ %.077, %99 ], [ %.077, %98 ], [ %.077, %79 ], [ %.077, %69 ], [ %.077, %65 ], [ %.077, %64 ], [ %.077, %62 ], [ %.077, %59 ], [ %.077, %57 ], [ %.077, %45 ], [ %.077, %35 ], [ %.077, %34 ], [ %.077, %32 ], [ %.077, %31 ], [ %.077, %29 ], [ %.077, %25 ], [ %.077, %21 ], [ %.077, %20 ], [ %.077, %16 ]
  %.075.be = phi i32 [ %.075, %15 ], [ %.075, %539 ], [ %.075, %538 ], [ %.075, %536 ], [ %.075, %535 ], [ %.075, %529 ], [ %.075, %528 ], [ %.075, %527 ], [ %.075, %526 ], [ %.075, %524 ], [ %.075, %523 ], [ %.075, %506 ], [ %.075, %505 ], [ 0, %504 ], [ %.075, %503 ], [ %.075, %493 ], [ %.075, %492 ], [ %.075, %481 ], [ %.075, %471 ], [ %.075, %470 ], [ %.075, %460 ], [ %.075, %450 ], [ %.075, %447 ], [ %.075, %446 ], [ %.075, %445 ], [ %.075, %435 ], [ %.075, %425 ], [ %.075, %424 ], [ %.075, %414 ], [ %.075, %404 ], [ %.075, %402 ], [ %.075, %397 ], [ %.075, %396 ], [ %.075, %381 ], [ %.075, %371 ], [ %.075, %369 ], [ %.075, %367 ], [ %.075, %352 ], [ %.075, %342 ], [ %.075, %338 ], [ %.075, %337 ], [ %.075, %335 ], [ %.075, %323 ], [ %.075, %313 ], [ %.075, %312 ], [ %.075, %302 ], [ %.075, %292 ], [ %.075, %291 ], [ %.075, %281 ], [ %.075, %271 ], [ %.075, %270 ], [ %.075, %260 ], [ %.075, %250 ], [ %.075, %247 ], [ %.075, %241 ], [ %.075, %237 ], [ %.075, %236 ], [ %.075, %234 ], [ %.075, %233 ], [ %232, %231 ], [ %.075, %230 ], [ %.075, %228 ], [ %.075, %227 ], [ %.075, %226 ], [ %.075, %200 ], [ %.075, %190 ], [ %.075, %183 ], [ %.075, %176 ], [ %.075, %172 ], [ %.075, %171 ], [ %.075, %169 ], [ %.075, %157 ], [ %.075, %147 ], [ %.075, %146 ], [ 0, %136 ], [ %.075, %126 ], [ %.075, %122 ], [ %.075, %121 ], [ %.075, %111 ], [ %.075, %101 ], [ %.075, %99 ], [ %.075, %98 ], [ %.075, %79 ], [ %.075, %69 ], [ %.075, %65 ], [ %.075, %64 ], [ %.075, %62 ], [ %.075, %59 ], [ %.075, %57 ], [ %.075, %45 ], [ %.075, %35 ], [ %.075, %34 ], [ %.075, %32 ], [ %.075, %31 ], [ %.075, %29 ], [ %.075, %25 ], [ %.075, %21 ], [ %.075, %20 ], [ %.075, %16 ]
  %.073.be = phi i32 [ %.073, %15 ], [ %.073, %539 ], [ %.073, %538 ], [ %.073, %536 ], [ %.073, %535 ], [ %.073, %529 ], [ %.073, %528 ], [ %.073, %527 ], [ %.073, %526 ], [ %.073, %524 ], [ %.073, %523 ], [ %.073, %506 ], [ %.073, %505 ], [ %.073, %504 ], [ %.073, %503 ], [ %.073, %493 ], [ %.073, %492 ], [ %.073, %481 ], [ %.073, %471 ], [ %.073, %470 ], [ %.073, %460 ], [ %.073, %450 ], [ %.073, %447 ], [ %.073, %446 ], [ %.073, %445 ], [ %.073, %435 ], [ %.073, %425 ], [ %.073, %424 ], [ %.073, %414 ], [ %.073, %404 ], [ %.073, %402 ], [ %.073, %397 ], [ %.073, %396 ], [ %.073, %381 ], [ %.073, %371 ], [ %.073, %369 ], [ %.073, %367 ], [ %.073, %352 ], [ %.073, %342 ], [ %.073, %338 ], [ %.073, %337 ], [ %.073, %335 ], [ %.073, %323 ], [ %.073, %313 ], [ %.073, %312 ], [ %.073, %302 ], [ %.073, %292 ], [ %.073, %291 ], [ %.073, %281 ], [ %.073, %271 ], [ %.073, %270 ], [ %.073, %260 ], [ %.073, %250 ], [ %.073, %247 ], [ %.073, %241 ], [ %.073, %237 ], [ %.073, %236 ], [ %.073, %234 ], [ %.073, %233 ], [ %.073, %231 ], [ %.073, %230 ], [ %229, %228 ], [ %.073, %227 ], [ %.073, %226 ], [ %.073, %200 ], [ %.073, %190 ], [ %.073, %183 ], [ %.073, %176 ], [ %.073, %172 ], [ 0, %171 ], [ %.073, %169 ], [ %.073, %157 ], [ %.073, %147 ], [ %.073, %146 ], [ %.073, %136 ], [ %.073, %126 ], [ %.073, %122 ], [ %.073, %121 ], [ %.073, %111 ], [ %.073, %101 ], [ %.073, %99 ], [ %.073, %98 ], [ %.073, %79 ], [ %.073, %69 ], [ %.073, %65 ], [ %.073, %64 ], [ %.073, %62 ], [ %.073, %59 ], [ %.073, %57 ], [ %.073, %45 ], [ %.073, %35 ], [ %.073, %34 ], [ %.073, %32 ], [ %.073, %31 ], [ %.073, %29 ], [ %.073, %25 ], [ %.073, %21 ], [ %.073, %20 ], [ %.073, %16 ]
  %.071.be = phi i32 [ %.071, %15 ], [ %.071, %539 ], [ %.071, %538 ], [ %.071, %536 ], [ %.071, %535 ], [ %.071, %529 ], [ %.071, %528 ], [ %.071, %527 ], [ %.071, %526 ], [ %525, %524 ], [ %.071, %523 ], [ %.071, %506 ], [ %.071, %505 ], [ %.071, %504 ], [ %.071, %503 ], [ %.071, %493 ], [ %.071, %492 ], [ %.071, %481 ], [ %.071, %471 ], [ %.071, %470 ], [ %.071, %460 ], [ %.071, %450 ], [ %.071, %447 ], [ %.071, %446 ], [ %.071, %445 ], [ %.071, %435 ], [ %.071, %425 ], [ %.071, %424 ], [ %.071, %414 ], [ %.071, %404 ], [ %.071, %402 ], [ %.071, %397 ], [ %.071, %396 ], [ %.071, %381 ], [ %.071, %371 ], [ %.071, %369 ], [ %.071, %367 ], [ %.071, %352 ], [ %.071, %342 ], [ %.071, %338 ], [ %.071, %337 ], [ %.071, %335 ], [ %.071, %323 ], [ %.071, %313 ], [ %.071, %312 ], [ %.071, %302 ], [ %.071, %292 ], [ %.071, %291 ], [ %.neg89, %281 ], [ %.071, %271 ], [ %.071, %270 ], [ %.071, %260 ], [ %.071, %250 ], [ %.071, %247 ], [ %.071, %241 ], [ %.071, %237 ], [ 0, %236 ], [ %.071, %234 ], [ %.071, %233 ], [ %.071, %231 ], [ %.071, %230 ], [ %.071, %228 ], [ %.071, %227 ], [ %.071, %226 ], [ %.071, %200 ], [ %.071, %190 ], [ %.071, %183 ], [ %.071, %176 ], [ %.071, %172 ], [ %.071, %171 ], [ %.071, %169 ], [ %.071, %157 ], [ %.071, %147 ], [ %.071, %146 ], [ %.071, %136 ], [ %.071, %126 ], [ %.071, %122 ], [ %.071, %121 ], [ %.071, %111 ], [ %.071, %101 ], [ %.071, %99 ], [ %.071, %98 ], [ %.071, %79 ], [ %.071, %69 ], [ %.071, %65 ], [ %.071, %64 ], [ %.071, %62 ], [ %.071, %59 ], [ %.071, %57 ], [ %.071, %45 ], [ %.071, %35 ], [ %.071, %34 ], [ %.071, %32 ], [ %.071, %31 ], [ %.071, %29 ], [ %.071, %25 ], [ %.071, %21 ], [ %.071, %20 ], [ %.071, %16 ]
  %.069.be = phi i32 [ %.069, %15 ], [ %.069, %539 ], [ %.069, %538 ], [ %.069, %536 ], [ %.069, %535 ], [ %.069, %529 ], [ %.069, %528 ], [ %.069, %527 ], [ 0, %526 ], [ %.069, %524 ], [ %.069, %523 ], [ %.069, %506 ], [ %.069, %505 ], [ %.069, %504 ], [ %.069, %503 ], [ %.069, %493 ], [ %.069, %492 ], [ %.069, %481 ], [ %.069, %471 ], [ %.069, %470 ], [ %.069, %460 ], [ %.069, %450 ], [ %448, %447 ], [ %.069, %446 ], [ %.069, %445 ], [ %.069, %435 ], [ %.069, %425 ], [ %.069, %424 ], [ %.069, %414 ], [ %.069, %404 ], [ %.069, %402 ], [ %.069, %397 ], [ %.069, %396 ], [ %.069, %381 ], [ %.069, %371 ], [ %.069, %369 ], [ %.069, %367 ], [ %.069, %352 ], [ %.069, %342 ], [ %.069, %338 ], [ %.069, %337 ], [ %.069, %335 ], [ %.069, %323 ], [ %.069, %313 ], [ %.069, %312 ], [ 0, %302 ], [ %.069, %292 ], [ %.069, %291 ], [ %.069, %281 ], [ %.069, %271 ], [ %.069, %270 ], [ %.069, %260 ], [ %.069, %250 ], [ %.069, %247 ], [ %.069, %241 ], [ %.069, %237 ], [ %.069, %236 ], [ %.069, %234 ], [ %.069, %233 ], [ %.069, %231 ], [ %.069, %230 ], [ %.069, %228 ], [ %.069, %227 ], [ %.069, %226 ], [ %.069, %200 ], [ %.069, %190 ], [ %.069, %183 ], [ %.069, %176 ], [ %.069, %172 ], [ %.069, %171 ], [ %.069, %169 ], [ %.069, %157 ], [ %.069, %147 ], [ %.069, %146 ], [ %.069, %136 ], [ %.069, %126 ], [ %.069, %122 ], [ %.069, %121 ], [ %.069, %111 ], [ %.069, %101 ], [ %.069, %99 ], [ %.069, %98 ], [ %.069, %79 ], [ %.069, %69 ], [ %.069, %65 ], [ %.069, %64 ], [ %.069, %62 ], [ %.069, %59 ], [ %.069, %57 ], [ %.069, %45 ], [ %.069, %35 ], [ %.069, %34 ], [ %.069, %32 ], [ %.069, %31 ], [ %.069, %29 ], [ %.069, %25 ], [ %.069, %21 ], [ %.069, %20 ], [ %.069, %16 ]
  %.067.be = phi i32 [ %.067, %15 ], [ %.067, %539 ], [ %.067, %538 ], [ %537, %536 ], [ %.067, %535 ], [ %.067, %529 ], [ %.067, %528 ], [ %.067, %527 ], [ %.067, %526 ], [ %.067, %524 ], [ %.067, %523 ], [ %.067, %506 ], [ %.067, %505 ], [ %.067, %504 ], [ %.067, %503 ], [ %.067, %493 ], [ %.067, %492 ], [ %.067, %481 ], [ %.067, %471 ], [ %.067, %470 ], [ %.067, %460 ], [ %.067, %450 ], [ %.067, %447 ], [ %.067, %446 ], [ %.067, %445 ], [ %.neg, %435 ], [ %.067, %425 ], [ %.067, %424 ], [ %.067, %414 ], [ %.067, %404 ], [ %.067, %402 ], [ %.067, %397 ], [ %.067, %396 ], [ %.067, %381 ], [ %.067, %371 ], [ %.067, %369 ], [ %.067, %367 ], [ %.067, %352 ], [ %.067, %342 ], [ %.067, %338 ], [ 0, %337 ], [ %.067, %335 ], [ %.067, %323 ], [ %.067, %313 ], [ %.067, %312 ], [ %.067, %302 ], [ %.067, %292 ], [ %.067, %291 ], [ %.067, %281 ], [ %.067, %271 ], [ %.067, %270 ], [ %.067, %260 ], [ %.067, %250 ], [ %.067, %247 ], [ %.067, %241 ], [ %.067, %237 ], [ %.067, %236 ], [ %.067, %234 ], [ %.067, %233 ], [ %.067, %231 ], [ %.067, %230 ], [ %.067, %228 ], [ %.067, %227 ], [ %.067, %226 ], [ %.067, %200 ], [ %.067, %190 ], [ %.067, %183 ], [ %.067, %176 ], [ %.067, %172 ], [ %.067, %171 ], [ %.067, %169 ], [ %.067, %157 ], [ %.067, %147 ], [ %.067, %146 ], [ %.067, %136 ], [ %.067, %126 ], [ %.067, %122 ], [ %.067, %121 ], [ %.067, %111 ], [ %.067, %101 ], [ %.067, %99 ], [ %.067, %98 ], [ %.067, %79 ], [ %.067, %69 ], [ %.067, %65 ], [ %.067, %64 ], [ %.067, %62 ], [ %.067, %59 ], [ %.067, %57 ], [ %.067, %45 ], [ %.067, %35 ], [ %.067, %34 ], [ %.067, %32 ], [ %.067, %31 ], [ %.067, %29 ], [ %.067, %25 ], [ %.067, %21 ], [ %.067, %20 ], [ %.067, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ -2074446610, %539 ], [ -50683925, %538 ], [ 1190447596, %536 ], [ 832032668, %535 ], [ -772289186, %529 ], [ -1035170495, %528 ], [ -1603301755, %527 ], [ 1057265489, %526 ], [ -493345949, %524 ], [ -706120871, %523 ], [ -962589633, %506 ], [ 1870555030, %505 ], [ -1072427327, %504 ], [ 1385639930, %503 ], [ -1462391301, %493 ], [ -886800696, %492 ], [ %490, %481 ], [ %480, %471 ], [ -1448801784, %470 ], [ %469, %460 ], [ %459, %450 ], [ -1268802342, %447 ], [ -1718238461, %446 ], [ 1273057470, %445 ], [ %444, %435 ], [ %434, %425 ], [ 1273780366, %424 ], [ %423, %414 ], [ %413, %404 ], [ -110714556, %402 ], [ %401, %397 ], [ 1826628959, %396 ], [ %395, %381 ], [ %380, %371 ], [ 1826628959, %369 ], [ %368, %367 ], [ %366, %352 ], [ %351, %342 ], [ %341, %338 ], [ 1273057470, %337 ], [ %336, %335 ], [ %334, %323 ], [ %322, %313 ], [ -1268802342, %312 ], [ %311, %302 ], [ %301, %292 ], [ -1838343817, %291 ], [ %290, %281 ], [ %280, %271 ], [ 2068520850, %270 ], [ %269, %260 ], [ %259, %250 ], [ -1448801784, %247 ], [ %246, %241 ], [ %240, %237 ], [ -1838343817, %236 ], [ -133932983, %234 ], [ -1413882853, %233 ], [ 1216265829, %231 ], [ 1766575302, %230 ], [ -1570826243, %228 ], [ -805135509, %227 ], [ 1151436294, %226 ], [ %225, %200 ], [ %199, %190 ], [ %189, %183 ], [ %182, %176 ], [ %175, %172 ], [ -1570826243, %171 ], [ %170, %169 ], [ %168, %157 ], [ %156, %147 ], [ 1216265829, %146 ], [ %145, %136 ], [ %135, %126 ], [ %125, %122 ], [ -133932983, %121 ], [ %120, %111 ], [ %110, %101 ], [ 290151757, %99 ], [ -2079664338, %98 ], [ %97, %79 ], [ %78, %69 ], [ %68, %65 ], [ 290151757, %64 ], [ 1553034219, %62 ], [ -324975525, %59 ], [ %58, %57 ], [ %56, %45 ], [ %44, %35 ], [ 1553034219, %34 ], [ -2123387267, %32 ], [ -1252384655, %31 ], [ 915505207, %29 ], [ 1293918167, %25 ], [ %24, %21 ], [ 915505207, %20 ], [ %19, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %.085, %17
  %19 = select i1 %18, i32 -777945737, i32 -1197773543
  br label %.backedge

20:                                               ; preds = %15
  br label %.backedge

21:                                               ; preds = %15
  %22 = load i32, i32* %6, align 4
  %23 = icmp slt i32 %.083, %22
  %24 = select i1 %23, i32 -529746253, i32 181534088
  br label %.backedge

25:                                               ; preds = %15
  %26 = sext i32 %.085 to i64
  %27 = sext i32 %.083 to i64
  %28 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %26, i64 %27
  store i32 2000000000, i32* %28, align 4
  br label %.backedge

29:                                               ; preds = %15
  %30 = add i32 %.083, 1
  br label %.backedge

31:                                               ; preds = %15
  br label %.backedge

32:                                               ; preds = %15
  %33 = add i32 %.085, 1
  br label %.backedge

34:                                               ; preds = %15
  br label %.backedge

35:                                               ; preds = %15
  %36 = load i32, i32* @x.2, align 4
  %37 = load i32, i32* @y.3, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 -886800696, i32 1962217239
  br label %.backedge

45:                                               ; preds = %15
  %46 = load i32, i32* %6, align 4
  %47 = icmp slt i32 %.081, %46
  store i1 %47, i1* %5, align 1
  %48 = load i32, i32* @x.2, align 4
  %49 = load i32, i32* @y.3, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 78633723, i32 1962217239
  br label %.backedge

57:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %58 = select i1 %.0..0..0., i32 67521489, i32 1754663646
  br label %.backedge

59:                                               ; preds = %15
  %60 = sext i32 %.081 to i64
  %61 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %60, i64 %60
  store i32 0, i32* %61, align 4
  br label %.backedge

62:                                               ; preds = %15
  %63 = add i32 %.081, 1
  br label %.backedge

64:                                               ; preds = %15
  br label %.backedge

65:                                               ; preds = %15
  %66 = load i32, i32* %7, align 4
  %67 = icmp slt i32 %.079, %66
  %68 = select i1 %67, i32 1420766839, i32 1162199509
  br label %.backedge

69:                                               ; preds = %15
  %70 = load i32, i32* @x.2, align 4
  %71 = load i32, i32* @y.3, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -1462391301, i32 -36629473
  br label %.backedge

79:                                               ; preds = %15
  %80 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %81 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %80, i32* nonnull dereferenceable(4) %9)
  %82 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %81, i32* nonnull dereferenceable(4) %10)
  %83 = load i32, i32* %10, align 4
  %84 = load i32, i32* %8, align 4
  %85 = sext i32 %84 to i64
  %86 = load i32, i32* %9, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %85, i64 %87
  store i32 %83, i32* %88, align 4
  %89 = load i32, i32* @x.2, align 4
  %90 = load i32, i32* @y.3, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 -1385665866, i32 -36629473
  br label %.backedge

98:                                               ; preds = %15
  br label %.backedge

99:                                               ; preds = %15
  %100 = add i32 %.079, 1
  br label %.backedge

101:                                              ; preds = %15
  %102 = load i32, i32* @x.2, align 4
  %103 = load i32, i32* @y.3, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 1385639930, i32 1537141658
  br label %.backedge

111:                                              ; preds = %15
  %112 = load i32, i32* @x.2, align 4
  %113 = load i32, i32* @y.3, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 -476424807, i32 1537141658
  br label %.backedge

121:                                              ; preds = %15
  br label %.backedge

122:                                              ; preds = %15
  %123 = load i32, i32* %6, align 4
  %124 = icmp slt i32 %.077, %123
  %125 = select i1 %124, i32 -1799783013, i32 -462285009
  br label %.backedge

126:                                              ; preds = %15
  %127 = load i32, i32* @x.2, align 4
  %128 = load i32, i32* @y.3, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 -1072427327, i32 1929924377
  br label %.backedge

136:                                              ; preds = %15
  %137 = load i32, i32* @x.2, align 4
  %138 = load i32, i32* @y.3, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 913462408, i32 1929924377
  br label %.backedge

146:                                              ; preds = %15
  br label %.backedge

147:                                              ; preds = %15
  %148 = load i32, i32* @x.2, align 4
  %149 = load i32, i32* @y.3, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 1870555030, i32 -1646604116
  br label %.backedge

157:                                              ; preds = %15
  %158 = load i32, i32* %6, align 4
  %159 = icmp slt i32 %.075, %158
  store i1 %159, i1* %4, align 1
  %160 = load i32, i32* @x.2, align 4
  %161 = load i32, i32* @y.3, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -567471506, i32 -1646604116
  br label %.backedge

169:                                              ; preds = %15
  %.0..0..0.63 = load volatile i1, i1* %4, align 1
  %170 = select i1 %.0..0..0.63, i32 -455573288, i32 -1830785279
  br label %.backedge

171:                                              ; preds = %15
  br label %.backedge

172:                                              ; preds = %15
  %173 = load i32, i32* %6, align 4
  %174 = icmp slt i32 %.073, %173
  %175 = select i1 %174, i32 1756197687, i32 546411960
  br label %.backedge

176:                                              ; preds = %15
  %177 = sext i32 %.075 to i64
  %178 = sext i32 %.077 to i64
  %179 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %177, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = icmp slt i32 %180, 2000000000
  %182 = select i1 %181, i32 -472394653, i32 1151436294
  br label %.backedge

183:                                              ; preds = %15
  %184 = sext i32 %.077 to i64
  %185 = sext i32 %.073 to i64
  %186 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %184, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = icmp slt i32 %187, 2000000000
  %189 = select i1 %188, i32 921955035, i32 1151436294
  br label %.backedge

190:                                              ; preds = %15
  %191 = load i32, i32* @x.2, align 4
  %192 = load i32, i32* @y.3, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -962589633, i32 321470307
  br label %.backedge

200:                                              ; preds = %15
  %201 = sext i32 %.075 to i64
  %202 = sext i32 %.073 to i64
  %203 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %201, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  store i64 %205, i64* %11, align 8
  %206 = sext i32 %.077 to i64
  %207 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %201, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %206, i64 %202
  %211 = load i32, i32* %210, align 4
  %212 = sext i32 %211 to i64
  %213 = add nsw i64 %212, %209
  store i64 %213, i64* %12, align 8
  %214 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %11, i64* nonnull dereferenceable(8) %12)
  %215 = load i64, i64* %214, align 8
  %216 = trunc i64 %215 to i32
  store i32 %216, i32* %203, align 4
  %217 = load i32, i32* @x.2, align 4
  %218 = load i32, i32* @y.3, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 1644822079, i32 321470307
  br label %.backedge

226:                                              ; preds = %15
  br label %.backedge

227:                                              ; preds = %15
  br label %.backedge

228:                                              ; preds = %15
  %229 = add i32 %.073, 1
  br label %.backedge

230:                                              ; preds = %15
  br label %.backedge

231:                                              ; preds = %15
  %232 = add i32 %.075, 1
  br label %.backedge

233:                                              ; preds = %15
  br label %.backedge

234:                                              ; preds = %15
  %235 = add i32 %.077, 1
  br label %.backedge

236:                                              ; preds = %15
  br label %.backedge

237:                                              ; preds = %15
  %238 = load i32, i32* %6, align 4
  %239 = icmp slt i32 %.071, %238
  %240 = select i1 %239, i32 -890178127, i32 1628140269
  br label %.backedge

241:                                              ; preds = %15
  %242 = sext i32 %.071 to i64
  %243 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %242, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp slt i32 %244, 0
  %246 = select i1 %245, i32 -91840138, i32 -2053389883
  br label %.backedge

247:                                              ; preds = %15
  %248 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %249 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %248, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

250:                                              ; preds = %15
  %251 = load i32, i32* @x.2, align 4
  %252 = load i32, i32* @y.3, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 -706120871, i32 -1401570596
  br label %.backedge

260:                                              ; preds = %15
  %261 = load i32, i32* @x.2, align 4
  %262 = load i32, i32* @y.3, align 4
  %263 = add i32 %261, -1
  %264 = mul i32 %263, %261
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %267, %266
  %269 = select i1 %268, i32 2011627202, i32 -1401570596
  br label %.backedge

270:                                              ; preds = %15
  br label %.backedge

271:                                              ; preds = %15
  %272 = load i32, i32* @x.2, align 4
  %273 = load i32, i32* @y.3, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 -493345949, i32 -200545047
  br label %.backedge

281:                                              ; preds = %15
  %.neg89 = add i32 %.071, 1
  %282 = load i32, i32* @x.2, align 4
  %283 = load i32, i32* @y.3, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 -671317113, i32 -200545047
  br label %.backedge

291:                                              ; preds = %15
  br label %.backedge

292:                                              ; preds = %15
  %293 = load i32, i32* @x.2, align 4
  %294 = load i32, i32* @y.3, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 1057265489, i32 329725774
  br label %.backedge

302:                                              ; preds = %15
  %303 = load i32, i32* @x.2, align 4
  %304 = load i32, i32* @y.3, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 -1961081936, i32 329725774
  br label %.backedge

312:                                              ; preds = %15
  br label %.backedge

313:                                              ; preds = %15
  %314 = load i32, i32* @x.2, align 4
  %315 = load i32, i32* @y.3, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 -1603301755, i32 393500169
  br label %.backedge

323:                                              ; preds = %15
  %324 = load i32, i32* %6, align 4
  %325 = icmp slt i32 %.069, %324
  store i1 %325, i1* %3, align 1
  %326 = load i32, i32* @x.2, align 4
  %327 = load i32, i32* @y.3, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 1640704281, i32 393500169
  br label %.backedge

335:                                              ; preds = %15
  %.0..0..0.64 = load volatile i1, i1* %3, align 1
  %336 = select i1 %.0..0..0.64, i32 -476837231, i32 388385300
  br label %.backedge

337:                                              ; preds = %15
  br label %.backedge

338:                                              ; preds = %15
  %339 = load i32, i32* %6, align 4
  %340 = icmp slt i32 %.067, %339
  %341 = select i1 %340, i32 1720975508, i32 1360430045
  br label %.backedge

342:                                              ; preds = %15
  %343 = load i32, i32* @x.2, align 4
  %344 = load i32, i32* @y.3, align 4
  %345 = add i32 %343, -1
  %346 = mul i32 %345, %343
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %349, %348
  %351 = select i1 %350, i32 -1035170495, i32 -504051648
  br label %.backedge

352:                                              ; preds = %15
  %353 = sext i32 %.069 to i64
  %354 = sext i32 %.067 to i64
  %355 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %353, i64 %354
  %356 = load i32, i32* %355, align 4
  %357 = icmp eq i32 %356, 2000000000
  store i1 %357, i1* %2, align 1
  %358 = load i32, i32* @x.2, align 4
  %359 = load i32, i32* @y.3, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 416101636, i32 -504051648
  br label %.backedge

367:                                              ; preds = %15
  %.0..0..0.65 = load volatile i1, i1* %2, align 1
  %368 = select i1 %.0..0..0.65, i32 -271653866, i32 -1185995817
  br label %.backedge

369:                                              ; preds = %15
  %370 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

371:                                              ; preds = %15
  %372 = load i32, i32* @x.2, align 4
  %373 = load i32, i32* @y.3, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 -772289186, i32 2117693721
  br label %.backedge

381:                                              ; preds = %15
  %382 = sext i32 %.069 to i64
  %383 = sext i32 %.067 to i64
  %384 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %382, i64 %383
  %385 = load i32, i32* %384, align 4
  %386 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %385)
  %387 = load i32, i32* @x.2, align 4
  %388 = load i32, i32* @y.3, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 1736371514, i32 2117693721
  br label %.backedge

396:                                              ; preds = %15
  br label %.backedge

397:                                              ; preds = %15
  %398 = load i32, i32* %6, align 4
  %399 = add i32 %398, -1
  %400 = icmp slt i32 %.067, %399
  %401 = select i1 %400, i32 120444571, i32 -110714556
  br label %.backedge

402:                                              ; preds = %15
  %403 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 32)
  br label %.backedge

404:                                              ; preds = %15
  %405 = load i32, i32* @x.2, align 4
  %406 = load i32, i32* @y.3, align 4
  %407 = add i32 %405, -1
  %408 = mul i32 %407, %405
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %411, %410
  %413 = select i1 %412, i32 832032668, i32 1162141227
  br label %.backedge

414:                                              ; preds = %15
  %415 = load i32, i32* @x.2, align 4
  %416 = load i32, i32* @y.3, align 4
  %417 = add i32 %415, -1
  %418 = mul i32 %417, %415
  %419 = and i32 %418, 1
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %421, %420
  %423 = select i1 %422, i32 -1414617822, i32 1162141227
  br label %.backedge

424:                                              ; preds = %15
  br label %.backedge

425:                                              ; preds = %15
  %426 = load i32, i32* @x.2, align 4
  %427 = load i32, i32* @y.3, align 4
  %428 = add i32 %426, -1
  %429 = mul i32 %428, %426
  %430 = and i32 %429, 1
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %432, %431
  %434 = select i1 %433, i32 1190447596, i32 -691534624
  br label %.backedge

435:                                              ; preds = %15
  %.neg = add i32 %.067, 1
  %436 = load i32, i32* @x.2, align 4
  %437 = load i32, i32* @y.3, align 4
  %438 = add i32 %436, -1
  %439 = mul i32 %438, %436
  %440 = and i32 %439, 1
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %442, %441
  %444 = select i1 %443, i32 1831146784, i32 -691534624
  br label %.backedge

445:                                              ; preds = %15
  br label %.backedge

446:                                              ; preds = %15
  br label %.backedge

447:                                              ; preds = %15
  %448 = add i32 %.069, 1
  %449 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

450:                                              ; preds = %15
  %451 = load i32, i32* @x.2, align 4
  %452 = load i32, i32* @y.3, align 4
  %453 = add i32 %451, -1
  %454 = mul i32 %453, %451
  %455 = and i32 %454, 1
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %457, %456
  %459 = select i1 %458, i32 -50683925, i32 122550070
  br label %.backedge

460:                                              ; preds = %15
  %461 = load i32, i32* @x.2, align 4
  %462 = load i32, i32* @y.3, align 4
  %463 = add i32 %461, -1
  %464 = mul i32 %463, %461
  %465 = and i32 %464, 1
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %467, %466
  %469 = select i1 %468, i32 -1622854238, i32 122550070
  br label %.backedge

470:                                              ; preds = %15
  br label %.backedge

471:                                              ; preds = %15
  %472 = load i32, i32* @x.2, align 4
  %473 = load i32, i32* @y.3, align 4
  %474 = add i32 %472, -1
  %475 = mul i32 %474, %472
  %476 = and i32 %475, 1
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %478, %477
  %480 = select i1 %479, i32 -2074446610, i32 1051495062
  br label %.backedge

481:                                              ; preds = %15
  store i32 0, i32* %1, align 4
  %482 = load i32, i32* @x.2, align 4
  %483 = load i32, i32* @y.3, align 4
  %484 = add i32 %482, -1
  %485 = mul i32 %484, %482
  %486 = and i32 %485, 1
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %488, %487
  %490 = select i1 %489, i32 232344818, i32 1051495062
  br label %.backedge

491:                                              ; preds = %15
  %.0..0..0.66 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.66

492:                                              ; preds = %15
  br label %.backedge

493:                                              ; preds = %15
  %494 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %495 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %494, i32* nonnull dereferenceable(4) %9)
  %496 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %495, i32* nonnull dereferenceable(4) %10)
  %497 = load i32, i32* %10, align 4
  %498 = load i32, i32* %8, align 4
  %499 = sext i32 %498 to i64
  %500 = load i32, i32* %9, align 4
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %499, i64 %501
  store i32 %497, i32* %502, align 4
  br label %.backedge

503:                                              ; preds = %15
  br label %.backedge

504:                                              ; preds = %15
  br label %.backedge

505:                                              ; preds = %15
  br label %.backedge

506:                                              ; preds = %15
  %507 = sext i32 %.075 to i64
  %508 = sext i32 %.073 to i64
  %509 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %507, i64 %508
  %510 = load i32, i32* %509, align 4
  %511 = sext i32 %510 to i64
  store i64 %511, i64* %11, align 8
  %512 = sext i32 %.077 to i64
  %513 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %507, i64 %512
  %514 = load i32, i32* %513, align 4
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %512, i64 %508
  %517 = load i32, i32* %516, align 4
  %518 = sext i32 %517 to i64
  %519 = add nsw i64 %518, %515
  store i64 %519, i64* %12, align 8
  %520 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %11, i64* nonnull dereferenceable(8) %12)
  %521 = load i64, i64* %520, align 8
  %522 = trunc i64 %521 to i32
  store i32 %522, i32* %509, align 4
  br label %.backedge

523:                                              ; preds = %15
  br label %.backedge

524:                                              ; preds = %15
  %525 = add i32 %.071, 1
  br label %.backedge

526:                                              ; preds = %15
  br label %.backedge

527:                                              ; preds = %15
  br label %.backedge

528:                                              ; preds = %15
  br label %.backedge

529:                                              ; preds = %15
  %530 = sext i32 %.069 to i64
  %531 = sext i32 %.067 to i64
  %532 = getelementptr inbounds [1005 x [1005 x i32]], [1005 x [1005 x i32]]* @d, i64 0, i64 %530, i64 %531
  %533 = load i32, i32* %532, align 4
  %534 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %533)
  br label %.backedge

535:                                              ; preds = %15
  br label %.backedge

536:                                              ; preds = %15
  %537 = add i32 %.067, 1
  br label %.backedge

538:                                              ; preds = %15
  br label %.backedge

539:                                              ; preds = %15
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i64* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -1141044426, %2 ], [ -1343970400, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 -1141044426, label %8
    i32 -139648315, label %.outer.backedge
    i32 1102530734, label %11
    i32 -1343970400, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %9 = icmp slt i64 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 -139648315, i32 1102530734
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i64* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i64* %.07.ph
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s648202754.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
