; ModuleID = 'build_ollvm/programs/p02363/s968629500.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s968629500.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s968629500.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [101 x [101 x i32]], align 16
  %11 = alloca i32, align 4
  br label %12

12:                                               ; preds = %.backedge, %0
  %.085 = phi i8 [ 0, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ 0, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.0 = phi i32 [ 162498724, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 162498724, label %13
    i32 1674186717, label %23
    i32 -1163010377, label %34
    i32 -1826150961, label %36
    i32 -392109894, label %37
    i32 -278273404, label %40
    i32 410029127, label %43
    i32 1042788911, label %47
    i32 1761902202, label %57
    i32 -876222972, label %70
    i32 114070325, label %71
    i32 520820340, label %72
    i32 -1700504018, label %74
    i32 -379108276, label %75
    i32 -359723617, label %76
    i32 2010438066, label %86
    i32 -1332822428, label %98
    i32 40817237, label %99
    i32 816753195, label %103
    i32 -1166982293, label %113
    i32 -1281492493, label %115
    i32 -1379818448, label %125
    i32 -678498139, label %135
    i32 -925615527, label %136
    i32 1777240375, label %140
    i32 1487103335, label %141
    i32 -373921413, label %145
    i32 -1784985959, label %155
    i32 -924999742, label %165
    i32 1420264440, label %166
    i32 -1030764198, label %170
    i32 -1927427686, label %176
    i32 1703831527, label %182
    i32 1170510291, label %192
    i32 947559455, label %213
    i32 1001926627, label %214
    i32 1813019557, label %215
    i32 -1715453710, label %216
    i32 -1135239756, label %217
    i32 -237145121, label %227
    i32 -814174998, label %238
    i32 1102072918, label %239
    i32 1237099261, label %240
    i32 -430112120, label %250
    i32 1896025740, label %261
    i32 1913998422, label %262
    i32 -422988382, label %263
    i32 -1138140324, label %267
    i32 2001655862, label %277
    i32 -1275955041, label %291
    i32 528067377, label %293
    i32 1675950613, label %294
    i32 -746909431, label %295
    i32 702127314, label %305
    i32 243060182, label %315
    i32 1083752562, label %316
    i32 -1334059822, label %319
    i32 1407428473, label %320
    i32 63815547, label %324
    i32 1293632134, label %325
    i32 -1547792721, label %335
    i32 1014498393, label %347
    i32 -474737092, label %349
    i32 -1106815896, label %351
    i32 1502682094, label %361
    i32 793339532, label %371
    i32 1176114127, label %372
    i32 -123193806, label %382
    i32 1377968698, label %397
    i32 144668509, label %399
    i32 1893241651, label %409
    i32 -604274185, label %420
    i32 349717241, label %421
    i32 1230292240, label %427
    i32 698943212, label %428
    i32 -1385404229, label %429
    i32 153555068, label %430
    i32 -433775329, label %431
    i32 -868328825, label %432
    i32 612643989, label %442
    i32 1407706072, label %452
    i32 -1520296582, label %453
    i32 -807868562, label %454
    i32 1928000215, label %458
    i32 2125990055, label %461
    i32 -277099105, label %462
    i32 386178353, label %463
    i32 -467423815, label %475
    i32 -1746760412, label %477
    i32 1848145585, label %479
    i32 619426377, label %480
    i32 1420552681, label %482
    i32 -191742922, label %483
    i32 104704784, label %484
    i32 -151430061, label %485
    i32 6070329, label %487
  ]

.backedge:                                        ; preds = %12, %487, %485, %484, %483, %482, %480, %479, %477, %475, %463, %462, %461, %458, %454, %453, %442, %432, %431, %430, %429, %428, %427, %421, %420, %409, %399, %397, %382, %372, %371, %361, %351, %349, %347, %335, %325, %324, %320, %319, %316, %315, %305, %295, %294, %293, %291, %277, %267, %263, %262, %261, %250, %240, %239, %238, %227, %217, %216, %215, %214, %213, %192, %182, %176, %170, %166, %165, %155, %145, %141, %140, %136, %135, %125, %115, %113, %103, %99, %98, %86, %76, %75, %74, %72, %71, %70, %57, %47, %43, %40, %37, %36, %34, %23, %13
  %.085.be = phi i8 [ %.085, %12 ], [ %.085, %487 ], [ %.085, %485 ], [ %.085, %484 ], [ %.085, %483 ], [ %.085, %482 ], [ %.085, %480 ], [ %.085, %479 ], [ %.085, %477 ], [ %.085, %475 ], [ %.085, %463 ], [ %.085, %462 ], [ %.085, %461 ], [ %.085, %458 ], [ %.085, %454 ], [ %.085, %453 ], [ %.085, %442 ], [ %.085, %432 ], [ %.085, %431 ], [ %.085, %430 ], [ %.085, %429 ], [ %.085, %428 ], [ %.085, %427 ], [ %.085, %421 ], [ %.085, %420 ], [ %.085, %409 ], [ %.085, %399 ], [ %.085, %397 ], [ %.085, %382 ], [ %.085, %372 ], [ %.085, %371 ], [ %.085, %361 ], [ %.085, %351 ], [ %.085, %349 ], [ %.085, %347 ], [ %.085, %335 ], [ %.085, %325 ], [ %.085, %324 ], [ %.085, %320 ], [ %.085, %319 ], [ %.085, %316 ], [ %.085, %315 ], [ %.085, %305 ], [ %.085, %295 ], [ %.085, %294 ], [ 1, %293 ], [ %.085, %291 ], [ %.085, %277 ], [ %.085, %267 ], [ %.085, %263 ], [ %.085, %262 ], [ %.085, %261 ], [ %.085, %250 ], [ %.085, %240 ], [ %.085, %239 ], [ %.085, %238 ], [ %.085, %227 ], [ %.085, %217 ], [ %.085, %216 ], [ %.085, %215 ], [ %.085, %214 ], [ %.085, %213 ], [ %.085, %192 ], [ %.085, %182 ], [ %.085, %176 ], [ %.085, %170 ], [ %.085, %166 ], [ %.085, %165 ], [ %.085, %155 ], [ %.085, %145 ], [ %.085, %141 ], [ %.085, %140 ], [ %.085, %136 ], [ %.085, %135 ], [ %.085, %125 ], [ %.085, %115 ], [ %.085, %113 ], [ %.085, %103 ], [ %.085, %99 ], [ %.085, %98 ], [ %.085, %86 ], [ %.085, %76 ], [ %.085, %75 ], [ %.085, %74 ], [ %.085, %72 ], [ %.085, %71 ], [ %.085, %70 ], [ %.085, %57 ], [ %.085, %47 ], [ %.085, %43 ], [ %.085, %40 ], [ %.085, %37 ], [ %.085, %36 ], [ %.085, %34 ], [ %.085, %23 ], [ %.085, %13 ]
  %.083.be = phi i32 [ %.083, %12 ], [ %.083, %487 ], [ %.083, %485 ], [ %.083, %484 ], [ %.083, %483 ], [ %.083, %482 ], [ %.083, %480 ], [ %.083, %479 ], [ %.083, %477 ], [ %.083, %475 ], [ %.083, %463 ], [ %.083, %462 ], [ %.083, %461 ], [ %.083, %458 ], [ %.083, %454 ], [ %.083, %453 ], [ %.083, %442 ], [ %.083, %432 ], [ %.083, %431 ], [ %.083, %430 ], [ %.083, %429 ], [ %.083, %428 ], [ %.083, %427 ], [ %.083, %421 ], [ %.083, %420 ], [ %.083, %409 ], [ %.083, %399 ], [ %.083, %397 ], [ %.083, %382 ], [ %.083, %372 ], [ %.083, %371 ], [ %.083, %361 ], [ %.083, %351 ], [ %.083, %349 ], [ %.083, %347 ], [ %.083, %335 ], [ %.083, %325 ], [ %.083, %324 ], [ %.083, %320 ], [ %.083, %319 ], [ %.083, %316 ], [ %.083, %315 ], [ %.083, %305 ], [ %.083, %295 ], [ %.083, %294 ], [ %.083, %293 ], [ %.083, %291 ], [ %.083, %277 ], [ %.083, %267 ], [ %.083, %263 ], [ %.083, %262 ], [ %.083, %261 ], [ %.083, %250 ], [ %.083, %240 ], [ %.083, %239 ], [ %.083, %238 ], [ %.083, %227 ], [ %.083, %217 ], [ %.083, %216 ], [ %.083, %215 ], [ %.083, %214 ], [ %.083, %213 ], [ %.083, %192 ], [ %.083, %182 ], [ %.083, %176 ], [ %.083, %170 ], [ %.083, %166 ], [ %.083, %165 ], [ %.083, %155 ], [ %.083, %145 ], [ %.083, %141 ], [ %.083, %140 ], [ %.083, %136 ], [ %.083, %135 ], [ %.083, %125 ], [ %.083, %115 ], [ %.083, %113 ], [ %.083, %103 ], [ %.083, %99 ], [ %.083, %98 ], [ %.083, %86 ], [ %.083, %76 ], [ %.neg94, %75 ], [ %.083, %74 ], [ %.083, %72 ], [ %.083, %71 ], [ %.083, %70 ], [ %.083, %57 ], [ %.083, %47 ], [ %.083, %43 ], [ %.083, %40 ], [ %.083, %37 ], [ %.083, %36 ], [ %.083, %34 ], [ %.083, %23 ], [ %.083, %13 ]
  %.081.be = phi i32 [ %.081, %12 ], [ %.081, %487 ], [ %.081, %485 ], [ %.081, %484 ], [ %.081, %483 ], [ %.081, %482 ], [ %.081, %480 ], [ %.081, %479 ], [ %.081, %477 ], [ %.081, %475 ], [ %.081, %463 ], [ %.081, %462 ], [ %.081, %461 ], [ %.081, %458 ], [ %.081, %454 ], [ %.081, %453 ], [ %.081, %442 ], [ %.081, %432 ], [ %.081, %431 ], [ %.081, %430 ], [ %.081, %429 ], [ %.081, %428 ], [ %.081, %427 ], [ %.081, %421 ], [ %.081, %420 ], [ %.081, %409 ], [ %.081, %399 ], [ %.081, %397 ], [ %.081, %382 ], [ %.081, %372 ], [ %.081, %371 ], [ %.081, %361 ], [ %.081, %351 ], [ %.081, %349 ], [ %.081, %347 ], [ %.081, %335 ], [ %.081, %325 ], [ %.081, %324 ], [ %.081, %320 ], [ %.081, %319 ], [ %.081, %316 ], [ %.081, %315 ], [ %.081, %305 ], [ %.081, %295 ], [ %.081, %294 ], [ %.081, %293 ], [ %.081, %291 ], [ %.081, %277 ], [ %.081, %267 ], [ %.081, %263 ], [ %.081, %262 ], [ %.081, %261 ], [ %.081, %250 ], [ %.081, %240 ], [ %.081, %239 ], [ %.081, %238 ], [ %.081, %227 ], [ %.081, %217 ], [ %.081, %216 ], [ %.081, %215 ], [ %.081, %214 ], [ %.081, %213 ], [ %.081, %192 ], [ %.081, %182 ], [ %.081, %176 ], [ %.081, %170 ], [ %.081, %166 ], [ %.081, %165 ], [ %.081, %155 ], [ %.081, %145 ], [ %.081, %141 ], [ %.081, %140 ], [ %.081, %136 ], [ %.081, %135 ], [ %.081, %125 ], [ %.081, %115 ], [ %.081, %113 ], [ %.081, %103 ], [ %.081, %99 ], [ %.081, %98 ], [ %.081, %86 ], [ %.081, %76 ], [ %.081, %75 ], [ %.081, %74 ], [ %73, %72 ], [ %.081, %71 ], [ %.081, %70 ], [ %.081, %57 ], [ %.081, %47 ], [ %.081, %43 ], [ %.081, %40 ], [ %.081, %37 ], [ 0, %36 ], [ %.081, %34 ], [ %.081, %23 ], [ %.081, %13 ]
  %.079.be = phi i32 [ %.079, %12 ], [ %.079, %487 ], [ %.079, %485 ], [ %.079, %484 ], [ %.079, %483 ], [ %.079, %482 ], [ %.079, %480 ], [ %.079, %479 ], [ %.079, %477 ], [ %.079, %475 ], [ %.079, %463 ], [ %.079, %462 ], [ %.079, %461 ], [ 0, %458 ], [ %.079, %454 ], [ %.079, %453 ], [ %.079, %442 ], [ %.079, %432 ], [ %.079, %431 ], [ %.079, %430 ], [ %.079, %429 ], [ %.079, %428 ], [ %.079, %427 ], [ %.079, %421 ], [ %.079, %420 ], [ %.079, %409 ], [ %.079, %399 ], [ %.079, %397 ], [ %.079, %382 ], [ %.079, %372 ], [ %.079, %371 ], [ %.079, %361 ], [ %.079, %351 ], [ %.079, %349 ], [ %.079, %347 ], [ %.079, %335 ], [ %.079, %325 ], [ %.079, %324 ], [ %.079, %320 ], [ %.079, %319 ], [ %.079, %316 ], [ %.079, %315 ], [ %.079, %305 ], [ %.079, %295 ], [ %.079, %294 ], [ %.079, %293 ], [ %.079, %291 ], [ %.079, %277 ], [ %.079, %267 ], [ %.079, %263 ], [ %.079, %262 ], [ %.079, %261 ], [ %.079, %250 ], [ %.079, %240 ], [ %.079, %239 ], [ %.079, %238 ], [ %.079, %227 ], [ %.079, %217 ], [ %.079, %216 ], [ %.079, %215 ], [ %.079, %214 ], [ %.079, %213 ], [ %.079, %192 ], [ %.079, %182 ], [ %.079, %176 ], [ %.079, %170 ], [ %.079, %166 ], [ %.079, %165 ], [ %.079, %155 ], [ %.079, %145 ], [ %.079, %141 ], [ %.079, %140 ], [ %.079, %136 ], [ %.079, %135 ], [ %.079, %125 ], [ %.079, %115 ], [ %114, %113 ], [ %.079, %103 ], [ %.079, %99 ], [ %.079, %98 ], [ 0, %86 ], [ %.079, %76 ], [ %.079, %75 ], [ %.079, %74 ], [ %.079, %72 ], [ %.079, %71 ], [ %.079, %70 ], [ %.079, %57 ], [ %.079, %47 ], [ %.079, %43 ], [ %.079, %40 ], [ %.079, %37 ], [ %.079, %36 ], [ %.079, %34 ], [ %.079, %23 ], [ %.079, %13 ]
  %.077.be = phi i32 [ %.077, %12 ], [ %.077, %487 ], [ %.077, %485 ], [ %.077, %484 ], [ %.077, %483 ], [ %.077, %482 ], [ %.077, %480 ], [ %.077, %479 ], [ %478, %477 ], [ %.077, %475 ], [ %.077, %463 ], [ %.077, %462 ], [ 0, %461 ], [ %.077, %458 ], [ %.077, %454 ], [ %.077, %453 ], [ %.077, %442 ], [ %.077, %432 ], [ %.077, %431 ], [ %.077, %430 ], [ %.077, %429 ], [ %.077, %428 ], [ %.077, %427 ], [ %.077, %421 ], [ %.077, %420 ], [ %.077, %409 ], [ %.077, %399 ], [ %.077, %397 ], [ %.077, %382 ], [ %.077, %372 ], [ %.077, %371 ], [ %.077, %361 ], [ %.077, %351 ], [ %.077, %349 ], [ %.077, %347 ], [ %.077, %335 ], [ %.077, %325 ], [ %.077, %324 ], [ %.077, %320 ], [ %.077, %319 ], [ %.077, %316 ], [ %.077, %315 ], [ %.077, %305 ], [ %.077, %295 ], [ %.077, %294 ], [ %.077, %293 ], [ %.077, %291 ], [ %.077, %277 ], [ %.077, %267 ], [ %.077, %263 ], [ %.077, %262 ], [ %.077, %261 ], [ %251, %250 ], [ %.077, %240 ], [ %.077, %239 ], [ %.077, %238 ], [ %.077, %227 ], [ %.077, %217 ], [ %.077, %216 ], [ %.077, %215 ], [ %.077, %214 ], [ %.077, %213 ], [ %.077, %192 ], [ %.077, %182 ], [ %.077, %176 ], [ %.077, %170 ], [ %.077, %166 ], [ %.077, %165 ], [ %.077, %155 ], [ %.077, %145 ], [ %.077, %141 ], [ %.077, %140 ], [ %.077, %136 ], [ %.077, %135 ], [ 0, %125 ], [ %.077, %115 ], [ %.077, %113 ], [ %.077, %103 ], [ %.077, %99 ], [ %.077, %98 ], [ %.077, %86 ], [ %.077, %76 ], [ %.077, %75 ], [ %.077, %74 ], [ %.077, %72 ], [ %.077, %71 ], [ %.077, %70 ], [ %.077, %57 ], [ %.077, %47 ], [ %.077, %43 ], [ %.077, %40 ], [ %.077, %37 ], [ %.077, %36 ], [ %.077, %34 ], [ %.077, %23 ], [ %.077, %13 ]
  %.075.be = phi i32 [ %.075, %12 ], [ %.075, %487 ], [ %.075, %485 ], [ %.075, %484 ], [ %.075, %483 ], [ %.075, %482 ], [ %.075, %480 ], [ %.075, %479 ], [ %.075, %477 ], [ %476, %475 ], [ %.075, %463 ], [ %.075, %462 ], [ %.075, %461 ], [ %.075, %458 ], [ %.075, %454 ], [ %.075, %453 ], [ %.075, %442 ], [ %.075, %432 ], [ %.075, %431 ], [ %.075, %430 ], [ %.075, %429 ], [ %.075, %428 ], [ %.075, %427 ], [ %.075, %421 ], [ %.075, %420 ], [ %.075, %409 ], [ %.075, %399 ], [ %.075, %397 ], [ %.075, %382 ], [ %.075, %372 ], [ %.075, %371 ], [ %.075, %361 ], [ %.075, %351 ], [ %.075, %349 ], [ %.075, %347 ], [ %.075, %335 ], [ %.075, %325 ], [ %.075, %324 ], [ %.075, %320 ], [ %.075, %319 ], [ %.075, %316 ], [ %.075, %315 ], [ %.075, %305 ], [ %.075, %295 ], [ %.075, %294 ], [ %.075, %293 ], [ %.075, %291 ], [ %.075, %277 ], [ %.075, %267 ], [ %.075, %263 ], [ %.075, %262 ], [ %.075, %261 ], [ %.075, %250 ], [ %.075, %240 ], [ %.075, %239 ], [ %.075, %238 ], [ %228, %227 ], [ %.075, %217 ], [ %.075, %216 ], [ %.075, %215 ], [ %.075, %214 ], [ %.075, %213 ], [ %.075, %192 ], [ %.075, %182 ], [ %.075, %176 ], [ %.075, %170 ], [ %.075, %166 ], [ %.075, %165 ], [ %.075, %155 ], [ %.075, %145 ], [ %.075, %141 ], [ 0, %140 ], [ %.075, %136 ], [ %.075, %135 ], [ %.075, %125 ], [ %.075, %115 ], [ %.075, %113 ], [ %.075, %103 ], [ %.075, %99 ], [ %.075, %98 ], [ %.075, %86 ], [ %.075, %76 ], [ %.075, %75 ], [ %.075, %74 ], [ %.075, %72 ], [ %.075, %71 ], [ %.075, %70 ], [ %.075, %57 ], [ %.075, %47 ], [ %.075, %43 ], [ %.075, %40 ], [ %.075, %37 ], [ %.075, %36 ], [ %.075, %34 ], [ %.075, %23 ], [ %.075, %13 ]
  %.073.be = phi i32 [ %.073, %12 ], [ %.073, %487 ], [ %.073, %485 ], [ %.073, %484 ], [ %.073, %483 ], [ %.073, %482 ], [ %.073, %480 ], [ %.073, %479 ], [ %.073, %477 ], [ %.073, %475 ], [ %.073, %463 ], [ 0, %462 ], [ %.073, %461 ], [ %.073, %458 ], [ %.073, %454 ], [ %.073, %453 ], [ %.073, %442 ], [ %.073, %432 ], [ %.073, %431 ], [ %.073, %430 ], [ %.073, %429 ], [ %.073, %428 ], [ %.073, %427 ], [ %.073, %421 ], [ %.073, %420 ], [ %.073, %409 ], [ %.073, %399 ], [ %.073, %397 ], [ %.073, %382 ], [ %.073, %372 ], [ %.073, %371 ], [ %.073, %361 ], [ %.073, %351 ], [ %.073, %349 ], [ %.073, %347 ], [ %.073, %335 ], [ %.073, %325 ], [ %.073, %324 ], [ %.073, %320 ], [ %.073, %319 ], [ %.073, %316 ], [ %.073, %315 ], [ %.073, %305 ], [ %.073, %295 ], [ %.073, %294 ], [ %.073, %293 ], [ %.073, %291 ], [ %.073, %277 ], [ %.073, %267 ], [ %.073, %263 ], [ %.073, %262 ], [ %.073, %261 ], [ %.073, %250 ], [ %.073, %240 ], [ %.073, %239 ], [ %.073, %238 ], [ %.073, %227 ], [ %.073, %217 ], [ %.073, %216 ], [ %.neg91, %215 ], [ %.073, %214 ], [ %.073, %213 ], [ %.073, %192 ], [ %.073, %182 ], [ %.073, %176 ], [ %.073, %170 ], [ %.073, %166 ], [ %.073, %165 ], [ 0, %155 ], [ %.073, %145 ], [ %.073, %141 ], [ %.073, %140 ], [ %.073, %136 ], [ %.073, %135 ], [ %.073, %125 ], [ %.073, %115 ], [ %.073, %113 ], [ %.073, %103 ], [ %.073, %99 ], [ %.073, %98 ], [ %.073, %86 ], [ %.073, %76 ], [ %.073, %75 ], [ %.073, %74 ], [ %.073, %72 ], [ %.073, %71 ], [ %.073, %70 ], [ %.073, %57 ], [ %.073, %47 ], [ %.073, %43 ], [ %.073, %40 ], [ %.073, %37 ], [ %.073, %36 ], [ %.073, %34 ], [ %.073, %23 ], [ %.073, %13 ]
  %.071.be = phi i32 [ %.071, %12 ], [ %.071, %487 ], [ %.071, %485 ], [ %.071, %484 ], [ %.071, %483 ], [ %.071, %482 ], [ %481, %480 ], [ %.071, %479 ], [ %.071, %477 ], [ %.071, %475 ], [ %.071, %463 ], [ %.071, %462 ], [ %.071, %461 ], [ %.071, %458 ], [ %.071, %454 ], [ %.071, %453 ], [ %.071, %442 ], [ %.071, %432 ], [ %.071, %431 ], [ %.071, %430 ], [ %.071, %429 ], [ %.071, %428 ], [ %.071, %427 ], [ %.071, %421 ], [ %.071, %420 ], [ %.071, %409 ], [ %.071, %399 ], [ %.071, %397 ], [ %.071, %382 ], [ %.071, %372 ], [ %.071, %371 ], [ %.071, %361 ], [ %.071, %351 ], [ %.071, %349 ], [ %.071, %347 ], [ %.071, %335 ], [ %.071, %325 ], [ %.071, %324 ], [ %.071, %320 ], [ %.071, %319 ], [ %.071, %316 ], [ %.071, %315 ], [ %.neg90, %305 ], [ %.071, %295 ], [ %.071, %294 ], [ %.071, %293 ], [ %.071, %291 ], [ %.071, %277 ], [ %.071, %267 ], [ %.071, %263 ], [ 0, %262 ], [ %.071, %261 ], [ %.071, %250 ], [ %.071, %240 ], [ %.071, %239 ], [ %.071, %238 ], [ %.071, %227 ], [ %.071, %217 ], [ %.071, %216 ], [ %.071, %215 ], [ %.071, %214 ], [ %.071, %213 ], [ %.071, %192 ], [ %.071, %182 ], [ %.071, %176 ], [ %.071, %170 ], [ %.071, %166 ], [ %.071, %165 ], [ %.071, %155 ], [ %.071, %145 ], [ %.071, %141 ], [ %.071, %140 ], [ %.071, %136 ], [ %.071, %135 ], [ %.071, %125 ], [ %.071, %115 ], [ %.071, %113 ], [ %.071, %103 ], [ %.071, %99 ], [ %.071, %98 ], [ %.071, %86 ], [ %.071, %76 ], [ %.071, %75 ], [ %.071, %74 ], [ %.071, %72 ], [ %.071, %71 ], [ %.071, %70 ], [ %.071, %57 ], [ %.071, %47 ], [ %.071, %43 ], [ %.071, %40 ], [ %.071, %37 ], [ %.071, %36 ], [ %.071, %34 ], [ %.071, %23 ], [ %.071, %13 ]
  %.069.be = phi i32 [ %.069, %12 ], [ %.069, %487 ], [ %.069, %485 ], [ %.069, %484 ], [ %.069, %483 ], [ %.069, %482 ], [ %.069, %480 ], [ %.069, %479 ], [ %.069, %477 ], [ %.069, %475 ], [ %.069, %463 ], [ %.069, %462 ], [ %.069, %461 ], [ %.069, %458 ], [ %.069, %454 ], [ %.069, %453 ], [ %.069, %442 ], [ %.069, %432 ], [ %.069, %431 ], [ %.neg, %430 ], [ %.069, %429 ], [ %.069, %428 ], [ %.069, %427 ], [ %.069, %421 ], [ %.069, %420 ], [ %.069, %409 ], [ %.069, %399 ], [ %.069, %397 ], [ %.069, %382 ], [ %.069, %372 ], [ %.069, %371 ], [ %.069, %361 ], [ %.069, %351 ], [ %.069, %349 ], [ %.069, %347 ], [ %.069, %335 ], [ %.069, %325 ], [ %.069, %324 ], [ %.069, %320 ], [ 0, %319 ], [ %.069, %316 ], [ %.069, %315 ], [ %.069, %305 ], [ %.069, %295 ], [ %.069, %294 ], [ %.069, %293 ], [ %.069, %291 ], [ %.069, %277 ], [ %.069, %267 ], [ %.069, %263 ], [ %.069, %262 ], [ %.069, %261 ], [ %.069, %250 ], [ %.069, %240 ], [ %.069, %239 ], [ %.069, %238 ], [ %.069, %227 ], [ %.069, %217 ], [ %.069, %216 ], [ %.069, %215 ], [ %.069, %214 ], [ %.069, %213 ], [ %.069, %192 ], [ %.069, %182 ], [ %.069, %176 ], [ %.069, %170 ], [ %.069, %166 ], [ %.069, %165 ], [ %.069, %155 ], [ %.069, %145 ], [ %.069, %141 ], [ %.069, %140 ], [ %.069, %136 ], [ %.069, %135 ], [ %.069, %125 ], [ %.069, %115 ], [ %.069, %113 ], [ %.069, %103 ], [ %.069, %99 ], [ %.069, %98 ], [ %.069, %86 ], [ %.069, %76 ], [ %.069, %75 ], [ %.069, %74 ], [ %.069, %72 ], [ %.069, %71 ], [ %.069, %70 ], [ %.069, %57 ], [ %.069, %47 ], [ %.069, %43 ], [ %.069, %40 ], [ %.069, %37 ], [ %.069, %36 ], [ %.069, %34 ], [ %.069, %23 ], [ %.069, %13 ]
  %.067.be = phi i32 [ %.067, %12 ], [ %.067, %487 ], [ %.067, %485 ], [ %.067, %484 ], [ %.067, %483 ], [ %.067, %482 ], [ %.067, %480 ], [ %.067, %479 ], [ %.067, %477 ], [ %.067, %475 ], [ %.067, %463 ], [ %.067, %462 ], [ %.067, %461 ], [ %.067, %458 ], [ %.067, %454 ], [ %.067, %453 ], [ %.067, %442 ], [ %.067, %432 ], [ %.067, %431 ], [ %.067, %430 ], [ %.067, %429 ], [ %.neg88, %428 ], [ %.067, %427 ], [ %.067, %421 ], [ %.067, %420 ], [ %.067, %409 ], [ %.067, %399 ], [ %.067, %397 ], [ %.067, %382 ], [ %.067, %372 ], [ %.067, %371 ], [ %.067, %361 ], [ %.067, %351 ], [ %.067, %349 ], [ %.067, %347 ], [ %.067, %335 ], [ %.067, %325 ], [ 0, %324 ], [ %.067, %320 ], [ %.067, %319 ], [ %.067, %316 ], [ %.067, %315 ], [ %.067, %305 ], [ %.067, %295 ], [ %.067, %294 ], [ %.067, %293 ], [ %.067, %291 ], [ %.067, %277 ], [ %.067, %267 ], [ %.067, %263 ], [ %.067, %262 ], [ %.067, %261 ], [ %.067, %250 ], [ %.067, %240 ], [ %.067, %239 ], [ %.067, %238 ], [ %.067, %227 ], [ %.067, %217 ], [ %.067, %216 ], [ %.067, %215 ], [ %.067, %214 ], [ %.067, %213 ], [ %.067, %192 ], [ %.067, %182 ], [ %.067, %176 ], [ %.067, %170 ], [ %.067, %166 ], [ %.067, %165 ], [ %.067, %155 ], [ %.067, %145 ], [ %.067, %141 ], [ %.067, %140 ], [ %.067, %136 ], [ %.067, %135 ], [ %.067, %125 ], [ %.067, %115 ], [ %.067, %113 ], [ %.067, %103 ], [ %.067, %99 ], [ %.067, %98 ], [ %.067, %86 ], [ %.067, %76 ], [ %.067, %75 ], [ %.067, %74 ], [ %.067, %72 ], [ %.067, %71 ], [ %.067, %70 ], [ %.067, %57 ], [ %.067, %47 ], [ %.067, %43 ], [ %.067, %40 ], [ %.067, %37 ], [ %.067, %36 ], [ %.067, %34 ], [ %.067, %23 ], [ %.067, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ 612643989, %487 ], [ 1893241651, %485 ], [ -123193806, %484 ], [ 1502682094, %483 ], [ -1547792721, %482 ], [ 702127314, %480 ], [ 2001655862, %479 ], [ -430112120, %477 ], [ -237145121, %475 ], [ 1170510291, %463 ], [ -1784985959, %462 ], [ -1379818448, %461 ], [ 2010438066, %458 ], [ 1761902202, %454 ], [ 1674186717, %453 ], [ %451, %442 ], [ %441, %432 ], [ -868328825, %431 ], [ 1407428473, %430 ], [ 153555068, %429 ], [ 1293632134, %428 ], [ 698943212, %427 ], [ 1230292240, %421 ], [ 1230292240, %420 ], [ %419, %409 ], [ %408, %399 ], [ %398, %397 ], [ %396, %382 ], [ %381, %372 ], [ 1176114127, %371 ], [ %370, %361 ], [ %360, %351 ], [ %350, %349 ], [ %348, %347 ], [ %346, %335 ], [ %334, %325 ], [ 1293632134, %324 ], [ %323, %320 ], [ 1407428473, %319 ], [ %318, %316 ], [ -422988382, %315 ], [ %314, %305 ], [ %304, %295 ], [ -746909431, %294 ], [ 1083752562, %293 ], [ %292, %291 ], [ %290, %277 ], [ %276, %267 ], [ %266, %263 ], [ -422988382, %262 ], [ -925615527, %261 ], [ %260, %250 ], [ %249, %240 ], [ 1237099261, %239 ], [ 1487103335, %238 ], [ %237, %227 ], [ %226, %217 ], [ -1135239756, %216 ], [ 1420264440, %215 ], [ 1813019557, %214 ], [ 1001926627, %213 ], [ %212, %192 ], [ %191, %182 ], [ %181, %176 ], [ %175, %170 ], [ %169, %166 ], [ 1420264440, %165 ], [ %164, %155 ], [ %154, %145 ], [ %144, %141 ], [ 1487103335, %140 ], [ %139, %136 ], [ -925615527, %135 ], [ %134, %125 ], [ %124, %115 ], [ 40817237, %113 ], [ -1166982293, %103 ], [ %102, %99 ], [ 40817237, %98 ], [ %97, %86 ], [ %85, %76 ], [ 162498724, %75 ], [ -379108276, %74 ], [ -392109894, %72 ], [ 520820340, %71 ], [ 114070325, %70 ], [ %69, %57 ], [ %56, %47 ], [ 114070325, %43 ], [ %42, %40 ], [ %39, %37 ], [ -392109894, %36 ], [ %35, %34 ], [ %33, %23 ], [ %22, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* @x.5, align 4
  %15 = load i32, i32* @y.6, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 1674186717, i32 -1520296582
  br label %.backedge

23:                                               ; preds = %12
  %24 = icmp slt i32 %.083, 100
  store i1 %24, i1* %4, align 1
  %25 = load i32, i32* @x.5, align 4
  %26 = load i32, i32* @y.6, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 -1163010377, i32 -1520296582
  br label %.backedge

34:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %35 = select i1 %.0..0..0., i32 -1826150961, i32 -359723617
  br label %.backedge

36:                                               ; preds = %12
  br label %.backedge

37:                                               ; preds = %12
  %38 = icmp slt i32 %.081, 100
  %39 = select i1 %38, i32 -278273404, i32 -1700504018
  br label %.backedge

40:                                               ; preds = %12
  %41 = icmp eq i32 %.083, %.081
  %42 = select i1 %41, i32 410029127, i32 1042788911
  br label %.backedge

43:                                               ; preds = %12
  %44 = sext i32 %.083 to i64
  %45 = sext i32 %.081 to i64
  %46 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %44, i64 %45
  store i32 0, i32* %46, align 4
  br label %.backedge

47:                                               ; preds = %12
  %48 = load i32, i32* @x.5, align 4
  %49 = load i32, i32* @y.6, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 1761902202, i32 -807868562
  br label %.backedge

57:                                               ; preds = %12
  %58 = sext i32 %.083 to i64
  %59 = sext i32 %.081 to i64
  %60 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %58, i64 %59
  store i32 2147483647, i32* %60, align 4
  %61 = load i32, i32* @x.5, align 4
  %62 = load i32, i32* @y.6, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 -876222972, i32 -807868562
  br label %.backedge

70:                                               ; preds = %12
  br label %.backedge

71:                                               ; preds = %12
  br label %.backedge

72:                                               ; preds = %12
  %73 = add i32 %.081, 1
  br label %.backedge

74:                                               ; preds = %12
  br label %.backedge

75:                                               ; preds = %12
  %.neg94 = add i32 %.083, 1
  br label %.backedge

76:                                               ; preds = %12
  %77 = load i32, i32* @x.5, align 4
  %78 = load i32, i32* @y.6, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 2010438066, i32 1928000215
  br label %.backedge

86:                                               ; preds = %12
  %87 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %88 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %87, i32* nonnull dereferenceable(4) %6)
  %89 = load i32, i32* @x.5, align 4
  %90 = load i32, i32* @y.6, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 -1332822428, i32 1928000215
  br label %.backedge

98:                                               ; preds = %12
  br label %.backedge

99:                                               ; preds = %12
  %100 = load i32, i32* %6, align 4
  %101 = icmp slt i32 %.079, %100
  %102 = select i1 %101, i32 816753195, i32 -1281492493
  br label %.backedge

103:                                              ; preds = %12
  %104 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %105 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %104, i32* nonnull dereferenceable(4) %8)
  %106 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %105, i32* nonnull dereferenceable(4) %9)
  %107 = load i32, i32* %9, align 4
  %108 = load i32, i32* %7, align 4
  %109 = sext i32 %108 to i64
  %110 = load i32, i32* %8, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %109, i64 %111
  store i32 %107, i32* %112, align 4
  br label %.backedge

113:                                              ; preds = %12
  %114 = add i32 %.079, 1
  br label %.backedge

115:                                              ; preds = %12
  %116 = load i32, i32* @x.5, align 4
  %117 = load i32, i32* @y.6, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 -1379818448, i32 2125990055
  br label %.backedge

125:                                              ; preds = %12
  %126 = load i32, i32* @x.5, align 4
  %127 = load i32, i32* @y.6, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 -678498139, i32 2125990055
  br label %.backedge

135:                                              ; preds = %12
  br label %.backedge

136:                                              ; preds = %12
  %137 = load i32, i32* %5, align 4
  %138 = icmp slt i32 %.077, %137
  %139 = select i1 %138, i32 1777240375, i32 1913998422
  br label %.backedge

140:                                              ; preds = %12
  br label %.backedge

141:                                              ; preds = %12
  %142 = load i32, i32* %5, align 4
  %143 = icmp slt i32 %.075, %142
  %144 = select i1 %143, i32 -373921413, i32 1102072918
  br label %.backedge

145:                                              ; preds = %12
  %146 = load i32, i32* @x.5, align 4
  %147 = load i32, i32* @y.6, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -1784985959, i32 -277099105
  br label %.backedge

155:                                              ; preds = %12
  %156 = load i32, i32* @x.5, align 4
  %157 = load i32, i32* @y.6, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 -924999742, i32 -277099105
  br label %.backedge

165:                                              ; preds = %12
  br label %.backedge

166:                                              ; preds = %12
  %167 = load i32, i32* %5, align 4
  %168 = icmp slt i32 %.073, %167
  %169 = select i1 %168, i32 -1030764198, i32 -1715453710
  br label %.backedge

170:                                              ; preds = %12
  %171 = sext i32 %.075 to i64
  %172 = sext i32 %.077 to i64
  %173 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %171, i64 %172
  %174 = load i32, i32* %173, align 4
  %.not93 = icmp eq i32 %174, 2147483647
  %175 = select i1 %.not93, i32 1001926627, i32 -1927427686
  br label %.backedge

176:                                              ; preds = %12
  %177 = sext i32 %.077 to i64
  %178 = sext i32 %.073 to i64
  %179 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %177, i64 %178
  %180 = load i32, i32* %179, align 4
  %.not92 = icmp eq i32 %180, 2147483647
  %181 = select i1 %.not92, i32 1001926627, i32 1703831527
  br label %.backedge

182:                                              ; preds = %12
  %183 = load i32, i32* @x.5, align 4
  %184 = load i32, i32* @y.6, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 1170510291, i32 386178353
  br label %.backedge

192:                                              ; preds = %12
  %193 = sext i32 %.075 to i64
  %194 = sext i32 %.073 to i64
  %195 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %193, i64 %194
  %196 = sext i32 %.077 to i64
  %197 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %193, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %196, i64 %194
  %200 = load i32, i32* %199, align 4
  %201 = add i32 %200, %198
  store i32 %201, i32* %11, align 4
  %202 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %195, i32* nonnull dereferenceable(4) %11)
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %195, align 4
  %204 = load i32, i32* @x.5, align 4
  %205 = load i32, i32* @y.6, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 947559455, i32 386178353
  br label %.backedge

213:                                              ; preds = %12
  br label %.backedge

214:                                              ; preds = %12
  br label %.backedge

215:                                              ; preds = %12
  %.neg91 = add i32 %.073, 1
  br label %.backedge

216:                                              ; preds = %12
  br label %.backedge

217:                                              ; preds = %12
  %218 = load i32, i32* @x.5, align 4
  %219 = load i32, i32* @y.6, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -237145121, i32 -467423815
  br label %.backedge

227:                                              ; preds = %12
  %228 = add i32 %.075, 1
  %229 = load i32, i32* @x.5, align 4
  %230 = load i32, i32* @y.6, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 -814174998, i32 -467423815
  br label %.backedge

238:                                              ; preds = %12
  br label %.backedge

239:                                              ; preds = %12
  br label %.backedge

240:                                              ; preds = %12
  %241 = load i32, i32* @x.5, align 4
  %242 = load i32, i32* @y.6, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 -430112120, i32 -1746760412
  br label %.backedge

250:                                              ; preds = %12
  %251 = add i32 %.077, 1
  %252 = load i32, i32* @x.5, align 4
  %253 = load i32, i32* @y.6, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 1896025740, i32 -1746760412
  br label %.backedge

261:                                              ; preds = %12
  br label %.backedge

262:                                              ; preds = %12
  br label %.backedge

263:                                              ; preds = %12
  %264 = load i32, i32* %5, align 4
  %265 = icmp slt i32 %.071, %264
  %266 = select i1 %265, i32 -1138140324, i32 1083752562
  br label %.backedge

267:                                              ; preds = %12
  %268 = load i32, i32* @x.5, align 4
  %269 = load i32, i32* @y.6, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 2001655862, i32 1848145585
  br label %.backedge

277:                                              ; preds = %12
  %278 = sext i32 %.071 to i64
  %279 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %278, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = icmp slt i32 %280, 0
  store i1 %281, i1* %3, align 1
  %282 = load i32, i32* @x.5, align 4
  %283 = load i32, i32* @y.6, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 -1275955041, i32 1848145585
  br label %.backedge

291:                                              ; preds = %12
  %.0..0..0.64 = load volatile i1, i1* %3, align 1
  %292 = select i1 %.0..0..0.64, i32 528067377, i32 1675950613
  br label %.backedge

293:                                              ; preds = %12
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str, i64 0, i64 0))
  br label %.backedge

294:                                              ; preds = %12
  br label %.backedge

295:                                              ; preds = %12
  %296 = load i32, i32* @x.5, align 4
  %297 = load i32, i32* @y.6, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 702127314, i32 619426377
  br label %.backedge

305:                                              ; preds = %12
  %.neg90 = add i32 %.071, 1
  %306 = load i32, i32* @x.5, align 4
  %307 = load i32, i32* @y.6, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 243060182, i32 619426377
  br label %.backedge

315:                                              ; preds = %12
  br label %.backedge

316:                                              ; preds = %12
  %317 = icmp eq i8 %.085, 0
  %318 = select i1 %317, i32 -1334059822, i32 -868328825
  br label %.backedge

319:                                              ; preds = %12
  br label %.backedge

320:                                              ; preds = %12
  %321 = load i32, i32* %5, align 4
  %322 = icmp slt i32 %.069, %321
  %323 = select i1 %322, i32 63815547, i32 -433775329
  br label %.backedge

324:                                              ; preds = %12
  br label %.backedge

325:                                              ; preds = %12
  %326 = load i32, i32* @x.5, align 4
  %327 = load i32, i32* @y.6, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 -1547792721, i32 1420552681
  br label %.backedge

335:                                              ; preds = %12
  %336 = load i32, i32* %5, align 4
  %337 = icmp slt i32 %.067, %336
  store i1 %337, i1* %2, align 1
  %338 = load i32, i32* @x.5, align 4
  %339 = load i32, i32* @y.6, align 4
  %340 = add i32 %338, -1
  %341 = mul i32 %340, %338
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %344, %343
  %346 = select i1 %345, i32 1014498393, i32 1420552681
  br label %.backedge

347:                                              ; preds = %12
  %.0..0..0.65 = load volatile i1, i1* %2, align 1
  %348 = select i1 %.0..0..0.65, i32 -474737092, i32 -1385404229
  br label %.backedge

349:                                              ; preds = %12
  %.not = icmp eq i32 %.067, 0
  %350 = select i1 %.not, i32 1176114127, i32 -1106815896
  br label %.backedge

351:                                              ; preds = %12
  %352 = load i32, i32* @x.5, align 4
  %353 = load i32, i32* @y.6, align 4
  %354 = add i32 %352, -1
  %355 = mul i32 %354, %352
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %358, %357
  %360 = select i1 %359, i32 1502682094, i32 -191742922
  br label %.backedge

361:                                              ; preds = %12
  %putchar89 = call i32 @putchar(i32 32)
  %362 = load i32, i32* @x.5, align 4
  %363 = load i32, i32* @y.6, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 793339532, i32 -191742922
  br label %.backedge

371:                                              ; preds = %12
  br label %.backedge

372:                                              ; preds = %12
  %373 = load i32, i32* @x.5, align 4
  %374 = load i32, i32* @y.6, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 -123193806, i32 104704784
  br label %.backedge

382:                                              ; preds = %12
  %383 = sext i32 %.069 to i64
  %384 = sext i32 %.067 to i64
  %385 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %383, i64 %384
  %386 = load i32, i32* %385, align 4
  %387 = icmp eq i32 %386, 2147483647
  store i1 %387, i1* %1, align 1
  %388 = load i32, i32* @x.5, align 4
  %389 = load i32, i32* @y.6, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 1377968698, i32 104704784
  br label %.backedge

397:                                              ; preds = %12
  %.0..0..0.66 = load volatile i1, i1* %1, align 1
  %398 = select i1 %.0..0..0.66, i32 144668509, i32 349717241
  br label %.backedge

399:                                              ; preds = %12
  %400 = load i32, i32* @x.5, align 4
  %401 = load i32, i32* @y.6, align 4
  %402 = add i32 %400, -1
  %403 = mul i32 %402, %400
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %406, %405
  %408 = select i1 %407, i32 1893241651, i32 -151430061
  br label %.backedge

409:                                              ; preds = %12
  %410 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %411 = load i32, i32* @x.5, align 4
  %412 = load i32, i32* @y.6, align 4
  %413 = add i32 %411, -1
  %414 = mul i32 %413, %411
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %417, %416
  %419 = select i1 %418, i32 -604274185, i32 -151430061
  br label %.backedge

420:                                              ; preds = %12
  br label %.backedge

421:                                              ; preds = %12
  %422 = sext i32 %.069 to i64
  %423 = sext i32 %.067 to i64
  %424 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %422, i64 %423
  %425 = load i32, i32* %424, align 4
  %426 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %425)
  br label %.backedge

427:                                              ; preds = %12
  br label %.backedge

428:                                              ; preds = %12
  %.neg88 = add i32 %.067, 1
  br label %.backedge

429:                                              ; preds = %12
  %putchar87 = call i32 @putchar(i32 10)
  br label %.backedge

430:                                              ; preds = %12
  %.neg = add i32 %.069, 1
  br label %.backedge

431:                                              ; preds = %12
  br label %.backedge

432:                                              ; preds = %12
  %433 = load i32, i32* @x.5, align 4
  %434 = load i32, i32* @y.6, align 4
  %435 = add i32 %433, -1
  %436 = mul i32 %435, %433
  %437 = and i32 %436, 1
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %439, %438
  %441 = select i1 %440, i32 612643989, i32 6070329
  br label %.backedge

442:                                              ; preds = %12
  %443 = load i32, i32* @x.5, align 4
  %444 = load i32, i32* @y.6, align 4
  %445 = add i32 %443, -1
  %446 = mul i32 %445, %443
  %447 = and i32 %446, 1
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %449, %448
  %451 = select i1 %450, i32 1407706072, i32 6070329
  br label %.backedge

452:                                              ; preds = %12
  ret i32 0

453:                                              ; preds = %12
  br label %.backedge

454:                                              ; preds = %12
  %455 = sext i32 %.083 to i64
  %456 = sext i32 %.081 to i64
  %457 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %455, i64 %456
  store i32 2147483647, i32* %457, align 4
  br label %.backedge

458:                                              ; preds = %12
  %459 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %460 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %459, i32* nonnull dereferenceable(4) %6)
  br label %.backedge

461:                                              ; preds = %12
  br label %.backedge

462:                                              ; preds = %12
  br label %.backedge

463:                                              ; preds = %12
  %464 = sext i32 %.075 to i64
  %465 = sext i32 %.073 to i64
  %466 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %464, i64 %465
  %467 = sext i32 %.077 to i64
  %468 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %464, i64 %467
  %469 = load i32, i32* %468, align 4
  %470 = getelementptr inbounds [101 x [101 x i32]], [101 x [101 x i32]]* %10, i64 0, i64 %467, i64 %465
  %471 = load i32, i32* %470, align 4
  %472 = add i32 %471, %469
  store i32 %472, i32* %11, align 4
  %473 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %466, i32* nonnull dereferenceable(4) %11)
  %474 = load i32, i32* %473, align 4
  store i32 %474, i32* %466, align 4
  br label %.backedge

475:                                              ; preds = %12
  %476 = add i32 %.075, 1
  br label %.backedge

477:                                              ; preds = %12
  %478 = add i32 %.077, 1
  br label %.backedge

479:                                              ; preds = %12
  br label %.backedge

480:                                              ; preds = %12
  %481 = add i32 %.071, 1
  br label %.backedge

482:                                              ; preds = %12
  br label %.backedge

483:                                              ; preds = %12
  %putchar = call i32 @putchar(i32 32)
  br label %.backedge

484:                                              ; preds = %12
  br label %.backedge

485:                                              ; preds = %12
  %486 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

487:                                              ; preds = %12
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.7, align 4
  %8 = load i32, i32* @y.8, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1622634582, i32 1700975208
  %16 = select i1 %14, i32 960679807, i32 1700975208
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1405839477, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 1405839477, label %18
    i32 -2102035221, label %.outer10.backedge
    i32 960679807, label %.outer.backedge
    i32 1622634582, label %21
    i32 -768161413, label %22
    i32 515717830, label %23
    i32 1700975208, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -2102035221, i32 -768161413
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 515717830, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 515717830, %22 ], [ 960679807, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s968629500.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.9, align 4
  %4 = load i32, i32* @y.10, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1292928280, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1292928280, label %11
    i32 -1332891531, label %14
    i32 1413744513, label %24
    i32 -690821802, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1332891531, i32 -690821802
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.9, align 4
  %16 = load i32, i32* @y.10, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1413744513, i32 -690821802
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1332891531, %25 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
