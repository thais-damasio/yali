; ModuleID = 'build_ollvm/programs/p02363/s940850492.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s940850492.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@v = global i32 0, align 4
@e = global i32 0, align 4
@D = global [100 x [100 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s940850492.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define void @_Z13warshallFloydv() local_unnamed_addr #4 {
  %1 = alloca i64, align 8
  br label %2

2:                                                ; preds = %.backedge, %0
  %.026 = phi i32 [ 0, %0 ], [ %.026.be, %.backedge ]
  %.024 = phi i32 [ undef, %0 ], [ %.024.be, %.backedge ]
  %.022 = phi i32 [ undef, %0 ], [ %.022.be, %.backedge ]
  %.0 = phi i32 [ 1422708432, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1422708432, label %3
    i32 -1350281668, label %7
    i32 1723543047, label %17
    i32 1862027615, label %27
    i32 1471572228, label %28
    i32 -2042626114, label %32
    i32 -223178355, label %39
    i32 1033185539, label %49
    i32 -776611786, label %59
    i32 -1826862234, label %60
    i32 1933027852, label %70
    i32 1338922186, label %80
    i32 988045502, label %81
    i32 -1498916242, label %85
    i32 -1468234926, label %92
    i32 2104331052, label %93
    i32 1135902562, label %105
    i32 1128763678, label %115
    i32 -1043762891, label %126
    i32 -1783572100, label %127
    i32 -481574006, label %128
    i32 1300357928, label %138
    i32 1579013054, label %148
    i32 1761929029, label %149
    i32 606872748, label %150
    i32 -1767631840, label %160
    i32 -1374581684, label %171
    i32 -1070517553, label %172
    i32 1620628281, label %182
    i32 1625381277, label %192
    i32 -1971208640, label %193
    i32 -920993141, label %194
    i32 -812411434, label %195
    i32 424669070, label %196
    i32 204971383, label %198
    i32 -835590243, label %200
    i32 1810140428, label %202
  ]

.backedge:                                        ; preds = %2, %202, %200, %198, %196, %195, %194, %193, %182, %172, %171, %160, %150, %149, %148, %138, %128, %127, %126, %115, %105, %93, %92, %85, %81, %80, %70, %60, %59, %49, %39, %32, %28, %27, %17, %7, %3
  %.026.be = phi i32 [ %.026, %2 ], [ %.026, %202 ], [ %201, %200 ], [ %.026, %198 ], [ %.026, %196 ], [ %.026, %195 ], [ %.026, %194 ], [ %.026, %193 ], [ %.026, %182 ], [ %.026, %172 ], [ %.026, %171 ], [ %161, %160 ], [ %.026, %150 ], [ %.026, %149 ], [ %.026, %148 ], [ %.026, %138 ], [ %.026, %128 ], [ %.026, %127 ], [ %.026, %126 ], [ %.026, %115 ], [ %.026, %105 ], [ %.026, %93 ], [ %.026, %92 ], [ %.026, %85 ], [ %.026, %81 ], [ %.026, %80 ], [ %.026, %70 ], [ %.026, %60 ], [ %.026, %59 ], [ %.026, %49 ], [ %.026, %39 ], [ %.026, %32 ], [ %.026, %28 ], [ %.026, %27 ], [ %.026, %17 ], [ %.026, %7 ], [ %.026, %3 ]
  %.024.be = phi i32 [ %.024, %2 ], [ %.024, %202 ], [ %.024, %200 ], [ %199, %198 ], [ %.024, %196 ], [ %.024, %195 ], [ %.024, %194 ], [ 0, %193 ], [ %.024, %182 ], [ %.024, %172 ], [ %.024, %171 ], [ %.024, %160 ], [ %.024, %150 ], [ %.024, %149 ], [ %.024, %148 ], [ %.neg, %138 ], [ %.024, %128 ], [ %.024, %127 ], [ %.024, %126 ], [ %.024, %115 ], [ %.024, %105 ], [ %.024, %93 ], [ %.024, %92 ], [ %.024, %85 ], [ %.024, %81 ], [ %.024, %80 ], [ %.024, %70 ], [ %.024, %60 ], [ %.024, %59 ], [ %.024, %49 ], [ %.024, %39 ], [ %.024, %32 ], [ %.024, %28 ], [ %.024, %27 ], [ 0, %17 ], [ %.024, %7 ], [ %.024, %3 ]
  %.022.be = phi i32 [ %.022, %2 ], [ %.022, %202 ], [ %.022, %200 ], [ %.022, %198 ], [ %197, %196 ], [ 0, %195 ], [ %.022, %194 ], [ %.022, %193 ], [ %.022, %182 ], [ %.022, %172 ], [ %.022, %171 ], [ %.022, %160 ], [ %.022, %150 ], [ %.022, %149 ], [ %.022, %148 ], [ %.022, %138 ], [ %.022, %128 ], [ %.022, %127 ], [ %.022, %126 ], [ %116, %115 ], [ %.022, %105 ], [ %.022, %93 ], [ %.022, %92 ], [ %.022, %85 ], [ %.022, %81 ], [ %.022, %80 ], [ 0, %70 ], [ %.022, %60 ], [ %.022, %59 ], [ %.022, %49 ], [ %.022, %39 ], [ %.022, %32 ], [ %.022, %28 ], [ %.022, %27 ], [ %.022, %17 ], [ %.022, %7 ], [ %.022, %3 ]
  %.0.be = phi i32 [ %.0, %2 ], [ 1620628281, %202 ], [ -1767631840, %200 ], [ 1300357928, %198 ], [ 1128763678, %196 ], [ 1933027852, %195 ], [ 1033185539, %194 ], [ 1723543047, %193 ], [ %191, %182 ], [ %181, %172 ], [ 1422708432, %171 ], [ %170, %160 ], [ %159, %150 ], [ 606872748, %149 ], [ 1471572228, %148 ], [ %147, %138 ], [ %137, %128 ], [ -481574006, %127 ], [ 988045502, %126 ], [ %125, %115 ], [ %114, %105 ], [ 1135902562, %93 ], [ 1135902562, %92 ], [ %91, %85 ], [ %84, %81 ], [ 988045502, %80 ], [ %79, %70 ], [ %69, %60 ], [ -481574006, %59 ], [ %58, %49 ], [ %48, %39 ], [ %38, %32 ], [ %31, %28 ], [ 1471572228, %27 ], [ %26, %17 ], [ %16, %7 ], [ %6, %3 ]
  br label %2

3:                                                ; preds = %2
  %4 = load i32, i32* @v, align 4
  %5 = icmp slt i32 %.026, %4
  %6 = select i1 %5, i32 -1350281668, i32 -1070517553
  br label %.backedge

7:                                                ; preds = %2
  %8 = load i32, i32* @x.3, align 4
  %9 = load i32, i32* @y.4, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 1723543047, i32 -1971208640
  br label %.backedge

17:                                               ; preds = %2
  %18 = load i32, i32* @x.3, align 4
  %19 = load i32, i32* @y.4, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 1862027615, i32 -1971208640
  br label %.backedge

27:                                               ; preds = %2
  br label %.backedge

28:                                               ; preds = %2
  %29 = load i32, i32* @v, align 4
  %30 = icmp slt i32 %.024, %29
  %31 = select i1 %30, i32 -2042626114, i32 1761929029
  br label %.backedge

32:                                               ; preds = %2
  %33 = sext i32 %.024 to i64
  %34 = sext i32 %.026 to i64
  %35 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %33, i64 %34
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 4294967296
  %38 = select i1 %37, i32 -223178355, i32 -1826862234
  br label %.backedge

39:                                               ; preds = %2
  %40 = load i32, i32* @x.3, align 4
  %41 = load i32, i32* @y.4, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 1033185539, i32 -920993141
  br label %.backedge

49:                                               ; preds = %2
  %50 = load i32, i32* @x.3, align 4
  %51 = load i32, i32* @y.4, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -776611786, i32 -920993141
  br label %.backedge

59:                                               ; preds = %2
  br label %.backedge

60:                                               ; preds = %2
  %61 = load i32, i32* @x.3, align 4
  %62 = load i32, i32* @y.4, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 1933027852, i32 -812411434
  br label %.backedge

70:                                               ; preds = %2
  %71 = load i32, i32* @x.3, align 4
  %72 = load i32, i32* @y.4, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 1338922186, i32 -812411434
  br label %.backedge

80:                                               ; preds = %2
  br label %.backedge

81:                                               ; preds = %2
  %82 = load i32, i32* @v, align 4
  %83 = icmp slt i32 %.022, %82
  %84 = select i1 %83, i32 -1498916242, i32 -1783572100
  br label %.backedge

85:                                               ; preds = %2
  %86 = sext i32 %.026 to i64
  %87 = sext i32 %.022 to i64
  %88 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %86, i64 %87
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 4294967296
  %91 = select i1 %90, i32 -1468234926, i32 2104331052
  br label %.backedge

92:                                               ; preds = %2
  br label %.backedge

93:                                               ; preds = %2
  %94 = sext i32 %.024 to i64
  %95 = sext i32 %.022 to i64
  %96 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %94, i64 %95
  %97 = sext i32 %.026 to i64
  %98 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %94, i64 %97
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %97, i64 %95
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, %99
  store i64 %102, i64* %1, align 8
  %103 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %96, i64* nonnull dereferenceable(8) %1)
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %96, align 8
  br label %.backedge

105:                                              ; preds = %2
  %106 = load i32, i32* @x.3, align 4
  %107 = load i32, i32* @y.4, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 1128763678, i32 424669070
  br label %.backedge

115:                                              ; preds = %2
  %116 = add i32 %.022, 1
  %117 = load i32, i32* @x.3, align 4
  %118 = load i32, i32* @y.4, align 4
  %119 = add i32 %117, -1
  %120 = mul i32 %119, %117
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %123, %122
  %125 = select i1 %124, i32 -1043762891, i32 424669070
  br label %.backedge

126:                                              ; preds = %2
  br label %.backedge

127:                                              ; preds = %2
  br label %.backedge

128:                                              ; preds = %2
  %129 = load i32, i32* @x.3, align 4
  %130 = load i32, i32* @y.4, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 1300357928, i32 204971383
  br label %.backedge

138:                                              ; preds = %2
  %.neg = add i32 %.024, 1
  %139 = load i32, i32* @x.3, align 4
  %140 = load i32, i32* @y.4, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 1579013054, i32 204971383
  br label %.backedge

148:                                              ; preds = %2
  br label %.backedge

149:                                              ; preds = %2
  br label %.backedge

150:                                              ; preds = %2
  %151 = load i32, i32* @x.3, align 4
  %152 = load i32, i32* @y.4, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 -1767631840, i32 -835590243
  br label %.backedge

160:                                              ; preds = %2
  %161 = add i32 %.026, 1
  %162 = load i32, i32* @x.3, align 4
  %163 = load i32, i32* @y.4, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 -1374581684, i32 -835590243
  br label %.backedge

171:                                              ; preds = %2
  br label %.backedge

172:                                              ; preds = %2
  %173 = load i32, i32* @x.3, align 4
  %174 = load i32, i32* @y.4, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 1620628281, i32 1810140428
  br label %.backedge

182:                                              ; preds = %2
  %183 = load i32, i32* @x.3, align 4
  %184 = load i32, i32* @y.4, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 1625381277, i32 1810140428
  br label %.backedge

192:                                              ; preds = %2
  ret void

193:                                              ; preds = %2
  br label %.backedge

194:                                              ; preds = %2
  br label %.backedge

195:                                              ; preds = %2
  br label %.backedge

196:                                              ; preds = %2
  %197 = add i32 %.022, 1
  br label %.backedge

198:                                              ; preds = %2
  %199 = add i32 %.024, 1
  br label %.backedge

200:                                              ; preds = %2
  %201 = add i32 %.026, 1
  br label %.backedge

202:                                              ; preds = %2
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.5, align 4
  %8 = load i32, i32* @y.6, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1042756986, i32 1252921387
  %16 = select i1 %14, i32 691223846, i32 1252921387
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -389530132, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 -389530132, label %18
    i32 792684386, label %.outer10.backedge
    i32 691223846, label %.outer.backedge
    i32 1042756986, label %21
    i32 1857780924, label %22
    i32 1635226993, label %23
    i32 1252921387, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 792684386, i32 1857780924
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 1635226993, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i64* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 1635226993, %22 ], [ 691223846, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @v)
  %5 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %4, i32* nonnull dereferenceable(4) @e)
  br label %6

6:                                                ; preds = %.backedge, %0
  %.046 = phi i32 [ 0, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.042 = phi i32 [ undef, %0 ], [ %.042.be, %.backedge ]
  %.040 = phi i8 [ undef, %0 ], [ %.040.be, %.backedge ]
  %.038 = phi i32 [ undef, %0 ], [ %.038.be, %.backedge ]
  %.036 = phi i32 [ undef, %0 ], [ %.036.be, %.backedge ]
  %.034 = phi i32 [ undef, %0 ], [ %.034.be, %.backedge ]
  %.0 = phi i32 [ -1538182016, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1538182016, label %7
    i32 -1194041334, label %11
    i32 -2057575459, label %12
    i32 -918930484, label %16
    i32 516016979, label %18
    i32 -169805551, label %28
    i32 -1115360337, label %41
    i32 184322465, label %42
    i32 -1766819928, label %52
    i32 -684107762, label %65
    i32 -832753211, label %66
    i32 2000901647, label %67
    i32 1133425686, label %77
    i32 815104880, label %88
    i32 -718974350, label %89
    i32 38647812, label %99
    i32 284592568, label %109
    i32 -1941465665, label %110
    i32 -587496850, label %120
    i32 -1742031596, label %130
    i32 -975404214, label %131
    i32 -780054042, label %132
    i32 1361064340, label %136
    i32 -1934729883, label %147
    i32 1783690695, label %157
    i32 1901887161, label %167
    i32 -915665831, label %168
    i32 -529903209, label %178
    i32 -1288001389, label %188
    i32 -604433696, label %189
    i32 -185624333, label %193
    i32 1241208109, label %199
    i32 1442348131, label %200
    i32 1107858396, label %201
    i32 681660668, label %203
    i32 1826538331, label %206
    i32 2045962060, label %216
    i32 -1008060374, label %228
    i32 1233563729, label %229
    i32 -505747341, label %230
    i32 -1455410599, label %234
    i32 -954106467, label %244
    i32 -514212358, label %254
    i32 827417048, label %255
    i32 546070421, label %259
    i32 369855273, label %261
    i32 318646717, label %271
    i32 -713856665, label %282
    i32 1538958336, label %283
    i32 451877773, label %290
    i32 -1051928369, label %300
    i32 1099689596, label %311
    i32 1555642924, label %312
    i32 -173040985, label %318
    i32 -512392549, label %319
    i32 1452486724, label %321
    i32 -1867004104, label %331
    i32 1546054606, label %342
    i32 2004137421, label %343
    i32 -1740539678, label %344
    i32 -1803663415, label %345
    i32 292193015, label %355
    i32 2138914136, label %365
    i32 -1340188594, label %366
    i32 -1931257916, label %370
    i32 1326450316, label %374
    i32 494993205, label %376
    i32 1959303108, label %377
    i32 -1897635085, label %379
    i32 1842345031, label %380
    i32 1179463230, label %381
    i32 -1339231285, label %384
    i32 -2147290810, label %385
    i32 -616782590, label %387
    i32 -45697466, label %389
    i32 -613886667, label %391
  ]

.backedge:                                        ; preds = %6, %391, %389, %387, %385, %384, %381, %380, %379, %377, %376, %374, %370, %366, %355, %345, %344, %343, %342, %331, %321, %319, %318, %312, %311, %300, %290, %283, %282, %271, %261, %259, %255, %254, %244, %234, %230, %229, %228, %216, %206, %203, %201, %200, %199, %193, %189, %188, %178, %168, %167, %157, %147, %136, %132, %131, %130, %120, %110, %109, %99, %89, %88, %77, %67, %66, %65, %52, %42, %41, %28, %18, %16, %12, %11, %7
  %.046.be = phi i32 [ %.046, %6 ], [ %.046, %391 ], [ %.046, %389 ], [ %.046, %387 ], [ %.046, %385 ], [ %.046, %384 ], [ %.046, %381 ], [ %.046, %380 ], [ %.046, %379 ], [ %378, %377 ], [ %.046, %376 ], [ %.046, %374 ], [ %.046, %370 ], [ %.046, %366 ], [ %.046, %355 ], [ %.046, %345 ], [ %.046, %344 ], [ %.046, %343 ], [ %.046, %342 ], [ %.046, %331 ], [ %.046, %321 ], [ %.046, %319 ], [ %.046, %318 ], [ %.046, %312 ], [ %.046, %311 ], [ %.046, %300 ], [ %.046, %290 ], [ %.046, %283 ], [ %.046, %282 ], [ %.046, %271 ], [ %.046, %261 ], [ %.046, %259 ], [ %.046, %255 ], [ %.046, %254 ], [ %.046, %244 ], [ %.046, %234 ], [ %.046, %230 ], [ %.046, %229 ], [ %.046, %228 ], [ %.046, %216 ], [ %.046, %206 ], [ %.046, %203 ], [ %.046, %201 ], [ %.046, %200 ], [ %.046, %199 ], [ %.046, %193 ], [ %.046, %189 ], [ %.046, %188 ], [ %.046, %178 ], [ %.046, %168 ], [ %.046, %167 ], [ %.046, %157 ], [ %.046, %147 ], [ %.046, %136 ], [ %.046, %132 ], [ %.046, %131 ], [ %.046, %130 ], [ %.neg51, %120 ], [ %.046, %110 ], [ %.046, %109 ], [ %.046, %99 ], [ %.046, %89 ], [ %.046, %88 ], [ %.046, %77 ], [ %.046, %67 ], [ %.046, %66 ], [ %.046, %65 ], [ %.046, %52 ], [ %.046, %42 ], [ %.046, %41 ], [ %.046, %28 ], [ %.046, %18 ], [ %.046, %16 ], [ %.046, %12 ], [ %.046, %11 ], [ %.046, %7 ]
  %.044.be = phi i32 [ %.044, %6 ], [ %.044, %391 ], [ %.044, %389 ], [ %.044, %387 ], [ %.044, %385 ], [ %.044, %384 ], [ %.044, %381 ], [ %.044, %380 ], [ %.044, %379 ], [ %.044, %377 ], [ %.044, %376 ], [ %375, %374 ], [ %.044, %370 ], [ %.044, %366 ], [ %.044, %355 ], [ %.044, %345 ], [ %.044, %344 ], [ %.044, %343 ], [ %.044, %342 ], [ %.044, %331 ], [ %.044, %321 ], [ %.044, %319 ], [ %.044, %318 ], [ %.044, %312 ], [ %.044, %311 ], [ %.044, %300 ], [ %.044, %290 ], [ %.044, %283 ], [ %.044, %282 ], [ %.044, %271 ], [ %.044, %261 ], [ %.044, %259 ], [ %.044, %255 ], [ %.044, %254 ], [ %.044, %244 ], [ %.044, %234 ], [ %.044, %230 ], [ %.044, %229 ], [ %.044, %228 ], [ %.044, %216 ], [ %.044, %206 ], [ %.044, %203 ], [ %.044, %201 ], [ %.044, %200 ], [ %.044, %199 ], [ %.044, %193 ], [ %.044, %189 ], [ %.044, %188 ], [ %.044, %178 ], [ %.044, %168 ], [ %.044, %167 ], [ %.044, %157 ], [ %.044, %147 ], [ %.044, %136 ], [ %.044, %132 ], [ %.044, %131 ], [ %.044, %130 ], [ %.044, %120 ], [ %.044, %110 ], [ %.044, %109 ], [ %.044, %99 ], [ %.044, %89 ], [ %.044, %88 ], [ %78, %77 ], [ %.044, %67 ], [ %.044, %66 ], [ %.044, %65 ], [ %.044, %52 ], [ %.044, %42 ], [ %.044, %41 ], [ %.044, %28 ], [ %.044, %18 ], [ %.044, %16 ], [ %.044, %12 ], [ 0, %11 ], [ %.044, %7 ]
  %.042.be = phi i32 [ %.042, %6 ], [ %.042, %391 ], [ %.042, %389 ], [ %.042, %387 ], [ %.042, %385 ], [ %.042, %384 ], [ %.042, %381 ], [ %.042, %380 ], [ %.neg, %379 ], [ %.042, %377 ], [ %.042, %376 ], [ %.042, %374 ], [ %.042, %370 ], [ %.042, %366 ], [ %.042, %355 ], [ %.042, %345 ], [ %.042, %344 ], [ %.042, %343 ], [ %.042, %342 ], [ %.042, %331 ], [ %.042, %321 ], [ %.042, %319 ], [ %.042, %318 ], [ %.042, %312 ], [ %.042, %311 ], [ %.042, %300 ], [ %.042, %290 ], [ %.042, %283 ], [ %.042, %282 ], [ %.042, %271 ], [ %.042, %261 ], [ %.042, %259 ], [ %.042, %255 ], [ %.042, %254 ], [ %.042, %244 ], [ %.042, %234 ], [ %.042, %230 ], [ %.042, %229 ], [ %.042, %228 ], [ %.042, %216 ], [ %.042, %206 ], [ %.042, %203 ], [ %.042, %201 ], [ %.042, %200 ], [ %.042, %199 ], [ %.042, %193 ], [ %.042, %189 ], [ %.042, %188 ], [ %.042, %178 ], [ %.042, %168 ], [ %.042, %167 ], [ %.neg50, %157 ], [ %.042, %147 ], [ %.042, %136 ], [ %.042, %132 ], [ 0, %131 ], [ %.042, %130 ], [ %.042, %120 ], [ %.042, %110 ], [ %.042, %109 ], [ %.042, %99 ], [ %.042, %89 ], [ %.042, %88 ], [ %.042, %77 ], [ %.042, %67 ], [ %.042, %66 ], [ %.042, %65 ], [ %.042, %52 ], [ %.042, %42 ], [ %.042, %41 ], [ %.042, %28 ], [ %.042, %18 ], [ %.042, %16 ], [ %.042, %12 ], [ %.042, %11 ], [ %.042, %7 ]
  %.040.be = phi i8 [ %.040, %6 ], [ %.040, %391 ], [ %.040, %389 ], [ %.040, %387 ], [ %.040, %385 ], [ %.040, %384 ], [ %.040, %381 ], [ 0, %380 ], [ %.040, %379 ], [ %.040, %377 ], [ %.040, %376 ], [ %.040, %374 ], [ %.040, %370 ], [ %.040, %366 ], [ %.040, %355 ], [ %.040, %345 ], [ %.040, %344 ], [ %.040, %343 ], [ %.040, %342 ], [ %.040, %331 ], [ %.040, %321 ], [ %.040, %319 ], [ %.040, %318 ], [ %.040, %312 ], [ %.040, %311 ], [ %.040, %300 ], [ %.040, %290 ], [ %.040, %283 ], [ %.040, %282 ], [ %.040, %271 ], [ %.040, %261 ], [ %.040, %259 ], [ %.040, %255 ], [ %.040, %254 ], [ %.040, %244 ], [ %.040, %234 ], [ %.040, %230 ], [ %.040, %229 ], [ %.040, %228 ], [ %.040, %216 ], [ %.040, %206 ], [ %.040, %203 ], [ %.040, %201 ], [ %.040, %200 ], [ 1, %199 ], [ %.040, %193 ], [ %.040, %189 ], [ %.040, %188 ], [ 0, %178 ], [ %.040, %168 ], [ %.040, %167 ], [ %.040, %157 ], [ %.040, %147 ], [ %.040, %136 ], [ %.040, %132 ], [ %.040, %131 ], [ %.040, %130 ], [ %.040, %120 ], [ %.040, %110 ], [ %.040, %109 ], [ %.040, %99 ], [ %.040, %89 ], [ %.040, %88 ], [ %.040, %77 ], [ %.040, %67 ], [ %.040, %66 ], [ %.040, %65 ], [ %.040, %52 ], [ %.040, %42 ], [ %.040, %41 ], [ %.040, %28 ], [ %.040, %18 ], [ %.040, %16 ], [ %.040, %12 ], [ %.040, %11 ], [ %.040, %7 ]
  %.038.be = phi i32 [ %.038, %6 ], [ %.038, %391 ], [ %.038, %389 ], [ %.038, %387 ], [ %.038, %385 ], [ %.038, %384 ], [ %.038, %381 ], [ 0, %380 ], [ %.038, %379 ], [ %.038, %377 ], [ %.038, %376 ], [ %.038, %374 ], [ %.038, %370 ], [ %.038, %366 ], [ %.038, %355 ], [ %.038, %345 ], [ %.038, %344 ], [ %.038, %343 ], [ %.038, %342 ], [ %.038, %331 ], [ %.038, %321 ], [ %.038, %319 ], [ %.038, %318 ], [ %.038, %312 ], [ %.038, %311 ], [ %.038, %300 ], [ %.038, %290 ], [ %.038, %283 ], [ %.038, %282 ], [ %.038, %271 ], [ %.038, %261 ], [ %.038, %259 ], [ %.038, %255 ], [ %.038, %254 ], [ %.038, %244 ], [ %.038, %234 ], [ %.038, %230 ], [ %.038, %229 ], [ %.038, %228 ], [ %.038, %216 ], [ %.038, %206 ], [ %.038, %203 ], [ %202, %201 ], [ %.038, %200 ], [ %.038, %199 ], [ %.038, %193 ], [ %.038, %189 ], [ %.038, %188 ], [ 0, %178 ], [ %.038, %168 ], [ %.038, %167 ], [ %.038, %157 ], [ %.038, %147 ], [ %.038, %136 ], [ %.038, %132 ], [ %.038, %131 ], [ %.038, %130 ], [ %.038, %120 ], [ %.038, %110 ], [ %.038, %109 ], [ %.038, %99 ], [ %.038, %89 ], [ %.038, %88 ], [ %.038, %77 ], [ %.038, %67 ], [ %.038, %66 ], [ %.038, %65 ], [ %.038, %52 ], [ %.038, %42 ], [ %.038, %41 ], [ %.038, %28 ], [ %.038, %18 ], [ %.038, %16 ], [ %.038, %12 ], [ %.038, %11 ], [ %.038, %7 ]
  %.036.be = phi i32 [ %.036, %6 ], [ %.036, %391 ], [ %.036, %389 ], [ %.036, %387 ], [ %.036, %385 ], [ %.036, %384 ], [ %.036, %381 ], [ %.036, %380 ], [ %.036, %379 ], [ %.036, %377 ], [ %.036, %376 ], [ %.036, %374 ], [ %.036, %370 ], [ %.036, %366 ], [ %.036, %355 ], [ %.036, %345 ], [ %.036, %344 ], [ %.neg48, %343 ], [ %.036, %342 ], [ %.036, %331 ], [ %.036, %321 ], [ %.036, %319 ], [ %.036, %318 ], [ %.036, %312 ], [ %.036, %311 ], [ %.036, %300 ], [ %.036, %290 ], [ %.036, %283 ], [ %.036, %282 ], [ %.036, %271 ], [ %.036, %261 ], [ %.036, %259 ], [ %.036, %255 ], [ %.036, %254 ], [ %.036, %244 ], [ %.036, %234 ], [ %.036, %230 ], [ 0, %229 ], [ %.036, %228 ], [ %.036, %216 ], [ %.036, %206 ], [ %.036, %203 ], [ %.036, %201 ], [ %.036, %200 ], [ %.036, %199 ], [ %.036, %193 ], [ %.036, %189 ], [ %.036, %188 ], [ %.036, %178 ], [ %.036, %168 ], [ %.036, %167 ], [ %.036, %157 ], [ %.036, %147 ], [ %.036, %136 ], [ %.036, %132 ], [ %.036, %131 ], [ %.036, %130 ], [ %.036, %120 ], [ %.036, %110 ], [ %.036, %109 ], [ %.036, %99 ], [ %.036, %89 ], [ %.036, %88 ], [ %.036, %77 ], [ %.036, %67 ], [ %.036, %66 ], [ %.036, %65 ], [ %.036, %52 ], [ %.036, %42 ], [ %.036, %41 ], [ %.036, %28 ], [ %.036, %18 ], [ %.036, %16 ], [ %.036, %12 ], [ %.036, %11 ], [ %.036, %7 ]
  %.034.be = phi i32 [ %.034, %6 ], [ %.034, %391 ], [ %.034, %389 ], [ %.034, %387 ], [ %.034, %385 ], [ 0, %384 ], [ %.034, %381 ], [ %.034, %380 ], [ %.034, %379 ], [ %.034, %377 ], [ %.034, %376 ], [ %.034, %374 ], [ %.034, %370 ], [ %.034, %366 ], [ %.034, %355 ], [ %.034, %345 ], [ %.034, %344 ], [ %.034, %343 ], [ %.034, %342 ], [ %.034, %331 ], [ %.034, %321 ], [ %320, %319 ], [ %.034, %318 ], [ %.034, %312 ], [ %.034, %311 ], [ %.034, %300 ], [ %.034, %290 ], [ %.034, %283 ], [ %.034, %282 ], [ %.034, %271 ], [ %.034, %261 ], [ %.034, %259 ], [ %.034, %255 ], [ %.034, %254 ], [ 0, %244 ], [ %.034, %234 ], [ %.034, %230 ], [ %.034, %229 ], [ %.034, %228 ], [ %.034, %216 ], [ %.034, %206 ], [ %.034, %203 ], [ %.034, %201 ], [ %.034, %200 ], [ %.034, %199 ], [ %.034, %193 ], [ %.034, %189 ], [ %.034, %188 ], [ %.034, %178 ], [ %.034, %168 ], [ %.034, %167 ], [ %.034, %157 ], [ %.034, %147 ], [ %.034, %136 ], [ %.034, %132 ], [ %.034, %131 ], [ %.034, %130 ], [ %.034, %120 ], [ %.034, %110 ], [ %.034, %109 ], [ %.034, %99 ], [ %.034, %89 ], [ %.034, %88 ], [ %.034, %77 ], [ %.034, %67 ], [ %.034, %66 ], [ %.034, %65 ], [ %.034, %52 ], [ %.034, %42 ], [ %.034, %41 ], [ %.034, %28 ], [ %.034, %18 ], [ %.034, %16 ], [ %.034, %12 ], [ %.034, %11 ], [ %.034, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ 292193015, %391 ], [ -1867004104, %389 ], [ -1051928369, %387 ], [ 318646717, %385 ], [ -954106467, %384 ], [ 2045962060, %381 ], [ -529903209, %380 ], [ 1783690695, %379 ], [ -587496850, %377 ], [ 38647812, %376 ], [ 1133425686, %374 ], [ -1766819928, %370 ], [ -169805551, %366 ], [ %364, %355 ], [ %354, %345 ], [ -1803663415, %344 ], [ -505747341, %343 ], [ 2004137421, %342 ], [ %341, %331 ], [ %330, %321 ], [ 827417048, %319 ], [ -512392549, %318 ], [ -173040985, %312 ], [ -173040985, %311 ], [ %310, %300 ], [ %299, %290 ], [ %289, %283 ], [ 1538958336, %282 ], [ %281, %271 ], [ %270, %261 ], [ %260, %259 ], [ %258, %255 ], [ 827417048, %254 ], [ %253, %244 ], [ %243, %234 ], [ %233, %230 ], [ -505747341, %229 ], [ -1803663415, %228 ], [ %227, %216 ], [ %215, %206 ], [ %205, %203 ], [ -604433696, %201 ], [ 1107858396, %200 ], [ 1442348131, %199 ], [ %198, %193 ], [ %192, %189 ], [ -604433696, %188 ], [ %187, %178 ], [ %177, %168 ], [ -780054042, %167 ], [ %166, %157 ], [ %156, %147 ], [ -1934729883, %136 ], [ %135, %132 ], [ -780054042, %131 ], [ -1538182016, %130 ], [ %129, %120 ], [ %119, %110 ], [ -1941465665, %109 ], [ %108, %99 ], [ %98, %89 ], [ -2057575459, %88 ], [ %87, %77 ], [ %76, %67 ], [ 2000901647, %66 ], [ -832753211, %65 ], [ %64, %52 ], [ %51, %42 ], [ -832753211, %41 ], [ %40, %28 ], [ %27, %18 ], [ %17, %16 ], [ %15, %12 ], [ -2057575459, %11 ], [ %10, %7 ]
  br label %6

7:                                                ; preds = %6
  %8 = load i32, i32* @v, align 4
  %9 = icmp slt i32 %.046, %8
  %10 = select i1 %9, i32 -1194041334, i32 -975404214
  br label %.backedge

11:                                               ; preds = %6
  br label %.backedge

12:                                               ; preds = %6
  %13 = load i32, i32* @v, align 4
  %14 = icmp slt i32 %.044, %13
  %15 = select i1 %14, i32 -918930484, i32 -718974350
  br label %.backedge

16:                                               ; preds = %6
  %.not52 = icmp eq i32 %.046, %.044
  %17 = select i1 %.not52, i32 184322465, i32 516016979
  br label %.backedge

18:                                               ; preds = %6
  %19 = load i32, i32* @x.7, align 4
  %20 = load i32, i32* @y.8, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 -169805551, i32 -1340188594
  br label %.backedge

28:                                               ; preds = %6
  %29 = sext i32 %.046 to i64
  %30 = sext i32 %.044 to i64
  %31 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %29, i64 %30
  store i64 4294967296, i64* %31, align 8
  %32 = load i32, i32* @x.7, align 4
  %33 = load i32, i32* @y.8, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -1115360337, i32 -1340188594
  br label %.backedge

41:                                               ; preds = %6
  br label %.backedge

42:                                               ; preds = %6
  %43 = load i32, i32* @x.7, align 4
  %44 = load i32, i32* @y.8, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 -1766819928, i32 -1931257916
  br label %.backedge

52:                                               ; preds = %6
  %53 = sext i32 %.046 to i64
  %54 = sext i32 %.044 to i64
  %55 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %53, i64 %54
  store i64 0, i64* %55, align 8
  %56 = load i32, i32* @x.7, align 4
  %57 = load i32, i32* @y.8, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 -684107762, i32 -1931257916
  br label %.backedge

65:                                               ; preds = %6
  br label %.backedge

66:                                               ; preds = %6
  br label %.backedge

67:                                               ; preds = %6
  %68 = load i32, i32* @x.7, align 4
  %69 = load i32, i32* @y.8, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 1133425686, i32 1326450316
  br label %.backedge

77:                                               ; preds = %6
  %78 = add i32 %.044, 1
  %79 = load i32, i32* @x.7, align 4
  %80 = load i32, i32* @y.8, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 815104880, i32 1326450316
  br label %.backedge

88:                                               ; preds = %6
  br label %.backedge

89:                                               ; preds = %6
  %90 = load i32, i32* @x.7, align 4
  %91 = load i32, i32* @y.8, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 38647812, i32 494993205
  br label %.backedge

99:                                               ; preds = %6
  %100 = load i32, i32* @x.7, align 4
  %101 = load i32, i32* @y.8, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 284592568, i32 494993205
  br label %.backedge

109:                                              ; preds = %6
  br label %.backedge

110:                                              ; preds = %6
  %111 = load i32, i32* @x.7, align 4
  %112 = load i32, i32* @y.8, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -587496850, i32 1959303108
  br label %.backedge

120:                                              ; preds = %6
  %.neg51 = add i32 %.046, 1
  %121 = load i32, i32* @x.7, align 4
  %122 = load i32, i32* @y.8, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 -1742031596, i32 1959303108
  br label %.backedge

130:                                              ; preds = %6
  br label %.backedge

131:                                              ; preds = %6
  br label %.backedge

132:                                              ; preds = %6
  %133 = load i32, i32* @e, align 4
  %134 = icmp slt i32 %.042, %133
  %135 = select i1 %134, i32 1361064340, i32 -915665831
  br label %.backedge

136:                                              ; preds = %6
  %137 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %1)
  %138 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %137, i32* nonnull dereferenceable(4) %2)
  %139 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %138, i32* nonnull dereferenceable(4) %3)
  %140 = load i32, i32* %3, align 4
  %141 = sext i32 %140 to i64
  %142 = load i32, i32* %1, align 4
  %143 = sext i32 %142 to i64
  %144 = load i32, i32* %2, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %143, i64 %145
  store i64 %141, i64* %146, align 8
  br label %.backedge

147:                                              ; preds = %6
  %148 = load i32, i32* @x.7, align 4
  %149 = load i32, i32* @y.8, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 1783690695, i32 -1897635085
  br label %.backedge

157:                                              ; preds = %6
  %.neg50 = add i32 %.042, 1
  %158 = load i32, i32* @x.7, align 4
  %159 = load i32, i32* @y.8, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 1901887161, i32 -1897635085
  br label %.backedge

167:                                              ; preds = %6
  br label %.backedge

168:                                              ; preds = %6
  %169 = load i32, i32* @x.7, align 4
  %170 = load i32, i32* @y.8, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 -529903209, i32 1842345031
  br label %.backedge

178:                                              ; preds = %6
  call void @_Z13warshallFloydv()
  %179 = load i32, i32* @x.7, align 4
  %180 = load i32, i32* @y.8, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 -1288001389, i32 1842345031
  br label %.backedge

188:                                              ; preds = %6
  br label %.backedge

189:                                              ; preds = %6
  %190 = load i32, i32* @v, align 4
  %191 = icmp slt i32 %.038, %190
  %192 = select i1 %191, i32 -185624333, i32 681660668
  br label %.backedge

193:                                              ; preds = %6
  %194 = sext i32 %.038 to i64
  %195 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %194, i64 %194
  %196 = load i64, i64* %195, align 8
  %197 = icmp slt i64 %196, 0
  %198 = select i1 %197, i32 1241208109, i32 1442348131
  br label %.backedge

199:                                              ; preds = %6
  br label %.backedge

200:                                              ; preds = %6
  br label %.backedge

201:                                              ; preds = %6
  %202 = add i32 %.038, 1
  br label %.backedge

203:                                              ; preds = %6
  %204 = and i8 %.040, 1
  %.not49 = icmp eq i8 %204, 0
  %205 = select i1 %.not49, i32 1233563729, i32 1826538331
  br label %.backedge

206:                                              ; preds = %6
  %207 = load i32, i32* @x.7, align 4
  %208 = load i32, i32* @y.8, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 2045962060, i32 1179463230
  br label %.backedge

216:                                              ; preds = %6
  %217 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %218 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %217, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %219 = load i32, i32* @x.7, align 4
  %220 = load i32, i32* @y.8, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 -1008060374, i32 1179463230
  br label %.backedge

228:                                              ; preds = %6
  br label %.backedge

229:                                              ; preds = %6
  br label %.backedge

230:                                              ; preds = %6
  %231 = load i32, i32* @v, align 4
  %232 = icmp slt i32 %.036, %231
  %233 = select i1 %232, i32 -1455410599, i32 -1740539678
  br label %.backedge

234:                                              ; preds = %6
  %235 = load i32, i32* @x.7, align 4
  %236 = load i32, i32* @y.8, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 -954106467, i32 -1339231285
  br label %.backedge

244:                                              ; preds = %6
  %245 = load i32, i32* @x.7, align 4
  %246 = load i32, i32* @y.8, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 -514212358, i32 -1339231285
  br label %.backedge

254:                                              ; preds = %6
  br label %.backedge

255:                                              ; preds = %6
  %256 = load i32, i32* @v, align 4
  %257 = icmp slt i32 %.034, %256
  %258 = select i1 %257, i32 546070421, i32 1452486724
  br label %.backedge

259:                                              ; preds = %6
  %.not = icmp eq i32 %.034, 0
  %260 = select i1 %.not, i32 1538958336, i32 369855273
  br label %.backedge

261:                                              ; preds = %6
  %262 = load i32, i32* @x.7, align 4
  %263 = load i32, i32* @y.8, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 318646717, i32 -2147290810
  br label %.backedge

271:                                              ; preds = %6
  %272 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %273 = load i32, i32* @x.7, align 4
  %274 = load i32, i32* @y.8, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 -713856665, i32 -2147290810
  br label %.backedge

282:                                              ; preds = %6
  br label %.backedge

283:                                              ; preds = %6
  %284 = sext i32 %.036 to i64
  %285 = sext i32 %.034 to i64
  %286 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %284, i64 %285
  %287 = load i64, i64* %286, align 8
  %288 = icmp eq i64 %287, 4294967296
  %289 = select i1 %288, i32 451877773, i32 1555642924
  br label %.backedge

290:                                              ; preds = %6
  %291 = load i32, i32* @x.7, align 4
  %292 = load i32, i32* @y.8, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 -1051928369, i32 -616782590
  br label %.backedge

300:                                              ; preds = %6
  %301 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %302 = load i32, i32* @x.7, align 4
  %303 = load i32, i32* @y.8, align 4
  %304 = add i32 %302, -1
  %305 = mul i32 %304, %302
  %306 = and i32 %305, 1
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %308, %307
  %310 = select i1 %309, i32 1099689596, i32 -616782590
  br label %.backedge

311:                                              ; preds = %6
  br label %.backedge

312:                                              ; preds = %6
  %313 = sext i32 %.036 to i64
  %314 = sext i32 %.034 to i64
  %315 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %313, i64 %314
  %316 = load i64, i64* %315, align 8
  %317 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %316)
  br label %.backedge

318:                                              ; preds = %6
  br label %.backedge

319:                                              ; preds = %6
  %320 = add i32 %.034, 1
  br label %.backedge

321:                                              ; preds = %6
  %322 = load i32, i32* @x.7, align 4
  %323 = load i32, i32* @y.8, align 4
  %324 = add i32 %322, -1
  %325 = mul i32 %324, %322
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %328, %327
  %330 = select i1 %329, i32 -1867004104, i32 -45697466
  br label %.backedge

331:                                              ; preds = %6
  %332 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %333 = load i32, i32* @x.7, align 4
  %334 = load i32, i32* @y.8, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 1546054606, i32 -45697466
  br label %.backedge

342:                                              ; preds = %6
  br label %.backedge

343:                                              ; preds = %6
  %.neg48 = add i32 %.036, 1
  br label %.backedge

344:                                              ; preds = %6
  br label %.backedge

345:                                              ; preds = %6
  %346 = load i32, i32* @x.7, align 4
  %347 = load i32, i32* @y.8, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 292193015, i32 -613886667
  br label %.backedge

355:                                              ; preds = %6
  %356 = load i32, i32* @x.7, align 4
  %357 = load i32, i32* @y.8, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 2138914136, i32 -613886667
  br label %.backedge

365:                                              ; preds = %6
  ret i32 0

366:                                              ; preds = %6
  %367 = sext i32 %.046 to i64
  %368 = sext i32 %.044 to i64
  %369 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %367, i64 %368
  store i64 4294967296, i64* %369, align 8
  br label %.backedge

370:                                              ; preds = %6
  %371 = sext i32 %.046 to i64
  %372 = sext i32 %.044 to i64
  %373 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @D, i64 0, i64 %371, i64 %372
  store i64 0, i64* %373, align 8
  br label %.backedge

374:                                              ; preds = %6
  %375 = add i32 %.044, 1
  br label %.backedge

376:                                              ; preds = %6
  br label %.backedge

377:                                              ; preds = %6
  %378 = add i32 %.046, 1
  br label %.backedge

379:                                              ; preds = %6
  %.neg = add i32 %.042, 1
  br label %.backedge

380:                                              ; preds = %6
  call void @_Z13warshallFloydv()
  br label %.backedge

381:                                              ; preds = %6
  %382 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %383 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %382, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

384:                                              ; preds = %6
  br label %.backedge

385:                                              ; preds = %6
  %386 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

387:                                              ; preds = %6
  %388 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

389:                                              ; preds = %6
  %390 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

391:                                              ; preds = %6
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s940850492.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
