; ModuleID = 'build_ollvm/programs/p02363/s415626147.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s415626147.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@m = global i32 0, align 4
@d = global [105 x [105 x i64]] zeroinitializer, align 16
@v = local_unnamed_addr global [105 x [105 x i8]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s415626147.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  %9 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %8, i32* nonnull dereferenceable(4) @m)
  br label %10

10:                                               ; preds = %.backedge, %0
  %.068 = phi i32 [ 0, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.0 = phi i32 [ 370163057, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 370163057, label %11
    i32 1876365716, label %15
    i32 -841291687, label %16
    i32 941347014, label %20
    i32 -1861698785, label %23
    i32 937772260, label %28
    i32 857450762, label %32
    i32 -173487893, label %33
    i32 1141137841, label %43
    i32 243534688, label %54
    i32 -1831830057, label %55
    i32 -14130183, label %56
    i32 -1338061894, label %58
    i32 1811347446, label %68
    i32 -1007659689, label %78
    i32 -195241727, label %79
    i32 63888429, label %83
    i32 1281335054, label %95
    i32 900698107, label %105
    i32 -887343898, label %115
    i32 -815735996, label %116
    i32 1804660918, label %117
    i32 402327784, label %121
    i32 1897091682, label %122
    i32 1104135857, label %126
    i32 -307025463, label %136
    i32 2004703891, label %146
    i32 -1129463642, label %147
    i32 -1012611015, label %157
    i32 -430387413, label %169
    i32 -1278014702, label %171
    i32 -1701363472, label %183
    i32 100356389, label %185
    i32 -1941064535, label %186
    i32 -1090382178, label %188
    i32 1825505473, label %198
    i32 662706517, label %208
    i32 945026197, label %209
    i32 -124002287, label %219
    i32 799543422, label %229
    i32 1609519219, label %230
    i32 389357746, label %231
    i32 184388952, label %235
    i32 2040799580, label %241
    i32 847449013, label %251
    i32 -1650674197, label %263
    i32 -234811452, label %264
    i32 449355458, label %265
    i32 1644991658, label %267
    i32 -1080305242, label %277
    i32 -788193360, label %287
    i32 32388585, label %288
    i32 -213145696, label %298
    i32 -1231123820, label %310
    i32 -915754190, label %312
    i32 -113676399, label %322
    i32 -1346010747, label %332
    i32 -384642737, label %333
    i32 -2027577459, label %343
    i32 1991804884, label %355
    i32 -1909101130, label %357
    i32 -643908907, label %364
    i32 317810420, label %366
    i32 -799914503, label %372
    i32 1959009606, label %382
    i32 1539725416, label %399
    i32 1490574515, label %400
    i32 -715996663, label %402
    i32 69522979, label %403
    i32 -1218272863, label %405
    i32 -637899166, label %406
    i32 1502359499, label %407
    i32 -740091535, label %408
    i32 523800330, label %410
    i32 575329485, label %411
    i32 -1020680132, label %412
    i32 -1301606092, label %413
    i32 -867062745, label %415
    i32 -1599760781, label %418
    i32 -512148452, label %419
    i32 623603492, label %420
    i32 -544399272, label %421
    i32 -1544840819, label %422
  ]

.backedge:                                        ; preds = %10, %422, %421, %420, %419, %418, %415, %413, %412, %411, %410, %408, %407, %406, %403, %402, %400, %399, %382, %372, %366, %364, %357, %355, %343, %333, %332, %322, %312, %310, %298, %288, %287, %277, %267, %265, %264, %263, %251, %241, %235, %231, %230, %229, %219, %209, %208, %198, %188, %186, %185, %183, %171, %169, %157, %147, %146, %136, %126, %122, %121, %117, %116, %115, %105, %95, %83, %79, %78, %68, %58, %56, %55, %54, %43, %33, %32, %28, %23, %20, %16, %15, %11
  %.068.be = phi i32 [ %.068, %10 ], [ %.068, %422 ], [ %.068, %421 ], [ %.068, %420 ], [ %.068, %419 ], [ %.068, %418 ], [ %.068, %415 ], [ %.068, %413 ], [ %.068, %412 ], [ %.068, %411 ], [ %.068, %410 ], [ %.068, %408 ], [ %.068, %407 ], [ %.068, %406 ], [ %.068, %403 ], [ %.068, %402 ], [ %.068, %400 ], [ %.068, %399 ], [ %.068, %382 ], [ %.068, %372 ], [ %.068, %366 ], [ %.068, %364 ], [ %.068, %357 ], [ %.068, %355 ], [ %.068, %343 ], [ %.068, %333 ], [ %.068, %332 ], [ %.068, %322 ], [ %.068, %312 ], [ %.068, %310 ], [ %.068, %298 ], [ %.068, %288 ], [ %.068, %287 ], [ %.068, %277 ], [ %.068, %267 ], [ %.068, %265 ], [ %.068, %264 ], [ %.068, %263 ], [ %.068, %251 ], [ %.068, %241 ], [ %.068, %235 ], [ %.068, %231 ], [ %.068, %230 ], [ %.068, %229 ], [ %.068, %219 ], [ %.068, %209 ], [ %.068, %208 ], [ %.068, %198 ], [ %.068, %188 ], [ %.068, %186 ], [ %.068, %185 ], [ %.068, %183 ], [ %.068, %171 ], [ %.068, %169 ], [ %.068, %157 ], [ %.068, %147 ], [ %.068, %146 ], [ %.068, %136 ], [ %.068, %126 ], [ %.068, %122 ], [ %.068, %121 ], [ %.068, %117 ], [ %.068, %116 ], [ %.068, %115 ], [ %.068, %105 ], [ %.068, %95 ], [ %.068, %83 ], [ %.068, %79 ], [ %.068, %78 ], [ %.068, %68 ], [ %.068, %58 ], [ %57, %56 ], [ %.068, %55 ], [ %.068, %54 ], [ %.068, %43 ], [ %.068, %33 ], [ %.068, %32 ], [ %.068, %28 ], [ %.068, %23 ], [ %.068, %20 ], [ %.068, %16 ], [ %.068, %15 ], [ %.068, %11 ]
  %.066.be = phi i32 [ %.066, %10 ], [ %.066, %422 ], [ %.066, %421 ], [ %.066, %420 ], [ %.066, %419 ], [ %.066, %418 ], [ %.066, %415 ], [ %.066, %413 ], [ %.066, %412 ], [ %.066, %411 ], [ %.066, %410 ], [ %.066, %408 ], [ %.066, %407 ], [ %.neg, %406 ], [ %.066, %403 ], [ %.066, %402 ], [ %.066, %400 ], [ %.066, %399 ], [ %.066, %382 ], [ %.066, %372 ], [ %.066, %366 ], [ %.066, %364 ], [ %.066, %357 ], [ %.066, %355 ], [ %.066, %343 ], [ %.066, %333 ], [ %.066, %332 ], [ %.066, %322 ], [ %.066, %312 ], [ %.066, %310 ], [ %.066, %298 ], [ %.066, %288 ], [ %.066, %287 ], [ %.066, %277 ], [ %.066, %267 ], [ %.066, %265 ], [ %.066, %264 ], [ %.066, %263 ], [ %.066, %251 ], [ %.066, %241 ], [ %.066, %235 ], [ %.066, %231 ], [ %.066, %230 ], [ %.066, %229 ], [ %.066, %219 ], [ %.066, %209 ], [ %.066, %208 ], [ %.066, %198 ], [ %.066, %188 ], [ %.066, %186 ], [ %.066, %185 ], [ %.066, %183 ], [ %.066, %171 ], [ %.066, %169 ], [ %.066, %157 ], [ %.066, %147 ], [ %.066, %146 ], [ %.066, %136 ], [ %.066, %126 ], [ %.066, %122 ], [ %.066, %121 ], [ %.066, %117 ], [ %.066, %116 ], [ %.066, %115 ], [ %.066, %105 ], [ %.066, %95 ], [ %.066, %83 ], [ %.066, %79 ], [ %.066, %78 ], [ %.066, %68 ], [ %.066, %58 ], [ %.066, %56 ], [ %.066, %55 ], [ %.066, %54 ], [ %44, %43 ], [ %.066, %33 ], [ %.066, %32 ], [ %.066, %28 ], [ %.066, %23 ], [ %.066, %20 ], [ %.066, %16 ], [ 0, %15 ], [ %.066, %11 ]
  %.064.be = phi i32 [ %.064, %10 ], [ %.064, %422 ], [ %.064, %421 ], [ %.064, %420 ], [ %.064, %419 ], [ %.064, %418 ], [ %.064, %415 ], [ %.064, %413 ], [ %.064, %412 ], [ %.064, %411 ], [ %.064, %410 ], [ %409, %408 ], [ 0, %407 ], [ %.064, %406 ], [ %.064, %403 ], [ %.064, %402 ], [ %.064, %400 ], [ %.064, %399 ], [ %.064, %382 ], [ %.064, %372 ], [ %.064, %366 ], [ %.064, %364 ], [ %.064, %357 ], [ %.064, %355 ], [ %.064, %343 ], [ %.064, %333 ], [ %.064, %332 ], [ %.064, %322 ], [ %.064, %312 ], [ %.064, %310 ], [ %.064, %298 ], [ %.064, %288 ], [ %.064, %287 ], [ %.064, %277 ], [ %.064, %267 ], [ %.064, %265 ], [ %.064, %264 ], [ %.064, %263 ], [ %.064, %251 ], [ %.064, %241 ], [ %.064, %235 ], [ %.064, %231 ], [ %.064, %230 ], [ %.064, %229 ], [ %.064, %219 ], [ %.064, %209 ], [ %.064, %208 ], [ %.064, %198 ], [ %.064, %188 ], [ %.064, %186 ], [ %.064, %185 ], [ %.064, %183 ], [ %.064, %171 ], [ %.064, %169 ], [ %.064, %157 ], [ %.064, %147 ], [ %.064, %146 ], [ %.064, %136 ], [ %.064, %126 ], [ %.064, %122 ], [ %.064, %121 ], [ %.064, %117 ], [ %.064, %116 ], [ %.064, %115 ], [ %.neg73, %105 ], [ %.064, %95 ], [ %.064, %83 ], [ %.064, %79 ], [ %.064, %78 ], [ 0, %68 ], [ %.064, %58 ], [ %.064, %56 ], [ %.064, %55 ], [ %.064, %54 ], [ %.064, %43 ], [ %.064, %33 ], [ %.064, %32 ], [ %.064, %28 ], [ %.064, %23 ], [ %.064, %20 ], [ %.064, %16 ], [ %.064, %15 ], [ %.064, %11 ]
  %.062.be = phi i32 [ %.062, %10 ], [ %.062, %422 ], [ %.062, %421 ], [ %.062, %420 ], [ %.062, %419 ], [ %.062, %418 ], [ %.062, %415 ], [ %414, %413 ], [ %.062, %412 ], [ %.062, %411 ], [ %.062, %410 ], [ %.062, %408 ], [ %.062, %407 ], [ %.062, %406 ], [ %.062, %403 ], [ %.062, %402 ], [ %.062, %400 ], [ %.062, %399 ], [ %.062, %382 ], [ %.062, %372 ], [ %.062, %366 ], [ %.062, %364 ], [ %.062, %357 ], [ %.062, %355 ], [ %.062, %343 ], [ %.062, %333 ], [ %.062, %332 ], [ %.062, %322 ], [ %.062, %312 ], [ %.062, %310 ], [ %.062, %298 ], [ %.062, %288 ], [ %.062, %287 ], [ %.062, %277 ], [ %.062, %267 ], [ %.062, %265 ], [ %.062, %264 ], [ %.062, %263 ], [ %.062, %251 ], [ %.062, %241 ], [ %.062, %235 ], [ %.062, %231 ], [ %.062, %230 ], [ %.062, %229 ], [ %.neg72, %219 ], [ %.062, %209 ], [ %.062, %208 ], [ %.062, %198 ], [ %.062, %188 ], [ %.062, %186 ], [ %.062, %185 ], [ %.062, %183 ], [ %.062, %171 ], [ %.062, %169 ], [ %.062, %157 ], [ %.062, %147 ], [ %.062, %146 ], [ %.062, %136 ], [ %.062, %126 ], [ %.062, %122 ], [ %.062, %121 ], [ %.062, %117 ], [ 0, %116 ], [ %.062, %115 ], [ %.062, %105 ], [ %.062, %95 ], [ %.062, %83 ], [ %.062, %79 ], [ %.062, %78 ], [ %.062, %68 ], [ %.062, %58 ], [ %.062, %56 ], [ %.062, %55 ], [ %.062, %54 ], [ %.062, %43 ], [ %.062, %33 ], [ %.062, %32 ], [ %.062, %28 ], [ %.062, %23 ], [ %.062, %20 ], [ %.062, %16 ], [ %.062, %15 ], [ %.062, %11 ]
  %.060.be = phi i32 [ %.060, %10 ], [ %.060, %422 ], [ %.060, %421 ], [ %.060, %420 ], [ %.060, %419 ], [ %.060, %418 ], [ %.060, %415 ], [ %.060, %413 ], [ %.060, %412 ], [ %.060, %411 ], [ %.060, %410 ], [ %.060, %408 ], [ %.060, %407 ], [ %.060, %406 ], [ %.060, %403 ], [ %.060, %402 ], [ %.060, %400 ], [ %.060, %399 ], [ %.060, %382 ], [ %.060, %372 ], [ %.060, %366 ], [ %.060, %364 ], [ %.060, %357 ], [ %.060, %355 ], [ %.060, %343 ], [ %.060, %333 ], [ %.060, %332 ], [ %.060, %322 ], [ %.060, %312 ], [ %.060, %310 ], [ %.060, %298 ], [ %.060, %288 ], [ %.060, %287 ], [ %.060, %277 ], [ %.060, %267 ], [ %.060, %265 ], [ %.060, %264 ], [ %.060, %263 ], [ %.060, %251 ], [ %.060, %241 ], [ %.060, %235 ], [ %.060, %231 ], [ %.060, %230 ], [ %.060, %229 ], [ %.060, %219 ], [ %.060, %209 ], [ %.060, %208 ], [ %.060, %198 ], [ %.060, %188 ], [ %187, %186 ], [ %.060, %185 ], [ %.060, %183 ], [ %.060, %171 ], [ %.060, %169 ], [ %.060, %157 ], [ %.060, %147 ], [ %.060, %146 ], [ %.060, %136 ], [ %.060, %126 ], [ %.060, %122 ], [ 0, %121 ], [ %.060, %117 ], [ %.060, %116 ], [ %.060, %115 ], [ %.060, %105 ], [ %.060, %95 ], [ %.060, %83 ], [ %.060, %79 ], [ %.060, %78 ], [ %.060, %68 ], [ %.060, %58 ], [ %.060, %56 ], [ %.060, %55 ], [ %.060, %54 ], [ %.060, %43 ], [ %.060, %33 ], [ %.060, %32 ], [ %.060, %28 ], [ %.060, %23 ], [ %.060, %20 ], [ %.060, %16 ], [ %.060, %15 ], [ %.060, %11 ]
  %.058.be = phi i32 [ %.058, %10 ], [ %.058, %422 ], [ %.058, %421 ], [ %.058, %420 ], [ %.058, %419 ], [ %.058, %418 ], [ %.058, %415 ], [ %.058, %413 ], [ %.058, %412 ], [ %.058, %411 ], [ 0, %410 ], [ %.058, %408 ], [ %.058, %407 ], [ %.058, %406 ], [ %.058, %403 ], [ %.058, %402 ], [ %.058, %400 ], [ %.058, %399 ], [ %.058, %382 ], [ %.058, %372 ], [ %.058, %366 ], [ %.058, %364 ], [ %.058, %357 ], [ %.058, %355 ], [ %.058, %343 ], [ %.058, %333 ], [ %.058, %332 ], [ %.058, %322 ], [ %.058, %312 ], [ %.058, %310 ], [ %.058, %298 ], [ %.058, %288 ], [ %.058, %287 ], [ %.058, %277 ], [ %.058, %267 ], [ %.058, %265 ], [ %.058, %264 ], [ %.058, %263 ], [ %.058, %251 ], [ %.058, %241 ], [ %.058, %235 ], [ %.058, %231 ], [ %.058, %230 ], [ %.058, %229 ], [ %.058, %219 ], [ %.058, %209 ], [ %.058, %208 ], [ %.058, %198 ], [ %.058, %188 ], [ %.058, %186 ], [ %.058, %185 ], [ %184, %183 ], [ %.058, %171 ], [ %.058, %169 ], [ %.058, %157 ], [ %.058, %147 ], [ %.058, %146 ], [ 0, %136 ], [ %.058, %126 ], [ %.058, %122 ], [ %.058, %121 ], [ %.058, %117 ], [ %.058, %116 ], [ %.058, %115 ], [ %.058, %105 ], [ %.058, %95 ], [ %.058, %83 ], [ %.058, %79 ], [ %.058, %78 ], [ %.058, %68 ], [ %.058, %58 ], [ %.058, %56 ], [ %.058, %55 ], [ %.058, %54 ], [ %.058, %43 ], [ %.058, %33 ], [ %.058, %32 ], [ %.058, %28 ], [ %.058, %23 ], [ %.058, %20 ], [ %.058, %16 ], [ %.058, %15 ], [ %.058, %11 ]
  %.056.be = phi i32 [ %.056, %10 ], [ %.056, %422 ], [ %.056, %421 ], [ %.056, %420 ], [ %.056, %419 ], [ %.056, %418 ], [ %.056, %415 ], [ %.056, %413 ], [ %.056, %412 ], [ %.056, %411 ], [ %.056, %410 ], [ %.056, %408 ], [ %.056, %407 ], [ %.056, %406 ], [ %.056, %403 ], [ %.056, %402 ], [ %.056, %400 ], [ %.056, %399 ], [ %.056, %382 ], [ %.056, %372 ], [ %.056, %366 ], [ %.056, %364 ], [ %.056, %357 ], [ %.056, %355 ], [ %.056, %343 ], [ %.056, %333 ], [ %.056, %332 ], [ %.056, %322 ], [ %.056, %312 ], [ %.056, %310 ], [ %.056, %298 ], [ %.056, %288 ], [ %.056, %287 ], [ %.056, %277 ], [ %.056, %267 ], [ %266, %265 ], [ %.056, %264 ], [ %.056, %263 ], [ %.056, %251 ], [ %.056, %241 ], [ %.056, %235 ], [ %.056, %231 ], [ 0, %230 ], [ %.056, %229 ], [ %.056, %219 ], [ %.056, %209 ], [ %.056, %208 ], [ %.056, %198 ], [ %.056, %188 ], [ %.056, %186 ], [ %.056, %185 ], [ %.056, %183 ], [ %.056, %171 ], [ %.056, %169 ], [ %.056, %157 ], [ %.056, %147 ], [ %.056, %146 ], [ %.056, %136 ], [ %.056, %126 ], [ %.056, %122 ], [ %.056, %121 ], [ %.056, %117 ], [ %.056, %116 ], [ %.056, %115 ], [ %.056, %105 ], [ %.056, %95 ], [ %.056, %83 ], [ %.056, %79 ], [ %.056, %78 ], [ %.056, %68 ], [ %.056, %58 ], [ %.056, %56 ], [ %.056, %55 ], [ %.056, %54 ], [ %.056, %43 ], [ %.056, %33 ], [ %.056, %32 ], [ %.056, %28 ], [ %.056, %23 ], [ %.056, %20 ], [ %.056, %16 ], [ %.056, %15 ], [ %.056, %11 ]
  %.054.be = phi i32 [ %.054, %10 ], [ %.054, %422 ], [ %.054, %421 ], [ %.054, %420 ], [ %.054, %419 ], [ 0, %418 ], [ %.054, %415 ], [ %.054, %413 ], [ %.054, %412 ], [ %.054, %411 ], [ %.054, %410 ], [ %.054, %408 ], [ %.054, %407 ], [ %.054, %406 ], [ %404, %403 ], [ %.054, %402 ], [ %.054, %400 ], [ %.054, %399 ], [ %.054, %382 ], [ %.054, %372 ], [ %.054, %366 ], [ %.054, %364 ], [ %.054, %357 ], [ %.054, %355 ], [ %.054, %343 ], [ %.054, %333 ], [ %.054, %332 ], [ %.054, %322 ], [ %.054, %312 ], [ %.054, %310 ], [ %.054, %298 ], [ %.054, %288 ], [ %.054, %287 ], [ 0, %277 ], [ %.054, %267 ], [ %.054, %265 ], [ %.054, %264 ], [ %.054, %263 ], [ %.054, %251 ], [ %.054, %241 ], [ %.054, %235 ], [ %.054, %231 ], [ %.054, %230 ], [ %.054, %229 ], [ %.054, %219 ], [ %.054, %209 ], [ %.054, %208 ], [ %.054, %198 ], [ %.054, %188 ], [ %.054, %186 ], [ %.054, %185 ], [ %.054, %183 ], [ %.054, %171 ], [ %.054, %169 ], [ %.054, %157 ], [ %.054, %147 ], [ %.054, %146 ], [ %.054, %136 ], [ %.054, %126 ], [ %.054, %122 ], [ %.054, %121 ], [ %.054, %117 ], [ %.054, %116 ], [ %.054, %115 ], [ %.054, %105 ], [ %.054, %95 ], [ %.054, %83 ], [ %.054, %79 ], [ %.054, %78 ], [ %.054, %68 ], [ %.054, %58 ], [ %.054, %56 ], [ %.054, %55 ], [ %.054, %54 ], [ %.054, %43 ], [ %.054, %33 ], [ %.054, %32 ], [ %.054, %28 ], [ %.054, %23 ], [ %.054, %20 ], [ %.054, %16 ], [ %.054, %15 ], [ %.054, %11 ]
  %.052.be = phi i32 [ %.052, %10 ], [ %.052, %422 ], [ %.052, %421 ], [ 0, %420 ], [ %.052, %419 ], [ %.052, %418 ], [ %.052, %415 ], [ %.052, %413 ], [ %.052, %412 ], [ %.052, %411 ], [ %.052, %410 ], [ %.052, %408 ], [ %.052, %407 ], [ %.052, %406 ], [ %.052, %403 ], [ %.052, %402 ], [ %401, %400 ], [ %.052, %399 ], [ %.052, %382 ], [ %.052, %372 ], [ %.052, %366 ], [ %.052, %364 ], [ %.052, %357 ], [ %.052, %355 ], [ %.052, %343 ], [ %.052, %333 ], [ %.052, %332 ], [ 0, %322 ], [ %.052, %312 ], [ %.052, %310 ], [ %.052, %298 ], [ %.052, %288 ], [ %.052, %287 ], [ %.052, %277 ], [ %.052, %267 ], [ %.052, %265 ], [ %.052, %264 ], [ %.052, %263 ], [ %.052, %251 ], [ %.052, %241 ], [ %.052, %235 ], [ %.052, %231 ], [ %.052, %230 ], [ %.052, %229 ], [ %.052, %219 ], [ %.052, %209 ], [ %.052, %208 ], [ %.052, %198 ], [ %.052, %188 ], [ %.052, %186 ], [ %.052, %185 ], [ %.052, %183 ], [ %.052, %171 ], [ %.052, %169 ], [ %.052, %157 ], [ %.052, %147 ], [ %.052, %146 ], [ %.052, %136 ], [ %.052, %126 ], [ %.052, %122 ], [ %.052, %121 ], [ %.052, %117 ], [ %.052, %116 ], [ %.052, %115 ], [ %.052, %105 ], [ %.052, %95 ], [ %.052, %83 ], [ %.052, %79 ], [ %.052, %78 ], [ %.052, %68 ], [ %.052, %58 ], [ %.052, %56 ], [ %.052, %55 ], [ %.052, %54 ], [ %.052, %43 ], [ %.052, %33 ], [ %.052, %32 ], [ %.052, %28 ], [ %.052, %23 ], [ %.052, %20 ], [ %.052, %16 ], [ %.052, %15 ], [ %.052, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ 1959009606, %422 ], [ -2027577459, %421 ], [ -113676399, %420 ], [ -213145696, %419 ], [ -1080305242, %418 ], [ 847449013, %415 ], [ -124002287, %413 ], [ 1825505473, %412 ], [ -1012611015, %411 ], [ -307025463, %410 ], [ 900698107, %408 ], [ 1811347446, %407 ], [ 1141137841, %406 ], [ 32388585, %403 ], [ 69522979, %402 ], [ -384642737, %400 ], [ 1490574515, %399 ], [ %398, %382 ], [ %381, %372 ], [ -799914503, %366 ], [ -799914503, %364 ], [ %363, %357 ], [ %356, %355 ], [ %354, %343 ], [ %342, %333 ], [ -384642737, %332 ], [ %331, %322 ], [ %321, %312 ], [ %311, %310 ], [ %309, %298 ], [ %297, %288 ], [ 32388585, %287 ], [ %286, %277 ], [ %276, %267 ], [ 389357746, %265 ], [ 449355458, %264 ], [ -1218272863, %263 ], [ %262, %251 ], [ %250, %241 ], [ %240, %235 ], [ %234, %231 ], [ 389357746, %230 ], [ 1804660918, %229 ], [ %228, %219 ], [ %218, %209 ], [ 945026197, %208 ], [ %207, %198 ], [ %197, %188 ], [ 1897091682, %186 ], [ -1941064535, %185 ], [ -1129463642, %183 ], [ -1701363472, %171 ], [ %170, %169 ], [ %168, %157 ], [ %156, %147 ], [ -1129463642, %146 ], [ %145, %136 ], [ %135, %126 ], [ %125, %122 ], [ 1897091682, %121 ], [ %120, %117 ], [ 1804660918, %116 ], [ -195241727, %115 ], [ %114, %105 ], [ %104, %95 ], [ 1281335054, %83 ], [ %82, %79 ], [ -195241727, %78 ], [ %77, %68 ], [ %67, %58 ], [ 370163057, %56 ], [ -14130183, %55 ], [ -841291687, %54 ], [ %53, %43 ], [ %42, %33 ], [ -173487893, %32 ], [ 857450762, %28 ], [ 857450762, %23 ], [ %22, %20 ], [ %19, %16 ], [ -841291687, %15 ], [ %14, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* @n, align 4
  %13 = icmp slt i32 %.068, %12
  %14 = select i1 %13, i32 1876365716, i32 -1338061894
  br label %.backedge

15:                                               ; preds = %10
  br label %.backedge

16:                                               ; preds = %10
  %17 = load i32, i32* @n, align 4
  %18 = icmp slt i32 %.066, %17
  %19 = select i1 %18, i32 941347014, i32 -1831830057
  br label %.backedge

20:                                               ; preds = %10
  %21 = icmp eq i32 %.068, %.066
  %22 = select i1 %21, i32 -1861698785, i32 937772260
  br label %.backedge

23:                                               ; preds = %10
  %24 = sext i32 %.068 to i64
  %25 = sext i32 %.066 to i64
  %26 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @d, i64 0, i64 %24, i64 %25
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @v, i64 0, i64 %24, i64 %25
  store i8 1, i8* %27, align 1
  br label %.backedge

28:                                               ; preds = %10
  %29 = sext i32 %.068 to i64
  %30 = sext i32 %.066 to i64
  %31 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @d, i64 0, i64 %29, i64 %30
  store i64 4557430888798830399, i64* %31, align 8
  br label %.backedge

32:                                               ; preds = %10
  br label %.backedge

33:                                               ; preds = %10
  %34 = load i32, i32* @x.3, align 4
  %35 = load i32, i32* @y.4, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 1141137841, i32 -637899166
  br label %.backedge

43:                                               ; preds = %10
  %44 = add i32 %.066, 1
  %45 = load i32, i32* @x.3, align 4
  %46 = load i32, i32* @y.4, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 243534688, i32 -637899166
  br label %.backedge

54:                                               ; preds = %10
  br label %.backedge

55:                                               ; preds = %10
  br label %.backedge

56:                                               ; preds = %10
  %57 = add i32 %.068, 1
  br label %.backedge

58:                                               ; preds = %10
  %59 = load i32, i32* @x.3, align 4
  %60 = load i32, i32* @y.4, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 1811347446, i32 1502359499
  br label %.backedge

68:                                               ; preds = %10
  %69 = load i32, i32* @x.3, align 4
  %70 = load i32, i32* @y.4, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 -1007659689, i32 1502359499
  br label %.backedge

78:                                               ; preds = %10
  br label %.backedge

79:                                               ; preds = %10
  %80 = load i32, i32* @m, align 4
  %81 = icmp slt i32 %.064, %80
  %82 = select i1 %81, i32 63888429, i32 -815735996
  br label %.backedge

83:                                               ; preds = %10
  %84 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %4)
  %85 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %84, i32* nonnull dereferenceable(4) %5)
  %86 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %85, i32* nonnull dereferenceable(4) %6)
  %87 = load i32, i32* %6, align 4
  %88 = sext i32 %87 to i64
  %89 = load i32, i32* %4, align 4
  %90 = sext i32 %89 to i64
  %91 = load i32, i32* %5, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @d, i64 0, i64 %90, i64 %92
  store i64 %88, i64* %93, align 8
  %94 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @v, i64 0, i64 %90, i64 %92
  store i8 1, i8* %94, align 1
  br label %.backedge

95:                                               ; preds = %10
  %96 = load i32, i32* @x.3, align 4
  %97 = load i32, i32* @y.4, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 900698107, i32 -740091535
  br label %.backedge

105:                                              ; preds = %10
  %.neg73 = add i32 %.064, 1
  %106 = load i32, i32* @x.3, align 4
  %107 = load i32, i32* @y.4, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 -887343898, i32 -740091535
  br label %.backedge

115:                                              ; preds = %10
  br label %.backedge

116:                                              ; preds = %10
  br label %.backedge

117:                                              ; preds = %10
  %118 = load i32, i32* @n, align 4
  %119 = icmp slt i32 %.062, %118
  %120 = select i1 %119, i32 402327784, i32 1609519219
  br label %.backedge

121:                                              ; preds = %10
  br label %.backedge

122:                                              ; preds = %10
  %123 = load i32, i32* @n, align 4
  %124 = icmp slt i32 %.060, %123
  %125 = select i1 %124, i32 1104135857, i32 -1090382178
  br label %.backedge

126:                                              ; preds = %10
  %127 = load i32, i32* @x.3, align 4
  %128 = load i32, i32* @y.4, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 -307025463, i32 523800330
  br label %.backedge

136:                                              ; preds = %10
  %137 = load i32, i32* @x.3, align 4
  %138 = load i32, i32* @y.4, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 2004703891, i32 523800330
  br label %.backedge

146:                                              ; preds = %10
  br label %.backedge

147:                                              ; preds = %10
  %148 = load i32, i32* @x.3, align 4
  %149 = load i32, i32* @y.4, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 -1012611015, i32 575329485
  br label %.backedge

157:                                              ; preds = %10
  %158 = load i32, i32* @n, align 4
  %159 = icmp slt i32 %.058, %158
  store i1 %159, i1* %3, align 1
  %160 = load i32, i32* @x.3, align 4
  %161 = load i32, i32* @y.4, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -430387413, i32 575329485
  br label %.backedge

169:                                              ; preds = %10
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %170 = select i1 %.0..0..0., i32 -1278014702, i32 100356389
  br label %.backedge

171:                                              ; preds = %10
  %172 = sext i32 %.060 to i64
  %173 = sext i32 %.058 to i64
  %174 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @d, i64 0, i64 %172, i64 %173
  %175 = sext i32 %.062 to i64
  %176 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @d, i64 0, i64 %172, i64 %175
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @d, i64 0, i64 %175, i64 %173
  %179 = load i64, i64* %178, align 8
  %180 = add i64 %179, %177
  store i64 %180, i64* %7, align 8
  %181 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %174, i64* nonnull dereferenceable(8) %7)
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %174, align 8
  br label %.backedge

183:                                              ; preds = %10
  %184 = add i32 %.058, 1
  br label %.backedge

185:                                              ; preds = %10
  br label %.backedge

186:                                              ; preds = %10
  %187 = add i32 %.060, 1
  br label %.backedge

188:                                              ; preds = %10
  %189 = load i32, i32* @x.3, align 4
  %190 = load i32, i32* @y.4, align 4
  %191 = add i32 %189, -1
  %192 = mul i32 %191, %189
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %195, %194
  %197 = select i1 %196, i32 1825505473, i32 -1020680132
  br label %.backedge

198:                                              ; preds = %10
  %199 = load i32, i32* @x.3, align 4
  %200 = load i32, i32* @y.4, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 662706517, i32 -1020680132
  br label %.backedge

208:                                              ; preds = %10
  br label %.backedge

209:                                              ; preds = %10
  %210 = load i32, i32* @x.3, align 4
  %211 = load i32, i32* @y.4, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 -124002287, i32 -1301606092
  br label %.backedge

219:                                              ; preds = %10
  %.neg72 = add i32 %.062, 1
  %220 = load i32, i32* @x.3, align 4
  %221 = load i32, i32* @y.4, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 799543422, i32 -1301606092
  br label %.backedge

229:                                              ; preds = %10
  br label %.backedge

230:                                              ; preds = %10
  br label %.backedge

231:                                              ; preds = %10
  %232 = load i32, i32* @n, align 4
  %233 = icmp slt i32 %.056, %232
  %234 = select i1 %233, i32 184388952, i32 1644991658
  br label %.backedge

235:                                              ; preds = %10
  %236 = sext i32 %.056 to i64
  %237 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @d, i64 0, i64 %236, i64 %236
  %238 = load i64, i64* %237, align 8
  %239 = icmp slt i64 %238, 0
  %240 = select i1 %239, i32 2040799580, i32 -234811452
  br label %.backedge

241:                                              ; preds = %10
  %242 = load i32, i32* @x.3, align 4
  %243 = load i32, i32* @y.4, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 847449013, i32 -867062745
  br label %.backedge

251:                                              ; preds = %10
  %252 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %253 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %252, i8 signext 10)
  %254 = load i32, i32* @x.3, align 4
  %255 = load i32, i32* @y.4, align 4
  %256 = add i32 %254, -1
  %257 = mul i32 %256, %254
  %258 = and i32 %257, 1
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %260, %259
  %262 = select i1 %261, i32 -1650674197, i32 -867062745
  br label %.backedge

263:                                              ; preds = %10
  br label %.backedge

264:                                              ; preds = %10
  br label %.backedge

265:                                              ; preds = %10
  %266 = add i32 %.056, 1
  br label %.backedge

267:                                              ; preds = %10
  %268 = load i32, i32* @x.3, align 4
  %269 = load i32, i32* @y.4, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 -1080305242, i32 -1599760781
  br label %.backedge

277:                                              ; preds = %10
  %278 = load i32, i32* @x.3, align 4
  %279 = load i32, i32* @y.4, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 -788193360, i32 -1599760781
  br label %.backedge

287:                                              ; preds = %10
  br label %.backedge

288:                                              ; preds = %10
  %289 = load i32, i32* @x.3, align 4
  %290 = load i32, i32* @y.4, align 4
  %291 = add i32 %289, -1
  %292 = mul i32 %291, %289
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %295, %294
  %297 = select i1 %296, i32 -213145696, i32 -512148452
  br label %.backedge

298:                                              ; preds = %10
  %299 = load i32, i32* @n, align 4
  %300 = icmp slt i32 %.054, %299
  store i1 %300, i1* %2, align 1
  %301 = load i32, i32* @x.3, align 4
  %302 = load i32, i32* @y.4, align 4
  %303 = add i32 %301, -1
  %304 = mul i32 %303, %301
  %305 = and i32 %304, 1
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %307, %306
  %309 = select i1 %308, i32 -1231123820, i32 -512148452
  br label %.backedge

310:                                              ; preds = %10
  %.0..0..0.50 = load volatile i1, i1* %2, align 1
  %311 = select i1 %.0..0..0.50, i32 -915754190, i32 -1218272863
  br label %.backedge

312:                                              ; preds = %10
  %313 = load i32, i32* @x.3, align 4
  %314 = load i32, i32* @y.4, align 4
  %315 = add i32 %313, -1
  %316 = mul i32 %315, %313
  %317 = and i32 %316, 1
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %319, %318
  %321 = select i1 %320, i32 -113676399, i32 623603492
  br label %.backedge

322:                                              ; preds = %10
  %323 = load i32, i32* @x.3, align 4
  %324 = load i32, i32* @y.4, align 4
  %325 = add i32 %323, -1
  %326 = mul i32 %325, %323
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %329, %328
  %331 = select i1 %330, i32 -1346010747, i32 623603492
  br label %.backedge

332:                                              ; preds = %10
  br label %.backedge

333:                                              ; preds = %10
  %334 = load i32, i32* @x.3, align 4
  %335 = load i32, i32* @y.4, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 -2027577459, i32 -544399272
  br label %.backedge

343:                                              ; preds = %10
  %344 = load i32, i32* @n, align 4
  %345 = icmp slt i32 %.052, %344
  store i1 %345, i1* %1, align 1
  %346 = load i32, i32* @x.3, align 4
  %347 = load i32, i32* @y.4, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 1991804884, i32 -544399272
  br label %.backedge

355:                                              ; preds = %10
  %.0..0..0.51 = load volatile i1, i1* %1, align 1
  %356 = select i1 %.0..0..0.51, i32 -1909101130, i32 -715996663
  br label %.backedge

357:                                              ; preds = %10
  %358 = sext i32 %.054 to i64
  %359 = sext i32 %.052 to i64
  %360 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @d, i64 0, i64 %358, i64 %359
  %361 = load i64, i64* %360, align 8
  %362 = icmp sgt i64 %361, 2278715444399415199
  %363 = select i1 %362, i32 -643908907, i32 317810420
  br label %.backedge

364:                                              ; preds = %10
  %365 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

366:                                              ; preds = %10
  %367 = sext i32 %.054 to i64
  %368 = sext i32 %.052 to i64
  %369 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @d, i64 0, i64 %367, i64 %368
  %370 = load i64, i64* %369, align 8
  %371 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %370)
  br label %.backedge

372:                                              ; preds = %10
  %373 = load i32, i32* @x.3, align 4
  %374 = load i32, i32* @y.4, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 1959009606, i32 -1544840819
  br label %.backedge

382:                                              ; preds = %10
  %383 = add i32 %.052, 1
  %384 = load i32, i32* @n, align 4
  %385 = icmp eq i32 %383, %384
  %386 = zext i1 %385 to i64
  %387 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.2, i64 0, i64 %386
  %388 = load i8, i8* %387, align 1
  %389 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %388)
  %390 = load i32, i32* @x.3, align 4
  %391 = load i32, i32* @y.4, align 4
  %392 = add i32 %390, -1
  %393 = mul i32 %392, %390
  %394 = and i32 %393, 1
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %396, %395
  %398 = select i1 %397, i32 1539725416, i32 -1544840819
  br label %.backedge

399:                                              ; preds = %10
  br label %.backedge

400:                                              ; preds = %10
  %401 = add i32 %.052, 1
  br label %.backedge

402:                                              ; preds = %10
  br label %.backedge

403:                                              ; preds = %10
  %404 = add i32 %.054, 1
  br label %.backedge

405:                                              ; preds = %10
  ret i32 0

406:                                              ; preds = %10
  %.neg = add i32 %.066, 1
  br label %.backedge

407:                                              ; preds = %10
  br label %.backedge

408:                                              ; preds = %10
  %409 = add i32 %.064, 1
  br label %.backedge

410:                                              ; preds = %10
  br label %.backedge

411:                                              ; preds = %10
  br label %.backedge

412:                                              ; preds = %10
  br label %.backedge

413:                                              ; preds = %10
  %414 = add i32 %.062, 1
  br label %.backedge

415:                                              ; preds = %10
  %416 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %417 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %416, i8 signext 10)
  br label %.backedge

418:                                              ; preds = %10
  br label %.backedge

419:                                              ; preds = %10
  br label %.backedge

420:                                              ; preds = %10
  br label %.backedge

421:                                              ; preds = %10
  br label %.backedge

422:                                              ; preds = %10
  %423 = add i32 %.052, 1
  %424 = load i32, i32* @n, align 4
  %425 = icmp eq i32 %423, %424
  %426 = zext i1 %425 to i64
  %427 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.2, i64 0, i64 %426
  %428 = load i8, i8* %427, align 1
  %429 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %428)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  %8 = load i32, i32* @x.5, align 4
  %9 = load i32, i32* @y.6, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -424453224, i32 1857066977
  %17 = select i1 %15, i32 1706896928, i32 1857066977
  br label %.outer

.outer:                                           ; preds = %18, %2
  %.09.ph = phi i64* [ undef, %2 ], [ %.09.ph14, %18 ]
  %.0.ph = phi i32 [ -1551595736, %2 ], [ %16, %18 ]
  br label %.outer13

.outer13:                                         ; preds = %.outer13.backedge, %.outer
  %.09.ph14 = phi i64* [ %.09.ph, %.outer ], [ %.09.ph14.be, %.outer13.backedge ]
  %.0.ph15 = phi i32 [ %.0.ph, %.outer ], [ 878081042, %.outer13.backedge ]
  br label %.outer16

.outer16:                                         ; preds = %.outer16.backedge, %.outer13
  %.0.ph17 = phi i32 [ %.0.ph15, %.outer13 ], [ %.0.ph17.be, %.outer16.backedge ]
  br label %18

18:                                               ; preds = %.outer16, %18
  switch i32 %.0.ph17, label %18 [
    i32 -1551595736, label %19
    i32 518069178, label %.outer13.backedge
    i32 351275348, label %22
    i32 878081042, label %.outer16.backedge
    i32 1706896928, label %.outer
    i32 -424453224, label %23
    i32 1857066977, label %24
  ]

19:                                               ; preds = %18
  %.0..0..0.6 = load volatile i64, i64* %5, align 8
  %.0..0..0.7 = load volatile i64, i64* %4, align 8
  %20 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %21 = select i1 %20, i32 518069178, i32 351275348
  br label %.outer16.backedge

22:                                               ; preds = %18
  br label %.outer13.backedge

.outer13.backedge:                                ; preds = %18, %22
  %.09.ph14.be = phi i64* [ %0, %22 ], [ %1, %18 ]
  br label %.outer13

23:                                               ; preds = %18
  store i64* %.09.ph, i64** %3, align 8
  %.0..0..0.8 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.8

24:                                               ; preds = %18
  br label %.outer16.backedge

.outer16.backedge:                                ; preds = %18, %24, %19
  %.0.ph17.be = phi i32 [ %21, %19 ], [ 1706896928, %24 ], [ %17, %18 ]
  br label %.outer16
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s415626147.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.7, align 4
  %4 = load i32, i32* @y.8, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 671294857, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 671294857, label %11
    i32 -526101148, label %14
    i32 1636762798, label %24
    i32 -1568020609, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -526101148, i32 -1568020609
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1636762798, i32 -1568020609
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -526101148, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
