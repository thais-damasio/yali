; ModuleID = 'build_ollvm/programs/p02363/s952534304.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s952534304.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@G = global [101 x [101 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s952534304.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %4)
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %10, i32* nonnull dereferenceable(4) %5)
  br label %12

12:                                               ; preds = %.backedge, %0
  %.064 = phi i32 [ 0, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.0 = phi i32 [ -811369055, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -811369055, label %13
    i32 176997757, label %17
    i32 -1989357148, label %18
    i32 1546594772, label %22
    i32 -1015758224, label %25
    i32 -701015574, label %26
    i32 316610316, label %30
    i32 -994006440, label %31
    i32 -1101025943, label %41
    i32 929604275, label %51
    i32 289083045, label %52
    i32 2109218302, label %62
    i32 -1361063822, label %73
    i32 1142972634, label %74
    i32 2075798265, label %75
    i32 -266115462, label %79
    i32 2109590376, label %90
    i32 -661761679, label %100
    i32 1527936666, label %111
    i32 2028119832, label %112
    i32 -1163629545, label %113
    i32 1986414706, label %123
    i32 -1282780670, label %135
    i32 1885712859, label %137
    i32 -328204607, label %138
    i32 642268055, label %142
    i32 1156029363, label %143
    i32 -1501153532, label %153
    i32 1270969025, label %165
    i32 -1868158139, label %167
    i32 1192157588, label %179
    i32 1706994882, label %181
    i32 387643960, label %191
    i32 480300357, label %201
    i32 -1218925307, label %202
    i32 -51768965, label %212
    i32 295757594, label %223
    i32 -1565998954, label %224
    i32 -2073100332, label %225
    i32 774376661, label %227
    i32 -1402673239, label %228
    i32 2023994595, label %232
    i32 -1977127777, label %238
    i32 -381083712, label %248
    i32 -1574855905, label %260
    i32 1155280085, label %261
    i32 217541950, label %262
    i32 -653083882, label %264
    i32 -151894238, label %274
    i32 -865635888, label %284
    i32 1334771329, label %285
    i32 -1097282107, label %289
    i32 -1698220823, label %290
    i32 -229116603, label %294
    i32 -20559972, label %301
    i32 -1942868926, label %307
    i32 -174813363, label %309
    i32 -539737448, label %314
    i32 1530217667, label %316
    i32 -1648346406, label %318
    i32 779067879, label %328
    i32 200631688, label %338
    i32 26415416, label %339
    i32 -1566736490, label %341
    i32 -988112502, label %351
    i32 52103885, label %361
    i32 -1701673300, label %362
    i32 -1425795243, label %372
    i32 -65147238, label %382
    i32 -130086375, label %383
    i32 -1476080715, label %384
    i32 2078071023, label %394
    i32 -44943389, label %404
    i32 -1525998976, label %405
    i32 1453304194, label %406
    i32 1610426944, label %408
    i32 511441, label %409
    i32 -278494706, label %410
    i32 -1455601045, label %411
    i32 -456899790, label %412
    i32 -1669784531, label %414
    i32 1503915928, label %417
    i32 699654541, label %418
    i32 -640212784, label %419
    i32 83447286, label %420
    i32 1582617501, label %422
  ]

.backedge:                                        ; preds = %12, %422, %420, %419, %418, %417, %414, %412, %411, %410, %409, %408, %406, %405, %394, %384, %383, %382, %372, %362, %361, %351, %341, %339, %338, %328, %318, %316, %314, %309, %307, %301, %294, %290, %289, %285, %284, %274, %264, %262, %261, %260, %248, %238, %232, %228, %227, %225, %224, %223, %212, %202, %201, %191, %181, %179, %167, %165, %153, %143, %142, %138, %137, %135, %123, %113, %112, %111, %100, %90, %79, %75, %74, %73, %62, %52, %51, %41, %31, %30, %26, %25, %22, %18, %17, %13
  %.064.be = phi i32 [ %.064, %12 ], [ %.064, %422 ], [ %.064, %420 ], [ %.064, %419 ], [ %.064, %418 ], [ %.064, %417 ], [ %.064, %414 ], [ %.064, %412 ], [ %.064, %411 ], [ %.064, %410 ], [ %.064, %409 ], [ %.064, %408 ], [ %407, %406 ], [ %.064, %405 ], [ %.064, %394 ], [ %.064, %384 ], [ %.064, %383 ], [ %.064, %382 ], [ %.064, %372 ], [ %.064, %362 ], [ %.064, %361 ], [ %.064, %351 ], [ %.064, %341 ], [ %.064, %339 ], [ %.064, %338 ], [ %.064, %328 ], [ %.064, %318 ], [ %.064, %316 ], [ %.064, %314 ], [ %.064, %309 ], [ %.064, %307 ], [ %.064, %301 ], [ %.064, %294 ], [ %.064, %290 ], [ %.064, %289 ], [ %.064, %285 ], [ %.064, %284 ], [ %.064, %274 ], [ %.064, %264 ], [ %.064, %262 ], [ %.064, %261 ], [ %.064, %260 ], [ %.064, %248 ], [ %.064, %238 ], [ %.064, %232 ], [ %.064, %228 ], [ %.064, %227 ], [ %.064, %225 ], [ %.064, %224 ], [ %.064, %223 ], [ %.064, %212 ], [ %.064, %202 ], [ %.064, %201 ], [ %.064, %191 ], [ %.064, %181 ], [ %.064, %179 ], [ %.064, %167 ], [ %.064, %165 ], [ %.064, %153 ], [ %.064, %143 ], [ %.064, %142 ], [ %.064, %138 ], [ %.064, %137 ], [ %.064, %135 ], [ %.064, %123 ], [ %.064, %113 ], [ %.064, %112 ], [ %.064, %111 ], [ %.064, %100 ], [ %.064, %90 ], [ %.064, %79 ], [ %.064, %75 ], [ %.064, %74 ], [ %.064, %73 ], [ %63, %62 ], [ %.064, %52 ], [ %.064, %51 ], [ %.064, %41 ], [ %.064, %31 ], [ %.064, %30 ], [ %.064, %26 ], [ %.064, %25 ], [ %.064, %22 ], [ %.064, %18 ], [ %.064, %17 ], [ %.064, %13 ]
  %.062.be = phi i32 [ %.062, %12 ], [ %.062, %422 ], [ %.062, %420 ], [ %.062, %419 ], [ %.062, %418 ], [ %.062, %417 ], [ %.062, %414 ], [ %.062, %412 ], [ %.062, %411 ], [ %.062, %410 ], [ %.062, %409 ], [ %.062, %408 ], [ %.062, %406 ], [ %.062, %405 ], [ %.062, %394 ], [ %.062, %384 ], [ %.062, %383 ], [ %.062, %382 ], [ %.062, %372 ], [ %.062, %362 ], [ %.062, %361 ], [ %.062, %351 ], [ %.062, %341 ], [ %.062, %339 ], [ %.062, %338 ], [ %.062, %328 ], [ %.062, %318 ], [ %.062, %316 ], [ %.062, %314 ], [ %.062, %309 ], [ %.062, %307 ], [ %.062, %301 ], [ %.062, %294 ], [ %.062, %290 ], [ %.062, %289 ], [ %.062, %285 ], [ %.062, %284 ], [ %.062, %274 ], [ %.062, %264 ], [ %.062, %262 ], [ %.062, %261 ], [ %.062, %260 ], [ %.062, %248 ], [ %.062, %238 ], [ %.062, %232 ], [ %.062, %228 ], [ %.062, %227 ], [ %.062, %225 ], [ %.062, %224 ], [ %.062, %223 ], [ %.062, %212 ], [ %.062, %202 ], [ %.062, %201 ], [ %.062, %191 ], [ %.062, %181 ], [ %.062, %179 ], [ %.062, %167 ], [ %.062, %165 ], [ %.062, %153 ], [ %.062, %143 ], [ %.062, %142 ], [ %.062, %138 ], [ %.062, %137 ], [ %.062, %135 ], [ %.062, %123 ], [ %.062, %113 ], [ %.062, %112 ], [ %.062, %111 ], [ %.062, %100 ], [ %.062, %90 ], [ %.062, %79 ], [ %.062, %75 ], [ %.062, %74 ], [ %.062, %73 ], [ %.062, %62 ], [ %.062, %52 ], [ %.062, %51 ], [ %.062, %41 ], [ %.062, %31 ], [ %.neg69, %30 ], [ %.062, %26 ], [ %.062, %25 ], [ %.062, %22 ], [ %.062, %18 ], [ 0, %17 ], [ %.062, %13 ]
  %.060.be = phi i32 [ %.060, %12 ], [ %.060, %422 ], [ %.060, %420 ], [ %.060, %419 ], [ %.060, %418 ], [ %.060, %417 ], [ %.060, %414 ], [ %.060, %412 ], [ %.060, %411 ], [ %.060, %410 ], [ %.060, %409 ], [ %.neg, %408 ], [ %.060, %406 ], [ %.060, %405 ], [ %.060, %394 ], [ %.060, %384 ], [ %.060, %383 ], [ %.060, %382 ], [ %.060, %372 ], [ %.060, %362 ], [ %.060, %361 ], [ %.060, %351 ], [ %.060, %341 ], [ %.060, %339 ], [ %.060, %338 ], [ %.060, %328 ], [ %.060, %318 ], [ %.060, %316 ], [ %.060, %314 ], [ %.060, %309 ], [ %.060, %307 ], [ %.060, %301 ], [ %.060, %294 ], [ %.060, %290 ], [ %.060, %289 ], [ %.060, %285 ], [ %.060, %284 ], [ %.060, %274 ], [ %.060, %264 ], [ %.060, %262 ], [ %.060, %261 ], [ %.060, %260 ], [ %.060, %248 ], [ %.060, %238 ], [ %.060, %232 ], [ %.060, %228 ], [ %.060, %227 ], [ %.060, %225 ], [ %.060, %224 ], [ %.060, %223 ], [ %.060, %212 ], [ %.060, %202 ], [ %.060, %201 ], [ %.060, %191 ], [ %.060, %181 ], [ %.060, %179 ], [ %.060, %167 ], [ %.060, %165 ], [ %.060, %153 ], [ %.060, %143 ], [ %.060, %142 ], [ %.060, %138 ], [ %.060, %137 ], [ %.060, %135 ], [ %.060, %123 ], [ %.060, %113 ], [ %.060, %112 ], [ %.060, %111 ], [ %101, %100 ], [ %.060, %90 ], [ %.060, %79 ], [ %.060, %75 ], [ 0, %74 ], [ %.060, %73 ], [ %.060, %62 ], [ %.060, %52 ], [ %.060, %51 ], [ %.060, %41 ], [ %.060, %31 ], [ %.060, %30 ], [ %.060, %26 ], [ %.060, %25 ], [ %.060, %22 ], [ %.060, %18 ], [ %.060, %17 ], [ %.060, %13 ]
  %.058.be = phi i32 [ %.058, %12 ], [ %.058, %422 ], [ %.058, %420 ], [ %.058, %419 ], [ %.058, %418 ], [ %.058, %417 ], [ %.058, %414 ], [ %.058, %412 ], [ %.058, %411 ], [ %.058, %410 ], [ %.058, %409 ], [ %.058, %408 ], [ %.058, %406 ], [ %.058, %405 ], [ %.058, %394 ], [ %.058, %384 ], [ %.058, %383 ], [ %.058, %382 ], [ %.058, %372 ], [ %.058, %362 ], [ %.058, %361 ], [ %.058, %351 ], [ %.058, %341 ], [ %.058, %339 ], [ %.058, %338 ], [ %.058, %328 ], [ %.058, %318 ], [ %.058, %316 ], [ %.058, %314 ], [ %.058, %309 ], [ %.058, %307 ], [ %.058, %301 ], [ %.058, %294 ], [ %.058, %290 ], [ %.058, %289 ], [ %.058, %285 ], [ %.058, %284 ], [ %.058, %274 ], [ %.058, %264 ], [ %.058, %262 ], [ %.058, %261 ], [ %.058, %260 ], [ %.058, %248 ], [ %.058, %238 ], [ %.058, %232 ], [ %.058, %228 ], [ %.058, %227 ], [ %226, %225 ], [ %.058, %224 ], [ %.058, %223 ], [ %.058, %212 ], [ %.058, %202 ], [ %.058, %201 ], [ %.058, %191 ], [ %.058, %181 ], [ %.058, %179 ], [ %.058, %167 ], [ %.058, %165 ], [ %.058, %153 ], [ %.058, %143 ], [ %.058, %142 ], [ %.058, %138 ], [ %.058, %137 ], [ %.058, %135 ], [ %.058, %123 ], [ %.058, %113 ], [ 0, %112 ], [ %.058, %111 ], [ %.058, %100 ], [ %.058, %90 ], [ %.058, %79 ], [ %.058, %75 ], [ %.058, %74 ], [ %.058, %73 ], [ %.058, %62 ], [ %.058, %52 ], [ %.058, %51 ], [ %.058, %41 ], [ %.058, %31 ], [ %.058, %30 ], [ %.058, %26 ], [ %.058, %25 ], [ %.058, %22 ], [ %.058, %18 ], [ %.058, %17 ], [ %.058, %13 ]
  %.056.be = phi i32 [ %.056, %12 ], [ %.056, %422 ], [ %.056, %420 ], [ %.056, %419 ], [ %.056, %418 ], [ %.056, %417 ], [ %.056, %414 ], [ %413, %412 ], [ %.056, %411 ], [ %.056, %410 ], [ %.056, %409 ], [ %.056, %408 ], [ %.056, %406 ], [ %.056, %405 ], [ %.056, %394 ], [ %.056, %384 ], [ %.056, %383 ], [ %.056, %382 ], [ %.056, %372 ], [ %.056, %362 ], [ %.056, %361 ], [ %.056, %351 ], [ %.056, %341 ], [ %.056, %339 ], [ %.056, %338 ], [ %.056, %328 ], [ %.056, %318 ], [ %.056, %316 ], [ %.056, %314 ], [ %.056, %309 ], [ %.056, %307 ], [ %.056, %301 ], [ %.056, %294 ], [ %.056, %290 ], [ %.056, %289 ], [ %.056, %285 ], [ %.056, %284 ], [ %.056, %274 ], [ %.056, %264 ], [ %.056, %262 ], [ %.056, %261 ], [ %.056, %260 ], [ %.056, %248 ], [ %.056, %238 ], [ %.056, %232 ], [ %.056, %228 ], [ %.056, %227 ], [ %.056, %225 ], [ %.056, %224 ], [ %.056, %223 ], [ %213, %212 ], [ %.056, %202 ], [ %.056, %201 ], [ %.056, %191 ], [ %.056, %181 ], [ %.056, %179 ], [ %.056, %167 ], [ %.056, %165 ], [ %.056, %153 ], [ %.056, %143 ], [ %.056, %142 ], [ %.056, %138 ], [ 0, %137 ], [ %.056, %135 ], [ %.056, %123 ], [ %.056, %113 ], [ %.056, %112 ], [ %.056, %111 ], [ %.056, %100 ], [ %.056, %90 ], [ %.056, %79 ], [ %.056, %75 ], [ %.056, %74 ], [ %.056, %73 ], [ %.056, %62 ], [ %.056, %52 ], [ %.056, %51 ], [ %.056, %41 ], [ %.056, %31 ], [ %.056, %30 ], [ %.056, %26 ], [ %.056, %25 ], [ %.056, %22 ], [ %.056, %18 ], [ %.056, %17 ], [ %.056, %13 ]
  %.054.be = phi i32 [ %.054, %12 ], [ %.054, %422 ], [ %.054, %420 ], [ %.054, %419 ], [ %.054, %418 ], [ %.054, %417 ], [ %.054, %414 ], [ %.054, %412 ], [ %.054, %411 ], [ %.054, %410 ], [ %.054, %409 ], [ %.054, %408 ], [ %.054, %406 ], [ %.054, %405 ], [ %.054, %394 ], [ %.054, %384 ], [ %.054, %383 ], [ %.054, %382 ], [ %.054, %372 ], [ %.054, %362 ], [ %.054, %361 ], [ %.054, %351 ], [ %.054, %341 ], [ %.054, %339 ], [ %.054, %338 ], [ %.054, %328 ], [ %.054, %318 ], [ %.054, %316 ], [ %.054, %314 ], [ %.054, %309 ], [ %.054, %307 ], [ %.054, %301 ], [ %.054, %294 ], [ %.054, %290 ], [ %.054, %289 ], [ %.054, %285 ], [ %.054, %284 ], [ %.054, %274 ], [ %.054, %264 ], [ %.054, %262 ], [ %.054, %261 ], [ %.054, %260 ], [ %.054, %248 ], [ %.054, %238 ], [ %.054, %232 ], [ %.054, %228 ], [ %.054, %227 ], [ %.054, %225 ], [ %.054, %224 ], [ %.054, %223 ], [ %.054, %212 ], [ %.054, %202 ], [ %.054, %201 ], [ %.054, %191 ], [ %.054, %181 ], [ %180, %179 ], [ %.054, %167 ], [ %.054, %165 ], [ %.054, %153 ], [ %.054, %143 ], [ 0, %142 ], [ %.054, %138 ], [ %.054, %137 ], [ %.054, %135 ], [ %.054, %123 ], [ %.054, %113 ], [ %.054, %112 ], [ %.054, %111 ], [ %.054, %100 ], [ %.054, %90 ], [ %.054, %79 ], [ %.054, %75 ], [ %.054, %74 ], [ %.054, %73 ], [ %.054, %62 ], [ %.054, %52 ], [ %.054, %51 ], [ %.054, %41 ], [ %.054, %31 ], [ %.054, %30 ], [ %.054, %26 ], [ %.054, %25 ], [ %.054, %22 ], [ %.054, %18 ], [ %.054, %17 ], [ %.054, %13 ]
  %.052.be = phi i32 [ %.052, %12 ], [ %.052, %422 ], [ %.052, %420 ], [ %.052, %419 ], [ %.052, %418 ], [ %.052, %417 ], [ %.052, %414 ], [ %.052, %412 ], [ %.052, %411 ], [ %.052, %410 ], [ %.052, %409 ], [ %.052, %408 ], [ %.052, %406 ], [ %.052, %405 ], [ %.052, %394 ], [ %.052, %384 ], [ %.052, %383 ], [ %.052, %382 ], [ %.052, %372 ], [ %.052, %362 ], [ %.052, %361 ], [ %.052, %351 ], [ %.052, %341 ], [ %.052, %339 ], [ %.052, %338 ], [ %.052, %328 ], [ %.052, %318 ], [ %.052, %316 ], [ %.052, %314 ], [ %.052, %309 ], [ %.052, %307 ], [ %.052, %301 ], [ %.052, %294 ], [ %.052, %290 ], [ %.052, %289 ], [ %.052, %285 ], [ %.052, %284 ], [ %.052, %274 ], [ %.052, %264 ], [ %263, %262 ], [ %.052, %261 ], [ %.052, %260 ], [ %.052, %248 ], [ %.052, %238 ], [ %.052, %232 ], [ %.052, %228 ], [ 0, %227 ], [ %.052, %225 ], [ %.052, %224 ], [ %.052, %223 ], [ %.052, %212 ], [ %.052, %202 ], [ %.052, %201 ], [ %.052, %191 ], [ %.052, %181 ], [ %.052, %179 ], [ %.052, %167 ], [ %.052, %165 ], [ %.052, %153 ], [ %.052, %143 ], [ %.052, %142 ], [ %.052, %138 ], [ %.052, %137 ], [ %.052, %135 ], [ %.052, %123 ], [ %.052, %113 ], [ %.052, %112 ], [ %.052, %111 ], [ %.052, %100 ], [ %.052, %90 ], [ %.052, %79 ], [ %.052, %75 ], [ %.052, %74 ], [ %.052, %73 ], [ %.052, %62 ], [ %.052, %52 ], [ %.052, %51 ], [ %.052, %41 ], [ %.052, %31 ], [ %.052, %30 ], [ %.052, %26 ], [ %.052, %25 ], [ %.052, %22 ], [ %.052, %18 ], [ %.052, %17 ], [ %.052, %13 ]
  %.050.be = phi i32 [ %.050, %12 ], [ %.050, %422 ], [ %421, %420 ], [ %.050, %419 ], [ %.050, %418 ], [ 0, %417 ], [ %.050, %414 ], [ %.050, %412 ], [ %.050, %411 ], [ %.050, %410 ], [ %.050, %409 ], [ %.050, %408 ], [ %.050, %406 ], [ %.050, %405 ], [ %.050, %394 ], [ %.050, %384 ], [ %.050, %383 ], [ %.050, %382 ], [ %.neg68, %372 ], [ %.050, %362 ], [ %.050, %361 ], [ %.050, %351 ], [ %.050, %341 ], [ %.050, %339 ], [ %.050, %338 ], [ %.050, %328 ], [ %.050, %318 ], [ %.050, %316 ], [ %.050, %314 ], [ %.050, %309 ], [ %.050, %307 ], [ %.050, %301 ], [ %.050, %294 ], [ %.050, %290 ], [ %.050, %289 ], [ %.050, %285 ], [ %.050, %284 ], [ 0, %274 ], [ %.050, %264 ], [ %.050, %262 ], [ %.050, %261 ], [ %.050, %260 ], [ %.050, %248 ], [ %.050, %238 ], [ %.050, %232 ], [ %.050, %228 ], [ %.050, %227 ], [ %.050, %225 ], [ %.050, %224 ], [ %.050, %223 ], [ %.050, %212 ], [ %.050, %202 ], [ %.050, %201 ], [ %.050, %191 ], [ %.050, %181 ], [ %.050, %179 ], [ %.050, %167 ], [ %.050, %165 ], [ %.050, %153 ], [ %.050, %143 ], [ %.050, %142 ], [ %.050, %138 ], [ %.050, %137 ], [ %.050, %135 ], [ %.050, %123 ], [ %.050, %113 ], [ %.050, %112 ], [ %.050, %111 ], [ %.050, %100 ], [ %.050, %90 ], [ %.050, %79 ], [ %.050, %75 ], [ %.050, %74 ], [ %.050, %73 ], [ %.050, %62 ], [ %.050, %52 ], [ %.050, %51 ], [ %.050, %41 ], [ %.050, %31 ], [ %.050, %30 ], [ %.050, %26 ], [ %.050, %25 ], [ %.050, %22 ], [ %.050, %18 ], [ %.050, %17 ], [ %.050, %13 ]
  %.048.be = phi i32 [ %.048, %12 ], [ %.048, %422 ], [ %.048, %420 ], [ %.048, %419 ], [ %.048, %418 ], [ %.048, %417 ], [ %.048, %414 ], [ %.048, %412 ], [ %.048, %411 ], [ %.048, %410 ], [ %.048, %409 ], [ %.048, %408 ], [ %.048, %406 ], [ %.048, %405 ], [ %.048, %394 ], [ %.048, %384 ], [ %.048, %383 ], [ %.048, %382 ], [ %.048, %372 ], [ %.048, %362 ], [ %.048, %361 ], [ %.048, %351 ], [ %.048, %341 ], [ %340, %339 ], [ %.048, %338 ], [ %.048, %328 ], [ %.048, %318 ], [ %.048, %316 ], [ %.048, %314 ], [ %.048, %309 ], [ %.048, %307 ], [ %.048, %301 ], [ %.048, %294 ], [ %.048, %290 ], [ 0, %289 ], [ %.048, %285 ], [ %.048, %284 ], [ %.048, %274 ], [ %.048, %264 ], [ %.048, %262 ], [ %.048, %261 ], [ %.048, %260 ], [ %.048, %248 ], [ %.048, %238 ], [ %.048, %232 ], [ %.048, %228 ], [ %.048, %227 ], [ %.048, %225 ], [ %.048, %224 ], [ %.048, %223 ], [ %.048, %212 ], [ %.048, %202 ], [ %.048, %201 ], [ %.048, %191 ], [ %.048, %181 ], [ %.048, %179 ], [ %.048, %167 ], [ %.048, %165 ], [ %.048, %153 ], [ %.048, %143 ], [ %.048, %142 ], [ %.048, %138 ], [ %.048, %137 ], [ %.048, %135 ], [ %.048, %123 ], [ %.048, %113 ], [ %.048, %112 ], [ %.048, %111 ], [ %.048, %100 ], [ %.048, %90 ], [ %.048, %79 ], [ %.048, %75 ], [ %.048, %74 ], [ %.048, %73 ], [ %.048, %62 ], [ %.048, %52 ], [ %.048, %51 ], [ %.048, %41 ], [ %.048, %31 ], [ %.048, %30 ], [ %.048, %26 ], [ %.048, %25 ], [ %.048, %22 ], [ %.048, %18 ], [ %.048, %17 ], [ %.048, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ 2078071023, %422 ], [ -1425795243, %420 ], [ -988112502, %419 ], [ 779067879, %418 ], [ -151894238, %417 ], [ -381083712, %414 ], [ -51768965, %412 ], [ 387643960, %411 ], [ -1501153532, %410 ], [ 1986414706, %409 ], [ -661761679, %408 ], [ 2109218302, %406 ], [ -1101025943, %405 ], [ %403, %394 ], [ %393, %384 ], [ -1476080715, %383 ], [ 1334771329, %382 ], [ %381, %372 ], [ %371, %362 ], [ -1701673300, %361 ], [ %360, %351 ], [ %350, %341 ], [ -1698220823, %339 ], [ 26415416, %338 ], [ %337, %328 ], [ %327, %318 ], [ -1648346406, %316 ], [ -1648346406, %314 ], [ %313, %309 ], [ -174813363, %307 ], [ -174813363, %301 ], [ %300, %294 ], [ %293, %290 ], [ -1698220823, %289 ], [ %288, %285 ], [ 1334771329, %284 ], [ %283, %274 ], [ %273, %264 ], [ -1402673239, %262 ], [ 217541950, %261 ], [ -1476080715, %260 ], [ %259, %248 ], [ %247, %238 ], [ %237, %232 ], [ %231, %228 ], [ -1402673239, %227 ], [ -1163629545, %225 ], [ -2073100332, %224 ], [ -328204607, %223 ], [ %222, %212 ], [ %211, %202 ], [ -1218925307, %201 ], [ %200, %191 ], [ %190, %181 ], [ 1156029363, %179 ], [ 1192157588, %167 ], [ %166, %165 ], [ %164, %153 ], [ %152, %143 ], [ 1156029363, %142 ], [ %141, %138 ], [ -328204607, %137 ], [ %136, %135 ], [ %134, %123 ], [ %122, %113 ], [ -1163629545, %112 ], [ 2075798265, %111 ], [ %110, %100 ], [ %99, %90 ], [ 2109590376, %79 ], [ %78, %75 ], [ 2075798265, %74 ], [ -811369055, %73 ], [ %72, %62 ], [ %61, %52 ], [ 289083045, %51 ], [ %50, %41 ], [ %40, %31 ], [ -1989357148, %30 ], [ 316610316, %26 ], [ 316610316, %25 ], [ %24, %22 ], [ %21, %18 ], [ -1989357148, %17 ], [ %16, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %.064, %14
  %16 = select i1 %15, i32 176997757, i32 1142972634
  br label %.backedge

17:                                               ; preds = %12
  br label %.backedge

18:                                               ; preds = %12
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %.062, %19
  %21 = select i1 %20, i32 1546594772, i32 -994006440
  br label %.backedge

22:                                               ; preds = %12
  %23 = icmp eq i32 %.064, %.062
  %24 = select i1 %23, i32 -1015758224, i32 -701015574
  br label %.backedge

25:                                               ; preds = %12
  br label %.backedge

26:                                               ; preds = %12
  %27 = sext i32 %.064 to i64
  %28 = sext i32 %.062 to i64
  %29 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @G, i64 0, i64 %27, i64 %28
  store i64 288230376151711744, i64* %29, align 8
  br label %.backedge

30:                                               ; preds = %12
  %.neg69 = add i32 %.062, 1
  br label %.backedge

31:                                               ; preds = %12
  %32 = load i32, i32* @x.3, align 4
  %33 = load i32, i32* @y.4, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -1101025943, i32 -1525998976
  br label %.backedge

41:                                               ; preds = %12
  %42 = load i32, i32* @x.3, align 4
  %43 = load i32, i32* @y.4, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 929604275, i32 -1525998976
  br label %.backedge

51:                                               ; preds = %12
  br label %.backedge

52:                                               ; preds = %12
  %53 = load i32, i32* @x.3, align 4
  %54 = load i32, i32* @y.4, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 2109218302, i32 1453304194
  br label %.backedge

62:                                               ; preds = %12
  %63 = add i32 %.064, 1
  %64 = load i32, i32* @x.3, align 4
  %65 = load i32, i32* @y.4, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 -1361063822, i32 1453304194
  br label %.backedge

73:                                               ; preds = %12
  br label %.backedge

74:                                               ; preds = %12
  br label %.backedge

75:                                               ; preds = %12
  %76 = load i32, i32* %5, align 4
  %77 = icmp slt i32 %.060, %76
  %78 = select i1 %77, i32 -266115462, i32 2028119832
  br label %.backedge

79:                                               ; preds = %12
  %80 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %81 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %80, i32* nonnull dereferenceable(4) %7)
  %82 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %81, i32* nonnull dereferenceable(4) %8)
  %83 = load i32, i32* %8, align 4
  %84 = sext i32 %83 to i64
  %85 = load i32, i32* %6, align 4
  %86 = sext i32 %85 to i64
  %87 = load i32, i32* %7, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @G, i64 0, i64 %86, i64 %88
  store i64 %84, i64* %89, align 8
  br label %.backedge

90:                                               ; preds = %12
  %91 = load i32, i32* @x.3, align 4
  %92 = load i32, i32* @y.4, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -661761679, i32 1610426944
  br label %.backedge

100:                                              ; preds = %12
  %101 = add i32 %.060, 1
  %102 = load i32, i32* @x.3, align 4
  %103 = load i32, i32* @y.4, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 1527936666, i32 1610426944
  br label %.backedge

111:                                              ; preds = %12
  br label %.backedge

112:                                              ; preds = %12
  br label %.backedge

113:                                              ; preds = %12
  %114 = load i32, i32* @x.3, align 4
  %115 = load i32, i32* @y.4, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 1986414706, i32 511441
  br label %.backedge

123:                                              ; preds = %12
  %124 = load i32, i32* %4, align 4
  %125 = icmp slt i32 %.058, %124
  store i1 %125, i1* %3, align 1
  %126 = load i32, i32* @x.3, align 4
  %127 = load i32, i32* @y.4, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 -1282780670, i32 511441
  br label %.backedge

135:                                              ; preds = %12
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %136 = select i1 %.0..0..0., i32 1885712859, i32 774376661
  br label %.backedge

137:                                              ; preds = %12
  br label %.backedge

138:                                              ; preds = %12
  %139 = load i32, i32* %4, align 4
  %140 = icmp slt i32 %.056, %139
  %141 = select i1 %140, i32 642268055, i32 -1565998954
  br label %.backedge

142:                                              ; preds = %12
  br label %.backedge

143:                                              ; preds = %12
  %144 = load i32, i32* @x.3, align 4
  %145 = load i32, i32* @y.4, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 -1501153532, i32 -278494706
  br label %.backedge

153:                                              ; preds = %12
  %154 = load i32, i32* %4, align 4
  %155 = icmp slt i32 %.054, %154
  store i1 %155, i1* %2, align 1
  %156 = load i32, i32* @x.3, align 4
  %157 = load i32, i32* @y.4, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 1270969025, i32 -278494706
  br label %.backedge

165:                                              ; preds = %12
  %.0..0..0.46 = load volatile i1, i1* %2, align 1
  %166 = select i1 %.0..0..0.46, i32 -1868158139, i32 1706994882
  br label %.backedge

167:                                              ; preds = %12
  %168 = sext i32 %.056 to i64
  %169 = sext i32 %.054 to i64
  %170 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @G, i64 0, i64 %168, i64 %169
  %171 = sext i32 %.058 to i64
  %172 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @G, i64 0, i64 %168, i64 %171
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @G, i64 0, i64 %171, i64 %169
  %175 = load i64, i64* %174, align 8
  %176 = add i64 %175, %173
  store i64 %176, i64* %9, align 8
  %177 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %170, i64* nonnull dereferenceable(8) %9)
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* %170, align 8
  br label %.backedge

179:                                              ; preds = %12
  %180 = add i32 %.054, 1
  br label %.backedge

181:                                              ; preds = %12
  %182 = load i32, i32* @x.3, align 4
  %183 = load i32, i32* @y.4, align 4
  %184 = add i32 %182, -1
  %185 = mul i32 %184, %182
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %188, %187
  %190 = select i1 %189, i32 387643960, i32 -1455601045
  br label %.backedge

191:                                              ; preds = %12
  %192 = load i32, i32* @x.3, align 4
  %193 = load i32, i32* @y.4, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 480300357, i32 -1455601045
  br label %.backedge

201:                                              ; preds = %12
  br label %.backedge

202:                                              ; preds = %12
  %203 = load i32, i32* @x.3, align 4
  %204 = load i32, i32* @y.4, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 -51768965, i32 -456899790
  br label %.backedge

212:                                              ; preds = %12
  %213 = add i32 %.056, 1
  %214 = load i32, i32* @x.3, align 4
  %215 = load i32, i32* @y.4, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 295757594, i32 -456899790
  br label %.backedge

223:                                              ; preds = %12
  br label %.backedge

224:                                              ; preds = %12
  br label %.backedge

225:                                              ; preds = %12
  %226 = add i32 %.058, 1
  br label %.backedge

227:                                              ; preds = %12
  br label %.backedge

228:                                              ; preds = %12
  %229 = load i32, i32* %4, align 4
  %230 = icmp slt i32 %.052, %229
  %231 = select i1 %230, i32 2023994595, i32 -653083882
  br label %.backedge

232:                                              ; preds = %12
  %233 = sext i32 %.052 to i64
  %234 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @G, i64 0, i64 %233, i64 %233
  %235 = load i64, i64* %234, align 8
  %236 = icmp slt i64 %235, 0
  %237 = select i1 %236, i32 -1977127777, i32 1155280085
  br label %.backedge

238:                                              ; preds = %12
  %239 = load i32, i32* @x.3, align 4
  %240 = load i32, i32* @y.4, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 -381083712, i32 -1669784531
  br label %.backedge

248:                                              ; preds = %12
  %249 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %250 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %249, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %251 = load i32, i32* @x.3, align 4
  %252 = load i32, i32* @y.4, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 -1574855905, i32 -1669784531
  br label %.backedge

260:                                              ; preds = %12
  br label %.backedge

261:                                              ; preds = %12
  br label %.backedge

262:                                              ; preds = %12
  %263 = add i32 %.052, 1
  br label %.backedge

264:                                              ; preds = %12
  %265 = load i32, i32* @x.3, align 4
  %266 = load i32, i32* @y.4, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 -151894238, i32 1503915928
  br label %.backedge

274:                                              ; preds = %12
  %275 = load i32, i32* @x.3, align 4
  %276 = load i32, i32* @y.4, align 4
  %277 = add i32 %275, -1
  %278 = mul i32 %277, %275
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %281, %280
  %283 = select i1 %282, i32 -865635888, i32 1503915928
  br label %.backedge

284:                                              ; preds = %12
  br label %.backedge

285:                                              ; preds = %12
  %286 = load i32, i32* %4, align 4
  %287 = icmp slt i32 %.050, %286
  %288 = select i1 %287, i32 -1097282107, i32 -130086375
  br label %.backedge

289:                                              ; preds = %12
  br label %.backedge

290:                                              ; preds = %12
  %291 = load i32, i32* %4, align 4
  %292 = icmp slt i32 %.048, %291
  %293 = select i1 %292, i32 -229116603, i32 -1566736490
  br label %.backedge

294:                                              ; preds = %12
  %295 = sext i32 %.050 to i64
  %296 = sext i32 %.048 to i64
  %297 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @G, i64 0, i64 %295, i64 %296
  %298 = load i64, i64* %297, align 8
  %299 = icmp slt i64 %298, 1099511627776
  %300 = select i1 %299, i32 -20559972, i32 -1942868926
  br label %.backedge

301:                                              ; preds = %12
  %302 = sext i32 %.050 to i64
  %303 = sext i32 %.048 to i64
  %304 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* @G, i64 0, i64 %302, i64 %303
  %305 = load i64, i64* %304, align 8
  %306 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %305)
  br label %.backedge

307:                                              ; preds = %12
  %308 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

309:                                              ; preds = %12
  %310 = load i32, i32* %4, align 4
  %311 = add i32 %310, -1
  %312 = icmp slt i32 %.048, %311
  %313 = select i1 %312, i32 -539737448, i32 1530217667
  br label %.backedge

314:                                              ; preds = %12
  %315 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

316:                                              ; preds = %12
  %317 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

318:                                              ; preds = %12
  %319 = load i32, i32* @x.3, align 4
  %320 = load i32, i32* @y.4, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 779067879, i32 699654541
  br label %.backedge

328:                                              ; preds = %12
  %329 = load i32, i32* @x.3, align 4
  %330 = load i32, i32* @y.4, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 200631688, i32 699654541
  br label %.backedge

338:                                              ; preds = %12
  br label %.backedge

339:                                              ; preds = %12
  %340 = add i32 %.048, 1
  br label %.backedge

341:                                              ; preds = %12
  %342 = load i32, i32* @x.3, align 4
  %343 = load i32, i32* @y.4, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 -988112502, i32 -640212784
  br label %.backedge

351:                                              ; preds = %12
  %352 = load i32, i32* @x.3, align 4
  %353 = load i32, i32* @y.4, align 4
  %354 = add i32 %352, -1
  %355 = mul i32 %354, %352
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %358, %357
  %360 = select i1 %359, i32 52103885, i32 -640212784
  br label %.backedge

361:                                              ; preds = %12
  br label %.backedge

362:                                              ; preds = %12
  %363 = load i32, i32* @x.3, align 4
  %364 = load i32, i32* @y.4, align 4
  %365 = add i32 %363, -1
  %366 = mul i32 %365, %363
  %367 = and i32 %366, 1
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %369, %368
  %371 = select i1 %370, i32 -1425795243, i32 83447286
  br label %.backedge

372:                                              ; preds = %12
  %.neg68 = add i32 %.050, 1
  %373 = load i32, i32* @x.3, align 4
  %374 = load i32, i32* @y.4, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 -65147238, i32 83447286
  br label %.backedge

382:                                              ; preds = %12
  br label %.backedge

383:                                              ; preds = %12
  br label %.backedge

384:                                              ; preds = %12
  %385 = load i32, i32* @x.3, align 4
  %386 = load i32, i32* @y.4, align 4
  %387 = add i32 %385, -1
  %388 = mul i32 %387, %385
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %391, %390
  %393 = select i1 %392, i32 2078071023, i32 1582617501
  br label %.backedge

394:                                              ; preds = %12
  store i32 0, i32* %1, align 4
  %395 = load i32, i32* @x.3, align 4
  %396 = load i32, i32* @y.4, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 -44943389, i32 1582617501
  br label %.backedge

404:                                              ; preds = %12
  %.0..0..0.47 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.47

405:                                              ; preds = %12
  br label %.backedge

406:                                              ; preds = %12
  %407 = add i32 %.064, 1
  br label %.backedge

408:                                              ; preds = %12
  %.neg = add i32 %.060, 1
  br label %.backedge

409:                                              ; preds = %12
  br label %.backedge

410:                                              ; preds = %12
  br label %.backedge

411:                                              ; preds = %12
  br label %.backedge

412:                                              ; preds = %12
  %413 = add i32 %.056, 1
  br label %.backedge

414:                                              ; preds = %12
  %415 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %416 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %415, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

417:                                              ; preds = %12
  br label %.backedge

418:                                              ; preds = %12
  br label %.backedge

419:                                              ; preds = %12
  br label %.backedge

420:                                              ; preds = %12
  %421 = add i32 %.050, 1
  br label %.backedge

422:                                              ; preds = %12
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  %8 = load i32, i32* @x.5, align 4
  %9 = load i32, i32* @y.6, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -1720961856, i32 -5023702
  %17 = select i1 %15, i32 -466539663, i32 -5023702
  %18 = select i1 %15, i32 1277103046, i32 -407012379
  %19 = select i1 %15, i32 2014175155, i32 -407012379
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i64* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i64* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ 2049620990, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 2049620990, label %21
    i32 1935345369, label %24
    i32 -302458988, label %25
    i32 2014175155, label %26
    i32 1277103046, label %27
    i32 -706465525, label %28
    i32 -466539663, label %29
    i32 -1720961856, label %30
    i32 -407012379, label %31
    i32 -5023702, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i64* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i64* [ %.010, %20 ], [ %.010, %32 ], [ %0, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %.010, %27 ], [ %0, %26 ], [ %.010, %25 ], [ %1, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ -466539663, %32 ], [ 2014175155, %31 ], [ %16, %29 ], [ %17, %28 ], [ -706465525, %27 ], [ %18, %26 ], [ %19, %25 ], [ -706465525, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i64, i64* %5, align 8
  %.0..0..0.8 = load volatile i64, i64* %4, align 8
  %22 = icmp slt i64 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 1935345369, i32 -302458988
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i64* %.01013, i64** %3, align 8
  %.0..0..0.9 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s952534304.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
