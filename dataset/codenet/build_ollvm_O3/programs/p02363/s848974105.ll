; ModuleID = 'build_ollvm/programs/p02363/s848974105.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s848974105.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s848974105.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 417045849, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 417045849, label %11
    i32 530188203, label %14
    i32 -284659279, label %25
    i32 1282856476, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 530188203, i32 1282856476
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -284659279, i32 1282856476
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 530188203, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %7)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %13, i64* nonnull dereferenceable(8) %8)
  %15 = load i64, i64* %7, align 8
  store i64 %15, i64* %6, align 8
  %.0..0..0.52 = load volatile i64, i64* %6, align 8
  %16 = mul nuw i64 %.0..0..0.52, %15
  %17 = alloca i64, i64 %16, align 16
  br label %18

18:                                               ; preds = %.backedge, %0
  %.093 = phi i64 [ 0, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i64 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i64 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i64 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i64 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i64 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i64 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i64 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i64 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.0 = phi i32 [ -1156724614, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1156724614, label %19
    i32 753074105, label %29
    i32 -639292394, label %41
    i32 -1887588144, label %43
    i32 -417797444, label %44
    i32 -463212693, label %48
    i32 -2095111702, label %52
    i32 871738070, label %62
    i32 601999596, label %73
    i32 2098170234, label %74
    i32 -1741494288, label %84
    i32 -396018690, label %94
    i32 -1529493308, label %95
    i32 -508144774, label %105
    i32 411366926, label %116
    i32 -1492228250, label %117
    i32 -665505688, label %127
    i32 1536502695, label %137
    i32 2128877389, label %138
    i32 -1096519916, label %148
    i32 -1907999849, label %160
    i32 -1573818371, label %162
    i32 -1396883429, label %171
    i32 -1362685162, label %173
    i32 -147453240, label %174
    i32 -1587509301, label %184
    i32 1023913701, label %196
    i32 1247985417, label %198
    i32 -621268511, label %199
    i32 918371354, label %203
    i32 1272935755, label %204
    i32 88647641, label %208
    i32 -1072250748, label %222
    i32 -196782844, label %232
    i32 10819001, label %243
    i32 1597519724, label %244
    i32 -1024522712, label %254
    i32 -2132545030, label %264
    i32 872058464, label %265
    i32 -1674042066, label %275
    i32 -239676427, label %286
    i32 763915868, label %287
    i32 -970336002, label %297
    i32 -474759478, label %307
    i32 -1836970903, label %308
    i32 1055666045, label %318
    i32 286058587, label %329
    i32 2009316217, label %330
    i32 2125176430, label %340
    i32 1093405198, label %350
    i32 -293698999, label %351
    i32 674423985, label %355
    i32 -454989149, label %365
    i32 -1777183566, label %379
    i32 2089746496, label %381
    i32 1687322997, label %384
    i32 -994011592, label %394
    i32 1322803369, label %404
    i32 1596593575, label %405
    i32 1371029614, label %407
    i32 1014531462, label %417
    i32 -1206575560, label %427
    i32 -1847473433, label %428
    i32 -217112767, label %438
    i32 -1641468101, label %450
    i32 -1406026202, label %452
    i32 -1359553736, label %453
    i32 -1127563186, label %457
    i32 -1616790304, label %459
    i32 -627979425, label %461
    i32 1043725434, label %467
    i32 1041437687, label %469
    i32 121391112, label %474
    i32 1188288578, label %475
    i32 389621418, label %477
    i32 1647559279, label %487
    i32 -1758239178, label %498
    i32 1696827453, label %499
    i32 -2146671530, label %500
    i32 -821533061, label %510
    i32 -1738451952, label %520
    i32 -1490176347, label %521
    i32 2136924334, label %522
    i32 874081562, label %523
    i32 -1519653550, label %524
    i32 -490300946, label %525
    i32 -563006243, label %527
    i32 164119638, label %528
    i32 1655767120, label %529
    i32 -88241729, label %530
    i32 1033551597, label %532
    i32 844014385, label %533
    i32 591059875, label %535
    i32 417089133, label %536
    i32 -1304962322, label %538
    i32 298154784, label %539
    i32 1323254491, label %540
    i32 1637619, label %541
    i32 -1967276705, label %542
    i32 321869283, label %543
    i32 -1630798095, label %545
  ]

.backedge:                                        ; preds = %18, %545, %543, %542, %541, %540, %539, %538, %536, %535, %533, %532, %530, %529, %528, %527, %525, %524, %523, %522, %520, %510, %500, %499, %498, %487, %477, %475, %474, %469, %467, %461, %459, %457, %453, %452, %450, %438, %428, %427, %417, %407, %405, %404, %394, %384, %381, %379, %365, %355, %351, %350, %340, %330, %329, %318, %308, %307, %297, %287, %286, %275, %265, %264, %254, %244, %243, %232, %222, %208, %204, %203, %199, %198, %196, %184, %174, %173, %171, %162, %160, %148, %138, %137, %127, %117, %116, %105, %95, %94, %84, %74, %73, %62, %52, %48, %44, %43, %41, %29, %19
  %.093.be = phi i64 [ %.093, %18 ], [ %.093, %545 ], [ %.093, %543 ], [ %.093, %542 ], [ %.093, %541 ], [ %.093, %540 ], [ %.093, %539 ], [ %.093, %538 ], [ %.093, %536 ], [ %.093, %535 ], [ %.093, %533 ], [ %.093, %532 ], [ %.093, %530 ], [ %.093, %529 ], [ %.093, %528 ], [ %.093, %527 ], [ %526, %525 ], [ %.093, %524 ], [ %.093, %523 ], [ %.093, %522 ], [ %.093, %520 ], [ %.093, %510 ], [ %.093, %500 ], [ %.093, %499 ], [ %.093, %498 ], [ %.093, %487 ], [ %.093, %477 ], [ %.093, %475 ], [ %.093, %474 ], [ %.093, %469 ], [ %.093, %467 ], [ %.093, %461 ], [ %.093, %459 ], [ %.093, %457 ], [ %.093, %453 ], [ %.093, %452 ], [ %.093, %450 ], [ %.093, %438 ], [ %.093, %428 ], [ %.093, %427 ], [ %.093, %417 ], [ %.093, %407 ], [ %.093, %405 ], [ %.093, %404 ], [ %.093, %394 ], [ %.093, %384 ], [ %.093, %381 ], [ %.093, %379 ], [ %.093, %365 ], [ %.093, %355 ], [ %.093, %351 ], [ %.093, %350 ], [ %.093, %340 ], [ %.093, %330 ], [ %.093, %329 ], [ %.093, %318 ], [ %.093, %308 ], [ %.093, %307 ], [ %.093, %297 ], [ %.093, %287 ], [ %.093, %286 ], [ %.093, %275 ], [ %.093, %265 ], [ %.093, %264 ], [ %.093, %254 ], [ %.093, %244 ], [ %.093, %243 ], [ %.093, %232 ], [ %.093, %222 ], [ %.093, %208 ], [ %.093, %204 ], [ %.093, %203 ], [ %.093, %199 ], [ %.093, %198 ], [ %.093, %196 ], [ %.093, %184 ], [ %.093, %174 ], [ %.093, %173 ], [ %.093, %171 ], [ %.093, %162 ], [ %.093, %160 ], [ %.093, %148 ], [ %.093, %138 ], [ %.093, %137 ], [ %.093, %127 ], [ %.093, %117 ], [ %.093, %116 ], [ %106, %105 ], [ %.093, %95 ], [ %.093, %94 ], [ %.093, %84 ], [ %.093, %74 ], [ %.093, %73 ], [ %.093, %62 ], [ %.093, %52 ], [ %.093, %48 ], [ %.093, %44 ], [ %.093, %43 ], [ %.093, %41 ], [ %.093, %29 ], [ %.093, %19 ]
  %.091.be = phi i64 [ %.091, %18 ], [ %.091, %545 ], [ %.091, %543 ], [ %.091, %542 ], [ %.091, %541 ], [ %.091, %540 ], [ %.091, %539 ], [ %.091, %538 ], [ %.091, %536 ], [ %.091, %535 ], [ %.091, %533 ], [ %.091, %532 ], [ %.091, %530 ], [ %.091, %529 ], [ %.091, %528 ], [ %.091, %527 ], [ %.091, %525 ], [ %.091, %524 ], [ %.neg, %523 ], [ %.091, %522 ], [ %.091, %520 ], [ %.091, %510 ], [ %.091, %500 ], [ %.091, %499 ], [ %.091, %498 ], [ %.091, %487 ], [ %.091, %477 ], [ %.091, %475 ], [ %.091, %474 ], [ %.091, %469 ], [ %.091, %467 ], [ %.091, %461 ], [ %.091, %459 ], [ %.091, %457 ], [ %.091, %453 ], [ %.091, %452 ], [ %.091, %450 ], [ %.091, %438 ], [ %.091, %428 ], [ %.091, %427 ], [ %.091, %417 ], [ %.091, %407 ], [ %.091, %405 ], [ %.091, %404 ], [ %.091, %394 ], [ %.091, %384 ], [ %.091, %381 ], [ %.091, %379 ], [ %.091, %365 ], [ %.091, %355 ], [ %.091, %351 ], [ %.091, %350 ], [ %.091, %340 ], [ %.091, %330 ], [ %.091, %329 ], [ %.091, %318 ], [ %.091, %308 ], [ %.091, %307 ], [ %.091, %297 ], [ %.091, %287 ], [ %.091, %286 ], [ %.091, %275 ], [ %.091, %265 ], [ %.091, %264 ], [ %.091, %254 ], [ %.091, %244 ], [ %.091, %243 ], [ %.091, %232 ], [ %.091, %222 ], [ %.091, %208 ], [ %.091, %204 ], [ %.091, %203 ], [ %.091, %199 ], [ %.091, %198 ], [ %.091, %196 ], [ %.091, %184 ], [ %.091, %174 ], [ %.091, %173 ], [ %.091, %171 ], [ %.091, %162 ], [ %.091, %160 ], [ %.091, %148 ], [ %.091, %138 ], [ %.091, %137 ], [ %.091, %127 ], [ %.091, %117 ], [ %.091, %116 ], [ %.091, %105 ], [ %.091, %95 ], [ %.091, %94 ], [ %.091, %84 ], [ %.091, %74 ], [ %.091, %73 ], [ %63, %62 ], [ %.091, %52 ], [ %.091, %48 ], [ %.091, %44 ], [ 0, %43 ], [ %.091, %41 ], [ %.091, %29 ], [ %.091, %19 ]
  %.089.be = phi i64 [ %.089, %18 ], [ %.089, %545 ], [ %.089, %543 ], [ %.089, %542 ], [ %.089, %541 ], [ %.089, %540 ], [ %.089, %539 ], [ %.089, %538 ], [ %.089, %536 ], [ %.089, %535 ], [ %.089, %533 ], [ %.089, %532 ], [ %.089, %530 ], [ %.089, %529 ], [ %.089, %528 ], [ 0, %527 ], [ %.089, %525 ], [ %.089, %524 ], [ %.089, %523 ], [ %.089, %522 ], [ %.089, %520 ], [ %.089, %510 ], [ %.089, %500 ], [ %.089, %499 ], [ %.089, %498 ], [ %.089, %487 ], [ %.089, %477 ], [ %.089, %475 ], [ %.089, %474 ], [ %.089, %469 ], [ %.089, %467 ], [ %.089, %461 ], [ %.089, %459 ], [ %.089, %457 ], [ %.089, %453 ], [ %.089, %452 ], [ %.089, %450 ], [ %.089, %438 ], [ %.089, %428 ], [ %.089, %427 ], [ %.089, %417 ], [ %.089, %407 ], [ %.089, %405 ], [ %.089, %404 ], [ %.089, %394 ], [ %.089, %384 ], [ %.089, %381 ], [ %.089, %379 ], [ %.089, %365 ], [ %.089, %355 ], [ %.089, %351 ], [ %.089, %350 ], [ %.089, %340 ], [ %.089, %330 ], [ %.089, %329 ], [ %.089, %318 ], [ %.089, %308 ], [ %.089, %307 ], [ %.089, %297 ], [ %.089, %287 ], [ %.089, %286 ], [ %.089, %275 ], [ %.089, %265 ], [ %.089, %264 ], [ %.089, %254 ], [ %.089, %244 ], [ %.089, %243 ], [ %.089, %232 ], [ %.089, %222 ], [ %.089, %208 ], [ %.089, %204 ], [ %.089, %203 ], [ %.089, %199 ], [ %.089, %198 ], [ %.089, %196 ], [ %.089, %184 ], [ %.089, %174 ], [ %.089, %173 ], [ %172, %171 ], [ %.089, %162 ], [ %.089, %160 ], [ %.089, %148 ], [ %.089, %138 ], [ %.089, %137 ], [ 0, %127 ], [ %.089, %117 ], [ %.089, %116 ], [ %.089, %105 ], [ %.089, %95 ], [ %.089, %94 ], [ %.089, %84 ], [ %.089, %74 ], [ %.089, %73 ], [ %.089, %62 ], [ %.089, %52 ], [ %.089, %48 ], [ %.089, %44 ], [ %.089, %43 ], [ %.089, %41 ], [ %.089, %29 ], [ %.089, %19 ]
  %.087.be = phi i64 [ %.087, %18 ], [ %.087, %545 ], [ %.087, %543 ], [ %.087, %542 ], [ %.087, %541 ], [ %.087, %540 ], [ %.087, %539 ], [ %.087, %538 ], [ %537, %536 ], [ %.087, %535 ], [ %.087, %533 ], [ %.087, %532 ], [ %.087, %530 ], [ %.087, %529 ], [ %.087, %528 ], [ %.087, %527 ], [ %.087, %525 ], [ %.087, %524 ], [ %.087, %523 ], [ %.087, %522 ], [ %.087, %520 ], [ %.087, %510 ], [ %.087, %500 ], [ %.087, %499 ], [ %.087, %498 ], [ %.087, %487 ], [ %.087, %477 ], [ %.087, %475 ], [ %.087, %474 ], [ %.087, %469 ], [ %.087, %467 ], [ %.087, %461 ], [ %.087, %459 ], [ %.087, %457 ], [ %.087, %453 ], [ %.087, %452 ], [ %.087, %450 ], [ %.087, %438 ], [ %.087, %428 ], [ %.087, %427 ], [ %.087, %417 ], [ %.087, %407 ], [ %.087, %405 ], [ %.087, %404 ], [ %.087, %394 ], [ %.087, %384 ], [ %.087, %381 ], [ %.087, %379 ], [ %.087, %365 ], [ %.087, %355 ], [ %.087, %351 ], [ %.087, %350 ], [ %.087, %340 ], [ %.087, %330 ], [ %.087, %329 ], [ %319, %318 ], [ %.087, %308 ], [ %.087, %307 ], [ %.087, %297 ], [ %.087, %287 ], [ %.087, %286 ], [ %.087, %275 ], [ %.087, %265 ], [ %.087, %264 ], [ %.087, %254 ], [ %.087, %244 ], [ %.087, %243 ], [ %.087, %232 ], [ %.087, %222 ], [ %.087, %208 ], [ %.087, %204 ], [ %.087, %203 ], [ %.087, %199 ], [ %.087, %198 ], [ %.087, %196 ], [ %.087, %184 ], [ %.087, %174 ], [ 0, %173 ], [ %.087, %171 ], [ %.087, %162 ], [ %.087, %160 ], [ %.087, %148 ], [ %.087, %138 ], [ %.087, %137 ], [ %.087, %127 ], [ %.087, %117 ], [ %.087, %116 ], [ %.087, %105 ], [ %.087, %95 ], [ %.087, %94 ], [ %.087, %84 ], [ %.087, %74 ], [ %.087, %73 ], [ %.087, %62 ], [ %.087, %52 ], [ %.087, %48 ], [ %.087, %44 ], [ %.087, %43 ], [ %.087, %41 ], [ %.087, %29 ], [ %.087, %19 ]
  %.085.be = phi i64 [ %.085, %18 ], [ %.085, %545 ], [ %.085, %543 ], [ %.085, %542 ], [ %.085, %541 ], [ %.085, %540 ], [ %.085, %539 ], [ %.085, %538 ], [ %.085, %536 ], [ %.085, %535 ], [ %534, %533 ], [ %.085, %532 ], [ %.085, %530 ], [ %.085, %529 ], [ %.085, %528 ], [ %.085, %527 ], [ %.085, %525 ], [ %.085, %524 ], [ %.085, %523 ], [ %.085, %522 ], [ %.085, %520 ], [ %.085, %510 ], [ %.085, %500 ], [ %.085, %499 ], [ %.085, %498 ], [ %.085, %487 ], [ %.085, %477 ], [ %.085, %475 ], [ %.085, %474 ], [ %.085, %469 ], [ %.085, %467 ], [ %.085, %461 ], [ %.085, %459 ], [ %.085, %457 ], [ %.085, %453 ], [ %.085, %452 ], [ %.085, %450 ], [ %.085, %438 ], [ %.085, %428 ], [ %.085, %427 ], [ %.085, %417 ], [ %.085, %407 ], [ %.085, %405 ], [ %.085, %404 ], [ %.085, %394 ], [ %.085, %384 ], [ %.085, %381 ], [ %.085, %379 ], [ %.085, %365 ], [ %.085, %355 ], [ %.085, %351 ], [ %.085, %350 ], [ %.085, %340 ], [ %.085, %330 ], [ %.085, %329 ], [ %.085, %318 ], [ %.085, %308 ], [ %.085, %307 ], [ %.085, %297 ], [ %.085, %287 ], [ %.085, %286 ], [ %276, %275 ], [ %.085, %265 ], [ %.085, %264 ], [ %.085, %254 ], [ %.085, %244 ], [ %.085, %243 ], [ %.085, %232 ], [ %.085, %222 ], [ %.085, %208 ], [ %.085, %204 ], [ %.085, %203 ], [ %.085, %199 ], [ 0, %198 ], [ %.085, %196 ], [ %.085, %184 ], [ %.085, %174 ], [ %.085, %173 ], [ %.085, %171 ], [ %.085, %162 ], [ %.085, %160 ], [ %.085, %148 ], [ %.085, %138 ], [ %.085, %137 ], [ %.085, %127 ], [ %.085, %117 ], [ %.085, %116 ], [ %.085, %105 ], [ %.085, %95 ], [ %.085, %94 ], [ %.085, %84 ], [ %.085, %74 ], [ %.085, %73 ], [ %.085, %62 ], [ %.085, %52 ], [ %.085, %48 ], [ %.085, %44 ], [ %.085, %43 ], [ %.085, %41 ], [ %.085, %29 ], [ %.085, %19 ]
  %.083.be = phi i64 [ %.083, %18 ], [ %.083, %545 ], [ %.083, %543 ], [ %.083, %542 ], [ %.083, %541 ], [ %.083, %540 ], [ %.083, %539 ], [ %.083, %538 ], [ %.083, %536 ], [ %.083, %535 ], [ %.083, %533 ], [ %.083, %532 ], [ %531, %530 ], [ %.083, %529 ], [ %.083, %528 ], [ %.083, %527 ], [ %.083, %525 ], [ %.083, %524 ], [ %.083, %523 ], [ %.083, %522 ], [ %.083, %520 ], [ %.083, %510 ], [ %.083, %500 ], [ %.083, %499 ], [ %.083, %498 ], [ %.083, %487 ], [ %.083, %477 ], [ %.083, %475 ], [ %.083, %474 ], [ %.083, %469 ], [ %.083, %467 ], [ %.083, %461 ], [ %.083, %459 ], [ %.083, %457 ], [ %.083, %453 ], [ %.083, %452 ], [ %.083, %450 ], [ %.083, %438 ], [ %.083, %428 ], [ %.083, %427 ], [ %.083, %417 ], [ %.083, %407 ], [ %.083, %405 ], [ %.083, %404 ], [ %.083, %394 ], [ %.083, %384 ], [ %.083, %381 ], [ %.083, %379 ], [ %.083, %365 ], [ %.083, %355 ], [ %.083, %351 ], [ %.083, %350 ], [ %.083, %340 ], [ %.083, %330 ], [ %.083, %329 ], [ %.083, %318 ], [ %.083, %308 ], [ %.083, %307 ], [ %.083, %297 ], [ %.083, %287 ], [ %.083, %286 ], [ %.083, %275 ], [ %.083, %265 ], [ %.083, %264 ], [ %.083, %254 ], [ %.083, %244 ], [ %.083, %243 ], [ %233, %232 ], [ %.083, %222 ], [ %.083, %208 ], [ %.083, %204 ], [ 0, %203 ], [ %.083, %199 ], [ %.083, %198 ], [ %.083, %196 ], [ %.083, %184 ], [ %.083, %174 ], [ %.083, %173 ], [ %.083, %171 ], [ %.083, %162 ], [ %.083, %160 ], [ %.083, %148 ], [ %.083, %138 ], [ %.083, %137 ], [ %.083, %127 ], [ %.083, %117 ], [ %.083, %116 ], [ %.083, %105 ], [ %.083, %95 ], [ %.083, %94 ], [ %.083, %84 ], [ %.083, %74 ], [ %.083, %73 ], [ %.083, %62 ], [ %.083, %52 ], [ %.083, %48 ], [ %.083, %44 ], [ %.083, %43 ], [ %.083, %41 ], [ %.083, %29 ], [ %.083, %19 ]
  %.081.be = phi i64 [ %.081, %18 ], [ %.081, %545 ], [ %.081, %543 ], [ %.081, %542 ], [ %.081, %541 ], [ %.081, %540 ], [ %.081, %539 ], [ 0, %538 ], [ %.081, %536 ], [ %.081, %535 ], [ %.081, %533 ], [ %.081, %532 ], [ %.081, %530 ], [ %.081, %529 ], [ %.081, %528 ], [ %.081, %527 ], [ %.081, %525 ], [ %.081, %524 ], [ %.081, %523 ], [ %.081, %522 ], [ %.081, %520 ], [ %.081, %510 ], [ %.081, %500 ], [ %.081, %499 ], [ %.081, %498 ], [ %.081, %487 ], [ %.081, %477 ], [ %.081, %475 ], [ %.081, %474 ], [ %.081, %469 ], [ %.081, %467 ], [ %.081, %461 ], [ %.081, %459 ], [ %.081, %457 ], [ %.081, %453 ], [ %.081, %452 ], [ %.081, %450 ], [ %.081, %438 ], [ %.081, %428 ], [ %.081, %427 ], [ %.081, %417 ], [ %.081, %407 ], [ %406, %405 ], [ %.081, %404 ], [ %.081, %394 ], [ %.081, %384 ], [ %.081, %381 ], [ %.081, %379 ], [ %.081, %365 ], [ %.081, %355 ], [ %.081, %351 ], [ %.081, %350 ], [ 0, %340 ], [ %.081, %330 ], [ %.081, %329 ], [ %.081, %318 ], [ %.081, %308 ], [ %.081, %307 ], [ %.081, %297 ], [ %.081, %287 ], [ %.081, %286 ], [ %.081, %275 ], [ %.081, %265 ], [ %.081, %264 ], [ %.081, %254 ], [ %.081, %244 ], [ %.081, %243 ], [ %.081, %232 ], [ %.081, %222 ], [ %.081, %208 ], [ %.081, %204 ], [ %.081, %203 ], [ %.081, %199 ], [ %.081, %198 ], [ %.081, %196 ], [ %.081, %184 ], [ %.081, %174 ], [ %.081, %173 ], [ %.081, %171 ], [ %.081, %162 ], [ %.081, %160 ], [ %.081, %148 ], [ %.081, %138 ], [ %.081, %137 ], [ %.081, %127 ], [ %.081, %117 ], [ %.081, %116 ], [ %.081, %105 ], [ %.081, %95 ], [ %.081, %94 ], [ %.081, %84 ], [ %.081, %74 ], [ %.081, %73 ], [ %.081, %62 ], [ %.081, %52 ], [ %.081, %48 ], [ %.081, %44 ], [ %.081, %43 ], [ %.081, %41 ], [ %.081, %29 ], [ %.081, %19 ]
  %.079.be = phi i64 [ %.079, %18 ], [ %.079, %545 ], [ %.079, %543 ], [ %.079, %542 ], [ 0, %541 ], [ %.079, %540 ], [ %.079, %539 ], [ %.079, %538 ], [ %.079, %536 ], [ %.079, %535 ], [ %.079, %533 ], [ %.079, %532 ], [ %.079, %530 ], [ %.079, %529 ], [ %.079, %528 ], [ %.079, %527 ], [ %.079, %525 ], [ %.079, %524 ], [ %.079, %523 ], [ %.079, %522 ], [ %.079, %520 ], [ %.079, %510 ], [ %.079, %500 ], [ %.neg97, %499 ], [ %.079, %498 ], [ %.079, %487 ], [ %.079, %477 ], [ %.079, %475 ], [ %.079, %474 ], [ %.079, %469 ], [ %.079, %467 ], [ %.079, %461 ], [ %.079, %459 ], [ %.079, %457 ], [ %.079, %453 ], [ %.079, %452 ], [ %.079, %450 ], [ %.079, %438 ], [ %.079, %428 ], [ %.079, %427 ], [ 0, %417 ], [ %.079, %407 ], [ %.079, %405 ], [ %.079, %404 ], [ %.079, %394 ], [ %.079, %384 ], [ %.079, %381 ], [ %.079, %379 ], [ %.079, %365 ], [ %.079, %355 ], [ %.079, %351 ], [ %.079, %350 ], [ %.079, %340 ], [ %.079, %330 ], [ %.079, %329 ], [ %.079, %318 ], [ %.079, %308 ], [ %.079, %307 ], [ %.079, %297 ], [ %.079, %287 ], [ %.079, %286 ], [ %.079, %275 ], [ %.079, %265 ], [ %.079, %264 ], [ %.079, %254 ], [ %.079, %244 ], [ %.079, %243 ], [ %.079, %232 ], [ %.079, %222 ], [ %.079, %208 ], [ %.079, %204 ], [ %.079, %203 ], [ %.079, %199 ], [ %.079, %198 ], [ %.079, %196 ], [ %.079, %184 ], [ %.079, %174 ], [ %.079, %173 ], [ %.079, %171 ], [ %.079, %162 ], [ %.079, %160 ], [ %.079, %148 ], [ %.079, %138 ], [ %.079, %137 ], [ %.079, %127 ], [ %.079, %117 ], [ %.079, %116 ], [ %.079, %105 ], [ %.079, %95 ], [ %.079, %94 ], [ %.079, %84 ], [ %.079, %74 ], [ %.079, %73 ], [ %.079, %62 ], [ %.079, %52 ], [ %.079, %48 ], [ %.079, %44 ], [ %.079, %43 ], [ %.079, %41 ], [ %.079, %29 ], [ %.079, %19 ]
  %.077.be = phi i64 [ %.077, %18 ], [ %.077, %545 ], [ %.077, %543 ], [ %.077, %542 ], [ %.077, %541 ], [ %.077, %540 ], [ %.077, %539 ], [ %.077, %538 ], [ %.077, %536 ], [ %.077, %535 ], [ %.077, %533 ], [ %.077, %532 ], [ %.077, %530 ], [ %.077, %529 ], [ %.077, %528 ], [ %.077, %527 ], [ %.077, %525 ], [ %.077, %524 ], [ %.077, %523 ], [ %.077, %522 ], [ %.077, %520 ], [ %.077, %510 ], [ %.077, %500 ], [ %.077, %499 ], [ %.077, %498 ], [ %.077, %487 ], [ %.077, %477 ], [ %476, %475 ], [ %.077, %474 ], [ %.077, %469 ], [ %.077, %467 ], [ %.077, %461 ], [ %.077, %459 ], [ %.077, %457 ], [ %.077, %453 ], [ 0, %452 ], [ %.077, %450 ], [ %.077, %438 ], [ %.077, %428 ], [ %.077, %427 ], [ %.077, %417 ], [ %.077, %407 ], [ %.077, %405 ], [ %.077, %404 ], [ %.077, %394 ], [ %.077, %384 ], [ %.077, %381 ], [ %.077, %379 ], [ %.077, %365 ], [ %.077, %355 ], [ %.077, %351 ], [ %.077, %350 ], [ %.077, %340 ], [ %.077, %330 ], [ %.077, %329 ], [ %.077, %318 ], [ %.077, %308 ], [ %.077, %307 ], [ %.077, %297 ], [ %.077, %287 ], [ %.077, %286 ], [ %.077, %275 ], [ %.077, %265 ], [ %.077, %264 ], [ %.077, %254 ], [ %.077, %244 ], [ %.077, %243 ], [ %.077, %232 ], [ %.077, %222 ], [ %.077, %208 ], [ %.077, %204 ], [ %.077, %203 ], [ %.077, %199 ], [ %.077, %198 ], [ %.077, %196 ], [ %.077, %184 ], [ %.077, %174 ], [ %.077, %173 ], [ %.077, %171 ], [ %.077, %162 ], [ %.077, %160 ], [ %.077, %148 ], [ %.077, %138 ], [ %.077, %137 ], [ %.077, %127 ], [ %.077, %117 ], [ %.077, %116 ], [ %.077, %105 ], [ %.077, %95 ], [ %.077, %94 ], [ %.077, %84 ], [ %.077, %74 ], [ %.077, %73 ], [ %.077, %62 ], [ %.077, %52 ], [ %.077, %48 ], [ %.077, %44 ], [ %.077, %43 ], [ %.077, %41 ], [ %.077, %29 ], [ %.077, %19 ]
  %.0.be = phi i32 [ %.0, %18 ], [ -821533061, %545 ], [ 1647559279, %543 ], [ -217112767, %542 ], [ 1014531462, %541 ], [ -994011592, %540 ], [ -454989149, %539 ], [ 2125176430, %538 ], [ 1055666045, %536 ], [ -970336002, %535 ], [ -1674042066, %533 ], [ -1024522712, %532 ], [ -196782844, %530 ], [ -1587509301, %529 ], [ -1096519916, %528 ], [ -665505688, %527 ], [ -508144774, %525 ], [ -1741494288, %524 ], [ 871738070, %523 ], [ 753074105, %522 ], [ -1490176347, %520 ], [ %519, %510 ], [ %509, %500 ], [ -1847473433, %499 ], [ 1696827453, %498 ], [ %497, %487 ], [ %486, %477 ], [ -1359553736, %475 ], [ 1188288578, %474 ], [ 121391112, %469 ], [ 121391112, %467 ], [ %466, %461 ], [ -627979425, %459 ], [ %458, %457 ], [ %456, %453 ], [ -1359553736, %452 ], [ %451, %450 ], [ %449, %438 ], [ %437, %428 ], [ -1847473433, %427 ], [ %426, %417 ], [ %416, %407 ], [ -293698999, %405 ], [ 1596593575, %404 ], [ %403, %394 ], [ %393, %384 ], [ -1490176347, %381 ], [ %380, %379 ], [ %378, %365 ], [ %364, %355 ], [ %354, %351 ], [ -293698999, %350 ], [ %349, %340 ], [ %339, %330 ], [ -147453240, %329 ], [ %328, %318 ], [ %317, %308 ], [ -1836970903, %307 ], [ %306, %297 ], [ %296, %287 ], [ -621268511, %286 ], [ %285, %275 ], [ %274, %265 ], [ 872058464, %264 ], [ %263, %254 ], [ %253, %244 ], [ 1272935755, %243 ], [ %242, %232 ], [ %231, %222 ], [ -1072250748, %208 ], [ %207, %204 ], [ 1272935755, %203 ], [ %202, %199 ], [ -621268511, %198 ], [ %197, %196 ], [ %195, %184 ], [ %183, %174 ], [ -147453240, %173 ], [ 2128877389, %171 ], [ -1396883429, %162 ], [ %161, %160 ], [ %159, %148 ], [ %147, %138 ], [ 2128877389, %137 ], [ %136, %127 ], [ %126, %117 ], [ -1156724614, %116 ], [ %115, %105 ], [ %104, %95 ], [ -1529493308, %94 ], [ %93, %84 ], [ %83, %74 ], [ -417797444, %73 ], [ %72, %62 ], [ %61, %52 ], [ -2095111702, %48 ], [ %47, %44 ], [ -417797444, %43 ], [ %42, %41 ], [ %40, %29 ], [ %28, %19 ]
  br label %18

19:                                               ; preds = %18
  %20 = load i32, i32* @x.3, align 4
  %21 = load i32, i32* @y.4, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 753074105, i32 2136924334
  br label %.backedge

29:                                               ; preds = %18
  %30 = load i64, i64* %7, align 8
  %31 = icmp slt i64 %.093, %30
  store i1 %31, i1* %5, align 1
  %32 = load i32, i32* @x.3, align 4
  %33 = load i32, i32* @y.4, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -639292394, i32 2136924334
  br label %.backedge

41:                                               ; preds = %18
  %.0..0..0.72 = load volatile i1, i1* %5, align 1
  %42 = select i1 %.0..0..0.72, i32 -1887588144, i32 -1492228250
  br label %.backedge

43:                                               ; preds = %18
  br label %.backedge

44:                                               ; preds = %18
  %45 = load i64, i64* %7, align 8
  %46 = icmp slt i64 %.091, %45
  %47 = select i1 %46, i32 -463212693, i32 2098170234
  br label %.backedge

48:                                               ; preds = %18
  %.not105 = icmp eq i64 %.093, %.091
  %49 = select i1 %.not105, i64 0, i64 36028797018963968
  %.0..0..0.53 = load volatile i64, i64* %6, align 8
  %50 = mul nsw i64 %.0..0..0.53, %.093
  %.idx106 = add nsw i64 %50, %.091
  %51 = getelementptr inbounds i64, i64* %17, i64 %.idx106
  store i64 %49, i64* %51, align 8
  br label %.backedge

52:                                               ; preds = %18
  %53 = load i32, i32* @x.3, align 4
  %54 = load i32, i32* @y.4, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 871738070, i32 874081562
  br label %.backedge

62:                                               ; preds = %18
  %63 = add i64 %.091, 1
  %64 = load i32, i32* @x.3, align 4
  %65 = load i32, i32* @y.4, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 601999596, i32 874081562
  br label %.backedge

73:                                               ; preds = %18
  br label %.backedge

74:                                               ; preds = %18
  %75 = load i32, i32* @x.3, align 4
  %76 = load i32, i32* @y.4, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 -1741494288, i32 -1519653550
  br label %.backedge

84:                                               ; preds = %18
  %85 = load i32, i32* @x.3, align 4
  %86 = load i32, i32* @y.4, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 -396018690, i32 -1519653550
  br label %.backedge

94:                                               ; preds = %18
  br label %.backedge

95:                                               ; preds = %18
  %96 = load i32, i32* @x.3, align 4
  %97 = load i32, i32* @y.4, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 -508144774, i32 -490300946
  br label %.backedge

105:                                              ; preds = %18
  %106 = add i64 %.093, 1
  %107 = load i32, i32* @x.3, align 4
  %108 = load i32, i32* @y.4, align 4
  %109 = add i32 %107, -1
  %110 = mul i32 %109, %107
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %113, %112
  %115 = select i1 %114, i32 411366926, i32 -490300946
  br label %.backedge

116:                                              ; preds = %18
  br label %.backedge

117:                                              ; preds = %18
  %118 = load i32, i32* @x.3, align 4
  %119 = load i32, i32* @y.4, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 -665505688, i32 -563006243
  br label %.backedge

127:                                              ; preds = %18
  %128 = load i32, i32* @x.3, align 4
  %129 = load i32, i32* @y.4, align 4
  %130 = add i32 %128, -1
  %131 = mul i32 %130, %128
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %134, %133
  %136 = select i1 %135, i32 1536502695, i32 -563006243
  br label %.backedge

137:                                              ; preds = %18
  br label %.backedge

138:                                              ; preds = %18
  %139 = load i32, i32* @x.3, align 4
  %140 = load i32, i32* @y.4, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 -1096519916, i32 164119638
  br label %.backedge

148:                                              ; preds = %18
  %149 = load i64, i64* %8, align 8
  %150 = icmp slt i64 %.089, %149
  store i1 %150, i1* %4, align 1
  %151 = load i32, i32* @x.3, align 4
  %152 = load i32, i32* @y.4, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 -1907999849, i32 164119638
  br label %.backedge

160:                                              ; preds = %18
  %.0..0..0.73 = load volatile i1, i1* %4, align 1
  %161 = select i1 %.0..0..0.73, i32 -1573818371, i32 -1362685162
  br label %.backedge

162:                                              ; preds = %18
  %163 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %9)
  %164 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %163, i64* nonnull dereferenceable(8) %10)
  %165 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %164, i64* nonnull dereferenceable(8) %11)
  %166 = load i64, i64* %11, align 8
  %167 = load i64, i64* %9, align 8
  %.0..0..0.54 = load volatile i64, i64* %6, align 8
  %168 = mul nsw i64 %.0..0..0.54, %167
  %169 = load i64, i64* %10, align 8
  %.idx104 = add nsw i64 %169, %168
  %170 = getelementptr inbounds i64, i64* %17, i64 %.idx104
  store i64 %166, i64* %170, align 8
  br label %.backedge

171:                                              ; preds = %18
  %172 = add i64 %.089, 1
  br label %.backedge

173:                                              ; preds = %18
  br label %.backedge

174:                                              ; preds = %18
  %175 = load i32, i32* @x.3, align 4
  %176 = load i32, i32* @y.4, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 -1587509301, i32 1655767120
  br label %.backedge

184:                                              ; preds = %18
  %185 = load i64, i64* %7, align 8
  %186 = icmp slt i64 %.087, %185
  store i1 %186, i1* %3, align 1
  %187 = load i32, i32* @x.3, align 4
  %188 = load i32, i32* @y.4, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1023913701, i32 1655767120
  br label %.backedge

196:                                              ; preds = %18
  %.0..0..0.74 = load volatile i1, i1* %3, align 1
  %197 = select i1 %.0..0..0.74, i32 1247985417, i32 2009316217
  br label %.backedge

198:                                              ; preds = %18
  br label %.backedge

199:                                              ; preds = %18
  %200 = load i64, i64* %7, align 8
  %201 = icmp slt i64 %.085, %200
  %202 = select i1 %201, i32 918371354, i32 763915868
  br label %.backedge

203:                                              ; preds = %18
  br label %.backedge

204:                                              ; preds = %18
  %205 = load i64, i64* %7, align 8
  %206 = icmp slt i64 %.083, %205
  %207 = select i1 %206, i32 88647641, i32 1597519724
  br label %.backedge

208:                                              ; preds = %18
  %.0..0..0.55 = load volatile i64, i64* %6, align 8
  %209 = mul nsw i64 %.0..0..0.55, %.085
  %.idx100 = add nsw i64 %209, %.083
  %210 = getelementptr inbounds i64, i64* %17, i64 %.idx100
  %.0..0..0.56 = load volatile i64, i64* %6, align 8
  %211 = mul nsw i64 %.0..0..0.56, %.085
  %.idx101 = add nsw i64 %211, %.087
  %212 = getelementptr inbounds i64, i64* %17, i64 %.idx101
  %213 = load i64, i64* %212, align 8
  %.0..0..0.57 = load volatile i64, i64* %6, align 8
  %214 = mul nsw i64 %.0..0..0.57, %.087
  %.idx102 = add nsw i64 %214, %.083
  %215 = getelementptr inbounds i64, i64* %17, i64 %.idx102
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %216, %213
  store i64 %217, i64* %12, align 8
  %218 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %210, i64* nonnull dereferenceable(8) %12)
  %219 = load i64, i64* %218, align 8
  %.0..0..0.58 = load volatile i64, i64* %6, align 8
  %220 = mul nsw i64 %.0..0..0.58, %.085
  %.idx103 = add nsw i64 %220, %.083
  %221 = getelementptr inbounds i64, i64* %17, i64 %.idx103
  store i64 %219, i64* %221, align 8
  br label %.backedge

222:                                              ; preds = %18
  %223 = load i32, i32* @x.3, align 4
  %224 = load i32, i32* @y.4, align 4
  %225 = add i32 %223, -1
  %226 = mul i32 %225, %223
  %227 = and i32 %226, 1
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %229, %228
  %231 = select i1 %230, i32 -196782844, i32 -88241729
  br label %.backedge

232:                                              ; preds = %18
  %233 = add i64 %.083, 1
  %234 = load i32, i32* @x.3, align 4
  %235 = load i32, i32* @y.4, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 10819001, i32 -88241729
  br label %.backedge

243:                                              ; preds = %18
  br label %.backedge

244:                                              ; preds = %18
  %245 = load i32, i32* @x.3, align 4
  %246 = load i32, i32* @y.4, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 -1024522712, i32 1033551597
  br label %.backedge

254:                                              ; preds = %18
  %255 = load i32, i32* @x.3, align 4
  %256 = load i32, i32* @y.4, align 4
  %257 = add i32 %255, -1
  %258 = mul i32 %257, %255
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %261, %260
  %263 = select i1 %262, i32 -2132545030, i32 1033551597
  br label %.backedge

264:                                              ; preds = %18
  br label %.backedge

265:                                              ; preds = %18
  %266 = load i32, i32* @x.3, align 4
  %267 = load i32, i32* @y.4, align 4
  %268 = add i32 %266, -1
  %269 = mul i32 %268, %266
  %270 = and i32 %269, 1
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %272, %271
  %274 = select i1 %273, i32 -1674042066, i32 844014385
  br label %.backedge

275:                                              ; preds = %18
  %276 = add i64 %.085, 1
  %277 = load i32, i32* @x.3, align 4
  %278 = load i32, i32* @y.4, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 -239676427, i32 844014385
  br label %.backedge

286:                                              ; preds = %18
  br label %.backedge

287:                                              ; preds = %18
  %288 = load i32, i32* @x.3, align 4
  %289 = load i32, i32* @y.4, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 -970336002, i32 591059875
  br label %.backedge

297:                                              ; preds = %18
  %298 = load i32, i32* @x.3, align 4
  %299 = load i32, i32* @y.4, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 -474759478, i32 591059875
  br label %.backedge

307:                                              ; preds = %18
  br label %.backedge

308:                                              ; preds = %18
  %309 = load i32, i32* @x.3, align 4
  %310 = load i32, i32* @y.4, align 4
  %311 = add i32 %309, -1
  %312 = mul i32 %311, %309
  %313 = and i32 %312, 1
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %315, %314
  %317 = select i1 %316, i32 1055666045, i32 417089133
  br label %.backedge

318:                                              ; preds = %18
  %319 = add i64 %.087, 1
  %320 = load i32, i32* @x.3, align 4
  %321 = load i32, i32* @y.4, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 286058587, i32 417089133
  br label %.backedge

329:                                              ; preds = %18
  br label %.backedge

330:                                              ; preds = %18
  %331 = load i32, i32* @x.3, align 4
  %332 = load i32, i32* @y.4, align 4
  %333 = add i32 %331, -1
  %334 = mul i32 %333, %331
  %335 = and i32 %334, 1
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %337, %336
  %339 = select i1 %338, i32 2125176430, i32 -1304962322
  br label %.backedge

340:                                              ; preds = %18
  %341 = load i32, i32* @x.3, align 4
  %342 = load i32, i32* @y.4, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 1093405198, i32 -1304962322
  br label %.backedge

350:                                              ; preds = %18
  br label %.backedge

351:                                              ; preds = %18
  %352 = load i64, i64* %7, align 8
  %353 = icmp slt i64 %.081, %352
  %354 = select i1 %353, i32 674423985, i32 1371029614
  br label %.backedge

355:                                              ; preds = %18
  %356 = load i32, i32* @x.3, align 4
  %357 = load i32, i32* @y.4, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 -454989149, i32 298154784
  br label %.backedge

365:                                              ; preds = %18
  %.0..0..0.59 = load volatile i64, i64* %6, align 8
  %366 = mul nsw i64 %.0..0..0.59, %.081
  %.idx99 = add nsw i64 %366, %.081
  %367 = getelementptr inbounds i64, i64* %17, i64 %.idx99
  %368 = load i64, i64* %367, align 8
  %369 = icmp slt i64 %368, 0
  store i1 %369, i1* %2, align 1
  %370 = load i32, i32* @x.3, align 4
  %371 = load i32, i32* @y.4, align 4
  %372 = add i32 %370, -1
  %373 = mul i32 %372, %370
  %374 = and i32 %373, 1
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %376, %375
  %378 = select i1 %377, i32 -1777183566, i32 298154784
  br label %.backedge

379:                                              ; preds = %18
  %.0..0..0.75 = load volatile i1, i1* %2, align 1
  %380 = select i1 %.0..0..0.75, i32 2089746496, i32 1687322997
  br label %.backedge

381:                                              ; preds = %18
  %382 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %383 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %382, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

384:                                              ; preds = %18
  %385 = load i32, i32* @x.3, align 4
  %386 = load i32, i32* @y.4, align 4
  %387 = add i32 %385, -1
  %388 = mul i32 %387, %385
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %391, %390
  %393 = select i1 %392, i32 -994011592, i32 1323254491
  br label %.backedge

394:                                              ; preds = %18
  %395 = load i32, i32* @x.3, align 4
  %396 = load i32, i32* @y.4, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 1322803369, i32 1323254491
  br label %.backedge

404:                                              ; preds = %18
  br label %.backedge

405:                                              ; preds = %18
  %406 = add i64 %.081, 1
  br label %.backedge

407:                                              ; preds = %18
  %408 = load i32, i32* @x.3, align 4
  %409 = load i32, i32* @y.4, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 1014531462, i32 1637619
  br label %.backedge

417:                                              ; preds = %18
  %418 = load i32, i32* @x.3, align 4
  %419 = load i32, i32* @y.4, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 -1206575560, i32 1637619
  br label %.backedge

427:                                              ; preds = %18
  br label %.backedge

428:                                              ; preds = %18
  %429 = load i32, i32* @x.3, align 4
  %430 = load i32, i32* @y.4, align 4
  %431 = add i32 %429, -1
  %432 = mul i32 %431, %429
  %433 = and i32 %432, 1
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %435, %434
  %437 = select i1 %436, i32 -217112767, i32 -1967276705
  br label %.backedge

438:                                              ; preds = %18
  %439 = load i64, i64* %7, align 8
  %440 = icmp slt i64 %.079, %439
  store i1 %440, i1* %1, align 1
  %441 = load i32, i32* @x.3, align 4
  %442 = load i32, i32* @y.4, align 4
  %443 = add i32 %441, -1
  %444 = mul i32 %443, %441
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %447, %446
  %449 = select i1 %448, i32 -1641468101, i32 -1967276705
  br label %.backedge

450:                                              ; preds = %18
  %.0..0..0.76 = load volatile i1, i1* %1, align 1
  %451 = select i1 %.0..0..0.76, i32 -1406026202, i32 -2146671530
  br label %.backedge

452:                                              ; preds = %18
  br label %.backedge

453:                                              ; preds = %18
  %454 = load i64, i64* %7, align 8
  %455 = icmp slt i64 %.077, %454
  %456 = select i1 %455, i32 -1127563186, i32 389621418
  br label %.backedge

457:                                              ; preds = %18
  %.not = icmp eq i64 %.077, 0
  %458 = select i1 %.not, i32 -627979425, i32 -1616790304
  br label %.backedge

459:                                              ; preds = %18
  %460 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

461:                                              ; preds = %18
  %.0..0..0.60 = load volatile i64, i64* %6, align 8
  %462 = mul nsw i64 %.0..0..0.60, %.079
  %.idx98 = add nsw i64 %462, %.077
  %463 = getelementptr inbounds i64, i64* %17, i64 %.idx98
  %464 = load i64, i64* %463, align 8
  %465 = icmp sgt i64 %464, 18014398509481983
  %466 = select i1 %465, i32 1043725434, i32 1041437687
  br label %.backedge

467:                                              ; preds = %18
  %468 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

469:                                              ; preds = %18
  %.0..0..0.61 = load volatile i64, i64* %6, align 8
  %470 = mul nsw i64 %.0..0..0.61, %.079
  %.idx = add nsw i64 %470, %.077
  %471 = getelementptr inbounds i64, i64* %17, i64 %.idx
  %472 = load i64, i64* %471, align 8
  %473 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %472)
  br label %.backedge

474:                                              ; preds = %18
  br label %.backedge

475:                                              ; preds = %18
  %476 = add i64 %.077, 1
  br label %.backedge

477:                                              ; preds = %18
  %478 = load i32, i32* @x.3, align 4
  %479 = load i32, i32* @y.4, align 4
  %480 = add i32 %478, -1
  %481 = mul i32 %480, %478
  %482 = and i32 %481, 1
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %484, %483
  %486 = select i1 %485, i32 1647559279, i32 321869283
  br label %.backedge

487:                                              ; preds = %18
  %488 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %489 = load i32, i32* @x.3, align 4
  %490 = load i32, i32* @y.4, align 4
  %491 = add i32 %489, -1
  %492 = mul i32 %491, %489
  %493 = and i32 %492, 1
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %495, %494
  %497 = select i1 %496, i32 -1758239178, i32 321869283
  br label %.backedge

498:                                              ; preds = %18
  br label %.backedge

499:                                              ; preds = %18
  %.neg97 = add i64 %.079, 1
  br label %.backedge

500:                                              ; preds = %18
  %501 = load i32, i32* @x.3, align 4
  %502 = load i32, i32* @y.4, align 4
  %503 = add i32 %501, -1
  %504 = mul i32 %503, %501
  %505 = and i32 %504, 1
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %502, 10
  %508 = or i1 %507, %506
  %509 = select i1 %508, i32 -821533061, i32 -1630798095
  br label %.backedge

510:                                              ; preds = %18
  %511 = load i32, i32* @x.3, align 4
  %512 = load i32, i32* @y.4, align 4
  %513 = add i32 %511, -1
  %514 = mul i32 %513, %511
  %515 = and i32 %514, 1
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %517, %516
  %519 = select i1 %518, i32 -1738451952, i32 -1630798095
  br label %.backedge

520:                                              ; preds = %18
  br label %.backedge

521:                                              ; preds = %18
  ret i32 0

522:                                              ; preds = %18
  br label %.backedge

523:                                              ; preds = %18
  %.neg = add i64 %.091, 1
  br label %.backedge

524:                                              ; preds = %18
  br label %.backedge

525:                                              ; preds = %18
  %526 = add i64 %.093, 1
  br label %.backedge

527:                                              ; preds = %18
  br label %.backedge

528:                                              ; preds = %18
  br label %.backedge

529:                                              ; preds = %18
  br label %.backedge

530:                                              ; preds = %18
  %531 = add i64 %.083, 1
  br label %.backedge

532:                                              ; preds = %18
  br label %.backedge

533:                                              ; preds = %18
  %534 = add i64 %.085, 1
  br label %.backedge

535:                                              ; preds = %18
  br label %.backedge

536:                                              ; preds = %18
  %537 = add i64 %.087, 1
  br label %.backedge

538:                                              ; preds = %18
  br label %.backedge

539:                                              ; preds = %18
  %.0..0..0.62 = load volatile i64, i64* %6, align 8
  %.0..0..0.63 = load volatile i64, i64* %6, align 8
  %.0..0..0.64 = load volatile i64, i64* %6, align 8
  %.0..0..0.65 = load volatile i64, i64* %6, align 8
  %.0..0..0.66 = load volatile i64, i64* %6, align 8
  %.0..0..0.67 = load volatile i64, i64* %6, align 8
  %.0..0..0.68 = load volatile i64, i64* %6, align 8
  %.0..0..0.69 = load volatile i64, i64* %6, align 8
  %.0..0..0.70 = load volatile i64, i64* %6, align 8
  %.0..0..0.71 = load volatile i64, i64* %6, align 8
  br label %.backedge

540:                                              ; preds = %18
  br label %.backedge

541:                                              ; preds = %18
  br label %.backedge

542:                                              ; preds = %18
  br label %.backedge

543:                                              ; preds = %18
  %544 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

545:                                              ; preds = %18
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i64* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -1358262747, %2 ], [ -292229413, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 -1358262747, label %8
    i32 1019853521, label %.outer.backedge
    i32 -1896003112, label %11
    i32 -292229413, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %9 = icmp slt i64 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 1019853521, i32 -1896003112
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i64* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i64* %.07.ph
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s848974105.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
