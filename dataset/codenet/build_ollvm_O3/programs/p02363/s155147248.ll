; ModuleID = 'build_ollvm/programs/p02363/s155147248.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s155147248.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@b = global [102 x [102 x i64]] zeroinitializer, align 16
@v = global i64 0, align 8
@e = global i64 0, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c" INF\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s155147248.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -213216689, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -213216689, label %11
    i32 1359292216, label %14
    i32 654250272, label %25
    i32 1621317974, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1359292216, i32 1621317974
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 654250272, i32 1621317974
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1359292216, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) @v)
  %12 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %11, i64* nonnull dereferenceable(8) @e)
  br label %13

13:                                               ; preds = %.backedge, %0
  %.086 = phi i32 [ 1, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.0 = phi i32 [ 182209687, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 182209687, label %14
    i32 1589513371, label %18
    i32 -843796442, label %19
    i32 -134615877, label %23
    i32 -2038245676, label %26
    i32 250797016, label %36
    i32 660875457, label %49
    i32 -613317859, label %50
    i32 1931475788, label %60
    i32 1804336732, label %73
    i32 1097969039, label %74
    i32 1039436769, label %75
    i32 -1622809081, label %77
    i32 2073838953, label %78
    i32 -1772924246, label %80
    i32 776468388, label %81
    i32 -830058072, label %86
    i32 -394292681, label %99
    i32 1392959078, label %109
    i32 707403663, label %119
    i32 -2073437312, label %120
    i32 1966679292, label %121
    i32 -792243185, label %125
    i32 1797231741, label %126
    i32 1878032223, label %136
    i32 -1477020769, label %149
    i32 1203571307, label %151
    i32 2095442967, label %161
    i32 -1582062691, label %171
    i32 77723844, label %172
    i32 686250593, label %176
    i32 523834633, label %186
    i32 -1418704674, label %208
    i32 -1699101545, label %210
    i32 -1526263202, label %220
    i32 -1279398611, label %235
    i32 321984183, label %237
    i32 1580186892, label %240
    i32 241893270, label %241
    i32 2024131094, label %251
    i32 1671607937, label %261
    i32 86489869, label %262
    i32 -1570832175, label %272
    i32 63521628, label %282
    i32 1581904061, label %283
    i32 841310940, label %284
    i32 -446037839, label %286
    i32 -862480649, label %287
    i32 27046389, label %289
    i32 -231091923, label %290
    i32 374938450, label %300
    i32 -962747515, label %313
    i32 -1203099350, label %315
    i32 -1005135372, label %316
    i32 -405916491, label %326
    i32 1177834323, label %339
    i32 -544259189, label %341
    i32 -1420722548, label %343
    i32 641155383, label %350
    i32 -1320113181, label %360
    i32 -1083111746, label %371
    i32 2121152805, label %372
    i32 1933399105, label %379
    i32 -194598192, label %380
    i32 -1308859446, label %387
    i32 -910824273, label %389
    i32 252519339, label %395
    i32 661864467, label %396
    i32 1302398400, label %397
    i32 -541313386, label %399
    i32 -136554809, label %401
    i32 -2088786447, label %403
    i32 -179029472, label %413
    i32 355446567, label %423
    i32 -36073064, label %424
    i32 255731279, label %428
    i32 -1529014616, label %432
    i32 -2142603097, label %434
    i32 1757083150, label %435
    i32 404115812, label %436
    i32 -920578941, label %448
    i32 -432781153, label %449
    i32 1873062631, label %450
    i32 -566024907, label %452
    i32 969966685, label %453
    i32 280787112, label %454
    i32 -1214603906, label %456
  ]

.backedge:                                        ; preds = %13, %456, %454, %453, %452, %450, %449, %448, %436, %435, %434, %432, %428, %424, %413, %403, %401, %399, %397, %396, %395, %389, %387, %380, %379, %372, %371, %360, %350, %343, %341, %339, %326, %316, %315, %313, %300, %290, %289, %287, %286, %284, %283, %282, %272, %262, %261, %251, %241, %240, %237, %235, %220, %210, %208, %186, %176, %172, %171, %161, %151, %149, %136, %126, %125, %121, %120, %119, %109, %99, %86, %81, %80, %78, %77, %75, %74, %73, %60, %50, %49, %36, %26, %23, %19, %18, %14
  %.086.be = phi i32 [ %.086, %13 ], [ %.086, %456 ], [ %.086, %454 ], [ %.086, %453 ], [ %.086, %452 ], [ %.086, %450 ], [ %.086, %449 ], [ %.086, %448 ], [ %.086, %436 ], [ %.086, %435 ], [ %.086, %434 ], [ %.086, %432 ], [ %.086, %428 ], [ %.086, %424 ], [ %.086, %413 ], [ %.086, %403 ], [ %.086, %401 ], [ %.086, %399 ], [ %.086, %397 ], [ %.086, %396 ], [ %.086, %395 ], [ %.086, %389 ], [ %.086, %387 ], [ %.086, %380 ], [ %.086, %379 ], [ %.086, %372 ], [ %.086, %371 ], [ %.086, %360 ], [ %.086, %350 ], [ %.086, %343 ], [ %.086, %341 ], [ %.086, %339 ], [ %.086, %326 ], [ %.086, %316 ], [ %.086, %315 ], [ %.086, %313 ], [ %.086, %300 ], [ %.086, %290 ], [ %.086, %289 ], [ %.086, %287 ], [ %.086, %286 ], [ %.086, %284 ], [ %.086, %283 ], [ %.086, %282 ], [ %.086, %272 ], [ %.086, %262 ], [ %.086, %261 ], [ %.086, %251 ], [ %.086, %241 ], [ %.086, %240 ], [ %.086, %237 ], [ %.086, %235 ], [ %.086, %220 ], [ %.086, %210 ], [ %.086, %208 ], [ %.086, %186 ], [ %.086, %176 ], [ %.086, %172 ], [ %.086, %171 ], [ %.086, %161 ], [ %.086, %151 ], [ %.086, %149 ], [ %.086, %136 ], [ %.086, %126 ], [ %.086, %125 ], [ %.086, %121 ], [ %.086, %120 ], [ %.086, %119 ], [ %.086, %109 ], [ %.086, %99 ], [ %.086, %86 ], [ %.086, %81 ], [ %.086, %80 ], [ %79, %78 ], [ %.086, %77 ], [ %.086, %75 ], [ %.086, %74 ], [ %.086, %73 ], [ %.086, %60 ], [ %.086, %50 ], [ %.086, %49 ], [ %.086, %36 ], [ %.086, %26 ], [ %.086, %23 ], [ %.086, %19 ], [ %.086, %18 ], [ %.086, %14 ]
  %.084.be = phi i32 [ %.084, %13 ], [ %.084, %456 ], [ %.084, %454 ], [ %.084, %453 ], [ %.084, %452 ], [ %.084, %450 ], [ %.084, %449 ], [ %.084, %448 ], [ %.084, %436 ], [ %.084, %435 ], [ %.084, %434 ], [ %.084, %432 ], [ %.084, %428 ], [ %.084, %424 ], [ %.084, %413 ], [ %.084, %403 ], [ %.084, %401 ], [ %.084, %399 ], [ %.084, %397 ], [ %.084, %396 ], [ %.084, %395 ], [ %.084, %389 ], [ %.084, %387 ], [ %.084, %380 ], [ %.084, %379 ], [ %.084, %372 ], [ %.084, %371 ], [ %.084, %360 ], [ %.084, %350 ], [ %.084, %343 ], [ %.084, %341 ], [ %.084, %339 ], [ %.084, %326 ], [ %.084, %316 ], [ %.084, %315 ], [ %.084, %313 ], [ %.084, %300 ], [ %.084, %290 ], [ %.084, %289 ], [ %.084, %287 ], [ %.084, %286 ], [ %.084, %284 ], [ %.084, %283 ], [ %.084, %282 ], [ %.084, %272 ], [ %.084, %262 ], [ %.084, %261 ], [ %.084, %251 ], [ %.084, %241 ], [ %.084, %240 ], [ %.084, %237 ], [ %.084, %235 ], [ %.084, %220 ], [ %.084, %210 ], [ %.084, %208 ], [ %.084, %186 ], [ %.084, %176 ], [ %.084, %172 ], [ %.084, %171 ], [ %.084, %161 ], [ %.084, %151 ], [ %.084, %149 ], [ %.084, %136 ], [ %.084, %126 ], [ %.084, %125 ], [ %.084, %121 ], [ %.084, %120 ], [ %.084, %119 ], [ %.084, %109 ], [ %.084, %99 ], [ %.084, %86 ], [ %.084, %81 ], [ %.084, %80 ], [ %.084, %78 ], [ %.084, %77 ], [ %76, %75 ], [ %.084, %74 ], [ %.084, %73 ], [ %.084, %60 ], [ %.084, %50 ], [ %.084, %49 ], [ %.084, %36 ], [ %.084, %26 ], [ %.084, %23 ], [ %.084, %19 ], [ 1, %18 ], [ %.084, %14 ]
  %.082.be = phi i32 [ %.082, %13 ], [ %.082, %456 ], [ %.082, %454 ], [ %.082, %453 ], [ %.082, %452 ], [ %.082, %450 ], [ %.082, %449 ], [ %.082, %448 ], [ %.082, %436 ], [ %.082, %435 ], [ %.082, %434 ], [ %433, %432 ], [ %.082, %428 ], [ %.082, %424 ], [ %.082, %413 ], [ %.082, %403 ], [ %.082, %401 ], [ %.082, %399 ], [ %.082, %397 ], [ %.082, %396 ], [ %.082, %395 ], [ %.082, %389 ], [ %.082, %387 ], [ %.082, %380 ], [ %.082, %379 ], [ %.082, %372 ], [ %.082, %371 ], [ %.082, %360 ], [ %.082, %350 ], [ %.082, %343 ], [ %.082, %341 ], [ %.082, %339 ], [ %.082, %326 ], [ %.082, %316 ], [ %.082, %315 ], [ %.082, %313 ], [ %.082, %300 ], [ %.082, %290 ], [ %.082, %289 ], [ %.082, %287 ], [ %.082, %286 ], [ %.082, %284 ], [ %.082, %283 ], [ %.082, %282 ], [ %.082, %272 ], [ %.082, %262 ], [ %.082, %261 ], [ %.082, %251 ], [ %.082, %241 ], [ %.082, %240 ], [ %.082, %237 ], [ %.082, %235 ], [ %.082, %220 ], [ %.082, %210 ], [ %.082, %208 ], [ %.082, %186 ], [ %.082, %176 ], [ %.082, %172 ], [ %.082, %171 ], [ %.082, %161 ], [ %.082, %151 ], [ %.082, %149 ], [ %.082, %136 ], [ %.082, %126 ], [ %.082, %125 ], [ %.082, %121 ], [ %.082, %120 ], [ %.082, %119 ], [ %.neg92, %109 ], [ %.082, %99 ], [ %.082, %86 ], [ %.082, %81 ], [ 0, %80 ], [ %.082, %78 ], [ %.082, %77 ], [ %.082, %75 ], [ %.082, %74 ], [ %.082, %73 ], [ %.082, %60 ], [ %.082, %50 ], [ %.082, %49 ], [ %.082, %36 ], [ %.082, %26 ], [ %.082, %23 ], [ %.082, %19 ], [ %.082, %18 ], [ %.082, %14 ]
  %.080.be = phi i32 [ %.080, %13 ], [ %.080, %456 ], [ %.080, %454 ], [ %.080, %453 ], [ %.080, %452 ], [ %.080, %450 ], [ %.080, %449 ], [ %.080, %448 ], [ %.080, %436 ], [ %.080, %435 ], [ %.080, %434 ], [ %.080, %432 ], [ %.080, %428 ], [ %.080, %424 ], [ %.080, %413 ], [ %.080, %403 ], [ %.080, %401 ], [ %.080, %399 ], [ %.080, %397 ], [ %.080, %396 ], [ %.080, %395 ], [ %.080, %389 ], [ %.080, %387 ], [ %.080, %380 ], [ %.080, %379 ], [ %.080, %372 ], [ %.080, %371 ], [ %.080, %360 ], [ %.080, %350 ], [ %.080, %343 ], [ %.080, %341 ], [ %.080, %339 ], [ %.080, %326 ], [ %.080, %316 ], [ %.080, %315 ], [ %.080, %313 ], [ %.080, %300 ], [ %.080, %290 ], [ %.080, %289 ], [ %288, %287 ], [ %.080, %286 ], [ %.080, %284 ], [ %.080, %283 ], [ %.080, %282 ], [ %.080, %272 ], [ %.080, %262 ], [ %.080, %261 ], [ %.080, %251 ], [ %.080, %241 ], [ %.080, %240 ], [ %.080, %237 ], [ %.080, %235 ], [ %.080, %220 ], [ %.080, %210 ], [ %.080, %208 ], [ %.080, %186 ], [ %.080, %176 ], [ %.080, %172 ], [ %.080, %171 ], [ %.080, %161 ], [ %.080, %151 ], [ %.080, %149 ], [ %.080, %136 ], [ %.080, %126 ], [ %.080, %125 ], [ %.080, %121 ], [ 1, %120 ], [ %.080, %119 ], [ %.080, %109 ], [ %.080, %99 ], [ %.080, %86 ], [ %.080, %81 ], [ %.080, %80 ], [ %.080, %78 ], [ %.080, %77 ], [ %.080, %75 ], [ %.080, %74 ], [ %.080, %73 ], [ %.080, %60 ], [ %.080, %50 ], [ %.080, %49 ], [ %.080, %36 ], [ %.080, %26 ], [ %.080, %23 ], [ %.080, %19 ], [ %.080, %18 ], [ %.080, %14 ]
  %.078.be = phi i32 [ %.078, %13 ], [ %.078, %456 ], [ %.078, %454 ], [ %.078, %453 ], [ %.078, %452 ], [ %.078, %450 ], [ %.078, %449 ], [ %.078, %448 ], [ %.078, %436 ], [ %.078, %435 ], [ %.078, %434 ], [ %.078, %432 ], [ %.078, %428 ], [ %.078, %424 ], [ %.078, %413 ], [ %.078, %403 ], [ %.078, %401 ], [ %.078, %399 ], [ %.078, %397 ], [ %.078, %396 ], [ %.078, %395 ], [ %.078, %389 ], [ %.078, %387 ], [ %.078, %380 ], [ %.078, %379 ], [ %.078, %372 ], [ %.078, %371 ], [ %.078, %360 ], [ %.078, %350 ], [ %.078, %343 ], [ %.078, %341 ], [ %.078, %339 ], [ %.078, %326 ], [ %.078, %316 ], [ %.078, %315 ], [ %.078, %313 ], [ %.078, %300 ], [ %.078, %290 ], [ %.078, %289 ], [ %.078, %287 ], [ %.078, %286 ], [ %285, %284 ], [ %.078, %283 ], [ %.078, %282 ], [ %.078, %272 ], [ %.078, %262 ], [ %.078, %261 ], [ %.078, %251 ], [ %.078, %241 ], [ %.078, %240 ], [ %.078, %237 ], [ %.078, %235 ], [ %.078, %220 ], [ %.078, %210 ], [ %.078, %208 ], [ %.078, %186 ], [ %.078, %176 ], [ %.078, %172 ], [ %.078, %171 ], [ %.078, %161 ], [ %.078, %151 ], [ %.078, %149 ], [ %.078, %136 ], [ %.078, %126 ], [ 1, %125 ], [ %.078, %121 ], [ %.078, %120 ], [ %.078, %119 ], [ %.078, %109 ], [ %.078, %99 ], [ %.078, %86 ], [ %.078, %81 ], [ %.078, %80 ], [ %.078, %78 ], [ %.078, %77 ], [ %.078, %75 ], [ %.078, %74 ], [ %.078, %73 ], [ %.078, %60 ], [ %.078, %50 ], [ %.078, %49 ], [ %.078, %36 ], [ %.078, %26 ], [ %.078, %23 ], [ %.078, %19 ], [ %.078, %18 ], [ %.078, %14 ]
  %.076.be = phi i32 [ %.076, %13 ], [ %.076, %456 ], [ %.076, %454 ], [ %.076, %453 ], [ %.076, %452 ], [ %451, %450 ], [ %.076, %449 ], [ %.076, %448 ], [ %.076, %436 ], [ 1, %435 ], [ %.076, %434 ], [ %.076, %432 ], [ %.076, %428 ], [ %.076, %424 ], [ %.076, %413 ], [ %.076, %403 ], [ %.076, %401 ], [ %.076, %399 ], [ %.076, %397 ], [ %.076, %396 ], [ %.076, %395 ], [ %.076, %389 ], [ %.076, %387 ], [ %.076, %380 ], [ %.076, %379 ], [ %.076, %372 ], [ %.076, %371 ], [ %.076, %360 ], [ %.076, %350 ], [ %.076, %343 ], [ %.076, %341 ], [ %.076, %339 ], [ %.076, %326 ], [ %.076, %316 ], [ %.076, %315 ], [ %.076, %313 ], [ %.076, %300 ], [ %.076, %290 ], [ %.076, %289 ], [ %.076, %287 ], [ %.076, %286 ], [ %.076, %284 ], [ %.076, %283 ], [ %.076, %282 ], [ %.neg, %272 ], [ %.076, %262 ], [ %.076, %261 ], [ %.076, %251 ], [ %.076, %241 ], [ %.076, %240 ], [ %.076, %237 ], [ %.076, %235 ], [ %.076, %220 ], [ %.076, %210 ], [ %.076, %208 ], [ %.076, %186 ], [ %.076, %176 ], [ %.076, %172 ], [ %.076, %171 ], [ 1, %161 ], [ %.076, %151 ], [ %.076, %149 ], [ %.076, %136 ], [ %.076, %126 ], [ %.076, %125 ], [ %.076, %121 ], [ %.076, %120 ], [ %.076, %119 ], [ %.076, %109 ], [ %.076, %99 ], [ %.076, %86 ], [ %.076, %81 ], [ %.076, %80 ], [ %.076, %78 ], [ %.076, %77 ], [ %.076, %75 ], [ %.076, %74 ], [ %.076, %73 ], [ %.076, %60 ], [ %.076, %50 ], [ %.076, %49 ], [ %.076, %36 ], [ %.076, %26 ], [ %.076, %23 ], [ %.076, %19 ], [ %.076, %18 ], [ %.076, %14 ]
  %.074.be = phi i32 [ %.074, %13 ], [ %.074, %456 ], [ %.074, %454 ], [ %.074, %453 ], [ %.074, %452 ], [ %.074, %450 ], [ %.074, %449 ], [ %.074, %448 ], [ %.074, %436 ], [ %.074, %435 ], [ %.074, %434 ], [ %.074, %432 ], [ %.074, %428 ], [ %.074, %424 ], [ %.074, %413 ], [ %.074, %403 ], [ %402, %401 ], [ %.074, %399 ], [ %.074, %397 ], [ %.074, %396 ], [ %.074, %395 ], [ %.074, %389 ], [ %.074, %387 ], [ %.074, %380 ], [ %.074, %379 ], [ %.074, %372 ], [ %.074, %371 ], [ %.074, %360 ], [ %.074, %350 ], [ %.074, %343 ], [ %.074, %341 ], [ %.074, %339 ], [ %.074, %326 ], [ %.074, %316 ], [ %.074, %315 ], [ %.074, %313 ], [ %.074, %300 ], [ %.074, %290 ], [ 1, %289 ], [ %.074, %287 ], [ %.074, %286 ], [ %.074, %284 ], [ %.074, %283 ], [ %.074, %282 ], [ %.074, %272 ], [ %.074, %262 ], [ %.074, %261 ], [ %.074, %251 ], [ %.074, %241 ], [ %.074, %240 ], [ %.074, %237 ], [ %.074, %235 ], [ %.074, %220 ], [ %.074, %210 ], [ %.074, %208 ], [ %.074, %186 ], [ %.074, %176 ], [ %.074, %172 ], [ %.074, %171 ], [ %.074, %161 ], [ %.074, %151 ], [ %.074, %149 ], [ %.074, %136 ], [ %.074, %126 ], [ %.074, %125 ], [ %.074, %121 ], [ %.074, %120 ], [ %.074, %119 ], [ %.074, %109 ], [ %.074, %99 ], [ %.074, %86 ], [ %.074, %81 ], [ %.074, %80 ], [ %.074, %78 ], [ %.074, %77 ], [ %.074, %75 ], [ %.074, %74 ], [ %.074, %73 ], [ %.074, %60 ], [ %.074, %50 ], [ %.074, %49 ], [ %.074, %36 ], [ %.074, %26 ], [ %.074, %23 ], [ %.074, %19 ], [ %.074, %18 ], [ %.074, %14 ]
  %.072.be = phi i32 [ %.072, %13 ], [ %.072, %456 ], [ %.072, %454 ], [ %.072, %453 ], [ %.072, %452 ], [ %.072, %450 ], [ %.072, %449 ], [ %.072, %448 ], [ %.072, %436 ], [ %.072, %435 ], [ %.072, %434 ], [ %.072, %432 ], [ %.072, %428 ], [ %.072, %424 ], [ %.072, %413 ], [ %.072, %403 ], [ %.072, %401 ], [ %.072, %399 ], [ %398, %397 ], [ %.072, %396 ], [ %.072, %395 ], [ %.072, %389 ], [ %.072, %387 ], [ %.072, %380 ], [ %.072, %379 ], [ %.072, %372 ], [ %.072, %371 ], [ %.072, %360 ], [ %.072, %350 ], [ %.072, %343 ], [ %.072, %341 ], [ %.072, %339 ], [ %.072, %326 ], [ %.072, %316 ], [ 1, %315 ], [ %.072, %313 ], [ %.072, %300 ], [ %.072, %290 ], [ %.072, %289 ], [ %.072, %287 ], [ %.072, %286 ], [ %.072, %284 ], [ %.072, %283 ], [ %.072, %282 ], [ %.072, %272 ], [ %.072, %262 ], [ %.072, %261 ], [ %.072, %251 ], [ %.072, %241 ], [ %.072, %240 ], [ %.072, %237 ], [ %.072, %235 ], [ %.072, %220 ], [ %.072, %210 ], [ %.072, %208 ], [ %.072, %186 ], [ %.072, %176 ], [ %.072, %172 ], [ %.072, %171 ], [ %.072, %161 ], [ %.072, %151 ], [ %.072, %149 ], [ %.072, %136 ], [ %.072, %126 ], [ %.072, %125 ], [ %.072, %121 ], [ %.072, %120 ], [ %.072, %119 ], [ %.072, %109 ], [ %.072, %99 ], [ %.072, %86 ], [ %.072, %81 ], [ %.072, %80 ], [ %.072, %78 ], [ %.072, %77 ], [ %.072, %75 ], [ %.072, %74 ], [ %.072, %73 ], [ %.072, %60 ], [ %.072, %50 ], [ %.072, %49 ], [ %.072, %36 ], [ %.072, %26 ], [ %.072, %23 ], [ %.072, %19 ], [ %.072, %18 ], [ %.072, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ -179029472, %456 ], [ -1320113181, %454 ], [ -405916491, %453 ], [ 374938450, %452 ], [ -1570832175, %450 ], [ 2024131094, %449 ], [ -1526263202, %448 ], [ 523834633, %436 ], [ 2095442967, %435 ], [ 1878032223, %434 ], [ 1392959078, %432 ], [ 1931475788, %428 ], [ 250797016, %424 ], [ %422, %413 ], [ %412, %403 ], [ -231091923, %401 ], [ -136554809, %399 ], [ -1005135372, %397 ], [ 1302398400, %396 ], [ 661864467, %395 ], [ 252519339, %389 ], [ 252519339, %387 ], [ %386, %380 ], [ 661864467, %379 ], [ 1933399105, %372 ], [ 1933399105, %371 ], [ %370, %360 ], [ %359, %350 ], [ %349, %343 ], [ %342, %341 ], [ %340, %339 ], [ %338, %326 ], [ %325, %316 ], [ -1005135372, %315 ], [ %314, %313 ], [ %312, %300 ], [ %299, %290 ], [ -231091923, %289 ], [ 1966679292, %287 ], [ -862480649, %286 ], [ 1797231741, %284 ], [ 841310940, %283 ], [ 77723844, %282 ], [ %281, %272 ], [ %271, %262 ], [ 86489869, %261 ], [ %260, %251 ], [ %250, %241 ], [ 241893270, %240 ], [ -2088786447, %237 ], [ %236, %235 ], [ %234, %220 ], [ %219, %210 ], [ %209, %208 ], [ %207, %186 ], [ %185, %176 ], [ %175, %172 ], [ 77723844, %171 ], [ %170, %161 ], [ %160, %151 ], [ %150, %149 ], [ %148, %136 ], [ %135, %126 ], [ 1797231741, %125 ], [ %124, %121 ], [ 1966679292, %120 ], [ 776468388, %119 ], [ %118, %109 ], [ %108, %99 ], [ -394292681, %86 ], [ %85, %81 ], [ 776468388, %80 ], [ 182209687, %78 ], [ 2073838953, %77 ], [ -843796442, %75 ], [ 1039436769, %74 ], [ 1097969039, %73 ], [ %72, %60 ], [ %59, %50 ], [ 1097969039, %49 ], [ %48, %36 ], [ %35, %26 ], [ %25, %23 ], [ %22, %19 ], [ -843796442, %18 ], [ %17, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = sext i32 %.086 to i64
  %16 = load i64, i64* @v, align 8
  %.not94 = icmp slt i64 %16, %15
  %17 = select i1 %.not94, i32 -1772924246, i32 1589513371
  br label %.backedge

18:                                               ; preds = %13
  br label %.backedge

19:                                               ; preds = %13
  %20 = sext i32 %.084 to i64
  %21 = load i64, i64* @v, align 8
  %.not93 = icmp slt i64 %21, %20
  %22 = select i1 %.not93, i32 -1622809081, i32 -134615877
  br label %.backedge

23:                                               ; preds = %13
  %24 = icmp eq i32 %.086, %.084
  %25 = select i1 %24, i32 -2038245676, i32 -613317859
  br label %.backedge

26:                                               ; preds = %13
  %27 = load i32, i32* @x.4, align 4
  %28 = load i32, i32* @y.5, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 250797016, i32 -36073064
  br label %.backedge

36:                                               ; preds = %13
  %37 = sext i32 %.086 to i64
  %38 = sext i32 %.084 to i64
  %39 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %37, i64 %38
  store i64 0, i64* %39, align 8
  %40 = load i32, i32* @x.4, align 4
  %41 = load i32, i32* @y.5, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 660875457, i32 -36073064
  br label %.backedge

49:                                               ; preds = %13
  br label %.backedge

50:                                               ; preds = %13
  %51 = load i32, i32* @x.4, align 4
  %52 = load i32, i32* @y.5, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 1931475788, i32 255731279
  br label %.backedge

60:                                               ; preds = %13
  %61 = sext i32 %.086 to i64
  %62 = sext i32 %.084 to i64
  %63 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %61, i64 %62
  store i64 1000000000000000000, i64* %63, align 8
  %64 = load i32, i32* @x.4, align 4
  %65 = load i32, i32* @y.5, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 1804336732, i32 255731279
  br label %.backedge

73:                                               ; preds = %13
  br label %.backedge

74:                                               ; preds = %13
  br label %.backedge

75:                                               ; preds = %13
  %76 = add i32 %.084, 1
  br label %.backedge

77:                                               ; preds = %13
  br label %.backedge

78:                                               ; preds = %13
  %79 = add i32 %.086, 1
  br label %.backedge

80:                                               ; preds = %13
  br label %.backedge

81:                                               ; preds = %13
  %82 = sext i32 %.082 to i64
  %83 = load i64, i64* @e, align 8
  %84 = icmp sgt i64 %83, %82
  %85 = select i1 %84, i32 -830058072, i32 -2073437312
  br label %.backedge

86:                                               ; preds = %13
  %87 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %88 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %87, i32* nonnull dereferenceable(4) %8)
  %89 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %88, i32* nonnull dereferenceable(4) %9)
  %90 = load i32, i32* %9, align 4
  %91 = sext i32 %90 to i64
  %92 = load i32, i32* %7, align 4
  %93 = add i32 %92, 1
  %94 = sext i32 %93 to i64
  %95 = load i32, i32* %8, align 4
  %96 = add i32 %95, 1
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %94, i64 %97
  store i64 %91, i64* %98, align 8
  br label %.backedge

99:                                               ; preds = %13
  %100 = load i32, i32* @x.4, align 4
  %101 = load i32, i32* @y.5, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 1392959078, i32 -1529014616
  br label %.backedge

109:                                              ; preds = %13
  %.neg92 = add i32 %.082, 1
  %110 = load i32, i32* @x.4, align 4
  %111 = load i32, i32* @y.5, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 707403663, i32 -1529014616
  br label %.backedge

119:                                              ; preds = %13
  br label %.backedge

120:                                              ; preds = %13
  br label %.backedge

121:                                              ; preds = %13
  %122 = sext i32 %.080 to i64
  %123 = load i64, i64* @v, align 8
  %.not91 = icmp slt i64 %123, %122
  %124 = select i1 %.not91, i32 27046389, i32 -792243185
  br label %.backedge

125:                                              ; preds = %13
  br label %.backedge

126:                                              ; preds = %13
  %127 = load i32, i32* @x.4, align 4
  %128 = load i32, i32* @y.5, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 1878032223, i32 -2142603097
  br label %.backedge

136:                                              ; preds = %13
  %137 = sext i32 %.078 to i64
  %138 = load i64, i64* @v, align 8
  %139 = icmp sge i64 %138, %137
  store i1 %139, i1* %6, align 1
  %140 = load i32, i32* @x.4, align 4
  %141 = load i32, i32* @y.5, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 -1477020769, i32 -2142603097
  br label %.backedge

149:                                              ; preds = %13
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %150 = select i1 %.0..0..0., i32 1203571307, i32 -446037839
  br label %.backedge

151:                                              ; preds = %13
  %152 = load i32, i32* @x.4, align 4
  %153 = load i32, i32* @y.5, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 2095442967, i32 1757083150
  br label %.backedge

161:                                              ; preds = %13
  %162 = load i32, i32* @x.4, align 4
  %163 = load i32, i32* @y.5, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 -1582062691, i32 1757083150
  br label %.backedge

171:                                              ; preds = %13
  br label %.backedge

172:                                              ; preds = %13
  %173 = sext i32 %.076 to i64
  %174 = load i64, i64* @v, align 8
  %.not90 = icmp slt i64 %174, %173
  %175 = select i1 %.not90, i32 1581904061, i32 686250593
  br label %.backedge

176:                                              ; preds = %13
  %177 = load i32, i32* @x.4, align 4
  %178 = load i32, i32* @y.5, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 523834633, i32 404115812
  br label %.backedge

186:                                              ; preds = %13
  %187 = sext i32 %.078 to i64
  %188 = sext i32 %.076 to i64
  %189 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %187, i64 %188
  %190 = sext i32 %.080 to i64
  %191 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %187, i64 %190
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %190, i64 %188
  %194 = load i64, i64* %193, align 8
  %195 = add i64 %194, %192
  store i64 %195, i64* %10, align 8
  %196 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %189, i64* nonnull dereferenceable(8) %10)
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %189, align 8
  %198 = icmp eq i32 %.078, %.076
  store i1 %198, i1* %5, align 1
  %199 = load i32, i32* @x.4, align 4
  %200 = load i32, i32* @y.5, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 -1418704674, i32 404115812
  br label %.backedge

208:                                              ; preds = %13
  %.0..0..0.67 = load volatile i1, i1* %5, align 1
  %209 = select i1 %.0..0..0.67, i32 -1699101545, i32 241893270
  br label %.backedge

210:                                              ; preds = %13
  %211 = load i32, i32* @x.4, align 4
  %212 = load i32, i32* @y.5, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 -1526263202, i32 -920578941
  br label %.backedge

220:                                              ; preds = %13
  %221 = sext i32 %.078 to i64
  %222 = sext i32 %.076 to i64
  %223 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %221, i64 %222
  %224 = load i64, i64* %223, align 8
  %225 = icmp slt i64 %224, 0
  store i1 %225, i1* %4, align 1
  %226 = load i32, i32* @x.4, align 4
  %227 = load i32, i32* @y.5, align 4
  %228 = add i32 %226, -1
  %229 = mul i32 %228, %226
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %232, %231
  %234 = select i1 %233, i32 -1279398611, i32 -920578941
  br label %.backedge

235:                                              ; preds = %13
  %.0..0..0.68 = load volatile i1, i1* %4, align 1
  %236 = select i1 %.0..0..0.68, i32 321984183, i32 1580186892
  br label %.backedge

237:                                              ; preds = %13
  %238 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %239 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %238, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

240:                                              ; preds = %13
  br label %.backedge

241:                                              ; preds = %13
  %242 = load i32, i32* @x.4, align 4
  %243 = load i32, i32* @y.5, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 2024131094, i32 -432781153
  br label %.backedge

251:                                              ; preds = %13
  %252 = load i32, i32* @x.4, align 4
  %253 = load i32, i32* @y.5, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 1671607937, i32 -432781153
  br label %.backedge

261:                                              ; preds = %13
  br label %.backedge

262:                                              ; preds = %13
  %263 = load i32, i32* @x.4, align 4
  %264 = load i32, i32* @y.5, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 -1570832175, i32 1873062631
  br label %.backedge

272:                                              ; preds = %13
  %.neg = add i32 %.076, 1
  %273 = load i32, i32* @x.4, align 4
  %274 = load i32, i32* @y.5, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 63521628, i32 1873062631
  br label %.backedge

282:                                              ; preds = %13
  br label %.backedge

283:                                              ; preds = %13
  br label %.backedge

284:                                              ; preds = %13
  %285 = add i32 %.078, 1
  br label %.backedge

286:                                              ; preds = %13
  br label %.backedge

287:                                              ; preds = %13
  %288 = add i32 %.080, 1
  br label %.backedge

289:                                              ; preds = %13
  br label %.backedge

290:                                              ; preds = %13
  %291 = load i32, i32* @x.4, align 4
  %292 = load i32, i32* @y.5, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 374938450, i32 -566024907
  br label %.backedge

300:                                              ; preds = %13
  %301 = sext i32 %.074 to i64
  %302 = load i64, i64* @v, align 8
  %303 = icmp sge i64 %302, %301
  store i1 %303, i1* %3, align 1
  %304 = load i32, i32* @x.4, align 4
  %305 = load i32, i32* @y.5, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 -962747515, i32 -566024907
  br label %.backedge

313:                                              ; preds = %13
  %.0..0..0.69 = load volatile i1, i1* %3, align 1
  %314 = select i1 %.0..0..0.69, i32 -1203099350, i32 -2088786447
  br label %.backedge

315:                                              ; preds = %13
  br label %.backedge

316:                                              ; preds = %13
  %317 = load i32, i32* @x.4, align 4
  %318 = load i32, i32* @y.5, align 4
  %319 = add i32 %317, -1
  %320 = mul i32 %319, %317
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %323, %322
  %325 = select i1 %324, i32 -405916491, i32 969966685
  br label %.backedge

326:                                              ; preds = %13
  %327 = sext i32 %.072 to i64
  %328 = load i64, i64* @v, align 8
  %329 = icmp sge i64 %328, %327
  store i1 %329, i1* %2, align 1
  %330 = load i32, i32* @x.4, align 4
  %331 = load i32, i32* @y.5, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 1177834323, i32 969966685
  br label %.backedge

339:                                              ; preds = %13
  %.0..0..0.70 = load volatile i1, i1* %2, align 1
  %340 = select i1 %.0..0..0.70, i32 -544259189, i32 -541313386
  br label %.backedge

341:                                              ; preds = %13
  %.not = icmp eq i32 %.072, 1
  %342 = select i1 %.not, i32 -194598192, i32 -1420722548
  br label %.backedge

343:                                              ; preds = %13
  %344 = sext i32 %.074 to i64
  %345 = sext i32 %.072 to i64
  %346 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %344, i64 %345
  %347 = load i64, i64* %346, align 8
  %348 = icmp sgt i64 %347, 2000000000
  %349 = select i1 %348, i32 641155383, i32 2121152805
  br label %.backedge

350:                                              ; preds = %13
  %351 = load i32, i32* @x.4, align 4
  %352 = load i32, i32* @y.5, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 -1320113181, i32 280787112
  br label %.backedge

360:                                              ; preds = %13
  %361 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %362 = load i32, i32* @x.4, align 4
  %363 = load i32, i32* @y.5, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 -1083111746, i32 280787112
  br label %.backedge

371:                                              ; preds = %13
  br label %.backedge

372:                                              ; preds = %13
  %373 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %374 = sext i32 %.074 to i64
  %375 = sext i32 %.072 to i64
  %376 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %374, i64 %375
  %377 = load i64, i64* %376, align 8
  %378 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull %373, i64 %377)
  br label %.backedge

379:                                              ; preds = %13
  br label %.backedge

380:                                              ; preds = %13
  %381 = sext i32 %.074 to i64
  %382 = sext i32 %.072 to i64
  %383 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %381, i64 %382
  %384 = load i64, i64* %383, align 8
  %385 = icmp sgt i64 %384, 2000000000
  %386 = select i1 %385, i32 -1308859446, i32 -910824273
  br label %.backedge

387:                                              ; preds = %13
  %388 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

389:                                              ; preds = %13
  %390 = sext i32 %.074 to i64
  %391 = sext i32 %.072 to i64
  %392 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %390, i64 %391
  %393 = load i64, i64* %392, align 8
  %394 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %393)
  br label %.backedge

395:                                              ; preds = %13
  br label %.backedge

396:                                              ; preds = %13
  br label %.backedge

397:                                              ; preds = %13
  %398 = add i32 %.072, 1
  br label %.backedge

399:                                              ; preds = %13
  %400 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

401:                                              ; preds = %13
  %402 = add i32 %.074, 1
  br label %.backedge

403:                                              ; preds = %13
  %404 = load i32, i32* @x.4, align 4
  %405 = load i32, i32* @y.5, align 4
  %406 = add i32 %404, -1
  %407 = mul i32 %406, %404
  %408 = and i32 %407, 1
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %410, %409
  %412 = select i1 %411, i32 -179029472, i32 -1214603906
  br label %.backedge

413:                                              ; preds = %13
  store i32 0, i32* %1, align 4
  %414 = load i32, i32* @x.4, align 4
  %415 = load i32, i32* @y.5, align 4
  %416 = add i32 %414, -1
  %417 = mul i32 %416, %414
  %418 = and i32 %417, 1
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %420, %419
  %422 = select i1 %421, i32 355446567, i32 -1214603906
  br label %.backedge

423:                                              ; preds = %13
  %.0..0..0.71 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.71

424:                                              ; preds = %13
  %425 = sext i32 %.086 to i64
  %426 = sext i32 %.084 to i64
  %427 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %425, i64 %426
  store i64 0, i64* %427, align 8
  br label %.backedge

428:                                              ; preds = %13
  %429 = sext i32 %.086 to i64
  %430 = sext i32 %.084 to i64
  %431 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %429, i64 %430
  store i64 1000000000000000000, i64* %431, align 8
  br label %.backedge

432:                                              ; preds = %13
  %433 = add i32 %.082, 1
  br label %.backedge

434:                                              ; preds = %13
  br label %.backedge

435:                                              ; preds = %13
  br label %.backedge

436:                                              ; preds = %13
  %437 = sext i32 %.078 to i64
  %438 = sext i32 %.076 to i64
  %439 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %437, i64 %438
  %440 = sext i32 %.080 to i64
  %441 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %437, i64 %440
  %442 = load i64, i64* %441, align 8
  %443 = getelementptr inbounds [102 x [102 x i64]], [102 x [102 x i64]]* @b, i64 0, i64 %440, i64 %438
  %444 = load i64, i64* %443, align 8
  %445 = add i64 %444, %442
  store i64 %445, i64* %10, align 8
  %446 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %439, i64* nonnull dereferenceable(8) %10)
  %447 = load i64, i64* %446, align 8
  store i64 %447, i64* %439, align 8
  br label %.backedge

448:                                              ; preds = %13
  br label %.backedge

449:                                              ; preds = %13
  br label %.backedge

450:                                              ; preds = %13
  %451 = add i32 %.076, 1
  br label %.backedge

452:                                              ; preds = %13
  br label %.backedge

453:                                              ; preds = %13
  br label %.backedge

454:                                              ; preds = %13
  %455 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

456:                                              ; preds = %13
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i64**, align 8
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.6, align 4
  %10 = load i32, i32* @y.7, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ 905890555, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %16

16:                                               ; preds = %.outer, %16
  switch i32 %.0.ph, label %16 [
    i32 905890555, label %17
    i32 1933731385, label %20
    i32 1575840536, label %38
    i32 -622393556, label %40
    i32 -416690935, label %42
    i32 -1771668351, label %44
    i32 363138347, label %.outer.backedge
  ]

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 1933731385, i32 363138347
  br label %.outer.backedge

20:                                               ; preds = %16
  %21 = alloca i64*, align 8
  store i64** %21, i64*** %6, align 8
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %5, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %4, align 8
  %.0..0..0.5 = load volatile i64**, i64*** %5, align 8
  store i64* %0, i64** %.0..0..0.5, align 8
  %.0..0..0.8 = load volatile i64**, i64*** %4, align 8
  store i64* %1, i64** %.0..0..0.8, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %4, align 8
  %24 = load i64*, i64** %.0..0..0.9, align 8
  %25 = load i64, i64* %24, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %5, align 8
  %26 = load i64*, i64** %.0..0..0.6, align 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.6, align 4
  %30 = load i32, i32* @y.7, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 1575840536, i32 363138347
  br label %.outer.backedge

38:                                               ; preds = %16
  %.0..0..0.11 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.11, i32 -622393556, i32 -416690935
  br label %.outer.backedge

40:                                               ; preds = %16
  %.0..0..0.10 = load volatile i64**, i64*** %4, align 8
  %41 = load i64*, i64** %.0..0..0.10, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %6, align 8
  store i64* %41, i64** %.0..0..0.2, align 8
  br label %.outer.backedge

42:                                               ; preds = %16
  %.0..0..0.7 = load volatile i64**, i64*** %5, align 8
  %43 = load i64*, i64** %.0..0..0.7, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %6, align 8
  store i64* %43, i64** %.0..0..0.3, align 8
  br label %.outer.backedge

44:                                               ; preds = %16
  %.0..0..0.4 = load volatile i64**, i64*** %6, align 8
  %45 = load i64*, i64** %.0..0..0.4, align 8
  ret i64* %45

.outer.backedge:                                  ; preds = %16, %42, %40, %38, %20, %17
  %.0.ph.be = phi i32 [ %19, %17 ], [ %37, %20 ], [ %39, %38 ], [ -1771668351, %40 ], [ -1771668351, %42 ], [ 1933731385, %16 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s155147248.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.8, align 4
  %4 = load i32, i32* @y.9, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1335143554, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1335143554, label %11
    i32 905456843, label %14
    i32 -1979504484, label %24
    i32 1925977932, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 905456843, i32 1925977932
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.8, align 4
  %16 = load i32, i32* @y.9, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1979504484, i32 1925977932
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 905456843, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
