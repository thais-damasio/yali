; ModuleID = 'build_ollvm/programs/p02363/s070596459.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s070596459.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s070596459.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 2000861852, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 2000861852, label %11
    i32 -377972588, label %14
    i32 506897150, label %25
    i32 -1866314826, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -377972588, i32 -1866314826
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 506897150, i32 -1866314826
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -377972588, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [101 x [101 x i64]], align 16
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  br label %13

13:                                               ; preds = %.backedge, %0
  %.077 = phi i32 [ 0, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i8 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.0 = phi i32 [ 861769086, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 861769086, label %14
    i32 -1849957862, label %17
    i32 -1874057669, label %18
    i32 -702911213, label %21
    i32 -1741237314, label %31
    i32 -805327634, label %44
    i32 909315033, label %45
    i32 -879508420, label %47
    i32 -1980477991, label %57
    i32 609352377, label %69
    i32 1262202486, label %70
    i32 -1199888738, label %72
    i32 -1960395171, label %75
    i32 1196006870, label %79
    i32 222241629, label %89
    i32 -547614829, label %91
    i32 1319832206, label %92
    i32 -1151005027, label %102
    i32 -483914720, label %114
    i32 -1689144432, label %116
    i32 1193680162, label %117
    i32 458629252, label %121
    i32 2142486547, label %122
    i32 -357160572, label %126
    i32 -352382889, label %132
    i32 1164863917, label %138
    i32 -499388200, label %150
    i32 833613268, label %151
    i32 -612652946, label %153
    i32 1080777897, label %154
    i32 94426598, label %156
    i32 1689994477, label %157
    i32 -406008910, label %167
    i32 1106557789, label %178
    i32 -157358593, label %179
    i32 -1298253193, label %180
    i32 1054627628, label %184
    i32 -1374789733, label %190
    i32 -626381058, label %191
    i32 792220378, label %192
    i32 1584313661, label %194
    i32 -1125955322, label %204
    i32 -1391908377, label %216
    i32 1336045443, label %218
    i32 -1555259619, label %228
    i32 940232471, label %240
    i32 -1392756614, label %241
    i32 -170939832, label %242
    i32 1330650809, label %252
    i32 -1584912198, label %264
    i32 742884225, label %266
    i32 1152722351, label %276
    i32 -5783467, label %286
    i32 -901438105, label %287
    i32 34635592, label %297
    i32 34080510, label %309
    i32 185803141, label %311
    i32 767500544, label %321
    i32 -2022576484, label %336
    i32 -465521011, label %338
    i32 -1408262923, label %340
    i32 -997483498, label %346
    i32 -539330815, label %350
    i32 -1344438775, label %360
    i32 -1988087399, label %371
    i32 -235128574, label %372
    i32 1915422269, label %373
    i32 -501863061, label %375
    i32 2108257730, label %377
    i32 -1512413945, label %387
    i32 1608247691, label %397
    i32 -869270001, label %398
    i32 1119729514, label %408
    i32 -1726896090, label %418
    i32 1014499409, label %419
    i32 772526338, label %429
    i32 -765600267, label %439
    i32 -788936505, label %440
    i32 -1242088200, label %444
    i32 -349245632, label %447
    i32 -1866960476, label %448
    i32 1805199000, label %450
    i32 1724703023, label %451
    i32 -1812801378, label %454
    i32 -2080437846, label %455
    i32 -1409563614, label %456
    i32 976618905, label %457
    i32 -58146657, label %458
    i32 1826414947, label %460
    i32 1218906450, label %462
    i32 1679204075, label %463
  ]

.backedge:                                        ; preds = %13, %463, %462, %460, %458, %457, %456, %455, %454, %451, %450, %448, %447, %444, %440, %429, %419, %418, %408, %398, %397, %387, %377, %375, %373, %372, %371, %360, %350, %346, %340, %338, %336, %321, %311, %309, %297, %287, %286, %276, %266, %264, %252, %242, %241, %240, %228, %218, %216, %204, %194, %192, %191, %190, %184, %180, %179, %178, %167, %157, %156, %154, %153, %151, %150, %138, %132, %126, %122, %121, %117, %116, %114, %102, %92, %91, %89, %79, %75, %72, %70, %69, %57, %47, %45, %44, %31, %21, %18, %17, %14
  %.077.be = phi i32 [ %.077, %13 ], [ %.077, %463 ], [ %.077, %462 ], [ %.077, %460 ], [ %.077, %458 ], [ %.077, %457 ], [ %.077, %456 ], [ %.077, %455 ], [ %.077, %454 ], [ %.077, %451 ], [ %.077, %450 ], [ %.077, %448 ], [ %.077, %447 ], [ %.077, %444 ], [ %.077, %440 ], [ %.077, %429 ], [ %.077, %419 ], [ %.077, %418 ], [ %.077, %408 ], [ %.077, %398 ], [ %.077, %397 ], [ %.077, %387 ], [ %.077, %377 ], [ %.077, %375 ], [ %.077, %373 ], [ %.077, %372 ], [ %.077, %371 ], [ %.077, %360 ], [ %.077, %350 ], [ %.077, %346 ], [ %.077, %340 ], [ %.077, %338 ], [ %.077, %336 ], [ %.077, %321 ], [ %.077, %311 ], [ %.077, %309 ], [ %.077, %297 ], [ %.077, %287 ], [ %.077, %286 ], [ %.077, %276 ], [ %.077, %266 ], [ %.077, %264 ], [ %.077, %252 ], [ %.077, %242 ], [ %.077, %241 ], [ %.077, %240 ], [ %.077, %228 ], [ %.077, %218 ], [ %.077, %216 ], [ %.077, %204 ], [ %.077, %194 ], [ %.077, %192 ], [ %.077, %191 ], [ %.077, %190 ], [ %.077, %184 ], [ %.077, %180 ], [ %.077, %179 ], [ %.077, %178 ], [ %.077, %167 ], [ %.077, %157 ], [ %.077, %156 ], [ %.077, %154 ], [ %.077, %153 ], [ %.077, %151 ], [ %.077, %150 ], [ %.077, %138 ], [ %.077, %132 ], [ %.077, %126 ], [ %.077, %122 ], [ %.077, %121 ], [ %.077, %117 ], [ %.077, %116 ], [ %.077, %114 ], [ %.077, %102 ], [ %.077, %92 ], [ %.077, %91 ], [ %.077, %89 ], [ %.077, %79 ], [ %.077, %75 ], [ %.077, %72 ], [ %71, %70 ], [ %.077, %69 ], [ %.077, %57 ], [ %.077, %47 ], [ %.077, %45 ], [ %.077, %44 ], [ %.077, %31 ], [ %.077, %21 ], [ %.077, %18 ], [ %.077, %17 ], [ %.077, %14 ]
  %.075.be = phi i32 [ %.075, %13 ], [ %.075, %463 ], [ %.075, %462 ], [ %.075, %460 ], [ %.075, %458 ], [ %.075, %457 ], [ %.075, %456 ], [ %.075, %455 ], [ %.075, %454 ], [ %.075, %451 ], [ %.075, %450 ], [ %.075, %448 ], [ %.075, %447 ], [ %.075, %444 ], [ %.075, %440 ], [ %.075, %429 ], [ %.075, %419 ], [ %.075, %418 ], [ %.075, %408 ], [ %.075, %398 ], [ %.075, %397 ], [ %.075, %387 ], [ %.075, %377 ], [ %.075, %375 ], [ %.075, %373 ], [ %.075, %372 ], [ %.075, %371 ], [ %.075, %360 ], [ %.075, %350 ], [ %.075, %346 ], [ %.075, %340 ], [ %.075, %338 ], [ %.075, %336 ], [ %.075, %321 ], [ %.075, %311 ], [ %.075, %309 ], [ %.075, %297 ], [ %.075, %287 ], [ %.075, %286 ], [ %.075, %276 ], [ %.075, %266 ], [ %.075, %264 ], [ %.075, %252 ], [ %.075, %242 ], [ %.075, %241 ], [ %.075, %240 ], [ %.075, %228 ], [ %.075, %218 ], [ %.075, %216 ], [ %.075, %204 ], [ %.075, %194 ], [ %.075, %192 ], [ %.075, %191 ], [ %.075, %190 ], [ %.075, %184 ], [ %.075, %180 ], [ %.075, %179 ], [ %.075, %178 ], [ %.075, %167 ], [ %.075, %157 ], [ %.075, %156 ], [ %.075, %154 ], [ %.075, %153 ], [ %.075, %151 ], [ %.075, %150 ], [ %.075, %138 ], [ %.075, %132 ], [ %.075, %126 ], [ %.075, %122 ], [ %.075, %121 ], [ %.075, %117 ], [ %.075, %116 ], [ %.075, %114 ], [ %.075, %102 ], [ %.075, %92 ], [ %.075, %91 ], [ %.075, %89 ], [ %.075, %79 ], [ %.075, %75 ], [ %.075, %72 ], [ %.075, %70 ], [ %.075, %69 ], [ %.075, %57 ], [ %.075, %47 ], [ %46, %45 ], [ %.075, %44 ], [ %.075, %31 ], [ %.075, %21 ], [ %.075, %18 ], [ 0, %17 ], [ %.075, %14 ]
  %.073.be = phi i32 [ %.073, %13 ], [ %.073, %463 ], [ %.073, %462 ], [ %.073, %460 ], [ %.073, %458 ], [ %.073, %457 ], [ %.073, %456 ], [ %.073, %455 ], [ %.073, %454 ], [ %.073, %451 ], [ %.073, %450 ], [ %.073, %448 ], [ %.073, %447 ], [ %.073, %444 ], [ %.073, %440 ], [ %.073, %429 ], [ %.073, %419 ], [ %.073, %418 ], [ %.073, %408 ], [ %.073, %398 ], [ %.073, %397 ], [ %.073, %387 ], [ %.073, %377 ], [ %.073, %375 ], [ %.073, %373 ], [ %.073, %372 ], [ %.073, %371 ], [ %.073, %360 ], [ %.073, %350 ], [ %.073, %346 ], [ %.073, %340 ], [ %.073, %338 ], [ %.073, %336 ], [ %.073, %321 ], [ %.073, %311 ], [ %.073, %309 ], [ %.073, %297 ], [ %.073, %287 ], [ %.073, %286 ], [ %.073, %276 ], [ %.073, %266 ], [ %.073, %264 ], [ %.073, %252 ], [ %.073, %242 ], [ %.073, %241 ], [ %.073, %240 ], [ %.073, %228 ], [ %.073, %218 ], [ %.073, %216 ], [ %.073, %204 ], [ %.073, %194 ], [ %.073, %192 ], [ %.073, %191 ], [ %.073, %190 ], [ %.073, %184 ], [ %.073, %180 ], [ %.073, %179 ], [ %.073, %178 ], [ %.073, %167 ], [ %.073, %157 ], [ %.073, %156 ], [ %.073, %154 ], [ %.073, %153 ], [ %.073, %151 ], [ %.073, %150 ], [ %.073, %138 ], [ %.073, %132 ], [ %.073, %126 ], [ %.073, %122 ], [ %.073, %121 ], [ %.073, %117 ], [ %.073, %116 ], [ %.073, %114 ], [ %.073, %102 ], [ %.073, %92 ], [ %.073, %91 ], [ %90, %89 ], [ %.073, %79 ], [ %.073, %75 ], [ 0, %72 ], [ %.073, %70 ], [ %.073, %69 ], [ %.073, %57 ], [ %.073, %47 ], [ %.073, %45 ], [ %.073, %44 ], [ %.073, %31 ], [ %.073, %21 ], [ %.073, %18 ], [ %.073, %17 ], [ %.073, %14 ]
  %.071.be = phi i32 [ %.071, %13 ], [ %.071, %463 ], [ %.071, %462 ], [ %.071, %460 ], [ %.071, %458 ], [ %.071, %457 ], [ %.071, %456 ], [ %.071, %455 ], [ %.071, %454 ], [ %.071, %451 ], [ %.071, %450 ], [ %449, %448 ], [ %.071, %447 ], [ %.071, %444 ], [ %.071, %440 ], [ %.071, %429 ], [ %.071, %419 ], [ %.071, %418 ], [ %.071, %408 ], [ %.071, %398 ], [ %.071, %397 ], [ %.071, %387 ], [ %.071, %377 ], [ %.071, %375 ], [ %.071, %373 ], [ %.071, %372 ], [ %.071, %371 ], [ %.071, %360 ], [ %.071, %350 ], [ %.071, %346 ], [ %.071, %340 ], [ %.071, %338 ], [ %.071, %336 ], [ %.071, %321 ], [ %.071, %311 ], [ %.071, %309 ], [ %.071, %297 ], [ %.071, %287 ], [ %.071, %286 ], [ %.071, %276 ], [ %.071, %266 ], [ %.071, %264 ], [ %.071, %252 ], [ %.071, %242 ], [ %.071, %241 ], [ %.071, %240 ], [ %.071, %228 ], [ %.071, %218 ], [ %.071, %216 ], [ %.071, %204 ], [ %.071, %194 ], [ %.071, %192 ], [ %.071, %191 ], [ %.071, %190 ], [ %.071, %184 ], [ %.071, %180 ], [ %.071, %179 ], [ %.071, %178 ], [ %168, %167 ], [ %.071, %157 ], [ %.071, %156 ], [ %.071, %154 ], [ %.071, %153 ], [ %.071, %151 ], [ %.071, %150 ], [ %.071, %138 ], [ %.071, %132 ], [ %.071, %126 ], [ %.071, %122 ], [ %.071, %121 ], [ %.071, %117 ], [ %.071, %116 ], [ %.071, %114 ], [ %.071, %102 ], [ %.071, %92 ], [ 0, %91 ], [ %.071, %89 ], [ %.071, %79 ], [ %.071, %75 ], [ %.071, %72 ], [ %.071, %70 ], [ %.071, %69 ], [ %.071, %57 ], [ %.071, %47 ], [ %.071, %45 ], [ %.071, %44 ], [ %.071, %31 ], [ %.071, %21 ], [ %.071, %18 ], [ %.071, %17 ], [ %.071, %14 ]
  %.069.be = phi i32 [ %.069, %13 ], [ %.069, %463 ], [ %.069, %462 ], [ %.069, %460 ], [ %.069, %458 ], [ %.069, %457 ], [ %.069, %456 ], [ %.069, %455 ], [ %.069, %454 ], [ %.069, %451 ], [ %.069, %450 ], [ %.069, %448 ], [ %.069, %447 ], [ %.069, %444 ], [ %.069, %440 ], [ %.069, %429 ], [ %.069, %419 ], [ %.069, %418 ], [ %.069, %408 ], [ %.069, %398 ], [ %.069, %397 ], [ %.069, %387 ], [ %.069, %377 ], [ %.069, %375 ], [ %.069, %373 ], [ %.069, %372 ], [ %.069, %371 ], [ %.069, %360 ], [ %.069, %350 ], [ %.069, %346 ], [ %.069, %340 ], [ %.069, %338 ], [ %.069, %336 ], [ %.069, %321 ], [ %.069, %311 ], [ %.069, %309 ], [ %.069, %297 ], [ %.069, %287 ], [ %.069, %286 ], [ %.069, %276 ], [ %.069, %266 ], [ %.069, %264 ], [ %.069, %252 ], [ %.069, %242 ], [ %.069, %241 ], [ %.069, %240 ], [ %.069, %228 ], [ %.069, %218 ], [ %.069, %216 ], [ %.069, %204 ], [ %.069, %194 ], [ %.069, %192 ], [ %.069, %191 ], [ %.069, %190 ], [ %.069, %184 ], [ %.069, %180 ], [ %.069, %179 ], [ %.069, %178 ], [ %.069, %167 ], [ %.069, %157 ], [ %.069, %156 ], [ %155, %154 ], [ %.069, %153 ], [ %.069, %151 ], [ %.069, %150 ], [ %.069, %138 ], [ %.069, %132 ], [ %.069, %126 ], [ %.069, %122 ], [ %.069, %121 ], [ %.069, %117 ], [ 0, %116 ], [ %.069, %114 ], [ %.069, %102 ], [ %.069, %92 ], [ %.069, %91 ], [ %.069, %89 ], [ %.069, %79 ], [ %.069, %75 ], [ %.069, %72 ], [ %.069, %70 ], [ %.069, %69 ], [ %.069, %57 ], [ %.069, %47 ], [ %.069, %45 ], [ %.069, %44 ], [ %.069, %31 ], [ %.069, %21 ], [ %.069, %18 ], [ %.069, %17 ], [ %.069, %14 ]
  %.067.be = phi i32 [ %.067, %13 ], [ %.067, %463 ], [ %.067, %462 ], [ %.067, %460 ], [ %.067, %458 ], [ %.067, %457 ], [ %.067, %456 ], [ %.067, %455 ], [ %.067, %454 ], [ %.067, %451 ], [ %.067, %450 ], [ %.067, %448 ], [ %.067, %447 ], [ %.067, %444 ], [ %.067, %440 ], [ %.067, %429 ], [ %.067, %419 ], [ %.067, %418 ], [ %.067, %408 ], [ %.067, %398 ], [ %.067, %397 ], [ %.067, %387 ], [ %.067, %377 ], [ %.067, %375 ], [ %.067, %373 ], [ %.067, %372 ], [ %.067, %371 ], [ %.067, %360 ], [ %.067, %350 ], [ %.067, %346 ], [ %.067, %340 ], [ %.067, %338 ], [ %.067, %336 ], [ %.067, %321 ], [ %.067, %311 ], [ %.067, %309 ], [ %.067, %297 ], [ %.067, %287 ], [ %.067, %286 ], [ %.067, %276 ], [ %.067, %266 ], [ %.067, %264 ], [ %.067, %252 ], [ %.067, %242 ], [ %.067, %241 ], [ %.067, %240 ], [ %.067, %228 ], [ %.067, %218 ], [ %.067, %216 ], [ %.067, %204 ], [ %.067, %194 ], [ %.067, %192 ], [ %.067, %191 ], [ %.067, %190 ], [ %.067, %184 ], [ %.067, %180 ], [ %.067, %179 ], [ %.067, %178 ], [ %.067, %167 ], [ %.067, %157 ], [ %.067, %156 ], [ %.067, %154 ], [ %.067, %153 ], [ %152, %151 ], [ %.067, %150 ], [ %.067, %138 ], [ %.067, %132 ], [ %.067, %126 ], [ %.067, %122 ], [ 0, %121 ], [ %.067, %117 ], [ %.067, %116 ], [ %.067, %114 ], [ %.067, %102 ], [ %.067, %92 ], [ %.067, %91 ], [ %.067, %89 ], [ %.067, %79 ], [ %.067, %75 ], [ %.067, %72 ], [ %.067, %70 ], [ %.067, %69 ], [ %.067, %57 ], [ %.067, %47 ], [ %.067, %45 ], [ %.067, %44 ], [ %.067, %31 ], [ %.067, %21 ], [ %.067, %18 ], [ %.067, %17 ], [ %.067, %14 ]
  %.065.be = phi i8 [ %.065, %13 ], [ %.065, %463 ], [ %.065, %462 ], [ %.065, %460 ], [ %.065, %458 ], [ %.065, %457 ], [ %.065, %456 ], [ %.065, %455 ], [ %.065, %454 ], [ %.065, %451 ], [ %.065, %450 ], [ %.065, %448 ], [ %.065, %447 ], [ %.065, %444 ], [ %.065, %440 ], [ %.065, %429 ], [ %.065, %419 ], [ %.065, %418 ], [ %.065, %408 ], [ %.065, %398 ], [ %.065, %397 ], [ %.065, %387 ], [ %.065, %377 ], [ %.065, %375 ], [ %.065, %373 ], [ %.065, %372 ], [ %.065, %371 ], [ %.065, %360 ], [ %.065, %350 ], [ %.065, %346 ], [ %.065, %340 ], [ %.065, %338 ], [ %.065, %336 ], [ %.065, %321 ], [ %.065, %311 ], [ %.065, %309 ], [ %.065, %297 ], [ %.065, %287 ], [ %.065, %286 ], [ %.065, %276 ], [ %.065, %266 ], [ %.065, %264 ], [ %.065, %252 ], [ %.065, %242 ], [ %.065, %241 ], [ %.065, %240 ], [ %.065, %228 ], [ %.065, %218 ], [ %.065, %216 ], [ %.065, %204 ], [ %.065, %194 ], [ %.065, %192 ], [ %.065, %191 ], [ 1, %190 ], [ %.065, %184 ], [ %.065, %180 ], [ 0, %179 ], [ %.065, %178 ], [ %.065, %167 ], [ %.065, %157 ], [ %.065, %156 ], [ %.065, %154 ], [ %.065, %153 ], [ %.065, %151 ], [ %.065, %150 ], [ %.065, %138 ], [ %.065, %132 ], [ %.065, %126 ], [ %.065, %122 ], [ %.065, %121 ], [ %.065, %117 ], [ %.065, %116 ], [ %.065, %114 ], [ %.065, %102 ], [ %.065, %92 ], [ %.065, %91 ], [ %.065, %89 ], [ %.065, %79 ], [ %.065, %75 ], [ %.065, %72 ], [ %.065, %70 ], [ %.065, %69 ], [ %.065, %57 ], [ %.065, %47 ], [ %.065, %45 ], [ %.065, %44 ], [ %.065, %31 ], [ %.065, %21 ], [ %.065, %18 ], [ %.065, %17 ], [ %.065, %14 ]
  %.063.be = phi i32 [ %.063, %13 ], [ %.063, %463 ], [ %.063, %462 ], [ %.063, %460 ], [ %.063, %458 ], [ %.063, %457 ], [ %.063, %456 ], [ %.063, %455 ], [ %.063, %454 ], [ %.063, %451 ], [ %.063, %450 ], [ %.063, %448 ], [ %.063, %447 ], [ %.063, %444 ], [ %.063, %440 ], [ %.063, %429 ], [ %.063, %419 ], [ %.063, %418 ], [ %.063, %408 ], [ %.063, %398 ], [ %.063, %397 ], [ %.063, %387 ], [ %.063, %377 ], [ %.063, %375 ], [ %.063, %373 ], [ %.063, %372 ], [ %.063, %371 ], [ %.063, %360 ], [ %.063, %350 ], [ %.063, %346 ], [ %.063, %340 ], [ %.063, %338 ], [ %.063, %336 ], [ %.063, %321 ], [ %.063, %311 ], [ %.063, %309 ], [ %.063, %297 ], [ %.063, %287 ], [ %.063, %286 ], [ %.063, %276 ], [ %.063, %266 ], [ %.063, %264 ], [ %.063, %252 ], [ %.063, %242 ], [ %.063, %241 ], [ %.063, %240 ], [ %.063, %228 ], [ %.063, %218 ], [ %.063, %216 ], [ %.063, %204 ], [ %.063, %194 ], [ %193, %192 ], [ %.063, %191 ], [ %.063, %190 ], [ %.063, %184 ], [ %.063, %180 ], [ 0, %179 ], [ %.063, %178 ], [ %.063, %167 ], [ %.063, %157 ], [ %.063, %156 ], [ %.063, %154 ], [ %.063, %153 ], [ %.063, %151 ], [ %.063, %150 ], [ %.063, %138 ], [ %.063, %132 ], [ %.063, %126 ], [ %.063, %122 ], [ %.063, %121 ], [ %.063, %117 ], [ %.063, %116 ], [ %.063, %114 ], [ %.063, %102 ], [ %.063, %92 ], [ %.063, %91 ], [ %.063, %89 ], [ %.063, %79 ], [ %.063, %75 ], [ %.063, %72 ], [ %.063, %70 ], [ %.063, %69 ], [ %.063, %57 ], [ %.063, %47 ], [ %.063, %45 ], [ %.063, %44 ], [ %.063, %31 ], [ %.063, %21 ], [ %.063, %18 ], [ %.063, %17 ], [ %.063, %14 ]
  %.061.be = phi i32 [ %.061, %13 ], [ %.061, %463 ], [ %.061, %462 ], [ %461, %460 ], [ %.061, %458 ], [ %.061, %457 ], [ %.061, %456 ], [ %.061, %455 ], [ %.061, %454 ], [ %.061, %451 ], [ %.061, %450 ], [ %.061, %448 ], [ %.061, %447 ], [ %.061, %444 ], [ %.061, %440 ], [ %.061, %429 ], [ %.061, %419 ], [ %.061, %418 ], [ %.061, %408 ], [ %.061, %398 ], [ %.061, %397 ], [ %.neg, %387 ], [ %.061, %377 ], [ %.061, %375 ], [ %.061, %373 ], [ %.061, %372 ], [ %.061, %371 ], [ %.061, %360 ], [ %.061, %350 ], [ %.061, %346 ], [ %.061, %340 ], [ %.061, %338 ], [ %.061, %336 ], [ %.061, %321 ], [ %.061, %311 ], [ %.061, %309 ], [ %.061, %297 ], [ %.061, %287 ], [ %.061, %286 ], [ %.061, %276 ], [ %.061, %266 ], [ %.061, %264 ], [ %.061, %252 ], [ %.061, %242 ], [ 0, %241 ], [ %.061, %240 ], [ %.061, %228 ], [ %.061, %218 ], [ %.061, %216 ], [ %.061, %204 ], [ %.061, %194 ], [ %.061, %192 ], [ %.061, %191 ], [ %.061, %190 ], [ %.061, %184 ], [ %.061, %180 ], [ %.061, %179 ], [ %.061, %178 ], [ %.061, %167 ], [ %.061, %157 ], [ %.061, %156 ], [ %.061, %154 ], [ %.061, %153 ], [ %.061, %151 ], [ %.061, %150 ], [ %.061, %138 ], [ %.061, %132 ], [ %.061, %126 ], [ %.061, %122 ], [ %.061, %121 ], [ %.061, %117 ], [ %.061, %116 ], [ %.061, %114 ], [ %.061, %102 ], [ %.061, %92 ], [ %.061, %91 ], [ %.061, %89 ], [ %.061, %79 ], [ %.061, %75 ], [ %.061, %72 ], [ %.061, %70 ], [ %.061, %69 ], [ %.061, %57 ], [ %.061, %47 ], [ %.061, %45 ], [ %.061, %44 ], [ %.061, %31 ], [ %.061, %21 ], [ %.061, %18 ], [ %.061, %17 ], [ %.061, %14 ]
  %.059.be = phi i32 [ %.059, %13 ], [ %.059, %463 ], [ %.059, %462 ], [ %.059, %460 ], [ %.059, %458 ], [ %.059, %457 ], [ %.059, %456 ], [ 0, %455 ], [ %.059, %454 ], [ %.059, %451 ], [ %.059, %450 ], [ %.059, %448 ], [ %.059, %447 ], [ %.059, %444 ], [ %.059, %440 ], [ %.059, %429 ], [ %.059, %419 ], [ %.059, %418 ], [ %.059, %408 ], [ %.059, %398 ], [ %.059, %397 ], [ %.059, %387 ], [ %.059, %377 ], [ %.059, %375 ], [ %374, %373 ], [ %.059, %372 ], [ %.059, %371 ], [ %.059, %360 ], [ %.059, %350 ], [ %.059, %346 ], [ %.059, %340 ], [ %.059, %338 ], [ %.059, %336 ], [ %.059, %321 ], [ %.059, %311 ], [ %.059, %309 ], [ %.059, %297 ], [ %.059, %287 ], [ %.059, %286 ], [ 0, %276 ], [ %.059, %266 ], [ %.059, %264 ], [ %.059, %252 ], [ %.059, %242 ], [ %.059, %241 ], [ %.059, %240 ], [ %.059, %228 ], [ %.059, %218 ], [ %.059, %216 ], [ %.059, %204 ], [ %.059, %194 ], [ %.059, %192 ], [ %.059, %191 ], [ %.059, %190 ], [ %.059, %184 ], [ %.059, %180 ], [ %.059, %179 ], [ %.059, %178 ], [ %.059, %167 ], [ %.059, %157 ], [ %.059, %156 ], [ %.059, %154 ], [ %.059, %153 ], [ %.059, %151 ], [ %.059, %150 ], [ %.059, %138 ], [ %.059, %132 ], [ %.059, %126 ], [ %.059, %122 ], [ %.059, %121 ], [ %.059, %117 ], [ %.059, %116 ], [ %.059, %114 ], [ %.059, %102 ], [ %.059, %92 ], [ %.059, %91 ], [ %.059, %89 ], [ %.059, %79 ], [ %.059, %75 ], [ %.059, %72 ], [ %.059, %70 ], [ %.059, %69 ], [ %.059, %57 ], [ %.059, %47 ], [ %.059, %45 ], [ %.059, %44 ], [ %.059, %31 ], [ %.059, %21 ], [ %.059, %18 ], [ %.059, %17 ], [ %.059, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ 772526338, %463 ], [ 1119729514, %462 ], [ -1512413945, %460 ], [ -1344438775, %458 ], [ 767500544, %457 ], [ 34635592, %456 ], [ 1152722351, %455 ], [ 1330650809, %454 ], [ -1555259619, %451 ], [ -1125955322, %450 ], [ -406008910, %448 ], [ -1151005027, %447 ], [ -1980477991, %444 ], [ -1741237314, %440 ], [ %438, %429 ], [ %428, %419 ], [ 1014499409, %418 ], [ %417, %408 ], [ %407, %398 ], [ -170939832, %397 ], [ %396, %387 ], [ %386, %377 ], [ 2108257730, %375 ], [ -901438105, %373 ], [ 1915422269, %372 ], [ -235128574, %371 ], [ %370, %360 ], [ %359, %350 ], [ %349, %346 ], [ -997483498, %340 ], [ -997483498, %338 ], [ %337, %336 ], [ %335, %321 ], [ %320, %311 ], [ %310, %309 ], [ %308, %297 ], [ %296, %287 ], [ -901438105, %286 ], [ %285, %276 ], [ %275, %266 ], [ %265, %264 ], [ %263, %252 ], [ %251, %242 ], [ -170939832, %241 ], [ 1014499409, %240 ], [ %239, %228 ], [ %227, %218 ], [ %217, %216 ], [ %215, %204 ], [ %203, %194 ], [ -1298253193, %192 ], [ 792220378, %191 ], [ 1584313661, %190 ], [ %189, %184 ], [ %183, %180 ], [ -1298253193, %179 ], [ 1319832206, %178 ], [ %177, %167 ], [ %166, %157 ], [ 1689994477, %156 ], [ 1193680162, %154 ], [ 1080777897, %153 ], [ 2142486547, %151 ], [ 833613268, %150 ], [ -499388200, %138 ], [ %137, %132 ], [ %131, %126 ], [ %125, %122 ], [ 2142486547, %121 ], [ %120, %117 ], [ 1193680162, %116 ], [ %115, %114 ], [ %113, %102 ], [ %101, %92 ], [ 1319832206, %91 ], [ -1960395171, %89 ], [ 222241629, %79 ], [ %78, %75 ], [ -1960395171, %72 ], [ 861769086, %70 ], [ 1262202486, %69 ], [ %68, %57 ], [ %56, %47 ], [ -1874057669, %45 ], [ 909315033, %44 ], [ %43, %31 ], [ %30, %21 ], [ %20, %18 ], [ -1874057669, %17 ], [ %16, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = icmp slt i32 %.077, 101
  %16 = select i1 %15, i32 -1849957862, i32 -1199888738
  br label %.backedge

17:                                               ; preds = %13
  br label %.backedge

18:                                               ; preds = %13
  %19 = icmp slt i32 %.075, 101
  %20 = select i1 %19, i32 -702911213, i32 -879508420
  br label %.backedge

21:                                               ; preds = %13
  %22 = load i32, i32* @x.3, align 4
  %23 = load i32, i32* @y.4, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 -1741237314, i32 -788936505
  br label %.backedge

31:                                               ; preds = %13
  %32 = sext i32 %.077 to i64
  %33 = sext i32 %.075 to i64
  %34 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %32, i64 %33
  store i64 2305843009213693951, i64* %34, align 8
  %35 = load i32, i32* @x.3, align 4
  %36 = load i32, i32* @y.4, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -805327634, i32 -788936505
  br label %.backedge

44:                                               ; preds = %13
  br label %.backedge

45:                                               ; preds = %13
  %46 = add i32 %.075, 1
  br label %.backedge

47:                                               ; preds = %13
  %48 = load i32, i32* @x.3, align 4
  %49 = load i32, i32* @y.4, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 -1980477991, i32 -1242088200
  br label %.backedge

57:                                               ; preds = %13
  %58 = sext i32 %.077 to i64
  %59 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %58, i64 %58
  store i64 0, i64* %59, align 8
  %60 = load i32, i32* @x.3, align 4
  %61 = load i32, i32* @y.4, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 609352377, i32 -1242088200
  br label %.backedge

69:                                               ; preds = %13
  br label %.backedge

70:                                               ; preds = %13
  %71 = add i32 %.077, 1
  br label %.backedge

72:                                               ; preds = %13
  %73 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %74 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %73, i32* nonnull dereferenceable(4) %7)
  br label %.backedge

75:                                               ; preds = %13
  %76 = load i32, i32* %7, align 4
  %77 = icmp slt i32 %.073, %76
  %78 = select i1 %77, i32 1196006870, i32 -547614829
  br label %.backedge

79:                                               ; preds = %13
  %80 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %81 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %80, i32* nonnull dereferenceable(4) %9)
  %82 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %81, i64* nonnull dereferenceable(8) %11)
  %83 = load i64, i64* %11, align 8
  %84 = load i32, i32* %8, align 4
  %85 = sext i32 %84 to i64
  %86 = load i32, i32* %9, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %85, i64 %87
  store i64 %83, i64* %88, align 8
  br label %.backedge

89:                                               ; preds = %13
  %90 = add i32 %.073, 1
  br label %.backedge

91:                                               ; preds = %13
  br label %.backedge

92:                                               ; preds = %13
  %93 = load i32, i32* @x.3, align 4
  %94 = load i32, i32* @y.4, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 -1151005027, i32 -349245632
  br label %.backedge

102:                                              ; preds = %13
  %103 = load i32, i32* %6, align 4
  %104 = icmp slt i32 %.071, %103
  store i1 %104, i1* %5, align 1
  %105 = load i32, i32* @x.3, align 4
  %106 = load i32, i32* @y.4, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 -483914720, i32 -349245632
  br label %.backedge

114:                                              ; preds = %13
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %115 = select i1 %.0..0..0., i32 -1689144432, i32 -157358593
  br label %.backedge

116:                                              ; preds = %13
  br label %.backedge

117:                                              ; preds = %13
  %118 = load i32, i32* %6, align 4
  %119 = icmp slt i32 %.069, %118
  %120 = select i1 %119, i32 458629252, i32 94426598
  br label %.backedge

121:                                              ; preds = %13
  br label %.backedge

122:                                              ; preds = %13
  %123 = load i32, i32* %6, align 4
  %124 = icmp slt i32 %.067, %123
  %125 = select i1 %124, i32 -357160572, i32 -612652946
  br label %.backedge

126:                                              ; preds = %13
  %127 = sext i32 %.069 to i64
  %128 = sext i32 %.071 to i64
  %129 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %127, i64 %128
  %130 = load i64, i64* %129, align 8
  %.not80 = icmp eq i64 %130, 2305843009213693951
  %131 = select i1 %.not80, i32 -499388200, i32 -352382889
  br label %.backedge

132:                                              ; preds = %13
  %133 = sext i32 %.071 to i64
  %134 = sext i32 %.067 to i64
  %135 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %133, i64 %134
  %136 = load i64, i64* %135, align 8
  %.not79 = icmp eq i64 %136, 2305843009213693951
  %137 = select i1 %.not79, i32 -499388200, i32 1164863917
  br label %.backedge

138:                                              ; preds = %13
  %139 = sext i32 %.069 to i64
  %140 = sext i32 %.067 to i64
  %141 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %139, i64 %140
  %142 = sext i32 %.071 to i64
  %143 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %139, i64 %142
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %142, i64 %140
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, %144
  store i64 %147, i64* %12, align 8
  %148 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %141, i64* nonnull dereferenceable(8) %12)
  %149 = load i64, i64* %148, align 8
  store i64 %149, i64* %141, align 8
  br label %.backedge

150:                                              ; preds = %13
  br label %.backedge

151:                                              ; preds = %13
  %152 = add i32 %.067, 1
  br label %.backedge

153:                                              ; preds = %13
  br label %.backedge

154:                                              ; preds = %13
  %155 = add i32 %.069, 1
  br label %.backedge

156:                                              ; preds = %13
  br label %.backedge

157:                                              ; preds = %13
  %158 = load i32, i32* @x.3, align 4
  %159 = load i32, i32* @y.4, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 -406008910, i32 -1866960476
  br label %.backedge

167:                                              ; preds = %13
  %168 = add i32 %.071, 1
  %169 = load i32, i32* @x.3, align 4
  %170 = load i32, i32* @y.4, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 1106557789, i32 -1866960476
  br label %.backedge

178:                                              ; preds = %13
  br label %.backedge

179:                                              ; preds = %13
  br label %.backedge

180:                                              ; preds = %13
  %181 = load i32, i32* %6, align 4
  %182 = icmp slt i32 %.063, %181
  %183 = select i1 %182, i32 1054627628, i32 1584313661
  br label %.backedge

184:                                              ; preds = %13
  %185 = sext i32 %.063 to i64
  %186 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %185, i64 %185
  %187 = load i64, i64* %186, align 8
  %188 = icmp slt i64 %187, 0
  %189 = select i1 %188, i32 -1374789733, i32 -626381058
  br label %.backedge

190:                                              ; preds = %13
  br label %.backedge

191:                                              ; preds = %13
  br label %.backedge

192:                                              ; preds = %13
  %193 = add i32 %.063, 1
  br label %.backedge

194:                                              ; preds = %13
  %195 = load i32, i32* @x.3, align 4
  %196 = load i32, i32* @y.4, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 -1125955322, i32 1805199000
  br label %.backedge

204:                                              ; preds = %13
  %205 = and i8 %.065, 1
  %206 = icmp ne i8 %205, 0
  store i1 %206, i1* %4, align 1
  %207 = load i32, i32* @x.3, align 4
  %208 = load i32, i32* @y.4, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1391908377, i32 1805199000
  br label %.backedge

216:                                              ; preds = %13
  %.0..0..0.55 = load volatile i1, i1* %4, align 1
  %217 = select i1 %.0..0..0.55, i32 1336045443, i32 -1392756614
  br label %.backedge

218:                                              ; preds = %13
  %219 = load i32, i32* @x.3, align 4
  %220 = load i32, i32* @y.4, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 -1555259619, i32 1724703023
  br label %.backedge

228:                                              ; preds = %13
  %229 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %230 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %229, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %231 = load i32, i32* @x.3, align 4
  %232 = load i32, i32* @y.4, align 4
  %233 = add i32 %231, -1
  %234 = mul i32 %233, %231
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %237, %236
  %239 = select i1 %238, i32 940232471, i32 1724703023
  br label %.backedge

240:                                              ; preds = %13
  br label %.backedge

241:                                              ; preds = %13
  br label %.backedge

242:                                              ; preds = %13
  %243 = load i32, i32* @x.3, align 4
  %244 = load i32, i32* @y.4, align 4
  %245 = add i32 %243, -1
  %246 = mul i32 %245, %243
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %249, %248
  %251 = select i1 %250, i32 1330650809, i32 -1812801378
  br label %.backedge

252:                                              ; preds = %13
  %253 = load i32, i32* %6, align 4
  %254 = icmp slt i32 %.061, %253
  store i1 %254, i1* %3, align 1
  %255 = load i32, i32* @x.3, align 4
  %256 = load i32, i32* @y.4, align 4
  %257 = add i32 %255, -1
  %258 = mul i32 %257, %255
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %261, %260
  %263 = select i1 %262, i32 -1584912198, i32 -1812801378
  br label %.backedge

264:                                              ; preds = %13
  %.0..0..0.56 = load volatile i1, i1* %3, align 1
  %265 = select i1 %.0..0..0.56, i32 742884225, i32 -869270001
  br label %.backedge

266:                                              ; preds = %13
  %267 = load i32, i32* @x.3, align 4
  %268 = load i32, i32* @y.4, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 1152722351, i32 -2080437846
  br label %.backedge

276:                                              ; preds = %13
  %277 = load i32, i32* @x.3, align 4
  %278 = load i32, i32* @y.4, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 -5783467, i32 -2080437846
  br label %.backedge

286:                                              ; preds = %13
  br label %.backedge

287:                                              ; preds = %13
  %288 = load i32, i32* @x.3, align 4
  %289 = load i32, i32* @y.4, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 34635592, i32 -1409563614
  br label %.backedge

297:                                              ; preds = %13
  %298 = load i32, i32* %6, align 4
  %299 = icmp slt i32 %.059, %298
  store i1 %299, i1* %2, align 1
  %300 = load i32, i32* @x.3, align 4
  %301 = load i32, i32* @y.4, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 34080510, i32 -1409563614
  br label %.backedge

309:                                              ; preds = %13
  %.0..0..0.57 = load volatile i1, i1* %2, align 1
  %310 = select i1 %.0..0..0.57, i32 185803141, i32 -501863061
  br label %.backedge

311:                                              ; preds = %13
  %312 = load i32, i32* @x.3, align 4
  %313 = load i32, i32* @y.4, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 767500544, i32 976618905
  br label %.backedge

321:                                              ; preds = %13
  %322 = sext i32 %.061 to i64
  %323 = sext i32 %.059 to i64
  %324 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %322, i64 %323
  %325 = load i64, i64* %324, align 8
  %326 = icmp eq i64 %325, 2305843009213693951
  store i1 %326, i1* %1, align 1
  %327 = load i32, i32* @x.3, align 4
  %328 = load i32, i32* @y.4, align 4
  %329 = add i32 %327, -1
  %330 = mul i32 %329, %327
  %331 = and i32 %330, 1
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %333, %332
  %335 = select i1 %334, i32 -2022576484, i32 976618905
  br label %.backedge

336:                                              ; preds = %13
  %.0..0..0.58 = load volatile i1, i1* %1, align 1
  %337 = select i1 %.0..0..0.58, i32 -465521011, i32 -1408262923
  br label %.backedge

338:                                              ; preds = %13
  %339 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

340:                                              ; preds = %13
  %341 = sext i32 %.061 to i64
  %342 = sext i32 %.059 to i64
  %343 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %341, i64 %342
  %344 = load i64, i64* %343, align 8
  %345 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %344)
  br label %.backedge

346:                                              ; preds = %13
  %347 = load i32, i32* %6, align 4
  %348 = add i32 %347, -1
  %.not = icmp eq i32 %.059, %348
  %349 = select i1 %.not, i32 -235128574, i32 -539330815
  br label %.backedge

350:                                              ; preds = %13
  %351 = load i32, i32* @x.3, align 4
  %352 = load i32, i32* @y.4, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 -1344438775, i32 -58146657
  br label %.backedge

360:                                              ; preds = %13
  %361 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %362 = load i32, i32* @x.3, align 4
  %363 = load i32, i32* @y.4, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 -1988087399, i32 -58146657
  br label %.backedge

371:                                              ; preds = %13
  br label %.backedge

372:                                              ; preds = %13
  br label %.backedge

373:                                              ; preds = %13
  %374 = add i32 %.059, 1
  br label %.backedge

375:                                              ; preds = %13
  %376 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

377:                                              ; preds = %13
  %378 = load i32, i32* @x.3, align 4
  %379 = load i32, i32* @y.4, align 4
  %380 = add i32 %378, -1
  %381 = mul i32 %380, %378
  %382 = and i32 %381, 1
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %384, %383
  %386 = select i1 %385, i32 -1512413945, i32 1826414947
  br label %.backedge

387:                                              ; preds = %13
  %.neg = add i32 %.061, 1
  %388 = load i32, i32* @x.3, align 4
  %389 = load i32, i32* @y.4, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 1608247691, i32 1826414947
  br label %.backedge

397:                                              ; preds = %13
  br label %.backedge

398:                                              ; preds = %13
  %399 = load i32, i32* @x.3, align 4
  %400 = load i32, i32* @y.4, align 4
  %401 = add i32 %399, -1
  %402 = mul i32 %401, %399
  %403 = and i32 %402, 1
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %405, %404
  %407 = select i1 %406, i32 1119729514, i32 1218906450
  br label %.backedge

408:                                              ; preds = %13
  %409 = load i32, i32* @x.3, align 4
  %410 = load i32, i32* @y.4, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 -1726896090, i32 1218906450
  br label %.backedge

418:                                              ; preds = %13
  br label %.backedge

419:                                              ; preds = %13
  %420 = load i32, i32* @x.3, align 4
  %421 = load i32, i32* @y.4, align 4
  %422 = add i32 %420, -1
  %423 = mul i32 %422, %420
  %424 = and i32 %423, 1
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %426, %425
  %428 = select i1 %427, i32 772526338, i32 1679204075
  br label %.backedge

429:                                              ; preds = %13
  %430 = load i32, i32* @x.3, align 4
  %431 = load i32, i32* @y.4, align 4
  %432 = add i32 %430, -1
  %433 = mul i32 %432, %430
  %434 = and i32 %433, 1
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %436, %435
  %438 = select i1 %437, i32 -765600267, i32 1679204075
  br label %.backedge

439:                                              ; preds = %13
  ret i32 0

440:                                              ; preds = %13
  %441 = sext i32 %.077 to i64
  %442 = sext i32 %.075 to i64
  %443 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %441, i64 %442
  store i64 2305843009213693951, i64* %443, align 8
  br label %.backedge

444:                                              ; preds = %13
  %445 = sext i32 %.077 to i64
  %446 = getelementptr inbounds [101 x [101 x i64]], [101 x [101 x i64]]* %10, i64 0, i64 %445, i64 %445
  store i64 0, i64* %446, align 8
  br label %.backedge

447:                                              ; preds = %13
  br label %.backedge

448:                                              ; preds = %13
  %449 = add i32 %.071, 1
  br label %.backedge

450:                                              ; preds = %13
  br label %.backedge

451:                                              ; preds = %13
  %452 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %453 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %452, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

454:                                              ; preds = %13
  br label %.backedge

455:                                              ; preds = %13
  br label %.backedge

456:                                              ; preds = %13
  br label %.backedge

457:                                              ; preds = %13
  br label %.backedge

458:                                              ; preds = %13
  %459 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

460:                                              ; preds = %13
  %461 = add i32 %.061, 1
  br label %.backedge

462:                                              ; preds = %13
  br label %.backedge

463:                                              ; preds = %13
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  %8 = load i32, i32* @x.5, align 4
  %9 = load i32, i32* @y.6, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -310694224, i32 -362538854
  %17 = select i1 %15, i32 -451984659, i32 -362538854
  %18 = select i1 %15, i32 1522450566, i32 -1732862859
  %19 = select i1 %15, i32 1460971281, i32 -1732862859
  %20 = select i1 %15, i32 498202257, i32 -937309579
  %21 = select i1 %15, i32 1576516420, i32 -937309579
  br label %22

22:                                               ; preds = %.backedge, %2
  %.01114 = phi i64* [ undef, %2 ], [ %.01114.be, %.backedge ]
  %.011 = phi i64* [ undef, %2 ], [ %.011.be, %.backedge ]
  %.0 = phi i32 [ 531484894, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 531484894, label %23
    i32 -221937211, label %26
    i32 1576516420, label %27
    i32 498202257, label %28
    i32 -483180798, label %29
    i32 1460971281, label %30
    i32 1522450566, label %31
    i32 -111917659, label %32
    i32 -451984659, label %33
    i32 -310694224, label %34
    i32 -937309579, label %35
    i32 -1732862859, label %36
    i32 -362538854, label %37
  ]

.backedge:                                        ; preds = %22, %37, %36, %35, %33, %32, %31, %30, %29, %28, %27, %26, %23
  %.01114.be = phi i64* [ %.01114, %22 ], [ %.01114, %37 ], [ %.01114, %36 ], [ %.01114, %35 ], [ %.011, %33 ], [ %.01114, %32 ], [ %.01114, %31 ], [ %.01114, %30 ], [ %.01114, %29 ], [ %.01114, %28 ], [ %.01114, %27 ], [ %.01114, %26 ], [ %.01114, %23 ]
  %.011.be = phi i64* [ %.011, %22 ], [ %.011, %37 ], [ %0, %36 ], [ %1, %35 ], [ %.011, %33 ], [ %.011, %32 ], [ %.011, %31 ], [ %0, %30 ], [ %.011, %29 ], [ %.011, %28 ], [ %1, %27 ], [ %.011, %26 ], [ %.011, %23 ]
  %.0.be = phi i32 [ %.0, %22 ], [ -451984659, %37 ], [ 1460971281, %36 ], [ 1576516420, %35 ], [ %16, %33 ], [ %17, %32 ], [ -111917659, %31 ], [ %18, %30 ], [ %19, %29 ], [ -111917659, %28 ], [ %20, %27 ], [ %21, %26 ], [ %25, %23 ]
  br label %22

23:                                               ; preds = %22
  %.0..0..0.8 = load volatile i64, i64* %5, align 8
  %.0..0..0.9 = load volatile i64, i64* %4, align 8
  %24 = icmp slt i64 %.0..0..0.8, %.0..0..0.9
  %25 = select i1 %24, i32 -221937211, i32 -483180798
  br label %.backedge

26:                                               ; preds = %22
  br label %.backedge

27:                                               ; preds = %22
  br label %.backedge

28:                                               ; preds = %22
  br label %.backedge

29:                                               ; preds = %22
  br label %.backedge

30:                                               ; preds = %22
  br label %.backedge

31:                                               ; preds = %22
  br label %.backedge

32:                                               ; preds = %22
  br label %.backedge

33:                                               ; preds = %22
  br label %.backedge

34:                                               ; preds = %22
  store i64* %.01114, i64** %3, align 8
  %.0..0..0.10 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.10

35:                                               ; preds = %22
  br label %.backedge

36:                                               ; preds = %22
  br label %.backedge

37:                                               ; preds = %22
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s070596459.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
