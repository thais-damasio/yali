; ModuleID = 'build_ollvm/programs/p02363/s273505783.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s273505783.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@fi = local_unnamed_addr global i64 0, align 8
@endtime = local_unnamed_addr global i64 0, align 8
@INF = local_unnamed_addr global i64 2147483647, align 8
@n = global i32 0, align 4
@m = global i32 0, align 4
@a = global i32 0, align 4
@b = global i32 0, align 4
@c = global i32 0, align 4
@t = local_unnamed_addr global i32 0, align 4
@k = local_unnamed_addr global i32 0, align 4
@p = local_unnamed_addr global i32 0, align 4
@q = local_unnamed_addr global i32 0, align 4
@r = local_unnamed_addr global i32 0, align 4
@wf = global [100 x [100 x i64]] zeroinitializer, align 16
@.str = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s273505783.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@str.1 = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i64, align 8
  %8 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull @m)
  br label %9

9:                                                ; preds = %.backedge, %0
  %.080 = phi i8 [ 0, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ 0, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.0 = phi i32 [ -196303750, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -196303750, label %10
    i32 759496789, label %14
    i32 1073633451, label %15
    i32 -837070042, label %19
    i32 -943763935, label %24
    i32 820001428, label %26
    i32 397465408, label %27
    i32 -1424566547, label %29
    i32 1483046118, label %30
    i32 -123927860, label %34
    i32 -676663724, label %37
    i32 335458738, label %39
    i32 2042271440, label %40
    i32 -843032559, label %50
    i32 -1510602053, label %62
    i32 51218870, label %64
    i32 108401352, label %73
    i32 -645009806, label %75
    i32 822860176, label %85
    i32 -1494845869, label %95
    i32 -1277538375, label %96
    i32 210632409, label %100
    i32 521097412, label %101
    i32 1797336522, label %111
    i32 2092660306, label %123
    i32 -905820675, label %125
    i32 -877420292, label %126
    i32 -1392926418, label %136
    i32 -1902024345, label %148
    i32 -164333433, label %150
    i32 -1718651437, label %157
    i32 1626775815, label %164
    i32 1586119038, label %176
    i32 -251736747, label %186
    i32 1896472955, label %196
    i32 865085883, label %197
    i32 1486255814, label %207
    i32 -1993753875, label %218
    i32 1619828573, label %219
    i32 -1961769365, label %229
    i32 1581217130, label %239
    i32 -2091912869, label %240
    i32 -689616005, label %242
    i32 -1967879277, label %243
    i32 205096965, label %245
    i32 -957093317, label %246
    i32 1588909756, label %250
    i32 1951755368, label %260
    i32 1172404590, label %274
    i32 589867374, label %276
    i32 -833876716, label %286
    i32 -2137742013, label %296
    i32 -250392375, label %297
    i32 -1610691867, label %298
    i32 -1673092596, label %300
    i32 499871345, label %302
    i32 -1017290830, label %312
    i32 -134843468, label %322
    i32 -1254040545, label %323
    i32 1981896119, label %333
    i32 -1502535780, label %343
    i32 -1752371422, label %344
    i32 1570557447, label %348
    i32 1230898499, label %349
    i32 -1753379799, label %353
    i32 -898593811, label %363
    i32 -1545680077, label %374
    i32 2003452289, label %376
    i32 -2053671869, label %386
    i32 1025286157, label %396
    i32 -1875001631, label %397
    i32 1803997340, label %407
    i32 -744778587, label %423
    i32 2137921492, label %425
    i32 -1099014253, label %435
    i32 851430196, label %446
    i32 1826872806, label %447
    i32 -1154535515, label %453
    i32 292759455, label %463
    i32 -1767017626, label %473
    i32 -170987767, label %474
    i32 -272802089, label %476
    i32 -1231379260, label %477
    i32 -942267953, label %479
    i32 -161907079, label %489
    i32 -718476433, label %499
    i32 -2042993375, label %500
    i32 -179576060, label %501
    i32 1950828834, label %502
    i32 1046573622, label %503
    i32 1450662168, label %504
    i32 -376244054, label %505
    i32 338458613, label %506
    i32 1279707508, label %508
    i32 -2097481467, label %509
    i32 2069887165, label %510
    i32 1831870401, label %511
    i32 1210153852, label %512
    i32 -1320398571, label %513
    i32 -2060075955, label %514
    i32 -402391554, label %515
    i32 -102210277, label %516
    i32 1977047744, label %518
    i32 -519729168, label %519
  ]

.backedge:                                        ; preds = %9, %519, %518, %516, %515, %514, %513, %512, %511, %510, %509, %508, %506, %505, %504, %503, %502, %501, %499, %489, %479, %477, %476, %474, %473, %463, %453, %447, %446, %435, %425, %423, %407, %397, %396, %386, %376, %374, %363, %353, %349, %348, %344, %343, %333, %323, %322, %312, %302, %300, %298, %297, %296, %286, %276, %274, %260, %250, %246, %245, %243, %242, %240, %239, %229, %219, %218, %207, %197, %196, %186, %176, %164, %157, %150, %148, %136, %126, %125, %123, %111, %101, %100, %96, %95, %85, %75, %73, %64, %62, %50, %40, %39, %37, %34, %30, %29, %27, %26, %24, %19, %15, %14, %10
  %.080.be = phi i8 [ %.080, %9 ], [ %.080, %519 ], [ %.080, %518 ], [ %.080, %516 ], [ %.080, %515 ], [ %.080, %514 ], [ %.080, %513 ], [ %.080, %512 ], [ %.080, %511 ], [ 1, %510 ], [ %.080, %509 ], [ %.080, %508 ], [ %.080, %506 ], [ %.080, %505 ], [ %.080, %504 ], [ %.080, %503 ], [ %.080, %502 ], [ %.080, %501 ], [ %.080, %499 ], [ %.080, %489 ], [ %.080, %479 ], [ %.080, %477 ], [ %.080, %476 ], [ %.080, %474 ], [ %.080, %473 ], [ %.080, %463 ], [ %.080, %453 ], [ %.080, %447 ], [ %.080, %446 ], [ %.080, %435 ], [ %.080, %425 ], [ %.080, %423 ], [ %.080, %407 ], [ %.080, %397 ], [ %.080, %396 ], [ %.080, %386 ], [ %.080, %376 ], [ %.080, %374 ], [ %.080, %363 ], [ %.080, %353 ], [ %.080, %349 ], [ %.080, %348 ], [ %.080, %344 ], [ %.080, %343 ], [ %.080, %333 ], [ %.080, %323 ], [ %.080, %322 ], [ %.080, %312 ], [ %.080, %302 ], [ %.080, %300 ], [ %.080, %298 ], [ %.080, %297 ], [ %.080, %296 ], [ 1, %286 ], [ %.080, %276 ], [ %.080, %274 ], [ %.080, %260 ], [ %.080, %250 ], [ %.080, %246 ], [ %.080, %245 ], [ %.080, %243 ], [ %.080, %242 ], [ %.080, %240 ], [ %.080, %239 ], [ %.080, %229 ], [ %.080, %219 ], [ %.080, %218 ], [ %.080, %207 ], [ %.080, %197 ], [ %.080, %196 ], [ %.080, %186 ], [ %.080, %176 ], [ %.080, %164 ], [ %.080, %157 ], [ %.080, %150 ], [ %.080, %148 ], [ %.080, %136 ], [ %.080, %126 ], [ %.080, %125 ], [ %.080, %123 ], [ %.080, %111 ], [ %.080, %101 ], [ %.080, %100 ], [ %.080, %96 ], [ %.080, %95 ], [ %.080, %85 ], [ %.080, %75 ], [ %.080, %73 ], [ %.080, %64 ], [ %.080, %62 ], [ %.080, %50 ], [ %.080, %40 ], [ %.080, %39 ], [ %.080, %37 ], [ %.080, %34 ], [ %.080, %30 ], [ %.080, %29 ], [ %.080, %27 ], [ %.080, %26 ], [ %.080, %24 ], [ %.080, %19 ], [ %.080, %15 ], [ %.080, %14 ], [ %.080, %10 ]
  %.078.be = phi i32 [ %.078, %9 ], [ %.078, %519 ], [ %.078, %518 ], [ %.078, %516 ], [ %.078, %515 ], [ %.078, %514 ], [ %.078, %513 ], [ %.078, %512 ], [ %.078, %511 ], [ %.078, %510 ], [ %.078, %509 ], [ %.078, %508 ], [ %.078, %506 ], [ %.078, %505 ], [ %.078, %504 ], [ %.078, %503 ], [ %.078, %502 ], [ %.078, %501 ], [ %.078, %499 ], [ %.078, %489 ], [ %.078, %479 ], [ %.078, %477 ], [ %.078, %476 ], [ %.078, %474 ], [ %.078, %473 ], [ %.078, %463 ], [ %.078, %453 ], [ %.078, %447 ], [ %.078, %446 ], [ %.078, %435 ], [ %.078, %425 ], [ %.078, %423 ], [ %.078, %407 ], [ %.078, %397 ], [ %.078, %396 ], [ %.078, %386 ], [ %.078, %376 ], [ %.078, %374 ], [ %.078, %363 ], [ %.078, %353 ], [ %.078, %349 ], [ %.078, %348 ], [ %.078, %344 ], [ %.078, %343 ], [ %.078, %333 ], [ %.078, %323 ], [ %.078, %322 ], [ %.078, %312 ], [ %.078, %302 ], [ %.078, %300 ], [ %.078, %298 ], [ %.078, %297 ], [ %.078, %296 ], [ %.078, %286 ], [ %.078, %276 ], [ %.078, %274 ], [ %.078, %260 ], [ %.078, %250 ], [ %.078, %246 ], [ %.078, %245 ], [ %.078, %243 ], [ %.078, %242 ], [ %.078, %240 ], [ %.078, %239 ], [ %.078, %229 ], [ %.078, %219 ], [ %.078, %218 ], [ %.078, %207 ], [ %.078, %197 ], [ %.078, %196 ], [ %.078, %186 ], [ %.078, %176 ], [ %.078, %164 ], [ %.078, %157 ], [ %.078, %150 ], [ %.078, %148 ], [ %.078, %136 ], [ %.078, %126 ], [ %.078, %125 ], [ %.078, %123 ], [ %.078, %111 ], [ %.078, %101 ], [ %.078, %100 ], [ %.078, %96 ], [ %.078, %95 ], [ %.078, %85 ], [ %.078, %75 ], [ %.078, %73 ], [ %.078, %64 ], [ %.078, %62 ], [ %.078, %50 ], [ %.078, %40 ], [ %.078, %39 ], [ %.078, %37 ], [ %.078, %34 ], [ %.078, %30 ], [ %.078, %29 ], [ %28, %27 ], [ %.078, %26 ], [ %.078, %24 ], [ %.078, %19 ], [ %.078, %15 ], [ %.078, %14 ], [ %.078, %10 ]
  %.076.be = phi i32 [ %.076, %9 ], [ %.076, %519 ], [ %.076, %518 ], [ %.076, %516 ], [ %.076, %515 ], [ %.076, %514 ], [ %.076, %513 ], [ %.076, %512 ], [ %.076, %511 ], [ %.076, %510 ], [ %.076, %509 ], [ %.076, %508 ], [ %.076, %506 ], [ %.076, %505 ], [ %.076, %504 ], [ %.076, %503 ], [ %.076, %502 ], [ %.076, %501 ], [ %.076, %499 ], [ %.076, %489 ], [ %.076, %479 ], [ %.076, %477 ], [ %.076, %476 ], [ %.076, %474 ], [ %.076, %473 ], [ %.076, %463 ], [ %.076, %453 ], [ %.076, %447 ], [ %.076, %446 ], [ %.076, %435 ], [ %.076, %425 ], [ %.076, %423 ], [ %.076, %407 ], [ %.076, %397 ], [ %.076, %396 ], [ %.076, %386 ], [ %.076, %376 ], [ %.076, %374 ], [ %.076, %363 ], [ %.076, %353 ], [ %.076, %349 ], [ %.076, %348 ], [ %.076, %344 ], [ %.076, %343 ], [ %.076, %333 ], [ %.076, %323 ], [ %.076, %322 ], [ %.076, %312 ], [ %.076, %302 ], [ %.076, %300 ], [ %.076, %298 ], [ %.076, %297 ], [ %.076, %296 ], [ %.076, %286 ], [ %.076, %276 ], [ %.076, %274 ], [ %.076, %260 ], [ %.076, %250 ], [ %.076, %246 ], [ %.076, %245 ], [ %.076, %243 ], [ %.076, %242 ], [ %.076, %240 ], [ %.076, %239 ], [ %.076, %229 ], [ %.076, %219 ], [ %.076, %218 ], [ %.076, %207 ], [ %.076, %197 ], [ %.076, %196 ], [ %.076, %186 ], [ %.076, %176 ], [ %.076, %164 ], [ %.076, %157 ], [ %.076, %150 ], [ %.076, %148 ], [ %.076, %136 ], [ %.076, %126 ], [ %.076, %125 ], [ %.076, %123 ], [ %.076, %111 ], [ %.076, %101 ], [ %.076, %100 ], [ %.076, %96 ], [ %.076, %95 ], [ %.076, %85 ], [ %.076, %75 ], [ %.076, %73 ], [ %.076, %64 ], [ %.076, %62 ], [ %.076, %50 ], [ %.076, %40 ], [ %.076, %39 ], [ %.076, %37 ], [ %.076, %34 ], [ %.076, %30 ], [ %.076, %29 ], [ %.076, %27 ], [ %.076, %26 ], [ %25, %24 ], [ %.076, %19 ], [ %.076, %15 ], [ 0, %14 ], [ %.076, %10 ]
  %.074.be = phi i32 [ %.074, %9 ], [ %.074, %519 ], [ %.074, %518 ], [ %.074, %516 ], [ %.074, %515 ], [ %.074, %514 ], [ %.074, %513 ], [ %.074, %512 ], [ %.074, %511 ], [ %.074, %510 ], [ %.074, %509 ], [ %.074, %508 ], [ %.074, %506 ], [ %.074, %505 ], [ %.074, %504 ], [ %.074, %503 ], [ %.074, %502 ], [ %.074, %501 ], [ %.074, %499 ], [ %.074, %489 ], [ %.074, %479 ], [ %.074, %477 ], [ %.074, %476 ], [ %.074, %474 ], [ %.074, %473 ], [ %.074, %463 ], [ %.074, %453 ], [ %.074, %447 ], [ %.074, %446 ], [ %.074, %435 ], [ %.074, %425 ], [ %.074, %423 ], [ %.074, %407 ], [ %.074, %397 ], [ %.074, %396 ], [ %.074, %386 ], [ %.074, %376 ], [ %.074, %374 ], [ %.074, %363 ], [ %.074, %353 ], [ %.074, %349 ], [ %.074, %348 ], [ %.074, %344 ], [ %.074, %343 ], [ %.074, %333 ], [ %.074, %323 ], [ %.074, %322 ], [ %.074, %312 ], [ %.074, %302 ], [ %.074, %300 ], [ %.074, %298 ], [ %.074, %297 ], [ %.074, %296 ], [ %.074, %286 ], [ %.074, %276 ], [ %.074, %274 ], [ %.074, %260 ], [ %.074, %250 ], [ %.074, %246 ], [ %.074, %245 ], [ %.074, %243 ], [ %.074, %242 ], [ %.074, %240 ], [ %.074, %239 ], [ %.074, %229 ], [ %.074, %219 ], [ %.074, %218 ], [ %.074, %207 ], [ %.074, %197 ], [ %.074, %196 ], [ %.074, %186 ], [ %.074, %176 ], [ %.074, %164 ], [ %.074, %157 ], [ %.074, %150 ], [ %.074, %148 ], [ %.074, %136 ], [ %.074, %126 ], [ %.074, %125 ], [ %.074, %123 ], [ %.074, %111 ], [ %.074, %101 ], [ %.074, %100 ], [ %.074, %96 ], [ %.074, %95 ], [ %.074, %85 ], [ %.074, %75 ], [ %.074, %73 ], [ %.074, %64 ], [ %.074, %62 ], [ %.074, %50 ], [ %.074, %40 ], [ %.074, %39 ], [ %38, %37 ], [ %.074, %34 ], [ %.074, %30 ], [ 0, %29 ], [ %.074, %27 ], [ %.074, %26 ], [ %.074, %24 ], [ %.074, %19 ], [ %.074, %15 ], [ %.074, %14 ], [ %.074, %10 ]
  %.072.be = phi i32 [ %.072, %9 ], [ %.072, %519 ], [ %.072, %518 ], [ %.072, %516 ], [ %.072, %515 ], [ %.072, %514 ], [ %.072, %513 ], [ %.072, %512 ], [ %.072, %511 ], [ %.072, %510 ], [ %.072, %509 ], [ %.072, %508 ], [ %.072, %506 ], [ %.072, %505 ], [ %.072, %504 ], [ %.072, %503 ], [ %.072, %502 ], [ %.072, %501 ], [ %.072, %499 ], [ %.072, %489 ], [ %.072, %479 ], [ %.072, %477 ], [ %.072, %476 ], [ %.072, %474 ], [ %.072, %473 ], [ %.072, %463 ], [ %.072, %453 ], [ %.072, %447 ], [ %.072, %446 ], [ %.072, %435 ], [ %.072, %425 ], [ %.072, %423 ], [ %.072, %407 ], [ %.072, %397 ], [ %.072, %396 ], [ %.072, %386 ], [ %.072, %376 ], [ %.072, %374 ], [ %.072, %363 ], [ %.072, %353 ], [ %.072, %349 ], [ %.072, %348 ], [ %.072, %344 ], [ %.072, %343 ], [ %.072, %333 ], [ %.072, %323 ], [ %.072, %322 ], [ %.072, %312 ], [ %.072, %302 ], [ %.072, %300 ], [ %.072, %298 ], [ %.072, %297 ], [ %.072, %296 ], [ %.072, %286 ], [ %.072, %276 ], [ %.072, %274 ], [ %.072, %260 ], [ %.072, %250 ], [ %.072, %246 ], [ %.072, %245 ], [ %.072, %243 ], [ %.072, %242 ], [ %.072, %240 ], [ %.072, %239 ], [ %.072, %229 ], [ %.072, %219 ], [ %.072, %218 ], [ %.072, %207 ], [ %.072, %197 ], [ %.072, %196 ], [ %.072, %186 ], [ %.072, %176 ], [ %.072, %164 ], [ %.072, %157 ], [ %.072, %150 ], [ %.072, %148 ], [ %.072, %136 ], [ %.072, %126 ], [ %.072, %125 ], [ %.072, %123 ], [ %.072, %111 ], [ %.072, %101 ], [ %.072, %100 ], [ %.072, %96 ], [ %.072, %95 ], [ %.072, %85 ], [ %.072, %75 ], [ %74, %73 ], [ %.072, %64 ], [ %.072, %62 ], [ %.072, %50 ], [ %.072, %40 ], [ 0, %39 ], [ %.072, %37 ], [ %.072, %34 ], [ %.072, %30 ], [ %.072, %29 ], [ %.072, %27 ], [ %.072, %26 ], [ %.072, %24 ], [ %.072, %19 ], [ %.072, %15 ], [ %.072, %14 ], [ %.072, %10 ]
  %.070.be = phi i32 [ %.070, %9 ], [ %.070, %519 ], [ %.070, %518 ], [ %.070, %516 ], [ %.070, %515 ], [ %.070, %514 ], [ %.070, %513 ], [ %.070, %512 ], [ %.070, %511 ], [ %.070, %510 ], [ %.070, %509 ], [ %.070, %508 ], [ %.070, %506 ], [ %.070, %505 ], [ %.070, %504 ], [ %.070, %503 ], [ 0, %502 ], [ %.070, %501 ], [ %.070, %499 ], [ %.070, %489 ], [ %.070, %479 ], [ %.070, %477 ], [ %.070, %476 ], [ %.070, %474 ], [ %.070, %473 ], [ %.070, %463 ], [ %.070, %453 ], [ %.070, %447 ], [ %.070, %446 ], [ %.070, %435 ], [ %.070, %425 ], [ %.070, %423 ], [ %.070, %407 ], [ %.070, %397 ], [ %.070, %396 ], [ %.070, %386 ], [ %.070, %376 ], [ %.070, %374 ], [ %.070, %363 ], [ %.070, %353 ], [ %.070, %349 ], [ %.070, %348 ], [ %.070, %344 ], [ %.070, %343 ], [ %.070, %333 ], [ %.070, %323 ], [ %.070, %322 ], [ %.070, %312 ], [ %.070, %302 ], [ %.070, %300 ], [ %.070, %298 ], [ %.070, %297 ], [ %.070, %296 ], [ %.070, %286 ], [ %.070, %276 ], [ %.070, %274 ], [ %.070, %260 ], [ %.070, %250 ], [ %.070, %246 ], [ %.070, %245 ], [ %244, %243 ], [ %.070, %242 ], [ %.070, %240 ], [ %.070, %239 ], [ %.070, %229 ], [ %.070, %219 ], [ %.070, %218 ], [ %.070, %207 ], [ %.070, %197 ], [ %.070, %196 ], [ %.070, %186 ], [ %.070, %176 ], [ %.070, %164 ], [ %.070, %157 ], [ %.070, %150 ], [ %.070, %148 ], [ %.070, %136 ], [ %.070, %126 ], [ %.070, %125 ], [ %.070, %123 ], [ %.070, %111 ], [ %.070, %101 ], [ %.070, %100 ], [ %.070, %96 ], [ %.070, %95 ], [ 0, %85 ], [ %.070, %75 ], [ %.070, %73 ], [ %.070, %64 ], [ %.070, %62 ], [ %.070, %50 ], [ %.070, %40 ], [ %.070, %39 ], [ %.070, %37 ], [ %.070, %34 ], [ %.070, %30 ], [ %.070, %29 ], [ %.070, %27 ], [ %.070, %26 ], [ %.070, %24 ], [ %.070, %19 ], [ %.070, %15 ], [ %.070, %14 ], [ %.070, %10 ]
  %.068.be = phi i32 [ %.068, %9 ], [ %.068, %519 ], [ %.068, %518 ], [ %.068, %516 ], [ %.068, %515 ], [ %.068, %514 ], [ %.068, %513 ], [ %.068, %512 ], [ %.068, %511 ], [ %.068, %510 ], [ %.068, %509 ], [ %.068, %508 ], [ %.068, %506 ], [ %.068, %505 ], [ %.068, %504 ], [ %.068, %503 ], [ %.068, %502 ], [ %.068, %501 ], [ %.068, %499 ], [ %.068, %489 ], [ %.068, %479 ], [ %.068, %477 ], [ %.068, %476 ], [ %.068, %474 ], [ %.068, %473 ], [ %.068, %463 ], [ %.068, %453 ], [ %.068, %447 ], [ %.068, %446 ], [ %.068, %435 ], [ %.068, %425 ], [ %.068, %423 ], [ %.068, %407 ], [ %.068, %397 ], [ %.068, %396 ], [ %.068, %386 ], [ %.068, %376 ], [ %.068, %374 ], [ %.068, %363 ], [ %.068, %353 ], [ %.068, %349 ], [ %.068, %348 ], [ %.068, %344 ], [ %.068, %343 ], [ %.068, %333 ], [ %.068, %323 ], [ %.068, %322 ], [ %.068, %312 ], [ %.068, %302 ], [ %.068, %300 ], [ %.068, %298 ], [ %.068, %297 ], [ %.068, %296 ], [ %.068, %286 ], [ %.068, %276 ], [ %.068, %274 ], [ %.068, %260 ], [ %.068, %250 ], [ %.068, %246 ], [ %.068, %245 ], [ %.068, %243 ], [ %.068, %242 ], [ %241, %240 ], [ %.068, %239 ], [ %.068, %229 ], [ %.068, %219 ], [ %.068, %218 ], [ %.068, %207 ], [ %.068, %197 ], [ %.068, %196 ], [ %.068, %186 ], [ %.068, %176 ], [ %.068, %164 ], [ %.068, %157 ], [ %.068, %150 ], [ %.068, %148 ], [ %.068, %136 ], [ %.068, %126 ], [ %.068, %125 ], [ %.068, %123 ], [ %.068, %111 ], [ %.068, %101 ], [ 0, %100 ], [ %.068, %96 ], [ %.068, %95 ], [ %.068, %85 ], [ %.068, %75 ], [ %.068, %73 ], [ %.068, %64 ], [ %.068, %62 ], [ %.068, %50 ], [ %.068, %40 ], [ %.068, %39 ], [ %.068, %37 ], [ %.068, %34 ], [ %.068, %30 ], [ %.068, %29 ], [ %.068, %27 ], [ %.068, %26 ], [ %.068, %24 ], [ %.068, %19 ], [ %.068, %15 ], [ %.068, %14 ], [ %.068, %10 ]
  %.066.be = phi i32 [ %.066, %9 ], [ %.066, %519 ], [ %.066, %518 ], [ %.066, %516 ], [ %.066, %515 ], [ %.066, %514 ], [ %.066, %513 ], [ %.066, %512 ], [ %.066, %511 ], [ %.066, %510 ], [ %.066, %509 ], [ %.066, %508 ], [ %507, %506 ], [ %.066, %505 ], [ %.066, %504 ], [ %.066, %503 ], [ %.066, %502 ], [ %.066, %501 ], [ %.066, %499 ], [ %.066, %489 ], [ %.066, %479 ], [ %.066, %477 ], [ %.066, %476 ], [ %.066, %474 ], [ %.066, %473 ], [ %.066, %463 ], [ %.066, %453 ], [ %.066, %447 ], [ %.066, %446 ], [ %.066, %435 ], [ %.066, %425 ], [ %.066, %423 ], [ %.066, %407 ], [ %.066, %397 ], [ %.066, %396 ], [ %.066, %386 ], [ %.066, %376 ], [ %.066, %374 ], [ %.066, %363 ], [ %.066, %353 ], [ %.066, %349 ], [ %.066, %348 ], [ %.066, %344 ], [ %.066, %343 ], [ %.066, %333 ], [ %.066, %323 ], [ %.066, %322 ], [ %.066, %312 ], [ %.066, %302 ], [ %.066, %300 ], [ %.066, %298 ], [ %.066, %297 ], [ %.066, %296 ], [ %.066, %286 ], [ %.066, %276 ], [ %.066, %274 ], [ %.066, %260 ], [ %.066, %250 ], [ %.066, %246 ], [ %.066, %245 ], [ %.066, %243 ], [ %.066, %242 ], [ %.066, %240 ], [ %.066, %239 ], [ %.066, %229 ], [ %.066, %219 ], [ %.066, %218 ], [ %208, %207 ], [ %.066, %197 ], [ %.066, %196 ], [ %.066, %186 ], [ %.066, %176 ], [ %.066, %164 ], [ %.066, %157 ], [ %.066, %150 ], [ %.066, %148 ], [ %.066, %136 ], [ %.066, %126 ], [ 0, %125 ], [ %.066, %123 ], [ %.066, %111 ], [ %.066, %101 ], [ %.066, %100 ], [ %.066, %96 ], [ %.066, %95 ], [ %.066, %85 ], [ %.066, %75 ], [ %.066, %73 ], [ %.066, %64 ], [ %.066, %62 ], [ %.066, %50 ], [ %.066, %40 ], [ %.066, %39 ], [ %.066, %37 ], [ %.066, %34 ], [ %.066, %30 ], [ %.066, %29 ], [ %.066, %27 ], [ %.066, %26 ], [ %.066, %24 ], [ %.066, %19 ], [ %.066, %15 ], [ %.066, %14 ], [ %.066, %10 ]
  %.064.be = phi i32 [ %.064, %9 ], [ %.064, %519 ], [ %.064, %518 ], [ %.064, %516 ], [ %.064, %515 ], [ %.064, %514 ], [ %.064, %513 ], [ %.064, %512 ], [ %.064, %511 ], [ %.064, %510 ], [ %.064, %509 ], [ %.064, %508 ], [ %.064, %506 ], [ %.064, %505 ], [ %.064, %504 ], [ %.064, %503 ], [ %.064, %502 ], [ %.064, %501 ], [ %.064, %499 ], [ %.064, %489 ], [ %.064, %479 ], [ %.064, %477 ], [ %.064, %476 ], [ %.064, %474 ], [ %.064, %473 ], [ %.064, %463 ], [ %.064, %453 ], [ %.064, %447 ], [ %.064, %446 ], [ %.064, %435 ], [ %.064, %425 ], [ %.064, %423 ], [ %.064, %407 ], [ %.064, %397 ], [ %.064, %396 ], [ %.064, %386 ], [ %.064, %376 ], [ %.064, %374 ], [ %.064, %363 ], [ %.064, %353 ], [ %.064, %349 ], [ %.064, %348 ], [ %.064, %344 ], [ %.064, %343 ], [ %.064, %333 ], [ %.064, %323 ], [ %.064, %322 ], [ %.064, %312 ], [ %.064, %302 ], [ %.064, %300 ], [ %299, %298 ], [ %.064, %297 ], [ %.064, %296 ], [ %.064, %286 ], [ %.064, %276 ], [ %.064, %274 ], [ %.064, %260 ], [ %.064, %250 ], [ %.064, %246 ], [ 0, %245 ], [ %.064, %243 ], [ %.064, %242 ], [ %.064, %240 ], [ %.064, %239 ], [ %.064, %229 ], [ %.064, %219 ], [ %.064, %218 ], [ %.064, %207 ], [ %.064, %197 ], [ %.064, %196 ], [ %.064, %186 ], [ %.064, %176 ], [ %.064, %164 ], [ %.064, %157 ], [ %.064, %150 ], [ %.064, %148 ], [ %.064, %136 ], [ %.064, %126 ], [ %.064, %125 ], [ %.064, %123 ], [ %.064, %111 ], [ %.064, %101 ], [ %.064, %100 ], [ %.064, %96 ], [ %.064, %95 ], [ %.064, %85 ], [ %.064, %75 ], [ %.064, %73 ], [ %.064, %64 ], [ %.064, %62 ], [ %.064, %50 ], [ %.064, %40 ], [ %.064, %39 ], [ %.064, %37 ], [ %.064, %34 ], [ %.064, %30 ], [ %.064, %29 ], [ %.064, %27 ], [ %.064, %26 ], [ %.064, %24 ], [ %.064, %19 ], [ %.064, %15 ], [ %.064, %14 ], [ %.064, %10 ]
  %.062.be = phi i32 [ %.062, %9 ], [ %.062, %519 ], [ %.062, %518 ], [ %.062, %516 ], [ %.062, %515 ], [ %.062, %514 ], [ %.062, %513 ], [ 0, %512 ], [ %.062, %511 ], [ %.062, %510 ], [ %.062, %509 ], [ %.062, %508 ], [ %.062, %506 ], [ %.062, %505 ], [ %.062, %504 ], [ %.062, %503 ], [ %.062, %502 ], [ %.062, %501 ], [ %.062, %499 ], [ %.062, %489 ], [ %.062, %479 ], [ %478, %477 ], [ %.062, %476 ], [ %.062, %474 ], [ %.062, %473 ], [ %.062, %463 ], [ %.062, %453 ], [ %.062, %447 ], [ %.062, %446 ], [ %.062, %435 ], [ %.062, %425 ], [ %.062, %423 ], [ %.062, %407 ], [ %.062, %397 ], [ %.062, %396 ], [ %.062, %386 ], [ %.062, %376 ], [ %.062, %374 ], [ %.062, %363 ], [ %.062, %353 ], [ %.062, %349 ], [ %.062, %348 ], [ %.062, %344 ], [ %.062, %343 ], [ 0, %333 ], [ %.062, %323 ], [ %.062, %322 ], [ %.062, %312 ], [ %.062, %302 ], [ %.062, %300 ], [ %.062, %298 ], [ %.062, %297 ], [ %.062, %296 ], [ %.062, %286 ], [ %.062, %276 ], [ %.062, %274 ], [ %.062, %260 ], [ %.062, %250 ], [ %.062, %246 ], [ %.062, %245 ], [ %.062, %243 ], [ %.062, %242 ], [ %.062, %240 ], [ %.062, %239 ], [ %.062, %229 ], [ %.062, %219 ], [ %.062, %218 ], [ %.062, %207 ], [ %.062, %197 ], [ %.062, %196 ], [ %.062, %186 ], [ %.062, %176 ], [ %.062, %164 ], [ %.062, %157 ], [ %.062, %150 ], [ %.062, %148 ], [ %.062, %136 ], [ %.062, %126 ], [ %.062, %125 ], [ %.062, %123 ], [ %.062, %111 ], [ %.062, %101 ], [ %.062, %100 ], [ %.062, %96 ], [ %.062, %95 ], [ %.062, %85 ], [ %.062, %75 ], [ %.062, %73 ], [ %.062, %64 ], [ %.062, %62 ], [ %.062, %50 ], [ %.062, %40 ], [ %.062, %39 ], [ %.062, %37 ], [ %.062, %34 ], [ %.062, %30 ], [ %.062, %29 ], [ %.062, %27 ], [ %.062, %26 ], [ %.062, %24 ], [ %.062, %19 ], [ %.062, %15 ], [ %.062, %14 ], [ %.062, %10 ]
  %.060.be = phi i32 [ %.060, %9 ], [ %.060, %519 ], [ %.060, %518 ], [ %.060, %516 ], [ %.060, %515 ], [ %.060, %514 ], [ %.060, %513 ], [ %.060, %512 ], [ %.060, %511 ], [ %.060, %510 ], [ %.060, %509 ], [ %.060, %508 ], [ %.060, %506 ], [ %.060, %505 ], [ %.060, %504 ], [ %.060, %503 ], [ %.060, %502 ], [ %.060, %501 ], [ %.060, %499 ], [ %.060, %489 ], [ %.060, %479 ], [ %.060, %477 ], [ %.060, %476 ], [ %475, %474 ], [ %.060, %473 ], [ %.060, %463 ], [ %.060, %453 ], [ %.060, %447 ], [ %.060, %446 ], [ %.060, %435 ], [ %.060, %425 ], [ %.060, %423 ], [ %.060, %407 ], [ %.060, %397 ], [ %.060, %396 ], [ %.060, %386 ], [ %.060, %376 ], [ %.060, %374 ], [ %.060, %363 ], [ %.060, %353 ], [ %.060, %349 ], [ 0, %348 ], [ %.060, %344 ], [ %.060, %343 ], [ %.060, %333 ], [ %.060, %323 ], [ %.060, %322 ], [ %.060, %312 ], [ %.060, %302 ], [ %.060, %300 ], [ %.060, %298 ], [ %.060, %297 ], [ %.060, %296 ], [ %.060, %286 ], [ %.060, %276 ], [ %.060, %274 ], [ %.060, %260 ], [ %.060, %250 ], [ %.060, %246 ], [ %.060, %245 ], [ %.060, %243 ], [ %.060, %242 ], [ %.060, %240 ], [ %.060, %239 ], [ %.060, %229 ], [ %.060, %219 ], [ %.060, %218 ], [ %.060, %207 ], [ %.060, %197 ], [ %.060, %196 ], [ %.060, %186 ], [ %.060, %176 ], [ %.060, %164 ], [ %.060, %157 ], [ %.060, %150 ], [ %.060, %148 ], [ %.060, %136 ], [ %.060, %126 ], [ %.060, %125 ], [ %.060, %123 ], [ %.060, %111 ], [ %.060, %101 ], [ %.060, %100 ], [ %.060, %96 ], [ %.060, %95 ], [ %.060, %85 ], [ %.060, %75 ], [ %.060, %73 ], [ %.060, %64 ], [ %.060, %62 ], [ %.060, %50 ], [ %.060, %40 ], [ %.060, %39 ], [ %.060, %37 ], [ %.060, %34 ], [ %.060, %30 ], [ %.060, %29 ], [ %.060, %27 ], [ %.060, %26 ], [ %.060, %24 ], [ %.060, %19 ], [ %.060, %15 ], [ %.060, %14 ], [ %.060, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ -161907079, %519 ], [ 292759455, %518 ], [ -1099014253, %516 ], [ 1803997340, %515 ], [ -2053671869, %514 ], [ -898593811, %513 ], [ 1981896119, %512 ], [ -1017290830, %511 ], [ -833876716, %510 ], [ 1951755368, %509 ], [ -1961769365, %508 ], [ 1486255814, %506 ], [ -251736747, %505 ], [ -1392926418, %504 ], [ 1797336522, %503 ], [ 822860176, %502 ], [ -843032559, %501 ], [ -2042993375, %499 ], [ %498, %489 ], [ %488, %479 ], [ -1752371422, %477 ], [ -1231379260, %476 ], [ 1230898499, %474 ], [ -170987767, %473 ], [ %472, %463 ], [ %462, %453 ], [ -1154535515, %447 ], [ -1154535515, %446 ], [ %445, %435 ], [ %434, %425 ], [ %424, %423 ], [ %422, %407 ], [ %406, %397 ], [ -1875001631, %396 ], [ %395, %386 ], [ %385, %376 ], [ %375, %374 ], [ %373, %363 ], [ %362, %353 ], [ %352, %349 ], [ 1230898499, %348 ], [ %347, %344 ], [ -1752371422, %343 ], [ %342, %333 ], [ %332, %323 ], [ -2042993375, %322 ], [ %321, %312 ], [ %311, %302 ], [ %301, %300 ], [ -957093317, %298 ], [ -1610691867, %297 ], [ -1673092596, %296 ], [ %295, %286 ], [ %285, %276 ], [ %275, %274 ], [ %273, %260 ], [ %259, %250 ], [ %249, %246 ], [ -957093317, %245 ], [ -1277538375, %243 ], [ -1967879277, %242 ], [ 521097412, %240 ], [ -2091912869, %239 ], [ %238, %229 ], [ %228, %219 ], [ -877420292, %218 ], [ %217, %207 ], [ %206, %197 ], [ 865085883, %196 ], [ %195, %186 ], [ %185, %176 ], [ 1586119038, %164 ], [ %163, %157 ], [ %156, %150 ], [ %149, %148 ], [ %147, %136 ], [ %135, %126 ], [ -877420292, %125 ], [ %124, %123 ], [ %122, %111 ], [ %110, %101 ], [ 521097412, %100 ], [ %99, %96 ], [ -1277538375, %95 ], [ %94, %85 ], [ %84, %75 ], [ 2042271440, %73 ], [ 108401352, %64 ], [ %63, %62 ], [ %61, %50 ], [ %49, %40 ], [ 2042271440, %39 ], [ 1483046118, %37 ], [ -676663724, %34 ], [ %33, %30 ], [ 1483046118, %29 ], [ -196303750, %27 ], [ 397465408, %26 ], [ 1073633451, %24 ], [ -943763935, %19 ], [ %18, %15 ], [ 1073633451, %14 ], [ %13, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @n, align 4
  %12 = icmp slt i32 %.078, %11
  %13 = select i1 %12, i32 759496789, i32 -1424566547
  br label %.backedge

14:                                               ; preds = %9
  br label %.backedge

15:                                               ; preds = %9
  %16 = load i32, i32* @n, align 4
  %17 = icmp slt i32 %.076, %16
  %18 = select i1 %17, i32 -837070042, i32 820001428
  br label %.backedge

19:                                               ; preds = %9
  %20 = load i64, i64* @INF, align 8
  %21 = sext i32 %.078 to i64
  %22 = sext i32 %.076 to i64
  %23 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %21, i64 %22
  store i64 %20, i64* %23, align 8
  br label %.backedge

24:                                               ; preds = %9
  %25 = add i32 %.076, 1
  br label %.backedge

26:                                               ; preds = %9
  br label %.backedge

27:                                               ; preds = %9
  %28 = add i32 %.078, 1
  br label %.backedge

29:                                               ; preds = %9
  br label %.backedge

30:                                               ; preds = %9
  %31 = load i32, i32* @n, align 4
  %32 = icmp slt i32 %.074, %31
  %33 = select i1 %32, i32 -123927860, i32 335458738
  br label %.backedge

34:                                               ; preds = %9
  %35 = sext i32 %.074 to i64
  %36 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %35, i64 %35
  store i64 0, i64* %36, align 8
  br label %.backedge

37:                                               ; preds = %9
  %38 = add i32 %.074, 1
  br label %.backedge

39:                                               ; preds = %9
  br label %.backedge

40:                                               ; preds = %9
  %41 = load i32, i32* @x.7, align 4
  %42 = load i32, i32* @y.8, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 -843032559, i32 -179576060
  br label %.backedge

50:                                               ; preds = %9
  %51 = load i32, i32* @m, align 4
  %52 = icmp slt i32 %.072, %51
  store i1 %52, i1* %6, align 1
  %53 = load i32, i32* @x.7, align 4
  %54 = load i32, i32* @y.8, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -1510602053, i32 -179576060
  br label %.backedge

62:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %63 = select i1 %.0..0..0., i32 51218870, i32 -645009806
  br label %.backedge

64:                                               ; preds = %9
  %65 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32* nonnull @a, i32* nonnull @b, i32* nonnull @c)
  %66 = load i32, i32* @c, align 4
  %67 = sext i32 %66 to i64
  %68 = load i32, i32* @a, align 4
  %69 = sext i32 %68 to i64
  %70 = load i32, i32* @b, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %69, i64 %71
  store i64 %67, i64* %72, align 8
  br label %.backedge

73:                                               ; preds = %9
  %74 = add i32 %.072, 1
  br label %.backedge

75:                                               ; preds = %9
  %76 = load i32, i32* @x.7, align 4
  %77 = load i32, i32* @y.8, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 822860176, i32 1950828834
  br label %.backedge

85:                                               ; preds = %9
  %86 = load i32, i32* @x.7, align 4
  %87 = load i32, i32* @y.8, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 -1494845869, i32 1950828834
  br label %.backedge

95:                                               ; preds = %9
  br label %.backedge

96:                                               ; preds = %9
  %97 = load i32, i32* @n, align 4
  %98 = icmp slt i32 %.070, %97
  %99 = select i1 %98, i32 210632409, i32 205096965
  br label %.backedge

100:                                              ; preds = %9
  br label %.backedge

101:                                              ; preds = %9
  %102 = load i32, i32* @x.7, align 4
  %103 = load i32, i32* @y.8, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 1797336522, i32 1046573622
  br label %.backedge

111:                                              ; preds = %9
  %112 = load i32, i32* @n, align 4
  %113 = icmp slt i32 %.068, %112
  store i1 %113, i1* %5, align 1
  %114 = load i32, i32* @x.7, align 4
  %115 = load i32, i32* @y.8, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 2092660306, i32 1046573622
  br label %.backedge

123:                                              ; preds = %9
  %.0..0..0.55 = load volatile i1, i1* %5, align 1
  %124 = select i1 %.0..0..0.55, i32 -905820675, i32 -689616005
  br label %.backedge

125:                                              ; preds = %9
  br label %.backedge

126:                                              ; preds = %9
  %127 = load i32, i32* @x.7, align 4
  %128 = load i32, i32* @y.8, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 -1392926418, i32 1450662168
  br label %.backedge

136:                                              ; preds = %9
  %137 = load i32, i32* @n, align 4
  %138 = icmp slt i32 %.066, %137
  store i1 %138, i1* %4, align 1
  %139 = load i32, i32* @x.7, align 4
  %140 = load i32, i32* @y.8, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 -1902024345, i32 1450662168
  br label %.backedge

148:                                              ; preds = %9
  %.0..0..0.56 = load volatile i1, i1* %4, align 1
  %149 = select i1 %.0..0..0.56, i32 -164333433, i32 1619828573
  br label %.backedge

150:                                              ; preds = %9
  %151 = sext i32 %.068 to i64
  %152 = sext i32 %.070 to i64
  %153 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %151, i64 %152
  %154 = load i64, i64* %153, align 8
  %155 = load i64, i64* @INF, align 8
  %.not86 = icmp eq i64 %154, %155
  %156 = select i1 %.not86, i32 1586119038, i32 -1718651437
  br label %.backedge

157:                                              ; preds = %9
  %158 = sext i32 %.070 to i64
  %159 = sext i32 %.066 to i64
  %160 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %158, i64 %159
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* @INF, align 8
  %.not85 = icmp eq i64 %161, %162
  %163 = select i1 %.not85, i32 1586119038, i32 1626775815
  br label %.backedge

164:                                              ; preds = %9
  %165 = sext i32 %.068 to i64
  %166 = sext i32 %.066 to i64
  %167 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %165, i64 %166
  %168 = sext i32 %.070 to i64
  %169 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %165, i64 %168
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %168, i64 %166
  %172 = load i64, i64* %171, align 8
  %173 = add i64 %172, %170
  store i64 %173, i64* %7, align 8
  %174 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %167, i64* nonnull dereferenceable(8) %7)
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %167, align 8
  br label %.backedge

176:                                              ; preds = %9
  %177 = load i32, i32* @x.7, align 4
  %178 = load i32, i32* @y.8, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 -251736747, i32 -376244054
  br label %.backedge

186:                                              ; preds = %9
  %187 = load i32, i32* @x.7, align 4
  %188 = load i32, i32* @y.8, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1896472955, i32 -376244054
  br label %.backedge

196:                                              ; preds = %9
  br label %.backedge

197:                                              ; preds = %9
  %198 = load i32, i32* @x.7, align 4
  %199 = load i32, i32* @y.8, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 1486255814, i32 338458613
  br label %.backedge

207:                                              ; preds = %9
  %208 = add i32 %.066, 1
  %209 = load i32, i32* @x.7, align 4
  %210 = load i32, i32* @y.8, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 -1993753875, i32 338458613
  br label %.backedge

218:                                              ; preds = %9
  br label %.backedge

219:                                              ; preds = %9
  %220 = load i32, i32* @x.7, align 4
  %221 = load i32, i32* @y.8, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 -1961769365, i32 1279707508
  br label %.backedge

229:                                              ; preds = %9
  %230 = load i32, i32* @x.7, align 4
  %231 = load i32, i32* @y.8, align 4
  %232 = add i32 %230, -1
  %233 = mul i32 %232, %230
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %236, %235
  %238 = select i1 %237, i32 1581217130, i32 1279707508
  br label %.backedge

239:                                              ; preds = %9
  br label %.backedge

240:                                              ; preds = %9
  %241 = add i32 %.068, 1
  br label %.backedge

242:                                              ; preds = %9
  br label %.backedge

243:                                              ; preds = %9
  %244 = add i32 %.070, 1
  br label %.backedge

245:                                              ; preds = %9
  br label %.backedge

246:                                              ; preds = %9
  %247 = load i32, i32* @n, align 4
  %248 = icmp slt i32 %.064, %247
  %249 = select i1 %248, i32 1588909756, i32 -1673092596
  br label %.backedge

250:                                              ; preds = %9
  %251 = load i32, i32* @x.7, align 4
  %252 = load i32, i32* @y.8, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 1951755368, i32 -2097481467
  br label %.backedge

260:                                              ; preds = %9
  %261 = sext i32 %.064 to i64
  %262 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %261, i64 %261
  %263 = load i64, i64* %262, align 8
  %264 = icmp ne i64 %263, 0
  store i1 %264, i1* %3, align 1
  %265 = load i32, i32* @x.7, align 4
  %266 = load i32, i32* @y.8, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 1172404590, i32 -2097481467
  br label %.backedge

274:                                              ; preds = %9
  %.0..0..0.57 = load volatile i1, i1* %3, align 1
  %275 = select i1 %.0..0..0.57, i32 589867374, i32 -250392375
  br label %.backedge

276:                                              ; preds = %9
  %277 = load i32, i32* @x.7, align 4
  %278 = load i32, i32* @y.8, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 -833876716, i32 2069887165
  br label %.backedge

286:                                              ; preds = %9
  %287 = load i32, i32* @x.7, align 4
  %288 = load i32, i32* @y.8, align 4
  %289 = add i32 %287, -1
  %290 = mul i32 %289, %287
  %291 = and i32 %290, 1
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %293, %292
  %295 = select i1 %294, i32 -2137742013, i32 2069887165
  br label %.backedge

296:                                              ; preds = %9
  br label %.backedge

297:                                              ; preds = %9
  br label %.backedge

298:                                              ; preds = %9
  %299 = add i32 %.064, 1
  br label %.backedge

300:                                              ; preds = %9
  %.not = icmp eq i8 %.080, 0
  %301 = select i1 %.not, i32 -1254040545, i32 499871345
  br label %.backedge

302:                                              ; preds = %9
  %303 = load i32, i32* @x.7, align 4
  %304 = load i32, i32* @y.8, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 -1017290830, i32 1831870401
  br label %.backedge

312:                                              ; preds = %9
  %puts84 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str.1, i64 0, i64 0))
  %313 = load i32, i32* @x.7, align 4
  %314 = load i32, i32* @y.8, align 4
  %315 = add i32 %313, -1
  %316 = mul i32 %315, %313
  %317 = and i32 %316, 1
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %319, %318
  %321 = select i1 %320, i32 -134843468, i32 1831870401
  br label %.backedge

322:                                              ; preds = %9
  br label %.backedge

323:                                              ; preds = %9
  %324 = load i32, i32* @x.7, align 4
  %325 = load i32, i32* @y.8, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 1981896119, i32 1210153852
  br label %.backedge

333:                                              ; preds = %9
  %334 = load i32, i32* @x.7, align 4
  %335 = load i32, i32* @y.8, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 -1502535780, i32 1210153852
  br label %.backedge

343:                                              ; preds = %9
  br label %.backedge

344:                                              ; preds = %9
  %345 = load i32, i32* @n, align 4
  %346 = icmp slt i32 %.062, %345
  %347 = select i1 %346, i32 1570557447, i32 -942267953
  br label %.backedge

348:                                              ; preds = %9
  br label %.backedge

349:                                              ; preds = %9
  %350 = load i32, i32* @n, align 4
  %351 = icmp slt i32 %.060, %350
  %352 = select i1 %351, i32 -1753379799, i32 -272802089
  br label %.backedge

353:                                              ; preds = %9
  %354 = load i32, i32* @x.7, align 4
  %355 = load i32, i32* @y.8, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 -898593811, i32 -1320398571
  br label %.backedge

363:                                              ; preds = %9
  %364 = icmp ne i32 %.060, 0
  store i1 %364, i1* %2, align 1
  %365 = load i32, i32* @x.7, align 4
  %366 = load i32, i32* @y.8, align 4
  %367 = add i32 %365, -1
  %368 = mul i32 %367, %365
  %369 = and i32 %368, 1
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %371, %370
  %373 = select i1 %372, i32 -1545680077, i32 -1320398571
  br label %.backedge

374:                                              ; preds = %9
  %.0..0..0.58 = load volatile i1, i1* %2, align 1
  %375 = select i1 %.0..0..0.58, i32 2003452289, i32 -1875001631
  br label %.backedge

376:                                              ; preds = %9
  %377 = load i32, i32* @x.7, align 4
  %378 = load i32, i32* @y.8, align 4
  %379 = add i32 %377, -1
  %380 = mul i32 %379, %377
  %381 = and i32 %380, 1
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %383, %382
  %385 = select i1 %384, i32 -2053671869, i32 -2060075955
  br label %.backedge

386:                                              ; preds = %9
  %putchar83 = call i32 @putchar(i32 32)
  %387 = load i32, i32* @x.7, align 4
  %388 = load i32, i32* @y.8, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 1025286157, i32 -2060075955
  br label %.backedge

396:                                              ; preds = %9
  br label %.backedge

397:                                              ; preds = %9
  %398 = load i32, i32* @x.7, align 4
  %399 = load i32, i32* @y.8, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 1803997340, i32 -402391554
  br label %.backedge

407:                                              ; preds = %9
  %408 = sext i32 %.062 to i64
  %409 = sext i32 %.060 to i64
  %410 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %408, i64 %409
  %411 = load i64, i64* %410, align 8
  %412 = load i64, i64* @INF, align 8
  %413 = icmp eq i64 %411, %412
  store i1 %413, i1* %1, align 1
  %414 = load i32, i32* @x.7, align 4
  %415 = load i32, i32* @y.8, align 4
  %416 = add i32 %414, -1
  %417 = mul i32 %416, %414
  %418 = and i32 %417, 1
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %420, %419
  %422 = select i1 %421, i32 -744778587, i32 -402391554
  br label %.backedge

423:                                              ; preds = %9
  %.0..0..0.59 = load volatile i1, i1* %1, align 1
  %424 = select i1 %.0..0..0.59, i32 2137921492, i32 1826872806
  br label %.backedge

425:                                              ; preds = %9
  %426 = load i32, i32* @x.7, align 4
  %427 = load i32, i32* @y.8, align 4
  %428 = add i32 %426, -1
  %429 = mul i32 %428, %426
  %430 = and i32 %429, 1
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %432, %431
  %434 = select i1 %433, i32 -1099014253, i32 -102210277
  br label %.backedge

435:                                              ; preds = %9
  %436 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  %437 = load i32, i32* @x.7, align 4
  %438 = load i32, i32* @y.8, align 4
  %439 = add i32 %437, -1
  %440 = mul i32 %439, %437
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %443, %442
  %445 = select i1 %444, i32 851430196, i32 -102210277
  br label %.backedge

446:                                              ; preds = %9
  br label %.backedge

447:                                              ; preds = %9
  %448 = sext i32 %.062 to i64
  %449 = sext i32 %.060 to i64
  %450 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @wf, i64 0, i64 %448, i64 %449
  %451 = load i64, i64* %450, align 8
  %452 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 %451)
  br label %.backedge

453:                                              ; preds = %9
  %454 = load i32, i32* @x.7, align 4
  %455 = load i32, i32* @y.8, align 4
  %456 = add i32 %454, -1
  %457 = mul i32 %456, %454
  %458 = and i32 %457, 1
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %460, %459
  %462 = select i1 %461, i32 292759455, i32 1977047744
  br label %.backedge

463:                                              ; preds = %9
  %464 = load i32, i32* @x.7, align 4
  %465 = load i32, i32* @y.8, align 4
  %466 = add i32 %464, -1
  %467 = mul i32 %466, %464
  %468 = and i32 %467, 1
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %470, %469
  %472 = select i1 %471, i32 -1767017626, i32 1977047744
  br label %.backedge

473:                                              ; preds = %9
  br label %.backedge

474:                                              ; preds = %9
  %475 = add i32 %.060, 1
  br label %.backedge

476:                                              ; preds = %9
  %putchar82 = call i32 @putchar(i32 10)
  br label %.backedge

477:                                              ; preds = %9
  %478 = add i32 %.062, 1
  br label %.backedge

479:                                              ; preds = %9
  %480 = load i32, i32* @x.7, align 4
  %481 = load i32, i32* @y.8, align 4
  %482 = add i32 %480, -1
  %483 = mul i32 %482, %480
  %484 = and i32 %483, 1
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %486, %485
  %488 = select i1 %487, i32 -161907079, i32 -519729168
  br label %.backedge

489:                                              ; preds = %9
  %490 = load i32, i32* @x.7, align 4
  %491 = load i32, i32* @y.8, align 4
  %492 = add i32 %490, -1
  %493 = mul i32 %492, %490
  %494 = and i32 %493, 1
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %496, %495
  %498 = select i1 %497, i32 -718476433, i32 -519729168
  br label %.backedge

499:                                              ; preds = %9
  br label %.backedge

500:                                              ; preds = %9
  ret i32 0

501:                                              ; preds = %9
  br label %.backedge

502:                                              ; preds = %9
  br label %.backedge

503:                                              ; preds = %9
  br label %.backedge

504:                                              ; preds = %9
  br label %.backedge

505:                                              ; preds = %9
  br label %.backedge

506:                                              ; preds = %9
  %507 = add i32 %.066, 1
  br label %.backedge

508:                                              ; preds = %9
  br label %.backedge

509:                                              ; preds = %9
  br label %.backedge

510:                                              ; preds = %9
  br label %.backedge

511:                                              ; preds = %9
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str.1, i64 0, i64 0))
  br label %.backedge

512:                                              ; preds = %9
  br label %.backedge

513:                                              ; preds = %9
  br label %.backedge

514:                                              ; preds = %9
  %putchar = call i32 @putchar(i32 32)
  br label %.backedge

515:                                              ; preds = %9
  br label %.backedge

516:                                              ; preds = %9
  %517 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  br label %.backedge

518:                                              ; preds = %9
  br label %.backedge

519:                                              ; preds = %9
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  %8 = load i32, i32* @x.9, align 4
  %9 = load i32, i32* @y.10, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -964467987, i32 -23735623
  %17 = select i1 %15, i32 400935140, i32 -23735623
  %18 = select i1 %15, i32 -2053186698, i32 -2107388781
  %19 = select i1 %15, i32 -511714551, i32 -2107388781
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i64* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i64* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ -2079319533, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -2079319533, label %21
    i32 489818870, label %24
    i32 -511714551, label %25
    i32 -2053186698, label %26
    i32 294376565, label %27
    i32 1463800422, label %28
    i32 400935140, label %29
    i32 -964467987, label %30
    i32 -2107388781, label %31
    i32 -23735623, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i64* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i64* [ %.010, %20 ], [ %.010, %32 ], [ %1, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %0, %27 ], [ %.010, %26 ], [ %1, %25 ], [ %.010, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 400935140, %32 ], [ -511714551, %31 ], [ %16, %29 ], [ %17, %28 ], [ 1463800422, %27 ], [ 1463800422, %26 ], [ %18, %25 ], [ %19, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i64, i64* %5, align 8
  %.0..0..0.8 = load volatile i64, i64* %4, align 8
  %22 = icmp slt i64 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 489818870, i32 294376565
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i64* %.01013, i64** %3, align 8
  %.0..0..0.9 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s273505783.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.11, align 4
  %4 = load i32, i32* @y.12, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1852417439, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1852417439, label %11
    i32 -548850483, label %14
    i32 -508013949, label %24
    i32 -618868044, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -548850483, i32 -618868044
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.11, align 4
  %16 = load i32, i32* @y.12, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -508013949, i32 -618868044
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -548850483, %25 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
