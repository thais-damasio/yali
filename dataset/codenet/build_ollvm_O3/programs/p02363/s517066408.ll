; ModuleID = 'build_ollvm/programs/p02363/s517066408.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s517066408.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@f = global [110 x [110 x i64]] zeroinitializer, align 16
@v = global i64 0, align 8
@e = global i64 0, align 8
@r = local_unnamed_addr global i64 0, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s517066408.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) @v)
  %7 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %6, i64* nonnull dereferenceable(8) @e)
  br label %8

8:                                                ; preds = %.backedge, %0
  %.068 = phi i64 [ 0, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i64 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i64 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i64 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i64 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i64 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i64 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i64 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i64 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i64 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.0 = phi i32 [ 1465777429, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1465777429, label %9
    i32 479696849, label %12
    i32 -1065686654, label %13
    i32 -1648270797, label %16
    i32 -1947617601, label %26
    i32 721597299, label %37
    i32 16256576, label %38
    i32 -443757680, label %40
    i32 -1647635767, label %41
    i32 -1608929515, label %43
    i32 1413846134, label %44
    i32 448753459, label %47
    i32 1342287906, label %49
    i32 -2073090802, label %51
    i32 -31363007, label %52
    i32 1724077466, label %56
    i32 -656906324, label %64
    i32 -1627951784, label %74
    i32 -68898369, label %85
    i32 -1971134180, label %86
    i32 67610348, label %87
    i32 218115501, label %97
    i32 326742669, label %108
    i32 -1172117034, label %110
    i32 -2100578367, label %120
    i32 1903035448, label %130
    i32 1077816573, label %131
    i32 944064160, label %134
    i32 321028334, label %144
    i32 -320104330, label %154
    i32 2068881859, label %155
    i32 -2101299998, label %158
    i32 -548724877, label %163
    i32 -1467267328, label %168
    i32 -258875186, label %169
    i32 -1074986333, label %178
    i32 -1600316139, label %180
    i32 -372221380, label %181
    i32 -586623591, label %183
    i32 -641272836, label %193
    i32 259927682, label %203
    i32 326671954, label %204
    i32 -2043338509, label %214
    i32 889083849, label %225
    i32 -1982503899, label %226
    i32 567685405, label %236
    i32 117753533, label %246
    i32 -160648359, label %247
    i32 -1904369077, label %250
    i32 -1248945127, label %255
    i32 -745136676, label %258
    i32 -1930642495, label %259
    i32 -1969137995, label %261
    i32 -1895976635, label %262
    i32 -1393016031, label %266
    i32 -848073665, label %267
    i32 -822477511, label %271
    i32 1477001108, label %273
    i32 1024712642, label %283
    i32 -766619307, label %294
    i32 -1873489546, label %295
    i32 -842805758, label %300
    i32 1122246959, label %302
    i32 -1696236407, label %306
    i32 -1773831226, label %307
    i32 -839312523, label %309
    i32 1975900630, label %319
    i32 1589626315, label %330
    i32 -1158370468, label %331
    i32 -743137078, label %333
    i32 -1164571551, label %334
    i32 1794582344, label %336
    i32 -1793543997, label %338
    i32 322923392, label %339
    i32 663779741, label %340
    i32 -1716262821, label %341
    i32 243334109, label %342
    i32 34925401, label %343
    i32 -689702353, label %344
    i32 2114147464, label %346
  ]

.backedge:                                        ; preds = %8, %346, %344, %343, %342, %341, %340, %339, %338, %336, %334, %331, %330, %319, %309, %307, %306, %302, %300, %295, %294, %283, %273, %271, %267, %266, %262, %261, %259, %258, %255, %250, %247, %246, %236, %226, %225, %214, %204, %203, %193, %183, %181, %180, %178, %169, %168, %163, %158, %155, %154, %144, %134, %131, %130, %120, %110, %108, %97, %87, %86, %85, %74, %64, %56, %52, %51, %49, %47, %44, %43, %41, %40, %38, %37, %26, %16, %13, %12, %9
  %.068.be = phi i64 [ %.068, %8 ], [ %.068, %346 ], [ %.068, %344 ], [ %.068, %343 ], [ %.068, %342 ], [ %.068, %341 ], [ %.068, %340 ], [ %.068, %339 ], [ %.068, %338 ], [ %.068, %336 ], [ %.068, %334 ], [ %.068, %331 ], [ %.068, %330 ], [ %.068, %319 ], [ %.068, %309 ], [ %.068, %307 ], [ %.068, %306 ], [ %.068, %302 ], [ %.068, %300 ], [ %.068, %295 ], [ %.068, %294 ], [ %.068, %283 ], [ %.068, %273 ], [ %.068, %271 ], [ %.068, %267 ], [ %.068, %266 ], [ %.068, %262 ], [ %.068, %261 ], [ %.068, %259 ], [ %.068, %258 ], [ %.068, %255 ], [ %.068, %250 ], [ %.068, %247 ], [ %.068, %246 ], [ %.068, %236 ], [ %.068, %226 ], [ %.068, %225 ], [ %.068, %214 ], [ %.068, %204 ], [ %.068, %203 ], [ %.068, %193 ], [ %.068, %183 ], [ %.068, %181 ], [ %.068, %180 ], [ %.068, %178 ], [ %.068, %169 ], [ %.068, %168 ], [ %.068, %163 ], [ %.068, %158 ], [ %.068, %155 ], [ %.068, %154 ], [ %.068, %144 ], [ %.068, %134 ], [ %.068, %131 ], [ %.068, %130 ], [ %.068, %120 ], [ %.068, %110 ], [ %.068, %108 ], [ %.068, %97 ], [ %.068, %87 ], [ %.068, %86 ], [ %.068, %85 ], [ %.068, %74 ], [ %.068, %64 ], [ %.068, %56 ], [ %.068, %52 ], [ %.068, %51 ], [ %.068, %49 ], [ %.068, %47 ], [ %.068, %44 ], [ %.068, %43 ], [ %42, %41 ], [ %.068, %40 ], [ %.068, %38 ], [ %.068, %37 ], [ %.068, %26 ], [ %.068, %16 ], [ %.068, %13 ], [ %.068, %12 ], [ %.068, %9 ]
  %.066.be = phi i64 [ %.066, %8 ], [ %.066, %346 ], [ %.066, %344 ], [ %.066, %343 ], [ %.066, %342 ], [ %.066, %341 ], [ %.066, %340 ], [ %.066, %339 ], [ %.066, %338 ], [ %.066, %336 ], [ %.066, %334 ], [ %.066, %331 ], [ %.066, %330 ], [ %.066, %319 ], [ %.066, %309 ], [ %.066, %307 ], [ %.066, %306 ], [ %.066, %302 ], [ %.066, %300 ], [ %.066, %295 ], [ %.066, %294 ], [ %.066, %283 ], [ %.066, %273 ], [ %.066, %271 ], [ %.066, %267 ], [ %.066, %266 ], [ %.066, %262 ], [ %.066, %261 ], [ %.066, %259 ], [ %.066, %258 ], [ %.066, %255 ], [ %.066, %250 ], [ %.066, %247 ], [ %.066, %246 ], [ %.066, %236 ], [ %.066, %226 ], [ %.066, %225 ], [ %.066, %214 ], [ %.066, %204 ], [ %.066, %203 ], [ %.066, %193 ], [ %.066, %183 ], [ %.066, %181 ], [ %.066, %180 ], [ %.066, %178 ], [ %.066, %169 ], [ %.066, %168 ], [ %.066, %163 ], [ %.066, %158 ], [ %.066, %155 ], [ %.066, %154 ], [ %.066, %144 ], [ %.066, %134 ], [ %.066, %131 ], [ %.066, %130 ], [ %.066, %120 ], [ %.066, %110 ], [ %.066, %108 ], [ %.066, %97 ], [ %.066, %87 ], [ %.066, %86 ], [ %.066, %85 ], [ %.066, %74 ], [ %.066, %64 ], [ %.066, %56 ], [ %.066, %52 ], [ %.066, %51 ], [ %.066, %49 ], [ %.066, %47 ], [ %.066, %44 ], [ %.066, %43 ], [ %.066, %41 ], [ %.066, %40 ], [ %39, %38 ], [ %.066, %37 ], [ %.066, %26 ], [ %.066, %16 ], [ %.066, %13 ], [ 0, %12 ], [ %.066, %9 ]
  %.064.be = phi i64 [ %.064, %8 ], [ %.064, %346 ], [ %.064, %344 ], [ %.064, %343 ], [ %.064, %342 ], [ %.064, %341 ], [ %.064, %340 ], [ %.064, %339 ], [ %.064, %338 ], [ %.064, %336 ], [ %.064, %334 ], [ %.064, %331 ], [ %.064, %330 ], [ %.064, %319 ], [ %.064, %309 ], [ %.064, %307 ], [ %.064, %306 ], [ %.064, %302 ], [ %.064, %300 ], [ %.064, %295 ], [ %.064, %294 ], [ %.064, %283 ], [ %.064, %273 ], [ %.064, %271 ], [ %.064, %267 ], [ %.064, %266 ], [ %.064, %262 ], [ %.064, %261 ], [ %.064, %259 ], [ %.064, %258 ], [ %.064, %255 ], [ %.064, %250 ], [ %.064, %247 ], [ %.064, %246 ], [ %.064, %236 ], [ %.064, %226 ], [ %.064, %225 ], [ %.064, %214 ], [ %.064, %204 ], [ %.064, %203 ], [ %.064, %193 ], [ %.064, %183 ], [ %.064, %181 ], [ %.064, %180 ], [ %.064, %178 ], [ %.064, %169 ], [ %.064, %168 ], [ %.064, %163 ], [ %.064, %158 ], [ %.064, %155 ], [ %.064, %154 ], [ %.064, %144 ], [ %.064, %134 ], [ %.064, %131 ], [ %.064, %130 ], [ %.064, %120 ], [ %.064, %110 ], [ %.064, %108 ], [ %.064, %97 ], [ %.064, %87 ], [ %.064, %86 ], [ %.064, %85 ], [ %.064, %74 ], [ %.064, %64 ], [ %.064, %56 ], [ %.064, %52 ], [ %.064, %51 ], [ %50, %49 ], [ %.064, %47 ], [ %.064, %44 ], [ 0, %43 ], [ %.064, %41 ], [ %.064, %40 ], [ %.064, %38 ], [ %.064, %37 ], [ %.064, %26 ], [ %.064, %16 ], [ %.064, %13 ], [ %.064, %12 ], [ %.064, %9 ]
  %.062.be = phi i64 [ %.062, %8 ], [ %.062, %346 ], [ %.062, %344 ], [ %.062, %343 ], [ %.062, %342 ], [ %.062, %341 ], [ %.062, %340 ], [ %.062, %339 ], [ %.062, %338 ], [ %337, %336 ], [ %.062, %334 ], [ %.062, %331 ], [ %.062, %330 ], [ %.062, %319 ], [ %.062, %309 ], [ %.062, %307 ], [ %.062, %306 ], [ %.062, %302 ], [ %.062, %300 ], [ %.062, %295 ], [ %.062, %294 ], [ %.062, %283 ], [ %.062, %273 ], [ %.062, %271 ], [ %.062, %267 ], [ %.062, %266 ], [ %.062, %262 ], [ %.062, %261 ], [ %.062, %259 ], [ %.062, %258 ], [ %.062, %255 ], [ %.062, %250 ], [ %.062, %247 ], [ %.062, %246 ], [ %.062, %236 ], [ %.062, %226 ], [ %.062, %225 ], [ %.062, %214 ], [ %.062, %204 ], [ %.062, %203 ], [ %.062, %193 ], [ %.062, %183 ], [ %.062, %181 ], [ %.062, %180 ], [ %.062, %178 ], [ %.062, %169 ], [ %.062, %168 ], [ %.062, %163 ], [ %.062, %158 ], [ %.062, %155 ], [ %.062, %154 ], [ %.062, %144 ], [ %.062, %134 ], [ %.062, %131 ], [ %.062, %130 ], [ %.062, %120 ], [ %.062, %110 ], [ %.062, %108 ], [ %.062, %97 ], [ %.062, %87 ], [ %.062, %86 ], [ %.062, %85 ], [ %75, %74 ], [ %.062, %64 ], [ %.062, %56 ], [ %.062, %52 ], [ 0, %51 ], [ %.062, %49 ], [ %.062, %47 ], [ %.062, %44 ], [ %.062, %43 ], [ %.062, %41 ], [ %.062, %40 ], [ %.062, %38 ], [ %.062, %37 ], [ %.062, %26 ], [ %.062, %16 ], [ %.062, %13 ], [ %.062, %12 ], [ %.062, %9 ]
  %.060.be = phi i64 [ %.060, %8 ], [ %.060, %346 ], [ %.060, %344 ], [ %.060, %343 ], [ %.neg, %342 ], [ %.060, %341 ], [ %.060, %340 ], [ %.060, %339 ], [ %.060, %338 ], [ %.060, %336 ], [ %.060, %334 ], [ %.060, %331 ], [ %.060, %330 ], [ %.060, %319 ], [ %.060, %309 ], [ %.060, %307 ], [ %.060, %306 ], [ %.060, %302 ], [ %.060, %300 ], [ %.060, %295 ], [ %.060, %294 ], [ %.060, %283 ], [ %.060, %273 ], [ %.060, %271 ], [ %.060, %267 ], [ %.060, %266 ], [ %.060, %262 ], [ %.060, %261 ], [ %.060, %259 ], [ %.060, %258 ], [ %.060, %255 ], [ %.060, %250 ], [ %.060, %247 ], [ %.060, %246 ], [ %.060, %236 ], [ %.060, %226 ], [ %.060, %225 ], [ %215, %214 ], [ %.060, %204 ], [ %.060, %203 ], [ %.060, %193 ], [ %.060, %183 ], [ %.060, %181 ], [ %.060, %180 ], [ %.060, %178 ], [ %.060, %169 ], [ %.060, %168 ], [ %.060, %163 ], [ %.060, %158 ], [ %.060, %155 ], [ %.060, %154 ], [ %.060, %144 ], [ %.060, %134 ], [ %.060, %131 ], [ %.060, %130 ], [ %.060, %120 ], [ %.060, %110 ], [ %.060, %108 ], [ %.060, %97 ], [ %.060, %87 ], [ 0, %86 ], [ %.060, %85 ], [ %.060, %74 ], [ %.060, %64 ], [ %.060, %56 ], [ %.060, %52 ], [ %.060, %51 ], [ %.060, %49 ], [ %.060, %47 ], [ %.060, %44 ], [ %.060, %43 ], [ %.060, %41 ], [ %.060, %40 ], [ %.060, %38 ], [ %.060, %37 ], [ %.060, %26 ], [ %.060, %16 ], [ %.060, %13 ], [ %.060, %12 ], [ %.060, %9 ]
  %.058.be = phi i64 [ %.058, %8 ], [ %.058, %346 ], [ %.058, %344 ], [ %.058, %343 ], [ %.058, %342 ], [ %.058, %341 ], [ %.058, %340 ], [ 0, %339 ], [ %.058, %338 ], [ %.058, %336 ], [ %.058, %334 ], [ %.058, %331 ], [ %.058, %330 ], [ %.058, %319 ], [ %.058, %309 ], [ %.058, %307 ], [ %.058, %306 ], [ %.058, %302 ], [ %.058, %300 ], [ %.058, %295 ], [ %.058, %294 ], [ %.058, %283 ], [ %.058, %273 ], [ %.058, %271 ], [ %.058, %267 ], [ %.058, %266 ], [ %.058, %262 ], [ %.058, %261 ], [ %.058, %259 ], [ %.058, %258 ], [ %.058, %255 ], [ %.058, %250 ], [ %.058, %247 ], [ %.058, %246 ], [ %.058, %236 ], [ %.058, %226 ], [ %.058, %225 ], [ %.058, %214 ], [ %.058, %204 ], [ %.058, %203 ], [ %.058, %193 ], [ %.058, %183 ], [ %182, %181 ], [ %.058, %180 ], [ %.058, %178 ], [ %.058, %169 ], [ %.058, %168 ], [ %.058, %163 ], [ %.058, %158 ], [ %.058, %155 ], [ %.058, %154 ], [ %.058, %144 ], [ %.058, %134 ], [ %.058, %131 ], [ %.058, %130 ], [ 0, %120 ], [ %.058, %110 ], [ %.058, %108 ], [ %.058, %97 ], [ %.058, %87 ], [ %.058, %86 ], [ %.058, %85 ], [ %.058, %74 ], [ %.058, %64 ], [ %.058, %56 ], [ %.058, %52 ], [ %.058, %51 ], [ %.058, %49 ], [ %.058, %47 ], [ %.058, %44 ], [ %.058, %43 ], [ %.058, %41 ], [ %.058, %40 ], [ %.058, %38 ], [ %.058, %37 ], [ %.058, %26 ], [ %.058, %16 ], [ %.058, %13 ], [ %.058, %12 ], [ %.058, %9 ]
  %.056.be = phi i64 [ %.056, %8 ], [ %.056, %346 ], [ %.056, %344 ], [ %.056, %343 ], [ %.056, %342 ], [ %.056, %341 ], [ 0, %340 ], [ %.056, %339 ], [ %.056, %338 ], [ %.056, %336 ], [ %.056, %334 ], [ %.056, %331 ], [ %.056, %330 ], [ %.056, %319 ], [ %.056, %309 ], [ %.056, %307 ], [ %.056, %306 ], [ %.056, %302 ], [ %.056, %300 ], [ %.056, %295 ], [ %.056, %294 ], [ %.056, %283 ], [ %.056, %273 ], [ %.056, %271 ], [ %.056, %267 ], [ %.056, %266 ], [ %.056, %262 ], [ %.056, %261 ], [ %.056, %259 ], [ %.056, %258 ], [ %.056, %255 ], [ %.056, %250 ], [ %.056, %247 ], [ %.056, %246 ], [ %.056, %236 ], [ %.056, %226 ], [ %.056, %225 ], [ %.056, %214 ], [ %.056, %204 ], [ %.056, %203 ], [ %.056, %193 ], [ %.056, %183 ], [ %.056, %181 ], [ %.056, %180 ], [ %179, %178 ], [ %.056, %169 ], [ %.056, %168 ], [ %.056, %163 ], [ %.056, %158 ], [ %.056, %155 ], [ %.056, %154 ], [ 0, %144 ], [ %.056, %134 ], [ %.056, %131 ], [ %.056, %130 ], [ %.056, %120 ], [ %.056, %110 ], [ %.056, %108 ], [ %.056, %97 ], [ %.056, %87 ], [ %.056, %86 ], [ %.056, %85 ], [ %.056, %74 ], [ %.056, %64 ], [ %.056, %56 ], [ %.056, %52 ], [ %.056, %51 ], [ %.056, %49 ], [ %.056, %47 ], [ %.056, %44 ], [ %.056, %43 ], [ %.056, %41 ], [ %.056, %40 ], [ %.056, %38 ], [ %.056, %37 ], [ %.056, %26 ], [ %.056, %16 ], [ %.056, %13 ], [ %.056, %12 ], [ %.056, %9 ]
  %.054.be = phi i64 [ %.054, %8 ], [ %.054, %346 ], [ %.054, %344 ], [ 0, %343 ], [ %.054, %342 ], [ %.054, %341 ], [ %.054, %340 ], [ %.054, %339 ], [ %.054, %338 ], [ %.054, %336 ], [ %.054, %334 ], [ %.054, %331 ], [ %.054, %330 ], [ %.054, %319 ], [ %.054, %309 ], [ %.054, %307 ], [ %.054, %306 ], [ %.054, %302 ], [ %.054, %300 ], [ %.054, %295 ], [ %.054, %294 ], [ %.054, %283 ], [ %.054, %273 ], [ %.054, %271 ], [ %.054, %267 ], [ %.054, %266 ], [ %.054, %262 ], [ %.054, %261 ], [ %260, %259 ], [ %.054, %258 ], [ %.054, %255 ], [ %.054, %250 ], [ %.054, %247 ], [ %.054, %246 ], [ 0, %236 ], [ %.054, %226 ], [ %.054, %225 ], [ %.054, %214 ], [ %.054, %204 ], [ %.054, %203 ], [ %.054, %193 ], [ %.054, %183 ], [ %.054, %181 ], [ %.054, %180 ], [ %.054, %178 ], [ %.054, %169 ], [ %.054, %168 ], [ %.054, %163 ], [ %.054, %158 ], [ %.054, %155 ], [ %.054, %154 ], [ %.054, %144 ], [ %.054, %134 ], [ %.054, %131 ], [ %.054, %130 ], [ %.054, %120 ], [ %.054, %110 ], [ %.054, %108 ], [ %.054, %97 ], [ %.054, %87 ], [ %.054, %86 ], [ %.054, %85 ], [ %.054, %74 ], [ %.054, %64 ], [ %.054, %56 ], [ %.054, %52 ], [ %.054, %51 ], [ %.054, %49 ], [ %.054, %47 ], [ %.054, %44 ], [ %.054, %43 ], [ %.054, %41 ], [ %.054, %40 ], [ %.054, %38 ], [ %.054, %37 ], [ %.054, %26 ], [ %.054, %16 ], [ %.054, %13 ], [ %.054, %12 ], [ %.054, %9 ]
  %.052.be = phi i64 [ %.052, %8 ], [ %.052, %346 ], [ %.052, %344 ], [ %.052, %343 ], [ %.052, %342 ], [ %.052, %341 ], [ %.052, %340 ], [ %.052, %339 ], [ %.052, %338 ], [ %.052, %336 ], [ %.052, %334 ], [ %332, %331 ], [ %.052, %330 ], [ %.052, %319 ], [ %.052, %309 ], [ %.052, %307 ], [ %.052, %306 ], [ %.052, %302 ], [ %.052, %300 ], [ %.052, %295 ], [ %.052, %294 ], [ %.052, %283 ], [ %.052, %273 ], [ %.052, %271 ], [ %.052, %267 ], [ %.052, %266 ], [ %.052, %262 ], [ 0, %261 ], [ %.052, %259 ], [ %.052, %258 ], [ %.052, %255 ], [ %.052, %250 ], [ %.052, %247 ], [ %.052, %246 ], [ %.052, %236 ], [ %.052, %226 ], [ %.052, %225 ], [ %.052, %214 ], [ %.052, %204 ], [ %.052, %203 ], [ %.052, %193 ], [ %.052, %183 ], [ %.052, %181 ], [ %.052, %180 ], [ %.052, %178 ], [ %.052, %169 ], [ %.052, %168 ], [ %.052, %163 ], [ %.052, %158 ], [ %.052, %155 ], [ %.052, %154 ], [ %.052, %144 ], [ %.052, %134 ], [ %.052, %131 ], [ %.052, %130 ], [ %.052, %120 ], [ %.052, %110 ], [ %.052, %108 ], [ %.052, %97 ], [ %.052, %87 ], [ %.052, %86 ], [ %.052, %85 ], [ %.052, %74 ], [ %.052, %64 ], [ %.052, %56 ], [ %.052, %52 ], [ %.052, %51 ], [ %.052, %49 ], [ %.052, %47 ], [ %.052, %44 ], [ %.052, %43 ], [ %.052, %41 ], [ %.052, %40 ], [ %.052, %38 ], [ %.052, %37 ], [ %.052, %26 ], [ %.052, %16 ], [ %.052, %13 ], [ %.052, %12 ], [ %.052, %9 ]
  %.050.be = phi i64 [ %.050, %8 ], [ %.050, %346 ], [ %.050, %344 ], [ %.050, %343 ], [ %.050, %342 ], [ %.050, %341 ], [ %.050, %340 ], [ %.050, %339 ], [ %.050, %338 ], [ %.050, %336 ], [ %.050, %334 ], [ %.050, %331 ], [ %.050, %330 ], [ %.050, %319 ], [ %.050, %309 ], [ %308, %307 ], [ %.050, %306 ], [ %.050, %302 ], [ %.050, %300 ], [ %.050, %295 ], [ %.050, %294 ], [ %.050, %283 ], [ %.050, %273 ], [ %.050, %271 ], [ %.050, %267 ], [ 0, %266 ], [ %.050, %262 ], [ %.050, %261 ], [ %.050, %259 ], [ %.050, %258 ], [ %.050, %255 ], [ %.050, %250 ], [ %.050, %247 ], [ %.050, %246 ], [ %.050, %236 ], [ %.050, %226 ], [ %.050, %225 ], [ %.050, %214 ], [ %.050, %204 ], [ %.050, %203 ], [ %.050, %193 ], [ %.050, %183 ], [ %.050, %181 ], [ %.050, %180 ], [ %.050, %178 ], [ %.050, %169 ], [ %.050, %168 ], [ %.050, %163 ], [ %.050, %158 ], [ %.050, %155 ], [ %.050, %154 ], [ %.050, %144 ], [ %.050, %134 ], [ %.050, %131 ], [ %.050, %130 ], [ %.050, %120 ], [ %.050, %110 ], [ %.050, %108 ], [ %.050, %97 ], [ %.050, %87 ], [ %.050, %86 ], [ %.050, %85 ], [ %.050, %74 ], [ %.050, %64 ], [ %.050, %56 ], [ %.050, %52 ], [ %.050, %51 ], [ %.050, %49 ], [ %.050, %47 ], [ %.050, %44 ], [ %.050, %43 ], [ %.050, %41 ], [ %.050, %40 ], [ %.050, %38 ], [ %.050, %37 ], [ %.050, %26 ], [ %.050, %16 ], [ %.050, %13 ], [ %.050, %12 ], [ %.050, %9 ]
  %.0.be = phi i32 [ %.0, %8 ], [ 1975900630, %346 ], [ 1024712642, %344 ], [ 567685405, %343 ], [ -2043338509, %342 ], [ -641272836, %341 ], [ 321028334, %340 ], [ -2100578367, %339 ], [ 218115501, %338 ], [ -1627951784, %336 ], [ -1947617601, %334 ], [ -1895976635, %331 ], [ -1158370468, %330 ], [ %329, %319 ], [ %318, %309 ], [ -848073665, %307 ], [ -1773831226, %306 ], [ -1696236407, %302 ], [ -1696236407, %300 ], [ %299, %295 ], [ -1873489546, %294 ], [ %293, %283 ], [ %282, %273 ], [ %272, %271 ], [ %270, %267 ], [ -848073665, %266 ], [ %265, %262 ], [ -1895976635, %261 ], [ -160648359, %259 ], [ -1930642495, %258 ], [ -743137078, %255 ], [ %254, %250 ], [ %249, %247 ], [ -160648359, %246 ], [ %245, %236 ], [ %235, %226 ], [ 67610348, %225 ], [ %224, %214 ], [ %213, %204 ], [ 326671954, %203 ], [ %202, %193 ], [ %192, %183 ], [ 1077816573, %181 ], [ -372221380, %180 ], [ 2068881859, %178 ], [ -1074986333, %169 ], [ -1074986333, %168 ], [ %167, %163 ], [ %162, %158 ], [ %157, %155 ], [ 2068881859, %154 ], [ %153, %144 ], [ %143, %134 ], [ %133, %131 ], [ 1077816573, %130 ], [ %129, %120 ], [ %119, %110 ], [ %109, %108 ], [ %107, %97 ], [ %96, %87 ], [ 67610348, %86 ], [ -31363007, %85 ], [ %84, %74 ], [ %73, %64 ], [ -656906324, %56 ], [ %55, %52 ], [ -31363007, %51 ], [ 1413846134, %49 ], [ 1342287906, %47 ], [ %46, %44 ], [ 1413846134, %43 ], [ 1465777429, %41 ], [ -1647635767, %40 ], [ -1065686654, %38 ], [ 16256576, %37 ], [ %36, %26 ], [ %25, %16 ], [ %15, %13 ], [ -1065686654, %12 ], [ %11, %9 ]
  br label %8

9:                                                ; preds = %8
  %10 = icmp slt i64 %.068, 110
  %11 = select i1 %10, i32 479696849, i32 -1608929515
  br label %.backedge

12:                                               ; preds = %8
  br label %.backedge

13:                                               ; preds = %8
  %14 = icmp slt i64 %.066, 110
  %15 = select i1 %14, i32 -1648270797, i32 -443757680
  br label %.backedge

16:                                               ; preds = %8
  %17 = load i32, i32* @x.3, align 4
  %18 = load i32, i32* @y.4, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 -1947617601, i32 -1164571551
  br label %.backedge

26:                                               ; preds = %8
  %27 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.068, i64 %.066
  store i64 2147483647, i64* %27, align 8
  %28 = load i32, i32* @x.3, align 4
  %29 = load i32, i32* @y.4, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 721597299, i32 -1164571551
  br label %.backedge

37:                                               ; preds = %8
  br label %.backedge

38:                                               ; preds = %8
  %39 = add i64 %.066, 1
  br label %.backedge

40:                                               ; preds = %8
  br label %.backedge

41:                                               ; preds = %8
  %42 = add i64 %.068, 1
  br label %.backedge

43:                                               ; preds = %8
  br label %.backedge

44:                                               ; preds = %8
  %45 = icmp slt i64 %.064, 110
  %46 = select i1 %45, i32 448753459, i32 -2073090802
  br label %.backedge

47:                                               ; preds = %8
  %48 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.064, i64 %.064
  store i64 0, i64* %48, align 8
  br label %.backedge

49:                                               ; preds = %8
  %50 = add i64 %.064, 1
  br label %.backedge

51:                                               ; preds = %8
  br label %.backedge

52:                                               ; preds = %8
  %53 = load i64, i64* @e, align 8
  %54 = icmp slt i64 %.062, %53
  %55 = select i1 %54, i32 1724077466, i32 -1971134180
  br label %.backedge

56:                                               ; preds = %8
  %57 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %2)
  %58 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %57, i64* nonnull dereferenceable(8) %3)
  %59 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %58, i64* nonnull dereferenceable(8) %4)
  %60 = load i64, i64* %4, align 8
  %61 = load i64, i64* %2, align 8
  %62 = load i64, i64* %3, align 8
  %63 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %61, i64 %62
  store i64 %60, i64* %63, align 8
  br label %.backedge

64:                                               ; preds = %8
  %65 = load i32, i32* @x.3, align 4
  %66 = load i32, i32* @y.4, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 -1627951784, i32 1794582344
  br label %.backedge

74:                                               ; preds = %8
  %75 = add i64 %.062, 1
  %76 = load i32, i32* @x.3, align 4
  %77 = load i32, i32* @y.4, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 -68898369, i32 1794582344
  br label %.backedge

85:                                               ; preds = %8
  br label %.backedge

86:                                               ; preds = %8
  br label %.backedge

87:                                               ; preds = %8
  %88 = load i32, i32* @x.3, align 4
  %89 = load i32, i32* @y.4, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 218115501, i32 -1793543997
  br label %.backedge

97:                                               ; preds = %8
  %98 = icmp slt i64 %.060, 110
  store i1 %98, i1* %1, align 1
  %99 = load i32, i32* @x.3, align 4
  %100 = load i32, i32* @y.4, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 326742669, i32 -1793543997
  br label %.backedge

108:                                              ; preds = %8
  %.0..0..0. = load volatile i1, i1* %1, align 1
  %109 = select i1 %.0..0..0., i32 -1172117034, i32 -1982503899
  br label %.backedge

110:                                              ; preds = %8
  %111 = load i32, i32* @x.3, align 4
  %112 = load i32, i32* @y.4, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -2100578367, i32 322923392
  br label %.backedge

120:                                              ; preds = %8
  %121 = load i32, i32* @x.3, align 4
  %122 = load i32, i32* @y.4, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 1903035448, i32 322923392
  br label %.backedge

130:                                              ; preds = %8
  br label %.backedge

131:                                              ; preds = %8
  %132 = icmp slt i64 %.058, 110
  %133 = select i1 %132, i32 944064160, i32 -586623591
  br label %.backedge

134:                                              ; preds = %8
  %135 = load i32, i32* @x.3, align 4
  %136 = load i32, i32* @y.4, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 321028334, i32 663779741
  br label %.backedge

144:                                              ; preds = %8
  %145 = load i32, i32* @x.3, align 4
  %146 = load i32, i32* @y.4, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 -320104330, i32 663779741
  br label %.backedge

154:                                              ; preds = %8
  br label %.backedge

155:                                              ; preds = %8
  %156 = icmp slt i64 %.056, 110
  %157 = select i1 %156, i32 -2101299998, i32 -1600316139
  br label %.backedge

158:                                              ; preds = %8
  %159 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.058, i64 %.060
  %160 = load i64, i64* %159, align 8
  %161 = icmp eq i64 %160, 2147483647
  %162 = select i1 %161, i32 -1467267328, i32 -548724877
  br label %.backedge

163:                                              ; preds = %8
  %164 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.060, i64 %.056
  %165 = load i64, i64* %164, align 8
  %166 = icmp eq i64 %165, 2147483647
  %167 = select i1 %166, i32 -1467267328, i32 -258875186
  br label %.backedge

168:                                              ; preds = %8
  br label %.backedge

169:                                              ; preds = %8
  %170 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.058, i64 %.056
  %171 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.058, i64 %.060
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.060, i64 %.056
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, %172
  store i64 %175, i64* %5, align 8
  %176 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %170, i64* nonnull dereferenceable(8) %5)
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %170, align 8
  br label %.backedge

178:                                              ; preds = %8
  %179 = add i64 %.056, 1
  br label %.backedge

180:                                              ; preds = %8
  br label %.backedge

181:                                              ; preds = %8
  %182 = add i64 %.058, 1
  br label %.backedge

183:                                              ; preds = %8
  %184 = load i32, i32* @x.3, align 4
  %185 = load i32, i32* @y.4, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 -641272836, i32 -1716262821
  br label %.backedge

193:                                              ; preds = %8
  %194 = load i32, i32* @x.3, align 4
  %195 = load i32, i32* @y.4, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 259927682, i32 -1716262821
  br label %.backedge

203:                                              ; preds = %8
  br label %.backedge

204:                                              ; preds = %8
  %205 = load i32, i32* @x.3, align 4
  %206 = load i32, i32* @y.4, align 4
  %207 = add i32 %205, -1
  %208 = mul i32 %207, %205
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %211, %210
  %213 = select i1 %212, i32 -2043338509, i32 243334109
  br label %.backedge

214:                                              ; preds = %8
  %215 = add i64 %.060, 1
  %216 = load i32, i32* @x.3, align 4
  %217 = load i32, i32* @y.4, align 4
  %218 = add i32 %216, -1
  %219 = mul i32 %218, %216
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %222, %221
  %224 = select i1 %223, i32 889083849, i32 243334109
  br label %.backedge

225:                                              ; preds = %8
  br label %.backedge

226:                                              ; preds = %8
  %227 = load i32, i32* @x.3, align 4
  %228 = load i32, i32* @y.4, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 567685405, i32 34925401
  br label %.backedge

236:                                              ; preds = %8
  %237 = load i32, i32* @x.3, align 4
  %238 = load i32, i32* @y.4, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 117753533, i32 34925401
  br label %.backedge

246:                                              ; preds = %8
  br label %.backedge

247:                                              ; preds = %8
  %248 = icmp slt i64 %.054, 110
  %249 = select i1 %248, i32 -1904369077, i32 -1969137995
  br label %.backedge

250:                                              ; preds = %8
  %251 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.054, i64 %.054
  %252 = load i64, i64* %251, align 8
  %253 = icmp slt i64 %252, 0
  %254 = select i1 %253, i32 -1248945127, i32 -745136676
  br label %.backedge

255:                                              ; preds = %8
  %256 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %257 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %256, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

258:                                              ; preds = %8
  br label %.backedge

259:                                              ; preds = %8
  %260 = add i64 %.054, 1
  br label %.backedge

261:                                              ; preds = %8
  br label %.backedge

262:                                              ; preds = %8
  %263 = load i64, i64* @v, align 8
  %264 = icmp slt i64 %.052, %263
  %265 = select i1 %264, i32 -1393016031, i32 -743137078
  br label %.backedge

266:                                              ; preds = %8
  br label %.backedge

267:                                              ; preds = %8
  %268 = load i64, i64* @v, align 8
  %269 = icmp slt i64 %.050, %268
  %270 = select i1 %269, i32 -822477511, i32 -839312523
  br label %.backedge

271:                                              ; preds = %8
  %.not = icmp eq i64 %.050, 0
  %272 = select i1 %.not, i32 -1873489546, i32 1477001108
  br label %.backedge

273:                                              ; preds = %8
  %274 = load i32, i32* @x.3, align 4
  %275 = load i32, i32* @y.4, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 1024712642, i32 -689702353
  br label %.backedge

283:                                              ; preds = %8
  %284 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %285 = load i32, i32* @x.3, align 4
  %286 = load i32, i32* @y.4, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 -766619307, i32 -689702353
  br label %.backedge

294:                                              ; preds = %8
  br label %.backedge

295:                                              ; preds = %8
  %296 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.052, i64 %.050
  %297 = load i64, i64* %296, align 8
  %298 = icmp eq i64 %297, 2147483647
  %299 = select i1 %298, i32 -842805758, i32 1122246959
  br label %.backedge

300:                                              ; preds = %8
  %301 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

302:                                              ; preds = %8
  %303 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.052, i64 %.050
  %304 = load i64, i64* %303, align 8
  %305 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %304)
  br label %.backedge

306:                                              ; preds = %8
  br label %.backedge

307:                                              ; preds = %8
  %308 = add i64 %.050, 1
  br label %.backedge

309:                                              ; preds = %8
  %310 = load i32, i32* @x.3, align 4
  %311 = load i32, i32* @y.4, align 4
  %312 = add i32 %310, -1
  %313 = mul i32 %312, %310
  %314 = and i32 %313, 1
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %316, %315
  %318 = select i1 %317, i32 1975900630, i32 2114147464
  br label %.backedge

319:                                              ; preds = %8
  %320 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %321 = load i32, i32* @x.3, align 4
  %322 = load i32, i32* @y.4, align 4
  %323 = add i32 %321, -1
  %324 = mul i32 %323, %321
  %325 = and i32 %324, 1
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %327, %326
  %329 = select i1 %328, i32 1589626315, i32 2114147464
  br label %.backedge

330:                                              ; preds = %8
  br label %.backedge

331:                                              ; preds = %8
  %332 = add i64 %.052, 1
  br label %.backedge

333:                                              ; preds = %8
  ret i32 0

334:                                              ; preds = %8
  %335 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @f, i64 0, i64 %.068, i64 %.066
  store i64 2147483647, i64* %335, align 8
  br label %.backedge

336:                                              ; preds = %8
  %337 = add i64 %.062, 1
  br label %.backedge

338:                                              ; preds = %8
  br label %.backedge

339:                                              ; preds = %8
  br label %.backedge

340:                                              ; preds = %8
  br label %.backedge

341:                                              ; preds = %8
  br label %.backedge

342:                                              ; preds = %8
  %.neg = add i64 %.060, 1
  br label %.backedge

343:                                              ; preds = %8
  br label %.backedge

344:                                              ; preds = %8
  %345 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

346:                                              ; preds = %8
  %347 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.5, align 4
  %8 = load i32, i32* @y.6, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 224691752, i32 -1620651603
  %16 = select i1 %14, i32 -2057531326, i32 -1620651603
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 331469042, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 331469042, label %18
    i32 -54030498, label %.outer.backedge
    i32 1173905568, label %.outer10.backedge
    i32 -2057531326, label %21
    i32 224691752, label %22
    i32 -2134768006, label %23
    i32 -1620651603, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -54030498, i32 1173905568
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer.backedge

22:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %22, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -2134768006, %22 ], [ %16, %17 ]
  br label %.outer10

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %21
  %.08.ph.be = phi i64* [ %0, %21 ], [ %0, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ %15, %21 ], [ -2057531326, %24 ], [ -2134768006, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s517066408.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
