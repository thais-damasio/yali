; ModuleID = 'build_ollvm/programs/p02363/s541281485.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s541281485.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dp = global [110 x [110 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [16 x i8] c"NEGATIVE CYCLE\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s541281485.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %13, i32* nonnull dereferenceable(4) %8)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.079 = phi i32 [ 0, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.0 = phi i32 [ 132449078, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 132449078, label %16
    i32 -283154382, label %26
    i32 2142251845, label %38
    i32 76204175, label %40
    i32 1336068229, label %50
    i32 1963605421, label %60
    i32 779070088, label %61
    i32 -2125848713, label %65
    i32 -1326357884, label %68
    i32 -442725755, label %72
    i32 -450843796, label %76
    i32 475240153, label %86
    i32 -604669448, label %96
    i32 587335126, label %97
    i32 -637682048, label %99
    i32 -1144575333, label %100
    i32 -440581032, label %101
    i32 -1981049068, label %102
    i32 -1415732167, label %112
    i32 1061667371, label %124
    i32 -1639734381, label %126
    i32 -136981007, label %136
    i32 -501029784, label %153
    i32 -907475949, label %154
    i32 1730008680, label %164
    i32 1085238573, label %175
    i32 -933665848, label %176
    i32 -1883730064, label %177
    i32 2005639655, label %181
    i32 -372382072, label %182
    i32 1070039376, label %186
    i32 -126636307, label %187
    i32 986297745, label %191
    i32 -54645322, label %201
    i32 -1123963347, label %216
    i32 125338770, label %218
    i32 -470017989, label %224
    i32 -1381649881, label %236
    i32 -1591622319, label %246
    i32 1995093007, label %256
    i32 1525094916, label %257
    i32 1707679207, label %267
    i32 -45430284, label %278
    i32 -1674355656, label %279
    i32 885967610, label %280
    i32 820675873, label %281
    i32 78062707, label %291
    i32 -875686599, label %301
    i32 232851153, label %302
    i32 -1325437359, label %312
    i32 -1175388009, label %323
    i32 1646040754, label %324
    i32 -1085525835, label %325
    i32 440753752, label %329
    i32 -1079242663, label %335
    i32 772146928, label %345
    i32 569583298, label %356
    i32 -1199802186, label %357
    i32 -1145538574, label %367
    i32 -1676172957, label %377
    i32 1686709101, label %378
    i32 -642960971, label %388
    i32 736198942, label %398
    i32 -1694165472, label %399
    i32 611602856, label %409
    i32 1863982766, label %419
    i32 -1949931029, label %420
    i32 -1799972404, label %424
    i32 -639369703, label %425
    i32 284860831, label %435
    i32 -585310790, label %447
    i32 -1287176086, label %449
    i32 -1214859653, label %459
    i32 1115099779, label %474
    i32 244574928, label %476
    i32 -1811443877, label %478
    i32 -1010234395, label %484
    i32 -1464784021, label %494
    i32 1278856170, label %507
    i32 2114119501, label %509
    i32 1546697906, label %511
    i32 -1937204800, label %512
    i32 1459019254, label %514
    i32 -520046703, label %524
    i32 1369795376, label %535
    i32 -513908345, label %536
    i32 620610192, label %546
    i32 730663651, label %557
    i32 -1851264544, label %558
    i32 -1367054568, label %559
    i32 356544630, label %560
    i32 797028057, label %561
    i32 -224632756, label %562
    i32 2020227658, label %563
    i32 -1545691524, label %564
    i32 765532792, label %572
    i32 -1251700221, label %573
    i32 -2077773098, label %574
    i32 -1052295497, label %575
    i32 -1407264741, label %577
    i32 297200094, label %578
    i32 -1862019127, label %580
    i32 -418220258, label %582
    i32 -1413686817, label %583
    i32 -1700509774, label %585
    i32 106871566, label %586
    i32 -754013166, label %587
    i32 80551888, label %588
    i32 621401106, label %589
    i32 -10132623, label %591
  ]

.backedge:                                        ; preds = %15, %591, %589, %588, %587, %586, %585, %583, %582, %580, %578, %577, %575, %574, %573, %572, %564, %563, %562, %561, %560, %558, %557, %546, %536, %535, %524, %514, %512, %511, %509, %507, %494, %484, %478, %476, %474, %459, %449, %447, %435, %425, %424, %420, %419, %409, %399, %398, %388, %378, %377, %367, %357, %356, %345, %335, %329, %325, %324, %323, %312, %302, %301, %291, %281, %280, %279, %278, %267, %257, %256, %246, %236, %224, %218, %216, %201, %191, %187, %186, %182, %181, %177, %176, %175, %164, %154, %153, %136, %126, %124, %112, %102, %101, %100, %99, %97, %96, %86, %76, %72, %68, %65, %61, %60, %50, %40, %38, %26, %16
  %.079.be = phi i32 [ %.079, %15 ], [ %.079, %591 ], [ %.079, %589 ], [ %.079, %588 ], [ %.079, %587 ], [ %.079, %586 ], [ %.079, %585 ], [ %.079, %583 ], [ %.079, %582 ], [ %.079, %580 ], [ %.079, %578 ], [ %.079, %577 ], [ %.079, %575 ], [ %.079, %574 ], [ %.079, %573 ], [ %.079, %572 ], [ %.079, %564 ], [ %.079, %563 ], [ %.079, %562 ], [ %.079, %561 ], [ %.079, %560 ], [ %.079, %558 ], [ %.079, %557 ], [ %.079, %546 ], [ %.079, %536 ], [ %.079, %535 ], [ %.079, %524 ], [ %.079, %514 ], [ %.079, %512 ], [ %.079, %511 ], [ %.079, %509 ], [ %.079, %507 ], [ %.079, %494 ], [ %.079, %484 ], [ %.079, %478 ], [ %.079, %476 ], [ %.079, %474 ], [ %.079, %459 ], [ %.079, %449 ], [ %.079, %447 ], [ %.079, %435 ], [ %.079, %425 ], [ %.079, %424 ], [ %.079, %420 ], [ %.079, %419 ], [ %.079, %409 ], [ %.079, %399 ], [ %.079, %398 ], [ %.079, %388 ], [ %.079, %378 ], [ %.079, %377 ], [ %.079, %367 ], [ %.079, %357 ], [ %.079, %356 ], [ %.079, %345 ], [ %.079, %335 ], [ %.079, %329 ], [ %.079, %325 ], [ %.079, %324 ], [ %.079, %323 ], [ %.079, %312 ], [ %.079, %302 ], [ %.079, %301 ], [ %.079, %291 ], [ %.079, %281 ], [ %.079, %280 ], [ %.079, %279 ], [ %.079, %278 ], [ %.079, %267 ], [ %.079, %257 ], [ %.079, %256 ], [ %.079, %246 ], [ %.079, %236 ], [ %.079, %224 ], [ %.079, %218 ], [ %.079, %216 ], [ %.079, %201 ], [ %.079, %191 ], [ %.079, %187 ], [ %.079, %186 ], [ %.079, %182 ], [ %.079, %181 ], [ %.079, %177 ], [ %.079, %176 ], [ %.079, %175 ], [ %.079, %164 ], [ %.079, %154 ], [ %.079, %153 ], [ %.079, %136 ], [ %.079, %126 ], [ %.079, %124 ], [ %.079, %112 ], [ %.079, %102 ], [ %.079, %101 ], [ %.neg85, %100 ], [ %.079, %99 ], [ %.079, %97 ], [ %.079, %96 ], [ %.079, %86 ], [ %.079, %76 ], [ %.079, %72 ], [ %.079, %68 ], [ %.079, %65 ], [ %.079, %61 ], [ %.079, %60 ], [ %.079, %50 ], [ %.079, %40 ], [ %.079, %38 ], [ %.079, %26 ], [ %.079, %16 ]
  %.077.be = phi i32 [ %.077, %15 ], [ %.077, %591 ], [ %.077, %589 ], [ %.077, %588 ], [ %.077, %587 ], [ %.077, %586 ], [ %.077, %585 ], [ %.077, %583 ], [ %.077, %582 ], [ %.077, %580 ], [ %.077, %578 ], [ %.077, %577 ], [ %.077, %575 ], [ %.077, %574 ], [ %.077, %573 ], [ %.077, %572 ], [ %.077, %564 ], [ %.077, %563 ], [ %.077, %562 ], [ 0, %561 ], [ %.077, %560 ], [ %.077, %558 ], [ %.077, %557 ], [ %.077, %546 ], [ %.077, %536 ], [ %.077, %535 ], [ %.077, %524 ], [ %.077, %514 ], [ %.077, %512 ], [ %.077, %511 ], [ %.077, %509 ], [ %.077, %507 ], [ %.077, %494 ], [ %.077, %484 ], [ %.077, %478 ], [ %.077, %476 ], [ %.077, %474 ], [ %.077, %459 ], [ %.077, %449 ], [ %.077, %447 ], [ %.077, %435 ], [ %.077, %425 ], [ %.077, %424 ], [ %.077, %420 ], [ %.077, %419 ], [ %.077, %409 ], [ %.077, %399 ], [ %.077, %398 ], [ %.077, %388 ], [ %.077, %378 ], [ %.077, %377 ], [ %.077, %367 ], [ %.077, %357 ], [ %.077, %356 ], [ %.077, %345 ], [ %.077, %335 ], [ %.077, %329 ], [ %.077, %325 ], [ %.077, %324 ], [ %.077, %323 ], [ %.077, %312 ], [ %.077, %302 ], [ %.077, %301 ], [ %.077, %291 ], [ %.077, %281 ], [ %.077, %280 ], [ %.077, %279 ], [ %.077, %278 ], [ %.077, %267 ], [ %.077, %257 ], [ %.077, %256 ], [ %.077, %246 ], [ %.077, %236 ], [ %.077, %224 ], [ %.077, %218 ], [ %.077, %216 ], [ %.077, %201 ], [ %.077, %191 ], [ %.077, %187 ], [ %.077, %186 ], [ %.077, %182 ], [ %.077, %181 ], [ %.077, %177 ], [ %.077, %176 ], [ %.077, %175 ], [ %.077, %164 ], [ %.077, %154 ], [ %.077, %153 ], [ %.077, %136 ], [ %.077, %126 ], [ %.077, %124 ], [ %.077, %112 ], [ %.077, %102 ], [ %.077, %101 ], [ %.077, %100 ], [ %.077, %99 ], [ %98, %97 ], [ %.077, %96 ], [ %.077, %86 ], [ %.077, %76 ], [ %.077, %72 ], [ %.077, %68 ], [ %.077, %65 ], [ %.077, %61 ], [ %.077, %60 ], [ 0, %50 ], [ %.077, %40 ], [ %.077, %38 ], [ %.077, %26 ], [ %.077, %16 ]
  %.075.be = phi i32 [ %.075, %15 ], [ %.075, %591 ], [ %.075, %589 ], [ %.075, %588 ], [ %.075, %587 ], [ %.075, %586 ], [ %.075, %585 ], [ %.075, %583 ], [ %.075, %582 ], [ %.075, %580 ], [ %.075, %578 ], [ %.075, %577 ], [ %.075, %575 ], [ %.075, %574 ], [ %.075, %573 ], [ %.neg, %572 ], [ %.075, %564 ], [ %.075, %563 ], [ %.075, %562 ], [ %.075, %561 ], [ %.075, %560 ], [ %.075, %558 ], [ %.075, %557 ], [ %.075, %546 ], [ %.075, %536 ], [ %.075, %535 ], [ %.075, %524 ], [ %.075, %514 ], [ %.075, %512 ], [ %.075, %511 ], [ %.075, %509 ], [ %.075, %507 ], [ %.075, %494 ], [ %.075, %484 ], [ %.075, %478 ], [ %.075, %476 ], [ %.075, %474 ], [ %.075, %459 ], [ %.075, %449 ], [ %.075, %447 ], [ %.075, %435 ], [ %.075, %425 ], [ %.075, %424 ], [ %.075, %420 ], [ %.075, %419 ], [ %.075, %409 ], [ %.075, %399 ], [ %.075, %398 ], [ %.075, %388 ], [ %.075, %378 ], [ %.075, %377 ], [ %.075, %367 ], [ %.075, %357 ], [ %.075, %356 ], [ %.075, %345 ], [ %.075, %335 ], [ %.075, %329 ], [ %.075, %325 ], [ %.075, %324 ], [ %.075, %323 ], [ %.075, %312 ], [ %.075, %302 ], [ %.075, %301 ], [ %.075, %291 ], [ %.075, %281 ], [ %.075, %280 ], [ %.075, %279 ], [ %.075, %278 ], [ %.075, %267 ], [ %.075, %257 ], [ %.075, %256 ], [ %.075, %246 ], [ %.075, %236 ], [ %.075, %224 ], [ %.075, %218 ], [ %.075, %216 ], [ %.075, %201 ], [ %.075, %191 ], [ %.075, %187 ], [ %.075, %186 ], [ %.075, %182 ], [ %.075, %181 ], [ %.075, %177 ], [ %.075, %176 ], [ %.075, %175 ], [ %165, %164 ], [ %.075, %154 ], [ %.075, %153 ], [ %.075, %136 ], [ %.075, %126 ], [ %.075, %124 ], [ %.075, %112 ], [ %.075, %102 ], [ 0, %101 ], [ %.075, %100 ], [ %.075, %99 ], [ %.075, %97 ], [ %.075, %96 ], [ %.075, %86 ], [ %.075, %76 ], [ %.075, %72 ], [ %.075, %68 ], [ %.075, %65 ], [ %.075, %61 ], [ %.075, %60 ], [ %.075, %50 ], [ %.075, %40 ], [ %.075, %38 ], [ %.075, %26 ], [ %.075, %16 ]
  %.073.be = phi i32 [ %.073, %15 ], [ %.073, %591 ], [ %.073, %589 ], [ %.073, %588 ], [ %.073, %587 ], [ %.073, %586 ], [ %.073, %585 ], [ %.073, %583 ], [ %.073, %582 ], [ %.073, %580 ], [ %579, %578 ], [ %.073, %577 ], [ %.073, %575 ], [ %.073, %574 ], [ %.073, %573 ], [ %.073, %572 ], [ %.073, %564 ], [ %.073, %563 ], [ %.073, %562 ], [ %.073, %561 ], [ %.073, %560 ], [ %.073, %558 ], [ %.073, %557 ], [ %.073, %546 ], [ %.073, %536 ], [ %.073, %535 ], [ %.073, %524 ], [ %.073, %514 ], [ %.073, %512 ], [ %.073, %511 ], [ %.073, %509 ], [ %.073, %507 ], [ %.073, %494 ], [ %.073, %484 ], [ %.073, %478 ], [ %.073, %476 ], [ %.073, %474 ], [ %.073, %459 ], [ %.073, %449 ], [ %.073, %447 ], [ %.073, %435 ], [ %.073, %425 ], [ %.073, %424 ], [ %.073, %420 ], [ %.073, %419 ], [ %.073, %409 ], [ %.073, %399 ], [ %.073, %398 ], [ %.073, %388 ], [ %.073, %378 ], [ %.073, %377 ], [ %.073, %367 ], [ %.073, %357 ], [ %.073, %356 ], [ %.073, %345 ], [ %.073, %335 ], [ %.073, %329 ], [ %.073, %325 ], [ %.073, %324 ], [ %.073, %323 ], [ %313, %312 ], [ %.073, %302 ], [ %.073, %301 ], [ %.073, %291 ], [ %.073, %281 ], [ %.073, %280 ], [ %.073, %279 ], [ %.073, %278 ], [ %.073, %267 ], [ %.073, %257 ], [ %.073, %256 ], [ %.073, %246 ], [ %.073, %236 ], [ %.073, %224 ], [ %.073, %218 ], [ %.073, %216 ], [ %.073, %201 ], [ %.073, %191 ], [ %.073, %187 ], [ %.073, %186 ], [ %.073, %182 ], [ %.073, %181 ], [ %.073, %177 ], [ 0, %176 ], [ %.073, %175 ], [ %.073, %164 ], [ %.073, %154 ], [ %.073, %153 ], [ %.073, %136 ], [ %.073, %126 ], [ %.073, %124 ], [ %.073, %112 ], [ %.073, %102 ], [ %.073, %101 ], [ %.073, %100 ], [ %.073, %99 ], [ %.073, %97 ], [ %.073, %96 ], [ %.073, %86 ], [ %.073, %76 ], [ %.073, %72 ], [ %.073, %68 ], [ %.073, %65 ], [ %.073, %61 ], [ %.073, %60 ], [ %.073, %50 ], [ %.073, %40 ], [ %.073, %38 ], [ %.073, %26 ], [ %.073, %16 ]
  %.071.be = phi i32 [ %.071, %15 ], [ %.071, %591 ], [ %.071, %589 ], [ %.071, %588 ], [ %.071, %587 ], [ %.071, %586 ], [ %.071, %585 ], [ %.071, %583 ], [ %.071, %582 ], [ %.071, %580 ], [ %.071, %578 ], [ %.071, %577 ], [ %.071, %575 ], [ %.071, %574 ], [ %.071, %573 ], [ %.071, %572 ], [ %.071, %564 ], [ %.071, %563 ], [ %.071, %562 ], [ %.071, %561 ], [ %.071, %560 ], [ %.071, %558 ], [ %.071, %557 ], [ %.071, %546 ], [ %.071, %536 ], [ %.071, %535 ], [ %.071, %524 ], [ %.071, %514 ], [ %.071, %512 ], [ %.071, %511 ], [ %.071, %509 ], [ %.071, %507 ], [ %.071, %494 ], [ %.071, %484 ], [ %.071, %478 ], [ %.071, %476 ], [ %.071, %474 ], [ %.071, %459 ], [ %.071, %449 ], [ %.071, %447 ], [ %.071, %435 ], [ %.071, %425 ], [ %.071, %424 ], [ %.071, %420 ], [ %.071, %419 ], [ %.071, %409 ], [ %.071, %399 ], [ %.071, %398 ], [ %.071, %388 ], [ %.071, %378 ], [ %.071, %377 ], [ %.071, %367 ], [ %.071, %357 ], [ %.071, %356 ], [ %.071, %345 ], [ %.071, %335 ], [ %.071, %329 ], [ %.071, %325 ], [ %.071, %324 ], [ %.071, %323 ], [ %.071, %312 ], [ %.071, %302 ], [ %.071, %301 ], [ %.071, %291 ], [ %.071, %281 ], [ %.neg84, %280 ], [ %.071, %279 ], [ %.071, %278 ], [ %.071, %267 ], [ %.071, %257 ], [ %.071, %256 ], [ %.071, %246 ], [ %.071, %236 ], [ %.071, %224 ], [ %.071, %218 ], [ %.071, %216 ], [ %.071, %201 ], [ %.071, %191 ], [ %.071, %187 ], [ %.071, %186 ], [ %.071, %182 ], [ 0, %181 ], [ %.071, %177 ], [ %.071, %176 ], [ %.071, %175 ], [ %.071, %164 ], [ %.071, %154 ], [ %.071, %153 ], [ %.071, %136 ], [ %.071, %126 ], [ %.071, %124 ], [ %.071, %112 ], [ %.071, %102 ], [ %.071, %101 ], [ %.071, %100 ], [ %.071, %99 ], [ %.071, %97 ], [ %.071, %96 ], [ %.071, %86 ], [ %.071, %76 ], [ %.071, %72 ], [ %.071, %68 ], [ %.071, %65 ], [ %.071, %61 ], [ %.071, %60 ], [ %.071, %50 ], [ %.071, %40 ], [ %.071, %38 ], [ %.071, %26 ], [ %.071, %16 ]
  %.069.be = phi i32 [ %.069, %15 ], [ %.069, %591 ], [ %.069, %589 ], [ %.069, %588 ], [ %.069, %587 ], [ %.069, %586 ], [ %.069, %585 ], [ %.069, %583 ], [ %.069, %582 ], [ %.069, %580 ], [ %.069, %578 ], [ %.069, %577 ], [ %576, %575 ], [ %.069, %574 ], [ %.069, %573 ], [ %.069, %572 ], [ %.069, %564 ], [ %.069, %563 ], [ %.069, %562 ], [ %.069, %561 ], [ %.069, %560 ], [ %.069, %558 ], [ %.069, %557 ], [ %.069, %546 ], [ %.069, %536 ], [ %.069, %535 ], [ %.069, %524 ], [ %.069, %514 ], [ %.069, %512 ], [ %.069, %511 ], [ %.069, %509 ], [ %.069, %507 ], [ %.069, %494 ], [ %.069, %484 ], [ %.069, %478 ], [ %.069, %476 ], [ %.069, %474 ], [ %.069, %459 ], [ %.069, %449 ], [ %.069, %447 ], [ %.069, %435 ], [ %.069, %425 ], [ %.069, %424 ], [ %.069, %420 ], [ %.069, %419 ], [ %.069, %409 ], [ %.069, %399 ], [ %.069, %398 ], [ %.069, %388 ], [ %.069, %378 ], [ %.069, %377 ], [ %.069, %367 ], [ %.069, %357 ], [ %.069, %356 ], [ %.069, %345 ], [ %.069, %335 ], [ %.069, %329 ], [ %.069, %325 ], [ %.069, %324 ], [ %.069, %323 ], [ %.069, %312 ], [ %.069, %302 ], [ %.069, %301 ], [ %.069, %291 ], [ %.069, %281 ], [ %.069, %280 ], [ %.069, %279 ], [ %.069, %278 ], [ %268, %267 ], [ %.069, %257 ], [ %.069, %256 ], [ %.069, %246 ], [ %.069, %236 ], [ %.069, %224 ], [ %.069, %218 ], [ %.069, %216 ], [ %.069, %201 ], [ %.069, %191 ], [ %.069, %187 ], [ 0, %186 ], [ %.069, %182 ], [ %.069, %181 ], [ %.069, %177 ], [ %.069, %176 ], [ %.069, %175 ], [ %.069, %164 ], [ %.069, %154 ], [ %.069, %153 ], [ %.069, %136 ], [ %.069, %126 ], [ %.069, %124 ], [ %.069, %112 ], [ %.069, %102 ], [ %.069, %101 ], [ %.069, %100 ], [ %.069, %99 ], [ %.069, %97 ], [ %.069, %96 ], [ %.069, %86 ], [ %.069, %76 ], [ %.069, %72 ], [ %.069, %68 ], [ %.069, %65 ], [ %.069, %61 ], [ %.069, %60 ], [ %.069, %50 ], [ %.069, %40 ], [ %.069, %38 ], [ %.069, %26 ], [ %.069, %16 ]
  %.067.be = phi i32 [ %.067, %15 ], [ %.067, %591 ], [ %.067, %589 ], [ %.067, %588 ], [ %.067, %587 ], [ %.067, %586 ], [ %.067, %585 ], [ %584, %583 ], [ %.067, %582 ], [ %.067, %580 ], [ %.067, %578 ], [ %.067, %577 ], [ %.067, %575 ], [ %.067, %574 ], [ %.067, %573 ], [ %.067, %572 ], [ %.067, %564 ], [ %.067, %563 ], [ %.067, %562 ], [ %.067, %561 ], [ %.067, %560 ], [ %.067, %558 ], [ %.067, %557 ], [ %.067, %546 ], [ %.067, %536 ], [ %.067, %535 ], [ %.067, %524 ], [ %.067, %514 ], [ %.067, %512 ], [ %.067, %511 ], [ %.067, %509 ], [ %.067, %507 ], [ %.067, %494 ], [ %.067, %484 ], [ %.067, %478 ], [ %.067, %476 ], [ %.067, %474 ], [ %.067, %459 ], [ %.067, %449 ], [ %.067, %447 ], [ %.067, %435 ], [ %.067, %425 ], [ %.067, %424 ], [ %.067, %420 ], [ %.067, %419 ], [ %.067, %409 ], [ %.067, %399 ], [ %.067, %398 ], [ %.neg83, %388 ], [ %.067, %378 ], [ %.067, %377 ], [ %.067, %367 ], [ %.067, %357 ], [ %.067, %356 ], [ %.067, %345 ], [ %.067, %335 ], [ %.067, %329 ], [ %.067, %325 ], [ 0, %324 ], [ %.067, %323 ], [ %.067, %312 ], [ %.067, %302 ], [ %.067, %301 ], [ %.067, %291 ], [ %.067, %281 ], [ %.067, %280 ], [ %.067, %279 ], [ %.067, %278 ], [ %.067, %267 ], [ %.067, %257 ], [ %.067, %256 ], [ %.067, %246 ], [ %.067, %236 ], [ %.067, %224 ], [ %.067, %218 ], [ %.067, %216 ], [ %.067, %201 ], [ %.067, %191 ], [ %.067, %187 ], [ %.067, %186 ], [ %.067, %182 ], [ %.067, %181 ], [ %.067, %177 ], [ %.067, %176 ], [ %.067, %175 ], [ %.067, %164 ], [ %.067, %154 ], [ %.067, %153 ], [ %.067, %136 ], [ %.067, %126 ], [ %.067, %124 ], [ %.067, %112 ], [ %.067, %102 ], [ %.067, %101 ], [ %.067, %100 ], [ %.067, %99 ], [ %.067, %97 ], [ %.067, %96 ], [ %.067, %86 ], [ %.067, %76 ], [ %.067, %72 ], [ %.067, %68 ], [ %.067, %65 ], [ %.067, %61 ], [ %.067, %60 ], [ %.067, %50 ], [ %.067, %40 ], [ %.067, %38 ], [ %.067, %26 ], [ %.067, %16 ]
  %.065.be = phi i32 [ %.065, %15 ], [ %592, %591 ], [ %.065, %589 ], [ %.065, %588 ], [ %.065, %587 ], [ %.065, %586 ], [ 0, %585 ], [ %.065, %583 ], [ %.065, %582 ], [ %.065, %580 ], [ %.065, %578 ], [ %.065, %577 ], [ %.065, %575 ], [ %.065, %574 ], [ %.065, %573 ], [ %.065, %572 ], [ %.065, %564 ], [ %.065, %563 ], [ %.065, %562 ], [ %.065, %561 ], [ %.065, %560 ], [ %.065, %558 ], [ %.065, %557 ], [ %547, %546 ], [ %.065, %536 ], [ %.065, %535 ], [ %.065, %524 ], [ %.065, %514 ], [ %.065, %512 ], [ %.065, %511 ], [ %.065, %509 ], [ %.065, %507 ], [ %.065, %494 ], [ %.065, %484 ], [ %.065, %478 ], [ %.065, %476 ], [ %.065, %474 ], [ %.065, %459 ], [ %.065, %449 ], [ %.065, %447 ], [ %.065, %435 ], [ %.065, %425 ], [ %.065, %424 ], [ %.065, %420 ], [ %.065, %419 ], [ 0, %409 ], [ %.065, %399 ], [ %.065, %398 ], [ %.065, %388 ], [ %.065, %378 ], [ %.065, %377 ], [ %.065, %367 ], [ %.065, %357 ], [ %.065, %356 ], [ %.065, %345 ], [ %.065, %335 ], [ %.065, %329 ], [ %.065, %325 ], [ %.065, %324 ], [ %.065, %323 ], [ %.065, %312 ], [ %.065, %302 ], [ %.065, %301 ], [ %.065, %291 ], [ %.065, %281 ], [ %.065, %280 ], [ %.065, %279 ], [ %.065, %278 ], [ %.065, %267 ], [ %.065, %257 ], [ %.065, %256 ], [ %.065, %246 ], [ %.065, %236 ], [ %.065, %224 ], [ %.065, %218 ], [ %.065, %216 ], [ %.065, %201 ], [ %.065, %191 ], [ %.065, %187 ], [ %.065, %186 ], [ %.065, %182 ], [ %.065, %181 ], [ %.065, %177 ], [ %.065, %176 ], [ %.065, %175 ], [ %.065, %164 ], [ %.065, %154 ], [ %.065, %153 ], [ %.065, %136 ], [ %.065, %126 ], [ %.065, %124 ], [ %.065, %112 ], [ %.065, %102 ], [ %.065, %101 ], [ %.065, %100 ], [ %.065, %99 ], [ %.065, %97 ], [ %.065, %96 ], [ %.065, %86 ], [ %.065, %76 ], [ %.065, %72 ], [ %.065, %68 ], [ %.065, %65 ], [ %.065, %61 ], [ %.065, %60 ], [ %.065, %50 ], [ %.065, %40 ], [ %.065, %38 ], [ %.065, %26 ], [ %.065, %16 ]
  %.063.be = phi i32 [ %.063, %15 ], [ %.063, %591 ], [ %.063, %589 ], [ %.063, %588 ], [ %.063, %587 ], [ %.063, %586 ], [ %.063, %585 ], [ %.063, %583 ], [ %.063, %582 ], [ %.063, %580 ], [ %.063, %578 ], [ %.063, %577 ], [ %.063, %575 ], [ %.063, %574 ], [ %.063, %573 ], [ %.063, %572 ], [ %.063, %564 ], [ %.063, %563 ], [ %.063, %562 ], [ %.063, %561 ], [ %.063, %560 ], [ %.063, %558 ], [ %.063, %557 ], [ %.063, %546 ], [ %.063, %536 ], [ %.063, %535 ], [ %.063, %524 ], [ %.063, %514 ], [ %513, %512 ], [ %.063, %511 ], [ %.063, %509 ], [ %.063, %507 ], [ %.063, %494 ], [ %.063, %484 ], [ %.063, %478 ], [ %.063, %476 ], [ %.063, %474 ], [ %.063, %459 ], [ %.063, %449 ], [ %.063, %447 ], [ %.063, %435 ], [ %.063, %425 ], [ 0, %424 ], [ %.063, %420 ], [ %.063, %419 ], [ %.063, %409 ], [ %.063, %399 ], [ %.063, %398 ], [ %.063, %388 ], [ %.063, %378 ], [ %.063, %377 ], [ %.063, %367 ], [ %.063, %357 ], [ %.063, %356 ], [ %.063, %345 ], [ %.063, %335 ], [ %.063, %329 ], [ %.063, %325 ], [ %.063, %324 ], [ %.063, %323 ], [ %.063, %312 ], [ %.063, %302 ], [ %.063, %301 ], [ %.063, %291 ], [ %.063, %281 ], [ %.063, %280 ], [ %.063, %279 ], [ %.063, %278 ], [ %.063, %267 ], [ %.063, %257 ], [ %.063, %256 ], [ %.063, %246 ], [ %.063, %236 ], [ %.063, %224 ], [ %.063, %218 ], [ %.063, %216 ], [ %.063, %201 ], [ %.063, %191 ], [ %.063, %187 ], [ %.063, %186 ], [ %.063, %182 ], [ %.063, %181 ], [ %.063, %177 ], [ %.063, %176 ], [ %.063, %175 ], [ %.063, %164 ], [ %.063, %154 ], [ %.063, %153 ], [ %.063, %136 ], [ %.063, %126 ], [ %.063, %124 ], [ %.063, %112 ], [ %.063, %102 ], [ %.063, %101 ], [ %.063, %100 ], [ %.063, %99 ], [ %.063, %97 ], [ %.063, %96 ], [ %.063, %86 ], [ %.063, %76 ], [ %.063, %72 ], [ %.063, %68 ], [ %.063, %65 ], [ %.063, %61 ], [ %.063, %60 ], [ %.063, %50 ], [ %.063, %40 ], [ %.063, %38 ], [ %.063, %26 ], [ %.063, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ 620610192, %591 ], [ -520046703, %589 ], [ -1464784021, %588 ], [ -1214859653, %587 ], [ 284860831, %586 ], [ 611602856, %585 ], [ -642960971, %583 ], [ -1145538574, %582 ], [ 772146928, %580 ], [ -1325437359, %578 ], [ 78062707, %577 ], [ 1707679207, %575 ], [ -1591622319, %574 ], [ -54645322, %573 ], [ 1730008680, %572 ], [ -136981007, %564 ], [ -1415732167, %563 ], [ 475240153, %562 ], [ 1336068229, %561 ], [ -283154382, %560 ], [ -1367054568, %558 ], [ -1949931029, %557 ], [ %556, %546 ], [ %545, %536 ], [ -513908345, %535 ], [ %534, %524 ], [ %523, %514 ], [ -639369703, %512 ], [ -1937204800, %511 ], [ 1546697906, %509 ], [ %508, %507 ], [ %506, %494 ], [ %493, %484 ], [ -1010234395, %478 ], [ -1010234395, %476 ], [ %475, %474 ], [ %473, %459 ], [ %458, %449 ], [ %448, %447 ], [ %446, %435 ], [ %434, %425 ], [ -639369703, %424 ], [ %423, %420 ], [ -1949931029, %419 ], [ %418, %409 ], [ %408, %399 ], [ -1085525835, %398 ], [ %397, %388 ], [ %387, %378 ], [ 1686709101, %377 ], [ %376, %367 ], [ %366, %357 ], [ -1367054568, %356 ], [ %355, %345 ], [ %344, %335 ], [ %334, %329 ], [ %328, %325 ], [ -1085525835, %324 ], [ -1883730064, %323 ], [ %322, %312 ], [ %311, %302 ], [ 232851153, %301 ], [ %300, %291 ], [ %290, %281 ], [ -372382072, %280 ], [ 885967610, %279 ], [ -126636307, %278 ], [ %277, %267 ], [ %266, %257 ], [ 1525094916, %256 ], [ %255, %246 ], [ %245, %236 ], [ -1381649881, %224 ], [ %223, %218 ], [ %217, %216 ], [ %215, %201 ], [ %200, %191 ], [ %190, %187 ], [ -126636307, %186 ], [ %185, %182 ], [ -372382072, %181 ], [ %180, %177 ], [ -1883730064, %176 ], [ -1981049068, %175 ], [ %174, %164 ], [ %163, %154 ], [ -907475949, %153 ], [ %152, %136 ], [ %135, %126 ], [ %125, %124 ], [ %123, %112 ], [ %111, %102 ], [ -1981049068, %101 ], [ 132449078, %100 ], [ -1144575333, %99 ], [ 779070088, %97 ], [ 587335126, %96 ], [ %95, %86 ], [ %85, %76 ], [ -450843796, %72 ], [ -450843796, %68 ], [ %67, %65 ], [ %64, %61 ], [ 779070088, %60 ], [ %59, %50 ], [ %49, %40 ], [ %39, %38 ], [ %37, %26 ], [ %25, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* @x.4, align 4
  %18 = load i32, i32* @y.5, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 -283154382, i32 356544630
  br label %.backedge

26:                                               ; preds = %15
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %.079, %27
  store i1 %28, i1* %6, align 1
  %29 = load i32, i32* @x.4, align 4
  %30 = load i32, i32* @y.5, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 2142251845, i32 356544630
  br label %.backedge

38:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %39 = select i1 %.0..0..0., i32 76204175, i32 -440581032
  br label %.backedge

40:                                               ; preds = %15
  %41 = load i32, i32* @x.4, align 4
  %42 = load i32, i32* @y.5, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1336068229, i32 797028057
  br label %.backedge

50:                                               ; preds = %15
  %51 = load i32, i32* @x.4, align 4
  %52 = load i32, i32* @y.5, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 1963605421, i32 797028057
  br label %.backedge

60:                                               ; preds = %15
  br label %.backedge

61:                                               ; preds = %15
  %62 = load i32, i32* %7, align 4
  %63 = icmp slt i32 %.077, %62
  %64 = select i1 %63, i32 -2125848713, i32 -637682048
  br label %.backedge

65:                                               ; preds = %15
  %66 = icmp eq i32 %.079, %.077
  %67 = select i1 %66, i32 -1326357884, i32 -442725755
  br label %.backedge

68:                                               ; preds = %15
  %69 = sext i32 %.079 to i64
  %70 = sext i32 %.077 to i64
  %71 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %69, i64 %70
  store i64 0, i64* %71, align 8
  br label %.backedge

72:                                               ; preds = %15
  %73 = sext i32 %.079 to i64
  %74 = sext i32 %.077 to i64
  %75 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %73, i64 %74
  store i64 100861008610086, i64* %75, align 8
  br label %.backedge

76:                                               ; preds = %15
  %77 = load i32, i32* @x.4, align 4
  %78 = load i32, i32* @y.5, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 475240153, i32 -224632756
  br label %.backedge

86:                                               ; preds = %15
  %87 = load i32, i32* @x.4, align 4
  %88 = load i32, i32* @y.5, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 -604669448, i32 -224632756
  br label %.backedge

96:                                               ; preds = %15
  br label %.backedge

97:                                               ; preds = %15
  %98 = add i32 %.077, 1
  br label %.backedge

99:                                               ; preds = %15
  br label %.backedge

100:                                              ; preds = %15
  %.neg85 = add i32 %.079, 1
  br label %.backedge

101:                                              ; preds = %15
  br label %.backedge

102:                                              ; preds = %15
  %103 = load i32, i32* @x.4, align 4
  %104 = load i32, i32* @y.5, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -1415732167, i32 2020227658
  br label %.backedge

112:                                              ; preds = %15
  %113 = load i32, i32* %8, align 4
  %114 = icmp slt i32 %.075, %113
  store i1 %114, i1* %5, align 1
  %115 = load i32, i32* @x.4, align 4
  %116 = load i32, i32* @y.5, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 1061667371, i32 2020227658
  br label %.backedge

124:                                              ; preds = %15
  %.0..0..0.58 = load volatile i1, i1* %5, align 1
  %125 = select i1 %.0..0..0.58, i32 -1639734381, i32 -933665848
  br label %.backedge

126:                                              ; preds = %15
  %127 = load i32, i32* @x.4, align 4
  %128 = load i32, i32* @y.5, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 -136981007, i32 -1545691524
  br label %.backedge

136:                                              ; preds = %15
  %137 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %9)
  %138 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %137, i64* nonnull dereferenceable(8) %10)
  %139 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %138, i64* nonnull dereferenceable(8) %11)
  %140 = load i64, i64* %11, align 8
  %141 = load i64, i64* %9, align 8
  %142 = load i64, i64* %10, align 8
  %143 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %141, i64 %142
  store i64 %140, i64* %143, align 8
  %144 = load i32, i32* @x.4, align 4
  %145 = load i32, i32* @y.5, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 -501029784, i32 -1545691524
  br label %.backedge

153:                                              ; preds = %15
  br label %.backedge

154:                                              ; preds = %15
  %155 = load i32, i32* @x.4, align 4
  %156 = load i32, i32* @y.5, align 4
  %157 = add i32 %155, -1
  %158 = mul i32 %157, %155
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %161, %160
  %163 = select i1 %162, i32 1730008680, i32 765532792
  br label %.backedge

164:                                              ; preds = %15
  %165 = add i32 %.075, 1
  %166 = load i32, i32* @x.4, align 4
  %167 = load i32, i32* @y.5, align 4
  %168 = add i32 %166, -1
  %169 = mul i32 %168, %166
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 1085238573, i32 765532792
  br label %.backedge

175:                                              ; preds = %15
  br label %.backedge

176:                                              ; preds = %15
  br label %.backedge

177:                                              ; preds = %15
  %178 = load i32, i32* %7, align 4
  %179 = icmp slt i32 %.073, %178
  %180 = select i1 %179, i32 2005639655, i32 1646040754
  br label %.backedge

181:                                              ; preds = %15
  br label %.backedge

182:                                              ; preds = %15
  %183 = load i32, i32* %7, align 4
  %184 = icmp slt i32 %.071, %183
  %185 = select i1 %184, i32 1070039376, i32 820675873
  br label %.backedge

186:                                              ; preds = %15
  br label %.backedge

187:                                              ; preds = %15
  %188 = load i32, i32* %7, align 4
  %189 = icmp slt i32 %.069, %188
  %190 = select i1 %189, i32 986297745, i32 -1674355656
  br label %.backedge

191:                                              ; preds = %15
  %192 = load i32, i32* @x.4, align 4
  %193 = load i32, i32* @y.5, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 -54645322, i32 -1251700221
  br label %.backedge

201:                                              ; preds = %15
  %202 = sext i32 %.071 to i64
  %203 = sext i32 %.073 to i64
  %204 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %202, i64 %203
  %205 = load i64, i64* %204, align 8
  %206 = icmp ne i64 %205, 100861008610086
  store i1 %206, i1* %4, align 1
  %207 = load i32, i32* @x.4, align 4
  %208 = load i32, i32* @y.5, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1123963347, i32 -1251700221
  br label %.backedge

216:                                              ; preds = %15
  %.0..0..0.59 = load volatile i1, i1* %4, align 1
  %217 = select i1 %.0..0..0.59, i32 125338770, i32 -1381649881
  br label %.backedge

218:                                              ; preds = %15
  %219 = sext i32 %.073 to i64
  %220 = sext i32 %.069 to i64
  %221 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %219, i64 %220
  %222 = load i64, i64* %221, align 8
  %.not = icmp eq i64 %222, 100861008610086
  %223 = select i1 %.not, i32 -1381649881, i32 -470017989
  br label %.backedge

224:                                              ; preds = %15
  %225 = sext i32 %.071 to i64
  %226 = sext i32 %.073 to i64
  %227 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %225, i64 %226
  %228 = load i64, i64* %227, align 8
  %229 = sext i32 %.069 to i64
  %230 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %226, i64 %229
  %231 = load i64, i64* %230, align 8
  %232 = add i64 %231, %228
  store i64 %232, i64* %12, align 8
  %233 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %225, i64 %229
  %234 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %12, i64* nonnull dereferenceable(8) %233)
  %235 = load i64, i64* %234, align 8
  store i64 %235, i64* %233, align 8
  br label %.backedge

236:                                              ; preds = %15
  %237 = load i32, i32* @x.4, align 4
  %238 = load i32, i32* @y.5, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -1591622319, i32 -2077773098
  br label %.backedge

246:                                              ; preds = %15
  %247 = load i32, i32* @x.4, align 4
  %248 = load i32, i32* @y.5, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 1995093007, i32 -2077773098
  br label %.backedge

256:                                              ; preds = %15
  br label %.backedge

257:                                              ; preds = %15
  %258 = load i32, i32* @x.4, align 4
  %259 = load i32, i32* @y.5, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 1707679207, i32 -1052295497
  br label %.backedge

267:                                              ; preds = %15
  %268 = add i32 %.069, 1
  %269 = load i32, i32* @x.4, align 4
  %270 = load i32, i32* @y.5, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 -45430284, i32 -1052295497
  br label %.backedge

278:                                              ; preds = %15
  br label %.backedge

279:                                              ; preds = %15
  br label %.backedge

280:                                              ; preds = %15
  %.neg84 = add i32 %.071, 1
  br label %.backedge

281:                                              ; preds = %15
  %282 = load i32, i32* @x.4, align 4
  %283 = load i32, i32* @y.5, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 78062707, i32 -1407264741
  br label %.backedge

291:                                              ; preds = %15
  %292 = load i32, i32* @x.4, align 4
  %293 = load i32, i32* @y.5, align 4
  %294 = add i32 %292, -1
  %295 = mul i32 %294, %292
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %298, %297
  %300 = select i1 %299, i32 -875686599, i32 -1407264741
  br label %.backedge

301:                                              ; preds = %15
  br label %.backedge

302:                                              ; preds = %15
  %303 = load i32, i32* @x.4, align 4
  %304 = load i32, i32* @y.5, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 -1325437359, i32 297200094
  br label %.backedge

312:                                              ; preds = %15
  %313 = add i32 %.073, 1
  %314 = load i32, i32* @x.4, align 4
  %315 = load i32, i32* @y.5, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 -1175388009, i32 297200094
  br label %.backedge

323:                                              ; preds = %15
  br label %.backedge

324:                                              ; preds = %15
  br label %.backedge

325:                                              ; preds = %15
  %326 = load i32, i32* %7, align 4
  %327 = icmp slt i32 %.067, %326
  %328 = select i1 %327, i32 440753752, i32 -1694165472
  br label %.backedge

329:                                              ; preds = %15
  %330 = sext i32 %.067 to i64
  %331 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %330, i64 %330
  %332 = load i64, i64* %331, align 8
  %333 = icmp slt i64 %332, 0
  %334 = select i1 %333, i32 -1079242663, i32 -1199802186
  br label %.backedge

335:                                              ; preds = %15
  %336 = load i32, i32* @x.4, align 4
  %337 = load i32, i32* @y.5, align 4
  %338 = add i32 %336, -1
  %339 = mul i32 %338, %336
  %340 = and i32 %339, 1
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %342, %341
  %344 = select i1 %343, i32 772146928, i32 -1862019127
  br label %.backedge

345:                                              ; preds = %15
  %346 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  %347 = load i32, i32* @x.4, align 4
  %348 = load i32, i32* @y.5, align 4
  %349 = add i32 %347, -1
  %350 = mul i32 %349, %347
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %353, %352
  %355 = select i1 %354, i32 569583298, i32 -1862019127
  br label %.backedge

356:                                              ; preds = %15
  br label %.backedge

357:                                              ; preds = %15
  %358 = load i32, i32* @x.4, align 4
  %359 = load i32, i32* @y.5, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 -1145538574, i32 -418220258
  br label %.backedge

367:                                              ; preds = %15
  %368 = load i32, i32* @x.4, align 4
  %369 = load i32, i32* @y.5, align 4
  %370 = add i32 %368, -1
  %371 = mul i32 %370, %368
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %374, %373
  %376 = select i1 %375, i32 -1676172957, i32 -418220258
  br label %.backedge

377:                                              ; preds = %15
  br label %.backedge

378:                                              ; preds = %15
  %379 = load i32, i32* @x.4, align 4
  %380 = load i32, i32* @y.5, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 -642960971, i32 -1413686817
  br label %.backedge

388:                                              ; preds = %15
  %.neg83 = add i32 %.067, 1
  %389 = load i32, i32* @x.4, align 4
  %390 = load i32, i32* @y.5, align 4
  %391 = add i32 %389, -1
  %392 = mul i32 %391, %389
  %393 = and i32 %392, 1
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %395, %394
  %397 = select i1 %396, i32 736198942, i32 -1413686817
  br label %.backedge

398:                                              ; preds = %15
  br label %.backedge

399:                                              ; preds = %15
  %400 = load i32, i32* @x.4, align 4
  %401 = load i32, i32* @y.5, align 4
  %402 = add i32 %400, -1
  %403 = mul i32 %402, %400
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %406, %405
  %408 = select i1 %407, i32 611602856, i32 -1700509774
  br label %.backedge

409:                                              ; preds = %15
  %410 = load i32, i32* @x.4, align 4
  %411 = load i32, i32* @y.5, align 4
  %412 = add i32 %410, -1
  %413 = mul i32 %412, %410
  %414 = and i32 %413, 1
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %416, %415
  %418 = select i1 %417, i32 1863982766, i32 -1700509774
  br label %.backedge

419:                                              ; preds = %15
  br label %.backedge

420:                                              ; preds = %15
  %421 = load i32, i32* %7, align 4
  %422 = icmp slt i32 %.065, %421
  %423 = select i1 %422, i32 -1799972404, i32 -1851264544
  br label %.backedge

424:                                              ; preds = %15
  br label %.backedge

425:                                              ; preds = %15
  %426 = load i32, i32* @x.4, align 4
  %427 = load i32, i32* @y.5, align 4
  %428 = add i32 %426, -1
  %429 = mul i32 %428, %426
  %430 = and i32 %429, 1
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %432, %431
  %434 = select i1 %433, i32 284860831, i32 106871566
  br label %.backedge

435:                                              ; preds = %15
  %436 = load i32, i32* %7, align 4
  %437 = icmp slt i32 %.063, %436
  store i1 %437, i1* %3, align 1
  %438 = load i32, i32* @x.4, align 4
  %439 = load i32, i32* @y.5, align 4
  %440 = add i32 %438, -1
  %441 = mul i32 %440, %438
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %444, %443
  %446 = select i1 %445, i32 -585310790, i32 106871566
  br label %.backedge

447:                                              ; preds = %15
  %.0..0..0.60 = load volatile i1, i1* %3, align 1
  %448 = select i1 %.0..0..0.60, i32 -1287176086, i32 1459019254
  br label %.backedge

449:                                              ; preds = %15
  %450 = load i32, i32* @x.4, align 4
  %451 = load i32, i32* @y.5, align 4
  %452 = add i32 %450, -1
  %453 = mul i32 %452, %450
  %454 = and i32 %453, 1
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %456, %455
  %458 = select i1 %457, i32 -1214859653, i32 -754013166
  br label %.backedge

459:                                              ; preds = %15
  %460 = sext i32 %.065 to i64
  %461 = sext i32 %.063 to i64
  %462 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %460, i64 %461
  %463 = load i64, i64* %462, align 8
  %464 = icmp sgt i64 %463, 100861008610085
  store i1 %464, i1* %2, align 1
  %465 = load i32, i32* @x.4, align 4
  %466 = load i32, i32* @y.5, align 4
  %467 = add i32 %465, -1
  %468 = mul i32 %467, %465
  %469 = and i32 %468, 1
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %471, %470
  %473 = select i1 %472, i32 1115099779, i32 -754013166
  br label %.backedge

474:                                              ; preds = %15
  %.0..0..0.61 = load volatile i1, i1* %2, align 1
  %475 = select i1 %.0..0..0.61, i32 244574928, i32 -1811443877
  br label %.backedge

476:                                              ; preds = %15
  %477 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

478:                                              ; preds = %15
  %479 = sext i32 %.065 to i64
  %480 = sext i32 %.063 to i64
  %481 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %479, i64 %480
  %482 = load i64, i64* %481, align 8
  %483 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %482)
  br label %.backedge

484:                                              ; preds = %15
  %485 = load i32, i32* @x.4, align 4
  %486 = load i32, i32* @y.5, align 4
  %487 = add i32 %485, -1
  %488 = mul i32 %487, %485
  %489 = and i32 %488, 1
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %491, %490
  %493 = select i1 %492, i32 -1464784021, i32 80551888
  br label %.backedge

494:                                              ; preds = %15
  %495 = load i32, i32* %7, align 4
  %496 = add i32 %495, -1
  %497 = icmp slt i32 %.063, %496
  store i1 %497, i1* %1, align 1
  %498 = load i32, i32* @x.4, align 4
  %499 = load i32, i32* @y.5, align 4
  %500 = add i32 %498, -1
  %501 = mul i32 %500, %498
  %502 = and i32 %501, 1
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %499, 10
  %505 = or i1 %504, %503
  %506 = select i1 %505, i32 1278856170, i32 80551888
  br label %.backedge

507:                                              ; preds = %15
  %.0..0..0.62 = load volatile i1, i1* %1, align 1
  %508 = select i1 %.0..0..0.62, i32 2114119501, i32 1546697906
  br label %.backedge

509:                                              ; preds = %15
  %510 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

511:                                              ; preds = %15
  br label %.backedge

512:                                              ; preds = %15
  %513 = add i32 %.063, 1
  br label %.backedge

514:                                              ; preds = %15
  %515 = load i32, i32* @x.4, align 4
  %516 = load i32, i32* @y.5, align 4
  %517 = add i32 %515, -1
  %518 = mul i32 %517, %515
  %519 = and i32 %518, 1
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %521, %520
  %523 = select i1 %522, i32 -520046703, i32 621401106
  br label %.backedge

524:                                              ; preds = %15
  %525 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %526 = load i32, i32* @x.4, align 4
  %527 = load i32, i32* @y.5, align 4
  %528 = add i32 %526, -1
  %529 = mul i32 %528, %526
  %530 = and i32 %529, 1
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %527, 10
  %533 = or i1 %532, %531
  %534 = select i1 %533, i32 1369795376, i32 621401106
  br label %.backedge

535:                                              ; preds = %15
  br label %.backedge

536:                                              ; preds = %15
  %537 = load i32, i32* @x.4, align 4
  %538 = load i32, i32* @y.5, align 4
  %539 = add i32 %537, -1
  %540 = mul i32 %539, %537
  %541 = and i32 %540, 1
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %538, 10
  %544 = or i1 %543, %542
  %545 = select i1 %544, i32 620610192, i32 -10132623
  br label %.backedge

546:                                              ; preds = %15
  %547 = add i32 %.065, 1
  %548 = load i32, i32* @x.4, align 4
  %549 = load i32, i32* @y.5, align 4
  %550 = add i32 %548, -1
  %551 = mul i32 %550, %548
  %552 = and i32 %551, 1
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %554, %553
  %556 = select i1 %555, i32 730663651, i32 -10132623
  br label %.backedge

557:                                              ; preds = %15
  br label %.backedge

558:                                              ; preds = %15
  br label %.backedge

559:                                              ; preds = %15
  ret i32 0

560:                                              ; preds = %15
  br label %.backedge

561:                                              ; preds = %15
  br label %.backedge

562:                                              ; preds = %15
  br label %.backedge

563:                                              ; preds = %15
  br label %.backedge

564:                                              ; preds = %15
  %565 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %9)
  %566 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %565, i64* nonnull dereferenceable(8) %10)
  %567 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %566, i64* nonnull dereferenceable(8) %11)
  %568 = load i64, i64* %11, align 8
  %569 = load i64, i64* %9, align 8
  %570 = load i64, i64* %10, align 8
  %571 = getelementptr inbounds [110 x [110 x i64]], [110 x [110 x i64]]* @dp, i64 0, i64 %569, i64 %570
  store i64 %568, i64* %571, align 8
  br label %.backedge

572:                                              ; preds = %15
  %.neg = add i32 %.075, 1
  br label %.backedge

573:                                              ; preds = %15
  br label %.backedge

574:                                              ; preds = %15
  br label %.backedge

575:                                              ; preds = %15
  %576 = add i32 %.069, 1
  br label %.backedge

577:                                              ; preds = %15
  br label %.backedge

578:                                              ; preds = %15
  %579 = add i32 %.073, 1
  br label %.backedge

580:                                              ; preds = %15
  %581 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

582:                                              ; preds = %15
  br label %.backedge

583:                                              ; preds = %15
  %584 = add i32 %.067, 1
  br label %.backedge

585:                                              ; preds = %15
  br label %.backedge

586:                                              ; preds = %15
  br label %.backedge

587:                                              ; preds = %15
  br label %.backedge

588:                                              ; preds = %15
  br label %.backedge

589:                                              ; preds = %15
  %590 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

591:                                              ; preds = %15
  %592 = add i32 %.065, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i64**, align 8
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.6, align 4
  %10 = load i32, i32* @y.7, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ 830163161, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %16

16:                                               ; preds = %.outer, %16
  switch i32 %.0.ph, label %16 [
    i32 830163161, label %17
    i32 79545149, label %20
    i32 1228197797, label %38
    i32 353768487, label %40
    i32 -2026210025, label %42
    i32 -187095190, label %44
    i32 -1587335414, label %.outer.backedge
  ]

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 79545149, i32 -1587335414
  br label %.outer.backedge

20:                                               ; preds = %16
  %21 = alloca i64*, align 8
  store i64** %21, i64*** %6, align 8
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %5, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %4, align 8
  %.0..0..0.5 = load volatile i64**, i64*** %5, align 8
  store i64* %0, i64** %.0..0..0.5, align 8
  %.0..0..0.8 = load volatile i64**, i64*** %4, align 8
  store i64* %1, i64** %.0..0..0.8, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %4, align 8
  %24 = load i64*, i64** %.0..0..0.9, align 8
  %25 = load i64, i64* %24, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %5, align 8
  %26 = load i64*, i64** %.0..0..0.6, align 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.6, align 4
  %30 = load i32, i32* @y.7, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 1228197797, i32 -1587335414
  br label %.outer.backedge

38:                                               ; preds = %16
  %.0..0..0.11 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.11, i32 353768487, i32 -2026210025
  br label %.outer.backedge

40:                                               ; preds = %16
  %.0..0..0.10 = load volatile i64**, i64*** %4, align 8
  %41 = load i64*, i64** %.0..0..0.10, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %6, align 8
  store i64* %41, i64** %.0..0..0.2, align 8
  br label %.outer.backedge

42:                                               ; preds = %16
  %.0..0..0.7 = load volatile i64**, i64*** %5, align 8
  %43 = load i64*, i64** %.0..0..0.7, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %6, align 8
  store i64* %43, i64** %.0..0..0.3, align 8
  br label %.outer.backedge

44:                                               ; preds = %16
  %.0..0..0.4 = load volatile i64**, i64*** %6, align 8
  %45 = load i64*, i64** %.0..0..0.4, align 8
  ret i64* %45

.outer.backedge:                                  ; preds = %16, %42, %40, %38, %20, %17
  %.0.ph.be = phi i32 [ %19, %17 ], [ %37, %20 ], [ %39, %38 ], [ -187095190, %40 ], [ -187095190, %42 ], [ 79545149, %16 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s541281485.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
