; ModuleID = 'build_ollvm/programs/p02363/s838300691.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s838300691.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@d = global [100 x [100 x i64]] zeroinitializer, align 16
@V = global i64 0, align 8
@E = global i64 0, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s838300691.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -287117583, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -287117583, label %11
    i32 -450271651, label %14
    i32 1275045248, label %25
    i32 2081976318, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -450271651, i32 2081976318
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 1275045248, i32 2081976318
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -450271651, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define void @_Z13shortest_pathv() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i64, align 8
  %4 = load i64, i64* @V, align 8
  br label %5

5:                                                ; preds = %.backedge, %0
  %.037 = phi i64 [ 0, %0 ], [ %.037.be, %.backedge ]
  %.035 = phi i64 [ undef, %0 ], [ %.035.be, %.backedge ]
  %.033 = phi i64 [ undef, %0 ], [ %.033.be, %.backedge ]
  %.031 = phi i64 [ undef, %0 ], [ %.031.be, %.backedge ]
  %.029 = phi i64 [ undef, %0 ], [ %.029.be, %.backedge ]
  %.0 = phi i32 [ 959096166, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 959096166, label %6
    i32 -1260926669, label %9
    i32 -1357465079, label %11
    i32 1565067399, label %21
    i32 -1011559125, label %32
    i32 -1052929482, label %34
    i32 129596113, label %36
    i32 315470050, label %46
    i32 -1537601645, label %57
    i32 -1574949294, label %59
    i32 83331025, label %63
    i32 277067956, label %67
    i32 1541350237, label %76
    i32 1826815441, label %86
    i32 -607190505, label %96
    i32 826861704, label %97
    i32 638146562, label %107
    i32 1659577382, label %117
    i32 -1419002760, label %118
    i32 728835076, label %128
    i32 -853972336, label %138
    i32 -87725318, label %139
    i32 470152351, label %141
    i32 -1366615536, label %142
    i32 1426071921, label %152
    i32 -1916059288, label %162
    i32 -2035383448, label %163
    i32 -844960239, label %164
    i32 -1547516673, label %165
    i32 982375633, label %166
    i32 51670805, label %167
    i32 -1766004576, label %168
    i32 -135192718, label %169
  ]

.backedge:                                        ; preds = %5, %169, %168, %167, %166, %165, %164, %162, %152, %142, %141, %139, %138, %128, %118, %117, %107, %97, %96, %86, %76, %67, %63, %59, %57, %46, %36, %34, %32, %21, %11, %9, %6
  %.037.be = phi i64 [ %.037, %5 ], [ %170, %169 ], [ %.037, %168 ], [ %.037, %167 ], [ %.037, %166 ], [ %.037, %165 ], [ %.037, %164 ], [ %.037, %162 ], [ %.neg39, %152 ], [ %.037, %142 ], [ %.037, %141 ], [ %.037, %139 ], [ %.037, %138 ], [ %.037, %128 ], [ %.037, %118 ], [ %.037, %117 ], [ %.037, %107 ], [ %.037, %97 ], [ %.037, %96 ], [ %.037, %86 ], [ %.037, %76 ], [ %.037, %67 ], [ %.037, %63 ], [ %.037, %59 ], [ %.037, %57 ], [ %.037, %46 ], [ %.037, %36 ], [ %.037, %34 ], [ %.037, %32 ], [ %.037, %21 ], [ %.037, %11 ], [ %.037, %9 ], [ %.037, %6 ]
  %.035.be = phi i64 [ %.035, %5 ], [ %.035, %169 ], [ %.035, %168 ], [ %.035, %167 ], [ %.035, %166 ], [ %.035, %165 ], [ %.035, %164 ], [ %.035, %162 ], [ %.035, %152 ], [ %.035, %142 ], [ %.035, %141 ], [ %140, %139 ], [ %.035, %138 ], [ %.035, %128 ], [ %.035, %118 ], [ %.035, %117 ], [ %.035, %107 ], [ %.035, %97 ], [ %.035, %96 ], [ %.035, %86 ], [ %.035, %76 ], [ %.035, %67 ], [ %.035, %63 ], [ %.035, %59 ], [ %.035, %57 ], [ %.035, %46 ], [ %.035, %36 ], [ %.035, %34 ], [ %.035, %32 ], [ %.035, %21 ], [ %.035, %11 ], [ 0, %9 ], [ %.035, %6 ]
  %.033.be = phi i64 [ %.033, %5 ], [ %.033, %169 ], [ %.033, %168 ], [ %.033, %167 ], [ %.033, %166 ], [ %.033, %165 ], [ %.033, %164 ], [ %.033, %162 ], [ %.033, %152 ], [ %.033, %142 ], [ %.033, %141 ], [ %.033, %139 ], [ %.033, %138 ], [ %.033, %128 ], [ %.033, %118 ], [ %.033, %117 ], [ %.033, %107 ], [ %.033, %97 ], [ %.033, %96 ], [ %.033, %86 ], [ %.033, %76 ], [ %.033, %67 ], [ %.033, %63 ], [ %.033, %59 ], [ %.033, %57 ], [ %.033, %46 ], [ %.033, %36 ], [ %.033, %34 ], [ %.033, %32 ], [ %.033, %21 ], [ %.033, %11 ], [ %10, %9 ], [ %.033, %6 ]
  %.031.be = phi i64 [ %.031, %5 ], [ %.031, %169 ], [ %.031, %168 ], [ %.neg, %167 ], [ %.031, %166 ], [ %.031, %165 ], [ %.031, %164 ], [ %.031, %162 ], [ %.031, %152 ], [ %.031, %142 ], [ %.031, %141 ], [ %.031, %139 ], [ %.031, %138 ], [ %.031, %128 ], [ %.031, %118 ], [ %.031, %117 ], [ %.neg40, %107 ], [ %.031, %97 ], [ %.031, %96 ], [ %.031, %86 ], [ %.031, %76 ], [ %.031, %67 ], [ %.031, %63 ], [ %.031, %59 ], [ %.031, %57 ], [ %.031, %46 ], [ %.031, %36 ], [ 0, %34 ], [ %.031, %32 ], [ %.031, %21 ], [ %.031, %11 ], [ %.031, %9 ], [ %.031, %6 ]
  %.029.be = phi i64 [ %.029, %5 ], [ %.029, %169 ], [ %.029, %168 ], [ %.029, %167 ], [ %.029, %166 ], [ %.029, %165 ], [ %.029, %164 ], [ %.029, %162 ], [ %.029, %152 ], [ %.029, %142 ], [ %.029, %141 ], [ %.029, %139 ], [ %.029, %138 ], [ %.029, %128 ], [ %.029, %118 ], [ %.029, %117 ], [ %.029, %107 ], [ %.029, %97 ], [ %.029, %96 ], [ %.029, %86 ], [ %.029, %76 ], [ %.029, %67 ], [ %.029, %63 ], [ %.029, %59 ], [ %.029, %57 ], [ %.029, %46 ], [ %.029, %36 ], [ %35, %34 ], [ %.029, %32 ], [ %.029, %21 ], [ %.029, %11 ], [ %.029, %9 ], [ %.029, %6 ]
  %.0.be = phi i32 [ %.0, %5 ], [ 1426071921, %169 ], [ 728835076, %168 ], [ 638146562, %167 ], [ 1826815441, %166 ], [ 315470050, %165 ], [ 1565067399, %164 ], [ 959096166, %162 ], [ %161, %152 ], [ %151, %142 ], [ -1366615536, %141 ], [ -1357465079, %139 ], [ -87725318, %138 ], [ %137, %128 ], [ %127, %118 ], [ 129596113, %117 ], [ %116, %107 ], [ %106, %97 ], [ 826861704, %96 ], [ %95, %86 ], [ %85, %76 ], [ 1541350237, %67 ], [ %66, %63 ], [ %62, %59 ], [ %58, %57 ], [ %56, %46 ], [ %45, %36 ], [ 129596113, %34 ], [ %33, %32 ], [ %31, %21 ], [ %20, %11 ], [ -1357465079, %9 ], [ %8, %6 ]
  br label %5

6:                                                ; preds = %5
  %7 = icmp slt i64 %.037, %4
  %8 = select i1 %7, i32 -1260926669, i32 -2035383448
  br label %.backedge

9:                                                ; preds = %5
  %10 = load i64, i64* @V, align 8
  br label %.backedge

11:                                               ; preds = %5
  %12 = load i32, i32* @x.5, align 4
  %13 = load i32, i32* @y.6, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 1565067399, i32 -844960239
  br label %.backedge

21:                                               ; preds = %5
  %22 = icmp slt i64 %.035, %.033
  store i1 %22, i1* %2, align 1
  %23 = load i32, i32* @x.5, align 4
  %24 = load i32, i32* @y.6, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 -1011559125, i32 -844960239
  br label %.backedge

32:                                               ; preds = %5
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %33 = select i1 %.0..0..0., i32 -1052929482, i32 470152351
  br label %.backedge

34:                                               ; preds = %5
  %35 = load i64, i64* @V, align 8
  br label %.backedge

36:                                               ; preds = %5
  %37 = load i32, i32* @x.5, align 4
  %38 = load i32, i32* @y.6, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 315470050, i32 -1547516673
  br label %.backedge

46:                                               ; preds = %5
  %47 = icmp slt i64 %.031, %.029
  store i1 %47, i1* %1, align 1
  %48 = load i32, i32* @x.5, align 4
  %49 = load i32, i32* @y.6, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 -1537601645, i32 -1547516673
  br label %.backedge

57:                                               ; preds = %5
  %.0..0..0.28 = load volatile i1, i1* %1, align 1
  %58 = select i1 %.0..0..0.28, i32 -1574949294, i32 -1419002760
  br label %.backedge

59:                                               ; preds = %5
  %60 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %.035, i64 %.037
  %61 = load i64, i64* %60, align 8
  %.not41 = icmp eq i64 %61, 4557430888798830399
  %62 = select i1 %.not41, i32 1541350237, i32 83331025
  br label %.backedge

63:                                               ; preds = %5
  %64 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %.037, i64 %.031
  %65 = load i64, i64* %64, align 8
  %.not = icmp eq i64 %65, 4557430888798830399
  %66 = select i1 %.not, i32 1541350237, i32 277067956
  br label %.backedge

67:                                               ; preds = %5
  %68 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %.035, i64 %.031
  %69 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %.035, i64 %.037
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %.037, i64 %.031
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %70
  store i64 %73, i64* %3, align 8
  %74 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %68, i64* nonnull dereferenceable(8) %3)
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %68, align 8
  br label %.backedge

76:                                               ; preds = %5
  %77 = load i32, i32* @x.5, align 4
  %78 = load i32, i32* @y.6, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 1826815441, i32 982375633
  br label %.backedge

86:                                               ; preds = %5
  %87 = load i32, i32* @x.5, align 4
  %88 = load i32, i32* @y.6, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 -607190505, i32 982375633
  br label %.backedge

96:                                               ; preds = %5
  br label %.backedge

97:                                               ; preds = %5
  %98 = load i32, i32* @x.5, align 4
  %99 = load i32, i32* @y.6, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 638146562, i32 51670805
  br label %.backedge

107:                                              ; preds = %5
  %.neg40 = add i64 %.031, 1
  %108 = load i32, i32* @x.5, align 4
  %109 = load i32, i32* @y.6, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 1659577382, i32 51670805
  br label %.backedge

117:                                              ; preds = %5
  br label %.backedge

118:                                              ; preds = %5
  %119 = load i32, i32* @x.5, align 4
  %120 = load i32, i32* @y.6, align 4
  %121 = add i32 %119, -1
  %122 = mul i32 %121, %119
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %125, %124
  %127 = select i1 %126, i32 728835076, i32 -1766004576
  br label %.backedge

128:                                              ; preds = %5
  %129 = load i32, i32* @x.5, align 4
  %130 = load i32, i32* @y.6, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 -853972336, i32 -1766004576
  br label %.backedge

138:                                              ; preds = %5
  br label %.backedge

139:                                              ; preds = %5
  %140 = add i64 %.035, 1
  br label %.backedge

141:                                              ; preds = %5
  br label %.backedge

142:                                              ; preds = %5
  %143 = load i32, i32* @x.5, align 4
  %144 = load i32, i32* @y.6, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 1426071921, i32 -135192718
  br label %.backedge

152:                                              ; preds = %5
  %.neg39 = add i64 %.037, 1
  %153 = load i32, i32* @x.5, align 4
  %154 = load i32, i32* @y.6, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 -1916059288, i32 -135192718
  br label %.backedge

162:                                              ; preds = %5
  br label %.backedge

163:                                              ; preds = %5
  ret void

164:                                              ; preds = %5
  br label %.backedge

165:                                              ; preds = %5
  br label %.backedge

166:                                              ; preds = %5
  br label %.backedge

167:                                              ; preds = %5
  %.neg = add i64 %.031, 1
  br label %.backedge

168:                                              ; preds = %5
  br label %.backedge

169:                                              ; preds = %5
  %170 = add i64 %.037, 1
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.7, align 4
  %8 = load i32, i32* @y.8, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1020034799, i32 1353031662
  %16 = select i1 %14, i32 1815031818, i32 1353031662
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1386410354, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 1386410354, label %18
    i32 -1605492891, label %.outer.backedge
    i32 -326066009, label %.outer10.backedge
    i32 1815031818, label %21
    i32 1020034799, label %22
    i32 89383993, label %23
    i32 1353031662, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -1605492891, i32 -326066009
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer.backedge

22:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %22, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 89383993, %22 ], [ %16, %17 ]
  br label %.outer10

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %21
  %.08.ph.be = phi i64* [ %0, %21 ], [ %0, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ %15, %21 ], [ 1815031818, %24 ], [ 89383993, %17 ]
  br label %.outer
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %9 = getelementptr i8, i8* %8, i64 -24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %11
  %13 = bitcast i8* %12 to %"class.std::basic_ios"*
  %14 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %13, %"class.std::basic_ostream"* null)
  %15 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %16 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) @V)
  %17 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %16, i64* nonnull dereferenceable(8) @E)
  %18 = load i64, i64* @V, align 8
  br label %19

19:                                               ; preds = %.backedge, %0
  %.064 = phi i64 [ 0, %0 ], [ %.064.be, %.backedge ]
  %.060 = phi i64 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i64 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i64 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i64 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i64 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i64 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i64 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i64 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i64 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.042 = phi i64 [ undef, %0 ], [ %.042.be, %.backedge ]
  %.0 = phi i32 [ 389837812, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 389837812, label %20
    i32 -1329672509, label %23
    i32 1906585832, label %33
    i32 -690391096, label %44
    i32 -1158133758, label %45
    i32 -307434056, label %48
    i32 -842793712, label %58
    i32 -444588567, label %69
    i32 -897608278, label %71
    i32 -1001292094, label %73
    i32 1566587064, label %83
    i32 -1031295643, label %93
    i32 -52143825, label %94
    i32 -1635892145, label %104
    i32 -308693790, label %115
    i32 -1227888075, label %116
    i32 1773773914, label %117
    i32 -703854577, label %119
    i32 969864806, label %121
    i32 1736281553, label %124
    i32 1906991561, label %132
    i32 559343670, label %134
    i32 1678421370, label %136
    i32 93907760, label %139
    i32 1335760026, label %144
    i32 296122448, label %147
    i32 -174194056, label %157
    i32 -64268524, label %167
    i32 864958169, label %168
    i32 168685607, label %170
    i32 -1919661627, label %180
    i32 -1925836151, label %191
    i32 -8479111, label %192
    i32 -1575708903, label %195
    i32 1059607188, label %205
    i32 -1142182124, label %216
    i32 522140294, label %217
    i32 -143782074, label %227
    i32 2100478365, label %238
    i32 64112955, label %240
    i32 2025836817, label %250
    i32 419168997, label %261
    i32 734849809, label %263
    i32 -2005497001, label %264
    i32 1967102235, label %270
    i32 -977932642, label %280
    i32 -426090991, label %290
    i32 2015122060, label %291
    i32 1804039260, label %301
    i32 -154424074, label %311
    i32 1662459608, label %312
    i32 -1893345704, label %314
    i32 -1794887190, label %315
    i32 -1812001639, label %325
    i32 366520759, label %335
    i32 -1419588154, label %336
    i32 1687746115, label %338
    i32 -1594222556, label %339
    i32 -111935042, label %340
    i32 -1938177967, label %342
    i32 -920313820, label %343
    i32 1626977358, label %345
    i32 607836635, label %347
    i32 -114267726, label %348
    i32 -827554524, label %349
    i32 1094653425, label %351
    i32 -201187095, label %352
  ]

.backedge:                                        ; preds = %19, %352, %351, %349, %348, %347, %345, %343, %342, %340, %339, %338, %336, %325, %315, %314, %312, %311, %301, %291, %290, %280, %270, %264, %263, %261, %250, %240, %238, %227, %217, %216, %205, %195, %192, %191, %180, %170, %168, %167, %157, %147, %144, %139, %136, %134, %132, %124, %121, %119, %117, %116, %115, %104, %94, %93, %83, %73, %71, %69, %58, %48, %45, %44, %33, %23, %20
  %.064.be = phi i64 [ %.064, %19 ], [ %.064, %352 ], [ %.064, %351 ], [ %.064, %349 ], [ %.064, %348 ], [ %.064, %347 ], [ %.064, %345 ], [ %.064, %343 ], [ %.064, %342 ], [ %.064, %340 ], [ %.064, %339 ], [ %.064, %338 ], [ %.064, %336 ], [ %.064, %325 ], [ %.064, %315 ], [ %.064, %314 ], [ %.064, %312 ], [ %.064, %311 ], [ %.064, %301 ], [ %.064, %291 ], [ %.064, %290 ], [ %.064, %280 ], [ %.064, %270 ], [ %.064, %264 ], [ %.064, %263 ], [ %.064, %261 ], [ %.064, %250 ], [ %.064, %240 ], [ %.064, %238 ], [ %.064, %227 ], [ %.064, %217 ], [ %.064, %216 ], [ %.064, %205 ], [ %.064, %195 ], [ %.064, %192 ], [ %.064, %191 ], [ %.064, %180 ], [ %.064, %170 ], [ %.064, %168 ], [ %.064, %167 ], [ %.064, %157 ], [ %.064, %147 ], [ %.064, %144 ], [ %.064, %139 ], [ %.064, %136 ], [ %.064, %134 ], [ %.064, %132 ], [ %.064, %124 ], [ %.064, %121 ], [ %.064, %119 ], [ %118, %117 ], [ %.064, %116 ], [ %.064, %115 ], [ %.064, %104 ], [ %.064, %94 ], [ %.064, %93 ], [ %.064, %83 ], [ %.064, %73 ], [ %.064, %71 ], [ %.064, %69 ], [ %.064, %58 ], [ %.064, %48 ], [ %.064, %45 ], [ %.064, %44 ], [ %.064, %33 ], [ %.064, %23 ], [ %.064, %20 ]
  %.060.be = phi i64 [ %.060, %19 ], [ %.060, %352 ], [ %.060, %351 ], [ %.060, %349 ], [ %.060, %348 ], [ %.060, %347 ], [ %.060, %345 ], [ %.060, %343 ], [ %.060, %342 ], [ %341, %340 ], [ %.060, %339 ], [ %.060, %338 ], [ 0, %336 ], [ %.060, %325 ], [ %.060, %315 ], [ %.060, %314 ], [ %.060, %312 ], [ %.060, %311 ], [ %.060, %301 ], [ %.060, %291 ], [ %.060, %290 ], [ %.060, %280 ], [ %.060, %270 ], [ %.060, %264 ], [ %.060, %263 ], [ %.060, %261 ], [ %.060, %250 ], [ %.060, %240 ], [ %.060, %238 ], [ %.060, %227 ], [ %.060, %217 ], [ %.060, %216 ], [ %.060, %205 ], [ %.060, %195 ], [ %.060, %192 ], [ %.060, %191 ], [ %.060, %180 ], [ %.060, %170 ], [ %.060, %168 ], [ %.060, %167 ], [ %.060, %157 ], [ %.060, %147 ], [ %.060, %144 ], [ %.060, %139 ], [ %.060, %136 ], [ %.060, %134 ], [ %.060, %132 ], [ %.060, %124 ], [ %.060, %121 ], [ %.060, %119 ], [ %.060, %117 ], [ %.060, %116 ], [ %.060, %115 ], [ %105, %104 ], [ %.060, %94 ], [ %.060, %93 ], [ %.060, %83 ], [ %.060, %73 ], [ %.060, %71 ], [ %.060, %69 ], [ %.060, %58 ], [ %.060, %48 ], [ %.060, %45 ], [ %.060, %44 ], [ 0, %33 ], [ %.060, %23 ], [ %.060, %20 ]
  %.058.be = phi i64 [ %.058, %19 ], [ %.058, %352 ], [ %.058, %351 ], [ %.058, %349 ], [ %.058, %348 ], [ %.058, %347 ], [ %.058, %345 ], [ %.058, %343 ], [ %.058, %342 ], [ %.058, %340 ], [ %.058, %339 ], [ %.058, %338 ], [ %337, %336 ], [ %.058, %325 ], [ %.058, %315 ], [ %.058, %314 ], [ %.058, %312 ], [ %.058, %311 ], [ %.058, %301 ], [ %.058, %291 ], [ %.058, %290 ], [ %.058, %280 ], [ %.058, %270 ], [ %.058, %264 ], [ %.058, %263 ], [ %.058, %261 ], [ %.058, %250 ], [ %.058, %240 ], [ %.058, %238 ], [ %.058, %227 ], [ %.058, %217 ], [ %.058, %216 ], [ %.058, %205 ], [ %.058, %195 ], [ %.058, %192 ], [ %.058, %191 ], [ %.058, %180 ], [ %.058, %170 ], [ %.058, %168 ], [ %.058, %167 ], [ %.058, %157 ], [ %.058, %147 ], [ %.058, %144 ], [ %.058, %139 ], [ %.058, %136 ], [ %.058, %134 ], [ %.058, %132 ], [ %.058, %124 ], [ %.058, %121 ], [ %.058, %119 ], [ %.058, %117 ], [ %.058, %116 ], [ %.058, %115 ], [ %.058, %104 ], [ %.058, %94 ], [ %.058, %93 ], [ %.058, %83 ], [ %.058, %73 ], [ %.058, %71 ], [ %.058, %69 ], [ %.058, %58 ], [ %.058, %48 ], [ %.058, %45 ], [ %.058, %44 ], [ %34, %33 ], [ %.058, %23 ], [ %.058, %20 ]
  %.056.be = phi i64 [ %.056, %19 ], [ %.056, %352 ], [ %.056, %351 ], [ %.056, %349 ], [ %.056, %348 ], [ %.056, %347 ], [ %.056, %345 ], [ %.056, %343 ], [ %.056, %342 ], [ %.056, %340 ], [ %.056, %339 ], [ %.056, %338 ], [ %.056, %336 ], [ %.056, %325 ], [ %.056, %315 ], [ %.056, %314 ], [ %.056, %312 ], [ %.056, %311 ], [ %.056, %301 ], [ %.056, %291 ], [ %.056, %290 ], [ %.056, %280 ], [ %.056, %270 ], [ %.056, %264 ], [ %.056, %263 ], [ %.056, %261 ], [ %.056, %250 ], [ %.056, %240 ], [ %.056, %238 ], [ %.056, %227 ], [ %.056, %217 ], [ %.056, %216 ], [ %.056, %205 ], [ %.056, %195 ], [ %.056, %192 ], [ %.056, %191 ], [ %.056, %180 ], [ %.056, %170 ], [ %.056, %168 ], [ %.056, %167 ], [ %.056, %157 ], [ %.056, %147 ], [ %.056, %144 ], [ %.056, %139 ], [ %.056, %136 ], [ %.056, %134 ], [ %133, %132 ], [ %.056, %124 ], [ %.056, %121 ], [ 0, %119 ], [ %.056, %117 ], [ %.056, %116 ], [ %.056, %115 ], [ %.056, %104 ], [ %.056, %94 ], [ %.056, %93 ], [ %.056, %83 ], [ %.056, %73 ], [ %.056, %71 ], [ %.056, %69 ], [ %.056, %58 ], [ %.056, %48 ], [ %.056, %45 ], [ %.056, %44 ], [ %.056, %33 ], [ %.056, %23 ], [ %.056, %20 ]
  %.054.be = phi i64 [ %.054, %19 ], [ %.054, %352 ], [ %.054, %351 ], [ %.054, %349 ], [ %.054, %348 ], [ %.054, %347 ], [ %.054, %345 ], [ %.054, %343 ], [ %.054, %342 ], [ %.054, %340 ], [ %.054, %339 ], [ %.054, %338 ], [ %.054, %336 ], [ %.054, %325 ], [ %.054, %315 ], [ %.054, %314 ], [ %.054, %312 ], [ %.054, %311 ], [ %.054, %301 ], [ %.054, %291 ], [ %.054, %290 ], [ %.054, %280 ], [ %.054, %270 ], [ %.054, %264 ], [ %.054, %263 ], [ %.054, %261 ], [ %.054, %250 ], [ %.054, %240 ], [ %.054, %238 ], [ %.054, %227 ], [ %.054, %217 ], [ %.054, %216 ], [ %.054, %205 ], [ %.054, %195 ], [ %.054, %192 ], [ %.054, %191 ], [ %.054, %180 ], [ %.054, %170 ], [ %.054, %168 ], [ %.054, %167 ], [ %.054, %157 ], [ %.054, %147 ], [ %.054, %144 ], [ %.054, %139 ], [ %.054, %136 ], [ %.054, %134 ], [ %.054, %132 ], [ %.054, %124 ], [ %.054, %121 ], [ %120, %119 ], [ %.054, %117 ], [ %.054, %116 ], [ %.054, %115 ], [ %.054, %104 ], [ %.054, %94 ], [ %.054, %93 ], [ %.054, %83 ], [ %.054, %73 ], [ %.054, %71 ], [ %.054, %69 ], [ %.054, %58 ], [ %.054, %48 ], [ %.054, %45 ], [ %.054, %44 ], [ %.054, %33 ], [ %.054, %23 ], [ %.054, %20 ]
  %.052.be = phi i64 [ %.052, %19 ], [ %.052, %352 ], [ %.052, %351 ], [ %.052, %349 ], [ %.052, %348 ], [ %.052, %347 ], [ %.052, %345 ], [ %.052, %343 ], [ %.052, %342 ], [ %.052, %340 ], [ %.052, %339 ], [ %.052, %338 ], [ %.052, %336 ], [ %.052, %325 ], [ %.052, %315 ], [ %.052, %314 ], [ %.052, %312 ], [ %.052, %311 ], [ %.052, %301 ], [ %.052, %291 ], [ %.052, %290 ], [ %.052, %280 ], [ %.052, %270 ], [ %.052, %264 ], [ %.052, %263 ], [ %.052, %261 ], [ %.052, %250 ], [ %.052, %240 ], [ %.052, %238 ], [ %.052, %227 ], [ %.052, %217 ], [ %.052, %216 ], [ %.052, %205 ], [ %.052, %195 ], [ %.052, %192 ], [ %.052, %191 ], [ %.052, %180 ], [ %.052, %170 ], [ %169, %168 ], [ %.052, %167 ], [ %.052, %157 ], [ %.052, %147 ], [ %.052, %144 ], [ %.052, %139 ], [ %.052, %136 ], [ 0, %134 ], [ %.052, %132 ], [ %.052, %124 ], [ %.052, %121 ], [ %.052, %119 ], [ %.052, %117 ], [ %.052, %116 ], [ %.052, %115 ], [ %.052, %104 ], [ %.052, %94 ], [ %.052, %93 ], [ %.052, %83 ], [ %.052, %73 ], [ %.052, %71 ], [ %.052, %69 ], [ %.052, %58 ], [ %.052, %48 ], [ %.052, %45 ], [ %.052, %44 ], [ %.052, %33 ], [ %.052, %23 ], [ %.052, %20 ]
  %.050.be = phi i64 [ %.050, %19 ], [ %.050, %352 ], [ %.050, %351 ], [ %.050, %349 ], [ %.050, %348 ], [ %.050, %347 ], [ %.050, %345 ], [ %.050, %343 ], [ %.050, %342 ], [ %.050, %340 ], [ %.050, %339 ], [ %.050, %338 ], [ %.050, %336 ], [ %.050, %325 ], [ %.050, %315 ], [ %.050, %314 ], [ %.050, %312 ], [ %.050, %311 ], [ %.050, %301 ], [ %.050, %291 ], [ %.050, %290 ], [ %.050, %280 ], [ %.050, %270 ], [ %.050, %264 ], [ %.050, %263 ], [ %.050, %261 ], [ %.050, %250 ], [ %.050, %240 ], [ %.050, %238 ], [ %.050, %227 ], [ %.050, %217 ], [ %.050, %216 ], [ %.050, %205 ], [ %.050, %195 ], [ %.050, %192 ], [ %.050, %191 ], [ %.050, %180 ], [ %.050, %170 ], [ %.050, %168 ], [ %.050, %167 ], [ %.050, %157 ], [ %.050, %147 ], [ %.050, %144 ], [ %.050, %139 ], [ %.050, %136 ], [ %135, %134 ], [ %.050, %132 ], [ %.050, %124 ], [ %.050, %121 ], [ %.050, %119 ], [ %.050, %117 ], [ %.050, %116 ], [ %.050, %115 ], [ %.050, %104 ], [ %.050, %94 ], [ %.050, %93 ], [ %.050, %83 ], [ %.050, %73 ], [ %.050, %71 ], [ %.050, %69 ], [ %.050, %58 ], [ %.050, %48 ], [ %.050, %45 ], [ %.050, %44 ], [ %.050, %33 ], [ %.050, %23 ], [ %.050, %20 ]
  %.048.be = phi i64 [ %.048, %19 ], [ %.048, %352 ], [ %.048, %351 ], [ %.048, %349 ], [ %.048, %348 ], [ %.048, %347 ], [ %.048, %345 ], [ 0, %343 ], [ %.048, %342 ], [ %.048, %340 ], [ %.048, %339 ], [ %.048, %338 ], [ %.048, %336 ], [ %.048, %325 ], [ %.048, %315 ], [ %.048, %314 ], [ %313, %312 ], [ %.048, %311 ], [ %.048, %301 ], [ %.048, %291 ], [ %.048, %290 ], [ %.048, %280 ], [ %.048, %270 ], [ %.048, %264 ], [ %.048, %263 ], [ %.048, %261 ], [ %.048, %250 ], [ %.048, %240 ], [ %.048, %238 ], [ %.048, %227 ], [ %.048, %217 ], [ %.048, %216 ], [ %.048, %205 ], [ %.048, %195 ], [ %.048, %192 ], [ %.048, %191 ], [ 0, %180 ], [ %.048, %170 ], [ %.048, %168 ], [ %.048, %167 ], [ %.048, %157 ], [ %.048, %147 ], [ %.048, %144 ], [ %.048, %139 ], [ %.048, %136 ], [ %.048, %134 ], [ %.048, %132 ], [ %.048, %124 ], [ %.048, %121 ], [ %.048, %119 ], [ %.048, %117 ], [ %.048, %116 ], [ %.048, %115 ], [ %.048, %104 ], [ %.048, %94 ], [ %.048, %93 ], [ %.048, %83 ], [ %.048, %73 ], [ %.048, %71 ], [ %.048, %69 ], [ %.048, %58 ], [ %.048, %48 ], [ %.048, %45 ], [ %.048, %44 ], [ %.048, %33 ], [ %.048, %23 ], [ %.048, %20 ]
  %.046.be = phi i64 [ %.046, %19 ], [ %.046, %352 ], [ %.046, %351 ], [ %.046, %349 ], [ %.046, %348 ], [ %.046, %347 ], [ %.046, %345 ], [ %344, %343 ], [ %.046, %342 ], [ %.046, %340 ], [ %.046, %339 ], [ %.046, %338 ], [ %.046, %336 ], [ %.046, %325 ], [ %.046, %315 ], [ %.046, %314 ], [ %.046, %312 ], [ %.046, %311 ], [ %.046, %301 ], [ %.046, %291 ], [ %.046, %290 ], [ %.046, %280 ], [ %.046, %270 ], [ %.046, %264 ], [ %.046, %263 ], [ %.046, %261 ], [ %.046, %250 ], [ %.046, %240 ], [ %.046, %238 ], [ %.046, %227 ], [ %.046, %217 ], [ %.046, %216 ], [ %.046, %205 ], [ %.046, %195 ], [ %.046, %192 ], [ %.046, %191 ], [ %181, %180 ], [ %.046, %170 ], [ %.046, %168 ], [ %.046, %167 ], [ %.046, %157 ], [ %.046, %147 ], [ %.046, %144 ], [ %.046, %139 ], [ %.046, %136 ], [ %.046, %134 ], [ %.046, %132 ], [ %.046, %124 ], [ %.046, %121 ], [ %.046, %119 ], [ %.046, %117 ], [ %.046, %116 ], [ %.046, %115 ], [ %.046, %104 ], [ %.046, %94 ], [ %.046, %93 ], [ %.046, %83 ], [ %.046, %73 ], [ %.046, %71 ], [ %.046, %69 ], [ %.046, %58 ], [ %.046, %48 ], [ %.046, %45 ], [ %.046, %44 ], [ %.046, %33 ], [ %.046, %23 ], [ %.046, %20 ]
  %.044.be = phi i64 [ %.044, %19 ], [ %.044, %352 ], [ %.044, %351 ], [ %350, %349 ], [ %.044, %348 ], [ %.044, %347 ], [ 0, %345 ], [ %.044, %343 ], [ %.044, %342 ], [ %.044, %340 ], [ %.044, %339 ], [ %.044, %338 ], [ %.044, %336 ], [ %.044, %325 ], [ %.044, %315 ], [ %.044, %314 ], [ %.044, %312 ], [ %.044, %311 ], [ %.044, %301 ], [ %.044, %291 ], [ %.044, %290 ], [ %.neg, %280 ], [ %.044, %270 ], [ %.044, %264 ], [ %.044, %263 ], [ %.044, %261 ], [ %.044, %250 ], [ %.044, %240 ], [ %.044, %238 ], [ %.044, %227 ], [ %.044, %217 ], [ %.044, %216 ], [ 0, %205 ], [ %.044, %195 ], [ %.044, %192 ], [ %.044, %191 ], [ %.044, %180 ], [ %.044, %170 ], [ %.044, %168 ], [ %.044, %167 ], [ %.044, %157 ], [ %.044, %147 ], [ %.044, %144 ], [ %.044, %139 ], [ %.044, %136 ], [ %.044, %134 ], [ %.044, %132 ], [ %.044, %124 ], [ %.044, %121 ], [ %.044, %119 ], [ %.044, %117 ], [ %.044, %116 ], [ %.044, %115 ], [ %.044, %104 ], [ %.044, %94 ], [ %.044, %93 ], [ %.044, %83 ], [ %.044, %73 ], [ %.044, %71 ], [ %.044, %69 ], [ %.044, %58 ], [ %.044, %48 ], [ %.044, %45 ], [ %.044, %44 ], [ %.044, %33 ], [ %.044, %23 ], [ %.044, %20 ]
  %.042.be = phi i64 [ %.042, %19 ], [ %.042, %352 ], [ %.042, %351 ], [ %.042, %349 ], [ %.042, %348 ], [ %.042, %347 ], [ %346, %345 ], [ %.042, %343 ], [ %.042, %342 ], [ %.042, %340 ], [ %.042, %339 ], [ %.042, %338 ], [ %.042, %336 ], [ %.042, %325 ], [ %.042, %315 ], [ %.042, %314 ], [ %.042, %312 ], [ %.042, %311 ], [ %.042, %301 ], [ %.042, %291 ], [ %.042, %290 ], [ %.042, %280 ], [ %.042, %270 ], [ %.042, %264 ], [ %.042, %263 ], [ %.042, %261 ], [ %.042, %250 ], [ %.042, %240 ], [ %.042, %238 ], [ %.042, %227 ], [ %.042, %217 ], [ %.042, %216 ], [ %206, %205 ], [ %.042, %195 ], [ %.042, %192 ], [ %.042, %191 ], [ %.042, %180 ], [ %.042, %170 ], [ %.042, %168 ], [ %.042, %167 ], [ %.042, %157 ], [ %.042, %147 ], [ %.042, %144 ], [ %.042, %139 ], [ %.042, %136 ], [ %.042, %134 ], [ %.042, %132 ], [ %.042, %124 ], [ %.042, %121 ], [ %.042, %119 ], [ %.042, %117 ], [ %.042, %116 ], [ %.042, %115 ], [ %.042, %104 ], [ %.042, %94 ], [ %.042, %93 ], [ %.042, %83 ], [ %.042, %73 ], [ %.042, %71 ], [ %.042, %69 ], [ %.042, %58 ], [ %.042, %48 ], [ %.042, %45 ], [ %.042, %44 ], [ %.042, %33 ], [ %.042, %23 ], [ %.042, %20 ]
  %.0.be = phi i32 [ %.0, %19 ], [ -1812001639, %352 ], [ 1804039260, %351 ], [ -977932642, %349 ], [ 2025836817, %348 ], [ -143782074, %347 ], [ 1059607188, %345 ], [ -1919661627, %343 ], [ -174194056, %342 ], [ -1635892145, %340 ], [ 1566587064, %339 ], [ -842793712, %338 ], [ 1906585832, %336 ], [ %334, %325 ], [ %324, %315 ], [ -1794887190, %314 ], [ -8479111, %312 ], [ 1662459608, %311 ], [ %310, %301 ], [ %300, %291 ], [ 522140294, %290 ], [ %289, %280 ], [ %279, %270 ], [ 1967102235, %264 ], [ -2005497001, %263 ], [ %262, %261 ], [ %260, %250 ], [ %249, %240 ], [ %239, %238 ], [ %237, %227 ], [ %226, %217 ], [ 522140294, %216 ], [ %215, %205 ], [ %204, %195 ], [ %194, %192 ], [ -8479111, %191 ], [ %190, %180 ], [ %179, %170 ], [ 1678421370, %168 ], [ 864958169, %167 ], [ %166, %157 ], [ %156, %147 ], [ -1794887190, %144 ], [ %143, %139 ], [ %138, %136 ], [ 1678421370, %134 ], [ 969864806, %132 ], [ 1906991561, %124 ], [ %123, %121 ], [ 969864806, %119 ], [ 389837812, %117 ], [ 1773773914, %116 ], [ -1158133758, %115 ], [ %114, %104 ], [ %103, %94 ], [ -52143825, %93 ], [ %92, %83 ], [ %82, %73 ], [ -1001292094, %71 ], [ %70, %69 ], [ %68, %58 ], [ %57, %48 ], [ %47, %45 ], [ -1158133758, %44 ], [ %43, %33 ], [ %32, %23 ], [ %22, %20 ]
  br label %19

20:                                               ; preds = %19
  %21 = icmp slt i64 %.064, %18
  %22 = select i1 %21, i32 -1329672509, i32 -703854577
  br label %.backedge

23:                                               ; preds = %19
  %24 = load i32, i32* @x.9, align 4
  %25 = load i32, i32* @y.10, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 1906585832, i32 -1419588154
  br label %.backedge

33:                                               ; preds = %19
  %34 = load i64, i64* @V, align 8
  %35 = load i32, i32* @x.9, align 4
  %36 = load i32, i32* @y.10, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -690391096, i32 -1419588154
  br label %.backedge

44:                                               ; preds = %19
  br label %.backedge

45:                                               ; preds = %19
  %46 = icmp slt i64 %.060, %.058
  %47 = select i1 %46, i32 -307434056, i32 -1227888075
  br label %.backedge

48:                                               ; preds = %19
  %49 = load i32, i32* @x.9, align 4
  %50 = load i32, i32* @y.10, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 -842793712, i32 1687746115
  br label %.backedge

58:                                               ; preds = %19
  %59 = icmp ne i64 %.064, %.060
  store i1 %59, i1* %4, align 1
  %60 = load i32, i32* @x.9, align 4
  %61 = load i32, i32* @y.10, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 -444588567, i32 1687746115
  br label %.backedge

69:                                               ; preds = %19
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %70 = select i1 %.0..0..0., i32 -897608278, i32 -1001292094
  br label %.backedge

71:                                               ; preds = %19
  %72 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %.064, i64 %.060
  store i64 4557430888798830399, i64* %72, align 8
  br label %.backedge

73:                                               ; preds = %19
  %74 = load i32, i32* @x.9, align 4
  %75 = load i32, i32* @y.10, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 1566587064, i32 -1594222556
  br label %.backedge

83:                                               ; preds = %19
  %84 = load i32, i32* @x.9, align 4
  %85 = load i32, i32* @y.10, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 -1031295643, i32 -1594222556
  br label %.backedge

93:                                               ; preds = %19
  br label %.backedge

94:                                               ; preds = %19
  %95 = load i32, i32* @x.9, align 4
  %96 = load i32, i32* @y.10, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -1635892145, i32 -111935042
  br label %.backedge

104:                                              ; preds = %19
  %105 = add i64 %.060, 1
  %106 = load i32, i32* @x.9, align 4
  %107 = load i32, i32* @y.10, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 -308693790, i32 -111935042
  br label %.backedge

115:                                              ; preds = %19
  br label %.backedge

116:                                              ; preds = %19
  br label %.backedge

117:                                              ; preds = %19
  %118 = add i64 %.064, 1
  br label %.backedge

119:                                              ; preds = %19
  %120 = load i64, i64* @E, align 8
  br label %.backedge

121:                                              ; preds = %19
  %122 = icmp slt i64 %.056, %.054
  %123 = select i1 %122, i32 1736281553, i32 559343670
  br label %.backedge

124:                                              ; preds = %19
  %125 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %5)
  %126 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %125, i64* nonnull dereferenceable(8) %6)
  %127 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %126, i64* nonnull dereferenceable(8) %7)
  %128 = load i64, i64* %7, align 8
  %129 = load i64, i64* %5, align 8
  %130 = load i64, i64* %6, align 8
  %131 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %129, i64 %130
  store i64 %128, i64* %131, align 8
  br label %.backedge

132:                                              ; preds = %19
  %133 = add i64 %.056, 1
  br label %.backedge

134:                                              ; preds = %19
  call void @_Z13shortest_pathv()
  %135 = load i64, i64* @V, align 8
  br label %.backedge

136:                                              ; preds = %19
  %137 = icmp slt i64 %.052, %.050
  %138 = select i1 %137, i32 93907760, i32 168685607
  br label %.backedge

139:                                              ; preds = %19
  %140 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %.052, i64 %.052
  %141 = load i64, i64* %140, align 8
  %142 = icmp slt i64 %141, 0
  %143 = select i1 %142, i32 1335760026, i32 296122448
  br label %.backedge

144:                                              ; preds = %19
  %145 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %146 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %145, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

147:                                              ; preds = %19
  %148 = load i32, i32* @x.9, align 4
  %149 = load i32, i32* @y.10, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 -174194056, i32 -1938177967
  br label %.backedge

157:                                              ; preds = %19
  %158 = load i32, i32* @x.9, align 4
  %159 = load i32, i32* @y.10, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 -64268524, i32 -1938177967
  br label %.backedge

167:                                              ; preds = %19
  br label %.backedge

168:                                              ; preds = %19
  %169 = add i64 %.052, 1
  br label %.backedge

170:                                              ; preds = %19
  %171 = load i32, i32* @x.9, align 4
  %172 = load i32, i32* @y.10, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 -1919661627, i32 -920313820
  br label %.backedge

180:                                              ; preds = %19
  %181 = load i64, i64* @V, align 8
  %182 = load i32, i32* @x.9, align 4
  %183 = load i32, i32* @y.10, align 4
  %184 = add i32 %182, -1
  %185 = mul i32 %184, %182
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %188, %187
  %190 = select i1 %189, i32 -1925836151, i32 -920313820
  br label %.backedge

191:                                              ; preds = %19
  br label %.backedge

192:                                              ; preds = %19
  %193 = icmp slt i64 %.048, %.046
  %194 = select i1 %193, i32 -1575708903, i32 -1893345704
  br label %.backedge

195:                                              ; preds = %19
  %196 = load i32, i32* @x.9, align 4
  %197 = load i32, i32* @y.10, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 1059607188, i32 1626977358
  br label %.backedge

205:                                              ; preds = %19
  %206 = load i64, i64* @V, align 8
  %207 = load i32, i32* @x.9, align 4
  %208 = load i32, i32* @y.10, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1142182124, i32 1626977358
  br label %.backedge

216:                                              ; preds = %19
  br label %.backedge

217:                                              ; preds = %19
  %218 = load i32, i32* @x.9, align 4
  %219 = load i32, i32* @y.10, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -143782074, i32 607836635
  br label %.backedge

227:                                              ; preds = %19
  %228 = icmp slt i64 %.044, %.042
  store i1 %228, i1* %3, align 1
  %229 = load i32, i32* @x.9, align 4
  %230 = load i32, i32* @y.10, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 2100478365, i32 607836635
  br label %.backedge

238:                                              ; preds = %19
  %.0..0..0.39 = load volatile i1, i1* %3, align 1
  %239 = select i1 %.0..0..0.39, i32 64112955, i32 2015122060
  br label %.backedge

240:                                              ; preds = %19
  %241 = load i32, i32* @x.9, align 4
  %242 = load i32, i32* @y.10, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 2025836817, i32 -114267726
  br label %.backedge

250:                                              ; preds = %19
  %251 = icmp ne i64 %.044, 0
  store i1 %251, i1* %2, align 1
  %252 = load i32, i32* @x.9, align 4
  %253 = load i32, i32* @y.10, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 419168997, i32 -114267726
  br label %.backedge

261:                                              ; preds = %19
  %.0..0..0.40 = load volatile i1, i1* %2, align 1
  %262 = select i1 %.0..0..0.40, i32 734849809, i32 -2005497001
  br label %.backedge

263:                                              ; preds = %19
  %putchar67 = call i32 @putchar(i32 32)
  br label %.backedge

264:                                              ; preds = %19
  %265 = getelementptr inbounds [100 x [100 x i64]], [100 x [100 x i64]]* @d, i64 0, i64 %.048, i64 %.044
  %266 = load i64, i64* %265, align 8
  %267 = icmp eq i64 %266, 4557430888798830399
  %268 = select i1 %267, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)
  %269 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) %268, i64 %266)
  br label %.backedge

270:                                              ; preds = %19
  %271 = load i32, i32* @x.9, align 4
  %272 = load i32, i32* @y.10, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 -977932642, i32 -827554524
  br label %.backedge

280:                                              ; preds = %19
  %.neg = add i64 %.044, 1
  %281 = load i32, i32* @x.9, align 4
  %282 = load i32, i32* @y.10, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 -426090991, i32 -827554524
  br label %.backedge

290:                                              ; preds = %19
  br label %.backedge

291:                                              ; preds = %19
  %292 = load i32, i32* @x.9, align 4
  %293 = load i32, i32* @y.10, align 4
  %294 = add i32 %292, -1
  %295 = mul i32 %294, %292
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %298, %297
  %300 = select i1 %299, i32 1804039260, i32 1094653425
  br label %.backedge

301:                                              ; preds = %19
  %putchar66 = call i32 @putchar(i32 10)
  %302 = load i32, i32* @x.9, align 4
  %303 = load i32, i32* @y.10, align 4
  %304 = add i32 %302, -1
  %305 = mul i32 %304, %302
  %306 = and i32 %305, 1
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %308, %307
  %310 = select i1 %309, i32 -154424074, i32 1094653425
  br label %.backedge

311:                                              ; preds = %19
  br label %.backedge

312:                                              ; preds = %19
  %313 = add i64 %.048, 1
  br label %.backedge

314:                                              ; preds = %19
  br label %.backedge

315:                                              ; preds = %19
  %316 = load i32, i32* @x.9, align 4
  %317 = load i32, i32* @y.10, align 4
  %318 = add i32 %316, -1
  %319 = mul i32 %318, %316
  %320 = and i32 %319, 1
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %322, %321
  %324 = select i1 %323, i32 -1812001639, i32 -201187095
  br label %.backedge

325:                                              ; preds = %19
  store i32 0, i32* %1, align 4
  %326 = load i32, i32* @x.9, align 4
  %327 = load i32, i32* @y.10, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 366520759, i32 -201187095
  br label %.backedge

335:                                              ; preds = %19
  %.0..0..0.41 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.41

336:                                              ; preds = %19
  %337 = load i64, i64* @V, align 8
  br label %.backedge

338:                                              ; preds = %19
  br label %.backedge

339:                                              ; preds = %19
  br label %.backedge

340:                                              ; preds = %19
  %341 = add i64 %.060, 1
  br label %.backedge

342:                                              ; preds = %19
  br label %.backedge

343:                                              ; preds = %19
  %344 = load i64, i64* @V, align 8
  br label %.backedge

345:                                              ; preds = %19
  %346 = load i64, i64* @V, align 8
  br label %.backedge

347:                                              ; preds = %19
  br label %.backedge

348:                                              ; preds = %19
  br label %.backedge

349:                                              ; preds = %19
  %350 = add i64 %.044, 1
  br label %.backedge

351:                                              ; preds = %19
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

352:                                              ; preds = %19
  br label %.backedge
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s838300691.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
