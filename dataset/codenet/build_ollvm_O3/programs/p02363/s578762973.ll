; ModuleID = 'build_ollvm/programs/p02363/s578762973.ll'
source_filename = "Project_CodeNet_C++1400/p02363/s578762973.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt6fill_nIPiiiET_S1_T0_RKT1_ = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZSt10__fill_n_aIPiiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

@n = global i32 0, align 4
@m = global i32 0, align 4
@d = global [100 x [100 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@_ZL3inf = internal constant i32 2000000000, align 4
@.str.1 = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"NEGATIVE CYCLE\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull @m)
  br label %12

12:                                               ; preds = %.backedge, %0
  %.078 = phi i32 [ 0, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.0 = phi i32 [ -611297718, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -611297718, label %13
    i32 -1345224664, label %17
    i32 -1512548312, label %23
    i32 -724850097, label %33
    i32 -1088502839, label %44
    i32 -2109961699, label %45
    i32 1696221234, label %46
    i32 -202733028, label %50
    i32 -536424238, label %58
    i32 1803668709, label %68
    i32 81632748, label %78
    i32 2030866820, label %79
    i32 144814322, label %89
    i32 -1585354447, label %99
    i32 1843183724, label %100
    i32 1563770705, label %104
    i32 -999346153, label %105
    i32 1491538835, label %109
    i32 861647715, label %110
    i32 -1158074608, label %114
    i32 813571335, label %124
    i32 583975085, label %139
    i32 -735106088, label %141
    i32 -1911358638, label %151
    i32 252944762, label %166
    i32 17902978, label %168
    i32 -1822404802, label %178
    i32 -1372659527, label %204
    i32 2057148427, label %205
    i32 -1363382327, label %206
    i32 550720671, label %216
    i32 -991458926, label %227
    i32 -452780828, label %228
    i32 -604915224, label %229
    i32 2083664438, label %231
    i32 -590020625, label %232
    i32 29804764, label %242
    i32 576195436, label %253
    i32 -272156465, label %254
    i32 -611751351, label %255
    i32 -979746258, label %259
    i32 -125053809, label %265
    i32 -1391157756, label %275
    i32 -1203952338, label %286
    i32 -1236898040, label %287
    i32 56743031, label %297
    i32 1552194685, label %307
    i32 -302764025, label %308
    i32 -234309105, label %318
    i32 1487000027, label %329
    i32 -1704115132, label %330
    i32 -679832300, label %331
    i32 -1164154545, label %341
    i32 1684727804, label %353
    i32 -371457348, label %355
    i32 -669309232, label %356
    i32 644424188, label %366
    i32 -1619171100, label %378
    i32 2124948782, label %380
    i32 -178673759, label %382
    i32 -1875488652, label %392
    i32 -1801451248, label %403
    i32 2033740721, label %404
    i32 -346103091, label %411
    i32 1888312734, label %413
    i32 -1041439314, label %419
    i32 124751435, label %420
    i32 513100242, label %422
    i32 -1490165231, label %424
    i32 -230081640, label %426
    i32 2043431322, label %436
    i32 -134118107, label %446
    i32 -1212017748, label %447
    i32 -811943172, label %457
    i32 -99071040, label %467
    i32 -2056770619, label %468
    i32 -1616539340, label %470
    i32 -1976467639, label %471
    i32 -183042628, label %472
    i32 47473929, label %473
    i32 782464205, label %474
    i32 -1016630198, label %491
    i32 2090709960, label %493
    i32 1984048406, label %495
    i32 1142388002, label %497
    i32 -571041382, label %498
    i32 -1477580015, label %500
    i32 577525033, label %501
    i32 -238463067, label %502
    i32 -1323365903, label %504
    i32 1458697632, label %505
  ]

.backedge:                                        ; preds = %12, %505, %504, %502, %501, %500, %498, %497, %495, %493, %491, %474, %473, %472, %471, %470, %468, %457, %447, %446, %436, %426, %424, %422, %420, %419, %413, %411, %404, %403, %392, %382, %380, %378, %366, %356, %355, %353, %341, %331, %330, %329, %318, %308, %307, %297, %287, %286, %275, %265, %259, %255, %254, %253, %242, %232, %231, %229, %228, %227, %216, %206, %205, %204, %178, %168, %166, %151, %141, %139, %124, %114, %110, %109, %105, %104, %100, %99, %89, %79, %78, %68, %58, %50, %46, %45, %44, %33, %23, %17, %13
  %.078.be = phi i32 [ %.078, %12 ], [ %.078, %505 ], [ %.078, %504 ], [ %.078, %502 ], [ %.078, %501 ], [ %.078, %500 ], [ %.078, %498 ], [ %.078, %497 ], [ %.078, %495 ], [ %.078, %493 ], [ %.078, %491 ], [ %.078, %474 ], [ %.078, %473 ], [ %.078, %472 ], [ %.078, %471 ], [ %.078, %470 ], [ %469, %468 ], [ %.078, %457 ], [ %.078, %447 ], [ %.078, %446 ], [ %.078, %436 ], [ %.078, %426 ], [ %.078, %424 ], [ %.078, %422 ], [ %.078, %420 ], [ %.078, %419 ], [ %.078, %413 ], [ %.078, %411 ], [ %.078, %404 ], [ %.078, %403 ], [ %.078, %392 ], [ %.078, %382 ], [ %.078, %380 ], [ %.078, %378 ], [ %.078, %366 ], [ %.078, %356 ], [ %.078, %355 ], [ %.078, %353 ], [ %.078, %341 ], [ %.078, %331 ], [ %.078, %330 ], [ %.078, %329 ], [ %.078, %318 ], [ %.078, %308 ], [ %.078, %307 ], [ %.078, %297 ], [ %.078, %287 ], [ %.078, %286 ], [ %.078, %275 ], [ %.078, %265 ], [ %.078, %259 ], [ %.078, %255 ], [ %.078, %254 ], [ %.078, %253 ], [ %.078, %242 ], [ %.078, %232 ], [ %.078, %231 ], [ %.078, %229 ], [ %.078, %228 ], [ %.078, %227 ], [ %.078, %216 ], [ %.078, %206 ], [ %.078, %205 ], [ %.078, %204 ], [ %.078, %178 ], [ %.078, %168 ], [ %.078, %166 ], [ %.078, %151 ], [ %.078, %141 ], [ %.078, %139 ], [ %.078, %124 ], [ %.078, %114 ], [ %.078, %110 ], [ %.078, %109 ], [ %.078, %105 ], [ %.078, %104 ], [ %.078, %100 ], [ %.078, %99 ], [ %.078, %89 ], [ %.078, %79 ], [ %.078, %78 ], [ %.078, %68 ], [ %.078, %58 ], [ %.078, %50 ], [ %.078, %46 ], [ %.078, %45 ], [ %.078, %44 ], [ %34, %33 ], [ %.078, %23 ], [ %.078, %17 ], [ %.078, %13 ]
  %.076.be = phi i32 [ %.076, %12 ], [ %.076, %505 ], [ %.076, %504 ], [ %.076, %502 ], [ %.076, %501 ], [ %.076, %500 ], [ %.076, %498 ], [ %.076, %497 ], [ %.076, %495 ], [ %.076, %493 ], [ %.076, %491 ], [ %.076, %474 ], [ %.076, %473 ], [ %.076, %472 ], [ %.076, %471 ], [ %.neg, %470 ], [ %.076, %468 ], [ %.076, %457 ], [ %.076, %447 ], [ %.076, %446 ], [ %.076, %436 ], [ %.076, %426 ], [ %.076, %424 ], [ %.076, %422 ], [ %.076, %420 ], [ %.076, %419 ], [ %.076, %413 ], [ %.076, %411 ], [ %.076, %404 ], [ %.076, %403 ], [ %.076, %392 ], [ %.076, %382 ], [ %.076, %380 ], [ %.076, %378 ], [ %.076, %366 ], [ %.076, %356 ], [ %.076, %355 ], [ %.076, %353 ], [ %.076, %341 ], [ %.076, %331 ], [ %.076, %330 ], [ %.076, %329 ], [ %.076, %318 ], [ %.076, %308 ], [ %.076, %307 ], [ %.076, %297 ], [ %.076, %287 ], [ %.076, %286 ], [ %.076, %275 ], [ %.076, %265 ], [ %.076, %259 ], [ %.076, %255 ], [ %.076, %254 ], [ %.076, %253 ], [ %.076, %242 ], [ %.076, %232 ], [ %.076, %231 ], [ %.076, %229 ], [ %.076, %228 ], [ %.076, %227 ], [ %.076, %216 ], [ %.076, %206 ], [ %.076, %205 ], [ %.076, %204 ], [ %.076, %178 ], [ %.076, %168 ], [ %.076, %166 ], [ %.076, %151 ], [ %.076, %141 ], [ %.076, %139 ], [ %.076, %124 ], [ %.076, %114 ], [ %.076, %110 ], [ %.076, %109 ], [ %.076, %105 ], [ %.076, %104 ], [ %.076, %100 ], [ %.076, %99 ], [ %.076, %89 ], [ %.076, %79 ], [ %.076, %78 ], [ %.neg82, %68 ], [ %.076, %58 ], [ %.076, %50 ], [ %.076, %46 ], [ 0, %45 ], [ %.076, %44 ], [ %.076, %33 ], [ %.076, %23 ], [ %.076, %17 ], [ %.076, %13 ]
  %.074.be = phi i32 [ %.074, %12 ], [ %.074, %505 ], [ %.074, %504 ], [ %.074, %502 ], [ %.074, %501 ], [ %.074, %500 ], [ %.074, %498 ], [ %.074, %497 ], [ %.074, %495 ], [ %494, %493 ], [ %.074, %491 ], [ %.074, %474 ], [ %.074, %473 ], [ %.074, %472 ], [ 0, %471 ], [ %.074, %470 ], [ %.074, %468 ], [ %.074, %457 ], [ %.074, %447 ], [ %.074, %446 ], [ %.074, %436 ], [ %.074, %426 ], [ %.074, %424 ], [ %.074, %422 ], [ %.074, %420 ], [ %.074, %419 ], [ %.074, %413 ], [ %.074, %411 ], [ %.074, %404 ], [ %.074, %403 ], [ %.074, %392 ], [ %.074, %382 ], [ %.074, %380 ], [ %.074, %378 ], [ %.074, %366 ], [ %.074, %356 ], [ %.074, %355 ], [ %.074, %353 ], [ %.074, %341 ], [ %.074, %331 ], [ %.074, %330 ], [ %.074, %329 ], [ %.074, %318 ], [ %.074, %308 ], [ %.074, %307 ], [ %.074, %297 ], [ %.074, %287 ], [ %.074, %286 ], [ %.074, %275 ], [ %.074, %265 ], [ %.074, %259 ], [ %.074, %255 ], [ %.074, %254 ], [ %.074, %253 ], [ %243, %242 ], [ %.074, %232 ], [ %.074, %231 ], [ %.074, %229 ], [ %.074, %228 ], [ %.074, %227 ], [ %.074, %216 ], [ %.074, %206 ], [ %.074, %205 ], [ %.074, %204 ], [ %.074, %178 ], [ %.074, %168 ], [ %.074, %166 ], [ %.074, %151 ], [ %.074, %141 ], [ %.074, %139 ], [ %.074, %124 ], [ %.074, %114 ], [ %.074, %110 ], [ %.074, %109 ], [ %.074, %105 ], [ %.074, %104 ], [ %.074, %100 ], [ %.074, %99 ], [ 0, %89 ], [ %.074, %79 ], [ %.074, %78 ], [ %.074, %68 ], [ %.074, %58 ], [ %.074, %50 ], [ %.074, %46 ], [ %.074, %45 ], [ %.074, %44 ], [ %.074, %33 ], [ %.074, %23 ], [ %.074, %17 ], [ %.074, %13 ]
  %.072.be = phi i32 [ %.072, %12 ], [ %.072, %505 ], [ %.072, %504 ], [ %.072, %502 ], [ %.072, %501 ], [ %.072, %500 ], [ %.072, %498 ], [ %.072, %497 ], [ %.072, %495 ], [ %.072, %493 ], [ %.072, %491 ], [ %.072, %474 ], [ %.072, %473 ], [ %.072, %472 ], [ %.072, %471 ], [ %.072, %470 ], [ %.072, %468 ], [ %.072, %457 ], [ %.072, %447 ], [ %.072, %446 ], [ %.072, %436 ], [ %.072, %426 ], [ %.072, %424 ], [ %.072, %422 ], [ %.072, %420 ], [ %.072, %419 ], [ %.072, %413 ], [ %.072, %411 ], [ %.072, %404 ], [ %.072, %403 ], [ %.072, %392 ], [ %.072, %382 ], [ %.072, %380 ], [ %.072, %378 ], [ %.072, %366 ], [ %.072, %356 ], [ %.072, %355 ], [ %.072, %353 ], [ %.072, %341 ], [ %.072, %331 ], [ %.072, %330 ], [ %.072, %329 ], [ %.072, %318 ], [ %.072, %308 ], [ %.072, %307 ], [ %.072, %297 ], [ %.072, %287 ], [ %.072, %286 ], [ %.072, %275 ], [ %.072, %265 ], [ %.072, %259 ], [ %.072, %255 ], [ %.072, %254 ], [ %.072, %253 ], [ %.072, %242 ], [ %.072, %232 ], [ %.072, %231 ], [ %230, %229 ], [ %.072, %228 ], [ %.072, %227 ], [ %.072, %216 ], [ %.072, %206 ], [ %.072, %205 ], [ %.072, %204 ], [ %.072, %178 ], [ %.072, %168 ], [ %.072, %166 ], [ %.072, %151 ], [ %.072, %141 ], [ %.072, %139 ], [ %.072, %124 ], [ %.072, %114 ], [ %.072, %110 ], [ %.072, %109 ], [ %.072, %105 ], [ 0, %104 ], [ %.072, %100 ], [ %.072, %99 ], [ %.072, %89 ], [ %.072, %79 ], [ %.072, %78 ], [ %.072, %68 ], [ %.072, %58 ], [ %.072, %50 ], [ %.072, %46 ], [ %.072, %45 ], [ %.072, %44 ], [ %.072, %33 ], [ %.072, %23 ], [ %.072, %17 ], [ %.072, %13 ]
  %.070.be = phi i32 [ %.070, %12 ], [ %.070, %505 ], [ %.070, %504 ], [ %.070, %502 ], [ %.070, %501 ], [ %.070, %500 ], [ %.070, %498 ], [ %.070, %497 ], [ %.070, %495 ], [ %.070, %493 ], [ %492, %491 ], [ %.070, %474 ], [ %.070, %473 ], [ %.070, %472 ], [ %.070, %471 ], [ %.070, %470 ], [ %.070, %468 ], [ %.070, %457 ], [ %.070, %447 ], [ %.070, %446 ], [ %.070, %436 ], [ %.070, %426 ], [ %.070, %424 ], [ %.070, %422 ], [ %.070, %420 ], [ %.070, %419 ], [ %.070, %413 ], [ %.070, %411 ], [ %.070, %404 ], [ %.070, %403 ], [ %.070, %392 ], [ %.070, %382 ], [ %.070, %380 ], [ %.070, %378 ], [ %.070, %366 ], [ %.070, %356 ], [ %.070, %355 ], [ %.070, %353 ], [ %.070, %341 ], [ %.070, %331 ], [ %.070, %330 ], [ %.070, %329 ], [ %.070, %318 ], [ %.070, %308 ], [ %.070, %307 ], [ %.070, %297 ], [ %.070, %287 ], [ %.070, %286 ], [ %.070, %275 ], [ %.070, %265 ], [ %.070, %259 ], [ %.070, %255 ], [ %.070, %254 ], [ %.070, %253 ], [ %.070, %242 ], [ %.070, %232 ], [ %.070, %231 ], [ %.070, %229 ], [ %.070, %228 ], [ %.070, %227 ], [ %217, %216 ], [ %.070, %206 ], [ %.070, %205 ], [ %.070, %204 ], [ %.070, %178 ], [ %.070, %168 ], [ %.070, %166 ], [ %.070, %151 ], [ %.070, %141 ], [ %.070, %139 ], [ %.070, %124 ], [ %.070, %114 ], [ %.070, %110 ], [ 0, %109 ], [ %.070, %105 ], [ %.070, %104 ], [ %.070, %100 ], [ %.070, %99 ], [ %.070, %89 ], [ %.070, %79 ], [ %.070, %78 ], [ %.070, %68 ], [ %.070, %58 ], [ %.070, %50 ], [ %.070, %46 ], [ %.070, %45 ], [ %.070, %44 ], [ %.070, %33 ], [ %.070, %23 ], [ %.070, %17 ], [ %.070, %13 ]
  %.068.be = phi i32 [ %.068, %12 ], [ %.068, %505 ], [ %.068, %504 ], [ %.068, %502 ], [ %.068, %501 ], [ %.068, %500 ], [ %499, %498 ], [ %.068, %497 ], [ %.068, %495 ], [ %.068, %493 ], [ %.068, %491 ], [ %.068, %474 ], [ %.068, %473 ], [ %.068, %472 ], [ %.068, %471 ], [ %.068, %470 ], [ %.068, %468 ], [ %.068, %457 ], [ %.068, %447 ], [ %.068, %446 ], [ %.068, %436 ], [ %.068, %426 ], [ %.068, %424 ], [ %.068, %422 ], [ %.068, %420 ], [ %.068, %419 ], [ %.068, %413 ], [ %.068, %411 ], [ %.068, %404 ], [ %.068, %403 ], [ %.068, %392 ], [ %.068, %382 ], [ %.068, %380 ], [ %.068, %378 ], [ %.068, %366 ], [ %.068, %356 ], [ %.068, %355 ], [ %.068, %353 ], [ %.068, %341 ], [ %.068, %331 ], [ %.068, %330 ], [ %.068, %329 ], [ %319, %318 ], [ %.068, %308 ], [ %.068, %307 ], [ %.068, %297 ], [ %.068, %287 ], [ %.068, %286 ], [ %.068, %275 ], [ %.068, %265 ], [ %.068, %259 ], [ %.068, %255 ], [ 0, %254 ], [ %.068, %253 ], [ %.068, %242 ], [ %.068, %232 ], [ %.068, %231 ], [ %.068, %229 ], [ %.068, %228 ], [ %.068, %227 ], [ %.068, %216 ], [ %.068, %206 ], [ %.068, %205 ], [ %.068, %204 ], [ %.068, %178 ], [ %.068, %168 ], [ %.068, %166 ], [ %.068, %151 ], [ %.068, %141 ], [ %.068, %139 ], [ %.068, %124 ], [ %.068, %114 ], [ %.068, %110 ], [ %.068, %109 ], [ %.068, %105 ], [ %.068, %104 ], [ %.068, %100 ], [ %.068, %99 ], [ %.068, %89 ], [ %.068, %79 ], [ %.068, %78 ], [ %.068, %68 ], [ %.068, %58 ], [ %.068, %50 ], [ %.068, %46 ], [ %.068, %45 ], [ %.068, %44 ], [ %.068, %33 ], [ %.068, %23 ], [ %.068, %17 ], [ %.068, %13 ]
  %.066.be = phi i32 [ %.066, %12 ], [ %.066, %505 ], [ %.066, %504 ], [ %.066, %502 ], [ %.066, %501 ], [ %.066, %500 ], [ %.066, %498 ], [ %.066, %497 ], [ %.066, %495 ], [ %.066, %493 ], [ %.066, %491 ], [ %.066, %474 ], [ %.066, %473 ], [ %.066, %472 ], [ %.066, %471 ], [ %.066, %470 ], [ %.066, %468 ], [ %.066, %457 ], [ %.066, %447 ], [ %.066, %446 ], [ %.066, %436 ], [ %.066, %426 ], [ %425, %424 ], [ %.066, %422 ], [ %.066, %420 ], [ %.066, %419 ], [ %.066, %413 ], [ %.066, %411 ], [ %.066, %404 ], [ %.066, %403 ], [ %.066, %392 ], [ %.066, %382 ], [ %.066, %380 ], [ %.066, %378 ], [ %.066, %366 ], [ %.066, %356 ], [ %.066, %355 ], [ %.066, %353 ], [ %.066, %341 ], [ %.066, %331 ], [ 0, %330 ], [ %.066, %329 ], [ %.066, %318 ], [ %.066, %308 ], [ %.066, %307 ], [ %.066, %297 ], [ %.066, %287 ], [ %.066, %286 ], [ %.066, %275 ], [ %.066, %265 ], [ %.066, %259 ], [ %.066, %255 ], [ %.066, %254 ], [ %.066, %253 ], [ %.066, %242 ], [ %.066, %232 ], [ %.066, %231 ], [ %.066, %229 ], [ %.066, %228 ], [ %.066, %227 ], [ %.066, %216 ], [ %.066, %206 ], [ %.066, %205 ], [ %.066, %204 ], [ %.066, %178 ], [ %.066, %168 ], [ %.066, %166 ], [ %.066, %151 ], [ %.066, %141 ], [ %.066, %139 ], [ %.066, %124 ], [ %.066, %114 ], [ %.066, %110 ], [ %.066, %109 ], [ %.066, %105 ], [ %.066, %104 ], [ %.066, %100 ], [ %.066, %99 ], [ %.066, %89 ], [ %.066, %79 ], [ %.066, %78 ], [ %.066, %68 ], [ %.066, %58 ], [ %.066, %50 ], [ %.066, %46 ], [ %.066, %45 ], [ %.066, %44 ], [ %.066, %33 ], [ %.066, %23 ], [ %.066, %17 ], [ %.066, %13 ]
  %.064.be = phi i32 [ %.064, %12 ], [ %.064, %505 ], [ %.064, %504 ], [ %.064, %502 ], [ %.064, %501 ], [ %.064, %500 ], [ %.064, %498 ], [ %.064, %497 ], [ %.064, %495 ], [ %.064, %493 ], [ %.064, %491 ], [ %.064, %474 ], [ %.064, %473 ], [ %.064, %472 ], [ %.064, %471 ], [ %.064, %470 ], [ %.064, %468 ], [ %.064, %457 ], [ %.064, %447 ], [ %.064, %446 ], [ %.064, %436 ], [ %.064, %426 ], [ %.064, %424 ], [ %.064, %422 ], [ %421, %420 ], [ %.064, %419 ], [ %.064, %413 ], [ %.064, %411 ], [ %.064, %404 ], [ %.064, %403 ], [ %.064, %392 ], [ %.064, %382 ], [ %.064, %380 ], [ %.064, %378 ], [ %.064, %366 ], [ %.064, %356 ], [ 0, %355 ], [ %.064, %353 ], [ %.064, %341 ], [ %.064, %331 ], [ %.064, %330 ], [ %.064, %329 ], [ %.064, %318 ], [ %.064, %308 ], [ %.064, %307 ], [ %.064, %297 ], [ %.064, %287 ], [ %.064, %286 ], [ %.064, %275 ], [ %.064, %265 ], [ %.064, %259 ], [ %.064, %255 ], [ %.064, %254 ], [ %.064, %253 ], [ %.064, %242 ], [ %.064, %232 ], [ %.064, %231 ], [ %.064, %229 ], [ %.064, %228 ], [ %.064, %227 ], [ %.064, %216 ], [ %.064, %206 ], [ %.064, %205 ], [ %.064, %204 ], [ %.064, %178 ], [ %.064, %168 ], [ %.064, %166 ], [ %.064, %151 ], [ %.064, %141 ], [ %.064, %139 ], [ %.064, %124 ], [ %.064, %114 ], [ %.064, %110 ], [ %.064, %109 ], [ %.064, %105 ], [ %.064, %104 ], [ %.064, %100 ], [ %.064, %99 ], [ %.064, %89 ], [ %.064, %79 ], [ %.064, %78 ], [ %.064, %68 ], [ %.064, %58 ], [ %.064, %50 ], [ %.064, %46 ], [ %.064, %45 ], [ %.064, %44 ], [ %.064, %33 ], [ %.064, %23 ], [ %.064, %17 ], [ %.064, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -811943172, %505 ], [ 2043431322, %504 ], [ -1875488652, %502 ], [ 644424188, %501 ], [ -1164154545, %500 ], [ -234309105, %498 ], [ 56743031, %497 ], [ -1391157756, %495 ], [ 29804764, %493 ], [ 550720671, %491 ], [ -1822404802, %474 ], [ -1911358638, %473 ], [ 813571335, %472 ], [ 144814322, %471 ], [ 1803668709, %470 ], [ -724850097, %468 ], [ %466, %457 ], [ %456, %447 ], [ -1212017748, %446 ], [ %445, %436 ], [ %435, %426 ], [ -679832300, %424 ], [ -1490165231, %422 ], [ -669309232, %420 ], [ 124751435, %419 ], [ -1041439314, %413 ], [ -1041439314, %411 ], [ %410, %404 ], [ 2033740721, %403 ], [ %402, %392 ], [ %391, %382 ], [ %381, %380 ], [ %379, %378 ], [ %377, %366 ], [ %365, %356 ], [ -669309232, %355 ], [ %354, %353 ], [ %352, %341 ], [ %340, %331 ], [ -679832300, %330 ], [ -611751351, %329 ], [ %328, %318 ], [ %317, %308 ], [ -302764025, %307 ], [ %306, %297 ], [ %296, %287 ], [ -1212017748, %286 ], [ %285, %275 ], [ %274, %265 ], [ %264, %259 ], [ %258, %255 ], [ -611751351, %254 ], [ 1843183724, %253 ], [ %252, %242 ], [ %241, %232 ], [ -590020625, %231 ], [ -999346153, %229 ], [ -604915224, %228 ], [ 861647715, %227 ], [ %226, %216 ], [ %215, %206 ], [ -1363382327, %205 ], [ 2057148427, %204 ], [ %203, %178 ], [ %177, %168 ], [ %167, %166 ], [ %165, %151 ], [ %150, %141 ], [ %140, %139 ], [ %138, %124 ], [ %123, %114 ], [ %113, %110 ], [ 861647715, %109 ], [ %108, %105 ], [ -999346153, %104 ], [ %103, %100 ], [ 1843183724, %99 ], [ %98, %89 ], [ %88, %79 ], [ 1696221234, %78 ], [ %77, %68 ], [ %67, %58 ], [ -536424238, %50 ], [ %49, %46 ], [ 1696221234, %45 ], [ -611297718, %44 ], [ %43, %33 ], [ %32, %23 ], [ -1512548312, %17 ], [ %16, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* @n, align 4
  %15 = icmp slt i32 %.078, %14
  %16 = select i1 %15, i32 -1345224664, i32 -2109961699
  br label %.backedge

17:                                               ; preds = %12
  %18 = sext i32 %.078 to i64
  %19 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %18, i64 0
  %20 = load i32, i32* @n, align 4
  %21 = call i32* @_ZSt6fill_nIPiiiET_S1_T0_RKT1_(i32* nonnull %19, i32 %20, i32* nonnull dereferenceable(4) @_ZL3inf)
  %22 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %18, i64 %18
  store i32 0, i32* %22, align 4
  br label %.backedge

23:                                               ; preds = %12
  %24 = load i32, i32* @x, align 4
  %25 = load i32, i32* @y, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -724850097, i32 -2056770619
  br label %.backedge

33:                                               ; preds = %12
  %34 = add i32 %.078, 1
  %35 = load i32, i32* @x, align 4
  %36 = load i32, i32* @y, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1088502839, i32 -2056770619
  br label %.backedge

44:                                               ; preds = %12
  br label %.backedge

45:                                               ; preds = %12
  br label %.backedge

46:                                               ; preds = %12
  %47 = load i32, i32* @m, align 4
  %48 = icmp slt i32 %.076, %47
  %49 = select i1 %48, i32 -202733028, i32 2030866820
  br label %.backedge

50:                                               ; preds = %12
  %51 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  %52 = load i32, i32* %8, align 4
  %53 = load i32, i32* %6, align 4
  %54 = sext i32 %53 to i64
  %55 = load i32, i32* %7, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %54, i64 %56
  store i32 %52, i32* %57, align 4
  br label %.backedge

58:                                               ; preds = %12
  %59 = load i32, i32* @x, align 4
  %60 = load i32, i32* @y, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 1803668709, i32 -1616539340
  br label %.backedge

68:                                               ; preds = %12
  %.neg82 = add i32 %.076, 1
  %69 = load i32, i32* @x, align 4
  %70 = load i32, i32* @y, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 81632748, i32 -1616539340
  br label %.backedge

78:                                               ; preds = %12
  br label %.backedge

79:                                               ; preds = %12
  %80 = load i32, i32* @x, align 4
  %81 = load i32, i32* @y, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 144814322, i32 -1976467639
  br label %.backedge

89:                                               ; preds = %12
  %90 = load i32, i32* @x, align 4
  %91 = load i32, i32* @y, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 -1585354447, i32 -1976467639
  br label %.backedge

99:                                               ; preds = %12
  br label %.backedge

100:                                              ; preds = %12
  %101 = load i32, i32* @n, align 4
  %102 = icmp slt i32 %.074, %101
  %103 = select i1 %102, i32 1563770705, i32 -272156465
  br label %.backedge

104:                                              ; preds = %12
  br label %.backedge

105:                                              ; preds = %12
  %106 = load i32, i32* @n, align 4
  %107 = icmp slt i32 %.072, %106
  %108 = select i1 %107, i32 1491538835, i32 2083664438
  br label %.backedge

109:                                              ; preds = %12
  br label %.backedge

110:                                              ; preds = %12
  %111 = load i32, i32* @n, align 4
  %112 = icmp slt i32 %.070, %111
  %113 = select i1 %112, i32 -1158074608, i32 -452780828
  br label %.backedge

114:                                              ; preds = %12
  %115 = load i32, i32* @x, align 4
  %116 = load i32, i32* @y, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 813571335, i32 -183042628
  br label %.backedge

124:                                              ; preds = %12
  %125 = sext i32 %.072 to i64
  %126 = sext i32 %.074 to i64
  %127 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %125, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = icmp ne i32 %128, 2000000000
  store i1 %129, i1* %5, align 1
  %130 = load i32, i32* @x, align 4
  %131 = load i32, i32* @y, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 583975085, i32 -183042628
  br label %.backedge

139:                                              ; preds = %12
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %140 = select i1 %.0..0..0., i32 -735106088, i32 2057148427
  br label %.backedge

141:                                              ; preds = %12
  %142 = load i32, i32* @x, align 4
  %143 = load i32, i32* @y, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -1911358638, i32 47473929
  br label %.backedge

151:                                              ; preds = %12
  %152 = sext i32 %.074 to i64
  %153 = sext i32 %.070 to i64
  %154 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %152, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = icmp ne i32 %155, 2000000000
  store i1 %156, i1* %4, align 1
  %157 = load i32, i32* @x, align 4
  %158 = load i32, i32* @y, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 252944762, i32 47473929
  br label %.backedge

166:                                              ; preds = %12
  %.0..0..0.60 = load volatile i1, i1* %4, align 1
  %167 = select i1 %.0..0..0.60, i32 17902978, i32 2057148427
  br label %.backedge

168:                                              ; preds = %12
  %169 = load i32, i32* @x, align 4
  %170 = load i32, i32* @y, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 -1822404802, i32 782464205
  br label %.backedge

178:                                              ; preds = %12
  %179 = sext i32 %.072 to i64
  %180 = sext i32 %.074 to i64
  %181 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %179, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = sext i32 %.070 to i64
  %185 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %180, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = add nsw i64 %187, %183
  store i64 %188, i64* %9, align 8
  %189 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %179, i64 %184
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  store i64 %191, i64* %10, align 8
  %192 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %9, i64* nonnull dereferenceable(8) %10)
  %193 = load i64, i64* %192, align 8
  %194 = trunc i64 %193 to i32
  store i32 %194, i32* %189, align 4
  %195 = load i32, i32* @x, align 4
  %196 = load i32, i32* @y, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 -1372659527, i32 782464205
  br label %.backedge

204:                                              ; preds = %12
  br label %.backedge

205:                                              ; preds = %12
  br label %.backedge

206:                                              ; preds = %12
  %207 = load i32, i32* @x, align 4
  %208 = load i32, i32* @y, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 550720671, i32 -1016630198
  br label %.backedge

216:                                              ; preds = %12
  %217 = add i32 %.070, 1
  %218 = load i32, i32* @x, align 4
  %219 = load i32, i32* @y, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -991458926, i32 -1016630198
  br label %.backedge

227:                                              ; preds = %12
  br label %.backedge

228:                                              ; preds = %12
  br label %.backedge

229:                                              ; preds = %12
  %230 = add i32 %.072, 1
  br label %.backedge

231:                                              ; preds = %12
  br label %.backedge

232:                                              ; preds = %12
  %233 = load i32, i32* @x, align 4
  %234 = load i32, i32* @y, align 4
  %235 = add i32 %233, -1
  %236 = mul i32 %235, %233
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %239, %238
  %241 = select i1 %240, i32 29804764, i32 2090709960
  br label %.backedge

242:                                              ; preds = %12
  %243 = add i32 %.074, 1
  %244 = load i32, i32* @x, align 4
  %245 = load i32, i32* @y, align 4
  %246 = add i32 %244, -1
  %247 = mul i32 %246, %244
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %250, %249
  %252 = select i1 %251, i32 576195436, i32 2090709960
  br label %.backedge

253:                                              ; preds = %12
  br label %.backedge

254:                                              ; preds = %12
  br label %.backedge

255:                                              ; preds = %12
  %256 = load i32, i32* @n, align 4
  %257 = icmp slt i32 %.068, %256
  %258 = select i1 %257, i32 -979746258, i32 -1704115132
  br label %.backedge

259:                                              ; preds = %12
  %260 = sext i32 %.068 to i64
  %261 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %260, i64 %260
  %262 = load i32, i32* %261, align 4
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 -125053809, i32 -1236898040
  br label %.backedge

265:                                              ; preds = %12
  %266 = load i32, i32* @x, align 4
  %267 = load i32, i32* @y, align 4
  %268 = add i32 %266, -1
  %269 = mul i32 %268, %266
  %270 = and i32 %269, 1
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %272, %271
  %274 = select i1 %273, i32 -1391157756, i32 1984048406
  br label %.backedge

275:                                              ; preds = %12
  %276 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0))
  %277 = load i32, i32* @x, align 4
  %278 = load i32, i32* @y, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 -1203952338, i32 1984048406
  br label %.backedge

286:                                              ; preds = %12
  br label %.backedge

287:                                              ; preds = %12
  %288 = load i32, i32* @x, align 4
  %289 = load i32, i32* @y, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 56743031, i32 1142388002
  br label %.backedge

297:                                              ; preds = %12
  %298 = load i32, i32* @x, align 4
  %299 = load i32, i32* @y, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 1552194685, i32 1142388002
  br label %.backedge

307:                                              ; preds = %12
  br label %.backedge

308:                                              ; preds = %12
  %309 = load i32, i32* @x, align 4
  %310 = load i32, i32* @y, align 4
  %311 = add i32 %309, -1
  %312 = mul i32 %311, %309
  %313 = and i32 %312, 1
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %315, %314
  %317 = select i1 %316, i32 -234309105, i32 -571041382
  br label %.backedge

318:                                              ; preds = %12
  %319 = add i32 %.068, 1
  %320 = load i32, i32* @x, align 4
  %321 = load i32, i32* @y, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 1487000027, i32 -571041382
  br label %.backedge

329:                                              ; preds = %12
  br label %.backedge

330:                                              ; preds = %12
  br label %.backedge

331:                                              ; preds = %12
  %332 = load i32, i32* @x, align 4
  %333 = load i32, i32* @y, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 -1164154545, i32 -1477580015
  br label %.backedge

341:                                              ; preds = %12
  %342 = load i32, i32* @n, align 4
  %343 = icmp slt i32 %.066, %342
  store i1 %343, i1* %3, align 1
  %344 = load i32, i32* @x, align 4
  %345 = load i32, i32* @y, align 4
  %346 = add i32 %344, -1
  %347 = mul i32 %346, %344
  %348 = and i32 %347, 1
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %350, %349
  %352 = select i1 %351, i32 1684727804, i32 -1477580015
  br label %.backedge

353:                                              ; preds = %12
  %.0..0..0.61 = load volatile i1, i1* %3, align 1
  %354 = select i1 %.0..0..0.61, i32 -371457348, i32 -230081640
  br label %.backedge

355:                                              ; preds = %12
  br label %.backedge

356:                                              ; preds = %12
  %357 = load i32, i32* @x, align 4
  %358 = load i32, i32* @y, align 4
  %359 = add i32 %357, -1
  %360 = mul i32 %359, %357
  %361 = and i32 %360, 1
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %363, %362
  %365 = select i1 %364, i32 644424188, i32 577525033
  br label %.backedge

366:                                              ; preds = %12
  %367 = load i32, i32* @n, align 4
  %368 = icmp slt i32 %.064, %367
  store i1 %368, i1* %2, align 1
  %369 = load i32, i32* @x, align 4
  %370 = load i32, i32* @y, align 4
  %371 = add i32 %369, -1
  %372 = mul i32 %371, %369
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %375, %374
  %377 = select i1 %376, i32 -1619171100, i32 577525033
  br label %.backedge

378:                                              ; preds = %12
  %.0..0..0.62 = load volatile i1, i1* %2, align 1
  %379 = select i1 %.0..0..0.62, i32 2124948782, i32 513100242
  br label %.backedge

380:                                              ; preds = %12
  %.not = icmp eq i32 %.064, 0
  %381 = select i1 %.not, i32 2033740721, i32 -178673759
  br label %.backedge

382:                                              ; preds = %12
  %383 = load i32, i32* @x, align 4
  %384 = load i32, i32* @y, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 -1875488652, i32 -238463067
  br label %.backedge

392:                                              ; preds = %12
  %393 = call i32 @putchar(i32 32)
  %394 = load i32, i32* @x, align 4
  %395 = load i32, i32* @y, align 4
  %396 = add i32 %394, -1
  %397 = mul i32 %396, %394
  %398 = and i32 %397, 1
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %400, %399
  %402 = select i1 %401, i32 -1801451248, i32 -238463067
  br label %.backedge

403:                                              ; preds = %12
  br label %.backedge

404:                                              ; preds = %12
  %405 = sext i32 %.066 to i64
  %406 = sext i32 %.064 to i64
  %407 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %405, i64 %406
  %408 = load i32, i32* %407, align 4
  %409 = icmp eq i32 %408, 2000000000
  %410 = select i1 %409, i32 -346103091, i32 1888312734
  br label %.backedge

411:                                              ; preds = %12
  %412 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  br label %.backedge

413:                                              ; preds = %12
  %414 = sext i32 %.066 to i64
  %415 = sext i32 %.064 to i64
  %416 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %414, i64 %415
  %417 = load i32, i32* %416, align 4
  %418 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 %417)
  br label %.backedge

419:                                              ; preds = %12
  br label %.backedge

420:                                              ; preds = %12
  %421 = add i32 %.064, 1
  br label %.backedge

422:                                              ; preds = %12
  %423 = call i32 @putchar(i32 10)
  br label %.backedge

424:                                              ; preds = %12
  %425 = add i32 %.066, 1
  br label %.backedge

426:                                              ; preds = %12
  %427 = load i32, i32* @x, align 4
  %428 = load i32, i32* @y, align 4
  %429 = add i32 %427, -1
  %430 = mul i32 %429, %427
  %431 = and i32 %430, 1
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %433, %432
  %435 = select i1 %434, i32 2043431322, i32 -1323365903
  br label %.backedge

436:                                              ; preds = %12
  %437 = load i32, i32* @x, align 4
  %438 = load i32, i32* @y, align 4
  %439 = add i32 %437, -1
  %440 = mul i32 %439, %437
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %443, %442
  %445 = select i1 %444, i32 -134118107, i32 -1323365903
  br label %.backedge

446:                                              ; preds = %12
  br label %.backedge

447:                                              ; preds = %12
  %448 = load i32, i32* @x, align 4
  %449 = load i32, i32* @y, align 4
  %450 = add i32 %448, -1
  %451 = mul i32 %450, %448
  %452 = and i32 %451, 1
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %454, %453
  %456 = select i1 %455, i32 -811943172, i32 1458697632
  br label %.backedge

457:                                              ; preds = %12
  store i32 0, i32* %1, align 4
  %458 = load i32, i32* @x, align 4
  %459 = load i32, i32* @y, align 4
  %460 = add i32 %458, -1
  %461 = mul i32 %460, %458
  %462 = and i32 %461, 1
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %464, %463
  %466 = select i1 %465, i32 -99071040, i32 1458697632
  br label %.backedge

467:                                              ; preds = %12
  %.0..0..0.63 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.63

468:                                              ; preds = %12
  %469 = add i32 %.078, 1
  br label %.backedge

470:                                              ; preds = %12
  %.neg = add i32 %.076, 1
  br label %.backedge

471:                                              ; preds = %12
  br label %.backedge

472:                                              ; preds = %12
  br label %.backedge

473:                                              ; preds = %12
  br label %.backedge

474:                                              ; preds = %12
  %475 = sext i32 %.072 to i64
  %476 = sext i32 %.074 to i64
  %477 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %475, i64 %476
  %478 = load i32, i32* %477, align 4
  %479 = sext i32 %478 to i64
  %480 = sext i32 %.070 to i64
  %481 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %476, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = sext i32 %482 to i64
  %484 = add nsw i64 %483, %479
  store i64 %484, i64* %9, align 8
  %485 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* @d, i64 0, i64 %475, i64 %480
  %486 = load i32, i32* %485, align 4
  %487 = sext i32 %486 to i64
  store i64 %487, i64* %10, align 8
  %488 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %9, i64* nonnull dereferenceable(8) %10)
  %489 = load i64, i64* %488, align 8
  %490 = trunc i64 %489 to i32
  store i32 %490, i32* %485, align 4
  br label %.backedge

491:                                              ; preds = %12
  %492 = add i32 %.070, 1
  br label %.backedge

493:                                              ; preds = %12
  %494 = add i32 %.074, 1
  br label %.backedge

495:                                              ; preds = %12
  %496 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0))
  br label %.backedge

497:                                              ; preds = %12
  br label %.backedge

498:                                              ; preds = %12
  %499 = add i32 %.068, 1
  br label %.backedge

500:                                              ; preds = %12
  br label %.backedge

501:                                              ; preds = %12
  br label %.backedge

502:                                              ; preds = %12
  %503 = call i32 @putchar(i32 32)
  br label %.backedge

504:                                              ; preds = %12
  br label %.backedge

505:                                              ; preds = %12
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPiiiET_S1_T0_RKT1_(i32* %0, i32 %1, i32* dereferenceable(4) %2) local_unnamed_addr #2 comdat {
  %4 = tail call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %0)
  %5 = tail call i32* @_ZSt10__fill_n_aIPiiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %4, i32 %1, i32* nonnull dereferenceable(4) %2)
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #3 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i64**, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.7, align 4
  %11 = load i32, i32* @y.8, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 1668537408, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1668537408, label %18
    i32 1792677286, label %21
    i32 2085599862, label %39
    i32 254666219, label %41
    i32 1047464233, label %43
    i32 1576788778, label %45
    i32 -728269038, label %55
    i32 -1481286271, label %66
    i32 889855465, label %67
    i32 1791617232, label %68
  ]

.backedge:                                        ; preds = %17, %68, %67, %55, %45, %43, %41, %39, %21, %18
  %.0.be = phi i32 [ %.0, %17 ], [ -728269038, %68 ], [ 1792677286, %67 ], [ %65, %55 ], [ %54, %45 ], [ 1576788778, %43 ], [ 1576788778, %41 ], [ %40, %39 ], [ %38, %21 ], [ %20, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %.0..0..0.1 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0., %.0..0..0.1
  %20 = select i1 %19, i32 1792677286, i32 889855465
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %7, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %6, align 8
  %24 = alloca i64*, align 8
  store i64** %24, i64*** %5, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %6, align 8
  store i64* %0, i64** %.0..0..0.6, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %5, align 8
  store i64* %1, i64** %.0..0..0.9, align 8
  %.0..0..0.10 = load volatile i64**, i64*** %5, align 8
  %25 = load i64*, i64** %.0..0..0.10, align 8
  %26 = load i64, i64* %25, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %6, align 8
  %27 = load i64*, i64** %.0..0..0.7, align 8
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %26, %28
  store i1 %29, i1* %4, align 1
  %30 = load i32, i32* @x.7, align 4
  %31 = load i32, i32* @y.8, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 2085599862, i32 889855465
  br label %.backedge

39:                                               ; preds = %17
  %.0..0..0.12 = load volatile i1, i1* %4, align 1
  %40 = select i1 %.0..0..0.12, i32 254666219, i32 1047464233
  br label %.backedge

41:                                               ; preds = %17
  %.0..0..0.11 = load volatile i64**, i64*** %5, align 8
  %42 = load i64*, i64** %.0..0..0.11, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %7, align 8
  store i64* %42, i64** %.0..0..0.2, align 8
  br label %.backedge

43:                                               ; preds = %17
  %.0..0..0.8 = load volatile i64**, i64*** %6, align 8
  %44 = load i64*, i64** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %7, align 8
  store i64* %44, i64** %.0..0..0.3, align 8
  br label %.backedge

45:                                               ; preds = %17
  %46 = load i32, i32* @x.7, align 4
  %47 = load i32, i32* @y.8, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -728269038, i32 1791617232
  br label %.backedge

55:                                               ; preds = %17
  %.0..0..0.4 = load volatile i64**, i64*** %7, align 8
  %56 = load i64*, i64** %.0..0..0.4, align 8
  store i64* %56, i64** %3, align 8
  %57 = load i32, i32* @x.7, align 4
  %58 = load i32, i32* @y.8, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 -1481286271, i32 1791617232
  br label %.backedge

66:                                               ; preds = %17
  %.0..0..0.13 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.13

67:                                               ; preds = %17
  br label %.backedge

68:                                               ; preds = %17
  %.0..0..0.5 = load volatile i64**, i64*** %7, align 8
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPiiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %0, i32 %1, i32* dereferenceable(4) %2) local_unnamed_addr #3 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.9, align 4
  %11 = load i32, i32* @y.10, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %3
  %.0 = phi i32 [ 1340920432, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1340920432, label %18
    i32 12037806, label %21
    i32 960113391, label %35
    i32 -539192202, label %36
    i32 80289865, label %40
    i32 -355261013, label %43
    i32 313227519, label %48
    i32 -1560570128, label %58
    i32 -156098452, label %69
    i32 464286739, label %70
    i32 512365126, label %71
  ]

.backedge:                                        ; preds = %17, %71, %70, %58, %48, %43, %40, %36, %35, %21, %18
  %.0.be = phi i32 [ %.0, %17 ], [ -1560570128, %71 ], [ 12037806, %70 ], [ %68, %58 ], [ %57, %48 ], [ -539192202, %43 ], [ -355261013, %40 ], [ %39, %36 ], [ -539192202, %35 ], [ %34, %21 ], [ %20, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %.0..0..0.1 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0., %.0..0..0.1
  %20 = select i1 %19, i32 12037806, i32 464286739
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i32*, align 8
  store i32** %22, i32*** %7, align 8
  %23 = alloca i32, align 4
  store i32* %23, i32** %6, align 8
  %24 = alloca i32, align 4
  store i32* %24, i32** %5, align 8
  %.0..0..0.2 = load volatile i32**, i32*** %7, align 8
  store i32* %0, i32** %.0..0..0.2, align 8
  %25 = load i32, i32* %2, align 4
  %.0..0..0.8 = load volatile i32*, i32** %6, align 8
  store i32 %25, i32* %.0..0..0.8, align 4
  %.0..0..0.10 = load volatile i32*, i32** %5, align 8
  store i32 %1, i32* %.0..0..0.10, align 4
  %26 = load i32, i32* @x.9, align 4
  %27 = load i32, i32* @y.10, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 960113391, i32 464286739
  br label %.backedge

35:                                               ; preds = %17
  br label %.backedge

36:                                               ; preds = %17
  %.0..0..0.11 = load volatile i32*, i32** %5, align 8
  %37 = load i32, i32* %.0..0..0.11, align 4
  %38 = icmp sgt i32 %37, 0
  %39 = select i1 %38, i32 80289865, i32 313227519
  br label %.backedge

40:                                               ; preds = %17
  %.0..0..0.9 = load volatile i32*, i32** %6, align 8
  %41 = load i32, i32* %.0..0..0.9, align 4
  %.0..0..0.3 = load volatile i32**, i32*** %7, align 8
  %42 = load i32*, i32** %.0..0..0.3, align 8
  store i32 %41, i32* %42, align 4
  br label %.backedge

43:                                               ; preds = %17
  %.0..0..0.12 = load volatile i32*, i32** %5, align 8
  %44 = load i32, i32* %.0..0..0.12, align 4
  %45 = add i32 %44, -1
  %.0..0..0.13 = load volatile i32*, i32** %5, align 8
  store i32 %45, i32* %.0..0..0.13, align 4
  %.0..0..0.4 = load volatile i32**, i32*** %7, align 8
  %46 = load i32*, i32** %.0..0..0.4, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 1
  %.0..0..0.5 = load volatile i32**, i32*** %7, align 8
  store i32* %47, i32** %.0..0..0.5, align 8
  br label %.backedge

48:                                               ; preds = %17
  %49 = load i32, i32* @x.9, align 4
  %50 = load i32, i32* @y.10, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 -1560570128, i32 512365126
  br label %.backedge

58:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32**, i32*** %7, align 8
  %59 = load i32*, i32** %.0..0..0.6, align 8
  store i32* %59, i32** %4, align 8
  %60 = load i32, i32* @x.9, align 4
  %61 = load i32, i32* @y.10, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 -156098452, i32 512365126
  br label %.backedge

69:                                               ; preds = %17
  %.0..0..0.14 = load volatile i32*, i32** %4, align 8
  ret i32* %.0..0..0.14

70:                                               ; preds = %17
  br label %.backedge

71:                                               ; preds = %17
  %.0..0..0.7 = load volatile i32**, i32*** %7, align 8
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %0) local_unnamed_addr #2 comdat {
  %2 = tail call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %0)
  ret i32* %2
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %0) local_unnamed_addr #3 comdat align 2 {
  ret i32* %0
}

attributes #0 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
