; ModuleID = 'build_ollvm/programs/p00100/s360613484.ll'
source_filename = "Project_CodeNet_C++1400/p00100/s360613484.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [3 x i8] c"NA\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s360613484.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca [4000 x [3 x i32]], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  br label %12

12:                                               ; preds = %.backedge, %0
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ 650311665, %0 ], [ %.055.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.055, label %.backedge [
    i32 650311665, label %13
    i32 -1832483512, label %18
    i32 942565114, label %19
    i32 889921003, label %29
    i32 -1774222924, label %39
    i32 832853301, label %40
    i32 1271283462, label %43
    i32 -1506366299, label %49
    i32 438969514, label %59
    i32 1146898879, label %70
    i32 -2069749990, label %71
    i32 35967899, label %72
    i32 -707678750, label %82
    i32 26691840, label %94
    i32 1638879231, label %96
    i32 66933252, label %102
    i32 1215781431, label %107
    i32 1702148957, label %112
    i32 58075545, label %120
    i32 -908433502, label %130
    i32 1520862982, label %149
    i32 -1764763147, label %150
    i32 406406769, label %160
    i32 -1651673595, label %170
    i32 -219369820, label %171
    i32 230490751, label %181
    i32 321257990, label %197
    i32 -938455333, label %199
    i32 -1857175577, label %205
    i32 433019878, label %206
    i32 -140959067, label %216
    i32 -2010663357, label %227
    i32 1310716841, label %228
    i32 1505425519, label %238
    i32 1540799268, label %248
    i32 -2052054923, label %249
    i32 318444072, label %252
    i32 -468353425, label %253
    i32 -417579521, label %256
    i32 -1136756303, label %265
    i32 1747174090, label %280
    i32 1462989973, label %281
    i32 -273427924, label %282
    i32 614892186, label %292
    i32 -1597146731, label %302
    i32 1604877274, label %303
    i32 1648776726, label %304
    i32 -561225497, label %314
    i32 -1943996664, label %324
    i32 -1785399899, label %325
    i32 813363429, label %335
    i32 -1707177165, label %349
    i32 -353411605, label %351
    i32 1297625482, label %353
    i32 8154045, label %363
    i32 1017729157, label %373
    i32 -508436503, label %375
    i32 379566729, label %385
    i32 -861658562, label %399
    i32 96103329, label %401
    i32 1530556851, label %411
    i32 -35127082, label %427
    i32 2124054282, label %428
    i32 -996212375, label %438
    i32 1927846823, label %448
    i32 1555706218, label %449
    i32 906561051, label %459
    i32 1026333977, label %470
    i32 -1938536298, label %471
    i32 -1900300334, label %481
    i32 1428118369, label %492
    i32 -1270101382, label %494
    i32 92878569, label %497
    i32 1185796228, label %498
    i32 1426810185, label %499
    i32 -1557349809, label %500
    i32 -1607519466, label %501
    i32 -1219194552, label %502
    i32 1489209001, label %512
    i32 -1001909608, label %513
    i32 1874976354, label %514
    i32 -807523105, label %516
    i32 1239909068, label %517
    i32 901727735, label %518
    i32 -72132051, label %519
    i32 -274551327, label %520
    i32 1243841329, label %521
    i32 -740110133, label %522
    i32 1117222712, label %528
    i32 -167321927, label %529
    i32 -86223962, label %531
  ]

.backedge:                                        ; preds = %12, %531, %529, %528, %522, %521, %520, %519, %518, %517, %516, %514, %513, %512, %502, %501, %500, %499, %497, %494, %492, %481, %471, %470, %459, %449, %448, %438, %428, %427, %411, %401, %399, %385, %375, %373, %363, %353, %351, %349, %335, %325, %324, %314, %304, %303, %302, %292, %282, %281, %280, %265, %256, %253, %252, %249, %248, %238, %228, %227, %216, %206, %205, %199, %197, %181, %171, %170, %160, %150, %149, %130, %120, %112, %107, %102, %96, %94, %82, %72, %71, %70, %59, %49, %43, %40, %39, %29, %19, %18, %13
  %.069.be = phi i32 [ %.069, %12 ], [ %.069, %531 ], [ %.069, %529 ], [ %.069, %528 ], [ %.069, %522 ], [ %.069, %521 ], [ %.069, %520 ], [ %.069, %519 ], [ %.069, %518 ], [ %.069, %517 ], [ 0, %516 ], [ %.069, %514 ], [ %.069, %513 ], [ %.069, %512 ], [ %.069, %502 ], [ %.069, %501 ], [ %.069, %500 ], [ %.069, %499 ], [ %.069, %497 ], [ %.069, %494 ], [ %.069, %492 ], [ %.069, %481 ], [ %.069, %471 ], [ %.069, %470 ], [ %.069, %459 ], [ %.069, %449 ], [ %.069, %448 ], [ %.069, %438 ], [ %.069, %428 ], [ %.069, %427 ], [ %.069, %411 ], [ %.069, %401 ], [ %.069, %399 ], [ %.069, %385 ], [ %.069, %375 ], [ %.069, %373 ], [ %.069, %363 ], [ %.069, %353 ], [ %.069, %351 ], [ %.069, %349 ], [ %.069, %335 ], [ %.069, %325 ], [ %.069, %324 ], [ %.069, %314 ], [ %.069, %304 ], [ %.neg72, %303 ], [ %.069, %302 ], [ %.069, %292 ], [ %.069, %282 ], [ %.069, %281 ], [ %.069, %280 ], [ %.069, %265 ], [ %.069, %256 ], [ %.069, %253 ], [ %.069, %252 ], [ %.069, %249 ], [ %.069, %248 ], [ 0, %238 ], [ %.069, %228 ], [ %.069, %227 ], [ %.069, %216 ], [ %.069, %206 ], [ %.069, %205 ], [ %.069, %199 ], [ %.069, %197 ], [ %.069, %181 ], [ %.069, %171 ], [ %.069, %170 ], [ %.069, %160 ], [ %.069, %150 ], [ %.069, %149 ], [ %.069, %130 ], [ %.069, %120 ], [ %.069, %112 ], [ %.069, %107 ], [ %.069, %102 ], [ %.069, %96 ], [ %.069, %94 ], [ %.069, %82 ], [ %.069, %72 ], [ %.069, %71 ], [ %.069, %70 ], [ %.069, %59 ], [ %.069, %49 ], [ %.069, %43 ], [ %.069, %40 ], [ %.069, %39 ], [ %.069, %29 ], [ %.069, %19 ], [ %.069, %18 ], [ %.069, %13 ]
  %.067.be = phi i32 [ %.067, %12 ], [ %.067, %531 ], [ %.067, %529 ], [ %.067, %528 ], [ %.067, %522 ], [ %.067, %521 ], [ %.067, %520 ], [ %.067, %519 ], [ %.067, %518 ], [ %.067, %517 ], [ %.067, %516 ], [ %.067, %514 ], [ %.067, %513 ], [ %.067, %512 ], [ %.067, %502 ], [ %.067, %501 ], [ %.067, %500 ], [ %.067, %499 ], [ %.067, %497 ], [ %.067, %494 ], [ %.067, %492 ], [ %.067, %481 ], [ %.067, %471 ], [ %.067, %470 ], [ %.067, %459 ], [ %.067, %449 ], [ %.067, %448 ], [ %.067, %438 ], [ %.067, %428 ], [ %.067, %427 ], [ %.067, %411 ], [ %.067, %401 ], [ %.067, %399 ], [ %.067, %385 ], [ %.067, %375 ], [ %.067, %373 ], [ %.067, %363 ], [ %.067, %353 ], [ %.067, %351 ], [ %.067, %349 ], [ %.067, %335 ], [ %.067, %325 ], [ %.067, %324 ], [ %.067, %314 ], [ %.067, %304 ], [ %.067, %303 ], [ %.067, %302 ], [ %.067, %292 ], [ %.067, %282 ], [ %.neg73, %281 ], [ %.067, %280 ], [ %.067, %265 ], [ %.067, %256 ], [ %.067, %253 ], [ %.neg74, %252 ], [ %.067, %249 ], [ %.067, %248 ], [ %.067, %238 ], [ %.067, %228 ], [ %.067, %227 ], [ %.067, %216 ], [ %.067, %206 ], [ %.067, %205 ], [ %.067, %199 ], [ %.067, %197 ], [ %.067, %181 ], [ %.067, %171 ], [ %.067, %170 ], [ %.067, %160 ], [ %.067, %150 ], [ %.067, %149 ], [ %.067, %130 ], [ %.067, %120 ], [ %.067, %112 ], [ %.067, %107 ], [ %.067, %102 ], [ %.067, %96 ], [ %.067, %94 ], [ %.067, %82 ], [ %.067, %72 ], [ %.067, %71 ], [ %.067, %70 ], [ %.067, %59 ], [ %.067, %49 ], [ %.067, %43 ], [ %.067, %40 ], [ %.067, %39 ], [ %.067, %29 ], [ %.067, %19 ], [ %.067, %18 ], [ %.067, %13 ]
  %.065.be = phi i32 [ %.065, %12 ], [ %.065, %531 ], [ %.065, %529 ], [ %.065, %528 ], [ %.065, %522 ], [ %.065, %521 ], [ %.065, %520 ], [ %.065, %519 ], [ %.065, %518 ], [ %.065, %517 ], [ %.065, %516 ], [ %515, %514 ], [ %.065, %513 ], [ %.065, %512 ], [ %.065, %502 ], [ %.065, %501 ], [ %.065, %500 ], [ %.065, %499 ], [ %.065, %497 ], [ %.065, %494 ], [ %.065, %492 ], [ %.065, %481 ], [ %.065, %471 ], [ %.065, %470 ], [ %.065, %459 ], [ %.065, %449 ], [ %.065, %448 ], [ %.065, %438 ], [ %.065, %428 ], [ %.065, %427 ], [ %.065, %411 ], [ %.065, %401 ], [ %.065, %399 ], [ %.065, %385 ], [ %.065, %375 ], [ %.065, %373 ], [ %.065, %363 ], [ %.065, %353 ], [ %.065, %351 ], [ %.065, %349 ], [ %.065, %335 ], [ %.065, %325 ], [ %.065, %324 ], [ %.065, %314 ], [ %.065, %304 ], [ %.065, %303 ], [ %.065, %302 ], [ %.065, %292 ], [ %.065, %282 ], [ %.065, %281 ], [ %.065, %280 ], [ %.065, %265 ], [ %.065, %256 ], [ %.065, %253 ], [ %.065, %252 ], [ %.065, %249 ], [ %.065, %248 ], [ %.065, %238 ], [ %.065, %228 ], [ %.065, %227 ], [ %217, %216 ], [ %.065, %206 ], [ %.065, %205 ], [ %.065, %199 ], [ %.065, %197 ], [ %.065, %181 ], [ %.065, %171 ], [ %.065, %170 ], [ %.065, %160 ], [ %.065, %150 ], [ %.065, %149 ], [ %.065, %130 ], [ %.065, %120 ], [ %.065, %112 ], [ %.065, %107 ], [ %.065, %102 ], [ %.065, %96 ], [ %.065, %94 ], [ %.065, %82 ], [ %.065, %72 ], [ 0, %71 ], [ %.065, %70 ], [ %.065, %59 ], [ %.065, %49 ], [ %.065, %43 ], [ %.065, %40 ], [ %.065, %39 ], [ %.065, %29 ], [ %.065, %19 ], [ %.065, %18 ], [ %.065, %13 ]
  %.063.be = phi i32 [ %.063, %12 ], [ %.063, %531 ], [ %.063, %529 ], [ %.063, %528 ], [ %.063, %522 ], [ %.063, %521 ], [ %.063, %520 ], [ %.063, %519 ], [ %.063, %518 ], [ %.063, %517 ], [ %.063, %516 ], [ %.063, %514 ], [ %.063, %513 ], [ %.063, %512 ], [ %.063, %502 ], [ %.063, %501 ], [ %.063, %500 ], [ %.063, %499 ], [ %.063, %497 ], [ %.063, %494 ], [ %.063, %492 ], [ %.063, %481 ], [ %.063, %471 ], [ %.063, %470 ], [ %.063, %459 ], [ %.063, %449 ], [ %.063, %448 ], [ %.063, %438 ], [ %.063, %428 ], [ %.063, %427 ], [ %.063, %411 ], [ %.063, %401 ], [ %.063, %399 ], [ %.063, %385 ], [ %.063, %375 ], [ %.063, %373 ], [ %.063, %363 ], [ %.063, %353 ], [ %.063, %351 ], [ %.063, %349 ], [ %.063, %335 ], [ %.063, %325 ], [ %.063, %324 ], [ %.063, %314 ], [ %.063, %304 ], [ %.063, %303 ], [ %.063, %302 ], [ %.063, %292 ], [ %.063, %282 ], [ %.063, %281 ], [ %.063, %280 ], [ %.063, %265 ], [ %.063, %256 ], [ %.063, %253 ], [ %.063, %252 ], [ %.063, %249 ], [ %.063, %248 ], [ %.063, %238 ], [ %.063, %228 ], [ %.063, %227 ], [ %.063, %216 ], [ %.063, %206 ], [ %.063, %205 ], [ %204, %199 ], [ %.063, %197 ], [ %.063, %181 ], [ %.063, %171 ], [ %.063, %170 ], [ %.063, %160 ], [ %.063, %150 ], [ %.063, %149 ], [ %.063, %130 ], [ %.063, %120 ], [ %.063, %112 ], [ %.063, %107 ], [ %.063, %102 ], [ %.063, %96 ], [ %.063, %94 ], [ %.063, %82 ], [ %.063, %72 ], [ 1, %71 ], [ %.063, %70 ], [ %.063, %59 ], [ %.063, %49 ], [ %.063, %43 ], [ %.063, %40 ], [ %.063, %39 ], [ %.063, %29 ], [ %.063, %19 ], [ %.063, %18 ], [ %.063, %13 ]
  %.061.be = phi i32 [ %.061, %12 ], [ %.061, %531 ], [ %.061, %529 ], [ %.061, %528 ], [ %.061, %522 ], [ %.061, %521 ], [ %.061, %520 ], [ %.061, %519 ], [ %.061, %518 ], [ %.061, %517 ], [ %.061, %516 ], [ %.061, %514 ], [ %.061, %513 ], [ %.061, %512 ], [ %.061, %502 ], [ %.061, %501 ], [ %.neg71, %500 ], [ 0, %499 ], [ %.061, %497 ], [ %.061, %494 ], [ %.061, %492 ], [ %.061, %481 ], [ %.061, %471 ], [ %.061, %470 ], [ %.061, %459 ], [ %.061, %449 ], [ %.061, %448 ], [ %.061, %438 ], [ %.061, %428 ], [ %.061, %427 ], [ %.061, %411 ], [ %.061, %401 ], [ %.061, %399 ], [ %.061, %385 ], [ %.061, %375 ], [ %.061, %373 ], [ %.061, %363 ], [ %.061, %353 ], [ %.061, %351 ], [ %.061, %349 ], [ %.061, %335 ], [ %.061, %325 ], [ %.061, %324 ], [ %.061, %314 ], [ %.061, %304 ], [ %.061, %303 ], [ %.061, %302 ], [ %.061, %292 ], [ %.061, %282 ], [ %.061, %281 ], [ %.061, %280 ], [ %.061, %265 ], [ %.061, %256 ], [ %.061, %253 ], [ %.061, %252 ], [ %.061, %249 ], [ %.061, %248 ], [ %.061, %238 ], [ %.061, %228 ], [ %.061, %227 ], [ %.061, %216 ], [ %.061, %206 ], [ %.061, %205 ], [ %.061, %199 ], [ %.061, %197 ], [ %.061, %181 ], [ %.061, %171 ], [ %.061, %170 ], [ %.061, %160 ], [ %.061, %150 ], [ %.061, %149 ], [ %.061, %130 ], [ %.061, %120 ], [ %.061, %112 ], [ %.061, %107 ], [ %.061, %102 ], [ %.061, %96 ], [ %.061, %94 ], [ %.061, %82 ], [ %.061, %72 ], [ %.061, %71 ], [ %.061, %70 ], [ %60, %59 ], [ %.061, %49 ], [ %.061, %43 ], [ %.061, %40 ], [ %.061, %39 ], [ 0, %29 ], [ %.061, %19 ], [ %.061, %18 ], [ %.061, %13 ]
  %.059.be = phi i32 [ %.059, %12 ], [ %.059, %531 ], [ %.059, %529 ], [ %.059, %528 ], [ %.neg, %522 ], [ %.059, %521 ], [ %.059, %520 ], [ %.059, %519 ], [ 0, %518 ], [ %.059, %517 ], [ %.059, %516 ], [ %.059, %514 ], [ %.059, %513 ], [ %.059, %512 ], [ %.059, %502 ], [ %.059, %501 ], [ %.059, %500 ], [ %.059, %499 ], [ %.059, %497 ], [ %.059, %494 ], [ %.059, %492 ], [ %.059, %481 ], [ %.059, %471 ], [ %.059, %470 ], [ %.059, %459 ], [ %.059, %449 ], [ %.059, %448 ], [ %.059, %438 ], [ %.059, %428 ], [ %.059, %427 ], [ %417, %411 ], [ %.059, %401 ], [ %.059, %399 ], [ %.059, %385 ], [ %.059, %375 ], [ %.059, %373 ], [ %.059, %363 ], [ %.059, %353 ], [ %.059, %351 ], [ %.059, %349 ], [ %.059, %335 ], [ %.059, %325 ], [ %.059, %324 ], [ 0, %314 ], [ %.059, %304 ], [ %.059, %303 ], [ %.059, %302 ], [ %.059, %292 ], [ %.059, %282 ], [ %.059, %281 ], [ %.059, %280 ], [ %.059, %265 ], [ %.059, %256 ], [ %.059, %253 ], [ %.059, %252 ], [ %.059, %249 ], [ %.059, %248 ], [ %.059, %238 ], [ %.059, %228 ], [ %.059, %227 ], [ %.059, %216 ], [ %.059, %206 ], [ %.059, %205 ], [ %.059, %199 ], [ %.059, %197 ], [ %.059, %181 ], [ %.059, %171 ], [ %.059, %170 ], [ %.059, %160 ], [ %.059, %150 ], [ %.059, %149 ], [ %.059, %130 ], [ %.059, %120 ], [ %.059, %112 ], [ %.059, %107 ], [ %.059, %102 ], [ %.059, %96 ], [ %.059, %94 ], [ %.059, %82 ], [ %.059, %72 ], [ %.059, %71 ], [ %.059, %70 ], [ %.059, %59 ], [ %.059, %49 ], [ %.059, %43 ], [ %.059, %40 ], [ %.059, %39 ], [ %.059, %29 ], [ %.059, %19 ], [ %.059, %18 ], [ %.059, %13 ]
  %.057.be = phi i32 [ %.057, %12 ], [ %.057, %531 ], [ %530, %529 ], [ %.057, %528 ], [ %.057, %522 ], [ %.057, %521 ], [ %.057, %520 ], [ %.057, %519 ], [ 0, %518 ], [ %.057, %517 ], [ %.057, %516 ], [ %.057, %514 ], [ %.057, %513 ], [ %.057, %512 ], [ %.057, %502 ], [ %.057, %501 ], [ %.057, %500 ], [ %.057, %499 ], [ %.057, %497 ], [ %.057, %494 ], [ %.057, %492 ], [ %.057, %481 ], [ %.057, %471 ], [ %.057, %470 ], [ %460, %459 ], [ %.057, %449 ], [ %.057, %448 ], [ %.057, %438 ], [ %.057, %428 ], [ %.057, %427 ], [ %.057, %411 ], [ %.057, %401 ], [ %.057, %399 ], [ %.057, %385 ], [ %.057, %375 ], [ %.057, %373 ], [ %.057, %363 ], [ %.057, %353 ], [ %.057, %351 ], [ %.057, %349 ], [ %.057, %335 ], [ %.057, %325 ], [ %.057, %324 ], [ 0, %314 ], [ %.057, %304 ], [ %.057, %303 ], [ %.057, %302 ], [ %.057, %292 ], [ %.057, %282 ], [ %.057, %281 ], [ %.057, %280 ], [ %.057, %265 ], [ %.057, %256 ], [ %.057, %253 ], [ %.057, %252 ], [ %.057, %249 ], [ %.057, %248 ], [ %.057, %238 ], [ %.057, %228 ], [ %.057, %227 ], [ %.057, %216 ], [ %.057, %206 ], [ %.057, %205 ], [ %.057, %199 ], [ %.057, %197 ], [ %.057, %181 ], [ %.057, %171 ], [ %.057, %170 ], [ %.057, %160 ], [ %.057, %150 ], [ %.057, %149 ], [ %.057, %130 ], [ %.057, %120 ], [ %.057, %112 ], [ %.057, %107 ], [ %.057, %102 ], [ %.057, %96 ], [ %.057, %94 ], [ %.057, %82 ], [ %.057, %72 ], [ %.057, %71 ], [ %.057, %70 ], [ %.057, %59 ], [ %.057, %49 ], [ %.057, %43 ], [ %.057, %40 ], [ %.057, %39 ], [ %.057, %29 ], [ %.057, %19 ], [ %.057, %18 ], [ %.057, %13 ]
  %.055.be = phi i32 [ %.055, %12 ], [ -1900300334, %531 ], [ 906561051, %529 ], [ -996212375, %528 ], [ 1530556851, %522 ], [ 379566729, %521 ], [ 8154045, %520 ], [ 813363429, %519 ], [ -561225497, %518 ], [ 614892186, %517 ], [ 1505425519, %516 ], [ -140959067, %514 ], [ 230490751, %513 ], [ 406406769, %512 ], [ -908433502, %502 ], [ -707678750, %501 ], [ 438969514, %500 ], [ 889921003, %499 ], [ 650311665, %497 ], [ 92878569, %494 ], [ %493, %492 ], [ %491, %481 ], [ %480, %471 ], [ -1785399899, %470 ], [ %469, %459 ], [ %458, %449 ], [ 1555706218, %448 ], [ %447, %438 ], [ %437, %428 ], [ 2124054282, %427 ], [ %426, %411 ], [ %410, %401 ], [ %400, %399 ], [ %398, %385 ], [ %384, %375 ], [ %374, %373 ], [ %372, %363 ], [ %362, %353 ], [ 1297625482, %351 ], [ %350, %349 ], [ %348, %335 ], [ %334, %325 ], [ -1785399899, %324 ], [ %323, %314 ], [ %313, %304 ], [ -2052054923, %303 ], [ 1604877274, %302 ], [ %301, %292 ], [ %291, %282 ], [ -468353425, %281 ], [ 1462989973, %280 ], [ 1747174090, %265 ], [ %264, %256 ], [ %255, %253 ], [ -468353425, %252 ], [ %251, %249 ], [ -2052054923, %248 ], [ %247, %238 ], [ %237, %228 ], [ 35967899, %227 ], [ %226, %216 ], [ %215, %206 ], [ 433019878, %205 ], [ -1857175577, %199 ], [ %198, %197 ], [ %196, %181 ], [ %180, %171 ], [ -219369820, %170 ], [ %169, %160 ], [ %159, %150 ], [ -1764763147, %149 ], [ %148, %130 ], [ %129, %120 ], [ %119, %112 ], [ -219369820, %107 ], [ %106, %102 ], [ %101, %96 ], [ %95, %94 ], [ %93, %82 ], [ %81, %72 ], [ 35967899, %71 ], [ 832853301, %70 ], [ %69, %59 ], [ %58, %49 ], [ -1506366299, %43 ], [ %42, %40 ], [ 832853301, %39 ], [ %38, %29 ], [ %28, %19 ], [ 1185796228, %18 ], [ %17, %13 ]
  %.0.be = phi i1 [ %.0, %12 ], [ %.0, %531 ], [ %.0, %529 ], [ %.0, %528 ], [ %.0, %522 ], [ %.0, %521 ], [ %.0, %520 ], [ %.0, %519 ], [ %.0, %518 ], [ %.0, %517 ], [ %.0, %516 ], [ %.0, %514 ], [ %.0, %513 ], [ %.0, %512 ], [ %.0, %502 ], [ %.0, %501 ], [ %.0, %500 ], [ %.0, %499 ], [ %.0, %497 ], [ %.0, %494 ], [ %.0, %492 ], [ %.0, %481 ], [ %.0, %471 ], [ %.0, %470 ], [ %.0, %459 ], [ %.0, %449 ], [ %.0, %448 ], [ %.0, %438 ], [ %.0, %428 ], [ %.0, %427 ], [ %.0, %411 ], [ %.0, %401 ], [ %.0, %399 ], [ %.0, %385 ], [ %.0, %375 ], [ %.0, %373 ], [ %.0, %363 ], [ %.0, %353 ], [ %352, %351 ], [ false, %349 ], [ %.0, %335 ], [ %.0, %325 ], [ %.0, %324 ], [ %.0, %314 ], [ %.0, %304 ], [ %.0, %303 ], [ %.0, %302 ], [ %.0, %292 ], [ %.0, %282 ], [ %.0, %281 ], [ %.0, %280 ], [ %.0, %265 ], [ %.0, %256 ], [ %.0, %253 ], [ %.0, %252 ], [ %.0, %249 ], [ %.0, %248 ], [ %.0, %238 ], [ %.0, %228 ], [ %.0, %227 ], [ %.0, %216 ], [ %.0, %206 ], [ %.0, %205 ], [ %.0, %199 ], [ %.0, %197 ], [ %.0, %181 ], [ %.0, %171 ], [ %.0, %170 ], [ %.0, %160 ], [ %.0, %150 ], [ %.0, %149 ], [ %.0, %130 ], [ %.0, %120 ], [ %.0, %112 ], [ %.0, %107 ], [ %.0, %102 ], [ %.0, %96 ], [ %.0, %94 ], [ %.0, %82 ], [ %.0, %72 ], [ %.0, %71 ], [ %.0, %70 ], [ %.0, %59 ], [ %.0, %49 ], [ %.0, %43 ], [ %.0, %40 ], [ %.0, %39 ], [ %.0, %29 ], [ %.0, %19 ], [ %.0, %18 ], [ %.0, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %15 = load i32, i32* %7, align 4
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 -1832483512, i32 942565114
  br label %.backedge

18:                                               ; preds = %12
  br label %.backedge

19:                                               ; preds = %12
  %20 = load i32, i32* @x.1, align 4
  %21 = load i32, i32* @y.2, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 889921003, i32 1426810185
  br label %.backedge

29:                                               ; preds = %12
  %30 = load i32, i32* @x.1, align 4
  %31 = load i32, i32* @y.2, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -1774222924, i32 1426810185
  br label %.backedge

39:                                               ; preds = %12
  br label %.backedge

40:                                               ; preds = %12
  %41 = icmp slt i32 %.061, 4000
  %42 = select i1 %41, i32 1271283462, i32 -2069749990
  br label %.backedge

43:                                               ; preds = %12
  %44 = add i32 %.061, 1
  %45 = sext i32 %.061 to i64
  %46 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %45, i64 0
  store i32 %44, i32* %46, align 4
  %47 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %45, i64 1
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %45, i64 2
  store i32 5000, i32* %48, align 4
  br label %.backedge

49:                                               ; preds = %12
  %50 = load i32, i32* @x.1, align 4
  %51 = load i32, i32* @y.2, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 438969514, i32 -1557349809
  br label %.backedge

59:                                               ; preds = %12
  %60 = add i32 %.061, 1
  %61 = load i32, i32* @x.1, align 4
  %62 = load i32, i32* @y.2, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 1146898879, i32 -1557349809
  br label %.backedge

70:                                               ; preds = %12
  br label %.backedge

71:                                               ; preds = %12
  br label %.backedge

72:                                               ; preds = %12
  %73 = load i32, i32* @x.1, align 4
  %74 = load i32, i32* @y.2, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -707678750, i32 -1607519466
  br label %.backedge

82:                                               ; preds = %12
  %83 = load i32, i32* %7, align 4
  %84 = icmp slt i32 %.065, %83
  store i1 %84, i1* %6, align 1
  %85 = load i32, i32* @x.1, align 4
  %86 = load i32, i32* @y.2, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 26691840, i32 -1607519466
  br label %.backedge

94:                                               ; preds = %12
  %.0..0..0.49 = load volatile i1, i1* %6, align 1
  %95 = select i1 %.0..0..0.49, i32 1638879231, i32 1310716841
  br label %.backedge

96:                                               ; preds = %12
  %97 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %98 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %97, i32* nonnull dereferenceable(4) %10)
  %99 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %98, i32* nonnull dereferenceable(4) %11)
  %100 = load i32, i32* %10, align 4
  %.not = icmp eq i32 %100, 0
  %101 = select i1 %.not, i32 1702148957, i32 66933252
  br label %.backedge

102:                                              ; preds = %12
  %103 = load i32, i32* %10, align 4
  %104 = sdiv i32 1000000, %103
  %105 = load i32, i32* %11, align 4
  %.not.not = icmp slt i32 %104, %105
  %106 = select i1 %.not.not, i32 1215781431, i32 1702148957
  br label %.backedge

107:                                              ; preds = %12
  %108 = load i32, i32* %9, align 4
  %109 = add i32 %108, -1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %110, i64 1
  store i32 1000000, i32* %111, align 4
  br label %.backedge

112:                                              ; preds = %12
  %113 = load i32, i32* %9, align 4
  %114 = add i32 %113, -1
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %115, i64 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp slt i32 %117, 1000000
  %119 = select i1 %118, i32 58075545, i32 -1764763147
  br label %.backedge

120:                                              ; preds = %12
  %121 = load i32, i32* @x.1, align 4
  %122 = load i32, i32* @y.2, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 -908433502, i32 -1219194552
  br label %.backedge

130:                                              ; preds = %12
  %131 = load i32, i32* %10, align 4
  %132 = load i32, i32* %11, align 4
  %133 = mul nsw i32 %132, %131
  %134 = load i32, i32* %9, align 4
  %135 = add i32 %134, -1
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %136, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, %133
  store i32 %139, i32* %137, align 4
  %140 = load i32, i32* @x.1, align 4
  %141 = load i32, i32* @y.2, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 1520862982, i32 -1219194552
  br label %.backedge

149:                                              ; preds = %12
  br label %.backedge

150:                                              ; preds = %12
  %151 = load i32, i32* @x.1, align 4
  %152 = load i32, i32* @y.2, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 406406769, i32 1489209001
  br label %.backedge

160:                                              ; preds = %12
  %161 = load i32, i32* @x.1, align 4
  %162 = load i32, i32* @y.2, align 4
  %163 = add i32 %161, -1
  %164 = mul i32 %163, %161
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %167, %166
  %169 = select i1 %168, i32 -1651673595, i32 1489209001
  br label %.backedge

170:                                              ; preds = %12
  br label %.backedge

171:                                              ; preds = %12
  %172 = load i32, i32* @x.1, align 4
  %173 = load i32, i32* @y.2, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 230490751, i32 -1001909608
  br label %.backedge

181:                                              ; preds = %12
  %182 = load i32, i32* %9, align 4
  %183 = add i32 %182, -1
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %184, i64 2
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, 5000
  store i1 %187, i1* %5, align 1
  %188 = load i32, i32* @x.1, align 4
  %189 = load i32, i32* @y.2, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 321257990, i32 -1001909608
  br label %.backedge

197:                                              ; preds = %12
  %.0..0..0.50 = load volatile i1, i1* %5, align 1
  %198 = select i1 %.0..0..0.50, i32 -938455333, i32 -1857175577
  br label %.backedge

199:                                              ; preds = %12
  %200 = load i32, i32* %9, align 4
  %201 = add i32 %200, -1
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %202, i64 2
  store i32 %.063, i32* %203, align 4
  %204 = add i32 %.063, 1
  br label %.backedge

205:                                              ; preds = %12
  br label %.backedge

206:                                              ; preds = %12
  %207 = load i32, i32* @x.1, align 4
  %208 = load i32, i32* @y.2, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -140959067, i32 1874976354
  br label %.backedge

216:                                              ; preds = %12
  %217 = add i32 %.065, 1
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 -2010663357, i32 1874976354
  br label %.backedge

227:                                              ; preds = %12
  br label %.backedge

228:                                              ; preds = %12
  %229 = load i32, i32* @x.1, align 4
  %230 = load i32, i32* @y.2, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 1505425519, i32 -807523105
  br label %.backedge

238:                                              ; preds = %12
  %239 = load i32, i32* @x.1, align 4
  %240 = load i32, i32* @y.2, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 1540799268, i32 -807523105
  br label %.backedge

248:                                              ; preds = %12
  br label %.backedge

249:                                              ; preds = %12
  %250 = icmp slt i32 %.069, 3999
  %251 = select i1 %250, i32 318444072, i32 1648776726
  br label %.backedge

252:                                              ; preds = %12
  %.neg74 = add i32 %.069, 1
  br label %.backedge

253:                                              ; preds = %12
  %254 = icmp slt i32 %.067, 4000
  %255 = select i1 %254, i32 -417579521, i32 -273427924
  br label %.backedge

256:                                              ; preds = %12
  %257 = sext i32 %.069 to i64
  %258 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %257, i64 2
  %259 = load i32, i32* %258, align 4
  %260 = sext i32 %.067 to i64
  %261 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %260, i64 2
  %262 = load i32, i32* %261, align 4
  %263 = icmp sgt i32 %259, %262
  %264 = select i1 %263, i32 -1136756303, i32 1747174090
  br label %.backedge

265:                                              ; preds = %12
  %266 = sext i32 %.069 to i64
  %267 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %266, i64 0
  %268 = load i32, i32* %267, align 4
  %269 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %266, i64 1
  %270 = load i32, i32* %269, align 4
  %271 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %266, i64 2
  %272 = load i32, i32* %271, align 4
  %273 = sext i32 %.067 to i64
  %274 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %273, i64 0
  %275 = load i32, i32* %274, align 4
  store i32 %275, i32* %267, align 4
  %276 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %273, i64 1
  %277 = load i32, i32* %276, align 4
  store i32 %277, i32* %269, align 4
  %278 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %273, i64 2
  %279 = load i32, i32* %278, align 4
  store i32 %279, i32* %271, align 4
  store i32 %268, i32* %274, align 4
  store i32 %270, i32* %276, align 4
  store i32 %272, i32* %278, align 4
  br label %.backedge

280:                                              ; preds = %12
  br label %.backedge

281:                                              ; preds = %12
  %.neg73 = add i32 %.067, 1
  br label %.backedge

282:                                              ; preds = %12
  %283 = load i32, i32* @x.1, align 4
  %284 = load i32, i32* @y.2, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 614892186, i32 1239909068
  br label %.backedge

292:                                              ; preds = %12
  %293 = load i32, i32* @x.1, align 4
  %294 = load i32, i32* @y.2, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 -1597146731, i32 1239909068
  br label %.backedge

302:                                              ; preds = %12
  br label %.backedge

303:                                              ; preds = %12
  %.neg72 = add i32 %.069, 1
  br label %.backedge

304:                                              ; preds = %12
  %305 = load i32, i32* @x.1, align 4
  %306 = load i32, i32* @y.2, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 -561225497, i32 901727735
  br label %.backedge

314:                                              ; preds = %12
  %315 = load i32, i32* @x.1, align 4
  %316 = load i32, i32* @y.2, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 -1943996664, i32 901727735
  br label %.backedge

324:                                              ; preds = %12
  br label %.backedge

325:                                              ; preds = %12
  %326 = load i32, i32* @x.1, align 4
  %327 = load i32, i32* @y.2, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 813363429, i32 -72132051
  br label %.backedge

335:                                              ; preds = %12
  %336 = sext i32 %.057 to i64
  %337 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %336, i64 2
  %338 = load i32, i32* %337, align 4
  %339 = icmp ne i32 %338, 5000
  store i1 %339, i1* %4, align 1
  %340 = load i32, i32* @x.1, align 4
  %341 = load i32, i32* @y.2, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 -1707177165, i32 -72132051
  br label %.backedge

349:                                              ; preds = %12
  %.0..0..0.51 = load volatile i1, i1* %4, align 1
  %350 = select i1 %.0..0..0.51, i32 -353411605, i32 1297625482
  br label %.backedge

351:                                              ; preds = %12
  %352 = icmp slt i32 %.057, 4000
  br label %.backedge

353:                                              ; preds = %12
  store i1 %.0, i1* %1, align 1
  %354 = load i32, i32* @x.1, align 4
  %355 = load i32, i32* @y.2, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 8154045, i32 -274551327
  br label %.backedge

363:                                              ; preds = %12
  %364 = load i32, i32* @x.1, align 4
  %365 = load i32, i32* @y.2, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 1017729157, i32 -274551327
  br label %.backedge

373:                                              ; preds = %12
  %.0..0..0.54 = load volatile i1, i1* %1, align 1
  %374 = select i1 %.0..0..0.54, i32 -508436503, i32 -1938536298
  br label %.backedge

375:                                              ; preds = %12
  %376 = load i32, i32* @x.1, align 4
  %377 = load i32, i32* @y.2, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 379566729, i32 1243841329
  br label %.backedge

385:                                              ; preds = %12
  %386 = sext i32 %.057 to i64
  %387 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %386, i64 1
  %388 = load i32, i32* %387, align 4
  %389 = icmp sgt i32 %388, 999999
  store i1 %389, i1* %3, align 1
  %390 = load i32, i32* @x.1, align 4
  %391 = load i32, i32* @y.2, align 4
  %392 = add i32 %390, -1
  %393 = mul i32 %392, %390
  %394 = and i32 %393, 1
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %396, %395
  %398 = select i1 %397, i32 -861658562, i32 1243841329
  br label %.backedge

399:                                              ; preds = %12
  %.0..0..0.52 = load volatile i1, i1* %3, align 1
  %400 = select i1 %.0..0..0.52, i32 96103329, i32 2124054282
  br label %.backedge

401:                                              ; preds = %12
  %402 = load i32, i32* @x.1, align 4
  %403 = load i32, i32* @y.2, align 4
  %404 = add i32 %402, -1
  %405 = mul i32 %404, %402
  %406 = and i32 %405, 1
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %408, %407
  %410 = select i1 %409, i32 1530556851, i32 -740110133
  br label %.backedge

411:                                              ; preds = %12
  %412 = sext i32 %.057 to i64
  %413 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %412, i64 0
  %414 = load i32, i32* %413, align 4
  %415 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %414)
  %416 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %415, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %417 = add i32 %.059, 1
  %418 = load i32, i32* @x.1, align 4
  %419 = load i32, i32* @y.2, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 -35127082, i32 -740110133
  br label %.backedge

427:                                              ; preds = %12
  br label %.backedge

428:                                              ; preds = %12
  %429 = load i32, i32* @x.1, align 4
  %430 = load i32, i32* @y.2, align 4
  %431 = add i32 %429, -1
  %432 = mul i32 %431, %429
  %433 = and i32 %432, 1
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %435, %434
  %437 = select i1 %436, i32 -996212375, i32 1117222712
  br label %.backedge

438:                                              ; preds = %12
  %439 = load i32, i32* @x.1, align 4
  %440 = load i32, i32* @y.2, align 4
  %441 = add i32 %439, -1
  %442 = mul i32 %441, %439
  %443 = and i32 %442, 1
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %445, %444
  %447 = select i1 %446, i32 1927846823, i32 1117222712
  br label %.backedge

448:                                              ; preds = %12
  br label %.backedge

449:                                              ; preds = %12
  %450 = load i32, i32* @x.1, align 4
  %451 = load i32, i32* @y.2, align 4
  %452 = add i32 %450, -1
  %453 = mul i32 %452, %450
  %454 = and i32 %453, 1
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %456, %455
  %458 = select i1 %457, i32 906561051, i32 -167321927
  br label %.backedge

459:                                              ; preds = %12
  %460 = add i32 %.057, 1
  %461 = load i32, i32* @x.1, align 4
  %462 = load i32, i32* @y.2, align 4
  %463 = add i32 %461, -1
  %464 = mul i32 %463, %461
  %465 = and i32 %464, 1
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %467, %466
  %469 = select i1 %468, i32 1026333977, i32 -167321927
  br label %.backedge

470:                                              ; preds = %12
  br label %.backedge

471:                                              ; preds = %12
  %472 = load i32, i32* @x.1, align 4
  %473 = load i32, i32* @y.2, align 4
  %474 = add i32 %472, -1
  %475 = mul i32 %474, %472
  %476 = and i32 %475, 1
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %478, %477
  %480 = select i1 %479, i32 -1900300334, i32 -86223962
  br label %.backedge

481:                                              ; preds = %12
  %482 = icmp eq i32 %.059, 0
  store i1 %482, i1* %2, align 1
  %483 = load i32, i32* @x.1, align 4
  %484 = load i32, i32* @y.2, align 4
  %485 = add i32 %483, -1
  %486 = mul i32 %485, %483
  %487 = and i32 %486, 1
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %489, %488
  %491 = select i1 %490, i32 1428118369, i32 -86223962
  br label %.backedge

492:                                              ; preds = %12
  %.0..0..0.53 = load volatile i1, i1* %2, align 1
  %493 = select i1 %.0..0..0.53, i32 -1270101382, i32 92878569
  br label %.backedge

494:                                              ; preds = %12
  %495 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %496 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %495, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

497:                                              ; preds = %12
  br label %.backedge

498:                                              ; preds = %12
  ret i32 0

499:                                              ; preds = %12
  br label %.backedge

500:                                              ; preds = %12
  %.neg71 = add i32 %.061, 1
  br label %.backedge

501:                                              ; preds = %12
  br label %.backedge

502:                                              ; preds = %12
  %503 = load i32, i32* %10, align 4
  %504 = load i32, i32* %11, align 4
  %505 = mul nsw i32 %504, %503
  %506 = load i32, i32* %9, align 4
  %507 = add i32 %506, -1
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %508, i64 1
  %510 = load i32, i32* %509, align 4
  %511 = add i32 %510, %505
  store i32 %511, i32* %509, align 4
  br label %.backedge

512:                                              ; preds = %12
  br label %.backedge

513:                                              ; preds = %12
  br label %.backedge

514:                                              ; preds = %12
  %515 = add i32 %.065, 1
  br label %.backedge

516:                                              ; preds = %12
  br label %.backedge

517:                                              ; preds = %12
  br label %.backedge

518:                                              ; preds = %12
  br label %.backedge

519:                                              ; preds = %12
  br label %.backedge

520:                                              ; preds = %12
  br label %.backedge

521:                                              ; preds = %12
  br label %.backedge

522:                                              ; preds = %12
  %523 = sext i32 %.057 to i64
  %524 = getelementptr inbounds [4000 x [3 x i32]], [4000 x [3 x i32]]* %8, i64 0, i64 %523, i64 0
  %525 = load i32, i32* %524, align 4
  %526 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %525)
  %527 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %526, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %.neg = add i32 %.059, 1
  br label %.backedge

528:                                              ; preds = %12
  br label %.backedge

529:                                              ; preds = %12
  %530 = add i32 %.057, 1
  br label %.backedge

531:                                              ; preds = %12
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s360613484.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
