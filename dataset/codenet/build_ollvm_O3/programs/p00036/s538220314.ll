; ModuleID = 'build_ollvm/programs/p00036/s538220314.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s538220314.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dx = local_unnamed_addr global [4 x i32] [i32 1, i32 0, i32 -1, i32 0], align 16
@dy = local_unnamed_addr global [4 x i32] [i32 0, i32 -1, i32 0, i32 1], align 16
@board1 = global [15 x [15 x i8]] zeroinitializer, align 16
@board = local_unnamed_addr global [15 x [15 x i32]] zeroinitializer, align 16
@x = local_unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s538220314.cpp, i8* null }]
@x.8 = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  br label %9

9:                                                ; preds = %.backedge, %0
  %.096 = phi i8 [ 0, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i32 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i32 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.0 = phi i32 [ 956302906, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 956302906, label %10
    i32 -653457262, label %20
    i32 1527235257, label %30
    i32 -1172094183, label %31
    i32 2013420322, label %34
    i32 -573866021, label %40
    i32 1327154956, label %50
    i32 569607291, label %60
    i32 465210963, label %61
    i32 874310712, label %62
    i32 -1069151999, label %64
    i32 1317136144, label %65
    i32 -1907598700, label %75
    i32 -930427999, label %86
    i32 615280929, label %88
    i32 -2008135395, label %89
    i32 1343319723, label %92
    i32 -1977906532, label %100
    i32 -1134482782, label %102
    i32 -468361955, label %112
    i32 -869256705, label %122
    i32 1677644830, label %123
    i32 -589091291, label %125
    i32 1652991636, label %127
    i32 -1679181868, label %128
    i32 403065871, label %129
    i32 1084165992, label %132
    i32 -1251708988, label %133
    i32 1974414214, label %136
    i32 -232373742, label %143
    i32 -1249205405, label %151
    i32 -1240284445, label %159
    i32 -2029447171, label %167
    i32 -906833675, label %177
    i32 839387338, label %189
    i32 1820988889, label %190
    i32 1930077672, label %200
    i32 -1937125731, label %216
    i32 -574336045, label %218
    i32 1224723767, label %228
    i32 -416678233, label %244
    i32 449361005, label %246
    i32 1479320478, label %254
    i32 1659412557, label %257
    i32 -690187799, label %265
    i32 -54264181, label %275
    i32 -1884791189, label %290
    i32 -230816417, label %292
    i32 -52381008, label %299
    i32 -72517791, label %302
    i32 430123881, label %311
    i32 855964677, label %321
    i32 209649938, label %337
    i32 1310078937, label %339
    i32 -241037798, label %347
    i32 -636325638, label %357
    i32 1064148616, label %373
    i32 2004871939, label %375
    i32 -596402231, label %385
    i32 -1124041844, label %397
    i32 -381546519, label %398
    i32 -761749807, label %406
    i32 1070393658, label %415
    i32 -1903824280, label %425
    i32 1013523924, label %442
    i32 1665317338, label %444
    i32 -159139003, label %447
    i32 -712801522, label %454
    i32 -449531385, label %462
    i32 1487869559, label %472
    i32 -1247283612, label %489
    i32 1490362353, label %491
    i32 -114826373, label %501
    i32 1672268030, label %513
    i32 2062913686, label %514
    i32 1918320180, label %521
    i32 -768888689, label %529
    i32 301616289, label %536
    i32 1926970346, label %539
    i32 211884865, label %540
    i32 -966370165, label %541
    i32 1201259973, label %542
    i32 -222660514, label %552
    i32 -2086411653, label %562
    i32 -2033987205, label %563
    i32 -407051533, label %573
    i32 550650250, label %583
    i32 -1271109665, label %584
    i32 -457033336, label %585
    i32 686943708, label %586
    i32 1900875980, label %587
    i32 -1453919644, label %589
    i32 -265355504, label %590
    i32 1959878374, label %600
    i32 -771312780, label %611
    i32 -825110450, label %612
    i32 2015966444, label %613
    i32 -1847864598, label %623
    i32 1562558838, label %633
    i32 2043765037, label %634
    i32 1027260415, label %635
    i32 -330285836, label %636
    i32 1337082261, label %637
    i32 1027553438, label %638
    i32 1366540735, label %641
    i32 -1212729364, label %642
    i32 -139123049, label %643
    i32 -1700431790, label %644
    i32 -25188738, label %645
    i32 -1443236082, label %646
    i32 995872156, label %649
    i32 900314847, label %650
    i32 -744780699, label %651
    i32 -1396835924, label %654
    i32 -166621507, label %655
    i32 1496968941, label %656
    i32 -1760503115, label %658
  ]

.backedge:                                        ; preds = %9, %658, %656, %655, %654, %651, %650, %649, %646, %645, %644, %643, %642, %641, %638, %637, %636, %635, %634, %623, %613, %612, %611, %600, %590, %589, %587, %586, %585, %584, %583, %573, %563, %562, %552, %542, %541, %540, %539, %536, %529, %521, %514, %513, %501, %491, %489, %472, %462, %454, %447, %444, %442, %425, %415, %406, %398, %397, %385, %375, %373, %357, %347, %339, %337, %321, %311, %302, %299, %292, %290, %275, %265, %257, %254, %246, %244, %228, %218, %216, %200, %190, %189, %177, %167, %159, %151, %143, %136, %133, %132, %129, %128, %127, %125, %123, %122, %112, %102, %100, %92, %89, %88, %86, %75, %65, %64, %62, %61, %60, %50, %40, %34, %31, %30, %20, %10
  %.096.be = phi i8 [ %.096, %9 ], [ %.096, %658 ], [ %.096, %656 ], [ %.096, %655 ], [ %.096, %654 ], [ %.096, %651 ], [ %.096, %650 ], [ %.096, %649 ], [ %.096, %646 ], [ %.096, %645 ], [ %.096, %644 ], [ %.096, %643 ], [ %.096, %642 ], [ %.096, %641 ], [ %.096, %638 ], [ %.096, %637 ], [ %.096, %636 ], [ 1, %635 ], [ %.096, %634 ], [ %.096, %623 ], [ %.096, %613 ], [ %.096, %612 ], [ %.096, %611 ], [ %.096, %600 ], [ %.096, %590 ], [ %.096, %589 ], [ %.096, %587 ], [ %.096, %586 ], [ %.096, %585 ], [ %.096, %584 ], [ %.096, %583 ], [ %.096, %573 ], [ %.096, %563 ], [ %.096, %562 ], [ %.096, %552 ], [ %.096, %542 ], [ %.096, %541 ], [ %.096, %540 ], [ %.096, %539 ], [ %.096, %536 ], [ %.096, %529 ], [ %.096, %521 ], [ %.096, %514 ], [ %.096, %513 ], [ %.096, %501 ], [ %.096, %491 ], [ %.096, %489 ], [ %.096, %472 ], [ %.096, %462 ], [ %.096, %454 ], [ %.096, %447 ], [ %.096, %444 ], [ %.096, %442 ], [ %.096, %425 ], [ %.096, %415 ], [ %.096, %406 ], [ %.096, %398 ], [ %.096, %397 ], [ %.096, %385 ], [ %.096, %375 ], [ %.096, %373 ], [ %.096, %357 ], [ %.096, %347 ], [ %.096, %339 ], [ %.096, %337 ], [ %.096, %321 ], [ %.096, %311 ], [ %.096, %302 ], [ %.096, %299 ], [ %.096, %292 ], [ %.096, %290 ], [ %.096, %275 ], [ %.096, %265 ], [ %.096, %257 ], [ %.096, %254 ], [ %.096, %246 ], [ %.096, %244 ], [ %.096, %228 ], [ %.096, %218 ], [ %.096, %216 ], [ %.096, %200 ], [ %.096, %190 ], [ %.096, %189 ], [ %.096, %177 ], [ %.096, %167 ], [ %.096, %159 ], [ %.096, %151 ], [ %.096, %143 ], [ %.096, %136 ], [ %.096, %133 ], [ %.096, %132 ], [ %.096, %129 ], [ %.096, %128 ], [ %.096, %127 ], [ %.096, %125 ], [ %.096, %123 ], [ %.096, %122 ], [ %.096, %112 ], [ %.096, %102 ], [ %.096, %100 ], [ %.096, %92 ], [ %.096, %89 ], [ %.096, %88 ], [ %.096, %86 ], [ %.096, %75 ], [ %.096, %65 ], [ %.096, %64 ], [ %.096, %62 ], [ %.096, %61 ], [ %.096, %60 ], [ 1, %50 ], [ %.096, %40 ], [ %.096, %34 ], [ %.096, %31 ], [ %.096, %30 ], [ %.096, %20 ], [ %.096, %10 ]
  %.094.be = phi i32 [ %.094, %9 ], [ %.094, %658 ], [ %.094, %656 ], [ %.094, %655 ], [ %.094, %654 ], [ %.094, %651 ], [ %.094, %650 ], [ %.094, %649 ], [ %.094, %646 ], [ %.094, %645 ], [ %.094, %644 ], [ %.094, %643 ], [ %.094, %642 ], [ %.094, %641 ], [ %.094, %638 ], [ %.094, %637 ], [ %.094, %636 ], [ %.094, %635 ], [ 0, %634 ], [ %.094, %623 ], [ %.094, %613 ], [ %.094, %612 ], [ %.094, %611 ], [ %.094, %600 ], [ %.094, %590 ], [ %.094, %589 ], [ %.094, %587 ], [ %.094, %586 ], [ %.094, %585 ], [ %.094, %584 ], [ %.094, %583 ], [ %.094, %573 ], [ %.094, %563 ], [ %.094, %562 ], [ %.094, %552 ], [ %.094, %542 ], [ %.094, %541 ], [ %.094, %540 ], [ %.094, %539 ], [ %.094, %536 ], [ %.094, %529 ], [ %.094, %521 ], [ %.094, %514 ], [ %.094, %513 ], [ %.094, %501 ], [ %.094, %491 ], [ %.094, %489 ], [ %.094, %472 ], [ %.094, %462 ], [ %.094, %454 ], [ %.094, %447 ], [ %.094, %444 ], [ %.094, %442 ], [ %.094, %425 ], [ %.094, %415 ], [ %.094, %406 ], [ %.094, %398 ], [ %.094, %397 ], [ %.094, %385 ], [ %.094, %375 ], [ %.094, %373 ], [ %.094, %357 ], [ %.094, %347 ], [ %.094, %339 ], [ %.094, %337 ], [ %.094, %321 ], [ %.094, %311 ], [ %.094, %302 ], [ %.094, %299 ], [ %.094, %292 ], [ %.094, %290 ], [ %.094, %275 ], [ %.094, %265 ], [ %.094, %257 ], [ %.094, %254 ], [ %.094, %246 ], [ %.094, %244 ], [ %.094, %228 ], [ %.094, %218 ], [ %.094, %216 ], [ %.094, %200 ], [ %.094, %190 ], [ %.094, %189 ], [ %.094, %177 ], [ %.094, %167 ], [ %.094, %159 ], [ %.094, %151 ], [ %.094, %143 ], [ %.094, %136 ], [ %.094, %133 ], [ %.094, %132 ], [ %.094, %129 ], [ %.094, %128 ], [ %.094, %127 ], [ %.094, %125 ], [ %.094, %123 ], [ %.094, %122 ], [ %.094, %112 ], [ %.094, %102 ], [ %.094, %100 ], [ %.094, %92 ], [ %.094, %89 ], [ %.094, %88 ], [ %.094, %86 ], [ %.094, %75 ], [ %.094, %65 ], [ %.094, %64 ], [ %63, %62 ], [ %.094, %61 ], [ %.094, %60 ], [ %.094, %50 ], [ %.094, %40 ], [ %.094, %34 ], [ %.094, %31 ], [ %.094, %30 ], [ 0, %20 ], [ %.094, %10 ]
  %.092.be = phi i32 [ %.092, %9 ], [ %.092, %658 ], [ %.092, %656 ], [ %.092, %655 ], [ %.092, %654 ], [ %.092, %651 ], [ %.092, %650 ], [ %.092, %649 ], [ %.092, %646 ], [ %.092, %645 ], [ %.092, %644 ], [ %.092, %643 ], [ %.092, %642 ], [ %.092, %641 ], [ %.092, %638 ], [ %.092, %637 ], [ %.092, %636 ], [ %.092, %635 ], [ %.092, %634 ], [ %.092, %623 ], [ %.092, %613 ], [ %.092, %612 ], [ %.092, %611 ], [ %.092, %600 ], [ %.092, %590 ], [ %.092, %589 ], [ %.092, %587 ], [ %.092, %586 ], [ %.092, %585 ], [ %.092, %584 ], [ %.092, %583 ], [ %.092, %573 ], [ %.092, %563 ], [ %.092, %562 ], [ %.092, %552 ], [ %.092, %542 ], [ %.092, %541 ], [ %.092, %540 ], [ %.092, %539 ], [ %.092, %536 ], [ %.092, %529 ], [ %.092, %521 ], [ %.092, %514 ], [ %.092, %513 ], [ %.092, %501 ], [ %.092, %491 ], [ %.092, %489 ], [ %.092, %472 ], [ %.092, %462 ], [ %.092, %454 ], [ %.092, %447 ], [ %.092, %444 ], [ %.092, %442 ], [ %.092, %425 ], [ %.092, %415 ], [ %.092, %406 ], [ %.092, %398 ], [ %.092, %397 ], [ %.092, %385 ], [ %.092, %375 ], [ %.092, %373 ], [ %.092, %357 ], [ %.092, %347 ], [ %.092, %339 ], [ %.092, %337 ], [ %.092, %321 ], [ %.092, %311 ], [ %.092, %302 ], [ %.092, %299 ], [ %.092, %292 ], [ %.092, %290 ], [ %.092, %275 ], [ %.092, %265 ], [ %.092, %257 ], [ %.092, %254 ], [ %.092, %246 ], [ %.092, %244 ], [ %.092, %228 ], [ %.092, %218 ], [ %.092, %216 ], [ %.092, %200 ], [ %.092, %190 ], [ %.092, %189 ], [ %.092, %177 ], [ %.092, %167 ], [ %.092, %159 ], [ %.092, %151 ], [ %.092, %143 ], [ %.092, %136 ], [ %.092, %133 ], [ %.092, %132 ], [ %.092, %129 ], [ %.092, %128 ], [ %.092, %127 ], [ %.092, %125 ], [ %124, %123 ], [ %.092, %122 ], [ %.092, %112 ], [ %.092, %102 ], [ %.092, %100 ], [ %.092, %92 ], [ %.092, %89 ], [ %.092, %88 ], [ %.092, %86 ], [ %.092, %75 ], [ %.092, %65 ], [ 0, %64 ], [ %.092, %62 ], [ %.092, %61 ], [ %.092, %60 ], [ %.092, %50 ], [ %.092, %40 ], [ %.092, %34 ], [ %.092, %31 ], [ %.092, %30 ], [ %.092, %20 ], [ %.092, %10 ]
  %.090.be = phi i32 [ %.090, %9 ], [ %.090, %658 ], [ %.090, %656 ], [ %.090, %655 ], [ %.090, %654 ], [ %.090, %651 ], [ %.090, %650 ], [ %.090, %649 ], [ %.090, %646 ], [ %.090, %645 ], [ %.090, %644 ], [ %.090, %643 ], [ %.090, %642 ], [ %.090, %641 ], [ %.090, %638 ], [ %.090, %637 ], [ %.090, %636 ], [ %.090, %635 ], [ %.090, %634 ], [ %.090, %623 ], [ %.090, %613 ], [ %.090, %612 ], [ %.090, %611 ], [ %.090, %600 ], [ %.090, %590 ], [ %.090, %589 ], [ %.090, %587 ], [ %.090, %586 ], [ %.090, %585 ], [ %.090, %584 ], [ %.090, %583 ], [ %.090, %573 ], [ %.090, %563 ], [ %.090, %562 ], [ %.090, %552 ], [ %.090, %542 ], [ %.090, %541 ], [ %.090, %540 ], [ %.090, %539 ], [ %.090, %536 ], [ %.090, %529 ], [ %.090, %521 ], [ %.090, %514 ], [ %.090, %513 ], [ %.090, %501 ], [ %.090, %491 ], [ %.090, %489 ], [ %.090, %472 ], [ %.090, %462 ], [ %.090, %454 ], [ %.090, %447 ], [ %.090, %444 ], [ %.090, %442 ], [ %.090, %425 ], [ %.090, %415 ], [ %.090, %406 ], [ %.090, %398 ], [ %.090, %397 ], [ %.090, %385 ], [ %.090, %375 ], [ %.090, %373 ], [ %.090, %357 ], [ %.090, %347 ], [ %.090, %339 ], [ %.090, %337 ], [ %.090, %321 ], [ %.090, %311 ], [ %.090, %302 ], [ %.090, %299 ], [ %.090, %292 ], [ %.090, %290 ], [ %.090, %275 ], [ %.090, %265 ], [ %.090, %257 ], [ %.090, %254 ], [ %.090, %246 ], [ %.090, %244 ], [ %.090, %228 ], [ %.090, %218 ], [ %.090, %216 ], [ %.090, %200 ], [ %.090, %190 ], [ %.090, %189 ], [ %.090, %177 ], [ %.090, %167 ], [ %.090, %159 ], [ %.090, %151 ], [ %.090, %143 ], [ %.090, %136 ], [ %.090, %133 ], [ %.090, %132 ], [ %.090, %129 ], [ %.090, %128 ], [ %.090, %127 ], [ %.090, %125 ], [ %.090, %123 ], [ %.090, %122 ], [ %.090, %112 ], [ %.090, %102 ], [ %101, %100 ], [ %.090, %92 ], [ %.090, %89 ], [ 0, %88 ], [ %.090, %86 ], [ %.090, %75 ], [ %.090, %65 ], [ %.090, %64 ], [ %.090, %62 ], [ %.090, %61 ], [ %.090, %60 ], [ %.090, %50 ], [ %.090, %40 ], [ %.090, %34 ], [ %.090, %31 ], [ %.090, %30 ], [ %.090, %20 ], [ %.090, %10 ]
  %.088.be = phi i32 [ %.088, %9 ], [ %.088, %658 ], [ %657, %656 ], [ %.088, %655 ], [ %.088, %654 ], [ %.088, %651 ], [ %.088, %650 ], [ %.088, %649 ], [ %.088, %646 ], [ %.088, %645 ], [ %.088, %644 ], [ %.088, %643 ], [ %.088, %642 ], [ %.088, %641 ], [ %.088, %638 ], [ %.088, %637 ], [ %.088, %636 ], [ %.088, %635 ], [ %.088, %634 ], [ %.088, %623 ], [ %.088, %613 ], [ %.088, %612 ], [ %.088, %611 ], [ %601, %600 ], [ %.088, %590 ], [ %.088, %589 ], [ %.088, %587 ], [ %.088, %586 ], [ %.088, %585 ], [ %.088, %584 ], [ %.088, %583 ], [ %.088, %573 ], [ %.088, %563 ], [ %.088, %562 ], [ %.088, %552 ], [ %.088, %542 ], [ %.088, %541 ], [ %.088, %540 ], [ %.088, %539 ], [ %.088, %536 ], [ %.088, %529 ], [ %.088, %521 ], [ %.088, %514 ], [ %.088, %513 ], [ %.088, %501 ], [ %.088, %491 ], [ %.088, %489 ], [ %.088, %472 ], [ %.088, %462 ], [ %.088, %454 ], [ %.088, %447 ], [ %.088, %444 ], [ %.088, %442 ], [ %.088, %425 ], [ %.088, %415 ], [ %.088, %406 ], [ %.088, %398 ], [ %.088, %397 ], [ %.088, %385 ], [ %.088, %375 ], [ %.088, %373 ], [ %.088, %357 ], [ %.088, %347 ], [ %.088, %339 ], [ %.088, %337 ], [ %.088, %321 ], [ %.088, %311 ], [ %.088, %302 ], [ %.088, %299 ], [ %.088, %292 ], [ %.088, %290 ], [ %.088, %275 ], [ %.088, %265 ], [ %.088, %257 ], [ %.088, %254 ], [ %.088, %246 ], [ %.088, %244 ], [ %.088, %228 ], [ %.088, %218 ], [ %.088, %216 ], [ %.088, %200 ], [ %.088, %190 ], [ %.088, %189 ], [ %.088, %177 ], [ %.088, %167 ], [ %.088, %159 ], [ %.088, %151 ], [ %.088, %143 ], [ %.088, %136 ], [ %.088, %133 ], [ %.088, %132 ], [ %.088, %129 ], [ 0, %128 ], [ %.088, %127 ], [ %.088, %125 ], [ %.088, %123 ], [ %.088, %122 ], [ %.088, %112 ], [ %.088, %102 ], [ %.088, %100 ], [ %.088, %92 ], [ %.088, %89 ], [ %.088, %88 ], [ %.088, %86 ], [ %.088, %75 ], [ %.088, %65 ], [ %.088, %64 ], [ %.088, %62 ], [ %.088, %61 ], [ %.088, %60 ], [ %.088, %50 ], [ %.088, %40 ], [ %.088, %34 ], [ %.088, %31 ], [ %.088, %30 ], [ %.088, %20 ], [ %.088, %10 ]
  %.086.be = phi i32 [ %.086, %9 ], [ %.086, %658 ], [ %.086, %656 ], [ %.086, %655 ], [ %.086, %654 ], [ %.086, %651 ], [ %.086, %650 ], [ %.086, %649 ], [ %.086, %646 ], [ %.086, %645 ], [ %.086, %644 ], [ %.086, %643 ], [ %.086, %642 ], [ %.086, %641 ], [ %.086, %638 ], [ %.086, %637 ], [ %.086, %636 ], [ %.086, %635 ], [ %.086, %634 ], [ %.086, %623 ], [ %.086, %613 ], [ %.086, %612 ], [ %.086, %611 ], [ %.086, %600 ], [ %.086, %590 ], [ %.086, %589 ], [ %588, %587 ], [ %.086, %586 ], [ %.086, %585 ], [ %.086, %584 ], [ %.086, %583 ], [ %.086, %573 ], [ %.086, %563 ], [ %.086, %562 ], [ %.086, %552 ], [ %.086, %542 ], [ %.086, %541 ], [ %.086, %540 ], [ %.086, %539 ], [ %.086, %536 ], [ %.086, %529 ], [ %.086, %521 ], [ %.086, %514 ], [ %.086, %513 ], [ %.086, %501 ], [ %.086, %491 ], [ %.086, %489 ], [ %.086, %472 ], [ %.086, %462 ], [ %.086, %454 ], [ %.086, %447 ], [ %.086, %444 ], [ %.086, %442 ], [ %.086, %425 ], [ %.086, %415 ], [ %.086, %406 ], [ %.086, %398 ], [ %.086, %397 ], [ %.086, %385 ], [ %.086, %375 ], [ %.086, %373 ], [ %.086, %357 ], [ %.086, %347 ], [ %.086, %339 ], [ %.086, %337 ], [ %.086, %321 ], [ %.086, %311 ], [ %.086, %302 ], [ %.086, %299 ], [ %.086, %292 ], [ %.086, %290 ], [ %.086, %275 ], [ %.086, %265 ], [ %.086, %257 ], [ %.086, %254 ], [ %.086, %246 ], [ %.086, %244 ], [ %.086, %228 ], [ %.086, %218 ], [ %.086, %216 ], [ %.086, %200 ], [ %.086, %190 ], [ %.086, %189 ], [ %.086, %177 ], [ %.086, %167 ], [ %.086, %159 ], [ %.086, %151 ], [ %.086, %143 ], [ %.086, %136 ], [ %.086, %133 ], [ 0, %132 ], [ %.086, %129 ], [ %.086, %128 ], [ %.086, %127 ], [ %.086, %125 ], [ %.086, %123 ], [ %.086, %122 ], [ %.086, %112 ], [ %.086, %102 ], [ %.086, %100 ], [ %.086, %92 ], [ %.086, %89 ], [ %.086, %88 ], [ %.086, %86 ], [ %.086, %75 ], [ %.086, %65 ], [ %.086, %64 ], [ %.086, %62 ], [ %.086, %61 ], [ %.086, %60 ], [ %.086, %50 ], [ %.086, %40 ], [ %.086, %34 ], [ %.086, %31 ], [ %.086, %30 ], [ %.086, %20 ], [ %.086, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ -1847864598, %658 ], [ 1959878374, %656 ], [ -407051533, %655 ], [ -222660514, %654 ], [ -114826373, %651 ], [ 1487869559, %650 ], [ -1903824280, %649 ], [ -596402231, %646 ], [ -636325638, %645 ], [ 855964677, %644 ], [ -54264181, %643 ], [ 1224723767, %642 ], [ 1930077672, %641 ], [ -906833675, %638 ], [ -468361955, %637 ], [ -1907598700, %636 ], [ 1327154956, %635 ], [ -653457262, %634 ], [ %632, %623 ], [ %622, %613 ], [ 956302906, %612 ], [ 403065871, %611 ], [ %610, %600 ], [ %599, %590 ], [ -265355504, %589 ], [ -1251708988, %587 ], [ 1900875980, %586 ], [ 686943708, %585 ], [ -457033336, %584 ], [ -1271109665, %583 ], [ %582, %573 ], [ %572, %563 ], [ -2033987205, %562 ], [ %561, %552 ], [ %551, %542 ], [ 1201259973, %541 ], [ -966370165, %540 ], [ 211884865, %539 ], [ 1926970346, %536 ], [ %535, %529 ], [ %528, %521 ], [ %520, %514 ], [ 211884865, %513 ], [ %512, %501 ], [ %500, %491 ], [ %490, %489 ], [ %488, %472 ], [ %471, %462 ], [ %461, %454 ], [ %453, %447 ], [ -966370165, %444 ], [ %443, %442 ], [ %441, %425 ], [ %424, %415 ], [ %414, %406 ], [ %405, %398 ], [ 1201259973, %397 ], [ %396, %385 ], [ %384, %375 ], [ %374, %373 ], [ %372, %357 ], [ %356, %347 ], [ %346, %339 ], [ %338, %337 ], [ %336, %321 ], [ %320, %311 ], [ %310, %302 ], [ -2033987205, %299 ], [ %298, %292 ], [ %291, %290 ], [ %289, %275 ], [ %274, %265 ], [ %264, %257 ], [ -1271109665, %254 ], [ %253, %246 ], [ %245, %244 ], [ %243, %228 ], [ %227, %218 ], [ %217, %216 ], [ %215, %200 ], [ %199, %190 ], [ -457033336, %189 ], [ %188, %177 ], [ %176, %167 ], [ %166, %159 ], [ %158, %151 ], [ %150, %143 ], [ %142, %136 ], [ %135, %133 ], [ -1251708988, %132 ], [ %131, %129 ], [ 403065871, %128 ], [ 2015966444, %127 ], [ %126, %125 ], [ 1317136144, %123 ], [ 1677644830, %122 ], [ %121, %112 ], [ %111, %102 ], [ -2008135395, %100 ], [ -1977906532, %92 ], [ %91, %89 ], [ -2008135395, %88 ], [ %87, %86 ], [ %85, %75 ], [ %74, %65 ], [ 1317136144, %64 ], [ -1172094183, %62 ], [ 874310712, %61 ], [ -1069151999, %60 ], [ %59, %50 ], [ %49, %40 ], [ %39, %34 ], [ %33, %31 ], [ -1172094183, %30 ], [ %29, %20 ], [ %19, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @x.9, align 4
  %12 = load i32, i32* @y.10, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 -653457262, i32 2043765037
  br label %.backedge

20:                                               ; preds = %9
  %21 = load i32, i32* @x.9, align 4
  %22 = load i32, i32* @y.10, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 1527235257, i32 2043765037
  br label %.backedge

30:                                               ; preds = %9
  br label %.backedge

31:                                               ; preds = %9
  %32 = icmp slt i32 %.094, 8
  %33 = select i1 %32, i32 2013420322, i32 -1069151999
  br label %.backedge

34:                                               ; preds = %9
  %35 = sext i32 %.094 to i64
  %36 = getelementptr inbounds [15 x [15 x i8]], [15 x [15 x i8]]* @board1, i64 0, i64 %35, i64 0
  %37 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %36)
  %38 = icmp eq i32 %37, -1
  %39 = select i1 %38, i32 -573866021, i32 465210963
  br label %.backedge

40:                                               ; preds = %9
  %41 = load i32, i32* @x.9, align 4
  %42 = load i32, i32* @y.10, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1327154956, i32 1027260415
  br label %.backedge

50:                                               ; preds = %9
  %51 = load i32, i32* @x.9, align 4
  %52 = load i32, i32* @y.10, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 569607291, i32 1027260415
  br label %.backedge

60:                                               ; preds = %9
  br label %.backedge

61:                                               ; preds = %9
  br label %.backedge

62:                                               ; preds = %9
  %63 = add i32 %.094, 1
  br label %.backedge

64:                                               ; preds = %9
  br label %.backedge

65:                                               ; preds = %9
  %66 = load i32, i32* @x.9, align 4
  %67 = load i32, i32* @y.10, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 -1907598700, i32 -330285836
  br label %.backedge

75:                                               ; preds = %9
  %76 = icmp slt i32 %.092, 8
  store i1 %76, i1* %8, align 1
  %77 = load i32, i32* @x.9, align 4
  %78 = load i32, i32* @y.10, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 -930427999, i32 -330285836
  br label %.backedge

86:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %87 = select i1 %.0..0..0., i32 615280929, i32 -589091291
  br label %.backedge

88:                                               ; preds = %9
  br label %.backedge

89:                                               ; preds = %9
  %90 = icmp slt i32 %.090, 8
  %91 = select i1 %90, i32 1343319723, i32 -1134482782
  br label %.backedge

92:                                               ; preds = %9
  %93 = sext i32 %.092 to i64
  %94 = sext i32 %.090 to i64
  %95 = getelementptr inbounds [15 x [15 x i8]], [15 x [15 x i8]]* @board1, i64 0, i64 %93, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = sext i8 %96 to i32
  %98 = add nsw i32 %97, -48
  %99 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %93, i64 %94
  store i32 %98, i32* %99, align 4
  br label %.backedge

100:                                              ; preds = %9
  %101 = add i32 %.090, 1
  br label %.backedge

102:                                              ; preds = %9
  %103 = load i32, i32* @x.9, align 4
  %104 = load i32, i32* @y.10, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -468361955, i32 1337082261
  br label %.backedge

112:                                              ; preds = %9
  %113 = load i32, i32* @x.9, align 4
  %114 = load i32, i32* @y.10, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 -869256705, i32 1337082261
  br label %.backedge

122:                                              ; preds = %9
  br label %.backedge

123:                                              ; preds = %9
  %124 = add i32 %.092, 1
  br label %.backedge

125:                                              ; preds = %9
  %.not = icmp eq i8 %.096, 0
  %126 = select i1 %.not, i32 -1679181868, i32 1652991636
  br label %.backedge

127:                                              ; preds = %9
  br label %.backedge

128:                                              ; preds = %9
  br label %.backedge

129:                                              ; preds = %9
  %130 = icmp slt i32 %.088, 8
  %131 = select i1 %130, i32 1084165992, i32 -825110450
  br label %.backedge

132:                                              ; preds = %9
  br label %.backedge

133:                                              ; preds = %9
  %134 = icmp slt i32 %.086, 8
  %135 = select i1 %134, i32 1974414214, i32 -1453919644
  br label %.backedge

136:                                              ; preds = %9
  %137 = sext i32 %.088 to i64
  %138 = sext i32 %.086 to i64
  %139 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %137, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 1
  %142 = select i1 %141, i32 -232373742, i32 686943708
  br label %.backedge

143:                                              ; preds = %9
  %144 = sext i32 %.088 to i64
  %145 = add i32 %.086, 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %144, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 1
  %150 = select i1 %149, i32 -1249205405, i32 1820988889
  br label %.backedge

151:                                              ; preds = %9
  %152 = add i32 %.088, 1
  %153 = sext i32 %152 to i64
  %154 = sext i32 %.086 to i64
  %155 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %153, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 1
  %158 = select i1 %157, i32 -1240284445, i32 1820988889
  br label %.backedge

159:                                              ; preds = %9
  %.neg105 = add i32 %.088, 1
  %160 = sext i32 %.neg105 to i64
  %161 = add i32 %.086, 1
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %160, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 1
  %166 = select i1 %165, i32 -2029447171, i32 1820988889
  br label %.backedge

167:                                              ; preds = %9
  %168 = load i32, i32* @x.9, align 4
  %169 = load i32, i32* @y.10, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -906833675, i32 1027553438
  br label %.backedge

177:                                              ; preds = %9
  %178 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %179 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %178, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %180 = load i32, i32* @x.9, align 4
  %181 = load i32, i32* @y.10, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 839387338, i32 1027553438
  br label %.backedge

189:                                              ; preds = %9
  br label %.backedge

190:                                              ; preds = %9
  %191 = load i32, i32* @x.9, align 4
  %192 = load i32, i32* @y.10, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 1930077672, i32 1366540735
  br label %.backedge

200:                                              ; preds = %9
  %201 = add i32 %.088, 1
  %202 = sext i32 %201 to i64
  %203 = sext i32 %.086 to i64
  %204 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %202, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 1
  store i1 %206, i1* %7, align 1
  %207 = load i32, i32* @x.9, align 4
  %208 = load i32, i32* @y.10, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1937125731, i32 1366540735
  br label %.backedge

216:                                              ; preds = %9
  %.0..0..0.79 = load volatile i1, i1* %7, align 1
  %217 = select i1 %.0..0..0.79, i32 -574336045, i32 1659412557
  br label %.backedge

218:                                              ; preds = %9
  %219 = load i32, i32* @x.9, align 4
  %220 = load i32, i32* @y.10, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 1224723767, i32 -1212729364
  br label %.backedge

228:                                              ; preds = %9
  %229 = add i32 %.088, 2
  %230 = sext i32 %229 to i64
  %231 = sext i32 %.086 to i64
  %232 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %230, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = icmp eq i32 %233, 1
  store i1 %234, i1* %6, align 1
  %235 = load i32, i32* @x.9, align 4
  %236 = load i32, i32* @y.10, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 -416678233, i32 -1212729364
  br label %.backedge

244:                                              ; preds = %9
  %.0..0..0.80 = load volatile i1, i1* %6, align 1
  %245 = select i1 %.0..0..0.80, i32 449361005, i32 1659412557
  br label %.backedge

246:                                              ; preds = %9
  %247 = add i32 %.088, 3
  %248 = sext i32 %247 to i64
  %249 = sext i32 %.086 to i64
  %250 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %248, i64 %249
  %251 = load i32, i32* %250, align 4
  %252 = icmp eq i32 %251, 1
  %253 = select i1 %252, i32 1479320478, i32 1659412557
  br label %.backedge

254:                                              ; preds = %9
  %255 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %256 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %255, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

257:                                              ; preds = %9
  %258 = sext i32 %.088 to i64
  %259 = add i32 %.086, 1
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %258, i64 %260
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, 1
  %264 = select i1 %263, i32 -690187799, i32 -72517791
  br label %.backedge

265:                                              ; preds = %9
  %266 = load i32, i32* @x.9, align 4
  %267 = load i32, i32* @y.10, align 4
  %268 = add i32 %266, -1
  %269 = mul i32 %268, %266
  %270 = and i32 %269, 1
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %272, %271
  %274 = select i1 %273, i32 -54264181, i32 -139123049
  br label %.backedge

275:                                              ; preds = %9
  %276 = sext i32 %.088 to i64
  %.neg104 = add i32 %.086, 2
  %277 = sext i32 %.neg104 to i64
  %278 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %276, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 1
  store i1 %280, i1* %5, align 1
  %281 = load i32, i32* @x.9, align 4
  %282 = load i32, i32* @y.10, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 -1884791189, i32 -139123049
  br label %.backedge

290:                                              ; preds = %9
  %.0..0..0.81 = load volatile i1, i1* %5, align 1
  %291 = select i1 %.0..0..0.81, i32 -230816417, i32 -72517791
  br label %.backedge

292:                                              ; preds = %9
  %293 = sext i32 %.088 to i64
  %.neg103 = add i32 %.086, 3
  %294 = sext i32 %.neg103 to i64
  %295 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %293, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = icmp eq i32 %296, 1
  %298 = select i1 %297, i32 -52381008, i32 -72517791
  br label %.backedge

299:                                              ; preds = %9
  %300 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %301 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %300, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

302:                                              ; preds = %9
  %303 = add i32 %.088, 1
  %304 = sext i32 %303 to i64
  %305 = add i32 %.086, -1
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %304, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = icmp eq i32 %308, 1
  %310 = select i1 %309, i32 430123881, i32 -381546519
  br label %.backedge

311:                                              ; preds = %9
  %312 = load i32, i32* @x.9, align 4
  %313 = load i32, i32* @y.10, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 855964677, i32 -1700431790
  br label %.backedge

321:                                              ; preds = %9
  %322 = add i32 %.088, 1
  %323 = sext i32 %322 to i64
  %324 = sext i32 %.086 to i64
  %325 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %323, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = icmp eq i32 %326, 1
  store i1 %327, i1* %4, align 1
  %328 = load i32, i32* @x.9, align 4
  %329 = load i32, i32* @y.10, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 209649938, i32 -1700431790
  br label %.backedge

337:                                              ; preds = %9
  %.0..0..0.82 = load volatile i1, i1* %4, align 1
  %338 = select i1 %.0..0..0.82, i32 1310078937, i32 -381546519
  br label %.backedge

339:                                              ; preds = %9
  %340 = add i32 %.088, 1
  %341 = sext i32 %340 to i64
  %342 = sext i32 %.086 to i64
  %343 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %341, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = icmp eq i32 %344, 1
  %346 = select i1 %345, i32 -241037798, i32 -381546519
  br label %.backedge

347:                                              ; preds = %9
  %348 = load i32, i32* @x.9, align 4
  %349 = load i32, i32* @y.10, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 -636325638, i32 -25188738
  br label %.backedge

357:                                              ; preds = %9
  %.neg102 = add i32 %.088, 2
  %358 = sext i32 %.neg102 to i64
  %359 = add i32 %.086, -1
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %358, i64 %360
  %362 = load i32, i32* %361, align 4
  %363 = icmp eq i32 %362, 1
  store i1 %363, i1* %3, align 1
  %364 = load i32, i32* @x.9, align 4
  %365 = load i32, i32* @y.10, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 1064148616, i32 -25188738
  br label %.backedge

373:                                              ; preds = %9
  %.0..0..0.83 = load volatile i1, i1* %3, align 1
  %374 = select i1 %.0..0..0.83, i32 2004871939, i32 -381546519
  br label %.backedge

375:                                              ; preds = %9
  %376 = load i32, i32* @x.9, align 4
  %377 = load i32, i32* @y.10, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 -596402231, i32 -1443236082
  br label %.backedge

385:                                              ; preds = %9
  %386 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %387 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %386, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %388 = load i32, i32* @x.9, align 4
  %389 = load i32, i32* @y.10, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 -1124041844, i32 -1443236082
  br label %.backedge

397:                                              ; preds = %9
  br label %.backedge

398:                                              ; preds = %9
  %399 = sext i32 %.088 to i64
  %400 = add i32 %.086, 1
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %399, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = icmp eq i32 %403, 1
  %405 = select i1 %404, i32 -761749807, i32 -159139003
  br label %.backedge

406:                                              ; preds = %9
  %407 = add i32 %.088, 1
  %408 = sext i32 %407 to i64
  %409 = add i32 %.086, 1
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %408, i64 %410
  %412 = load i32, i32* %411, align 4
  %413 = icmp eq i32 %412, 1
  %414 = select i1 %413, i32 1070393658, i32 -159139003
  br label %.backedge

415:                                              ; preds = %9
  %416 = load i32, i32* @x.9, align 4
  %417 = load i32, i32* @y.10, align 4
  %418 = add i32 %416, -1
  %419 = mul i32 %418, %416
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %422, %421
  %424 = select i1 %423, i32 -1903824280, i32 995872156
  br label %.backedge

425:                                              ; preds = %9
  %426 = add i32 %.088, 1
  %427 = sext i32 %426 to i64
  %428 = add i32 %.086, 2
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %427, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = icmp eq i32 %431, 1
  store i1 %432, i1* %2, align 1
  %433 = load i32, i32* @x.9, align 4
  %434 = load i32, i32* @y.10, align 4
  %435 = add i32 %433, -1
  %436 = mul i32 %435, %433
  %437 = and i32 %436, 1
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %439, %438
  %441 = select i1 %440, i32 1013523924, i32 995872156
  br label %.backedge

442:                                              ; preds = %9
  %.0..0..0.84 = load volatile i1, i1* %2, align 1
  %443 = select i1 %.0..0..0.84, i32 1665317338, i32 -159139003
  br label %.backedge

444:                                              ; preds = %9
  %445 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  %446 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %445, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

447:                                              ; preds = %9
  %.neg101 = add i32 %.088, 1
  %448 = sext i32 %.neg101 to i64
  %449 = sext i32 %.086 to i64
  %450 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %448, i64 %449
  %451 = load i32, i32* %450, align 4
  %452 = icmp eq i32 %451, 1
  %453 = select i1 %452, i32 -712801522, i32 2062913686
  br label %.backedge

454:                                              ; preds = %9
  %.neg100 = add i32 %.088, 1
  %455 = sext i32 %.neg100 to i64
  %456 = add i32 %.086, 1
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %455, i64 %457
  %459 = load i32, i32* %458, align 4
  %460 = icmp eq i32 %459, 1
  %461 = select i1 %460, i32 -449531385, i32 2062913686
  br label %.backedge

462:                                              ; preds = %9
  %463 = load i32, i32* @x.9, align 4
  %464 = load i32, i32* @y.10, align 4
  %465 = add i32 %463, -1
  %466 = mul i32 %465, %463
  %467 = and i32 %466, 1
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %469, %468
  %471 = select i1 %470, i32 1487869559, i32 900314847
  br label %.backedge

472:                                              ; preds = %9
  %473 = add i32 %.088, 2
  %474 = sext i32 %473 to i64
  %475 = add i32 %.086, 1
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %474, i64 %476
  %478 = load i32, i32* %477, align 4
  %479 = icmp eq i32 %478, 1
  store i1 %479, i1* %1, align 1
  %480 = load i32, i32* @x.9, align 4
  %481 = load i32, i32* @y.10, align 4
  %482 = add i32 %480, -1
  %483 = mul i32 %482, %480
  %484 = and i32 %483, 1
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %486, %485
  %488 = select i1 %487, i32 -1247283612, i32 900314847
  br label %.backedge

489:                                              ; preds = %9
  %.0..0..0.85 = load volatile i1, i1* %1, align 1
  %490 = select i1 %.0..0..0.85, i32 1490362353, i32 2062913686
  br label %.backedge

491:                                              ; preds = %9
  %492 = load i32, i32* @x.9, align 4
  %493 = load i32, i32* @y.10, align 4
  %494 = add i32 %492, -1
  %495 = mul i32 %494, %492
  %496 = and i32 %495, 1
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %498, %497
  %500 = select i1 %499, i32 -114826373, i32 -744780699
  br label %.backedge

501:                                              ; preds = %9
  %502 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  %503 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %502, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %504 = load i32, i32* @x.9, align 4
  %505 = load i32, i32* @y.10, align 4
  %506 = add i32 %504, -1
  %507 = mul i32 %506, %504
  %508 = and i32 %507, 1
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %510, %509
  %512 = select i1 %511, i32 1672268030, i32 -744780699
  br label %.backedge

513:                                              ; preds = %9
  br label %.backedge

514:                                              ; preds = %9
  %515 = sext i32 %.088 to i64
  %.neg99 = add i32 %.086, 1
  %516 = sext i32 %.neg99 to i64
  %517 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %515, i64 %516
  %518 = load i32, i32* %517, align 4
  %519 = icmp eq i32 %518, 1
  %520 = select i1 %519, i32 1918320180, i32 1926970346
  br label %.backedge

521:                                              ; preds = %9
  %.neg98 = add i32 %.088, 1
  %522 = sext i32 %.neg98 to i64
  %523 = add i32 %.086, -1
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %522, i64 %524
  %526 = load i32, i32* %525, align 4
  %527 = icmp eq i32 %526, 1
  %528 = select i1 %527, i32 -768888689, i32 1926970346
  br label %.backedge

529:                                              ; preds = %9
  %.neg = add i32 %.088, 1
  %530 = sext i32 %.neg to i64
  %531 = sext i32 %.086 to i64
  %532 = getelementptr inbounds [15 x [15 x i32]], [15 x [15 x i32]]* @board, i64 0, i64 %530, i64 %531
  %533 = load i32, i32* %532, align 4
  %534 = icmp eq i32 %533, 1
  %535 = select i1 %534, i32 301616289, i32 1926970346
  br label %.backedge

536:                                              ; preds = %9
  %537 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  %538 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %537, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

539:                                              ; preds = %9
  br label %.backedge

540:                                              ; preds = %9
  br label %.backedge

541:                                              ; preds = %9
  br label %.backedge

542:                                              ; preds = %9
  %543 = load i32, i32* @x.9, align 4
  %544 = load i32, i32* @y.10, align 4
  %545 = add i32 %543, -1
  %546 = mul i32 %545, %543
  %547 = and i32 %546, 1
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %549, %548
  %551 = select i1 %550, i32 -222660514, i32 -1396835924
  br label %.backedge

552:                                              ; preds = %9
  %553 = load i32, i32* @x.9, align 4
  %554 = load i32, i32* @y.10, align 4
  %555 = add i32 %553, -1
  %556 = mul i32 %555, %553
  %557 = and i32 %556, 1
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %554, 10
  %560 = or i1 %559, %558
  %561 = select i1 %560, i32 -2086411653, i32 -1396835924
  br label %.backedge

562:                                              ; preds = %9
  br label %.backedge

563:                                              ; preds = %9
  %564 = load i32, i32* @x.9, align 4
  %565 = load i32, i32* @y.10, align 4
  %566 = add i32 %564, -1
  %567 = mul i32 %566, %564
  %568 = and i32 %567, 1
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %570, %569
  %572 = select i1 %571, i32 -407051533, i32 -166621507
  br label %.backedge

573:                                              ; preds = %9
  %574 = load i32, i32* @x.9, align 4
  %575 = load i32, i32* @y.10, align 4
  %576 = add i32 %574, -1
  %577 = mul i32 %576, %574
  %578 = and i32 %577, 1
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %580, %579
  %582 = select i1 %581, i32 550650250, i32 -166621507
  br label %.backedge

583:                                              ; preds = %9
  br label %.backedge

584:                                              ; preds = %9
  br label %.backedge

585:                                              ; preds = %9
  br label %.backedge

586:                                              ; preds = %9
  br label %.backedge

587:                                              ; preds = %9
  %588 = add i32 %.086, 1
  br label %.backedge

589:                                              ; preds = %9
  br label %.backedge

590:                                              ; preds = %9
  %591 = load i32, i32* @x.9, align 4
  %592 = load i32, i32* @y.10, align 4
  %593 = add i32 %591, -1
  %594 = mul i32 %593, %591
  %595 = and i32 %594, 1
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %597, %596
  %599 = select i1 %598, i32 1959878374, i32 1496968941
  br label %.backedge

600:                                              ; preds = %9
  %601 = add i32 %.088, 1
  %602 = load i32, i32* @x.9, align 4
  %603 = load i32, i32* @y.10, align 4
  %604 = add i32 %602, -1
  %605 = mul i32 %604, %602
  %606 = and i32 %605, 1
  %607 = icmp eq i32 %606, 0
  %608 = icmp slt i32 %603, 10
  %609 = or i1 %608, %607
  %610 = select i1 %609, i32 -771312780, i32 1496968941
  br label %.backedge

611:                                              ; preds = %9
  br label %.backedge

612:                                              ; preds = %9
  br label %.backedge

613:                                              ; preds = %9
  %614 = load i32, i32* @x.9, align 4
  %615 = load i32, i32* @y.10, align 4
  %616 = add i32 %614, -1
  %617 = mul i32 %616, %614
  %618 = and i32 %617, 1
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %620, %619
  %622 = select i1 %621, i32 -1847864598, i32 -1760503115
  br label %.backedge

623:                                              ; preds = %9
  %624 = load i32, i32* @x.9, align 4
  %625 = load i32, i32* @y.10, align 4
  %626 = add i32 %624, -1
  %627 = mul i32 %626, %624
  %628 = and i32 %627, 1
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %630, %629
  %632 = select i1 %631, i32 1562558838, i32 -1760503115
  br label %.backedge

633:                                              ; preds = %9
  ret i32 0

634:                                              ; preds = %9
  br label %.backedge

635:                                              ; preds = %9
  br label %.backedge

636:                                              ; preds = %9
  br label %.backedge

637:                                              ; preds = %9
  br label %.backedge

638:                                              ; preds = %9
  %639 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %640 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %639, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

641:                                              ; preds = %9
  br label %.backedge

642:                                              ; preds = %9
  br label %.backedge

643:                                              ; preds = %9
  br label %.backedge

644:                                              ; preds = %9
  br label %.backedge

645:                                              ; preds = %9
  br label %.backedge

646:                                              ; preds = %9
  %647 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %648 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %647, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

649:                                              ; preds = %9
  br label %.backedge

650:                                              ; preds = %9
  br label %.backedge

651:                                              ; preds = %9
  %652 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  %653 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %652, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

654:                                              ; preds = %9
  br label %.backedge

655:                                              ; preds = %9
  br label %.backedge

656:                                              ; preds = %9
  %657 = add i32 %.088, 1
  br label %.backedge

658:                                              ; preds = %9
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s538220314.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.11, align 4
  %4 = load i32, i32* @y.12, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 632079071, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 632079071, label %11
    i32 -2072017160, label %14
    i32 1262831387, label %24
    i32 -1575847994, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -2072017160, i32 -1575847994
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.11, align 4
  %16 = load i32, i32* @y.12, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1262831387, i32 -1575847994
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -2072017160, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
