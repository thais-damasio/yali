; ModuleID = 'build_ollvm/programs/p00036/s145912103.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s145912103.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s145912103.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@str.1 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@str.2 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@str.3 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@str.4 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@str.5 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@str.6 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@str.7 = private unnamed_addr constant [2 x i8] c"A\00", align 1

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1392806012, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1392806012, label %11
    i32 38828533, label %14
    i32 374993773, label %25
    i32 -1271519677, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 38828533, i32 -1271519677
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 374993773, i32 -1271519677
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 38828533, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca [12 x [12 x i8]], align 16
  br label %11

11:                                               ; preds = %.backedge, %0
  %.097 = phi i32 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i8 [ 0, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ 0, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.0 = phi i32 [ -189175271, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -189175271, label %12
    i32 -740419362, label %15
    i32 -1660064772, label %16
    i32 -119064670, label %19
    i32 1419791059, label %29
    i32 1944911896, label %42
    i32 -1120099628, label %43
    i32 2009019468, label %45
    i32 -1169784143, label %46
    i32 1019897358, label %48
    i32 -1593613491, label %58
    i32 1460644358, label %68
    i32 1895355959, label %69
    i32 456707947, label %70
    i32 1654407175, label %73
    i32 -415303053, label %83
    i32 -1485314830, label %97
    i32 409971888, label %99
    i32 1646616096, label %100
    i32 -1098554737, label %101
    i32 2127848515, label %103
    i32 -1059177668, label %105
    i32 1636200745, label %106
    i32 -117194505, label %107
    i32 1959084129, label %117
    i32 12958671, label %128
    i32 -45266402, label %130
    i32 1557072920, label %139
    i32 865136465, label %142
    i32 -1975248239, label %143
    i32 -1740136886, label %145
    i32 -966443832, label %153
    i32 -1657402507, label %161
    i32 -751480748, label %171
    i32 2006926387, label %188
    i32 319604372, label %190
    i32 1354029688, label %191
    i32 630393846, label %201
    i32 1024033432, label %216
    i32 1606838255, label %218
    i32 -1648212529, label %228
    i32 1177325767, label %244
    i32 -635540723, label %246
    i32 -1600747895, label %256
    i32 1955736839, label %271
    i32 735014127, label %273
    i32 -1545336325, label %274
    i32 -843922342, label %282
    i32 -1308815521, label %290
    i32 311700851, label %300
    i32 -426249265, label %316
    i32 1729614994, label %318
    i32 -754169920, label %319
    i32 915914854, label %328
    i32 520701110, label %336
    i32 -788624294, label %346
    i32 1097475445, label %363
    i32 -1631286004, label %365
    i32 -972945661, label %366
    i32 89830804, label %374
    i32 -1170438507, label %384
    i32 -778155794, label %401
    i32 2074465114, label %403
    i32 -253085229, label %411
    i32 -567983543, label %421
    i32 -2060268341, label %431
    i32 -1502085967, label %432
    i32 -1158730836, label %439
    i32 2029810805, label %448
    i32 1620698530, label %457
    i32 15281233, label %458
    i32 -500802213, label %465
    i32 -579348729, label %472
    i32 1597584325, label %481
    i32 1558649752, label %482
    i32 1989739248, label %492
    i32 1120224198, label %502
    i32 1449768932, label %503
    i32 -2074450784, label %504
    i32 2069822151, label %505
    i32 -1063338035, label %506
    i32 -1996748890, label %516
    i32 -2033583931, label %526
    i32 -890202393, label %527
    i32 -823827981, label %537
    i32 443790431, label %547
    i32 -2134222940, label %548
    i32 936063470, label %549
    i32 792483943, label %550
    i32 -937614010, label %554
    i32 -1593365918, label %555
    i32 1375942495, label %559
    i32 -1314531880, label %560
    i32 -1773564934, label %561
    i32 2122173995, label %562
    i32 801971844, label %563
    i32 -1613840418, label %564
    i32 1075489050, label %565
    i32 695075568, label %566
    i32 -815779139, label %567
    i32 -369658941, label %568
    i32 -955533855, label %569
    i32 -651097862, label %570
  ]

.backedge:                                        ; preds = %11, %570, %569, %568, %567, %566, %565, %564, %563, %562, %561, %560, %559, %555, %554, %550, %548, %547, %537, %527, %526, %516, %506, %505, %504, %503, %502, %492, %482, %481, %472, %465, %458, %457, %448, %439, %432, %431, %421, %411, %403, %401, %384, %374, %366, %365, %363, %346, %336, %328, %319, %318, %316, %300, %290, %282, %274, %273, %271, %256, %246, %244, %228, %218, %216, %201, %191, %190, %188, %171, %161, %153, %145, %143, %142, %139, %130, %128, %117, %107, %106, %105, %103, %101, %100, %99, %97, %83, %73, %70, %69, %68, %58, %48, %46, %45, %43, %42, %29, %19, %16, %15, %12
  %.097.be = phi i32 [ %.097, %11 ], [ %.097, %570 ], [ %.097, %569 ], [ %.097, %568 ], [ %.097, %567 ], [ %.097, %566 ], [ %.097, %565 ], [ %.097, %564 ], [ %.097, %563 ], [ %.097, %562 ], [ %.097, %561 ], [ %.097, %560 ], [ %.097, %559 ], [ %.097, %555 ], [ %.097, %554 ], [ %.097, %550 ], [ %.097, %548 ], [ %.097, %547 ], [ %.097, %537 ], [ %.097, %527 ], [ %.097, %526 ], [ %.097, %516 ], [ %.097, %506 ], [ %.097, %505 ], [ %.097, %504 ], [ %.097, %503 ], [ %.097, %502 ], [ %.097, %492 ], [ %.097, %482 ], [ %.097, %481 ], [ %.097, %472 ], [ %.097, %465 ], [ %.097, %458 ], [ %.097, %457 ], [ %.097, %448 ], [ %.097, %439 ], [ %.097, %432 ], [ %.097, %431 ], [ %.097, %421 ], [ %.097, %411 ], [ %.097, %403 ], [ %.097, %401 ], [ %.097, %384 ], [ %.097, %374 ], [ %.097, %366 ], [ %.097, %365 ], [ %.097, %363 ], [ %.097, %346 ], [ %.097, %336 ], [ %.097, %328 ], [ %.097, %319 ], [ %.097, %318 ], [ %.097, %316 ], [ %.097, %300 ], [ %.097, %290 ], [ %.097, %282 ], [ %.097, %274 ], [ %.097, %273 ], [ %.097, %271 ], [ %.097, %256 ], [ %.097, %246 ], [ %.097, %244 ], [ %.097, %228 ], [ %.097, %218 ], [ %.097, %216 ], [ %.097, %201 ], [ %.097, %191 ], [ %.097, %190 ], [ %.097, %188 ], [ %.097, %171 ], [ %.097, %161 ], [ %.097, %153 ], [ %.097, %145 ], [ %.097, %143 ], [ %.097, %142 ], [ %140, %139 ], [ %.097, %130 ], [ %.097, %128 ], [ %.097, %117 ], [ %.097, %107 ], [ %.097, %106 ], [ %.097, %105 ], [ %.097, %103 ], [ %.097, %101 ], [ %.097, %100 ], [ %.097, %99 ], [ %.097, %97 ], [ %.097, %83 ], [ %.097, %73 ], [ %.097, %70 ], [ %.097, %69 ], [ %.097, %68 ], [ %.097, %58 ], [ %.097, %48 ], [ %.097, %46 ], [ %.097, %45 ], [ %.097, %43 ], [ %.097, %42 ], [ %.097, %29 ], [ %.097, %19 ], [ %.097, %16 ], [ %.097, %15 ], [ %.097, %12 ]
  %.095.be = phi i32 [ %.095, %11 ], [ %.095, %570 ], [ %.095, %569 ], [ %.095, %568 ], [ %.095, %567 ], [ %.095, %566 ], [ %.095, %565 ], [ %.095, %564 ], [ %.095, %563 ], [ %.095, %562 ], [ %.095, %561 ], [ %.095, %560 ], [ %.095, %559 ], [ %.095, %555 ], [ %.095, %554 ], [ %.095, %550 ], [ %.095, %548 ], [ %.095, %547 ], [ %.095, %537 ], [ %.095, %527 ], [ %.095, %526 ], [ %.095, %516 ], [ %.095, %506 ], [ %.095, %505 ], [ %.095, %504 ], [ %.095, %503 ], [ %.095, %502 ], [ %.095, %492 ], [ %.095, %482 ], [ %.095, %481 ], [ %.095, %472 ], [ %.095, %465 ], [ %.095, %458 ], [ %.095, %457 ], [ %.095, %448 ], [ %.095, %439 ], [ %.095, %432 ], [ %.095, %431 ], [ %.095, %421 ], [ %.095, %411 ], [ %.095, %403 ], [ %.095, %401 ], [ %.095, %384 ], [ %.095, %374 ], [ %.095, %366 ], [ %.095, %365 ], [ %.095, %363 ], [ %.095, %346 ], [ %.095, %336 ], [ %.095, %328 ], [ %.095, %319 ], [ %.095, %318 ], [ %.095, %316 ], [ %.095, %300 ], [ %.095, %290 ], [ %.095, %282 ], [ %.095, %274 ], [ %.095, %273 ], [ %.095, %271 ], [ %.095, %256 ], [ %.095, %246 ], [ %.095, %244 ], [ %.095, %228 ], [ %.095, %218 ], [ %.095, %216 ], [ %.095, %201 ], [ %.095, %191 ], [ %.095, %190 ], [ %.095, %188 ], [ %.095, %171 ], [ %.095, %161 ], [ %.095, %153 ], [ %.095, %145 ], [ %.095, %143 ], [ %.095, %142 ], [ %141, %139 ], [ %.095, %130 ], [ %.095, %128 ], [ %.095, %117 ], [ %.095, %107 ], [ %.095, %106 ], [ %.095, %105 ], [ %.095, %103 ], [ %.095, %101 ], [ %.095, %100 ], [ %.095, %99 ], [ %.095, %97 ], [ %.095, %83 ], [ %.095, %73 ], [ %.095, %70 ], [ %.095, %69 ], [ %.095, %68 ], [ %.095, %58 ], [ %.095, %48 ], [ %.095, %46 ], [ %.095, %45 ], [ %.095, %43 ], [ %.095, %42 ], [ %.095, %29 ], [ %.095, %19 ], [ %.095, %16 ], [ %.095, %15 ], [ %.095, %12 ]
  %.093.be = phi i8 [ %.093, %11 ], [ %.093, %570 ], [ %.093, %569 ], [ %.093, %568 ], [ %.093, %567 ], [ %.093, %566 ], [ %.093, %565 ], [ %.093, %564 ], [ %.093, %563 ], [ %.093, %562 ], [ %.093, %561 ], [ %.093, %560 ], [ %.093, %559 ], [ %.093, %555 ], [ %.093, %554 ], [ %.093, %550 ], [ %.093, %548 ], [ %.093, %547 ], [ %.093, %537 ], [ %.093, %527 ], [ %.093, %526 ], [ %.093, %516 ], [ %.093, %506 ], [ %.093, %505 ], [ %.093, %504 ], [ %.093, %503 ], [ %.093, %502 ], [ %.093, %492 ], [ %.093, %482 ], [ %.093, %481 ], [ %.093, %472 ], [ %.093, %465 ], [ %.093, %458 ], [ %.093, %457 ], [ %.093, %448 ], [ %.093, %439 ], [ %.093, %432 ], [ %.093, %431 ], [ %.093, %421 ], [ %.093, %411 ], [ %.093, %403 ], [ %.093, %401 ], [ %.093, %384 ], [ %.093, %374 ], [ %.093, %366 ], [ %.093, %365 ], [ %.093, %363 ], [ %.093, %346 ], [ %.093, %336 ], [ %.093, %328 ], [ %.093, %319 ], [ %.093, %318 ], [ %.093, %316 ], [ %.093, %300 ], [ %.093, %290 ], [ %.093, %282 ], [ %.093, %274 ], [ %.093, %273 ], [ %.093, %271 ], [ %.093, %256 ], [ %.093, %246 ], [ %.093, %244 ], [ %.093, %228 ], [ %.093, %218 ], [ %.093, %216 ], [ %.093, %201 ], [ %.093, %191 ], [ %.093, %190 ], [ %.093, %188 ], [ %.093, %171 ], [ %.093, %161 ], [ %.093, %153 ], [ %.093, %145 ], [ %.093, %143 ], [ %.093, %142 ], [ %.093, %139 ], [ %.093, %130 ], [ %.093, %128 ], [ %.093, %117 ], [ %.093, %107 ], [ %.093, %106 ], [ %.093, %105 ], [ %.093, %103 ], [ %.093, %101 ], [ %.093, %100 ], [ 1, %99 ], [ %.093, %97 ], [ %.093, %83 ], [ %.093, %73 ], [ %.093, %70 ], [ %.093, %69 ], [ %.093, %68 ], [ %.093, %58 ], [ %.093, %48 ], [ %.093, %46 ], [ %.093, %45 ], [ %.093, %43 ], [ %.093, %42 ], [ %.093, %29 ], [ %.093, %19 ], [ %.093, %16 ], [ %.093, %15 ], [ %.093, %12 ]
  %.091.be = phi i32 [ %.091, %11 ], [ %.091, %570 ], [ %.091, %569 ], [ %.091, %568 ], [ %.091, %567 ], [ %.091, %566 ], [ %.091, %565 ], [ %.091, %564 ], [ %.091, %563 ], [ %.091, %562 ], [ %.091, %561 ], [ %.091, %560 ], [ %.091, %559 ], [ %.091, %555 ], [ %.091, %554 ], [ %.091, %550 ], [ %.091, %548 ], [ %.091, %547 ], [ %.091, %537 ], [ %.091, %527 ], [ %.091, %526 ], [ %.091, %516 ], [ %.091, %506 ], [ %.091, %505 ], [ %.091, %504 ], [ %.091, %503 ], [ %.091, %502 ], [ %.091, %492 ], [ %.091, %482 ], [ %.091, %481 ], [ %.091, %472 ], [ %.091, %465 ], [ %.091, %458 ], [ %.091, %457 ], [ %.091, %448 ], [ %.091, %439 ], [ %.091, %432 ], [ %.091, %431 ], [ %.091, %421 ], [ %.091, %411 ], [ %.091, %403 ], [ %.091, %401 ], [ %.091, %384 ], [ %.091, %374 ], [ %.091, %366 ], [ %.091, %365 ], [ %.091, %363 ], [ %.091, %346 ], [ %.091, %336 ], [ %.091, %328 ], [ %.091, %319 ], [ %.091, %318 ], [ %.091, %316 ], [ %.091, %300 ], [ %.091, %290 ], [ %.091, %282 ], [ %.091, %274 ], [ %.091, %273 ], [ %.091, %271 ], [ %.091, %256 ], [ %.091, %246 ], [ %.091, %244 ], [ %.091, %228 ], [ %.091, %218 ], [ %.091, %216 ], [ %.091, %201 ], [ %.091, %191 ], [ %.091, %190 ], [ %.091, %188 ], [ %.091, %171 ], [ %.091, %161 ], [ %.091, %153 ], [ %.091, %145 ], [ %.091, %143 ], [ %.091, %142 ], [ %.091, %139 ], [ %.091, %130 ], [ %.091, %128 ], [ %.091, %117 ], [ %.091, %107 ], [ %.091, %106 ], [ %.091, %105 ], [ %.091, %103 ], [ %.091, %101 ], [ %.091, %100 ], [ %.091, %99 ], [ %.091, %97 ], [ %.091, %83 ], [ %.091, %73 ], [ %.091, %70 ], [ %.091, %69 ], [ %.091, %68 ], [ %.091, %58 ], [ %.091, %48 ], [ %47, %46 ], [ %.091, %45 ], [ %.091, %43 ], [ %.091, %42 ], [ %.091, %29 ], [ %.091, %19 ], [ %.091, %16 ], [ %.091, %15 ], [ %.091, %12 ]
  %.089.be = phi i32 [ %.089, %11 ], [ %.089, %570 ], [ %.089, %569 ], [ %.089, %568 ], [ %.089, %567 ], [ %.089, %566 ], [ %.089, %565 ], [ %.089, %564 ], [ %.089, %563 ], [ %.089, %562 ], [ %.089, %561 ], [ %.089, %560 ], [ %.089, %559 ], [ %.089, %555 ], [ %.089, %554 ], [ %.089, %550 ], [ %.089, %548 ], [ %.089, %547 ], [ %.089, %537 ], [ %.089, %527 ], [ %.089, %526 ], [ %.089, %516 ], [ %.089, %506 ], [ %.089, %505 ], [ %.089, %504 ], [ %.089, %503 ], [ %.089, %502 ], [ %.089, %492 ], [ %.089, %482 ], [ %.089, %481 ], [ %.089, %472 ], [ %.089, %465 ], [ %.089, %458 ], [ %.089, %457 ], [ %.089, %448 ], [ %.089, %439 ], [ %.089, %432 ], [ %.089, %431 ], [ %.089, %421 ], [ %.089, %411 ], [ %.089, %403 ], [ %.089, %401 ], [ %.089, %384 ], [ %.089, %374 ], [ %.089, %366 ], [ %.089, %365 ], [ %.089, %363 ], [ %.089, %346 ], [ %.089, %336 ], [ %.089, %328 ], [ %.089, %319 ], [ %.089, %318 ], [ %.089, %316 ], [ %.089, %300 ], [ %.089, %290 ], [ %.089, %282 ], [ %.089, %274 ], [ %.089, %273 ], [ %.089, %271 ], [ %.089, %256 ], [ %.089, %246 ], [ %.089, %244 ], [ %.089, %228 ], [ %.089, %218 ], [ %.089, %216 ], [ %.089, %201 ], [ %.089, %191 ], [ %.089, %190 ], [ %.089, %188 ], [ %.089, %171 ], [ %.089, %161 ], [ %.089, %153 ], [ %.089, %145 ], [ %.089, %143 ], [ %.089, %142 ], [ %.089, %139 ], [ %.089, %130 ], [ %.089, %128 ], [ %.089, %117 ], [ %.089, %107 ], [ %.089, %106 ], [ %.089, %105 ], [ %.089, %103 ], [ %.089, %101 ], [ %.089, %100 ], [ %.089, %99 ], [ %.089, %97 ], [ %.089, %83 ], [ %.089, %73 ], [ %.089, %70 ], [ %.089, %69 ], [ %.089, %68 ], [ %.089, %58 ], [ %.089, %48 ], [ %.089, %46 ], [ %.089, %45 ], [ %44, %43 ], [ %.089, %42 ], [ %.089, %29 ], [ %.089, %19 ], [ %.089, %16 ], [ 0, %15 ], [ %.089, %12 ]
  %.087.be = phi i32 [ %.087, %11 ], [ %.087, %570 ], [ %.087, %569 ], [ %.087, %568 ], [ %.087, %567 ], [ %.087, %566 ], [ %.087, %565 ], [ %.087, %564 ], [ %.087, %563 ], [ %.087, %562 ], [ %.087, %561 ], [ %.087, %560 ], [ %.087, %559 ], [ %.087, %555 ], [ %.087, %554 ], [ %.087, %550 ], [ %.087, %548 ], [ %.087, %547 ], [ %.087, %537 ], [ %.087, %527 ], [ %.087, %526 ], [ %.087, %516 ], [ %.087, %506 ], [ %.087, %505 ], [ %.087, %504 ], [ %.087, %503 ], [ %.087, %502 ], [ %.087, %492 ], [ %.087, %482 ], [ %.087, %481 ], [ %.087, %472 ], [ %.087, %465 ], [ %.087, %458 ], [ %.087, %457 ], [ %.087, %448 ], [ %.087, %439 ], [ %.087, %432 ], [ %.087, %431 ], [ %.087, %421 ], [ %.087, %411 ], [ %.087, %403 ], [ %.087, %401 ], [ %.087, %384 ], [ %.087, %374 ], [ %.087, %366 ], [ %.087, %365 ], [ %.087, %363 ], [ %.087, %346 ], [ %.087, %336 ], [ %.087, %328 ], [ %.087, %319 ], [ %.087, %318 ], [ %.087, %316 ], [ %.087, %300 ], [ %.087, %290 ], [ %.087, %282 ], [ %.087, %274 ], [ %.087, %273 ], [ %.087, %271 ], [ %.087, %256 ], [ %.087, %246 ], [ %.087, %244 ], [ %.087, %228 ], [ %.087, %218 ], [ %.087, %216 ], [ %.087, %201 ], [ %.087, %191 ], [ %.087, %190 ], [ %.087, %188 ], [ %.087, %171 ], [ %.087, %161 ], [ %.087, %153 ], [ %.087, %145 ], [ %.087, %143 ], [ %.087, %142 ], [ %.087, %139 ], [ %.087, %130 ], [ %.087, %128 ], [ %.087, %117 ], [ %.087, %107 ], [ %.087, %106 ], [ %.087, %105 ], [ %.087, %103 ], [ %102, %101 ], [ %.087, %100 ], [ %.087, %99 ], [ %.087, %97 ], [ %.087, %83 ], [ %.087, %73 ], [ %.087, %70 ], [ 0, %69 ], [ %.087, %68 ], [ %.087, %58 ], [ %.087, %48 ], [ %.087, %46 ], [ %.087, %45 ], [ %.087, %43 ], [ %.087, %42 ], [ %.087, %29 ], [ %.087, %19 ], [ %.087, %16 ], [ %.087, %15 ], [ %.087, %12 ]
  %.085.be = phi i32 [ %.085, %11 ], [ %.085, %570 ], [ %.085, %569 ], [ %.085, %568 ], [ %.085, %567 ], [ %.085, %566 ], [ %.085, %565 ], [ %.085, %564 ], [ %.085, %563 ], [ %.085, %562 ], [ %.085, %561 ], [ %.085, %560 ], [ %.085, %559 ], [ %.085, %555 ], [ %.085, %554 ], [ %.085, %550 ], [ %.085, %548 ], [ %.085, %547 ], [ %.085, %537 ], [ %.085, %527 ], [ %.085, %526 ], [ %.085, %516 ], [ %.085, %506 ], [ %.085, %505 ], [ %.085, %504 ], [ %.085, %503 ], [ %.085, %502 ], [ %.085, %492 ], [ %.085, %482 ], [ %.085, %481 ], [ %.085, %472 ], [ %.085, %465 ], [ %.085, %458 ], [ %.085, %457 ], [ %.085, %448 ], [ %.085, %439 ], [ %.085, %432 ], [ %.085, %431 ], [ %.085, %421 ], [ %.085, %411 ], [ %.085, %403 ], [ %.085, %401 ], [ %.085, %384 ], [ %.085, %374 ], [ %.085, %366 ], [ %.085, %365 ], [ %.085, %363 ], [ %.085, %346 ], [ %.085, %336 ], [ %.085, %328 ], [ %.085, %319 ], [ %.085, %318 ], [ %.085, %316 ], [ %.085, %300 ], [ %.085, %290 ], [ %.085, %282 ], [ %.085, %274 ], [ %.085, %273 ], [ %.085, %271 ], [ %.085, %256 ], [ %.085, %246 ], [ %.085, %244 ], [ %.085, %228 ], [ %.085, %218 ], [ %.085, %216 ], [ %.085, %201 ], [ %.085, %191 ], [ %.085, %190 ], [ %.085, %188 ], [ %.085, %171 ], [ %.085, %161 ], [ %.085, %153 ], [ %.085, %145 ], [ %144, %143 ], [ %.085, %142 ], [ %.085, %139 ], [ %.085, %130 ], [ %.085, %128 ], [ %.085, %117 ], [ %.085, %107 ], [ 0, %106 ], [ %.085, %105 ], [ %.085, %103 ], [ %.085, %101 ], [ %.085, %100 ], [ %.085, %99 ], [ %.085, %97 ], [ %.085, %83 ], [ %.085, %73 ], [ %.085, %70 ], [ %.085, %69 ], [ %.085, %68 ], [ %.085, %58 ], [ %.085, %48 ], [ %.085, %46 ], [ %.085, %45 ], [ %.085, %43 ], [ %.085, %42 ], [ %.085, %29 ], [ %.085, %19 ], [ %.085, %16 ], [ %.085, %15 ], [ %.085, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ -823827981, %570 ], [ -1996748890, %569 ], [ 1989739248, %568 ], [ -567983543, %567 ], [ -1170438507, %566 ], [ -788624294, %565 ], [ 311700851, %564 ], [ -1600747895, %563 ], [ -1648212529, %562 ], [ 630393846, %561 ], [ -751480748, %560 ], [ 1959084129, %559 ], [ -415303053, %555 ], [ -1593613491, %554 ], [ 1419791059, %550 ], [ 1895355959, %548 ], [ -2134222940, %547 ], [ %546, %537 ], [ %536, %527 ], [ -890202393, %526 ], [ %525, %516 ], [ %515, %506 ], [ -1063338035, %505 ], [ 2069822151, %504 ], [ -2074450784, %503 ], [ 1449768932, %502 ], [ %501, %492 ], [ %491, %482 ], [ 1558649752, %481 ], [ %480, %472 ], [ %471, %465 ], [ %464, %458 ], [ 1449768932, %457 ], [ %456, %448 ], [ %447, %439 ], [ %438, %432 ], [ -2074450784, %431 ], [ %430, %421 ], [ %420, %411 ], [ %410, %403 ], [ %402, %401 ], [ %400, %384 ], [ %383, %374 ], [ %373, %366 ], [ 2069822151, %365 ], [ %364, %363 ], [ %362, %346 ], [ %345, %336 ], [ %335, %328 ], [ %327, %319 ], [ -1063338035, %318 ], [ %317, %316 ], [ %315, %300 ], [ %299, %290 ], [ %289, %282 ], [ %281, %274 ], [ -890202393, %273 ], [ %272, %271 ], [ %270, %256 ], [ %255, %246 ], [ %245, %244 ], [ %243, %228 ], [ %227, %218 ], [ %217, %216 ], [ %215, %201 ], [ %200, %191 ], [ -2134222940, %190 ], [ %189, %188 ], [ %187, %171 ], [ %170, %161 ], [ %160, %153 ], [ %152, %145 ], [ -117194505, %143 ], [ -1975248239, %142 ], [ -1740136886, %139 ], [ %138, %130 ], [ %129, %128 ], [ %127, %117 ], [ %116, %107 ], [ -117194505, %106 ], [ 936063470, %105 ], [ %104, %103 ], [ 456707947, %101 ], [ -1098554737, %100 ], [ 2127848515, %99 ], [ %98, %97 ], [ %96, %83 ], [ %82, %73 ], [ %72, %70 ], [ 456707947, %69 ], [ 1895355959, %68 ], [ %67, %58 ], [ %57, %48 ], [ -189175271, %46 ], [ -1169784143, %45 ], [ -1660064772, %43 ], [ -1120099628, %42 ], [ %41, %29 ], [ %28, %19 ], [ %18, %16 ], [ -1660064772, %15 ], [ %14, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = icmp slt i32 %.091, 12
  %14 = select i1 %13, i32 -740419362, i32 1019897358
  br label %.backedge

15:                                               ; preds = %11
  br label %.backedge

16:                                               ; preds = %11
  %17 = icmp slt i32 %.089, 12
  %18 = select i1 %17, i32 -119064670, i32 2009019468
  br label %.backedge

19:                                               ; preds = %11
  %20 = load i32, i32* @x.8, align 4
  %21 = load i32, i32* @y.9, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 1419791059, i32 792483943
  br label %.backedge

29:                                               ; preds = %11
  %30 = sext i32 %.091 to i64
  %31 = sext i32 %.089 to i64
  %32 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %30, i64 %31
  store i8 0, i8* %32, align 1
  %33 = load i32, i32* @x.8, align 4
  %34 = load i32, i32* @y.9, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 1944911896, i32 792483943
  br label %.backedge

42:                                               ; preds = %11
  br label %.backedge

43:                                               ; preds = %11
  %44 = add i32 %.089, 1
  br label %.backedge

45:                                               ; preds = %11
  br label %.backedge

46:                                               ; preds = %11
  %47 = add i32 %.091, 1
  br label %.backedge

48:                                               ; preds = %11
  %49 = load i32, i32* @x.8, align 4
  %50 = load i32, i32* @y.9, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 -1593613491, i32 -937614010
  br label %.backedge

58:                                               ; preds = %11
  %59 = load i32, i32* @x.8, align 4
  %60 = load i32, i32* @y.9, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 1460644358, i32 -937614010
  br label %.backedge

68:                                               ; preds = %11
  br label %.backedge

69:                                               ; preds = %11
  br label %.backedge

70:                                               ; preds = %11
  %71 = icmp slt i32 %.087, 8
  %72 = select i1 %71, i32 1654407175, i32 2127848515
  br label %.backedge

73:                                               ; preds = %11
  %74 = load i32, i32* @x.8, align 4
  %75 = load i32, i32* @y.9, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 -415303053, i32 -1593365918
  br label %.backedge

83:                                               ; preds = %11
  %84 = sext i32 %.087 to i64
  %85 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %84, i64 0
  %86 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %85)
  %87 = icmp eq i32 %86, -1
  store i1 %87, i1* %9, align 1
  %88 = load i32, i32* @x.8, align 4
  %89 = load i32, i32* @y.9, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -1485314830, i32 -1593365918
  br label %.backedge

97:                                               ; preds = %11
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %98 = select i1 %.0..0..0., i32 409971888, i32 1646616096
  br label %.backedge

99:                                               ; preds = %11
  br label %.backedge

100:                                              ; preds = %11
  br label %.backedge

101:                                              ; preds = %11
  %102 = add i32 %.087, 1
  br label %.backedge

103:                                              ; preds = %11
  %.not = icmp eq i8 %.093, 0
  %104 = select i1 %.not, i32 1636200745, i32 -1059177668
  br label %.backedge

105:                                              ; preds = %11
  br label %.backedge

106:                                              ; preds = %11
  br label %.backedge

107:                                              ; preds = %11
  %108 = load i32, i32* @x.8, align 4
  %109 = load i32, i32* @y.9, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 1959084129, i32 1375942495
  br label %.backedge

117:                                              ; preds = %11
  %118 = icmp slt i32 %.085, 64
  store i1 %118, i1* %8, align 1
  %119 = load i32, i32* @x.8, align 4
  %120 = load i32, i32* @y.9, align 4
  %121 = add i32 %119, -1
  %122 = mul i32 %121, %119
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %125, %124
  %127 = select i1 %126, i32 12958671, i32 1375942495
  br label %.backedge

128:                                              ; preds = %11
  %.0..0..0.77 = load volatile i1, i1* %8, align 1
  %129 = select i1 %.0..0..0.77, i32 -45266402, i32 -1740136886
  br label %.backedge

130:                                              ; preds = %11
  %131 = sdiv i32 %.085, 8
  %132 = sext i32 %131 to i64
  %133 = srem i32 %.085, 8
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %132, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 49
  %138 = select i1 %137, i32 1557072920, i32 865136465
  br label %.backedge

139:                                              ; preds = %11
  %140 = srem i32 %.085, 8
  %141 = sdiv i32 %.085, 8
  br label %.backedge

142:                                              ; preds = %11
  br label %.backedge

143:                                              ; preds = %11
  %144 = add i32 %.085, 1
  br label %.backedge

145:                                              ; preds = %11
  %146 = add i32 %.095, 1
  %147 = sext i32 %146 to i64
  %148 = sext i32 %.097 to i64
  %149 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %147, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 49
  %152 = select i1 %151, i32 -966443832, i32 1354029688
  br label %.backedge

153:                                              ; preds = %11
  %154 = sext i32 %.095 to i64
  %155 = add i32 %.097, 1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %154, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %158, 49
  %160 = select i1 %159, i32 -1657402507, i32 1354029688
  br label %.backedge

161:                                              ; preds = %11
  %162 = load i32, i32* @x.8, align 4
  %163 = load i32, i32* @y.9, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 -751480748, i32 -1314531880
  br label %.backedge

171:                                              ; preds = %11
  %172 = add i32 %.095, 1
  %173 = sext i32 %172 to i64
  %174 = add i32 %.097, 1
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %173, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 49
  store i1 %178, i1* %7, align 1
  %179 = load i32, i32* @x.8, align 4
  %180 = load i32, i32* @y.9, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 2006926387, i32 -1314531880
  br label %.backedge

188:                                              ; preds = %11
  %.0..0..0.78 = load volatile i1, i1* %7, align 1
  %189 = select i1 %.0..0..0.78, i32 319604372, i32 1354029688
  br label %.backedge

190:                                              ; preds = %11
  %puts110 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.7, i64 0, i64 0))
  br label %.backedge

191:                                              ; preds = %11
  %192 = load i32, i32* @x.8, align 4
  %193 = load i32, i32* @y.9, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 630393846, i32 -1773564934
  br label %.backedge

201:                                              ; preds = %11
  %.neg109 = add i32 %.095, 1
  %202 = sext i32 %.neg109 to i64
  %203 = sext i32 %.097 to i64
  %204 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %202, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = icmp eq i8 %205, 49
  store i1 %206, i1* %6, align 1
  %207 = load i32, i32* @x.8, align 4
  %208 = load i32, i32* @y.9, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 1024033432, i32 -1773564934
  br label %.backedge

216:                                              ; preds = %11
  %.0..0..0.79 = load volatile i1, i1* %6, align 1
  %217 = select i1 %.0..0..0.79, i32 1606838255, i32 -1545336325
  br label %.backedge

218:                                              ; preds = %11
  %219 = load i32, i32* @x.8, align 4
  %220 = load i32, i32* @y.9, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 -1648212529, i32 2122173995
  br label %.backedge

228:                                              ; preds = %11
  %229 = add i32 %.095, 2
  %230 = sext i32 %229 to i64
  %231 = sext i32 %.097 to i64
  %232 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %230, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = icmp eq i8 %233, 49
  store i1 %234, i1* %5, align 1
  %235 = load i32, i32* @x.8, align 4
  %236 = load i32, i32* @y.9, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 1177325767, i32 2122173995
  br label %.backedge

244:                                              ; preds = %11
  %.0..0..0.80 = load volatile i1, i1* %5, align 1
  %245 = select i1 %.0..0..0.80, i32 -635540723, i32 -1545336325
  br label %.backedge

246:                                              ; preds = %11
  %247 = load i32, i32* @x.8, align 4
  %248 = load i32, i32* @y.9, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 -1600747895, i32 801971844
  br label %.backedge

256:                                              ; preds = %11
  %.neg108 = add i32 %.095, 3
  %257 = sext i32 %.neg108 to i64
  %258 = sext i32 %.097 to i64
  %259 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %257, i64 %258
  %260 = load i8, i8* %259, align 1
  %261 = icmp eq i8 %260, 49
  store i1 %261, i1* %4, align 1
  %262 = load i32, i32* @x.8, align 4
  %263 = load i32, i32* @y.9, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 1955736839, i32 801971844
  br label %.backedge

271:                                              ; preds = %11
  %.0..0..0.81 = load volatile i1, i1* %4, align 1
  %272 = select i1 %.0..0..0.81, i32 735014127, i32 -1545336325
  br label %.backedge

273:                                              ; preds = %11
  %puts107 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i64 0, i64 0))
  br label %.backedge

274:                                              ; preds = %11
  %275 = sext i32 %.095 to i64
  %276 = add i32 %.097, 1
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %275, i64 %277
  %279 = load i8, i8* %278, align 1
  %280 = icmp eq i8 %279, 49
  %281 = select i1 %280, i32 -843922342, i32 -754169920
  br label %.backedge

282:                                              ; preds = %11
  %283 = sext i32 %.095 to i64
  %284 = add i32 %.097, 2
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %283, i64 %285
  %287 = load i8, i8* %286, align 1
  %288 = icmp eq i8 %287, 49
  %289 = select i1 %288, i32 -1308815521, i32 -754169920
  br label %.backedge

290:                                              ; preds = %11
  %291 = load i32, i32* @x.8, align 4
  %292 = load i32, i32* @y.9, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 311700851, i32 -1613840418
  br label %.backedge

300:                                              ; preds = %11
  %301 = sext i32 %.095 to i64
  %302 = add i32 %.097, 3
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %301, i64 %303
  %305 = load i8, i8* %304, align 1
  %306 = icmp eq i8 %305, 49
  store i1 %306, i1* %3, align 1
  %307 = load i32, i32* @x.8, align 4
  %308 = load i32, i32* @y.9, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -426249265, i32 -1613840418
  br label %.backedge

316:                                              ; preds = %11
  %.0..0..0.82 = load volatile i1, i1* %3, align 1
  %317 = select i1 %.0..0..0.82, i32 1729614994, i32 -754169920
  br label %.backedge

318:                                              ; preds = %11
  %puts106 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.backedge

319:                                              ; preds = %11
  %320 = add i32 %.095, 2
  %321 = sext i32 %320 to i64
  %322 = add i32 %.097, -1
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %321, i64 %323
  %325 = load i8, i8* %324, align 1
  %326 = icmp eq i8 %325, 49
  %327 = select i1 %326, i32 915914854, i32 -972945661
  br label %.backedge

328:                                              ; preds = %11
  %329 = add i32 %.095, 1
  %330 = sext i32 %329 to i64
  %331 = sext i32 %.097 to i64
  %332 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %330, i64 %331
  %333 = load i8, i8* %332, align 1
  %334 = icmp eq i8 %333, 49
  %335 = select i1 %334, i32 520701110, i32 -972945661
  br label %.backedge

336:                                              ; preds = %11
  %337 = load i32, i32* @x.8, align 4
  %338 = load i32, i32* @y.9, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 -788624294, i32 1075489050
  br label %.backedge

346:                                              ; preds = %11
  %347 = add i32 %.095, 1
  %348 = sext i32 %347 to i64
  %349 = add i32 %.097, -1
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %348, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = icmp eq i8 %352, 49
  store i1 %353, i1* %2, align 1
  %354 = load i32, i32* @x.8, align 4
  %355 = load i32, i32* @y.9, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 1097475445, i32 1075489050
  br label %.backedge

363:                                              ; preds = %11
  %.0..0..0.83 = load volatile i1, i1* %2, align 1
  %364 = select i1 %.0..0..0.83, i32 -1631286004, i32 -972945661
  br label %.backedge

365:                                              ; preds = %11
  %puts105 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i64 0, i64 0))
  br label %.backedge

366:                                              ; preds = %11
  %367 = sext i32 %.095 to i64
  %368 = add i32 %.097, 1
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %367, i64 %369
  %371 = load i8, i8* %370, align 1
  %372 = icmp eq i8 %371, 49
  %373 = select i1 %372, i32 89830804, i32 -1502085967
  br label %.backedge

374:                                              ; preds = %11
  %375 = load i32, i32* @x.8, align 4
  %376 = load i32, i32* @y.9, align 4
  %377 = add i32 %375, -1
  %378 = mul i32 %377, %375
  %379 = and i32 %378, 1
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %381, %380
  %383 = select i1 %382, i32 -1170438507, i32 695075568
  br label %.backedge

384:                                              ; preds = %11
  %385 = add i32 %.095, 1
  %386 = sext i32 %385 to i64
  %387 = add i32 %.097, 1
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %386, i64 %388
  %390 = load i8, i8* %389, align 1
  %391 = icmp eq i8 %390, 49
  store i1 %391, i1* %1, align 1
  %392 = load i32, i32* @x.8, align 4
  %393 = load i32, i32* @y.9, align 4
  %394 = add i32 %392, -1
  %395 = mul i32 %394, %392
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %398, %397
  %400 = select i1 %399, i32 -778155794, i32 695075568
  br label %.backedge

401:                                              ; preds = %11
  %.0..0..0.84 = load volatile i1, i1* %1, align 1
  %402 = select i1 %.0..0..0.84, i32 2074465114, i32 -1502085967
  br label %.backedge

403:                                              ; preds = %11
  %404 = add i32 %.095, 1
  %405 = sext i32 %404 to i64
  %.neg104 = add i32 %.097, 2
  %406 = sext i32 %.neg104 to i64
  %407 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %405, i64 %406
  %408 = load i8, i8* %407, align 1
  %409 = icmp eq i8 %408, 49
  %410 = select i1 %409, i32 -253085229, i32 -1502085967
  br label %.backedge

411:                                              ; preds = %11
  %412 = load i32, i32* @x.8, align 4
  %413 = load i32, i32* @y.9, align 4
  %414 = add i32 %412, -1
  %415 = mul i32 %414, %412
  %416 = and i32 %415, 1
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %418, %417
  %420 = select i1 %419, i32 -567983543, i32 -815779139
  br label %.backedge

421:                                              ; preds = %11
  %puts103 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.3, i64 0, i64 0))
  %422 = load i32, i32* @x.8, align 4
  %423 = load i32, i32* @y.9, align 4
  %424 = add i32 %422, -1
  %425 = mul i32 %424, %422
  %426 = and i32 %425, 1
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %428, %427
  %430 = select i1 %429, i32 -2060268341, i32 -815779139
  br label %.backedge

431:                                              ; preds = %11
  br label %.backedge

432:                                              ; preds = %11
  %.neg102 = add i32 %.095, 1
  %433 = sext i32 %.neg102 to i64
  %434 = sext i32 %.097 to i64
  %435 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %433, i64 %434
  %436 = load i8, i8* %435, align 1
  %437 = icmp eq i8 %436, 49
  %438 = select i1 %437, i32 -1158730836, i32 15281233
  br label %.backedge

439:                                              ; preds = %11
  %440 = add i32 %.095, 1
  %441 = sext i32 %440 to i64
  %442 = add i32 %.097, 1
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %441, i64 %443
  %445 = load i8, i8* %444, align 1
  %446 = icmp eq i8 %445, 49
  %447 = select i1 %446, i32 2029810805, i32 15281233
  br label %.backedge

448:                                              ; preds = %11
  %449 = add i32 %.095, 2
  %450 = sext i32 %449 to i64
  %451 = add i32 %.097, 1
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %450, i64 %452
  %454 = load i8, i8* %453, align 1
  %455 = icmp eq i8 %454, 49
  %456 = select i1 %455, i32 1620698530, i32 15281233
  br label %.backedge

457:                                              ; preds = %11
  %puts101 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.2, i64 0, i64 0))
  br label %.backedge

458:                                              ; preds = %11
  %459 = sext i32 %.095 to i64
  %.neg100 = add i32 %.097, 1
  %460 = sext i32 %.neg100 to i64
  %461 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %459, i64 %460
  %462 = load i8, i8* %461, align 1
  %463 = icmp eq i8 %462, 49
  %464 = select i1 %463, i32 -500802213, i32 1558649752
  br label %.backedge

465:                                              ; preds = %11
  %.neg = add i32 %.095, 1
  %466 = sext i32 %.neg to i64
  %467 = sext i32 %.097 to i64
  %468 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %466, i64 %467
  %469 = load i8, i8* %468, align 1
  %470 = icmp eq i8 %469, 49
  %471 = select i1 %470, i32 -579348729, i32 1558649752
  br label %.backedge

472:                                              ; preds = %11
  %473 = add i32 %.095, 1
  %474 = sext i32 %473 to i64
  %475 = add i32 %.097, -1
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %474, i64 %476
  %478 = load i8, i8* %477, align 1
  %479 = icmp eq i8 %478, 49
  %480 = select i1 %479, i32 1597584325, i32 1558649752
  br label %.backedge

481:                                              ; preds = %11
  %puts99 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.1, i64 0, i64 0))
  br label %.backedge

482:                                              ; preds = %11
  %483 = load i32, i32* @x.8, align 4
  %484 = load i32, i32* @y.9, align 4
  %485 = add i32 %483, -1
  %486 = mul i32 %485, %483
  %487 = and i32 %486, 1
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %489, %488
  %491 = select i1 %490, i32 1989739248, i32 -369658941
  br label %.backedge

492:                                              ; preds = %11
  %493 = load i32, i32* @x.8, align 4
  %494 = load i32, i32* @y.9, align 4
  %495 = add i32 %493, -1
  %496 = mul i32 %495, %493
  %497 = and i32 %496, 1
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %499, %498
  %501 = select i1 %500, i32 1120224198, i32 -369658941
  br label %.backedge

502:                                              ; preds = %11
  br label %.backedge

503:                                              ; preds = %11
  br label %.backedge

504:                                              ; preds = %11
  br label %.backedge

505:                                              ; preds = %11
  br label %.backedge

506:                                              ; preds = %11
  %507 = load i32, i32* @x.8, align 4
  %508 = load i32, i32* @y.9, align 4
  %509 = add i32 %507, -1
  %510 = mul i32 %509, %507
  %511 = and i32 %510, 1
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %513, %512
  %515 = select i1 %514, i32 -1996748890, i32 -955533855
  br label %.backedge

516:                                              ; preds = %11
  %517 = load i32, i32* @x.8, align 4
  %518 = load i32, i32* @y.9, align 4
  %519 = add i32 %517, -1
  %520 = mul i32 %519, %517
  %521 = and i32 %520, 1
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %518, 10
  %524 = or i1 %523, %522
  %525 = select i1 %524, i32 -2033583931, i32 -955533855
  br label %.backedge

526:                                              ; preds = %11
  br label %.backedge

527:                                              ; preds = %11
  %528 = load i32, i32* @x.8, align 4
  %529 = load i32, i32* @y.9, align 4
  %530 = add i32 %528, -1
  %531 = mul i32 %530, %528
  %532 = and i32 %531, 1
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %534, %533
  %536 = select i1 %535, i32 -823827981, i32 -651097862
  br label %.backedge

537:                                              ; preds = %11
  %538 = load i32, i32* @x.8, align 4
  %539 = load i32, i32* @y.9, align 4
  %540 = add i32 %538, -1
  %541 = mul i32 %540, %538
  %542 = and i32 %541, 1
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %539, 10
  %545 = or i1 %544, %543
  %546 = select i1 %545, i32 443790431, i32 -651097862
  br label %.backedge

547:                                              ; preds = %11
  br label %.backedge

548:                                              ; preds = %11
  br label %.backedge

549:                                              ; preds = %11
  ret i32 0

550:                                              ; preds = %11
  %551 = sext i32 %.091 to i64
  %552 = sext i32 %.089 to i64
  %553 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %551, i64 %552
  store i8 0, i8* %553, align 1
  br label %.backedge

554:                                              ; preds = %11
  br label %.backedge

555:                                              ; preds = %11
  %556 = sext i32 %.087 to i64
  %557 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %10, i64 0, i64 %556, i64 0
  %558 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %557)
  br label %.backedge

559:                                              ; preds = %11
  br label %.backedge

560:                                              ; preds = %11
  br label %.backedge

561:                                              ; preds = %11
  br label %.backedge

562:                                              ; preds = %11
  br label %.backedge

563:                                              ; preds = %11
  br label %.backedge

564:                                              ; preds = %11
  br label %.backedge

565:                                              ; preds = %11
  br label %.backedge

566:                                              ; preds = %11
  br label %.backedge

567:                                              ; preds = %11
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

568:                                              ; preds = %11
  br label %.backedge

569:                                              ; preds = %11
  br label %.backedge

570:                                              ; preds = %11
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s145912103.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.10, align 4
  %4 = load i32, i32* @y.11, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 2114716890, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 2114716890, label %11
    i32 2079087094, label %14
    i32 1866350246, label %24
    i32 -1724735478, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 2079087094, i32 -1724735478
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.10, align 4
  %16 = load i32, i32* @y.11, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1866350246, i32 -1724735478
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 2079087094, %25 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
