; ModuleID = 'build_ollvm/programs/p00036/s811708649.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s811708649.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [4 x i8] c"%8s\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca [8 x [9 x i8]], align 16
  %11 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 0
  br label %12

12:                                               ; preds = %.backedge, %0
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i8 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i8 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.0 = phi i32 [ 1756506064, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1756506064, label %13
    i32 -1945607724, label %16
    i32 -1251756448, label %26
    i32 1678493223, label %36
    i32 1133469195, label %37
    i32 750523061, label %47
    i32 1668668052, label %58
    i32 1322201659, label %60
    i32 1125551146, label %70
    i32 -550715901, label %83
    i32 -231689153, label %84
    i32 -2114225680, label %86
    i32 492004269, label %96
    i32 -1865669572, label %106
    i32 -292125497, label %107
    i32 -24769324, label %110
    i32 -2011625061, label %111
    i32 -1750215828, label %121
    i32 -1713997812, label %132
    i32 1221042596, label %134
    i32 1734920572, label %141
    i32 1852526789, label %151
    i32 1697736477, label %161
    i32 914648399, label %162
    i32 1689320316, label %163
    i32 -261131913, label %165
    i32 -931715721, label %168
    i32 1821884333, label %178
    i32 -1738084308, label %188
    i32 -1692467613, label %189
    i32 2042020187, label %190
    i32 -11611454, label %200
    i32 47221387, label %211
    i32 -1475503441, label %212
    i32 201782323, label %220
    i32 -612495194, label %230
    i32 -1619641198, label %246
    i32 1054640914, label %248
    i32 847916731, label %258
    i32 1764906467, label %274
    i32 -245535572, label %276
    i32 -858903360, label %277
    i32 -1426918966, label %285
    i32 1512862206, label %293
    i32 -101581835, label %294
    i32 -1194197855, label %301
    i32 2083129060, label %309
    i32 1405857691, label %310
    i32 -676551154, label %320
    i32 1350440036, label %337
    i32 540689334, label %339
    i32 923206489, label %349
    i32 -312021554, label %365
    i32 119461197, label %367
    i32 1816162699, label %377
    i32 1707830437, label %394
    i32 1877963864, label %396
    i32 1767914357, label %397
    i32 -1889132135, label %398
    i32 260517569, label %399
    i32 -442342519, label %407
    i32 1444737779, label %417
    i32 -121025392, label %434
    i32 -2054080036, label %436
    i32 -987821849, label %437
    i32 1946189392, label %444
    i32 -1380830831, label %454
    i32 -2091402216, label %470
    i32 1645484286, label %472
    i32 1086235431, label %482
    i32 -1729768594, label %492
    i32 -822614581, label %493
    i32 -1480861867, label %494
    i32 -42447411, label %495
    i32 602721006, label %496
    i32 -66871386, label %497
    i32 88445899, label %498
    i32 -989143340, label %508
    i32 1730386054, label %520
    i32 943628303, label %521
    i32 -1183424479, label %522
    i32 662131604, label %523
    i32 -1305359262, label %524
    i32 266118033, label %528
    i32 623013202, label %529
    i32 -1892311401, label %530
    i32 1202019199, label %531
    i32 1936111504, label %532
    i32 -481418002, label %534
    i32 1399749652, label %535
    i32 74018468, label %536
    i32 1596974576, label %537
    i32 -475015568, label %538
    i32 -1951488076, label %539
    i32 982200210, label %540
    i32 -640727828, label %541
    i32 -1633460482, label %542
  ]

.backedge:                                        ; preds = %12, %542, %541, %540, %539, %538, %537, %536, %535, %534, %532, %531, %530, %529, %528, %524, %523, %522, %520, %508, %498, %497, %496, %495, %494, %493, %492, %482, %472, %470, %454, %444, %437, %436, %434, %417, %407, %399, %398, %397, %396, %394, %377, %367, %365, %349, %339, %337, %320, %310, %309, %301, %294, %293, %285, %277, %276, %274, %258, %248, %246, %230, %220, %212, %211, %200, %190, %189, %188, %178, %168, %165, %163, %162, %161, %151, %141, %134, %132, %121, %111, %110, %107, %106, %96, %86, %84, %83, %70, %60, %58, %47, %37, %36, %26, %16, %13
  %.075.be = phi i32 [ %.075, %12 ], [ %.075, %542 ], [ %.075, %541 ], [ %.075, %540 ], [ %.075, %539 ], [ %.075, %538 ], [ %.075, %537 ], [ %.075, %536 ], [ %.075, %535 ], [ %.075, %534 ], [ %.075, %532 ], [ %.075, %531 ], [ %.075, %530 ], [ %.075, %529 ], [ %.075, %528 ], [ %.075, %524 ], [ %.075, %523 ], [ 1, %522 ], [ %.075, %520 ], [ %.075, %508 ], [ %.075, %498 ], [ %.075, %497 ], [ %.075, %496 ], [ %.075, %495 ], [ %.075, %494 ], [ %.075, %493 ], [ %.075, %492 ], [ %.075, %482 ], [ %.075, %472 ], [ %.075, %470 ], [ %.075, %454 ], [ %.075, %444 ], [ %.075, %437 ], [ %.075, %436 ], [ %.075, %434 ], [ %.075, %417 ], [ %.075, %407 ], [ %.075, %399 ], [ %.075, %398 ], [ %.075, %397 ], [ %.075, %396 ], [ %.075, %394 ], [ %.075, %377 ], [ %.075, %367 ], [ %.075, %365 ], [ %.075, %349 ], [ %.075, %339 ], [ %.075, %337 ], [ %.075, %320 ], [ %.075, %310 ], [ %.075, %309 ], [ %.075, %301 ], [ %.075, %294 ], [ %.075, %293 ], [ %.075, %285 ], [ %.075, %277 ], [ %.075, %276 ], [ %.075, %274 ], [ %.075, %258 ], [ %.075, %248 ], [ %.075, %246 ], [ %.075, %230 ], [ %.075, %220 ], [ %.075, %212 ], [ %.075, %211 ], [ %.075, %200 ], [ %.075, %190 ], [ %.075, %189 ], [ %.075, %188 ], [ %.075, %178 ], [ %.075, %168 ], [ %.075, %165 ], [ %.075, %163 ], [ %.075, %162 ], [ %.075, %161 ], [ %.075, %151 ], [ %.075, %141 ], [ %.075, %134 ], [ %.075, %132 ], [ %.075, %121 ], [ %.075, %111 ], [ %.075, %110 ], [ %.075, %107 ], [ %.075, %106 ], [ %.075, %96 ], [ %.075, %86 ], [ %85, %84 ], [ %.075, %83 ], [ %.075, %70 ], [ %.075, %60 ], [ %.075, %58 ], [ %.075, %47 ], [ %.075, %37 ], [ %.075, %36 ], [ 1, %26 ], [ %.075, %16 ], [ %.075, %13 ]
  %.073.be = phi i32 [ %.073, %12 ], [ %.073, %542 ], [ %.073, %541 ], [ %.073, %540 ], [ %.073, %539 ], [ %.073, %538 ], [ %.073, %537 ], [ %.073, %536 ], [ %.073, %535 ], [ %.073, %534 ], [ %533, %532 ], [ %.073, %531 ], [ %.073, %530 ], [ %.073, %529 ], [ 0, %528 ], [ %.073, %524 ], [ %.073, %523 ], [ %.073, %522 ], [ %.073, %520 ], [ %.073, %508 ], [ %.073, %498 ], [ %.073, %497 ], [ %.073, %496 ], [ %.073, %495 ], [ %.073, %494 ], [ %.073, %493 ], [ %.073, %492 ], [ %.073, %482 ], [ %.073, %472 ], [ %.073, %470 ], [ %.073, %454 ], [ %.073, %444 ], [ %.073, %437 ], [ %.073, %436 ], [ %.073, %434 ], [ %.073, %417 ], [ %.073, %407 ], [ %.073, %399 ], [ %.073, %398 ], [ %.073, %397 ], [ %.073, %396 ], [ %.073, %394 ], [ %.073, %377 ], [ %.073, %367 ], [ %.073, %365 ], [ %.073, %349 ], [ %.073, %339 ], [ %.073, %337 ], [ %.073, %320 ], [ %.073, %310 ], [ %.073, %309 ], [ %.073, %301 ], [ %.073, %294 ], [ %.073, %293 ], [ %.073, %285 ], [ %.073, %277 ], [ %.073, %276 ], [ %.073, %274 ], [ %.073, %258 ], [ %.073, %248 ], [ %.073, %246 ], [ %.073, %230 ], [ %.073, %220 ], [ %.073, %212 ], [ %.073, %211 ], [ %201, %200 ], [ %.073, %190 ], [ %.073, %189 ], [ %.073, %188 ], [ %.073, %178 ], [ %.073, %168 ], [ %.073, %165 ], [ %.073, %163 ], [ %.073, %162 ], [ %.073, %161 ], [ %.073, %151 ], [ %.073, %141 ], [ %.073, %134 ], [ %.073, %132 ], [ %.073, %121 ], [ %.073, %111 ], [ %.073, %110 ], [ %.073, %107 ], [ %.073, %106 ], [ 0, %96 ], [ %.073, %86 ], [ %.073, %84 ], [ %.073, %83 ], [ %.073, %70 ], [ %.073, %60 ], [ %.073, %58 ], [ %.073, %47 ], [ %.073, %37 ], [ %.073, %36 ], [ %.073, %26 ], [ %.073, %16 ], [ %.073, %13 ]
  %.071.be = phi i32 [ %.071, %12 ], [ %.071, %542 ], [ %.071, %541 ], [ %.071, %540 ], [ %.071, %539 ], [ %.071, %538 ], [ %.071, %537 ], [ %.071, %536 ], [ %.071, %535 ], [ %.071, %534 ], [ %.071, %532 ], [ %.071, %531 ], [ %.071, %530 ], [ %.071, %529 ], [ %.071, %528 ], [ %.071, %524 ], [ %.071, %523 ], [ %.071, %522 ], [ %.071, %520 ], [ %.071, %508 ], [ %.071, %498 ], [ %.071, %497 ], [ %.071, %496 ], [ %.071, %495 ], [ %.071, %494 ], [ %.071, %493 ], [ %.071, %492 ], [ %.071, %482 ], [ %.071, %472 ], [ %.071, %470 ], [ %.071, %454 ], [ %.071, %444 ], [ %.071, %437 ], [ %.071, %436 ], [ %.071, %434 ], [ %.071, %417 ], [ %.071, %407 ], [ %.071, %399 ], [ %.071, %398 ], [ %.071, %397 ], [ %.071, %396 ], [ %.071, %394 ], [ %.071, %377 ], [ %.071, %367 ], [ %.071, %365 ], [ %.071, %349 ], [ %.071, %339 ], [ %.071, %337 ], [ %.071, %320 ], [ %.071, %310 ], [ %.071, %309 ], [ %.071, %301 ], [ %.071, %294 ], [ %.071, %293 ], [ %.071, %285 ], [ %.071, %277 ], [ %.071, %276 ], [ %.071, %274 ], [ %.071, %258 ], [ %.071, %248 ], [ %.071, %246 ], [ %.071, %230 ], [ %.071, %220 ], [ %.071, %212 ], [ %.071, %211 ], [ %.071, %200 ], [ %.071, %190 ], [ %.071, %189 ], [ %.071, %188 ], [ %.071, %178 ], [ %.071, %168 ], [ %.071, %165 ], [ %164, %163 ], [ %.071, %162 ], [ %.071, %161 ], [ %.071, %151 ], [ %.071, %141 ], [ %.071, %134 ], [ %.071, %132 ], [ %.071, %121 ], [ %.071, %111 ], [ 0, %110 ], [ %.071, %107 ], [ %.071, %106 ], [ %.071, %96 ], [ %.071, %86 ], [ %.071, %84 ], [ %.071, %83 ], [ %.071, %70 ], [ %.071, %60 ], [ %.071, %58 ], [ %.071, %47 ], [ %.071, %37 ], [ %.071, %36 ], [ %.071, %26 ], [ %.071, %16 ], [ %.071, %13 ]
  %.069.be = phi i8 [ %.069, %12 ], [ %.069, %542 ], [ %.069, %541 ], [ %.069, %540 ], [ %.069, %539 ], [ %.069, %538 ], [ %.069, %537 ], [ %.069, %536 ], [ %.069, %535 ], [ %.069, %534 ], [ %.069, %532 ], [ %.069, %531 ], [ 1, %530 ], [ %.069, %529 ], [ 0, %528 ], [ %.069, %524 ], [ %.069, %523 ], [ %.069, %522 ], [ %.069, %520 ], [ %.069, %508 ], [ %.069, %498 ], [ %.069, %497 ], [ %.069, %496 ], [ %.069, %495 ], [ %.069, %494 ], [ %.069, %493 ], [ %.069, %492 ], [ %.069, %482 ], [ %.069, %472 ], [ %.069, %470 ], [ %.069, %454 ], [ %.069, %444 ], [ %.069, %437 ], [ %.069, %436 ], [ %.069, %434 ], [ %.069, %417 ], [ %.069, %407 ], [ %.069, %399 ], [ %.069, %398 ], [ %.069, %397 ], [ %.069, %396 ], [ %.069, %394 ], [ %.069, %377 ], [ %.069, %367 ], [ %.069, %365 ], [ %.069, %349 ], [ %.069, %339 ], [ %.069, %337 ], [ %.069, %320 ], [ %.069, %310 ], [ %.069, %309 ], [ %.069, %301 ], [ %.069, %294 ], [ %.069, %293 ], [ %.069, %285 ], [ %.069, %277 ], [ %.069, %276 ], [ %.069, %274 ], [ %.069, %258 ], [ %.069, %248 ], [ %.069, %246 ], [ %.069, %230 ], [ %.069, %220 ], [ %.069, %212 ], [ %.069, %211 ], [ %.069, %200 ], [ %.069, %190 ], [ %.069, %189 ], [ %.069, %188 ], [ %.069, %178 ], [ %.069, %168 ], [ %.069, %165 ], [ %.069, %163 ], [ %.069, %162 ], [ %.069, %161 ], [ 1, %151 ], [ %.069, %141 ], [ %.069, %134 ], [ %.069, %132 ], [ %.069, %121 ], [ %.069, %111 ], [ %.069, %110 ], [ %.069, %107 ], [ %.069, %106 ], [ 0, %96 ], [ %.069, %86 ], [ %.069, %84 ], [ %.069, %83 ], [ %.069, %70 ], [ %.069, %60 ], [ %.069, %58 ], [ %.069, %47 ], [ %.069, %37 ], [ %.069, %36 ], [ %.069, %26 ], [ %.069, %16 ], [ %.069, %13 ]
  %.067.be = phi i8 [ %.067, %12 ], [ %.067, %542 ], [ 70, %541 ], [ %.067, %540 ], [ %.067, %539 ], [ %.067, %538 ], [ %.067, %537 ], [ %.067, %536 ], [ %.067, %535 ], [ %.067, %534 ], [ %.067, %532 ], [ %.067, %531 ], [ %.067, %530 ], [ %.067, %529 ], [ %.067, %528 ], [ %.067, %524 ], [ %.067, %523 ], [ %.067, %522 ], [ %.067, %520 ], [ %.067, %508 ], [ %.067, %498 ], [ %.067, %497 ], [ %.067, %496 ], [ %.067, %495 ], [ %.067, %494 ], [ %.067, %493 ], [ %.067, %492 ], [ 70, %482 ], [ %.067, %472 ], [ %.067, %470 ], [ %.067, %454 ], [ %.067, %444 ], [ %.067, %437 ], [ 69, %436 ], [ %.067, %434 ], [ %.067, %417 ], [ %.067, %407 ], [ %.067, %399 ], [ %.067, %398 ], [ 71, %397 ], [ 68, %396 ], [ %.067, %394 ], [ %.067, %377 ], [ %.067, %367 ], [ %.067, %365 ], [ %.067, %349 ], [ %.067, %339 ], [ %.067, %337 ], [ %.067, %320 ], [ %.067, %310 ], [ 67, %309 ], [ %.067, %301 ], [ %.067, %294 ], [ 66, %293 ], [ %.067, %285 ], [ %.067, %277 ], [ 65, %276 ], [ %.067, %274 ], [ %.067, %258 ], [ %.067, %248 ], [ %.067, %246 ], [ %.067, %230 ], [ %.067, %220 ], [ %.067, %212 ], [ %.067, %211 ], [ %.067, %200 ], [ %.067, %190 ], [ %.067, %189 ], [ %.067, %188 ], [ %.067, %178 ], [ %.067, %168 ], [ %.067, %165 ], [ %.067, %163 ], [ %.067, %162 ], [ %.067, %161 ], [ %.067, %151 ], [ %.067, %141 ], [ %.067, %134 ], [ %.067, %132 ], [ %.067, %121 ], [ %.067, %111 ], [ %.067, %110 ], [ %.067, %107 ], [ %.067, %106 ], [ %.067, %96 ], [ %.067, %86 ], [ %.067, %84 ], [ %.067, %83 ], [ %.067, %70 ], [ %.067, %60 ], [ %.067, %58 ], [ %.067, %47 ], [ %.067, %37 ], [ %.067, %36 ], [ %.067, %26 ], [ %.067, %16 ], [ %.067, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -989143340, %542 ], [ 1086235431, %541 ], [ -1380830831, %540 ], [ 1444737779, %539 ], [ 1816162699, %538 ], [ 923206489, %537 ], [ -676551154, %536 ], [ 847916731, %535 ], [ -612495194, %534 ], [ -11611454, %532 ], [ 1821884333, %531 ], [ 1852526789, %530 ], [ -1750215828, %529 ], [ 492004269, %528 ], [ 1125551146, %524 ], [ 750523061, %523 ], [ -1251756448, %522 ], [ 1756506064, %520 ], [ %519, %508 ], [ %507, %498 ], [ 88445899, %497 ], [ -66871386, %496 ], [ 602721006, %495 ], [ -42447411, %494 ], [ -1480861867, %493 ], [ -822614581, %492 ], [ %491, %482 ], [ %481, %472 ], [ %471, %470 ], [ %469, %454 ], [ %453, %444 ], [ %443, %437 ], [ -1480861867, %436 ], [ %435, %434 ], [ %433, %417 ], [ %416, %407 ], [ %406, %399 ], [ -42447411, %398 ], [ -1889132135, %397 ], [ -1889132135, %396 ], [ %395, %394 ], [ %393, %377 ], [ %376, %367 ], [ %366, %365 ], [ %364, %349 ], [ %348, %339 ], [ %338, %337 ], [ %336, %320 ], [ %319, %310 ], [ 602721006, %309 ], [ %308, %301 ], [ %300, %294 ], [ -66871386, %293 ], [ %292, %285 ], [ %284, %277 ], [ 88445899, %276 ], [ %275, %274 ], [ %273, %258 ], [ %257, %248 ], [ %247, %246 ], [ %245, %230 ], [ %229, %220 ], [ %219, %212 ], [ -292125497, %211 ], [ %210, %200 ], [ %199, %190 ], [ 2042020187, %189 ], [ -1475503441, %188 ], [ %187, %178 ], [ %177, %168 ], [ %167, %165 ], [ -2011625061, %163 ], [ 1689320316, %162 ], [ -261131913, %161 ], [ %160, %151 ], [ %150, %141 ], [ %140, %134 ], [ %133, %132 ], [ %131, %121 ], [ %120, %111 ], [ -2011625061, %110 ], [ %109, %107 ], [ -292125497, %106 ], [ %105, %96 ], [ %95, %86 ], [ 1133469195, %84 ], [ -231689153, %83 ], [ %82, %70 ], [ %69, %60 ], [ %59, %58 ], [ %57, %47 ], [ %46, %37 ], [ 1133469195, %36 ], [ %35, %26 ], [ %25, %16 ], [ %15, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), [9 x i8]* nonnull %11)
  %.not80 = icmp eq i32 %14, -1
  %15 = select i1 %.not80, i32 943628303, i32 -1945607724
  br label %.backedge

16:                                               ; preds = %12
  %17 = load i32, i32* @x, align 4
  %18 = load i32, i32* @y, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 -1251756448, i32 -1183424479
  br label %.backedge

26:                                               ; preds = %12
  %27 = load i32, i32* @x, align 4
  %28 = load i32, i32* @y, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 1678493223, i32 -1183424479
  br label %.backedge

36:                                               ; preds = %12
  br label %.backedge

37:                                               ; preds = %12
  %38 = load i32, i32* @x, align 4
  %39 = load i32, i32* @y, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 750523061, i32 662131604
  br label %.backedge

47:                                               ; preds = %12
  %48 = icmp slt i32 %.075, 8
  store i1 %48, i1* %9, align 1
  %49 = load i32, i32* @x, align 4
  %50 = load i32, i32* @y, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 1668668052, i32 662131604
  br label %.backedge

58:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %59 = select i1 %.0..0..0., i32 1322201659, i32 -2114225680
  br label %.backedge

60:                                               ; preds = %12
  %61 = load i32, i32* @x, align 4
  %62 = load i32, i32* @y, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 1125551146, i32 -1305359262
  br label %.backedge

70:                                               ; preds = %12
  %71 = sext i32 %.075 to i64
  %72 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %71
  %73 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), [9 x i8]* nonnull %72)
  %74 = load i32, i32* @x, align 4
  %75 = load i32, i32* @y, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 -550715901, i32 -1305359262
  br label %.backedge

83:                                               ; preds = %12
  br label %.backedge

84:                                               ; preds = %12
  %85 = add i32 %.075, 1
  br label %.backedge

86:                                               ; preds = %12
  %87 = load i32, i32* @x, align 4
  %88 = load i32, i32* @y, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 492004269, i32 266118033
  br label %.backedge

96:                                               ; preds = %12
  %97 = load i32, i32* @x, align 4
  %98 = load i32, i32* @y, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 -1865669572, i32 266118033
  br label %.backedge

106:                                              ; preds = %12
  br label %.backedge

107:                                              ; preds = %12
  %108 = icmp slt i32 %.073, 8
  %109 = select i1 %108, i32 -24769324, i32 -1475503441
  br label %.backedge

110:                                              ; preds = %12
  br label %.backedge

111:                                              ; preds = %12
  %112 = load i32, i32* @x, align 4
  %113 = load i32, i32* @y, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 -1750215828, i32 623013202
  br label %.backedge

121:                                              ; preds = %12
  %122 = icmp slt i32 %.071, 8
  store i1 %122, i1* %8, align 1
  %123 = load i32, i32* @x, align 4
  %124 = load i32, i32* @y, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 -1713997812, i32 623013202
  br label %.backedge

132:                                              ; preds = %12
  %.0..0..0.59 = load volatile i1, i1* %8, align 1
  %133 = select i1 %.0..0..0.59, i32 1221042596, i32 -261131913
  br label %.backedge

134:                                              ; preds = %12
  %135 = sext i32 %.073 to i64
  %136 = sext i32 %.071 to i64
  %137 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %135, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %138, 49
  %140 = select i1 %139, i32 1734920572, i32 914648399
  br label %.backedge

141:                                              ; preds = %12
  %142 = load i32, i32* @x, align 4
  %143 = load i32, i32* @y, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 1852526789, i32 -1892311401
  br label %.backedge

151:                                              ; preds = %12
  %152 = load i32, i32* @x, align 4
  %153 = load i32, i32* @y, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 1697736477, i32 -1892311401
  br label %.backedge

161:                                              ; preds = %12
  br label %.backedge

162:                                              ; preds = %12
  br label %.backedge

163:                                              ; preds = %12
  %164 = add i32 %.071, 1
  br label %.backedge

165:                                              ; preds = %12
  %166 = and i8 %.069, 1
  %.not = icmp eq i8 %166, 0
  %167 = select i1 %.not, i32 -1692467613, i32 -931715721
  br label %.backedge

168:                                              ; preds = %12
  %169 = load i32, i32* @x, align 4
  %170 = load i32, i32* @y, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 1821884333, i32 1202019199
  br label %.backedge

178:                                              ; preds = %12
  %179 = load i32, i32* @x, align 4
  %180 = load i32, i32* @y, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 -1738084308, i32 1202019199
  br label %.backedge

188:                                              ; preds = %12
  br label %.backedge

189:                                              ; preds = %12
  br label %.backedge

190:                                              ; preds = %12
  %191 = load i32, i32* @x, align 4
  %192 = load i32, i32* @y, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -11611454, i32 1936111504
  br label %.backedge

200:                                              ; preds = %12
  %201 = add i32 %.073, 1
  %202 = load i32, i32* @x, align 4
  %203 = load i32, i32* @y, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 47221387, i32 1936111504
  br label %.backedge

211:                                              ; preds = %12
  br label %.backedge

212:                                              ; preds = %12
  %213 = sext i32 %.073 to i64
  %214 = add i32 %.071, 1
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %213, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = icmp eq i8 %217, 49
  %219 = select i1 %218, i32 201782323, i32 -858903360
  br label %.backedge

220:                                              ; preds = %12
  %221 = load i32, i32* @x, align 4
  %222 = load i32, i32* @y, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 -612495194, i32 -481418002
  br label %.backedge

230:                                              ; preds = %12
  %231 = add i32 %.073, 1
  %232 = sext i32 %231 to i64
  %233 = sext i32 %.071 to i64
  %234 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %232, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = icmp eq i8 %235, 49
  store i1 %236, i1* %7, align 1
  %237 = load i32, i32* @x, align 4
  %238 = load i32, i32* @y, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -1619641198, i32 -481418002
  br label %.backedge

246:                                              ; preds = %12
  %.0..0..0.60 = load volatile i1, i1* %7, align 1
  %247 = select i1 %.0..0..0.60, i32 1054640914, i32 -858903360
  br label %.backedge

248:                                              ; preds = %12
  %249 = load i32, i32* @x, align 4
  %250 = load i32, i32* @y, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 847916731, i32 1399749652
  br label %.backedge

258:                                              ; preds = %12
  %259 = add i32 %.073, 1
  %260 = sext i32 %259 to i64
  %.neg79 = add i32 %.071, 1
  %261 = sext i32 %.neg79 to i64
  %262 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %260, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = icmp eq i8 %263, 49
  store i1 %264, i1* %6, align 1
  %265 = load i32, i32* @x, align 4
  %266 = load i32, i32* @y, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 1764906467, i32 1399749652
  br label %.backedge

274:                                              ; preds = %12
  %.0..0..0.61 = load volatile i1, i1* %6, align 1
  %275 = select i1 %.0..0..0.61, i32 -245535572, i32 -858903360
  br label %.backedge

276:                                              ; preds = %12
  br label %.backedge

277:                                              ; preds = %12
  %278 = add i32 %.073, 1
  %279 = sext i32 %278 to i64
  %280 = sext i32 %.071 to i64
  %281 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %279, i64 %280
  %282 = load i8, i8* %281, align 1
  %283 = icmp eq i8 %282, 49
  %284 = select i1 %283, i32 -1426918966, i32 -101581835
  br label %.backedge

285:                                              ; preds = %12
  %286 = add i32 %.073, 2
  %287 = sext i32 %286 to i64
  %288 = sext i32 %.071 to i64
  %289 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %287, i64 %288
  %290 = load i8, i8* %289, align 1
  %291 = icmp eq i8 %290, 49
  %292 = select i1 %291, i32 1512862206, i32 -101581835
  br label %.backedge

293:                                              ; preds = %12
  br label %.backedge

294:                                              ; preds = %12
  %295 = sext i32 %.073 to i64
  %.neg78 = add i32 %.071, 1
  %296 = sext i32 %.neg78 to i64
  %297 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %295, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = icmp eq i8 %298, 49
  %300 = select i1 %299, i32 -1194197855, i32 1405857691
  br label %.backedge

301:                                              ; preds = %12
  %302 = sext i32 %.073 to i64
  %303 = add i32 %.071, 2
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %302, i64 %304
  %306 = load i8, i8* %305, align 1
  %307 = icmp eq i8 %306, 49
  %308 = select i1 %307, i32 2083129060, i32 1405857691
  br label %.backedge

309:                                              ; preds = %12
  br label %.backedge

310:                                              ; preds = %12
  %311 = load i32, i32* @x, align 4
  %312 = load i32, i32* @y, align 4
  %313 = add i32 %311, -1
  %314 = mul i32 %313, %311
  %315 = and i32 %314, 1
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %317, %316
  %319 = select i1 %318, i32 -676551154, i32 74018468
  br label %.backedge

320:                                              ; preds = %12
  %321 = add i32 %.073, 1
  %322 = sext i32 %321 to i64
  %323 = add i32 %.071, -1
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %322, i64 %324
  %326 = load i8, i8* %325, align 1
  %327 = icmp eq i8 %326, 49
  store i1 %327, i1* %5, align 1
  %328 = load i32, i32* @x, align 4
  %329 = load i32, i32* @y, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 1350440036, i32 74018468
  br label %.backedge

337:                                              ; preds = %12
  %.0..0..0.62 = load volatile i1, i1* %5, align 1
  %338 = select i1 %.0..0..0.62, i32 540689334, i32 260517569
  br label %.backedge

339:                                              ; preds = %12
  %340 = load i32, i32* @x, align 4
  %341 = load i32, i32* @y, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 923206489, i32 1596974576
  br label %.backedge

349:                                              ; preds = %12
  %350 = add i32 %.073, 1
  %351 = sext i32 %350 to i64
  %352 = sext i32 %.071 to i64
  %353 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %351, i64 %352
  %354 = load i8, i8* %353, align 1
  %355 = icmp eq i8 %354, 49
  store i1 %355, i1* %4, align 1
  %356 = load i32, i32* @x, align 4
  %357 = load i32, i32* @y, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 -312021554, i32 1596974576
  br label %.backedge

365:                                              ; preds = %12
  %.0..0..0.63 = load volatile i1, i1* %4, align 1
  %366 = select i1 %.0..0..0.63, i32 119461197, i32 260517569
  br label %.backedge

367:                                              ; preds = %12
  %368 = load i32, i32* @x, align 4
  %369 = load i32, i32* @y, align 4
  %370 = add i32 %368, -1
  %371 = mul i32 %370, %368
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %374, %373
  %376 = select i1 %375, i32 1816162699, i32 -475015568
  br label %.backedge

377:                                              ; preds = %12
  %378 = add i32 %.073, 2
  %379 = sext i32 %378 to i64
  %380 = add i32 %.071, -1
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %379, i64 %381
  %383 = load i8, i8* %382, align 1
  %384 = icmp eq i8 %383, 49
  store i1 %384, i1* %3, align 1
  %385 = load i32, i32* @x, align 4
  %386 = load i32, i32* @y, align 4
  %387 = add i32 %385, -1
  %388 = mul i32 %387, %385
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %391, %390
  %393 = select i1 %392, i32 1707830437, i32 -475015568
  br label %.backedge

394:                                              ; preds = %12
  %.0..0..0.64 = load volatile i1, i1* %3, align 1
  %395 = select i1 %.0..0..0.64, i32 1877963864, i32 1767914357
  br label %.backedge

396:                                              ; preds = %12
  br label %.backedge

397:                                              ; preds = %12
  br label %.backedge

398:                                              ; preds = %12
  br label %.backedge

399:                                              ; preds = %12
  %400 = sext i32 %.073 to i64
  %401 = add i32 %.071, 1
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %400, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = icmp eq i8 %404, 49
  %406 = select i1 %405, i32 -442342519, i32 -987821849
  br label %.backedge

407:                                              ; preds = %12
  %408 = load i32, i32* @x, align 4
  %409 = load i32, i32* @y, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 1444737779, i32 -1951488076
  br label %.backedge

417:                                              ; preds = %12
  %418 = add i32 %.073, 1
  %419 = sext i32 %418 to i64
  %420 = add i32 %.071, 1
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %419, i64 %421
  %423 = load i8, i8* %422, align 1
  %424 = icmp eq i8 %423, 49
  store i1 %424, i1* %2, align 1
  %425 = load i32, i32* @x, align 4
  %426 = load i32, i32* @y, align 4
  %427 = add i32 %425, -1
  %428 = mul i32 %427, %425
  %429 = and i32 %428, 1
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %431, %430
  %433 = select i1 %432, i32 -121025392, i32 -1951488076
  br label %.backedge

434:                                              ; preds = %12
  %.0..0..0.65 = load volatile i1, i1* %2, align 1
  %435 = select i1 %.0..0..0.65, i32 -2054080036, i32 -987821849
  br label %.backedge

436:                                              ; preds = %12
  br label %.backedge

437:                                              ; preds = %12
  %.neg77 = add i32 %.073, 1
  %438 = sext i32 %.neg77 to i64
  %439 = sext i32 %.071 to i64
  %440 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %438, i64 %439
  %441 = load i8, i8* %440, align 1
  %442 = icmp eq i8 %441, 49
  %443 = select i1 %442, i32 1946189392, i32 -822614581
  br label %.backedge

444:                                              ; preds = %12
  %445 = load i32, i32* @x, align 4
  %446 = load i32, i32* @y, align 4
  %447 = add i32 %445, -1
  %448 = mul i32 %447, %445
  %449 = and i32 %448, 1
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %451, %450
  %453 = select i1 %452, i32 -1380830831, i32 982200210
  br label %.backedge

454:                                              ; preds = %12
  %.neg = add i32 %.073, 1
  %455 = sext i32 %.neg to i64
  %456 = add i32 %.071, 1
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %455, i64 %457
  %459 = load i8, i8* %458, align 1
  %460 = icmp eq i8 %459, 49
  store i1 %460, i1* %1, align 1
  %461 = load i32, i32* @x, align 4
  %462 = load i32, i32* @y, align 4
  %463 = add i32 %461, -1
  %464 = mul i32 %463, %461
  %465 = and i32 %464, 1
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %467, %466
  %469 = select i1 %468, i32 -2091402216, i32 982200210
  br label %.backedge

470:                                              ; preds = %12
  %.0..0..0.66 = load volatile i1, i1* %1, align 1
  %471 = select i1 %.0..0..0.66, i32 1645484286, i32 -822614581
  br label %.backedge

472:                                              ; preds = %12
  %473 = load i32, i32* @x, align 4
  %474 = load i32, i32* @y, align 4
  %475 = add i32 %473, -1
  %476 = mul i32 %475, %473
  %477 = and i32 %476, 1
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %479, %478
  %481 = select i1 %480, i32 1086235431, i32 -640727828
  br label %.backedge

482:                                              ; preds = %12
  %483 = load i32, i32* @x, align 4
  %484 = load i32, i32* @y, align 4
  %485 = add i32 %483, -1
  %486 = mul i32 %485, %483
  %487 = and i32 %486, 1
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %489, %488
  %491 = select i1 %490, i32 -1729768594, i32 -640727828
  br label %.backedge

492:                                              ; preds = %12
  br label %.backedge

493:                                              ; preds = %12
  br label %.backedge

494:                                              ; preds = %12
  br label %.backedge

495:                                              ; preds = %12
  br label %.backedge

496:                                              ; preds = %12
  br label %.backedge

497:                                              ; preds = %12
  br label %.backedge

498:                                              ; preds = %12
  %499 = load i32, i32* @x, align 4
  %500 = load i32, i32* @y, align 4
  %501 = add i32 %499, -1
  %502 = mul i32 %501, %499
  %503 = and i32 %502, 1
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %505, %504
  %507 = select i1 %506, i32 -989143340, i32 -1633460482
  br label %.backedge

508:                                              ; preds = %12
  %509 = sext i8 %.067 to i32
  %510 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %509)
  %511 = load i32, i32* @x, align 4
  %512 = load i32, i32* @y, align 4
  %513 = add i32 %511, -1
  %514 = mul i32 %513, %511
  %515 = and i32 %514, 1
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %517, %516
  %519 = select i1 %518, i32 1730386054, i32 -1633460482
  br label %.backedge

520:                                              ; preds = %12
  br label %.backedge

521:                                              ; preds = %12
  ret i32 0

522:                                              ; preds = %12
  br label %.backedge

523:                                              ; preds = %12
  br label %.backedge

524:                                              ; preds = %12
  %525 = sext i32 %.075 to i64
  %526 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %10, i64 0, i64 %525
  %527 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), [9 x i8]* nonnull %526)
  br label %.backedge

528:                                              ; preds = %12
  br label %.backedge

529:                                              ; preds = %12
  br label %.backedge

530:                                              ; preds = %12
  br label %.backedge

531:                                              ; preds = %12
  br label %.backedge

532:                                              ; preds = %12
  %533 = add i32 %.073, 1
  br label %.backedge

534:                                              ; preds = %12
  br label %.backedge

535:                                              ; preds = %12
  br label %.backedge

536:                                              ; preds = %12
  br label %.backedge

537:                                              ; preds = %12
  br label %.backedge

538:                                              ; preds = %12
  br label %.backedge

539:                                              ; preds = %12
  br label %.backedge

540:                                              ; preds = %12
  br label %.backedge

541:                                              ; preds = %12
  br label %.backedge

542:                                              ; preds = %12
  %543 = sext i8 %.067 to i32
  %544 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %543)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
