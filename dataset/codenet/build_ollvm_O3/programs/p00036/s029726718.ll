; ModuleID = 'build_ollvm/programs/p00036/s029726718.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s029726718.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str.2 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@str.3 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@str.4 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@str.5 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@str.6 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@str.7 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@str.8 = private unnamed_addr constant [2 x i8] c"A\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = alloca i1, align 1
  %12 = alloca [8 x [9 x i8]], align 16
  %13 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 0, i64 0
  br label %14

14:                                               ; preds = %.backedge, %0
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i8 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.0 = phi i32 [ -1174068081, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1174068081, label %15
    i32 581508682, label %25
    i32 -741961724, label %37
    i32 -600433700, label %39
    i32 737315936, label %40
    i32 1367529059, label %50
    i32 -1861435659, label %61
    i32 1066589746, label %63
    i32 -1308580056, label %73
    i32 121710379, label %86
    i32 -533666341, label %87
    i32 712156849, label %89
    i32 657858880, label %91
    i32 1592675959, label %94
    i32 59197849, label %104
    i32 468079843, label %114
    i32 -1615315829, label %115
    i32 2039350438, label %118
    i32 -1837164472, label %125
    i32 -1756129424, label %128
    i32 -124859306, label %138
    i32 828969986, label %149
    i32 -559475637, label %151
    i32 -852455360, label %161
    i32 -1840286566, label %177
    i32 -1398619976, label %179
    i32 2021005375, label %187
    i32 -744845764, label %195
    i32 -274203263, label %196
    i32 34542918, label %199
    i32 -1485751212, label %209
    i32 1230239302, label %225
    i32 -1460758854, label %227
    i32 -1310985910, label %235
    i32 -1706119738, label %243
    i32 1750257915, label %244
    i32 -478705496, label %247
    i32 -1518500097, label %255
    i32 2064302494, label %263
    i32 -1780562201, label %271
    i32 892918676, label %272
    i32 -908289929, label %275
    i32 141687367, label %278
    i32 507967851, label %287
    i32 1752024771, label %297
    i32 -201223388, label %313
    i32 -1114933818, label %315
    i32 -478943634, label %325
    i32 -192585303, label %342
    i32 -1666283613, label %344
    i32 1376018744, label %354
    i32 429664915, label %364
    i32 -482958015, label %365
    i32 -1109388690, label %368
    i32 426956940, label %371
    i32 -863544095, label %381
    i32 -70937072, label %397
    i32 1012382436, label %399
    i32 1998519923, label %407
    i32 -149987989, label %415
    i32 -1144309863, label %425
    i32 -1666868741, label %435
    i32 334647925, label %436
    i32 -1213680212, label %439
    i32 -224945268, label %442
    i32 -724903819, label %449
    i32 -685453168, label %459
    i32 -1512931786, label %476
    i32 241737521, label %478
    i32 -1395839951, label %488
    i32 -1000173542, label %504
    i32 -1263796824, label %506
    i32 -1553600510, label %507
    i32 395473193, label %508
    i32 -1647772404, label %509
    i32 -1552861946, label %519
    i32 -1996315712, label %530
    i32 985483621, label %531
    i32 72031669, label %541
    i32 767519205, label %553
    i32 -234482599, label %555
    i32 1762346438, label %565
    i32 -1473641420, label %575
    i32 -384698683, label %576
    i32 1691368074, label %586
    i32 -717445595, label %596
    i32 -308774190, label %597
    i32 -1587071037, label %607
    i32 -430596831, label %618
    i32 1253355042, label %619
    i32 -639367682, label %620
    i32 1096496469, label %630
    i32 -1514918048, label %640
    i32 -154330075, label %641
    i32 1607865987, label %643
    i32 1334316351, label %644
    i32 1473510941, label %648
    i32 1409355004, label %649
    i32 -659615150, label %650
    i32 1196827169, label %651
    i32 -863044815, label %652
    i32 1067648969, label %653
    i32 -765540202, label %654
    i32 -578936155, label %655
    i32 565468634, label %656
    i32 830582413, label %657
    i32 1653196734, label %658
    i32 -1042784200, label %659
    i32 2121714561, label %661
    i32 -292777232, label %662
    i32 161994230, label %663
    i32 -1315925968, label %664
    i32 1855118560, label %666
  ]

.backedge:                                        ; preds = %14, %666, %664, %663, %662, %661, %659, %658, %657, %656, %655, %654, %653, %652, %651, %650, %649, %648, %644, %643, %641, %630, %620, %619, %618, %607, %597, %596, %586, %576, %575, %565, %555, %553, %541, %531, %530, %519, %509, %508, %507, %506, %504, %488, %478, %476, %459, %449, %442, %439, %436, %435, %425, %415, %407, %399, %397, %381, %371, %368, %365, %364, %354, %344, %342, %325, %315, %313, %297, %287, %278, %275, %272, %271, %263, %255, %247, %244, %243, %235, %227, %225, %209, %199, %196, %195, %187, %179, %177, %161, %151, %149, %138, %128, %125, %118, %115, %114, %104, %94, %91, %89, %87, %86, %73, %63, %61, %50, %40, %39, %37, %25, %15
  %.093.be = phi i32 [ %.093, %14 ], [ %.093, %666 ], [ %.093, %664 ], [ %.093, %663 ], [ %.093, %662 ], [ %.093, %661 ], [ %.093, %659 ], [ %.093, %658 ], [ %.093, %657 ], [ %.093, %656 ], [ %.093, %655 ], [ %.093, %654 ], [ %.093, %653 ], [ %.093, %652 ], [ %.093, %651 ], [ %.093, %650 ], [ %.093, %649 ], [ %.093, %648 ], [ %.093, %644 ], [ %.093, %643 ], [ %.093, %641 ], [ %.093, %630 ], [ %.093, %620 ], [ %.093, %619 ], [ %.093, %618 ], [ %.093, %607 ], [ %.093, %597 ], [ %.093, %596 ], [ %.093, %586 ], [ %.093, %576 ], [ %.093, %575 ], [ %.093, %565 ], [ %.093, %555 ], [ %.093, %553 ], [ %.093, %541 ], [ %.093, %531 ], [ %.093, %530 ], [ %.093, %519 ], [ %.093, %509 ], [ %.093, %508 ], [ %.093, %507 ], [ %.093, %506 ], [ %.093, %504 ], [ %.093, %488 ], [ %.093, %478 ], [ %.093, %476 ], [ %.093, %459 ], [ %.093, %449 ], [ %.093, %442 ], [ %.093, %439 ], [ %.093, %436 ], [ %.093, %435 ], [ %.093, %425 ], [ %.093, %415 ], [ %.093, %407 ], [ %.093, %399 ], [ %.093, %397 ], [ %.093, %381 ], [ %.093, %371 ], [ %.093, %368 ], [ %.093, %365 ], [ %.093, %364 ], [ %.093, %354 ], [ %.093, %344 ], [ %.093, %342 ], [ %.093, %325 ], [ %.093, %315 ], [ %.093, %313 ], [ %.093, %297 ], [ %.093, %287 ], [ %.093, %278 ], [ %.093, %275 ], [ %.093, %272 ], [ %.093, %271 ], [ %.093, %263 ], [ %.093, %255 ], [ %.093, %247 ], [ %.093, %244 ], [ %.093, %243 ], [ %.093, %235 ], [ %.093, %227 ], [ %.093, %225 ], [ %.093, %209 ], [ %.093, %199 ], [ %.093, %196 ], [ %.093, %195 ], [ %.093, %187 ], [ %.093, %179 ], [ %.093, %177 ], [ %.093, %161 ], [ %.093, %151 ], [ %.093, %149 ], [ %.093, %138 ], [ %.093, %128 ], [ %.093, %125 ], [ %.093, %118 ], [ %.093, %115 ], [ %.093, %114 ], [ %.093, %104 ], [ %.093, %94 ], [ %.093, %91 ], [ %.093, %89 ], [ %88, %87 ], [ %.093, %86 ], [ %.093, %73 ], [ %.093, %63 ], [ %.093, %61 ], [ %.093, %50 ], [ %.093, %40 ], [ 1, %39 ], [ %.093, %37 ], [ %.093, %25 ], [ %.093, %15 ]
  %.091.be = phi i8 [ %.091, %14 ], [ %.091, %666 ], [ %.091, %664 ], [ %.091, %663 ], [ %.091, %662 ], [ %.091, %661 ], [ %.091, %659 ], [ %.091, %658 ], [ %.091, %657 ], [ 1, %656 ], [ %.091, %655 ], [ 1, %654 ], [ %.091, %653 ], [ %.091, %652 ], [ %.091, %651 ], [ %.091, %650 ], [ %.091, %649 ], [ %.091, %648 ], [ %.091, %644 ], [ %.091, %643 ], [ %.091, %641 ], [ %.091, %630 ], [ %.091, %620 ], [ %.091, %619 ], [ %.091, %618 ], [ %.091, %607 ], [ %.091, %597 ], [ %.091, %596 ], [ %.091, %586 ], [ %.091, %576 ], [ %.091, %575 ], [ %.091, %565 ], [ %.091, %555 ], [ %.091, %553 ], [ %.091, %541 ], [ %.091, %531 ], [ %.091, %530 ], [ %.091, %519 ], [ %.091, %509 ], [ %.091, %508 ], [ 1, %507 ], [ 1, %506 ], [ %.091, %504 ], [ %.091, %488 ], [ %.091, %478 ], [ %.091, %476 ], [ %.091, %459 ], [ %.091, %449 ], [ %.091, %442 ], [ %.091, %439 ], [ %.091, %436 ], [ %.091, %435 ], [ 1, %425 ], [ %.091, %415 ], [ %.091, %407 ], [ %.091, %399 ], [ %.091, %397 ], [ %.091, %381 ], [ %.091, %371 ], [ %.091, %368 ], [ %.091, %365 ], [ %.091, %364 ], [ 1, %354 ], [ %.091, %344 ], [ %.091, %342 ], [ %.091, %325 ], [ %.091, %315 ], [ %.091, %313 ], [ %.091, %297 ], [ %.091, %287 ], [ %.091, %278 ], [ %.091, %275 ], [ %.091, %272 ], [ 1, %271 ], [ %.091, %263 ], [ %.091, %255 ], [ %.091, %247 ], [ %.091, %244 ], [ 1, %243 ], [ %.091, %235 ], [ %.091, %227 ], [ %.091, %225 ], [ %.091, %209 ], [ %.091, %199 ], [ %.091, %196 ], [ 1, %195 ], [ %.091, %187 ], [ %.091, %179 ], [ %.091, %177 ], [ %.091, %161 ], [ %.091, %151 ], [ %.091, %149 ], [ %.091, %138 ], [ %.091, %128 ], [ %.091, %125 ], [ %.091, %118 ], [ %.091, %115 ], [ %.091, %114 ], [ %.091, %104 ], [ %.091, %94 ], [ %.091, %91 ], [ 0, %89 ], [ %.091, %87 ], [ %.091, %86 ], [ %.091, %73 ], [ %.091, %63 ], [ %.091, %61 ], [ %.091, %50 ], [ %.091, %40 ], [ %.091, %39 ], [ %.091, %37 ], [ %.091, %25 ], [ %.091, %15 ]
  %.089.be = phi i32 [ %.089, %14 ], [ %.089, %666 ], [ %665, %664 ], [ %.089, %663 ], [ %.089, %662 ], [ %.089, %661 ], [ %.089, %659 ], [ %.089, %658 ], [ %.089, %657 ], [ %.089, %656 ], [ %.089, %655 ], [ %.089, %654 ], [ %.089, %653 ], [ %.089, %652 ], [ %.089, %651 ], [ %.089, %650 ], [ %.089, %649 ], [ %.089, %648 ], [ %.089, %644 ], [ %.089, %643 ], [ %.089, %641 ], [ %.089, %630 ], [ %.089, %620 ], [ %.089, %619 ], [ %.089, %618 ], [ %608, %607 ], [ %.089, %597 ], [ %.089, %596 ], [ %.089, %586 ], [ %.089, %576 ], [ %.089, %575 ], [ %.089, %565 ], [ %.089, %555 ], [ %.089, %553 ], [ %.089, %541 ], [ %.089, %531 ], [ %.089, %530 ], [ %.089, %519 ], [ %.089, %509 ], [ %.089, %508 ], [ %.089, %507 ], [ %.089, %506 ], [ %.089, %504 ], [ %.089, %488 ], [ %.089, %478 ], [ %.089, %476 ], [ %.089, %459 ], [ %.089, %449 ], [ %.089, %442 ], [ %.089, %439 ], [ %.089, %436 ], [ %.089, %435 ], [ %.089, %425 ], [ %.089, %415 ], [ %.089, %407 ], [ %.089, %399 ], [ %.089, %397 ], [ %.089, %381 ], [ %.089, %371 ], [ %.089, %368 ], [ %.089, %365 ], [ %.089, %364 ], [ %.089, %354 ], [ %.089, %344 ], [ %.089, %342 ], [ %.089, %325 ], [ %.089, %315 ], [ %.089, %313 ], [ %.089, %297 ], [ %.089, %287 ], [ %.089, %278 ], [ %.089, %275 ], [ %.089, %272 ], [ %.089, %271 ], [ %.089, %263 ], [ %.089, %255 ], [ %.089, %247 ], [ %.089, %244 ], [ %.089, %243 ], [ %.089, %235 ], [ %.089, %227 ], [ %.089, %225 ], [ %.089, %209 ], [ %.089, %199 ], [ %.089, %196 ], [ %.089, %195 ], [ %.089, %187 ], [ %.089, %179 ], [ %.089, %177 ], [ %.089, %161 ], [ %.089, %151 ], [ %.089, %149 ], [ %.089, %138 ], [ %.089, %128 ], [ %.089, %125 ], [ %.089, %118 ], [ %.089, %115 ], [ %.089, %114 ], [ %.089, %104 ], [ %.089, %94 ], [ %.089, %91 ], [ 0, %89 ], [ %.089, %87 ], [ %.089, %86 ], [ %.089, %73 ], [ %.089, %63 ], [ %.089, %61 ], [ %.089, %50 ], [ %.089, %40 ], [ %.089, %39 ], [ %.089, %37 ], [ %.089, %25 ], [ %.089, %15 ]
  %.087.be = phi i32 [ %.087, %14 ], [ %.087, %666 ], [ %.087, %664 ], [ %.087, %663 ], [ %.087, %662 ], [ %.087, %661 ], [ %660, %659 ], [ %.087, %658 ], [ %.087, %657 ], [ %.087, %656 ], [ %.087, %655 ], [ %.087, %654 ], [ %.087, %653 ], [ %.087, %652 ], [ %.087, %651 ], [ %.087, %650 ], [ %.087, %649 ], [ 0, %648 ], [ %.087, %644 ], [ %.087, %643 ], [ %.087, %641 ], [ %.087, %630 ], [ %.087, %620 ], [ %.087, %619 ], [ %.087, %618 ], [ %.087, %607 ], [ %.087, %597 ], [ %.087, %596 ], [ %.087, %586 ], [ %.087, %576 ], [ %.087, %575 ], [ %.087, %565 ], [ %.087, %555 ], [ %.087, %553 ], [ %.087, %541 ], [ %.087, %531 ], [ %.087, %530 ], [ %520, %519 ], [ %.087, %509 ], [ %.087, %508 ], [ %.087, %507 ], [ %.087, %506 ], [ %.087, %504 ], [ %.087, %488 ], [ %.087, %478 ], [ %.087, %476 ], [ %.087, %459 ], [ %.087, %449 ], [ %.087, %442 ], [ %.087, %439 ], [ %.087, %436 ], [ %.087, %435 ], [ %.087, %425 ], [ %.087, %415 ], [ %.087, %407 ], [ %.087, %399 ], [ %.087, %397 ], [ %.087, %381 ], [ %.087, %371 ], [ %.087, %368 ], [ %.087, %365 ], [ %.087, %364 ], [ %.087, %354 ], [ %.087, %344 ], [ %.087, %342 ], [ %.087, %325 ], [ %.087, %315 ], [ %.087, %313 ], [ %.087, %297 ], [ %.087, %287 ], [ %.087, %278 ], [ %.087, %275 ], [ %.087, %272 ], [ %.087, %271 ], [ %.087, %263 ], [ %.087, %255 ], [ %.087, %247 ], [ %.087, %244 ], [ %.087, %243 ], [ %.087, %235 ], [ %.087, %227 ], [ %.087, %225 ], [ %.087, %209 ], [ %.087, %199 ], [ %.087, %196 ], [ %.087, %195 ], [ %.087, %187 ], [ %.087, %179 ], [ %.087, %177 ], [ %.087, %161 ], [ %.087, %151 ], [ %.087, %149 ], [ %.087, %138 ], [ %.087, %128 ], [ %.087, %125 ], [ %.087, %118 ], [ %.087, %115 ], [ %.087, %114 ], [ 0, %104 ], [ %.087, %94 ], [ %.087, %91 ], [ %.087, %89 ], [ %.087, %87 ], [ %.087, %86 ], [ %.087, %73 ], [ %.087, %63 ], [ %.087, %61 ], [ %.087, %50 ], [ %.087, %40 ], [ %.087, %39 ], [ %.087, %37 ], [ %.087, %25 ], [ %.087, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ 1096496469, %666 ], [ -1587071037, %664 ], [ 1691368074, %663 ], [ 1762346438, %662 ], [ 72031669, %661 ], [ -1552861946, %659 ], [ -1395839951, %658 ], [ -685453168, %657 ], [ -1144309863, %656 ], [ -863544095, %655 ], [ 1376018744, %654 ], [ -478943634, %653 ], [ 1752024771, %652 ], [ -1485751212, %651 ], [ -852455360, %650 ], [ -124859306, %649 ], [ 59197849, %648 ], [ -1308580056, %644 ], [ 1367529059, %643 ], [ 581508682, %641 ], [ %639, %630 ], [ %629, %620 ], [ -1174068081, %619 ], [ 657858880, %618 ], [ %617, %607 ], [ %606, %597 ], [ -308774190, %596 ], [ %595, %586 ], [ %585, %576 ], [ 1253355042, %575 ], [ %574, %565 ], [ %564, %555 ], [ %554, %553 ], [ %552, %541 ], [ %540, %531 ], [ -1615315829, %530 ], [ %529, %519 ], [ %518, %509 ], [ -1647772404, %508 ], [ 985483621, %507 ], [ 985483621, %506 ], [ %505, %504 ], [ %503, %488 ], [ %487, %478 ], [ %477, %476 ], [ %475, %459 ], [ %458, %449 ], [ %448, %442 ], [ %441, %439 ], [ %438, %436 ], [ 985483621, %435 ], [ %434, %425 ], [ %424, %415 ], [ %414, %407 ], [ %406, %399 ], [ %398, %397 ], [ %396, %381 ], [ %380, %371 ], [ %370, %368 ], [ %367, %365 ], [ 985483621, %364 ], [ %363, %354 ], [ %353, %344 ], [ %343, %342 ], [ %341, %325 ], [ %324, %315 ], [ %314, %313 ], [ %312, %297 ], [ %296, %287 ], [ %286, %278 ], [ %277, %275 ], [ %274, %272 ], [ 985483621, %271 ], [ %270, %263 ], [ %262, %255 ], [ %254, %247 ], [ %246, %244 ], [ 985483621, %243 ], [ %242, %235 ], [ %234, %227 ], [ %226, %225 ], [ %224, %209 ], [ %208, %199 ], [ %198, %196 ], [ 985483621, %195 ], [ %194, %187 ], [ %186, %179 ], [ %178, %177 ], [ %176, %161 ], [ %160, %151 ], [ %150, %149 ], [ %148, %138 ], [ %137, %128 ], [ %127, %125 ], [ %124, %118 ], [ %117, %115 ], [ -1615315829, %114 ], [ %113, %104 ], [ %103, %94 ], [ %93, %91 ], [ 657858880, %89 ], [ 737315936, %87 ], [ -533666341, %86 ], [ %85, %73 ], [ %72, %63 ], [ %62, %61 ], [ %60, %50 ], [ %49, %40 ], [ 737315936, %39 ], [ %38, %37 ], [ %36, %25 ], [ %24, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 581508682, i32 -154330075
  br label %.backedge

25:                                               ; preds = %14
  %26 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %13)
  %27 = icmp ne i32 %26, -1
  store i1 %27, i1* %11, align 1
  %28 = load i32, i32* @x, align 4
  %29 = load i32, i32* @y, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -741961724, i32 -154330075
  br label %.backedge

37:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %11, align 1
  %38 = select i1 %.0..0..0., i32 -600433700, i32 -639367682
  br label %.backedge

39:                                               ; preds = %14
  br label %.backedge

40:                                               ; preds = %14
  %41 = load i32, i32* @x, align 4
  %42 = load i32, i32* @y, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1367529059, i32 1607865987
  br label %.backedge

50:                                               ; preds = %14
  %51 = icmp slt i32 %.093, 8
  store i1 %51, i1* %10, align 1
  %52 = load i32, i32* @x, align 4
  %53 = load i32, i32* @y, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 -1861435659, i32 1607865987
  br label %.backedge

61:                                               ; preds = %14
  %.0..0..0.77 = load volatile i1, i1* %10, align 1
  %62 = select i1 %.0..0..0.77, i32 1066589746, i32 712156849
  br label %.backedge

63:                                               ; preds = %14
  %64 = load i32, i32* @x, align 4
  %65 = load i32, i32* @y, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 -1308580056, i32 1334316351
  br label %.backedge

73:                                               ; preds = %14
  %74 = sext i32 %.093 to i64
  %75 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %74, i64 0
  %76 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %75)
  %77 = load i32, i32* @x, align 4
  %78 = load i32, i32* @y, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 121710379, i32 1334316351
  br label %.backedge

86:                                               ; preds = %14
  br label %.backedge

87:                                               ; preds = %14
  %88 = add i32 %.093, 1
  br label %.backedge

89:                                               ; preds = %14
  %90 = call i32 @getchar()
  br label %.backedge

91:                                               ; preds = %14
  %92 = icmp slt i32 %.089, 8
  %93 = select i1 %92, i32 1592675959, i32 1253355042
  br label %.backedge

94:                                               ; preds = %14
  %95 = load i32, i32* @x, align 4
  %96 = load i32, i32* @y, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 59197849, i32 1473510941
  br label %.backedge

104:                                              ; preds = %14
  %105 = load i32, i32* @x, align 4
  %106 = load i32, i32* @y, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 468079843, i32 1473510941
  br label %.backedge

114:                                              ; preds = %14
  br label %.backedge

115:                                              ; preds = %14
  %116 = icmp slt i32 %.087, 8
  %117 = select i1 %116, i32 2039350438, i32 985483621
  br label %.backedge

118:                                              ; preds = %14
  %119 = sext i32 %.089 to i64
  %120 = sext i32 %.087 to i64
  %121 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %119, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 49
  %124 = select i1 %123, i32 -1837164472, i32 395473193
  br label %.backedge

125:                                              ; preds = %14
  %126 = icmp slt i32 %.089, 7
  %127 = select i1 %126, i32 -1756129424, i32 -274203263
  br label %.backedge

128:                                              ; preds = %14
  %129 = load i32, i32* @x, align 4
  %130 = load i32, i32* @y, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 -124859306, i32 1409355004
  br label %.backedge

138:                                              ; preds = %14
  %139 = icmp slt i32 %.087, 7
  store i1 %139, i1* %9, align 1
  %140 = load i32, i32* @x, align 4
  %141 = load i32, i32* @y, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 828969986, i32 1409355004
  br label %.backedge

149:                                              ; preds = %14
  %.0..0..0.78 = load volatile i1, i1* %9, align 1
  %150 = select i1 %.0..0..0.78, i32 -559475637, i32 -274203263
  br label %.backedge

151:                                              ; preds = %14
  %152 = load i32, i32* @x, align 4
  %153 = load i32, i32* @y, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 -852455360, i32 -659615150
  br label %.backedge

161:                                              ; preds = %14
  %162 = sext i32 %.089 to i64
  %163 = add i32 %.087, 1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %162, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = icmp eq i8 %166, 49
  store i1 %167, i1* %8, align 1
  %168 = load i32, i32* @x, align 4
  %169 = load i32, i32* @y, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -1840286566, i32 -659615150
  br label %.backedge

177:                                              ; preds = %14
  %.0..0..0.79 = load volatile i1, i1* %8, align 1
  %178 = select i1 %.0..0..0.79, i32 -1398619976, i32 -274203263
  br label %.backedge

179:                                              ; preds = %14
  %180 = add i32 %.089, 1
  %181 = sext i32 %180 to i64
  %182 = sext i32 %.087 to i64
  %183 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %181, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, 49
  %186 = select i1 %185, i32 2021005375, i32 -274203263
  br label %.backedge

187:                                              ; preds = %14
  %188 = add i32 %.089, 1
  %189 = sext i32 %188 to i64
  %.neg106 = add i32 %.087, 1
  %190 = sext i32 %.neg106 to i64
  %191 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %189, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = icmp eq i8 %192, 49
  %194 = select i1 %193, i32 -744845764, i32 -274203263
  br label %.backedge

195:                                              ; preds = %14
  %puts105 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.8, i64 0, i64 0))
  br label %.backedge

196:                                              ; preds = %14
  %197 = icmp slt i32 %.089, 5
  %198 = select i1 %197, i32 34542918, i32 1750257915
  br label %.backedge

199:                                              ; preds = %14
  %200 = load i32, i32* @x, align 4
  %201 = load i32, i32* @y, align 4
  %202 = add i32 %200, -1
  %203 = mul i32 %202, %200
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %206, %205
  %208 = select i1 %207, i32 -1485751212, i32 1196827169
  br label %.backedge

209:                                              ; preds = %14
  %210 = add i32 %.089, 1
  %211 = sext i32 %210 to i64
  %212 = sext i32 %.087 to i64
  %213 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %211, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = icmp eq i8 %214, 49
  store i1 %215, i1* %7, align 1
  %216 = load i32, i32* @x, align 4
  %217 = load i32, i32* @y, align 4
  %218 = add i32 %216, -1
  %219 = mul i32 %218, %216
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %222, %221
  %224 = select i1 %223, i32 1230239302, i32 1196827169
  br label %.backedge

225:                                              ; preds = %14
  %.0..0..0.80 = load volatile i1, i1* %7, align 1
  %226 = select i1 %.0..0..0.80, i32 -1460758854, i32 1750257915
  br label %.backedge

227:                                              ; preds = %14
  %228 = add i32 %.089, 2
  %229 = sext i32 %228 to i64
  %230 = sext i32 %.087 to i64
  %231 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %229, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = icmp eq i8 %232, 49
  %234 = select i1 %233, i32 -1310985910, i32 1750257915
  br label %.backedge

235:                                              ; preds = %14
  %236 = add i32 %.089, 3
  %237 = sext i32 %236 to i64
  %238 = sext i32 %.087 to i64
  %239 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %237, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = icmp eq i8 %240, 49
  %242 = select i1 %241, i32 -1706119738, i32 1750257915
  br label %.backedge

243:                                              ; preds = %14
  %puts104 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.7, i64 0, i64 0))
  br label %.backedge

244:                                              ; preds = %14
  %245 = icmp slt i32 %.087, 5
  %246 = select i1 %245, i32 -478705496, i32 892918676
  br label %.backedge

247:                                              ; preds = %14
  %248 = sext i32 %.089 to i64
  %249 = add i32 %.087, 1
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %248, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = icmp eq i8 %252, 49
  %254 = select i1 %253, i32 -1518500097, i32 892918676
  br label %.backedge

255:                                              ; preds = %14
  %256 = sext i32 %.089 to i64
  %257 = add i32 %.087, 2
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %256, i64 %258
  %260 = load i8, i8* %259, align 1
  %261 = icmp eq i8 %260, 49
  %262 = select i1 %261, i32 2064302494, i32 892918676
  br label %.backedge

263:                                              ; preds = %14
  %264 = sext i32 %.089 to i64
  %265 = add i32 %.087, 3
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %264, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = icmp eq i8 %268, 49
  %270 = select i1 %269, i32 -1780562201, i32 892918676
  br label %.backedge

271:                                              ; preds = %14
  %puts103 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i64 0, i64 0))
  br label %.backedge

272:                                              ; preds = %14
  %273 = icmp slt i32 %.089, 6
  %274 = select i1 %273, i32 -908289929, i32 -482958015
  br label %.backedge

275:                                              ; preds = %14
  %276 = icmp sgt i32 %.087, 0
  %277 = select i1 %276, i32 141687367, i32 -482958015
  br label %.backedge

278:                                              ; preds = %14
  %279 = add i32 %.089, 1
  %280 = sext i32 %279 to i64
  %281 = add i32 %.087, -1
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %280, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = icmp eq i8 %284, 49
  %286 = select i1 %285, i32 507967851, i32 -482958015
  br label %.backedge

287:                                              ; preds = %14
  %288 = load i32, i32* @x, align 4
  %289 = load i32, i32* @y, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 1752024771, i32 -863044815
  br label %.backedge

297:                                              ; preds = %14
  %298 = add i32 %.089, 1
  %299 = sext i32 %298 to i64
  %300 = sext i32 %.087 to i64
  %301 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %299, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = icmp eq i8 %302, 49
  store i1 %303, i1* %6, align 1
  %304 = load i32, i32* @x, align 4
  %305 = load i32, i32* @y, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 -201223388, i32 -863044815
  br label %.backedge

313:                                              ; preds = %14
  %.0..0..0.81 = load volatile i1, i1* %6, align 1
  %314 = select i1 %.0..0..0.81, i32 -1114933818, i32 -482958015
  br label %.backedge

315:                                              ; preds = %14
  %316 = load i32, i32* @x, align 4
  %317 = load i32, i32* @y, align 4
  %318 = add i32 %316, -1
  %319 = mul i32 %318, %316
  %320 = and i32 %319, 1
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %322, %321
  %324 = select i1 %323, i32 -478943634, i32 1067648969
  br label %.backedge

325:                                              ; preds = %14
  %326 = add i32 %.089, 2
  %327 = sext i32 %326 to i64
  %328 = add i32 %.087, -1
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %327, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = icmp eq i8 %331, 49
  store i1 %332, i1* %5, align 1
  %333 = load i32, i32* @x, align 4
  %334 = load i32, i32* @y, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 -192585303, i32 1067648969
  br label %.backedge

342:                                              ; preds = %14
  %.0..0..0.82 = load volatile i1, i1* %5, align 1
  %343 = select i1 %.0..0..0.82, i32 -1666283613, i32 -482958015
  br label %.backedge

344:                                              ; preds = %14
  %345 = load i32, i32* @x, align 4
  %346 = load i32, i32* @y, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 1376018744, i32 -765540202
  br label %.backedge

354:                                              ; preds = %14
  %puts102 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %355 = load i32, i32* @x, align 4
  %356 = load i32, i32* @y, align 4
  %357 = add i32 %355, -1
  %358 = mul i32 %357, %355
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %361, %360
  %363 = select i1 %362, i32 429664915, i32 -765540202
  br label %.backedge

364:                                              ; preds = %14
  br label %.backedge

365:                                              ; preds = %14
  %366 = icmp slt i32 %.089, 7
  %367 = select i1 %366, i32 -1109388690, i32 334647925
  br label %.backedge

368:                                              ; preds = %14
  %369 = icmp slt i32 %.087, 6
  %370 = select i1 %369, i32 426956940, i32 334647925
  br label %.backedge

371:                                              ; preds = %14
  %372 = load i32, i32* @x, align 4
  %373 = load i32, i32* @y, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 -863544095, i32 -578936155
  br label %.backedge

381:                                              ; preds = %14
  %382 = sext i32 %.089 to i64
  %383 = add i32 %.087, 1
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %382, i64 %384
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 49
  store i1 %387, i1* %4, align 1
  %388 = load i32, i32* @x, align 4
  %389 = load i32, i32* @y, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 -70937072, i32 -578936155
  br label %.backedge

397:                                              ; preds = %14
  %.0..0..0.83 = load volatile i1, i1* %4, align 1
  %398 = select i1 %.0..0..0.83, i32 1012382436, i32 334647925
  br label %.backedge

399:                                              ; preds = %14
  %.neg101 = add i32 %.089, 1
  %400 = sext i32 %.neg101 to i64
  %401 = add i32 %.087, 1
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %400, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = icmp eq i8 %404, 49
  %406 = select i1 %405, i32 1998519923, i32 334647925
  br label %.backedge

407:                                              ; preds = %14
  %.neg100 = add i32 %.089, 1
  %408 = sext i32 %.neg100 to i64
  %409 = add i32 %.087, 2
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %408, i64 %410
  %412 = load i8, i8* %411, align 1
  %413 = icmp eq i8 %412, 49
  %414 = select i1 %413, i32 -149987989, i32 334647925
  br label %.backedge

415:                                              ; preds = %14
  %416 = load i32, i32* @x, align 4
  %417 = load i32, i32* @y, align 4
  %418 = add i32 %416, -1
  %419 = mul i32 %418, %416
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %422, %421
  %424 = select i1 %423, i32 -1144309863, i32 565468634
  br label %.backedge

425:                                              ; preds = %14
  %puts99 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i64 0, i64 0))
  %426 = load i32, i32* @x, align 4
  %427 = load i32, i32* @y, align 4
  %428 = add i32 %426, -1
  %429 = mul i32 %428, %426
  %430 = and i32 %429, 1
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %432, %431
  %434 = select i1 %433, i32 -1666868741, i32 565468634
  br label %.backedge

435:                                              ; preds = %14
  br label %.backedge

436:                                              ; preds = %14
  %437 = icmp slt i32 %.089, 6
  %438 = select i1 %437, i32 -1213680212, i32 -1553600510
  br label %.backedge

439:                                              ; preds = %14
  %440 = icmp slt i32 %.087, 7
  %441 = select i1 %440, i32 -224945268, i32 -1553600510
  br label %.backedge

442:                                              ; preds = %14
  %.neg98 = add i32 %.089, 1
  %443 = sext i32 %.neg98 to i64
  %444 = sext i32 %.087 to i64
  %445 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %443, i64 %444
  %446 = load i8, i8* %445, align 1
  %447 = icmp eq i8 %446, 49
  %448 = select i1 %447, i32 -724903819, i32 -1553600510
  br label %.backedge

449:                                              ; preds = %14
  %450 = load i32, i32* @x, align 4
  %451 = load i32, i32* @y, align 4
  %452 = add i32 %450, -1
  %453 = mul i32 %452, %450
  %454 = and i32 %453, 1
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %456, %455
  %458 = select i1 %457, i32 -685453168, i32 830582413
  br label %.backedge

459:                                              ; preds = %14
  %460 = add i32 %.089, 1
  %461 = sext i32 %460 to i64
  %462 = add i32 %.087, 1
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %461, i64 %463
  %465 = load i8, i8* %464, align 1
  %466 = icmp eq i8 %465, 49
  store i1 %466, i1* %3, align 1
  %467 = load i32, i32* @x, align 4
  %468 = load i32, i32* @y, align 4
  %469 = add i32 %467, -1
  %470 = mul i32 %469, %467
  %471 = and i32 %470, 1
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %473, %472
  %475 = select i1 %474, i32 -1512931786, i32 830582413
  br label %.backedge

476:                                              ; preds = %14
  %.0..0..0.84 = load volatile i1, i1* %3, align 1
  %477 = select i1 %.0..0..0.84, i32 241737521, i32 -1553600510
  br label %.backedge

478:                                              ; preds = %14
  %479 = load i32, i32* @x, align 4
  %480 = load i32, i32* @y, align 4
  %481 = add i32 %479, -1
  %482 = mul i32 %481, %479
  %483 = and i32 %482, 1
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %480, 10
  %486 = or i1 %485, %484
  %487 = select i1 %486, i32 -1395839951, i32 1653196734
  br label %.backedge

488:                                              ; preds = %14
  %489 = add i32 %.089, 2
  %490 = sext i32 %489 to i64
  %.neg = add i32 %.087, 1
  %491 = sext i32 %.neg to i64
  %492 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %490, i64 %491
  %493 = load i8, i8* %492, align 1
  %494 = icmp eq i8 %493, 49
  store i1 %494, i1* %2, align 1
  %495 = load i32, i32* @x, align 4
  %496 = load i32, i32* @y, align 4
  %497 = add i32 %495, -1
  %498 = mul i32 %497, %495
  %499 = and i32 %498, 1
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %501, %500
  %503 = select i1 %502, i32 -1000173542, i32 1653196734
  br label %.backedge

504:                                              ; preds = %14
  %.0..0..0.85 = load volatile i1, i1* %2, align 1
  %505 = select i1 %.0..0..0.85, i32 -1263796824, i32 -1553600510
  br label %.backedge

506:                                              ; preds = %14
  %puts97 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

507:                                              ; preds = %14
  %puts96 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.2, i64 0, i64 0))
  br label %.backedge

508:                                              ; preds = %14
  br label %.backedge

509:                                              ; preds = %14
  %510 = load i32, i32* @x, align 4
  %511 = load i32, i32* @y, align 4
  %512 = add i32 %510, -1
  %513 = mul i32 %512, %510
  %514 = and i32 %513, 1
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %516, %515
  %518 = select i1 %517, i32 -1552861946, i32 -1042784200
  br label %.backedge

519:                                              ; preds = %14
  %520 = add i32 %.087, 1
  %521 = load i32, i32* @x, align 4
  %522 = load i32, i32* @y, align 4
  %523 = add i32 %521, -1
  %524 = mul i32 %523, %521
  %525 = and i32 %524, 1
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %527, %526
  %529 = select i1 %528, i32 -1996315712, i32 -1042784200
  br label %.backedge

530:                                              ; preds = %14
  br label %.backedge

531:                                              ; preds = %14
  %532 = load i32, i32* @x, align 4
  %533 = load i32, i32* @y, align 4
  %534 = add i32 %532, -1
  %535 = mul i32 %534, %532
  %536 = and i32 %535, 1
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %538, %537
  %540 = select i1 %539, i32 72031669, i32 2121714561
  br label %.backedge

541:                                              ; preds = %14
  %542 = and i8 %.091, 1
  %543 = icmp ne i8 %542, 0
  store i1 %543, i1* %1, align 1
  %544 = load i32, i32* @x, align 4
  %545 = load i32, i32* @y, align 4
  %546 = add i32 %544, -1
  %547 = mul i32 %546, %544
  %548 = and i32 %547, 1
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %550, %549
  %552 = select i1 %551, i32 767519205, i32 2121714561
  br label %.backedge

553:                                              ; preds = %14
  %.0..0..0.86 = load volatile i1, i1* %1, align 1
  %554 = select i1 %.0..0..0.86, i32 -234482599, i32 -384698683
  br label %.backedge

555:                                              ; preds = %14
  %556 = load i32, i32* @x, align 4
  %557 = load i32, i32* @y, align 4
  %558 = add i32 %556, -1
  %559 = mul i32 %558, %556
  %560 = and i32 %559, 1
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %562, %561
  %564 = select i1 %563, i32 1762346438, i32 -292777232
  br label %.backedge

565:                                              ; preds = %14
  %566 = load i32, i32* @x, align 4
  %567 = load i32, i32* @y, align 4
  %568 = add i32 %566, -1
  %569 = mul i32 %568, %566
  %570 = and i32 %569, 1
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %572, %571
  %574 = select i1 %573, i32 -1473641420, i32 -292777232
  br label %.backedge

575:                                              ; preds = %14
  br label %.backedge

576:                                              ; preds = %14
  %577 = load i32, i32* @x, align 4
  %578 = load i32, i32* @y, align 4
  %579 = add i32 %577, -1
  %580 = mul i32 %579, %577
  %581 = and i32 %580, 1
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %578, 10
  %584 = or i1 %583, %582
  %585 = select i1 %584, i32 1691368074, i32 161994230
  br label %.backedge

586:                                              ; preds = %14
  %587 = load i32, i32* @x, align 4
  %588 = load i32, i32* @y, align 4
  %589 = add i32 %587, -1
  %590 = mul i32 %589, %587
  %591 = and i32 %590, 1
  %592 = icmp eq i32 %591, 0
  %593 = icmp slt i32 %588, 10
  %594 = or i1 %593, %592
  %595 = select i1 %594, i32 -717445595, i32 161994230
  br label %.backedge

596:                                              ; preds = %14
  br label %.backedge

597:                                              ; preds = %14
  %598 = load i32, i32* @x, align 4
  %599 = load i32, i32* @y, align 4
  %600 = add i32 %598, -1
  %601 = mul i32 %600, %598
  %602 = and i32 %601, 1
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %604, %603
  %606 = select i1 %605, i32 -1587071037, i32 -1315925968
  br label %.backedge

607:                                              ; preds = %14
  %608 = add i32 %.089, 1
  %609 = load i32, i32* @x, align 4
  %610 = load i32, i32* @y, align 4
  %611 = add i32 %609, -1
  %612 = mul i32 %611, %609
  %613 = and i32 %612, 1
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %615, %614
  %617 = select i1 %616, i32 -430596831, i32 -1315925968
  br label %.backedge

618:                                              ; preds = %14
  br label %.backedge

619:                                              ; preds = %14
  br label %.backedge

620:                                              ; preds = %14
  %621 = load i32, i32* @x, align 4
  %622 = load i32, i32* @y, align 4
  %623 = add i32 %621, -1
  %624 = mul i32 %623, %621
  %625 = and i32 %624, 1
  %626 = icmp eq i32 %625, 0
  %627 = icmp slt i32 %622, 10
  %628 = or i1 %627, %626
  %629 = select i1 %628, i32 1096496469, i32 1855118560
  br label %.backedge

630:                                              ; preds = %14
  %631 = load i32, i32* @x, align 4
  %632 = load i32, i32* @y, align 4
  %633 = add i32 %631, -1
  %634 = mul i32 %633, %631
  %635 = and i32 %634, 1
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %637, %636
  %639 = select i1 %638, i32 -1514918048, i32 1855118560
  br label %.backedge

640:                                              ; preds = %14
  ret i32 0

641:                                              ; preds = %14
  %642 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %13)
  br label %.backedge

643:                                              ; preds = %14
  br label %.backedge

644:                                              ; preds = %14
  %645 = sext i32 %.093 to i64
  %646 = getelementptr inbounds [8 x [9 x i8]], [8 x [9 x i8]]* %12, i64 0, i64 %645, i64 0
  %647 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %646)
  br label %.backedge

648:                                              ; preds = %14
  br label %.backedge

649:                                              ; preds = %14
  br label %.backedge

650:                                              ; preds = %14
  br label %.backedge

651:                                              ; preds = %14
  br label %.backedge

652:                                              ; preds = %14
  br label %.backedge

653:                                              ; preds = %14
  br label %.backedge

654:                                              ; preds = %14
  %puts95 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.backedge

655:                                              ; preds = %14
  br label %.backedge

656:                                              ; preds = %14
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i64 0, i64 0))
  br label %.backedge

657:                                              ; preds = %14
  br label %.backedge

658:                                              ; preds = %14
  br label %.backedge

659:                                              ; preds = %14
  %660 = add i32 %.087, 1
  br label %.backedge

661:                                              ; preds = %14
  br label %.backedge

662:                                              ; preds = %14
  br label %.backedge

663:                                              ; preds = %14
  br label %.backedge

664:                                              ; preds = %14
  %665 = add i32 %.089, 1
  br label %.backedge

666:                                              ; preds = %14
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
