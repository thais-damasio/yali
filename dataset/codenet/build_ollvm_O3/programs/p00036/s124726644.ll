; ModuleID = 'build_ollvm/programs/p00036/s124726644.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s124726644.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s124726644.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@str.2 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@str.3 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@str.4 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@str.5 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@str.6 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@str.7 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@str.8 = private unnamed_addr constant [2 x i8] c"A\00", align 1

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = alloca [12 x [12 x i8]], align 16
  br label %12

12:                                               ; preds = %.backedge, %0
  %.0103 = phi i32 [ undef, %0 ], [ %.0103.be, %.backedge ]
  %.0101 = phi i32 [ undef, %0 ], [ %.0101.be, %.backedge ]
  %.099 = phi i8 [ 0, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i32 [ 0, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.0 = phi i32 [ 432248570, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 432248570, label %13
    i32 1973005192, label %16
    i32 -1749465420, label %17
    i32 1280299542, label %27
    i32 -636978874, label %38
    i32 -1234966529, label %40
    i32 -1779610728, label %44
    i32 -739497569, label %54
    i32 1599561115, label %65
    i32 1337363663, label %66
    i32 -409395294, label %67
    i32 -2087000443, label %68
    i32 -2022549401, label %69
    i32 587431336, label %70
    i32 -275641582, label %73
    i32 880343670, label %79
    i32 76123710, label %80
    i32 1801825717, label %81
    i32 565333126, label %82
    i32 -1413088017, label %84
    i32 655168880, label %94
    i32 2076899431, label %104
    i32 1703638635, label %105
    i32 854932965, label %106
    i32 -218364793, label %109
    i32 1266285768, label %119
    i32 -1589152672, label %136
    i32 -48958551, label %138
    i32 -584843638, label %148
    i32 1815006472, label %160
    i32 -1364442269, label %161
    i32 158231825, label %171
    i32 126980530, label %181
    i32 1951227019, label %182
    i32 -1755270605, label %183
    i32 -1445092201, label %190
    i32 -50610156, label %200
    i32 -879517251, label %215
    i32 1017130014, label %217
    i32 1244586218, label %227
    i32 -771805910, label %244
    i32 2101777025, label %246
    i32 -659569265, label %247
    i32 700377034, label %257
    i32 -124878702, label %272
    i32 -729062034, label %274
    i32 -1747055103, label %282
    i32 -1982137244, label %292
    i32 -910330119, label %307
    i32 2108170603, label %309
    i32 -921847605, label %310
    i32 1784766372, label %317
    i32 -639055337, label %325
    i32 -2077843156, label %333
    i32 -601800866, label %343
    i32 1075050896, label %353
    i32 -1743377213, label %354
    i32 -331166351, label %362
    i32 -1092299381, label %372
    i32 -474315182, label %389
    i32 256148992, label %391
    i32 -173821474, label %399
    i32 -1356497467, label %400
    i32 1622298965, label %410
    i32 1193213157, label %425
    i32 -35971542, label %427
    i32 1506879020, label %436
    i32 -519005767, label %445
    i32 -1105289225, label %455
    i32 1109873107, label %465
    i32 2022175485, label %466
    i32 212253226, label %476
    i32 1099439962, label %492
    i32 -1690195251, label %494
    i32 -1107957952, label %502
    i32 -2054406438, label %511
    i32 1829689071, label %512
    i32 -1328812162, label %522
    i32 -1389718197, label %539
    i32 -1893002601, label %541
    i32 -1608983036, label %549
    i32 694065381, label %557
    i32 -598550660, label %558
    i32 770340833, label %559
    i32 1124877548, label %560
    i32 -299838211, label %561
    i32 -257432314, label %562
    i32 -362454332, label %563
    i32 -361867339, label %573
    i32 576640234, label %583
    i32 -1316316048, label %584
    i32 -587687779, label %585
    i32 -1783117794, label %586
    i32 -1056269691, label %587
    i32 2072878099, label %589
    i32 -333707988, label %590
    i32 1463060672, label %591
    i32 -2066093559, label %594
    i32 1473379300, label %595
    i32 -608700887, label %596
    i32 -1170757793, label %597
    i32 1643273077, label %598
    i32 -1635644377, label %599
    i32 -2097295275, label %600
    i32 -1695412452, label %601
    i32 -458505884, label %602
    i32 -1355409116, label %603
    i32 453321301, label %604
    i32 898025588, label %605
  ]

.backedge:                                        ; preds = %12, %605, %604, %603, %602, %601, %600, %599, %598, %597, %596, %595, %594, %591, %590, %589, %587, %586, %584, %583, %573, %563, %562, %561, %560, %559, %558, %557, %549, %541, %539, %522, %512, %511, %502, %494, %492, %476, %466, %465, %455, %445, %436, %427, %425, %410, %400, %399, %391, %389, %372, %362, %354, %353, %343, %333, %325, %317, %310, %309, %307, %292, %282, %274, %272, %257, %247, %246, %244, %227, %217, %215, %200, %190, %183, %182, %181, %171, %161, %160, %148, %138, %136, %119, %109, %106, %105, %104, %94, %84, %82, %81, %80, %79, %73, %70, %69, %68, %67, %66, %65, %54, %44, %40, %38, %27, %17, %16, %13
  %.0103.be = phi i32 [ %.0103, %12 ], [ %.0103, %605 ], [ %.0103, %604 ], [ %.0103, %603 ], [ %.0103, %602 ], [ %.0103, %601 ], [ %.0103, %600 ], [ %.0103, %599 ], [ %.0103, %598 ], [ %.0103, %597 ], [ %.0103, %596 ], [ %.0103, %595 ], [ %.0103, %594 ], [ %592, %591 ], [ %.0103, %590 ], [ %.0103, %589 ], [ %.0103, %587 ], [ %.0103, %586 ], [ %.0103, %584 ], [ %.0103, %583 ], [ %.0103, %573 ], [ %.0103, %563 ], [ %.0103, %562 ], [ %.0103, %561 ], [ %.0103, %560 ], [ %.0103, %559 ], [ %.0103, %558 ], [ %.0103, %557 ], [ %.0103, %549 ], [ %.0103, %541 ], [ %.0103, %539 ], [ %.0103, %522 ], [ %.0103, %512 ], [ %.0103, %511 ], [ %.0103, %502 ], [ %.0103, %494 ], [ %.0103, %492 ], [ %.0103, %476 ], [ %.0103, %466 ], [ %.0103, %465 ], [ %.0103, %455 ], [ %.0103, %445 ], [ %.0103, %436 ], [ %.0103, %427 ], [ %.0103, %425 ], [ %.0103, %410 ], [ %.0103, %400 ], [ %.0103, %399 ], [ %.0103, %391 ], [ %.0103, %389 ], [ %.0103, %372 ], [ %.0103, %362 ], [ %.0103, %354 ], [ %.0103, %353 ], [ %.0103, %343 ], [ %.0103, %333 ], [ %.0103, %325 ], [ %.0103, %317 ], [ %.0103, %310 ], [ %.0103, %309 ], [ %.0103, %307 ], [ %.0103, %292 ], [ %.0103, %282 ], [ %.0103, %274 ], [ %.0103, %272 ], [ %.0103, %257 ], [ %.0103, %247 ], [ %.0103, %246 ], [ %.0103, %244 ], [ %.0103, %227 ], [ %.0103, %217 ], [ %.0103, %215 ], [ %.0103, %200 ], [ %.0103, %190 ], [ %.0103, %183 ], [ %.0103, %182 ], [ %.0103, %181 ], [ %.0103, %171 ], [ %.0103, %161 ], [ %.0103, %160 ], [ %149, %148 ], [ %.0103, %138 ], [ %.0103, %136 ], [ %.0103, %119 ], [ %.0103, %109 ], [ %.0103, %106 ], [ %.0103, %105 ], [ %.0103, %104 ], [ %.0103, %94 ], [ %.0103, %84 ], [ %.0103, %82 ], [ %.0103, %81 ], [ %.0103, %80 ], [ %.0103, %79 ], [ %.0103, %73 ], [ %.0103, %70 ], [ %.0103, %69 ], [ %.0103, %68 ], [ %.0103, %67 ], [ %.0103, %66 ], [ %.0103, %65 ], [ %.0103, %54 ], [ %.0103, %44 ], [ %.0103, %40 ], [ %.0103, %38 ], [ %.0103, %27 ], [ %.0103, %17 ], [ %.0103, %16 ], [ %.0103, %13 ]
  %.0101.be = phi i32 [ %.0101, %12 ], [ %.0101, %605 ], [ %.0101, %604 ], [ %.0101, %603 ], [ %.0101, %602 ], [ %.0101, %601 ], [ %.0101, %600 ], [ %.0101, %599 ], [ %.0101, %598 ], [ %.0101, %597 ], [ %.0101, %596 ], [ %.0101, %595 ], [ %.0101, %594 ], [ %593, %591 ], [ %.0101, %590 ], [ %.0101, %589 ], [ %.0101, %587 ], [ %.0101, %586 ], [ %.0101, %584 ], [ %.0101, %583 ], [ %.0101, %573 ], [ %.0101, %563 ], [ %.0101, %562 ], [ %.0101, %561 ], [ %.0101, %560 ], [ %.0101, %559 ], [ %.0101, %558 ], [ %.0101, %557 ], [ %.0101, %549 ], [ %.0101, %541 ], [ %.0101, %539 ], [ %.0101, %522 ], [ %.0101, %512 ], [ %.0101, %511 ], [ %.0101, %502 ], [ %.0101, %494 ], [ %.0101, %492 ], [ %.0101, %476 ], [ %.0101, %466 ], [ %.0101, %465 ], [ %.0101, %455 ], [ %.0101, %445 ], [ %.0101, %436 ], [ %.0101, %427 ], [ %.0101, %425 ], [ %.0101, %410 ], [ %.0101, %400 ], [ %.0101, %399 ], [ %.0101, %391 ], [ %.0101, %389 ], [ %.0101, %372 ], [ %.0101, %362 ], [ %.0101, %354 ], [ %.0101, %353 ], [ %.0101, %343 ], [ %.0101, %333 ], [ %.0101, %325 ], [ %.0101, %317 ], [ %.0101, %310 ], [ %.0101, %309 ], [ %.0101, %307 ], [ %.0101, %292 ], [ %.0101, %282 ], [ %.0101, %274 ], [ %.0101, %272 ], [ %.0101, %257 ], [ %.0101, %247 ], [ %.0101, %246 ], [ %.0101, %244 ], [ %.0101, %227 ], [ %.0101, %217 ], [ %.0101, %215 ], [ %.0101, %200 ], [ %.0101, %190 ], [ %.0101, %183 ], [ %.0101, %182 ], [ %.0101, %181 ], [ %.0101, %171 ], [ %.0101, %161 ], [ %.0101, %160 ], [ %150, %148 ], [ %.0101, %138 ], [ %.0101, %136 ], [ %.0101, %119 ], [ %.0101, %109 ], [ %.0101, %106 ], [ %.0101, %105 ], [ %.0101, %104 ], [ %.0101, %94 ], [ %.0101, %84 ], [ %.0101, %82 ], [ %.0101, %81 ], [ %.0101, %80 ], [ %.0101, %79 ], [ %.0101, %73 ], [ %.0101, %70 ], [ %.0101, %69 ], [ %.0101, %68 ], [ %.0101, %67 ], [ %.0101, %66 ], [ %.0101, %65 ], [ %.0101, %54 ], [ %.0101, %44 ], [ %.0101, %40 ], [ %.0101, %38 ], [ %.0101, %27 ], [ %.0101, %17 ], [ %.0101, %16 ], [ %.0101, %13 ]
  %.099.be = phi i8 [ %.099, %12 ], [ %.099, %605 ], [ %.099, %604 ], [ %.099, %603 ], [ %.099, %602 ], [ %.099, %601 ], [ %.099, %600 ], [ %.099, %599 ], [ %.099, %598 ], [ %.099, %597 ], [ %.099, %596 ], [ %.099, %595 ], [ %.099, %594 ], [ %.099, %591 ], [ %.099, %590 ], [ %.099, %589 ], [ %.099, %587 ], [ %.099, %586 ], [ %.099, %584 ], [ %.099, %583 ], [ %.099, %573 ], [ %.099, %563 ], [ %.099, %562 ], [ %.099, %561 ], [ %.099, %560 ], [ %.099, %559 ], [ %.099, %558 ], [ %.099, %557 ], [ %.099, %549 ], [ %.099, %541 ], [ %.099, %539 ], [ %.099, %522 ], [ %.099, %512 ], [ %.099, %511 ], [ %.099, %502 ], [ %.099, %494 ], [ %.099, %492 ], [ %.099, %476 ], [ %.099, %466 ], [ %.099, %465 ], [ %.099, %455 ], [ %.099, %445 ], [ %.099, %436 ], [ %.099, %427 ], [ %.099, %425 ], [ %.099, %410 ], [ %.099, %400 ], [ %.099, %399 ], [ %.099, %391 ], [ %.099, %389 ], [ %.099, %372 ], [ %.099, %362 ], [ %.099, %354 ], [ %.099, %353 ], [ %.099, %343 ], [ %.099, %333 ], [ %.099, %325 ], [ %.099, %317 ], [ %.099, %310 ], [ %.099, %309 ], [ %.099, %307 ], [ %.099, %292 ], [ %.099, %282 ], [ %.099, %274 ], [ %.099, %272 ], [ %.099, %257 ], [ %.099, %247 ], [ %.099, %246 ], [ %.099, %244 ], [ %.099, %227 ], [ %.099, %217 ], [ %.099, %215 ], [ %.099, %200 ], [ %.099, %190 ], [ %.099, %183 ], [ %.099, %182 ], [ %.099, %181 ], [ %.099, %171 ], [ %.099, %161 ], [ %.099, %160 ], [ %.099, %148 ], [ %.099, %138 ], [ %.099, %136 ], [ %.099, %119 ], [ %.099, %109 ], [ %.099, %106 ], [ %.099, %105 ], [ %.099, %104 ], [ %.099, %94 ], [ %.099, %84 ], [ %.099, %82 ], [ %.099, %81 ], [ %.099, %80 ], [ 1, %79 ], [ %.099, %73 ], [ %.099, %70 ], [ %.099, %69 ], [ %.099, %68 ], [ %.099, %67 ], [ %.099, %66 ], [ %.099, %65 ], [ %.099, %54 ], [ %.099, %44 ], [ %.099, %40 ], [ %.099, %38 ], [ %.099, %27 ], [ %.099, %17 ], [ %.099, %16 ], [ %.099, %13 ]
  %.097.be = phi i32 [ %.097, %12 ], [ %.097, %605 ], [ %.097, %604 ], [ %.097, %603 ], [ %.097, %602 ], [ %.097, %601 ], [ %.097, %600 ], [ %.097, %599 ], [ %.097, %598 ], [ %.097, %597 ], [ %.097, %596 ], [ %.097, %595 ], [ %.097, %594 ], [ %.097, %591 ], [ %.097, %590 ], [ %.097, %589 ], [ %.097, %587 ], [ %.097, %586 ], [ %.097, %584 ], [ %.097, %583 ], [ %.097, %573 ], [ %.097, %563 ], [ %.097, %562 ], [ %.097, %561 ], [ %.097, %560 ], [ %.097, %559 ], [ %.097, %558 ], [ %.097, %557 ], [ %.097, %549 ], [ %.097, %541 ], [ %.097, %539 ], [ %.097, %522 ], [ %.097, %512 ], [ %.097, %511 ], [ %.097, %502 ], [ %.097, %494 ], [ %.097, %492 ], [ %.097, %476 ], [ %.097, %466 ], [ %.097, %465 ], [ %.097, %455 ], [ %.097, %445 ], [ %.097, %436 ], [ %.097, %427 ], [ %.097, %425 ], [ %.097, %410 ], [ %.097, %400 ], [ %.097, %399 ], [ %.097, %391 ], [ %.097, %389 ], [ %.097, %372 ], [ %.097, %362 ], [ %.097, %354 ], [ %.097, %353 ], [ %.097, %343 ], [ %.097, %333 ], [ %.097, %325 ], [ %.097, %317 ], [ %.097, %310 ], [ %.097, %309 ], [ %.097, %307 ], [ %.097, %292 ], [ %.097, %282 ], [ %.097, %274 ], [ %.097, %272 ], [ %.097, %257 ], [ %.097, %247 ], [ %.097, %246 ], [ %.097, %244 ], [ %.097, %227 ], [ %.097, %217 ], [ %.097, %215 ], [ %.097, %200 ], [ %.097, %190 ], [ %.097, %183 ], [ %.097, %182 ], [ %.097, %181 ], [ %.097, %171 ], [ %.097, %161 ], [ %.097, %160 ], [ %.097, %148 ], [ %.097, %138 ], [ %.097, %136 ], [ %.097, %119 ], [ %.097, %109 ], [ %.097, %106 ], [ %.097, %105 ], [ %.097, %104 ], [ %.097, %94 ], [ %.097, %84 ], [ %.097, %82 ], [ %.097, %81 ], [ %.097, %80 ], [ %.097, %79 ], [ %.097, %73 ], [ %.097, %70 ], [ %.097, %69 ], [ %.097, %68 ], [ %.neg122, %67 ], [ %.097, %66 ], [ %.097, %65 ], [ %.097, %54 ], [ %.097, %44 ], [ %.097, %40 ], [ %.097, %38 ], [ %.097, %27 ], [ %.097, %17 ], [ %.097, %16 ], [ %.097, %13 ]
  %.095.be = phi i32 [ %.095, %12 ], [ %.095, %605 ], [ %.095, %604 ], [ %.095, %603 ], [ %.095, %602 ], [ %.095, %601 ], [ %.095, %600 ], [ %.095, %599 ], [ %.095, %598 ], [ %.095, %597 ], [ %.095, %596 ], [ %.095, %595 ], [ %.095, %594 ], [ %.095, %591 ], [ %.095, %590 ], [ %.095, %589 ], [ %588, %587 ], [ %.095, %586 ], [ %.095, %584 ], [ %.095, %583 ], [ %.095, %573 ], [ %.095, %563 ], [ %.095, %562 ], [ %.095, %561 ], [ %.095, %560 ], [ %.095, %559 ], [ %.095, %558 ], [ %.095, %557 ], [ %.095, %549 ], [ %.095, %541 ], [ %.095, %539 ], [ %.095, %522 ], [ %.095, %512 ], [ %.095, %511 ], [ %.095, %502 ], [ %.095, %494 ], [ %.095, %492 ], [ %.095, %476 ], [ %.095, %466 ], [ %.095, %465 ], [ %.095, %455 ], [ %.095, %445 ], [ %.095, %436 ], [ %.095, %427 ], [ %.095, %425 ], [ %.095, %410 ], [ %.095, %400 ], [ %.095, %399 ], [ %.095, %391 ], [ %.095, %389 ], [ %.095, %372 ], [ %.095, %362 ], [ %.095, %354 ], [ %.095, %353 ], [ %.095, %343 ], [ %.095, %333 ], [ %.095, %325 ], [ %.095, %317 ], [ %.095, %310 ], [ %.095, %309 ], [ %.095, %307 ], [ %.095, %292 ], [ %.095, %282 ], [ %.095, %274 ], [ %.095, %272 ], [ %.095, %257 ], [ %.095, %247 ], [ %.095, %246 ], [ %.095, %244 ], [ %.095, %227 ], [ %.095, %217 ], [ %.095, %215 ], [ %.095, %200 ], [ %.095, %190 ], [ %.095, %183 ], [ %.095, %182 ], [ %.095, %181 ], [ %.095, %171 ], [ %.095, %161 ], [ %.095, %160 ], [ %.095, %148 ], [ %.095, %138 ], [ %.095, %136 ], [ %.095, %119 ], [ %.095, %109 ], [ %.095, %106 ], [ %.095, %105 ], [ %.095, %104 ], [ %.095, %94 ], [ %.095, %84 ], [ %.095, %82 ], [ %.095, %81 ], [ %.095, %80 ], [ %.095, %79 ], [ %.095, %73 ], [ %.095, %70 ], [ %.095, %69 ], [ %.095, %68 ], [ %.095, %67 ], [ %.095, %66 ], [ %.095, %65 ], [ %55, %54 ], [ %.095, %44 ], [ %.095, %40 ], [ %.095, %38 ], [ %.095, %27 ], [ %.095, %17 ], [ 0, %16 ], [ %.095, %13 ]
  %.093.be = phi i32 [ %.093, %12 ], [ %.093, %605 ], [ %.093, %604 ], [ %.093, %603 ], [ %.093, %602 ], [ %.093, %601 ], [ %.093, %600 ], [ %.093, %599 ], [ %.093, %598 ], [ %.093, %597 ], [ %.093, %596 ], [ %.093, %595 ], [ %.093, %594 ], [ %.093, %591 ], [ %.093, %590 ], [ %.093, %589 ], [ %.093, %587 ], [ %.093, %586 ], [ %.093, %584 ], [ %.093, %583 ], [ %.093, %573 ], [ %.093, %563 ], [ %.093, %562 ], [ %.093, %561 ], [ %.093, %560 ], [ %.093, %559 ], [ %.093, %558 ], [ %.093, %557 ], [ %.093, %549 ], [ %.093, %541 ], [ %.093, %539 ], [ %.093, %522 ], [ %.093, %512 ], [ %.093, %511 ], [ %.093, %502 ], [ %.093, %494 ], [ %.093, %492 ], [ %.093, %476 ], [ %.093, %466 ], [ %.093, %465 ], [ %.093, %455 ], [ %.093, %445 ], [ %.093, %436 ], [ %.093, %427 ], [ %.093, %425 ], [ %.093, %410 ], [ %.093, %400 ], [ %.093, %399 ], [ %.093, %391 ], [ %.093, %389 ], [ %.093, %372 ], [ %.093, %362 ], [ %.093, %354 ], [ %.093, %353 ], [ %.093, %343 ], [ %.093, %333 ], [ %.093, %325 ], [ %.093, %317 ], [ %.093, %310 ], [ %.093, %309 ], [ %.093, %307 ], [ %.093, %292 ], [ %.093, %282 ], [ %.093, %274 ], [ %.093, %272 ], [ %.093, %257 ], [ %.093, %247 ], [ %.093, %246 ], [ %.093, %244 ], [ %.093, %227 ], [ %.093, %217 ], [ %.093, %215 ], [ %.093, %200 ], [ %.093, %190 ], [ %.093, %183 ], [ %.093, %182 ], [ %.093, %181 ], [ %.093, %171 ], [ %.093, %161 ], [ %.093, %160 ], [ %.093, %148 ], [ %.093, %138 ], [ %.093, %136 ], [ %.093, %119 ], [ %.093, %109 ], [ %.093, %106 ], [ %.093, %105 ], [ %.093, %104 ], [ %.093, %94 ], [ %.093, %84 ], [ %.093, %82 ], [ %.neg121, %81 ], [ %.093, %80 ], [ %.093, %79 ], [ %.093, %73 ], [ %.093, %70 ], [ 0, %69 ], [ %.093, %68 ], [ %.093, %67 ], [ %.093, %66 ], [ %.093, %65 ], [ %.093, %54 ], [ %.093, %44 ], [ %.093, %40 ], [ %.093, %38 ], [ %.093, %27 ], [ %.093, %17 ], [ %.093, %16 ], [ %.093, %13 ]
  %.091.be = phi i32 [ %.091, %12 ], [ %.091, %605 ], [ %.091, %604 ], [ %.091, %603 ], [ %.091, %602 ], [ %.091, %601 ], [ %.091, %600 ], [ %.091, %599 ], [ %.091, %598 ], [ %.091, %597 ], [ %.091, %596 ], [ %.091, %595 ], [ %.091, %594 ], [ %.091, %591 ], [ %.091, %590 ], [ %.091, %589 ], [ %.091, %587 ], [ %.091, %586 ], [ %.091, %584 ], [ %.091, %583 ], [ %.091, %573 ], [ %.091, %563 ], [ %.091, %562 ], [ %.091, %561 ], [ %.091, %560 ], [ %.091, %559 ], [ %.091, %558 ], [ %.091, %557 ], [ %.091, %549 ], [ %.091, %541 ], [ %.091, %539 ], [ %.091, %522 ], [ %.091, %512 ], [ %.091, %511 ], [ %.091, %502 ], [ %.091, %494 ], [ %.091, %492 ], [ %.091, %476 ], [ %.091, %466 ], [ %.091, %465 ], [ %.091, %455 ], [ %.091, %445 ], [ %.091, %436 ], [ %.091, %427 ], [ %.091, %425 ], [ %.091, %410 ], [ %.091, %400 ], [ %.091, %399 ], [ %.091, %391 ], [ %.091, %389 ], [ %.091, %372 ], [ %.091, %362 ], [ %.091, %354 ], [ %.091, %353 ], [ %.091, %343 ], [ %.091, %333 ], [ %.091, %325 ], [ %.091, %317 ], [ %.091, %310 ], [ %.091, %309 ], [ %.091, %307 ], [ %.091, %292 ], [ %.091, %282 ], [ %.091, %274 ], [ %.091, %272 ], [ %.091, %257 ], [ %.091, %247 ], [ %.091, %246 ], [ %.091, %244 ], [ %.091, %227 ], [ %.091, %217 ], [ %.091, %215 ], [ %.091, %200 ], [ %.091, %190 ], [ %.091, %183 ], [ %.neg120, %182 ], [ %.091, %181 ], [ %.091, %171 ], [ %.091, %161 ], [ %.091, %160 ], [ %.091, %148 ], [ %.091, %138 ], [ %.091, %136 ], [ %.091, %119 ], [ %.091, %109 ], [ %.091, %106 ], [ 0, %105 ], [ %.091, %104 ], [ %.091, %94 ], [ %.091, %84 ], [ %.091, %82 ], [ %.091, %81 ], [ %.091, %80 ], [ %.091, %79 ], [ %.091, %73 ], [ %.091, %70 ], [ %.091, %69 ], [ %.091, %68 ], [ %.091, %67 ], [ %.091, %66 ], [ %.091, %65 ], [ %.091, %54 ], [ %.091, %44 ], [ %.091, %40 ], [ %.091, %38 ], [ %.091, %27 ], [ %.091, %17 ], [ %.091, %16 ], [ %.091, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -361867339, %605 ], [ -1328812162, %604 ], [ 212253226, %603 ], [ -1105289225, %602 ], [ 1622298965, %601 ], [ -1092299381, %600 ], [ -601800866, %599 ], [ -1982137244, %598 ], [ 700377034, %597 ], [ 1244586218, %596 ], [ -50610156, %595 ], [ 158231825, %594 ], [ -584843638, %591 ], [ 1266285768, %590 ], [ 655168880, %589 ], [ -739497569, %587 ], [ 1280299542, %586 ], [ -2022549401, %584 ], [ -1316316048, %583 ], [ %582, %573 ], [ %572, %563 ], [ -362454332, %562 ], [ -257432314, %561 ], [ -299838211, %560 ], [ 1124877548, %559 ], [ 770340833, %558 ], [ -598550660, %557 ], [ %556, %549 ], [ %548, %541 ], [ %540, %539 ], [ %538, %522 ], [ %521, %512 ], [ 770340833, %511 ], [ %510, %502 ], [ %501, %494 ], [ %493, %492 ], [ %491, %476 ], [ %475, %466 ], [ 1124877548, %465 ], [ %464, %455 ], [ %454, %445 ], [ %444, %436 ], [ %435, %427 ], [ %426, %425 ], [ %424, %410 ], [ %409, %400 ], [ -299838211, %399 ], [ %398, %391 ], [ %390, %389 ], [ %388, %372 ], [ %371, %362 ], [ %361, %354 ], [ -257432314, %353 ], [ %352, %343 ], [ %342, %333 ], [ %332, %325 ], [ %324, %317 ], [ %316, %310 ], [ -362454332, %309 ], [ %308, %307 ], [ %306, %292 ], [ %291, %282 ], [ %281, %274 ], [ %273, %272 ], [ %271, %257 ], [ %256, %247 ], [ -1316316048, %246 ], [ %245, %244 ], [ %243, %227 ], [ %226, %217 ], [ %216, %215 ], [ %214, %200 ], [ %199, %190 ], [ %189, %183 ], [ 854932965, %182 ], [ 1951227019, %181 ], [ %180, %171 ], [ %170, %161 ], [ -1755270605, %160 ], [ %159, %148 ], [ %147, %138 ], [ %137, %136 ], [ %135, %119 ], [ %118, %109 ], [ %108, %106 ], [ 854932965, %105 ], [ -587687779, %104 ], [ %103, %94 ], [ %93, %84 ], [ %83, %82 ], [ 587431336, %81 ], [ 1801825717, %80 ], [ 565333126, %79 ], [ %78, %73 ], [ %72, %70 ], [ 587431336, %69 ], [ -2022549401, %68 ], [ 432248570, %67 ], [ -409395294, %66 ], [ -1749465420, %65 ], [ %64, %54 ], [ %53, %44 ], [ -1779610728, %40 ], [ %39, %38 ], [ %37, %27 ], [ %26, %17 ], [ -1749465420, %16 ], [ %15, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = icmp slt i32 %.097, 12
  %15 = select i1 %14, i32 1973005192, i32 -2087000443
  br label %.backedge

16:                                               ; preds = %12
  br label %.backedge

17:                                               ; preds = %12
  %18 = load i32, i32* @x.8, align 4
  %19 = load i32, i32* @y.9, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 1280299542, i32 -1783117794
  br label %.backedge

27:                                               ; preds = %12
  %28 = icmp slt i32 %.095, 12
  store i1 %28, i1* %10, align 1
  %29 = load i32, i32* @x.8, align 4
  %30 = load i32, i32* @y.9, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -636978874, i32 -1783117794
  br label %.backedge

38:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %10, align 1
  %39 = select i1 %.0..0..0., i32 -1234966529, i32 1337363663
  br label %.backedge

40:                                               ; preds = %12
  %41 = sext i32 %.097 to i64
  %42 = sext i32 %.095 to i64
  %43 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %41, i64 %42
  store i8 0, i8* %43, align 1
  br label %.backedge

44:                                               ; preds = %12
  %45 = load i32, i32* @x.8, align 4
  %46 = load i32, i32* @y.9, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 -739497569, i32 -1056269691
  br label %.backedge

54:                                               ; preds = %12
  %55 = add i32 %.095, 1
  %56 = load i32, i32* @x.8, align 4
  %57 = load i32, i32* @y.9, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 1599561115, i32 -1056269691
  br label %.backedge

65:                                               ; preds = %12
  br label %.backedge

66:                                               ; preds = %12
  br label %.backedge

67:                                               ; preds = %12
  %.neg122 = add i32 %.097, 1
  br label %.backedge

68:                                               ; preds = %12
  br label %.backedge

69:                                               ; preds = %12
  br label %.backedge

70:                                               ; preds = %12
  %71 = icmp slt i32 %.093, 8
  %72 = select i1 %71, i32 -275641582, i32 565333126
  br label %.backedge

73:                                               ; preds = %12
  %74 = sext i32 %.093 to i64
  %75 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %74, i64 0
  %76 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %75)
  %77 = icmp eq i32 %76, -1
  %78 = select i1 %77, i32 880343670, i32 76123710
  br label %.backedge

79:                                               ; preds = %12
  br label %.backedge

80:                                               ; preds = %12
  br label %.backedge

81:                                               ; preds = %12
  %.neg121 = add i32 %.093, 1
  br label %.backedge

82:                                               ; preds = %12
  %.not = icmp eq i8 %.099, 0
  %83 = select i1 %.not, i32 1703638635, i32 -1413088017
  br label %.backedge

84:                                               ; preds = %12
  %85 = load i32, i32* @x.8, align 4
  %86 = load i32, i32* @y.9, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 655168880, i32 2072878099
  br label %.backedge

94:                                               ; preds = %12
  %95 = load i32, i32* @x.8, align 4
  %96 = load i32, i32* @y.9, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 2076899431, i32 2072878099
  br label %.backedge

104:                                              ; preds = %12
  br label %.backedge

105:                                              ; preds = %12
  br label %.backedge

106:                                              ; preds = %12
  %107 = icmp slt i32 %.091, 64
  %108 = select i1 %107, i32 -218364793, i32 -1755270605
  br label %.backedge

109:                                              ; preds = %12
  %110 = load i32, i32* @x.8, align 4
  %111 = load i32, i32* @y.9, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 1266285768, i32 -333707988
  br label %.backedge

119:                                              ; preds = %12
  %120 = sdiv i32 %.091, 8
  %121 = sext i32 %120 to i64
  %122 = srem i32 %.091, 8
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %121, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = icmp eq i8 %125, 49
  store i1 %126, i1* %9, align 1
  %127 = load i32, i32* @x.8, align 4
  %128 = load i32, i32* @y.9, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 -1589152672, i32 -333707988
  br label %.backedge

136:                                              ; preds = %12
  %.0..0..0.82 = load volatile i1, i1* %9, align 1
  %137 = select i1 %.0..0..0.82, i32 -48958551, i32 -1364442269
  br label %.backedge

138:                                              ; preds = %12
  %139 = load i32, i32* @x.8, align 4
  %140 = load i32, i32* @y.9, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 -584843638, i32 1463060672
  br label %.backedge

148:                                              ; preds = %12
  %149 = srem i32 %.091, 8
  %150 = sdiv i32 %.091, 8
  %151 = load i32, i32* @x.8, align 4
  %152 = load i32, i32* @y.9, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 1815006472, i32 1463060672
  br label %.backedge

160:                                              ; preds = %12
  br label %.backedge

161:                                              ; preds = %12
  %162 = load i32, i32* @x.8, align 4
  %163 = load i32, i32* @y.9, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 158231825, i32 -2066093559
  br label %.backedge

171:                                              ; preds = %12
  %172 = load i32, i32* @x.8, align 4
  %173 = load i32, i32* @y.9, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 126980530, i32 -2066093559
  br label %.backedge

181:                                              ; preds = %12
  br label %.backedge

182:                                              ; preds = %12
  %.neg120 = add i32 %.091, 1
  br label %.backedge

183:                                              ; preds = %12
  %.neg119 = add i32 %.0101, 1
  %184 = sext i32 %.neg119 to i64
  %185 = sext i32 %.0103 to i64
  %186 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %184, i64 %185
  %187 = load i8, i8* %186, align 1
  %188 = icmp eq i8 %187, 49
  %189 = select i1 %188, i32 -1445092201, i32 -659569265
  br label %.backedge

190:                                              ; preds = %12
  %191 = load i32, i32* @x.8, align 4
  %192 = load i32, i32* @y.9, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -50610156, i32 1473379300
  br label %.backedge

200:                                              ; preds = %12
  %201 = sext i32 %.0101 to i64
  %.neg118 = add i32 %.0103, 1
  %202 = sext i32 %.neg118 to i64
  %203 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %201, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = icmp eq i8 %204, 49
  store i1 %205, i1* %8, align 1
  %206 = load i32, i32* @x.8, align 4
  %207 = load i32, i32* @y.9, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 -879517251, i32 1473379300
  br label %.backedge

215:                                              ; preds = %12
  %.0..0..0.83 = load volatile i1, i1* %8, align 1
  %216 = select i1 %.0..0..0.83, i32 1017130014, i32 -659569265
  br label %.backedge

217:                                              ; preds = %12
  %218 = load i32, i32* @x.8, align 4
  %219 = load i32, i32* @y.9, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 1244586218, i32 -608700887
  br label %.backedge

227:                                              ; preds = %12
  %228 = add i32 %.0101, 1
  %229 = sext i32 %228 to i64
  %230 = add i32 %.0103, 1
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %229, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = icmp eq i8 %233, 49
  store i1 %234, i1* %7, align 1
  %235 = load i32, i32* @x.8, align 4
  %236 = load i32, i32* @y.9, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 -771805910, i32 -608700887
  br label %.backedge

244:                                              ; preds = %12
  %.0..0..0.84 = load volatile i1, i1* %7, align 1
  %245 = select i1 %.0..0..0.84, i32 2101777025, i32 -659569265
  br label %.backedge

246:                                              ; preds = %12
  %puts117 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.8, i64 0, i64 0))
  br label %.backedge

247:                                              ; preds = %12
  %248 = load i32, i32* @x.8, align 4
  %249 = load i32, i32* @y.9, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 700377034, i32 -1170757793
  br label %.backedge

257:                                              ; preds = %12
  %.neg116 = add i32 %.0101, 1
  %258 = sext i32 %.neg116 to i64
  %259 = sext i32 %.0103 to i64
  %260 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %258, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = icmp eq i8 %261, 49
  store i1 %262, i1* %6, align 1
  %263 = load i32, i32* @x.8, align 4
  %264 = load i32, i32* @y.9, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 -124878702, i32 -1170757793
  br label %.backedge

272:                                              ; preds = %12
  %.0..0..0.85 = load volatile i1, i1* %6, align 1
  %273 = select i1 %.0..0..0.85, i32 -729062034, i32 -921847605
  br label %.backedge

274:                                              ; preds = %12
  %275 = add i32 %.0101, 2
  %276 = sext i32 %275 to i64
  %277 = sext i32 %.0103 to i64
  %278 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %276, i64 %277
  %279 = load i8, i8* %278, align 1
  %280 = icmp eq i8 %279, 49
  %281 = select i1 %280, i32 -1747055103, i32 -921847605
  br label %.backedge

282:                                              ; preds = %12
  %283 = load i32, i32* @x.8, align 4
  %284 = load i32, i32* @y.9, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 -1982137244, i32 1643273077
  br label %.backedge

292:                                              ; preds = %12
  %.neg115 = add i32 %.0101, 3
  %293 = sext i32 %.neg115 to i64
  %294 = sext i32 %.0103 to i64
  %295 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %293, i64 %294
  %296 = load i8, i8* %295, align 1
  %297 = icmp eq i8 %296, 49
  store i1 %297, i1* %5, align 1
  %298 = load i32, i32* @x.8, align 4
  %299 = load i32, i32* @y.9, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 -910330119, i32 1643273077
  br label %.backedge

307:                                              ; preds = %12
  %.0..0..0.86 = load volatile i1, i1* %5, align 1
  %308 = select i1 %.0..0..0.86, i32 2108170603, i32 -921847605
  br label %.backedge

309:                                              ; preds = %12
  %puts114 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.7, i64 0, i64 0))
  br label %.backedge

310:                                              ; preds = %12
  %311 = sext i32 %.0101 to i64
  %.neg113 = add i32 %.0103, 1
  %312 = sext i32 %.neg113 to i64
  %313 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %311, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = icmp eq i8 %314, 49
  %316 = select i1 %315, i32 1784766372, i32 -1743377213
  br label %.backedge

317:                                              ; preds = %12
  %318 = sext i32 %.0101 to i64
  %319 = add i32 %.0103, 2
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %318, i64 %320
  %322 = load i8, i8* %321, align 1
  %323 = icmp eq i8 %322, 49
  %324 = select i1 %323, i32 -639055337, i32 -1743377213
  br label %.backedge

325:                                              ; preds = %12
  %326 = sext i32 %.0101 to i64
  %327 = add i32 %.0103, 3
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %326, i64 %328
  %330 = load i8, i8* %329, align 1
  %331 = icmp eq i8 %330, 49
  %332 = select i1 %331, i32 -2077843156, i32 -1743377213
  br label %.backedge

333:                                              ; preds = %12
  %334 = load i32, i32* @x.8, align 4
  %335 = load i32, i32* @y.9, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 -601800866, i32 -1635644377
  br label %.backedge

343:                                              ; preds = %12
  %puts112 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i64 0, i64 0))
  %344 = load i32, i32* @x.8, align 4
  %345 = load i32, i32* @y.9, align 4
  %346 = add i32 %344, -1
  %347 = mul i32 %346, %344
  %348 = and i32 %347, 1
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %350, %349
  %352 = select i1 %351, i32 1075050896, i32 -1635644377
  br label %.backedge

353:                                              ; preds = %12
  br label %.backedge

354:                                              ; preds = %12
  %355 = sext i32 %.0101 to i64
  %356 = add i32 %.0103, 1
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %355, i64 %357
  %359 = load i8, i8* %358, align 1
  %360 = icmp eq i8 %359, 49
  %361 = select i1 %360, i32 -331166351, i32 -1356497467
  br label %.backedge

362:                                              ; preds = %12
  %363 = load i32, i32* @x.8, align 4
  %364 = load i32, i32* @y.9, align 4
  %365 = add i32 %363, -1
  %366 = mul i32 %365, %363
  %367 = and i32 %366, 1
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %369, %368
  %371 = select i1 %370, i32 -1092299381, i32 -2097295275
  br label %.backedge

372:                                              ; preds = %12
  %373 = add i32 %.0101, 1
  %374 = sext i32 %373 to i64
  %375 = add i32 %.0103, 1
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %374, i64 %376
  %378 = load i8, i8* %377, align 1
  %379 = icmp eq i8 %378, 49
  store i1 %379, i1* %4, align 1
  %380 = load i32, i32* @x.8, align 4
  %381 = load i32, i32* @y.9, align 4
  %382 = add i32 %380, -1
  %383 = mul i32 %382, %380
  %384 = and i32 %383, 1
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %386, %385
  %388 = select i1 %387, i32 -474315182, i32 -2097295275
  br label %.backedge

389:                                              ; preds = %12
  %.0..0..0.87 = load volatile i1, i1* %4, align 1
  %390 = select i1 %.0..0..0.87, i32 256148992, i32 -1356497467
  br label %.backedge

391:                                              ; preds = %12
  %392 = add i32 %.0101, 1
  %393 = sext i32 %392 to i64
  %.neg111 = add i32 %.0103, 2
  %394 = sext i32 %.neg111 to i64
  %395 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %393, i64 %394
  %396 = load i8, i8* %395, align 1
  %397 = icmp eq i8 %396, 49
  %398 = select i1 %397, i32 -173821474, i32 -1356497467
  br label %.backedge

399:                                              ; preds = %12
  %puts110 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.backedge

400:                                              ; preds = %12
  %401 = load i32, i32* @x.8, align 4
  %402 = load i32, i32* @y.9, align 4
  %403 = add i32 %401, -1
  %404 = mul i32 %403, %401
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %407, %406
  %409 = select i1 %408, i32 1622298965, i32 -1695412452
  br label %.backedge

410:                                              ; preds = %12
  %.neg109 = add i32 %.0101, 1
  %411 = sext i32 %.neg109 to i64
  %412 = sext i32 %.0103 to i64
  %413 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %411, i64 %412
  %414 = load i8, i8* %413, align 1
  %415 = icmp eq i8 %414, 49
  store i1 %415, i1* %3, align 1
  %416 = load i32, i32* @x.8, align 4
  %417 = load i32, i32* @y.9, align 4
  %418 = add i32 %416, -1
  %419 = mul i32 %418, %416
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %422, %421
  %424 = select i1 %423, i32 1193213157, i32 -1695412452
  br label %.backedge

425:                                              ; preds = %12
  %.0..0..0.88 = load volatile i1, i1* %3, align 1
  %426 = select i1 %.0..0..0.88, i32 -35971542, i32 2022175485
  br label %.backedge

427:                                              ; preds = %12
  %428 = add i32 %.0101, 1
  %429 = sext i32 %428 to i64
  %430 = add i32 %.0103, 1
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %429, i64 %431
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 49
  %435 = select i1 %434, i32 1506879020, i32 2022175485
  br label %.backedge

436:                                              ; preds = %12
  %437 = add i32 %.0101, 2
  %438 = sext i32 %437 to i64
  %439 = add i32 %.0103, 1
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %438, i64 %440
  %442 = load i8, i8* %441, align 1
  %443 = icmp eq i8 %442, 49
  %444 = select i1 %443, i32 -519005767, i32 2022175485
  br label %.backedge

445:                                              ; preds = %12
  %446 = load i32, i32* @x.8, align 4
  %447 = load i32, i32* @y.9, align 4
  %448 = add i32 %446, -1
  %449 = mul i32 %448, %446
  %450 = and i32 %449, 1
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %452, %451
  %454 = select i1 %453, i32 -1105289225, i32 -458505884
  br label %.backedge

455:                                              ; preds = %12
  %puts108 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i64 0, i64 0))
  %456 = load i32, i32* @x.8, align 4
  %457 = load i32, i32* @y.9, align 4
  %458 = add i32 %456, -1
  %459 = mul i32 %458, %456
  %460 = and i32 %459, 1
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %462, %461
  %464 = select i1 %463, i32 1109873107, i32 -458505884
  br label %.backedge

465:                                              ; preds = %12
  br label %.backedge

466:                                              ; preds = %12
  %467 = load i32, i32* @x.8, align 4
  %468 = load i32, i32* @y.9, align 4
  %469 = add i32 %467, -1
  %470 = mul i32 %469, %467
  %471 = and i32 %470, 1
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %473, %472
  %475 = select i1 %474, i32 212253226, i32 -1355409116
  br label %.backedge

476:                                              ; preds = %12
  %477 = sext i32 %.0101 to i64
  %478 = add i32 %.0103, 1
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %477, i64 %479
  %481 = load i8, i8* %480, align 1
  %482 = icmp eq i8 %481, 49
  store i1 %482, i1* %2, align 1
  %483 = load i32, i32* @x.8, align 4
  %484 = load i32, i32* @y.9, align 4
  %485 = add i32 %483, -1
  %486 = mul i32 %485, %483
  %487 = and i32 %486, 1
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %489, %488
  %491 = select i1 %490, i32 1099439962, i32 -1355409116
  br label %.backedge

492:                                              ; preds = %12
  %.0..0..0.89 = load volatile i1, i1* %2, align 1
  %493 = select i1 %.0..0..0.89, i32 -1690195251, i32 1829689071
  br label %.backedge

494:                                              ; preds = %12
  %495 = add i32 %.0101, 1
  %496 = sext i32 %495 to i64
  %497 = sext i32 %.0103 to i64
  %498 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %496, i64 %497
  %499 = load i8, i8* %498, align 1
  %500 = icmp eq i8 %499, 49
  %501 = select i1 %500, i32 -1107957952, i32 1829689071
  br label %.backedge

502:                                              ; preds = %12
  %503 = add i32 %.0101, 1
  %504 = sext i32 %503 to i64
  %505 = add i32 %.0103, -1
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %504, i64 %506
  %508 = load i8, i8* %507, align 1
  %509 = icmp eq i8 %508, 49
  %510 = select i1 %509, i32 -2054406438, i32 1829689071
  br label %.backedge

511:                                              ; preds = %12
  %puts107 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

512:                                              ; preds = %12
  %513 = load i32, i32* @x.8, align 4
  %514 = load i32, i32* @y.9, align 4
  %515 = add i32 %513, -1
  %516 = mul i32 %515, %513
  %517 = and i32 %516, 1
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %519, %518
  %521 = select i1 %520, i32 -1328812162, i32 453321301
  br label %.backedge

522:                                              ; preds = %12
  %523 = add i32 %.0101, 2
  %524 = sext i32 %523 to i64
  %525 = add i32 %.0103, -1
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %524, i64 %526
  %528 = load i8, i8* %527, align 1
  %529 = icmp eq i8 %528, 49
  store i1 %529, i1* %1, align 1
  %530 = load i32, i32* @x.8, align 4
  %531 = load i32, i32* @y.9, align 4
  %532 = add i32 %530, -1
  %533 = mul i32 %532, %530
  %534 = and i32 %533, 1
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %536, %535
  %538 = select i1 %537, i32 -1389718197, i32 453321301
  br label %.backedge

539:                                              ; preds = %12
  %.0..0..0.90 = load volatile i1, i1* %1, align 1
  %540 = select i1 %.0..0..0.90, i32 -1893002601, i32 -598550660
  br label %.backedge

541:                                              ; preds = %12
  %542 = add i32 %.0101, 1
  %543 = sext i32 %542 to i64
  %544 = sext i32 %.0103 to i64
  %545 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %543, i64 %544
  %546 = load i8, i8* %545, align 1
  %547 = icmp eq i8 %546, 49
  %548 = select i1 %547, i32 -1608983036, i32 -598550660
  br label %.backedge

549:                                              ; preds = %12
  %.neg = add i32 %.0101, 1
  %550 = sext i32 %.neg to i64
  %551 = add i32 %.0103, -1
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %11, i64 0, i64 %550, i64 %552
  %554 = load i8, i8* %553, align 1
  %555 = icmp eq i8 %554, 49
  %556 = select i1 %555, i32 694065381, i32 -598550660
  br label %.backedge

557:                                              ; preds = %12
  %puts106 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.2, i64 0, i64 0))
  br label %.backedge

558:                                              ; preds = %12
  br label %.backedge

559:                                              ; preds = %12
  br label %.backedge

560:                                              ; preds = %12
  br label %.backedge

561:                                              ; preds = %12
  br label %.backedge

562:                                              ; preds = %12
  br label %.backedge

563:                                              ; preds = %12
  %564 = load i32, i32* @x.8, align 4
  %565 = load i32, i32* @y.9, align 4
  %566 = add i32 %564, -1
  %567 = mul i32 %566, %564
  %568 = and i32 %567, 1
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %570, %569
  %572 = select i1 %571, i32 -361867339, i32 898025588
  br label %.backedge

573:                                              ; preds = %12
  %574 = load i32, i32* @x.8, align 4
  %575 = load i32, i32* @y.9, align 4
  %576 = add i32 %574, -1
  %577 = mul i32 %576, %574
  %578 = and i32 %577, 1
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %580, %579
  %582 = select i1 %581, i32 576640234, i32 898025588
  br label %.backedge

583:                                              ; preds = %12
  br label %.backedge

584:                                              ; preds = %12
  br label %.backedge

585:                                              ; preds = %12
  ret i32 0

586:                                              ; preds = %12
  br label %.backedge

587:                                              ; preds = %12
  %588 = add i32 %.095, 1
  br label %.backedge

589:                                              ; preds = %12
  br label %.backedge

590:                                              ; preds = %12
  br label %.backedge

591:                                              ; preds = %12
  %592 = srem i32 %.091, 8
  %593 = sdiv i32 %.091, 8
  br label %.backedge

594:                                              ; preds = %12
  br label %.backedge

595:                                              ; preds = %12
  br label %.backedge

596:                                              ; preds = %12
  br label %.backedge

597:                                              ; preds = %12
  br label %.backedge

598:                                              ; preds = %12
  br label %.backedge

599:                                              ; preds = %12
  %puts105 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i64 0, i64 0))
  br label %.backedge

600:                                              ; preds = %12
  br label %.backedge

601:                                              ; preds = %12
  br label %.backedge

602:                                              ; preds = %12
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i64 0, i64 0))
  br label %.backedge

603:                                              ; preds = %12
  br label %.backedge

604:                                              ; preds = %12
  br label %.backedge

605:                                              ; preds = %12
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s124726644.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
