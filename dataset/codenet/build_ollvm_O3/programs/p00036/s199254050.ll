; ModuleID = 'build_ollvm/programs/p00036/s199254050.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s199254050.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@str.2 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@str.3 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@str.4 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@str.5 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@str.6 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@str.7 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@str.8 = private unnamed_addr constant [2 x i8] c"A\00", align 1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = alloca i1, align 1
  %12 = alloca i1, align 1
  %13 = alloca [12 x [12 x i8]], align 16
  %14 = alloca [10 x i8], align 1
  %15 = getelementptr inbounds [10 x i8], [10 x i8]* %14, i64 0, i64 0
  br label %16

16:                                               ; preds = %.backedge, %0
  %.0108 = phi i32 [ 0, %0 ], [ %.0108.be, %.backedge ]
  %.0106 = phi i32 [ undef, %0 ], [ %.0106.be, %.backedge ]
  %.0104 = phi i32 [ 0, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i32 [ 0, %0 ], [ %.0102.be, %.backedge ]
  %.0100 = phi i32 [ undef, %0 ], [ %.0100.be, %.backedge ]
  %.098 = phi i32 [ undef, %0 ], [ %.098.be, %.backedge ]
  %.0 = phi i32 [ -652548968, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -652548968, label %17
    i32 -546473948, label %27
    i32 -2037468345, label %38
    i32 550772879, label %40
    i32 1317002465, label %50
    i32 -1577467149, label %60
    i32 -359488723, label %61
    i32 1630268059, label %71
    i32 -2108978957, label %82
    i32 -1613132456, label %84
    i32 -676308018, label %88
    i32 1130581934, label %98
    i32 -1768545881, label %108
    i32 76840895, label %109
    i32 635373997, label %119
    i32 -864432548, label %129
    i32 -1448758472, label %130
    i32 -307088712, label %132
    i32 89167194, label %142
    i32 197679234, label %152
    i32 1629734130, label %153
    i32 999502627, label %154
    i32 1723725956, label %164
    i32 1765086687, label %175
    i32 1631771196, label %177
    i32 2134733732, label %181
    i32 255728549, label %182
    i32 972341918, label %185
    i32 689705403, label %186
    i32 501916455, label %196
    i32 1828933721, label %206
    i32 -1746780058, label %207
    i32 419000590, label %217
    i32 2116908497, label %228
    i32 1991822100, label %230
    i32 -1382067349, label %237
    i32 -576521405, label %239
    i32 -561137974, label %240
    i32 409116240, label %242
    i32 1900636781, label %245
    i32 25326099, label %246
    i32 774129361, label %247
    i32 -1455644581, label %250
    i32 922553258, label %260
    i32 1241687798, label %270
    i32 -2065086475, label %271
    i32 1355873222, label %281
    i32 1460324371, label %292
    i32 -1285859507, label %294
    i32 -1105195762, label %301
    i32 315804690, label %302
    i32 426099874, label %303
    i32 810490378, label %305
    i32 1691931540, label %308
    i32 -946514578, label %309
    i32 1194051219, label %310
    i32 -1203734005, label %311
    i32 476111591, label %321
    i32 52293940, label %337
    i32 1909389294, label %339
    i32 1601980251, label %346
    i32 -415832435, label %355
    i32 -695018540, label %365
    i32 1635886950, label %375
    i32 665802209, label %376
    i32 782242572, label %384
    i32 241688656, label %391
    i32 -1676189028, label %399
    i32 -1459268926, label %400
    i32 164588640, label %407
    i32 -737063622, label %415
    i32 -1844332180, label %425
    i32 696125644, label %441
    i32 1248650904, label %443
    i32 906028389, label %444
    i32 454618892, label %454
    i32 -584912140, label %471
    i32 -1933192619, label %473
    i32 1005070199, label %481
    i32 -10518275, label %489
    i32 -501256911, label %490
    i32 -703171654, label %498
    i32 161591623, label %507
    i32 -1692096018, label %515
    i32 131359646, label %516
    i32 899514658, label %526
    i32 1281285153, label %542
    i32 -982930117, label %544
    i32 651681820, label %554
    i32 134064001, label %571
    i32 1525675779, label %573
    i32 -1580708089, label %581
    i32 1684976059, label %582
    i32 -1584276171, label %592
    i32 2100225851, label %608
    i32 -1632110276, label %610
    i32 -1164707101, label %619
    i32 -186563128, label %629
    i32 580917499, label %645
    i32 223695328, label %647
    i32 -1233120601, label %657
    i32 -35829515, label %667
    i32 748528843, label %668
    i32 1519818369, label %669
    i32 -2141057128, label %670
    i32 1783339837, label %671
    i32 239765989, label %672
    i32 -615806708, label %673
    i32 2030752211, label %675
    i32 -1906306993, label %676
    i32 1428805425, label %677
    i32 1156045865, label %678
    i32 1737047594, label %679
    i32 703772283, label %680
    i32 -156829042, label %681
    i32 76832434, label %682
    i32 -461848309, label %683
    i32 -1038967553, label %684
    i32 -894568344, label %685
    i32 -1367807707, label %686
    i32 1370281132, label %687
    i32 1578004131, label %688
    i32 -1252624329, label %689
    i32 526735237, label %690
  ]

.backedge:                                        ; preds = %16, %690, %689, %688, %687, %686, %685, %684, %683, %682, %681, %680, %679, %678, %677, %676, %675, %673, %672, %671, %670, %668, %667, %657, %647, %645, %629, %619, %610, %608, %592, %582, %581, %573, %571, %554, %544, %542, %526, %516, %515, %507, %498, %490, %489, %481, %473, %471, %454, %444, %443, %441, %425, %415, %407, %400, %399, %391, %384, %376, %375, %365, %355, %346, %339, %337, %321, %311, %310, %309, %308, %305, %303, %302, %301, %294, %292, %281, %271, %270, %260, %250, %247, %246, %245, %242, %240, %239, %237, %230, %228, %217, %207, %206, %196, %186, %185, %182, %181, %177, %175, %164, %154, %153, %152, %142, %132, %130, %129, %119, %109, %108, %98, %88, %84, %82, %71, %61, %60, %50, %40, %38, %27, %17
  %.0108.be = phi i32 [ %.0108, %16 ], [ %.0108, %690 ], [ %.0108, %689 ], [ %.0108, %688 ], [ %.0108, %687 ], [ %.0108, %686 ], [ %.0108, %685 ], [ %.0108, %684 ], [ %.0108, %683 ], [ %.0108, %682 ], [ %.0108, %681 ], [ %.0108, %680 ], [ %.0108, %679 ], [ %.0108, %678 ], [ %.0108, %677 ], [ %.0108, %676 ], [ %.0108, %675 ], [ %.0108, %673 ], [ %.0108, %672 ], [ %.0108, %671 ], [ %.0108, %670 ], [ %.0108, %668 ], [ %.0108, %667 ], [ %.0108, %657 ], [ %.0108, %647 ], [ %.0108, %645 ], [ %.0108, %629 ], [ %.0108, %619 ], [ %.0108, %610 ], [ %.0108, %608 ], [ %.0108, %592 ], [ %.0108, %582 ], [ %.0108, %581 ], [ %.0108, %573 ], [ %.0108, %571 ], [ %.0108, %554 ], [ %.0108, %544 ], [ %.0108, %542 ], [ %.0108, %526 ], [ %.0108, %516 ], [ %.0108, %515 ], [ %.0108, %507 ], [ %.0108, %498 ], [ %.0108, %490 ], [ %.0108, %489 ], [ %.0108, %481 ], [ %.0108, %473 ], [ %.0108, %471 ], [ %.0108, %454 ], [ %.0108, %444 ], [ %.0108, %443 ], [ %.0108, %441 ], [ %.0108, %425 ], [ %.0108, %415 ], [ %.0108, %407 ], [ %.0108, %400 ], [ %.0108, %399 ], [ %.0108, %391 ], [ %.0108, %384 ], [ %.0108, %376 ], [ %.0108, %375 ], [ %.0108, %365 ], [ %.0108, %355 ], [ %.0108, %346 ], [ %.0108, %339 ], [ %.0108, %337 ], [ %.0108, %321 ], [ %.0108, %311 ], [ %.neg123, %310 ], [ %.0108, %309 ], [ %.0108, %308 ], [ %.0108, %305 ], [ %.0108, %303 ], [ %.0108, %302 ], [ %.0108, %301 ], [ %.0108, %294 ], [ %.0108, %292 ], [ %.0108, %281 ], [ %.0108, %271 ], [ %.0108, %270 ], [ %.0108, %260 ], [ %.0108, %250 ], [ %.0108, %247 ], [ 2, %246 ], [ %.0108, %245 ], [ %.0108, %242 ], [ %241, %240 ], [ %.0108, %239 ], [ %.0108, %237 ], [ %.0108, %230 ], [ %.0108, %228 ], [ %.0108, %217 ], [ %.0108, %207 ], [ %.0108, %206 ], [ %.0108, %196 ], [ %.0108, %186 ], [ %.0108, %185 ], [ %.0108, %182 ], [ %.0108, %181 ], [ %.0108, %177 ], [ %.0108, %175 ], [ %.0108, %164 ], [ %.0108, %154 ], [ 2, %153 ], [ %.0108, %152 ], [ %.0108, %142 ], [ %.0108, %132 ], [ %131, %130 ], [ %.0108, %129 ], [ %.0108, %119 ], [ %.0108, %109 ], [ %.0108, %108 ], [ %.0108, %98 ], [ %.0108, %88 ], [ %.0108, %84 ], [ %.0108, %82 ], [ %.0108, %71 ], [ %.0108, %61 ], [ %.0108, %60 ], [ %.0108, %50 ], [ %.0108, %40 ], [ %.0108, %38 ], [ %.0108, %27 ], [ %.0108, %17 ]
  %.0106.be = phi i32 [ %.0106, %16 ], [ %.0106, %690 ], [ %.0106, %689 ], [ %.0106, %688 ], [ %.0106, %687 ], [ %.0106, %686 ], [ %.0106, %685 ], [ %.0106, %684 ], [ %.0106, %683 ], [ %.0106, %682 ], [ %.0106, %681 ], [ 2, %680 ], [ %.0106, %679 ], [ 0, %678 ], [ %.0106, %677 ], [ %.0106, %676 ], [ %.0106, %675 ], [ %674, %673 ], [ %.0106, %672 ], [ 0, %671 ], [ %.0106, %670 ], [ %.0106, %668 ], [ %.0106, %667 ], [ %.0106, %657 ], [ %.0106, %647 ], [ %.0106, %645 ], [ %.0106, %629 ], [ %.0106, %619 ], [ %.0106, %610 ], [ %.0106, %608 ], [ %.0106, %592 ], [ %.0106, %582 ], [ %.0106, %581 ], [ %.0106, %573 ], [ %.0106, %571 ], [ %.0106, %554 ], [ %.0106, %544 ], [ %.0106, %542 ], [ %.0106, %526 ], [ %.0106, %516 ], [ %.0106, %515 ], [ %.0106, %507 ], [ %.0106, %498 ], [ %.0106, %490 ], [ %.0106, %489 ], [ %.0106, %481 ], [ %.0106, %473 ], [ %.0106, %471 ], [ %.0106, %454 ], [ %.0106, %444 ], [ %.0106, %443 ], [ %.0106, %441 ], [ %.0106, %425 ], [ %.0106, %415 ], [ %.0106, %407 ], [ %.0106, %400 ], [ %.0106, %399 ], [ %.0106, %391 ], [ %.0106, %384 ], [ %.0106, %376 ], [ %.0106, %375 ], [ %.0106, %365 ], [ %.0106, %355 ], [ %.0106, %346 ], [ %.0106, %339 ], [ %.0106, %337 ], [ %.0106, %321 ], [ %.0106, %311 ], [ %.0106, %310 ], [ %.0106, %309 ], [ %.0106, %308 ], [ %.0106, %305 ], [ %304, %303 ], [ %.0106, %302 ], [ %.0106, %301 ], [ %.0106, %294 ], [ %.0106, %292 ], [ %.0106, %281 ], [ %.0106, %271 ], [ %.0106, %270 ], [ 2, %260 ], [ %.0106, %250 ], [ %.0106, %247 ], [ %.0106, %246 ], [ %.0106, %245 ], [ %.0106, %242 ], [ %.0106, %240 ], [ %.0106, %239 ], [ %238, %237 ], [ %.0106, %230 ], [ %.0106, %228 ], [ %.0106, %217 ], [ %.0106, %207 ], [ %.0106, %206 ], [ 0, %196 ], [ %.0106, %186 ], [ %.0106, %185 ], [ %.0106, %182 ], [ %.0106, %181 ], [ %.0106, %177 ], [ %.0106, %175 ], [ %.0106, %164 ], [ %.0106, %154 ], [ %.0106, %153 ], [ %.0106, %152 ], [ %.0106, %142 ], [ %.0106, %132 ], [ %.0106, %130 ], [ %.0106, %129 ], [ %.0106, %119 ], [ %.0106, %109 ], [ %.0106, %108 ], [ %.neg125, %98 ], [ %.0106, %88 ], [ %.0106, %84 ], [ %.0106, %82 ], [ %.0106, %71 ], [ %.0106, %61 ], [ %.0106, %60 ], [ 0, %50 ], [ %.0106, %40 ], [ %.0106, %38 ], [ %.0106, %27 ], [ %.0106, %17 ]
  %.0104.be = phi i32 [ %.0104, %16 ], [ %.0104, %690 ], [ %.0104, %689 ], [ %.0104, %688 ], [ %.0104, %687 ], [ %.0104, %686 ], [ %.0104, %685 ], [ %.0104, %684 ], [ %.0104, %683 ], [ %.0104, %682 ], [ %.0104, %681 ], [ %.0104, %680 ], [ %.0104, %679 ], [ %.0104, %678 ], [ %.0104, %677 ], [ %.0104, %676 ], [ %.0104, %675 ], [ %.0104, %673 ], [ %.0104, %672 ], [ %.0104, %671 ], [ %.0104, %670 ], [ %.0104, %668 ], [ %.0104, %667 ], [ %.0104, %657 ], [ %.0104, %647 ], [ %.0104, %645 ], [ %.0104, %629 ], [ %.0104, %619 ], [ %.0104, %610 ], [ %.0104, %608 ], [ %.0104, %592 ], [ %.0104, %582 ], [ %.0104, %581 ], [ %.0104, %573 ], [ %.0104, %571 ], [ %.0104, %554 ], [ %.0104, %544 ], [ %.0104, %542 ], [ %.0104, %526 ], [ %.0104, %516 ], [ %.0104, %515 ], [ %.0104, %507 ], [ %.0104, %498 ], [ %.0104, %490 ], [ %.0104, %489 ], [ %.0104, %481 ], [ %.0104, %473 ], [ %.0104, %471 ], [ %.0104, %454 ], [ %.0104, %444 ], [ %.0104, %443 ], [ %.0104, %441 ], [ %.0104, %425 ], [ %.0104, %415 ], [ %.0104, %407 ], [ %.0104, %400 ], [ %.0104, %399 ], [ %.0104, %391 ], [ %.0104, %384 ], [ %.0104, %376 ], [ %.0104, %375 ], [ %.0104, %365 ], [ %.0104, %355 ], [ %.0104, %346 ], [ %.0104, %339 ], [ %.0104, %337 ], [ %.0104, %321 ], [ %.0104, %311 ], [ %.0104, %310 ], [ %.0104, %309 ], [ %.0104, %308 ], [ %.0104, %305 ], [ %.0104, %303 ], [ %.0104, %302 ], [ %.0104, %301 ], [ %.0104, %294 ], [ %.0104, %292 ], [ %.0104, %281 ], [ %.0104, %271 ], [ %.0104, %270 ], [ %.0104, %260 ], [ %.0104, %250 ], [ %.0104, %247 ], [ %.0104, %246 ], [ %.0104, %245 ], [ %.0104, %242 ], [ %.0104, %240 ], [ %.0104, %239 ], [ %.0104, %237 ], [ %.0104, %230 ], [ %.0104, %228 ], [ %.0104, %217 ], [ %.0104, %207 ], [ %.0104, %206 ], [ %.0104, %196 ], [ %.0104, %186 ], [ %.0104, %185 ], [ %.0104, %182 ], [ 1, %181 ], [ %.0104, %177 ], [ %.0104, %175 ], [ %.0104, %164 ], [ %.0104, %154 ], [ %.0104, %153 ], [ %.0104, %152 ], [ %.0104, %142 ], [ %.0104, %132 ], [ %.0104, %130 ], [ %.0104, %129 ], [ %.0104, %119 ], [ %.0104, %109 ], [ %.0104, %108 ], [ %.0104, %98 ], [ %.0104, %88 ], [ %.0104, %84 ], [ %.0104, %82 ], [ %.0104, %71 ], [ %.0104, %61 ], [ %.0104, %60 ], [ %.0104, %50 ], [ %.0104, %40 ], [ %.0104, %38 ], [ %.0104, %27 ], [ %.0104, %17 ]
  %.0102.be = phi i32 [ %.0102, %16 ], [ %.0102, %690 ], [ %.0102, %689 ], [ %.0102, %688 ], [ %.0102, %687 ], [ %.0102, %686 ], [ %.0102, %685 ], [ %.0102, %684 ], [ %.0102, %683 ], [ 0, %682 ], [ %.0102, %681 ], [ %.0102, %680 ], [ %.0102, %679 ], [ %.0102, %678 ], [ %.0102, %677 ], [ %.0102, %676 ], [ %.0102, %675 ], [ %.0102, %673 ], [ %.0102, %672 ], [ %.0102, %671 ], [ %.0102, %670 ], [ %.0102, %668 ], [ %.0102, %667 ], [ %.0102, %657 ], [ %.0102, %647 ], [ %.0102, %645 ], [ %.0102, %629 ], [ %.0102, %619 ], [ %.0102, %610 ], [ %.0102, %608 ], [ %.0102, %592 ], [ %.0102, %582 ], [ %.0102, %581 ], [ %.0102, %573 ], [ %.0102, %571 ], [ %.0102, %554 ], [ %.0102, %544 ], [ %.0102, %542 ], [ %.0102, %526 ], [ %.0102, %516 ], [ %.0102, %515 ], [ %.0102, %507 ], [ %.0102, %498 ], [ %.0102, %490 ], [ %.0102, %489 ], [ %.0102, %481 ], [ %.0102, %473 ], [ %.0102, %471 ], [ %.0102, %454 ], [ %.0102, %444 ], [ %.0102, %443 ], [ %.0102, %441 ], [ %.0102, %425 ], [ %.0102, %415 ], [ %.0102, %407 ], [ %.0102, %400 ], [ %.0102, %399 ], [ %.0102, %391 ], [ %.0102, %384 ], [ %.0102, %376 ], [ %.0102, %375 ], [ %.0102, %365 ], [ %.0102, %355 ], [ %.0102, %346 ], [ %.0102, %339 ], [ %.0102, %337 ], [ 0, %321 ], [ %.0102, %311 ], [ %.0102, %310 ], [ %.0102, %309 ], [ %.0102, %308 ], [ %.0102, %305 ], [ %.0102, %303 ], [ %.0102, %302 ], [ 1, %301 ], [ %.0102, %294 ], [ %.0102, %292 ], [ %.0102, %281 ], [ %.0102, %271 ], [ %.0102, %270 ], [ %.0102, %260 ], [ %.0102, %250 ], [ %.0102, %247 ], [ %.0102, %246 ], [ %.0102, %245 ], [ %.0102, %242 ], [ %.0102, %240 ], [ %.0102, %239 ], [ %.0102, %237 ], [ %.0102, %230 ], [ %.0102, %228 ], [ %.0102, %217 ], [ %.0102, %207 ], [ %.0102, %206 ], [ %.0102, %196 ], [ %.0102, %186 ], [ %.0102, %185 ], [ %.0102, %182 ], [ %.0102, %181 ], [ %.0102, %177 ], [ %.0102, %175 ], [ %.0102, %164 ], [ %.0102, %154 ], [ %.0102, %153 ], [ %.0102, %152 ], [ %.0102, %142 ], [ %.0102, %132 ], [ %.0102, %130 ], [ %.0102, %129 ], [ %.0102, %119 ], [ %.0102, %109 ], [ %.0102, %108 ], [ %.0102, %98 ], [ %.0102, %88 ], [ %.0102, %84 ], [ %.0102, %82 ], [ %.0102, %71 ], [ %.0102, %61 ], [ %.0102, %60 ], [ %.0102, %50 ], [ %.0102, %40 ], [ %.0102, %38 ], [ %.0102, %27 ], [ %.0102, %17 ]
  %.0100.be = phi i32 [ %.0100, %16 ], [ %.0100, %690 ], [ %.0100, %689 ], [ %.0100, %688 ], [ %.0100, %687 ], [ %.0100, %686 ], [ %.0100, %685 ], [ %.0100, %684 ], [ %.0100, %683 ], [ %.0100, %682 ], [ %.0100, %681 ], [ %.0100, %680 ], [ %.0100, %679 ], [ %.0100, %678 ], [ %.0100, %677 ], [ %.0100, %676 ], [ %.0100, %675 ], [ %.0100, %673 ], [ %.0100, %672 ], [ %.0100, %671 ], [ %.0100, %670 ], [ %.0100, %668 ], [ %.0100, %667 ], [ %.0100, %657 ], [ %.0100, %647 ], [ %.0100, %645 ], [ %.0100, %629 ], [ %.0100, %619 ], [ %.0100, %610 ], [ %.0100, %608 ], [ %.0100, %592 ], [ %.0100, %582 ], [ %.0100, %581 ], [ %.0100, %573 ], [ %.0100, %571 ], [ %.0100, %554 ], [ %.0100, %544 ], [ %.0100, %542 ], [ %.0100, %526 ], [ %.0100, %516 ], [ %.0100, %515 ], [ %.0100, %507 ], [ %.0100, %498 ], [ %.0100, %490 ], [ %.0100, %489 ], [ %.0100, %481 ], [ %.0100, %473 ], [ %.0100, %471 ], [ %.0100, %454 ], [ %.0100, %444 ], [ %.0100, %443 ], [ %.0100, %441 ], [ %.0100, %425 ], [ %.0100, %415 ], [ %.0100, %407 ], [ %.0100, %400 ], [ %.0100, %399 ], [ %.0100, %391 ], [ %.0100, %384 ], [ %.0100, %376 ], [ %.0100, %375 ], [ %.0100, %365 ], [ %.0100, %355 ], [ %.0100, %346 ], [ %.0100, %339 ], [ %.0100, %337 ], [ %.0100, %321 ], [ %.0100, %311 ], [ %.0100, %310 ], [ %.0100, %309 ], [ %.0100, %308 ], [ %.0100, %305 ], [ %.0100, %303 ], [ %.0100, %302 ], [ %.0108, %301 ], [ %.0100, %294 ], [ %.0100, %292 ], [ %.0100, %281 ], [ %.0100, %271 ], [ %.0100, %270 ], [ %.0100, %260 ], [ %.0100, %250 ], [ %.0100, %247 ], [ %.0100, %246 ], [ %.0100, %245 ], [ %.0100, %242 ], [ %.0100, %240 ], [ %.0100, %239 ], [ %.0100, %237 ], [ %.0100, %230 ], [ %.0100, %228 ], [ %.0100, %217 ], [ %.0100, %207 ], [ %.0100, %206 ], [ %.0100, %196 ], [ %.0100, %186 ], [ %.0100, %185 ], [ %.0100, %182 ], [ %.0100, %181 ], [ %.0100, %177 ], [ %.0100, %175 ], [ %.0100, %164 ], [ %.0100, %154 ], [ %.0100, %153 ], [ %.0100, %152 ], [ %.0100, %142 ], [ %.0100, %132 ], [ %.0100, %130 ], [ %.0100, %129 ], [ %.0100, %119 ], [ %.0100, %109 ], [ %.0100, %108 ], [ %.0100, %98 ], [ %.0100, %88 ], [ %.0100, %84 ], [ %.0100, %82 ], [ %.0100, %71 ], [ %.0100, %61 ], [ %.0100, %60 ], [ %.0100, %50 ], [ %.0100, %40 ], [ %.0100, %38 ], [ %.0100, %27 ], [ %.0100, %17 ]
  %.098.be = phi i32 [ %.098, %16 ], [ %.098, %690 ], [ %.098, %689 ], [ %.098, %688 ], [ %.098, %687 ], [ %.098, %686 ], [ %.098, %685 ], [ %.098, %684 ], [ %.098, %683 ], [ %.098, %682 ], [ %.098, %681 ], [ %.098, %680 ], [ %.098, %679 ], [ %.098, %678 ], [ %.098, %677 ], [ %.098, %676 ], [ %.098, %675 ], [ %.098, %673 ], [ %.098, %672 ], [ %.098, %671 ], [ %.098, %670 ], [ %.098, %668 ], [ %.098, %667 ], [ %.098, %657 ], [ %.098, %647 ], [ %.098, %645 ], [ %.098, %629 ], [ %.098, %619 ], [ %.098, %610 ], [ %.098, %608 ], [ %.098, %592 ], [ %.098, %582 ], [ %.098, %581 ], [ %.098, %573 ], [ %.098, %571 ], [ %.098, %554 ], [ %.098, %544 ], [ %.098, %542 ], [ %.098, %526 ], [ %.098, %516 ], [ %.098, %515 ], [ %.098, %507 ], [ %.098, %498 ], [ %.098, %490 ], [ %.098, %489 ], [ %.098, %481 ], [ %.098, %473 ], [ %.098, %471 ], [ %.098, %454 ], [ %.098, %444 ], [ %.098, %443 ], [ %.098, %441 ], [ %.098, %425 ], [ %.098, %415 ], [ %.098, %407 ], [ %.098, %400 ], [ %.098, %399 ], [ %.098, %391 ], [ %.098, %384 ], [ %.098, %376 ], [ %.098, %375 ], [ %.098, %365 ], [ %.098, %355 ], [ %.098, %346 ], [ %.098, %339 ], [ %.098, %337 ], [ %.098, %321 ], [ %.098, %311 ], [ %.098, %310 ], [ %.098, %309 ], [ %.098, %308 ], [ %.098, %305 ], [ %.098, %303 ], [ %.098, %302 ], [ %.0106, %301 ], [ %.098, %294 ], [ %.098, %292 ], [ %.098, %281 ], [ %.098, %271 ], [ %.098, %270 ], [ %.098, %260 ], [ %.098, %250 ], [ %.098, %247 ], [ %.098, %246 ], [ %.098, %245 ], [ %.098, %242 ], [ %.098, %240 ], [ %.098, %239 ], [ %.098, %237 ], [ %.098, %230 ], [ %.098, %228 ], [ %.098, %217 ], [ %.098, %207 ], [ %.098, %206 ], [ %.098, %196 ], [ %.098, %186 ], [ %.098, %185 ], [ %.098, %182 ], [ %.098, %181 ], [ %.098, %177 ], [ %.098, %175 ], [ %.098, %164 ], [ %.098, %154 ], [ %.098, %153 ], [ %.098, %152 ], [ %.098, %142 ], [ %.098, %132 ], [ %.098, %130 ], [ %.098, %129 ], [ %.098, %119 ], [ %.098, %109 ], [ %.098, %108 ], [ %.098, %98 ], [ %.098, %88 ], [ %.098, %84 ], [ %.098, %82 ], [ %.098, %71 ], [ %.098, %61 ], [ %.098, %60 ], [ %.098, %50 ], [ %.098, %40 ], [ %.098, %38 ], [ %.098, %27 ], [ %.098, %17 ]
  %.0.be = phi i32 [ %.0, %16 ], [ -1233120601, %690 ], [ -186563128, %689 ], [ -1584276171, %688 ], [ 651681820, %687 ], [ 899514658, %686 ], [ 454618892, %685 ], [ -1844332180, %684 ], [ -695018540, %683 ], [ 476111591, %682 ], [ 1355873222, %681 ], [ 922553258, %680 ], [ 419000590, %679 ], [ 501916455, %678 ], [ 1723725956, %677 ], [ 89167194, %676 ], [ 635373997, %675 ], [ 1130581934, %673 ], [ 1630268059, %672 ], [ 1317002465, %671 ], [ -546473948, %670 ], [ 1629734130, %668 ], [ 748528843, %667 ], [ %666, %657 ], [ %656, %647 ], [ %646, %645 ], [ %644, %629 ], [ %628, %619 ], [ %618, %610 ], [ %609, %608 ], [ %607, %592 ], [ %591, %582 ], [ 1684976059, %581 ], [ %580, %573 ], [ %572, %571 ], [ %570, %554 ], [ %553, %544 ], [ %543, %542 ], [ %541, %526 ], [ %525, %516 ], [ 131359646, %515 ], [ %514, %507 ], [ %506, %498 ], [ %497, %490 ], [ -501256911, %489 ], [ %488, %481 ], [ %480, %473 ], [ %472, %471 ], [ %470, %454 ], [ %453, %444 ], [ 906028389, %443 ], [ %442, %441 ], [ %440, %425 ], [ %424, %415 ], [ %414, %407 ], [ %406, %400 ], [ -1459268926, %399 ], [ %398, %391 ], [ %390, %384 ], [ %383, %376 ], [ 665802209, %375 ], [ %374, %365 ], [ %364, %355 ], [ %354, %346 ], [ %345, %339 ], [ %338, %337 ], [ %336, %321 ], [ %320, %311 ], [ 774129361, %310 ], [ 1194051219, %309 ], [ -1203734005, %308 ], [ %307, %305 ], [ -2065086475, %303 ], [ 426099874, %302 ], [ 810490378, %301 ], [ %300, %294 ], [ %293, %292 ], [ %291, %281 ], [ %280, %271 ], [ -2065086475, %270 ], [ %269, %260 ], [ %259, %250 ], [ %249, %247 ], [ 774129361, %246 ], [ 1519818369, %245 ], [ %244, %242 ], [ 999502627, %240 ], [ -561137974, %239 ], [ -1746780058, %237 ], [ -1382067349, %230 ], [ %229, %228 ], [ %227, %217 ], [ %216, %207 ], [ -1746780058, %206 ], [ %205, %196 ], [ %195, %186 ], [ 409116240, %185 ], [ %184, %182 ], [ 255728549, %181 ], [ %180, %177 ], [ %176, %175 ], [ %174, %164 ], [ %163, %154 ], [ 999502627, %153 ], [ 1629734130, %152 ], [ %151, %142 ], [ %141, %132 ], [ -652548968, %130 ], [ -1448758472, %129 ], [ %128, %119 ], [ %118, %109 ], [ -359488723, %108 ], [ %107, %98 ], [ %97, %88 ], [ -676308018, %84 ], [ %83, %82 ], [ %81, %71 ], [ %70, %61 ], [ -359488723, %60 ], [ %59, %50 ], [ %49, %40 ], [ %39, %38 ], [ %37, %27 ], [ %26, %17 ]
  br label %16

17:                                               ; preds = %16
  %18 = load i32, i32* @x, align 4
  %19 = load i32, i32* @y, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 -546473948, i32 -2141057128
  br label %.backedge

27:                                               ; preds = %16
  %28 = icmp slt i32 %.0108, 12
  store i1 %28, i1* %12, align 1
  %29 = load i32, i32* @x, align 4
  %30 = load i32, i32* @y, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -2037468345, i32 -2141057128
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %12, align 1
  %39 = select i1 %.0..0..0., i32 550772879, i32 -307088712
  br label %.backedge

40:                                               ; preds = %16
  %41 = load i32, i32* @x, align 4
  %42 = load i32, i32* @y, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1317002465, i32 1783339837
  br label %.backedge

50:                                               ; preds = %16
  %51 = load i32, i32* @x, align 4
  %52 = load i32, i32* @y, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 -1577467149, i32 1783339837
  br label %.backedge

60:                                               ; preds = %16
  br label %.backedge

61:                                               ; preds = %16
  %62 = load i32, i32* @x, align 4
  %63 = load i32, i32* @y, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 1630268059, i32 239765989
  br label %.backedge

71:                                               ; preds = %16
  %72 = icmp slt i32 %.0106, 12
  store i1 %72, i1* %11, align 1
  %73 = load i32, i32* @x, align 4
  %74 = load i32, i32* @y, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -2108978957, i32 239765989
  br label %.backedge

82:                                               ; preds = %16
  %.0..0..0.87 = load volatile i1, i1* %11, align 1
  %83 = select i1 %.0..0..0.87, i32 -1613132456, i32 76840895
  br label %.backedge

84:                                               ; preds = %16
  %85 = sext i32 %.0108 to i64
  %86 = sext i32 %.0106 to i64
  %87 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %85, i64 %86
  store i8 48, i8* %87, align 1
  br label %.backedge

88:                                               ; preds = %16
  %89 = load i32, i32* @x, align 4
  %90 = load i32, i32* @y, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 1130581934, i32 -615806708
  br label %.backedge

98:                                               ; preds = %16
  %.neg125 = add i32 %.0106, 1
  %99 = load i32, i32* @x, align 4
  %100 = load i32, i32* @y, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 -1768545881, i32 -615806708
  br label %.backedge

108:                                              ; preds = %16
  br label %.backedge

109:                                              ; preds = %16
  %110 = load i32, i32* @x, align 4
  %111 = load i32, i32* @y, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 635373997, i32 2030752211
  br label %.backedge

119:                                              ; preds = %16
  %120 = load i32, i32* @x, align 4
  %121 = load i32, i32* @y, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 -864432548, i32 2030752211
  br label %.backedge

129:                                              ; preds = %16
  br label %.backedge

130:                                              ; preds = %16
  %131 = add i32 %.0108, 1
  br label %.backedge

132:                                              ; preds = %16
  %133 = load i32, i32* @x, align 4
  %134 = load i32, i32* @y, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 89167194, i32 -1906306993
  br label %.backedge

142:                                              ; preds = %16
  %143 = load i32, i32* @x, align 4
  %144 = load i32, i32* @y, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 197679234, i32 -1906306993
  br label %.backedge

152:                                              ; preds = %16
  br label %.backedge

153:                                              ; preds = %16
  br label %.backedge

154:                                              ; preds = %16
  %155 = load i32, i32* @x, align 4
  %156 = load i32, i32* @y, align 4
  %157 = add i32 %155, -1
  %158 = mul i32 %157, %155
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %161, %160
  %163 = select i1 %162, i32 1723725956, i32 1428805425
  br label %.backedge

164:                                              ; preds = %16
  %165 = icmp slt i32 %.0108, 10
  store i1 %165, i1* %10, align 1
  %166 = load i32, i32* @x, align 4
  %167 = load i32, i32* @y, align 4
  %168 = add i32 %166, -1
  %169 = mul i32 %168, %166
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 1765086687, i32 1428805425
  br label %.backedge

175:                                              ; preds = %16
  %.0..0..0.88 = load volatile i1, i1* %10, align 1
  %176 = select i1 %.0..0..0.88, i32 1631771196, i32 409116240
  br label %.backedge

177:                                              ; preds = %16
  %178 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %15)
  %179 = icmp eq i32 %178, -1
  %180 = select i1 %179, i32 2134733732, i32 255728549
  br label %.backedge

181:                                              ; preds = %16
  br label %.backedge

182:                                              ; preds = %16
  %183 = icmp eq i32 %.0104, 1
  %184 = select i1 %183, i32 972341918, i32 689705403
  br label %.backedge

185:                                              ; preds = %16
  br label %.backedge

186:                                              ; preds = %16
  %187 = load i32, i32* @x, align 4
  %188 = load i32, i32* @y, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 501916455, i32 1156045865
  br label %.backedge

196:                                              ; preds = %16
  %197 = load i32, i32* @x, align 4
  %198 = load i32, i32* @y, align 4
  %199 = add i32 %197, -1
  %200 = mul i32 %199, %197
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %203, %202
  %205 = select i1 %204, i32 1828933721, i32 1156045865
  br label %.backedge

206:                                              ; preds = %16
  br label %.backedge

207:                                              ; preds = %16
  %208 = load i32, i32* @x, align 4
  %209 = load i32, i32* @y, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 419000590, i32 1737047594
  br label %.backedge

217:                                              ; preds = %16
  %218 = icmp slt i32 %.0106, 8
  store i1 %218, i1* %9, align 1
  %219 = load i32, i32* @x, align 4
  %220 = load i32, i32* @y, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 2116908497, i32 1737047594
  br label %.backedge

228:                                              ; preds = %16
  %.0..0..0.89 = load volatile i1, i1* %9, align 1
  %229 = select i1 %.0..0..0.89, i32 1991822100, i32 -576521405
  br label %.backedge

230:                                              ; preds = %16
  %231 = sext i32 %.0106 to i64
  %232 = getelementptr inbounds [10 x i8], [10 x i8]* %14, i64 0, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = sext i32 %.0108 to i64
  %.neg124 = add i32 %.0106, 2
  %235 = sext i32 %.neg124 to i64
  %236 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %234, i64 %235
  store i8 %233, i8* %236, align 1
  br label %.backedge

237:                                              ; preds = %16
  %238 = add i32 %.0106, 1
  br label %.backedge

239:                                              ; preds = %16
  br label %.backedge

240:                                              ; preds = %16
  %241 = add i32 %.0108, 1
  br label %.backedge

242:                                              ; preds = %16
  %243 = icmp eq i32 %.0104, 1
  %244 = select i1 %243, i32 1900636781, i32 25326099
  br label %.backedge

245:                                              ; preds = %16
  br label %.backedge

246:                                              ; preds = %16
  br label %.backedge

247:                                              ; preds = %16
  %248 = icmp slt i32 %.0108, 10
  %249 = select i1 %248, i32 -1455644581, i32 -1203734005
  br label %.backedge

250:                                              ; preds = %16
  %251 = load i32, i32* @x, align 4
  %252 = load i32, i32* @y, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 922553258, i32 703772283
  br label %.backedge

260:                                              ; preds = %16
  %261 = load i32, i32* @x, align 4
  %262 = load i32, i32* @y, align 4
  %263 = add i32 %261, -1
  %264 = mul i32 %263, %261
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %267, %266
  %269 = select i1 %268, i32 1241687798, i32 703772283
  br label %.backedge

270:                                              ; preds = %16
  br label %.backedge

271:                                              ; preds = %16
  %272 = load i32, i32* @x, align 4
  %273 = load i32, i32* @y, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 1355873222, i32 -156829042
  br label %.backedge

281:                                              ; preds = %16
  %282 = icmp slt i32 %.0106, 10
  store i1 %282, i1* %8, align 1
  %283 = load i32, i32* @x, align 4
  %284 = load i32, i32* @y, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 1460324371, i32 -156829042
  br label %.backedge

292:                                              ; preds = %16
  %.0..0..0.90 = load volatile i1, i1* %8, align 1
  %293 = select i1 %.0..0..0.90, i32 -1285859507, i32 810490378
  br label %.backedge

294:                                              ; preds = %16
  %295 = sext i32 %.0108 to i64
  %296 = sext i32 %.0106 to i64
  %297 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %295, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = icmp eq i8 %298, 49
  %300 = select i1 %299, i32 -1105195762, i32 315804690
  br label %.backedge

301:                                              ; preds = %16
  br label %.backedge

302:                                              ; preds = %16
  br label %.backedge

303:                                              ; preds = %16
  %304 = add i32 %.0106, 1
  br label %.backedge

305:                                              ; preds = %16
  %306 = icmp eq i32 %.0102, 1
  %307 = select i1 %306, i32 1691931540, i32 -946514578
  br label %.backedge

308:                                              ; preds = %16
  br label %.backedge

309:                                              ; preds = %16
  br label %.backedge

310:                                              ; preds = %16
  %.neg123 = add i32 %.0108, 1
  br label %.backedge

311:                                              ; preds = %16
  %312 = load i32, i32* @x, align 4
  %313 = load i32, i32* @y, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 476111591, i32 76832434
  br label %.backedge

321:                                              ; preds = %16
  %322 = sext i32 %.0100 to i64
  %323 = add i32 %.098, 1
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %322, i64 %324
  %326 = load i8, i8* %325, align 1
  %327 = icmp eq i8 %326, 49
  store i1 %327, i1* %7, align 1
  %328 = load i32, i32* @x, align 4
  %329 = load i32, i32* @y, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 52293940, i32 76832434
  br label %.backedge

337:                                              ; preds = %16
  %.0..0..0.91 = load volatile i1, i1* %7, align 1
  %338 = select i1 %.0..0..0.91, i32 1909389294, i32 665802209
  br label %.backedge

339:                                              ; preds = %16
  %.neg122 = add i32 %.0100, 1
  %340 = sext i32 %.neg122 to i64
  %341 = sext i32 %.098 to i64
  %342 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %340, i64 %341
  %343 = load i8, i8* %342, align 1
  %344 = icmp eq i8 %343, 49
  %345 = select i1 %344, i32 1601980251, i32 665802209
  br label %.backedge

346:                                              ; preds = %16
  %347 = add i32 %.0100, 1
  %348 = sext i32 %347 to i64
  %349 = add i32 %.098, 1
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %348, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = icmp eq i8 %352, 49
  %354 = select i1 %353, i32 -415832435, i32 665802209
  br label %.backedge

355:                                              ; preds = %16
  %356 = load i32, i32* @x, align 4
  %357 = load i32, i32* @y, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 -695018540, i32 -461848309
  br label %.backedge

365:                                              ; preds = %16
  %puts121 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.8, i64 0, i64 0))
  %366 = load i32, i32* @x, align 4
  %367 = load i32, i32* @y, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 1635886950, i32 -461848309
  br label %.backedge

375:                                              ; preds = %16
  br label %.backedge

376:                                              ; preds = %16
  %377 = add i32 %.0100, 1
  %378 = sext i32 %377 to i64
  %379 = sext i32 %.098 to i64
  %380 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %378, i64 %379
  %381 = load i8, i8* %380, align 1
  %382 = icmp eq i8 %381, 49
  %383 = select i1 %382, i32 782242572, i32 -1459268926
  br label %.backedge

384:                                              ; preds = %16
  %.neg120 = add i32 %.0100, 2
  %385 = sext i32 %.neg120 to i64
  %386 = sext i32 %.098 to i64
  %387 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %385, i64 %386
  %388 = load i8, i8* %387, align 1
  %389 = icmp eq i8 %388, 49
  %390 = select i1 %389, i32 241688656, i32 -1459268926
  br label %.backedge

391:                                              ; preds = %16
  %392 = add i32 %.0100, 3
  %393 = sext i32 %392 to i64
  %394 = sext i32 %.098 to i64
  %395 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %393, i64 %394
  %396 = load i8, i8* %395, align 1
  %397 = icmp eq i8 %396, 49
  %398 = select i1 %397, i32 -1676189028, i32 -1459268926
  br label %.backedge

399:                                              ; preds = %16
  %puts119 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.7, i64 0, i64 0))
  br label %.backedge

400:                                              ; preds = %16
  %401 = sext i32 %.0100 to i64
  %.neg118 = add i32 %.098, 1
  %402 = sext i32 %.neg118 to i64
  %403 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %401, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = icmp eq i8 %404, 49
  %406 = select i1 %405, i32 164588640, i32 906028389
  br label %.backedge

407:                                              ; preds = %16
  %408 = sext i32 %.0100 to i64
  %409 = add i32 %.098, 2
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %408, i64 %410
  %412 = load i8, i8* %411, align 1
  %413 = icmp eq i8 %412, 49
  %414 = select i1 %413, i32 -737063622, i32 906028389
  br label %.backedge

415:                                              ; preds = %16
  %416 = load i32, i32* @x, align 4
  %417 = load i32, i32* @y, align 4
  %418 = add i32 %416, -1
  %419 = mul i32 %418, %416
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %422, %421
  %424 = select i1 %423, i32 -1844332180, i32 -1038967553
  br label %.backedge

425:                                              ; preds = %16
  %426 = sext i32 %.0100 to i64
  %427 = add i32 %.098, 3
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %426, i64 %428
  %430 = load i8, i8* %429, align 1
  %431 = icmp eq i8 %430, 49
  store i1 %431, i1* %6, align 1
  %432 = load i32, i32* @x, align 4
  %433 = load i32, i32* @y, align 4
  %434 = add i32 %432, -1
  %435 = mul i32 %434, %432
  %436 = and i32 %435, 1
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %438, %437
  %440 = select i1 %439, i32 696125644, i32 -1038967553
  br label %.backedge

441:                                              ; preds = %16
  %.0..0..0.92 = load volatile i1, i1* %6, align 1
  %442 = select i1 %.0..0..0.92, i32 1248650904, i32 906028389
  br label %.backedge

443:                                              ; preds = %16
  %puts117 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i64 0, i64 0))
  br label %.backedge

444:                                              ; preds = %16
  %445 = load i32, i32* @x, align 4
  %446 = load i32, i32* @y, align 4
  %447 = add i32 %445, -1
  %448 = mul i32 %447, %445
  %449 = and i32 %448, 1
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %451, %450
  %453 = select i1 %452, i32 454618892, i32 -894568344
  br label %.backedge

454:                                              ; preds = %16
  %455 = add i32 %.0100, 1
  %456 = sext i32 %455 to i64
  %457 = add i32 %.098, -1
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %456, i64 %458
  %460 = load i8, i8* %459, align 1
  %461 = icmp eq i8 %460, 49
  store i1 %461, i1* %5, align 1
  %462 = load i32, i32* @x, align 4
  %463 = load i32, i32* @y, align 4
  %464 = add i32 %462, -1
  %465 = mul i32 %464, %462
  %466 = and i32 %465, 1
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %468, %467
  %470 = select i1 %469, i32 -584912140, i32 -894568344
  br label %.backedge

471:                                              ; preds = %16
  %.0..0..0.93 = load volatile i1, i1* %5, align 1
  %472 = select i1 %.0..0..0.93, i32 -1933192619, i32 -501256911
  br label %.backedge

473:                                              ; preds = %16
  %474 = add i32 %.0100, 1
  %475 = sext i32 %474 to i64
  %476 = sext i32 %.098 to i64
  %477 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %475, i64 %476
  %478 = load i8, i8* %477, align 1
  %479 = icmp eq i8 %478, 49
  %480 = select i1 %479, i32 1005070199, i32 -501256911
  br label %.backedge

481:                                              ; preds = %16
  %.neg116 = add i32 %.0100, 2
  %482 = sext i32 %.neg116 to i64
  %483 = add i32 %.098, -1
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %482, i64 %484
  %486 = load i8, i8* %485, align 1
  %487 = icmp eq i8 %486, 49
  %488 = select i1 %487, i32 -10518275, i32 -501256911
  br label %.backedge

489:                                              ; preds = %16
  %puts115 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.backedge

490:                                              ; preds = %16
  %491 = sext i32 %.0100 to i64
  %492 = add i32 %.098, 1
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %491, i64 %493
  %495 = load i8, i8* %494, align 1
  %496 = icmp eq i8 %495, 49
  %497 = select i1 %496, i32 -703171654, i32 131359646
  br label %.backedge

498:                                              ; preds = %16
  %499 = add i32 %.0100, 1
  %500 = sext i32 %499 to i64
  %501 = add i32 %.098, 1
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %500, i64 %502
  %504 = load i8, i8* %503, align 1
  %505 = icmp eq i8 %504, 49
  %506 = select i1 %505, i32 161591623, i32 131359646
  br label %.backedge

507:                                              ; preds = %16
  %508 = add i32 %.0100, 1
  %509 = sext i32 %508 to i64
  %.neg114 = add i32 %.098, 2
  %510 = sext i32 %.neg114 to i64
  %511 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %509, i64 %510
  %512 = load i8, i8* %511, align 1
  %513 = icmp eq i8 %512, 49
  %514 = select i1 %513, i32 -1692096018, i32 131359646
  br label %.backedge

515:                                              ; preds = %16
  %puts113 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i64 0, i64 0))
  br label %.backedge

516:                                              ; preds = %16
  %517 = load i32, i32* @x, align 4
  %518 = load i32, i32* @y, align 4
  %519 = add i32 %517, -1
  %520 = mul i32 %519, %517
  %521 = and i32 %520, 1
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %518, 10
  %524 = or i1 %523, %522
  %525 = select i1 %524, i32 899514658, i32 -1367807707
  br label %.backedge

526:                                              ; preds = %16
  %527 = add i32 %.0100, 1
  %528 = sext i32 %527 to i64
  %529 = sext i32 %.098 to i64
  %530 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %528, i64 %529
  %531 = load i8, i8* %530, align 1
  %532 = icmp eq i8 %531, 49
  store i1 %532, i1* %4, align 1
  %533 = load i32, i32* @x, align 4
  %534 = load i32, i32* @y, align 4
  %535 = add i32 %533, -1
  %536 = mul i32 %535, %533
  %537 = and i32 %536, 1
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %539, %538
  %541 = select i1 %540, i32 1281285153, i32 -1367807707
  br label %.backedge

542:                                              ; preds = %16
  %.0..0..0.94 = load volatile i1, i1* %4, align 1
  %543 = select i1 %.0..0..0.94, i32 -982930117, i32 1684976059
  br label %.backedge

544:                                              ; preds = %16
  %545 = load i32, i32* @x, align 4
  %546 = load i32, i32* @y, align 4
  %547 = add i32 %545, -1
  %548 = mul i32 %547, %545
  %549 = and i32 %548, 1
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %546, 10
  %552 = or i1 %551, %550
  %553 = select i1 %552, i32 651681820, i32 1370281132
  br label %.backedge

554:                                              ; preds = %16
  %555 = add i32 %.0100, 1
  %556 = sext i32 %555 to i64
  %557 = add i32 %.098, 1
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %556, i64 %558
  %560 = load i8, i8* %559, align 1
  %561 = icmp eq i8 %560, 49
  store i1 %561, i1* %3, align 1
  %562 = load i32, i32* @x, align 4
  %563 = load i32, i32* @y, align 4
  %564 = add i32 %562, -1
  %565 = mul i32 %564, %562
  %566 = and i32 %565, 1
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %568, %567
  %570 = select i1 %569, i32 134064001, i32 1370281132
  br label %.backedge

571:                                              ; preds = %16
  %.0..0..0.95 = load volatile i1, i1* %3, align 1
  %572 = select i1 %.0..0..0.95, i32 1525675779, i32 1684976059
  br label %.backedge

573:                                              ; preds = %16
  %.neg = add i32 %.0100, 2
  %574 = sext i32 %.neg to i64
  %575 = add i32 %.098, 1
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %574, i64 %576
  %578 = load i8, i8* %577, align 1
  %579 = icmp eq i8 %578, 49
  %580 = select i1 %579, i32 -1580708089, i32 1684976059
  br label %.backedge

581:                                              ; preds = %16
  %puts112 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.3, i64 0, i64 0))
  br label %.backedge

582:                                              ; preds = %16
  %583 = load i32, i32* @x, align 4
  %584 = load i32, i32* @y, align 4
  %585 = add i32 %583, -1
  %586 = mul i32 %585, %583
  %587 = and i32 %586, 1
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %589, %588
  %591 = select i1 %590, i32 -1584276171, i32 1578004131
  br label %.backedge

592:                                              ; preds = %16
  %593 = sext i32 %.0100 to i64
  %594 = add i32 %.098, 1
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %593, i64 %595
  %597 = load i8, i8* %596, align 1
  %598 = icmp eq i8 %597, 49
  store i1 %598, i1* %2, align 1
  %599 = load i32, i32* @x, align 4
  %600 = load i32, i32* @y, align 4
  %601 = add i32 %599, -1
  %602 = mul i32 %601, %599
  %603 = and i32 %602, 1
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %605, %604
  %607 = select i1 %606, i32 2100225851, i32 1578004131
  br label %.backedge

608:                                              ; preds = %16
  %.0..0..0.96 = load volatile i1, i1* %2, align 1
  %609 = select i1 %.0..0..0.96, i32 -1632110276, i32 748528843
  br label %.backedge

610:                                              ; preds = %16
  %611 = add i32 %.0100, 1
  %612 = sext i32 %611 to i64
  %613 = add i32 %.098, -1
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %612, i64 %614
  %616 = load i8, i8* %615, align 1
  %617 = icmp eq i8 %616, 49
  %618 = select i1 %617, i32 -1164707101, i32 748528843
  br label %.backedge

619:                                              ; preds = %16
  %620 = load i32, i32* @x, align 4
  %621 = load i32, i32* @y, align 4
  %622 = add i32 %620, -1
  %623 = mul i32 %622, %620
  %624 = and i32 %623, 1
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %626, %625
  %628 = select i1 %627, i32 -186563128, i32 -1252624329
  br label %.backedge

629:                                              ; preds = %16
  %630 = add i32 %.0100, 1
  %631 = sext i32 %630 to i64
  %632 = sext i32 %.098 to i64
  %633 = getelementptr inbounds [12 x [12 x i8]], [12 x [12 x i8]]* %13, i64 0, i64 %631, i64 %632
  %634 = load i8, i8* %633, align 1
  %635 = icmp eq i8 %634, 49
  store i1 %635, i1* %1, align 1
  %636 = load i32, i32* @x, align 4
  %637 = load i32, i32* @y, align 4
  %638 = add i32 %636, -1
  %639 = mul i32 %638, %636
  %640 = and i32 %639, 1
  %641 = icmp eq i32 %640, 0
  %642 = icmp slt i32 %637, 10
  %643 = or i1 %642, %641
  %644 = select i1 %643, i32 580917499, i32 -1252624329
  br label %.backedge

645:                                              ; preds = %16
  %.0..0..0.97 = load volatile i1, i1* %1, align 1
  %646 = select i1 %.0..0..0.97, i32 223695328, i32 748528843
  br label %.backedge

647:                                              ; preds = %16
  %648 = load i32, i32* @x, align 4
  %649 = load i32, i32* @y, align 4
  %650 = add i32 %648, -1
  %651 = mul i32 %650, %648
  %652 = and i32 %651, 1
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %649, 10
  %655 = or i1 %654, %653
  %656 = select i1 %655, i32 -1233120601, i32 526735237
  br label %.backedge

657:                                              ; preds = %16
  %puts111 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.2, i64 0, i64 0))
  %658 = load i32, i32* @x, align 4
  %659 = load i32, i32* @y, align 4
  %660 = add i32 %658, -1
  %661 = mul i32 %660, %658
  %662 = and i32 %661, 1
  %663 = icmp eq i32 %662, 0
  %664 = icmp slt i32 %659, 10
  %665 = or i1 %664, %663
  %666 = select i1 %665, i32 -35829515, i32 526735237
  br label %.backedge

667:                                              ; preds = %16
  br label %.backedge

668:                                              ; preds = %16
  br label %.backedge

669:                                              ; preds = %16
  ret i32 0

670:                                              ; preds = %16
  br label %.backedge

671:                                              ; preds = %16
  br label %.backedge

672:                                              ; preds = %16
  br label %.backedge

673:                                              ; preds = %16
  %674 = add i32 %.0106, 1
  br label %.backedge

675:                                              ; preds = %16
  br label %.backedge

676:                                              ; preds = %16
  br label %.backedge

677:                                              ; preds = %16
  br label %.backedge

678:                                              ; preds = %16
  br label %.backedge

679:                                              ; preds = %16
  br label %.backedge

680:                                              ; preds = %16
  br label %.backedge

681:                                              ; preds = %16
  br label %.backedge

682:                                              ; preds = %16
  br label %.backedge

683:                                              ; preds = %16
  %puts110 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.8, i64 0, i64 0))
  br label %.backedge

684:                                              ; preds = %16
  br label %.backedge

685:                                              ; preds = %16
  br label %.backedge

686:                                              ; preds = %16
  br label %.backedge

687:                                              ; preds = %16
  br label %.backedge

688:                                              ; preds = %16
  br label %.backedge

689:                                              ; preds = %16
  br label %.backedge

690:                                              ; preds = %16
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.2, i64 0, i64 0))
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
