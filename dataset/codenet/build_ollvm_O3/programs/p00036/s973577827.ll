; ModuleID = 'build_ollvm/programs/p00036/s973577827.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s973577827.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s973577827.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i8, align 1
  %8 = alloca [10 x [11 x i8]], align 16
  br label %9

9:                                                ; preds = %.backedge, %0
  %.066 = phi i8 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.0 = phi i32 [ -400837791, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -400837791, label %10
    i32 -2077644060, label %11
    i32 -1518328451, label %14
    i32 -717003862, label %15
    i32 -1010314935, label %18
    i32 -726111055, label %22
    i32 -306092452, label %23
    i32 -1292909902, label %24
    i32 -1752238576, label %34
    i32 -1743165214, label %45
    i32 -1451582196, label %46
    i32 1437004553, label %47
    i32 917305690, label %57
    i32 1107545467, label %68
    i32 -1008124499, label %70
    i32 -596527987, label %71
    i32 1644110950, label %74
    i32 -99452861, label %84
    i32 351781250, label %102
    i32 1959911769, label %103
    i32 1894700832, label %105
    i32 1679023645, label %115
    i32 856555178, label %125
    i32 1710270566, label %126
    i32 -1287203057, label %128
    i32 629877454, label %137
    i32 -884963044, label %147
    i32 -1078906845, label %157
    i32 -513377346, label %158
    i32 -1179637192, label %159
    i32 -280491847, label %169
    i32 600684606, label %180
    i32 -592100636, label %182
    i32 -1223101222, label %192
    i32 -193446793, label %202
    i32 -39716565, label %203
    i32 296430968, label %213
    i32 -2102930212, label %224
    i32 -786037472, label %226
    i32 1118496865, label %233
    i32 -1802338196, label %241
    i32 -810010067, label %251
    i32 -1229705925, label %261
    i32 1265670593, label %262
    i32 -827227352, label %271
    i32 776333440, label %281
    i32 1438903634, label %291
    i32 -2021484323, label %292
    i32 1192124880, label %300
    i32 1345034031, label %301
    i32 1737415720, label %311
    i32 1860781588, label %328
    i32 -434064666, label %330
    i32 848472842, label %331
    i32 419481648, label %341
    i32 2096404927, label %359
    i32 1509776335, label %361
    i32 1801267998, label %362
    i32 -1577031247, label %372
    i32 -457069756, label %388
    i32 1088990091, label %390
    i32 -1886600417, label %400
    i32 -2097770527, label %410
    i32 -1693845172, label %411
    i32 56646474, label %418
    i32 -1376964633, label %428
    i32 -691745039, label %438
    i32 246968072, label %439
    i32 1750665618, label %449
    i32 -160562883, label %459
    i32 249259592, label %460
    i32 220550480, label %461
    i32 -943334334, label %462
    i32 1294409436, label %463
    i32 -1402498757, label %464
    i32 1487771416, label %474
    i32 1204640920, label %484
    i32 -1983237606, label %485
    i32 44611631, label %486
    i32 1867096276, label %488
    i32 -1792510646, label %489
    i32 341285498, label %490
    i32 47971617, label %492
    i32 890173394, label %494
    i32 -1565420841, label %495
    i32 1653954172, label %505
    i32 629426705, label %515
    i32 -1413067070, label %516
    i32 1884639106, label %518
    i32 700544745, label %528
    i32 24506293, label %540
    i32 1386100431, label %541
    i32 -501070317, label %551
    i32 -1010970513, label %561
    i32 5886707, label %562
    i32 -1501799816, label %564
    i32 1680750483, label %565
    i32 -968913527, label %574
    i32 1856354011, label %575
    i32 92818350, label %576
    i32 -1841601232, label %577
    i32 1248617886, label %578
    i32 -457396637, label %579
    i32 315942905, label %580
    i32 -1304232994, label %581
    i32 724298544, label %582
    i32 -468853170, label %583
    i32 672241522, label %584
    i32 414429570, label %585
    i32 2047802998, label %586
    i32 703587694, label %587
    i32 31017534, label %588
    i32 1416143858, label %589
    i32 1547111908, label %592
  ]

.backedge:                                        ; preds = %9, %592, %589, %588, %587, %586, %585, %584, %583, %582, %581, %580, %579, %578, %577, %576, %575, %574, %565, %564, %562, %551, %541, %540, %528, %518, %516, %515, %505, %495, %494, %492, %490, %489, %488, %486, %485, %484, %474, %464, %463, %462, %461, %460, %459, %449, %439, %438, %428, %418, %411, %410, %400, %390, %388, %372, %362, %361, %359, %341, %331, %330, %328, %311, %301, %300, %292, %291, %281, %271, %262, %261, %251, %241, %233, %226, %224, %213, %203, %202, %192, %182, %180, %169, %159, %158, %157, %147, %137, %128, %126, %125, %115, %105, %103, %102, %84, %74, %71, %70, %68, %57, %47, %46, %45, %34, %24, %23, %22, %18, %15, %14, %11, %10
  %.066.be = phi i8 [ %.066, %9 ], [ %.066, %592 ], [ %.066, %589 ], [ %.066, %588 ], [ %.066, %587 ], [ %.066, %586 ], [ 65, %585 ], [ 71, %584 ], [ %.066, %583 ], [ %.066, %582 ], [ %.066, %581 ], [ 66, %580 ], [ 67, %579 ], [ %.066, %578 ], [ %.066, %577 ], [ %.066, %576 ], [ %.066, %575 ], [ %.066, %574 ], [ %.066, %565 ], [ %.066, %564 ], [ %.066, %562 ], [ %.066, %551 ], [ %.066, %541 ], [ %.066, %540 ], [ %.066, %528 ], [ %.066, %518 ], [ %.066, %516 ], [ %.066, %515 ], [ %.066, %505 ], [ %.066, %495 ], [ %.066, %494 ], [ %.066, %492 ], [ %.066, %490 ], [ %.066, %489 ], [ %.066, %488 ], [ %.066, %486 ], [ %.066, %485 ], [ %.066, %484 ], [ %.066, %474 ], [ %.066, %464 ], [ %.066, %463 ], [ %.066, %462 ], [ %.066, %461 ], [ %.066, %460 ], [ %.066, %459 ], [ %.066, %449 ], [ %.066, %439 ], [ %.066, %438 ], [ 65, %428 ], [ %.066, %418 ], [ %.066, %411 ], [ %.066, %410 ], [ 71, %400 ], [ %.066, %390 ], [ %.066, %388 ], [ %.066, %372 ], [ %.066, %362 ], [ 70, %361 ], [ %.066, %359 ], [ %.066, %341 ], [ %.066, %331 ], [ 69, %330 ], [ %.066, %328 ], [ %.066, %311 ], [ %.066, %301 ], [ 68, %300 ], [ %.066, %292 ], [ %.066, %291 ], [ 66, %281 ], [ %.066, %271 ], [ %.066, %262 ], [ %.066, %261 ], [ 67, %251 ], [ %.066, %241 ], [ %.066, %233 ], [ %.066, %226 ], [ %.066, %224 ], [ %.066, %213 ], [ %.066, %203 ], [ %.066, %202 ], [ %.066, %192 ], [ %.066, %182 ], [ %.066, %180 ], [ %.066, %169 ], [ %.066, %159 ], [ %.066, %158 ], [ %.066, %157 ], [ %.066, %147 ], [ %.066, %137 ], [ %.066, %128 ], [ %.066, %126 ], [ %.066, %125 ], [ %.066, %115 ], [ %.066, %105 ], [ %.066, %103 ], [ %.066, %102 ], [ %.066, %84 ], [ %.066, %74 ], [ %.066, %71 ], [ %.066, %70 ], [ %.066, %68 ], [ %.066, %57 ], [ %.066, %47 ], [ %.066, %46 ], [ %.066, %45 ], [ %.066, %34 ], [ %.066, %24 ], [ %.066, %23 ], [ %.066, %22 ], [ %.066, %18 ], [ %.066, %15 ], [ %.066, %14 ], [ %.066, %11 ], [ 45, %10 ]
  %.064.be = phi i32 [ %.064, %9 ], [ %.064, %592 ], [ %.064, %589 ], [ %.064, %588 ], [ %.064, %587 ], [ %.064, %586 ], [ %.064, %585 ], [ %.064, %584 ], [ %.064, %583 ], [ %.064, %582 ], [ %.064, %581 ], [ %.064, %580 ], [ %.064, %579 ], [ %.064, %578 ], [ %.064, %577 ], [ %.064, %576 ], [ %.064, %575 ], [ %.064, %574 ], [ %.064, %565 ], [ %.064, %564 ], [ %563, %562 ], [ %.064, %551 ], [ %.064, %541 ], [ %.064, %540 ], [ %.064, %528 ], [ %.064, %518 ], [ %.064, %516 ], [ %.064, %515 ], [ %.064, %505 ], [ %.064, %495 ], [ %.064, %494 ], [ %.064, %492 ], [ %.064, %490 ], [ %.064, %489 ], [ %.064, %488 ], [ %.064, %486 ], [ %.064, %485 ], [ %.064, %484 ], [ %.064, %474 ], [ %.064, %464 ], [ %.064, %463 ], [ %.064, %462 ], [ %.064, %461 ], [ %.064, %460 ], [ %.064, %459 ], [ %.064, %449 ], [ %.064, %439 ], [ %.064, %438 ], [ %.064, %428 ], [ %.064, %418 ], [ %.064, %411 ], [ %.064, %410 ], [ %.064, %400 ], [ %.064, %390 ], [ %.064, %388 ], [ %.064, %372 ], [ %.064, %362 ], [ %.064, %361 ], [ %.064, %359 ], [ %.064, %341 ], [ %.064, %331 ], [ %.064, %330 ], [ %.064, %328 ], [ %.064, %311 ], [ %.064, %301 ], [ %.064, %300 ], [ %.064, %292 ], [ %.064, %291 ], [ %.064, %281 ], [ %.064, %271 ], [ %.064, %262 ], [ %.064, %261 ], [ %.064, %251 ], [ %.064, %241 ], [ %.064, %233 ], [ %.064, %226 ], [ %.064, %224 ], [ %.064, %213 ], [ %.064, %203 ], [ %.064, %202 ], [ %.064, %192 ], [ %.064, %182 ], [ %.064, %180 ], [ %.064, %169 ], [ %.064, %159 ], [ %.064, %158 ], [ %.064, %157 ], [ %.064, %147 ], [ %.064, %137 ], [ %.064, %128 ], [ %.064, %126 ], [ %.064, %125 ], [ %.064, %115 ], [ %.064, %105 ], [ %.064, %103 ], [ %.064, %102 ], [ %.064, %84 ], [ %.064, %74 ], [ %.064, %71 ], [ %.064, %70 ], [ %.064, %68 ], [ %.064, %57 ], [ %.064, %47 ], [ %.064, %46 ], [ %.064, %45 ], [ %35, %34 ], [ %.064, %24 ], [ %.064, %23 ], [ %.064, %22 ], [ %.064, %18 ], [ %.064, %15 ], [ %.064, %14 ], [ %.064, %11 ], [ 0, %10 ]
  %.062.be = phi i32 [ %.062, %9 ], [ %.062, %592 ], [ %.062, %589 ], [ %.062, %588 ], [ %.062, %587 ], [ %.062, %586 ], [ %.062, %585 ], [ %.062, %584 ], [ %.062, %583 ], [ %.062, %582 ], [ %.062, %581 ], [ %.062, %580 ], [ %.062, %579 ], [ %.062, %578 ], [ %.062, %577 ], [ %.062, %576 ], [ %.062, %575 ], [ %.062, %574 ], [ %.062, %565 ], [ %.062, %564 ], [ %.062, %562 ], [ %.062, %551 ], [ %.062, %541 ], [ %.062, %540 ], [ %.062, %528 ], [ %.062, %518 ], [ %.062, %516 ], [ %.062, %515 ], [ %.062, %505 ], [ %.062, %495 ], [ %.062, %494 ], [ %.062, %492 ], [ %.062, %490 ], [ %.062, %489 ], [ %.062, %488 ], [ %.062, %486 ], [ %.062, %485 ], [ %.062, %484 ], [ %.062, %474 ], [ %.062, %464 ], [ %.062, %463 ], [ %.062, %462 ], [ %.062, %461 ], [ %.062, %460 ], [ %.062, %459 ], [ %.062, %449 ], [ %.062, %439 ], [ %.062, %438 ], [ %.062, %428 ], [ %.062, %418 ], [ %.062, %411 ], [ %.062, %410 ], [ %.062, %400 ], [ %.062, %390 ], [ %.062, %388 ], [ %.062, %372 ], [ %.062, %362 ], [ %.062, %361 ], [ %.062, %359 ], [ %.062, %341 ], [ %.062, %331 ], [ %.062, %330 ], [ %.062, %328 ], [ %.062, %311 ], [ %.062, %301 ], [ %.062, %300 ], [ %.062, %292 ], [ %.062, %291 ], [ %.062, %281 ], [ %.062, %271 ], [ %.062, %262 ], [ %.062, %261 ], [ %.062, %251 ], [ %.062, %241 ], [ %.062, %233 ], [ %.062, %226 ], [ %.062, %224 ], [ %.062, %213 ], [ %.062, %203 ], [ %.062, %202 ], [ %.062, %192 ], [ %.062, %182 ], [ %.062, %180 ], [ %.062, %169 ], [ %.062, %159 ], [ %.062, %158 ], [ %.062, %157 ], [ %.062, %147 ], [ %.062, %137 ], [ %.062, %128 ], [ %.062, %126 ], [ %.062, %125 ], [ %.062, %115 ], [ %.062, %105 ], [ %.062, %103 ], [ %.062, %102 ], [ %.062, %84 ], [ %.062, %74 ], [ %.062, %71 ], [ %.062, %70 ], [ %.062, %68 ], [ %.062, %57 ], [ %.062, %47 ], [ %.062, %46 ], [ %.062, %45 ], [ %.062, %34 ], [ %.062, %24 ], [ %.062, %23 ], [ %.neg78, %22 ], [ %.062, %18 ], [ %.062, %15 ], [ 0, %14 ], [ %.062, %11 ], [ %.062, %10 ]
  %.060.be = phi i32 [ %.060, %9 ], [ %.060, %592 ], [ %.060, %589 ], [ %.060, %588 ], [ %.060, %587 ], [ %.060, %586 ], [ %.060, %585 ], [ %.060, %584 ], [ %.060, %583 ], [ %.060, %582 ], [ %.060, %581 ], [ %.060, %580 ], [ %.060, %579 ], [ %.060, %578 ], [ %.060, %577 ], [ %.060, %576 ], [ %.060, %575 ], [ %.060, %574 ], [ %.060, %565 ], [ %.060, %564 ], [ %.060, %562 ], [ %.060, %551 ], [ %.060, %541 ], [ %.060, %540 ], [ %.060, %528 ], [ %.060, %518 ], [ %.060, %516 ], [ %.060, %515 ], [ %.060, %505 ], [ %.060, %495 ], [ %.060, %494 ], [ %.060, %492 ], [ %.060, %490 ], [ %.060, %489 ], [ %.060, %488 ], [ %.060, %486 ], [ %.060, %485 ], [ %.060, %484 ], [ %.060, %474 ], [ %.060, %464 ], [ %.060, %463 ], [ %.060, %462 ], [ %.060, %461 ], [ %.060, %460 ], [ %.060, %459 ], [ %.060, %449 ], [ %.060, %439 ], [ %.060, %438 ], [ %.060, %428 ], [ %.060, %418 ], [ %.060, %411 ], [ %.060, %410 ], [ %.060, %400 ], [ %.060, %390 ], [ %.060, %388 ], [ %.060, %372 ], [ %.060, %362 ], [ %.060, %361 ], [ %.060, %359 ], [ %.060, %341 ], [ %.060, %331 ], [ %.060, %330 ], [ %.060, %328 ], [ %.060, %311 ], [ %.060, %301 ], [ %.060, %300 ], [ %.060, %292 ], [ %.060, %291 ], [ %.060, %281 ], [ %.060, %271 ], [ %.060, %262 ], [ %.060, %261 ], [ %.060, %251 ], [ %.060, %241 ], [ %.060, %233 ], [ %.060, %226 ], [ %.060, %224 ], [ %.060, %213 ], [ %.060, %203 ], [ %.060, %202 ], [ %.060, %192 ], [ %.060, %182 ], [ %.060, %180 ], [ %.060, %169 ], [ %.060, %159 ], [ %.060, %158 ], [ %.060, %157 ], [ %.060, %147 ], [ %.060, %137 ], [ %.060, %128 ], [ %127, %126 ], [ %.060, %125 ], [ %.060, %115 ], [ %.060, %105 ], [ %.060, %103 ], [ %.060, %102 ], [ %.060, %84 ], [ %.060, %74 ], [ %.060, %71 ], [ %.060, %70 ], [ %.060, %68 ], [ %.060, %57 ], [ %.060, %47 ], [ 0, %46 ], [ %.060, %45 ], [ %.060, %34 ], [ %.060, %24 ], [ %.060, %23 ], [ %.060, %22 ], [ %.060, %18 ], [ %.060, %15 ], [ %.060, %14 ], [ %.060, %11 ], [ %.060, %10 ]
  %.058.be = phi i32 [ %.058, %9 ], [ %.058, %592 ], [ %.058, %589 ], [ %.058, %588 ], [ %.058, %587 ], [ %.058, %586 ], [ %.058, %585 ], [ %.058, %584 ], [ %.058, %583 ], [ %.058, %582 ], [ %.058, %581 ], [ %.058, %580 ], [ %.058, %579 ], [ %.058, %578 ], [ %.058, %577 ], [ %.058, %576 ], [ %.058, %575 ], [ %.058, %574 ], [ %.058, %565 ], [ %.058, %564 ], [ %.058, %562 ], [ %.058, %551 ], [ %.058, %541 ], [ %.058, %540 ], [ %.058, %528 ], [ %.058, %518 ], [ %.058, %516 ], [ %.058, %515 ], [ %.058, %505 ], [ %.058, %495 ], [ %.058, %494 ], [ %.058, %492 ], [ %.058, %490 ], [ %.058, %489 ], [ %.058, %488 ], [ %.058, %486 ], [ %.058, %485 ], [ %.058, %484 ], [ %.058, %474 ], [ %.058, %464 ], [ %.058, %463 ], [ %.058, %462 ], [ %.058, %461 ], [ %.058, %460 ], [ %.058, %459 ], [ %.058, %449 ], [ %.058, %439 ], [ %.058, %438 ], [ %.058, %428 ], [ %.058, %418 ], [ %.058, %411 ], [ %.058, %410 ], [ %.058, %400 ], [ %.058, %390 ], [ %.058, %388 ], [ %.058, %372 ], [ %.058, %362 ], [ %.058, %361 ], [ %.058, %359 ], [ %.058, %341 ], [ %.058, %331 ], [ %.058, %330 ], [ %.058, %328 ], [ %.058, %311 ], [ %.058, %301 ], [ %.058, %300 ], [ %.058, %292 ], [ %.058, %291 ], [ %.058, %281 ], [ %.058, %271 ], [ %.058, %262 ], [ %.058, %261 ], [ %.058, %251 ], [ %.058, %241 ], [ %.058, %233 ], [ %.058, %226 ], [ %.058, %224 ], [ %.058, %213 ], [ %.058, %203 ], [ %.058, %202 ], [ %.058, %192 ], [ %.058, %182 ], [ %.058, %180 ], [ %.058, %169 ], [ %.058, %159 ], [ %.058, %158 ], [ %.058, %157 ], [ %.058, %147 ], [ %.058, %137 ], [ %.058, %128 ], [ %.058, %126 ], [ %.058, %125 ], [ %.058, %115 ], [ %.058, %105 ], [ %104, %103 ], [ %.058, %102 ], [ %.058, %84 ], [ %.058, %74 ], [ %.058, %71 ], [ 0, %70 ], [ %.058, %68 ], [ %.058, %57 ], [ %.058, %47 ], [ %.058, %46 ], [ %.058, %45 ], [ %.058, %34 ], [ %.058, %24 ], [ %.058, %23 ], [ %.058, %22 ], [ %.058, %18 ], [ %.058, %15 ], [ %.058, %14 ], [ %.058, %11 ], [ %.058, %10 ]
  %.056.be = phi i32 [ %.056, %9 ], [ %.056, %592 ], [ %.056, %589 ], [ %.056, %588 ], [ %.056, %587 ], [ %.056, %586 ], [ %.056, %585 ], [ %.056, %584 ], [ %.056, %583 ], [ %.056, %582 ], [ %.056, %581 ], [ %.056, %580 ], [ %.056, %579 ], [ %.056, %578 ], [ %.056, %577 ], [ %.056, %576 ], [ %.056, %575 ], [ %.056, %574 ], [ %.056, %565 ], [ %.056, %564 ], [ %.056, %562 ], [ %.056, %551 ], [ %.056, %541 ], [ %.056, %540 ], [ %.056, %528 ], [ %.056, %518 ], [ %517, %516 ], [ %.056, %515 ], [ %.056, %505 ], [ %.056, %495 ], [ %.056, %494 ], [ %.056, %492 ], [ %.056, %490 ], [ %.056, %489 ], [ %.056, %488 ], [ %.056, %486 ], [ %.056, %485 ], [ %.056, %484 ], [ %.056, %474 ], [ %.056, %464 ], [ %.056, %463 ], [ %.056, %462 ], [ %.056, %461 ], [ %.056, %460 ], [ %.056, %459 ], [ %.056, %449 ], [ %.056, %439 ], [ %.056, %438 ], [ %.056, %428 ], [ %.056, %418 ], [ %.056, %411 ], [ %.056, %410 ], [ %.056, %400 ], [ %.056, %390 ], [ %.056, %388 ], [ %.056, %372 ], [ %.056, %362 ], [ %.056, %361 ], [ %.056, %359 ], [ %.056, %341 ], [ %.056, %331 ], [ %.056, %330 ], [ %.056, %328 ], [ %.056, %311 ], [ %.056, %301 ], [ %.056, %300 ], [ %.056, %292 ], [ %.056, %291 ], [ %.056, %281 ], [ %.056, %271 ], [ %.056, %262 ], [ %.056, %261 ], [ %.056, %251 ], [ %.056, %241 ], [ %.056, %233 ], [ %.056, %226 ], [ %.056, %224 ], [ %.056, %213 ], [ %.056, %203 ], [ %.056, %202 ], [ %.056, %192 ], [ %.056, %182 ], [ %.056, %180 ], [ %.056, %169 ], [ %.056, %159 ], [ 0, %158 ], [ %.056, %157 ], [ %.056, %147 ], [ %.056, %137 ], [ %.056, %128 ], [ %.056, %126 ], [ %.056, %125 ], [ %.056, %115 ], [ %.056, %105 ], [ %.056, %103 ], [ %.056, %102 ], [ %.056, %84 ], [ %.056, %74 ], [ %.056, %71 ], [ %.056, %70 ], [ %.056, %68 ], [ %.056, %57 ], [ %.056, %47 ], [ %.056, %46 ], [ %.056, %45 ], [ %.056, %34 ], [ %.056, %24 ], [ %.056, %23 ], [ %.056, %22 ], [ %.056, %18 ], [ %.056, %15 ], [ %.056, %14 ], [ %.056, %11 ], [ %.056, %10 ]
  %.054.be = phi i32 [ %.054, %9 ], [ %.054, %592 ], [ %.054, %589 ], [ %.054, %588 ], [ %.054, %587 ], [ %.054, %586 ], [ %.054, %585 ], [ %.054, %584 ], [ %.054, %583 ], [ %.054, %582 ], [ %.054, %581 ], [ %.054, %580 ], [ %.054, %579 ], [ %.054, %578 ], [ 0, %577 ], [ %.054, %576 ], [ %.054, %575 ], [ %.054, %574 ], [ %.054, %565 ], [ %.054, %564 ], [ %.054, %562 ], [ %.054, %551 ], [ %.054, %541 ], [ %.054, %540 ], [ %.054, %528 ], [ %.054, %518 ], [ %.054, %516 ], [ %.054, %515 ], [ %.054, %505 ], [ %.054, %495 ], [ %.054, %494 ], [ %.054, %492 ], [ %491, %490 ], [ %.054, %489 ], [ %.054, %488 ], [ %.054, %486 ], [ %.054, %485 ], [ %.054, %484 ], [ %.054, %474 ], [ %.054, %464 ], [ %.054, %463 ], [ %.054, %462 ], [ %.054, %461 ], [ %.054, %460 ], [ %.054, %459 ], [ %.054, %449 ], [ %.054, %439 ], [ %.054, %438 ], [ %.054, %428 ], [ %.054, %418 ], [ %.054, %411 ], [ %.054, %410 ], [ %.054, %400 ], [ %.054, %390 ], [ %.054, %388 ], [ %.054, %372 ], [ %.054, %362 ], [ %.054, %361 ], [ %.054, %359 ], [ %.054, %341 ], [ %.054, %331 ], [ %.054, %330 ], [ %.054, %328 ], [ %.054, %311 ], [ %.054, %301 ], [ %.054, %300 ], [ %.054, %292 ], [ %.054, %291 ], [ %.054, %281 ], [ %.054, %271 ], [ %.054, %262 ], [ %.054, %261 ], [ %.054, %251 ], [ %.054, %241 ], [ %.054, %233 ], [ %.054, %226 ], [ %.054, %224 ], [ %.054, %213 ], [ %.054, %203 ], [ %.054, %202 ], [ 0, %192 ], [ %.054, %182 ], [ %.054, %180 ], [ %.054, %169 ], [ %.054, %159 ], [ %.054, %158 ], [ %.054, %157 ], [ %.054, %147 ], [ %.054, %137 ], [ %.054, %128 ], [ %.054, %126 ], [ %.054, %125 ], [ %.054, %115 ], [ %.054, %105 ], [ %.054, %103 ], [ %.054, %102 ], [ %.054, %84 ], [ %.054, %74 ], [ %.054, %71 ], [ %.054, %70 ], [ %.054, %68 ], [ %.054, %57 ], [ %.054, %47 ], [ %.054, %46 ], [ %.054, %45 ], [ %.054, %34 ], [ %.054, %24 ], [ %.054, %23 ], [ %.054, %22 ], [ %.054, %18 ], [ %.054, %15 ], [ %.054, %14 ], [ %.054, %11 ], [ %.054, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ -501070317, %592 ], [ 700544745, %589 ], [ 1653954172, %588 ], [ 1487771416, %587 ], [ 1750665618, %586 ], [ -1376964633, %585 ], [ -1886600417, %584 ], [ -1577031247, %583 ], [ 419481648, %582 ], [ 1737415720, %581 ], [ 776333440, %580 ], [ -810010067, %579 ], [ 296430968, %578 ], [ -1223101222, %577 ], [ -280491847, %576 ], [ -884963044, %575 ], [ 1679023645, %574 ], [ -99452861, %565 ], [ 917305690, %564 ], [ -1752238576, %562 ], [ %560, %551 ], [ %550, %541 ], [ -400837791, %540 ], [ %539, %528 ], [ %527, %518 ], [ -1179637192, %516 ], [ -1413067070, %515 ], [ %514, %505 ], [ %504, %495 ], [ 1884639106, %494 ], [ %493, %492 ], [ -39716565, %490 ], [ 341285498, %489 ], [ 47971617, %488 ], [ %487, %486 ], [ 44611631, %485 ], [ -1983237606, %484 ], [ %483, %474 ], [ %473, %464 ], [ -1402498757, %463 ], [ 1294409436, %462 ], [ -943334334, %461 ], [ 220550480, %460 ], [ 249259592, %459 ], [ %458, %449 ], [ %448, %439 ], [ 246968072, %438 ], [ %437, %428 ], [ %427, %418 ], [ %417, %411 ], [ 249259592, %410 ], [ %409, %400 ], [ %399, %390 ], [ %389, %388 ], [ %387, %372 ], [ %371, %362 ], [ 220550480, %361 ], [ %360, %359 ], [ %358, %341 ], [ %340, %331 ], [ -943334334, %330 ], [ %329, %328 ], [ %327, %311 ], [ %310, %301 ], [ 1294409436, %300 ], [ %299, %292 ], [ -1402498757, %291 ], [ %290, %281 ], [ %280, %271 ], [ %270, %262 ], [ -1983237606, %261 ], [ %260, %251 ], [ %250, %241 ], [ %240, %233 ], [ %232, %226 ], [ %225, %224 ], [ %223, %213 ], [ %212, %203 ], [ -39716565, %202 ], [ %201, %192 ], [ %191, %182 ], [ %181, %180 ], [ %179, %169 ], [ %168, %159 ], [ -1179637192, %158 ], [ 1386100431, %157 ], [ %156, %147 ], [ %146, %137 ], [ %136, %128 ], [ 1437004553, %126 ], [ 1710270566, %125 ], [ %124, %115 ], [ %114, %105 ], [ -596527987, %103 ], [ 1959911769, %102 ], [ %101, %84 ], [ %83, %74 ], [ %73, %71 ], [ -596527987, %70 ], [ %69, %68 ], [ %67, %57 ], [ %56, %47 ], [ 1437004553, %46 ], [ -2077644060, %45 ], [ %44, %34 ], [ %33, %24 ], [ -1292909902, %23 ], [ -717003862, %22 ], [ -726111055, %18 ], [ %17, %15 ], [ -717003862, %14 ], [ %13, %11 ], [ -2077644060, %10 ]
  br label %9

10:                                               ; preds = %9
  br label %.backedge

11:                                               ; preds = %9
  %12 = icmp slt i32 %.064, 10
  %13 = select i1 %12, i32 -1518328451, i32 -1451582196
  br label %.backedge

14:                                               ; preds = %9
  br label %.backedge

15:                                               ; preds = %9
  %16 = icmp slt i32 %.062, 11
  %17 = select i1 %16, i32 -1010314935, i32 -306092452
  br label %.backedge

18:                                               ; preds = %9
  %19 = sext i32 %.064 to i64
  %20 = sext i32 %.062 to i64
  %21 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %19, i64 %20
  store i8 0, i8* %21, align 1
  br label %.backedge

22:                                               ; preds = %9
  %.neg78 = add i32 %.062, 1
  br label %.backedge

23:                                               ; preds = %9
  br label %.backedge

24:                                               ; preds = %9
  %25 = load i32, i32* @x.1, align 4
  %26 = load i32, i32* @y.2, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 -1752238576, i32 5886707
  br label %.backedge

34:                                               ; preds = %9
  %35 = add i32 %.064, 1
  %36 = load i32, i32* @x.1, align 4
  %37 = load i32, i32* @y.2, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 -1743165214, i32 5886707
  br label %.backedge

45:                                               ; preds = %9
  br label %.backedge

46:                                               ; preds = %9
  br label %.backedge

47:                                               ; preds = %9
  %48 = load i32, i32* @x.1, align 4
  %49 = load i32, i32* @y.2, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 917305690, i32 -1501799816
  br label %.backedge

57:                                               ; preds = %9
  %58 = icmp slt i32 %.060, 8
  store i1 %58, i1* %6, align 1
  %59 = load i32, i32* @x.1, align 4
  %60 = load i32, i32* @y.2, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 1107545467, i32 -1501799816
  br label %.backedge

68:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %69 = select i1 %.0..0..0., i32 -1008124499, i32 -1287203057
  br label %.backedge

70:                                               ; preds = %9
  br label %.backedge

71:                                               ; preds = %9
  %72 = icmp slt i32 %.058, 8
  %73 = select i1 %72, i32 1644110950, i32 1894700832
  br label %.backedge

74:                                               ; preds = %9
  %75 = load i32, i32* @x.1, align 4
  %76 = load i32, i32* @y.2, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 -99452861, i32 1680750483
  br label %.backedge

84:                                               ; preds = %9
  %85 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %7)
  %86 = load i8, i8* %7, align 1
  %87 = icmp ne i8 %86, 48
  %88 = sext i32 %.060 to i64
  %89 = add i32 %.058, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %88, i64 %90
  %92 = zext i1 %87 to i8
  store i8 %92, i8* %91, align 1
  %93 = load i32, i32* @x.1, align 4
  %94 = load i32, i32* @y.2, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 351781250, i32 1680750483
  br label %.backedge

102:                                              ; preds = %9
  br label %.backedge

103:                                              ; preds = %9
  %104 = add i32 %.058, 1
  br label %.backedge

105:                                              ; preds = %9
  %106 = load i32, i32* @x.1, align 4
  %107 = load i32, i32* @y.2, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 1679023645, i32 -968913527
  br label %.backedge

115:                                              ; preds = %9
  %116 = load i32, i32* @x.1, align 4
  %117 = load i32, i32* @y.2, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 856555178, i32 -968913527
  br label %.backedge

125:                                              ; preds = %9
  br label %.backedge

126:                                              ; preds = %9
  %127 = add i32 %.060, 1
  br label %.backedge

128:                                              ; preds = %9
  %129 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %130 = getelementptr i8, i8* %129, i64 -24
  %131 = bitcast i8* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %132
  %134 = bitcast i8* %133 to %"class.std::basic_ios"*
  %135 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEE3eofEv(%"class.std::basic_ios"* %134)
  %136 = select i1 %135, i32 629877454, i32 -513377346
  br label %.backedge

137:                                              ; preds = %9
  %138 = load i32, i32* @x.1, align 4
  %139 = load i32, i32* @y.2, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 -884963044, i32 1856354011
  br label %.backedge

147:                                              ; preds = %9
  %148 = load i32, i32* @x.1, align 4
  %149 = load i32, i32* @y.2, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 -1078906845, i32 1856354011
  br label %.backedge

157:                                              ; preds = %9
  br label %.backedge

158:                                              ; preds = %9
  br label %.backedge

159:                                              ; preds = %9
  %160 = load i32, i32* @x.1, align 4
  %161 = load i32, i32* @y.2, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -280491847, i32 92818350
  br label %.backedge

169:                                              ; preds = %9
  %170 = icmp slt i32 %.056, 8
  store i1 %170, i1* %5, align 1
  %171 = load i32, i32* @x.1, align 4
  %172 = load i32, i32* @y.2, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 600684606, i32 92818350
  br label %.backedge

180:                                              ; preds = %9
  %.0..0..0.49 = load volatile i1, i1* %5, align 1
  %181 = select i1 %.0..0..0.49, i32 -592100636, i32 1884639106
  br label %.backedge

182:                                              ; preds = %9
  %183 = load i32, i32* @x.1, align 4
  %184 = load i32, i32* @y.2, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 -1223101222, i32 -1841601232
  br label %.backedge

192:                                              ; preds = %9
  %193 = load i32, i32* @x.1, align 4
  %194 = load i32, i32* @y.2, align 4
  %195 = add i32 %193, -1
  %196 = mul i32 %195, %193
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %199, %198
  %201 = select i1 %200, i32 -193446793, i32 -1841601232
  br label %.backedge

202:                                              ; preds = %9
  br label %.backedge

203:                                              ; preds = %9
  %204 = load i32, i32* @x.1, align 4
  %205 = load i32, i32* @y.2, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 296430968, i32 1248617886
  br label %.backedge

213:                                              ; preds = %9
  %214 = icmp slt i32 %.054, 8
  store i1 %214, i1* %4, align 1
  %215 = load i32, i32* @x.1, align 4
  %216 = load i32, i32* @y.2, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 -2102930212, i32 1248617886
  br label %.backedge

224:                                              ; preds = %9
  %.0..0..0.50 = load volatile i1, i1* %4, align 1
  %225 = select i1 %.0..0..0.50, i32 -786037472, i32 47971617
  br label %.backedge

226:                                              ; preds = %9
  %227 = sext i32 %.056 to i64
  %.neg76 = add i32 %.054, 1
  %228 = sext i32 %.neg76 to i64
  %229 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %227, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = and i8 %230, 1
  %.not77 = icmp eq i8 %231, 0
  %232 = select i1 %.not77, i32 44611631, i32 1118496865
  br label %.backedge

233:                                              ; preds = %9
  %234 = sext i32 %.056 to i64
  %235 = add i32 %.054, 3
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %234, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = and i8 %238, 1
  %.not75 = icmp eq i8 %239, 0
  %240 = select i1 %.not75, i32 1265670593, i32 -1802338196
  br label %.backedge

241:                                              ; preds = %9
  %242 = load i32, i32* @x.1, align 4
  %243 = load i32, i32* @y.2, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 -810010067, i32 -457396637
  br label %.backedge

251:                                              ; preds = %9
  %252 = load i32, i32* @x.1, align 4
  %253 = load i32, i32* @y.2, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 -1229705925, i32 -457396637
  br label %.backedge

261:                                              ; preds = %9
  br label %.backedge

262:                                              ; preds = %9
  %263 = add i32 %.056, 2
  %264 = sext i32 %263 to i64
  %265 = add i32 %.054, 1
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %264, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = and i8 %268, 1
  %.not74 = icmp eq i8 %269, 0
  %270 = select i1 %.not74, i32 -2021484323, i32 -827227352
  br label %.backedge

271:                                              ; preds = %9
  %272 = load i32, i32* @x.1, align 4
  %273 = load i32, i32* @y.2, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 776333440, i32 315942905
  br label %.backedge

281:                                              ; preds = %9
  %282 = load i32, i32* @x.1, align 4
  %283 = load i32, i32* @y.2, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 1438903634, i32 315942905
  br label %.backedge

291:                                              ; preds = %9
  br label %.backedge

292:                                              ; preds = %9
  %293 = add i32 %.056, 2
  %294 = sext i32 %293 to i64
  %295 = sext i32 %.054 to i64
  %296 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %294, i64 %295
  %297 = load i8, i8* %296, align 1
  %298 = and i8 %297, 1
  %.not73 = icmp eq i8 %298, 0
  %299 = select i1 %.not73, i32 1345034031, i32 1192124880
  br label %.backedge

300:                                              ; preds = %9
  br label %.backedge

301:                                              ; preds = %9
  %302 = load i32, i32* @x.1, align 4
  %303 = load i32, i32* @y.2, align 4
  %304 = add i32 %302, -1
  %305 = mul i32 %304, %302
  %306 = and i32 %305, 1
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %308, %307
  %310 = select i1 %309, i32 1737415720, i32 -1304232994
  br label %.backedge

311:                                              ; preds = %9
  %312 = add i32 %.056, 1
  %313 = sext i32 %312 to i64
  %.neg72 = add i32 %.054, 3
  %314 = sext i32 %.neg72 to i64
  %315 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %313, i64 %314
  %316 = load i8, i8* %315, align 1
  %317 = and i8 %316, 1
  %318 = icmp ne i8 %317, 0
  store i1 %318, i1* %3, align 1
  %319 = load i32, i32* @x.1, align 4
  %320 = load i32, i32* @y.2, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 1860781588, i32 -1304232994
  br label %.backedge

328:                                              ; preds = %9
  %.0..0..0.51 = load volatile i1, i1* %3, align 1
  %329 = select i1 %.0..0..0.51, i32 -434064666, i32 848472842
  br label %.backedge

330:                                              ; preds = %9
  br label %.backedge

331:                                              ; preds = %9
  %332 = load i32, i32* @x.1, align 4
  %333 = load i32, i32* @y.2, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 419481648, i32 724298544
  br label %.backedge

341:                                              ; preds = %9
  %342 = add i32 %.056, 2
  %343 = sext i32 %342 to i64
  %344 = add i32 %.054, 2
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %343, i64 %345
  %347 = load i8, i8* %346, align 1
  %348 = and i8 %347, 1
  %349 = icmp ne i8 %348, 0
  store i1 %349, i1* %2, align 1
  %350 = load i32, i32* @x.1, align 4
  %351 = load i32, i32* @y.2, align 4
  %352 = add i32 %350, -1
  %353 = mul i32 %352, %350
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %356, %355
  %358 = select i1 %357, i32 2096404927, i32 724298544
  br label %.backedge

359:                                              ; preds = %9
  %.0..0..0.52 = load volatile i1, i1* %2, align 1
  %360 = select i1 %.0..0..0.52, i32 1509776335, i32 1801267998
  br label %.backedge

361:                                              ; preds = %9
  br label %.backedge

362:                                              ; preds = %9
  %363 = load i32, i32* @x.1, align 4
  %364 = load i32, i32* @y.2, align 4
  %365 = add i32 %363, -1
  %366 = mul i32 %365, %363
  %367 = and i32 %366, 1
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %369, %368
  %371 = select i1 %370, i32 -1577031247, i32 -468853170
  br label %.backedge

372:                                              ; preds = %9
  %.neg71 = add i32 %.056, 1
  %373 = sext i32 %.neg71 to i64
  %374 = sext i32 %.054 to i64
  %375 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %373, i64 %374
  %376 = load i8, i8* %375, align 1
  %377 = and i8 %376, 1
  %378 = icmp ne i8 %377, 0
  store i1 %378, i1* %1, align 1
  %379 = load i32, i32* @x.1, align 4
  %380 = load i32, i32* @y.2, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 -457069756, i32 -468853170
  br label %.backedge

388:                                              ; preds = %9
  %.0..0..0.53 = load volatile i1, i1* %1, align 1
  %389 = select i1 %.0..0..0.53, i32 1088990091, i32 -1693845172
  br label %.backedge

390:                                              ; preds = %9
  %391 = load i32, i32* @x.1, align 4
  %392 = load i32, i32* @y.2, align 4
  %393 = add i32 %391, -1
  %394 = mul i32 %393, %391
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %397, %396
  %399 = select i1 %398, i32 -1886600417, i32 672241522
  br label %.backedge

400:                                              ; preds = %9
  %401 = load i32, i32* @x.1, align 4
  %402 = load i32, i32* @y.2, align 4
  %403 = add i32 %401, -1
  %404 = mul i32 %403, %401
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %407, %406
  %409 = select i1 %408, i32 -2097770527, i32 672241522
  br label %.backedge

410:                                              ; preds = %9
  br label %.backedge

411:                                              ; preds = %9
  %.neg = add i32 %.056, 1
  %412 = sext i32 %.neg to i64
  %.neg69 = add i32 %.054, 2
  %413 = sext i32 %.neg69 to i64
  %414 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %412, i64 %413
  %415 = load i8, i8* %414, align 1
  %416 = and i8 %415, 1
  %.not70 = icmp eq i8 %416, 0
  %417 = select i1 %.not70, i32 246968072, i32 56646474
  br label %.backedge

418:                                              ; preds = %9
  %419 = load i32, i32* @x.1, align 4
  %420 = load i32, i32* @y.2, align 4
  %421 = add i32 %419, -1
  %422 = mul i32 %421, %419
  %423 = and i32 %422, 1
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %425, %424
  %427 = select i1 %426, i32 -1376964633, i32 414429570
  br label %.backedge

428:                                              ; preds = %9
  %429 = load i32, i32* @x.1, align 4
  %430 = load i32, i32* @y.2, align 4
  %431 = add i32 %429, -1
  %432 = mul i32 %431, %429
  %433 = and i32 %432, 1
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %435, %434
  %437 = select i1 %436, i32 -691745039, i32 414429570
  br label %.backedge

438:                                              ; preds = %9
  br label %.backedge

439:                                              ; preds = %9
  %440 = load i32, i32* @x.1, align 4
  %441 = load i32, i32* @y.2, align 4
  %442 = add i32 %440, -1
  %443 = mul i32 %442, %440
  %444 = and i32 %443, 1
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %446, %445
  %448 = select i1 %447, i32 1750665618, i32 2047802998
  br label %.backedge

449:                                              ; preds = %9
  %450 = load i32, i32* @x.1, align 4
  %451 = load i32, i32* @y.2, align 4
  %452 = add i32 %450, -1
  %453 = mul i32 %452, %450
  %454 = and i32 %453, 1
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %456, %455
  %458 = select i1 %457, i32 -160562883, i32 2047802998
  br label %.backedge

459:                                              ; preds = %9
  br label %.backedge

460:                                              ; preds = %9
  br label %.backedge

461:                                              ; preds = %9
  br label %.backedge

462:                                              ; preds = %9
  br label %.backedge

463:                                              ; preds = %9
  br label %.backedge

464:                                              ; preds = %9
  %465 = load i32, i32* @x.1, align 4
  %466 = load i32, i32* @y.2, align 4
  %467 = add i32 %465, -1
  %468 = mul i32 %467, %465
  %469 = and i32 %468, 1
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %471, %470
  %473 = select i1 %472, i32 1487771416, i32 703587694
  br label %.backedge

474:                                              ; preds = %9
  %475 = load i32, i32* @x.1, align 4
  %476 = load i32, i32* @y.2, align 4
  %477 = add i32 %475, -1
  %478 = mul i32 %477, %475
  %479 = and i32 %478, 1
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %481, %480
  %483 = select i1 %482, i32 1204640920, i32 703587694
  br label %.backedge

484:                                              ; preds = %9
  br label %.backedge

485:                                              ; preds = %9
  br label %.backedge

486:                                              ; preds = %9
  %.not68 = icmp eq i8 %.066, 45
  %487 = select i1 %.not68, i32 -1792510646, i32 1867096276
  br label %.backedge

488:                                              ; preds = %9
  br label %.backedge

489:                                              ; preds = %9
  br label %.backedge

490:                                              ; preds = %9
  %491 = add i32 %.054, 1
  br label %.backedge

492:                                              ; preds = %9
  %.not = icmp eq i8 %.066, 45
  %493 = select i1 %.not, i32 -1565420841, i32 890173394
  br label %.backedge

494:                                              ; preds = %9
  br label %.backedge

495:                                              ; preds = %9
  %496 = load i32, i32* @x.1, align 4
  %497 = load i32, i32* @y.2, align 4
  %498 = add i32 %496, -1
  %499 = mul i32 %498, %496
  %500 = and i32 %499, 1
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %502, %501
  %504 = select i1 %503, i32 1653954172, i32 31017534
  br label %.backedge

505:                                              ; preds = %9
  %506 = load i32, i32* @x.1, align 4
  %507 = load i32, i32* @y.2, align 4
  %508 = add i32 %506, -1
  %509 = mul i32 %508, %506
  %510 = and i32 %509, 1
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %512, %511
  %514 = select i1 %513, i32 629426705, i32 31017534
  br label %.backedge

515:                                              ; preds = %9
  br label %.backedge

516:                                              ; preds = %9
  %517 = add i32 %.056, 1
  br label %.backedge

518:                                              ; preds = %9
  %519 = load i32, i32* @x.1, align 4
  %520 = load i32, i32* @y.2, align 4
  %521 = add i32 %519, -1
  %522 = mul i32 %521, %519
  %523 = and i32 %522, 1
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %525, %524
  %527 = select i1 %526, i32 700544745, i32 1416143858
  br label %.backedge

528:                                              ; preds = %9
  %529 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %.066)
  %530 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %529, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %531 = load i32, i32* @x.1, align 4
  %532 = load i32, i32* @y.2, align 4
  %533 = add i32 %531, -1
  %534 = mul i32 %533, %531
  %535 = and i32 %534, 1
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %537, %536
  %539 = select i1 %538, i32 24506293, i32 1416143858
  br label %.backedge

540:                                              ; preds = %9
  br label %.backedge

541:                                              ; preds = %9
  %542 = load i32, i32* @x.1, align 4
  %543 = load i32, i32* @y.2, align 4
  %544 = add i32 %542, -1
  %545 = mul i32 %544, %542
  %546 = and i32 %545, 1
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %548, %547
  %550 = select i1 %549, i32 -501070317, i32 1547111908
  br label %.backedge

551:                                              ; preds = %9
  %552 = load i32, i32* @x.1, align 4
  %553 = load i32, i32* @y.2, align 4
  %554 = add i32 %552, -1
  %555 = mul i32 %554, %552
  %556 = and i32 %555, 1
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %553, 10
  %559 = or i1 %558, %557
  %560 = select i1 %559, i32 -1010970513, i32 1547111908
  br label %.backedge

561:                                              ; preds = %9
  ret i32 0

562:                                              ; preds = %9
  %563 = add i32 %.064, 1
  br label %.backedge

564:                                              ; preds = %9
  br label %.backedge

565:                                              ; preds = %9
  %566 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %7)
  %567 = load i8, i8* %7, align 1
  %568 = icmp ne i8 %567, 48
  %569 = sext i32 %.060 to i64
  %570 = add i32 %.058, 1
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds [10 x [11 x i8]], [10 x [11 x i8]]* %8, i64 0, i64 %569, i64 %571
  %573 = zext i1 %568 to i8
  store i8 %573, i8* %572, align 1
  br label %.backedge

574:                                              ; preds = %9
  br label %.backedge

575:                                              ; preds = %9
  br label %.backedge

576:                                              ; preds = %9
  br label %.backedge

577:                                              ; preds = %9
  br label %.backedge

578:                                              ; preds = %9
  br label %.backedge

579:                                              ; preds = %9
  br label %.backedge

580:                                              ; preds = %9
  br label %.backedge

581:                                              ; preds = %9
  br label %.backedge

582:                                              ; preds = %9
  br label %.backedge

583:                                              ; preds = %9
  br label %.backedge

584:                                              ; preds = %9
  br label %.backedge

585:                                              ; preds = %9
  br label %.backedge

586:                                              ; preds = %9
  br label %.backedge

587:                                              ; preds = %9
  br label %.backedge

588:                                              ; preds = %9
  br label %.backedge

589:                                              ; preds = %9
  %590 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %.066)
  %591 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %590, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

592:                                              ; preds = %9
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEE3eofEv(%"class.std::basic_ios"*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s973577827.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
