; ModuleID = 'build_ollvm/programs/p00036/s154247660.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s154247660.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZZ4mainE2dx = private unnamed_addr constant [7 x [3 x i32]] [[3 x i32] [i32 0, i32 1, i32 1], [3 x i32] zeroinitializer, [3 x i32] [i32 1, i32 2, i32 3], [3 x i32] [i32 -1, i32 -1, i32 0], [3 x i32] [i32 1, i32 1, i32 2], [3 x i32] [i32 0, i32 1, i32 1], [3 x i32] [i32 -1, i32 0, i32 1]], align 16
@_ZZ4mainE2dy = private unnamed_addr constant [7 x [3 x i32]] [[3 x i32] [i32 1, i32 0, i32 1], [3 x i32] [i32 1, i32 2, i32 3], [3 x i32] zeroinitializer, [3 x i32] [i32 1, i32 2, i32 1], [3 x i32] [i32 0, i32 1, i32 1], [3 x i32] [i32 1, i32 1, i32 2], [3 x i32] [i32 1, i32 1, i32 0]], align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s154247660.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca [8 x [8 x i8]], align 16
  %10 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %9, i64 0, i64 0, i64 0
  br label %11

11:                                               ; preds = %.backedge, %0
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.0 = phi i32 [ -1912803495, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1912803495, label %12
    i32 -193973841, label %24
    i32 1898890693, label %34
    i32 -1129726635, label %44
    i32 -712607873, label %45
    i32 2061563867, label %55
    i32 384558557, label %66
    i32 -1955214520, label %68
    i32 1353804726, label %78
    i32 2030677960, label %88
    i32 810536991, label %89
    i32 -1804166170, label %92
    i32 308447308, label %102
    i32 1828122392, label %113
    i32 1567976446, label %115
    i32 -1805846923, label %125
    i32 -675617442, label %136
    i32 -66613540, label %138
    i32 101818893, label %148
    i32 -1500541234, label %162
    i32 750166274, label %163
    i32 1975329134, label %173
    i32 1522546948, label %183
    i32 1279633583, label %184
    i32 368520291, label %194
    i32 201109149, label %205
    i32 -796039002, label %206
    i32 -2029441125, label %207
    i32 12669334, label %209
    i32 -1450373533, label %210
    i32 -800726861, label %220
    i32 123651088, label %231
    i32 407315829, label %233
    i32 1686512752, label %243
    i32 -144262372, label %253
    i32 28301567, label %254
    i32 -1943450395, label %257
    i32 166774198, label %267
    i32 1399946554, label %282
    i32 1344073893, label %284
    i32 -948491409, label %285
    i32 -697286672, label %288
    i32 615051838, label %298
    i32 -1849496830, label %308
    i32 355506902, label %309
    i32 -1026616012, label %312
    i32 -1043904800, label %323
    i32 -925277338, label %326
    i32 -1701005496, label %329
    i32 -1102635404, label %332
    i32 86357000, label %342
    i32 283869578, label %352
    i32 -772208911, label %353
    i32 612975156, label %363
    i32 616650927, label %378
    i32 1608152721, label %380
    i32 1576313707, label %381
    i32 -331183729, label %382
    i32 -1617702668, label %383
    i32 -68291099, label %386
    i32 1609249740, label %396
    i32 -445652085, label %406
    i32 -975345213, label %407
    i32 -1973173492, label %408
    i32 -1411786850, label %418
    i32 -1009332752, label %429
    i32 242506433, label %430
    i32 -1176774249, label %440
    i32 -900277513, label %451
    i32 -945567010, label %453
    i32 -802711619, label %454
    i32 -1085172942, label %455
    i32 -1289326032, label %458
    i32 -1045139197, label %459
    i32 1199850716, label %469
    i32 -1782011845, label %479
    i32 -1042686076, label %480
    i32 89885924, label %482
    i32 -1083373073, label %485
    i32 1282292974, label %495
    i32 460315237, label %505
    i32 602767330, label %506
    i32 565438104, label %516
    i32 -1942012631, label %526
    i32 289621175, label %527
    i32 -483774706, label %528
    i32 450775476, label %538
    i32 -1293629303, label %552
    i32 1608308677, label %553
    i32 1405890376, label %563
    i32 -926451681, label %573
    i32 -1046236259, label %574
    i32 -502684287, label %575
    i32 -1576909447, label %576
    i32 614299069, label %577
    i32 477474458, label %578
    i32 1370671723, label %579
    i32 79802823, label %584
    i32 2142373417, label %585
    i32 1531617516, label %587
    i32 1724209476, label %588
    i32 2081485387, label %589
    i32 -400467545, label %590
    i32 1440635250, label %591
    i32 -1182551549, label %592
    i32 1479681916, label %593
    i32 813146543, label %594
    i32 -1114212723, label %596
    i32 -650264808, label %597
    i32 -247916104, label %598
    i32 -1077281129, label %599
    i32 -1845043745, label %600
    i32 -70585213, label %605
  ]

.backedge:                                        ; preds = %11, %605, %600, %599, %598, %597, %596, %594, %593, %592, %591, %590, %589, %588, %587, %585, %584, %579, %578, %577, %576, %575, %574, %563, %553, %552, %538, %528, %527, %526, %516, %506, %505, %495, %485, %482, %480, %479, %469, %459, %458, %455, %454, %453, %451, %440, %430, %429, %418, %408, %407, %406, %396, %386, %383, %382, %381, %380, %378, %363, %353, %352, %342, %332, %329, %326, %323, %312, %309, %308, %298, %288, %285, %284, %282, %267, %257, %254, %253, %243, %233, %231, %220, %210, %209, %207, %206, %205, %194, %184, %183, %173, %163, %162, %148, %138, %136, %125, %115, %113, %102, %92, %89, %88, %78, %68, %66, %55, %45, %44, %34, %24, %12
  %.077.be = phi i32 [ %.077, %11 ], [ %.077, %605 ], [ %.077, %600 ], [ %.077, %599 ], [ %.077, %598 ], [ %.077, %597 ], [ %.077, %596 ], [ %.077, %594 ], [ %.077, %593 ], [ %.077, %592 ], [ %.077, %591 ], [ %.077, %590 ], [ %.077, %589 ], [ %.077, %588 ], [ %.077, %587 ], [ %.077, %585 ], [ %.077, %584 ], [ %.077, %579 ], [ %.077, %578 ], [ %.077, %577 ], [ %.077, %576 ], [ %.077, %575 ], [ 0, %574 ], [ %.077, %563 ], [ %.077, %553 ], [ %.077, %552 ], [ %.077, %538 ], [ %.077, %528 ], [ %.077, %527 ], [ %.077, %526 ], [ %.077, %516 ], [ %.077, %506 ], [ %.077, %505 ], [ %.077, %495 ], [ %.077, %485 ], [ %.077, %482 ], [ %.077, %480 ], [ %.077, %479 ], [ %.077, %469 ], [ %.077, %459 ], [ %.077, %458 ], [ %.077, %455 ], [ %.077, %454 ], [ %.077, %453 ], [ %.077, %451 ], [ %.077, %440 ], [ %.077, %430 ], [ %.077, %429 ], [ %.077, %418 ], [ %.077, %408 ], [ %.077, %407 ], [ %.077, %406 ], [ %.077, %396 ], [ %.077, %386 ], [ %.077, %383 ], [ %.077, %382 ], [ %.077, %381 ], [ %.077, %380 ], [ %.077, %378 ], [ %.077, %363 ], [ %.077, %353 ], [ %.077, %352 ], [ %.077, %342 ], [ %.077, %332 ], [ %.077, %329 ], [ %.077, %326 ], [ %.077, %323 ], [ %.077, %312 ], [ %.077, %309 ], [ %.077, %308 ], [ %.077, %298 ], [ %.077, %288 ], [ %.077, %285 ], [ %.077, %284 ], [ %.077, %282 ], [ %.077, %267 ], [ %.077, %257 ], [ %.077, %254 ], [ %.077, %253 ], [ %.077, %243 ], [ %.077, %233 ], [ %.077, %231 ], [ %.077, %220 ], [ %.077, %210 ], [ %.077, %209 ], [ %208, %207 ], [ %.077, %206 ], [ %.077, %205 ], [ %.077, %194 ], [ %.077, %184 ], [ %.077, %183 ], [ %.077, %173 ], [ %.077, %163 ], [ %.077, %162 ], [ %.077, %148 ], [ %.077, %138 ], [ %.077, %136 ], [ %.077, %125 ], [ %.077, %115 ], [ %.077, %113 ], [ %.077, %102 ], [ %.077, %92 ], [ %.077, %89 ], [ %.077, %88 ], [ %.077, %78 ], [ %.077, %68 ], [ %.077, %66 ], [ %.077, %55 ], [ %.077, %45 ], [ %.077, %44 ], [ 0, %34 ], [ %.077, %24 ], [ %.077, %12 ]
  %.075.be = phi i32 [ %.075, %11 ], [ %.075, %605 ], [ %.075, %600 ], [ %.075, %599 ], [ %.075, %598 ], [ %.075, %597 ], [ %.075, %596 ], [ %.075, %594 ], [ %.075, %593 ], [ %.075, %592 ], [ %.075, %591 ], [ %.075, %590 ], [ %.075, %589 ], [ %.075, %588 ], [ %.075, %587 ], [ %586, %585 ], [ %.075, %584 ], [ %.075, %579 ], [ %.075, %578 ], [ %.075, %577 ], [ 0, %576 ], [ %.075, %575 ], [ %.075, %574 ], [ %.075, %563 ], [ %.075, %553 ], [ %.075, %552 ], [ %.075, %538 ], [ %.075, %528 ], [ %.075, %527 ], [ %.075, %526 ], [ %.075, %516 ], [ %.075, %506 ], [ %.075, %505 ], [ %.075, %495 ], [ %.075, %485 ], [ %.075, %482 ], [ %.075, %480 ], [ %.075, %479 ], [ %.075, %469 ], [ %.075, %459 ], [ %.075, %458 ], [ %.075, %455 ], [ %.075, %454 ], [ %.075, %453 ], [ %.075, %451 ], [ %.075, %440 ], [ %.075, %430 ], [ %.075, %429 ], [ %.075, %418 ], [ %.075, %408 ], [ %.075, %407 ], [ %.075, %406 ], [ %.075, %396 ], [ %.075, %386 ], [ %.075, %383 ], [ %.075, %382 ], [ %.075, %381 ], [ %.075, %380 ], [ %.075, %378 ], [ %.075, %363 ], [ %.075, %353 ], [ %.075, %352 ], [ %.075, %342 ], [ %.075, %332 ], [ %.075, %329 ], [ %.075, %326 ], [ %.075, %323 ], [ %.075, %312 ], [ %.075, %309 ], [ %.075, %308 ], [ %.075, %298 ], [ %.075, %288 ], [ %.075, %285 ], [ %.075, %284 ], [ %.075, %282 ], [ %.075, %267 ], [ %.075, %257 ], [ %.075, %254 ], [ %.075, %253 ], [ %.075, %243 ], [ %.075, %233 ], [ %.075, %231 ], [ %.075, %220 ], [ %.075, %210 ], [ %.075, %209 ], [ %.075, %207 ], [ %.075, %206 ], [ %.075, %205 ], [ %195, %194 ], [ %.075, %184 ], [ %.075, %183 ], [ %.075, %173 ], [ %.075, %163 ], [ %.075, %162 ], [ %.075, %148 ], [ %.075, %138 ], [ %.075, %136 ], [ %.075, %125 ], [ %.075, %115 ], [ %.075, %113 ], [ %.075, %102 ], [ %.075, %92 ], [ %.075, %89 ], [ %.075, %88 ], [ 0, %78 ], [ %.075, %68 ], [ %.075, %66 ], [ %.075, %55 ], [ %.075, %45 ], [ %.075, %44 ], [ %.075, %34 ], [ %.075, %24 ], [ %.075, %12 ]
  %.073.be = phi i32 [ %.073, %11 ], [ %.073, %605 ], [ %.073, %600 ], [ %.073, %599 ], [ %.073, %598 ], [ %.073, %597 ], [ %.073, %596 ], [ %.073, %594 ], [ %.067, %593 ], [ %.073, %592 ], [ %.073, %591 ], [ %.073, %590 ], [ %.073, %589 ], [ %.073, %588 ], [ %.073, %587 ], [ %.073, %585 ], [ %.073, %584 ], [ %.073, %579 ], [ %.073, %578 ], [ %.073, %577 ], [ %.073, %576 ], [ %.073, %575 ], [ %.073, %574 ], [ %.073, %563 ], [ %.073, %553 ], [ %.073, %552 ], [ %.073, %538 ], [ %.073, %528 ], [ %.073, %527 ], [ %.073, %526 ], [ %.073, %516 ], [ %.073, %506 ], [ %.073, %505 ], [ %.073, %495 ], [ %.073, %485 ], [ %.073, %482 ], [ %.073, %480 ], [ %.073, %479 ], [ %.073, %469 ], [ %.073, %459 ], [ %.073, %458 ], [ %.073, %455 ], [ %.073, %454 ], [ %.073, %453 ], [ %.073, %451 ], [ %.073, %440 ], [ %.073, %430 ], [ %.073, %429 ], [ %.073, %418 ], [ %.073, %408 ], [ %.073, %407 ], [ %.073, %406 ], [ %.067, %396 ], [ %.073, %386 ], [ %.073, %383 ], [ %.073, %382 ], [ %.073, %381 ], [ %.073, %380 ], [ %.073, %378 ], [ %.073, %363 ], [ %.073, %353 ], [ %.073, %352 ], [ %.073, %342 ], [ %.073, %332 ], [ %.073, %329 ], [ %.073, %326 ], [ %.073, %323 ], [ %.073, %312 ], [ %.073, %309 ], [ %.073, %308 ], [ %.073, %298 ], [ %.073, %288 ], [ %.073, %285 ], [ %.073, %284 ], [ %.073, %282 ], [ %.073, %267 ], [ %.073, %257 ], [ %.073, %254 ], [ %.073, %253 ], [ %.073, %243 ], [ %.073, %233 ], [ %.073, %231 ], [ %.073, %220 ], [ %.073, %210 ], [ -1, %209 ], [ %.073, %207 ], [ %.073, %206 ], [ %.073, %205 ], [ %.073, %194 ], [ %.073, %184 ], [ %.073, %183 ], [ %.073, %173 ], [ %.073, %163 ], [ %.073, %162 ], [ %.073, %148 ], [ %.073, %138 ], [ %.073, %136 ], [ %.073, %125 ], [ %.073, %115 ], [ %.073, %113 ], [ %.073, %102 ], [ %.073, %92 ], [ %.073, %89 ], [ %.073, %88 ], [ %.073, %78 ], [ %.073, %68 ], [ %.073, %66 ], [ %.073, %55 ], [ %.073, %45 ], [ %.073, %44 ], [ %.073, %34 ], [ %.073, %24 ], [ %.073, %12 ]
  %.071.be = phi i32 [ %.071, %11 ], [ %.071, %605 ], [ %.071, %600 ], [ %.071, %599 ], [ %.071, %598 ], [ %.071, %597 ], [ %.071, %596 ], [ %.071, %594 ], [ %.071, %593 ], [ %.071, %592 ], [ %.071, %591 ], [ %.071, %590 ], [ %.071, %589 ], [ %.071, %588 ], [ %.071, %587 ], [ %.071, %585 ], [ %.071, %584 ], [ %.071, %579 ], [ %.071, %578 ], [ %.071, %577 ], [ %.071, %576 ], [ %.071, %575 ], [ %.071, %574 ], [ %.071, %563 ], [ %.071, %553 ], [ %.071, %552 ], [ %.071, %538 ], [ %.071, %528 ], [ %.neg, %527 ], [ %.071, %526 ], [ %.071, %516 ], [ %.071, %506 ], [ %.071, %505 ], [ %.071, %495 ], [ %.071, %485 ], [ %.071, %482 ], [ %.071, %480 ], [ %.071, %479 ], [ %.071, %469 ], [ %.071, %459 ], [ %.071, %458 ], [ %.071, %455 ], [ %.071, %454 ], [ %.071, %453 ], [ %.071, %451 ], [ %.071, %440 ], [ %.071, %430 ], [ %.071, %429 ], [ %.071, %418 ], [ %.071, %408 ], [ %.071, %407 ], [ %.071, %406 ], [ %.071, %396 ], [ %.071, %386 ], [ %.071, %383 ], [ %.071, %382 ], [ %.071, %381 ], [ %.071, %380 ], [ %.071, %378 ], [ %.071, %363 ], [ %.071, %353 ], [ %.071, %352 ], [ %.071, %342 ], [ %.071, %332 ], [ %.071, %329 ], [ %.071, %326 ], [ %.071, %323 ], [ %.071, %312 ], [ %.071, %309 ], [ %.071, %308 ], [ %.071, %298 ], [ %.071, %288 ], [ %.071, %285 ], [ %.071, %284 ], [ %.071, %282 ], [ %.071, %267 ], [ %.071, %257 ], [ %.071, %254 ], [ %.071, %253 ], [ %.071, %243 ], [ %.071, %233 ], [ %.071, %231 ], [ %.071, %220 ], [ %.071, %210 ], [ 0, %209 ], [ %.071, %207 ], [ %.071, %206 ], [ %.071, %205 ], [ %.071, %194 ], [ %.071, %184 ], [ %.071, %183 ], [ %.071, %173 ], [ %.071, %163 ], [ %.071, %162 ], [ %.071, %148 ], [ %.071, %138 ], [ %.071, %136 ], [ %.071, %125 ], [ %.071, %115 ], [ %.071, %113 ], [ %.071, %102 ], [ %.071, %92 ], [ %.071, %89 ], [ %.071, %88 ], [ %.071, %78 ], [ %.071, %68 ], [ %.071, %66 ], [ %.071, %55 ], [ %.071, %45 ], [ %.071, %44 ], [ %.071, %34 ], [ %.071, %24 ], [ %.071, %12 ]
  %.069.be = phi i32 [ %.069, %11 ], [ %.069, %605 ], [ %.069, %600 ], [ %.069, %599 ], [ %.069, %598 ], [ %.069, %597 ], [ %.069, %596 ], [ %.069, %594 ], [ %.069, %593 ], [ %.069, %592 ], [ %.069, %591 ], [ %.069, %590 ], [ %.069, %589 ], [ 0, %588 ], [ %.069, %587 ], [ %.069, %585 ], [ %.069, %584 ], [ %.069, %579 ], [ %.069, %578 ], [ %.069, %577 ], [ %.069, %576 ], [ %.069, %575 ], [ %.069, %574 ], [ %.069, %563 ], [ %.069, %553 ], [ %.069, %552 ], [ %.069, %538 ], [ %.069, %528 ], [ %.069, %527 ], [ %.069, %526 ], [ %.069, %516 ], [ %.069, %506 ], [ %.069, %505 ], [ %.069, %495 ], [ %.069, %485 ], [ %.069, %482 ], [ %481, %480 ], [ %.069, %479 ], [ %.069, %469 ], [ %.069, %459 ], [ %.069, %458 ], [ %.069, %455 ], [ %.069, %454 ], [ %.069, %453 ], [ %.069, %451 ], [ %.069, %440 ], [ %.069, %430 ], [ %.069, %429 ], [ %.069, %418 ], [ %.069, %408 ], [ %.069, %407 ], [ %.069, %406 ], [ %.069, %396 ], [ %.069, %386 ], [ %.069, %383 ], [ %.069, %382 ], [ %.069, %381 ], [ %.069, %380 ], [ %.069, %378 ], [ %.069, %363 ], [ %.069, %353 ], [ %.069, %352 ], [ %.069, %342 ], [ %.069, %332 ], [ %.069, %329 ], [ %.069, %326 ], [ %.069, %323 ], [ %.069, %312 ], [ %.069, %309 ], [ %.069, %308 ], [ %.069, %298 ], [ %.069, %288 ], [ %.069, %285 ], [ %.069, %284 ], [ %.069, %282 ], [ %.069, %267 ], [ %.069, %257 ], [ %.069, %254 ], [ %.069, %253 ], [ 0, %243 ], [ %.069, %233 ], [ %.069, %231 ], [ %.069, %220 ], [ %.069, %210 ], [ %.069, %209 ], [ %.069, %207 ], [ %.069, %206 ], [ %.069, %205 ], [ %.069, %194 ], [ %.069, %184 ], [ %.069, %183 ], [ %.069, %173 ], [ %.069, %163 ], [ %.069, %162 ], [ %.069, %148 ], [ %.069, %138 ], [ %.069, %136 ], [ %.069, %125 ], [ %.069, %115 ], [ %.069, %113 ], [ %.069, %102 ], [ %.069, %92 ], [ %.069, %89 ], [ %.069, %88 ], [ %.069, %78 ], [ %.069, %68 ], [ %.069, %66 ], [ %.069, %55 ], [ %.069, %45 ], [ %.069, %44 ], [ %.069, %34 ], [ %.069, %24 ], [ %.069, %12 ]
  %.067.be = phi i32 [ %.067, %11 ], [ %.067, %605 ], [ %.067, %600 ], [ %.067, %599 ], [ %.067, %598 ], [ %.067, %597 ], [ %.067, %596 ], [ %595, %594 ], [ %.067, %593 ], [ %.067, %592 ], [ %.067, %591 ], [ %.067, %590 ], [ %.067, %589 ], [ %.067, %588 ], [ %.067, %587 ], [ %.067, %585 ], [ %.067, %584 ], [ %.067, %579 ], [ %.067, %578 ], [ %.067, %577 ], [ %.067, %576 ], [ %.067, %575 ], [ %.067, %574 ], [ %.067, %563 ], [ %.067, %553 ], [ %.067, %552 ], [ %.067, %538 ], [ %.067, %528 ], [ %.067, %527 ], [ %.067, %526 ], [ %.067, %516 ], [ %.067, %506 ], [ %.067, %505 ], [ %.067, %495 ], [ %.067, %485 ], [ %.067, %482 ], [ %.067, %480 ], [ %.067, %479 ], [ %.067, %469 ], [ %.067, %459 ], [ %.067, %458 ], [ %.067, %455 ], [ %.067, %454 ], [ %.067, %453 ], [ %.067, %451 ], [ %.067, %440 ], [ %.067, %430 ], [ %.067, %429 ], [ %419, %418 ], [ %.067, %408 ], [ %.067, %407 ], [ %.067, %406 ], [ %.067, %396 ], [ %.067, %386 ], [ %.067, %383 ], [ %.067, %382 ], [ %.067, %381 ], [ %.067, %380 ], [ %.067, %378 ], [ %.067, %363 ], [ %.067, %353 ], [ %.067, %352 ], [ %.067, %342 ], [ %.067, %332 ], [ %.067, %329 ], [ %.067, %326 ], [ %.067, %323 ], [ %.067, %312 ], [ %.067, %309 ], [ %.067, %308 ], [ %.067, %298 ], [ %.067, %288 ], [ %.067, %285 ], [ 0, %284 ], [ %.067, %282 ], [ %.067, %267 ], [ %.067, %257 ], [ %.067, %254 ], [ %.067, %253 ], [ %.067, %243 ], [ %.067, %233 ], [ %.067, %231 ], [ %.067, %220 ], [ %.067, %210 ], [ %.067, %209 ], [ %.067, %207 ], [ %.067, %206 ], [ %.067, %205 ], [ %.067, %194 ], [ %.067, %184 ], [ %.067, %183 ], [ %.067, %173 ], [ %.067, %163 ], [ %.067, %162 ], [ %.067, %148 ], [ %.067, %138 ], [ %.067, %136 ], [ %.067, %125 ], [ %.067, %115 ], [ %.067, %113 ], [ %.067, %102 ], [ %.067, %92 ], [ %.067, %89 ], [ %.067, %88 ], [ %.067, %78 ], [ %.067, %68 ], [ %.067, %66 ], [ %.067, %55 ], [ %.067, %45 ], [ %.067, %44 ], [ %.067, %34 ], [ %.067, %24 ], [ %.067, %12 ]
  %.065.be = phi i32 [ %.065, %11 ], [ %.065, %605 ], [ %.065, %600 ], [ %.065, %599 ], [ %.065, %598 ], [ %.065, %597 ], [ %.065, %596 ], [ %.065, %594 ], [ %.065, %593 ], [ %.065, %592 ], [ %.065, %591 ], [ 0, %590 ], [ %.065, %589 ], [ %.065, %588 ], [ %.065, %587 ], [ %.065, %585 ], [ %.065, %584 ], [ %.065, %579 ], [ %.065, %578 ], [ %.065, %577 ], [ %.065, %576 ], [ %.065, %575 ], [ %.065, %574 ], [ %.065, %563 ], [ %.065, %553 ], [ %.065, %552 ], [ %.065, %538 ], [ %.065, %528 ], [ %.065, %527 ], [ %.065, %526 ], [ %.065, %516 ], [ %.065, %506 ], [ %.065, %505 ], [ %.065, %495 ], [ %.065, %485 ], [ %.065, %482 ], [ %.065, %480 ], [ %.065, %479 ], [ %.065, %469 ], [ %.065, %459 ], [ %.065, %458 ], [ %.065, %455 ], [ %.065, %454 ], [ %.065, %453 ], [ %.065, %451 ], [ %.065, %440 ], [ %.065, %430 ], [ %.065, %429 ], [ %.065, %418 ], [ %.065, %408 ], [ %.065, %407 ], [ %.065, %406 ], [ %.065, %396 ], [ %.065, %386 ], [ %.065, %383 ], [ %.neg79, %382 ], [ %.065, %381 ], [ %.065, %380 ], [ %.065, %378 ], [ %.065, %363 ], [ %.065, %353 ], [ %.065, %352 ], [ %.065, %342 ], [ %.065, %332 ], [ %.065, %329 ], [ %.065, %326 ], [ %.065, %323 ], [ %.065, %312 ], [ %.065, %309 ], [ %.065, %308 ], [ 0, %298 ], [ %.065, %288 ], [ %.065, %285 ], [ %.065, %284 ], [ %.065, %282 ], [ %.065, %267 ], [ %.065, %257 ], [ %.065, %254 ], [ %.065, %253 ], [ %.065, %243 ], [ %.065, %233 ], [ %.065, %231 ], [ %.065, %220 ], [ %.065, %210 ], [ %.065, %209 ], [ %.065, %207 ], [ %.065, %206 ], [ %.065, %205 ], [ %.065, %194 ], [ %.065, %184 ], [ %.065, %183 ], [ %.065, %173 ], [ %.065, %163 ], [ %.065, %162 ], [ %.065, %148 ], [ %.065, %138 ], [ %.065, %136 ], [ %.065, %125 ], [ %.065, %115 ], [ %.065, %113 ], [ %.065, %102 ], [ %.065, %92 ], [ %.065, %89 ], [ %.065, %88 ], [ %.065, %78 ], [ %.065, %68 ], [ %.065, %66 ], [ %.065, %55 ], [ %.065, %45 ], [ %.065, %44 ], [ %.065, %34 ], [ %.065, %24 ], [ %.065, %12 ]
  %.063.be = phi i32 [ %.063, %11 ], [ %.063, %605 ], [ %.063, %600 ], [ %.063, %599 ], [ %.063, %598 ], [ %.063, %597 ], [ %.063, %596 ], [ %.063, %594 ], [ %.063, %593 ], [ %.063, %592 ], [ %.063, %591 ], [ %.063, %590 ], [ %.063, %589 ], [ %.063, %588 ], [ %.063, %587 ], [ %.063, %585 ], [ %.063, %584 ], [ %.063, %579 ], [ %.063, %578 ], [ %.063, %577 ], [ %.063, %576 ], [ %.063, %575 ], [ %.063, %574 ], [ %.063, %563 ], [ %.063, %553 ], [ %.063, %552 ], [ %.063, %538 ], [ %.063, %528 ], [ %.063, %527 ], [ %.063, %526 ], [ %.063, %516 ], [ %.063, %506 ], [ %.063, %505 ], [ %.063, %495 ], [ %.063, %485 ], [ %.063, %482 ], [ %.063, %480 ], [ %.063, %479 ], [ %.063, %469 ], [ %.063, %459 ], [ %.063, %458 ], [ %.063, %455 ], [ %.063, %454 ], [ %.063, %453 ], [ %.063, %451 ], [ %.063, %440 ], [ %.063, %430 ], [ %.063, %429 ], [ %.063, %418 ], [ %.063, %408 ], [ %.063, %407 ], [ %.063, %406 ], [ %.063, %396 ], [ %.063, %386 ], [ %.063, %383 ], [ %.063, %382 ], [ %.063, %381 ], [ %.063, %380 ], [ %.063, %378 ], [ %.063, %363 ], [ %.063, %353 ], [ %.063, %352 ], [ %.063, %342 ], [ %.063, %332 ], [ %.063, %329 ], [ %.063, %326 ], [ %.063, %323 ], [ %317, %312 ], [ %.063, %309 ], [ %.063, %308 ], [ %.063, %298 ], [ %.063, %288 ], [ %.063, %285 ], [ %.063, %284 ], [ %.063, %282 ], [ %.063, %267 ], [ %.063, %257 ], [ %.063, %254 ], [ %.063, %253 ], [ %.063, %243 ], [ %.063, %233 ], [ %.063, %231 ], [ %.063, %220 ], [ %.063, %210 ], [ %.063, %209 ], [ %.063, %207 ], [ %.063, %206 ], [ %.063, %205 ], [ %.063, %194 ], [ %.063, %184 ], [ %.063, %183 ], [ %.063, %173 ], [ %.063, %163 ], [ %.063, %162 ], [ %.063, %148 ], [ %.063, %138 ], [ %.063, %136 ], [ %.063, %125 ], [ %.063, %115 ], [ %.063, %113 ], [ %.063, %102 ], [ %.063, %92 ], [ %.063, %89 ], [ %.063, %88 ], [ %.063, %78 ], [ %.063, %68 ], [ %.063, %66 ], [ %.063, %55 ], [ %.063, %45 ], [ %.063, %44 ], [ %.063, %34 ], [ %.063, %24 ], [ %.063, %12 ]
  %.061.be = phi i32 [ %.061, %11 ], [ %.061, %605 ], [ %.061, %600 ], [ %.061, %599 ], [ %.061, %598 ], [ %.061, %597 ], [ %.061, %596 ], [ %.061, %594 ], [ %.061, %593 ], [ %.061, %592 ], [ %.061, %591 ], [ %.061, %590 ], [ %.061, %589 ], [ %.061, %588 ], [ %.061, %587 ], [ %.061, %585 ], [ %.061, %584 ], [ %.061, %579 ], [ %.061, %578 ], [ %.061, %577 ], [ %.061, %576 ], [ %.061, %575 ], [ %.061, %574 ], [ %.061, %563 ], [ %.061, %553 ], [ %.061, %552 ], [ %.061, %538 ], [ %.061, %528 ], [ %.061, %527 ], [ %.061, %526 ], [ %.061, %516 ], [ %.061, %506 ], [ %.061, %505 ], [ %.061, %495 ], [ %.061, %485 ], [ %.061, %482 ], [ %.061, %480 ], [ %.061, %479 ], [ %.061, %469 ], [ %.061, %459 ], [ %.061, %458 ], [ %.061, %455 ], [ %.061, %454 ], [ %.061, %453 ], [ %.061, %451 ], [ %.061, %440 ], [ %.061, %430 ], [ %.061, %429 ], [ %.061, %418 ], [ %.061, %408 ], [ %.061, %407 ], [ %.061, %406 ], [ %.061, %396 ], [ %.061, %386 ], [ %.061, %383 ], [ %.061, %382 ], [ %.061, %381 ], [ %.061, %380 ], [ %.061, %378 ], [ %.061, %363 ], [ %.061, %353 ], [ %.061, %352 ], [ %.061, %342 ], [ %.061, %332 ], [ %.061, %329 ], [ %.061, %326 ], [ %.061, %323 ], [ %320, %312 ], [ %.061, %309 ], [ %.061, %308 ], [ %.061, %298 ], [ %.061, %288 ], [ %.061, %285 ], [ %.061, %284 ], [ %.061, %282 ], [ %.061, %267 ], [ %.061, %257 ], [ %.061, %254 ], [ %.061, %253 ], [ %.061, %243 ], [ %.061, %233 ], [ %.061, %231 ], [ %.061, %220 ], [ %.061, %210 ], [ %.061, %209 ], [ %.061, %207 ], [ %.061, %206 ], [ %.061, %205 ], [ %.061, %194 ], [ %.061, %184 ], [ %.061, %183 ], [ %.061, %173 ], [ %.061, %163 ], [ %.061, %162 ], [ %.061, %148 ], [ %.061, %138 ], [ %.061, %136 ], [ %.061, %125 ], [ %.061, %115 ], [ %.061, %113 ], [ %.061, %102 ], [ %.061, %92 ], [ %.061, %89 ], [ %.061, %88 ], [ %.061, %78 ], [ %.061, %68 ], [ %.061, %66 ], [ %.061, %55 ], [ %.061, %45 ], [ %.061, %44 ], [ %.061, %34 ], [ %.061, %24 ], [ %.061, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ 1405890376, %605 ], [ 450775476, %600 ], [ 565438104, %599 ], [ 1282292974, %598 ], [ 1199850716, %597 ], [ -1176774249, %596 ], [ -1411786850, %594 ], [ 1609249740, %593 ], [ 612975156, %592 ], [ 86357000, %591 ], [ 615051838, %590 ], [ 166774198, %589 ], [ 1686512752, %588 ], [ -800726861, %587 ], [ 368520291, %585 ], [ 1975329134, %584 ], [ 101818893, %579 ], [ -1805846923, %578 ], [ 308447308, %577 ], [ 1353804726, %576 ], [ 2061563867, %575 ], [ 1898890693, %574 ], [ %572, %563 ], [ %562, %553 ], [ -1912803495, %552 ], [ %551, %538 ], [ %537, %528 ], [ -1450373533, %527 ], [ 289621175, %526 ], [ %525, %516 ], [ %515, %506 ], [ -483774706, %505 ], [ %504, %495 ], [ %494, %485 ], [ %484, %482 ], [ 28301567, %480 ], [ -1042686076, %479 ], [ %478, %469 ], [ %468, %459 ], [ 89885924, %458 ], [ %457, %455 ], [ -1085172942, %454 ], [ 89885924, %453 ], [ %452, %451 ], [ %450, %440 ], [ %439, %430 ], [ -948491409, %429 ], [ %428, %418 ], [ %417, %408 ], [ -1973173492, %407 ], [ 242506433, %406 ], [ %405, %396 ], [ %395, %386 ], [ %385, %383 ], [ 355506902, %382 ], [ -331183729, %381 ], [ -1617702668, %380 ], [ %379, %378 ], [ %377, %363 ], [ %362, %353 ], [ -1617702668, %352 ], [ %351, %342 ], [ %341, %332 ], [ %331, %329 ], [ %328, %326 ], [ %325, %323 ], [ %322, %312 ], [ %311, %309 ], [ 355506902, %308 ], [ %307, %298 ], [ %297, %288 ], [ %287, %285 ], [ -948491409, %284 ], [ %283, %282 ], [ %281, %267 ], [ %266, %257 ], [ %256, %254 ], [ 28301567, %253 ], [ %252, %243 ], [ %242, %233 ], [ %232, %231 ], [ %230, %220 ], [ %219, %210 ], [ -1450373533, %209 ], [ -712607873, %207 ], [ -2029441125, %206 ], [ 810536991, %205 ], [ %204, %194 ], [ %193, %184 ], [ 1279633583, %183 ], [ %182, %173 ], [ %172, %163 ], [ 750166274, %162 ], [ %161, %148 ], [ %147, %138 ], [ %137, %136 ], [ %135, %125 ], [ %124, %115 ], [ %114, %113 ], [ %112, %102 ], [ %101, %92 ], [ %91, %89 ], [ 810536991, %88 ], [ %87, %78 ], [ %77, %68 ], [ %67, %66 ], [ %65, %55 ], [ %54, %45 ], [ -712607873, %44 ], [ %43, %34 ], [ %33, %24 ], [ %23, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %10)
  %14 = bitcast %"class.std::basic_istream"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::basic_istream"* %13 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to %"class.std::basic_ios"*
  %22 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %21)
  %23 = select i1 %22, i32 -193973841, i32 1608308677
  br label %.backedge

24:                                               ; preds = %11
  %25 = load i32, i32* @x.1, align 4
  %26 = load i32, i32* @y.2, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 1898890693, i32 -1046236259
  br label %.backedge

34:                                               ; preds = %11
  %35 = load i32, i32* @x.1, align 4
  %36 = load i32, i32* @y.2, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1129726635, i32 -1046236259
  br label %.backedge

44:                                               ; preds = %11
  br label %.backedge

45:                                               ; preds = %11
  %46 = load i32, i32* @x.1, align 4
  %47 = load i32, i32* @y.2, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 2061563867, i32 -502684287
  br label %.backedge

55:                                               ; preds = %11
  %56 = icmp slt i32 %.077, 8
  store i1 %56, i1* %8, align 1
  %57 = load i32, i32* @x.1, align 4
  %58 = load i32, i32* @y.2, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 384558557, i32 -502684287
  br label %.backedge

66:                                               ; preds = %11
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %67 = select i1 %.0..0..0., i32 -1955214520, i32 12669334
  br label %.backedge

68:                                               ; preds = %11
  %69 = load i32, i32* @x.1, align 4
  %70 = load i32, i32* @y.2, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 1353804726, i32 -1576909447
  br label %.backedge

78:                                               ; preds = %11
  %79 = load i32, i32* @x.1, align 4
  %80 = load i32, i32* @y.2, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 2030677960, i32 -1576909447
  br label %.backedge

88:                                               ; preds = %11
  br label %.backedge

89:                                               ; preds = %11
  %90 = icmp slt i32 %.075, 8
  %91 = select i1 %90, i32 -1804166170, i32 -796039002
  br label %.backedge

92:                                               ; preds = %11
  %93 = load i32, i32* @x.1, align 4
  %94 = load i32, i32* @y.2, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 308447308, i32 614299069
  br label %.backedge

102:                                              ; preds = %11
  %103 = icmp ne i32 %.077, 0
  store i1 %103, i1* %7, align 1
  %104 = load i32, i32* @x.1, align 4
  %105 = load i32, i32* @y.2, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 1828122392, i32 614299069
  br label %.backedge

113:                                              ; preds = %11
  %.0..0..0.54 = load volatile i1, i1* %7, align 1
  %114 = select i1 %.0..0..0.54, i32 -66613540, i32 1567976446
  br label %.backedge

115:                                              ; preds = %11
  %116 = load i32, i32* @x.1, align 4
  %117 = load i32, i32* @y.2, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 -1805846923, i32 477474458
  br label %.backedge

125:                                              ; preds = %11
  %126 = icmp ne i32 %.075, 0
  store i1 %126, i1* %6, align 1
  %127 = load i32, i32* @x.1, align 4
  %128 = load i32, i32* @y.2, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 -675617442, i32 477474458
  br label %.backedge

136:                                              ; preds = %11
  %.0..0..0.55 = load volatile i1, i1* %6, align 1
  %137 = select i1 %.0..0..0.55, i32 -66613540, i32 750166274
  br label %.backedge

138:                                              ; preds = %11
  %139 = load i32, i32* @x.1, align 4
  %140 = load i32, i32* @y.2, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 101818893, i32 1370671723
  br label %.backedge

148:                                              ; preds = %11
  %149 = sext i32 %.075 to i64
  %150 = sext i32 %.077 to i64
  %151 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %9, i64 0, i64 %149, i64 %150
  %152 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %151)
  %153 = load i32, i32* @x.1, align 4
  %154 = load i32, i32* @y.2, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 -1500541234, i32 1370671723
  br label %.backedge

162:                                              ; preds = %11
  br label %.backedge

163:                                              ; preds = %11
  %164 = load i32, i32* @x.1, align 4
  %165 = load i32, i32* @y.2, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 1975329134, i32 79802823
  br label %.backedge

173:                                              ; preds = %11
  %174 = load i32, i32* @x.1, align 4
  %175 = load i32, i32* @y.2, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 1522546948, i32 79802823
  br label %.backedge

183:                                              ; preds = %11
  br label %.backedge

184:                                              ; preds = %11
  %185 = load i32, i32* @x.1, align 4
  %186 = load i32, i32* @y.2, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 368520291, i32 2142373417
  br label %.backedge

194:                                              ; preds = %11
  %195 = add i32 %.075, 1
  %196 = load i32, i32* @x.1, align 4
  %197 = load i32, i32* @y.2, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 201109149, i32 2142373417
  br label %.backedge

205:                                              ; preds = %11
  br label %.backedge

206:                                              ; preds = %11
  br label %.backedge

207:                                              ; preds = %11
  %208 = add i32 %.077, 1
  br label %.backedge

209:                                              ; preds = %11
  br label %.backedge

210:                                              ; preds = %11
  %211 = load i32, i32* @x.1, align 4
  %212 = load i32, i32* @y.2, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 -800726861, i32 1531617516
  br label %.backedge

220:                                              ; preds = %11
  %221 = icmp slt i32 %.071, 8
  store i1 %221, i1* %5, align 1
  %222 = load i32, i32* @x.1, align 4
  %223 = load i32, i32* @y.2, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 123651088, i32 1531617516
  br label %.backedge

231:                                              ; preds = %11
  %.0..0..0.56 = load volatile i1, i1* %5, align 1
  %232 = select i1 %.0..0..0.56, i32 407315829, i32 -483774706
  br label %.backedge

233:                                              ; preds = %11
  %234 = load i32, i32* @x.1, align 4
  %235 = load i32, i32* @y.2, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 1686512752, i32 1724209476
  br label %.backedge

243:                                              ; preds = %11
  %244 = load i32, i32* @x.1, align 4
  %245 = load i32, i32* @y.2, align 4
  %246 = add i32 %244, -1
  %247 = mul i32 %246, %244
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %250, %249
  %252 = select i1 %251, i32 -144262372, i32 1724209476
  br label %.backedge

253:                                              ; preds = %11
  br label %.backedge

254:                                              ; preds = %11
  %255 = icmp slt i32 %.069, 8
  %256 = select i1 %255, i32 -1943450395, i32 89885924
  br label %.backedge

257:                                              ; preds = %11
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 166774198, i32 2081485387
  br label %.backedge

267:                                              ; preds = %11
  %268 = sext i32 %.069 to i64
  %269 = sext i32 %.071 to i64
  %270 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %9, i64 0, i64 %268, i64 %269
  %271 = load i8, i8* %270, align 1
  %272 = icmp eq i8 %271, 49
  store i1 %272, i1* %4, align 1
  %273 = load i32, i32* @x.1, align 4
  %274 = load i32, i32* @y.2, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 1399946554, i32 2081485387
  br label %.backedge

282:                                              ; preds = %11
  %.0..0..0.57 = load volatile i1, i1* %4, align 1
  %283 = select i1 %.0..0..0.57, i32 1344073893, i32 -1085172942
  br label %.backedge

284:                                              ; preds = %11
  br label %.backedge

285:                                              ; preds = %11
  %286 = icmp slt i32 %.067, 7
  %287 = select i1 %286, i32 -697286672, i32 242506433
  br label %.backedge

288:                                              ; preds = %11
  %289 = load i32, i32* @x.1, align 4
  %290 = load i32, i32* @y.2, align 4
  %291 = add i32 %289, -1
  %292 = mul i32 %291, %289
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %295, %294
  %297 = select i1 %296, i32 615051838, i32 -400467545
  br label %.backedge

298:                                              ; preds = %11
  %299 = load i32, i32* @x.1, align 4
  %300 = load i32, i32* @y.2, align 4
  %301 = add i32 %299, -1
  %302 = mul i32 %301, %299
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %305, %304
  %307 = select i1 %306, i32 -1849496830, i32 -400467545
  br label %.backedge

308:                                              ; preds = %11
  br label %.backedge

309:                                              ; preds = %11
  %310 = icmp slt i32 %.065, 3
  %311 = select i1 %310, i32 -1026616012, i32 -1617702668
  br label %.backedge

312:                                              ; preds = %11
  %313 = sext i32 %.067 to i64
  %314 = sext i32 %.065 to i64
  %315 = getelementptr inbounds [7 x [3 x i32]], [7 x [3 x i32]]* @_ZZ4mainE2dx, i64 0, i64 %313, i64 %314
  %316 = load i32, i32* %315, align 4
  %317 = add i32 %316, %.069
  %318 = getelementptr inbounds [7 x [3 x i32]], [7 x [3 x i32]]* @_ZZ4mainE2dy, i64 0, i64 %313, i64 %314
  %319 = load i32, i32* %318, align 4
  %320 = add i32 %319, %.071
  %321 = icmp slt i32 %317, 0
  %322 = select i1 %321, i32 -1102635404, i32 -1043904800
  br label %.backedge

323:                                              ; preds = %11
  %324 = icmp sgt i32 %.063, 7
  %325 = select i1 %324, i32 -1102635404, i32 -925277338
  br label %.backedge

326:                                              ; preds = %11
  %327 = icmp slt i32 %.061, 0
  %328 = select i1 %327, i32 -1102635404, i32 -1701005496
  br label %.backedge

329:                                              ; preds = %11
  %330 = icmp sgt i32 %.061, 7
  %331 = select i1 %330, i32 -1102635404, i32 -772208911
  br label %.backedge

332:                                              ; preds = %11
  %333 = load i32, i32* @x.1, align 4
  %334 = load i32, i32* @y.2, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 86357000, i32 1440635250
  br label %.backedge

342:                                              ; preds = %11
  %343 = load i32, i32* @x.1, align 4
  %344 = load i32, i32* @y.2, align 4
  %345 = add i32 %343, -1
  %346 = mul i32 %345, %343
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %349, %348
  %351 = select i1 %350, i32 283869578, i32 1440635250
  br label %.backedge

352:                                              ; preds = %11
  br label %.backedge

353:                                              ; preds = %11
  %354 = load i32, i32* @x.1, align 4
  %355 = load i32, i32* @y.2, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 612975156, i32 -1182551549
  br label %.backedge

363:                                              ; preds = %11
  %364 = sext i32 %.063 to i64
  %365 = sext i32 %.061 to i64
  %366 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %9, i64 0, i64 %364, i64 %365
  %367 = load i8, i8* %366, align 1
  %368 = icmp ne i8 %367, 49
  store i1 %368, i1* %3, align 1
  %369 = load i32, i32* @x.1, align 4
  %370 = load i32, i32* @y.2, align 4
  %371 = add i32 %369, -1
  %372 = mul i32 %371, %369
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %375, %374
  %377 = select i1 %376, i32 616650927, i32 -1182551549
  br label %.backedge

378:                                              ; preds = %11
  %.0..0..0.58 = load volatile i1, i1* %3, align 1
  %379 = select i1 %.0..0..0.58, i32 1608152721, i32 1576313707
  br label %.backedge

380:                                              ; preds = %11
  br label %.backedge

381:                                              ; preds = %11
  br label %.backedge

382:                                              ; preds = %11
  %.neg79 = add i32 %.065, 1
  br label %.backedge

383:                                              ; preds = %11
  %384 = icmp eq i32 %.065, 3
  %385 = select i1 %384, i32 -68291099, i32 -975345213
  br label %.backedge

386:                                              ; preds = %11
  %387 = load i32, i32* @x.1, align 4
  %388 = load i32, i32* @y.2, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 1609249740, i32 1479681916
  br label %.backedge

396:                                              ; preds = %11
  %397 = load i32, i32* @x.1, align 4
  %398 = load i32, i32* @y.2, align 4
  %399 = add i32 %397, -1
  %400 = mul i32 %399, %397
  %401 = and i32 %400, 1
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %403, %402
  %405 = select i1 %404, i32 -445652085, i32 1479681916
  br label %.backedge

406:                                              ; preds = %11
  br label %.backedge

407:                                              ; preds = %11
  br label %.backedge

408:                                              ; preds = %11
  %409 = load i32, i32* @x.1, align 4
  %410 = load i32, i32* @y.2, align 4
  %411 = add i32 %409, -1
  %412 = mul i32 %411, %409
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %415, %414
  %417 = select i1 %416, i32 -1411786850, i32 813146543
  br label %.backedge

418:                                              ; preds = %11
  %419 = add i32 %.067, 1
  %420 = load i32, i32* @x.1, align 4
  %421 = load i32, i32* @y.2, align 4
  %422 = add i32 %420, -1
  %423 = mul i32 %422, %420
  %424 = and i32 %423, 1
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %426, %425
  %428 = select i1 %427, i32 -1009332752, i32 813146543
  br label %.backedge

429:                                              ; preds = %11
  br label %.backedge

430:                                              ; preds = %11
  %431 = load i32, i32* @x.1, align 4
  %432 = load i32, i32* @y.2, align 4
  %433 = add i32 %431, -1
  %434 = mul i32 %433, %431
  %435 = and i32 %434, 1
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %437, %436
  %439 = select i1 %438, i32 -1176774249, i32 -1114212723
  br label %.backedge

440:                                              ; preds = %11
  %441 = icmp sgt i32 %.073, -1
  store i1 %441, i1* %2, align 1
  %442 = load i32, i32* @x.1, align 4
  %443 = load i32, i32* @y.2, align 4
  %444 = add i32 %442, -1
  %445 = mul i32 %444, %442
  %446 = and i32 %445, 1
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %448, %447
  %450 = select i1 %449, i32 -900277513, i32 -1114212723
  br label %.backedge

451:                                              ; preds = %11
  %.0..0..0.59 = load volatile i1, i1* %2, align 1
  %452 = select i1 %.0..0..0.59, i32 -945567010, i32 -802711619
  br label %.backedge

453:                                              ; preds = %11
  br label %.backedge

454:                                              ; preds = %11
  br label %.backedge

455:                                              ; preds = %11
  %456 = icmp sgt i32 %.073, -1
  %457 = select i1 %456, i32 -1289326032, i32 -1045139197
  br label %.backedge

458:                                              ; preds = %11
  br label %.backedge

459:                                              ; preds = %11
  %460 = load i32, i32* @x.1, align 4
  %461 = load i32, i32* @y.2, align 4
  %462 = add i32 %460, -1
  %463 = mul i32 %462, %460
  %464 = and i32 %463, 1
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %466, %465
  %468 = select i1 %467, i32 1199850716, i32 -650264808
  br label %.backedge

469:                                              ; preds = %11
  %470 = load i32, i32* @x.1, align 4
  %471 = load i32, i32* @y.2, align 4
  %472 = add i32 %470, -1
  %473 = mul i32 %472, %470
  %474 = and i32 %473, 1
  %475 = icmp eq i32 %474, 0
  %476 = icmp slt i32 %471, 10
  %477 = or i1 %476, %475
  %478 = select i1 %477, i32 -1782011845, i32 -650264808
  br label %.backedge

479:                                              ; preds = %11
  br label %.backedge

480:                                              ; preds = %11
  %481 = add i32 %.069, 1
  br label %.backedge

482:                                              ; preds = %11
  %483 = icmp sgt i32 %.073, -1
  %484 = select i1 %483, i32 -1083373073, i32 602767330
  br label %.backedge

485:                                              ; preds = %11
  %486 = load i32, i32* @x.1, align 4
  %487 = load i32, i32* @y.2, align 4
  %488 = add i32 %486, -1
  %489 = mul i32 %488, %486
  %490 = and i32 %489, 1
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %492, %491
  %494 = select i1 %493, i32 1282292974, i32 -247916104
  br label %.backedge

495:                                              ; preds = %11
  %496 = load i32, i32* @x.1, align 4
  %497 = load i32, i32* @y.2, align 4
  %498 = add i32 %496, -1
  %499 = mul i32 %498, %496
  %500 = and i32 %499, 1
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %502, %501
  %504 = select i1 %503, i32 460315237, i32 -247916104
  br label %.backedge

505:                                              ; preds = %11
  br label %.backedge

506:                                              ; preds = %11
  %507 = load i32, i32* @x.1, align 4
  %508 = load i32, i32* @y.2, align 4
  %509 = add i32 %507, -1
  %510 = mul i32 %509, %507
  %511 = and i32 %510, 1
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %513, %512
  %515 = select i1 %514, i32 565438104, i32 -1077281129
  br label %.backedge

516:                                              ; preds = %11
  %517 = load i32, i32* @x.1, align 4
  %518 = load i32, i32* @y.2, align 4
  %519 = add i32 %517, -1
  %520 = mul i32 %519, %517
  %521 = and i32 %520, 1
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %518, 10
  %524 = or i1 %523, %522
  %525 = select i1 %524, i32 -1942012631, i32 -1077281129
  br label %.backedge

526:                                              ; preds = %11
  br label %.backedge

527:                                              ; preds = %11
  %.neg = add i32 %.071, 1
  br label %.backedge

528:                                              ; preds = %11
  %529 = load i32, i32* @x.1, align 4
  %530 = load i32, i32* @y.2, align 4
  %531 = add i32 %529, -1
  %532 = mul i32 %531, %529
  %533 = and i32 %532, 1
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %535, %534
  %537 = select i1 %536, i32 450775476, i32 -1845043745
  br label %.backedge

538:                                              ; preds = %11
  %539 = trunc i32 %.073 to i8
  %540 = add i8 %539, 65
  %541 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %540)
  %542 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %541, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %543 = load i32, i32* @x.1, align 4
  %544 = load i32, i32* @y.2, align 4
  %545 = add i32 %543, -1
  %546 = mul i32 %545, %543
  %547 = and i32 %546, 1
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %549, %548
  %551 = select i1 %550, i32 -1293629303, i32 -1845043745
  br label %.backedge

552:                                              ; preds = %11
  br label %.backedge

553:                                              ; preds = %11
  %554 = load i32, i32* @x.1, align 4
  %555 = load i32, i32* @y.2, align 4
  %556 = add i32 %554, -1
  %557 = mul i32 %556, %554
  %558 = and i32 %557, 1
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %555, 10
  %561 = or i1 %560, %559
  %562 = select i1 %561, i32 1405890376, i32 -70585213
  br label %.backedge

563:                                              ; preds = %11
  store i32 0, i32* %1, align 4
  %564 = load i32, i32* @x.1, align 4
  %565 = load i32, i32* @y.2, align 4
  %566 = add i32 %564, -1
  %567 = mul i32 %566, %564
  %568 = and i32 %567, 1
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %570, %569
  %572 = select i1 %571, i32 -926451681, i32 -70585213
  br label %.backedge

573:                                              ; preds = %11
  %.0..0..0.60 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.60

574:                                              ; preds = %11
  br label %.backedge

575:                                              ; preds = %11
  br label %.backedge

576:                                              ; preds = %11
  br label %.backedge

577:                                              ; preds = %11
  br label %.backedge

578:                                              ; preds = %11
  br label %.backedge

579:                                              ; preds = %11
  %580 = sext i32 %.075 to i64
  %581 = sext i32 %.077 to i64
  %582 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %9, i64 0, i64 %580, i64 %581
  %583 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %582)
  br label %.backedge

584:                                              ; preds = %11
  br label %.backedge

585:                                              ; preds = %11
  %586 = add i32 %.075, 1
  br label %.backedge

587:                                              ; preds = %11
  br label %.backedge

588:                                              ; preds = %11
  br label %.backedge

589:                                              ; preds = %11
  br label %.backedge

590:                                              ; preds = %11
  br label %.backedge

591:                                              ; preds = %11
  br label %.backedge

592:                                              ; preds = %11
  br label %.backedge

593:                                              ; preds = %11
  br label %.backedge

594:                                              ; preds = %11
  %595 = add i32 %.067, 1
  br label %.backedge

596:                                              ; preds = %11
  br label %.backedge

597:                                              ; preds = %11
  br label %.backedge

598:                                              ; preds = %11
  br label %.backedge

599:                                              ; preds = %11
  br label %.backedge

600:                                              ; preds = %11
  %601 = trunc i32 %.073 to i8
  %602 = add i8 %601, 65
  %603 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %602)
  %604 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %603, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

605:                                              ; preds = %11
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s154247660.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
