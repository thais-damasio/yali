; ModuleID = 'build_ollvm/programs/p00036/s724036766.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s724036766.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@s = global [8 x [8 x i8]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s724036766.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -641187131, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -641187131, label %11
    i32 1035411303, label %14
    i32 1962228242, label %25
    i32 -2102364201, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1035411303, i32 -2102364201
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 1962228242, i32 -2102364201
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1035411303, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  br label %10

10:                                               ; preds = %.backedge, %0
  %.0106 = phi i32 [ undef, %0 ], [ %.0106.be, %.backedge ]
  %.0104 = phi i32 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i32 [ undef, %0 ], [ %.0102.be, %.backedge ]
  %.0100 = phi i32 [ undef, %0 ], [ %.0100.be, %.backedge ]
  %.098 = phi i32 [ undef, %0 ], [ %.098.be, %.backedge ]
  %.0 = phi i32 [ -575077289, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -575077289, label %11
    i32 1670915023, label %23
    i32 -154482197, label %24
    i32 1965081412, label %27
    i32 1624640827, label %37
    i32 2042613070, label %50
    i32 829195873, label %51
    i32 441731701, label %61
    i32 -200897319, label %72
    i32 1105057619, label %73
    i32 -439049300, label %74
    i32 1844867653, label %84
    i32 987018444, label %95
    i32 1961795154, label %97
    i32 -1716603729, label %98
    i32 538200894, label %101
    i32 871761725, label %106
    i32 1476608315, label %108
    i32 -722135369, label %109
    i32 2000941150, label %110
    i32 -339735282, label %120
    i32 1200333892, label %130
    i32 -91577600, label %131
    i32 279737611, label %134
    i32 -1034424886, label %135
    i32 1154904926, label %138
    i32 -1736282974, label %145
    i32 -220906210, label %153
    i32 -471130052, label %161
    i32 -1522072525, label %171
    i32 -790745146, label %188
    i32 -1576076756, label %190
    i32 -2098883433, label %193
    i32 589353905, label %203
    i32 1406165457, label %218
    i32 -169758884, label %220
    i32 1687629221, label %228
    i32 -1731474299, label %236
    i32 -1936117092, label %246
    i32 -1664844423, label %262
    i32 640141263, label %264
    i32 -1494711876, label %267
    i32 -242348968, label %274
    i32 -572013184, label %284
    i32 91314403, label %299
    i32 1746363817, label %301
    i32 2067232666, label %308
    i32 1728551380, label %316
    i32 1452247911, label %319
    i32 1778443631, label %326
    i32 -1517374751, label %334
    i32 -1609431641, label %343
    i32 -589834814, label %352
    i32 -1233264791, label %362
    i32 -1710749652, label %374
    i32 858784619, label %375
    i32 1255068964, label %382
    i32 830226820, label %389
    i32 -994131828, label %398
    i32 430407366, label %407
    i32 -1369801606, label %417
    i32 1697276081, label %429
    i32 2077681971, label %430
    i32 -135243609, label %437
    i32 1903626445, label %447
    i32 12730929, label %463
    i32 925428316, label %465
    i32 -341237633, label %473
    i32 1194639908, label %482
    i32 1213536037, label %485
    i32 98189448, label %495
    i32 826452077, label %510
    i32 -108609266, label %512
    i32 -505005940, label %520
    i32 -882700920, label %528
    i32 429252024, label %538
    i32 1767096750, label %555
    i32 -1024080789, label %557
    i32 1437570331, label %567
    i32 818395290, label %579
    i32 1696799287, label %580
    i32 -550785097, label %581
    i32 1352427287, label %591
    i32 71228799, label %601
    i32 -388504568, label %602
    i32 -1862989087, label %612
    i32 -158005493, label %622
    i32 -688789617, label %623
    i32 322001883, label %624
    i32 1887920650, label %634
    i32 -1954173401, label %644
    i32 -1552530831, label %645
    i32 391965077, label %646
    i32 -523146286, label %647
    i32 -1795045845, label %657
    i32 1590579107, label %667
    i32 1526885608, label %668
    i32 -104829186, label %669
    i32 -870789561, label %671
    i32 802762549, label %672
    i32 1067524520, label %682
    i32 -1809362953, label %692
    i32 -1227459127, label %693
    i32 1920824432, label %697
    i32 1101172814, label %699
    i32 -1833121191, label %700
    i32 2027976933, label %701
    i32 1861088809, label %702
    i32 636397867, label %703
    i32 -1707481741, label %704
    i32 851216156, label %705
    i32 -901814891, label %708
    i32 -1319448078, label %711
    i32 2098739097, label %712
    i32 617849973, label %713
    i32 -180729710, label %714
    i32 -967116413, label %717
    i32 1074351597, label %718
    i32 -626356713, label %719
    i32 1010994263, label %720
    i32 1857871183, label %722
  ]

.backedge:                                        ; preds = %10, %722, %720, %719, %718, %717, %714, %713, %712, %711, %708, %705, %704, %703, %702, %701, %700, %699, %697, %693, %682, %672, %671, %669, %668, %667, %657, %647, %646, %645, %644, %634, %624, %623, %622, %612, %602, %601, %591, %581, %580, %579, %567, %557, %555, %538, %528, %520, %512, %510, %495, %485, %482, %473, %465, %463, %447, %437, %430, %429, %417, %407, %398, %389, %382, %375, %374, %362, %352, %343, %334, %326, %319, %316, %308, %301, %299, %284, %274, %267, %264, %262, %246, %236, %228, %220, %218, %203, %193, %190, %188, %171, %161, %153, %145, %138, %135, %134, %131, %130, %120, %110, %109, %108, %106, %101, %98, %97, %95, %84, %74, %73, %72, %61, %51, %50, %37, %27, %24, %23, %11
  %.0106.be = phi i32 [ %.0106, %10 ], [ %.0106, %722 ], [ %.0106, %720 ], [ %.0106, %719 ], [ %.0106, %718 ], [ %.0106, %717 ], [ %.0106, %714 ], [ %.0106, %713 ], [ %.0106, %712 ], [ %.0106, %711 ], [ %.0106, %708 ], [ %.0106, %705 ], [ %.0106, %704 ], [ %.0106, %703 ], [ %.0106, %702 ], [ %.0106, %701 ], [ %.0106, %700 ], [ %.0106, %699 ], [ %698, %697 ], [ %.0106, %693 ], [ %.0106, %682 ], [ %.0106, %672 ], [ %.0106, %671 ], [ %.0106, %669 ], [ %.0106, %668 ], [ %.0106, %667 ], [ %.0106, %657 ], [ %.0106, %647 ], [ %.0106, %646 ], [ %.0106, %645 ], [ %.0106, %644 ], [ %.0106, %634 ], [ %.0106, %624 ], [ %.0106, %623 ], [ %.0106, %622 ], [ %.0106, %612 ], [ %.0106, %602 ], [ %.0106, %601 ], [ %.0106, %591 ], [ %.0106, %581 ], [ %.0106, %580 ], [ %.0106, %579 ], [ %.0106, %567 ], [ %.0106, %557 ], [ %.0106, %555 ], [ %.0106, %538 ], [ %.0106, %528 ], [ %.0106, %520 ], [ %.0106, %512 ], [ %.0106, %510 ], [ %.0106, %495 ], [ %.0106, %485 ], [ %.0106, %482 ], [ %.0106, %473 ], [ %.0106, %465 ], [ %.0106, %463 ], [ %.0106, %447 ], [ %.0106, %437 ], [ %.0106, %430 ], [ %.0106, %429 ], [ %.0106, %417 ], [ %.0106, %407 ], [ %.0106, %398 ], [ %.0106, %389 ], [ %.0106, %382 ], [ %.0106, %375 ], [ %.0106, %374 ], [ %.0106, %362 ], [ %.0106, %352 ], [ %.0106, %343 ], [ %.0106, %334 ], [ %.0106, %326 ], [ %.0106, %319 ], [ %.0106, %316 ], [ %.0106, %308 ], [ %.0106, %301 ], [ %.0106, %299 ], [ %.0106, %284 ], [ %.0106, %274 ], [ %.0106, %267 ], [ %.0106, %264 ], [ %.0106, %262 ], [ %.0106, %246 ], [ %.0106, %236 ], [ %.0106, %228 ], [ %.0106, %220 ], [ %.0106, %218 ], [ %.0106, %203 ], [ %.0106, %193 ], [ %.0106, %190 ], [ %.0106, %188 ], [ %.0106, %171 ], [ %.0106, %161 ], [ %.0106, %153 ], [ %.0106, %145 ], [ %.0106, %138 ], [ %.0106, %135 ], [ %.0106, %134 ], [ %.0106, %131 ], [ %.0106, %130 ], [ %.0106, %120 ], [ %.0106, %110 ], [ %.0106, %109 ], [ %.0106, %108 ], [ %.0106, %106 ], [ %.0106, %101 ], [ %.0106, %98 ], [ %.0106, %97 ], [ %.0106, %95 ], [ %.0106, %84 ], [ %.0106, %74 ], [ %.0106, %73 ], [ %.0106, %72 ], [ %62, %61 ], [ %.0106, %51 ], [ %.0106, %50 ], [ %.0106, %37 ], [ %.0106, %27 ], [ %.0106, %24 ], [ 1, %23 ], [ %.0106, %11 ]
  %.0104.be = phi i32 [ %.0104, %10 ], [ %.0104, %722 ], [ %.0104, %720 ], [ %.0104, %719 ], [ %.0104, %718 ], [ %.0104, %717 ], [ %.0104, %714 ], [ %.0104, %713 ], [ %.0104, %712 ], [ %.0104, %711 ], [ %.0104, %708 ], [ %.0104, %705 ], [ %.0104, %704 ], [ %.0104, %703 ], [ %.0104, %702 ], [ %.0104, %701 ], [ %.0104, %700 ], [ %.0104, %699 ], [ %.0104, %697 ], [ %.0104, %693 ], [ %.0104, %682 ], [ %.0104, %672 ], [ %.0104, %671 ], [ %.0104, %669 ], [ %.0104, %668 ], [ %.0104, %667 ], [ %.0104, %657 ], [ %.0104, %647 ], [ %.0104, %646 ], [ %.0104, %645 ], [ %.0104, %644 ], [ %.0104, %634 ], [ %.0104, %624 ], [ %.0104, %623 ], [ %.0104, %622 ], [ %.0104, %612 ], [ %.0104, %602 ], [ %.0104, %601 ], [ %.0104, %591 ], [ %.0104, %581 ], [ %.0104, %580 ], [ %.0104, %579 ], [ %.0104, %567 ], [ %.0104, %557 ], [ %.0104, %555 ], [ %.0104, %538 ], [ %.0104, %528 ], [ %.0104, %520 ], [ %.0104, %512 ], [ %.0104, %510 ], [ %.0104, %495 ], [ %.0104, %485 ], [ %.0104, %482 ], [ %.0104, %473 ], [ %.0104, %465 ], [ %.0104, %463 ], [ %.0104, %447 ], [ %.0104, %437 ], [ %.0104, %430 ], [ %.0104, %429 ], [ %.0104, %417 ], [ %.0104, %407 ], [ %.0104, %398 ], [ %.0104, %389 ], [ %.0104, %382 ], [ %.0104, %375 ], [ %.0104, %374 ], [ %.0104, %362 ], [ %.0104, %352 ], [ %.0104, %343 ], [ %.0104, %334 ], [ %.0104, %326 ], [ %.0104, %319 ], [ %.0104, %316 ], [ %.0104, %308 ], [ %.0104, %301 ], [ %.0104, %299 ], [ %.0104, %284 ], [ %.0104, %274 ], [ %.0104, %267 ], [ %.0104, %264 ], [ %.0104, %262 ], [ %.0104, %246 ], [ %.0104, %236 ], [ %.0104, %228 ], [ %.0104, %220 ], [ %.0104, %218 ], [ %.0104, %203 ], [ %.0104, %193 ], [ %.0104, %190 ], [ %.0104, %188 ], [ %.0104, %171 ], [ %.0104, %161 ], [ %.0104, %153 ], [ %.0104, %145 ], [ %.0104, %138 ], [ %.0104, %135 ], [ %.0104, %134 ], [ %.0104, %131 ], [ %.0104, %130 ], [ %.0104, %120 ], [ %.0104, %110 ], [ %.neg112, %109 ], [ %.0104, %108 ], [ %.0104, %106 ], [ %.0104, %101 ], [ %.0104, %98 ], [ %.0104, %97 ], [ %.0104, %95 ], [ %.0104, %84 ], [ %.0104, %74 ], [ 1, %73 ], [ %.0104, %72 ], [ %.0104, %61 ], [ %.0104, %51 ], [ %.0104, %50 ], [ %.0104, %37 ], [ %.0104, %27 ], [ %.0104, %24 ], [ %.0104, %23 ], [ %.0104, %11 ]
  %.0102.be = phi i32 [ %.0102, %10 ], [ %.0102, %722 ], [ %.0102, %720 ], [ %.0102, %719 ], [ %.0102, %718 ], [ %.0102, %717 ], [ %.0102, %714 ], [ %.0102, %713 ], [ %.0102, %712 ], [ %.0102, %711 ], [ %.0102, %708 ], [ %.0102, %705 ], [ %.0102, %704 ], [ %.0102, %703 ], [ %.0102, %702 ], [ %.0102, %701 ], [ %.0102, %700 ], [ %.0102, %699 ], [ %.0102, %697 ], [ %.0102, %693 ], [ %.0102, %682 ], [ %.0102, %672 ], [ %.0102, %671 ], [ %.0102, %669 ], [ %.0102, %668 ], [ %.0102, %667 ], [ %.0102, %657 ], [ %.0102, %647 ], [ %.0102, %646 ], [ %.0102, %645 ], [ %.0102, %644 ], [ %.0102, %634 ], [ %.0102, %624 ], [ %.0102, %623 ], [ %.0102, %622 ], [ %.0102, %612 ], [ %.0102, %602 ], [ %.0102, %601 ], [ %.0102, %591 ], [ %.0102, %581 ], [ %.0102, %580 ], [ %.0102, %579 ], [ %.0102, %567 ], [ %.0102, %557 ], [ %.0102, %555 ], [ %.0102, %538 ], [ %.0102, %528 ], [ %.0102, %520 ], [ %.0102, %512 ], [ %.0102, %510 ], [ %.0102, %495 ], [ %.0102, %485 ], [ %.0102, %482 ], [ %.0102, %473 ], [ %.0102, %465 ], [ %.0102, %463 ], [ %.0102, %447 ], [ %.0102, %437 ], [ %.0102, %430 ], [ %.0102, %429 ], [ %.0102, %417 ], [ %.0102, %407 ], [ %.0102, %398 ], [ %.0102, %389 ], [ %.0102, %382 ], [ %.0102, %375 ], [ %.0102, %374 ], [ %.0102, %362 ], [ %.0102, %352 ], [ %.0102, %343 ], [ %.0102, %334 ], [ %.0102, %326 ], [ %.0102, %319 ], [ %.0102, %316 ], [ %.0102, %308 ], [ %.0102, %301 ], [ %.0102, %299 ], [ %.0102, %284 ], [ %.0102, %274 ], [ %.0102, %267 ], [ %.0102, %264 ], [ %.0102, %262 ], [ %.0102, %246 ], [ %.0102, %236 ], [ %.0102, %228 ], [ %.0102, %220 ], [ %.0102, %218 ], [ %.0102, %203 ], [ %.0102, %193 ], [ %.0102, %190 ], [ %.0102, %188 ], [ %.0102, %171 ], [ %.0102, %161 ], [ %.0102, %153 ], [ %.0102, %145 ], [ %.0102, %138 ], [ %.0102, %135 ], [ %.0102, %134 ], [ %.0102, %131 ], [ %.0102, %130 ], [ %.0102, %120 ], [ %.0102, %110 ], [ %.0102, %109 ], [ %.0102, %108 ], [ %107, %106 ], [ %.0102, %101 ], [ %.0102, %98 ], [ 0, %97 ], [ %.0102, %95 ], [ %.0102, %84 ], [ %.0102, %74 ], [ %.0102, %73 ], [ %.0102, %72 ], [ %.0102, %61 ], [ %.0102, %51 ], [ %.0102, %50 ], [ %.0102, %37 ], [ %.0102, %27 ], [ %.0102, %24 ], [ %.0102, %23 ], [ %.0102, %11 ]
  %.0100.be = phi i32 [ %.0100, %10 ], [ %.0100, %722 ], [ %.0100, %720 ], [ %.0100, %719 ], [ %.0100, %718 ], [ %.0100, %717 ], [ %.0100, %714 ], [ %.0100, %713 ], [ %.0100, %712 ], [ %.0100, %711 ], [ %.0100, %708 ], [ %.0100, %705 ], [ %.0100, %704 ], [ %.0100, %703 ], [ %.0100, %702 ], [ %.0100, %701 ], [ 0, %700 ], [ %.0100, %699 ], [ %.0100, %697 ], [ %.0100, %693 ], [ %.0100, %682 ], [ %.0100, %672 ], [ %.0100, %671 ], [ %670, %669 ], [ %.0100, %668 ], [ %.0100, %667 ], [ %.0100, %657 ], [ %.0100, %647 ], [ %.0100, %646 ], [ %.0100, %645 ], [ %.0100, %644 ], [ %.0100, %634 ], [ %.0100, %624 ], [ %.0100, %623 ], [ %.0100, %622 ], [ %.0100, %612 ], [ %.0100, %602 ], [ %.0100, %601 ], [ %.0100, %591 ], [ %.0100, %581 ], [ %.0100, %580 ], [ %.0100, %579 ], [ %.0100, %567 ], [ %.0100, %557 ], [ %.0100, %555 ], [ %.0100, %538 ], [ %.0100, %528 ], [ %.0100, %520 ], [ %.0100, %512 ], [ %.0100, %510 ], [ %.0100, %495 ], [ %.0100, %485 ], [ %.0100, %482 ], [ %.0100, %473 ], [ %.0100, %465 ], [ %.0100, %463 ], [ %.0100, %447 ], [ %.0100, %437 ], [ %.0100, %430 ], [ %.0100, %429 ], [ %.0100, %417 ], [ %.0100, %407 ], [ %.0100, %398 ], [ %.0100, %389 ], [ %.0100, %382 ], [ %.0100, %375 ], [ %.0100, %374 ], [ %.0100, %362 ], [ %.0100, %352 ], [ %.0100, %343 ], [ %.0100, %334 ], [ %.0100, %326 ], [ %.0100, %319 ], [ %.0100, %316 ], [ %.0100, %308 ], [ %.0100, %301 ], [ %.0100, %299 ], [ %.0100, %284 ], [ %.0100, %274 ], [ %.0100, %267 ], [ %.0100, %264 ], [ %.0100, %262 ], [ %.0100, %246 ], [ %.0100, %236 ], [ %.0100, %228 ], [ %.0100, %220 ], [ %.0100, %218 ], [ %.0100, %203 ], [ %.0100, %193 ], [ %.0100, %190 ], [ %.0100, %188 ], [ %.0100, %171 ], [ %.0100, %161 ], [ %.0100, %153 ], [ %.0100, %145 ], [ %.0100, %138 ], [ %.0100, %135 ], [ %.0100, %134 ], [ %.0100, %131 ], [ %.0100, %130 ], [ 0, %120 ], [ %.0100, %110 ], [ %.0100, %109 ], [ %.0100, %108 ], [ %.0100, %106 ], [ %.0100, %101 ], [ %.0100, %98 ], [ %.0100, %97 ], [ %.0100, %95 ], [ %.0100, %84 ], [ %.0100, %74 ], [ %.0100, %73 ], [ %.0100, %72 ], [ %.0100, %61 ], [ %.0100, %51 ], [ %.0100, %50 ], [ %.0100, %37 ], [ %.0100, %27 ], [ %.0100, %24 ], [ %.0100, %23 ], [ %.0100, %11 ]
  %.098.be = phi i32 [ %.098, %10 ], [ %.098, %722 ], [ %721, %720 ], [ %.098, %719 ], [ %.098, %718 ], [ %.098, %717 ], [ %.098, %714 ], [ %.098, %713 ], [ %.098, %712 ], [ %.098, %711 ], [ %.098, %708 ], [ %.098, %705 ], [ %.098, %704 ], [ %.098, %703 ], [ %.098, %702 ], [ %.098, %701 ], [ %.098, %700 ], [ %.098, %699 ], [ %.098, %697 ], [ %.098, %693 ], [ %.098, %682 ], [ %.098, %672 ], [ %.098, %671 ], [ %.098, %669 ], [ %.098, %668 ], [ %.098, %667 ], [ %.neg, %657 ], [ %.098, %647 ], [ %.098, %646 ], [ %.098, %645 ], [ %.098, %644 ], [ %.098, %634 ], [ %.098, %624 ], [ %.098, %623 ], [ %.098, %622 ], [ %.098, %612 ], [ %.098, %602 ], [ %.098, %601 ], [ %.098, %591 ], [ %.098, %581 ], [ %.098, %580 ], [ %.098, %579 ], [ %.098, %567 ], [ %.098, %557 ], [ %.098, %555 ], [ %.098, %538 ], [ %.098, %528 ], [ %.098, %520 ], [ %.098, %512 ], [ %.098, %510 ], [ %.098, %495 ], [ %.098, %485 ], [ %.098, %482 ], [ %.098, %473 ], [ %.098, %465 ], [ %.098, %463 ], [ %.098, %447 ], [ %.098, %437 ], [ %.098, %430 ], [ %.098, %429 ], [ %.098, %417 ], [ %.098, %407 ], [ %.098, %398 ], [ %.098, %389 ], [ %.098, %382 ], [ %.098, %375 ], [ %.098, %374 ], [ %.098, %362 ], [ %.098, %352 ], [ %.098, %343 ], [ %.098, %334 ], [ %.098, %326 ], [ %.098, %319 ], [ %.098, %316 ], [ %.098, %308 ], [ %.098, %301 ], [ %.098, %299 ], [ %.098, %284 ], [ %.098, %274 ], [ %.098, %267 ], [ %.098, %264 ], [ %.098, %262 ], [ %.098, %246 ], [ %.098, %236 ], [ %.098, %228 ], [ %.098, %220 ], [ %.098, %218 ], [ %.098, %203 ], [ %.098, %193 ], [ %.098, %190 ], [ %.098, %188 ], [ %.098, %171 ], [ %.098, %161 ], [ %.098, %153 ], [ %.098, %145 ], [ %.098, %138 ], [ %.098, %135 ], [ 0, %134 ], [ %.098, %131 ], [ %.098, %130 ], [ %.098, %120 ], [ %.098, %110 ], [ %.098, %109 ], [ %.098, %108 ], [ %.098, %106 ], [ %.098, %101 ], [ %.098, %98 ], [ %.098, %97 ], [ %.098, %95 ], [ %.098, %84 ], [ %.098, %74 ], [ %.098, %73 ], [ %.098, %72 ], [ %.098, %61 ], [ %.098, %51 ], [ %.098, %50 ], [ %.098, %37 ], [ %.098, %27 ], [ %.098, %24 ], [ %.098, %23 ], [ %.098, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ 1067524520, %722 ], [ -1795045845, %720 ], [ 1887920650, %719 ], [ -1862989087, %718 ], [ 1352427287, %717 ], [ 1437570331, %714 ], [ 429252024, %713 ], [ 98189448, %712 ], [ 1903626445, %711 ], [ -1369801606, %708 ], [ -1233264791, %705 ], [ -572013184, %704 ], [ -1936117092, %703 ], [ 589353905, %702 ], [ -1522072525, %701 ], [ -339735282, %700 ], [ 1844867653, %699 ], [ 441731701, %697 ], [ 1624640827, %693 ], [ %691, %682 ], [ %681, %672 ], [ -575077289, %671 ], [ -91577600, %669 ], [ -104829186, %668 ], [ -1034424886, %667 ], [ %666, %657 ], [ %656, %647 ], [ -523146286, %646 ], [ 391965077, %645 ], [ -1552530831, %644 ], [ %643, %634 ], [ %633, %624 ], [ 322001883, %623 ], [ -688789617, %622 ], [ %621, %612 ], [ %611, %602 ], [ -388504568, %601 ], [ %600, %591 ], [ %590, %581 ], [ -550785097, %580 ], [ 1696799287, %579 ], [ %578, %567 ], [ %566, %557 ], [ %556, %555 ], [ %554, %538 ], [ %537, %528 ], [ %527, %520 ], [ %519, %512 ], [ %511, %510 ], [ %509, %495 ], [ %494, %485 ], [ -550785097, %482 ], [ %481, %473 ], [ %472, %465 ], [ %464, %463 ], [ %462, %447 ], [ %446, %437 ], [ %436, %430 ], [ -388504568, %429 ], [ %428, %417 ], [ %416, %407 ], [ %406, %398 ], [ %397, %389 ], [ %388, %382 ], [ %381, %375 ], [ -688789617, %374 ], [ %373, %362 ], [ %361, %352 ], [ %351, %343 ], [ %342, %334 ], [ %333, %326 ], [ %325, %319 ], [ 322001883, %316 ], [ %315, %308 ], [ %307, %301 ], [ %300, %299 ], [ %298, %284 ], [ %283, %274 ], [ %273, %267 ], [ -1552530831, %264 ], [ %263, %262 ], [ %261, %246 ], [ %245, %236 ], [ %235, %228 ], [ %227, %220 ], [ %219, %218 ], [ %217, %203 ], [ %202, %193 ], [ 391965077, %190 ], [ %189, %188 ], [ %187, %171 ], [ %170, %161 ], [ %160, %153 ], [ %152, %145 ], [ %144, %138 ], [ %137, %135 ], [ -1034424886, %134 ], [ %133, %131 ], [ -91577600, %130 ], [ %129, %120 ], [ %119, %110 ], [ -439049300, %109 ], [ -722135369, %108 ], [ -1716603729, %106 ], [ 871761725, %101 ], [ %100, %98 ], [ -1716603729, %97 ], [ %96, %95 ], [ %94, %84 ], [ %83, %74 ], [ -439049300, %73 ], [ -154482197, %72 ], [ %71, %61 ], [ %60, %51 ], [ 829195873, %50 ], [ %49, %37 ], [ %36, %27 ], [ %26, %24 ], [ -154482197, %23 ], [ %22, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* dereferenceable(1) getelementptr inbounds ([8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 0, i64 0))
  %13 = bitcast %"class.std::basic_istream"* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 -24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::basic_istream"* %12 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  %20 = bitcast i8* %19 to %"class.std::basic_ios"*
  %21 = tail call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %20)
  %22 = select i1 %21, i32 1670915023, i32 802762549
  br label %.backedge

23:                                               ; preds = %10
  br label %.backedge

24:                                               ; preds = %10
  %25 = icmp slt i32 %.0106, 8
  %26 = select i1 %25, i32 1965081412, i32 1105057619
  br label %.backedge

27:                                               ; preds = %10
  %28 = load i32, i32* @x.7, align 4
  %29 = load i32, i32* @y.8, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 1624640827, i32 -1227459127
  br label %.backedge

37:                                               ; preds = %10
  %38 = sext i32 %.0106 to i64
  %39 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 0, i64 %38
  %40 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %39)
  %41 = load i32, i32* @x.7, align 4
  %42 = load i32, i32* @y.8, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 2042613070, i32 -1227459127
  br label %.backedge

50:                                               ; preds = %10
  br label %.backedge

51:                                               ; preds = %10
  %52 = load i32, i32* @x.7, align 4
  %53 = load i32, i32* @y.8, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 441731701, i32 1920824432
  br label %.backedge

61:                                               ; preds = %10
  %62 = add i32 %.0106, 1
  %63 = load i32, i32* @x.7, align 4
  %64 = load i32, i32* @y.8, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -200897319, i32 1920824432
  br label %.backedge

72:                                               ; preds = %10
  br label %.backedge

73:                                               ; preds = %10
  br label %.backedge

74:                                               ; preds = %10
  %75 = load i32, i32* @x.7, align 4
  %76 = load i32, i32* @y.8, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 1844867653, i32 1101172814
  br label %.backedge

84:                                               ; preds = %10
  %85 = icmp slt i32 %.0104, 8
  store i1 %85, i1* %9, align 1
  %86 = load i32, i32* @x.7, align 4
  %87 = load i32, i32* @y.8, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 987018444, i32 1101172814
  br label %.backedge

95:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %96 = select i1 %.0..0..0., i32 1961795154, i32 2000941150
  br label %.backedge

97:                                               ; preds = %10
  br label %.backedge

98:                                               ; preds = %10
  %99 = icmp slt i32 %.0102, 8
  %100 = select i1 %99, i32 538200894, i32 1476608315
  br label %.backedge

101:                                              ; preds = %10
  %102 = sext i32 %.0104 to i64
  %103 = sext i32 %.0102 to i64
  %104 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %102, i64 %103
  %105 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %104)
  br label %.backedge

106:                                              ; preds = %10
  %107 = add i32 %.0102, 1
  br label %.backedge

108:                                              ; preds = %10
  br label %.backedge

109:                                              ; preds = %10
  %.neg112 = add i32 %.0104, 1
  br label %.backedge

110:                                              ; preds = %10
  %111 = load i32, i32* @x.7, align 4
  %112 = load i32, i32* @y.8, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -339735282, i32 -1833121191
  br label %.backedge

120:                                              ; preds = %10
  %121 = load i32, i32* @x.7, align 4
  %122 = load i32, i32* @y.8, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 1200333892, i32 -1833121191
  br label %.backedge

130:                                              ; preds = %10
  br label %.backedge

131:                                              ; preds = %10
  %132 = icmp slt i32 %.0100, 8
  %133 = select i1 %132, i32 279737611, i32 -870789561
  br label %.backedge

134:                                              ; preds = %10
  br label %.backedge

135:                                              ; preds = %10
  %136 = icmp slt i32 %.098, 8
  %137 = select i1 %136, i32 1154904926, i32 1526885608
  br label %.backedge

138:                                              ; preds = %10
  %139 = sext i32 %.0100 to i64
  %140 = sext i32 %.098 to i64
  %141 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %139, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, 49
  %144 = select i1 %143, i32 -1736282974, i32 -2098883433
  br label %.backedge

145:                                              ; preds = %10
  %146 = add i32 %.0100, 1
  %147 = sext i32 %146 to i64
  %148 = sext i32 %.098 to i64
  %149 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %147, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 49
  %152 = select i1 %151, i32 -220906210, i32 -2098883433
  br label %.backedge

153:                                              ; preds = %10
  %154 = sext i32 %.0100 to i64
  %155 = add i32 %.098, 1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %154, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %158, 49
  %160 = select i1 %159, i32 -471130052, i32 -2098883433
  br label %.backedge

161:                                              ; preds = %10
  %162 = load i32, i32* @x.7, align 4
  %163 = load i32, i32* @y.8, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 -1522072525, i32 2027976933
  br label %.backedge

171:                                              ; preds = %10
  %172 = add i32 %.0100, 1
  %173 = sext i32 %172 to i64
  %174 = add i32 %.098, 1
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %173, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 49
  store i1 %178, i1* %8, align 1
  %179 = load i32, i32* @x.7, align 4
  %180 = load i32, i32* @y.8, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 -790745146, i32 2027976933
  br label %.backedge

188:                                              ; preds = %10
  %.0..0..0.90 = load volatile i1, i1* %8, align 1
  %189 = select i1 %.0..0..0.90, i32 -1576076756, i32 -2098883433
  br label %.backedge

190:                                              ; preds = %10
  %191 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %192 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %191, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

193:                                              ; preds = %10
  %194 = load i32, i32* @x.7, align 4
  %195 = load i32, i32* @y.8, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 589353905, i32 1861088809
  br label %.backedge

203:                                              ; preds = %10
  %204 = sext i32 %.0100 to i64
  %205 = sext i32 %.098 to i64
  %206 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %204, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = icmp eq i8 %207, 49
  store i1 %208, i1* %7, align 1
  %209 = load i32, i32* @x.7, align 4
  %210 = load i32, i32* @y.8, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 1406165457, i32 1861088809
  br label %.backedge

218:                                              ; preds = %10
  %.0..0..0.91 = load volatile i1, i1* %7, align 1
  %219 = select i1 %.0..0..0.91, i32 -169758884, i32 -1494711876
  br label %.backedge

220:                                              ; preds = %10
  %221 = add i32 %.0100, 1
  %222 = sext i32 %221 to i64
  %223 = sext i32 %.098 to i64
  %224 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %222, i64 %223
  %225 = load i8, i8* %224, align 1
  %226 = icmp eq i8 %225, 49
  %227 = select i1 %226, i32 1687629221, i32 -1494711876
  br label %.backedge

228:                                              ; preds = %10
  %229 = add i32 %.0100, 2
  %230 = sext i32 %229 to i64
  %231 = sext i32 %.098 to i64
  %232 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %230, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = icmp eq i8 %233, 49
  %235 = select i1 %234, i32 -1731474299, i32 -1494711876
  br label %.backedge

236:                                              ; preds = %10
  %237 = load i32, i32* @x.7, align 4
  %238 = load i32, i32* @y.8, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -1936117092, i32 636397867
  br label %.backedge

246:                                              ; preds = %10
  %247 = add i32 %.0100, 3
  %248 = sext i32 %247 to i64
  %249 = sext i32 %.098 to i64
  %250 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %248, i64 %249
  %251 = load i8, i8* %250, align 1
  %252 = icmp eq i8 %251, 49
  store i1 %252, i1* %6, align 1
  %253 = load i32, i32* @x.7, align 4
  %254 = load i32, i32* @y.8, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 -1664844423, i32 636397867
  br label %.backedge

262:                                              ; preds = %10
  %.0..0..0.92 = load volatile i1, i1* %6, align 1
  %263 = select i1 %.0..0..0.92, i32 640141263, i32 -1494711876
  br label %.backedge

264:                                              ; preds = %10
  %265 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %266 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %265, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

267:                                              ; preds = %10
  %268 = sext i32 %.0100 to i64
  %269 = sext i32 %.098 to i64
  %270 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %268, i64 %269
  %271 = load i8, i8* %270, align 1
  %272 = icmp eq i8 %271, 49
  %273 = select i1 %272, i32 -242348968, i32 1452247911
  br label %.backedge

274:                                              ; preds = %10
  %275 = load i32, i32* @x.7, align 4
  %276 = load i32, i32* @y.8, align 4
  %277 = add i32 %275, -1
  %278 = mul i32 %277, %275
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %281, %280
  %283 = select i1 %282, i32 -572013184, i32 -1707481741
  br label %.backedge

284:                                              ; preds = %10
  %285 = sext i32 %.0100 to i64
  %.neg111 = add i32 %.098, 1
  %286 = sext i32 %.neg111 to i64
  %287 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %285, i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = icmp eq i8 %288, 49
  store i1 %289, i1* %5, align 1
  %290 = load i32, i32* @x.7, align 4
  %291 = load i32, i32* @y.8, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 91314403, i32 -1707481741
  br label %.backedge

299:                                              ; preds = %10
  %.0..0..0.93 = load volatile i1, i1* %5, align 1
  %300 = select i1 %.0..0..0.93, i32 1746363817, i32 1452247911
  br label %.backedge

301:                                              ; preds = %10
  %302 = sext i32 %.0100 to i64
  %.neg110 = add i32 %.098, 2
  %303 = sext i32 %.neg110 to i64
  %304 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %302, i64 %303
  %305 = load i8, i8* %304, align 1
  %306 = icmp eq i8 %305, 49
  %307 = select i1 %306, i32 2067232666, i32 1452247911
  br label %.backedge

308:                                              ; preds = %10
  %309 = sext i32 %.0100 to i64
  %310 = add i32 %.098, 3
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %309, i64 %311
  %313 = load i8, i8* %312, align 1
  %314 = icmp eq i8 %313, 49
  %315 = select i1 %314, i32 1728551380, i32 1452247911
  br label %.backedge

316:                                              ; preds = %10
  %317 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %318 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %317, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

319:                                              ; preds = %10
  %320 = sext i32 %.0100 to i64
  %321 = sext i32 %.098 to i64
  %322 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %320, i64 %321
  %323 = load i8, i8* %322, align 1
  %324 = icmp eq i8 %323, 49
  %325 = select i1 %324, i32 1778443631, i32 858784619
  br label %.backedge

326:                                              ; preds = %10
  %327 = add i32 %.0100, 1
  %328 = sext i32 %327 to i64
  %329 = sext i32 %.098 to i64
  %330 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %328, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = icmp eq i8 %331, 49
  %333 = select i1 %332, i32 -1517374751, i32 858784619
  br label %.backedge

334:                                              ; preds = %10
  %335 = add i32 %.0100, 1
  %336 = sext i32 %335 to i64
  %337 = add i32 %.098, -1
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %336, i64 %338
  %340 = load i8, i8* %339, align 1
  %341 = icmp eq i8 %340, 49
  %342 = select i1 %341, i32 -1609431641, i32 858784619
  br label %.backedge

343:                                              ; preds = %10
  %344 = add i32 %.0100, 2
  %345 = sext i32 %344 to i64
  %346 = add i32 %.098, -1
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %345, i64 %347
  %349 = load i8, i8* %348, align 1
  %350 = icmp eq i8 %349, 49
  %351 = select i1 %350, i32 -589834814, i32 858784619
  br label %.backedge

352:                                              ; preds = %10
  %353 = load i32, i32* @x.7, align 4
  %354 = load i32, i32* @y.8, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 -1233264791, i32 851216156
  br label %.backedge

362:                                              ; preds = %10
  %363 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %364 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %363, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %365 = load i32, i32* @x.7, align 4
  %366 = load i32, i32* @y.8, align 4
  %367 = add i32 %365, -1
  %368 = mul i32 %367, %365
  %369 = and i32 %368, 1
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %371, %370
  %373 = select i1 %372, i32 -1710749652, i32 851216156
  br label %.backedge

374:                                              ; preds = %10
  br label %.backedge

375:                                              ; preds = %10
  %376 = sext i32 %.0100 to i64
  %377 = sext i32 %.098 to i64
  %378 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %376, i64 %377
  %379 = load i8, i8* %378, align 1
  %380 = icmp eq i8 %379, 49
  %381 = select i1 %380, i32 1255068964, i32 2077681971
  br label %.backedge

382:                                              ; preds = %10
  %383 = sext i32 %.0100 to i64
  %.neg109 = add i32 %.098, 1
  %384 = sext i32 %.neg109 to i64
  %385 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %383, i64 %384
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 49
  %388 = select i1 %387, i32 830226820, i32 2077681971
  br label %.backedge

389:                                              ; preds = %10
  %390 = add i32 %.0100, 1
  %391 = sext i32 %390 to i64
  %392 = add i32 %.098, 1
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %391, i64 %393
  %395 = load i8, i8* %394, align 1
  %396 = icmp eq i8 %395, 49
  %397 = select i1 %396, i32 -994131828, i32 2077681971
  br label %.backedge

398:                                              ; preds = %10
  %399 = add i32 %.0100, 1
  %400 = sext i32 %399 to i64
  %401 = add i32 %.098, 2
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %400, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = icmp eq i8 %404, 49
  %406 = select i1 %405, i32 430407366, i32 2077681971
  br label %.backedge

407:                                              ; preds = %10
  %408 = load i32, i32* @x.7, align 4
  %409 = load i32, i32* @y.8, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 -1369801606, i32 -901814891
  br label %.backedge

417:                                              ; preds = %10
  %418 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %419 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %418, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %420 = load i32, i32* @x.7, align 4
  %421 = load i32, i32* @y.8, align 4
  %422 = add i32 %420, -1
  %423 = mul i32 %422, %420
  %424 = and i32 %423, 1
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %426, %425
  %428 = select i1 %427, i32 1697276081, i32 -901814891
  br label %.backedge

429:                                              ; preds = %10
  br label %.backedge

430:                                              ; preds = %10
  %431 = sext i32 %.0100 to i64
  %432 = sext i32 %.098 to i64
  %433 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %431, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = icmp eq i8 %434, 49
  %436 = select i1 %435, i32 -135243609, i32 1213536037
  br label %.backedge

437:                                              ; preds = %10
  %438 = load i32, i32* @x.7, align 4
  %439 = load i32, i32* @y.8, align 4
  %440 = add i32 %438, -1
  %441 = mul i32 %440, %438
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %444, %443
  %446 = select i1 %445, i32 1903626445, i32 -1319448078
  br label %.backedge

447:                                              ; preds = %10
  %448 = add i32 %.0100, 1
  %449 = sext i32 %448 to i64
  %450 = sext i32 %.098 to i64
  %451 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %449, i64 %450
  %452 = load i8, i8* %451, align 1
  %453 = icmp eq i8 %452, 49
  store i1 %453, i1* %4, align 1
  %454 = load i32, i32* @x.7, align 4
  %455 = load i32, i32* @y.8, align 4
  %456 = add i32 %454, -1
  %457 = mul i32 %456, %454
  %458 = and i32 %457, 1
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %460, %459
  %462 = select i1 %461, i32 12730929, i32 -1319448078
  br label %.backedge

463:                                              ; preds = %10
  %.0..0..0.94 = load volatile i1, i1* %4, align 1
  %464 = select i1 %.0..0..0.94, i32 925428316, i32 1213536037
  br label %.backedge

465:                                              ; preds = %10
  %.neg108 = add i32 %.0100, 1
  %466 = sext i32 %.neg108 to i64
  %467 = add i32 %.098, 1
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %466, i64 %468
  %470 = load i8, i8* %469, align 1
  %471 = icmp eq i8 %470, 49
  %472 = select i1 %471, i32 -341237633, i32 1213536037
  br label %.backedge

473:                                              ; preds = %10
  %474 = add i32 %.0100, 2
  %475 = sext i32 %474 to i64
  %476 = add i32 %.098, 1
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %475, i64 %477
  %479 = load i8, i8* %478, align 1
  %480 = icmp eq i8 %479, 49
  %481 = select i1 %480, i32 1194639908, i32 1213536037
  br label %.backedge

482:                                              ; preds = %10
  %483 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  %484 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %483, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

485:                                              ; preds = %10
  %486 = load i32, i32* @x.7, align 4
  %487 = load i32, i32* @y.8, align 4
  %488 = add i32 %486, -1
  %489 = mul i32 %488, %486
  %490 = and i32 %489, 1
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %492, %491
  %494 = select i1 %493, i32 98189448, i32 2098739097
  br label %.backedge

495:                                              ; preds = %10
  %496 = sext i32 %.0100 to i64
  %497 = sext i32 %.098 to i64
  %498 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %496, i64 %497
  %499 = load i8, i8* %498, align 1
  %500 = icmp eq i8 %499, 49
  store i1 %500, i1* %3, align 1
  %501 = load i32, i32* @x.7, align 4
  %502 = load i32, i32* @y.8, align 4
  %503 = add i32 %501, -1
  %504 = mul i32 %503, %501
  %505 = and i32 %504, 1
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %502, 10
  %508 = or i1 %507, %506
  %509 = select i1 %508, i32 826452077, i32 2098739097
  br label %.backedge

510:                                              ; preds = %10
  %.0..0..0.95 = load volatile i1, i1* %3, align 1
  %511 = select i1 %.0..0..0.95, i32 -108609266, i32 1696799287
  br label %.backedge

512:                                              ; preds = %10
  %513 = sext i32 %.0100 to i64
  %514 = add i32 %.098, 1
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %513, i64 %515
  %517 = load i8, i8* %516, align 1
  %518 = icmp eq i8 %517, 49
  %519 = select i1 %518, i32 -505005940, i32 1696799287
  br label %.backedge

520:                                              ; preds = %10
  %521 = add i32 %.0100, 1
  %522 = sext i32 %521 to i64
  %523 = sext i32 %.098 to i64
  %524 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %522, i64 %523
  %525 = load i8, i8* %524, align 1
  %526 = icmp eq i8 %525, 49
  %527 = select i1 %526, i32 -882700920, i32 1696799287
  br label %.backedge

528:                                              ; preds = %10
  %529 = load i32, i32* @x.7, align 4
  %530 = load i32, i32* @y.8, align 4
  %531 = add i32 %529, -1
  %532 = mul i32 %531, %529
  %533 = and i32 %532, 1
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %535, %534
  %537 = select i1 %536, i32 429252024, i32 617849973
  br label %.backedge

538:                                              ; preds = %10
  %539 = add i32 %.0100, 1
  %540 = sext i32 %539 to i64
  %541 = add i32 %.098, -1
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 %540, i64 %542
  %544 = load i8, i8* %543, align 1
  %545 = icmp eq i8 %544, 49
  store i1 %545, i1* %2, align 1
  %546 = load i32, i32* @x.7, align 4
  %547 = load i32, i32* @y.8, align 4
  %548 = add i32 %546, -1
  %549 = mul i32 %548, %546
  %550 = and i32 %549, 1
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %552, %551
  %554 = select i1 %553, i32 1767096750, i32 617849973
  br label %.backedge

555:                                              ; preds = %10
  %.0..0..0.96 = load volatile i1, i1* %2, align 1
  %556 = select i1 %.0..0..0.96, i32 -1024080789, i32 1696799287
  br label %.backedge

557:                                              ; preds = %10
  %558 = load i32, i32* @x.7, align 4
  %559 = load i32, i32* @y.8, align 4
  %560 = add i32 %558, -1
  %561 = mul i32 %560, %558
  %562 = and i32 %561, 1
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %559, 10
  %565 = or i1 %564, %563
  %566 = select i1 %565, i32 1437570331, i32 -180729710
  br label %.backedge

567:                                              ; preds = %10
  %568 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  %569 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %568, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %570 = load i32, i32* @x.7, align 4
  %571 = load i32, i32* @y.8, align 4
  %572 = add i32 %570, -1
  %573 = mul i32 %572, %570
  %574 = and i32 %573, 1
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %571, 10
  %577 = or i1 %576, %575
  %578 = select i1 %577, i32 818395290, i32 -180729710
  br label %.backedge

579:                                              ; preds = %10
  br label %.backedge

580:                                              ; preds = %10
  br label %.backedge

581:                                              ; preds = %10
  %582 = load i32, i32* @x.7, align 4
  %583 = load i32, i32* @y.8, align 4
  %584 = add i32 %582, -1
  %585 = mul i32 %584, %582
  %586 = and i32 %585, 1
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %588, %587
  %590 = select i1 %589, i32 1352427287, i32 -967116413
  br label %.backedge

591:                                              ; preds = %10
  %592 = load i32, i32* @x.7, align 4
  %593 = load i32, i32* @y.8, align 4
  %594 = add i32 %592, -1
  %595 = mul i32 %594, %592
  %596 = and i32 %595, 1
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %598, %597
  %600 = select i1 %599, i32 71228799, i32 -967116413
  br label %.backedge

601:                                              ; preds = %10
  br label %.backedge

602:                                              ; preds = %10
  %603 = load i32, i32* @x.7, align 4
  %604 = load i32, i32* @y.8, align 4
  %605 = add i32 %603, -1
  %606 = mul i32 %605, %603
  %607 = and i32 %606, 1
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %604, 10
  %610 = or i1 %609, %608
  %611 = select i1 %610, i32 -1862989087, i32 1074351597
  br label %.backedge

612:                                              ; preds = %10
  %613 = load i32, i32* @x.7, align 4
  %614 = load i32, i32* @y.8, align 4
  %615 = add i32 %613, -1
  %616 = mul i32 %615, %613
  %617 = and i32 %616, 1
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %619, %618
  %621 = select i1 %620, i32 -158005493, i32 1074351597
  br label %.backedge

622:                                              ; preds = %10
  br label %.backedge

623:                                              ; preds = %10
  br label %.backedge

624:                                              ; preds = %10
  %625 = load i32, i32* @x.7, align 4
  %626 = load i32, i32* @y.8, align 4
  %627 = add i32 %625, -1
  %628 = mul i32 %627, %625
  %629 = and i32 %628, 1
  %630 = icmp eq i32 %629, 0
  %631 = icmp slt i32 %626, 10
  %632 = or i1 %631, %630
  %633 = select i1 %632, i32 1887920650, i32 -626356713
  br label %.backedge

634:                                              ; preds = %10
  %635 = load i32, i32* @x.7, align 4
  %636 = load i32, i32* @y.8, align 4
  %637 = add i32 %635, -1
  %638 = mul i32 %637, %635
  %639 = and i32 %638, 1
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %641, %640
  %643 = select i1 %642, i32 -1954173401, i32 -626356713
  br label %.backedge

644:                                              ; preds = %10
  br label %.backedge

645:                                              ; preds = %10
  br label %.backedge

646:                                              ; preds = %10
  br label %.backedge

647:                                              ; preds = %10
  %648 = load i32, i32* @x.7, align 4
  %649 = load i32, i32* @y.8, align 4
  %650 = add i32 %648, -1
  %651 = mul i32 %650, %648
  %652 = and i32 %651, 1
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %649, 10
  %655 = or i1 %654, %653
  %656 = select i1 %655, i32 -1795045845, i32 1010994263
  br label %.backedge

657:                                              ; preds = %10
  %.neg = add i32 %.098, 1
  %658 = load i32, i32* @x.7, align 4
  %659 = load i32, i32* @y.8, align 4
  %660 = add i32 %658, -1
  %661 = mul i32 %660, %658
  %662 = and i32 %661, 1
  %663 = icmp eq i32 %662, 0
  %664 = icmp slt i32 %659, 10
  %665 = or i1 %664, %663
  %666 = select i1 %665, i32 1590579107, i32 1010994263
  br label %.backedge

667:                                              ; preds = %10
  br label %.backedge

668:                                              ; preds = %10
  br label %.backedge

669:                                              ; preds = %10
  %670 = add i32 %.0100, 1
  br label %.backedge

671:                                              ; preds = %10
  br label %.backedge

672:                                              ; preds = %10
  %673 = load i32, i32* @x.7, align 4
  %674 = load i32, i32* @y.8, align 4
  %675 = add i32 %673, -1
  %676 = mul i32 %675, %673
  %677 = and i32 %676, 1
  %678 = icmp eq i32 %677, 0
  %679 = icmp slt i32 %674, 10
  %680 = or i1 %679, %678
  %681 = select i1 %680, i32 1067524520, i32 1857871183
  br label %.backedge

682:                                              ; preds = %10
  %683 = load i32, i32* @x.7, align 4
  %684 = load i32, i32* @y.8, align 4
  %685 = add i32 %683, -1
  %686 = mul i32 %685, %683
  %687 = and i32 %686, 1
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %684, 10
  %690 = or i1 %689, %688
  %691 = select i1 %690, i32 -1809362953, i32 1857871183
  br label %.backedge

692:                                              ; preds = %10
  store i32 0, i32* %1, align 4
  %.0..0..0.97 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.97

693:                                              ; preds = %10
  %694 = sext i32 %.0106 to i64
  %695 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @s, i64 0, i64 0, i64 %694
  %696 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %695)
  br label %.backedge

697:                                              ; preds = %10
  %698 = add i32 %.0106, 1
  br label %.backedge

699:                                              ; preds = %10
  br label %.backedge

700:                                              ; preds = %10
  br label %.backedge

701:                                              ; preds = %10
  br label %.backedge

702:                                              ; preds = %10
  br label %.backedge

703:                                              ; preds = %10
  br label %.backedge

704:                                              ; preds = %10
  br label %.backedge

705:                                              ; preds = %10
  %706 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %707 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %706, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

708:                                              ; preds = %10
  %709 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %710 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %709, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

711:                                              ; preds = %10
  br label %.backedge

712:                                              ; preds = %10
  br label %.backedge

713:                                              ; preds = %10
  br label %.backedge

714:                                              ; preds = %10
  %715 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  %716 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %715, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

717:                                              ; preds = %10
  br label %.backedge

718:                                              ; preds = %10
  br label %.backedge

719:                                              ; preds = %10
  br label %.backedge

720:                                              ; preds = %10
  %721 = add i32 %.098, 1
  br label %.backedge

722:                                              ; preds = %10
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s724036766.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
