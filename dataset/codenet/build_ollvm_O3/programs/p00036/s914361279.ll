; ModuleID = 'build_ollvm/programs/p00036/s914361279.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s914361279.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZZ4mainE5block = private unnamed_addr constant [7 x [6 x i32]] [[6 x i32] [i32 1, i32 0, i32 0, i32 1, i32 1, i32 1], [6 x i32] [i32 0, i32 1, i32 0, i32 2, i32 0, i32 3], [6 x i32] [i32 1, i32 0, i32 2, i32 0, i32 3, i32 0], [6 x i32] [i32 0, i32 1, i32 -1, i32 1, i32 -1, i32 2], [6 x i32] [i32 1, i32 0, i32 1, i32 1, i32 2, i32 1], [6 x i32] [i32 0, i32 1, i32 1, i32 1, i32 1, i32 2], [6 x i32] [i32 1, i32 0, i32 0, i32 1, i32 -1, i32 1]], align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s914361279.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca [8 x [8 x i32]], align 16
  %9 = alloca i8, align 1
  br label %10

10:                                               ; preds = %.backedge, %0
  %.076 = phi i32 [ 0, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ 0, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ 0, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.0 = phi i32 [ -1045164485, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1045164485, label %11
    i32 985943093, label %21
    i32 -838034439, label %41
    i32 1170666479, label %43
    i32 238300455, label %53
    i32 1882325237, label %65
    i32 -960235558, label %67
    i32 2097942980, label %77
    i32 -2122757461, label %91
    i32 364850638, label %92
    i32 986636193, label %96
    i32 594181032, label %106
    i32 -1433764463, label %120
    i32 1923004906, label %122
    i32 -2069533402, label %123
    i32 -1809353161, label %133
    i32 2009299097, label %143
    i32 502736897, label %144
    i32 78856859, label %154
    i32 1589213077, label %165
    i32 -669141345, label %167
    i32 1138332425, label %168
    i32 937341495, label %178
    i32 55805255, label %189
    i32 -570799409, label %191
    i32 1255278567, label %201
    i32 2046674213, label %211
    i32 1916745414, label %212
    i32 516965143, label %215
    i32 92870352, label %216
    i32 -1862275387, label %219
    i32 -1071828657, label %228
    i32 -635783586, label %237
    i32 -1959731773, label %247
    i32 425252434, label %263
    i32 -762606671, label %265
    i32 -369803164, label %273
    i32 -804223447, label %283
    i32 -936769210, label %308
    i32 668858739, label %310
    i32 -1166456300, label %311
    i32 -1439333517, label %321
    i32 -313102861, label %331
    i32 872461739, label %332
    i32 -1358248615, label %342
    i32 674527697, label %352
    i32 -1613022343, label %353
    i32 1116681300, label %354
    i32 235830733, label %364
    i32 -852637386, label %375
    i32 1583320894, label %376
    i32 1315508157, label %379
    i32 1702453516, label %384
    i32 200843380, label %394
    i32 -152600359, label %404
    i32 1195630270, label %405
    i32 -108334668, label %406
    i32 1870597955, label %407
    i32 -1441895059, label %417
    i32 398063117, label %427
    i32 -798371115, label %428
    i32 -1106137714, label %429
    i32 -1553068820, label %440
    i32 1770637050, label %441
    i32 -1133567464, label %445
    i32 385703617, label %449
    i32 -1111265259, label %450
    i32 -744180990, label %451
    i32 -2081906391, label %452
    i32 -346678808, label %453
    i32 728819957, label %454
    i32 2080951989, label %455
    i32 2029192779, label %456
    i32 1053810342, label %457
    i32 1336661961, label %458
    i32 -1303320967, label %459
  ]

.backedge:                                        ; preds = %10, %459, %458, %457, %456, %455, %454, %453, %452, %451, %450, %449, %445, %441, %440, %429, %427, %417, %407, %406, %405, %404, %394, %384, %379, %376, %375, %364, %354, %353, %352, %342, %332, %331, %321, %311, %310, %308, %283, %273, %265, %263, %247, %237, %228, %219, %216, %215, %212, %211, %201, %191, %189, %178, %168, %167, %165, %154, %144, %143, %133, %123, %122, %120, %106, %96, %92, %91, %77, %67, %65, %53, %43, %41, %21, %11
  %.076.be = phi i32 [ %.076, %10 ], [ %.076, %459 ], [ %.076, %458 ], [ %.076, %457 ], [ %.076, %456 ], [ %.076, %455 ], [ %.076, %454 ], [ %.076, %453 ], [ 0, %452 ], [ %.076, %451 ], [ %.076, %450 ], [ %.076, %449 ], [ %.076, %445 ], [ %.076, %441 ], [ %.076, %440 ], [ %.076, %429 ], [ %.076, %427 ], [ %.076, %417 ], [ %.076, %407 ], [ %.076, %406 ], [ %.076, %405 ], [ %.076, %404 ], [ %.076, %394 ], [ %.076, %384 ], [ %.076, %379 ], [ %.076, %376 ], [ %.076, %375 ], [ %.076, %364 ], [ %.076, %354 ], [ %.076, %353 ], [ %.076, %352 ], [ %.076, %342 ], [ %.076, %332 ], [ %.076, %331 ], [ %.076, %321 ], [ %.076, %311 ], [ %.076, %310 ], [ %.076, %308 ], [ %.076, %283 ], [ %.076, %273 ], [ %.076, %265 ], [ %.076, %263 ], [ %.076, %247 ], [ %.076, %237 ], [ %.076, %228 ], [ %.076, %219 ], [ %.076, %216 ], [ %.076, %215 ], [ %.076, %212 ], [ %.076, %211 ], [ 0, %201 ], [ %.076, %191 ], [ %.076, %189 ], [ %.076, %178 ], [ %.076, %168 ], [ %.neg82, %167 ], [ %.076, %165 ], [ %.076, %154 ], [ %.076, %144 ], [ %.076, %143 ], [ %.076, %133 ], [ %.076, %123 ], [ %.076, %122 ], [ %.076, %120 ], [ %.076, %106 ], [ %.076, %96 ], [ %.076, %92 ], [ %.076, %91 ], [ %.076, %77 ], [ %.076, %67 ], [ %.076, %65 ], [ %.076, %53 ], [ %.076, %43 ], [ %.076, %41 ], [ %.076, %21 ], [ %.076, %11 ]
  %.074.be = phi i32 [ %.074, %10 ], [ %.074, %459 ], [ %.074, %458 ], [ %.074, %457 ], [ %.074, %456 ], [ %.074, %455 ], [ %.074, %454 ], [ %.074, %453 ], [ 0, %452 ], [ %.074, %451 ], [ %.074, %450 ], [ %.neg78, %449 ], [ %.074, %445 ], [ %.neg79, %441 ], [ %.074, %440 ], [ %.074, %429 ], [ %.074, %427 ], [ %.074, %417 ], [ %.074, %407 ], [ %.074, %406 ], [ %.074, %405 ], [ %.074, %404 ], [ %.074, %394 ], [ %.074, %384 ], [ %.074, %379 ], [ %.074, %376 ], [ %.074, %375 ], [ %.074, %364 ], [ %.074, %354 ], [ %.074, %353 ], [ %.074, %352 ], [ %.074, %342 ], [ %.074, %332 ], [ %.074, %331 ], [ %.074, %321 ], [ %.074, %311 ], [ %.074, %310 ], [ %.074, %308 ], [ %.074, %283 ], [ %.074, %273 ], [ %.074, %265 ], [ %.074, %263 ], [ %.074, %247 ], [ %.074, %237 ], [ %.074, %228 ], [ %.074, %219 ], [ %.074, %216 ], [ %.074, %215 ], [ %.074, %212 ], [ %.074, %211 ], [ 0, %201 ], [ %.074, %191 ], [ %.074, %189 ], [ %.074, %178 ], [ %.074, %168 ], [ 0, %167 ], [ %.074, %165 ], [ %.074, %154 ], [ %.074, %144 ], [ %.074, %143 ], [ %.neg83, %133 ], [ %.074, %123 ], [ %.074, %122 ], [ %.074, %120 ], [ %.074, %106 ], [ %.074, %96 ], [ %.074, %92 ], [ %.074, %91 ], [ %81, %77 ], [ %.074, %67 ], [ %.074, %65 ], [ %.074, %53 ], [ %.074, %43 ], [ %.074, %41 ], [ %.074, %21 ], [ %.074, %11 ]
  %.072.be = phi i32 [ %.072, %10 ], [ %.072, %459 ], [ %.072, %458 ], [ %.072, %457 ], [ %.072, %456 ], [ %.072, %455 ], [ %.072, %454 ], [ %.072, %453 ], [ 0, %452 ], [ %.072, %451 ], [ %.072, %450 ], [ %.072, %449 ], [ %.072, %445 ], [ %.072, %441 ], [ %.072, %440 ], [ %.072, %429 ], [ %.072, %427 ], [ %.072, %417 ], [ %.072, %407 ], [ %.072, %406 ], [ %.072, %405 ], [ %.072, %404 ], [ %.072, %394 ], [ %.072, %384 ], [ %.072, %379 ], [ %.072, %376 ], [ %.072, %375 ], [ %.072, %364 ], [ %.072, %354 ], [ %.072, %353 ], [ %.072, %352 ], [ %.072, %342 ], [ %.072, %332 ], [ %.072, %331 ], [ %.072, %321 ], [ %.072, %311 ], [ %.072, %310 ], [ %.072, %308 ], [ %.072, %283 ], [ %.072, %273 ], [ %.072, %265 ], [ %.072, %263 ], [ %.072, %247 ], [ %.072, %237 ], [ %.072, %228 ], [ %.072, %219 ], [ %.072, %216 ], [ %.072, %215 ], [ %.072, %212 ], [ %.072, %211 ], [ 0, %201 ], [ %.072, %191 ], [ %.072, %189 ], [ %.072, %178 ], [ %.072, %168 ], [ %.072, %167 ], [ %.072, %165 ], [ %.072, %154 ], [ %.072, %144 ], [ %.072, %143 ], [ %.072, %133 ], [ %.072, %123 ], [ 1, %122 ], [ %.072, %120 ], [ %.072, %106 ], [ %.072, %96 ], [ %.072, %92 ], [ %.072, %91 ], [ %.072, %77 ], [ %.072, %67 ], [ %.072, %65 ], [ %.072, %53 ], [ %.072, %43 ], [ %.072, %41 ], [ %.072, %21 ], [ %.072, %11 ]
  %.070.be = phi i32 [ %.070, %10 ], [ %.070, %459 ], [ %.070, %458 ], [ %.070, %457 ], [ 0, %456 ], [ %.070, %455 ], [ %.070, %454 ], [ %.070, %453 ], [ %.070, %452 ], [ %.070, %451 ], [ %.070, %450 ], [ %.070, %449 ], [ %.070, %445 ], [ %.070, %441 ], [ %.070, %440 ], [ %.070, %429 ], [ %.070, %427 ], [ %.070, %417 ], [ %.070, %407 ], [ %.070, %406 ], [ %.070, %405 ], [ %.070, %404 ], [ %.070, %394 ], [ %.070, %384 ], [ %.070, %379 ], [ %.070, %376 ], [ %.070, %375 ], [ %.070, %364 ], [ %.070, %354 ], [ %.070, %353 ], [ %.070, %352 ], [ 0, %342 ], [ %.070, %332 ], [ %.070, %331 ], [ %.070, %321 ], [ %.070, %311 ], [ 0, %310 ], [ %.070, %308 ], [ %.070, %283 ], [ %.070, %273 ], [ %.070, %265 ], [ %.070, %263 ], [ %.070, %247 ], [ %.070, %237 ], [ %.070, %228 ], [ %.070, %219 ], [ %.070, %216 ], [ 1, %215 ], [ %.070, %212 ], [ %.070, %211 ], [ %.070, %201 ], [ %.070, %191 ], [ %.070, %189 ], [ %.070, %178 ], [ %.070, %168 ], [ %.070, %167 ], [ %.070, %165 ], [ %.070, %154 ], [ %.070, %144 ], [ %.070, %143 ], [ %.070, %133 ], [ %.070, %123 ], [ %.070, %122 ], [ %.070, %120 ], [ %.070, %106 ], [ %.070, %96 ], [ %.070, %92 ], [ %.070, %91 ], [ %.070, %77 ], [ %.070, %67 ], [ %.070, %65 ], [ %.070, %53 ], [ %.070, %43 ], [ %.070, %41 ], [ %.070, %21 ], [ %.070, %11 ]
  %.068.be = phi i32 [ %.068, %10 ], [ %.068, %459 ], [ %.068, %458 ], [ %.068, %457 ], [ %.068, %456 ], [ %.068, %455 ], [ %.068, %454 ], [ %.068, %453 ], [ %.068, %452 ], [ %.068, %451 ], [ %.068, %450 ], [ %.068, %449 ], [ %.068, %445 ], [ %.068, %441 ], [ %.068, %440 ], [ %.068, %429 ], [ %.068, %427 ], [ %.068, %417 ], [ %.068, %407 ], [ %.068, %406 ], [ %.068, %405 ], [ %.068, %404 ], [ %.068, %394 ], [ %.068, %384 ], [ %.068, %379 ], [ %.068, %376 ], [ %.068, %375 ], [ %.068, %364 ], [ %.068, %354 ], [ %.068, %353 ], [ %.068, %352 ], [ %.068, %342 ], [ %.068, %332 ], [ %.068, %331 ], [ %.068, %321 ], [ %.068, %311 ], [ %.068, %310 ], [ %.068, %308 ], [ %.068, %283 ], [ %.068, %273 ], [ %.068, %265 ], [ %.068, %263 ], [ %.068, %247 ], [ %.068, %237 ], [ %.068, %228 ], [ %.068, %219 ], [ %.068, %216 ], [ %.068, %215 ], [ %.068, %212 ], [ %.068, %211 ], [ %.068, %201 ], [ %.068, %191 ], [ %.068, %189 ], [ %.068, %178 ], [ %.068, %168 ], [ %.068, %167 ], [ %.068, %165 ], [ %.068, %154 ], [ %.068, %144 ], [ %.068, %143 ], [ %.068, %133 ], [ %.068, %123 ], [ %.074, %122 ], [ %.068, %120 ], [ %.068, %106 ], [ %.068, %96 ], [ %.068, %92 ], [ %.068, %91 ], [ %.068, %77 ], [ %.068, %67 ], [ %.068, %65 ], [ %.068, %53 ], [ %.068, %43 ], [ %.068, %41 ], [ %.068, %21 ], [ %.068, %11 ]
  %.066.be = phi i32 [ %.066, %10 ], [ %.066, %459 ], [ %.066, %458 ], [ %.066, %457 ], [ %.066, %456 ], [ %.066, %455 ], [ %.066, %454 ], [ %.066, %453 ], [ %.066, %452 ], [ %.066, %451 ], [ %.066, %450 ], [ %.066, %449 ], [ %.066, %445 ], [ %.066, %441 ], [ %.066, %440 ], [ %.066, %429 ], [ %.066, %427 ], [ %.066, %417 ], [ %.066, %407 ], [ %.066, %406 ], [ %.066, %405 ], [ %.066, %404 ], [ %.066, %394 ], [ %.066, %384 ], [ %.066, %379 ], [ %.066, %376 ], [ %.066, %375 ], [ %.066, %364 ], [ %.066, %354 ], [ %.066, %353 ], [ %.066, %352 ], [ %.066, %342 ], [ %.066, %332 ], [ %.066, %331 ], [ %.066, %321 ], [ %.066, %311 ], [ %.066, %310 ], [ %.066, %308 ], [ %.066, %283 ], [ %.066, %273 ], [ %.066, %265 ], [ %.066, %263 ], [ %.066, %247 ], [ %.066, %237 ], [ %.066, %228 ], [ %.066, %219 ], [ %.066, %216 ], [ %.066, %215 ], [ %.066, %212 ], [ %.066, %211 ], [ %.066, %201 ], [ %.066, %191 ], [ %.066, %189 ], [ %.066, %178 ], [ %.066, %168 ], [ %.066, %167 ], [ %.066, %165 ], [ %.066, %154 ], [ %.066, %144 ], [ %.066, %143 ], [ %.066, %133 ], [ %.066, %123 ], [ %.076, %122 ], [ %.066, %120 ], [ %.066, %106 ], [ %.066, %96 ], [ %.066, %92 ], [ %.066, %91 ], [ %.066, %77 ], [ %.066, %67 ], [ %.066, %65 ], [ %.066, %53 ], [ %.066, %43 ], [ %.066, %41 ], [ %.066, %21 ], [ %.066, %11 ]
  %.064.be = phi i32 [ %.064, %10 ], [ %.064, %459 ], [ %.064, %458 ], [ %.064, %457 ], [ %.064, %456 ], [ %.064, %455 ], [ %.064, %454 ], [ %.064, %453 ], [ 0, %452 ], [ %.064, %451 ], [ %.064, %450 ], [ %.064, %449 ], [ %.064, %445 ], [ %.064, %441 ], [ %.064, %440 ], [ %.064, %429 ], [ %.064, %427 ], [ %.064, %417 ], [ %.064, %407 ], [ %.064, %406 ], [ %.neg80, %405 ], [ %.064, %404 ], [ %.064, %394 ], [ %.064, %384 ], [ %.064, %379 ], [ %.064, %376 ], [ %.064, %375 ], [ %.064, %364 ], [ %.064, %354 ], [ %.064, %353 ], [ %.064, %352 ], [ %.064, %342 ], [ %.064, %332 ], [ %.064, %331 ], [ %.064, %321 ], [ %.064, %311 ], [ %.064, %310 ], [ %.064, %308 ], [ %.064, %283 ], [ %.064, %273 ], [ %.064, %265 ], [ %.064, %263 ], [ %.064, %247 ], [ %.064, %237 ], [ %.064, %228 ], [ %.064, %219 ], [ %.064, %216 ], [ %.064, %215 ], [ %.064, %212 ], [ %.064, %211 ], [ 0, %201 ], [ %.064, %191 ], [ %.064, %189 ], [ %.064, %178 ], [ %.064, %168 ], [ %.064, %167 ], [ %.064, %165 ], [ %.064, %154 ], [ %.064, %144 ], [ %.064, %143 ], [ %.064, %133 ], [ %.064, %123 ], [ %.064, %122 ], [ %.064, %120 ], [ %.064, %106 ], [ %.064, %96 ], [ %.064, %92 ], [ %.064, %91 ], [ %.064, %77 ], [ %.064, %67 ], [ %.064, %65 ], [ %.064, %53 ], [ %.064, %43 ], [ %.064, %41 ], [ %.064, %21 ], [ %.064, %11 ]
  %.062.be = phi i32 [ %.062, %10 ], [ %.062, %459 ], [ %.062, %458 ], [ %.neg, %457 ], [ %.062, %456 ], [ %.062, %455 ], [ %.062, %454 ], [ %.062, %453 ], [ %.062, %452 ], [ %.062, %451 ], [ %.062, %450 ], [ %.062, %449 ], [ %.062, %445 ], [ %.062, %441 ], [ %.062, %440 ], [ %.062, %429 ], [ %.062, %427 ], [ %.062, %417 ], [ %.062, %407 ], [ %.062, %406 ], [ %.062, %405 ], [ %.062, %404 ], [ %.062, %394 ], [ %.062, %384 ], [ %.062, %379 ], [ %.062, %376 ], [ %.062, %375 ], [ %365, %364 ], [ %.062, %354 ], [ %.062, %353 ], [ %.062, %352 ], [ %.062, %342 ], [ %.062, %332 ], [ %.062, %331 ], [ %.062, %321 ], [ %.062, %311 ], [ %.062, %310 ], [ %.062, %308 ], [ %.062, %283 ], [ %.062, %273 ], [ %.062, %265 ], [ %.062, %263 ], [ %.062, %247 ], [ %.062, %237 ], [ %.062, %228 ], [ %.062, %219 ], [ %.062, %216 ], [ 0, %215 ], [ %.062, %212 ], [ %.062, %211 ], [ %.062, %201 ], [ %.062, %191 ], [ %.062, %189 ], [ %.062, %178 ], [ %.062, %168 ], [ %.062, %167 ], [ %.062, %165 ], [ %.062, %154 ], [ %.062, %144 ], [ %.062, %143 ], [ %.062, %133 ], [ %.062, %123 ], [ %.062, %122 ], [ %.062, %120 ], [ %.062, %106 ], [ %.062, %96 ], [ %.062, %92 ], [ %.062, %91 ], [ %.062, %77 ], [ %.062, %67 ], [ %.062, %65 ], [ %.062, %53 ], [ %.062, %43 ], [ %.062, %41 ], [ %.062, %21 ], [ %.062, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ -1441895059, %459 ], [ 200843380, %458 ], [ 235830733, %457 ], [ -1358248615, %456 ], [ -1439333517, %455 ], [ -804223447, %454 ], [ -1959731773, %453 ], [ 1255278567, %452 ], [ 937341495, %451 ], [ 78856859, %450 ], [ -1809353161, %449 ], [ 594181032, %445 ], [ 2097942980, %441 ], [ 238300455, %440 ], [ 985943093, %429 ], [ -1045164485, %427 ], [ %426, %417 ], [ %416, %407 ], [ 1870597955, %406 ], [ 1916745414, %405 ], [ 1195630270, %404 ], [ %403, %394 ], [ %393, %384 ], [ -108334668, %379 ], [ %378, %376 ], [ 92870352, %375 ], [ %374, %364 ], [ %363, %354 ], [ 1116681300, %353 ], [ -1613022343, %352 ], [ %351, %342 ], [ %341, %332 ], [ -1613022343, %331 ], [ %330, %321 ], [ %320, %311 ], [ -1166456300, %310 ], [ %309, %308 ], [ %307, %283 ], [ %282, %273 ], [ %272, %265 ], [ %264, %263 ], [ %262, %247 ], [ %246, %237 ], [ %236, %228 ], [ %227, %219 ], [ %218, %216 ], [ 92870352, %215 ], [ %214, %212 ], [ 1916745414, %211 ], [ %210, %201 ], [ %200, %191 ], [ %190, %189 ], [ %188, %178 ], [ %177, %168 ], [ 1138332425, %167 ], [ %166, %165 ], [ %164, %154 ], [ %153, %144 ], [ 502736897, %143 ], [ %142, %133 ], [ %132, %123 ], [ -2069533402, %122 ], [ %121, %120 ], [ %119, %106 ], [ %105, %96 ], [ %95, %92 ], [ 364850638, %91 ], [ %90, %77 ], [ %76, %67 ], [ %66, %65 ], [ %64, %53 ], [ %52, %43 ], [ %42, %41 ], [ %40, %21 ], [ %20, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* @x.1, align 4
  %13 = load i32, i32* @y.2, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 985943093, i32 -1106137714
  br label %.backedge

21:                                               ; preds = %10
  %22 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %9)
  %23 = bitcast %"class.std::basic_istream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::basic_istream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = bitcast i8* %29 to %"class.std::basic_ios"*
  %31 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %30)
  store i1 %31, i1* %7, align 1
  %32 = load i32, i32* @x.1, align 4
  %33 = load i32, i32* @y.2, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -838034439, i32 -1106137714
  br label %.backedge

41:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %7, align 1
  %42 = select i1 %.0..0..0., i32 1170666479, i32 -798371115
  br label %.backedge

43:                                               ; preds = %10
  %44 = load i32, i32* @x.1, align 4
  %45 = load i32, i32* @y.2, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 238300455, i32 -1553068820
  br label %.backedge

53:                                               ; preds = %10
  %54 = load i8, i8* %9, align 1
  %55 = icmp eq i8 %54, 48
  store i1 %55, i1* %6, align 1
  %56 = load i32, i32* @x.1, align 4
  %57 = load i32, i32* @y.2, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 1882325237, i32 -1553068820
  br label %.backedge

65:                                               ; preds = %10
  %.0..0..0.56 = load volatile i1, i1* %6, align 1
  %66 = select i1 %.0..0..0.56, i32 -960235558, i32 364850638
  br label %.backedge

67:                                               ; preds = %10
  %68 = load i32, i32* @x.1, align 4
  %69 = load i32, i32* @y.2, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 2097942980, i32 1770637050
  br label %.backedge

77:                                               ; preds = %10
  %78 = sext i32 %.076 to i64
  %79 = sext i32 %.074 to i64
  %80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %8, i64 0, i64 %78, i64 %79
  store i32 0, i32* %80, align 4
  %81 = add i32 %.074, 1
  %82 = load i32, i32* @x.1, align 4
  %83 = load i32, i32* @y.2, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 -2122757461, i32 1770637050
  br label %.backedge

91:                                               ; preds = %10
  br label %.backedge

92:                                               ; preds = %10
  %93 = load i8, i8* %9, align 1
  %94 = icmp eq i8 %93, 49
  %95 = select i1 %94, i32 986636193, i32 502736897
  br label %.backedge

96:                                               ; preds = %10
  %97 = load i32, i32* @x.1, align 4
  %98 = load i32, i32* @y.2, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 594181032, i32 -1133567464
  br label %.backedge

106:                                              ; preds = %10
  %107 = sext i32 %.076 to i64
  %108 = sext i32 %.074 to i64
  %109 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %8, i64 0, i64 %107, i64 %108
  store i32 1, i32* %109, align 4
  %110 = icmp eq i32 %.072, 0
  store i1 %110, i1* %5, align 1
  %111 = load i32, i32* @x.1, align 4
  %112 = load i32, i32* @y.2, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -1433764463, i32 -1133567464
  br label %.backedge

120:                                              ; preds = %10
  %.0..0..0.57 = load volatile i1, i1* %5, align 1
  %121 = select i1 %.0..0..0.57, i32 1923004906, i32 -2069533402
  br label %.backedge

122:                                              ; preds = %10
  br label %.backedge

123:                                              ; preds = %10
  %124 = load i32, i32* @x.1, align 4
  %125 = load i32, i32* @y.2, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 -1809353161, i32 385703617
  br label %.backedge

133:                                              ; preds = %10
  %.neg83 = add i32 %.074, 1
  %134 = load i32, i32* @x.1, align 4
  %135 = load i32, i32* @y.2, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 2009299097, i32 385703617
  br label %.backedge

143:                                              ; preds = %10
  br label %.backedge

144:                                              ; preds = %10
  %145 = load i32, i32* @x.1, align 4
  %146 = load i32, i32* @y.2, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 78856859, i32 -1111265259
  br label %.backedge

154:                                              ; preds = %10
  %155 = icmp eq i32 %.074, 8
  store i1 %155, i1* %4, align 1
  %156 = load i32, i32* @x.1, align 4
  %157 = load i32, i32* @y.2, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 1589213077, i32 -1111265259
  br label %.backedge

165:                                              ; preds = %10
  %.0..0..0.58 = load volatile i1, i1* %4, align 1
  %166 = select i1 %.0..0..0.58, i32 -669141345, i32 1138332425
  br label %.backedge

167:                                              ; preds = %10
  %.neg82 = add i32 %.076, 1
  br label %.backedge

168:                                              ; preds = %10
  %169 = load i32, i32* @x.1, align 4
  %170 = load i32, i32* @y.2, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 937341495, i32 -744180990
  br label %.backedge

178:                                              ; preds = %10
  %179 = icmp eq i32 %.076, 8
  store i1 %179, i1* %3, align 1
  %180 = load i32, i32* @x.1, align 4
  %181 = load i32, i32* @y.2, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 55805255, i32 -744180990
  br label %.backedge

189:                                              ; preds = %10
  %.0..0..0.59 = load volatile i1, i1* %3, align 1
  %190 = select i1 %.0..0..0.59, i32 -570799409, i32 1870597955
  br label %.backedge

191:                                              ; preds = %10
  %192 = load i32, i32* @x.1, align 4
  %193 = load i32, i32* @y.2, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 1255278567, i32 -2081906391
  br label %.backedge

201:                                              ; preds = %10
  %202 = load i32, i32* @x.1, align 4
  %203 = load i32, i32* @y.2, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 2046674213, i32 -2081906391
  br label %.backedge

211:                                              ; preds = %10
  br label %.backedge

212:                                              ; preds = %10
  %213 = icmp slt i32 %.064, 7
  %214 = select i1 %213, i32 516965143, i32 -108334668
  br label %.backedge

215:                                              ; preds = %10
  br label %.backedge

216:                                              ; preds = %10
  %217 = icmp slt i32 %.062, 6
  %218 = select i1 %217, i32 -1862275387, i32 1583320894
  br label %.backedge

219:                                              ; preds = %10
  %220 = sext i32 %.064 to i64
  %221 = add i32 %.062, 1
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [7 x [6 x i32]], [7 x [6 x i32]]* @_ZZ4mainE5block, i64 0, i64 %220, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = add i32 %224, %.066
  %226 = icmp sgt i32 %225, -1
  %227 = select i1 %226, i32 -1071828657, i32 872461739
  br label %.backedge

228:                                              ; preds = %10
  %229 = sext i32 %.064 to i64
  %230 = add i32 %.062, 1
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [7 x [6 x i32]], [7 x [6 x i32]]* @_ZZ4mainE5block, i64 0, i64 %229, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = add i32 %233, %.066
  %235 = icmp slt i32 %234, 8
  %236 = select i1 %235, i32 -635783586, i32 872461739
  br label %.backedge

237:                                              ; preds = %10
  %238 = load i32, i32* @x.1, align 4
  %239 = load i32, i32* @y.2, align 4
  %240 = add i32 %238, -1
  %241 = mul i32 %240, %238
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %244, %243
  %246 = select i1 %245, i32 -1959731773, i32 -346678808
  br label %.backedge

247:                                              ; preds = %10
  %248 = sext i32 %.064 to i64
  %249 = sext i32 %.062 to i64
  %250 = getelementptr inbounds [7 x [6 x i32]], [7 x [6 x i32]]* @_ZZ4mainE5block, i64 0, i64 %248, i64 %249
  %251 = load i32, i32* %250, align 4
  %252 = add i32 %251, %.068
  %253 = icmp sgt i32 %252, -1
  store i1 %253, i1* %2, align 1
  %254 = load i32, i32* @x.1, align 4
  %255 = load i32, i32* @y.2, align 4
  %256 = add i32 %254, -1
  %257 = mul i32 %256, %254
  %258 = and i32 %257, 1
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %260, %259
  %262 = select i1 %261, i32 425252434, i32 -346678808
  br label %.backedge

263:                                              ; preds = %10
  %.0..0..0.60 = load volatile i1, i1* %2, align 1
  %264 = select i1 %.0..0..0.60, i32 -762606671, i32 872461739
  br label %.backedge

265:                                              ; preds = %10
  %266 = sext i32 %.064 to i64
  %267 = sext i32 %.062 to i64
  %268 = getelementptr inbounds [7 x [6 x i32]], [7 x [6 x i32]]* @_ZZ4mainE5block, i64 0, i64 %266, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = add i32 %269, %.068
  %271 = icmp slt i32 %270, 8
  %272 = select i1 %271, i32 -369803164, i32 872461739
  br label %.backedge

273:                                              ; preds = %10
  %274 = load i32, i32* @x.1, align 4
  %275 = load i32, i32* @y.2, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 -804223447, i32 728819957
  br label %.backedge

283:                                              ; preds = %10
  %284 = sext i32 %.064 to i64
  %285 = add i32 %.062, 1
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [7 x [6 x i32]], [7 x [6 x i32]]* @_ZZ4mainE5block, i64 0, i64 %284, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = add i32 %288, %.066
  %290 = sext i32 %289 to i64
  %291 = sext i32 %.062 to i64
  %292 = getelementptr inbounds [7 x [6 x i32]], [7 x [6 x i32]]* @_ZZ4mainE5block, i64 0, i64 %284, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = add i32 %293, %.068
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %8, i64 0, i64 %290, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = icmp ne i32 %297, 1
  store i1 %298, i1* %1, align 1
  %299 = load i32, i32* @x.1, align 4
  %300 = load i32, i32* @y.2, align 4
  %301 = add i32 %299, -1
  %302 = mul i32 %301, %299
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %305, %304
  %307 = select i1 %306, i32 -936769210, i32 728819957
  br label %.backedge

308:                                              ; preds = %10
  %.0..0..0.61 = load volatile i1, i1* %1, align 1
  %309 = select i1 %.0..0..0.61, i32 668858739, i32 -1166456300
  br label %.backedge

310:                                              ; preds = %10
  br label %.backedge

311:                                              ; preds = %10
  %312 = load i32, i32* @x.1, align 4
  %313 = load i32, i32* @y.2, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 -1439333517, i32 2080951989
  br label %.backedge

321:                                              ; preds = %10
  %322 = load i32, i32* @x.1, align 4
  %323 = load i32, i32* @y.2, align 4
  %324 = add i32 %322, -1
  %325 = mul i32 %324, %322
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %328, %327
  %330 = select i1 %329, i32 -313102861, i32 2080951989
  br label %.backedge

331:                                              ; preds = %10
  br label %.backedge

332:                                              ; preds = %10
  %333 = load i32, i32* @x.1, align 4
  %334 = load i32, i32* @y.2, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 -1358248615, i32 2029192779
  br label %.backedge

342:                                              ; preds = %10
  %343 = load i32, i32* @x.1, align 4
  %344 = load i32, i32* @y.2, align 4
  %345 = add i32 %343, -1
  %346 = mul i32 %345, %343
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %349, %348
  %351 = select i1 %350, i32 674527697, i32 2029192779
  br label %.backedge

352:                                              ; preds = %10
  br label %.backedge

353:                                              ; preds = %10
  br label %.backedge

354:                                              ; preds = %10
  %355 = load i32, i32* @x.1, align 4
  %356 = load i32, i32* @y.2, align 4
  %357 = add i32 %355, -1
  %358 = mul i32 %357, %355
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %361, %360
  %363 = select i1 %362, i32 235830733, i32 1053810342
  br label %.backedge

364:                                              ; preds = %10
  %365 = add i32 %.062, 2
  %366 = load i32, i32* @x.1, align 4
  %367 = load i32, i32* @y.2, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 -852637386, i32 1053810342
  br label %.backedge

375:                                              ; preds = %10
  br label %.backedge

376:                                              ; preds = %10
  %377 = icmp eq i32 %.070, 1
  %378 = select i1 %377, i32 1315508157, i32 1702453516
  br label %.backedge

379:                                              ; preds = %10
  %380 = trunc i32 %.064 to i8
  %381 = add i8 %380, 65
  %382 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %381)
  %383 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %382, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

384:                                              ; preds = %10
  %385 = load i32, i32* @x.1, align 4
  %386 = load i32, i32* @y.2, align 4
  %387 = add i32 %385, -1
  %388 = mul i32 %387, %385
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %391, %390
  %393 = select i1 %392, i32 200843380, i32 1336661961
  br label %.backedge

394:                                              ; preds = %10
  %395 = load i32, i32* @x.1, align 4
  %396 = load i32, i32* @y.2, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 -152600359, i32 1336661961
  br label %.backedge

404:                                              ; preds = %10
  br label %.backedge

405:                                              ; preds = %10
  %.neg80 = add i32 %.064, 1
  br label %.backedge

406:                                              ; preds = %10
  br label %.backedge

407:                                              ; preds = %10
  %408 = load i32, i32* @x.1, align 4
  %409 = load i32, i32* @y.2, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 -1441895059, i32 -1303320967
  br label %.backedge

417:                                              ; preds = %10
  %418 = load i32, i32* @x.1, align 4
  %419 = load i32, i32* @y.2, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 398063117, i32 -1303320967
  br label %.backedge

427:                                              ; preds = %10
  br label %.backedge

428:                                              ; preds = %10
  ret i32 0

429:                                              ; preds = %10
  %430 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %9)
  %431 = bitcast %"class.std::basic_istream"* %430 to i8**
  %432 = load i8*, i8** %431, align 8
  %433 = getelementptr i8, i8* %432, i64 -24
  %434 = bitcast i8* %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = bitcast %"class.std::basic_istream"* %430 to i8*
  %437 = getelementptr inbounds i8, i8* %436, i64 %435
  %438 = bitcast i8* %437 to %"class.std::basic_ios"*
  %439 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %438)
  br label %.backedge

440:                                              ; preds = %10
  br label %.backedge

441:                                              ; preds = %10
  %442 = sext i32 %.076 to i64
  %443 = sext i32 %.074 to i64
  %444 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %8, i64 0, i64 %442, i64 %443
  store i32 0, i32* %444, align 4
  %.neg79 = add i32 %.074, 1
  br label %.backedge

445:                                              ; preds = %10
  %446 = sext i32 %.076 to i64
  %447 = sext i32 %.074 to i64
  %448 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %8, i64 0, i64 %446, i64 %447
  store i32 1, i32* %448, align 4
  br label %.backedge

449:                                              ; preds = %10
  %.neg78 = add i32 %.074, 1
  br label %.backedge

450:                                              ; preds = %10
  br label %.backedge

451:                                              ; preds = %10
  br label %.backedge

452:                                              ; preds = %10
  br label %.backedge

453:                                              ; preds = %10
  br label %.backedge

454:                                              ; preds = %10
  br label %.backedge

455:                                              ; preds = %10
  br label %.backedge

456:                                              ; preds = %10
  br label %.backedge

457:                                              ; preds = %10
  %.neg = add i32 %.062, 2
  br label %.backedge

458:                                              ; preds = %10
  br label %.backedge

459:                                              ; preds = %10
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s914361279.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
