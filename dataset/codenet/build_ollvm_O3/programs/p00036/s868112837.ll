; ModuleID = 'build_ollvm/programs/p00036/s868112837.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s868112837.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s868112837.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i8, align 1
  %11 = alloca [16 x [16 x i32]], align 16
  %12 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 0, i64 0
  %13 = bitcast [16 x [16 x i32]]* %11 to i8*
  br label %14

14:                                               ; preds = %.backedge, %0
  %.0106 = phi i8 [ 48, %0 ], [ %.0106.be, %.backedge ]
  %.0104 = phi i32 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i32 [ undef, %0 ], [ %.0102.be, %.backedge ]
  %.0100 = phi i32 [ undef, %0 ], [ %.0100.be, %.backedge ]
  %.098 = phi i32 [ undef, %0 ], [ %.098.be, %.backedge ]
  %.0 = phi i32 [ -1776167440, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1776167440, label %15
    i32 -2033243081, label %25
    i32 2003805750, label %45
    i32 428945569, label %47
    i32 176233758, label %51
    i32 1301475094, label %52
    i32 -1794958362, label %56
    i32 -1690586729, label %59
    i32 1356327440, label %60
    i32 1788732031, label %63
    i32 -2069831943, label %66
    i32 101263516, label %76
    i32 -58326764, label %87
    i32 -1771732764, label %89
    i32 969121973, label %90
    i32 -2021663136, label %100
    i32 420241653, label %117
    i32 563424287, label %118
    i32 -1212576333, label %128
    i32 -2107953918, label %139
    i32 403669278, label %140
    i32 273638975, label %150
    i32 158657091, label %160
    i32 -1268622541, label %161
    i32 -787448654, label %163
    i32 -1995433387, label %173
    i32 -1026086368, label %183
    i32 2098310279, label %184
    i32 549995579, label %187
    i32 1153951701, label %188
    i32 2138347927, label %191
    i32 -407707317, label %197
    i32 -146525584, label %204
    i32 -926260661, label %211
    i32 -1249157945, label %218
    i32 292517119, label %228
    i32 187148904, label %238
    i32 -794150784, label %239
    i32 867262528, label %249
    i32 -9420736, label %264
    i32 358725296, label %266
    i32 1389211341, label %273
    i32 -2108998203, label %283
    i32 -314941586, label %299
    i32 -1321435587, label %301
    i32 578117130, label %308
    i32 -2018574791, label %318
    i32 48652424, label %328
    i32 -428593616, label %329
    i32 274707431, label %339
    i32 1553037768, label %354
    i32 -1112921285, label %356
    i32 698452735, label %362
    i32 799708237, label %369
    i32 -1138765063, label %379
    i32 -31764859, label %395
    i32 -1918825254, label %397
    i32 1634034600, label %407
    i32 614067676, label %417
    i32 680055627, label %418
    i32 -394485906, label %424
    i32 1201198391, label %434
    i32 -591295654, label %450
    i32 -2112526876, label %452
    i32 914702228, label %462
    i32 1231095055, label %478
    i32 -794142350, label %480
    i32 1310612367, label %488
    i32 -2013201483, label %498
    i32 -903086806, label %508
    i32 -91464662, label %509
    i32 60022601, label %515
    i32 682253117, label %521
    i32 -1820231325, label %528
    i32 -1923791611, label %535
    i32 -1042989116, label %545
    i32 1452884325, label %555
    i32 -1774443813, label %556
    i32 -1615311183, label %562
    i32 5760076, label %569
    i32 1004915107, label %577
    i32 -1023272533, label %587
    i32 595569732, label %604
    i32 -1739869352, label %606
    i32 462446267, label %607
    i32 1025715511, label %613
    i32 206007279, label %620
    i32 -1360061419, label %628
    i32 1782081156, label %636
    i32 -1544178519, label %637
    i32 1476976497, label %647
    i32 1889790472, label %657
    i32 -2127176842, label %658
    i32 2051658777, label %659
    i32 1941242809, label %661
    i32 -1745501745, label %662
    i32 -1418129398, label %672
    i32 -273141431, label %682
    i32 -1152128920, label %683
    i32 55275494, label %685
    i32 -2145180354, label %688
    i32 -874933914, label %689
    i32 -703467668, label %700
    i32 -1663153775, label %701
    i32 -109134491, label %709
    i32 -1557601034, label %711
    i32 -939021808, label %712
    i32 -82635268, label %713
    i32 -1028232627, label %714
    i32 682137552, label %715
    i32 12175526, label %716
    i32 -918021061, label %717
    i32 1362727647, label %718
    i32 -1321158527, label %719
    i32 1922382861, label %720
    i32 -1556439592, label %721
    i32 974957965, label %722
    i32 -846682982, label %723
    i32 2109445030, label %724
    i32 2018560819, label %725
    i32 517696533, label %726
  ]

.backedge:                                        ; preds = %14, %726, %725, %724, %723, %722, %721, %720, %719, %718, %717, %716, %715, %714, %713, %712, %711, %709, %701, %700, %689, %685, %683, %682, %672, %662, %661, %659, %658, %657, %647, %637, %636, %628, %620, %613, %607, %606, %604, %587, %577, %569, %562, %556, %555, %545, %535, %528, %521, %515, %509, %508, %498, %488, %480, %478, %462, %452, %450, %434, %424, %418, %417, %407, %397, %395, %379, %369, %362, %356, %354, %339, %329, %328, %318, %308, %301, %299, %283, %273, %266, %264, %249, %239, %238, %228, %218, %211, %204, %197, %191, %188, %187, %184, %183, %173, %163, %161, %160, %150, %140, %139, %128, %118, %117, %100, %90, %89, %87, %76, %66, %63, %60, %59, %56, %52, %51, %47, %45, %25, %15
  %.0106.be = phi i8 [ %.0106, %14 ], [ %.0106, %726 ], [ %.0106, %725 ], [ %.0106, %724 ], [ 69, %723 ], [ 68, %722 ], [ %.0106, %721 ], [ %.0106, %720 ], [ 67, %719 ], [ %.0106, %718 ], [ %.0106, %717 ], [ 66, %716 ], [ %.0106, %715 ], [ %.0106, %714 ], [ 65, %713 ], [ %.0106, %712 ], [ %.0106, %711 ], [ %.0106, %709 ], [ %.0106, %701 ], [ %.0106, %700 ], [ %.0106, %689 ], [ %.0106, %685 ], [ %.0106, %683 ], [ %.0106, %682 ], [ %.0106, %672 ], [ %.0106, %662 ], [ %.0106, %661 ], [ %.0106, %659 ], [ %.0106, %658 ], [ %.0106, %657 ], [ %.0106, %647 ], [ %.0106, %637 ], [ 71, %636 ], [ %.0106, %628 ], [ %.0106, %620 ], [ %.0106, %613 ], [ %.0106, %607 ], [ 70, %606 ], [ %.0106, %604 ], [ %.0106, %587 ], [ %.0106, %577 ], [ %.0106, %569 ], [ %.0106, %562 ], [ %.0106, %556 ], [ %.0106, %555 ], [ 69, %545 ], [ %.0106, %535 ], [ %.0106, %528 ], [ %.0106, %521 ], [ %.0106, %515 ], [ %.0106, %509 ], [ %.0106, %508 ], [ 68, %498 ], [ %.0106, %488 ], [ %.0106, %480 ], [ %.0106, %478 ], [ %.0106, %462 ], [ %.0106, %452 ], [ %.0106, %450 ], [ %.0106, %434 ], [ %.0106, %424 ], [ %.0106, %418 ], [ %.0106, %417 ], [ 67, %407 ], [ %.0106, %397 ], [ %.0106, %395 ], [ %.0106, %379 ], [ %.0106, %369 ], [ %.0106, %362 ], [ %.0106, %356 ], [ %.0106, %354 ], [ %.0106, %339 ], [ %.0106, %329 ], [ %.0106, %328 ], [ 66, %318 ], [ %.0106, %308 ], [ %.0106, %301 ], [ %.0106, %299 ], [ %.0106, %283 ], [ %.0106, %273 ], [ %.0106, %266 ], [ %.0106, %264 ], [ %.0106, %249 ], [ %.0106, %239 ], [ %.0106, %238 ], [ 65, %228 ], [ %.0106, %218 ], [ %.0106, %211 ], [ %.0106, %204 ], [ %.0106, %197 ], [ %.0106, %191 ], [ %.0106, %188 ], [ %.0106, %187 ], [ %.0106, %184 ], [ %.0106, %183 ], [ %.0106, %173 ], [ %.0106, %163 ], [ %.0106, %161 ], [ %.0106, %160 ], [ %.0106, %150 ], [ %.0106, %140 ], [ %.0106, %139 ], [ %.0106, %128 ], [ %.0106, %118 ], [ %.0106, %117 ], [ %.0106, %100 ], [ %.0106, %90 ], [ %.0106, %89 ], [ %.0106, %87 ], [ %.0106, %76 ], [ %.0106, %66 ], [ %.0106, %63 ], [ %.0106, %60 ], [ %.0106, %59 ], [ %.0106, %56 ], [ 48, %52 ], [ %.0106, %51 ], [ %.0106, %47 ], [ %.0106, %45 ], [ %.0106, %25 ], [ %.0106, %15 ]
  %.0104.be = phi i32 [ %.0104, %14 ], [ %.0104, %726 ], [ %.0104, %725 ], [ %.0104, %724 ], [ %.0104, %723 ], [ %.0104, %722 ], [ %.0104, %721 ], [ %.0104, %720 ], [ %.0104, %719 ], [ %.0104, %718 ], [ %.0104, %717 ], [ %.0104, %716 ], [ %.0104, %715 ], [ %.0104, %714 ], [ %.0104, %713 ], [ %.0104, %712 ], [ %.0104, %711 ], [ %.0104, %709 ], [ %.0104, %701 ], [ %.0104, %700 ], [ %.0104, %689 ], [ %.0104, %685 ], [ %.0104, %683 ], [ %.0104, %682 ], [ %.0104, %672 ], [ %.0104, %662 ], [ %.0104, %661 ], [ %.0104, %659 ], [ %.0104, %658 ], [ %.0104, %657 ], [ %.0104, %647 ], [ %.0104, %637 ], [ %.0104, %636 ], [ %.0104, %628 ], [ %.0104, %620 ], [ %.0104, %613 ], [ %.0104, %607 ], [ %.0104, %606 ], [ %.0104, %604 ], [ %.0104, %587 ], [ %.0104, %577 ], [ %.0104, %569 ], [ %.0104, %562 ], [ %.0104, %556 ], [ %.0104, %555 ], [ %.0104, %545 ], [ %.0104, %535 ], [ %.0104, %528 ], [ %.0104, %521 ], [ %.0104, %515 ], [ %.0104, %509 ], [ %.0104, %508 ], [ %.0104, %498 ], [ %.0104, %488 ], [ %.0104, %480 ], [ %.0104, %478 ], [ %.0104, %462 ], [ %.0104, %452 ], [ %.0104, %450 ], [ %.0104, %434 ], [ %.0104, %424 ], [ %.0104, %418 ], [ %.0104, %417 ], [ %.0104, %407 ], [ %.0104, %397 ], [ %.0104, %395 ], [ %.0104, %379 ], [ %.0104, %369 ], [ %.0104, %362 ], [ %.0104, %356 ], [ %.0104, %354 ], [ %.0104, %339 ], [ %.0104, %329 ], [ %.0104, %328 ], [ %.0104, %318 ], [ %.0104, %308 ], [ %.0104, %301 ], [ %.0104, %299 ], [ %.0104, %283 ], [ %.0104, %273 ], [ %.0104, %266 ], [ %.0104, %264 ], [ %.0104, %249 ], [ %.0104, %239 ], [ %.0104, %238 ], [ %.0104, %228 ], [ %.0104, %218 ], [ %.0104, %211 ], [ %.0104, %204 ], [ %.0104, %197 ], [ %.0104, %191 ], [ %.0104, %188 ], [ %.0104, %187 ], [ %.0104, %184 ], [ %.0104, %183 ], [ %.0104, %173 ], [ %.0104, %163 ], [ %162, %161 ], [ %.0104, %160 ], [ %.0104, %150 ], [ %.0104, %140 ], [ %.0104, %139 ], [ %.0104, %128 ], [ %.0104, %118 ], [ %.0104, %117 ], [ %.0104, %100 ], [ %.0104, %90 ], [ %.0104, %89 ], [ %.0104, %87 ], [ %.0104, %76 ], [ %.0104, %66 ], [ %.0104, %63 ], [ %.0104, %60 ], [ %.0104, %59 ], [ %.0104, %56 ], [ 0, %52 ], [ %.0104, %51 ], [ %.0104, %47 ], [ %.0104, %45 ], [ %.0104, %25 ], [ %.0104, %15 ]
  %.0102.be = phi i32 [ %.0102, %14 ], [ %.0102, %726 ], [ %.0102, %725 ], [ %.0102, %724 ], [ %.0102, %723 ], [ %.0102, %722 ], [ %.0102, %721 ], [ %.0102, %720 ], [ %.0102, %719 ], [ %.0102, %718 ], [ %.0102, %717 ], [ %.0102, %716 ], [ %.0102, %715 ], [ %.0102, %714 ], [ %.0102, %713 ], [ %.0102, %712 ], [ %.0102, %711 ], [ %710, %709 ], [ %.0102, %701 ], [ %.0102, %700 ], [ %.0102, %689 ], [ %.0102, %685 ], [ %.0102, %683 ], [ %.0102, %682 ], [ %.0102, %672 ], [ %.0102, %662 ], [ %.0102, %661 ], [ %.0102, %659 ], [ %.0102, %658 ], [ %.0102, %657 ], [ %.0102, %647 ], [ %.0102, %637 ], [ %.0102, %636 ], [ %.0102, %628 ], [ %.0102, %620 ], [ %.0102, %613 ], [ %.0102, %607 ], [ %.0102, %606 ], [ %.0102, %604 ], [ %.0102, %587 ], [ %.0102, %577 ], [ %.0102, %569 ], [ %.0102, %562 ], [ %.0102, %556 ], [ %.0102, %555 ], [ %.0102, %545 ], [ %.0102, %535 ], [ %.0102, %528 ], [ %.0102, %521 ], [ %.0102, %515 ], [ %.0102, %509 ], [ %.0102, %508 ], [ %.0102, %498 ], [ %.0102, %488 ], [ %.0102, %480 ], [ %.0102, %478 ], [ %.0102, %462 ], [ %.0102, %452 ], [ %.0102, %450 ], [ %.0102, %434 ], [ %.0102, %424 ], [ %.0102, %418 ], [ %.0102, %417 ], [ %.0102, %407 ], [ %.0102, %397 ], [ %.0102, %395 ], [ %.0102, %379 ], [ %.0102, %369 ], [ %.0102, %362 ], [ %.0102, %356 ], [ %.0102, %354 ], [ %.0102, %339 ], [ %.0102, %329 ], [ %.0102, %328 ], [ %.0102, %318 ], [ %.0102, %308 ], [ %.0102, %301 ], [ %.0102, %299 ], [ %.0102, %283 ], [ %.0102, %273 ], [ %.0102, %266 ], [ %.0102, %264 ], [ %.0102, %249 ], [ %.0102, %239 ], [ %.0102, %238 ], [ %.0102, %228 ], [ %.0102, %218 ], [ %.0102, %211 ], [ %.0102, %204 ], [ %.0102, %197 ], [ %.0102, %191 ], [ %.0102, %188 ], [ %.0102, %187 ], [ %.0102, %184 ], [ %.0102, %183 ], [ %.0102, %173 ], [ %.0102, %163 ], [ %.0102, %161 ], [ %.0102, %160 ], [ %.0102, %150 ], [ %.0102, %140 ], [ %.0102, %139 ], [ %129, %128 ], [ %.0102, %118 ], [ %.0102, %117 ], [ %.0102, %100 ], [ %.0102, %90 ], [ %.0102, %89 ], [ %.0102, %87 ], [ %.0102, %76 ], [ %.0102, %66 ], [ %.0102, %63 ], [ %.0102, %60 ], [ 0, %59 ], [ %.0102, %56 ], [ %.0102, %52 ], [ %.0102, %51 ], [ %.0102, %47 ], [ %.0102, %45 ], [ %.0102, %25 ], [ %.0102, %15 ]
  %.0100.be = phi i32 [ %.0100, %14 ], [ %.0100, %726 ], [ %.0100, %725 ], [ %.0100, %724 ], [ %.0100, %723 ], [ %.0100, %722 ], [ %.0100, %721 ], [ %.0100, %720 ], [ %.0100, %719 ], [ %.0100, %718 ], [ %.0100, %717 ], [ %.0100, %716 ], [ %.0100, %715 ], [ %.0100, %714 ], [ %.0100, %713 ], [ 0, %712 ], [ %.0100, %711 ], [ %.0100, %709 ], [ %.0100, %701 ], [ %.0100, %700 ], [ %.0100, %689 ], [ %.0100, %685 ], [ %684, %683 ], [ %.0100, %682 ], [ %.0100, %672 ], [ %.0100, %662 ], [ %.0100, %661 ], [ %.0100, %659 ], [ %.0100, %658 ], [ %.0100, %657 ], [ %.0100, %647 ], [ %.0100, %637 ], [ %.0100, %636 ], [ %.0100, %628 ], [ %.0100, %620 ], [ %.0100, %613 ], [ %.0100, %607 ], [ %.0100, %606 ], [ %.0100, %604 ], [ %.0100, %587 ], [ %.0100, %577 ], [ %.0100, %569 ], [ %.0100, %562 ], [ %.0100, %556 ], [ %.0100, %555 ], [ %.0100, %545 ], [ %.0100, %535 ], [ %.0100, %528 ], [ %.0100, %521 ], [ %.0100, %515 ], [ %.0100, %509 ], [ %.0100, %508 ], [ %.0100, %498 ], [ %.0100, %488 ], [ %.0100, %480 ], [ %.0100, %478 ], [ %.0100, %462 ], [ %.0100, %452 ], [ %.0100, %450 ], [ %.0100, %434 ], [ %.0100, %424 ], [ %.0100, %418 ], [ %.0100, %417 ], [ %.0100, %407 ], [ %.0100, %397 ], [ %.0100, %395 ], [ %.0100, %379 ], [ %.0100, %369 ], [ %.0100, %362 ], [ %.0100, %356 ], [ %.0100, %354 ], [ %.0100, %339 ], [ %.0100, %329 ], [ %.0100, %328 ], [ %.0100, %318 ], [ %.0100, %308 ], [ %.0100, %301 ], [ %.0100, %299 ], [ %.0100, %283 ], [ %.0100, %273 ], [ %.0100, %266 ], [ %.0100, %264 ], [ %.0100, %249 ], [ %.0100, %239 ], [ %.0100, %238 ], [ %.0100, %228 ], [ %.0100, %218 ], [ %.0100, %211 ], [ %.0100, %204 ], [ %.0100, %197 ], [ %.0100, %191 ], [ %.0100, %188 ], [ %.0100, %187 ], [ %.0100, %184 ], [ %.0100, %183 ], [ 0, %173 ], [ %.0100, %163 ], [ %.0100, %161 ], [ %.0100, %160 ], [ %.0100, %150 ], [ %.0100, %140 ], [ %.0100, %139 ], [ %.0100, %128 ], [ %.0100, %118 ], [ %.0100, %117 ], [ %.0100, %100 ], [ %.0100, %90 ], [ %.0100, %89 ], [ %.0100, %87 ], [ %.0100, %76 ], [ %.0100, %66 ], [ %.0100, %63 ], [ %.0100, %60 ], [ %.0100, %59 ], [ %.0100, %56 ], [ %.0100, %52 ], [ %.0100, %51 ], [ %.0100, %47 ], [ %.0100, %45 ], [ %.0100, %25 ], [ %.0100, %15 ]
  %.098.be = phi i32 [ %.098, %14 ], [ %.098, %726 ], [ %.098, %725 ], [ %.098, %724 ], [ %.098, %723 ], [ %.098, %722 ], [ %.098, %721 ], [ %.098, %720 ], [ %.098, %719 ], [ %.098, %718 ], [ %.098, %717 ], [ %.098, %716 ], [ %.098, %715 ], [ %.098, %714 ], [ %.098, %713 ], [ %.098, %712 ], [ %.098, %711 ], [ %.098, %709 ], [ %.098, %701 ], [ %.098, %700 ], [ %.098, %689 ], [ %.098, %685 ], [ %.098, %683 ], [ %.098, %682 ], [ %.098, %672 ], [ %.098, %662 ], [ %.098, %661 ], [ %.098, %659 ], [ %.neg, %658 ], [ %.098, %657 ], [ %.098, %647 ], [ %.098, %637 ], [ %.098, %636 ], [ %.098, %628 ], [ %.098, %620 ], [ %.098, %613 ], [ %.098, %607 ], [ %.098, %606 ], [ %.098, %604 ], [ %.098, %587 ], [ %.098, %577 ], [ %.098, %569 ], [ %.098, %562 ], [ %.098, %556 ], [ %.098, %555 ], [ %.098, %545 ], [ %.098, %535 ], [ %.098, %528 ], [ %.098, %521 ], [ %.098, %515 ], [ %.098, %509 ], [ %.098, %508 ], [ %.098, %498 ], [ %.098, %488 ], [ %.098, %480 ], [ %.098, %478 ], [ %.098, %462 ], [ %.098, %452 ], [ %.098, %450 ], [ %.098, %434 ], [ %.098, %424 ], [ %.098, %418 ], [ %.098, %417 ], [ %.098, %407 ], [ %.098, %397 ], [ %.098, %395 ], [ %.098, %379 ], [ %.098, %369 ], [ %.098, %362 ], [ %.098, %356 ], [ %.098, %354 ], [ %.098, %339 ], [ %.098, %329 ], [ %.098, %328 ], [ %.098, %318 ], [ %.098, %308 ], [ %.098, %301 ], [ %.098, %299 ], [ %.098, %283 ], [ %.098, %273 ], [ %.098, %266 ], [ %.098, %264 ], [ %.098, %249 ], [ %.098, %239 ], [ %.098, %238 ], [ %.098, %228 ], [ %.098, %218 ], [ %.098, %211 ], [ %.098, %204 ], [ %.098, %197 ], [ %.098, %191 ], [ %.098, %188 ], [ 0, %187 ], [ %.098, %184 ], [ %.098, %183 ], [ %.098, %173 ], [ %.098, %163 ], [ %.098, %161 ], [ %.098, %160 ], [ %.098, %150 ], [ %.098, %140 ], [ %.098, %139 ], [ %.098, %128 ], [ %.098, %118 ], [ %.098, %117 ], [ %.098, %100 ], [ %.098, %90 ], [ %.098, %89 ], [ %.098, %87 ], [ %.098, %76 ], [ %.098, %66 ], [ %.098, %63 ], [ %.098, %60 ], [ %.098, %59 ], [ %.098, %56 ], [ %.098, %52 ], [ %.098, %51 ], [ %.098, %47 ], [ %.098, %45 ], [ %.098, %25 ], [ %.098, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ -1418129398, %726 ], [ 1476976497, %725 ], [ -1023272533, %724 ], [ -1042989116, %723 ], [ -2013201483, %722 ], [ 914702228, %721 ], [ 1201198391, %720 ], [ 1634034600, %719 ], [ -1138765063, %718 ], [ 274707431, %717 ], [ -2018574791, %716 ], [ -2108998203, %715 ], [ 867262528, %714 ], [ 292517119, %713 ], [ -1995433387, %712 ], [ 273638975, %711 ], [ -1212576333, %709 ], [ -2021663136, %701 ], [ 101263516, %700 ], [ -2033243081, %689 ], [ -1776167440, %685 ], [ 2098310279, %683 ], [ -1152128920, %682 ], [ %681, %672 ], [ %671, %662 ], [ 55275494, %661 ], [ %660, %659 ], [ 1153951701, %658 ], [ -2127176842, %657 ], [ %656, %647 ], [ %646, %637 ], [ 2051658777, %636 ], [ %635, %628 ], [ %627, %620 ], [ %619, %613 ], [ %612, %607 ], [ 2051658777, %606 ], [ %605, %604 ], [ %603, %587 ], [ %586, %577 ], [ %576, %569 ], [ %568, %562 ], [ %561, %556 ], [ 2051658777, %555 ], [ %554, %545 ], [ %544, %535 ], [ %534, %528 ], [ %527, %521 ], [ %520, %515 ], [ %514, %509 ], [ 2051658777, %508 ], [ %507, %498 ], [ %497, %488 ], [ %487, %480 ], [ %479, %478 ], [ %477, %462 ], [ %461, %452 ], [ %451, %450 ], [ %449, %434 ], [ %433, %424 ], [ %423, %418 ], [ 2051658777, %417 ], [ %416, %407 ], [ %406, %397 ], [ %396, %395 ], [ %394, %379 ], [ %378, %369 ], [ %368, %362 ], [ %361, %356 ], [ %355, %354 ], [ %353, %339 ], [ %338, %329 ], [ 2051658777, %328 ], [ %327, %318 ], [ %317, %308 ], [ %307, %301 ], [ %300, %299 ], [ %298, %283 ], [ %282, %273 ], [ %272, %266 ], [ %265, %264 ], [ %263, %249 ], [ %248, %239 ], [ 2051658777, %238 ], [ %237, %228 ], [ %227, %218 ], [ %217, %211 ], [ %210, %204 ], [ %203, %197 ], [ %196, %191 ], [ %190, %188 ], [ 1153951701, %187 ], [ %186, %184 ], [ 2098310279, %183 ], [ %182, %173 ], [ %172, %163 ], [ -1794958362, %161 ], [ -1268622541, %160 ], [ %159, %150 ], [ %149, %140 ], [ 1356327440, %139 ], [ %138, %128 ], [ %127, %118 ], [ 563424287, %117 ], [ %116, %100 ], [ %99, %90 ], [ 563424287, %89 ], [ %88, %87 ], [ %86, %76 ], [ %75, %66 ], [ %65, %63 ], [ %62, %60 ], [ 1356327440, %59 ], [ %58, %56 ], [ -1794958362, %52 ], [ -1776167440, %51 ], [ %50, %47 ], [ %46, %45 ], [ %44, %25 ], [ %24, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* @x.1, align 4
  %17 = load i32, i32* @y.2, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -2033243081, i32 -874933914
  br label %.backedge

25:                                               ; preds = %14
  %26 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %10)
  %27 = bitcast %"class.std::basic_istream"* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::basic_istream"* %26 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = bitcast i8* %33 to %"class.std::basic_ios"*
  %35 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %34)
  store i1 %35, i1* %9, align 1
  %36 = load i32, i32* @x.1, align 4
  %37 = load i32, i32* @y.2, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 2003805750, i32 -874933914
  br label %.backedge

45:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %46 = select i1 %.0..0..0., i32 428945569, i32 -2145180354
  br label %.backedge

47:                                               ; preds = %14
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1024) %13, i8 0, i64 1024, i1 false)
  %48 = load i8, i8* %10, align 1
  %49 = icmp eq i8 %48, 10
  %50 = select i1 %49, i32 176233758, i32 1301475094
  br label %.backedge

51:                                               ; preds = %14
  br label %.backedge

52:                                               ; preds = %14
  %53 = load i8, i8* %10, align 1
  %54 = sext i8 %53 to i32
  %55 = add nsw i32 %54, -48
  store i32 %55, i32* %12, align 16
  br label %.backedge

56:                                               ; preds = %14
  %57 = icmp slt i32 %.0104, 8
  %58 = select i1 %57, i32 -1690586729, i32 -787448654
  br label %.backedge

59:                                               ; preds = %14
  br label %.backedge

60:                                               ; preds = %14
  %61 = icmp slt i32 %.0102, 8
  %62 = select i1 %61, i32 1788732031, i32 403669278
  br label %.backedge

63:                                               ; preds = %14
  %64 = icmp eq i32 %.0104, 0
  %65 = select i1 %64, i32 -2069831943, i32 969121973
  br label %.backedge

66:                                               ; preds = %14
  %67 = load i32, i32* @x.1, align 4
  %68 = load i32, i32* @y.2, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 101263516, i32 -703467668
  br label %.backedge

76:                                               ; preds = %14
  %77 = icmp eq i32 %.0102, 0
  store i1 %77, i1* %8, align 1
  %78 = load i32, i32* @x.1, align 4
  %79 = load i32, i32* @y.2, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 -58326764, i32 -703467668
  br label %.backedge

87:                                               ; preds = %14
  %.0..0..0.90 = load volatile i1, i1* %8, align 1
  %88 = select i1 %.0..0..0.90, i32 -1771732764, i32 969121973
  br label %.backedge

89:                                               ; preds = %14
  br label %.backedge

90:                                               ; preds = %14
  %91 = load i32, i32* @x.1, align 4
  %92 = load i32, i32* @y.2, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -2021663136, i32 -1663153775
  br label %.backedge

100:                                              ; preds = %14
  %101 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %10)
  %102 = load i8, i8* %10, align 1
  %103 = sext i8 %102 to i32
  %104 = add nsw i32 %103, -48
  %105 = sext i32 %.0104 to i64
  %106 = sext i32 %.0102 to i64
  %107 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %105, i64 %106
  store i32 %104, i32* %107, align 4
  %108 = load i32, i32* @x.1, align 4
  %109 = load i32, i32* @y.2, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 420241653, i32 -1663153775
  br label %.backedge

117:                                              ; preds = %14
  br label %.backedge

118:                                              ; preds = %14
  %119 = load i32, i32* @x.1, align 4
  %120 = load i32, i32* @y.2, align 4
  %121 = add i32 %119, -1
  %122 = mul i32 %121, %119
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %125, %124
  %127 = select i1 %126, i32 -1212576333, i32 -109134491
  br label %.backedge

128:                                              ; preds = %14
  %129 = add i32 %.0102, 1
  %130 = load i32, i32* @x.1, align 4
  %131 = load i32, i32* @y.2, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -2107953918, i32 -109134491
  br label %.backedge

139:                                              ; preds = %14
  br label %.backedge

140:                                              ; preds = %14
  %141 = load i32, i32* @x.1, align 4
  %142 = load i32, i32* @y.2, align 4
  %143 = add i32 %141, -1
  %144 = mul i32 %143, %141
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %147, %146
  %149 = select i1 %148, i32 273638975, i32 -1557601034
  br label %.backedge

150:                                              ; preds = %14
  %151 = load i32, i32* @x.1, align 4
  %152 = load i32, i32* @y.2, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 158657091, i32 -1557601034
  br label %.backedge

160:                                              ; preds = %14
  br label %.backedge

161:                                              ; preds = %14
  %162 = add i32 %.0104, 1
  br label %.backedge

163:                                              ; preds = %14
  %164 = load i32, i32* @x.1, align 4
  %165 = load i32, i32* @y.2, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 -1995433387, i32 -939021808
  br label %.backedge

173:                                              ; preds = %14
  %174 = load i32, i32* @x.1, align 4
  %175 = load i32, i32* @y.2, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 -1026086368, i32 -939021808
  br label %.backedge

183:                                              ; preds = %14
  br label %.backedge

184:                                              ; preds = %14
  %185 = icmp slt i32 %.0100, 8
  %186 = select i1 %185, i32 549995579, i32 55275494
  br label %.backedge

187:                                              ; preds = %14
  br label %.backedge

188:                                              ; preds = %14
  %189 = icmp slt i32 %.098, 8
  %190 = select i1 %189, i32 2138347927, i32 2051658777
  br label %.backedge

191:                                              ; preds = %14
  %192 = sext i32 %.0100 to i64
  %193 = sext i32 %.098 to i64
  %194 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %192, i64 %193
  %195 = load i32, i32* %194, align 4
  %.not134 = icmp eq i32 %195, 0
  %196 = select i1 %.not134, i32 -794150784, i32 -407707317
  br label %.backedge

197:                                              ; preds = %14
  %198 = sext i32 %.0100 to i64
  %199 = add i32 %.098, 1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %198, i64 %200
  %202 = load i32, i32* %201, align 4
  %.not133 = icmp eq i32 %202, 0
  %203 = select i1 %.not133, i32 -794150784, i32 -146525584
  br label %.backedge

204:                                              ; preds = %14
  %205 = add i32 %.0100, 1
  %206 = sext i32 %205 to i64
  %207 = sext i32 %.098 to i64
  %208 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %206, i64 %207
  %209 = load i32, i32* %208, align 4
  %.not132 = icmp eq i32 %209, 0
  %210 = select i1 %.not132, i32 -794150784, i32 -926260661
  br label %.backedge

211:                                              ; preds = %14
  %212 = add i32 %.0100, 1
  %213 = sext i32 %212 to i64
  %.neg130 = add i32 %.098, 1
  %214 = sext i32 %.neg130 to i64
  %215 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %213, i64 %214
  %216 = load i32, i32* %215, align 4
  %.not131 = icmp eq i32 %216, 0
  %217 = select i1 %.not131, i32 -794150784, i32 -1249157945
  br label %.backedge

218:                                              ; preds = %14
  %219 = load i32, i32* @x.1, align 4
  %220 = load i32, i32* @y.2, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 292517119, i32 -82635268
  br label %.backedge

228:                                              ; preds = %14
  %229 = load i32, i32* @x.1, align 4
  %230 = load i32, i32* @y.2, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 187148904, i32 -82635268
  br label %.backedge

238:                                              ; preds = %14
  br label %.backedge

239:                                              ; preds = %14
  %240 = load i32, i32* @x.1, align 4
  %241 = load i32, i32* @y.2, align 4
  %242 = add i32 %240, -1
  %243 = mul i32 %242, %240
  %244 = and i32 %243, 1
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %246, %245
  %248 = select i1 %247, i32 867262528, i32 -1028232627
  br label %.backedge

249:                                              ; preds = %14
  %250 = sext i32 %.0100 to i64
  %251 = sext i32 %.098 to i64
  %252 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %250, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = icmp ne i32 %253, 0
  store i1 %254, i1* %7, align 1
  %255 = load i32, i32* @x.1, align 4
  %256 = load i32, i32* @y.2, align 4
  %257 = add i32 %255, -1
  %258 = mul i32 %257, %255
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %261, %260
  %263 = select i1 %262, i32 -9420736, i32 -1028232627
  br label %.backedge

264:                                              ; preds = %14
  %.0..0..0.91 = load volatile i1, i1* %7, align 1
  %265 = select i1 %.0..0..0.91, i32 358725296, i32 -428593616
  br label %.backedge

266:                                              ; preds = %14
  %267 = add i32 %.0100, 1
  %268 = sext i32 %267 to i64
  %269 = sext i32 %.098 to i64
  %270 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %268, i64 %269
  %271 = load i32, i32* %270, align 4
  %.not129 = icmp eq i32 %271, 0
  %272 = select i1 %.not129, i32 -428593616, i32 1389211341
  br label %.backedge

273:                                              ; preds = %14
  %274 = load i32, i32* @x.1, align 4
  %275 = load i32, i32* @y.2, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 -2108998203, i32 682137552
  br label %.backedge

283:                                              ; preds = %14
  %284 = add i32 %.0100, 2
  %285 = sext i32 %284 to i64
  %286 = sext i32 %.098 to i64
  %287 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %285, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = icmp ne i32 %288, 0
  store i1 %289, i1* %6, align 1
  %290 = load i32, i32* @x.1, align 4
  %291 = load i32, i32* @y.2, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 -314941586, i32 682137552
  br label %.backedge

299:                                              ; preds = %14
  %.0..0..0.92 = load volatile i1, i1* %6, align 1
  %300 = select i1 %.0..0..0.92, i32 -1321435587, i32 -428593616
  br label %.backedge

301:                                              ; preds = %14
  %302 = add i32 %.0100, 3
  %303 = sext i32 %302 to i64
  %304 = sext i32 %.098 to i64
  %305 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %303, i64 %304
  %306 = load i32, i32* %305, align 4
  %.not128 = icmp eq i32 %306, 0
  %307 = select i1 %.not128, i32 -428593616, i32 578117130
  br label %.backedge

308:                                              ; preds = %14
  %309 = load i32, i32* @x.1, align 4
  %310 = load i32, i32* @y.2, align 4
  %311 = add i32 %309, -1
  %312 = mul i32 %311, %309
  %313 = and i32 %312, 1
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %315, %314
  %317 = select i1 %316, i32 -2018574791, i32 12175526
  br label %.backedge

318:                                              ; preds = %14
  %319 = load i32, i32* @x.1, align 4
  %320 = load i32, i32* @y.2, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 48652424, i32 12175526
  br label %.backedge

328:                                              ; preds = %14
  br label %.backedge

329:                                              ; preds = %14
  %330 = load i32, i32* @x.1, align 4
  %331 = load i32, i32* @y.2, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 274707431, i32 -918021061
  br label %.backedge

339:                                              ; preds = %14
  %340 = sext i32 %.0100 to i64
  %341 = sext i32 %.098 to i64
  %342 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %340, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = icmp ne i32 %343, 0
  store i1 %344, i1* %5, align 1
  %345 = load i32, i32* @x.1, align 4
  %346 = load i32, i32* @y.2, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 1553037768, i32 -918021061
  br label %.backedge

354:                                              ; preds = %14
  %.0..0..0.93 = load volatile i1, i1* %5, align 1
  %355 = select i1 %.0..0..0.93, i32 -1112921285, i32 680055627
  br label %.backedge

356:                                              ; preds = %14
  %357 = sext i32 %.0100 to i64
  %.neg126 = add i32 %.098, 1
  %358 = sext i32 %.neg126 to i64
  %359 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %357, i64 %358
  %360 = load i32, i32* %359, align 4
  %.not127 = icmp eq i32 %360, 0
  %361 = select i1 %.not127, i32 680055627, i32 698452735
  br label %.backedge

362:                                              ; preds = %14
  %363 = sext i32 %.0100 to i64
  %364 = add i32 %.098, 2
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %363, i64 %365
  %367 = load i32, i32* %366, align 4
  %.not125 = icmp eq i32 %367, 0
  %368 = select i1 %.not125, i32 680055627, i32 799708237
  br label %.backedge

369:                                              ; preds = %14
  %370 = load i32, i32* @x.1, align 4
  %371 = load i32, i32* @y.2, align 4
  %372 = add i32 %370, -1
  %373 = mul i32 %372, %370
  %374 = and i32 %373, 1
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %376, %375
  %378 = select i1 %377, i32 -1138765063, i32 1362727647
  br label %.backedge

379:                                              ; preds = %14
  %380 = sext i32 %.0100 to i64
  %381 = add i32 %.098, 3
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %380, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = icmp ne i32 %384, 0
  store i1 %385, i1* %4, align 1
  %386 = load i32, i32* @x.1, align 4
  %387 = load i32, i32* @y.2, align 4
  %388 = add i32 %386, -1
  %389 = mul i32 %388, %386
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %392, %391
  %394 = select i1 %393, i32 -31764859, i32 1362727647
  br label %.backedge

395:                                              ; preds = %14
  %.0..0..0.94 = load volatile i1, i1* %4, align 1
  %396 = select i1 %.0..0..0.94, i32 -1918825254, i32 680055627
  br label %.backedge

397:                                              ; preds = %14
  %398 = load i32, i32* @x.1, align 4
  %399 = load i32, i32* @y.2, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 1634034600, i32 -1321158527
  br label %.backedge

407:                                              ; preds = %14
  %408 = load i32, i32* @x.1, align 4
  %409 = load i32, i32* @y.2, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 614067676, i32 -1321158527
  br label %.backedge

417:                                              ; preds = %14
  br label %.backedge

418:                                              ; preds = %14
  %419 = sext i32 %.0100 to i64
  %420 = sext i32 %.098 to i64
  %421 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %419, i64 %420
  %422 = load i32, i32* %421, align 4
  %.not124 = icmp eq i32 %422, 0
  %423 = select i1 %.not124, i32 -91464662, i32 -394485906
  br label %.backedge

424:                                              ; preds = %14
  %425 = load i32, i32* @x.1, align 4
  %426 = load i32, i32* @y.2, align 4
  %427 = add i32 %425, -1
  %428 = mul i32 %427, %425
  %429 = and i32 %428, 1
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %431, %430
  %433 = select i1 %432, i32 1201198391, i32 1922382861
  br label %.backedge

434:                                              ; preds = %14
  %435 = add i32 %.0100, 1
  %436 = sext i32 %435 to i64
  %437 = sext i32 %.098 to i64
  %438 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %436, i64 %437
  %439 = load i32, i32* %438, align 4
  %440 = icmp ne i32 %439, 0
  store i1 %440, i1* %3, align 1
  %441 = load i32, i32* @x.1, align 4
  %442 = load i32, i32* @y.2, align 4
  %443 = add i32 %441, -1
  %444 = mul i32 %443, %441
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %447, %446
  %449 = select i1 %448, i32 -591295654, i32 1922382861
  br label %.backedge

450:                                              ; preds = %14
  %.0..0..0.95 = load volatile i1, i1* %3, align 1
  %451 = select i1 %.0..0..0.95, i32 -2112526876, i32 -91464662
  br label %.backedge

452:                                              ; preds = %14
  %453 = load i32, i32* @x.1, align 4
  %454 = load i32, i32* @y.2, align 4
  %455 = add i32 %453, -1
  %456 = mul i32 %455, %453
  %457 = and i32 %456, 1
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %459, %458
  %461 = select i1 %460, i32 914702228, i32 -1556439592
  br label %.backedge

462:                                              ; preds = %14
  %.neg123 = add i32 %.0100, 1
  %463 = sext i32 %.neg123 to i64
  %464 = add i32 %.098, -1
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %463, i64 %465
  %467 = load i32, i32* %466, align 4
  %468 = icmp ne i32 %467, 0
  store i1 %468, i1* %2, align 1
  %469 = load i32, i32* @x.1, align 4
  %470 = load i32, i32* @y.2, align 4
  %471 = add i32 %469, -1
  %472 = mul i32 %471, %469
  %473 = and i32 %472, 1
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %475, %474
  %477 = select i1 %476, i32 1231095055, i32 -1556439592
  br label %.backedge

478:                                              ; preds = %14
  %.0..0..0.96 = load volatile i1, i1* %2, align 1
  %479 = select i1 %.0..0..0.96, i32 -794142350, i32 -91464662
  br label %.backedge

480:                                              ; preds = %14
  %481 = add i32 %.0100, 2
  %482 = sext i32 %481 to i64
  %483 = add i32 %.098, -1
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %482, i64 %484
  %486 = load i32, i32* %485, align 4
  %.not122 = icmp eq i32 %486, 0
  %487 = select i1 %.not122, i32 -91464662, i32 1310612367
  br label %.backedge

488:                                              ; preds = %14
  %489 = load i32, i32* @x.1, align 4
  %490 = load i32, i32* @y.2, align 4
  %491 = add i32 %489, -1
  %492 = mul i32 %491, %489
  %493 = and i32 %492, 1
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %495, %494
  %497 = select i1 %496, i32 -2013201483, i32 974957965
  br label %.backedge

498:                                              ; preds = %14
  %499 = load i32, i32* @x.1, align 4
  %500 = load i32, i32* @y.2, align 4
  %501 = add i32 %499, -1
  %502 = mul i32 %501, %499
  %503 = and i32 %502, 1
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %505, %504
  %507 = select i1 %506, i32 -903086806, i32 974957965
  br label %.backedge

508:                                              ; preds = %14
  br label %.backedge

509:                                              ; preds = %14
  %510 = sext i32 %.0100 to i64
  %511 = sext i32 %.098 to i64
  %512 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %510, i64 %511
  %513 = load i32, i32* %512, align 4
  %.not121 = icmp eq i32 %513, 0
  %514 = select i1 %.not121, i32 -1774443813, i32 60022601
  br label %.backedge

515:                                              ; preds = %14
  %516 = sext i32 %.0100 to i64
  %.neg119 = add i32 %.098, 1
  %517 = sext i32 %.neg119 to i64
  %518 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %516, i64 %517
  %519 = load i32, i32* %518, align 4
  %.not120 = icmp eq i32 %519, 0
  %520 = select i1 %.not120, i32 -1774443813, i32 682253117
  br label %.backedge

521:                                              ; preds = %14
  %522 = add i32 %.0100, 1
  %523 = sext i32 %522 to i64
  %.neg117 = add i32 %.098, 1
  %524 = sext i32 %.neg117 to i64
  %525 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %523, i64 %524
  %526 = load i32, i32* %525, align 4
  %.not118 = icmp eq i32 %526, 0
  %527 = select i1 %.not118, i32 -1774443813, i32 -1820231325
  br label %.backedge

528:                                              ; preds = %14
  %529 = add i32 %.0100, 1
  %530 = sext i32 %529 to i64
  %.neg115 = add i32 %.098, 2
  %531 = sext i32 %.neg115 to i64
  %532 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %530, i64 %531
  %533 = load i32, i32* %532, align 4
  %.not116 = icmp eq i32 %533, 0
  %534 = select i1 %.not116, i32 -1774443813, i32 -1923791611
  br label %.backedge

535:                                              ; preds = %14
  %536 = load i32, i32* @x.1, align 4
  %537 = load i32, i32* @y.2, align 4
  %538 = add i32 %536, -1
  %539 = mul i32 %538, %536
  %540 = and i32 %539, 1
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %537, 10
  %543 = or i1 %542, %541
  %544 = select i1 %543, i32 -1042989116, i32 -846682982
  br label %.backedge

545:                                              ; preds = %14
  %546 = load i32, i32* @x.1, align 4
  %547 = load i32, i32* @y.2, align 4
  %548 = add i32 %546, -1
  %549 = mul i32 %548, %546
  %550 = and i32 %549, 1
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %552, %551
  %554 = select i1 %553, i32 1452884325, i32 -846682982
  br label %.backedge

555:                                              ; preds = %14
  br label %.backedge

556:                                              ; preds = %14
  %557 = sext i32 %.0100 to i64
  %558 = sext i32 %.098 to i64
  %559 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %557, i64 %558
  %560 = load i32, i32* %559, align 4
  %.not114 = icmp eq i32 %560, 0
  %561 = select i1 %.not114, i32 462446267, i32 -1615311183
  br label %.backedge

562:                                              ; preds = %14
  %563 = add i32 %.0100, 1
  %564 = sext i32 %563 to i64
  %565 = sext i32 %.098 to i64
  %566 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %564, i64 %565
  %567 = load i32, i32* %566, align 4
  %.not113 = icmp eq i32 %567, 0
  %568 = select i1 %.not113, i32 462446267, i32 5760076
  br label %.backedge

569:                                              ; preds = %14
  %570 = add i32 %.0100, 1
  %571 = sext i32 %570 to i64
  %572 = add i32 %.098, 1
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %571, i64 %573
  %575 = load i32, i32* %574, align 4
  %.not112 = icmp eq i32 %575, 0
  %576 = select i1 %.not112, i32 462446267, i32 1004915107
  br label %.backedge

577:                                              ; preds = %14
  %578 = load i32, i32* @x.1, align 4
  %579 = load i32, i32* @y.2, align 4
  %580 = add i32 %578, -1
  %581 = mul i32 %580, %578
  %582 = and i32 %581, 1
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %584, %583
  %586 = select i1 %585, i32 -1023272533, i32 2109445030
  br label %.backedge

587:                                              ; preds = %14
  %588 = add i32 %.0100, 2
  %589 = sext i32 %588 to i64
  %590 = add i32 %.098, 1
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %589, i64 %591
  %593 = load i32, i32* %592, align 4
  %594 = icmp ne i32 %593, 0
  store i1 %594, i1* %1, align 1
  %595 = load i32, i32* @x.1, align 4
  %596 = load i32, i32* @y.2, align 4
  %597 = add i32 %595, -1
  %598 = mul i32 %597, %595
  %599 = and i32 %598, 1
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %596, 10
  %602 = or i1 %601, %600
  %603 = select i1 %602, i32 595569732, i32 2109445030
  br label %.backedge

604:                                              ; preds = %14
  %.0..0..0.97 = load volatile i1, i1* %1, align 1
  %605 = select i1 %.0..0..0.97, i32 -1739869352, i32 462446267
  br label %.backedge

606:                                              ; preds = %14
  br label %.backedge

607:                                              ; preds = %14
  %608 = sext i32 %.0100 to i64
  %609 = sext i32 %.098 to i64
  %610 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %608, i64 %609
  %611 = load i32, i32* %610, align 4
  %.not111 = icmp eq i32 %611, 0
  %612 = select i1 %.not111, i32 -1544178519, i32 1025715511
  br label %.backedge

613:                                              ; preds = %14
  %614 = sext i32 %.0100 to i64
  %615 = add i32 %.098, 1
  %616 = sext i32 %615 to i64
  %617 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %614, i64 %616
  %618 = load i32, i32* %617, align 4
  %.not110 = icmp eq i32 %618, 0
  %619 = select i1 %.not110, i32 -1544178519, i32 206007279
  br label %.backedge

620:                                              ; preds = %14
  %621 = add i32 %.0100, -1
  %622 = sext i32 %621 to i64
  %623 = add i32 %.098, 1
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %622, i64 %624
  %626 = load i32, i32* %625, align 4
  %.not109 = icmp eq i32 %626, 0
  %627 = select i1 %.not109, i32 -1544178519, i32 -1360061419
  br label %.backedge

628:                                              ; preds = %14
  %629 = add i32 %.0100, -1
  %630 = sext i32 %629 to i64
  %631 = add i32 %.098, 2
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %630, i64 %632
  %634 = load i32, i32* %633, align 4
  %.not108 = icmp eq i32 %634, 0
  %635 = select i1 %.not108, i32 -1544178519, i32 1782081156
  br label %.backedge

636:                                              ; preds = %14
  br label %.backedge

637:                                              ; preds = %14
  %638 = load i32, i32* @x.1, align 4
  %639 = load i32, i32* @y.2, align 4
  %640 = add i32 %638, -1
  %641 = mul i32 %640, %638
  %642 = and i32 %641, 1
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %644, %643
  %646 = select i1 %645, i32 1476976497, i32 2018560819
  br label %.backedge

647:                                              ; preds = %14
  %648 = load i32, i32* @x.1, align 4
  %649 = load i32, i32* @y.2, align 4
  %650 = add i32 %648, -1
  %651 = mul i32 %650, %648
  %652 = and i32 %651, 1
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %649, 10
  %655 = or i1 %654, %653
  %656 = select i1 %655, i32 1889790472, i32 2018560819
  br label %.backedge

657:                                              ; preds = %14
  br label %.backedge

658:                                              ; preds = %14
  %.neg = add i32 %.098, 1
  br label %.backedge

659:                                              ; preds = %14
  %.not = icmp eq i8 %.0106, 48
  %660 = select i1 %.not, i32 -1745501745, i32 1941242809
  br label %.backedge

661:                                              ; preds = %14
  br label %.backedge

662:                                              ; preds = %14
  %663 = load i32, i32* @x.1, align 4
  %664 = load i32, i32* @y.2, align 4
  %665 = add i32 %663, -1
  %666 = mul i32 %665, %663
  %667 = and i32 %666, 1
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %664, 10
  %670 = or i1 %669, %668
  %671 = select i1 %670, i32 -1418129398, i32 517696533
  br label %.backedge

672:                                              ; preds = %14
  %673 = load i32, i32* @x.1, align 4
  %674 = load i32, i32* @y.2, align 4
  %675 = add i32 %673, -1
  %676 = mul i32 %675, %673
  %677 = and i32 %676, 1
  %678 = icmp eq i32 %677, 0
  %679 = icmp slt i32 %674, 10
  %680 = or i1 %679, %678
  %681 = select i1 %680, i32 -273141431, i32 517696533
  br label %.backedge

682:                                              ; preds = %14
  br label %.backedge

683:                                              ; preds = %14
  %684 = add i32 %.0100, 1
  br label %.backedge

685:                                              ; preds = %14
  %686 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %.0106)
  %687 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %686, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

688:                                              ; preds = %14
  ret i32 0

689:                                              ; preds = %14
  %690 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %10)
  %691 = bitcast %"class.std::basic_istream"* %690 to i8**
  %692 = load i8*, i8** %691, align 8
  %693 = getelementptr i8, i8* %692, i64 -24
  %694 = bitcast i8* %693 to i64*
  %695 = load i64, i64* %694, align 8
  %696 = bitcast %"class.std::basic_istream"* %690 to i8*
  %697 = getelementptr inbounds i8, i8* %696, i64 %695
  %698 = bitcast i8* %697 to %"class.std::basic_ios"*
  %699 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %698)
  br label %.backedge

700:                                              ; preds = %14
  br label %.backedge

701:                                              ; preds = %14
  %702 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %10)
  %703 = load i8, i8* %10, align 1
  %704 = sext i8 %703 to i32
  %705 = add nsw i32 %704, -48
  %706 = sext i32 %.0104 to i64
  %707 = sext i32 %.0102 to i64
  %708 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %11, i64 0, i64 %706, i64 %707
  store i32 %705, i32* %708, align 4
  br label %.backedge

709:                                              ; preds = %14
  %710 = add i32 %.0102, 1
  br label %.backedge

711:                                              ; preds = %14
  br label %.backedge

712:                                              ; preds = %14
  br label %.backedge

713:                                              ; preds = %14
  br label %.backedge

714:                                              ; preds = %14
  br label %.backedge

715:                                              ; preds = %14
  br label %.backedge

716:                                              ; preds = %14
  br label %.backedge

717:                                              ; preds = %14
  br label %.backedge

718:                                              ; preds = %14
  br label %.backedge

719:                                              ; preds = %14
  br label %.backedge

720:                                              ; preds = %14
  br label %.backedge

721:                                              ; preds = %14
  br label %.backedge

722:                                              ; preds = %14
  br label %.backedge

723:                                              ; preds = %14
  br label %.backedge

724:                                              ; preds = %14
  br label %.backedge

725:                                              ; preds = %14
  br label %.backedge

726:                                              ; preds = %14
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s868112837.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
