; ModuleID = 'build_ollvm/programs/p00036/s782524241.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s782524241.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s782524241.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 2134300907, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 2134300907, label %11
    i32 -814120759, label %14
    i32 1054379858, label %25
    i32 -404037564, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -814120759, i32 -404037564
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 1054379858, i32 -404037564
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -814120759, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline uwtable
define void @_Z5solvev() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca [11 x [12 x i8]], align 16
  %11 = alloca i8, align 1
  %12 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 1, i64 1
  br label %13

13:                                               ; preds = %.backedge, %0
  %.099 = phi i32 [ undef, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i32 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.0 = phi i32 [ 431208979, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 431208979, label %14
    i32 -999469609, label %24
    i32 -1497541890, label %44
    i32 -270499951, label %46
    i32 2132746647, label %47
    i32 -2056368947, label %57
    i32 -905638770, label %68
    i32 1040395554, label %70
    i32 -55066886, label %80
    i32 -423565678, label %90
    i32 -637522496, label %91
    i32 -537991210, label %101
    i32 895475097, label %112
    i32 1881272518, label %114
    i32 -1233966418, label %118
    i32 -1384416213, label %120
    i32 -528052303, label %121
    i32 -1191514622, label %123
    i32 -522049459, label %125
    i32 1433790179, label %128
    i32 -1711329612, label %132
    i32 -1146298415, label %134
    i32 -1936512679, label %135
    i32 2062341530, label %145
    i32 1209605752, label %156
    i32 578010261, label %158
    i32 -1627740300, label %159
    i32 2025257951, label %162
    i32 1225677461, label %167
    i32 1218625530, label %177
    i32 2132229500, label %188
    i32 -1285894687, label %189
    i32 -1268244103, label %190
    i32 -1131127406, label %200
    i32 -1475515292, label %211
    i32 -4355203, label %212
    i32 1400201725, label %222
    i32 33710609, label %232
    i32 -531061108, label %233
    i32 2007401528, label %236
    i32 1335451470, label %246
    i32 694892145, label %256
    i32 -870144279, label %257
    i32 156780621, label %260
    i32 -1403914507, label %267
    i32 677920224, label %275
    i32 976356240, label %283
    i32 -1611428976, label %292
    i32 1741523749, label %295
    i32 1105850022, label %305
    i32 649394052, label %321
    i32 -542305185, label %323
    i32 1852993410, label %331
    i32 -403396049, label %339
    i32 -579282691, label %342
    i32 1954079832, label %350
    i32 -646641961, label %357
    i32 1632295126, label %367
    i32 824886963, label %382
    i32 -396858359, label %384
    i32 303774631, label %394
    i32 638319554, label %406
    i32 784091010, label %407
    i32 -1199118980, label %415
    i32 1837342966, label %425
    i32 1434127500, label %441
    i32 -1304836995, label %443
    i32 2023147285, label %452
    i32 -971639230, label %455
    i32 -538239670, label %463
    i32 -1949833825, label %471
    i32 1832237594, label %481
    i32 1972189052, label %498
    i32 -1466353628, label %500
    i32 1125012020, label %503
    i32 -603767356, label %511
    i32 -1662525055, label %519
    i32 1891178434, label %528
    i32 1899158938, label %538
    i32 504388754, label %550
    i32 476988031, label %551
    i32 763409022, label %558
    i32 174994733, label %566
    i32 580989994, label %576
    i32 -1957238923, label %593
    i32 -1987759391, label %595
    i32 -596615731, label %598
    i32 1559419689, label %608
    i32 306923288, label %618
    i32 -1955539866, label %619
    i32 -336834118, label %620
    i32 1130015575, label %630
    i32 -618361693, label %640
    i32 1149135549, label %641
    i32 1567105293, label %651
    i32 -391117550, label %661
    i32 -439703160, label %662
    i32 708169115, label %663
    i32 2127910990, label %664
    i32 351731725, label %665
    i32 -605562201, label %666
    i32 -490022517, label %668
    i32 -1202660525, label %669
    i32 1919964135, label %671
    i32 -522129122, label %672
    i32 -1556362927, label %673
    i32 -1349089786, label %684
    i32 -1037101370, label %685
    i32 -1746901658, label %686
    i32 -1415611029, label %687
    i32 1259782167, label %688
    i32 1324786965, label %690
    i32 -2130926208, label %692
    i32 105821728, label %693
    i32 1271867389, label %694
    i32 421450948, label %695
    i32 1237855543, label %696
    i32 -1514051911, label %699
    i32 -1335669515, label %700
    i32 791888712, label %701
    i32 2091283138, label %704
    i32 1182807303, label %705
    i32 970531683, label %706
    i32 -623018096, label %707
  ]

.backedge:                                        ; preds = %13, %707, %706, %705, %704, %701, %700, %699, %696, %695, %694, %693, %692, %690, %688, %687, %686, %685, %684, %673, %671, %669, %668, %666, %665, %664, %663, %662, %661, %651, %641, %640, %630, %620, %619, %618, %608, %598, %595, %593, %576, %566, %558, %551, %550, %538, %528, %519, %511, %503, %500, %498, %481, %471, %463, %455, %452, %443, %441, %425, %415, %407, %406, %394, %384, %382, %367, %357, %350, %342, %339, %331, %323, %321, %305, %295, %292, %283, %275, %267, %260, %257, %256, %246, %236, %233, %232, %222, %212, %211, %200, %190, %189, %188, %177, %167, %162, %159, %158, %156, %145, %135, %134, %132, %128, %125, %123, %121, %120, %118, %114, %112, %101, %91, %90, %80, %70, %68, %57, %47, %46, %44, %24, %14
  %.099.be = phi i32 [ %.099, %13 ], [ %.099, %707 ], [ %.099, %706 ], [ %.099, %705 ], [ %.099, %704 ], [ %.099, %701 ], [ %.099, %700 ], [ %.099, %699 ], [ %.099, %696 ], [ %.099, %695 ], [ %.099, %694 ], [ %.099, %693 ], [ %.099, %692 ], [ %.099, %690 ], [ %.099, %688 ], [ %.099, %687 ], [ %.099, %686 ], [ %.099, %685 ], [ %.099, %684 ], [ %.099, %673 ], [ %.099, %671 ], [ %.099, %669 ], [ %.099, %668 ], [ %.099, %666 ], [ %.099, %665 ], [ %.099, %664 ], [ %.099, %663 ], [ %.099, %662 ], [ %.099, %661 ], [ %.099, %651 ], [ %.099, %641 ], [ %.099, %640 ], [ %.099, %630 ], [ %.099, %620 ], [ %.099, %619 ], [ %.099, %618 ], [ %.099, %608 ], [ %.099, %598 ], [ %.099, %595 ], [ %.099, %593 ], [ %.099, %576 ], [ %.099, %566 ], [ %.099, %558 ], [ %.099, %551 ], [ %.099, %550 ], [ %.099, %538 ], [ %.099, %528 ], [ %.099, %519 ], [ %.099, %511 ], [ %.099, %503 ], [ %.099, %500 ], [ %.099, %498 ], [ %.099, %481 ], [ %.099, %471 ], [ %.099, %463 ], [ %.099, %455 ], [ %.099, %452 ], [ %.099, %443 ], [ %.099, %441 ], [ %.099, %425 ], [ %.099, %415 ], [ %.099, %407 ], [ %.099, %406 ], [ %.099, %394 ], [ %.099, %384 ], [ %.099, %382 ], [ %.099, %367 ], [ %.099, %357 ], [ %.099, %350 ], [ %.099, %342 ], [ %.099, %339 ], [ %.099, %331 ], [ %.099, %323 ], [ %.099, %321 ], [ %.099, %305 ], [ %.099, %295 ], [ %.099, %292 ], [ %.099, %283 ], [ %.099, %275 ], [ %.099, %267 ], [ %.099, %260 ], [ %.099, %257 ], [ %.099, %256 ], [ %.099, %246 ], [ %.099, %236 ], [ %.099, %233 ], [ %.099, %232 ], [ %.099, %222 ], [ %.099, %212 ], [ %.099, %211 ], [ %.099, %200 ], [ %.099, %190 ], [ %.099, %189 ], [ %.099, %188 ], [ %.099, %177 ], [ %.099, %167 ], [ %.099, %162 ], [ %.099, %159 ], [ %.099, %158 ], [ %.099, %156 ], [ %.099, %145 ], [ %.099, %135 ], [ %.099, %134 ], [ %.099, %132 ], [ %.099, %128 ], [ %.099, %125 ], [ %.099, %123 ], [ %122, %121 ], [ %.099, %120 ], [ %.099, %118 ], [ %.099, %114 ], [ %.099, %112 ], [ %.099, %101 ], [ %.099, %91 ], [ %.099, %90 ], [ %.099, %80 ], [ %.099, %70 ], [ %.099, %68 ], [ %.099, %57 ], [ %.099, %47 ], [ 0, %46 ], [ %.099, %44 ], [ %.099, %24 ], [ %.099, %14 ]
  %.097.be = phi i32 [ %.097, %13 ], [ %.097, %707 ], [ %.097, %706 ], [ %.097, %705 ], [ %.097, %704 ], [ %.097, %701 ], [ %.097, %700 ], [ %.097, %699 ], [ %.097, %696 ], [ %.097, %695 ], [ %.097, %694 ], [ %.097, %693 ], [ %.097, %692 ], [ %.097, %690 ], [ %.097, %688 ], [ %.097, %687 ], [ %.097, %686 ], [ 0, %685 ], [ %.097, %684 ], [ %.097, %673 ], [ %.097, %671 ], [ %.097, %669 ], [ %.097, %668 ], [ %.097, %666 ], [ %.097, %665 ], [ %.097, %664 ], [ %.097, %663 ], [ %.097, %662 ], [ %.097, %661 ], [ %.097, %651 ], [ %.097, %641 ], [ %.097, %640 ], [ %.097, %630 ], [ %.097, %620 ], [ %.097, %619 ], [ %.097, %618 ], [ %.097, %608 ], [ %.097, %598 ], [ %.097, %595 ], [ %.097, %593 ], [ %.097, %576 ], [ %.097, %566 ], [ %.097, %558 ], [ %.097, %551 ], [ %.097, %550 ], [ %.097, %538 ], [ %.097, %528 ], [ %.097, %519 ], [ %.097, %511 ], [ %.097, %503 ], [ %.097, %500 ], [ %.097, %498 ], [ %.097, %481 ], [ %.097, %471 ], [ %.097, %463 ], [ %.097, %455 ], [ %.097, %452 ], [ %.097, %443 ], [ %.097, %441 ], [ %.097, %425 ], [ %.097, %415 ], [ %.097, %407 ], [ %.097, %406 ], [ %.097, %394 ], [ %.097, %384 ], [ %.097, %382 ], [ %.097, %367 ], [ %.097, %357 ], [ %.097, %350 ], [ %.097, %342 ], [ %.097, %339 ], [ %.097, %331 ], [ %.097, %323 ], [ %.097, %321 ], [ %.097, %305 ], [ %.097, %295 ], [ %.097, %292 ], [ %.097, %283 ], [ %.097, %275 ], [ %.097, %267 ], [ %.097, %260 ], [ %.097, %257 ], [ %.097, %256 ], [ %.097, %246 ], [ %.097, %236 ], [ %.097, %233 ], [ %.097, %232 ], [ %.097, %222 ], [ %.097, %212 ], [ %.097, %211 ], [ %.097, %200 ], [ %.097, %190 ], [ %.097, %189 ], [ %.097, %188 ], [ %.097, %177 ], [ %.097, %167 ], [ %.097, %162 ], [ %.097, %159 ], [ %.097, %158 ], [ %.097, %156 ], [ %.097, %145 ], [ %.097, %135 ], [ %.097, %134 ], [ %.097, %132 ], [ %.097, %128 ], [ %.097, %125 ], [ %.097, %123 ], [ %.097, %121 ], [ %.097, %120 ], [ %119, %118 ], [ %.097, %114 ], [ %.097, %112 ], [ %.097, %101 ], [ %.097, %91 ], [ %.097, %90 ], [ 0, %80 ], [ %.097, %70 ], [ %.097, %68 ], [ %.097, %57 ], [ %.097, %47 ], [ %.097, %46 ], [ %.097, %44 ], [ %.097, %24 ], [ %.097, %14 ]
  %.095.be = phi i32 [ %.095, %13 ], [ %.095, %707 ], [ %.095, %706 ], [ %.095, %705 ], [ %.095, %704 ], [ %.095, %701 ], [ %.095, %700 ], [ %.095, %699 ], [ %.095, %696 ], [ %.095, %695 ], [ %.095, %694 ], [ %.095, %693 ], [ %.095, %692 ], [ %.095, %690 ], [ %.095, %688 ], [ %.095, %687 ], [ %.095, %686 ], [ %.095, %685 ], [ %.095, %684 ], [ %.095, %673 ], [ %.095, %671 ], [ %.095, %669 ], [ %.095, %668 ], [ %.095, %666 ], [ %.095, %665 ], [ %.095, %664 ], [ %.095, %663 ], [ %.095, %662 ], [ %.095, %661 ], [ %.095, %651 ], [ %.095, %641 ], [ %.095, %640 ], [ %.095, %630 ], [ %.095, %620 ], [ %.095, %619 ], [ %.095, %618 ], [ %.095, %608 ], [ %.095, %598 ], [ %.095, %595 ], [ %.095, %593 ], [ %.095, %576 ], [ %.095, %566 ], [ %.095, %558 ], [ %.095, %551 ], [ %.095, %550 ], [ %.095, %538 ], [ %.095, %528 ], [ %.095, %519 ], [ %.095, %511 ], [ %.095, %503 ], [ %.095, %500 ], [ %.095, %498 ], [ %.095, %481 ], [ %.095, %471 ], [ %.095, %463 ], [ %.095, %455 ], [ %.095, %452 ], [ %.095, %443 ], [ %.095, %441 ], [ %.095, %425 ], [ %.095, %415 ], [ %.095, %407 ], [ %.095, %406 ], [ %.095, %394 ], [ %.095, %384 ], [ %.095, %382 ], [ %.095, %367 ], [ %.095, %357 ], [ %.095, %350 ], [ %.095, %342 ], [ %.095, %339 ], [ %.095, %331 ], [ %.095, %323 ], [ %.095, %321 ], [ %.095, %305 ], [ %.095, %295 ], [ %.095, %292 ], [ %.095, %283 ], [ %.095, %275 ], [ %.095, %267 ], [ %.095, %260 ], [ %.095, %257 ], [ %.095, %256 ], [ %.095, %246 ], [ %.095, %236 ], [ %.095, %233 ], [ %.095, %232 ], [ %.095, %222 ], [ %.095, %212 ], [ %.095, %211 ], [ %.095, %200 ], [ %.095, %190 ], [ %.095, %189 ], [ %.095, %188 ], [ %.095, %177 ], [ %.095, %167 ], [ %.095, %162 ], [ %.095, %159 ], [ %.095, %158 ], [ %.095, %156 ], [ %.095, %145 ], [ %.095, %135 ], [ %.095, %134 ], [ %133, %132 ], [ %.095, %128 ], [ %.095, %125 ], [ 2, %123 ], [ %.095, %121 ], [ %.095, %120 ], [ %.095, %118 ], [ %.095, %114 ], [ %.095, %112 ], [ %.095, %101 ], [ %.095, %91 ], [ %.095, %90 ], [ %.095, %80 ], [ %.095, %70 ], [ %.095, %68 ], [ %.095, %57 ], [ %.095, %47 ], [ %.095, %46 ], [ %.095, %44 ], [ %.095, %24 ], [ %.095, %14 ]
  %.093.be = phi i32 [ %.093, %13 ], [ %.093, %707 ], [ %.093, %706 ], [ %.093, %705 ], [ %.093, %704 ], [ %.093, %701 ], [ %.093, %700 ], [ %.093, %699 ], [ %.093, %696 ], [ %.093, %695 ], [ %.093, %694 ], [ %.093, %693 ], [ %.093, %692 ], [ %691, %690 ], [ %.093, %688 ], [ %.093, %687 ], [ %.093, %686 ], [ %.093, %685 ], [ %.093, %684 ], [ %.093, %673 ], [ %.093, %671 ], [ %.093, %669 ], [ %.093, %668 ], [ %.093, %666 ], [ %.093, %665 ], [ %.093, %664 ], [ %.093, %663 ], [ %.093, %662 ], [ %.093, %661 ], [ %.093, %651 ], [ %.093, %641 ], [ %.093, %640 ], [ %.093, %630 ], [ %.093, %620 ], [ %.093, %619 ], [ %.093, %618 ], [ %.093, %608 ], [ %.093, %598 ], [ %.093, %595 ], [ %.093, %593 ], [ %.093, %576 ], [ %.093, %566 ], [ %.093, %558 ], [ %.093, %551 ], [ %.093, %550 ], [ %.093, %538 ], [ %.093, %528 ], [ %.093, %519 ], [ %.093, %511 ], [ %.093, %503 ], [ %.093, %500 ], [ %.093, %498 ], [ %.093, %481 ], [ %.093, %471 ], [ %.093, %463 ], [ %.093, %455 ], [ %.093, %452 ], [ %.093, %443 ], [ %.093, %441 ], [ %.093, %425 ], [ %.093, %415 ], [ %.093, %407 ], [ %.093, %406 ], [ %.093, %394 ], [ %.093, %384 ], [ %.093, %382 ], [ %.093, %367 ], [ %.093, %357 ], [ %.093, %350 ], [ %.093, %342 ], [ %.093, %339 ], [ %.093, %331 ], [ %.093, %323 ], [ %.093, %321 ], [ %.093, %305 ], [ %.093, %295 ], [ %.093, %292 ], [ %.093, %283 ], [ %.093, %275 ], [ %.093, %267 ], [ %.093, %260 ], [ %.093, %257 ], [ %.093, %256 ], [ %.093, %246 ], [ %.093, %236 ], [ %.093, %233 ], [ %.093, %232 ], [ %.093, %222 ], [ %.093, %212 ], [ %.093, %211 ], [ %201, %200 ], [ %.093, %190 ], [ %.093, %189 ], [ %.093, %188 ], [ %.093, %177 ], [ %.093, %167 ], [ %.093, %162 ], [ %.093, %159 ], [ %.093, %158 ], [ %.093, %156 ], [ %.093, %145 ], [ %.093, %135 ], [ 2, %134 ], [ %.093, %132 ], [ %.093, %128 ], [ %.093, %125 ], [ %.093, %123 ], [ %.093, %121 ], [ %.093, %120 ], [ %.093, %118 ], [ %.093, %114 ], [ %.093, %112 ], [ %.093, %101 ], [ %.093, %91 ], [ %.093, %90 ], [ %.093, %80 ], [ %.093, %70 ], [ %.093, %68 ], [ %.093, %57 ], [ %.093, %47 ], [ %.093, %46 ], [ %.093, %44 ], [ %.093, %24 ], [ %.093, %14 ]
  %.091.be = phi i32 [ %.091, %13 ], [ %.091, %707 ], [ %.091, %706 ], [ %.091, %705 ], [ %.091, %704 ], [ %.091, %701 ], [ %.091, %700 ], [ %.091, %699 ], [ %.091, %696 ], [ %.091, %695 ], [ %.091, %694 ], [ %.091, %693 ], [ %.091, %692 ], [ %.091, %690 ], [ %689, %688 ], [ %.091, %687 ], [ %.091, %686 ], [ %.091, %685 ], [ %.091, %684 ], [ %.091, %673 ], [ %.091, %671 ], [ %.091, %669 ], [ %.091, %668 ], [ %.091, %666 ], [ %.091, %665 ], [ %.091, %664 ], [ %.091, %663 ], [ %.091, %662 ], [ %.091, %661 ], [ %.091, %651 ], [ %.091, %641 ], [ %.091, %640 ], [ %.091, %630 ], [ %.091, %620 ], [ %.091, %619 ], [ %.091, %618 ], [ %.091, %608 ], [ %.091, %598 ], [ %.091, %595 ], [ %.091, %593 ], [ %.091, %576 ], [ %.091, %566 ], [ %.091, %558 ], [ %.091, %551 ], [ %.091, %550 ], [ %.091, %538 ], [ %.091, %528 ], [ %.091, %519 ], [ %.091, %511 ], [ %.091, %503 ], [ %.091, %500 ], [ %.091, %498 ], [ %.091, %481 ], [ %.091, %471 ], [ %.091, %463 ], [ %.091, %455 ], [ %.091, %452 ], [ %.091, %443 ], [ %.091, %441 ], [ %.091, %425 ], [ %.091, %415 ], [ %.091, %407 ], [ %.091, %406 ], [ %.091, %394 ], [ %.091, %384 ], [ %.091, %382 ], [ %.091, %367 ], [ %.091, %357 ], [ %.091, %350 ], [ %.091, %342 ], [ %.091, %339 ], [ %.091, %331 ], [ %.091, %323 ], [ %.091, %321 ], [ %.091, %305 ], [ %.091, %295 ], [ %.091, %292 ], [ %.091, %283 ], [ %.091, %275 ], [ %.091, %267 ], [ %.091, %260 ], [ %.091, %257 ], [ %.091, %256 ], [ %.091, %246 ], [ %.091, %236 ], [ %.091, %233 ], [ %.091, %232 ], [ %.091, %222 ], [ %.091, %212 ], [ %.091, %211 ], [ %.091, %200 ], [ %.091, %190 ], [ %.091, %189 ], [ %.091, %188 ], [ %178, %177 ], [ %.091, %167 ], [ %.091, %162 ], [ %.091, %159 ], [ 1, %158 ], [ %.091, %156 ], [ %.091, %145 ], [ %.091, %135 ], [ %.091, %134 ], [ %.091, %132 ], [ %.091, %128 ], [ %.091, %125 ], [ %.091, %123 ], [ %.091, %121 ], [ %.091, %120 ], [ %.091, %118 ], [ %.091, %114 ], [ %.091, %112 ], [ %.091, %101 ], [ %.091, %91 ], [ %.091, %90 ], [ %.091, %80 ], [ %.091, %70 ], [ %.091, %68 ], [ %.091, %57 ], [ %.091, %47 ], [ %.091, %46 ], [ %.091, %44 ], [ %.091, %24 ], [ %.091, %14 ]
  %.089.be = phi i32 [ %.089, %13 ], [ %.089, %707 ], [ %.089, %706 ], [ %.089, %705 ], [ %.089, %704 ], [ %.089, %701 ], [ %.089, %700 ], [ %.089, %699 ], [ %.089, %696 ], [ %.089, %695 ], [ %.089, %694 ], [ %.089, %693 ], [ 1, %692 ], [ %.089, %690 ], [ %.089, %688 ], [ %.089, %687 ], [ %.089, %686 ], [ %.089, %685 ], [ %.089, %684 ], [ %.089, %673 ], [ %.089, %671 ], [ %670, %669 ], [ %.089, %668 ], [ %.089, %666 ], [ %.089, %665 ], [ %.089, %664 ], [ %.089, %663 ], [ %.089, %662 ], [ %.089, %661 ], [ %.089, %651 ], [ %.089, %641 ], [ %.089, %640 ], [ %.089, %630 ], [ %.089, %620 ], [ %.089, %619 ], [ %.089, %618 ], [ %.089, %608 ], [ %.089, %598 ], [ %.089, %595 ], [ %.089, %593 ], [ %.089, %576 ], [ %.089, %566 ], [ %.089, %558 ], [ %.089, %551 ], [ %.089, %550 ], [ %.089, %538 ], [ %.089, %528 ], [ %.089, %519 ], [ %.089, %511 ], [ %.089, %503 ], [ %.089, %500 ], [ %.089, %498 ], [ %.089, %481 ], [ %.089, %471 ], [ %.089, %463 ], [ %.089, %455 ], [ %.089, %452 ], [ %.089, %443 ], [ %.089, %441 ], [ %.089, %425 ], [ %.089, %415 ], [ %.089, %407 ], [ %.089, %406 ], [ %.089, %394 ], [ %.089, %384 ], [ %.089, %382 ], [ %.089, %367 ], [ %.089, %357 ], [ %.089, %350 ], [ %.089, %342 ], [ %.089, %339 ], [ %.089, %331 ], [ %.089, %323 ], [ %.089, %321 ], [ %.089, %305 ], [ %.089, %295 ], [ %.089, %292 ], [ %.089, %283 ], [ %.089, %275 ], [ %.089, %267 ], [ %.089, %260 ], [ %.089, %257 ], [ %.089, %256 ], [ %.089, %246 ], [ %.089, %236 ], [ %.089, %233 ], [ %.089, %232 ], [ 1, %222 ], [ %.089, %212 ], [ %.089, %211 ], [ %.089, %200 ], [ %.089, %190 ], [ %.089, %189 ], [ %.089, %188 ], [ %.089, %177 ], [ %.089, %167 ], [ %.089, %162 ], [ %.089, %159 ], [ %.089, %158 ], [ %.089, %156 ], [ %.089, %145 ], [ %.089, %135 ], [ %.089, %134 ], [ %.089, %132 ], [ %.089, %128 ], [ %.089, %125 ], [ %.089, %123 ], [ %.089, %121 ], [ %.089, %120 ], [ %.089, %118 ], [ %.089, %114 ], [ %.089, %112 ], [ %.089, %101 ], [ %.089, %91 ], [ %.089, %90 ], [ %.089, %80 ], [ %.089, %70 ], [ %.089, %68 ], [ %.089, %57 ], [ %.089, %47 ], [ %.089, %46 ], [ %.089, %44 ], [ %.089, %24 ], [ %.089, %14 ]
  %.087.be = phi i32 [ %.087, %13 ], [ %.087, %707 ], [ %.087, %706 ], [ %.087, %705 ], [ %.087, %704 ], [ %.087, %701 ], [ %.087, %700 ], [ %.087, %699 ], [ %.087, %696 ], [ %.087, %695 ], [ %.087, %694 ], [ 1, %693 ], [ %.087, %692 ], [ %.087, %690 ], [ %.087, %688 ], [ %.087, %687 ], [ %.087, %686 ], [ %.087, %685 ], [ %.087, %684 ], [ %.087, %673 ], [ %.087, %671 ], [ %.087, %669 ], [ %.087, %668 ], [ %667, %666 ], [ %.087, %665 ], [ %.087, %664 ], [ %.087, %663 ], [ %.087, %662 ], [ %.087, %661 ], [ %.087, %651 ], [ %.087, %641 ], [ %.087, %640 ], [ %.087, %630 ], [ %.087, %620 ], [ %.087, %619 ], [ %.087, %618 ], [ %.087, %608 ], [ %.087, %598 ], [ %.087, %595 ], [ %.087, %593 ], [ %.087, %576 ], [ %.087, %566 ], [ %.087, %558 ], [ %.087, %551 ], [ %.087, %550 ], [ %.087, %538 ], [ %.087, %528 ], [ %.087, %519 ], [ %.087, %511 ], [ %.087, %503 ], [ %.087, %500 ], [ %.087, %498 ], [ %.087, %481 ], [ %.087, %471 ], [ %.087, %463 ], [ %.087, %455 ], [ %.087, %452 ], [ %.087, %443 ], [ %.087, %441 ], [ %.087, %425 ], [ %.087, %415 ], [ %.087, %407 ], [ %.087, %406 ], [ %.087, %394 ], [ %.087, %384 ], [ %.087, %382 ], [ %.087, %367 ], [ %.087, %357 ], [ %.087, %350 ], [ %.087, %342 ], [ %.087, %339 ], [ %.087, %331 ], [ %.087, %323 ], [ %.087, %321 ], [ %.087, %305 ], [ %.087, %295 ], [ %.087, %292 ], [ %.087, %283 ], [ %.087, %275 ], [ %.087, %267 ], [ %.087, %260 ], [ %.087, %257 ], [ %.087, %256 ], [ 1, %246 ], [ %.087, %236 ], [ %.087, %233 ], [ %.087, %232 ], [ %.087, %222 ], [ %.087, %212 ], [ %.087, %211 ], [ %.087, %200 ], [ %.087, %190 ], [ %.087, %189 ], [ %.087, %188 ], [ %.087, %177 ], [ %.087, %167 ], [ %.087, %162 ], [ %.087, %159 ], [ %.087, %158 ], [ %.087, %156 ], [ %.087, %145 ], [ %.087, %135 ], [ %.087, %134 ], [ %.087, %132 ], [ %.087, %128 ], [ %.087, %125 ], [ %.087, %123 ], [ %.087, %121 ], [ %.087, %120 ], [ %.087, %118 ], [ %.087, %114 ], [ %.087, %112 ], [ %.087, %101 ], [ %.087, %91 ], [ %.087, %90 ], [ %.087, %80 ], [ %.087, %70 ], [ %.087, %68 ], [ %.087, %57 ], [ %.087, %47 ], [ %.087, %46 ], [ %.087, %44 ], [ %.087, %24 ], [ %.087, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ 1567105293, %707 ], [ 1130015575, %706 ], [ 1559419689, %705 ], [ 580989994, %704 ], [ 1899158938, %701 ], [ 1832237594, %700 ], [ 1837342966, %699 ], [ 303774631, %696 ], [ 1632295126, %695 ], [ 1105850022, %694 ], [ 1335451470, %693 ], [ 1400201725, %692 ], [ -1131127406, %690 ], [ 1218625530, %688 ], [ 2062341530, %687 ], [ -537991210, %686 ], [ -55066886, %685 ], [ -2056368947, %684 ], [ -999469609, %673 ], [ 431208979, %671 ], [ -531061108, %669 ], [ -1202660525, %668 ], [ -870144279, %666 ], [ -605562201, %665 ], [ -490022517, %664 ], [ 2127910990, %663 ], [ 708169115, %662 ], [ -439703160, %661 ], [ %660, %651 ], [ %650, %641 ], [ 1149135549, %640 ], [ %639, %630 ], [ %629, %620 ], [ -336834118, %619 ], [ -1955539866, %618 ], [ %617, %608 ], [ %607, %598 ], [ -596615731, %595 ], [ %594, %593 ], [ %592, %576 ], [ %575, %566 ], [ %565, %558 ], [ %557, %551 ], [ -1955539866, %550 ], [ %549, %538 ], [ %537, %528 ], [ %527, %519 ], [ %518, %511 ], [ %510, %503 ], [ -336834118, %500 ], [ %499, %498 ], [ %497, %481 ], [ %480, %471 ], [ %470, %463 ], [ %462, %455 ], [ 1149135549, %452 ], [ %451, %443 ], [ %442, %441 ], [ %440, %425 ], [ %424, %415 ], [ %414, %407 ], [ -439703160, %406 ], [ %405, %394 ], [ %393, %384 ], [ %383, %382 ], [ %381, %367 ], [ %366, %357 ], [ %356, %350 ], [ %349, %342 ], [ 708169115, %339 ], [ %338, %331 ], [ %330, %323 ], [ %322, %321 ], [ %320, %305 ], [ %304, %295 ], [ 2127910990, %292 ], [ %291, %283 ], [ %282, %275 ], [ %274, %267 ], [ %266, %260 ], [ %259, %257 ], [ -870144279, %256 ], [ %255, %246 ], [ %245, %236 ], [ %235, %233 ], [ -531061108, %232 ], [ %231, %222 ], [ %221, %212 ], [ -1936512679, %211 ], [ %210, %200 ], [ %199, %190 ], [ -1268244103, %189 ], [ -1627740300, %188 ], [ %187, %177 ], [ %176, %167 ], [ 1225677461, %162 ], [ %161, %159 ], [ -1627740300, %158 ], [ %157, %156 ], [ %155, %145 ], [ %144, %135 ], [ -1936512679, %134 ], [ -522049459, %132 ], [ -1711329612, %128 ], [ %127, %125 ], [ -522049459, %123 ], [ 2132746647, %121 ], [ -528052303, %120 ], [ -637522496, %118 ], [ -1233966418, %114 ], [ %113, %112 ], [ %111, %101 ], [ %100, %91 ], [ -637522496, %90 ], [ %89, %80 ], [ %79, %70 ], [ %69, %68 ], [ %67, %57 ], [ %56, %47 ], [ 2132746647, %46 ], [ %45, %44 ], [ %43, %24 ], [ %23, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -999469609, i32 -1556362927
  br label %.backedge

24:                                               ; preds = %13
  %25 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %11)
  %26 = bitcast %"class.std::basic_istream"* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr i8, i8* %27, i64 -24
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::basic_istream"* %25 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  %33 = bitcast i8* %32 to %"class.std::basic_ios"*
  %34 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %33)
  store i1 %34, i1* %9, align 1
  %35 = load i32, i32* @x.7, align 4
  %36 = load i32, i32* @y.8, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1497541890, i32 -1556362927
  br label %.backedge

44:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %45 = select i1 %.0..0..0., i32 -270499951, i32 -522129122
  br label %.backedge

46:                                               ; preds = %13
  br label %.backedge

47:                                               ; preds = %13
  %48 = load i32, i32* @x.7, align 4
  %49 = load i32, i32* @y.8, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 -2056368947, i32 -1349089786
  br label %.backedge

57:                                               ; preds = %13
  %58 = icmp slt i32 %.099, 11
  store i1 %58, i1* %8, align 1
  %59 = load i32, i32* @x.7, align 4
  %60 = load i32, i32* @y.8, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -905638770, i32 -1349089786
  br label %.backedge

68:                                               ; preds = %13
  %.0..0..0.79 = load volatile i1, i1* %8, align 1
  %69 = select i1 %.0..0..0.79, i32 1040395554, i32 -1191514622
  br label %.backedge

70:                                               ; preds = %13
  %71 = load i32, i32* @x.7, align 4
  %72 = load i32, i32* @y.8, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 -55066886, i32 -1037101370
  br label %.backedge

80:                                               ; preds = %13
  %81 = load i32, i32* @x.7, align 4
  %82 = load i32, i32* @y.8, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 -423565678, i32 -1037101370
  br label %.backedge

90:                                               ; preds = %13
  br label %.backedge

91:                                               ; preds = %13
  %92 = load i32, i32* @x.7, align 4
  %93 = load i32, i32* @y.8, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 -537991210, i32 -1746901658
  br label %.backedge

101:                                              ; preds = %13
  %102 = icmp slt i32 %.097, 12
  store i1 %102, i1* %7, align 1
  %103 = load i32, i32* @x.7, align 4
  %104 = load i32, i32* @y.8, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 895475097, i32 -1746901658
  br label %.backedge

112:                                              ; preds = %13
  %.0..0..0.80 = load volatile i1, i1* %7, align 1
  %113 = select i1 %.0..0..0.80, i32 1881272518, i32 -1384416213
  br label %.backedge

114:                                              ; preds = %13
  %115 = sext i32 %.099 to i64
  %116 = sext i32 %.097 to i64
  %117 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %115, i64 %116
  store i8 48, i8* %117, align 1
  br label %.backedge

118:                                              ; preds = %13
  %119 = add i32 %.097, 1
  br label %.backedge

120:                                              ; preds = %13
  br label %.backedge

121:                                              ; preds = %13
  %122 = add i32 %.099, 1
  br label %.backedge

123:                                              ; preds = %13
  %124 = load i8, i8* %11, align 1
  store i8 %124, i8* %12, align 1
  br label %.backedge

125:                                              ; preds = %13
  %126 = icmp slt i32 %.095, 9
  %127 = select i1 %126, i32 1433790179, i32 -1146298415
  br label %.backedge

128:                                              ; preds = %13
  %129 = sext i32 %.095 to i64
  %130 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 1, i64 %129
  %131 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %130)
  br label %.backedge

132:                                              ; preds = %13
  %133 = add i32 %.095, 1
  br label %.backedge

134:                                              ; preds = %13
  br label %.backedge

135:                                              ; preds = %13
  %136 = load i32, i32* @x.7, align 4
  %137 = load i32, i32* @y.8, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 2062341530, i32 -1415611029
  br label %.backedge

145:                                              ; preds = %13
  %146 = icmp slt i32 %.093, 9
  store i1 %146, i1* %6, align 1
  %147 = load i32, i32* @x.7, align 4
  %148 = load i32, i32* @y.8, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 1209605752, i32 -1415611029
  br label %.backedge

156:                                              ; preds = %13
  %.0..0..0.81 = load volatile i1, i1* %6, align 1
  %157 = select i1 %.0..0..0.81, i32 578010261, i32 -4355203
  br label %.backedge

158:                                              ; preds = %13
  br label %.backedge

159:                                              ; preds = %13
  %160 = icmp slt i32 %.091, 9
  %161 = select i1 %160, i32 2025257951, i32 -1285894687
  br label %.backedge

162:                                              ; preds = %13
  %163 = sext i32 %.093 to i64
  %164 = sext i32 %.091 to i64
  %165 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %163, i64 %164
  %166 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %165)
  br label %.backedge

167:                                              ; preds = %13
  %168 = load i32, i32* @x.7, align 4
  %169 = load i32, i32* @y.8, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 1218625530, i32 1259782167
  br label %.backedge

177:                                              ; preds = %13
  %178 = add i32 %.091, 1
  %179 = load i32, i32* @x.7, align 4
  %180 = load i32, i32* @y.8, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 2132229500, i32 1259782167
  br label %.backedge

188:                                              ; preds = %13
  br label %.backedge

189:                                              ; preds = %13
  br label %.backedge

190:                                              ; preds = %13
  %191 = load i32, i32* @x.7, align 4
  %192 = load i32, i32* @y.8, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -1131127406, i32 1324786965
  br label %.backedge

200:                                              ; preds = %13
  %201 = add i32 %.093, 1
  %202 = load i32, i32* @x.7, align 4
  %203 = load i32, i32* @y.8, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 -1475515292, i32 1324786965
  br label %.backedge

211:                                              ; preds = %13
  br label %.backedge

212:                                              ; preds = %13
  %213 = load i32, i32* @x.7, align 4
  %214 = load i32, i32* @y.8, align 4
  %215 = add i32 %213, -1
  %216 = mul i32 %215, %213
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %219, %218
  %221 = select i1 %220, i32 1400201725, i32 -2130926208
  br label %.backedge

222:                                              ; preds = %13
  %223 = load i32, i32* @x.7, align 4
  %224 = load i32, i32* @y.8, align 4
  %225 = add i32 %223, -1
  %226 = mul i32 %225, %223
  %227 = and i32 %226, 1
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %229, %228
  %231 = select i1 %230, i32 33710609, i32 -2130926208
  br label %.backedge

232:                                              ; preds = %13
  br label %.backedge

233:                                              ; preds = %13
  %234 = icmp slt i32 %.089, 9
  %235 = select i1 %234, i32 2007401528, i32 1919964135
  br label %.backedge

236:                                              ; preds = %13
  %237 = load i32, i32* @x.7, align 4
  %238 = load i32, i32* @y.8, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 1335451470, i32 105821728
  br label %.backedge

246:                                              ; preds = %13
  %247 = load i32, i32* @x.7, align 4
  %248 = load i32, i32* @y.8, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 694892145, i32 105821728
  br label %.backedge

256:                                              ; preds = %13
  br label %.backedge

257:                                              ; preds = %13
  %258 = icmp slt i32 %.087, 9
  %259 = select i1 %258, i32 156780621, i32 -490022517
  br label %.backedge

260:                                              ; preds = %13
  %261 = sext i32 %.089 to i64
  %262 = sext i32 %.087 to i64
  %263 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %261, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = icmp eq i8 %264, 49
  %266 = select i1 %265, i32 -1403914507, i32 351731725
  br label %.backedge

267:                                              ; preds = %13
  %268 = sext i32 %.089 to i64
  %269 = add i32 %.087, 1
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %268, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = icmp eq i8 %272, 49
  %274 = select i1 %273, i32 677920224, i32 1741523749
  br label %.backedge

275:                                              ; preds = %13
  %276 = add i32 %.089, 1
  %277 = sext i32 %276 to i64
  %278 = sext i32 %.087 to i64
  %279 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %277, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = icmp eq i8 %280, 49
  %282 = select i1 %281, i32 976356240, i32 1741523749
  br label %.backedge

283:                                              ; preds = %13
  %284 = add i32 %.089, 1
  %285 = sext i32 %284 to i64
  %286 = add i32 %.087, 1
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %285, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = icmp eq i8 %289, 49
  %291 = select i1 %290, i32 -1611428976, i32 1741523749
  br label %.backedge

292:                                              ; preds = %13
  %293 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %294 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %293, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

295:                                              ; preds = %13
  %296 = load i32, i32* @x.7, align 4
  %297 = load i32, i32* @y.8, align 4
  %298 = add i32 %296, -1
  %299 = mul i32 %298, %296
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %302, %301
  %304 = select i1 %303, i32 1105850022, i32 1271867389
  br label %.backedge

305:                                              ; preds = %13
  %306 = add i32 %.089, 1
  %307 = sext i32 %306 to i64
  %308 = sext i32 %.087 to i64
  %309 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %307, i64 %308
  %310 = load i8, i8* %309, align 1
  %311 = icmp eq i8 %310, 49
  store i1 %311, i1* %5, align 1
  %312 = load i32, i32* @x.7, align 4
  %313 = load i32, i32* @y.8, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 649394052, i32 1271867389
  br label %.backedge

321:                                              ; preds = %13
  %.0..0..0.82 = load volatile i1, i1* %5, align 1
  %322 = select i1 %.0..0..0.82, i32 -542305185, i32 -579282691
  br label %.backedge

323:                                              ; preds = %13
  %324 = add i32 %.089, 2
  %325 = sext i32 %324 to i64
  %326 = sext i32 %.087 to i64
  %327 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %325, i64 %326
  %328 = load i8, i8* %327, align 1
  %329 = icmp eq i8 %328, 49
  %330 = select i1 %329, i32 1852993410, i32 -579282691
  br label %.backedge

331:                                              ; preds = %13
  %332 = add i32 %.089, 3
  %333 = sext i32 %332 to i64
  %334 = sext i32 %.087 to i64
  %335 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %333, i64 %334
  %336 = load i8, i8* %335, align 1
  %337 = icmp eq i8 %336, 49
  %338 = select i1 %337, i32 -403396049, i32 -579282691
  br label %.backedge

339:                                              ; preds = %13
  %340 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %341 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %340, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

342:                                              ; preds = %13
  %343 = sext i32 %.089 to i64
  %344 = add i32 %.087, 1
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %343, i64 %345
  %347 = load i8, i8* %346, align 1
  %348 = icmp eq i8 %347, 49
  %349 = select i1 %348, i32 1954079832, i32 784091010
  br label %.backedge

350:                                              ; preds = %13
  %351 = sext i32 %.089 to i64
  %.neg105 = add i32 %.087, 2
  %352 = sext i32 %.neg105 to i64
  %353 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %351, i64 %352
  %354 = load i8, i8* %353, align 1
  %355 = icmp eq i8 %354, 49
  %356 = select i1 %355, i32 -646641961, i32 784091010
  br label %.backedge

357:                                              ; preds = %13
  %358 = load i32, i32* @x.7, align 4
  %359 = load i32, i32* @y.8, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 1632295126, i32 421450948
  br label %.backedge

367:                                              ; preds = %13
  %368 = sext i32 %.089 to i64
  %.neg104 = add i32 %.087, 3
  %369 = sext i32 %.neg104 to i64
  %370 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %368, i64 %369
  %371 = load i8, i8* %370, align 1
  %372 = icmp eq i8 %371, 49
  store i1 %372, i1* %4, align 1
  %373 = load i32, i32* @x.7, align 4
  %374 = load i32, i32* @y.8, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 824886963, i32 421450948
  br label %.backedge

382:                                              ; preds = %13
  %.0..0..0.83 = load volatile i1, i1* %4, align 1
  %383 = select i1 %.0..0..0.83, i32 -396858359, i32 784091010
  br label %.backedge

384:                                              ; preds = %13
  %385 = load i32, i32* @x.7, align 4
  %386 = load i32, i32* @y.8, align 4
  %387 = add i32 %385, -1
  %388 = mul i32 %387, %385
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %391, %390
  %393 = select i1 %392, i32 303774631, i32 1237855543
  br label %.backedge

394:                                              ; preds = %13
  %395 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %396 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %395, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %397 = load i32, i32* @x.7, align 4
  %398 = load i32, i32* @y.8, align 4
  %399 = add i32 %397, -1
  %400 = mul i32 %399, %397
  %401 = and i32 %400, 1
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %403, %402
  %405 = select i1 %404, i32 638319554, i32 1237855543
  br label %.backedge

406:                                              ; preds = %13
  br label %.backedge

407:                                              ; preds = %13
  %408 = add i32 %.089, 1
  %409 = sext i32 %408 to i64
  %410 = sext i32 %.087 to i64
  %411 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %409, i64 %410
  %412 = load i8, i8* %411, align 1
  %413 = icmp eq i8 %412, 49
  %414 = select i1 %413, i32 -1199118980, i32 -971639230
  br label %.backedge

415:                                              ; preds = %13
  %416 = load i32, i32* @x.7, align 4
  %417 = load i32, i32* @y.8, align 4
  %418 = add i32 %416, -1
  %419 = mul i32 %418, %416
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %422, %421
  %424 = select i1 %423, i32 1837342966, i32 -1514051911
  br label %.backedge

425:                                              ; preds = %13
  %.neg103 = add i32 %.089, 1
  %426 = sext i32 %.neg103 to i64
  %427 = add i32 %.087, -1
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %426, i64 %428
  %430 = load i8, i8* %429, align 1
  %431 = icmp eq i8 %430, 49
  store i1 %431, i1* %3, align 1
  %432 = load i32, i32* @x.7, align 4
  %433 = load i32, i32* @y.8, align 4
  %434 = add i32 %432, -1
  %435 = mul i32 %434, %432
  %436 = and i32 %435, 1
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %438, %437
  %440 = select i1 %439, i32 1434127500, i32 -1514051911
  br label %.backedge

441:                                              ; preds = %13
  %.0..0..0.84 = load volatile i1, i1* %3, align 1
  %442 = select i1 %.0..0..0.84, i32 -1304836995, i32 -971639230
  br label %.backedge

443:                                              ; preds = %13
  %444 = add i32 %.089, 2
  %445 = sext i32 %444 to i64
  %446 = add i32 %.087, -1
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %445, i64 %447
  %449 = load i8, i8* %448, align 1
  %450 = icmp eq i8 %449, 49
  %451 = select i1 %450, i32 2023147285, i32 -971639230
  br label %.backedge

452:                                              ; preds = %13
  %453 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %454 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %453, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

455:                                              ; preds = %13
  %456 = sext i32 %.089 to i64
  %457 = add i32 %.087, 1
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %456, i64 %458
  %460 = load i8, i8* %459, align 1
  %461 = icmp eq i8 %460, 49
  %462 = select i1 %461, i32 -538239670, i32 1125012020
  br label %.backedge

463:                                              ; preds = %13
  %.neg102 = add i32 %.089, 1
  %464 = sext i32 %.neg102 to i64
  %465 = add i32 %.087, 1
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %464, i64 %466
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 49
  %470 = select i1 %469, i32 -1949833825, i32 1125012020
  br label %.backedge

471:                                              ; preds = %13
  %472 = load i32, i32* @x.7, align 4
  %473 = load i32, i32* @y.8, align 4
  %474 = add i32 %472, -1
  %475 = mul i32 %474, %472
  %476 = and i32 %475, 1
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %478, %477
  %480 = select i1 %479, i32 1832237594, i32 -1335669515
  br label %.backedge

481:                                              ; preds = %13
  %482 = add i32 %.089, 1
  %483 = sext i32 %482 to i64
  %484 = add i32 %.087, 2
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %483, i64 %485
  %487 = load i8, i8* %486, align 1
  %488 = icmp eq i8 %487, 49
  store i1 %488, i1* %2, align 1
  %489 = load i32, i32* @x.7, align 4
  %490 = load i32, i32* @y.8, align 4
  %491 = add i32 %489, -1
  %492 = mul i32 %491, %489
  %493 = and i32 %492, 1
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %495, %494
  %497 = select i1 %496, i32 1972189052, i32 -1335669515
  br label %.backedge

498:                                              ; preds = %13
  %.0..0..0.85 = load volatile i1, i1* %2, align 1
  %499 = select i1 %.0..0..0.85, i32 -1466353628, i32 1125012020
  br label %.backedge

500:                                              ; preds = %13
  %501 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %502 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %501, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

503:                                              ; preds = %13
  %504 = add i32 %.089, 1
  %505 = sext i32 %504 to i64
  %506 = sext i32 %.087 to i64
  %507 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %505, i64 %506
  %508 = load i8, i8* %507, align 1
  %509 = icmp eq i8 %508, 49
  %510 = select i1 %509, i32 -603767356, i32 476988031
  br label %.backedge

511:                                              ; preds = %13
  %.neg101 = add i32 %.089, 1
  %512 = sext i32 %.neg101 to i64
  %513 = add i32 %.087, 1
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %512, i64 %514
  %516 = load i8, i8* %515, align 1
  %517 = icmp eq i8 %516, 49
  %518 = select i1 %517, i32 -1662525055, i32 476988031
  br label %.backedge

519:                                              ; preds = %13
  %520 = add i32 %.089, 2
  %521 = sext i32 %520 to i64
  %522 = add i32 %.087, 1
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %521, i64 %523
  %525 = load i8, i8* %524, align 1
  %526 = icmp eq i8 %525, 49
  %527 = select i1 %526, i32 1891178434, i32 476988031
  br label %.backedge

528:                                              ; preds = %13
  %529 = load i32, i32* @x.7, align 4
  %530 = load i32, i32* @y.8, align 4
  %531 = add i32 %529, -1
  %532 = mul i32 %531, %529
  %533 = and i32 %532, 1
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %535, %534
  %537 = select i1 %536, i32 1899158938, i32 791888712
  br label %.backedge

538:                                              ; preds = %13
  %539 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  %540 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %539, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %541 = load i32, i32* @x.7, align 4
  %542 = load i32, i32* @y.8, align 4
  %543 = add i32 %541, -1
  %544 = mul i32 %543, %541
  %545 = and i32 %544, 1
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %547, %546
  %549 = select i1 %548, i32 504388754, i32 791888712
  br label %.backedge

550:                                              ; preds = %13
  br label %.backedge

551:                                              ; preds = %13
  %552 = sext i32 %.089 to i64
  %.neg = add i32 %.087, 1
  %553 = sext i32 %.neg to i64
  %554 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %552, i64 %553
  %555 = load i8, i8* %554, align 1
  %556 = icmp eq i8 %555, 49
  %557 = select i1 %556, i32 763409022, i32 -596615731
  br label %.backedge

558:                                              ; preds = %13
  %559 = add i32 %.089, 1
  %560 = sext i32 %559 to i64
  %561 = sext i32 %.087 to i64
  %562 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %560, i64 %561
  %563 = load i8, i8* %562, align 1
  %564 = icmp eq i8 %563, 49
  %565 = select i1 %564, i32 174994733, i32 -596615731
  br label %.backedge

566:                                              ; preds = %13
  %567 = load i32, i32* @x.7, align 4
  %568 = load i32, i32* @y.8, align 4
  %569 = add i32 %567, -1
  %570 = mul i32 %569, %567
  %571 = and i32 %570, 1
  %572 = icmp eq i32 %571, 0
  %573 = icmp slt i32 %568, 10
  %574 = or i1 %573, %572
  %575 = select i1 %574, i32 580989994, i32 2091283138
  br label %.backedge

576:                                              ; preds = %13
  %577 = add i32 %.089, 1
  %578 = sext i32 %577 to i64
  %579 = add i32 %.087, -1
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds [11 x [12 x i8]], [11 x [12 x i8]]* %10, i64 0, i64 %578, i64 %580
  %582 = load i8, i8* %581, align 1
  %583 = icmp eq i8 %582, 49
  store i1 %583, i1* %1, align 1
  %584 = load i32, i32* @x.7, align 4
  %585 = load i32, i32* @y.8, align 4
  %586 = add i32 %584, -1
  %587 = mul i32 %586, %584
  %588 = and i32 %587, 1
  %589 = icmp eq i32 %588, 0
  %590 = icmp slt i32 %585, 10
  %591 = or i1 %590, %589
  %592 = select i1 %591, i32 -1957238923, i32 2091283138
  br label %.backedge

593:                                              ; preds = %13
  %.0..0..0.86 = load volatile i1, i1* %1, align 1
  %594 = select i1 %.0..0..0.86, i32 -1987759391, i32 -596615731
  br label %.backedge

595:                                              ; preds = %13
  %596 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  %597 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %596, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

598:                                              ; preds = %13
  %599 = load i32, i32* @x.7, align 4
  %600 = load i32, i32* @y.8, align 4
  %601 = add i32 %599, -1
  %602 = mul i32 %601, %599
  %603 = and i32 %602, 1
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %605, %604
  %607 = select i1 %606, i32 1559419689, i32 1182807303
  br label %.backedge

608:                                              ; preds = %13
  %609 = load i32, i32* @x.7, align 4
  %610 = load i32, i32* @y.8, align 4
  %611 = add i32 %609, -1
  %612 = mul i32 %611, %609
  %613 = and i32 %612, 1
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %615, %614
  %617 = select i1 %616, i32 306923288, i32 1182807303
  br label %.backedge

618:                                              ; preds = %13
  br label %.backedge

619:                                              ; preds = %13
  br label %.backedge

620:                                              ; preds = %13
  %621 = load i32, i32* @x.7, align 4
  %622 = load i32, i32* @y.8, align 4
  %623 = add i32 %621, -1
  %624 = mul i32 %623, %621
  %625 = and i32 %624, 1
  %626 = icmp eq i32 %625, 0
  %627 = icmp slt i32 %622, 10
  %628 = or i1 %627, %626
  %629 = select i1 %628, i32 1130015575, i32 970531683
  br label %.backedge

630:                                              ; preds = %13
  %631 = load i32, i32* @x.7, align 4
  %632 = load i32, i32* @y.8, align 4
  %633 = add i32 %631, -1
  %634 = mul i32 %633, %631
  %635 = and i32 %634, 1
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %637, %636
  %639 = select i1 %638, i32 -618361693, i32 970531683
  br label %.backedge

640:                                              ; preds = %13
  br label %.backedge

641:                                              ; preds = %13
  %642 = load i32, i32* @x.7, align 4
  %643 = load i32, i32* @y.8, align 4
  %644 = add i32 %642, -1
  %645 = mul i32 %644, %642
  %646 = and i32 %645, 1
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %643, 10
  %649 = or i1 %648, %647
  %650 = select i1 %649, i32 1567105293, i32 -623018096
  br label %.backedge

651:                                              ; preds = %13
  %652 = load i32, i32* @x.7, align 4
  %653 = load i32, i32* @y.8, align 4
  %654 = add i32 %652, -1
  %655 = mul i32 %654, %652
  %656 = and i32 %655, 1
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %658, %657
  %660 = select i1 %659, i32 -391117550, i32 -623018096
  br label %.backedge

661:                                              ; preds = %13
  br label %.backedge

662:                                              ; preds = %13
  br label %.backedge

663:                                              ; preds = %13
  br label %.backedge

664:                                              ; preds = %13
  br label %.backedge

665:                                              ; preds = %13
  br label %.backedge

666:                                              ; preds = %13
  %667 = add i32 %.087, 1
  br label %.backedge

668:                                              ; preds = %13
  br label %.backedge

669:                                              ; preds = %13
  %670 = add i32 %.089, 1
  br label %.backedge

671:                                              ; preds = %13
  br label %.backedge

672:                                              ; preds = %13
  ret void

673:                                              ; preds = %13
  %674 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %11)
  %675 = bitcast %"class.std::basic_istream"* %674 to i8**
  %676 = load i8*, i8** %675, align 8
  %677 = getelementptr i8, i8* %676, i64 -24
  %678 = bitcast i8* %677 to i64*
  %679 = load i64, i64* %678, align 8
  %680 = bitcast %"class.std::basic_istream"* %674 to i8*
  %681 = getelementptr inbounds i8, i8* %680, i64 %679
  %682 = bitcast i8* %681 to %"class.std::basic_ios"*
  %683 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %682)
  br label %.backedge

684:                                              ; preds = %13
  br label %.backedge

685:                                              ; preds = %13
  br label %.backedge

686:                                              ; preds = %13
  br label %.backedge

687:                                              ; preds = %13
  br label %.backedge

688:                                              ; preds = %13
  %689 = add i32 %.091, 1
  br label %.backedge

690:                                              ; preds = %13
  %691 = add i32 %.093, 1
  br label %.backedge

692:                                              ; preds = %13
  br label %.backedge

693:                                              ; preds = %13
  br label %.backedge

694:                                              ; preds = %13
  br label %.backedge

695:                                              ; preds = %13
  br label %.backedge

696:                                              ; preds = %13
  %697 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %698 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %697, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

699:                                              ; preds = %13
  br label %.backedge

700:                                              ; preds = %13
  br label %.backedge

701:                                              ; preds = %13
  %702 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  %703 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %702, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

704:                                              ; preds = %13
  br label %.backedge

705:                                              ; preds = %13
  br label %.backedge

706:                                              ; preds = %13
  br label %.backedge

707:                                              ; preds = %13
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  tail call void @_Z5solvev()
  ret i32 0
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s782524241.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
