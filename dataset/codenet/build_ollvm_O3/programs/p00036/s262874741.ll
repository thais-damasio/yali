; ModuleID = 'build_ollvm/programs/p00036/s262874741.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s262874741.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZZ4mainE1m = private unnamed_addr constant [7 x i32] [i32 33, i32 1111, i32 15, i32 132, i32 63, i32 231, i32 36], align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s262874741.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca [8 x i32], align 16
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 0
  br label %6

6:                                                ; preds = %.backedge, %0
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i8 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i32 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.0 = phi i32 [ 633383157, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 633383157, label %7
    i32 -1766562055, label %17
    i32 -1814769440, label %37
    i32 1847022594, label %39
    i32 151678031, label %49
    i32 -1962451188, label %59
    i32 -213352080, label %60
    i32 620367301, label %70
    i32 -625197732, label %81
    i32 -1569422787, label %83
    i32 -481996485, label %88
    i32 -1228510549, label %90
    i32 -335929055, label %91
    i32 -1683459345, label %94
    i32 -2033595394, label %95
    i32 -59564419, label %98
    i32 -334368743, label %104
    i32 1687210444, label %114
    i32 -1627869489, label %124
    i32 633371004, label %125
    i32 988494078, label %135
    i32 -1965857008, label %149
    i32 -1956048123, label %150
    i32 -324307700, label %152
    i32 -1792026215, label %155
    i32 -705344329, label %157
    i32 1997870006, label %158
    i32 1618811935, label %159
    i32 -2056116958, label %162
    i32 -1809067473, label %172
    i32 406829783, label %191
    i32 1672280306, label %192
    i32 117235934, label %194
    i32 -1853478196, label %204
    i32 -1431992962, label %216
    i32 -1355162955, label %218
    i32 1163550574, label %219
    i32 -820827355, label %222
    i32 1344847390, label %227
    i32 -861413174, label %237
    i32 192782829, label %248
    i32 747774413, label %249
    i32 -1863488312, label %259
    i32 2074418747, label %269
    i32 518564161, label %270
    i32 148678890, label %280
    i32 1928922617, label %290
    i32 1011157304, label %291
    i32 765783847, label %292
    i32 1344504202, label %293
    i32 1006304806, label %296
    i32 731593741, label %301
    i32 -248496069, label %311
    i32 1060798376, label %326
    i32 -140709632, label %327
    i32 -307437585, label %337
    i32 -1898232954, label %347
    i32 -1880616245, label %348
    i32 -2122415770, label %358
    i32 -1277784205, label %369
    i32 -1977536652, label %370
    i32 1844139318, label %371
    i32 -898234414, label %374
    i32 -59747024, label %380
    i32 -556306581, label %390
    i32 -1479332473, label %404
    i32 580877311, label %405
    i32 -174845435, label %415
    i32 -1340660518, label %425
    i32 1321397261, label %426
    i32 2089876024, label %427
    i32 651021358, label %437
    i32 1108128665, label %447
    i32 -638331352, label %448
    i32 -1179736828, label %449
    i32 -405270383, label %460
    i32 -1206028301, label %461
    i32 843652617, label %462
    i32 -2029371435, label %465
    i32 488529236, label %470
    i32 2086357136, label %481
    i32 -1397334776, label %482
    i32 -1478900084, label %483
    i32 1465164286, label %484
    i32 -2035396477, label %485
    i32 -49592562, label %491
    i32 60420046, label %492
    i32 -557743685, label %494
    i32 1271248461, label %499
    i32 183767315, label %500
  ]

.backedge:                                        ; preds = %6, %500, %499, %494, %492, %491, %485, %484, %483, %482, %481, %470, %465, %462, %461, %460, %449, %447, %437, %427, %426, %425, %415, %405, %404, %390, %380, %374, %371, %370, %369, %358, %348, %347, %337, %327, %326, %311, %301, %296, %293, %292, %291, %290, %280, %270, %269, %259, %249, %248, %237, %227, %222, %219, %218, %216, %204, %194, %192, %191, %172, %162, %159, %158, %157, %155, %152, %150, %149, %135, %125, %124, %114, %104, %98, %95, %94, %91, %90, %88, %83, %81, %70, %60, %59, %49, %39, %37, %17, %7
  %.064.be = phi i32 [ %.064, %6 ], [ %.064, %500 ], [ %.064, %499 ], [ %.064, %494 ], [ %.064, %492 ], [ %.064, %491 ], [ %.064, %485 ], [ %.064, %484 ], [ %.064, %483 ], [ %.064, %482 ], [ %.064, %481 ], [ %.064, %470 ], [ %.064, %465 ], [ %.064, %462 ], [ %.064, %461 ], [ 0, %460 ], [ %.064, %449 ], [ %.064, %447 ], [ %.064, %437 ], [ %.064, %427 ], [ %.064, %426 ], [ %.064, %425 ], [ %.064, %415 ], [ %.064, %405 ], [ %.064, %404 ], [ %.064, %390 ], [ %.064, %380 ], [ %.064, %374 ], [ %.064, %371 ], [ %.064, %370 ], [ %.064, %369 ], [ %.064, %358 ], [ %.064, %348 ], [ %.064, %347 ], [ %.064, %337 ], [ %.064, %327 ], [ %.064, %326 ], [ %.064, %311 ], [ %.064, %301 ], [ %.064, %296 ], [ %.064, %293 ], [ %.064, %292 ], [ %.064, %291 ], [ %.064, %290 ], [ %.064, %280 ], [ %.064, %270 ], [ %.064, %269 ], [ %.064, %259 ], [ %.064, %249 ], [ %.064, %248 ], [ %.064, %237 ], [ %.064, %227 ], [ %.064, %222 ], [ %.064, %219 ], [ %.064, %218 ], [ %.064, %216 ], [ %.064, %204 ], [ %.064, %194 ], [ %.064, %192 ], [ %.064, %191 ], [ %.064, %172 ], [ %.064, %162 ], [ %.064, %159 ], [ %.064, %158 ], [ %.064, %157 ], [ %.064, %155 ], [ %.064, %152 ], [ %.064, %150 ], [ %.064, %149 ], [ %.064, %135 ], [ %.064, %125 ], [ %.064, %124 ], [ %.064, %114 ], [ %.064, %104 ], [ %.064, %98 ], [ %.064, %95 ], [ %.064, %94 ], [ %.064, %91 ], [ %.064, %90 ], [ %89, %88 ], [ %.064, %83 ], [ %.064, %81 ], [ %.064, %70 ], [ %.064, %60 ], [ %.064, %59 ], [ 0, %49 ], [ %.064, %39 ], [ %.064, %37 ], [ %.064, %17 ], [ %.064, %7 ]
  %.062.be = phi i32 [ %.062, %6 ], [ %.062, %500 ], [ %.062, %499 ], [ %.062, %494 ], [ %.062, %492 ], [ %.062, %491 ], [ %.062, %485 ], [ %.062, %484 ], [ %.062, %483 ], [ %.062, %482 ], [ %.062, %481 ], [ %.062, %470 ], [ %.062, %465 ], [ %.062, %462 ], [ %.062, %461 ], [ %.062, %460 ], [ %.062, %449 ], [ %.062, %447 ], [ %.062, %437 ], [ %.062, %427 ], [ %.062, %426 ], [ %.062, %425 ], [ %.062, %415 ], [ %.062, %405 ], [ %.062, %404 ], [ %.062, %390 ], [ %.062, %380 ], [ %.062, %374 ], [ %.062, %371 ], [ %.062, %370 ], [ %.062, %369 ], [ %.062, %358 ], [ %.062, %348 ], [ %.062, %347 ], [ %.062, %337 ], [ %.062, %327 ], [ %.062, %326 ], [ %.062, %311 ], [ %.062, %301 ], [ %.062, %296 ], [ %.062, %293 ], [ %.062, %292 ], [ %.062, %291 ], [ %.062, %290 ], [ %.062, %280 ], [ %.062, %270 ], [ %.062, %269 ], [ %.062, %259 ], [ %.062, %249 ], [ %.062, %248 ], [ %.062, %237 ], [ %.062, %227 ], [ %.062, %222 ], [ %.062, %219 ], [ %.062, %218 ], [ %.062, %216 ], [ %.062, %204 ], [ %.062, %194 ], [ %.062, %192 ], [ %.062, %191 ], [ %.062, %172 ], [ %.062, %162 ], [ %.062, %159 ], [ %.062, %158 ], [ %.062, %157 ], [ %156, %155 ], [ %.062, %152 ], [ %.062, %150 ], [ %.062, %149 ], [ %.062, %135 ], [ %.062, %125 ], [ %.062, %124 ], [ %.062, %114 ], [ %.062, %104 ], [ %.062, %98 ], [ %.062, %95 ], [ %.062, %94 ], [ %.062, %91 ], [ 0, %90 ], [ %.062, %88 ], [ %.062, %83 ], [ %.062, %81 ], [ %.062, %70 ], [ %.062, %60 ], [ %.062, %59 ], [ %.062, %49 ], [ %.062, %39 ], [ %.062, %37 ], [ %.062, %17 ], [ %.062, %7 ]
  %.060.be = phi i32 [ %.060, %6 ], [ %.060, %500 ], [ %.060, %499 ], [ %.060, %494 ], [ %.060, %492 ], [ %.060, %491 ], [ %.060, %485 ], [ %.060, %484 ], [ %.060, %483 ], [ %.060, %482 ], [ %.060, %481 ], [ %.060, %470 ], [ %.060, %465 ], [ %464, %462 ], [ %.060, %461 ], [ %.060, %460 ], [ %.060, %449 ], [ %.060, %447 ], [ %.060, %437 ], [ %.060, %427 ], [ %.060, %426 ], [ %.060, %425 ], [ %.060, %415 ], [ %.060, %405 ], [ %.060, %404 ], [ %.060, %390 ], [ %.060, %380 ], [ %.060, %374 ], [ %.060, %371 ], [ %.060, %370 ], [ %.060, %369 ], [ %.060, %358 ], [ %.060, %348 ], [ %.060, %347 ], [ %.060, %337 ], [ %.060, %327 ], [ %.060, %326 ], [ %.060, %311 ], [ %.060, %301 ], [ %.060, %296 ], [ %.060, %293 ], [ %.060, %292 ], [ %.060, %291 ], [ %.060, %290 ], [ %.060, %280 ], [ %.060, %270 ], [ %.060, %269 ], [ %.060, %259 ], [ %.060, %249 ], [ %.060, %248 ], [ %.060, %237 ], [ %.060, %227 ], [ %.060, %222 ], [ %.060, %219 ], [ %.060, %218 ], [ %.060, %216 ], [ %.060, %204 ], [ %.060, %194 ], [ %.060, %192 ], [ %.060, %191 ], [ %.060, %172 ], [ %.060, %162 ], [ %.060, %159 ], [ %.060, %158 ], [ %.060, %157 ], [ %.060, %155 ], [ %.060, %152 ], [ %.060, %150 ], [ %.060, %149 ], [ %.060, %135 ], [ %.060, %125 ], [ %.060, %124 ], [ %.neg70, %114 ], [ %.060, %104 ], [ %.060, %98 ], [ %.060, %95 ], [ 0, %94 ], [ %.060, %91 ], [ %.060, %90 ], [ %.060, %88 ], [ %.060, %83 ], [ %.060, %81 ], [ %.060, %70 ], [ %.060, %60 ], [ %.060, %59 ], [ %.060, %49 ], [ %.060, %39 ], [ %.060, %37 ], [ %.060, %17 ], [ %.060, %7 ]
  %.058.be = phi i32 [ %.058, %6 ], [ %.058, %500 ], [ %.058, %499 ], [ %.058, %494 ], [ %.058, %492 ], [ %.058, %491 ], [ %.058, %485 ], [ %.058, %484 ], [ %.058, %483 ], [ %.058, %482 ], [ %.058, %481 ], [ %.058, %470 ], [ %.058, %465 ], [ %.058, %462 ], [ %.058, %461 ], [ %.058, %460 ], [ %.058, %449 ], [ %.058, %447 ], [ %.058, %437 ], [ %.058, %427 ], [ %.058, %426 ], [ %.058, %425 ], [ %.058, %415 ], [ %.058, %405 ], [ %.058, %404 ], [ %.058, %390 ], [ %.058, %380 ], [ %.058, %374 ], [ %.058, %371 ], [ %.058, %370 ], [ %.058, %369 ], [ %.058, %358 ], [ %.058, %348 ], [ %.058, %347 ], [ %.058, %337 ], [ %.058, %327 ], [ %.058, %326 ], [ %.058, %311 ], [ %.058, %301 ], [ %.058, %296 ], [ %.058, %293 ], [ %.058, %292 ], [ %.058, %291 ], [ %.058, %290 ], [ %.058, %280 ], [ %.058, %270 ], [ %.058, %269 ], [ %.058, %259 ], [ %.058, %249 ], [ %.058, %248 ], [ %.058, %237 ], [ %.058, %227 ], [ %.058, %222 ], [ %.058, %219 ], [ %.058, %218 ], [ %.058, %216 ], [ %.058, %204 ], [ %.058, %194 ], [ %.058, %192 ], [ %.058, %191 ], [ %.058, %172 ], [ %.058, %162 ], [ %.058, %159 ], [ %.058, %158 ], [ %.058, %157 ], [ %.058, %155 ], [ %.058, %152 ], [ %151, %150 ], [ %.058, %149 ], [ %.058, %135 ], [ %.058, %125 ], [ %.058, %124 ], [ %.058, %114 ], [ %.058, %104 ], [ %.058, %98 ], [ %.058, %95 ], [ 0, %94 ], [ %.058, %91 ], [ %.058, %90 ], [ %.058, %88 ], [ %.058, %83 ], [ %.058, %81 ], [ %.058, %70 ], [ %.058, %60 ], [ %.058, %59 ], [ %.058, %49 ], [ %.058, %39 ], [ %.058, %37 ], [ %.058, %17 ], [ %.058, %7 ]
  %.056.be = phi i8 [ %.056, %6 ], [ %.056, %500 ], [ %.056, %499 ], [ %.056, %494 ], [ %.056, %492 ], [ %.056, %491 ], [ %.056, %485 ], [ %.056, %484 ], [ %.056, %483 ], [ %.056, %482 ], [ %.056, %481 ], [ %480, %470 ], [ %.056, %465 ], [ %.056, %462 ], [ %.056, %461 ], [ %.056, %460 ], [ %.056, %449 ], [ %.056, %447 ], [ %.056, %437 ], [ %.056, %427 ], [ %.056, %426 ], [ %.056, %425 ], [ %.056, %415 ], [ %.056, %405 ], [ %.056, %404 ], [ %.056, %390 ], [ %.056, %380 ], [ %.056, %374 ], [ %.056, %371 ], [ %.056, %370 ], [ %.056, %369 ], [ %.056, %358 ], [ %.056, %348 ], [ %.056, %347 ], [ %.056, %337 ], [ %.056, %327 ], [ %.056, %326 ], [ %.056, %311 ], [ %.056, %301 ], [ %.056, %296 ], [ %.056, %293 ], [ %.056, %292 ], [ %.056, %291 ], [ %.056, %290 ], [ %.056, %280 ], [ %.056, %270 ], [ %.056, %269 ], [ %.056, %259 ], [ %.056, %249 ], [ %.056, %248 ], [ %.056, %237 ], [ %.056, %227 ], [ %.056, %222 ], [ %.056, %219 ], [ %.056, %218 ], [ %.056, %216 ], [ %.056, %204 ], [ %.056, %194 ], [ %.056, %192 ], [ %.056, %191 ], [ %181, %172 ], [ %.056, %162 ], [ %.056, %159 ], [ 0, %158 ], [ %.056, %157 ], [ %.056, %155 ], [ %.056, %152 ], [ %.056, %150 ], [ %.056, %149 ], [ %.056, %135 ], [ %.056, %125 ], [ %.056, %124 ], [ %.056, %114 ], [ %.056, %104 ], [ %.056, %98 ], [ %.056, %95 ], [ %.056, %94 ], [ %.056, %91 ], [ %.056, %90 ], [ %.056, %88 ], [ %.056, %83 ], [ %.056, %81 ], [ %.056, %70 ], [ %.056, %60 ], [ %.056, %59 ], [ %.056, %49 ], [ %.056, %39 ], [ %.056, %37 ], [ %.056, %17 ], [ %.056, %7 ]
  %.054.be = phi i32 [ %.054, %6 ], [ %.054, %500 ], [ %.054, %499 ], [ %.054, %494 ], [ %.054, %492 ], [ %.054, %491 ], [ %.054, %485 ], [ %.054, %484 ], [ %.054, %483 ], [ %.054, %482 ], [ %.054, %481 ], [ %.054, %470 ], [ %.054, %465 ], [ %.054, %462 ], [ %.054, %461 ], [ %.054, %460 ], [ %.054, %449 ], [ %.054, %447 ], [ %.054, %437 ], [ %.054, %427 ], [ %.054, %426 ], [ %.054, %425 ], [ %.054, %415 ], [ %.054, %405 ], [ %.054, %404 ], [ %.054, %390 ], [ %.054, %380 ], [ %.054, %374 ], [ %.054, %371 ], [ %.054, %370 ], [ %.054, %369 ], [ %.054, %358 ], [ %.054, %348 ], [ %.054, %347 ], [ %.054, %337 ], [ %.054, %327 ], [ %.054, %326 ], [ %.054, %311 ], [ %.054, %301 ], [ %.054, %296 ], [ %.054, %293 ], [ %.054, %292 ], [ %.054, %291 ], [ %.054, %290 ], [ %.054, %280 ], [ %.054, %270 ], [ %.054, %269 ], [ %.054, %259 ], [ %.054, %249 ], [ %.054, %248 ], [ %.054, %237 ], [ %.054, %227 ], [ %.054, %222 ], [ %.054, %219 ], [ %.054, %218 ], [ %.054, %216 ], [ %.054, %204 ], [ %.054, %194 ], [ %193, %192 ], [ %.054, %191 ], [ %.054, %172 ], [ %.054, %162 ], [ %.054, %159 ], [ 0, %158 ], [ %.054, %157 ], [ %.054, %155 ], [ %.054, %152 ], [ %.054, %150 ], [ %.054, %149 ], [ %.054, %135 ], [ %.054, %125 ], [ %.054, %124 ], [ %.054, %114 ], [ %.054, %104 ], [ %.054, %98 ], [ %.054, %95 ], [ %.054, %94 ], [ %.054, %91 ], [ %.054, %90 ], [ %.054, %88 ], [ %.054, %83 ], [ %.054, %81 ], [ %.054, %70 ], [ %.054, %60 ], [ %.054, %59 ], [ %.054, %49 ], [ %.054, %39 ], [ %.054, %37 ], [ %.054, %17 ], [ %.054, %7 ]
  %.052.be = phi i32 [ %.052, %6 ], [ %.052, %500 ], [ %.052, %499 ], [ %.052, %494 ], [ %.052, %492 ], [ %.052, %491 ], [ %.052, %485 ], [ %.052, %484 ], [ %.052, %483 ], [ %.neg, %482 ], [ %.052, %481 ], [ %.052, %470 ], [ %.052, %465 ], [ %.052, %462 ], [ %.052, %461 ], [ %.052, %460 ], [ %.052, %449 ], [ %.052, %447 ], [ %.052, %437 ], [ %.052, %427 ], [ %.052, %426 ], [ %.052, %425 ], [ %.052, %415 ], [ %.052, %405 ], [ %.052, %404 ], [ %.052, %390 ], [ %.052, %380 ], [ %.052, %374 ], [ %.052, %371 ], [ %.052, %370 ], [ %.052, %369 ], [ %.052, %358 ], [ %.052, %348 ], [ %.052, %347 ], [ %.052, %337 ], [ %.052, %327 ], [ %.052, %326 ], [ %.052, %311 ], [ %.052, %301 ], [ %.052, %296 ], [ %.052, %293 ], [ %.052, %292 ], [ %.052, %291 ], [ %.052, %290 ], [ %.052, %280 ], [ %.052, %270 ], [ %.052, %269 ], [ %.052, %259 ], [ %.052, %249 ], [ %.052, %248 ], [ %238, %237 ], [ %.052, %227 ], [ %.052, %222 ], [ %.052, %219 ], [ 0, %218 ], [ %.052, %216 ], [ %.052, %204 ], [ %.052, %194 ], [ %.052, %192 ], [ %.052, %191 ], [ %.052, %172 ], [ %.052, %162 ], [ %.052, %159 ], [ %.052, %158 ], [ %.052, %157 ], [ %.052, %155 ], [ %.052, %152 ], [ %.052, %150 ], [ %.052, %149 ], [ %.052, %135 ], [ %.052, %125 ], [ %.052, %124 ], [ %.052, %114 ], [ %.052, %104 ], [ %.052, %98 ], [ %.052, %95 ], [ %.052, %94 ], [ %.052, %91 ], [ %.052, %90 ], [ %.052, %88 ], [ %.052, %83 ], [ %.052, %81 ], [ %.052, %70 ], [ %.052, %60 ], [ %.052, %59 ], [ %.052, %49 ], [ %.052, %39 ], [ %.052, %37 ], [ %.052, %17 ], [ %.052, %7 ]
  %.050.be = phi i32 [ %.050, %6 ], [ %.050, %500 ], [ %.050, %499 ], [ %.050, %494 ], [ %.050, %492 ], [ %.050, %491 ], [ %490, %485 ], [ %.050, %484 ], [ %.050, %483 ], [ %.050, %482 ], [ %.050, %481 ], [ %.050, %470 ], [ %.050, %465 ], [ %.050, %462 ], [ %.050, %461 ], [ %.050, %460 ], [ %.050, %449 ], [ %.050, %447 ], [ %.050, %437 ], [ %.050, %427 ], [ %.050, %426 ], [ %.050, %425 ], [ %.050, %415 ], [ %.050, %405 ], [ %.050, %404 ], [ %.050, %390 ], [ %.050, %380 ], [ %.050, %374 ], [ %.050, %371 ], [ %.050, %370 ], [ %.050, %369 ], [ %.050, %358 ], [ %.050, %348 ], [ %.050, %347 ], [ %.050, %337 ], [ %.050, %327 ], [ %.050, %326 ], [ %316, %311 ], [ %.050, %301 ], [ %.050, %296 ], [ %.050, %293 ], [ 0, %292 ], [ %.050, %291 ], [ %.050, %290 ], [ %.050, %280 ], [ %.050, %270 ], [ %.050, %269 ], [ %.050, %259 ], [ %.050, %249 ], [ %.050, %248 ], [ %.050, %237 ], [ %.050, %227 ], [ %.050, %222 ], [ %.050, %219 ], [ %.050, %218 ], [ %.050, %216 ], [ %.050, %204 ], [ %.050, %194 ], [ %.050, %192 ], [ %.050, %191 ], [ %.050, %172 ], [ %.050, %162 ], [ %.050, %159 ], [ %.050, %158 ], [ %.050, %157 ], [ %.050, %155 ], [ %.050, %152 ], [ %.050, %150 ], [ %.050, %149 ], [ %.050, %135 ], [ %.050, %125 ], [ %.050, %124 ], [ %.050, %114 ], [ %.050, %104 ], [ %.050, %98 ], [ %.050, %95 ], [ %.050, %94 ], [ %.050, %91 ], [ %.050, %90 ], [ %.050, %88 ], [ %.050, %83 ], [ %.050, %81 ], [ %.050, %70 ], [ %.050, %60 ], [ %.050, %59 ], [ %.050, %49 ], [ %.050, %39 ], [ %.050, %37 ], [ %.050, %17 ], [ %.050, %7 ]
  %.048.be = phi i32 [ %.048, %6 ], [ %.048, %500 ], [ %.048, %499 ], [ %.048, %494 ], [ %493, %492 ], [ %.048, %491 ], [ %.048, %485 ], [ %.048, %484 ], [ %.048, %483 ], [ %.048, %482 ], [ %.048, %481 ], [ %.048, %470 ], [ %.048, %465 ], [ %.048, %462 ], [ %.048, %461 ], [ %.048, %460 ], [ %.048, %449 ], [ %.048, %447 ], [ %.048, %437 ], [ %.048, %427 ], [ %.048, %426 ], [ %.048, %425 ], [ %.048, %415 ], [ %.048, %405 ], [ %.048, %404 ], [ %.048, %390 ], [ %.048, %380 ], [ %.048, %374 ], [ %.048, %371 ], [ %.048, %370 ], [ %.048, %369 ], [ %359, %358 ], [ %.048, %348 ], [ %.048, %347 ], [ %.048, %337 ], [ %.048, %327 ], [ %.048, %326 ], [ %.048, %311 ], [ %.048, %301 ], [ %.048, %296 ], [ %.048, %293 ], [ 0, %292 ], [ %.048, %291 ], [ %.048, %290 ], [ %.048, %280 ], [ %.048, %270 ], [ %.048, %269 ], [ %.048, %259 ], [ %.048, %249 ], [ %.048, %248 ], [ %.048, %237 ], [ %.048, %227 ], [ %.048, %222 ], [ %.048, %219 ], [ %.048, %218 ], [ %.048, %216 ], [ %.048, %204 ], [ %.048, %194 ], [ %.048, %192 ], [ %.048, %191 ], [ %.048, %172 ], [ %.048, %162 ], [ %.048, %159 ], [ %.048, %158 ], [ %.048, %157 ], [ %.048, %155 ], [ %.048, %152 ], [ %.048, %150 ], [ %.048, %149 ], [ %.048, %135 ], [ %.048, %125 ], [ %.048, %124 ], [ %.048, %114 ], [ %.048, %104 ], [ %.048, %98 ], [ %.048, %95 ], [ %.048, %94 ], [ %.048, %91 ], [ %.048, %90 ], [ %.048, %88 ], [ %.048, %83 ], [ %.048, %81 ], [ %.048, %70 ], [ %.048, %60 ], [ %.048, %59 ], [ %.048, %49 ], [ %.048, %39 ], [ %.048, %37 ], [ %.048, %17 ], [ %.048, %7 ]
  %.046.be = phi i32 [ %.046, %6 ], [ %.046, %500 ], [ %.046, %499 ], [ %.046, %494 ], [ %.046, %492 ], [ %.046, %491 ], [ %.046, %485 ], [ %.046, %484 ], [ %.046, %483 ], [ %.046, %482 ], [ %.046, %481 ], [ %.046, %470 ], [ %.046, %465 ], [ %.046, %462 ], [ %.046, %461 ], [ %.046, %460 ], [ %.046, %449 ], [ %.046, %447 ], [ %.046, %437 ], [ %.046, %427 ], [ %.neg66, %426 ], [ %.046, %425 ], [ %.046, %415 ], [ %.046, %405 ], [ %.046, %404 ], [ %.046, %390 ], [ %.046, %380 ], [ %.046, %374 ], [ %.046, %371 ], [ 0, %370 ], [ %.046, %369 ], [ %.046, %358 ], [ %.046, %348 ], [ %.046, %347 ], [ %.046, %337 ], [ %.046, %327 ], [ %.046, %326 ], [ %.046, %311 ], [ %.046, %301 ], [ %.046, %296 ], [ %.046, %293 ], [ %.046, %292 ], [ %.046, %291 ], [ %.046, %290 ], [ %.046, %280 ], [ %.046, %270 ], [ %.046, %269 ], [ %.046, %259 ], [ %.046, %249 ], [ %.046, %248 ], [ %.046, %237 ], [ %.046, %227 ], [ %.046, %222 ], [ %.046, %219 ], [ %.046, %218 ], [ %.046, %216 ], [ %.046, %204 ], [ %.046, %194 ], [ %.046, %192 ], [ %.046, %191 ], [ %.046, %172 ], [ %.046, %162 ], [ %.046, %159 ], [ %.046, %158 ], [ %.046, %157 ], [ %.046, %155 ], [ %.046, %152 ], [ %.046, %150 ], [ %.046, %149 ], [ %.046, %135 ], [ %.046, %125 ], [ %.046, %124 ], [ %.046, %114 ], [ %.046, %104 ], [ %.046, %98 ], [ %.046, %95 ], [ %.046, %94 ], [ %.046, %91 ], [ %.046, %90 ], [ %.046, %88 ], [ %.046, %83 ], [ %.046, %81 ], [ %.046, %70 ], [ %.046, %60 ], [ %.046, %59 ], [ %.046, %49 ], [ %.046, %39 ], [ %.046, %37 ], [ %.046, %17 ], [ %.046, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ 651021358, %500 ], [ -174845435, %499 ], [ -556306581, %494 ], [ -2122415770, %492 ], [ -307437585, %491 ], [ -248496069, %485 ], [ 148678890, %484 ], [ -1863488312, %483 ], [ -861413174, %482 ], [ -1853478196, %481 ], [ -1809067473, %470 ], [ 988494078, %465 ], [ 1687210444, %462 ], [ 620367301, %461 ], [ 151678031, %460 ], [ -1766562055, %449 ], [ 633383157, %447 ], [ %446, %437 ], [ %436, %427 ], [ 1844139318, %426 ], [ 1321397261, %425 ], [ %424, %415 ], [ %414, %405 ], [ 580877311, %404 ], [ %403, %390 ], [ %389, %380 ], [ %379, %374 ], [ %373, %371 ], [ 1844139318, %370 ], [ 1344504202, %369 ], [ %368, %358 ], [ %357, %348 ], [ -1880616245, %347 ], [ %346, %337 ], [ %336, %327 ], [ -140709632, %326 ], [ %325, %311 ], [ %310, %301 ], [ %300, %296 ], [ %295, %293 ], [ 1344504202, %292 ], [ 1997870006, %291 ], [ 765783847, %290 ], [ %289, %280 ], [ %279, %270 ], [ 1011157304, %269 ], [ %268, %259 ], [ %258, %249 ], [ 1163550574, %248 ], [ %247, %237 ], [ %236, %227 ], [ 1344847390, %222 ], [ %221, %219 ], [ 1163550574, %218 ], [ %217, %216 ], [ %215, %204 ], [ %203, %194 ], [ 1618811935, %192 ], [ 1672280306, %191 ], [ %190, %172 ], [ %171, %162 ], [ %161, %159 ], [ 1618811935, %158 ], [ 1997870006, %157 ], [ -335929055, %155 ], [ -1792026215, %152 ], [ -2033595394, %150 ], [ -1956048123, %149 ], [ %148, %135 ], [ %134, %125 ], [ 633371004, %124 ], [ %123, %114 ], [ %113, %104 ], [ %103, %98 ], [ %97, %95 ], [ -2033595394, %94 ], [ %93, %91 ], [ -335929055, %90 ], [ -213352080, %88 ], [ -481996485, %83 ], [ %82, %81 ], [ %80, %70 ], [ %69, %60 ], [ -213352080, %59 ], [ %58, %49 ], [ %48, %39 ], [ %38, %37 ], [ %36, %17 ], [ %16, %7 ]
  br label %6

7:                                                ; preds = %6
  %8 = load i32, i32* @x.1, align 4
  %9 = load i32, i32* @y.2, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -1766562055, i32 -1179736828
  br label %.backedge

17:                                               ; preds = %6
  %18 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %19 = bitcast %"class.std::basic_istream"* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::basic_istream"* %18 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = bitcast i8* %25 to %"class.std::basic_ios"*
  %27 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %26)
  store i1 %27, i1* %3, align 1
  %28 = load i32, i32* @x.1, align 4
  %29 = load i32, i32* @y.2, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -1814769440, i32 -1179736828
  br label %.backedge

37:                                               ; preds = %6
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %38 = select i1 %.0..0..0., i32 1847022594, i32 -638331352
  br label %.backedge

39:                                               ; preds = %6
  %40 = load i32, i32* @x.1, align 4
  %41 = load i32, i32* @y.2, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 151678031, i32 -405270383
  br label %.backedge

49:                                               ; preds = %6
  %50 = load i32, i32* @x.1, align 4
  %51 = load i32, i32* @y.2, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -1962451188, i32 -405270383
  br label %.backedge

59:                                               ; preds = %6
  br label %.backedge

60:                                               ; preds = %6
  %61 = load i32, i32* @x.1, align 4
  %62 = load i32, i32* @y.2, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 620367301, i32 -1206028301
  br label %.backedge

70:                                               ; preds = %6
  %71 = icmp slt i32 %.064, 7
  store i1 %71, i1* %2, align 1
  %72 = load i32, i32* @x.1, align 4
  %73 = load i32, i32* @y.2, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 -625197732, i32 -1206028301
  br label %.backedge

81:                                               ; preds = %6
  %.0..0..0.44 = load volatile i1, i1* %2, align 1
  %82 = select i1 %.0..0..0.44, i32 -1569422787, i32 -1228510549
  br label %.backedge

83:                                               ; preds = %6
  %84 = add i32 %.064, 1
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %85
  %87 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %86)
  br label %.backedge

88:                                               ; preds = %6
  %89 = add i32 %.064, 1
  br label %.backedge

90:                                               ; preds = %6
  br label %.backedge

91:                                               ; preds = %6
  %92 = icmp slt i32 %.062, 8
  %93 = select i1 %92, i32 -1683459345, i32 -705344329
  br label %.backedge

94:                                               ; preds = %6
  br label %.backedge

95:                                               ; preds = %6
  %96 = icmp slt i32 %.058, 10
  %97 = select i1 %96, i32 -59564419, i32 -324307700
  br label %.backedge

98:                                               ; preds = %6
  %99 = sext i32 %.062 to i64
  %100 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = srem i32 %101, 10
  %.not71 = icmp eq i32 %102, 0
  %103 = select i1 %.not71, i32 633371004, i32 -334368743
  br label %.backedge

104:                                              ; preds = %6
  %105 = load i32, i32* @x.1, align 4
  %106 = load i32, i32* @y.2, align 4
  %107 = add i32 %105, -1
  %108 = mul i32 %107, %105
  %109 = and i32 %108, 1
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %111, %110
  %113 = select i1 %112, i32 1687210444, i32 843652617
  br label %.backedge

114:                                              ; preds = %6
  %.neg69.neg = shl nuw i32 1, %.058
  %.neg70 = add i32 %.neg69.neg, %.060
  %115 = load i32, i32* @x.1, align 4
  %116 = load i32, i32* @y.2, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 -1627869489, i32 843652617
  br label %.backedge

124:                                              ; preds = %6
  br label %.backedge

125:                                              ; preds = %6
  %126 = load i32, i32* @x.1, align 4
  %127 = load i32, i32* @y.2, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 988494078, i32 -2029371435
  br label %.backedge

135:                                              ; preds = %6
  %136 = sext i32 %.062 to i64
  %137 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = sdiv i32 %138, 10
  store i32 %139, i32* %137, align 4
  %140 = load i32, i32* @x.1, align 4
  %141 = load i32, i32* @y.2, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 -1965857008, i32 -2029371435
  br label %.backedge

149:                                              ; preds = %6
  br label %.backedge

150:                                              ; preds = %6
  %151 = add i32 %.058, 1
  br label %.backedge

152:                                              ; preds = %6
  %153 = sext i32 %.062 to i64
  %154 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %153
  store i32 %.060, i32* %154, align 4
  br label %.backedge

155:                                              ; preds = %6
  %156 = add i32 %.062, 1
  br label %.backedge

157:                                              ; preds = %6
  br label %.backedge

158:                                              ; preds = %6
  br label %.backedge

159:                                              ; preds = %6
  %160 = icmp slt i32 %.054, 8
  %161 = select i1 %160, i32 -2056116958, i32 117235934
  br label %.backedge

162:                                              ; preds = %6
  %163 = load i32, i32* @x.1, align 4
  %164 = load i32, i32* @y.2, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -1809067473, i32 488529236
  br label %.backedge

172:                                              ; preds = %6
  %173 = sext i32 %.054 to i64
  %174 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, 1
  %177 = and i8 %.056, 1
  %178 = zext i8 %177 to i32
  %179 = xor i32 %176, %178
  %.demorgan = and i32 %175, %178
  %180 = or i32 %179, %.demorgan
  %181 = trunc i32 %180 to i8
  %182 = load i32, i32* @x.1, align 4
  %183 = load i32, i32* @y.2, align 4
  %184 = add i32 %182, -1
  %185 = mul i32 %184, %182
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %188, %187
  %190 = select i1 %189, i32 406829783, i32 488529236
  br label %.backedge

191:                                              ; preds = %6
  br label %.backedge

192:                                              ; preds = %6
  %193 = add i32 %.054, 1
  br label %.backedge

194:                                              ; preds = %6
  %195 = load i32, i32* @x.1, align 4
  %196 = load i32, i32* @y.2, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 -1853478196, i32 2086357136
  br label %.backedge

204:                                              ; preds = %6
  %205 = and i8 %.056, 1
  %206 = icmp ne i8 %205, 0
  store i1 %206, i1* %1, align 1
  %207 = load i32, i32* @x.1, align 4
  %208 = load i32, i32* @y.2, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1431992962, i32 2086357136
  br label %.backedge

216:                                              ; preds = %6
  %.0..0..0.45 = load volatile i1, i1* %1, align 1
  %217 = select i1 %.0..0..0.45, i32 518564161, i32 -1355162955
  br label %.backedge

218:                                              ; preds = %6
  br label %.backedge

219:                                              ; preds = %6
  %220 = icmp slt i32 %.052, 8
  %221 = select i1 %220, i32 -820827355, i32 747774413
  br label %.backedge

222:                                              ; preds = %6
  %223 = sext i32 %.052 to i64
  %224 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = ashr i32 %225, 1
  store i32 %226, i32* %224, align 4
  br label %.backedge

227:                                              ; preds = %6
  %228 = load i32, i32* @x.1, align 4
  %229 = load i32, i32* @y.2, align 4
  %230 = add i32 %228, -1
  %231 = mul i32 %230, %228
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %234, %233
  %236 = select i1 %235, i32 -861413174, i32 -1397334776
  br label %.backedge

237:                                              ; preds = %6
  %238 = add i32 %.052, 1
  %239 = load i32, i32* @x.1, align 4
  %240 = load i32, i32* @y.2, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 192782829, i32 -1397334776
  br label %.backedge

248:                                              ; preds = %6
  br label %.backedge

249:                                              ; preds = %6
  %250 = load i32, i32* @x.1, align 4
  %251 = load i32, i32* @y.2, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 -1863488312, i32 -1478900084
  br label %.backedge

259:                                              ; preds = %6
  %260 = load i32, i32* @x.1, align 4
  %261 = load i32, i32* @y.2, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 2074418747, i32 -1478900084
  br label %.backedge

269:                                              ; preds = %6
  br label %.backedge

270:                                              ; preds = %6
  %271 = load i32, i32* @x.1, align 4
  %272 = load i32, i32* @y.2, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 148678890, i32 1465164286
  br label %.backedge

280:                                              ; preds = %6
  %281 = load i32, i32* @x.1, align 4
  %282 = load i32, i32* @y.2, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 1928922617, i32 1465164286
  br label %.backedge

290:                                              ; preds = %6
  br label %.backedge

291:                                              ; preds = %6
  br label %.backedge

292:                                              ; preds = %6
  br label %.backedge

293:                                              ; preds = %6
  %294 = icmp slt i32 %.048, 8
  %295 = select i1 %294, i32 1006304806, i32 -1977536652
  br label %.backedge

296:                                              ; preds = %6
  %297 = sext i32 %.048 to i64
  %298 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %297
  %299 = load i32, i32* %298, align 4
  %.not = icmp eq i32 %299, 0
  %300 = select i1 %.not, i32 -140709632, i32 731593741
  br label %.backedge

301:                                              ; preds = %6
  %302 = load i32, i32* @x.1, align 4
  %303 = load i32, i32* @y.2, align 4
  %304 = add i32 %302, -1
  %305 = mul i32 %304, %302
  %306 = and i32 %305, 1
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %308, %307
  %310 = select i1 %309, i32 -248496069, i32 -2035396477
  br label %.backedge

311:                                              ; preds = %6
  %312 = mul nsw i32 %.050, 10
  %313 = sext i32 %.048 to i64
  %314 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %313
  %315 = load i32, i32* %314, align 4
  %316 = add i32 %315, %312
  %317 = load i32, i32* @x.1, align 4
  %318 = load i32, i32* @y.2, align 4
  %319 = add i32 %317, -1
  %320 = mul i32 %319, %317
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %323, %322
  %325 = select i1 %324, i32 1060798376, i32 -2035396477
  br label %.backedge

326:                                              ; preds = %6
  br label %.backedge

327:                                              ; preds = %6
  %328 = load i32, i32* @x.1, align 4
  %329 = load i32, i32* @y.2, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 -307437585, i32 -49592562
  br label %.backedge

337:                                              ; preds = %6
  %338 = load i32, i32* @x.1, align 4
  %339 = load i32, i32* @y.2, align 4
  %340 = add i32 %338, -1
  %341 = mul i32 %340, %338
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %344, %343
  %346 = select i1 %345, i32 -1898232954, i32 -49592562
  br label %.backedge

347:                                              ; preds = %6
  br label %.backedge

348:                                              ; preds = %6
  %349 = load i32, i32* @x.1, align 4
  %350 = load i32, i32* @y.2, align 4
  %351 = add i32 %349, -1
  %352 = mul i32 %351, %349
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %355, %354
  %357 = select i1 %356, i32 -2122415770, i32 60420046
  br label %.backedge

358:                                              ; preds = %6
  %359 = add i32 %.048, 1
  %360 = load i32, i32* @x.1, align 4
  %361 = load i32, i32* @y.2, align 4
  %362 = add i32 %360, -1
  %363 = mul i32 %362, %360
  %364 = and i32 %363, 1
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %366, %365
  %368 = select i1 %367, i32 -1277784205, i32 60420046
  br label %.backedge

369:                                              ; preds = %6
  br label %.backedge

370:                                              ; preds = %6
  br label %.backedge

371:                                              ; preds = %6
  %372 = icmp slt i32 %.046, 7
  %373 = select i1 %372, i32 -898234414, i32 2089876024
  br label %.backedge

374:                                              ; preds = %6
  %375 = sext i32 %.046 to i64
  %376 = getelementptr inbounds [7 x i32], [7 x i32]* @_ZZ4mainE1m, i64 0, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = icmp eq i32 %377, %.050
  %379 = select i1 %378, i32 -59747024, i32 580877311
  br label %.backedge

380:                                              ; preds = %6
  %381 = load i32, i32* @x.1, align 4
  %382 = load i32, i32* @y.2, align 4
  %383 = add i32 %381, -1
  %384 = mul i32 %383, %381
  %385 = and i32 %384, 1
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %387, %386
  %389 = select i1 %388, i32 -556306581, i32 -557743685
  br label %.backedge

390:                                              ; preds = %6
  %391 = trunc i32 %.046 to i8
  %392 = add i8 %391, 65
  %393 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %392)
  %394 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %393, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %395 = load i32, i32* @x.1, align 4
  %396 = load i32, i32* @y.2, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 -1479332473, i32 -557743685
  br label %.backedge

404:                                              ; preds = %6
  br label %.backedge

405:                                              ; preds = %6
  %406 = load i32, i32* @x.1, align 4
  %407 = load i32, i32* @y.2, align 4
  %408 = add i32 %406, -1
  %409 = mul i32 %408, %406
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %412, %411
  %414 = select i1 %413, i32 -174845435, i32 1271248461
  br label %.backedge

415:                                              ; preds = %6
  %416 = load i32, i32* @x.1, align 4
  %417 = load i32, i32* @y.2, align 4
  %418 = add i32 %416, -1
  %419 = mul i32 %418, %416
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %422, %421
  %424 = select i1 %423, i32 -1340660518, i32 1271248461
  br label %.backedge

425:                                              ; preds = %6
  br label %.backedge

426:                                              ; preds = %6
  %.neg66 = add i32 %.046, 1
  br label %.backedge

427:                                              ; preds = %6
  %428 = load i32, i32* @x.1, align 4
  %429 = load i32, i32* @y.2, align 4
  %430 = add i32 %428, -1
  %431 = mul i32 %430, %428
  %432 = and i32 %431, 1
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %434, %433
  %436 = select i1 %435, i32 651021358, i32 183767315
  br label %.backedge

437:                                              ; preds = %6
  %438 = load i32, i32* @x.1, align 4
  %439 = load i32, i32* @y.2, align 4
  %440 = add i32 %438, -1
  %441 = mul i32 %440, %438
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %444, %443
  %446 = select i1 %445, i32 1108128665, i32 183767315
  br label %.backedge

447:                                              ; preds = %6
  br label %.backedge

448:                                              ; preds = %6
  ret i32 0

449:                                              ; preds = %6
  %450 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %451 = bitcast %"class.std::basic_istream"* %450 to i8**
  %452 = load i8*, i8** %451, align 8
  %453 = getelementptr i8, i8* %452, i64 -24
  %454 = bitcast i8* %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.std::basic_istream"* %450 to i8*
  %457 = getelementptr inbounds i8, i8* %456, i64 %455
  %458 = bitcast i8* %457 to %"class.std::basic_ios"*
  %459 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* nonnull %458)
  br label %.backedge

460:                                              ; preds = %6
  br label %.backedge

461:                                              ; preds = %6
  br label %.backedge

462:                                              ; preds = %6
  %463 = shl nuw i32 1, %.058
  %464 = add i32 %463, %.060
  br label %.backedge

465:                                              ; preds = %6
  %466 = sext i32 %.062 to i64
  %467 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %466
  %468 = load i32, i32* %467, align 4
  %469 = sdiv i32 %468, 10
  store i32 %469, i32* %467, align 4
  br label %.backedge

470:                                              ; preds = %6
  %471 = sext i32 %.054 to i64
  %472 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %471
  %473 = load i32, i32* %472, align 4
  %474 = and i32 %473, 1
  %475 = and i8 %.056, 1
  %476 = zext i8 %475 to i32
  %477 = and i32 %473, %476
  %478 = xor i32 %474, %476
  %479 = or i32 %478, %477
  %480 = trunc i32 %479 to i8
  br label %.backedge

481:                                              ; preds = %6
  br label %.backedge

482:                                              ; preds = %6
  %.neg = add i32 %.052, 1
  br label %.backedge

483:                                              ; preds = %6
  br label %.backedge

484:                                              ; preds = %6
  br label %.backedge

485:                                              ; preds = %6
  %486 = mul nsw i32 %.050, 10
  %487 = sext i32 %.048 to i64
  %488 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %487
  %489 = load i32, i32* %488, align 4
  %490 = add i32 %489, %486
  br label %.backedge

491:                                              ; preds = %6
  br label %.backedge

492:                                              ; preds = %6
  %493 = add i32 %.048, 1
  br label %.backedge

494:                                              ; preds = %6
  %495 = trunc i32 %.046 to i8
  %496 = add i8 %495, 65
  %497 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %496)
  %498 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %497, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

499:                                              ; preds = %6
  br label %.backedge

500:                                              ; preds = %6
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s262874741.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
