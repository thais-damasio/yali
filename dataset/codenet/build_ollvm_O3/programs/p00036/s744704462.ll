; ModuleID = 'build_ollvm/programs/p00036/s744704462.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s744704462.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@w = global [8 x [8 x i8]] zeroinitializer, align 16
@dx = local_unnamed_addr global [4 x i32] [i32 0, i32 0, i32 1, i32 -1], align 16
@dy = local_unnamed_addr global [4 x i32] [i32 1, i32 -1, i32 0, i32 0], align 16
@s = local_unnamed_addr global [8 x [8 x i32]] zeroinitializer, align 16
@q = local_unnamed_addr global [4 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s744704462.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1358941413, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1358941413, label %11
    i32 -1913498819, label %14
    i32 -6656460, label %25
    i32 1190775849, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1913498819, i32 1190775849
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -6656460, i32 1190775849
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1913498819, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline nounwind uwtable
define void @_Z4funcii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = alloca i1, align 1
  %4 = sext i32 %0 to i64
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* @s, i64 0, i64 %4, i64 %5
  store i32 0, i32* %6, align 4
  br label %7

7:                                                ; preds = %.backedge, %2
  %.028 = phi i32 [ 0, %2 ], [ %.028.be, %.backedge ]
  %.0 = phi i32 [ -1255213840, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1255213840, label %8
    i32 1835271682, label %18
    i32 -523116696, label %29
    i32 78651805, label %31
    i32 -1971595013, label %38
    i32 457210759, label %45
    i32 1664607699, label %52
    i32 -97479531, label %59
    i32 2057390648, label %73
    i32 -1231955418, label %83
    i32 -760673454, label %103
    i32 -1037574796, label %104
    i32 1736790107, label %105
    i32 1706358685, label %115
    i32 575248498, label %125
    i32 969484660, label %126
    i32 996081224, label %127
    i32 -373833690, label %128
    i32 -2068811742, label %129
    i32 -1394046853, label %140
  ]

.backedge:                                        ; preds = %7, %140, %129, %128, %126, %125, %115, %105, %104, %103, %83, %73, %59, %52, %45, %38, %31, %29, %18, %8
  %.028.be = phi i32 [ %.028, %7 ], [ %.028, %140 ], [ %.028, %129 ], [ %.028, %128 ], [ %.neg, %126 ], [ %.028, %125 ], [ %.028, %115 ], [ %.028, %105 ], [ %.028, %104 ], [ %.028, %103 ], [ %.028, %83 ], [ %.028, %73 ], [ %.028, %59 ], [ %.028, %52 ], [ %.028, %45 ], [ %.028, %38 ], [ %.028, %31 ], [ %.028, %29 ], [ %.028, %18 ], [ %.028, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ 1706358685, %140 ], [ -1231955418, %129 ], [ 1835271682, %128 ], [ -1255213840, %126 ], [ 969484660, %125 ], [ %124, %115 ], [ %114, %105 ], [ 1736790107, %104 ], [ -1037574796, %103 ], [ %102, %83 ], [ %82, %73 ], [ %72, %59 ], [ %58, %52 ], [ %51, %45 ], [ %44, %38 ], [ %37, %31 ], [ %30, %29 ], [ %28, %18 ], [ %17, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = load i32, i32* @x.1, align 4
  %10 = load i32, i32* @y.2, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 1835271682, i32 -373833690
  br label %.backedge

18:                                               ; preds = %7
  %19 = icmp slt i32 %.028, 4
  store i1 %19, i1* %3, align 1
  %20 = load i32, i32* @x.1, align 4
  %21 = load i32, i32* @y.2, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -523116696, i32 -373833690
  br label %.backedge

29:                                               ; preds = %7
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %30 = select i1 %.0..0..0., i32 78651805, i32 996081224
  br label %.backedge

31:                                               ; preds = %7
  %32 = sext i32 %.028 to i64
  %33 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, %0
  %36 = icmp sgt i32 %35, -1
  %37 = select i1 %36, i32 -1971595013, i32 1736790107
  br label %.backedge

38:                                               ; preds = %7
  %39 = sext i32 %.028 to i64
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, %0
  %43 = icmp slt i32 %42, 8
  %44 = select i1 %43, i32 457210759, i32 1736790107
  br label %.backedge

45:                                               ; preds = %7
  %46 = sext i32 %.028 to i64
  %47 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, %1
  %50 = icmp sgt i32 %49, -1
  %51 = select i1 %50, i32 1664607699, i32 1736790107
  br label %.backedge

52:                                               ; preds = %7
  %53 = sext i32 %.028 to i64
  %54 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, %1
  %57 = icmp slt i32 %56, 8
  %58 = select i1 %57, i32 -97479531, i32 1736790107
  br label %.backedge

59:                                               ; preds = %7
  %60 = sext i32 %.028 to i64
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, %0
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %60
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, %1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* @s, i64 0, i64 %64, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 1
  %72 = select i1 %71, i32 2057390648, i32 -1037574796
  br label %.backedge

73:                                               ; preds = %7
  %74 = load i32, i32* @x.1, align 4
  %75 = load i32, i32* @y.2, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 -1231955418, i32 -2068811742
  br label %.backedge

83:                                               ; preds = %7
  %84 = sext i32 %.028 to i64
  %85 = getelementptr inbounds [4 x i32], [4 x i32]* @q, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %84
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, %0
  %91 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %84
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, %1
  tail call void @_Z4funcii(i32 %90, i32 %93)
  %94 = load i32, i32* @x.1, align 4
  %95 = load i32, i32* @y.2, align 4
  %96 = add i32 %94, -1
  %97 = mul i32 %96, %94
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %100, %99
  %102 = select i1 %101, i32 -760673454, i32 -2068811742
  br label %.backedge

103:                                              ; preds = %7
  br label %.backedge

104:                                              ; preds = %7
  br label %.backedge

105:                                              ; preds = %7
  %106 = load i32, i32* @x.1, align 4
  %107 = load i32, i32* @y.2, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 1706358685, i32 -1394046853
  br label %.backedge

115:                                              ; preds = %7
  %116 = load i32, i32* @x.1, align 4
  %117 = load i32, i32* @y.2, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 575248498, i32 -1394046853
  br label %.backedge

125:                                              ; preds = %7
  br label %.backedge

126:                                              ; preds = %7
  %.neg = add i32 %.028, 1
  br label %.backedge

127:                                              ; preds = %7
  ret void

128:                                              ; preds = %7
  br label %.backedge

129:                                              ; preds = %7
  %130 = sext i32 %.028 to i64
  %131 = getelementptr inbounds [4 x i32], [4 x i32]* @q, i64 0, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %131, align 4
  %134 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %130
  %135 = load i32, i32* %134, align 4
  %136 = add i32 %135, %0
  %137 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %130
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, %1
  tail call void @_Z4funcii(i32 %136, i32 %139)
  br label %.backedge

140:                                              ; preds = %7
  br label %.backedge
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  br label %6

6:                                                ; preds = %.backedge, %0
  %.045 = phi i32 [ undef, %0 ], [ %.045.be, %.backedge ]
  %.043 = phi i32 [ undef, %0 ], [ %.043.be, %.backedge ]
  %.041 = phi i32 [ undef, %0 ], [ %.041.be, %.backedge ]
  %.039 = phi i32 [ undef, %0 ], [ %.039.be, %.backedge ]
  %.037 = phi i32 [ undef, %0 ], [ %.037.be, %.backedge ]
  %.035 = phi i32 [ undef, %0 ], [ %.035.be, %.backedge ]
  %.0 = phi i32 [ -884686973, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -884686973, label %7
    i32 1739658669, label %10
    i32 -251544675, label %20
    i32 -1752737796, label %30
    i32 -258880673, label %31
    i32 -1544442915, label %41
    i32 1634599972, label %52
    i32 -1054366934, label %54
    i32 542827414, label %58
    i32 1978680794, label %60
    i32 -640162840, label %61
    i32 1712215182, label %71
    i32 -1451361118, label %82
    i32 967422287, label %84
    i32 -941652827, label %85
    i32 1400348191, label %88
    i32 -2071253836, label %98
    i32 -2030096172, label %115
    i32 -393563714, label %116
    i32 -1107145341, label %118
    i32 -1398463878, label %119
    i32 36596963, label %121
    i32 -13824293, label %122
    i32 1744000610, label %125
    i32 -1154426428, label %128
    i32 -210841284, label %130
    i32 -1063966604, label %131
    i32 283456282, label %134
    i32 1422037245, label %135
    i32 -620083859, label %145
    i32 134169261, label %156
    i32 -1824639549, label %158
    i32 1501424162, label %165
    i32 736608329, label %166
    i32 -1035288820, label %176
    i32 -162019871, label %186
    i32 1702687739, label %187
    i32 -197756350, label %189
    i32 -135816365, label %199
    i32 1795483999, label %209
    i32 -1227066265, label %210
    i32 -2021944364, label %220
    i32 1214110761, label %231
    i32 17156127, label %232
    i32 -1014404843, label %236
    i32 1610573046, label %240
    i32 -89699584, label %244
    i32 893331228, label %247
    i32 -519113337, label %251
    i32 -697437041, label %254
    i32 -1303236193, label %258
    i32 -1427770413, label %268
    i32 417999485, label %280
    i32 -2137766277, label %281
    i32 1626113699, label %291
    i32 1298392384, label %303
    i32 -1649463812, label %305
    i32 900145629, label %309
    i32 290008122, label %319
    i32 1510276, label %331
    i32 -1350245487, label %332
    i32 1108117472, label %336
    i32 2081674141, label %340
    i32 1263941659, label %350
    i32 -1531086738, label %362
    i32 337830012, label %363
    i32 -1829627093, label %367
    i32 521001054, label %371
    i32 880406295, label %374
    i32 346502280, label %378
    i32 1768387467, label %388
    i32 -289976028, label %400
    i32 -786194719, label %402
    i32 -2045375122, label %406
    i32 1345218168, label %409
    i32 1737063643, label %410
    i32 1754741507, label %420
    i32 -2113051993, label %430
    i32 1583326558, label %431
    i32 497719349, label %432
    i32 1521680518, label %433
    i32 1607826026, label %434
    i32 52072689, label %435
    i32 -646420830, label %436
    i32 -611866838, label %437
    i32 1632737050, label %438
    i32 -1654010616, label %439
    i32 -304072115, label %440
    i32 -391007462, label %448
    i32 574490913, label %449
    i32 375220826, label %450
    i32 67992754, label %451
    i32 467931501, label %453
    i32 -275461688, label %456
    i32 -1481760064, label %457
    i32 -24127012, label %460
    i32 -1871562891, label %463
    i32 979461687, label %464
  ]

.backedge:                                        ; preds = %6, %464, %463, %460, %457, %456, %453, %451, %450, %449, %448, %440, %439, %438, %437, %435, %434, %433, %432, %431, %430, %420, %410, %409, %406, %402, %400, %388, %378, %374, %371, %367, %363, %362, %350, %340, %336, %332, %331, %319, %309, %305, %303, %291, %281, %280, %268, %258, %254, %251, %247, %244, %240, %236, %232, %231, %220, %210, %209, %199, %189, %187, %186, %176, %166, %165, %158, %156, %145, %135, %134, %131, %130, %128, %125, %122, %121, %119, %118, %116, %115, %98, %88, %85, %84, %82, %71, %61, %60, %58, %54, %52, %41, %31, %30, %20, %10, %7
  %.045.be = phi i32 [ %.045, %6 ], [ %.045, %464 ], [ %.045, %463 ], [ %.045, %460 ], [ %.045, %457 ], [ %.045, %456 ], [ %.045, %453 ], [ %.045, %451 ], [ %.045, %450 ], [ %.045, %449 ], [ %.045, %448 ], [ %.045, %440 ], [ %.045, %439 ], [ %.045, %438 ], [ 1, %437 ], [ %.045, %435 ], [ %.045, %434 ], [ %.045, %433 ], [ %.045, %432 ], [ %.045, %431 ], [ %.045, %430 ], [ %.045, %420 ], [ %.045, %410 ], [ %.045, %409 ], [ %.045, %406 ], [ %.045, %402 ], [ %.045, %400 ], [ %.045, %388 ], [ %.045, %378 ], [ %.045, %374 ], [ %.045, %371 ], [ %.045, %367 ], [ %.045, %363 ], [ %.045, %362 ], [ %.045, %350 ], [ %.045, %340 ], [ %.045, %336 ], [ %.045, %332 ], [ %.045, %331 ], [ %.045, %319 ], [ %.045, %309 ], [ %.045, %305 ], [ %.045, %303 ], [ %.045, %291 ], [ %.045, %281 ], [ %.045, %280 ], [ %.045, %268 ], [ %.045, %258 ], [ %.045, %254 ], [ %.045, %251 ], [ %.045, %247 ], [ %.045, %244 ], [ %.045, %240 ], [ %.045, %236 ], [ %.045, %232 ], [ %.045, %231 ], [ %.045, %220 ], [ %.045, %210 ], [ %.045, %209 ], [ %.045, %199 ], [ %.045, %189 ], [ %.045, %187 ], [ %.045, %186 ], [ %.045, %176 ], [ %.045, %166 ], [ %.045, %165 ], [ %.045, %158 ], [ %.045, %156 ], [ %.045, %145 ], [ %.045, %135 ], [ %.045, %134 ], [ %.045, %131 ], [ %.045, %130 ], [ %.045, %128 ], [ %.045, %125 ], [ %.045, %122 ], [ %.045, %121 ], [ %.045, %119 ], [ %.045, %118 ], [ %.045, %116 ], [ %.045, %115 ], [ %.045, %98 ], [ %.045, %88 ], [ %.045, %85 ], [ %.045, %84 ], [ %.045, %82 ], [ %.045, %71 ], [ %.045, %61 ], [ %.045, %60 ], [ %59, %58 ], [ %.045, %54 ], [ %.045, %52 ], [ %.045, %41 ], [ %.045, %31 ], [ %.045, %30 ], [ 1, %20 ], [ %.045, %10 ], [ %.045, %7 ]
  %.043.be = phi i32 [ %.043, %6 ], [ %.043, %464 ], [ %.043, %463 ], [ %.043, %460 ], [ %.043, %457 ], [ %.043, %456 ], [ %.043, %453 ], [ %.043, %451 ], [ %.043, %450 ], [ %.043, %449 ], [ %.043, %448 ], [ %.043, %440 ], [ %.043, %439 ], [ %.043, %438 ], [ %.043, %437 ], [ %.043, %435 ], [ %.043, %434 ], [ %.043, %433 ], [ %.043, %432 ], [ %.043, %431 ], [ %.043, %430 ], [ %.043, %420 ], [ %.043, %410 ], [ %.043, %409 ], [ %.043, %406 ], [ %.043, %402 ], [ %.043, %400 ], [ %.043, %388 ], [ %.043, %378 ], [ %.043, %374 ], [ %.043, %371 ], [ %.043, %367 ], [ %.043, %363 ], [ %.043, %362 ], [ %.043, %350 ], [ %.043, %340 ], [ %.043, %336 ], [ %.043, %332 ], [ %.043, %331 ], [ %.043, %319 ], [ %.043, %309 ], [ %.043, %305 ], [ %.043, %303 ], [ %.043, %291 ], [ %.043, %281 ], [ %.043, %280 ], [ %.043, %268 ], [ %.043, %258 ], [ %.043, %254 ], [ %.043, %251 ], [ %.043, %247 ], [ %.043, %244 ], [ %.043, %240 ], [ %.043, %236 ], [ %.043, %232 ], [ %.043, %231 ], [ %.043, %220 ], [ %.043, %210 ], [ %.043, %209 ], [ %.043, %199 ], [ %.043, %189 ], [ %.043, %187 ], [ %.043, %186 ], [ %.043, %176 ], [ %.043, %166 ], [ %.043, %165 ], [ %.043, %158 ], [ %.043, %156 ], [ %.043, %145 ], [ %.043, %135 ], [ %.043, %134 ], [ %.043, %131 ], [ %.043, %130 ], [ %.043, %128 ], [ %.043, %125 ], [ %.043, %122 ], [ %.043, %121 ], [ %120, %119 ], [ %.043, %118 ], [ %.043, %116 ], [ %.043, %115 ], [ %.043, %98 ], [ %.043, %88 ], [ %.043, %85 ], [ %.043, %84 ], [ %.043, %82 ], [ %.043, %71 ], [ %.043, %61 ], [ 0, %60 ], [ %.043, %58 ], [ %.043, %54 ], [ %.043, %52 ], [ %.043, %41 ], [ %.043, %31 ], [ %.043, %30 ], [ %.043, %20 ], [ %.043, %10 ], [ %.043, %7 ]
  %.041.be = phi i32 [ %.041, %6 ], [ %.041, %464 ], [ %.041, %463 ], [ %.041, %460 ], [ %.041, %457 ], [ %.041, %456 ], [ %.041, %453 ], [ %.041, %451 ], [ %.041, %450 ], [ %.041, %449 ], [ %.041, %448 ], [ %.041, %440 ], [ %.041, %439 ], [ %.041, %438 ], [ %.041, %437 ], [ %.041, %435 ], [ %.041, %434 ], [ %.041, %433 ], [ %.041, %432 ], [ %.041, %431 ], [ %.041, %430 ], [ %.041, %420 ], [ %.041, %410 ], [ %.041, %409 ], [ %.041, %406 ], [ %.041, %402 ], [ %.041, %400 ], [ %.041, %388 ], [ %.041, %378 ], [ %.041, %374 ], [ %.041, %371 ], [ %.041, %367 ], [ %.041, %363 ], [ %.041, %362 ], [ %.041, %350 ], [ %.041, %340 ], [ %.041, %336 ], [ %.041, %332 ], [ %.041, %331 ], [ %.041, %319 ], [ %.041, %309 ], [ %.041, %305 ], [ %.041, %303 ], [ %.041, %291 ], [ %.041, %281 ], [ %.041, %280 ], [ %.041, %268 ], [ %.041, %258 ], [ %.041, %254 ], [ %.041, %251 ], [ %.041, %247 ], [ %.041, %244 ], [ %.041, %240 ], [ %.041, %236 ], [ %.041, %232 ], [ %.041, %231 ], [ %.041, %220 ], [ %.041, %210 ], [ %.041, %209 ], [ %.041, %199 ], [ %.041, %189 ], [ %.041, %187 ], [ %.041, %186 ], [ %.041, %176 ], [ %.041, %166 ], [ %.041, %165 ], [ %.041, %158 ], [ %.041, %156 ], [ %.041, %145 ], [ %.041, %135 ], [ %.041, %134 ], [ %.041, %131 ], [ %.041, %130 ], [ %.041, %128 ], [ %.041, %125 ], [ %.041, %122 ], [ %.041, %121 ], [ %.041, %119 ], [ %.041, %118 ], [ %117, %116 ], [ %.041, %115 ], [ %.041, %98 ], [ %.041, %88 ], [ %.041, %85 ], [ 0, %84 ], [ %.041, %82 ], [ %.041, %71 ], [ %.041, %61 ], [ %.041, %60 ], [ %.041, %58 ], [ %.041, %54 ], [ %.041, %52 ], [ %.041, %41 ], [ %.041, %31 ], [ %.041, %30 ], [ %.041, %20 ], [ %.041, %10 ], [ %.041, %7 ]
  %.039.be = phi i32 [ %.039, %6 ], [ %.039, %464 ], [ %.039, %463 ], [ %.039, %460 ], [ %.039, %457 ], [ %.039, %456 ], [ %.039, %453 ], [ %.039, %451 ], [ %.039, %450 ], [ %.039, %449 ], [ %.039, %448 ], [ %.039, %440 ], [ %.039, %439 ], [ %.039, %438 ], [ %.039, %437 ], [ %.039, %435 ], [ %.039, %434 ], [ %.039, %433 ], [ %.039, %432 ], [ %.039, %431 ], [ %.039, %430 ], [ %.039, %420 ], [ %.039, %410 ], [ %.039, %409 ], [ %.039, %406 ], [ %.039, %402 ], [ %.039, %400 ], [ %.039, %388 ], [ %.039, %378 ], [ %.039, %374 ], [ %.039, %371 ], [ %.039, %367 ], [ %.039, %363 ], [ %.039, %362 ], [ %.039, %350 ], [ %.039, %340 ], [ %.039, %336 ], [ %.039, %332 ], [ %.039, %331 ], [ %.039, %319 ], [ %.039, %309 ], [ %.039, %305 ], [ %.039, %303 ], [ %.039, %291 ], [ %.039, %281 ], [ %.039, %280 ], [ %.039, %268 ], [ %.039, %258 ], [ %.039, %254 ], [ %.039, %251 ], [ %.039, %247 ], [ %.039, %244 ], [ %.039, %240 ], [ %.039, %236 ], [ %.039, %232 ], [ %.039, %231 ], [ %.039, %220 ], [ %.039, %210 ], [ %.039, %209 ], [ %.039, %199 ], [ %.039, %189 ], [ %.039, %187 ], [ %.039, %186 ], [ %.039, %176 ], [ %.039, %166 ], [ %.039, %165 ], [ %.039, %158 ], [ %.039, %156 ], [ %.039, %145 ], [ %.039, %135 ], [ %.039, %134 ], [ %.039, %131 ], [ %.039, %130 ], [ %129, %128 ], [ %.039, %125 ], [ %.039, %122 ], [ 0, %121 ], [ %.039, %119 ], [ %.039, %118 ], [ %.039, %116 ], [ %.039, %115 ], [ %.039, %98 ], [ %.039, %88 ], [ %.039, %85 ], [ %.039, %84 ], [ %.039, %82 ], [ %.039, %71 ], [ %.039, %61 ], [ %.039, %60 ], [ %.039, %58 ], [ %.039, %54 ], [ %.039, %52 ], [ %.039, %41 ], [ %.039, %31 ], [ %.039, %30 ], [ %.039, %20 ], [ %.039, %10 ], [ %.039, %7 ]
  %.037.be = phi i32 [ %.037, %6 ], [ %.037, %464 ], [ %.037, %463 ], [ %.037, %460 ], [ %.037, %457 ], [ %.037, %456 ], [ %.037, %453 ], [ %452, %451 ], [ %.037, %450 ], [ %.037, %449 ], [ %.037, %448 ], [ %.037, %440 ], [ %.037, %439 ], [ %.037, %438 ], [ %.037, %437 ], [ %.037, %435 ], [ %.037, %434 ], [ %.037, %433 ], [ %.037, %432 ], [ %.037, %431 ], [ %.037, %430 ], [ %.037, %420 ], [ %.037, %410 ], [ %.037, %409 ], [ %.037, %406 ], [ %.037, %402 ], [ %.037, %400 ], [ %.037, %388 ], [ %.037, %378 ], [ %.037, %374 ], [ %.037, %371 ], [ %.037, %367 ], [ %.037, %363 ], [ %.037, %362 ], [ %.037, %350 ], [ %.037, %340 ], [ %.037, %336 ], [ %.037, %332 ], [ %.037, %331 ], [ %.037, %319 ], [ %.037, %309 ], [ %.037, %305 ], [ %.037, %303 ], [ %.037, %291 ], [ %.037, %281 ], [ %.037, %280 ], [ %.037, %268 ], [ %.037, %258 ], [ %.037, %254 ], [ %.037, %251 ], [ %.037, %247 ], [ %.037, %244 ], [ %.037, %240 ], [ %.037, %236 ], [ %.037, %232 ], [ %.037, %231 ], [ %221, %220 ], [ %.037, %210 ], [ %.037, %209 ], [ %.037, %199 ], [ %.037, %189 ], [ %.037, %187 ], [ %.037, %186 ], [ %.037, %176 ], [ %.037, %166 ], [ %.037, %165 ], [ %.037, %158 ], [ %.037, %156 ], [ %.037, %145 ], [ %.037, %135 ], [ %.037, %134 ], [ %.037, %131 ], [ 0, %130 ], [ %.037, %128 ], [ %.037, %125 ], [ %.037, %122 ], [ %.037, %121 ], [ %.037, %119 ], [ %.037, %118 ], [ %.037, %116 ], [ %.037, %115 ], [ %.037, %98 ], [ %.037, %88 ], [ %.037, %85 ], [ %.037, %84 ], [ %.037, %82 ], [ %.037, %71 ], [ %.037, %61 ], [ %.037, %60 ], [ %.037, %58 ], [ %.037, %54 ], [ %.037, %52 ], [ %.037, %41 ], [ %.037, %31 ], [ %.037, %30 ], [ %.037, %20 ], [ %.037, %10 ], [ %.037, %7 ]
  %.035.be = phi i32 [ %.035, %6 ], [ %.035, %464 ], [ %.035, %463 ], [ %.035, %460 ], [ %.035, %457 ], [ %.035, %456 ], [ %.035, %453 ], [ %.035, %451 ], [ %.035, %450 ], [ %.035, %449 ], [ %.035, %448 ], [ %.035, %440 ], [ %.035, %439 ], [ %.035, %438 ], [ %.035, %437 ], [ %.035, %435 ], [ %.035, %434 ], [ %.035, %433 ], [ %.035, %432 ], [ %.035, %431 ], [ %.035, %430 ], [ %.035, %420 ], [ %.035, %410 ], [ %.035, %409 ], [ %.035, %406 ], [ %.035, %402 ], [ %.035, %400 ], [ %.035, %388 ], [ %.035, %378 ], [ %.035, %374 ], [ %.035, %371 ], [ %.035, %367 ], [ %.035, %363 ], [ %.035, %362 ], [ %.035, %350 ], [ %.035, %340 ], [ %.035, %336 ], [ %.035, %332 ], [ %.035, %331 ], [ %.035, %319 ], [ %.035, %309 ], [ %.035, %305 ], [ %.035, %303 ], [ %.035, %291 ], [ %.035, %281 ], [ %.035, %280 ], [ %.035, %268 ], [ %.035, %258 ], [ %.035, %254 ], [ %.035, %251 ], [ %.035, %247 ], [ %.035, %244 ], [ %.035, %240 ], [ %.035, %236 ], [ %.035, %232 ], [ %.035, %231 ], [ %.035, %220 ], [ %.035, %210 ], [ %.035, %209 ], [ %.035, %199 ], [ %.035, %189 ], [ %188, %187 ], [ %.035, %186 ], [ %.035, %176 ], [ %.035, %166 ], [ %.035, %165 ], [ %.035, %158 ], [ %.035, %156 ], [ %.035, %145 ], [ %.035, %135 ], [ 0, %134 ], [ %.035, %131 ], [ %.035, %130 ], [ %.035, %128 ], [ %.035, %125 ], [ %.035, %122 ], [ %.035, %121 ], [ %.035, %119 ], [ %.035, %118 ], [ %.035, %116 ], [ %.035, %115 ], [ %.035, %98 ], [ %.035, %88 ], [ %.035, %85 ], [ %.035, %84 ], [ %.035, %82 ], [ %.035, %71 ], [ %.035, %61 ], [ %.035, %60 ], [ %.035, %58 ], [ %.035, %54 ], [ %.035, %52 ], [ %.035, %41 ], [ %.035, %31 ], [ %.035, %30 ], [ %.035, %20 ], [ %.035, %10 ], [ %.035, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ 1754741507, %464 ], [ 1768387467, %463 ], [ 1263941659, %460 ], [ 290008122, %457 ], [ 1626113699, %456 ], [ -1427770413, %453 ], [ -2021944364, %451 ], [ -135816365, %450 ], [ -1035288820, %449 ], [ -620083859, %448 ], [ -2071253836, %440 ], [ 1712215182, %439 ], [ -1544442915, %438 ], [ -251544675, %437 ], [ -884686973, %435 ], [ 52072689, %434 ], [ 1607826026, %433 ], [ 1521680518, %432 ], [ 497719349, %431 ], [ 1583326558, %430 ], [ %429, %420 ], [ %419, %410 ], [ 1737063643, %409 ], [ 1345218168, %406 ], [ %405, %402 ], [ %401, %400 ], [ %399, %388 ], [ %387, %378 ], [ %377, %374 ], [ 1737063643, %371 ], [ %370, %367 ], [ %366, %363 ], [ 1583326558, %362 ], [ %361, %350 ], [ %349, %340 ], [ %339, %336 ], [ %335, %332 ], [ 497719349, %331 ], [ %330, %319 ], [ %318, %309 ], [ %308, %305 ], [ %304, %303 ], [ %302, %291 ], [ %290, %281 ], [ 1521680518, %280 ], [ %279, %268 ], [ %267, %258 ], [ %257, %254 ], [ 1607826026, %251 ], [ %250, %247 ], [ 52072689, %244 ], [ %243, %240 ], [ %239, %236 ], [ %235, %232 ], [ -1063966604, %231 ], [ %230, %220 ], [ %219, %210 ], [ -1227066265, %209 ], [ %208, %199 ], [ %198, %189 ], [ 1422037245, %187 ], [ 1702687739, %186 ], [ %185, %176 ], [ %175, %166 ], [ 736608329, %165 ], [ %164, %158 ], [ %157, %156 ], [ %155, %145 ], [ %144, %135 ], [ 1422037245, %134 ], [ %133, %131 ], [ -1063966604, %130 ], [ -13824293, %128 ], [ -1154426428, %125 ], [ %124, %122 ], [ -13824293, %121 ], [ -640162840, %119 ], [ -1398463878, %118 ], [ -941652827, %116 ], [ -393563714, %115 ], [ %114, %98 ], [ %97, %88 ], [ %87, %85 ], [ -941652827, %84 ], [ %83, %82 ], [ %81, %71 ], [ %70, %61 ], [ -640162840, %60 ], [ -258880673, %58 ], [ 542827414, %54 ], [ %53, %52 ], [ %51, %41 ], [ %40, %31 ], [ -258880673, %30 ], [ %29, %20 ], [ %19, %10 ], [ %9, %7 ]
  br label %6

7:                                                ; preds = %6
  %8 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x [8 x i8]], [8 x [8 x i8]]* @w, i64 0, i64 0, i64 0))
  %.not = icmp eq i32 %8, -1
  %9 = select i1 %.not, i32 -646420830, i32 1739658669
  br label %.backedge

10:                                               ; preds = %6
  %11 = load i32, i32* @x.3, align 4
  %12 = load i32, i32* @y.4, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 -251544675, i32 -611866838
  br label %.backedge

20:                                               ; preds = %6
  %21 = load i32, i32* @x.3, align 4
  %22 = load i32, i32* @y.4, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 -1752737796, i32 -611866838
  br label %.backedge

30:                                               ; preds = %6
  br label %.backedge

31:                                               ; preds = %6
  %32 = load i32, i32* @x.3, align 4
  %33 = load i32, i32* @y.4, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -1544442915, i32 1632737050
  br label %.backedge

41:                                               ; preds = %6
  %42 = icmp slt i32 %.045, 8
  store i1 %42, i1* %5, align 1
  %43 = load i32, i32* @x.3, align 4
  %44 = load i32, i32* @y.4, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 1634599972, i32 1632737050
  br label %.backedge

52:                                               ; preds = %6
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %53 = select i1 %.0..0..0., i32 -1054366934, i32 1978680794
  br label %.backedge

54:                                               ; preds = %6
  %55 = sext i32 %.045 to i64
  %56 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @w, i64 0, i64 %55, i64 0
  %57 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %56)
  br label %.backedge

58:                                               ; preds = %6
  %59 = add i32 %.045, 1
  br label %.backedge

60:                                               ; preds = %6
  br label %.backedge

61:                                               ; preds = %6
  %62 = load i32, i32* @x.3, align 4
  %63 = load i32, i32* @y.4, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 1712215182, i32 -1654010616
  br label %.backedge

71:                                               ; preds = %6
  %72 = icmp slt i32 %.043, 8
  store i1 %72, i1* %4, align 1
  %73 = load i32, i32* @x.3, align 4
  %74 = load i32, i32* @y.4, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -1451361118, i32 -1654010616
  br label %.backedge

82:                                               ; preds = %6
  %.0..0..0.31 = load volatile i1, i1* %4, align 1
  %83 = select i1 %.0..0..0.31, i32 967422287, i32 36596963
  br label %.backedge

84:                                               ; preds = %6
  br label %.backedge

85:                                               ; preds = %6
  %86 = icmp slt i32 %.041, 8
  %87 = select i1 %86, i32 1400348191, i32 -1107145341
  br label %.backedge

88:                                               ; preds = %6
  %89 = load i32, i32* @x.3, align 4
  %90 = load i32, i32* @y.4, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 -2071253836, i32 -304072115
  br label %.backedge

98:                                               ; preds = %6
  %99 = sext i32 %.043 to i64
  %100 = sext i32 %.041 to i64
  %101 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @w, i64 0, i64 %99, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = sext i8 %102 to i32
  %104 = add nsw i32 %103, -48
  %105 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* @s, i64 0, i64 %99, i64 %100
  store i32 %104, i32* %105, align 4
  %106 = load i32, i32* @x.3, align 4
  %107 = load i32, i32* @y.4, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 -2030096172, i32 -304072115
  br label %.backedge

115:                                              ; preds = %6
  br label %.backedge

116:                                              ; preds = %6
  %117 = add i32 %.041, 1
  br label %.backedge

118:                                              ; preds = %6
  br label %.backedge

119:                                              ; preds = %6
  %120 = add i32 %.043, 1
  br label %.backedge

121:                                              ; preds = %6
  br label %.backedge

122:                                              ; preds = %6
  %123 = icmp slt i32 %.039, 4
  %124 = select i1 %123, i32 1744000610, i32 -210841284
  br label %.backedge

125:                                              ; preds = %6
  %126 = sext i32 %.039 to i64
  %127 = getelementptr inbounds [4 x i32], [4 x i32]* @q, i64 0, i64 %126
  store i32 0, i32* %127, align 4
  br label %.backedge

128:                                              ; preds = %6
  %129 = add i32 %.039, 1
  br label %.backedge

130:                                              ; preds = %6
  br label %.backedge

131:                                              ; preds = %6
  %132 = icmp slt i32 %.037, 8
  %133 = select i1 %132, i32 283456282, i32 17156127
  br label %.backedge

134:                                              ; preds = %6
  br label %.backedge

135:                                              ; preds = %6
  %136 = load i32, i32* @x.3, align 4
  %137 = load i32, i32* @y.4, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 -620083859, i32 -391007462
  br label %.backedge

145:                                              ; preds = %6
  %146 = icmp slt i32 %.035, 8
  store i1 %146, i1* %3, align 1
  %147 = load i32, i32* @x.3, align 4
  %148 = load i32, i32* @y.4, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 134169261, i32 -391007462
  br label %.backedge

156:                                              ; preds = %6
  %.0..0..0.32 = load volatile i1, i1* %3, align 1
  %157 = select i1 %.0..0..0.32, i32 -1824639549, i32 -197756350
  br label %.backedge

158:                                              ; preds = %6
  %159 = sext i32 %.037 to i64
  %160 = sext i32 %.035 to i64
  %161 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* @s, i64 0, i64 %159, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 1
  %164 = select i1 %163, i32 1501424162, i32 736608329
  br label %.backedge

165:                                              ; preds = %6
  tail call void @_Z4funcii(i32 %.037, i32 %.035)
  br label %.backedge

166:                                              ; preds = %6
  %167 = load i32, i32* @x.3, align 4
  %168 = load i32, i32* @y.4, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 -1035288820, i32 574490913
  br label %.backedge

176:                                              ; preds = %6
  %177 = load i32, i32* @x.3, align 4
  %178 = load i32, i32* @y.4, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 -162019871, i32 574490913
  br label %.backedge

186:                                              ; preds = %6
  br label %.backedge

187:                                              ; preds = %6
  %188 = add i32 %.035, 1
  br label %.backedge

189:                                              ; preds = %6
  %190 = load i32, i32* @x.3, align 4
  %191 = load i32, i32* @y.4, align 4
  %192 = add i32 %190, -1
  %193 = mul i32 %192, %190
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %196, %195
  %198 = select i1 %197, i32 -135816365, i32 375220826
  br label %.backedge

199:                                              ; preds = %6
  %200 = load i32, i32* @x.3, align 4
  %201 = load i32, i32* @y.4, align 4
  %202 = add i32 %200, -1
  %203 = mul i32 %202, %200
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %206, %205
  %208 = select i1 %207, i32 1795483999, i32 375220826
  br label %.backedge

209:                                              ; preds = %6
  br label %.backedge

210:                                              ; preds = %6
  %211 = load i32, i32* @x.3, align 4
  %212 = load i32, i32* @y.4, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 -2021944364, i32 67992754
  br label %.backedge

220:                                              ; preds = %6
  %221 = add i32 %.037, 1
  %222 = load i32, i32* @x.3, align 4
  %223 = load i32, i32* @y.4, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 1214110761, i32 67992754
  br label %.backedge

231:                                              ; preds = %6
  br label %.backedge

232:                                              ; preds = %6
  %233 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 0), align 16
  %234 = icmp eq i32 %233, 1
  %235 = select i1 %234, i32 -1014404843, i32 893331228
  br label %.backedge

236:                                              ; preds = %6
  %237 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 1), align 4
  %238 = icmp eq i32 %237, 1
  %239 = select i1 %238, i32 1610573046, i32 893331228
  br label %.backedge

240:                                              ; preds = %6
  %241 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 2), align 8
  %242 = icmp eq i32 %241, 1
  %243 = select i1 %242, i32 -89699584, i32 893331228
  br label %.backedge

244:                                              ; preds = %6
  %245 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 65)
  %246 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %245, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

247:                                              ; preds = %6
  %248 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 0), align 16
  %249 = icmp eq i32 %248, 3
  %250 = select i1 %249, i32 -519113337, i32 -697437041
  br label %.backedge

251:                                              ; preds = %6
  %252 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 66)
  %253 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %252, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

254:                                              ; preds = %6
  %255 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 2), align 8
  %256 = icmp eq i32 %255, 3
  %257 = select i1 %256, i32 -1303236193, i32 -2137766277
  br label %.backedge

258:                                              ; preds = %6
  %259 = load i32, i32* @x.3, align 4
  %260 = load i32, i32* @y.4, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 -1427770413, i32 467931501
  br label %.backedge

268:                                              ; preds = %6
  %269 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 67)
  %270 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %269, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %271 = load i32, i32* @x.3, align 4
  %272 = load i32, i32* @y.4, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 417999485, i32 467931501
  br label %.backedge

280:                                              ; preds = %6
  br label %.backedge

281:                                              ; preds = %6
  %282 = load i32, i32* @x.3, align 4
  %283 = load i32, i32* @y.4, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 1626113699, i32 -275461688
  br label %.backedge

291:                                              ; preds = %6
  %292 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 0), align 16
  %293 = icmp eq i32 %292, 2
  store i1 %293, i1* %2, align 1
  %294 = load i32, i32* @x.3, align 4
  %295 = load i32, i32* @y.4, align 4
  %296 = add i32 %294, -1
  %297 = mul i32 %296, %294
  %298 = and i32 %297, 1
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %300, %299
  %302 = select i1 %301, i32 1298392384, i32 -275461688
  br label %.backedge

303:                                              ; preds = %6
  %.0..0..0.33 = load volatile i1, i1* %2, align 1
  %304 = select i1 %.0..0..0.33, i32 -1649463812, i32 -1350245487
  br label %.backedge

305:                                              ; preds = %6
  %306 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 3), align 4
  %307 = icmp eq i32 %306, 1
  %308 = select i1 %307, i32 900145629, i32 -1350245487
  br label %.backedge

309:                                              ; preds = %6
  %310 = load i32, i32* @x.3, align 4
  %311 = load i32, i32* @y.4, align 4
  %312 = add i32 %310, -1
  %313 = mul i32 %312, %310
  %314 = and i32 %313, 1
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %316, %315
  %318 = select i1 %317, i32 290008122, i32 -1481760064
  br label %.backedge

319:                                              ; preds = %6
  %320 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 68)
  %321 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %320, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %322 = load i32, i32* @x.3, align 4
  %323 = load i32, i32* @y.4, align 4
  %324 = add i32 %322, -1
  %325 = mul i32 %324, %322
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %328, %327
  %330 = select i1 %329, i32 1510276, i32 -1481760064
  br label %.backedge

331:                                              ; preds = %6
  br label %.backedge

332:                                              ; preds = %6
  %333 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 0), align 16
  %334 = icmp eq i32 %333, 1
  %335 = select i1 %334, i32 1108117472, i32 337830012
  br label %.backedge

336:                                              ; preds = %6
  %337 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 2), align 8
  %338 = icmp eq i32 %337, 2
  %339 = select i1 %338, i32 2081674141, i32 337830012
  br label %.backedge

340:                                              ; preds = %6
  %341 = load i32, i32* @x.3, align 4
  %342 = load i32, i32* @y.4, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 1263941659, i32 -24127012
  br label %.backedge

350:                                              ; preds = %6
  %351 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 69)
  %352 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %351, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %353 = load i32, i32* @x.3, align 4
  %354 = load i32, i32* @y.4, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 -1531086738, i32 -24127012
  br label %.backedge

362:                                              ; preds = %6
  br label %.backedge

363:                                              ; preds = %6
  %364 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 0), align 16
  %365 = icmp eq i32 %364, 2
  %366 = select i1 %365, i32 -1829627093, i32 880406295
  br label %.backedge

367:                                              ; preds = %6
  %368 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 2), align 8
  %369 = icmp eq i32 %368, 1
  %370 = select i1 %369, i32 521001054, i32 880406295
  br label %.backedge

371:                                              ; preds = %6
  %372 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 70)
  %373 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %372, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

374:                                              ; preds = %6
  %375 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 0), align 16
  %376 = icmp eq i32 %375, 1
  %377 = select i1 %376, i32 346502280, i32 1345218168
  br label %.backedge

378:                                              ; preds = %6
  %379 = load i32, i32* @x.3, align 4
  %380 = load i32, i32* @y.4, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 1768387467, i32 -1871562891
  br label %.backedge

388:                                              ; preds = %6
  %389 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 2), align 8
  %390 = icmp eq i32 %389, 1
  store i1 %390, i1* %1, align 1
  %391 = load i32, i32* @x.3, align 4
  %392 = load i32, i32* @y.4, align 4
  %393 = add i32 %391, -1
  %394 = mul i32 %393, %391
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %397, %396
  %399 = select i1 %398, i32 -289976028, i32 -1871562891
  br label %.backedge

400:                                              ; preds = %6
  %.0..0..0.34 = load volatile i1, i1* %1, align 1
  %401 = select i1 %.0..0..0.34, i32 -786194719, i32 1345218168
  br label %.backedge

402:                                              ; preds = %6
  %403 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @q, i64 0, i64 3), align 4
  %404 = icmp eq i32 %403, 1
  %405 = select i1 %404, i32 -2045375122, i32 1345218168
  br label %.backedge

406:                                              ; preds = %6
  %407 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 71)
  %408 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %407, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

409:                                              ; preds = %6
  br label %.backedge

410:                                              ; preds = %6
  %411 = load i32, i32* @x.3, align 4
  %412 = load i32, i32* @y.4, align 4
  %413 = add i32 %411, -1
  %414 = mul i32 %413, %411
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %417, %416
  %419 = select i1 %418, i32 1754741507, i32 979461687
  br label %.backedge

420:                                              ; preds = %6
  %421 = load i32, i32* @x.3, align 4
  %422 = load i32, i32* @y.4, align 4
  %423 = add i32 %421, -1
  %424 = mul i32 %423, %421
  %425 = and i32 %424, 1
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %427, %426
  %429 = select i1 %428, i32 -2113051993, i32 979461687
  br label %.backedge

430:                                              ; preds = %6
  br label %.backedge

431:                                              ; preds = %6
  br label %.backedge

432:                                              ; preds = %6
  br label %.backedge

433:                                              ; preds = %6
  br label %.backedge

434:                                              ; preds = %6
  br label %.backedge

435:                                              ; preds = %6
  br label %.backedge

436:                                              ; preds = %6
  ret i32 0

437:                                              ; preds = %6
  br label %.backedge

438:                                              ; preds = %6
  br label %.backedge

439:                                              ; preds = %6
  br label %.backedge

440:                                              ; preds = %6
  %441 = sext i32 %.043 to i64
  %442 = sext i32 %.041 to i64
  %443 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @w, i64 0, i64 %441, i64 %442
  %444 = load i8, i8* %443, align 1
  %445 = sext i8 %444 to i32
  %446 = add nsw i32 %445, -48
  %447 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* @s, i64 0, i64 %441, i64 %442
  store i32 %446, i32* %447, align 4
  br label %.backedge

448:                                              ; preds = %6
  br label %.backedge

449:                                              ; preds = %6
  br label %.backedge

450:                                              ; preds = %6
  br label %.backedge

451:                                              ; preds = %6
  %452 = add i32 %.037, 1
  br label %.backedge

453:                                              ; preds = %6
  %454 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 67)
  %455 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %454, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

456:                                              ; preds = %6
  br label %.backedge

457:                                              ; preds = %6
  %458 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 68)
  %459 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %458, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

460:                                              ; preds = %6
  %461 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 69)
  %462 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %461, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

463:                                              ; preds = %6
  br label %.backedge

464:                                              ; preds = %6
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s744704462.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
