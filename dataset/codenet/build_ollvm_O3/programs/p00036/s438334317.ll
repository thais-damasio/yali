; ModuleID = 'build_ollvm/programs/p00036/s438334317.ll'
source_filename = "Project_CodeNet_C++1400/p00036/s438334317.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@m = global [16 x [16 x i8]] zeroinitializer, align 16
@buf = local_unnamed_addr global [16 x i8] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = alloca i1, align 1
  br label %12

12:                                               ; preds = %.backedge, %0
  %.0101 = phi i8 [ undef, %0 ], [ %.0101.be, %.backedge ]
  %.099 = phi i32 [ undef, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i8 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.0 = phi i32 [ 582583940, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 582583940, label %13
    i32 1175844949, label %23
    i32 -153680097, label %33
    i32 -124473143, label %34
    i32 466201327, label %44
    i32 -721404492, label %55
    i32 -1524619933, label %57
    i32 1478268334, label %63
    i32 -1825693088, label %64
    i32 -976190959, label %65
    i32 -32906794, label %67
    i32 -878650808, label %70
    i32 -209650113, label %71
    i32 -1580928878, label %81
    i32 165138183, label %91
    i32 1789813869, label %92
    i32 -1972459894, label %95
    i32 -501553333, label %96
    i32 -1950219295, label %99
    i32 556832202, label %106
    i32 -2080859905, label %109
    i32 927178384, label %117
    i32 -231663880, label %124
    i32 2071797756, label %132
    i32 -514201737, label %142
    i32 -1615889760, label %152
    i32 1508054392, label %153
    i32 110621403, label %163
    i32 -155591735, label %174
    i32 -1956533292, label %176
    i32 1006229613, label %179
    i32 -910036547, label %187
    i32 -1375008357, label %194
    i32 -886398202, label %201
    i32 -129936256, label %202
    i32 374797390, label %205
    i32 -1460936662, label %212
    i32 -2115786193, label %220
    i32 -1642152756, label %228
    i32 874409332, label %229
    i32 -549392280, label %239
    i32 1438265443, label %250
    i32 258454692, label %252
    i32 -402686872, label %262
    i32 1598174440, label %273
    i32 618596936, label %275
    i32 -862681137, label %284
    i32 1317236872, label %292
    i32 -1159012913, label %301
    i32 388312010, label %302
    i32 -1276708006, label %312
    i32 -459162111, label %323
    i32 1580149272, label %325
    i32 -791269341, label %335
    i32 -930222160, label %346
    i32 -1455817627, label %348
    i32 175494010, label %355
    i32 500441106, label %363
    i32 1679423174, label %373
    i32 -1353912478, label %388
    i32 -1307409918, label %390
    i32 1203171855, label %400
    i32 982037296, label %410
    i32 -386986259, label %411
    i32 2046002621, label %414
    i32 1649103735, label %417
    i32 1102248293, label %425
    i32 -85142883, label %433
    i32 1398423555, label %443
    i32 1719270043, label %459
    i32 1232619345, label %461
    i32 -1589112379, label %471
    i32 1137786447, label %481
    i32 -1798742773, label %482
    i32 1421715775, label %485
    i32 -818253117, label %495
    i32 541891403, label %506
    i32 -1539648786, label %508
    i32 807027497, label %518
    i32 423073856, label %529
    i32 -1648842021, label %531
    i32 -1195872871, label %539
    i32 871293070, label %547
    i32 561480344, label %556
    i32 -108436228, label %557
    i32 1572497304, label %558
    i32 1891048584, label %559
    i32 -2019345425, label %560
    i32 -1863624920, label %561
    i32 -1201918535, label %562
    i32 1552530468, label %563
    i32 -932907954, label %564
    i32 1481881338, label %574
    i32 2105682861, label %585
    i32 1214840402, label %587
    i32 856584413, label %597
    i32 -1449327237, label %607
    i32 1671517491, label %608
    i32 -1913658734, label %609
    i32 2101720831, label %619
    i32 -937160696, label %629
    i32 1468664602, label %630
    i32 913618924, label %640
    i32 -1531356914, label %650
    i32 -301948218, label %651
    i32 -1689317869, label %661
    i32 573011712, label %672
    i32 1591382132, label %673
    i32 -556485983, label %674
    i32 -1177403156, label %677
    i32 -484151376, label %678
    i32 1962940616, label %679
    i32 462033888, label %680
    i32 -1532999169, label %681
    i32 -1753662406, label %682
    i32 213547223, label %683
    i32 -1748912824, label %684
    i32 1778297927, label %685
    i32 824977332, label %686
    i32 -380366932, label %687
    i32 894453622, label %688
    i32 783332612, label %689
    i32 1046241007, label %690
    i32 -579858994, label %691
    i32 -1950859391, label %692
    i32 -397795443, label %693
    i32 590739996, label %694
    i32 -76148640, label %695
    i32 -108505103, label %697
    i32 678323347, label %698
  ]

.backedge:                                        ; preds = %12, %698, %697, %695, %694, %693, %692, %691, %690, %689, %688, %687, %686, %685, %684, %683, %682, %681, %680, %679, %678, %674, %673, %672, %661, %651, %650, %640, %630, %629, %619, %609, %608, %607, %597, %587, %585, %574, %564, %563, %562, %561, %560, %559, %558, %557, %556, %547, %539, %531, %529, %518, %508, %506, %495, %485, %482, %481, %471, %461, %459, %443, %433, %425, %417, %414, %411, %410, %400, %390, %388, %373, %363, %355, %348, %346, %335, %325, %323, %312, %302, %301, %292, %284, %275, %273, %262, %252, %250, %239, %229, %228, %220, %212, %205, %202, %201, %194, %187, %179, %176, %174, %163, %153, %152, %142, %132, %124, %117, %109, %106, %99, %96, %95, %92, %91, %81, %71, %70, %67, %65, %64, %63, %57, %55, %44, %34, %33, %23, %13
  %.0101.be = phi i8 [ %.0101, %12 ], [ %.0101, %698 ], [ %.0101, %697 ], [ %.0101, %695 ], [ %.0101, %694 ], [ %.0101, %693 ], [ %.0101, %692 ], [ %.0101, %691 ], [ %.0101, %690 ], [ %.0101, %689 ], [ %.0101, %688 ], [ %.0101, %687 ], [ %.0101, %686 ], [ %.0101, %685 ], [ %.0101, %684 ], [ %.0101, %683 ], [ %.0101, %682 ], [ %.0101, %681 ], [ %.0101, %680 ], [ %.0101, %679 ], [ 0, %678 ], [ %.0101, %674 ], [ %.0101, %673 ], [ %.0101, %672 ], [ %.0101, %661 ], [ %.0101, %651 ], [ %.0101, %650 ], [ %.0101, %640 ], [ %.0101, %630 ], [ %.0101, %629 ], [ %.0101, %619 ], [ %.0101, %609 ], [ %.0101, %608 ], [ %.0101, %607 ], [ %.0101, %597 ], [ %.0101, %587 ], [ %.0101, %585 ], [ %.0101, %574 ], [ %.0101, %564 ], [ %.0101, %563 ], [ %.0101, %562 ], [ %.0101, %561 ], [ %.0101, %560 ], [ %.0101, %559 ], [ %.0101, %558 ], [ %.0101, %557 ], [ %.0101, %556 ], [ %.0101, %547 ], [ %.0101, %539 ], [ %.0101, %531 ], [ %.0101, %529 ], [ %.0101, %518 ], [ %.0101, %508 ], [ %.0101, %506 ], [ %.0101, %495 ], [ %.0101, %485 ], [ %.0101, %482 ], [ %.0101, %481 ], [ %.0101, %471 ], [ %.0101, %461 ], [ %.0101, %459 ], [ %.0101, %443 ], [ %.0101, %433 ], [ %.0101, %425 ], [ %.0101, %417 ], [ %.0101, %414 ], [ %.0101, %411 ], [ %.0101, %410 ], [ %.0101, %400 ], [ %.0101, %390 ], [ %.0101, %388 ], [ %.0101, %373 ], [ %.0101, %363 ], [ %.0101, %355 ], [ %.0101, %348 ], [ %.0101, %346 ], [ %.0101, %335 ], [ %.0101, %325 ], [ %.0101, %323 ], [ %.0101, %312 ], [ %.0101, %302 ], [ %.0101, %301 ], [ %.0101, %292 ], [ %.0101, %284 ], [ %.0101, %275 ], [ %.0101, %273 ], [ %.0101, %262 ], [ %.0101, %252 ], [ %.0101, %250 ], [ %.0101, %239 ], [ %.0101, %229 ], [ %.0101, %228 ], [ %.0101, %220 ], [ %.0101, %212 ], [ %.0101, %205 ], [ %.0101, %202 ], [ %.0101, %201 ], [ %.0101, %194 ], [ %.0101, %187 ], [ %.0101, %179 ], [ %.0101, %176 ], [ %.0101, %174 ], [ %.0101, %163 ], [ %.0101, %153 ], [ %.0101, %152 ], [ %.0101, %142 ], [ %.0101, %132 ], [ %.0101, %124 ], [ %.0101, %117 ], [ %.0101, %109 ], [ %.0101, %106 ], [ %.0101, %99 ], [ %.0101, %96 ], [ %.0101, %95 ], [ %.0101, %92 ], [ %.0101, %91 ], [ %.0101, %81 ], [ %.0101, %71 ], [ %.0101, %70 ], [ %.0101, %67 ], [ %.0101, %65 ], [ %.0101, %64 ], [ 1, %63 ], [ %.0101, %57 ], [ %.0101, %55 ], [ %.0101, %44 ], [ %.0101, %34 ], [ %.0101, %33 ], [ 0, %23 ], [ %.0101, %13 ]
  %.099.be = phi i32 [ %.099, %12 ], [ %.099, %698 ], [ %.099, %697 ], [ %.099, %695 ], [ %.099, %694 ], [ %.099, %693 ], [ %.099, %692 ], [ %.099, %691 ], [ %.099, %690 ], [ %.099, %689 ], [ %.099, %688 ], [ %.099, %687 ], [ %.099, %686 ], [ %.099, %685 ], [ %.099, %684 ], [ %.099, %683 ], [ %.099, %682 ], [ %.099, %681 ], [ %.099, %680 ], [ %.099, %679 ], [ 0, %678 ], [ %.099, %674 ], [ %.099, %673 ], [ %.099, %672 ], [ %.099, %661 ], [ %.099, %651 ], [ %.099, %650 ], [ %.099, %640 ], [ %.099, %630 ], [ %.099, %629 ], [ %.099, %619 ], [ %.099, %609 ], [ %.099, %608 ], [ %.099, %607 ], [ %.099, %597 ], [ %.099, %587 ], [ %.099, %585 ], [ %.099, %574 ], [ %.099, %564 ], [ %.099, %563 ], [ %.099, %562 ], [ %.099, %561 ], [ %.099, %560 ], [ %.099, %559 ], [ %.099, %558 ], [ %.099, %557 ], [ %.099, %556 ], [ %.099, %547 ], [ %.099, %539 ], [ %.099, %531 ], [ %.099, %529 ], [ %.099, %518 ], [ %.099, %508 ], [ %.099, %506 ], [ %.099, %495 ], [ %.099, %485 ], [ %.099, %482 ], [ %.099, %481 ], [ %.099, %471 ], [ %.099, %461 ], [ %.099, %459 ], [ %.099, %443 ], [ %.099, %433 ], [ %.099, %425 ], [ %.099, %417 ], [ %.099, %414 ], [ %.099, %411 ], [ %.099, %410 ], [ %.099, %400 ], [ %.099, %390 ], [ %.099, %388 ], [ %.099, %373 ], [ %.099, %363 ], [ %.099, %355 ], [ %.099, %348 ], [ %.099, %346 ], [ %.099, %335 ], [ %.099, %325 ], [ %.099, %323 ], [ %.099, %312 ], [ %.099, %302 ], [ %.099, %301 ], [ %.099, %292 ], [ %.099, %284 ], [ %.099, %275 ], [ %.099, %273 ], [ %.099, %262 ], [ %.099, %252 ], [ %.099, %250 ], [ %.099, %239 ], [ %.099, %229 ], [ %.099, %228 ], [ %.099, %220 ], [ %.099, %212 ], [ %.099, %205 ], [ %.099, %202 ], [ %.099, %201 ], [ %.099, %194 ], [ %.099, %187 ], [ %.099, %179 ], [ %.099, %176 ], [ %.099, %174 ], [ %.099, %163 ], [ %.099, %153 ], [ %.099, %152 ], [ %.099, %142 ], [ %.099, %132 ], [ %.099, %124 ], [ %.099, %117 ], [ %.099, %109 ], [ %.099, %106 ], [ %.099, %99 ], [ %.099, %96 ], [ %.099, %95 ], [ %.099, %92 ], [ %.099, %91 ], [ %.099, %81 ], [ %.099, %71 ], [ %.099, %70 ], [ %.099, %67 ], [ %66, %65 ], [ %.099, %64 ], [ %.099, %63 ], [ %.099, %57 ], [ %.099, %55 ], [ %.099, %44 ], [ %.099, %34 ], [ %.099, %33 ], [ 0, %23 ], [ %.099, %13 ]
  %.097.be = phi i8 [ %.097, %12 ], [ %.097, %698 ], [ %.097, %697 ], [ %.097, %695 ], [ %.097, %694 ], [ %.097, %693 ], [ %.097, %692 ], [ %.097, %691 ], [ 70, %690 ], [ %.097, %689 ], [ 69, %688 ], [ %.097, %687 ], [ %.097, %686 ], [ %.097, %685 ], [ %.097, %684 ], [ %.097, %683 ], [ %.097, %682 ], [ 67, %681 ], [ 0, %680 ], [ %.097, %679 ], [ %.097, %678 ], [ %.097, %674 ], [ %.097, %673 ], [ %.097, %672 ], [ %.097, %661 ], [ %.097, %651 ], [ %.097, %650 ], [ %.097, %640 ], [ %.097, %630 ], [ %.097, %629 ], [ %.097, %619 ], [ %.097, %609 ], [ %.097, %608 ], [ %.097, %607 ], [ %.097, %597 ], [ %.097, %587 ], [ %.097, %585 ], [ %.097, %574 ], [ %.097, %564 ], [ %.097, %563 ], [ %.097, %562 ], [ %.097, %561 ], [ %.097, %560 ], [ %.097, %559 ], [ %.097, %558 ], [ %.097, %557 ], [ 71, %556 ], [ %.097, %547 ], [ %.097, %539 ], [ %.097, %531 ], [ %.097, %529 ], [ %.097, %518 ], [ %.097, %508 ], [ %.097, %506 ], [ %.097, %495 ], [ %.097, %485 ], [ %.097, %482 ], [ %.097, %481 ], [ 70, %471 ], [ %.097, %461 ], [ %.097, %459 ], [ %.097, %443 ], [ %.097, %433 ], [ %.097, %425 ], [ %.097, %417 ], [ %.097, %414 ], [ %.097, %411 ], [ %.097, %410 ], [ 69, %400 ], [ %.097, %390 ], [ %.097, %388 ], [ %.097, %373 ], [ %.097, %363 ], [ %.097, %355 ], [ %.097, %348 ], [ %.097, %346 ], [ %.097, %335 ], [ %.097, %325 ], [ %.097, %323 ], [ %.097, %312 ], [ %.097, %302 ], [ 68, %301 ], [ %.097, %292 ], [ %.097, %284 ], [ %.097, %275 ], [ %.097, %273 ], [ %.097, %262 ], [ %.097, %252 ], [ %.097, %250 ], [ %.097, %239 ], [ %.097, %229 ], [ 66, %228 ], [ %.097, %220 ], [ %.097, %212 ], [ %.097, %205 ], [ %.097, %202 ], [ 65, %201 ], [ %.097, %194 ], [ %.097, %187 ], [ %.097, %179 ], [ %.097, %176 ], [ %.097, %174 ], [ %.097, %163 ], [ %.097, %153 ], [ %.097, %152 ], [ 67, %142 ], [ %.097, %132 ], [ %.097, %124 ], [ %.097, %117 ], [ %.097, %109 ], [ %.097, %106 ], [ %.097, %99 ], [ %.097, %96 ], [ %.097, %95 ], [ %.097, %92 ], [ %.097, %91 ], [ 0, %81 ], [ %.097, %71 ], [ %.097, %70 ], [ %.097, %67 ], [ %.097, %65 ], [ %.097, %64 ], [ %.097, %63 ], [ %.097, %57 ], [ %.097, %55 ], [ %.097, %44 ], [ %.097, %34 ], [ %.097, %33 ], [ %.097, %23 ], [ %.097, %13 ]
  %.095.be = phi i32 [ %.095, %12 ], [ %699, %698 ], [ %.095, %697 ], [ %.095, %695 ], [ %.095, %694 ], [ %.095, %693 ], [ %.095, %692 ], [ %.095, %691 ], [ %.095, %690 ], [ %.095, %689 ], [ %.095, %688 ], [ %.095, %687 ], [ %.095, %686 ], [ %.095, %685 ], [ %.095, %684 ], [ %.095, %683 ], [ %.095, %682 ], [ %.095, %681 ], [ 0, %680 ], [ %.095, %679 ], [ %.095, %678 ], [ %.095, %674 ], [ %.095, %673 ], [ %.095, %672 ], [ %662, %661 ], [ %.095, %651 ], [ %.095, %650 ], [ %.095, %640 ], [ %.095, %630 ], [ %.095, %629 ], [ %.095, %619 ], [ %.095, %609 ], [ %.095, %608 ], [ %.095, %607 ], [ %.095, %597 ], [ %.095, %587 ], [ %.095, %585 ], [ %.095, %574 ], [ %.095, %564 ], [ %.095, %563 ], [ %.095, %562 ], [ %.095, %561 ], [ %.095, %560 ], [ %.095, %559 ], [ %.095, %558 ], [ %.095, %557 ], [ %.095, %556 ], [ %.095, %547 ], [ %.095, %539 ], [ %.095, %531 ], [ %.095, %529 ], [ %.095, %518 ], [ %.095, %508 ], [ %.095, %506 ], [ %.095, %495 ], [ %.095, %485 ], [ %.095, %482 ], [ %.095, %481 ], [ %.095, %471 ], [ %.095, %461 ], [ %.095, %459 ], [ %.095, %443 ], [ %.095, %433 ], [ %.095, %425 ], [ %.095, %417 ], [ %.095, %414 ], [ %.095, %411 ], [ %.095, %410 ], [ %.095, %400 ], [ %.095, %390 ], [ %.095, %388 ], [ %.095, %373 ], [ %.095, %363 ], [ %.095, %355 ], [ %.095, %348 ], [ %.095, %346 ], [ %.095, %335 ], [ %.095, %325 ], [ %.095, %323 ], [ %.095, %312 ], [ %.095, %302 ], [ %.095, %301 ], [ %.095, %292 ], [ %.095, %284 ], [ %.095, %275 ], [ %.095, %273 ], [ %.095, %262 ], [ %.095, %252 ], [ %.095, %250 ], [ %.095, %239 ], [ %.095, %229 ], [ %.095, %228 ], [ %.095, %220 ], [ %.095, %212 ], [ %.095, %205 ], [ %.095, %202 ], [ %.095, %201 ], [ %.095, %194 ], [ %.095, %187 ], [ %.095, %179 ], [ %.095, %176 ], [ %.095, %174 ], [ %.095, %163 ], [ %.095, %153 ], [ %.095, %152 ], [ %.095, %142 ], [ %.095, %132 ], [ %.095, %124 ], [ %.095, %117 ], [ %.095, %109 ], [ %.095, %106 ], [ %.095, %99 ], [ %.095, %96 ], [ %.095, %95 ], [ %.095, %92 ], [ %.095, %91 ], [ 0, %81 ], [ %.095, %71 ], [ %.095, %70 ], [ %.095, %67 ], [ %.095, %65 ], [ %.095, %64 ], [ %.095, %63 ], [ %.095, %57 ], [ %.095, %55 ], [ %.095, %44 ], [ %.095, %34 ], [ %.095, %33 ], [ %.095, %23 ], [ %.095, %13 ]
  %.093.be = phi i32 [ %.093, %12 ], [ %.093, %698 ], [ %.093, %697 ], [ %696, %695 ], [ %.093, %694 ], [ %.093, %693 ], [ %.093, %692 ], [ %.093, %691 ], [ %.093, %690 ], [ %.093, %689 ], [ %.093, %688 ], [ %.093, %687 ], [ %.093, %686 ], [ %.093, %685 ], [ %.093, %684 ], [ %.093, %683 ], [ %.093, %682 ], [ %.093, %681 ], [ %.093, %680 ], [ %.093, %679 ], [ %.093, %678 ], [ %.093, %674 ], [ %.093, %673 ], [ %.093, %672 ], [ %.093, %661 ], [ %.093, %651 ], [ %.093, %650 ], [ %.093, %640 ], [ %.093, %630 ], [ %.093, %629 ], [ %.neg, %619 ], [ %.093, %609 ], [ %.093, %608 ], [ %.093, %607 ], [ %.093, %597 ], [ %.093, %587 ], [ %.093, %585 ], [ %.093, %574 ], [ %.093, %564 ], [ %.093, %563 ], [ %.093, %562 ], [ %.093, %561 ], [ %.093, %560 ], [ %.093, %559 ], [ %.093, %558 ], [ %.093, %557 ], [ %.093, %556 ], [ %.093, %547 ], [ %.093, %539 ], [ %.093, %531 ], [ %.093, %529 ], [ %.093, %518 ], [ %.093, %508 ], [ %.093, %506 ], [ %.093, %495 ], [ %.093, %485 ], [ %.093, %482 ], [ %.093, %481 ], [ %.093, %471 ], [ %.093, %461 ], [ %.093, %459 ], [ %.093, %443 ], [ %.093, %433 ], [ %.093, %425 ], [ %.093, %417 ], [ %.093, %414 ], [ %.093, %411 ], [ %.093, %410 ], [ %.093, %400 ], [ %.093, %390 ], [ %.093, %388 ], [ %.093, %373 ], [ %.093, %363 ], [ %.093, %355 ], [ %.093, %348 ], [ %.093, %346 ], [ %.093, %335 ], [ %.093, %325 ], [ %.093, %323 ], [ %.093, %312 ], [ %.093, %302 ], [ %.093, %301 ], [ %.093, %292 ], [ %.093, %284 ], [ %.093, %275 ], [ %.093, %273 ], [ %.093, %262 ], [ %.093, %252 ], [ %.093, %250 ], [ %.093, %239 ], [ %.093, %229 ], [ %.093, %228 ], [ %.093, %220 ], [ %.093, %212 ], [ %.093, %205 ], [ %.093, %202 ], [ %.093, %201 ], [ %.093, %194 ], [ %.093, %187 ], [ %.093, %179 ], [ %.093, %176 ], [ %.093, %174 ], [ %.093, %163 ], [ %.093, %153 ], [ %.093, %152 ], [ %.093, %142 ], [ %.093, %132 ], [ %.093, %124 ], [ %.093, %117 ], [ %.093, %109 ], [ %.093, %106 ], [ %.093, %99 ], [ %.093, %96 ], [ 0, %95 ], [ %.093, %92 ], [ %.093, %91 ], [ %.093, %81 ], [ %.093, %71 ], [ %.093, %70 ], [ %.093, %67 ], [ %.093, %65 ], [ %.093, %64 ], [ %.093, %63 ], [ %.093, %57 ], [ %.093, %55 ], [ %.093, %44 ], [ %.093, %34 ], [ %.093, %33 ], [ %.093, %23 ], [ %.093, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -1689317869, %698 ], [ 913618924, %697 ], [ 2101720831, %695 ], [ 856584413, %694 ], [ 1481881338, %693 ], [ 807027497, %692 ], [ -818253117, %691 ], [ -1589112379, %690 ], [ 1398423555, %689 ], [ 1203171855, %688 ], [ 1679423174, %687 ], [ -791269341, %686 ], [ -1276708006, %685 ], [ -402686872, %684 ], [ -549392280, %683 ], [ 110621403, %682 ], [ -514201737, %681 ], [ -1580928878, %680 ], [ 466201327, %679 ], [ 1175844949, %678 ], [ 582583940, %674 ], [ -556485983, %673 ], [ 1789813869, %672 ], [ %671, %661 ], [ %660, %651 ], [ -301948218, %650 ], [ %649, %640 ], [ %639, %630 ], [ -501553333, %629 ], [ %628, %619 ], [ %618, %609 ], [ -1913658734, %608 ], [ -556485983, %607 ], [ %606, %597 ], [ %596, %587 ], [ %586, %585 ], [ %584, %574 ], [ %573, %564 ], [ -932907954, %563 ], [ 1552530468, %562 ], [ -1201918535, %561 ], [ -1863624920, %560 ], [ -2019345425, %559 ], [ 1891048584, %558 ], [ 1572497304, %557 ], [ -108436228, %556 ], [ %555, %547 ], [ %546, %539 ], [ %538, %531 ], [ %530, %529 ], [ %528, %518 ], [ %517, %508 ], [ %507, %506 ], [ %505, %495 ], [ %494, %485 ], [ %484, %482 ], [ 1572497304, %481 ], [ %480, %471 ], [ %470, %461 ], [ %460, %459 ], [ %458, %443 ], [ %442, %433 ], [ %432, %425 ], [ %424, %417 ], [ %416, %414 ], [ %413, %411 ], [ 1891048584, %410 ], [ %409, %400 ], [ %399, %390 ], [ %389, %388 ], [ %387, %373 ], [ %372, %363 ], [ %362, %355 ], [ %354, %348 ], [ %347, %346 ], [ %345, %335 ], [ %334, %325 ], [ %324, %323 ], [ %322, %312 ], [ %311, %302 ], [ -2019345425, %301 ], [ %300, %292 ], [ %291, %284 ], [ %283, %275 ], [ %274, %273 ], [ %272, %262 ], [ %261, %252 ], [ %251, %250 ], [ %249, %239 ], [ %238, %229 ], [ -1863624920, %228 ], [ %227, %220 ], [ %219, %212 ], [ %211, %205 ], [ %204, %202 ], [ -1201918535, %201 ], [ %200, %194 ], [ %193, %187 ], [ %186, %179 ], [ %178, %176 ], [ %175, %174 ], [ %173, %163 ], [ %162, %153 ], [ 1552530468, %152 ], [ %151, %142 ], [ %141, %132 ], [ %131, %124 ], [ %123, %117 ], [ %116, %109 ], [ %108, %106 ], [ %105, %99 ], [ %98, %96 ], [ -501553333, %95 ], [ %94, %92 ], [ 1789813869, %91 ], [ %90, %81 ], [ %80, %71 ], [ -1177403156, %70 ], [ %69, %67 ], [ -124473143, %65 ], [ -976190959, %64 ], [ -1825693088, %63 ], [ %62, %57 ], [ %56, %55 ], [ %54, %44 ], [ %43, %34 ], [ -124473143, %33 ], [ %32, %23 ], [ %22, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* @x, align 4
  %15 = load i32, i32* @y, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 1175844949, i32 -484151376
  br label %.backedge

23:                                               ; preds = %12
  %24 = load i32, i32* @x, align 4
  %25 = load i32, i32* @y, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -153680097, i32 -484151376
  br label %.backedge

33:                                               ; preds = %12
  br label %.backedge

34:                                               ; preds = %12
  %35 = load i32, i32* @x, align 4
  %36 = load i32, i32* @y, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 466201327, i32 1962940616
  br label %.backedge

44:                                               ; preds = %12
  %45 = icmp slt i32 %.099, 8
  store i1 %45, i1* %11, align 1
  %46 = load i32, i32* @x, align 4
  %47 = load i32, i32* @y, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -721404492, i32 1962940616
  br label %.backedge

55:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %11, align 1
  %56 = select i1 %.0..0..0., i32 -1524619933, i32 -32906794
  br label %.backedge

57:                                               ; preds = %12
  %58 = sext i32 %.099 to i64
  %59 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %58, i64 0
  %60 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %59)
  %61 = icmp eq i32 %60, -1
  %62 = select i1 %61, i32 1478268334, i32 -1825693088
  br label %.backedge

63:                                               ; preds = %12
  br label %.backedge

64:                                               ; preds = %12
  br label %.backedge

65:                                               ; preds = %12
  %66 = add i32 %.099, 1
  br label %.backedge

67:                                               ; preds = %12
  %68 = and i8 %.0101, 1
  %.not = icmp eq i8 %68, 0
  %69 = select i1 %.not, i32 -209650113, i32 -878650808
  br label %.backedge

70:                                               ; preds = %12
  br label %.backedge

71:                                               ; preds = %12
  %72 = load i32, i32* @x, align 4
  %73 = load i32, i32* @y, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 -1580928878, i32 462033888
  br label %.backedge

81:                                               ; preds = %12
  %82 = load i32, i32* @x, align 4
  %83 = load i32, i32* @y, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 165138183, i32 462033888
  br label %.backedge

91:                                               ; preds = %12
  br label %.backedge

92:                                               ; preds = %12
  %93 = icmp slt i32 %.095, 8
  %94 = select i1 %93, i32 -1972459894, i32 1591382132
  br label %.backedge

95:                                               ; preds = %12
  br label %.backedge

96:                                               ; preds = %12
  %97 = icmp slt i32 %.093, 8
  %98 = select i1 %97, i32 -1950219295, i32 1468664602
  br label %.backedge

99:                                               ; preds = %12
  %100 = sext i32 %.095 to i64
  %101 = sext i32 %.093 to i64
  %102 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %100, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = icmp eq i8 %103, 49
  %105 = select i1 %104, i32 556832202, i32 -932907954
  br label %.backedge

106:                                              ; preds = %12
  %107 = icmp slt i32 %.093, 5
  %108 = select i1 %107, i32 -2080859905, i32 1508054392
  br label %.backedge

109:                                              ; preds = %12
  %110 = sext i32 %.095 to i64
  %111 = add i32 %.093, 1
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %110, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 49
  %116 = select i1 %115, i32 927178384, i32 1508054392
  br label %.backedge

117:                                              ; preds = %12
  %118 = sext i32 %.095 to i64
  %.neg113 = add i32 %.093, 2
  %119 = sext i32 %.neg113 to i64
  %120 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %118, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = icmp eq i8 %121, 49
  %123 = select i1 %122, i32 -231663880, i32 1508054392
  br label %.backedge

124:                                              ; preds = %12
  %125 = sext i32 %.095 to i64
  %126 = add i32 %.093, 3
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %125, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 49
  %131 = select i1 %130, i32 2071797756, i32 1508054392
  br label %.backedge

132:                                              ; preds = %12
  %133 = load i32, i32* @x, align 4
  %134 = load i32, i32* @y, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 -514201737, i32 -1532999169
  br label %.backedge

142:                                              ; preds = %12
  %143 = load i32, i32* @x, align 4
  %144 = load i32, i32* @y, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 -1615889760, i32 -1532999169
  br label %.backedge

152:                                              ; preds = %12
  br label %.backedge

153:                                              ; preds = %12
  %154 = load i32, i32* @x, align 4
  %155 = load i32, i32* @y, align 4
  %156 = add i32 %154, -1
  %157 = mul i32 %156, %154
  %158 = and i32 %157, 1
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %160, %159
  %162 = select i1 %161, i32 110621403, i32 -1753662406
  br label %.backedge

163:                                              ; preds = %12
  %164 = icmp slt i32 %.093, 7
  store i1 %164, i1* %10, align 1
  %165 = load i32, i32* @x, align 4
  %166 = load i32, i32* @y, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 -155591735, i32 -1753662406
  br label %.backedge

174:                                              ; preds = %12
  %.0..0..0.83 = load volatile i1, i1* %10, align 1
  %175 = select i1 %.0..0..0.83, i32 -1956533292, i32 -129936256
  br label %.backedge

176:                                              ; preds = %12
  %177 = icmp slt i32 %.095, 7
  %178 = select i1 %177, i32 1006229613, i32 -129936256
  br label %.backedge

179:                                              ; preds = %12
  %180 = sext i32 %.095 to i64
  %181 = add i32 %.093, 1
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %180, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, 49
  %186 = select i1 %185, i32 -910036547, i32 -129936256
  br label %.backedge

187:                                              ; preds = %12
  %.neg112 = add i32 %.095, 1
  %188 = sext i32 %.neg112 to i64
  %189 = sext i32 %.093 to i64
  %190 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %188, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = icmp eq i8 %191, 49
  %193 = select i1 %192, i32 -1375008357, i32 -129936256
  br label %.backedge

194:                                              ; preds = %12
  %.neg110 = add i32 %.095, 1
  %195 = sext i32 %.neg110 to i64
  %.neg111 = add i32 %.093, 1
  %196 = sext i32 %.neg111 to i64
  %197 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %195, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = icmp eq i8 %198, 49
  %200 = select i1 %199, i32 -886398202, i32 -129936256
  br label %.backedge

201:                                              ; preds = %12
  br label %.backedge

202:                                              ; preds = %12
  %203 = icmp slt i32 %.095, 5
  %204 = select i1 %203, i32 374797390, i32 874409332
  br label %.backedge

205:                                              ; preds = %12
  %.neg109 = add i32 %.095, 1
  %206 = sext i32 %.neg109 to i64
  %207 = sext i32 %.093 to i64
  %208 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %206, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = icmp eq i8 %209, 49
  %211 = select i1 %210, i32 -1460936662, i32 874409332
  br label %.backedge

212:                                              ; preds = %12
  %213 = add i32 %.095, 2
  %214 = sext i32 %213 to i64
  %215 = sext i32 %.093 to i64
  %216 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %214, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = icmp eq i8 %217, 49
  %219 = select i1 %218, i32 -2115786193, i32 874409332
  br label %.backedge

220:                                              ; preds = %12
  %221 = add i32 %.095, 3
  %222 = sext i32 %221 to i64
  %223 = sext i32 %.093 to i64
  %224 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %222, i64 %223
  %225 = load i8, i8* %224, align 1
  %226 = icmp eq i8 %225, 49
  %227 = select i1 %226, i32 -1642152756, i32 874409332
  br label %.backedge

228:                                              ; preds = %12
  br label %.backedge

229:                                              ; preds = %12
  %230 = load i32, i32* @x, align 4
  %231 = load i32, i32* @y, align 4
  %232 = add i32 %230, -1
  %233 = mul i32 %232, %230
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %236, %235
  %238 = select i1 %237, i32 -549392280, i32 213547223
  br label %.backedge

239:                                              ; preds = %12
  %240 = icmp slt i32 %.095, 6
  store i1 %240, i1* %9, align 1
  %241 = load i32, i32* @x, align 4
  %242 = load i32, i32* @y, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 1438265443, i32 213547223
  br label %.backedge

250:                                              ; preds = %12
  %.0..0..0.84 = load volatile i1, i1* %9, align 1
  %251 = select i1 %.0..0..0.84, i32 258454692, i32 388312010
  br label %.backedge

252:                                              ; preds = %12
  %253 = load i32, i32* @x, align 4
  %254 = load i32, i32* @y, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 -402686872, i32 -1748912824
  br label %.backedge

262:                                              ; preds = %12
  %263 = icmp sgt i32 %.093, 0
  store i1 %263, i1* %8, align 1
  %264 = load i32, i32* @x, align 4
  %265 = load i32, i32* @y, align 4
  %266 = add i32 %264, -1
  %267 = mul i32 %266, %264
  %268 = and i32 %267, 1
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %270, %269
  %272 = select i1 %271, i32 1598174440, i32 -1748912824
  br label %.backedge

273:                                              ; preds = %12
  %.0..0..0.85 = load volatile i1, i1* %8, align 1
  %274 = select i1 %.0..0..0.85, i32 618596936, i32 388312010
  br label %.backedge

275:                                              ; preds = %12
  %276 = add i32 %.095, 1
  %277 = sext i32 %276 to i64
  %278 = add i32 %.093, -1
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %277, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = icmp eq i8 %281, 49
  %283 = select i1 %282, i32 -862681137, i32 388312010
  br label %.backedge

284:                                              ; preds = %12
  %285 = add i32 %.095, 1
  %286 = sext i32 %285 to i64
  %287 = sext i32 %.093 to i64
  %288 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %286, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = icmp eq i8 %289, 49
  %291 = select i1 %290, i32 1317236872, i32 388312010
  br label %.backedge

292:                                              ; preds = %12
  %293 = add i32 %.095, 2
  %294 = sext i32 %293 to i64
  %295 = add i32 %.093, -1
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %294, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = icmp eq i8 %298, 49
  %300 = select i1 %299, i32 -1159012913, i32 388312010
  br label %.backedge

301:                                              ; preds = %12
  br label %.backedge

302:                                              ; preds = %12
  %303 = load i32, i32* @x, align 4
  %304 = load i32, i32* @y, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 -1276708006, i32 1778297927
  br label %.backedge

312:                                              ; preds = %12
  %313 = icmp slt i32 %.095, 7
  store i1 %313, i1* %7, align 1
  %314 = load i32, i32* @x, align 4
  %315 = load i32, i32* @y, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 -459162111, i32 1778297927
  br label %.backedge

323:                                              ; preds = %12
  %.0..0..0.86 = load volatile i1, i1* %7, align 1
  %324 = select i1 %.0..0..0.86, i32 1580149272, i32 -386986259
  br label %.backedge

325:                                              ; preds = %12
  %326 = load i32, i32* @x, align 4
  %327 = load i32, i32* @y, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 -791269341, i32 824977332
  br label %.backedge

335:                                              ; preds = %12
  %336 = icmp slt i32 %.093, 6
  store i1 %336, i1* %6, align 1
  %337 = load i32, i32* @x, align 4
  %338 = load i32, i32* @y, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 -930222160, i32 824977332
  br label %.backedge

346:                                              ; preds = %12
  %.0..0..0.87 = load volatile i1, i1* %6, align 1
  %347 = select i1 %.0..0..0.87, i32 -1455817627, i32 -386986259
  br label %.backedge

348:                                              ; preds = %12
  %349 = sext i32 %.095 to i64
  %.neg108 = add i32 %.093, 1
  %350 = sext i32 %.neg108 to i64
  %351 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %349, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = icmp eq i8 %352, 49
  %354 = select i1 %353, i32 175494010, i32 -386986259
  br label %.backedge

355:                                              ; preds = %12
  %356 = add i32 %.095, 1
  %357 = sext i32 %356 to i64
  %.neg107 = add i32 %.093, 1
  %358 = sext i32 %.neg107 to i64
  %359 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %357, i64 %358
  %360 = load i8, i8* %359, align 1
  %361 = icmp eq i8 %360, 49
  %362 = select i1 %361, i32 500441106, i32 -386986259
  br label %.backedge

363:                                              ; preds = %12
  %364 = load i32, i32* @x, align 4
  %365 = load i32, i32* @y, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 1679423174, i32 -380366932
  br label %.backedge

373:                                              ; preds = %12
  %.neg105 = add i32 %.095, 1
  %374 = sext i32 %.neg105 to i64
  %.neg106 = add i32 %.093, 2
  %375 = sext i32 %.neg106 to i64
  %376 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %374, i64 %375
  %377 = load i8, i8* %376, align 1
  %378 = icmp eq i8 %377, 49
  store i1 %378, i1* %5, align 1
  %379 = load i32, i32* @x, align 4
  %380 = load i32, i32* @y, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 -1353912478, i32 -380366932
  br label %.backedge

388:                                              ; preds = %12
  %.0..0..0.88 = load volatile i1, i1* %5, align 1
  %389 = select i1 %.0..0..0.88, i32 -1307409918, i32 -386986259
  br label %.backedge

390:                                              ; preds = %12
  %391 = load i32, i32* @x, align 4
  %392 = load i32, i32* @y, align 4
  %393 = add i32 %391, -1
  %394 = mul i32 %393, %391
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %397, %396
  %399 = select i1 %398, i32 1203171855, i32 894453622
  br label %.backedge

400:                                              ; preds = %12
  %401 = load i32, i32* @x, align 4
  %402 = load i32, i32* @y, align 4
  %403 = add i32 %401, -1
  %404 = mul i32 %403, %401
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %407, %406
  %409 = select i1 %408, i32 982037296, i32 894453622
  br label %.backedge

410:                                              ; preds = %12
  br label %.backedge

411:                                              ; preds = %12
  %412 = icmp slt i32 %.095, 6
  %413 = select i1 %412, i32 2046002621, i32 -1798742773
  br label %.backedge

414:                                              ; preds = %12
  %415 = icmp slt i32 %.093, 7
  %416 = select i1 %415, i32 1649103735, i32 -1798742773
  br label %.backedge

417:                                              ; preds = %12
  %.neg104 = add i32 %.095, 1
  %418 = sext i32 %.neg104 to i64
  %419 = add i32 %.093, 1
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %418, i64 %420
  %422 = load i8, i8* %421, align 1
  %423 = icmp eq i8 %422, 49
  %424 = select i1 %423, i32 1102248293, i32 -1798742773
  br label %.backedge

425:                                              ; preds = %12
  %426 = add i32 %.095, 1
  %427 = sext i32 %426 to i64
  %428 = sext i32 %.093 to i64
  %429 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %427, i64 %428
  %430 = load i8, i8* %429, align 1
  %431 = icmp eq i8 %430, 49
  %432 = select i1 %431, i32 -85142883, i32 -1798742773
  br label %.backedge

433:                                              ; preds = %12
  %434 = load i32, i32* @x, align 4
  %435 = load i32, i32* @y, align 4
  %436 = add i32 %434, -1
  %437 = mul i32 %436, %434
  %438 = and i32 %437, 1
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %440, %439
  %442 = select i1 %441, i32 1398423555, i32 783332612
  br label %.backedge

443:                                              ; preds = %12
  %.neg103 = add i32 %.095, 2
  %444 = sext i32 %.neg103 to i64
  %445 = add i32 %.093, 1
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %444, i64 %446
  %448 = load i8, i8* %447, align 1
  %449 = icmp eq i8 %448, 49
  store i1 %449, i1* %4, align 1
  %450 = load i32, i32* @x, align 4
  %451 = load i32, i32* @y, align 4
  %452 = add i32 %450, -1
  %453 = mul i32 %452, %450
  %454 = and i32 %453, 1
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %456, %455
  %458 = select i1 %457, i32 1719270043, i32 783332612
  br label %.backedge

459:                                              ; preds = %12
  %.0..0..0.89 = load volatile i1, i1* %4, align 1
  %460 = select i1 %.0..0..0.89, i32 1232619345, i32 -1798742773
  br label %.backedge

461:                                              ; preds = %12
  %462 = load i32, i32* @x, align 4
  %463 = load i32, i32* @y, align 4
  %464 = add i32 %462, -1
  %465 = mul i32 %464, %462
  %466 = and i32 %465, 1
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %468, %467
  %470 = select i1 %469, i32 -1589112379, i32 1046241007
  br label %.backedge

471:                                              ; preds = %12
  %472 = load i32, i32* @x, align 4
  %473 = load i32, i32* @y, align 4
  %474 = add i32 %472, -1
  %475 = mul i32 %474, %472
  %476 = and i32 %475, 1
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %478, %477
  %480 = select i1 %479, i32 1137786447, i32 1046241007
  br label %.backedge

481:                                              ; preds = %12
  br label %.backedge

482:                                              ; preds = %12
  %483 = icmp slt i32 %.095, 7
  %484 = select i1 %483, i32 1421715775, i32 -108436228
  br label %.backedge

485:                                              ; preds = %12
  %486 = load i32, i32* @x, align 4
  %487 = load i32, i32* @y, align 4
  %488 = add i32 %486, -1
  %489 = mul i32 %488, %486
  %490 = and i32 %489, 1
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %492, %491
  %494 = select i1 %493, i32 -818253117, i32 -579858994
  br label %.backedge

495:                                              ; preds = %12
  %496 = icmp slt i32 %.093, 7
  store i1 %496, i1* %3, align 1
  %497 = load i32, i32* @x, align 4
  %498 = load i32, i32* @y, align 4
  %499 = add i32 %497, -1
  %500 = mul i32 %499, %497
  %501 = and i32 %500, 1
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %503, %502
  %505 = select i1 %504, i32 541891403, i32 -579858994
  br label %.backedge

506:                                              ; preds = %12
  %.0..0..0.90 = load volatile i1, i1* %3, align 1
  %507 = select i1 %.0..0..0.90, i32 -1539648786, i32 -108436228
  br label %.backedge

508:                                              ; preds = %12
  %509 = load i32, i32* @x, align 4
  %510 = load i32, i32* @y, align 4
  %511 = add i32 %509, -1
  %512 = mul i32 %511, %509
  %513 = and i32 %512, 1
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %515, %514
  %517 = select i1 %516, i32 807027497, i32 -1950859391
  br label %.backedge

518:                                              ; preds = %12
  %519 = icmp sgt i32 %.093, 0
  store i1 %519, i1* %2, align 1
  %520 = load i32, i32* @x, align 4
  %521 = load i32, i32* @y, align 4
  %522 = add i32 %520, -1
  %523 = mul i32 %522, %520
  %524 = and i32 %523, 1
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %526, %525
  %528 = select i1 %527, i32 423073856, i32 -1950859391
  br label %.backedge

529:                                              ; preds = %12
  %.0..0..0.91 = load volatile i1, i1* %2, align 1
  %530 = select i1 %.0..0..0.91, i32 -1648842021, i32 -108436228
  br label %.backedge

531:                                              ; preds = %12
  %532 = sext i32 %.095 to i64
  %533 = add i32 %.093, 1
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %532, i64 %534
  %536 = load i8, i8* %535, align 1
  %537 = icmp eq i8 %536, 49
  %538 = select i1 %537, i32 -1195872871, i32 -108436228
  br label %.backedge

539:                                              ; preds = %12
  %540 = add i32 %.095, 1
  %541 = sext i32 %540 to i64
  %542 = sext i32 %.093 to i64
  %543 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %541, i64 %542
  %544 = load i8, i8* %543, align 1
  %545 = icmp eq i8 %544, 49
  %546 = select i1 %545, i32 871293070, i32 -108436228
  br label %.backedge

547:                                              ; preds = %12
  %548 = add i32 %.095, 1
  %549 = sext i32 %548 to i64
  %550 = add i32 %.093, -1
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @m, i64 0, i64 %549, i64 %551
  %553 = load i8, i8* %552, align 1
  %554 = icmp eq i8 %553, 49
  %555 = select i1 %554, i32 561480344, i32 -108436228
  br label %.backedge

556:                                              ; preds = %12
  br label %.backedge

557:                                              ; preds = %12
  br label %.backedge

558:                                              ; preds = %12
  br label %.backedge

559:                                              ; preds = %12
  br label %.backedge

560:                                              ; preds = %12
  br label %.backedge

561:                                              ; preds = %12
  br label %.backedge

562:                                              ; preds = %12
  br label %.backedge

563:                                              ; preds = %12
  br label %.backedge

564:                                              ; preds = %12
  %565 = load i32, i32* @x, align 4
  %566 = load i32, i32* @y, align 4
  %567 = add i32 %565, -1
  %568 = mul i32 %567, %565
  %569 = and i32 %568, 1
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %571, %570
  %573 = select i1 %572, i32 1481881338, i32 -397795443
  br label %.backedge

574:                                              ; preds = %12
  %575 = icmp sgt i8 %.097, 0
  store i1 %575, i1* %1, align 1
  %576 = load i32, i32* @x, align 4
  %577 = load i32, i32* @y, align 4
  %578 = add i32 %576, -1
  %579 = mul i32 %578, %576
  %580 = and i32 %579, 1
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %577, 10
  %583 = or i1 %582, %581
  %584 = select i1 %583, i32 2105682861, i32 -397795443
  br label %.backedge

585:                                              ; preds = %12
  %.0..0..0.92 = load volatile i1, i1* %1, align 1
  %586 = select i1 %.0..0..0.92, i32 1214840402, i32 1671517491
  br label %.backedge

587:                                              ; preds = %12
  %588 = load i32, i32* @x, align 4
  %589 = load i32, i32* @y, align 4
  %590 = add i32 %588, -1
  %591 = mul i32 %590, %588
  %592 = and i32 %591, 1
  %593 = icmp eq i32 %592, 0
  %594 = icmp slt i32 %589, 10
  %595 = or i1 %594, %593
  %596 = select i1 %595, i32 856584413, i32 590739996
  br label %.backedge

597:                                              ; preds = %12
  %598 = load i32, i32* @x, align 4
  %599 = load i32, i32* @y, align 4
  %600 = add i32 %598, -1
  %601 = mul i32 %600, %598
  %602 = and i32 %601, 1
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %604, %603
  %606 = select i1 %605, i32 -1449327237, i32 590739996
  br label %.backedge

607:                                              ; preds = %12
  br label %.backedge

608:                                              ; preds = %12
  br label %.backedge

609:                                              ; preds = %12
  %610 = load i32, i32* @x, align 4
  %611 = load i32, i32* @y, align 4
  %612 = add i32 %610, -1
  %613 = mul i32 %612, %610
  %614 = and i32 %613, 1
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %616, %615
  %618 = select i1 %617, i32 2101720831, i32 -76148640
  br label %.backedge

619:                                              ; preds = %12
  %.neg = add i32 %.093, 1
  %620 = load i32, i32* @x, align 4
  %621 = load i32, i32* @y, align 4
  %622 = add i32 %620, -1
  %623 = mul i32 %622, %620
  %624 = and i32 %623, 1
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %626, %625
  %628 = select i1 %627, i32 -937160696, i32 -76148640
  br label %.backedge

629:                                              ; preds = %12
  br label %.backedge

630:                                              ; preds = %12
  %631 = load i32, i32* @x, align 4
  %632 = load i32, i32* @y, align 4
  %633 = add i32 %631, -1
  %634 = mul i32 %633, %631
  %635 = and i32 %634, 1
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %637, %636
  %639 = select i1 %638, i32 913618924, i32 -108505103
  br label %.backedge

640:                                              ; preds = %12
  %641 = load i32, i32* @x, align 4
  %642 = load i32, i32* @y, align 4
  %643 = add i32 %641, -1
  %644 = mul i32 %643, %641
  %645 = and i32 %644, 1
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %647, %646
  %649 = select i1 %648, i32 -1531356914, i32 -108505103
  br label %.backedge

650:                                              ; preds = %12
  br label %.backedge

651:                                              ; preds = %12
  %652 = load i32, i32* @x, align 4
  %653 = load i32, i32* @y, align 4
  %654 = add i32 %652, -1
  %655 = mul i32 %654, %652
  %656 = and i32 %655, 1
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %658, %657
  %660 = select i1 %659, i32 -1689317869, i32 678323347
  br label %.backedge

661:                                              ; preds = %12
  %662 = add i32 %.095, 1
  %663 = load i32, i32* @x, align 4
  %664 = load i32, i32* @y, align 4
  %665 = add i32 %663, -1
  %666 = mul i32 %665, %663
  %667 = and i32 %666, 1
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %664, 10
  %670 = or i1 %669, %668
  %671 = select i1 %670, i32 573011712, i32 678323347
  br label %.backedge

672:                                              ; preds = %12
  br label %.backedge

673:                                              ; preds = %12
  br label %.backedge

674:                                              ; preds = %12
  %675 = sext i8 %.097 to i32
  %676 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %675)
  br label %.backedge

677:                                              ; preds = %12
  ret i32 0

678:                                              ; preds = %12
  br label %.backedge

679:                                              ; preds = %12
  br label %.backedge

680:                                              ; preds = %12
  br label %.backedge

681:                                              ; preds = %12
  br label %.backedge

682:                                              ; preds = %12
  br label %.backedge

683:                                              ; preds = %12
  br label %.backedge

684:                                              ; preds = %12
  br label %.backedge

685:                                              ; preds = %12
  br label %.backedge

686:                                              ; preds = %12
  br label %.backedge

687:                                              ; preds = %12
  br label %.backedge

688:                                              ; preds = %12
  br label %.backedge

689:                                              ; preds = %12
  br label %.backedge

690:                                              ; preds = %12
  br label %.backedge

691:                                              ; preds = %12
  br label %.backedge

692:                                              ; preds = %12
  br label %.backedge

693:                                              ; preds = %12
  br label %.backedge

694:                                              ; preds = %12
  br label %.backedge

695:                                              ; preds = %12
  %696 = add i32 %.093, 1
  br label %.backedge

697:                                              ; preds = %12
  br label %.backedge

698:                                              ; preds = %12
  %699 = add i32 %.095, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
