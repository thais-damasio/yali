; ModuleID = 'build_ollvm/programs/p03503/s738297623.ll'
source_filename = "Project_CodeNet_C++1400/p03503/s738297623.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_ = comdat any

$_ZSt3maxIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s738297623.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %10 = load i32, i32* %6, align 4
  %11 = zext i32 %10 to i64
  %12 = alloca [10 x i32], i64 %11, align 16
  %13 = alloca [11 x i32], i64 %11, align 16
  br label %14

14:                                               ; preds = %.backedge, %0
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ 0, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i8* [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.0 = phi i32 [ -1905621880, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1905621880, label %15
    i32 1382083823, label %25
    i32 -1488611301, label %37
    i32 -2034568720, label %39
    i32 -1882401592, label %40
    i32 1079589977, label %43
    i32 -121317422, label %48
    i32 -1471960998, label %50
    i32 2106180294, label %51
    i32 984405838, label %52
    i32 1953716724, label %53
    i32 -471080883, label %57
    i32 208113989, label %67
    i32 997185220, label %77
    i32 -1609438777, label %78
    i32 1868832094, label %88
    i32 1027746360, label %99
    i32 179136153, label %101
    i32 664827860, label %106
    i32 1802237770, label %107
    i32 1978521927, label %117
    i32 -1437880913, label %127
    i32 -2031547016, label %128
    i32 -945065073, label %130
    i32 101024790, label %140
    i32 -186874748, label %152
    i32 26397905, label %153
    i32 1863428848, label %156
    i32 -2035897693, label %161
    i32 689746706, label %171
    i32 1232072761, label %183
    i32 -535057611, label %185
    i32 -341506415, label %188
    i32 -537366766, label %189
    i32 -2067360821, label %190
    i32 780192046, label %200
    i32 -2121499298, label %211
    i32 1937852812, label %213
    i32 1070300263, label %217
    i32 -1079102651, label %218
    i32 669877209, label %222
    i32 -1499531360, label %229
    i32 1289989485, label %239
    i32 658691719, label %253
    i32 -1778976113, label %254
    i32 -1087495177, label %255
    i32 -1366214928, label %265
    i32 -34776855, label %276
    i32 -1736769432, label %277
    i32 1877495999, label %287
    i32 -940407730, label %297
    i32 587247268, label %298
    i32 -249376484, label %300
    i32 -1585178884, label %302
    i32 463977736, label %312
    i32 -1793430062, label %322
    i32 -1256168105, label %323
    i32 -2145781200, label %327
    i32 -1764854128, label %337
    i32 1116365101, label %339
    i32 -623385132, label %342
    i32 1818316476, label %344
    i32 1606074432, label %348
    i32 -105734114, label %349
    i32 127840922, label %350
    i32 -358999170, label %351
    i32 151590103, label %352
    i32 1090212187, label %355
    i32 28418041, label %356
    i32 -893219807, label %357
    i32 1894779330, label %361
    i32 -852135899, label %363
    i32 -196393245, label %364
  ]

.backedge:                                        ; preds = %14, %364, %363, %361, %357, %356, %355, %352, %351, %350, %349, %348, %342, %339, %337, %327, %323, %322, %312, %302, %300, %298, %297, %287, %277, %276, %265, %255, %254, %253, %239, %229, %222, %218, %217, %213, %211, %200, %190, %189, %188, %185, %183, %171, %161, %156, %153, %152, %140, %130, %128, %127, %117, %107, %106, %101, %99, %88, %78, %77, %67, %57, %53, %52, %51, %50, %48, %43, %40, %39, %37, %25, %15
  %.071.be = phi i32 [ %.071, %14 ], [ %.071, %364 ], [ %.071, %363 ], [ %.071, %361 ], [ %.071, %357 ], [ %.071, %356 ], [ %.071, %355 ], [ %354, %352 ], [ %.071, %351 ], [ %.071, %350 ], [ %.071, %349 ], [ %.071, %348 ], [ %.071, %342 ], [ %.071, %339 ], [ %.071, %337 ], [ %.071, %327 ], [ %.071, %323 ], [ %.071, %322 ], [ %.071, %312 ], [ %.071, %302 ], [ %.071, %300 ], [ %.071, %298 ], [ %.071, %297 ], [ %.071, %287 ], [ %.071, %277 ], [ %.071, %276 ], [ %.071, %265 ], [ %.071, %255 ], [ %.071, %254 ], [ %.071, %253 ], [ %.071, %239 ], [ %.071, %229 ], [ %.071, %222 ], [ %.071, %218 ], [ %.071, %217 ], [ %.071, %213 ], [ %.071, %211 ], [ %.071, %200 ], [ %.071, %190 ], [ %.071, %189 ], [ %.071, %188 ], [ %.071, %185 ], [ %.071, %183 ], [ %.071, %171 ], [ %.071, %161 ], [ %.071, %156 ], [ %.071, %153 ], [ %.071, %152 ], [ %142, %140 ], [ %.071, %130 ], [ %.071, %128 ], [ %.071, %127 ], [ %.071, %117 ], [ %.071, %107 ], [ %.071, %106 ], [ %.071, %101 ], [ %.071, %99 ], [ %.071, %88 ], [ %.071, %78 ], [ %.071, %77 ], [ %.071, %67 ], [ %.071, %57 ], [ %.071, %53 ], [ %.071, %52 ], [ %.071, %51 ], [ %.071, %50 ], [ %.071, %48 ], [ %.071, %43 ], [ %.071, %40 ], [ %.071, %39 ], [ %.071, %37 ], [ %.071, %25 ], [ %.071, %15 ]
  %.069.be = phi i32 [ %.069, %14 ], [ %.069, %364 ], [ %.069, %363 ], [ %.069, %361 ], [ %.069, %357 ], [ %.069, %356 ], [ %.069, %355 ], [ %.069, %352 ], [ %.069, %351 ], [ %.069, %350 ], [ %.069, %349 ], [ %.069, %348 ], [ %.069, %342 ], [ %.069, %339 ], [ %.069, %337 ], [ %.069, %327 ], [ %.069, %323 ], [ %.069, %322 ], [ %.069, %312 ], [ %.069, %302 ], [ %.069, %300 ], [ %299, %298 ], [ %.069, %297 ], [ %.069, %287 ], [ %.069, %277 ], [ %.069, %276 ], [ %.069, %265 ], [ %.069, %255 ], [ %.069, %254 ], [ %.069, %253 ], [ %.069, %239 ], [ %.069, %229 ], [ %.069, %222 ], [ %.069, %218 ], [ %.069, %217 ], [ %.069, %213 ], [ %.069, %211 ], [ %.069, %200 ], [ %.069, %190 ], [ %.069, %189 ], [ %.069, %188 ], [ %.069, %185 ], [ %.069, %183 ], [ %.069, %171 ], [ %.069, %161 ], [ %.059, %156 ], [ %.069, %153 ], [ %.069, %152 ], [ %.069, %140 ], [ %.069, %130 ], [ %.069, %128 ], [ %.069, %127 ], [ %.069, %117 ], [ %.069, %107 ], [ %.069, %106 ], [ %.069, %101 ], [ %.069, %99 ], [ %.069, %88 ], [ %.069, %78 ], [ %.069, %77 ], [ %.069, %67 ], [ %.069, %57 ], [ %.069, %53 ], [ %.069, %52 ], [ %.069, %51 ], [ %.069, %50 ], [ %.069, %48 ], [ %.069, %43 ], [ %.069, %40 ], [ %.069, %39 ], [ %.069, %37 ], [ %.069, %25 ], [ %.069, %15 ]
  %.067.be = phi i32 [ %.067, %14 ], [ %.067, %364 ], [ %.067, %363 ], [ %.067, %361 ], [ %.067, %357 ], [ %.067, %356 ], [ %.067, %355 ], [ %.067, %352 ], [ %.067, %351 ], [ %.067, %350 ], [ %.067, %349 ], [ %.067, %348 ], [ %.067, %342 ], [ %.067, %339 ], [ %.067, %337 ], [ %.067, %327 ], [ %.067, %323 ], [ %.067, %322 ], [ %.067, %312 ], [ %.067, %302 ], [ %.067, %300 ], [ %.067, %298 ], [ %.067, %297 ], [ %.067, %287 ], [ %.067, %277 ], [ %.067, %276 ], [ %.067, %265 ], [ %.067, %255 ], [ %.067, %254 ], [ %.067, %253 ], [ %.067, %239 ], [ %.067, %229 ], [ %.067, %222 ], [ %.067, %218 ], [ %.067, %217 ], [ %.067, %213 ], [ %.067, %211 ], [ %.067, %200 ], [ %.067, %190 ], [ %.067, %189 ], [ %.067, %188 ], [ %.067, %185 ], [ %.067, %183 ], [ %.067, %171 ], [ %.067, %161 ], [ %.067, %156 ], [ %.067, %153 ], [ %.067, %152 ], [ %.067, %140 ], [ %.067, %130 ], [ %.067, %128 ], [ %.067, %127 ], [ %.067, %117 ], [ %.067, %107 ], [ %.067, %106 ], [ %.067, %101 ], [ %.067, %99 ], [ %.067, %88 ], [ %.067, %78 ], [ %.067, %77 ], [ %.067, %67 ], [ %.067, %57 ], [ %.067, %53 ], [ %.067, %52 ], [ %.neg75, %51 ], [ %.067, %50 ], [ %.067, %48 ], [ %.067, %43 ], [ %.067, %40 ], [ %.067, %39 ], [ %.067, %37 ], [ %.067, %25 ], [ %.067, %15 ]
  %.065.be = phi i32 [ %.065, %14 ], [ %.065, %364 ], [ %.065, %363 ], [ %.065, %361 ], [ %.065, %357 ], [ %.065, %356 ], [ %.065, %355 ], [ %.065, %352 ], [ %.065, %351 ], [ %.065, %350 ], [ %.065, %349 ], [ %.065, %348 ], [ %.065, %342 ], [ %.065, %339 ], [ %.065, %337 ], [ %.065, %327 ], [ %.065, %323 ], [ %.065, %322 ], [ %.065, %312 ], [ %.065, %302 ], [ %.065, %300 ], [ %.065, %298 ], [ %.065, %297 ], [ %.065, %287 ], [ %.065, %277 ], [ %.065, %276 ], [ %.065, %265 ], [ %.065, %255 ], [ %.065, %254 ], [ %.065, %253 ], [ %.065, %239 ], [ %.065, %229 ], [ %.065, %222 ], [ %.065, %218 ], [ %.065, %217 ], [ %.065, %213 ], [ %.065, %211 ], [ %.065, %200 ], [ %.065, %190 ], [ %.065, %189 ], [ %.065, %188 ], [ %.065, %185 ], [ %.065, %183 ], [ %.065, %171 ], [ %.065, %161 ], [ %.065, %156 ], [ %.065, %153 ], [ %.065, %152 ], [ %.065, %140 ], [ %.065, %130 ], [ %.065, %128 ], [ %.065, %127 ], [ %.065, %117 ], [ %.065, %107 ], [ %.065, %106 ], [ %.065, %101 ], [ %.065, %99 ], [ %.065, %88 ], [ %.065, %78 ], [ %.065, %77 ], [ %.065, %67 ], [ %.065, %57 ], [ %.065, %53 ], [ %.065, %52 ], [ %.065, %51 ], [ %.065, %50 ], [ %49, %48 ], [ %.065, %43 ], [ %.065, %40 ], [ 0, %39 ], [ %.065, %37 ], [ %.065, %25 ], [ %.065, %15 ]
  %.063.be = phi i32 [ %.063, %14 ], [ %.063, %364 ], [ %.063, %363 ], [ %.063, %361 ], [ %.063, %357 ], [ %.063, %356 ], [ %.063, %355 ], [ %.063, %352 ], [ %.063, %351 ], [ %.063, %350 ], [ %.063, %349 ], [ %.063, %348 ], [ %.063, %342 ], [ %.063, %339 ], [ %.063, %337 ], [ %.063, %327 ], [ %.063, %323 ], [ %.063, %322 ], [ %.063, %312 ], [ %.063, %302 ], [ %.063, %300 ], [ %.063, %298 ], [ %.063, %297 ], [ %.063, %287 ], [ %.063, %277 ], [ %.063, %276 ], [ %.063, %265 ], [ %.063, %255 ], [ %.063, %254 ], [ %.063, %253 ], [ %.063, %239 ], [ %.063, %229 ], [ %.063, %222 ], [ %.063, %218 ], [ %.063, %217 ], [ %.063, %213 ], [ %.063, %211 ], [ %.063, %200 ], [ %.063, %190 ], [ %.063, %189 ], [ %.063, %188 ], [ %.063, %185 ], [ %.063, %183 ], [ %.063, %171 ], [ %.063, %161 ], [ %.063, %156 ], [ %.063, %153 ], [ %.063, %152 ], [ %.063, %140 ], [ %.063, %130 ], [ %129, %128 ], [ %.063, %127 ], [ %.063, %117 ], [ %.063, %107 ], [ %.063, %106 ], [ %.063, %101 ], [ %.063, %99 ], [ %.063, %88 ], [ %.063, %78 ], [ %.063, %77 ], [ %.063, %67 ], [ %.063, %57 ], [ %.063, %53 ], [ 0, %52 ], [ %.063, %51 ], [ %.063, %50 ], [ %.063, %48 ], [ %.063, %43 ], [ %.063, %40 ], [ %.063, %39 ], [ %.063, %37 ], [ %.063, %25 ], [ %.063, %15 ]
  %.061.be = phi i32 [ %.061, %14 ], [ %.061, %364 ], [ %.061, %363 ], [ %.061, %361 ], [ %.061, %357 ], [ %.061, %356 ], [ %.061, %355 ], [ %.061, %352 ], [ %.061, %351 ], [ %.061, %350 ], [ 0, %349 ], [ %.061, %348 ], [ %.061, %342 ], [ %.061, %339 ], [ %.061, %337 ], [ %.061, %327 ], [ %.061, %323 ], [ %.061, %322 ], [ %.061, %312 ], [ %.061, %302 ], [ %.061, %300 ], [ %.061, %298 ], [ %.061, %297 ], [ %.061, %287 ], [ %.061, %277 ], [ %.061, %276 ], [ %.061, %265 ], [ %.061, %255 ], [ %.061, %254 ], [ %.061, %253 ], [ %.061, %239 ], [ %.061, %229 ], [ %.061, %222 ], [ %.061, %218 ], [ %.061, %217 ], [ %.061, %213 ], [ %.061, %211 ], [ %.061, %200 ], [ %.061, %190 ], [ %.061, %189 ], [ %.061, %188 ], [ %.061, %185 ], [ %.061, %183 ], [ %.061, %171 ], [ %.061, %161 ], [ %.061, %156 ], [ %.061, %153 ], [ %.061, %152 ], [ %.061, %140 ], [ %.061, %130 ], [ %.061, %128 ], [ %.061, %127 ], [ %.061, %117 ], [ %.061, %107 ], [ %.neg74, %106 ], [ %.061, %101 ], [ %.061, %99 ], [ %.061, %88 ], [ %.061, %78 ], [ %.061, %77 ], [ 0, %67 ], [ %.061, %57 ], [ %.061, %53 ], [ %.061, %52 ], [ %.061, %51 ], [ %.061, %50 ], [ %.061, %48 ], [ %.061, %43 ], [ %.061, %40 ], [ %.061, %39 ], [ %.061, %37 ], [ %.061, %25 ], [ %.061, %15 ]
  %.059.be = phi i32 [ %.059, %14 ], [ %.059, %364 ], [ %.059, %363 ], [ %.059, %361 ], [ %.059, %357 ], [ %.059, %356 ], [ %.059, %355 ], [ 1, %352 ], [ %.059, %351 ], [ %.059, %350 ], [ %.059, %349 ], [ %.059, %348 ], [ %343, %342 ], [ %.059, %339 ], [ %.059, %337 ], [ %.059, %327 ], [ %.059, %323 ], [ %.059, %322 ], [ %.059, %312 ], [ %.059, %302 ], [ %.059, %300 ], [ %.059, %298 ], [ %.059, %297 ], [ %.059, %287 ], [ %.059, %277 ], [ %.059, %276 ], [ %.059, %265 ], [ %.059, %255 ], [ %.059, %254 ], [ %.059, %253 ], [ %.059, %239 ], [ %.059, %229 ], [ %.059, %222 ], [ %.059, %218 ], [ %.059, %217 ], [ %.059, %213 ], [ %.059, %211 ], [ %.059, %200 ], [ %.059, %190 ], [ %.059, %189 ], [ %.059, %188 ], [ %.059, %185 ], [ %.059, %183 ], [ %.059, %171 ], [ %.059, %161 ], [ %.059, %156 ], [ %.059, %153 ], [ %.059, %152 ], [ 1, %140 ], [ %.059, %130 ], [ %.059, %128 ], [ %.059, %127 ], [ %.059, %117 ], [ %.059, %107 ], [ %.059, %106 ], [ %.059, %101 ], [ %.059, %99 ], [ %.059, %88 ], [ %.059, %78 ], [ %.059, %77 ], [ %.059, %67 ], [ %.059, %57 ], [ %.059, %53 ], [ %.059, %52 ], [ %.059, %51 ], [ %.059, %50 ], [ %.059, %48 ], [ %.059, %43 ], [ %.059, %40 ], [ %.059, %39 ], [ %.059, %37 ], [ %.059, %25 ], [ %.059, %15 ]
  %.057.be = phi i8* [ %.057, %14 ], [ %.057, %364 ], [ %.057, %363 ], [ %.057, %361 ], [ %.057, %357 ], [ %.057, %356 ], [ %.057, %355 ], [ %.057, %352 ], [ %.057, %351 ], [ %.057, %350 ], [ %.057, %349 ], [ %.057, %348 ], [ %.057, %342 ], [ %.057, %339 ], [ %.057, %337 ], [ %.057, %327 ], [ %.057, %323 ], [ %.057, %322 ], [ %.057, %312 ], [ %.057, %302 ], [ %.057, %300 ], [ %.057, %298 ], [ %.057, %297 ], [ %.057, %287 ], [ %.057, %277 ], [ %.057, %276 ], [ %.057, %265 ], [ %.057, %255 ], [ %.057, %254 ], [ %.057, %253 ], [ %.057, %239 ], [ %.057, %229 ], [ %.057, %222 ], [ %.057, %218 ], [ %.057, %217 ], [ %.057, %213 ], [ %.057, %211 ], [ %.057, %200 ], [ %.057, %190 ], [ %.057, %189 ], [ %.057, %188 ], [ %.057, %185 ], [ %.057, %183 ], [ %.057, %171 ], [ %.057, %161 ], [ %159, %156 ], [ %.057, %153 ], [ %.057, %152 ], [ %.057, %140 ], [ %.057, %130 ], [ %.057, %128 ], [ %.057, %127 ], [ %.057, %117 ], [ %.057, %107 ], [ %.057, %106 ], [ %.057, %101 ], [ %.057, %99 ], [ %.057, %88 ], [ %.057, %78 ], [ %.057, %77 ], [ %.057, %67 ], [ %.057, %57 ], [ %.057, %53 ], [ %.057, %52 ], [ %.057, %51 ], [ %.057, %50 ], [ %.057, %48 ], [ %.057, %43 ], [ %.057, %40 ], [ %.057, %39 ], [ %.057, %37 ], [ %.057, %25 ], [ %.057, %15 ]
  %.055.be = phi i32 [ %.055, %14 ], [ %.055, %364 ], [ %.055, %363 ], [ %.055, %361 ], [ %.055, %357 ], [ %.055, %356 ], [ %.055, %355 ], [ %.055, %352 ], [ %.055, %351 ], [ %.055, %350 ], [ %.055, %349 ], [ %.055, %348 ], [ %.055, %342 ], [ %.055, %339 ], [ %.055, %337 ], [ %.055, %327 ], [ %.055, %323 ], [ %.055, %322 ], [ %.055, %312 ], [ %.055, %302 ], [ %.055, %300 ], [ %.055, %298 ], [ %.055, %297 ], [ %.055, %287 ], [ %.055, %277 ], [ %.055, %276 ], [ %.055, %265 ], [ %.055, %255 ], [ %.055, %254 ], [ %.055, %253 ], [ %.055, %239 ], [ %.055, %229 ], [ %.055, %222 ], [ %.055, %218 ], [ %.055, %217 ], [ %.055, %213 ], [ %.055, %211 ], [ %.055, %200 ], [ %.055, %190 ], [ %.055, %189 ], [ %.neg73, %188 ], [ %.055, %185 ], [ %.055, %183 ], [ %.055, %171 ], [ %.055, %161 ], [ 0, %156 ], [ %.055, %153 ], [ %.055, %152 ], [ %.055, %140 ], [ %.055, %130 ], [ %.055, %128 ], [ %.055, %127 ], [ %.055, %117 ], [ %.055, %107 ], [ %.055, %106 ], [ %.055, %101 ], [ %.055, %99 ], [ %.055, %88 ], [ %.055, %78 ], [ %.055, %77 ], [ %.055, %67 ], [ %.055, %57 ], [ %.055, %53 ], [ %.055, %52 ], [ %.055, %51 ], [ %.055, %50 ], [ %.055, %48 ], [ %.055, %43 ], [ %.055, %40 ], [ %.055, %39 ], [ %.055, %37 ], [ %.055, %25 ], [ %.055, %15 ]
  %.053.be = phi i32 [ %.053, %14 ], [ %.053, %364 ], [ %.053, %363 ], [ %.053, %361 ], [ %.053, %357 ], [ %.053, %356 ], [ %.053, %355 ], [ %.053, %352 ], [ %.053, %351 ], [ %.053, %350 ], [ %.053, %349 ], [ %.053, %348 ], [ %.053, %342 ], [ %.053, %339 ], [ %.053, %337 ], [ %.053, %327 ], [ %.053, %323 ], [ %.053, %322 ], [ %.053, %312 ], [ %.053, %302 ], [ %301, %300 ], [ %.053, %298 ], [ %.053, %297 ], [ %.053, %287 ], [ %.053, %277 ], [ %.053, %276 ], [ %.053, %265 ], [ %.053, %255 ], [ %.053, %254 ], [ %.053, %253 ], [ %.053, %239 ], [ %.053, %229 ], [ %.053, %222 ], [ %.053, %218 ], [ %.053, %217 ], [ %.053, %213 ], [ %.053, %211 ], [ %.053, %200 ], [ %.053, %190 ], [ 0, %189 ], [ %.053, %188 ], [ %.053, %185 ], [ %.053, %183 ], [ %.053, %171 ], [ %.053, %161 ], [ %.053, %156 ], [ %.053, %153 ], [ %.053, %152 ], [ %.053, %140 ], [ %.053, %130 ], [ %.053, %128 ], [ %.053, %127 ], [ %.053, %117 ], [ %.053, %107 ], [ %.053, %106 ], [ %.053, %101 ], [ %.053, %99 ], [ %.053, %88 ], [ %.053, %78 ], [ %.053, %77 ], [ %.053, %67 ], [ %.053, %57 ], [ %.053, %53 ], [ %.053, %52 ], [ %.053, %51 ], [ %.053, %50 ], [ %.053, %48 ], [ %.053, %43 ], [ %.053, %40 ], [ %.053, %39 ], [ %.053, %37 ], [ %.053, %25 ], [ %.053, %15 ]
  %.051.be = phi i32 [ %.051, %14 ], [ %.051, %364 ], [ %.051, %363 ], [ %362, %361 ], [ %.051, %357 ], [ %.051, %356 ], [ %.051, %355 ], [ %.051, %352 ], [ %.051, %351 ], [ %.051, %350 ], [ %.051, %349 ], [ %.051, %348 ], [ %.051, %342 ], [ %.051, %339 ], [ %.051, %337 ], [ %.051, %327 ], [ %.051, %323 ], [ %.051, %322 ], [ %.051, %312 ], [ %.051, %302 ], [ %.051, %300 ], [ %.051, %298 ], [ %.051, %297 ], [ %.051, %287 ], [ %.051, %277 ], [ %.051, %276 ], [ %266, %265 ], [ %.051, %255 ], [ %.051, %254 ], [ %.051, %253 ], [ %.051, %239 ], [ %.051, %229 ], [ %.051, %222 ], [ %.051, %218 ], [ 0, %217 ], [ %.051, %213 ], [ %.051, %211 ], [ %.051, %200 ], [ %.051, %190 ], [ %.051, %189 ], [ %.051, %188 ], [ %.051, %185 ], [ %.051, %183 ], [ %.051, %171 ], [ %.051, %161 ], [ %.051, %156 ], [ %.051, %153 ], [ %.051, %152 ], [ %.051, %140 ], [ %.051, %130 ], [ %.051, %128 ], [ %.051, %127 ], [ %.051, %117 ], [ %.051, %107 ], [ %.051, %106 ], [ %.051, %101 ], [ %.051, %99 ], [ %.051, %88 ], [ %.051, %78 ], [ %.051, %77 ], [ %.051, %67 ], [ %.051, %57 ], [ %.051, %53 ], [ %.051, %52 ], [ %.051, %51 ], [ %.051, %50 ], [ %.051, %48 ], [ %.051, %43 ], [ %.051, %40 ], [ %.051, %39 ], [ %.051, %37 ], [ %.051, %25 ], [ %.051, %15 ]
  %.049.be = phi i32 [ %.049, %14 ], [ 0, %364 ], [ %.049, %363 ], [ %.049, %361 ], [ %.049, %357 ], [ %.049, %356 ], [ %.049, %355 ], [ %.049, %352 ], [ %.049, %351 ], [ %.049, %350 ], [ %.049, %349 ], [ %.049, %348 ], [ %.049, %342 ], [ %.049, %339 ], [ %338, %337 ], [ %.049, %327 ], [ %.049, %323 ], [ %.049, %322 ], [ 0, %312 ], [ %.049, %302 ], [ %.049, %300 ], [ %.049, %298 ], [ %.049, %297 ], [ %.049, %287 ], [ %.049, %277 ], [ %.049, %276 ], [ %.049, %265 ], [ %.049, %255 ], [ %.049, %254 ], [ %.049, %253 ], [ %.049, %239 ], [ %.049, %229 ], [ %.049, %222 ], [ %.049, %218 ], [ %.049, %217 ], [ %.049, %213 ], [ %.049, %211 ], [ %.049, %200 ], [ %.049, %190 ], [ %.049, %189 ], [ %.049, %188 ], [ %.049, %185 ], [ %.049, %183 ], [ %.049, %171 ], [ %.049, %161 ], [ %.049, %156 ], [ %.049, %153 ], [ %.049, %152 ], [ %.049, %140 ], [ %.049, %130 ], [ %.049, %128 ], [ %.049, %127 ], [ %.049, %117 ], [ %.049, %107 ], [ %.049, %106 ], [ %.049, %101 ], [ %.049, %99 ], [ %.049, %88 ], [ %.049, %78 ], [ %.049, %77 ], [ %.049, %67 ], [ %.049, %57 ], [ %.049, %53 ], [ %.049, %52 ], [ %.049, %51 ], [ %.049, %50 ], [ %.049, %48 ], [ %.049, %43 ], [ %.049, %40 ], [ %.049, %39 ], [ %.049, %37 ], [ %.049, %25 ], [ %.049, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ 463977736, %364 ], [ 1877495999, %363 ], [ -1366214928, %361 ], [ 1289989485, %357 ], [ 780192046, %356 ], [ 689746706, %355 ], [ 101024790, %352 ], [ 1978521927, %351 ], [ 1868832094, %350 ], [ 208113989, %349 ], [ 1382083823, %348 ], [ 26397905, %342 ], [ -623385132, %339 ], [ -1256168105, %337 ], [ -1764854128, %327 ], [ %326, %323 ], [ -1256168105, %322 ], [ %321, %312 ], [ %311, %302 ], [ -2067360821, %300 ], [ -249376484, %298 ], [ 587247268, %297 ], [ %296, %287 ], [ %286, %277 ], [ -1079102651, %276 ], [ %275, %265 ], [ %264, %255 ], [ -1087495177, %254 ], [ -1778976113, %253 ], [ %252, %239 ], [ %238, %229 ], [ %228, %222 ], [ %221, %218 ], [ -1079102651, %217 ], [ %216, %213 ], [ %212, %211 ], [ %210, %200 ], [ %199, %190 ], [ -2067360821, %189 ], [ -2035897693, %188 ], [ -341506415, %185 ], [ %184, %183 ], [ %182, %171 ], [ %170, %161 ], [ -2035897693, %156 ], [ %155, %153 ], [ 26397905, %152 ], [ %151, %140 ], [ %139, %130 ], [ 1953716724, %128 ], [ -2031547016, %127 ], [ %126, %117 ], [ %116, %107 ], [ -1609438777, %106 ], [ 664827860, %101 ], [ %100, %99 ], [ %98, %88 ], [ %87, %78 ], [ -1609438777, %77 ], [ %76, %67 ], [ %66, %57 ], [ %56, %53 ], [ 1953716724, %52 ], [ -1905621880, %51 ], [ 2106180294, %50 ], [ -1882401592, %48 ], [ -121317422, %43 ], [ %42, %40 ], [ -1882401592, %39 ], [ %38, %37 ], [ %36, %25 ], [ %24, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* @x.1, align 4
  %17 = load i32, i32* @y.2, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 1382083823, i32 1606074432
  br label %.backedge

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4
  %27 = icmp slt i32 %.067, %26
  store i1 %27, i1* %5, align 1
  %28 = load i32, i32* @x.1, align 4
  %29 = load i32, i32* @y.2, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -1488611301, i32 1606074432
  br label %.backedge

37:                                               ; preds = %14
  %.0..0..0.41 = load volatile i1, i1* %5, align 1
  %38 = select i1 %.0..0..0.41, i32 -2034568720, i32 984405838
  br label %.backedge

39:                                               ; preds = %14
  br label %.backedge

40:                                               ; preds = %14
  %41 = icmp slt i32 %.065, 10
  %42 = select i1 %41, i32 1079589977, i32 -1471960998
  br label %.backedge

43:                                               ; preds = %14
  %44 = sext i32 %.067 to i64
  %45 = sext i32 %.065 to i64
  %46 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 %44, i64 %45
  %47 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %46)
  br label %.backedge

48:                                               ; preds = %14
  %49 = add i32 %.065, 1
  br label %.backedge

50:                                               ; preds = %14
  br label %.backedge

51:                                               ; preds = %14
  %.neg75 = add i32 %.067, 1
  br label %.backedge

52:                                               ; preds = %14
  br label %.backedge

53:                                               ; preds = %14
  %54 = load i32, i32* %6, align 4
  %55 = icmp slt i32 %.063, %54
  %56 = select i1 %55, i32 -471080883, i32 -945065073
  br label %.backedge

57:                                               ; preds = %14
  %58 = load i32, i32* @x.1, align 4
  %59 = load i32, i32* @y.2, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 208113989, i32 -105734114
  br label %.backedge

67:                                               ; preds = %14
  %68 = load i32, i32* @x.1, align 4
  %69 = load i32, i32* @y.2, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 997185220, i32 -105734114
  br label %.backedge

77:                                               ; preds = %14
  br label %.backedge

78:                                               ; preds = %14
  %79 = load i32, i32* @x.1, align 4
  %80 = load i32, i32* @y.2, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 1868832094, i32 127840922
  br label %.backedge

88:                                               ; preds = %14
  %89 = icmp slt i32 %.061, 11
  store i1 %89, i1* %4, align 1
  %90 = load i32, i32* @x.1, align 4
  %91 = load i32, i32* @y.2, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 1027746360, i32 127840922
  br label %.backedge

99:                                               ; preds = %14
  %.0..0..0.42 = load volatile i1, i1* %4, align 1
  %100 = select i1 %.0..0..0.42, i32 179136153, i32 1802237770
  br label %.backedge

101:                                              ; preds = %14
  %102 = sext i32 %.063 to i64
  %103 = sext i32 %.061 to i64
  %104 = getelementptr inbounds [11 x i32], [11 x i32]* %13, i64 %102, i64 %103
  %105 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %104)
  br label %.backedge

106:                                              ; preds = %14
  %.neg74 = add i32 %.061, 1
  br label %.backedge

107:                                              ; preds = %14
  %108 = load i32, i32* @x.1, align 4
  %109 = load i32, i32* @y.2, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 1978521927, i32 -358999170
  br label %.backedge

117:                                              ; preds = %14
  %118 = load i32, i32* @x.1, align 4
  %119 = load i32, i32* @y.2, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 -1437880913, i32 -358999170
  br label %.backedge

127:                                              ; preds = %14
  br label %.backedge

128:                                              ; preds = %14
  %129 = add i32 %.063, 1
  br label %.backedge

130:                                              ; preds = %14
  %131 = load i32, i32* @x.1, align 4
  %132 = load i32, i32* @y.2, align 4
  %133 = add i32 %131, -1
  %134 = mul i32 %133, %131
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %137, %136
  %139 = select i1 %138, i32 101024790, i32 151590103
  br label %.backedge

140:                                              ; preds = %14
  %141 = call double @_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_(i32 2, i32 10)
  %142 = fptosi double %141 to i32
  store i64 -200000000000, i64* %7, align 8
  %143 = load i32, i32* @x.1, align 4
  %144 = load i32, i32* @y.2, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 -186874748, i32 151590103
  br label %.backedge

152:                                              ; preds = %14
  br label %.backedge

153:                                              ; preds = %14
  %154 = icmp slt i32 %.059, %.071
  %155 = select i1 %154, i32 1863428848, i32 1818316476
  br label %.backedge

156:                                              ; preds = %14
  store i64 0, i64* %8, align 8
  %157 = load i32, i32* %6, align 4
  %158 = zext i32 %157 to i64
  %159 = call i8* @llvm.stacksave()
  %160 = alloca i32, i64 %158, align 16
  store i32* %160, i32** %3, align 8
  br label %.backedge

161:                                              ; preds = %14
  %162 = load i32, i32* @x.1, align 4
  %163 = load i32, i32* @y.2, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 689746706, i32 1090212187
  br label %.backedge

171:                                              ; preds = %14
  %172 = load i32, i32* %6, align 4
  %173 = icmp slt i32 %.055, %172
  store i1 %173, i1* %2, align 1
  %174 = load i32, i32* @x.1, align 4
  %175 = load i32, i32* @y.2, align 4
  %176 = add i32 %174, -1
  %177 = mul i32 %176, %174
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %180, %179
  %182 = select i1 %181, i32 1232072761, i32 1090212187
  br label %.backedge

183:                                              ; preds = %14
  %.0..0..0.47 = load volatile i1, i1* %2, align 1
  %184 = select i1 %.0..0..0.47, i32 -535057611, i32 -537366766
  br label %.backedge

185:                                              ; preds = %14
  %186 = sext i32 %.055 to i64
  %.0..0..0.43 = load volatile i32*, i32** %3, align 8
  %187 = getelementptr inbounds i32, i32* %.0..0..0.43, i64 %186
  store i32 0, i32* %187, align 4
  br label %.backedge

188:                                              ; preds = %14
  %.neg73 = add i32 %.055, 1
  br label %.backedge

189:                                              ; preds = %14
  br label %.backedge

190:                                              ; preds = %14
  %191 = load i32, i32* @x.1, align 4
  %192 = load i32, i32* @y.2, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 780192046, i32 28418041
  br label %.backedge

200:                                              ; preds = %14
  %201 = icmp slt i32 %.053, 10
  store i1 %201, i1* %1, align 1
  %202 = load i32, i32* @x.1, align 4
  %203 = load i32, i32* @y.2, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 -2121499298, i32 28418041
  br label %.backedge

211:                                              ; preds = %14
  %.0..0..0.48 = load volatile i1, i1* %1, align 1
  %212 = select i1 %.0..0..0.48, i32 1937852812, i32 -1585178884
  br label %.backedge

213:                                              ; preds = %14
  %214 = srem i32 %.069, 2
  %215 = icmp eq i32 %214, 1
  %216 = select i1 %215, i32 1070300263, i32 587247268
  br label %.backedge

217:                                              ; preds = %14
  br label %.backedge

218:                                              ; preds = %14
  %219 = load i32, i32* %6, align 4
  %220 = icmp slt i32 %.051, %219
  %221 = select i1 %220, i32 669877209, i32 -1736769432
  br label %.backedge

222:                                              ; preds = %14
  %223 = sext i32 %.051 to i64
  %224 = sext i32 %.053 to i64
  %225 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 %223, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 1
  %228 = select i1 %227, i32 -1499531360, i32 -1778976113
  br label %.backedge

229:                                              ; preds = %14
  %230 = load i32, i32* @x.1, align 4
  %231 = load i32, i32* @y.2, align 4
  %232 = add i32 %230, -1
  %233 = mul i32 %232, %230
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %236, %235
  %238 = select i1 %237, i32 1289989485, i32 -893219807
  br label %.backedge

239:                                              ; preds = %14
  %240 = sext i32 %.051 to i64
  %.0..0..0.44 = load volatile i32*, i32** %3, align 8
  %241 = getelementptr inbounds i32, i32* %.0..0..0.44, i64 %240
  %242 = load i32, i32* %241, align 4
  %243 = add i32 %242, 1
  store i32 %243, i32* %241, align 4
  %244 = load i32, i32* @x.1, align 4
  %245 = load i32, i32* @y.2, align 4
  %246 = add i32 %244, -1
  %247 = mul i32 %246, %244
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %250, %249
  %252 = select i1 %251, i32 658691719, i32 -893219807
  br label %.backedge

253:                                              ; preds = %14
  br label %.backedge

254:                                              ; preds = %14
  br label %.backedge

255:                                              ; preds = %14
  %256 = load i32, i32* @x.1, align 4
  %257 = load i32, i32* @y.2, align 4
  %258 = add i32 %256, -1
  %259 = mul i32 %258, %256
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %262, %261
  %264 = select i1 %263, i32 -1366214928, i32 1894779330
  br label %.backedge

265:                                              ; preds = %14
  %266 = add i32 %.051, 1
  %267 = load i32, i32* @x.1, align 4
  %268 = load i32, i32* @y.2, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 -34776855, i32 1894779330
  br label %.backedge

276:                                              ; preds = %14
  br label %.backedge

277:                                              ; preds = %14
  %278 = load i32, i32* @x.1, align 4
  %279 = load i32, i32* @y.2, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 1877495999, i32 -852135899
  br label %.backedge

287:                                              ; preds = %14
  %288 = load i32, i32* @x.1, align 4
  %289 = load i32, i32* @y.2, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 -940407730, i32 -852135899
  br label %.backedge

297:                                              ; preds = %14
  br label %.backedge

298:                                              ; preds = %14
  %299 = sdiv i32 %.069, 2
  br label %.backedge

300:                                              ; preds = %14
  %301 = add i32 %.053, 1
  br label %.backedge

302:                                              ; preds = %14
  %303 = load i32, i32* @x.1, align 4
  %304 = load i32, i32* @y.2, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 463977736, i32 -196393245
  br label %.backedge

312:                                              ; preds = %14
  %313 = load i32, i32* @x.1, align 4
  %314 = load i32, i32* @y.2, align 4
  %315 = add i32 %313, -1
  %316 = mul i32 %315, %313
  %317 = and i32 %316, 1
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %319, %318
  %321 = select i1 %320, i32 -1793430062, i32 -196393245
  br label %.backedge

322:                                              ; preds = %14
  br label %.backedge

323:                                              ; preds = %14
  %324 = load i32, i32* %6, align 4
  %325 = icmp slt i32 %.049, %324
  %326 = select i1 %325, i32 -2145781200, i32 1116365101
  br label %.backedge

327:                                              ; preds = %14
  %328 = sext i32 %.049 to i64
  %.0..0..0.45 = load volatile i32*, i32** %3, align 8
  %329 = getelementptr inbounds i32, i32* %.0..0..0.45, i64 %328
  %330 = load i32, i32* %329, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds [11 x i32], [11 x i32]* %13, i64 %328, i64 %331
  %333 = load i32, i32* %332, align 4
  %334 = sext i32 %333 to i64
  %335 = load i64, i64* %8, align 8
  %336 = add i64 %335, %334
  store i64 %336, i64* %8, align 8
  br label %.backedge

337:                                              ; preds = %14
  %338 = add i32 %.049, 1
  br label %.backedge

339:                                              ; preds = %14
  %340 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %7, i64* nonnull dereferenceable(8) %8)
  %341 = load i64, i64* %340, align 8
  store i64 %341, i64* %7, align 8
  call void @llvm.stackrestore(i8* %.057)
  br label %.backedge

342:                                              ; preds = %14
  %343 = add i32 %.059, 1
  br label %.backedge

344:                                              ; preds = %14
  %345 = load i64, i64* %7, align 8
  %346 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %345)
  %347 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %346, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0

348:                                              ; preds = %14
  br label %.backedge

349:                                              ; preds = %14
  br label %.backedge

350:                                              ; preds = %14
  br label %.backedge

351:                                              ; preds = %14
  br label %.backedge

352:                                              ; preds = %14
  %353 = call double @_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_(i32 2, i32 10)
  %354 = fptosi double %353 to i32
  store i64 -200000000000, i64* %7, align 8
  br label %.backedge

355:                                              ; preds = %14
  br label %.backedge

356:                                              ; preds = %14
  br label %.backedge

357:                                              ; preds = %14
  %358 = sext i32 %.051 to i64
  %.0..0..0.46 = load volatile i32*, i32** %3, align 8
  %359 = getelementptr inbounds i32, i32* %.0..0..0.46, i64 %358
  %360 = load i32, i32* %359, align 4
  %.neg = add i32 %360, 1
  store i32 %.neg, i32* %359, align 4
  br label %.backedge

361:                                              ; preds = %14
  %362 = add i32 %.051, 1
  br label %.backedge

363:                                              ; preds = %14
  br label %.backedge

364:                                              ; preds = %14
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_(i32 %0, i32 %1) local_unnamed_addr #6 comdat {
  %3 = sitofp i32 %0 to double
  %4 = sitofp i32 %1 to double
  %5 = tail call double @pow(double %3, double %4) #8
  ret double %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i64**, align 8
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.5, align 4
  %10 = load i32, i32* @y.6, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 2023689832, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 2023689832, label %17
    i32 -2142454172, label %20
    i32 -1222587647, label %38
    i32 -1197675236, label %40
    i32 1666050846, label %50
    i32 124992755, label %61
    i32 -1969510446, label %62
    i32 -326998074, label %72
    i32 -1373347099, label %83
    i32 1242425999, label %84
    i32 1791450022, label %86
    i32 -914362502, label %87
    i32 1762329942, label %89
  ]

.backedge:                                        ; preds = %16, %89, %87, %86, %83, %72, %62, %61, %50, %40, %38, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ -326998074, %89 ], [ 1666050846, %87 ], [ -2142454172, %86 ], [ 1242425999, %83 ], [ %82, %72 ], [ %71, %62 ], [ 1242425999, %61 ], [ %60, %50 ], [ %49, %40 ], [ %39, %38 ], [ %37, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 -2142454172, i32 1791450022
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i64*, align 8
  store i64** %21, i64*** %6, align 8
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %5, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %4, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %5, align 8
  store i64* %0, i64** %.0..0..0.7, align 8
  %.0..0..0.11 = load volatile i64**, i64*** %4, align 8
  store i64* %1, i64** %.0..0..0.11, align 8
  %.0..0..0.8 = load volatile i64**, i64*** %5, align 8
  %24 = load i64*, i64** %.0..0..0.8, align 8
  %25 = load i64, i64* %24, align 8
  %.0..0..0.12 = load volatile i64**, i64*** %4, align 8
  %26 = load i64*, i64** %.0..0..0.12, align 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.5, align 4
  %30 = load i32, i32* @y.6, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -1222587647, i32 1791450022
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0.15 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.15, i32 -1197675236, i32 -1969510446
  br label %.backedge

40:                                               ; preds = %16
  %41 = load i32, i32* @x.5, align 4
  %42 = load i32, i32* @y.6, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1666050846, i32 -914362502
  br label %.backedge

50:                                               ; preds = %16
  %.0..0..0.13 = load volatile i64**, i64*** %4, align 8
  %51 = load i64*, i64** %.0..0..0.13, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %6, align 8
  store i64* %51, i64** %.0..0..0.2, align 8
  %52 = load i32, i32* @x.5, align 4
  %53 = load i32, i32* @y.6, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 124992755, i32 -914362502
  br label %.backedge

61:                                               ; preds = %16
  br label %.backedge

62:                                               ; preds = %16
  %63 = load i32, i32* @x.5, align 4
  %64 = load i32, i32* @y.6, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -326998074, i32 1762329942
  br label %.backedge

72:                                               ; preds = %16
  %.0..0..0.9 = load volatile i64**, i64*** %5, align 8
  %73 = load i64*, i64** %.0..0..0.9, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %6, align 8
  store i64* %73, i64** %.0..0..0.3, align 8
  %74 = load i32, i32* @x.5, align 4
  %75 = load i32, i32* @y.6, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 -1373347099, i32 1762329942
  br label %.backedge

83:                                               ; preds = %16
  br label %.backedge

84:                                               ; preds = %16
  %.0..0..0.4 = load volatile i64**, i64*** %6, align 8
  %85 = load i64*, i64** %.0..0..0.4, align 8
  ret i64* %85

86:                                               ; preds = %16
  br label %.backedge

87:                                               ; preds = %16
  %.0..0..0.14 = load volatile i64**, i64*** %4, align 8
  %88 = load i64*, i64** %.0..0..0.14, align 8
  %.0..0..0.5 = load volatile i64**, i64*** %6, align 8
  store i64* %88, i64** %.0..0..0.5, align 8
  br label %.backedge

89:                                               ; preds = %16
  %.0..0..0.10 = load volatile i64**, i64*** %5, align 8
  %90 = load i64*, i64** %.0..0..0.10, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %6, align 8
  store i64* %90, i64** %.0..0..0.6, align 8
  br label %.backedge
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: mustprogress nofree nounwind willreturn
declare double @pow(double, double) local_unnamed_addr #7

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s738297623.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.7, align 4
  %4 = load i32, i32* @y.8, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 487649984, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 487649984, label %11
    i32 -291287946, label %14
    i32 792158181, label %24
    i32 1572253901, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -291287946, i32 1572253901
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 792158181, i32 1572253901
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -291287946, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { mustprogress nofree nounwind willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
