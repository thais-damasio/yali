; ModuleID = 'build_ollvm/programs/p03503/s668078200.ll'
source_filename = "Project_CodeNet_C++1400/p03503/s668078200.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3maxIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s668078200.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca [105 x [15 x i32]], align 16
  %7 = alloca [105 x [15 x i64]], align 16
  %8 = alloca i64, align 8
  %9 = alloca [105 x i32], align 16
  %10 = alloca i64, align 8
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %12 = bitcast [105 x i32]* %9 to i8*
  br label %13

13:                                               ; preds = %.backedge, %0
  %.062 = phi i32 [ 0, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i8 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i32 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.0 = phi i32 [ 83881439, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 83881439, label %14
    i32 -1185612544, label %24
    i32 42374129, label %36
    i32 564933709, label %38
    i32 -1368973553, label %39
    i32 1518000198, label %42
    i32 404163130, label %47
    i32 783065803, label %57
    i32 -962622181, label %68
    i32 -451083763, label %69
    i32 -1066714115, label %70
    i32 811573085, label %71
    i32 -747710107, label %81
    i32 -1071971515, label %91
    i32 1081518905, label %92
    i32 640538256, label %96
    i32 814176407, label %97
    i32 -775969001, label %100
    i32 1898741536, label %105
    i32 1823991889, label %107
    i32 424915563, label %108
    i32 29277107, label %109
    i32 -1250760342, label %110
    i32 1341869154, label %113
    i32 -735109230, label %114
    i32 1454139493, label %117
    i32 1320435793, label %127
    i32 -1305287106, label %140
    i32 66152469, label %142
    i32 -1148624788, label %143
    i32 -424826216, label %147
    i32 -853371506, label %154
    i32 -1121764314, label %159
    i32 -1836928233, label %169
    i32 -1580848450, label %179
    i32 -1546197636, label %180
    i32 -129926232, label %190
    i32 419888238, label %201
    i32 -726374023, label %202
    i32 -803889498, label %203
    i32 675016289, label %213
    i32 -1783350882, label %223
    i32 -988526501, label %224
    i32 -70038548, label %226
    i32 2124815202, label %227
    i32 -150412849, label %231
    i32 626448098, label %241
    i32 1473107641, label %255
    i32 1145096061, label %257
    i32 972255136, label %258
    i32 -28998170, label %259
    i32 -1077014922, label %261
    i32 464186421, label %264
    i32 1204296385, label %265
    i32 1786424097, label %266
    i32 -483089614, label %270
    i32 2007806061, label %279
    i32 1908377089, label %289
    i32 2112479375, label %300
    i32 569119550, label %301
    i32 2140635142, label %311
    i32 562719330, label %323
    i32 604685288, label %324
    i32 1946555272, label %326
    i32 851634880, label %336
    i32 -682092483, label %349
    i32 1377532841, label %350
    i32 320048470, label %351
    i32 -274397029, label %353
    i32 -810215230, label %354
    i32 1705979486, label %355
    i32 901690240, label %356
    i32 -1633609882, label %357
    i32 310704281, label %358
    i32 1631154956, label %359
    i32 -29136403, label %360
    i32 -1915423880, label %363
  ]

.backedge:                                        ; preds = %13, %363, %360, %359, %358, %357, %356, %355, %354, %353, %351, %350, %336, %326, %324, %323, %311, %301, %300, %289, %279, %270, %266, %265, %264, %261, %259, %258, %257, %255, %241, %231, %227, %226, %224, %223, %213, %203, %202, %201, %190, %180, %179, %169, %159, %154, %147, %143, %142, %140, %127, %117, %114, %113, %110, %109, %108, %107, %105, %100, %97, %96, %92, %91, %81, %71, %70, %69, %68, %57, %47, %42, %39, %38, %36, %24, %14
  %.062.be = phi i32 [ %.062, %13 ], [ %.062, %363 ], [ %.062, %360 ], [ %.062, %359 ], [ %.062, %358 ], [ %.062, %357 ], [ %.062, %356 ], [ %.062, %355 ], [ %.062, %354 ], [ %.062, %353 ], [ %.062, %351 ], [ %.062, %350 ], [ %.062, %336 ], [ %.062, %326 ], [ %.062, %324 ], [ %.062, %323 ], [ %.062, %311 ], [ %.062, %301 ], [ %.062, %300 ], [ %.062, %289 ], [ %.062, %279 ], [ %.062, %270 ], [ %.062, %266 ], [ %.062, %265 ], [ %.062, %264 ], [ %.062, %261 ], [ %.062, %259 ], [ %.062, %258 ], [ %.062, %257 ], [ %.062, %255 ], [ %.062, %241 ], [ %.062, %231 ], [ %.062, %227 ], [ %.062, %226 ], [ %.062, %224 ], [ %.062, %223 ], [ %.062, %213 ], [ %.062, %203 ], [ %.062, %202 ], [ %.062, %201 ], [ %.062, %190 ], [ %.062, %180 ], [ %.062, %179 ], [ %.062, %169 ], [ %.062, %159 ], [ %.062, %154 ], [ %.062, %147 ], [ %.062, %143 ], [ %.062, %142 ], [ %.062, %140 ], [ %.062, %127 ], [ %.062, %117 ], [ %.062, %114 ], [ %.062, %113 ], [ %.062, %110 ], [ %.062, %109 ], [ %.062, %108 ], [ %.062, %107 ], [ %.062, %105 ], [ %.062, %100 ], [ %.062, %97 ], [ %.062, %96 ], [ %.062, %92 ], [ %.062, %91 ], [ %.062, %81 ], [ %.062, %71 ], [ %.neg66, %70 ], [ %.062, %69 ], [ %.062, %68 ], [ %.062, %57 ], [ %.062, %47 ], [ %.062, %42 ], [ %.062, %39 ], [ %.062, %38 ], [ %.062, %36 ], [ %.062, %24 ], [ %.062, %14 ]
  %.060.be = phi i32 [ %.060, %13 ], [ %.060, %363 ], [ %.060, %360 ], [ %.060, %359 ], [ %.060, %358 ], [ %.060, %357 ], [ %.060, %356 ], [ %.060, %355 ], [ %.060, %354 ], [ %.060, %353 ], [ %352, %351 ], [ %.060, %350 ], [ %.060, %336 ], [ %.060, %326 ], [ %.060, %324 ], [ %.060, %323 ], [ %.060, %311 ], [ %.060, %301 ], [ %.060, %300 ], [ %.060, %289 ], [ %.060, %279 ], [ %.060, %270 ], [ %.060, %266 ], [ %.060, %265 ], [ %.060, %264 ], [ %.060, %261 ], [ %.060, %259 ], [ %.060, %258 ], [ %.060, %257 ], [ %.060, %255 ], [ %.060, %241 ], [ %.060, %231 ], [ %.060, %227 ], [ %.060, %226 ], [ %.060, %224 ], [ %.060, %223 ], [ %.060, %213 ], [ %.060, %203 ], [ %.060, %202 ], [ %.060, %201 ], [ %.060, %190 ], [ %.060, %180 ], [ %.060, %179 ], [ %.060, %169 ], [ %.060, %159 ], [ %.060, %154 ], [ %.060, %147 ], [ %.060, %143 ], [ %.060, %142 ], [ %.060, %140 ], [ %.060, %127 ], [ %.060, %117 ], [ %.060, %114 ], [ %.060, %113 ], [ %.060, %110 ], [ %.060, %109 ], [ %.060, %108 ], [ %.060, %107 ], [ %.060, %105 ], [ %.060, %100 ], [ %.060, %97 ], [ %.060, %96 ], [ %.060, %92 ], [ %.060, %91 ], [ %.060, %81 ], [ %.060, %71 ], [ %.060, %70 ], [ %.060, %69 ], [ %.060, %68 ], [ %58, %57 ], [ %.060, %47 ], [ %.060, %42 ], [ %.060, %39 ], [ 0, %38 ], [ %.060, %36 ], [ %.060, %24 ], [ %.060, %14 ]
  %.058.be = phi i32 [ %.058, %13 ], [ %.058, %363 ], [ %.058, %360 ], [ %.058, %359 ], [ %.058, %358 ], [ %.058, %357 ], [ %.058, %356 ], [ %.058, %355 ], [ %.058, %354 ], [ 0, %353 ], [ %.058, %351 ], [ %.058, %350 ], [ %.058, %336 ], [ %.058, %326 ], [ %.058, %324 ], [ %.058, %323 ], [ %.058, %311 ], [ %.058, %301 ], [ %.058, %300 ], [ %.058, %289 ], [ %.058, %279 ], [ %.058, %270 ], [ %.058, %266 ], [ %.058, %265 ], [ %.058, %264 ], [ %.058, %261 ], [ %.058, %259 ], [ %.058, %258 ], [ %.058, %257 ], [ %.058, %255 ], [ %.058, %241 ], [ %.058, %231 ], [ %.058, %227 ], [ %.058, %226 ], [ %.058, %224 ], [ %.058, %223 ], [ %.058, %213 ], [ %.058, %203 ], [ %.058, %202 ], [ %.058, %201 ], [ %.058, %190 ], [ %.058, %180 ], [ %.058, %179 ], [ %.058, %169 ], [ %.058, %159 ], [ %.058, %154 ], [ %.058, %147 ], [ %.058, %143 ], [ %.058, %142 ], [ %.058, %140 ], [ %.058, %127 ], [ %.058, %117 ], [ %.058, %114 ], [ %.058, %113 ], [ %.058, %110 ], [ %.058, %109 ], [ %.neg65, %108 ], [ %.058, %107 ], [ %.058, %105 ], [ %.058, %100 ], [ %.058, %97 ], [ %.058, %96 ], [ %.058, %92 ], [ %.058, %91 ], [ 0, %81 ], [ %.058, %71 ], [ %.058, %70 ], [ %.058, %69 ], [ %.058, %68 ], [ %.058, %57 ], [ %.058, %47 ], [ %.058, %42 ], [ %.058, %39 ], [ %.058, %38 ], [ %.058, %36 ], [ %.058, %24 ], [ %.058, %14 ]
  %.056.be = phi i32 [ %.056, %13 ], [ %.056, %363 ], [ %.056, %360 ], [ %.056, %359 ], [ %.056, %358 ], [ %.056, %357 ], [ %.056, %356 ], [ %.056, %355 ], [ %.056, %354 ], [ %.056, %353 ], [ %.056, %351 ], [ %.056, %350 ], [ %.056, %336 ], [ %.056, %326 ], [ %.056, %324 ], [ %.056, %323 ], [ %.056, %311 ], [ %.056, %301 ], [ %.056, %300 ], [ %.056, %289 ], [ %.056, %279 ], [ %.056, %270 ], [ %.056, %266 ], [ %.056, %265 ], [ %.056, %264 ], [ %.056, %261 ], [ %.056, %259 ], [ %.056, %258 ], [ %.056, %257 ], [ %.056, %255 ], [ %.056, %241 ], [ %.056, %231 ], [ %.056, %227 ], [ %.056, %226 ], [ %.056, %224 ], [ %.056, %223 ], [ %.056, %213 ], [ %.056, %203 ], [ %.056, %202 ], [ %.056, %201 ], [ %.056, %190 ], [ %.056, %180 ], [ %.056, %179 ], [ %.056, %169 ], [ %.056, %159 ], [ %.056, %154 ], [ %.056, %147 ], [ %.056, %143 ], [ %.056, %142 ], [ %.056, %140 ], [ %.056, %127 ], [ %.056, %117 ], [ %.056, %114 ], [ %.056, %113 ], [ %.056, %110 ], [ %.056, %109 ], [ %.056, %108 ], [ %.056, %107 ], [ %106, %105 ], [ %.056, %100 ], [ %.056, %97 ], [ 0, %96 ], [ %.056, %92 ], [ %.056, %91 ], [ %.056, %81 ], [ %.056, %71 ], [ %.056, %70 ], [ %.056, %69 ], [ %.056, %68 ], [ %.056, %57 ], [ %.056, %47 ], [ %.056, %42 ], [ %.056, %39 ], [ %.056, %38 ], [ %.056, %36 ], [ %.056, %24 ], [ %.056, %14 ]
  %.054.be = phi i32 [ %.054, %13 ], [ %.054, %363 ], [ %.054, %360 ], [ %.054, %359 ], [ %.054, %358 ], [ %.054, %357 ], [ %.054, %356 ], [ %.054, %355 ], [ %.054, %354 ], [ %.054, %353 ], [ %.054, %351 ], [ %.054, %350 ], [ %.054, %336 ], [ %.054, %326 ], [ %325, %324 ], [ %.054, %323 ], [ %.054, %311 ], [ %.054, %301 ], [ %.054, %300 ], [ %.054, %289 ], [ %.054, %279 ], [ %.054, %270 ], [ %.054, %266 ], [ %.054, %265 ], [ %.054, %264 ], [ %.054, %261 ], [ %.054, %259 ], [ %.054, %258 ], [ %.054, %257 ], [ %.054, %255 ], [ %.054, %241 ], [ %.054, %231 ], [ %.054, %227 ], [ %.054, %226 ], [ %.054, %224 ], [ %.054, %223 ], [ %.054, %213 ], [ %.054, %203 ], [ %.054, %202 ], [ %.054, %201 ], [ %.054, %190 ], [ %.054, %180 ], [ %.054, %179 ], [ %.054, %169 ], [ %.054, %159 ], [ %.054, %154 ], [ %.054, %147 ], [ %.054, %143 ], [ %.054, %142 ], [ %.054, %140 ], [ %.054, %127 ], [ %.054, %117 ], [ %.054, %114 ], [ %.054, %113 ], [ %.054, %110 ], [ 0, %109 ], [ %.054, %108 ], [ %.054, %107 ], [ %.054, %105 ], [ %.054, %100 ], [ %.054, %97 ], [ %.054, %96 ], [ %.054, %92 ], [ %.054, %91 ], [ %.054, %81 ], [ %.054, %71 ], [ %.054, %70 ], [ %.054, %69 ], [ %.054, %68 ], [ %.054, %57 ], [ %.054, %47 ], [ %.054, %42 ], [ %.054, %39 ], [ %.054, %38 ], [ %.054, %36 ], [ %.054, %24 ], [ %.054, %14 ]
  %.052.be = phi i32 [ %.052, %13 ], [ %.052, %363 ], [ %.052, %360 ], [ %.052, %359 ], [ %.052, %358 ], [ %.052, %357 ], [ %.052, %356 ], [ %.052, %355 ], [ %.052, %354 ], [ %.052, %353 ], [ %.052, %351 ], [ %.052, %350 ], [ %.052, %336 ], [ %.052, %326 ], [ %.052, %324 ], [ %.052, %323 ], [ %.052, %311 ], [ %.052, %301 ], [ %.052, %300 ], [ %.052, %289 ], [ %.052, %279 ], [ %.052, %270 ], [ %.052, %266 ], [ %.052, %265 ], [ %.052, %264 ], [ %.052, %261 ], [ %.052, %259 ], [ %.052, %258 ], [ %.052, %257 ], [ %.052, %255 ], [ %.052, %241 ], [ %.052, %231 ], [ %.052, %227 ], [ %.052, %226 ], [ %225, %224 ], [ %.052, %223 ], [ %.052, %213 ], [ %.052, %203 ], [ %.052, %202 ], [ %.052, %201 ], [ %.052, %190 ], [ %.052, %180 ], [ %.052, %179 ], [ %.052, %169 ], [ %.052, %159 ], [ %.052, %154 ], [ %.052, %147 ], [ %.052, %143 ], [ %.052, %142 ], [ %.052, %140 ], [ %.052, %127 ], [ %.052, %117 ], [ %.052, %114 ], [ 0, %113 ], [ %.052, %110 ], [ %.052, %109 ], [ %.052, %108 ], [ %.052, %107 ], [ %.052, %105 ], [ %.052, %100 ], [ %.052, %97 ], [ %.052, %96 ], [ %.052, %92 ], [ %.052, %91 ], [ %.052, %81 ], [ %.052, %71 ], [ %.052, %70 ], [ %.052, %69 ], [ %.052, %68 ], [ %.052, %57 ], [ %.052, %47 ], [ %.052, %42 ], [ %.052, %39 ], [ %.052, %38 ], [ %.052, %36 ], [ %.052, %24 ], [ %.052, %14 ]
  %.050.be = phi i32 [ %.050, %13 ], [ %.050, %363 ], [ %.050, %360 ], [ %.050, %359 ], [ %.050, %358 ], [ %.050, %357 ], [ %.neg64, %356 ], [ %.050, %355 ], [ %.050, %354 ], [ %.050, %353 ], [ %.050, %351 ], [ %.050, %350 ], [ %.050, %336 ], [ %.050, %326 ], [ %.050, %324 ], [ %.050, %323 ], [ %.050, %311 ], [ %.050, %301 ], [ %.050, %300 ], [ %.050, %289 ], [ %.050, %279 ], [ %.050, %270 ], [ %.050, %266 ], [ %.050, %265 ], [ %.050, %264 ], [ %.050, %261 ], [ %.050, %259 ], [ %.050, %258 ], [ %.050, %257 ], [ %.050, %255 ], [ %.050, %241 ], [ %.050, %231 ], [ %.050, %227 ], [ %.050, %226 ], [ %.050, %224 ], [ %.050, %223 ], [ %.050, %213 ], [ %.050, %203 ], [ %.050, %202 ], [ %.050, %201 ], [ %191, %190 ], [ %.050, %180 ], [ %.050, %179 ], [ %.050, %169 ], [ %.050, %159 ], [ %.050, %154 ], [ %.050, %147 ], [ %.050, %143 ], [ 0, %142 ], [ %.050, %140 ], [ %.050, %127 ], [ %.050, %117 ], [ %.050, %114 ], [ %.050, %113 ], [ %.050, %110 ], [ %.050, %109 ], [ %.050, %108 ], [ %.050, %107 ], [ %.050, %105 ], [ %.050, %100 ], [ %.050, %97 ], [ %.050, %96 ], [ %.050, %92 ], [ %.050, %91 ], [ %.050, %81 ], [ %.050, %71 ], [ %.050, %70 ], [ %.050, %69 ], [ %.050, %68 ], [ %.050, %57 ], [ %.050, %47 ], [ %.050, %42 ], [ %.050, %39 ], [ %.050, %38 ], [ %.050, %36 ], [ %.050, %24 ], [ %.050, %14 ]
  %.048.be = phi i8 [ %.048, %13 ], [ %.048, %363 ], [ %.048, %360 ], [ %.048, %359 ], [ %.048, %358 ], [ %.048, %357 ], [ %.048, %356 ], [ %.048, %355 ], [ %.048, %354 ], [ %.048, %353 ], [ %.048, %351 ], [ %.048, %350 ], [ %.048, %336 ], [ %.048, %326 ], [ %.048, %324 ], [ %.048, %323 ], [ %.048, %311 ], [ %.048, %301 ], [ %.048, %300 ], [ %.048, %289 ], [ %.048, %279 ], [ %.048, %270 ], [ %.048, %266 ], [ %.048, %265 ], [ %.048, %264 ], [ %.048, %261 ], [ %.048, %259 ], [ %.048, %258 ], [ 0, %257 ], [ %.048, %255 ], [ %.048, %241 ], [ %.048, %231 ], [ %.048, %227 ], [ 1, %226 ], [ %.048, %224 ], [ %.048, %223 ], [ %.048, %213 ], [ %.048, %203 ], [ %.048, %202 ], [ %.048, %201 ], [ %.048, %190 ], [ %.048, %180 ], [ %.048, %179 ], [ %.048, %169 ], [ %.048, %159 ], [ %.048, %154 ], [ %.048, %147 ], [ %.048, %143 ], [ %.048, %142 ], [ %.048, %140 ], [ %.048, %127 ], [ %.048, %117 ], [ %.048, %114 ], [ %.048, %113 ], [ %.048, %110 ], [ %.048, %109 ], [ %.048, %108 ], [ %.048, %107 ], [ %.048, %105 ], [ %.048, %100 ], [ %.048, %97 ], [ %.048, %96 ], [ %.048, %92 ], [ %.048, %91 ], [ %.048, %81 ], [ %.048, %71 ], [ %.048, %70 ], [ %.048, %69 ], [ %.048, %68 ], [ %.048, %57 ], [ %.048, %47 ], [ %.048, %42 ], [ %.048, %39 ], [ %.048, %38 ], [ %.048, %36 ], [ %.048, %24 ], [ %.048, %14 ]
  %.046.be = phi i32 [ %.046, %13 ], [ %.046, %363 ], [ %.046, %360 ], [ %.046, %359 ], [ %.046, %358 ], [ %.046, %357 ], [ %.046, %356 ], [ %.046, %355 ], [ %.046, %354 ], [ %.046, %353 ], [ %.046, %351 ], [ %.046, %350 ], [ %.046, %336 ], [ %.046, %326 ], [ %.046, %324 ], [ %.046, %323 ], [ %.046, %311 ], [ %.046, %301 ], [ %.046, %300 ], [ %.046, %289 ], [ %.046, %279 ], [ %.046, %270 ], [ %.046, %266 ], [ %.046, %265 ], [ %.046, %264 ], [ %.046, %261 ], [ %260, %259 ], [ %.046, %258 ], [ %.046, %257 ], [ %.046, %255 ], [ %.046, %241 ], [ %.046, %231 ], [ %.046, %227 ], [ 0, %226 ], [ %.046, %224 ], [ %.046, %223 ], [ %.046, %213 ], [ %.046, %203 ], [ %.046, %202 ], [ %.046, %201 ], [ %.046, %190 ], [ %.046, %180 ], [ %.046, %179 ], [ %.046, %169 ], [ %.046, %159 ], [ %.046, %154 ], [ %.046, %147 ], [ %.046, %143 ], [ %.046, %142 ], [ %.046, %140 ], [ %.046, %127 ], [ %.046, %117 ], [ %.046, %114 ], [ %.046, %113 ], [ %.046, %110 ], [ %.046, %109 ], [ %.046, %108 ], [ %.046, %107 ], [ %.046, %105 ], [ %.046, %100 ], [ %.046, %97 ], [ %.046, %96 ], [ %.046, %92 ], [ %.046, %91 ], [ %.046, %81 ], [ %.046, %71 ], [ %.046, %70 ], [ %.046, %69 ], [ %.046, %68 ], [ %.046, %57 ], [ %.046, %47 ], [ %.046, %42 ], [ %.046, %39 ], [ %.046, %38 ], [ %.046, %36 ], [ %.046, %24 ], [ %.046, %14 ]
  %.044.be = phi i32 [ %.044, %13 ], [ %.044, %363 ], [ %.044, %360 ], [ %.neg, %359 ], [ %.044, %358 ], [ %.044, %357 ], [ %.044, %356 ], [ %.044, %355 ], [ %.044, %354 ], [ %.044, %353 ], [ %.044, %351 ], [ %.044, %350 ], [ %.044, %336 ], [ %.044, %326 ], [ %.044, %324 ], [ %.044, %323 ], [ %.044, %311 ], [ %.044, %301 ], [ %.044, %300 ], [ %290, %289 ], [ %.044, %279 ], [ %.044, %270 ], [ %.044, %266 ], [ 0, %265 ], [ %.044, %264 ], [ %.044, %261 ], [ %.044, %259 ], [ %.044, %258 ], [ %.044, %257 ], [ %.044, %255 ], [ %.044, %241 ], [ %.044, %231 ], [ %.044, %227 ], [ %.044, %226 ], [ %.044, %224 ], [ %.044, %223 ], [ %.044, %213 ], [ %.044, %203 ], [ %.044, %202 ], [ %.044, %201 ], [ %.044, %190 ], [ %.044, %180 ], [ %.044, %179 ], [ %.044, %169 ], [ %.044, %159 ], [ %.044, %154 ], [ %.044, %147 ], [ %.044, %143 ], [ %.044, %142 ], [ %.044, %140 ], [ %.044, %127 ], [ %.044, %117 ], [ %.044, %114 ], [ %.044, %113 ], [ %.044, %110 ], [ %.044, %109 ], [ %.044, %108 ], [ %.044, %107 ], [ %.044, %105 ], [ %.044, %100 ], [ %.044, %97 ], [ %.044, %96 ], [ %.044, %92 ], [ %.044, %91 ], [ %.044, %81 ], [ %.044, %71 ], [ %.044, %70 ], [ %.044, %69 ], [ %.044, %68 ], [ %.044, %57 ], [ %.044, %47 ], [ %.044, %42 ], [ %.044, %39 ], [ %.044, %38 ], [ %.044, %36 ], [ %.044, %24 ], [ %.044, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ 851634880, %363 ], [ 2140635142, %360 ], [ 1908377089, %359 ], [ 626448098, %358 ], [ 675016289, %357 ], [ -129926232, %356 ], [ -1836928233, %355 ], [ 1320435793, %354 ], [ -747710107, %353 ], [ 783065803, %351 ], [ -1185612544, %350 ], [ %348, %336 ], [ %335, %326 ], [ -1250760342, %324 ], [ 604685288, %323 ], [ %322, %311 ], [ %310, %301 ], [ 1786424097, %300 ], [ %299, %289 ], [ %288, %279 ], [ 2007806061, %270 ], [ %269, %266 ], [ 1786424097, %265 ], [ 604685288, %264 ], [ %263, %261 ], [ 2124815202, %259 ], [ -28998170, %258 ], [ 972255136, %257 ], [ %256, %255 ], [ %254, %241 ], [ %240, %231 ], [ %230, %227 ], [ 2124815202, %226 ], [ -735109230, %224 ], [ -988526501, %223 ], [ %222, %213 ], [ %212, %203 ], [ -803889498, %202 ], [ -1148624788, %201 ], [ %200, %190 ], [ %189, %180 ], [ -1546197636, %179 ], [ %178, %169 ], [ %168, %159 ], [ -1121764314, %154 ], [ %153, %147 ], [ %146, %143 ], [ -1148624788, %142 ], [ %141, %140 ], [ %139, %127 ], [ %126, %117 ], [ %116, %114 ], [ -735109230, %113 ], [ %112, %110 ], [ -1250760342, %109 ], [ 1081518905, %108 ], [ 424915563, %107 ], [ 814176407, %105 ], [ 1898741536, %100 ], [ %99, %97 ], [ 814176407, %96 ], [ %95, %92 ], [ 1081518905, %91 ], [ %90, %81 ], [ %80, %71 ], [ 83881439, %70 ], [ -1066714115, %69 ], [ -1368973553, %68 ], [ %67, %57 ], [ %56, %47 ], [ 404163130, %42 ], [ %41, %39 ], [ -1368973553, %38 ], [ %37, %36 ], [ %35, %24 ], [ %23, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = load i32, i32* @x.1, align 4
  %16 = load i32, i32* @y.2, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1185612544, i32 1377532841
  br label %.backedge

24:                                               ; preds = %13
  %25 = load i32, i32* %5, align 4
  %26 = icmp slt i32 %.062, %25
  store i1 %26, i1* %4, align 1
  %27 = load i32, i32* @x.1, align 4
  %28 = load i32, i32* @y.2, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 42374129, i32 1377532841
  br label %.backedge

36:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %37 = select i1 %.0..0..0., i32 564933709, i32 811573085
  br label %.backedge

38:                                               ; preds = %13
  br label %.backedge

39:                                               ; preds = %13
  %40 = icmp slt i32 %.060, 10
  %41 = select i1 %40, i32 1518000198, i32 -451083763
  br label %.backedge

42:                                               ; preds = %13
  %43 = sext i32 %.062 to i64
  %44 = sext i32 %.060 to i64
  %45 = getelementptr inbounds [105 x [15 x i32]], [105 x [15 x i32]]* %6, i64 0, i64 %43, i64 %44
  %46 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %45)
  br label %.backedge

47:                                               ; preds = %13
  %48 = load i32, i32* @x.1, align 4
  %49 = load i32, i32* @y.2, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 783065803, i32 320048470
  br label %.backedge

57:                                               ; preds = %13
  %58 = add i32 %.060, 1
  %59 = load i32, i32* @x.1, align 4
  %60 = load i32, i32* @y.2, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -962622181, i32 320048470
  br label %.backedge

68:                                               ; preds = %13
  br label %.backedge

69:                                               ; preds = %13
  br label %.backedge

70:                                               ; preds = %13
  %.neg66 = add i32 %.062, 1
  br label %.backedge

71:                                               ; preds = %13
  %72 = load i32, i32* @x.1, align 4
  %73 = load i32, i32* @y.2, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 -747710107, i32 -274397029
  br label %.backedge

81:                                               ; preds = %13
  %82 = load i32, i32* @x.1, align 4
  %83 = load i32, i32* @y.2, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 -1071971515, i32 -274397029
  br label %.backedge

91:                                               ; preds = %13
  br label %.backedge

92:                                               ; preds = %13
  %93 = load i32, i32* %5, align 4
  %94 = icmp slt i32 %.058, %93
  %95 = select i1 %94, i32 640538256, i32 29277107
  br label %.backedge

96:                                               ; preds = %13
  br label %.backedge

97:                                               ; preds = %13
  %98 = icmp slt i32 %.056, 11
  %99 = select i1 %98, i32 -775969001, i32 1823991889
  br label %.backedge

100:                                              ; preds = %13
  %101 = sext i32 %.058 to i64
  %102 = sext i32 %.056 to i64
  %103 = getelementptr inbounds [105 x [15 x i64]], [105 x [15 x i64]]* %7, i64 0, i64 %101, i64 %102
  %104 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %103)
  br label %.backedge

105:                                              ; preds = %13
  %106 = add i32 %.056, 1
  br label %.backedge

107:                                              ; preds = %13
  br label %.backedge

108:                                              ; preds = %13
  %.neg65 = add i32 %.058, 1
  br label %.backedge

109:                                              ; preds = %13
  store i64 -9223372036854775807, i64* %8, align 8
  br label %.backedge

110:                                              ; preds = %13
  %111 = icmp slt i32 %.054, 2048
  %112 = select i1 %111, i32 1341869154, i32 1946555272
  br label %.backedge

113:                                              ; preds = %13
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(420) %12, i8 0, i64 420, i1 false)
  br label %.backedge

114:                                              ; preds = %13
  %115 = icmp slt i32 %.052, 11
  %116 = select i1 %115, i32 1454139493, i32 -70038548
  br label %.backedge

117:                                              ; preds = %13
  %118 = load i32, i32* @x.1, align 4
  %119 = load i32, i32* @y.2, align 4
  %120 = add i32 %118, -1
  %121 = mul i32 %120, %118
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %124, %123
  %126 = select i1 %125, i32 1320435793, i32 -810215230
  br label %.backedge

127:                                              ; preds = %13
  %128 = shl nuw i32 1, %.052
  %129 = and i32 %128, %.054
  %130 = icmp ne i32 %129, 0
  store i1 %130, i1* %3, align 1
  %131 = load i32, i32* @x.1, align 4
  %132 = load i32, i32* @y.2, align 4
  %133 = add i32 %131, -1
  %134 = mul i32 %133, %131
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %137, %136
  %139 = select i1 %138, i32 -1305287106, i32 -810215230
  br label %.backedge

140:                                              ; preds = %13
  %.0..0..0.41 = load volatile i1, i1* %3, align 1
  %141 = select i1 %.0..0..0.41, i32 66152469, i32 -803889498
  br label %.backedge

142:                                              ; preds = %13
  br label %.backedge

143:                                              ; preds = %13
  %144 = load i32, i32* %5, align 4
  %145 = icmp slt i32 %.050, %144
  %146 = select i1 %145, i32 -424826216, i32 -726374023
  br label %.backedge

147:                                              ; preds = %13
  %148 = sext i32 %.050 to i64
  %149 = sext i32 %.052 to i64
  %150 = getelementptr inbounds [105 x [15 x i32]], [105 x [15 x i32]]* %6, i64 0, i64 %148, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 1
  %153 = select i1 %152, i32 -853371506, i32 -1121764314
  br label %.backedge

154:                                              ; preds = %13
  %155 = sext i32 %.050 to i64
  %156 = getelementptr inbounds [105 x i32], [105 x i32]* %9, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %156, align 4
  br label %.backedge

159:                                              ; preds = %13
  %160 = load i32, i32* @x.1, align 4
  %161 = load i32, i32* @y.2, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -1836928233, i32 1705979486
  br label %.backedge

169:                                              ; preds = %13
  %170 = load i32, i32* @x.1, align 4
  %171 = load i32, i32* @y.2, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 -1580848450, i32 1705979486
  br label %.backedge

179:                                              ; preds = %13
  br label %.backedge

180:                                              ; preds = %13
  %181 = load i32, i32* @x.1, align 4
  %182 = load i32, i32* @y.2, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 -129926232, i32 901690240
  br label %.backedge

190:                                              ; preds = %13
  %191 = add i32 %.050, 1
  %192 = load i32, i32* @x.1, align 4
  %193 = load i32, i32* @y.2, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 419888238, i32 901690240
  br label %.backedge

201:                                              ; preds = %13
  br label %.backedge

202:                                              ; preds = %13
  br label %.backedge

203:                                              ; preds = %13
  %204 = load i32, i32* @x.1, align 4
  %205 = load i32, i32* @y.2, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 675016289, i32 -1633609882
  br label %.backedge

213:                                              ; preds = %13
  %214 = load i32, i32* @x.1, align 4
  %215 = load i32, i32* @y.2, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 -1783350882, i32 -1633609882
  br label %.backedge

223:                                              ; preds = %13
  br label %.backedge

224:                                              ; preds = %13
  %225 = add i32 %.052, 1
  br label %.backedge

226:                                              ; preds = %13
  br label %.backedge

227:                                              ; preds = %13
  %228 = load i32, i32* %5, align 4
  %229 = icmp slt i32 %.046, %228
  %230 = select i1 %229, i32 -150412849, i32 -1077014922
  br label %.backedge

231:                                              ; preds = %13
  %232 = load i32, i32* @x.1, align 4
  %233 = load i32, i32* @y.2, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 626448098, i32 310704281
  br label %.backedge

241:                                              ; preds = %13
  %242 = sext i32 %.046 to i64
  %243 = getelementptr inbounds [105 x i32], [105 x i32]* %9, i64 0, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp ne i32 %244, 0
  store i1 %245, i1* %2, align 1
  %246 = load i32, i32* @x.1, align 4
  %247 = load i32, i32* @y.2, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 1473107641, i32 310704281
  br label %.backedge

255:                                              ; preds = %13
  %.0..0..0.42 = load volatile i1, i1* %2, align 1
  %256 = select i1 %.0..0..0.42, i32 1145096061, i32 972255136
  br label %.backedge

257:                                              ; preds = %13
  br label %.backedge

258:                                              ; preds = %13
  br label %.backedge

259:                                              ; preds = %13
  %260 = add i32 %.046, 1
  br label %.backedge

261:                                              ; preds = %13
  %262 = and i8 %.048, 1
  %.not = icmp eq i8 %262, 0
  %263 = select i1 %.not, i32 1204296385, i32 464186421
  br label %.backedge

264:                                              ; preds = %13
  br label %.backedge

265:                                              ; preds = %13
  store i64 0, i64* %10, align 8
  br label %.backedge

266:                                              ; preds = %13
  %267 = load i32, i32* %5, align 4
  %268 = icmp slt i32 %.044, %267
  %269 = select i1 %268, i32 -483089614, i32 569119550
  br label %.backedge

270:                                              ; preds = %13
  %271 = sext i32 %.044 to i64
  %272 = getelementptr inbounds [105 x i32], [105 x i32]* %9, i64 0, i64 %271
  %273 = load i32, i32* %272, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [105 x [15 x i64]], [105 x [15 x i64]]* %7, i64 0, i64 %271, i64 %274
  %276 = load i64, i64* %275, align 8
  %277 = load i64, i64* %10, align 8
  %278 = add i64 %277, %276
  store i64 %278, i64* %10, align 8
  br label %.backedge

279:                                              ; preds = %13
  %280 = load i32, i32* @x.1, align 4
  %281 = load i32, i32* @y.2, align 4
  %282 = add i32 %280, -1
  %283 = mul i32 %282, %280
  %284 = and i32 %283, 1
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %286, %285
  %288 = select i1 %287, i32 1908377089, i32 1631154956
  br label %.backedge

289:                                              ; preds = %13
  %290 = add i32 %.044, 1
  %291 = load i32, i32* @x.1, align 4
  %292 = load i32, i32* @y.2, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 2112479375, i32 1631154956
  br label %.backedge

300:                                              ; preds = %13
  br label %.backedge

301:                                              ; preds = %13
  %302 = load i32, i32* @x.1, align 4
  %303 = load i32, i32* @y.2, align 4
  %304 = add i32 %302, -1
  %305 = mul i32 %304, %302
  %306 = and i32 %305, 1
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %308, %307
  %310 = select i1 %309, i32 2140635142, i32 -29136403
  br label %.backedge

311:                                              ; preds = %13
  %312 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %8, i64* nonnull dereferenceable(8) %10)
  %313 = load i64, i64* %312, align 8
  store i64 %313, i64* %8, align 8
  %314 = load i32, i32* @x.1, align 4
  %315 = load i32, i32* @y.2, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 562719330, i32 -29136403
  br label %.backedge

323:                                              ; preds = %13
  br label %.backedge

324:                                              ; preds = %13
  %325 = add i32 %.054, 1
  br label %.backedge

326:                                              ; preds = %13
  %327 = load i32, i32* @x.1, align 4
  %328 = load i32, i32* @y.2, align 4
  %329 = add i32 %327, -1
  %330 = mul i32 %329, %327
  %331 = and i32 %330, 1
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %333, %332
  %335 = select i1 %334, i32 851634880, i32 -1915423880
  br label %.backedge

336:                                              ; preds = %13
  %337 = load i64, i64* %8, align 8
  %338 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %337)
  %339 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %338, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 0, i32* %1, align 4
  %340 = load i32, i32* @x.1, align 4
  %341 = load i32, i32* @y.2, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 -682092483, i32 -1915423880
  br label %.backedge

349:                                              ; preds = %13
  %.0..0..0.43 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.43

350:                                              ; preds = %13
  br label %.backedge

351:                                              ; preds = %13
  %352 = add i32 %.060, 1
  br label %.backedge

353:                                              ; preds = %13
  br label %.backedge

354:                                              ; preds = %13
  br label %.backedge

355:                                              ; preds = %13
  br label %.backedge

356:                                              ; preds = %13
  %.neg64 = add i32 %.050, 1
  br label %.backedge

357:                                              ; preds = %13
  br label %.backedge

358:                                              ; preds = %13
  br label %.backedge

359:                                              ; preds = %13
  %.neg = add i32 %.044, 1
  br label %.backedge

360:                                              ; preds = %13
  %361 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %8, i64* nonnull dereferenceable(8) %10)
  %362 = load i64, i64* %361, align 8
  store i64 %362, i64* %8, align 8
  br label %.backedge

363:                                              ; preds = %13
  %364 = load i64, i64* %8, align 8
  %365 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %364)
  %366 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %365, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.3, align 4
  %8 = load i32, i32* @y.4, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -667949493, i32 1564722092
  %16 = select i1 %14, i32 1956921258, i32 1564722092
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -1907359359, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 -1907359359, label %18
    i32 76339926, label %.outer10.backedge
    i32 1956921258, label %.outer.backedge
    i32 -667949493, label %21
    i32 -814440595, label %22
    i32 951785860, label %23
    i32 1564722092, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 76339926, i32 -814440595
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 951785860, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i64* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 951785860, %22 ], [ 1956921258, %24 ], [ %15, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s668078200.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
