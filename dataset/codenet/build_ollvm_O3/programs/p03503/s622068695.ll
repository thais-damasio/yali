; ModuleID = 'build_ollvm/programs/p03503/s622068695.ll'
source_filename = "Project_CodeNet_C++1400/p03503/s622068695.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3maxIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@Mod = local_unnamed_addr global i64 1000000007, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s622068695.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -662746727, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -662746727, label %11
    i32 -1343887188, label %14
    i32 362721532, label %25
    i32 -1013258233, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1343887188, i32 -1013258233
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 362721532, i32 -1013258233
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1343887188, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = load i64, i64* @Mod, align 8
  %.neg = mul i64 %10, -100
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %7)
  %12 = load i64, i64* %7, align 8
  %13 = call i8* @llvm.stacksave()
  %14 = alloca [10 x i64], i64 %12, align 16
  %15 = load i64, i64* %7, align 8
  %16 = alloca [11 x i64], i64 %15, align 16
  store i64 %.neg, i64* %8, align 8
  br label %17

17:                                               ; preds = %.backedge, %0
  %.062 = phi i32 [ 0, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.0 = phi i32 [ -63110558, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -63110558, label %18
    i32 2104504270, label %28
    i32 -752306239, label %41
    i32 78262559, label %43
    i32 -312632448, label %44
    i32 -715336810, label %54
    i32 836714030, label %65
    i32 -1368955403, label %67
    i32 94847414, label %72
    i32 1449692092, label %74
    i32 1563872796, label %84
    i32 -1994864665, label %94
    i32 379639342, label %95
    i32 1682493407, label %97
    i32 1362782297, label %98
    i32 1386493068, label %103
    i32 1353357666, label %113
    i32 983924303, label %123
    i32 1826930971, label %124
    i32 23896903, label %134
    i32 -160562175, label %145
    i32 -857333368, label %147
    i32 -1017568926, label %157
    i32 476226210, label %171
    i32 -371686782, label %172
    i32 341061003, label %182
    i32 -2134039292, label %193
    i32 1733970784, label %194
    i32 -949432061, label %195
    i32 -123666575, label %197
    i32 -1930148393, label %198
    i32 -1695279290, label %208
    i32 -303924770, label %219
    i32 1979627550, label %221
    i32 -437935786, label %231
    i32 246829552, label %241
    i32 1215710094, label %242
    i32 1064015352, label %247
    i32 -990173507, label %257
    i32 1111453090, label %267
    i32 128106342, label %268
    i32 -811755547, label %271
    i32 -628219746, label %275
    i32 1904892451, label %285
    i32 404305075, label %300
    i32 -957864605, label %302
    i32 -248759075, label %304
    i32 -556781565, label %314
    i32 -877443482, label %324
    i32 570461380, label %325
    i32 -720743878, label %335
    i32 -308300483, label %345
    i32 1732150205, label %346
    i32 -2010026184, label %347
    i32 463282844, label %357
    i32 -8059973, label %373
    i32 664059659, label %374
    i32 1849329048, label %384
    i32 -1269050704, label %395
    i32 -927306527, label %396
    i32 -666131094, label %399
    i32 1110650961, label %401
    i32 -1497255046, label %411
    i32 644762150, label %424
    i32 -1414152419, label %425
    i32 743621571, label %426
    i32 -419320987, label %427
    i32 1339924271, label %428
    i32 214904028, label %429
    i32 -1452567442, label %430
    i32 -178503727, label %435
    i32 916668780, label %437
    i32 764495887, label %438
    i32 510395614, label %439
    i32 -2091959466, label %440
    i32 288498601, label %441
    i32 2104143917, label %442
    i32 1190965989, label %443
    i32 -337572934, label %450
    i32 335703810, label %452
  ]

.backedge:                                        ; preds = %17, %452, %450, %443, %442, %441, %440, %439, %438, %437, %435, %430, %429, %428, %427, %426, %425, %411, %401, %399, %396, %395, %384, %374, %373, %357, %347, %346, %345, %335, %325, %324, %314, %304, %302, %300, %285, %275, %271, %268, %267, %257, %247, %242, %241, %231, %221, %219, %208, %198, %197, %195, %194, %193, %182, %172, %171, %157, %147, %145, %134, %124, %123, %113, %103, %98, %97, %95, %94, %84, %74, %72, %67, %65, %54, %44, %43, %41, %28, %18
  %.062.be = phi i32 [ %.062, %17 ], [ %.062, %452 ], [ %.062, %450 ], [ %.062, %443 ], [ %.062, %442 ], [ %.062, %441 ], [ %.062, %440 ], [ %.062, %439 ], [ %.062, %438 ], [ %.062, %437 ], [ %.062, %435 ], [ %.062, %430 ], [ %.062, %429 ], [ %.062, %428 ], [ %.062, %427 ], [ %.062, %426 ], [ %.062, %425 ], [ %.062, %411 ], [ %.062, %401 ], [ %.062, %399 ], [ %.062, %396 ], [ %.062, %395 ], [ %.062, %384 ], [ %.062, %374 ], [ %.062, %373 ], [ %.062, %357 ], [ %.062, %347 ], [ %.062, %346 ], [ %.062, %345 ], [ %.062, %335 ], [ %.062, %325 ], [ %.062, %324 ], [ %.062, %314 ], [ %.062, %304 ], [ %.062, %302 ], [ %.062, %300 ], [ %.062, %285 ], [ %.062, %275 ], [ %.062, %271 ], [ %.062, %268 ], [ %.062, %267 ], [ %.062, %257 ], [ %.062, %247 ], [ %.062, %242 ], [ %.062, %241 ], [ %.062, %231 ], [ %.062, %221 ], [ %.062, %219 ], [ %.062, %208 ], [ %.062, %198 ], [ %.062, %197 ], [ %.062, %195 ], [ %.062, %194 ], [ %.062, %193 ], [ %.062, %182 ], [ %.062, %172 ], [ %.062, %171 ], [ %.062, %157 ], [ %.062, %147 ], [ %.062, %145 ], [ %.062, %134 ], [ %.062, %124 ], [ %.062, %123 ], [ %.062, %113 ], [ %.062, %103 ], [ %.062, %98 ], [ %.062, %97 ], [ %96, %95 ], [ %.062, %94 ], [ %.062, %84 ], [ %.062, %74 ], [ %.062, %72 ], [ %.062, %67 ], [ %.062, %65 ], [ %.062, %54 ], [ %.062, %44 ], [ %.062, %43 ], [ %.062, %41 ], [ %.062, %28 ], [ %.062, %18 ]
  %.060.be = phi i32 [ %.060, %17 ], [ %.060, %452 ], [ %.060, %450 ], [ %.060, %443 ], [ %.060, %442 ], [ %.060, %441 ], [ %.060, %440 ], [ %.060, %439 ], [ %.060, %438 ], [ %.060, %437 ], [ %.060, %435 ], [ %.060, %430 ], [ %.060, %429 ], [ %.060, %428 ], [ %.060, %427 ], [ %.060, %426 ], [ %.060, %425 ], [ %.060, %411 ], [ %.060, %401 ], [ %.060, %399 ], [ %.060, %396 ], [ %.060, %395 ], [ %.060, %384 ], [ %.060, %374 ], [ %.060, %373 ], [ %.060, %357 ], [ %.060, %347 ], [ %.060, %346 ], [ %.060, %345 ], [ %.060, %335 ], [ %.060, %325 ], [ %.060, %324 ], [ %.060, %314 ], [ %.060, %304 ], [ %.060, %302 ], [ %.060, %300 ], [ %.060, %285 ], [ %.060, %275 ], [ %.060, %271 ], [ %.060, %268 ], [ %.060, %267 ], [ %.060, %257 ], [ %.060, %247 ], [ %.060, %242 ], [ %.060, %241 ], [ %.060, %231 ], [ %.060, %221 ], [ %.060, %219 ], [ %.060, %208 ], [ %.060, %198 ], [ %.060, %197 ], [ %.060, %195 ], [ %.060, %194 ], [ %.060, %193 ], [ %.060, %182 ], [ %.060, %172 ], [ %.060, %171 ], [ %.060, %157 ], [ %.060, %147 ], [ %.060, %145 ], [ %.060, %134 ], [ %.060, %124 ], [ %.060, %123 ], [ %.060, %113 ], [ %.060, %103 ], [ %.060, %98 ], [ %.060, %97 ], [ %.060, %95 ], [ %.060, %94 ], [ %.060, %84 ], [ %.060, %74 ], [ %73, %72 ], [ %.060, %67 ], [ %.060, %65 ], [ %.060, %54 ], [ %.060, %44 ], [ 0, %43 ], [ %.060, %41 ], [ %.060, %28 ], [ %.060, %18 ]
  %.058.be = phi i32 [ %.058, %17 ], [ %.058, %452 ], [ %.058, %450 ], [ %.058, %443 ], [ %.058, %442 ], [ %.058, %441 ], [ %.058, %440 ], [ %.058, %439 ], [ %.058, %438 ], [ %.058, %437 ], [ %.058, %435 ], [ %.058, %430 ], [ %.058, %429 ], [ %.058, %428 ], [ %.058, %427 ], [ %.058, %426 ], [ %.058, %425 ], [ %.058, %411 ], [ %.058, %401 ], [ %.058, %399 ], [ %.058, %396 ], [ %.058, %395 ], [ %.058, %384 ], [ %.058, %374 ], [ %.058, %373 ], [ %.058, %357 ], [ %.058, %347 ], [ %.058, %346 ], [ %.058, %345 ], [ %.058, %335 ], [ %.058, %325 ], [ %.058, %324 ], [ %.058, %314 ], [ %.058, %304 ], [ %.058, %302 ], [ %.058, %300 ], [ %.058, %285 ], [ %.058, %275 ], [ %.058, %271 ], [ %.058, %268 ], [ %.058, %267 ], [ %.058, %257 ], [ %.058, %247 ], [ %.058, %242 ], [ %.058, %241 ], [ %.058, %231 ], [ %.058, %221 ], [ %.058, %219 ], [ %.058, %208 ], [ %.058, %198 ], [ %.058, %197 ], [ %196, %195 ], [ %.058, %194 ], [ %.058, %193 ], [ %.058, %182 ], [ %.058, %172 ], [ %.058, %171 ], [ %.058, %157 ], [ %.058, %147 ], [ %.058, %145 ], [ %.058, %134 ], [ %.058, %124 ], [ %.058, %123 ], [ %.058, %113 ], [ %.058, %103 ], [ %.058, %98 ], [ 0, %97 ], [ %.058, %95 ], [ %.058, %94 ], [ %.058, %84 ], [ %.058, %74 ], [ %.058, %72 ], [ %.058, %67 ], [ %.058, %65 ], [ %.058, %54 ], [ %.058, %44 ], [ %.058, %43 ], [ %.058, %41 ], [ %.058, %28 ], [ %.058, %18 ]
  %.056.be = phi i32 [ %.056, %17 ], [ %.056, %452 ], [ %.056, %450 ], [ %.056, %443 ], [ %.056, %442 ], [ %.056, %441 ], [ %.056, %440 ], [ %.056, %439 ], [ %.056, %438 ], [ %.056, %437 ], [ %436, %435 ], [ %.056, %430 ], [ %.056, %429 ], [ 0, %428 ], [ %.056, %427 ], [ %.056, %426 ], [ %.056, %425 ], [ %.056, %411 ], [ %.056, %401 ], [ %.056, %399 ], [ %.056, %396 ], [ %.056, %395 ], [ %.056, %384 ], [ %.056, %374 ], [ %.056, %373 ], [ %.056, %357 ], [ %.056, %347 ], [ %.056, %346 ], [ %.056, %345 ], [ %.056, %335 ], [ %.056, %325 ], [ %.056, %324 ], [ %.056, %314 ], [ %.056, %304 ], [ %.056, %302 ], [ %.056, %300 ], [ %.056, %285 ], [ %.056, %275 ], [ %.056, %271 ], [ %.056, %268 ], [ %.056, %267 ], [ %.056, %257 ], [ %.056, %247 ], [ %.056, %242 ], [ %.056, %241 ], [ %.056, %231 ], [ %.056, %221 ], [ %.056, %219 ], [ %.056, %208 ], [ %.056, %198 ], [ %.056, %197 ], [ %.056, %195 ], [ %.056, %194 ], [ %.056, %193 ], [ %183, %182 ], [ %.056, %172 ], [ %.056, %171 ], [ %.056, %157 ], [ %.056, %147 ], [ %.056, %145 ], [ %.056, %134 ], [ %.056, %124 ], [ %.056, %123 ], [ 0, %113 ], [ %.056, %103 ], [ %.056, %98 ], [ %.056, %97 ], [ %.056, %95 ], [ %.056, %94 ], [ %.056, %84 ], [ %.056, %74 ], [ %.056, %72 ], [ %.056, %67 ], [ %.056, %65 ], [ %.056, %54 ], [ %.056, %44 ], [ %.056, %43 ], [ %.056, %41 ], [ %.056, %28 ], [ %.056, %18 ]
  %.054.be = phi i32 [ %.054, %17 ], [ %.054, %452 ], [ %.054, %450 ], [ %.054, %443 ], [ %.054, %442 ], [ %.054, %441 ], [ %.054, %440 ], [ %.054, %439 ], [ %.054, %438 ], [ %.054, %437 ], [ %.054, %435 ], [ %.054, %430 ], [ %.054, %429 ], [ %.054, %428 ], [ %.054, %427 ], [ %.054, %426 ], [ %.054, %425 ], [ %.054, %411 ], [ %.054, %401 ], [ %400, %399 ], [ %.054, %396 ], [ %.054, %395 ], [ %.054, %384 ], [ %.054, %374 ], [ %.054, %373 ], [ %.054, %357 ], [ %.054, %347 ], [ %.054, %346 ], [ %.054, %345 ], [ %.054, %335 ], [ %.054, %325 ], [ %.054, %324 ], [ %.054, %314 ], [ %.054, %304 ], [ %.054, %302 ], [ %.054, %300 ], [ %.054, %285 ], [ %.054, %275 ], [ %.054, %271 ], [ %.054, %268 ], [ %.054, %267 ], [ %.054, %257 ], [ %.054, %247 ], [ %.054, %242 ], [ %.054, %241 ], [ %.054, %231 ], [ %.054, %221 ], [ %.054, %219 ], [ %.054, %208 ], [ %.054, %198 ], [ 1, %197 ], [ %.054, %195 ], [ %.054, %194 ], [ %.054, %193 ], [ %.054, %182 ], [ %.054, %172 ], [ %.054, %171 ], [ %.054, %157 ], [ %.054, %147 ], [ %.054, %145 ], [ %.054, %134 ], [ %.054, %124 ], [ %.054, %123 ], [ %.054, %113 ], [ %.054, %103 ], [ %.054, %98 ], [ %.054, %97 ], [ %.054, %95 ], [ %.054, %94 ], [ %.054, %84 ], [ %.054, %74 ], [ %.054, %72 ], [ %.054, %67 ], [ %.054, %65 ], [ %.054, %54 ], [ %.054, %44 ], [ %.054, %43 ], [ %.054, %41 ], [ %.054, %28 ], [ %.054, %18 ]
  %.052.be = phi i32 [ %.052, %17 ], [ %.052, %452 ], [ %451, %450 ], [ %.052, %443 ], [ %.052, %442 ], [ %.052, %441 ], [ %.052, %440 ], [ %.052, %439 ], [ 0, %438 ], [ %.052, %437 ], [ %.052, %435 ], [ %.052, %430 ], [ %.052, %429 ], [ %.052, %428 ], [ %.052, %427 ], [ %.052, %426 ], [ %.052, %425 ], [ %.052, %411 ], [ %.052, %401 ], [ %.052, %399 ], [ %.052, %396 ], [ %.052, %395 ], [ %385, %384 ], [ %.052, %374 ], [ %.052, %373 ], [ %.052, %357 ], [ %.052, %347 ], [ %.052, %346 ], [ %.052, %345 ], [ %.052, %335 ], [ %.052, %325 ], [ %.052, %324 ], [ %.052, %314 ], [ %.052, %304 ], [ %.052, %302 ], [ %.052, %300 ], [ %.052, %285 ], [ %.052, %275 ], [ %.052, %271 ], [ %.052, %268 ], [ %.052, %267 ], [ %.052, %257 ], [ %.052, %247 ], [ %.052, %242 ], [ %.052, %241 ], [ 0, %231 ], [ %.052, %221 ], [ %.052, %219 ], [ %.052, %208 ], [ %.052, %198 ], [ %.052, %197 ], [ %.052, %195 ], [ %.052, %194 ], [ %.052, %193 ], [ %.052, %182 ], [ %.052, %172 ], [ %.052, %171 ], [ %.052, %157 ], [ %.052, %147 ], [ %.052, %145 ], [ %.052, %134 ], [ %.052, %124 ], [ %.052, %123 ], [ %.052, %113 ], [ %.052, %103 ], [ %.052, %98 ], [ %.052, %97 ], [ %.052, %95 ], [ %.052, %94 ], [ %.052, %84 ], [ %.052, %74 ], [ %.052, %72 ], [ %.052, %67 ], [ %.052, %65 ], [ %.052, %54 ], [ %.052, %44 ], [ %.052, %43 ], [ %.052, %41 ], [ %.052, %28 ], [ %.052, %18 ]
  %.050.be = phi i32 [ %.050, %17 ], [ %.050, %452 ], [ %.050, %450 ], [ %.050, %443 ], [ %.050, %442 ], [ %.050, %441 ], [ %.050, %440 ], [ 0, %439 ], [ %.050, %438 ], [ %.050, %437 ], [ %.050, %435 ], [ %.050, %430 ], [ %.050, %429 ], [ %.050, %428 ], [ %.050, %427 ], [ %.050, %426 ], [ %.050, %425 ], [ %.050, %411 ], [ %.050, %401 ], [ %.050, %399 ], [ %.050, %396 ], [ %.050, %395 ], [ %.050, %384 ], [ %.050, %374 ], [ %.050, %373 ], [ %.050, %357 ], [ %.050, %347 ], [ %.050, %346 ], [ %.050, %345 ], [ %.050, %335 ], [ %.050, %325 ], [ %.050, %324 ], [ %.050, %314 ], [ %.050, %304 ], [ %303, %302 ], [ %.050, %300 ], [ %.050, %285 ], [ %.050, %275 ], [ %.050, %271 ], [ %.050, %268 ], [ %.050, %267 ], [ 0, %257 ], [ %.050, %247 ], [ %.050, %242 ], [ %.050, %241 ], [ %.050, %231 ], [ %.050, %221 ], [ %.050, %219 ], [ %.050, %208 ], [ %.050, %198 ], [ %.050, %197 ], [ %.050, %195 ], [ %.050, %194 ], [ %.050, %193 ], [ %.050, %182 ], [ %.050, %172 ], [ %.050, %171 ], [ %.050, %157 ], [ %.050, %147 ], [ %.050, %145 ], [ %.050, %134 ], [ %.050, %124 ], [ %.050, %123 ], [ %.050, %113 ], [ %.050, %103 ], [ %.050, %98 ], [ %.050, %97 ], [ %.050, %95 ], [ %.050, %94 ], [ %.050, %84 ], [ %.050, %74 ], [ %.050, %72 ], [ %.050, %67 ], [ %.050, %65 ], [ %.050, %54 ], [ %.050, %44 ], [ %.050, %43 ], [ %.050, %41 ], [ %.050, %28 ], [ %.050, %18 ]
  %.048.be = phi i32 [ %.048, %17 ], [ %.048, %452 ], [ %.048, %450 ], [ %.048, %443 ], [ %.048, %442 ], [ %.048, %441 ], [ %.048, %440 ], [ 0, %439 ], [ %.048, %438 ], [ %.048, %437 ], [ %.048, %435 ], [ %.048, %430 ], [ %.048, %429 ], [ %.048, %428 ], [ %.048, %427 ], [ %.048, %426 ], [ %.048, %425 ], [ %.048, %411 ], [ %.048, %401 ], [ %.048, %399 ], [ %.048, %396 ], [ %.048, %395 ], [ %.048, %384 ], [ %.048, %374 ], [ %.048, %373 ], [ %.048, %357 ], [ %.048, %347 ], [ %.neg64, %346 ], [ %.048, %345 ], [ %.048, %335 ], [ %.048, %325 ], [ %.048, %324 ], [ %.048, %314 ], [ %.048, %304 ], [ %.048, %302 ], [ %.048, %300 ], [ %.048, %285 ], [ %.048, %275 ], [ %.048, %271 ], [ %.048, %268 ], [ %.048, %267 ], [ 0, %257 ], [ %.048, %247 ], [ %.048, %242 ], [ %.048, %241 ], [ %.048, %231 ], [ %.048, %221 ], [ %.048, %219 ], [ %.048, %208 ], [ %.048, %198 ], [ %.048, %197 ], [ %.048, %195 ], [ %.048, %194 ], [ %.048, %193 ], [ %.048, %182 ], [ %.048, %172 ], [ %.048, %171 ], [ %.048, %157 ], [ %.048, %147 ], [ %.048, %145 ], [ %.048, %134 ], [ %.048, %124 ], [ %.048, %123 ], [ %.048, %113 ], [ %.048, %103 ], [ %.048, %98 ], [ %.048, %97 ], [ %.048, %95 ], [ %.048, %94 ], [ %.048, %84 ], [ %.048, %74 ], [ %.048, %72 ], [ %.048, %67 ], [ %.048, %65 ], [ %.048, %54 ], [ %.048, %44 ], [ %.048, %43 ], [ %.048, %41 ], [ %.048, %28 ], [ %.048, %18 ]
  %.0.be = phi i32 [ %.0, %17 ], [ -1497255046, %452 ], [ 1849329048, %450 ], [ 463282844, %443 ], [ -720743878, %442 ], [ -556781565, %441 ], [ 1904892451, %440 ], [ -990173507, %439 ], [ -437935786, %438 ], [ -1695279290, %437 ], [ 341061003, %435 ], [ -1017568926, %430 ], [ 23896903, %429 ], [ 1353357666, %428 ], [ 1563872796, %427 ], [ -715336810, %426 ], [ 2104504270, %425 ], [ %423, %411 ], [ %410, %401 ], [ -1930148393, %399 ], [ -666131094, %396 ], [ 1215710094, %395 ], [ %394, %384 ], [ %383, %374 ], [ 664059659, %373 ], [ %372, %357 ], [ %356, %347 ], [ 128106342, %346 ], [ 1732150205, %345 ], [ %344, %335 ], [ %334, %325 ], [ 570461380, %324 ], [ %323, %314 ], [ %313, %304 ], [ -248759075, %302 ], [ %301, %300 ], [ %299, %285 ], [ %284, %275 ], [ %274, %271 ], [ %270, %268 ], [ 128106342, %267 ], [ %266, %257 ], [ %256, %247 ], [ %246, %242 ], [ 1215710094, %241 ], [ %240, %231 ], [ %230, %221 ], [ %220, %219 ], [ %218, %208 ], [ %207, %198 ], [ -1930148393, %197 ], [ 1362782297, %195 ], [ -949432061, %194 ], [ 1826930971, %193 ], [ %192, %182 ], [ %181, %172 ], [ -371686782, %171 ], [ %170, %157 ], [ %156, %147 ], [ %146, %145 ], [ %144, %134 ], [ %133, %124 ], [ 1826930971, %123 ], [ %122, %113 ], [ %112, %103 ], [ %102, %98 ], [ 1362782297, %97 ], [ -63110558, %95 ], [ 379639342, %94 ], [ %93, %84 ], [ %83, %74 ], [ -312632448, %72 ], [ 94847414, %67 ], [ %66, %65 ], [ %64, %54 ], [ %53, %44 ], [ -312632448, %43 ], [ %42, %41 ], [ %40, %28 ], [ %27, %18 ]
  br label %17

18:                                               ; preds = %17
  %19 = load i32, i32* @x.1, align 4
  %20 = load i32, i32* @y.2, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 2104504270, i32 -1414152419
  br label %.backedge

28:                                               ; preds = %17
  %29 = sext i32 %.062 to i64
  %30 = load i64, i64* %7, align 8
  %31 = icmp sgt i64 %30, %29
  store i1 %31, i1* %6, align 1
  %32 = load i32, i32* @x.1, align 4
  %33 = load i32, i32* @y.2, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -752306239, i32 -1414152419
  br label %.backedge

41:                                               ; preds = %17
  %.0..0..0.42 = load volatile i1, i1* %6, align 1
  %42 = select i1 %.0..0..0.42, i32 78262559, i32 1682493407
  br label %.backedge

43:                                               ; preds = %17
  br label %.backedge

44:                                               ; preds = %17
  %45 = load i32, i32* @x.1, align 4
  %46 = load i32, i32* @y.2, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 -715336810, i32 743621571
  br label %.backedge

54:                                               ; preds = %17
  %55 = icmp slt i32 %.060, 10
  store i1 %55, i1* %5, align 1
  %56 = load i32, i32* @x.1, align 4
  %57 = load i32, i32* @y.2, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 836714030, i32 743621571
  br label %.backedge

65:                                               ; preds = %17
  %.0..0..0.43 = load volatile i1, i1* %5, align 1
  %66 = select i1 %.0..0..0.43, i32 -1368955403, i32 1449692092
  br label %.backedge

67:                                               ; preds = %17
  %68 = sext i32 %.062 to i64
  %69 = sext i32 %.060 to i64
  %70 = getelementptr inbounds [10 x i64], [10 x i64]* %14, i64 %68, i64 %69
  %71 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %70)
  br label %.backedge

72:                                               ; preds = %17
  %73 = add i32 %.060, 1
  br label %.backedge

74:                                               ; preds = %17
  %75 = load i32, i32* @x.1, align 4
  %76 = load i32, i32* @y.2, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 1563872796, i32 -419320987
  br label %.backedge

84:                                               ; preds = %17
  %85 = load i32, i32* @x.1, align 4
  %86 = load i32, i32* @y.2, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 -1994864665, i32 -419320987
  br label %.backedge

94:                                               ; preds = %17
  br label %.backedge

95:                                               ; preds = %17
  %96 = add i32 %.062, 1
  br label %.backedge

97:                                               ; preds = %17
  br label %.backedge

98:                                               ; preds = %17
  %99 = sext i32 %.058 to i64
  %100 = load i64, i64* %7, align 8
  %101 = icmp sgt i64 %100, %99
  %102 = select i1 %101, i32 1386493068, i32 -123666575
  br label %.backedge

103:                                              ; preds = %17
  %104 = load i32, i32* @x.1, align 4
  %105 = load i32, i32* @y.2, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 1353357666, i32 1339924271
  br label %.backedge

113:                                              ; preds = %17
  %114 = load i32, i32* @x.1, align 4
  %115 = load i32, i32* @y.2, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 983924303, i32 1339924271
  br label %.backedge

123:                                              ; preds = %17
  br label %.backedge

124:                                              ; preds = %17
  %125 = load i32, i32* @x.1, align 4
  %126 = load i32, i32* @y.2, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 23896903, i32 214904028
  br label %.backedge

134:                                              ; preds = %17
  %135 = icmp slt i32 %.056, 11
  store i1 %135, i1* %4, align 1
  %136 = load i32, i32* @x.1, align 4
  %137 = load i32, i32* @y.2, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 -160562175, i32 214904028
  br label %.backedge

145:                                              ; preds = %17
  %.0..0..0.44 = load volatile i1, i1* %4, align 1
  %146 = select i1 %.0..0..0.44, i32 -857333368, i32 1733970784
  br label %.backedge

147:                                              ; preds = %17
  %148 = load i32, i32* @x.1, align 4
  %149 = load i32, i32* @y.2, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 -1017568926, i32 -1452567442
  br label %.backedge

157:                                              ; preds = %17
  %158 = sext i32 %.058 to i64
  %159 = sext i32 %.056 to i64
  %160 = getelementptr inbounds [11 x i64], [11 x i64]* %16, i64 %158, i64 %159
  %161 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %160)
  %162 = load i32, i32* @x.1, align 4
  %163 = load i32, i32* @y.2, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 476226210, i32 -1452567442
  br label %.backedge

171:                                              ; preds = %17
  br label %.backedge

172:                                              ; preds = %17
  %173 = load i32, i32* @x.1, align 4
  %174 = load i32, i32* @y.2, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 341061003, i32 -178503727
  br label %.backedge

182:                                              ; preds = %17
  %183 = add i32 %.056, 1
  %184 = load i32, i32* @x.1, align 4
  %185 = load i32, i32* @y.2, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 -2134039292, i32 -178503727
  br label %.backedge

193:                                              ; preds = %17
  br label %.backedge

194:                                              ; preds = %17
  br label %.backedge

195:                                              ; preds = %17
  %196 = add i32 %.058, 1
  br label %.backedge

197:                                              ; preds = %17
  br label %.backedge

198:                                              ; preds = %17
  %199 = load i32, i32* @x.1, align 4
  %200 = load i32, i32* @y.2, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 -1695279290, i32 916668780
  br label %.backedge

208:                                              ; preds = %17
  %209 = icmp slt i32 %.054, 1024
  store i1 %209, i1* %3, align 1
  %210 = load i32, i32* @x.1, align 4
  %211 = load i32, i32* @y.2, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 -303924770, i32 916668780
  br label %.backedge

219:                                              ; preds = %17
  %.0..0..0.45 = load volatile i1, i1* %3, align 1
  %220 = select i1 %.0..0..0.45, i32 1979627550, i32 1110650961
  br label %.backedge

221:                                              ; preds = %17
  %222 = load i32, i32* @x.1, align 4
  %223 = load i32, i32* @y.2, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 -437935786, i32 764495887
  br label %.backedge

231:                                              ; preds = %17
  store i64 0, i64* %9, align 8
  %232 = load i32, i32* @x.1, align 4
  %233 = load i32, i32* @y.2, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 246829552, i32 764495887
  br label %.backedge

241:                                              ; preds = %17
  br label %.backedge

242:                                              ; preds = %17
  %243 = sext i32 %.052 to i64
  %244 = load i64, i64* %7, align 8
  %245 = icmp sgt i64 %244, %243
  %246 = select i1 %245, i32 1064015352, i32 -927306527
  br label %.backedge

247:                                              ; preds = %17
  %248 = load i32, i32* @x.1, align 4
  %249 = load i32, i32* @y.2, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 -990173507, i32 510395614
  br label %.backedge

257:                                              ; preds = %17
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 1111453090, i32 510395614
  br label %.backedge

267:                                              ; preds = %17
  br label %.backedge

268:                                              ; preds = %17
  %269 = icmp slt i32 %.048, 10
  %270 = select i1 %269, i32 -811755547, i32 -2010026184
  br label %.backedge

271:                                              ; preds = %17
  %272 = shl nuw i32 1, %.048
  %273 = and i32 %272, %.054
  %.not = icmp eq i32 %273, 0
  %274 = select i1 %.not, i32 570461380, i32 -628219746
  br label %.backedge

275:                                              ; preds = %17
  %276 = load i32, i32* @x.1, align 4
  %277 = load i32, i32* @y.2, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 1904892451, i32 -2091959466
  br label %.backedge

285:                                              ; preds = %17
  %286 = sext i32 %.052 to i64
  %287 = sext i32 %.048 to i64
  %288 = getelementptr inbounds [10 x i64], [10 x i64]* %14, i64 %286, i64 %287
  %289 = load i64, i64* %288, align 8
  %290 = icmp eq i64 %289, 1
  store i1 %290, i1* %2, align 1
  %291 = load i32, i32* @x.1, align 4
  %292 = load i32, i32* @y.2, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 404305075, i32 -2091959466
  br label %.backedge

300:                                              ; preds = %17
  %.0..0..0.46 = load volatile i1, i1* %2, align 1
  %301 = select i1 %.0..0..0.46, i32 -957864605, i32 -248759075
  br label %.backedge

302:                                              ; preds = %17
  %303 = add i32 %.050, 1
  br label %.backedge

304:                                              ; preds = %17
  %305 = load i32, i32* @x.1, align 4
  %306 = load i32, i32* @y.2, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 -556781565, i32 288498601
  br label %.backedge

314:                                              ; preds = %17
  %315 = load i32, i32* @x.1, align 4
  %316 = load i32, i32* @y.2, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 -877443482, i32 288498601
  br label %.backedge

324:                                              ; preds = %17
  br label %.backedge

325:                                              ; preds = %17
  %326 = load i32, i32* @x.1, align 4
  %327 = load i32, i32* @y.2, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 -720743878, i32 2104143917
  br label %.backedge

335:                                              ; preds = %17
  %336 = load i32, i32* @x.1, align 4
  %337 = load i32, i32* @y.2, align 4
  %338 = add i32 %336, -1
  %339 = mul i32 %338, %336
  %340 = and i32 %339, 1
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %342, %341
  %344 = select i1 %343, i32 -308300483, i32 2104143917
  br label %.backedge

345:                                              ; preds = %17
  br label %.backedge

346:                                              ; preds = %17
  %.neg64 = add i32 %.048, 1
  br label %.backedge

347:                                              ; preds = %17
  %348 = load i32, i32* @x.1, align 4
  %349 = load i32, i32* @y.2, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 463282844, i32 1190965989
  br label %.backedge

357:                                              ; preds = %17
  %358 = sext i32 %.052 to i64
  %359 = sext i32 %.050 to i64
  %360 = getelementptr inbounds [11 x i64], [11 x i64]* %16, i64 %358, i64 %359
  %361 = load i64, i64* %360, align 8
  %362 = load i64, i64* %9, align 8
  %363 = add i64 %362, %361
  store i64 %363, i64* %9, align 8
  %364 = load i32, i32* @x.1, align 4
  %365 = load i32, i32* @y.2, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 -8059973, i32 1190965989
  br label %.backedge

373:                                              ; preds = %17
  br label %.backedge

374:                                              ; preds = %17
  %375 = load i32, i32* @x.1, align 4
  %376 = load i32, i32* @y.2, align 4
  %377 = add i32 %375, -1
  %378 = mul i32 %377, %375
  %379 = and i32 %378, 1
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %381, %380
  %383 = select i1 %382, i32 1849329048, i32 -337572934
  br label %.backedge

384:                                              ; preds = %17
  %385 = add i32 %.052, 1
  %386 = load i32, i32* @x.1, align 4
  %387 = load i32, i32* @y.2, align 4
  %388 = add i32 %386, -1
  %389 = mul i32 %388, %386
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %392, %391
  %394 = select i1 %393, i32 -1269050704, i32 -337572934
  br label %.backedge

395:                                              ; preds = %17
  br label %.backedge

396:                                              ; preds = %17
  %397 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %8, i64* nonnull dereferenceable(8) %9)
  %398 = load i64, i64* %397, align 8
  store i64 %398, i64* %8, align 8
  br label %.backedge

399:                                              ; preds = %17
  %400 = add i32 %.054, 1
  br label %.backedge

401:                                              ; preds = %17
  %402 = load i32, i32* @x.1, align 4
  %403 = load i32, i32* @y.2, align 4
  %404 = add i32 %402, -1
  %405 = mul i32 %404, %402
  %406 = and i32 %405, 1
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %408, %407
  %410 = select i1 %409, i32 -1497255046, i32 335703810
  br label %.backedge

411:                                              ; preds = %17
  %412 = load i64, i64* %8, align 8
  %413 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %412)
  %414 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %413, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  call void @llvm.stackrestore(i8* %13)
  store i32 0, i32* %1, align 4
  %415 = load i32, i32* @x.1, align 4
  %416 = load i32, i32* @y.2, align 4
  %417 = add i32 %415, -1
  %418 = mul i32 %417, %415
  %419 = and i32 %418, 1
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %421, %420
  %423 = select i1 %422, i32 644762150, i32 335703810
  br label %.backedge

424:                                              ; preds = %17
  %.0..0..0.47 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.47

425:                                              ; preds = %17
  br label %.backedge

426:                                              ; preds = %17
  br label %.backedge

427:                                              ; preds = %17
  br label %.backedge

428:                                              ; preds = %17
  br label %.backedge

429:                                              ; preds = %17
  br label %.backedge

430:                                              ; preds = %17
  %431 = sext i32 %.058 to i64
  %432 = sext i32 %.056 to i64
  %433 = getelementptr inbounds [11 x i64], [11 x i64]* %16, i64 %431, i64 %432
  %434 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %433)
  br label %.backedge

435:                                              ; preds = %17
  %436 = add i32 %.056, 1
  br label %.backedge

437:                                              ; preds = %17
  br label %.backedge

438:                                              ; preds = %17
  store i64 0, i64* %9, align 8
  br label %.backedge

439:                                              ; preds = %17
  br label %.backedge

440:                                              ; preds = %17
  br label %.backedge

441:                                              ; preds = %17
  br label %.backedge

442:                                              ; preds = %17
  br label %.backedge

443:                                              ; preds = %17
  %444 = sext i32 %.052 to i64
  %445 = sext i32 %.050 to i64
  %446 = getelementptr inbounds [11 x i64], [11 x i64]* %16, i64 %444, i64 %445
  %447 = load i64, i64* %446, align 8
  %448 = load i64, i64* %9, align 8
  %449 = add i64 %448, %447
  store i64 %449, i64* %9, align 8
  br label %.backedge

450:                                              ; preds = %17
  %451 = add i32 %.052, 1
  br label %.backedge

452:                                              ; preds = %17
  %453 = load i64, i64* %8, align 8
  %454 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %453)
  %455 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %454, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  call void @llvm.stackrestore(i8* %13)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %3, align 8
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i64* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 600483578, %2 ], [ -1636601074, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 600483578, label %8
    i32 1293047424, label %.outer.backedge
    i32 -1815776730, label %11
    i32 -1636601074, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %9 = icmp slt i64 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 1293047424, i32 -1815776730
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i64* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i64* %.07.ph
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s622068695.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
