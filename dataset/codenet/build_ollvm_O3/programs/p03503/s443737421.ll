; ModuleID = 'build_ollvm/programs/p03503/s443737421.ll'
source_filename = "Project_CodeNet_C++1400/p03503/s443737421.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_Z5chmaxIxEbRT_S0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@f = global [105 x [10 x i32]] zeroinitializer, align 16
@p = global [105 x [11 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s443737421.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1358754547, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1358754547, label %11
    i32 1331721927, label %14
    i32 202108591, label %25
    i32 367224086, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1331721927, i32 367224086
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 202108591, i32 367224086
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1331721927, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %8 = getelementptr i8, i8* %7, i64 -24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %10
  %12 = bitcast i8* %11 to %"class.std::basic_ios"*
  %13 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %12, %"class.std::basic_ostream"* null)
  %14 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %15 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  br label %16

16:                                               ; preds = %.backedge, %0
  %.061 = phi i32 [ 0, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i64 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.045 = phi i32 [ undef, %0 ], [ %.045.be, %.backedge ]
  %.0 = phi i32 [ 2115355939, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 2115355939, label %17
    i32 1652825503, label %21
    i32 818895855, label %31
    i32 -1026281359, label %41
    i32 -549649939, label %42
    i32 -1308785011, label %52
    i32 -619145572, label %63
    i32 906651068, label %65
    i32 51725194, label %70
    i32 -369710812, label %80
    i32 -1160092020, label %91
    i32 432902521, label %92
    i32 -355075337, label %102
    i32 -1625976597, label %112
    i32 -1504063570, label %113
    i32 -1042351798, label %115
    i32 -580137705, label %116
    i32 813742390, label %126
    i32 593611551, label %138
    i32 -231428203, label %140
    i32 -1900329531, label %150
    i32 -469649574, label %160
    i32 774750576, label %161
    i32 62669769, label %164
    i32 15877445, label %174
    i32 1940196658, label %188
    i32 -447508189, label %189
    i32 -163950819, label %191
    i32 80809406, label %192
    i32 2873468, label %194
    i32 1941479343, label %195
    i32 -1563605025, label %198
    i32 2018802188, label %208
    i32 -1811295263, label %218
    i32 532614468, label %219
    i32 1415073557, label %229
    i32 -895259269, label %241
    i32 997621509, label %243
    i32 -1546253527, label %244
    i32 790443226, label %247
    i32 1036983208, label %257
    i32 1866919860, label %270
    i32 201401192, label %272
    i32 -2099661228, label %278
    i32 1659597971, label %280
    i32 -1859281380, label %281
    i32 -569276648, label %291
    i32 -897765825, label %302
    i32 -1045651941, label %303
    i32 1725944496, label %313
    i32 -1036457114, label %328
    i32 1523335301, label %329
    i32 -487412644, label %339
    i32 -1650035942, label %350
    i32 -1357063932, label %351
    i32 -793096442, label %353
    i32 -1386195634, label %363
    i32 1133099903, label %374
    i32 -2103083117, label %375
    i32 1422361621, label %379
    i32 151851950, label %380
    i32 -1918449910, label %381
    i32 1252396733, label %383
    i32 1356006076, label %384
    i32 -2088130914, label %385
    i32 -1042176359, label %386
    i32 -1315424646, label %391
    i32 -892038045, label %392
    i32 142259551, label %393
    i32 -219959327, label %394
    i32 -1850911807, label %396
    i32 -1118884124, label %402
    i32 -1028703552, label %403
  ]

.backedge:                                        ; preds = %16, %403, %402, %396, %394, %393, %392, %391, %386, %385, %384, %383, %381, %380, %379, %374, %363, %353, %351, %350, %339, %329, %328, %313, %303, %302, %291, %281, %280, %278, %272, %270, %257, %247, %244, %243, %241, %229, %219, %218, %208, %198, %195, %194, %192, %191, %189, %188, %174, %164, %161, %160, %150, %140, %138, %126, %116, %115, %113, %112, %102, %92, %91, %80, %70, %65, %63, %52, %42, %41, %31, %21, %17
  %.061.be = phi i32 [ %.061, %16 ], [ %.061, %403 ], [ %.061, %402 ], [ %.061, %396 ], [ %.061, %394 ], [ %.061, %393 ], [ %.061, %392 ], [ %.061, %391 ], [ %.061, %386 ], [ %.061, %385 ], [ %.061, %384 ], [ %.061, %383 ], [ %.061, %381 ], [ %.061, %380 ], [ %.061, %379 ], [ %.061, %374 ], [ %.061, %363 ], [ %.061, %353 ], [ %.061, %351 ], [ %.061, %350 ], [ %.061, %339 ], [ %.061, %329 ], [ %.061, %328 ], [ %.061, %313 ], [ %.061, %303 ], [ %.061, %302 ], [ %.061, %291 ], [ %.061, %281 ], [ %.061, %280 ], [ %.061, %278 ], [ %.061, %272 ], [ %.061, %270 ], [ %.061, %257 ], [ %.061, %247 ], [ %.061, %244 ], [ %.061, %243 ], [ %.061, %241 ], [ %.061, %229 ], [ %.061, %219 ], [ %.061, %218 ], [ %.061, %208 ], [ %.061, %198 ], [ %.061, %195 ], [ %.061, %194 ], [ %.061, %192 ], [ %.061, %191 ], [ %.061, %189 ], [ %.061, %188 ], [ %.061, %174 ], [ %.061, %164 ], [ %.061, %161 ], [ %.061, %160 ], [ %.061, %150 ], [ %.061, %140 ], [ %.061, %138 ], [ %.061, %126 ], [ %.061, %116 ], [ %.061, %115 ], [ %114, %113 ], [ %.061, %112 ], [ %.061, %102 ], [ %.061, %92 ], [ %.061, %91 ], [ %.061, %80 ], [ %.061, %70 ], [ %.061, %65 ], [ %.061, %63 ], [ %.061, %52 ], [ %.061, %42 ], [ %.061, %41 ], [ %.061, %31 ], [ %.061, %21 ], [ %.061, %17 ]
  %.059.be = phi i32 [ %.059, %16 ], [ %.059, %403 ], [ %.059, %402 ], [ %.059, %396 ], [ %.059, %394 ], [ %.059, %393 ], [ %.059, %392 ], [ %.059, %391 ], [ %.059, %386 ], [ %.059, %385 ], [ %.059, %384 ], [ %.059, %383 ], [ %382, %381 ], [ %.059, %380 ], [ 0, %379 ], [ %.059, %374 ], [ %.059, %363 ], [ %.059, %353 ], [ %.059, %351 ], [ %.059, %350 ], [ %.059, %339 ], [ %.059, %329 ], [ %.059, %328 ], [ %.059, %313 ], [ %.059, %303 ], [ %.059, %302 ], [ %.059, %291 ], [ %.059, %281 ], [ %.059, %280 ], [ %.059, %278 ], [ %.059, %272 ], [ %.059, %270 ], [ %.059, %257 ], [ %.059, %247 ], [ %.059, %244 ], [ %.059, %243 ], [ %.059, %241 ], [ %.059, %229 ], [ %.059, %219 ], [ %.059, %218 ], [ %.059, %208 ], [ %.059, %198 ], [ %.059, %195 ], [ %.059, %194 ], [ %.059, %192 ], [ %.059, %191 ], [ %.059, %189 ], [ %.059, %188 ], [ %.059, %174 ], [ %.059, %164 ], [ %.059, %161 ], [ %.059, %160 ], [ %.059, %150 ], [ %.059, %140 ], [ %.059, %138 ], [ %.059, %126 ], [ %.059, %116 ], [ %.059, %115 ], [ %.059, %113 ], [ %.059, %112 ], [ %.059, %102 ], [ %.059, %92 ], [ %.059, %91 ], [ %81, %80 ], [ %.059, %70 ], [ %.059, %65 ], [ %.059, %63 ], [ %.059, %52 ], [ %.059, %42 ], [ %.059, %41 ], [ 0, %31 ], [ %.059, %21 ], [ %.059, %17 ]
  %.057.be = phi i32 [ %.057, %16 ], [ %.057, %403 ], [ %.057, %402 ], [ %.057, %396 ], [ %.057, %394 ], [ %.057, %393 ], [ %.057, %392 ], [ %.057, %391 ], [ %.057, %386 ], [ %.057, %385 ], [ %.057, %384 ], [ %.057, %383 ], [ %.057, %381 ], [ %.057, %380 ], [ %.057, %379 ], [ %.057, %374 ], [ %.057, %363 ], [ %.057, %353 ], [ %.057, %351 ], [ %.057, %350 ], [ %.057, %339 ], [ %.057, %329 ], [ %.057, %328 ], [ %.057, %313 ], [ %.057, %303 ], [ %.057, %302 ], [ %.057, %291 ], [ %.057, %281 ], [ %.057, %280 ], [ %.057, %278 ], [ %.057, %272 ], [ %.057, %270 ], [ %.057, %257 ], [ %.057, %247 ], [ %.057, %244 ], [ %.057, %243 ], [ %.057, %241 ], [ %.057, %229 ], [ %.057, %219 ], [ %.057, %218 ], [ %.057, %208 ], [ %.057, %198 ], [ %.057, %195 ], [ %.057, %194 ], [ %193, %192 ], [ %.057, %191 ], [ %.057, %189 ], [ %.057, %188 ], [ %.057, %174 ], [ %.057, %164 ], [ %.057, %161 ], [ %.057, %160 ], [ %.057, %150 ], [ %.057, %140 ], [ %.057, %138 ], [ %.057, %126 ], [ %.057, %116 ], [ 0, %115 ], [ %.057, %113 ], [ %.057, %112 ], [ %.057, %102 ], [ %.057, %92 ], [ %.057, %91 ], [ %.057, %80 ], [ %.057, %70 ], [ %.057, %65 ], [ %.057, %63 ], [ %.057, %52 ], [ %.057, %42 ], [ %.057, %41 ], [ %.057, %31 ], [ %.057, %21 ], [ %.057, %17 ]
  %.055.be = phi i32 [ %.055, %16 ], [ %.055, %403 ], [ %.055, %402 ], [ %.055, %396 ], [ %.055, %394 ], [ %.055, %393 ], [ %.055, %392 ], [ %.055, %391 ], [ %.055, %386 ], [ 0, %385 ], [ %.055, %384 ], [ %.055, %383 ], [ %.055, %381 ], [ %.055, %380 ], [ %.055, %379 ], [ %.055, %374 ], [ %.055, %363 ], [ %.055, %353 ], [ %.055, %351 ], [ %.055, %350 ], [ %.055, %339 ], [ %.055, %329 ], [ %.055, %328 ], [ %.055, %313 ], [ %.055, %303 ], [ %.055, %302 ], [ %.055, %291 ], [ %.055, %281 ], [ %.055, %280 ], [ %.055, %278 ], [ %.055, %272 ], [ %.055, %270 ], [ %.055, %257 ], [ %.055, %247 ], [ %.055, %244 ], [ %.055, %243 ], [ %.055, %241 ], [ %.055, %229 ], [ %.055, %219 ], [ %.055, %218 ], [ %.055, %208 ], [ %.055, %198 ], [ %.055, %195 ], [ %.055, %194 ], [ %.055, %192 ], [ %.055, %191 ], [ %190, %189 ], [ %.055, %188 ], [ %.055, %174 ], [ %.055, %164 ], [ %.055, %161 ], [ %.055, %160 ], [ 0, %150 ], [ %.055, %140 ], [ %.055, %138 ], [ %.055, %126 ], [ %.055, %116 ], [ %.055, %115 ], [ %.055, %113 ], [ %.055, %112 ], [ %.055, %102 ], [ %.055, %92 ], [ %.055, %91 ], [ %.055, %80 ], [ %.055, %70 ], [ %.055, %65 ], [ %.055, %63 ], [ %.055, %52 ], [ %.055, %42 ], [ %.055, %41 ], [ %.055, %31 ], [ %.055, %21 ], [ %.055, %17 ]
  %.053.be = phi i32 [ %.053, %16 ], [ %.neg, %403 ], [ %.053, %402 ], [ %.053, %396 ], [ %.053, %394 ], [ %.053, %393 ], [ %.053, %392 ], [ %.053, %391 ], [ %.053, %386 ], [ %.053, %385 ], [ %.053, %384 ], [ %.053, %383 ], [ %.053, %381 ], [ %.053, %380 ], [ %.053, %379 ], [ %.053, %374 ], [ %364, %363 ], [ %.053, %353 ], [ %.053, %351 ], [ %.053, %350 ], [ %.053, %339 ], [ %.053, %329 ], [ %.053, %328 ], [ %.053, %313 ], [ %.053, %303 ], [ %.053, %302 ], [ %.053, %291 ], [ %.053, %281 ], [ %.053, %280 ], [ %.053, %278 ], [ %.053, %272 ], [ %.053, %270 ], [ %.053, %257 ], [ %.053, %247 ], [ %.053, %244 ], [ %.053, %243 ], [ %.053, %241 ], [ %.053, %229 ], [ %.053, %219 ], [ %.053, %218 ], [ %.053, %208 ], [ %.053, %198 ], [ %.053, %195 ], [ 1, %194 ], [ %.053, %192 ], [ %.053, %191 ], [ %.053, %189 ], [ %.053, %188 ], [ %.053, %174 ], [ %.053, %164 ], [ %.053, %161 ], [ %.053, %160 ], [ %.053, %150 ], [ %.053, %140 ], [ %.053, %138 ], [ %.053, %126 ], [ %.053, %116 ], [ %.053, %115 ], [ %.053, %113 ], [ %.053, %112 ], [ %.053, %102 ], [ %.053, %92 ], [ %.053, %91 ], [ %.053, %80 ], [ %.053, %70 ], [ %.053, %65 ], [ %.053, %63 ], [ %.053, %52 ], [ %.053, %42 ], [ %.053, %41 ], [ %.053, %31 ], [ %.053, %21 ], [ %.053, %17 ]
  %.051.be = phi i64 [ %.051, %16 ], [ %.051, %403 ], [ %.051, %402 ], [ %401, %396 ], [ %.051, %394 ], [ %.051, %393 ], [ %.051, %392 ], [ 0, %391 ], [ %.051, %386 ], [ %.051, %385 ], [ %.051, %384 ], [ %.051, %383 ], [ %.051, %381 ], [ %.051, %380 ], [ %.051, %379 ], [ %.051, %374 ], [ %.051, %363 ], [ %.051, %353 ], [ %.051, %351 ], [ %.051, %350 ], [ %.051, %339 ], [ %.051, %329 ], [ %.051, %328 ], [ %318, %313 ], [ %.051, %303 ], [ %.051, %302 ], [ %.051, %291 ], [ %.051, %281 ], [ %.051, %280 ], [ %.051, %278 ], [ %.051, %272 ], [ %.051, %270 ], [ %.051, %257 ], [ %.051, %247 ], [ %.051, %244 ], [ %.051, %243 ], [ %.051, %241 ], [ %.051, %229 ], [ %.051, %219 ], [ %.051, %218 ], [ 0, %208 ], [ %.051, %198 ], [ %.051, %195 ], [ %.051, %194 ], [ %.051, %192 ], [ %.051, %191 ], [ %.051, %189 ], [ %.051, %188 ], [ %.051, %174 ], [ %.051, %164 ], [ %.051, %161 ], [ %.051, %160 ], [ %.051, %150 ], [ %.051, %140 ], [ %.051, %138 ], [ %.051, %126 ], [ %.051, %116 ], [ %.051, %115 ], [ %.051, %113 ], [ %.051, %112 ], [ %.051, %102 ], [ %.051, %92 ], [ %.051, %91 ], [ %.051, %80 ], [ %.051, %70 ], [ %.051, %65 ], [ %.051, %63 ], [ %.051, %52 ], [ %.051, %42 ], [ %.051, %41 ], [ %.051, %31 ], [ %.051, %21 ], [ %.051, %17 ]
  %.049.be = phi i32 [ %.049, %16 ], [ %.049, %403 ], [ %.neg63, %402 ], [ %.049, %396 ], [ %.049, %394 ], [ %.049, %393 ], [ %.049, %392 ], [ 0, %391 ], [ %.049, %386 ], [ %.049, %385 ], [ %.049, %384 ], [ %.049, %383 ], [ %.049, %381 ], [ %.049, %380 ], [ %.049, %379 ], [ %.049, %374 ], [ %.049, %363 ], [ %.049, %353 ], [ %.049, %351 ], [ %.049, %350 ], [ %340, %339 ], [ %.049, %329 ], [ %.049, %328 ], [ %.049, %313 ], [ %.049, %303 ], [ %.049, %302 ], [ %.049, %291 ], [ %.049, %281 ], [ %.049, %280 ], [ %.049, %278 ], [ %.049, %272 ], [ %.049, %270 ], [ %.049, %257 ], [ %.049, %247 ], [ %.049, %244 ], [ %.049, %243 ], [ %.049, %241 ], [ %.049, %229 ], [ %.049, %219 ], [ %.049, %218 ], [ 0, %208 ], [ %.049, %198 ], [ %.049, %195 ], [ %.049, %194 ], [ %.049, %192 ], [ %.049, %191 ], [ %.049, %189 ], [ %.049, %188 ], [ %.049, %174 ], [ %.049, %164 ], [ %.049, %161 ], [ %.049, %160 ], [ %.049, %150 ], [ %.049, %140 ], [ %.049, %138 ], [ %.049, %126 ], [ %.049, %116 ], [ %.049, %115 ], [ %.049, %113 ], [ %.049, %112 ], [ %.049, %102 ], [ %.049, %92 ], [ %.049, %91 ], [ %.049, %80 ], [ %.049, %70 ], [ %.049, %65 ], [ %.049, %63 ], [ %.049, %52 ], [ %.049, %42 ], [ %.049, %41 ], [ %.049, %31 ], [ %.049, %21 ], [ %.049, %17 ]
  %.047.be = phi i32 [ %.047, %16 ], [ %.047, %403 ], [ %.047, %402 ], [ %.047, %396 ], [ %.047, %394 ], [ %.047, %393 ], [ %.047, %392 ], [ %.047, %391 ], [ %.047, %386 ], [ %.047, %385 ], [ %.047, %384 ], [ %.047, %383 ], [ %.047, %381 ], [ %.047, %380 ], [ %.047, %379 ], [ %.047, %374 ], [ %.047, %363 ], [ %.047, %353 ], [ %.047, %351 ], [ %.047, %350 ], [ %.047, %339 ], [ %.047, %329 ], [ %.047, %328 ], [ %.047, %313 ], [ %.047, %303 ], [ %.047, %302 ], [ %.047, %291 ], [ %.047, %281 ], [ %.047, %280 ], [ %279, %278 ], [ %.047, %272 ], [ %.047, %270 ], [ %.047, %257 ], [ %.047, %247 ], [ %.047, %244 ], [ 0, %243 ], [ %.047, %241 ], [ %.047, %229 ], [ %.047, %219 ], [ %.047, %218 ], [ %.047, %208 ], [ %.047, %198 ], [ %.047, %195 ], [ %.047, %194 ], [ %.047, %192 ], [ %.047, %191 ], [ %.047, %189 ], [ %.047, %188 ], [ %.047, %174 ], [ %.047, %164 ], [ %.047, %161 ], [ %.047, %160 ], [ %.047, %150 ], [ %.047, %140 ], [ %.047, %138 ], [ %.047, %126 ], [ %.047, %116 ], [ %.047, %115 ], [ %.047, %113 ], [ %.047, %112 ], [ %.047, %102 ], [ %.047, %92 ], [ %.047, %91 ], [ %.047, %80 ], [ %.047, %70 ], [ %.047, %65 ], [ %.047, %63 ], [ %.047, %52 ], [ %.047, %42 ], [ %.047, %41 ], [ %.047, %31 ], [ %.047, %21 ], [ %.047, %17 ]
  %.045.be = phi i32 [ %.045, %16 ], [ %.045, %403 ], [ %.045, %402 ], [ %.045, %396 ], [ %395, %394 ], [ %.045, %393 ], [ %.045, %392 ], [ %.045, %391 ], [ %.045, %386 ], [ %.045, %385 ], [ %.045, %384 ], [ %.045, %383 ], [ %.045, %381 ], [ %.045, %380 ], [ %.045, %379 ], [ %.045, %374 ], [ %.045, %363 ], [ %.045, %353 ], [ %.045, %351 ], [ %.045, %350 ], [ %.045, %339 ], [ %.045, %329 ], [ %.045, %328 ], [ %.045, %313 ], [ %.045, %303 ], [ %.045, %302 ], [ %292, %291 ], [ %.045, %281 ], [ %.045, %280 ], [ %.045, %278 ], [ %.045, %272 ], [ %.045, %270 ], [ %.045, %257 ], [ %.045, %247 ], [ %.045, %244 ], [ 0, %243 ], [ %.045, %241 ], [ %.045, %229 ], [ %.045, %219 ], [ %.045, %218 ], [ %.045, %208 ], [ %.045, %198 ], [ %.045, %195 ], [ %.045, %194 ], [ %.045, %192 ], [ %.045, %191 ], [ %.045, %189 ], [ %.045, %188 ], [ %.045, %174 ], [ %.045, %164 ], [ %.045, %161 ], [ %.045, %160 ], [ %.045, %150 ], [ %.045, %140 ], [ %.045, %138 ], [ %.045, %126 ], [ %.045, %116 ], [ %.045, %115 ], [ %.045, %113 ], [ %.045, %112 ], [ %.045, %102 ], [ %.045, %92 ], [ %.045, %91 ], [ %.045, %80 ], [ %.045, %70 ], [ %.045, %65 ], [ %.045, %63 ], [ %.045, %52 ], [ %.045, %42 ], [ %.045, %41 ], [ %.045, %31 ], [ %.045, %21 ], [ %.045, %17 ]
  %.0.be = phi i32 [ %.0, %16 ], [ -1386195634, %403 ], [ -487412644, %402 ], [ 1725944496, %396 ], [ -569276648, %394 ], [ 1036983208, %393 ], [ 1415073557, %392 ], [ 2018802188, %391 ], [ 15877445, %386 ], [ -1900329531, %385 ], [ 813742390, %384 ], [ -355075337, %383 ], [ -369710812, %381 ], [ -1308785011, %380 ], [ 818895855, %379 ], [ 1941479343, %374 ], [ %373, %363 ], [ %362, %353 ], [ -793096442, %351 ], [ 532614468, %350 ], [ %349, %339 ], [ %338, %329 ], [ 1523335301, %328 ], [ %327, %313 ], [ %312, %303 ], [ -1546253527, %302 ], [ %301, %291 ], [ %290, %281 ], [ -1859281380, %280 ], [ 1659597971, %278 ], [ %277, %272 ], [ %271, %270 ], [ %269, %257 ], [ %256, %247 ], [ %246, %244 ], [ -1546253527, %243 ], [ %242, %241 ], [ %240, %229 ], [ %228, %219 ], [ 532614468, %218 ], [ %217, %208 ], [ %207, %198 ], [ %197, %195 ], [ 1941479343, %194 ], [ -580137705, %192 ], [ 80809406, %191 ], [ 774750576, %189 ], [ -447508189, %188 ], [ %187, %174 ], [ %173, %164 ], [ %163, %161 ], [ 774750576, %160 ], [ %159, %150 ], [ %149, %140 ], [ %139, %138 ], [ %137, %126 ], [ %125, %116 ], [ -580137705, %115 ], [ 2115355939, %113 ], [ -1504063570, %112 ], [ %111, %102 ], [ %101, %92 ], [ -549649939, %91 ], [ %90, %80 ], [ %79, %70 ], [ 51725194, %65 ], [ %64, %63 ], [ %62, %52 ], [ %51, %42 ], [ -549649939, %41 ], [ %40, %31 ], [ %30, %21 ], [ %20, %17 ]
  br label %16

17:                                               ; preds = %16
  %18 = load i32, i32* %5, align 4
  %19 = icmp slt i32 %.061, %18
  %20 = select i1 %19, i32 1652825503, i32 -1042351798
  br label %.backedge

21:                                               ; preds = %16
  %22 = load i32, i32* @x.1, align 4
  %23 = load i32, i32* @y.2, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 818895855, i32 1422361621
  br label %.backedge

31:                                               ; preds = %16
  %32 = load i32, i32* @x.1, align 4
  %33 = load i32, i32* @y.2, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -1026281359, i32 1422361621
  br label %.backedge

41:                                               ; preds = %16
  br label %.backedge

42:                                               ; preds = %16
  %43 = load i32, i32* @x.1, align 4
  %44 = load i32, i32* @y.2, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 -1308785011, i32 151851950
  br label %.backedge

52:                                               ; preds = %16
  %53 = icmp slt i32 %.059, 10
  store i1 %53, i1* %4, align 1
  %54 = load i32, i32* @x.1, align 4
  %55 = load i32, i32* @y.2, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -619145572, i32 151851950
  br label %.backedge

63:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %64 = select i1 %.0..0..0., i32 906651068, i32 432902521
  br label %.backedge

65:                                               ; preds = %16
  %66 = sext i32 %.061 to i64
  %67 = sext i32 %.059 to i64
  %68 = getelementptr inbounds [105 x [10 x i32]], [105 x [10 x i32]]* @f, i64 0, i64 %66, i64 %67
  %69 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %68)
  br label %.backedge

70:                                               ; preds = %16
  %71 = load i32, i32* @x.1, align 4
  %72 = load i32, i32* @y.2, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 -369710812, i32 -1918449910
  br label %.backedge

80:                                               ; preds = %16
  %81 = add i32 %.059, 1
  %82 = load i32, i32* @x.1, align 4
  %83 = load i32, i32* @y.2, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 -1160092020, i32 -1918449910
  br label %.backedge

91:                                               ; preds = %16
  br label %.backedge

92:                                               ; preds = %16
  %93 = load i32, i32* @x.1, align 4
  %94 = load i32, i32* @y.2, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 -355075337, i32 1252396733
  br label %.backedge

102:                                              ; preds = %16
  %103 = load i32, i32* @x.1, align 4
  %104 = load i32, i32* @y.2, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -1625976597, i32 1252396733
  br label %.backedge

112:                                              ; preds = %16
  br label %.backedge

113:                                              ; preds = %16
  %114 = add i32 %.061, 1
  br label %.backedge

115:                                              ; preds = %16
  br label %.backedge

116:                                              ; preds = %16
  %117 = load i32, i32* @x.1, align 4
  %118 = load i32, i32* @y.2, align 4
  %119 = add i32 %117, -1
  %120 = mul i32 %119, %117
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %123, %122
  %125 = select i1 %124, i32 813742390, i32 1356006076
  br label %.backedge

126:                                              ; preds = %16
  %127 = load i32, i32* %5, align 4
  %128 = icmp slt i32 %.057, %127
  store i1 %128, i1* %3, align 1
  %129 = load i32, i32* @x.1, align 4
  %130 = load i32, i32* @y.2, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 593611551, i32 1356006076
  br label %.backedge

138:                                              ; preds = %16
  %.0..0..0.42 = load volatile i1, i1* %3, align 1
  %139 = select i1 %.0..0..0.42, i32 -231428203, i32 2873468
  br label %.backedge

140:                                              ; preds = %16
  %141 = load i32, i32* @x.1, align 4
  %142 = load i32, i32* @y.2, align 4
  %143 = add i32 %141, -1
  %144 = mul i32 %143, %141
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %147, %146
  %149 = select i1 %148, i32 -1900329531, i32 -2088130914
  br label %.backedge

150:                                              ; preds = %16
  %151 = load i32, i32* @x.1, align 4
  %152 = load i32, i32* @y.2, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 -469649574, i32 -2088130914
  br label %.backedge

160:                                              ; preds = %16
  br label %.backedge

161:                                              ; preds = %16
  %162 = icmp slt i32 %.055, 11
  %163 = select i1 %162, i32 62669769, i32 -163950819
  br label %.backedge

164:                                              ; preds = %16
  %165 = load i32, i32* @x.1, align 4
  %166 = load i32, i32* @y.2, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 15877445, i32 -1042176359
  br label %.backedge

174:                                              ; preds = %16
  %175 = sext i32 %.057 to i64
  %176 = sext i32 %.055 to i64
  %177 = getelementptr inbounds [105 x [11 x i64]], [105 x [11 x i64]]* @p, i64 0, i64 %175, i64 %176
  %178 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %177)
  %179 = load i32, i32* @x.1, align 4
  %180 = load i32, i32* @y.2, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 1940196658, i32 -1042176359
  br label %.backedge

188:                                              ; preds = %16
  br label %.backedge

189:                                              ; preds = %16
  %190 = add i32 %.055, 1
  br label %.backedge

191:                                              ; preds = %16
  br label %.backedge

192:                                              ; preds = %16
  %193 = add i32 %.057, 1
  br label %.backedge

194:                                              ; preds = %16
  store i64 -1000000000000000000, i64* %6, align 8
  br label %.backedge

195:                                              ; preds = %16
  %196 = icmp slt i32 %.053, 1024
  %197 = select i1 %196, i32 -1563605025, i32 -2103083117
  br label %.backedge

198:                                              ; preds = %16
  %199 = load i32, i32* @x.1, align 4
  %200 = load i32, i32* @y.2, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 2018802188, i32 -1315424646
  br label %.backedge

208:                                              ; preds = %16
  %209 = load i32, i32* @x.1, align 4
  %210 = load i32, i32* @y.2, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 -1811295263, i32 -1315424646
  br label %.backedge

218:                                              ; preds = %16
  br label %.backedge

219:                                              ; preds = %16
  %220 = load i32, i32* @x.1, align 4
  %221 = load i32, i32* @y.2, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 1415073557, i32 -892038045
  br label %.backedge

229:                                              ; preds = %16
  %230 = load i32, i32* %5, align 4
  %231 = icmp slt i32 %.049, %230
  store i1 %231, i1* %2, align 1
  %232 = load i32, i32* @x.1, align 4
  %233 = load i32, i32* @y.2, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 -895259269, i32 -892038045
  br label %.backedge

241:                                              ; preds = %16
  %.0..0..0.43 = load volatile i1, i1* %2, align 1
  %242 = select i1 %.0..0..0.43, i32 997621509, i32 -1357063932
  br label %.backedge

243:                                              ; preds = %16
  br label %.backedge

244:                                              ; preds = %16
  %245 = icmp slt i32 %.045, 10
  %246 = select i1 %245, i32 790443226, i32 -1045651941
  br label %.backedge

247:                                              ; preds = %16
  %248 = load i32, i32* @x.1, align 4
  %249 = load i32, i32* @y.2, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 1036983208, i32 142259551
  br label %.backedge

257:                                              ; preds = %16
  %258 = shl nuw i32 1, %.045
  %259 = and i32 %258, %.053
  %260 = icmp ne i32 %259, 0
  store i1 %260, i1* %1, align 1
  %261 = load i32, i32* @x.1, align 4
  %262 = load i32, i32* @y.2, align 4
  %263 = add i32 %261, -1
  %264 = mul i32 %263, %261
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %267, %266
  %269 = select i1 %268, i32 1866919860, i32 142259551
  br label %.backedge

270:                                              ; preds = %16
  %.0..0..0.44 = load volatile i1, i1* %1, align 1
  %271 = select i1 %.0..0..0.44, i32 201401192, i32 1659597971
  br label %.backedge

272:                                              ; preds = %16
  %273 = sext i32 %.049 to i64
  %274 = sext i32 %.045 to i64
  %275 = getelementptr inbounds [105 x [10 x i32]], [105 x [10 x i32]]* @f, i64 0, i64 %273, i64 %274
  %276 = load i32, i32* %275, align 4
  %.not = icmp eq i32 %276, 0
  %277 = select i1 %.not, i32 1659597971, i32 -2099661228
  br label %.backedge

278:                                              ; preds = %16
  %279 = add i32 %.047, 1
  br label %.backedge

280:                                              ; preds = %16
  br label %.backedge

281:                                              ; preds = %16
  %282 = load i32, i32* @x.1, align 4
  %283 = load i32, i32* @y.2, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 -569276648, i32 -219959327
  br label %.backedge

291:                                              ; preds = %16
  %292 = add i32 %.045, 1
  %293 = load i32, i32* @x.1, align 4
  %294 = load i32, i32* @y.2, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 -897765825, i32 -219959327
  br label %.backedge

302:                                              ; preds = %16
  br label %.backedge

303:                                              ; preds = %16
  %304 = load i32, i32* @x.1, align 4
  %305 = load i32, i32* @y.2, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 1725944496, i32 -1850911807
  br label %.backedge

313:                                              ; preds = %16
  %314 = sext i32 %.049 to i64
  %315 = sext i32 %.047 to i64
  %316 = getelementptr inbounds [105 x [11 x i64]], [105 x [11 x i64]]* @p, i64 0, i64 %314, i64 %315
  %317 = load i64, i64* %316, align 8
  %318 = add i64 %317, %.051
  %319 = load i32, i32* @x.1, align 4
  %320 = load i32, i32* @y.2, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 -1036457114, i32 -1850911807
  br label %.backedge

328:                                              ; preds = %16
  br label %.backedge

329:                                              ; preds = %16
  %330 = load i32, i32* @x.1, align 4
  %331 = load i32, i32* @y.2, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 -487412644, i32 -1118884124
  br label %.backedge

339:                                              ; preds = %16
  %340 = add i32 %.049, 1
  %341 = load i32, i32* @x.1, align 4
  %342 = load i32, i32* @y.2, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 -1650035942, i32 -1118884124
  br label %.backedge

350:                                              ; preds = %16
  br label %.backedge

351:                                              ; preds = %16
  %352 = call zeroext i1 @_Z5chmaxIxEbRT_S0_(i64* nonnull dereferenceable(8) %6, i64 %.051)
  br label %.backedge

353:                                              ; preds = %16
  %354 = load i32, i32* @x.1, align 4
  %355 = load i32, i32* @y.2, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 -1386195634, i32 -1028703552
  br label %.backedge

363:                                              ; preds = %16
  %364 = add i32 %.053, 1
  %365 = load i32, i32* @x.1, align 4
  %366 = load i32, i32* @y.2, align 4
  %367 = add i32 %365, -1
  %368 = mul i32 %367, %365
  %369 = and i32 %368, 1
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %371, %370
  %373 = select i1 %372, i32 1133099903, i32 -1028703552
  br label %.backedge

374:                                              ; preds = %16
  br label %.backedge

375:                                              ; preds = %16
  %376 = load i64, i64* %6, align 8
  %377 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %376)
  %378 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %377, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0

379:                                              ; preds = %16
  br label %.backedge

380:                                              ; preds = %16
  br label %.backedge

381:                                              ; preds = %16
  %382 = add i32 %.059, 1
  br label %.backedge

383:                                              ; preds = %16
  br label %.backedge

384:                                              ; preds = %16
  br label %.backedge

385:                                              ; preds = %16
  br label %.backedge

386:                                              ; preds = %16
  %387 = sext i32 %.057 to i64
  %388 = sext i32 %.055 to i64
  %389 = getelementptr inbounds [105 x [11 x i64]], [105 x [11 x i64]]* @p, i64 0, i64 %387, i64 %388
  %390 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %389)
  br label %.backedge

391:                                              ; preds = %16
  br label %.backedge

392:                                              ; preds = %16
  br label %.backedge

393:                                              ; preds = %16
  br label %.backedge

394:                                              ; preds = %16
  %395 = add i32 %.045, 1
  br label %.backedge

396:                                              ; preds = %16
  %397 = sext i32 %.049 to i64
  %398 = sext i32 %.047 to i64
  %399 = getelementptr inbounds [105 x [11 x i64]], [105 x [11 x i64]]* @p, i64 0, i64 %397, i64 %398
  %400 = load i64, i64* %399, align 8
  %401 = add i64 %400, %.051
  br label %.backedge

402:                                              ; preds = %16
  %.neg63 = add i32 %.049, 1
  br label %.backedge

403:                                              ; preds = %16
  %.neg = add i32 %.053, 1
  br label %.backedge
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_Z5chmaxIxEbRT_S0_(i64* dereferenceable(8) %0, i64 %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %4, align 8
  store i64 %1, i64* %3, align 8
  br label %6

6:                                                ; preds = %.backedge, %2
  %.09 = phi i1 [ undef, %2 ], [ %.09.be, %.backedge ]
  %.0 = phi i32 [ 170046386, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 170046386, label %7
    i32 -1615788958, label %10
    i32 -714693553, label %20
    i32 -1007189351, label %30
    i32 -1757508801, label %31
    i32 -333580517, label %41
    i32 430222158, label %51
    i32 -634089491, label %52
    i32 -498558269, label %53
    i32 -927389786, label %54
  ]

.backedge:                                        ; preds = %6, %54, %53, %51, %41, %31, %30, %20, %10, %7
  %.09.be = phi i1 [ %.09, %6 ], [ false, %54 ], [ true, %53 ], [ %.09, %51 ], [ false, %41 ], [ %.09, %31 ], [ %.09, %30 ], [ true, %20 ], [ %.09, %10 ], [ %.09, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ -333580517, %54 ], [ -714693553, %53 ], [ -634089491, %51 ], [ %50, %41 ], [ %40, %31 ], [ -634089491, %30 ], [ %29, %20 ], [ %19, %10 ], [ %9, %7 ]
  br label %6

7:                                                ; preds = %6
  %.0..0..0.7 = load volatile i64, i64* %4, align 8
  %.0..0..0.8 = load volatile i64, i64* %3, align 8
  %8 = icmp slt i64 %.0..0..0.7, %.0..0..0.8
  %9 = select i1 %8, i32 -1615788958, i32 -1757508801
  br label %.backedge

10:                                               ; preds = %6
  %11 = load i32, i32* @x.3, align 4
  %12 = load i32, i32* @y.4, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 -714693553, i32 -498558269
  br label %.backedge

20:                                               ; preds = %6
  store i64 %1, i64* %0, align 8
  %21 = load i32, i32* @x.3, align 4
  %22 = load i32, i32* @y.4, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 -1007189351, i32 -498558269
  br label %.backedge

30:                                               ; preds = %6
  br label %.backedge

31:                                               ; preds = %6
  %32 = load i32, i32* @x.3, align 4
  %33 = load i32, i32* @y.4, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -333580517, i32 -927389786
  br label %.backedge

41:                                               ; preds = %6
  %42 = load i32, i32* @x.3, align 4
  %43 = load i32, i32* @y.4, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 430222158, i32 -927389786
  br label %.backedge

51:                                               ; preds = %6
  br label %.backedge

52:                                               ; preds = %6
  ret i1 %.09

53:                                               ; preds = %6
  store i64 %1, i64* %0, align 8
  br label %.backedge

54:                                               ; preds = %6
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s443737421.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
