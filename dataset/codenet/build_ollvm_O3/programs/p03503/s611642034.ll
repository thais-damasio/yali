; ModuleID = 'build_ollvm/programs/p03503/s611642034.ll'
source_filename = "Project_CodeNet_C++1400/p03503/s611642034.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3maxIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@f = global [110 x [10 x i32]] zeroinitializer, align 16
@p = global [110 x [11 x i64]] zeroinitializer, align 16
@cnt = local_unnamed_addr global [110 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s611642034.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  br label %10

10:                                               ; preds = %.backedge, %0
  %.063 = phi i32 [ 0, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.0 = phi i32 [ 740182953, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 740182953, label %11
    i32 -340098637, label %15
    i32 -113935334, label %16
    i32 1018363279, label %19
    i32 -499297567, label %24
    i32 -1077005985, label %25
    i32 -145287073, label %26
    i32 1805235930, label %36
    i32 229742426, label %47
    i32 45363706, label %48
    i32 603535641, label %49
    i32 -1651463060, label %59
    i32 998180881, label %71
    i32 116337080, label %73
    i32 1166246726, label %83
    i32 459630869, label %93
    i32 -1693671501, label %94
    i32 1790972388, label %104
    i32 -1080590223, label %115
    i32 1769467143, label %117
    i32 -1501028906, label %122
    i32 -1078987689, label %124
    i32 1932888610, label %134
    i32 -1323251955, label %144
    i32 -1793071787, label %145
    i32 1311975771, label %147
    i32 1851435088, label %148
    i32 -1859031490, label %151
    i32 128063795, label %154
    i32 1723623026, label %155
    i32 -329630630, label %156
    i32 -1699258574, label %160
    i32 -16689238, label %170
    i32 86150369, label %182
    i32 -926916906, label %183
    i32 -1393035102, label %185
    i32 518582338, label %186
    i32 -1437733199, label %189
    i32 1544602681, label %192
    i32 1512300651, label %193
    i32 -592415404, label %197
    i32 1545686131, label %207
    i32 1568347168, label %222
    i32 1547752952, label %224
    i32 -1993828101, label %229
    i32 936934173, label %230
    i32 -8945032, label %231
    i32 1153164981, label %241
    i32 994408665, label %251
    i32 661960459, label %252
    i32 -2132645460, label %262
    i32 -1516829848, label %272
    i32 1068834010, label %273
    i32 416876759, label %283
    i32 -1107223943, label %294
    i32 -1878424439, label %295
    i32 -509106114, label %296
    i32 -1647439344, label %306
    i32 832265675, label %318
    i32 63155694, label %320
    i32 -154612021, label %329
    i32 -2112725655, label %339
    i32 1729356755, label %350
    i32 -1627921295, label %351
    i32 647939649, label %354
    i32 99366088, label %356
    i32 -674216740, label %366
    i32 -492243136, label %379
    i32 -1553061908, label %380
    i32 705134168, label %382
    i32 -1792479427, label %383
    i32 1641471320, label %384
    i32 -1438742128, label %385
    i32 1236881725, label %386
    i32 -1074808655, label %389
    i32 815108825, label %390
    i32 -828136277, label %391
    i32 -418429625, label %392
    i32 -1941123007, label %393
    i32 1544494243, label %394
    i32 2139171505, label %396
  ]

.backedge:                                        ; preds = %10, %396, %394, %393, %392, %391, %390, %389, %386, %385, %384, %383, %382, %380, %366, %356, %354, %351, %350, %339, %329, %320, %318, %306, %296, %295, %294, %283, %273, %272, %262, %252, %251, %241, %231, %230, %229, %224, %222, %207, %197, %193, %192, %189, %186, %185, %183, %182, %170, %160, %156, %155, %154, %151, %148, %147, %145, %144, %134, %124, %122, %117, %115, %104, %94, %93, %83, %73, %71, %59, %49, %48, %47, %36, %26, %25, %24, %19, %16, %15, %11
  %.063.be = phi i32 [ %.063, %10 ], [ %.063, %396 ], [ %.063, %394 ], [ %.063, %393 ], [ %.063, %392 ], [ %.063, %391 ], [ %.063, %390 ], [ %.063, %389 ], [ %.063, %386 ], [ %.063, %385 ], [ %.063, %384 ], [ %.063, %383 ], [ %.063, %382 ], [ %381, %380 ], [ %.063, %366 ], [ %.063, %356 ], [ %.063, %354 ], [ %.063, %351 ], [ %.063, %350 ], [ %.063, %339 ], [ %.063, %329 ], [ %.063, %320 ], [ %.063, %318 ], [ %.063, %306 ], [ %.063, %296 ], [ %.063, %295 ], [ %.063, %294 ], [ %.063, %283 ], [ %.063, %273 ], [ %.063, %272 ], [ %.063, %262 ], [ %.063, %252 ], [ %.063, %251 ], [ %.063, %241 ], [ %.063, %231 ], [ %.063, %230 ], [ %.063, %229 ], [ %.063, %224 ], [ %.063, %222 ], [ %.063, %207 ], [ %.063, %197 ], [ %.063, %193 ], [ %.063, %192 ], [ %.063, %189 ], [ %.063, %186 ], [ %.063, %185 ], [ %.063, %183 ], [ %.063, %182 ], [ %.063, %170 ], [ %.063, %160 ], [ %.063, %156 ], [ %.063, %155 ], [ %.063, %154 ], [ %.063, %151 ], [ %.063, %148 ], [ %.063, %147 ], [ %.063, %145 ], [ %.063, %144 ], [ %.063, %134 ], [ %.063, %124 ], [ %.063, %122 ], [ %.063, %117 ], [ %.063, %115 ], [ %.063, %104 ], [ %.063, %94 ], [ %.063, %93 ], [ %.063, %83 ], [ %.063, %73 ], [ %.063, %71 ], [ %.063, %59 ], [ %.063, %49 ], [ %.063, %48 ], [ %.063, %47 ], [ %37, %36 ], [ %.063, %26 ], [ %.063, %25 ], [ %.063, %24 ], [ %.063, %19 ], [ %.063, %16 ], [ %.063, %15 ], [ %.063, %11 ]
  %.061.be = phi i32 [ %.061, %10 ], [ %.061, %396 ], [ %.061, %394 ], [ %.061, %393 ], [ %.061, %392 ], [ %.061, %391 ], [ %.061, %390 ], [ %.061, %389 ], [ %.061, %386 ], [ %.061, %385 ], [ %.061, %384 ], [ %.061, %383 ], [ %.061, %382 ], [ %.061, %380 ], [ %.061, %366 ], [ %.061, %356 ], [ %.061, %354 ], [ %.061, %351 ], [ %.061, %350 ], [ %.061, %339 ], [ %.061, %329 ], [ %.061, %320 ], [ %.061, %318 ], [ %.061, %306 ], [ %.061, %296 ], [ %.061, %295 ], [ %.061, %294 ], [ %.061, %283 ], [ %.061, %273 ], [ %.061, %272 ], [ %.061, %262 ], [ %.061, %252 ], [ %.061, %251 ], [ %.061, %241 ], [ %.061, %231 ], [ %.061, %230 ], [ %.061, %229 ], [ %.061, %224 ], [ %.061, %222 ], [ %.061, %207 ], [ %.061, %197 ], [ %.061, %193 ], [ %.061, %192 ], [ %.061, %189 ], [ %.061, %186 ], [ %.061, %185 ], [ %.061, %183 ], [ %.061, %182 ], [ %.061, %170 ], [ %.061, %160 ], [ %.061, %156 ], [ %.061, %155 ], [ %.061, %154 ], [ %.061, %151 ], [ %.061, %148 ], [ %.061, %147 ], [ %.061, %145 ], [ %.061, %144 ], [ %.061, %134 ], [ %.061, %124 ], [ %.061, %122 ], [ %.061, %117 ], [ %.061, %115 ], [ %.061, %104 ], [ %.061, %94 ], [ %.061, %93 ], [ %.061, %83 ], [ %.061, %73 ], [ %.061, %71 ], [ %.061, %59 ], [ %.061, %49 ], [ %.061, %48 ], [ %.061, %47 ], [ %.061, %36 ], [ %.061, %26 ], [ %.061, %25 ], [ %.neg68, %24 ], [ %.061, %19 ], [ %.061, %16 ], [ 0, %15 ], [ %.061, %11 ]
  %.059.be = phi i32 [ %.059, %10 ], [ %.059, %396 ], [ %.059, %394 ], [ %.059, %393 ], [ %.059, %392 ], [ %.059, %391 ], [ %.059, %390 ], [ %.059, %389 ], [ %.059, %386 ], [ %.059, %385 ], [ %.059, %384 ], [ %.059, %383 ], [ %.059, %382 ], [ %.059, %380 ], [ %.059, %366 ], [ %.059, %356 ], [ %.059, %354 ], [ %.059, %351 ], [ %.059, %350 ], [ %.059, %339 ], [ %.059, %329 ], [ %.059, %320 ], [ %.059, %318 ], [ %.059, %306 ], [ %.059, %296 ], [ %.059, %295 ], [ %.059, %294 ], [ %.059, %283 ], [ %.059, %273 ], [ %.059, %272 ], [ %.059, %262 ], [ %.059, %252 ], [ %.059, %251 ], [ %.059, %241 ], [ %.059, %231 ], [ %.059, %230 ], [ %.059, %229 ], [ %.059, %224 ], [ %.059, %222 ], [ %.059, %207 ], [ %.059, %197 ], [ %.059, %193 ], [ %.059, %192 ], [ %.059, %189 ], [ %.059, %186 ], [ %.059, %185 ], [ %.059, %183 ], [ %.059, %182 ], [ %.059, %170 ], [ %.059, %160 ], [ %.059, %156 ], [ %.059, %155 ], [ %.059, %154 ], [ %.059, %151 ], [ %.059, %148 ], [ %.059, %147 ], [ %146, %145 ], [ %.059, %144 ], [ %.059, %134 ], [ %.059, %124 ], [ %.059, %122 ], [ %.059, %117 ], [ %.059, %115 ], [ %.059, %104 ], [ %.059, %94 ], [ %.059, %93 ], [ %.059, %83 ], [ %.059, %73 ], [ %.059, %71 ], [ %.059, %59 ], [ %.059, %49 ], [ 0, %48 ], [ %.059, %47 ], [ %.059, %36 ], [ %.059, %26 ], [ %.059, %25 ], [ %.059, %24 ], [ %.059, %19 ], [ %.059, %16 ], [ %.059, %15 ], [ %.059, %11 ]
  %.057.be = phi i32 [ %.057, %10 ], [ %.057, %396 ], [ %.057, %394 ], [ %.057, %393 ], [ %.057, %392 ], [ %.057, %391 ], [ %.057, %390 ], [ %.057, %389 ], [ %.057, %386 ], [ %.057, %385 ], [ %.057, %384 ], [ 0, %383 ], [ %.057, %382 ], [ %.057, %380 ], [ %.057, %366 ], [ %.057, %356 ], [ %.057, %354 ], [ %.057, %351 ], [ %.057, %350 ], [ %.057, %339 ], [ %.057, %329 ], [ %.057, %320 ], [ %.057, %318 ], [ %.057, %306 ], [ %.057, %296 ], [ %.057, %295 ], [ %.057, %294 ], [ %.057, %283 ], [ %.057, %273 ], [ %.057, %272 ], [ %.057, %262 ], [ %.057, %252 ], [ %.057, %251 ], [ %.057, %241 ], [ %.057, %231 ], [ %.057, %230 ], [ %.057, %229 ], [ %.057, %224 ], [ %.057, %222 ], [ %.057, %207 ], [ %.057, %197 ], [ %.057, %193 ], [ %.057, %192 ], [ %.057, %189 ], [ %.057, %186 ], [ %.057, %185 ], [ %.057, %183 ], [ %.057, %182 ], [ %.057, %170 ], [ %.057, %160 ], [ %.057, %156 ], [ %.057, %155 ], [ %.057, %154 ], [ %.057, %151 ], [ %.057, %148 ], [ %.057, %147 ], [ %.057, %145 ], [ %.057, %144 ], [ %.057, %134 ], [ %.057, %124 ], [ %123, %122 ], [ %.057, %117 ], [ %.057, %115 ], [ %.057, %104 ], [ %.057, %94 ], [ %.057, %93 ], [ 0, %83 ], [ %.057, %73 ], [ %.057, %71 ], [ %.057, %59 ], [ %.057, %49 ], [ %.057, %48 ], [ %.057, %47 ], [ %.057, %36 ], [ %.057, %26 ], [ %.057, %25 ], [ %.057, %24 ], [ %.057, %19 ], [ %.057, %16 ], [ %.057, %15 ], [ %.057, %11 ]
  %.055.be = phi i32 [ %.055, %10 ], [ %.055, %396 ], [ %.055, %394 ], [ %.055, %393 ], [ %.055, %392 ], [ %.055, %391 ], [ %.055, %390 ], [ %.055, %389 ], [ %.055, %386 ], [ %.055, %385 ], [ %.055, %384 ], [ %.055, %383 ], [ %.055, %382 ], [ %.055, %380 ], [ %.055, %366 ], [ %.055, %356 ], [ %355, %354 ], [ %.055, %351 ], [ %.055, %350 ], [ %.055, %339 ], [ %.055, %329 ], [ %.055, %320 ], [ %.055, %318 ], [ %.055, %306 ], [ %.055, %296 ], [ %.055, %295 ], [ %.055, %294 ], [ %.055, %283 ], [ %.055, %273 ], [ %.055, %272 ], [ %.055, %262 ], [ %.055, %252 ], [ %.055, %251 ], [ %.055, %241 ], [ %.055, %231 ], [ %.055, %230 ], [ %.055, %229 ], [ %.055, %224 ], [ %.055, %222 ], [ %.055, %207 ], [ %.055, %197 ], [ %.055, %193 ], [ %.055, %192 ], [ %.055, %189 ], [ %.055, %186 ], [ %.055, %185 ], [ %.055, %183 ], [ %.055, %182 ], [ %.055, %170 ], [ %.055, %160 ], [ %.055, %156 ], [ %.055, %155 ], [ %.055, %154 ], [ %.055, %151 ], [ %.055, %148 ], [ 0, %147 ], [ %.055, %145 ], [ %.055, %144 ], [ %.055, %134 ], [ %.055, %124 ], [ %.055, %122 ], [ %.055, %117 ], [ %.055, %115 ], [ %.055, %104 ], [ %.055, %94 ], [ %.055, %93 ], [ %.055, %83 ], [ %.055, %73 ], [ %.055, %71 ], [ %.055, %59 ], [ %.055, %49 ], [ %.055, %48 ], [ %.055, %47 ], [ %.055, %36 ], [ %.055, %26 ], [ %.055, %25 ], [ %.055, %24 ], [ %.055, %19 ], [ %.055, %16 ], [ %.055, %15 ], [ %.055, %11 ]
  %.053.be = phi i32 [ %.053, %10 ], [ %.053, %396 ], [ %.053, %394 ], [ %.053, %393 ], [ %.053, %392 ], [ %.053, %391 ], [ %.053, %390 ], [ %.053, %389 ], [ %.053, %386 ], [ %.053, %385 ], [ %.053, %384 ], [ %.053, %383 ], [ %.053, %382 ], [ %.053, %380 ], [ %.053, %366 ], [ %.053, %356 ], [ %.053, %354 ], [ %.053, %351 ], [ %.053, %350 ], [ %.053, %339 ], [ %.053, %329 ], [ %.053, %320 ], [ %.053, %318 ], [ %.053, %306 ], [ %.053, %296 ], [ %.053, %295 ], [ %.053, %294 ], [ %.053, %283 ], [ %.053, %273 ], [ %.053, %272 ], [ %.053, %262 ], [ %.053, %252 ], [ %.053, %251 ], [ %.053, %241 ], [ %.053, %231 ], [ %.053, %230 ], [ %.053, %229 ], [ %.053, %224 ], [ %.053, %222 ], [ %.053, %207 ], [ %.053, %197 ], [ %.053, %193 ], [ %.053, %192 ], [ %.053, %189 ], [ %.053, %186 ], [ %.053, %185 ], [ %184, %183 ], [ %.053, %182 ], [ %.053, %170 ], [ %.053, %160 ], [ %.053, %156 ], [ 0, %155 ], [ %.053, %154 ], [ %.053, %151 ], [ %.053, %148 ], [ %.053, %147 ], [ %.053, %145 ], [ %.053, %144 ], [ %.053, %134 ], [ %.053, %124 ], [ %.053, %122 ], [ %.053, %117 ], [ %.053, %115 ], [ %.053, %104 ], [ %.053, %94 ], [ %.053, %93 ], [ %.053, %83 ], [ %.053, %73 ], [ %.053, %71 ], [ %.053, %59 ], [ %.053, %49 ], [ %.053, %48 ], [ %.053, %47 ], [ %.053, %36 ], [ %.053, %26 ], [ %.053, %25 ], [ %.053, %24 ], [ %.053, %19 ], [ %.053, %16 ], [ %.053, %15 ], [ %.053, %11 ]
  %.051.be = phi i32 [ %.051, %10 ], [ %.051, %396 ], [ %.051, %394 ], [ %.051, %393 ], [ %.neg, %392 ], [ %.051, %391 ], [ %.051, %390 ], [ %.051, %389 ], [ %.051, %386 ], [ %.051, %385 ], [ %.051, %384 ], [ %.051, %383 ], [ %.051, %382 ], [ %.051, %380 ], [ %.051, %366 ], [ %.051, %356 ], [ %.051, %354 ], [ %.051, %351 ], [ %.051, %350 ], [ %.051, %339 ], [ %.051, %329 ], [ %.051, %320 ], [ %.051, %318 ], [ %.051, %306 ], [ %.051, %296 ], [ %.051, %295 ], [ %.051, %294 ], [ %284, %283 ], [ %.051, %273 ], [ %.051, %272 ], [ %.051, %262 ], [ %.051, %252 ], [ %.051, %251 ], [ %.051, %241 ], [ %.051, %231 ], [ %.051, %230 ], [ %.051, %229 ], [ %.051, %224 ], [ %.051, %222 ], [ %.051, %207 ], [ %.051, %197 ], [ %.051, %193 ], [ %.051, %192 ], [ %.051, %189 ], [ %.051, %186 ], [ 0, %185 ], [ %.051, %183 ], [ %.051, %182 ], [ %.051, %170 ], [ %.051, %160 ], [ %.051, %156 ], [ %.051, %155 ], [ %.051, %154 ], [ %.051, %151 ], [ %.051, %148 ], [ %.051, %147 ], [ %.051, %145 ], [ %.051, %144 ], [ %.051, %134 ], [ %.051, %124 ], [ %.051, %122 ], [ %.051, %117 ], [ %.051, %115 ], [ %.051, %104 ], [ %.051, %94 ], [ %.051, %93 ], [ %.051, %83 ], [ %.051, %73 ], [ %.051, %71 ], [ %.051, %59 ], [ %.051, %49 ], [ %.051, %48 ], [ %.051, %47 ], [ %.051, %36 ], [ %.051, %26 ], [ %.051, %25 ], [ %.051, %24 ], [ %.051, %19 ], [ %.051, %16 ], [ %.051, %15 ], [ %.051, %11 ]
  %.049.be = phi i32 [ %.049, %10 ], [ %.049, %396 ], [ %.049, %394 ], [ %.049, %393 ], [ %.049, %392 ], [ %.049, %391 ], [ %.049, %390 ], [ %.049, %389 ], [ %.049, %386 ], [ %.049, %385 ], [ %.049, %384 ], [ %.049, %383 ], [ %.049, %382 ], [ %.049, %380 ], [ %.049, %366 ], [ %.049, %356 ], [ %.049, %354 ], [ %.049, %351 ], [ %.049, %350 ], [ %.049, %339 ], [ %.049, %329 ], [ %.049, %320 ], [ %.049, %318 ], [ %.049, %306 ], [ %.049, %296 ], [ %.049, %295 ], [ %.049, %294 ], [ %.049, %283 ], [ %.049, %273 ], [ %.049, %272 ], [ %.049, %262 ], [ %.049, %252 ], [ %.049, %251 ], [ %.049, %241 ], [ %.049, %231 ], [ %.neg65, %230 ], [ %.049, %229 ], [ %.049, %224 ], [ %.049, %222 ], [ %.049, %207 ], [ %.049, %197 ], [ %.049, %193 ], [ 0, %192 ], [ %.049, %189 ], [ %.049, %186 ], [ %.049, %185 ], [ %.049, %183 ], [ %.049, %182 ], [ %.049, %170 ], [ %.049, %160 ], [ %.049, %156 ], [ %.049, %155 ], [ %.049, %154 ], [ %.049, %151 ], [ %.049, %148 ], [ %.049, %147 ], [ %.049, %145 ], [ %.049, %144 ], [ %.049, %134 ], [ %.049, %124 ], [ %.049, %122 ], [ %.049, %117 ], [ %.049, %115 ], [ %.049, %104 ], [ %.049, %94 ], [ %.049, %93 ], [ %.049, %83 ], [ %.049, %73 ], [ %.049, %71 ], [ %.049, %59 ], [ %.049, %49 ], [ %.049, %48 ], [ %.049, %47 ], [ %.049, %36 ], [ %.049, %26 ], [ %.049, %25 ], [ %.049, %24 ], [ %.049, %19 ], [ %.049, %16 ], [ %.049, %15 ], [ %.049, %11 ]
  %.047.be = phi i32 [ %.047, %10 ], [ %.047, %396 ], [ %395, %394 ], [ %.047, %393 ], [ %.047, %392 ], [ %.047, %391 ], [ %.047, %390 ], [ %.047, %389 ], [ %.047, %386 ], [ %.047, %385 ], [ %.047, %384 ], [ %.047, %383 ], [ %.047, %382 ], [ %.047, %380 ], [ %.047, %366 ], [ %.047, %356 ], [ %.047, %354 ], [ %.047, %351 ], [ %.047, %350 ], [ %340, %339 ], [ %.047, %329 ], [ %.047, %320 ], [ %.047, %318 ], [ %.047, %306 ], [ %.047, %296 ], [ 0, %295 ], [ %.047, %294 ], [ %.047, %283 ], [ %.047, %273 ], [ %.047, %272 ], [ %.047, %262 ], [ %.047, %252 ], [ %.047, %251 ], [ %.047, %241 ], [ %.047, %231 ], [ %.047, %230 ], [ %.047, %229 ], [ %.047, %224 ], [ %.047, %222 ], [ %.047, %207 ], [ %.047, %197 ], [ %.047, %193 ], [ %.047, %192 ], [ %.047, %189 ], [ %.047, %186 ], [ %.047, %185 ], [ %.047, %183 ], [ %.047, %182 ], [ %.047, %170 ], [ %.047, %160 ], [ %.047, %156 ], [ %.047, %155 ], [ %.047, %154 ], [ %.047, %151 ], [ %.047, %148 ], [ %.047, %147 ], [ %.047, %145 ], [ %.047, %144 ], [ %.047, %134 ], [ %.047, %124 ], [ %.047, %122 ], [ %.047, %117 ], [ %.047, %115 ], [ %.047, %104 ], [ %.047, %94 ], [ %.047, %93 ], [ %.047, %83 ], [ %.047, %73 ], [ %.047, %71 ], [ %.047, %59 ], [ %.047, %49 ], [ %.047, %48 ], [ %.047, %47 ], [ %.047, %36 ], [ %.047, %26 ], [ %.047, %25 ], [ %.047, %24 ], [ %.047, %19 ], [ %.047, %16 ], [ %.047, %15 ], [ %.047, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ -674216740, %396 ], [ -2112725655, %394 ], [ -1647439344, %393 ], [ 416876759, %392 ], [ -2132645460, %391 ], [ 1153164981, %390 ], [ 1545686131, %389 ], [ -16689238, %386 ], [ 1932888610, %385 ], [ 1790972388, %384 ], [ 1166246726, %383 ], [ -1651463060, %382 ], [ 1805235930, %380 ], [ %378, %366 ], [ %365, %356 ], [ 1851435088, %354 ], [ 647939649, %351 ], [ -509106114, %350 ], [ %349, %339 ], [ %338, %329 ], [ -154612021, %320 ], [ %319, %318 ], [ %317, %306 ], [ %305, %296 ], [ -509106114, %295 ], [ 518582338, %294 ], [ %293, %283 ], [ %282, %273 ], [ 1068834010, %272 ], [ %271, %262 ], [ %261, %252 ], [ 661960459, %251 ], [ %250, %241 ], [ %240, %231 ], [ 1512300651, %230 ], [ 936934173, %229 ], [ -1993828101, %224 ], [ %223, %222 ], [ %221, %207 ], [ %206, %197 ], [ %196, %193 ], [ 1512300651, %192 ], [ %191, %189 ], [ %188, %186 ], [ 518582338, %185 ], [ -329630630, %183 ], [ -926916906, %182 ], [ %181, %170 ], [ %169, %160 ], [ %159, %156 ], [ -329630630, %155 ], [ 647939649, %154 ], [ %153, %151 ], [ %150, %148 ], [ 1851435088, %147 ], [ 603535641, %145 ], [ -1793071787, %144 ], [ %143, %134 ], [ %133, %124 ], [ -1693671501, %122 ], [ -1501028906, %117 ], [ %116, %115 ], [ %114, %104 ], [ %103, %94 ], [ -1693671501, %93 ], [ %92, %83 ], [ %82, %73 ], [ %72, %71 ], [ %70, %59 ], [ %58, %49 ], [ 603535641, %48 ], [ 740182953, %47 ], [ %46, %36 ], [ %35, %26 ], [ -145287073, %25 ], [ -113935334, %24 ], [ -499297567, %19 ], [ %18, %16 ], [ -113935334, %15 ], [ %14, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %.063, %12
  %14 = select i1 %13, i32 -340098637, i32 45363706
  br label %.backedge

15:                                               ; preds = %10
  br label %.backedge

16:                                               ; preds = %10
  %17 = icmp slt i32 %.061, 10
  %18 = select i1 %17, i32 1018363279, i32 -1077005985
  br label %.backedge

19:                                               ; preds = %10
  %20 = sext i32 %.063 to i64
  %21 = sext i32 %.061 to i64
  %22 = getelementptr inbounds [110 x [10 x i32]], [110 x [10 x i32]]* @f, i64 0, i64 %20, i64 %21
  %23 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %22)
  br label %.backedge

24:                                               ; preds = %10
  %.neg68 = add i32 %.061, 1
  br label %.backedge

25:                                               ; preds = %10
  br label %.backedge

26:                                               ; preds = %10
  %27 = load i32, i32* @x.1, align 4
  %28 = load i32, i32* @y.2, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 1805235930, i32 -1553061908
  br label %.backedge

36:                                               ; preds = %10
  %37 = add i32 %.063, 1
  %38 = load i32, i32* @x.1, align 4
  %39 = load i32, i32* @y.2, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 229742426, i32 -1553061908
  br label %.backedge

47:                                               ; preds = %10
  br label %.backedge

48:                                               ; preds = %10
  br label %.backedge

49:                                               ; preds = %10
  %50 = load i32, i32* @x.1, align 4
  %51 = load i32, i32* @y.2, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -1651463060, i32 705134168
  br label %.backedge

59:                                               ; preds = %10
  %60 = load i32, i32* %6, align 4
  %61 = icmp slt i32 %.059, %60
  store i1 %61, i1* %5, align 1
  %62 = load i32, i32* @x.1, align 4
  %63 = load i32, i32* @y.2, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 998180881, i32 705134168
  br label %.backedge

71:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %72 = select i1 %.0..0..0., i32 116337080, i32 1311975771
  br label %.backedge

73:                                               ; preds = %10
  %74 = load i32, i32* @x.1, align 4
  %75 = load i32, i32* @y.2, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 1166246726, i32 -1792479427
  br label %.backedge

83:                                               ; preds = %10
  %84 = load i32, i32* @x.1, align 4
  %85 = load i32, i32* @y.2, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 459630869, i32 -1792479427
  br label %.backedge

93:                                               ; preds = %10
  br label %.backedge

94:                                               ; preds = %10
  %95 = load i32, i32* @x.1, align 4
  %96 = load i32, i32* @y.2, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 1790972388, i32 1641471320
  br label %.backedge

104:                                              ; preds = %10
  %105 = icmp slt i32 %.057, 11
  store i1 %105, i1* %4, align 1
  %106 = load i32, i32* @x.1, align 4
  %107 = load i32, i32* @y.2, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 -1080590223, i32 1641471320
  br label %.backedge

115:                                              ; preds = %10
  %.0..0..0.43 = load volatile i1, i1* %4, align 1
  %116 = select i1 %.0..0..0.43, i32 1769467143, i32 -1078987689
  br label %.backedge

117:                                              ; preds = %10
  %118 = sext i32 %.059 to i64
  %119 = sext i32 %.057 to i64
  %120 = getelementptr inbounds [110 x [11 x i64]], [110 x [11 x i64]]* @p, i64 0, i64 %118, i64 %119
  %121 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %120)
  br label %.backedge

122:                                              ; preds = %10
  %123 = add i32 %.057, 1
  br label %.backedge

124:                                              ; preds = %10
  %125 = load i32, i32* @x.1, align 4
  %126 = load i32, i32* @y.2, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 1932888610, i32 -1438742128
  br label %.backedge

134:                                              ; preds = %10
  %135 = load i32, i32* @x.1, align 4
  %136 = load i32, i32* @y.2, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 -1323251955, i32 -1438742128
  br label %.backedge

144:                                              ; preds = %10
  br label %.backedge

145:                                              ; preds = %10
  %146 = add i32 %.059, 1
  br label %.backedge

147:                                              ; preds = %10
  store i64 -1152921504606846976, i64* %7, align 8
  br label %.backedge

148:                                              ; preds = %10
  %149 = icmp slt i32 %.055, 1024
  %150 = select i1 %149, i32 -1859031490, i32 99366088
  br label %.backedge

151:                                              ; preds = %10
  %152 = icmp eq i32 %.055, 0
  %153 = select i1 %152, i32 128063795, i32 1723623026
  br label %.backedge

154:                                              ; preds = %10
  br label %.backedge

155:                                              ; preds = %10
  br label %.backedge

156:                                              ; preds = %10
  %157 = load i32, i32* %6, align 4
  %158 = icmp slt i32 %.053, %157
  %159 = select i1 %158, i32 -1699258574, i32 -1393035102
  br label %.backedge

160:                                              ; preds = %10
  %161 = load i32, i32* @x.1, align 4
  %162 = load i32, i32* @y.2, align 4
  %163 = add i32 %161, -1
  %164 = mul i32 %163, %161
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %167, %166
  %169 = select i1 %168, i32 -16689238, i32 1236881725
  br label %.backedge

170:                                              ; preds = %10
  %171 = sext i32 %.053 to i64
  %172 = getelementptr inbounds [110 x i32], [110 x i32]* @cnt, i64 0, i64 %171
  store i32 0, i32* %172, align 4
  %173 = load i32, i32* @x.1, align 4
  %174 = load i32, i32* @y.2, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 86150369, i32 1236881725
  br label %.backedge

182:                                              ; preds = %10
  br label %.backedge

183:                                              ; preds = %10
  %184 = add i32 %.053, 1
  br label %.backedge

185:                                              ; preds = %10
  br label %.backedge

186:                                              ; preds = %10
  %187 = icmp slt i32 %.051, 10
  %188 = select i1 %187, i32 -1437733199, i32 -1878424439
  br label %.backedge

189:                                              ; preds = %10
  %190 = shl nuw i32 1, %.051
  %.demorgan = and i32 %190, %.055
  %.not = icmp eq i32 %.demorgan, 0
  %191 = select i1 %.not, i32 661960459, i32 1544602681
  br label %.backedge

192:                                              ; preds = %10
  br label %.backedge

193:                                              ; preds = %10
  %194 = load i32, i32* %6, align 4
  %195 = icmp slt i32 %.049, %194
  %196 = select i1 %195, i32 -592415404, i32 -8945032
  br label %.backedge

197:                                              ; preds = %10
  %198 = load i32, i32* @x.1, align 4
  %199 = load i32, i32* @y.2, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 1545686131, i32 -1074808655
  br label %.backedge

207:                                              ; preds = %10
  %208 = sext i32 %.049 to i64
  %209 = sext i32 %.051 to i64
  %210 = getelementptr inbounds [110 x [10 x i32]], [110 x [10 x i32]]* @f, i64 0, i64 %208, i64 %209
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, 1
  store i1 %212, i1* %3, align 1
  %213 = load i32, i32* @x.1, align 4
  %214 = load i32, i32* @y.2, align 4
  %215 = add i32 %213, -1
  %216 = mul i32 %215, %213
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %219, %218
  %221 = select i1 %220, i32 1568347168, i32 -1074808655
  br label %.backedge

222:                                              ; preds = %10
  %.0..0..0.44 = load volatile i1, i1* %3, align 1
  %223 = select i1 %.0..0..0.44, i32 1547752952, i32 -1993828101
  br label %.backedge

224:                                              ; preds = %10
  %225 = sext i32 %.049 to i64
  %226 = getelementptr inbounds [110 x i32], [110 x i32]* @cnt, i64 0, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = add i32 %227, 1
  store i32 %228, i32* %226, align 4
  br label %.backedge

229:                                              ; preds = %10
  br label %.backedge

230:                                              ; preds = %10
  %.neg65 = add i32 %.049, 1
  br label %.backedge

231:                                              ; preds = %10
  %232 = load i32, i32* @x.1, align 4
  %233 = load i32, i32* @y.2, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 1153164981, i32 815108825
  br label %.backedge

241:                                              ; preds = %10
  %242 = load i32, i32* @x.1, align 4
  %243 = load i32, i32* @y.2, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 994408665, i32 815108825
  br label %.backedge

251:                                              ; preds = %10
  br label %.backedge

252:                                              ; preds = %10
  %253 = load i32, i32* @x.1, align 4
  %254 = load i32, i32* @y.2, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 -2132645460, i32 -828136277
  br label %.backedge

262:                                              ; preds = %10
  %263 = load i32, i32* @x.1, align 4
  %264 = load i32, i32* @y.2, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 -1516829848, i32 -828136277
  br label %.backedge

272:                                              ; preds = %10
  br label %.backedge

273:                                              ; preds = %10
  %274 = load i32, i32* @x.1, align 4
  %275 = load i32, i32* @y.2, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 416876759, i32 -418429625
  br label %.backedge

283:                                              ; preds = %10
  %284 = add i32 %.051, 1
  %285 = load i32, i32* @x.1, align 4
  %286 = load i32, i32* @y.2, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 -1107223943, i32 -418429625
  br label %.backedge

294:                                              ; preds = %10
  br label %.backedge

295:                                              ; preds = %10
  store i64 0, i64* %8, align 8
  br label %.backedge

296:                                              ; preds = %10
  %297 = load i32, i32* @x.1, align 4
  %298 = load i32, i32* @y.2, align 4
  %299 = add i32 %297, -1
  %300 = mul i32 %299, %297
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %303, %302
  %305 = select i1 %304, i32 -1647439344, i32 -1941123007
  br label %.backedge

306:                                              ; preds = %10
  %307 = load i32, i32* %6, align 4
  %308 = icmp slt i32 %.047, %307
  store i1 %308, i1* %2, align 1
  %309 = load i32, i32* @x.1, align 4
  %310 = load i32, i32* @y.2, align 4
  %311 = add i32 %309, -1
  %312 = mul i32 %311, %309
  %313 = and i32 %312, 1
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %315, %314
  %317 = select i1 %316, i32 832265675, i32 -1941123007
  br label %.backedge

318:                                              ; preds = %10
  %.0..0..0.45 = load volatile i1, i1* %2, align 1
  %319 = select i1 %.0..0..0.45, i32 63155694, i32 -1627921295
  br label %.backedge

320:                                              ; preds = %10
  %321 = sext i32 %.047 to i64
  %322 = getelementptr inbounds [110 x i32], [110 x i32]* @cnt, i64 0, i64 %321
  %323 = load i32, i32* %322, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [110 x [11 x i64]], [110 x [11 x i64]]* @p, i64 0, i64 %321, i64 %324
  %326 = load i64, i64* %325, align 8
  %327 = load i64, i64* %8, align 8
  %328 = add i64 %327, %326
  store i64 %328, i64* %8, align 8
  br label %.backedge

329:                                              ; preds = %10
  %330 = load i32, i32* @x.1, align 4
  %331 = load i32, i32* @y.2, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 -2112725655, i32 1544494243
  br label %.backedge

339:                                              ; preds = %10
  %340 = add i32 %.047, 1
  %341 = load i32, i32* @x.1, align 4
  %342 = load i32, i32* @y.2, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 1729356755, i32 1544494243
  br label %.backedge

350:                                              ; preds = %10
  br label %.backedge

351:                                              ; preds = %10
  %352 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %7, i64* nonnull dereferenceable(8) %8)
  %353 = load i64, i64* %352, align 8
  store i64 %353, i64* %7, align 8
  br label %.backedge

354:                                              ; preds = %10
  %355 = add i32 %.055, 1
  br label %.backedge

356:                                              ; preds = %10
  %357 = load i32, i32* @x.1, align 4
  %358 = load i32, i32* @y.2, align 4
  %359 = add i32 %357, -1
  %360 = mul i32 %359, %357
  %361 = and i32 %360, 1
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %363, %362
  %365 = select i1 %364, i32 -674216740, i32 2139171505
  br label %.backedge

366:                                              ; preds = %10
  %367 = load i64, i64* %7, align 8
  %368 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %367)
  %369 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %368, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 0, i32* %1, align 4
  %370 = load i32, i32* @x.1, align 4
  %371 = load i32, i32* @y.2, align 4
  %372 = add i32 %370, -1
  %373 = mul i32 %372, %370
  %374 = and i32 %373, 1
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %376, %375
  %378 = select i1 %377, i32 -492243136, i32 2139171505
  br label %.backedge

379:                                              ; preds = %10
  %.0..0..0.46 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.46

380:                                              ; preds = %10
  %381 = add i32 %.063, 1
  br label %.backedge

382:                                              ; preds = %10
  br label %.backedge

383:                                              ; preds = %10
  br label %.backedge

384:                                              ; preds = %10
  br label %.backedge

385:                                              ; preds = %10
  br label %.backedge

386:                                              ; preds = %10
  %387 = sext i32 %.053 to i64
  %388 = getelementptr inbounds [110 x i32], [110 x i32]* @cnt, i64 0, i64 %387
  store i32 0, i32* %388, align 4
  br label %.backedge

389:                                              ; preds = %10
  br label %.backedge

390:                                              ; preds = %10
  br label %.backedge

391:                                              ; preds = %10
  br label %.backedge

392:                                              ; preds = %10
  %.neg = add i32 %.051, 1
  br label %.backedge

393:                                              ; preds = %10
  br label %.backedge

394:                                              ; preds = %10
  %395 = add i32 %.047, 1
  br label %.backedge

396:                                              ; preds = %10
  %397 = load i64, i64* %7, align 8
  %398 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %397)
  %399 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %398, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %3, align 8
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i64* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -580065305, %2 ], [ -854793709, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 -580065305, label %8
    i32 609868082, label %.outer.backedge
    i32 -825116175, label %11
    i32 -854793709, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %9 = icmp slt i64 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 609868082, i32 -825116175
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i64* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i64* %.07.ph
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s611642034.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
