; ModuleID = 'build_ollvm/programs/p03503/s049314707.ll'
source_filename = "Project_CodeNet_C++1400/p03503/s049314707.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt4fillIPiiEvT_S1_RKT0_ = comdat any

$_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s049314707.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i64 @_Z3maxxx(i64 %0, i64 %1) local_unnamed_addr #4 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i32, i32* @x.1, align 4
  %7 = load i32, i32* @y.2, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 -100607324, i32 266599944
  %15 = select i1 %13, i32 -647153702, i32 266599944
  br label %.outer

.outer:                                           ; preds = %16, %2
  %.09.ph = phi i64 [ undef, %2 ], [ %.09.ph14, %16 ]
  %.0.ph = phi i32 [ 1730134807, %2 ], [ %14, %16 ]
  br label %.outer13

.outer13:                                         ; preds = %.outer13.backedge, %.outer
  %.09.ph14 = phi i64 [ %.09.ph, %.outer ], [ %.09.ph14.be, %.outer13.backedge ]
  %.0.ph15 = phi i32 [ %.0.ph, %.outer ], [ -1851697323, %.outer13.backedge ]
  br label %.outer16

.outer16:                                         ; preds = %.outer16.backedge, %.outer13
  %.0.ph17 = phi i32 [ %.0.ph15, %.outer13 ], [ %.0.ph17.be, %.outer16.backedge ]
  br label %16

16:                                               ; preds = %.outer16, %16
  switch i32 %.0.ph17, label %16 [
    i32 1730134807, label %17
    i32 -2026458370, label %.outer13.backedge
    i32 -1345654683, label %20
    i32 -1851697323, label %.outer16.backedge
    i32 -647153702, label %.outer
    i32 -100607324, label %21
    i32 266599944, label %22
  ]

17:                                               ; preds = %16
  %.0..0..0. = load volatile i64, i64* %5, align 8
  %.0..0..0.7 = load volatile i64, i64* %4, align 8
  %18 = icmp sgt i64 %.0..0..0., %.0..0..0.7
  %19 = select i1 %18, i32 -2026458370, i32 -1345654683
  br label %.outer16.backedge

20:                                               ; preds = %16
  br label %.outer13.backedge

.outer13.backedge:                                ; preds = %16, %20
  %.09.ph14.be = phi i64 [ %1, %20 ], [ %0, %16 ]
  br label %.outer13

21:                                               ; preds = %16
  store i64 %.09.ph, i64* %3, align 8
  %.0..0..0.8 = load volatile i64, i64* %3, align 8
  ret i64 %.0..0..0.8

22:                                               ; preds = %16
  br label %.outer16.backedge

.outer16.backedge:                                ; preds = %16, %22, %17
  %.0.ph17.be = phi i32 [ %19, %17 ], [ -647153702, %22 ], [ %15, %16 ]
  br label %.outer16
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i32*, align 8
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %3)
  %6 = load i32, i32* %3, align 4
  %7 = zext i32 %6 to i64
  %8 = alloca [5 x [2 x i32]], i64 %7, align 16
  %9 = alloca [11 x i32], i64 %7, align 16
  br label %10

10:                                               ; preds = %.backedge, %0
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i64 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i8* [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ 0, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i64 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.0 = phi i32 [ -648562584, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -648562584, label %11
    i32 -353987441, label %15
    i32 -1611889806, label %16
    i32 1118922704, label %19
    i32 1264050403, label %20
    i32 980643560, label %23
    i32 -1896578621, label %33
    i32 -1038389463, label %48
    i32 -621758133, label %49
    i32 -88428421, label %51
    i32 -1737847348, label %52
    i32 1933775288, label %54
    i32 -1366990288, label %64
    i32 -1896841127, label %74
    i32 -1483237930, label %75
    i32 -938287692, label %77
    i32 2084140579, label %78
    i32 1746503584, label %82
    i32 1351678197, label %83
    i32 -1423832706, label %93
    i32 1906401811, label %104
    i32 -246312709, label %106
    i32 851931343, label %111
    i32 1679032405, label %112
    i32 944515497, label %113
    i32 -687367572, label %115
    i32 -821499194, label %116
    i32 -9442542, label %119
    i32 969816249, label %127
    i32 2043444686, label %131
    i32 -1297951364, label %141
    i32 -1106682329, label %151
    i32 986241064, label %152
    i32 1008057870, label %155
    i32 1832001404, label %165
    i32 88420788, label %167
    i32 1498378238, label %172
    i32 330809674, label %182
    i32 1703316110, label %192
    i32 1372248198, label %193
    i32 -1675494390, label %203
    i32 -1579825004, label %214
    i32 1809961130, label %215
    i32 492780000, label %225
    i32 -915475637, label %235
    i32 8595732, label %236
    i32 1938308916, label %246
    i32 -422327699, label %257
    i32 -1861739686, label %258
    i32 -1291446, label %259
    i32 -109261117, label %263
    i32 1537433710, label %272
    i32 -1127130157, label %273
    i32 -923388834, label %275
    i32 828636134, label %277
    i32 -832139554, label %280
    i32 -787386213, label %286
    i32 -1700835596, label %287
    i32 724799497, label %288
    i32 357054878, label %289
    i32 390964796, label %290
    i32 1271142415, label %292
    i32 -1063195346, label %293
  ]

.backedge:                                        ; preds = %10, %293, %292, %290, %289, %288, %287, %286, %280, %275, %273, %272, %263, %259, %258, %257, %246, %236, %235, %225, %215, %214, %203, %193, %192, %182, %172, %167, %165, %155, %152, %151, %141, %131, %127, %119, %116, %115, %113, %112, %111, %106, %104, %93, %83, %82, %78, %77, %75, %74, %64, %54, %52, %51, %49, %48, %33, %23, %20, %19, %16, %15, %11
  %.076.be = phi i32 [ %.076, %10 ], [ %.076, %293 ], [ %.076, %292 ], [ %.076, %290 ], [ %.076, %289 ], [ %.076, %288 ], [ %.076, %287 ], [ %.076, %286 ], [ %.076, %280 ], [ %.076, %275 ], [ %.076, %273 ], [ %.076, %272 ], [ %.076, %263 ], [ %.076, %259 ], [ %.076, %258 ], [ %.076, %257 ], [ %.076, %246 ], [ %.076, %236 ], [ %.076, %235 ], [ %.076, %225 ], [ %.076, %215 ], [ %.076, %214 ], [ %.076, %203 ], [ %.076, %193 ], [ %.076, %192 ], [ %.076, %182 ], [ %.076, %172 ], [ %.076, %167 ], [ %.076, %165 ], [ %.076, %155 ], [ %.076, %152 ], [ %.076, %151 ], [ %.076, %141 ], [ %.076, %131 ], [ %.076, %127 ], [ %.076, %119 ], [ %.076, %116 ], [ %.076, %115 ], [ %.076, %113 ], [ %.076, %112 ], [ %.076, %111 ], [ %.076, %106 ], [ %.076, %104 ], [ %.076, %93 ], [ %.076, %83 ], [ %.076, %82 ], [ %.076, %78 ], [ %.076, %77 ], [ %.076, %75 ], [ %.076, %74 ], [ %.076, %64 ], [ %.076, %54 ], [ %53, %52 ], [ %.076, %51 ], [ %.076, %49 ], [ %.076, %48 ], [ %.076, %33 ], [ %.076, %23 ], [ %.076, %20 ], [ %.076, %19 ], [ %.076, %16 ], [ 0, %15 ], [ %.076, %11 ]
  %.074.be = phi i32 [ %.074, %10 ], [ %.074, %293 ], [ %.074, %292 ], [ %.074, %290 ], [ %.074, %289 ], [ %.074, %288 ], [ %.074, %287 ], [ %.074, %286 ], [ %.074, %280 ], [ %.074, %275 ], [ %.074, %273 ], [ %.074, %272 ], [ %.074, %263 ], [ %.074, %259 ], [ %.074, %258 ], [ %.074, %257 ], [ %.074, %246 ], [ %.074, %236 ], [ %.074, %235 ], [ %.074, %225 ], [ %.074, %215 ], [ %.074, %214 ], [ %.074, %203 ], [ %.074, %193 ], [ %.074, %192 ], [ %.074, %182 ], [ %.074, %172 ], [ %.074, %167 ], [ %.074, %165 ], [ %.074, %155 ], [ %.074, %152 ], [ %.074, %151 ], [ %.074, %141 ], [ %.074, %131 ], [ %.074, %127 ], [ %.074, %119 ], [ %.074, %116 ], [ %.074, %115 ], [ %.074, %113 ], [ %.074, %112 ], [ %.074, %111 ], [ %.074, %106 ], [ %.074, %104 ], [ %.074, %93 ], [ %.074, %83 ], [ %.074, %82 ], [ %.074, %78 ], [ %.074, %77 ], [ %.074, %75 ], [ %.074, %74 ], [ %.074, %64 ], [ %.074, %54 ], [ %.074, %52 ], [ %.074, %51 ], [ %50, %49 ], [ %.074, %48 ], [ %.074, %33 ], [ %.074, %23 ], [ %.074, %20 ], [ 0, %19 ], [ %.074, %16 ], [ %.074, %15 ], [ %.074, %11 ]
  %.072.be = phi i32 [ %.072, %10 ], [ %.072, %293 ], [ %.072, %292 ], [ %.072, %290 ], [ %.072, %289 ], [ %.072, %288 ], [ %.072, %287 ], [ %.072, %286 ], [ %.072, %280 ], [ %.072, %275 ], [ %.072, %273 ], [ %.072, %272 ], [ %.072, %263 ], [ %.072, %259 ], [ %.072, %258 ], [ %.072, %257 ], [ %.072, %246 ], [ %.072, %236 ], [ %.072, %235 ], [ %.072, %225 ], [ %.072, %215 ], [ %.072, %214 ], [ %.072, %203 ], [ %.072, %193 ], [ %.072, %192 ], [ %.072, %182 ], [ %.072, %172 ], [ %.072, %167 ], [ %.072, %165 ], [ %.072, %155 ], [ %.072, %152 ], [ %.072, %151 ], [ %.072, %141 ], [ %.072, %131 ], [ %.072, %127 ], [ %.072, %119 ], [ %.072, %116 ], [ %.072, %115 ], [ %114, %113 ], [ %.072, %112 ], [ %.072, %111 ], [ %.072, %106 ], [ %.072, %104 ], [ %.072, %93 ], [ %.072, %83 ], [ %.072, %82 ], [ %.072, %78 ], [ 0, %77 ], [ %.072, %75 ], [ %.072, %74 ], [ %.072, %64 ], [ %.072, %54 ], [ %.072, %52 ], [ %.072, %51 ], [ %.072, %49 ], [ %.072, %48 ], [ %.072, %33 ], [ %.072, %23 ], [ %.072, %20 ], [ %.072, %19 ], [ %.072, %16 ], [ %.072, %15 ], [ %.072, %11 ]
  %.070.be = phi i32 [ %.070, %10 ], [ %.070, %293 ], [ %.070, %292 ], [ %.070, %290 ], [ %.070, %289 ], [ %.070, %288 ], [ %.070, %287 ], [ %.070, %286 ], [ %.070, %280 ], [ %.070, %275 ], [ %.070, %273 ], [ %.070, %272 ], [ %.070, %263 ], [ %.070, %259 ], [ %.070, %258 ], [ %.070, %257 ], [ %.070, %246 ], [ %.070, %236 ], [ %.070, %235 ], [ %.070, %225 ], [ %.070, %215 ], [ %.070, %214 ], [ %.070, %203 ], [ %.070, %193 ], [ %.070, %192 ], [ %.070, %182 ], [ %.070, %172 ], [ %.070, %167 ], [ %.070, %165 ], [ %.070, %155 ], [ %.070, %152 ], [ %.070, %151 ], [ %.070, %141 ], [ %.070, %131 ], [ %.070, %127 ], [ %.070, %119 ], [ %.070, %116 ], [ %.070, %115 ], [ %.070, %113 ], [ %.070, %112 ], [ %.neg80, %111 ], [ %.070, %106 ], [ %.070, %104 ], [ %.070, %93 ], [ %.070, %83 ], [ 0, %82 ], [ %.070, %78 ], [ %.070, %77 ], [ %.070, %75 ], [ %.070, %74 ], [ %.070, %64 ], [ %.070, %54 ], [ %.070, %52 ], [ %.070, %51 ], [ %.070, %49 ], [ %.070, %48 ], [ %.070, %33 ], [ %.070, %23 ], [ %.070, %20 ], [ %.070, %19 ], [ %.070, %16 ], [ %.070, %15 ], [ %.070, %11 ]
  %.068.be = phi i64 [ %.068, %10 ], [ %.068, %293 ], [ %.068, %292 ], [ %.068, %290 ], [ %.068, %289 ], [ %.068, %288 ], [ %.068, %287 ], [ %.068, %286 ], [ %.068, %280 ], [ %.068, %275 ], [ %274, %273 ], [ %.068, %272 ], [ %.068, %263 ], [ %.068, %259 ], [ %.068, %258 ], [ %.068, %257 ], [ %.068, %246 ], [ %.068, %236 ], [ %.068, %235 ], [ %.068, %225 ], [ %.068, %215 ], [ %.068, %214 ], [ %.068, %203 ], [ %.068, %193 ], [ %.068, %192 ], [ %.068, %182 ], [ %.068, %172 ], [ %.068, %167 ], [ %.068, %165 ], [ %.068, %155 ], [ %.068, %152 ], [ %.068, %151 ], [ %.068, %141 ], [ %.068, %131 ], [ %.068, %127 ], [ %.068, %119 ], [ %.068, %116 ], [ -1000000007, %115 ], [ %.068, %113 ], [ %.068, %112 ], [ %.068, %111 ], [ %.068, %106 ], [ %.068, %104 ], [ %.068, %93 ], [ %.068, %83 ], [ %.068, %82 ], [ %.068, %78 ], [ %.068, %77 ], [ %.068, %75 ], [ %.068, %74 ], [ %.068, %64 ], [ %.068, %54 ], [ %.068, %52 ], [ %.068, %51 ], [ %.068, %49 ], [ %.068, %48 ], [ %.068, %33 ], [ %.068, %23 ], [ %.068, %20 ], [ %.068, %19 ], [ %.068, %16 ], [ %.068, %15 ], [ %.068, %11 ]
  %.066.be = phi i32 [ %.066, %10 ], [ %.066, %293 ], [ %.066, %292 ], [ %.066, %290 ], [ %.066, %289 ], [ %.066, %288 ], [ %.066, %287 ], [ %.066, %286 ], [ %.066, %280 ], [ %276, %275 ], [ %.066, %273 ], [ %.066, %272 ], [ %.066, %263 ], [ %.066, %259 ], [ %.066, %258 ], [ %.066, %257 ], [ %.066, %246 ], [ %.066, %236 ], [ %.066, %235 ], [ %.066, %225 ], [ %.066, %215 ], [ %.066, %214 ], [ %.066, %203 ], [ %.066, %193 ], [ %.066, %192 ], [ %.066, %182 ], [ %.066, %172 ], [ %.066, %167 ], [ %.066, %165 ], [ %.066, %155 ], [ %.066, %152 ], [ %.066, %151 ], [ %.066, %141 ], [ %.066, %131 ], [ %.066, %127 ], [ %.066, %119 ], [ %.066, %116 ], [ 1, %115 ], [ %.066, %113 ], [ %.066, %112 ], [ %.066, %111 ], [ %.066, %106 ], [ %.066, %104 ], [ %.066, %93 ], [ %.066, %83 ], [ %.066, %82 ], [ %.066, %78 ], [ %.066, %77 ], [ %.066, %75 ], [ %.066, %74 ], [ %.066, %64 ], [ %.066, %54 ], [ %.066, %52 ], [ %.066, %51 ], [ %.066, %49 ], [ %.066, %48 ], [ %.066, %33 ], [ %.066, %23 ], [ %.066, %20 ], [ %.066, %19 ], [ %.066, %16 ], [ %.066, %15 ], [ %.066, %11 ]
  %.064.be = phi i8* [ %.064, %10 ], [ %.064, %293 ], [ %.064, %292 ], [ %.064, %290 ], [ %.064, %289 ], [ %.064, %288 ], [ %.064, %287 ], [ %.064, %286 ], [ %.064, %280 ], [ %.064, %275 ], [ %.064, %273 ], [ %.064, %272 ], [ %.064, %263 ], [ %.064, %259 ], [ %.064, %258 ], [ %.064, %257 ], [ %.064, %246 ], [ %.064, %236 ], [ %.064, %235 ], [ %.064, %225 ], [ %.064, %215 ], [ %.064, %214 ], [ %.064, %203 ], [ %.064, %193 ], [ %.064, %192 ], [ %.064, %182 ], [ %.064, %172 ], [ %.064, %167 ], [ %.064, %165 ], [ %.064, %155 ], [ %.064, %152 ], [ %.064, %151 ], [ %.064, %141 ], [ %.064, %131 ], [ %.064, %127 ], [ %122, %119 ], [ %.064, %116 ], [ %.064, %115 ], [ %.064, %113 ], [ %.064, %112 ], [ %.064, %111 ], [ %.064, %106 ], [ %.064, %104 ], [ %.064, %93 ], [ %.064, %83 ], [ %.064, %82 ], [ %.064, %78 ], [ %.064, %77 ], [ %.064, %75 ], [ %.064, %74 ], [ %.064, %64 ], [ %.064, %54 ], [ %.064, %52 ], [ %.064, %51 ], [ %.064, %49 ], [ %.064, %48 ], [ %.064, %33 ], [ %.064, %23 ], [ %.064, %20 ], [ %.064, %19 ], [ %.064, %16 ], [ %.064, %15 ], [ %.064, %11 ]
  %.062.be = phi i32 [ %.062, %10 ], [ %.neg, %293 ], [ %.062, %292 ], [ %.062, %290 ], [ %.062, %289 ], [ %.062, %288 ], [ %.062, %287 ], [ %.062, %286 ], [ %.062, %280 ], [ %.062, %275 ], [ %.062, %273 ], [ %.062, %272 ], [ %.062, %263 ], [ %.062, %259 ], [ %.062, %258 ], [ %.062, %257 ], [ %247, %246 ], [ %.062, %236 ], [ %.062, %235 ], [ %.062, %225 ], [ %.062, %215 ], [ %.062, %214 ], [ %.062, %203 ], [ %.062, %193 ], [ %.062, %192 ], [ %.062, %182 ], [ %.062, %172 ], [ %.062, %167 ], [ %.062, %165 ], [ %.062, %155 ], [ %.062, %152 ], [ %.062, %151 ], [ %.062, %141 ], [ %.062, %131 ], [ %.062, %127 ], [ 0, %119 ], [ %.062, %116 ], [ %.062, %115 ], [ %.062, %113 ], [ %.062, %112 ], [ %.062, %111 ], [ %.062, %106 ], [ %.062, %104 ], [ %.062, %93 ], [ %.062, %83 ], [ %.062, %82 ], [ %.062, %78 ], [ %.062, %77 ], [ %.062, %75 ], [ %.062, %74 ], [ %.062, %64 ], [ %.062, %54 ], [ %.062, %52 ], [ %.062, %51 ], [ %.062, %49 ], [ %.062, %48 ], [ %.062, %33 ], [ %.062, %23 ], [ %.062, %20 ], [ %.062, %19 ], [ %.062, %16 ], [ %.062, %15 ], [ %.062, %11 ]
  %.060.be = phi i32 [ %.060, %10 ], [ %.060, %293 ], [ %.060, %292 ], [ %291, %290 ], [ %.060, %289 ], [ 0, %288 ], [ %.060, %287 ], [ %.060, %286 ], [ %.060, %280 ], [ %.060, %275 ], [ %.060, %273 ], [ %.060, %272 ], [ %.060, %263 ], [ %.060, %259 ], [ %.060, %258 ], [ %.060, %257 ], [ %.060, %246 ], [ %.060, %236 ], [ %.060, %235 ], [ %.060, %225 ], [ %.060, %215 ], [ %.060, %214 ], [ %204, %203 ], [ %.060, %193 ], [ %.060, %192 ], [ %.060, %182 ], [ %.060, %172 ], [ %.060, %167 ], [ %.060, %165 ], [ %.060, %155 ], [ %.060, %152 ], [ %.060, %151 ], [ 0, %141 ], [ %.060, %131 ], [ %.060, %127 ], [ %.060, %119 ], [ %.060, %116 ], [ %.060, %115 ], [ %.060, %113 ], [ %.060, %112 ], [ %.060, %111 ], [ %.060, %106 ], [ %.060, %104 ], [ %.060, %93 ], [ %.060, %83 ], [ %.060, %82 ], [ %.060, %78 ], [ %.060, %77 ], [ %.060, %75 ], [ %.060, %74 ], [ %.060, %64 ], [ %.060, %54 ], [ %.060, %52 ], [ %.060, %51 ], [ %.060, %49 ], [ %.060, %48 ], [ %.060, %33 ], [ %.060, %23 ], [ %.060, %20 ], [ %.060, %19 ], [ %.060, %16 ], [ %.060, %15 ], [ %.060, %11 ]
  %.058.be = phi i32 [ %.058, %10 ], [ %.058, %293 ], [ %.058, %292 ], [ %.058, %290 ], [ %.058, %289 ], [ %.058, %288 ], [ %.058, %287 ], [ %.058, %286 ], [ %.058, %280 ], [ %.058, %275 ], [ %.058, %273 ], [ %.058, %272 ], [ %.058, %263 ], [ %.058, %259 ], [ %.058, %258 ], [ %.058, %257 ], [ %.058, %246 ], [ %.058, %236 ], [ %.058, %235 ], [ %.058, %225 ], [ %.058, %215 ], [ %.058, %214 ], [ %.058, %203 ], [ %.058, %193 ], [ %.058, %192 ], [ %.058, %182 ], [ %.058, %172 ], [ %.058, %167 ], [ %.058, %165 ], [ %.058, %155 ], [ %.058, %152 ], [ %.058, %151 ], [ %.058, %141 ], [ %.058, %131 ], [ %.058, %127 ], [ %.058, %119 ], [ %.058, %116 ], [ %.058, %115 ], [ %.058, %113 ], [ %.058, %112 ], [ %.058, %111 ], [ %.058, %106 ], [ %.058, %104 ], [ %.058, %93 ], [ %.058, %83 ], [ %.058, %82 ], [ %.058, %78 ], [ %.058, %77 ], [ %76, %75 ], [ %.058, %74 ], [ %.058, %64 ], [ %.058, %54 ], [ %.058, %52 ], [ %.058, %51 ], [ %.058, %49 ], [ %.058, %48 ], [ %.058, %33 ], [ %.058, %23 ], [ %.058, %20 ], [ %.058, %19 ], [ %.058, %16 ], [ %.058, %15 ], [ %.058, %11 ]
  %.056.be = phi i32 [ %.056, %10 ], [ %.056, %293 ], [ %.056, %292 ], [ %.056, %290 ], [ %.056, %289 ], [ %.056, %288 ], [ %.056, %287 ], [ %.056, %286 ], [ %.056, %280 ], [ %.056, %275 ], [ %.056, %273 ], [ %.056, %272 ], [ %.056, %263 ], [ %.056, %259 ], [ %.056, %258 ], [ %.056, %257 ], [ %.056, %246 ], [ %.056, %236 ], [ %.056, %235 ], [ %.056, %225 ], [ %.056, %215 ], [ %.056, %214 ], [ %.056, %203 ], [ %.056, %193 ], [ %.056, %192 ], [ %.056, %182 ], [ %.056, %172 ], [ %.056, %167 ], [ %.056, %165 ], [ %.demorgan, %155 ], [ %.056, %152 ], [ %.056, %151 ], [ %.056, %141 ], [ %.056, %131 ], [ %.056, %127 ], [ %.056, %119 ], [ %.056, %116 ], [ %.056, %115 ], [ %.056, %113 ], [ %.056, %112 ], [ %.056, %111 ], [ %.056, %106 ], [ %.056, %104 ], [ %.056, %93 ], [ %.056, %83 ], [ %.056, %82 ], [ %.056, %78 ], [ %.056, %77 ], [ %.056, %75 ], [ %.056, %74 ], [ %.056, %64 ], [ %.056, %54 ], [ %.056, %52 ], [ %.056, %51 ], [ %.056, %49 ], [ %.056, %48 ], [ %.056, %33 ], [ %.056, %23 ], [ %.056, %20 ], [ %.056, %19 ], [ %.056, %16 ], [ %.056, %15 ], [ %.056, %11 ]
  %.054.be = phi i64 [ %.054, %10 ], [ %.054, %293 ], [ %.054, %292 ], [ %.054, %290 ], [ %.054, %289 ], [ %.054, %288 ], [ %.054, %287 ], [ %.054, %286 ], [ %.054, %280 ], [ %.054, %275 ], [ %.054, %273 ], [ %.054, %272 ], [ %271, %263 ], [ %.054, %259 ], [ 0, %258 ], [ %.054, %257 ], [ %.054, %246 ], [ %.054, %236 ], [ %.054, %235 ], [ %.054, %225 ], [ %.054, %215 ], [ %.054, %214 ], [ %.054, %203 ], [ %.054, %193 ], [ %.054, %192 ], [ %.054, %182 ], [ %.054, %172 ], [ %.054, %167 ], [ %.054, %165 ], [ %.054, %155 ], [ %.054, %152 ], [ %.054, %151 ], [ %.054, %141 ], [ %.054, %131 ], [ %.054, %127 ], [ %.054, %119 ], [ %.054, %116 ], [ %.054, %115 ], [ %.054, %113 ], [ %.054, %112 ], [ %.054, %111 ], [ %.054, %106 ], [ %.054, %104 ], [ %.054, %93 ], [ %.054, %83 ], [ %.054, %82 ], [ %.054, %78 ], [ %.054, %77 ], [ %.054, %75 ], [ %.054, %74 ], [ %.054, %64 ], [ %.054, %54 ], [ %.054, %52 ], [ %.054, %51 ], [ %.054, %49 ], [ %.054, %48 ], [ %.054, %33 ], [ %.054, %23 ], [ %.054, %20 ], [ %.054, %19 ], [ %.054, %16 ], [ %.054, %15 ], [ %.054, %11 ]
  %.052.be = phi i32 [ %.052, %10 ], [ %.052, %293 ], [ %.052, %292 ], [ %.052, %290 ], [ %.052, %289 ], [ %.052, %288 ], [ %.052, %287 ], [ %.052, %286 ], [ %.052, %280 ], [ %.052, %275 ], [ %.052, %273 ], [ %.neg78, %272 ], [ %.052, %263 ], [ %.052, %259 ], [ 0, %258 ], [ %.052, %257 ], [ %.052, %246 ], [ %.052, %236 ], [ %.052, %235 ], [ %.052, %225 ], [ %.052, %215 ], [ %.052, %214 ], [ %.052, %203 ], [ %.052, %193 ], [ %.052, %192 ], [ %.052, %182 ], [ %.052, %172 ], [ %.052, %167 ], [ %.052, %165 ], [ %.052, %155 ], [ %.052, %152 ], [ %.052, %151 ], [ %.052, %141 ], [ %.052, %131 ], [ %.052, %127 ], [ %.052, %119 ], [ %.052, %116 ], [ %.052, %115 ], [ %.052, %113 ], [ %.052, %112 ], [ %.052, %111 ], [ %.052, %106 ], [ %.052, %104 ], [ %.052, %93 ], [ %.052, %83 ], [ %.052, %82 ], [ %.052, %78 ], [ %.052, %77 ], [ %.052, %75 ], [ %.052, %74 ], [ %.052, %64 ], [ %.052, %54 ], [ %.052, %52 ], [ %.052, %51 ], [ %.052, %49 ], [ %.052, %48 ], [ %.052, %33 ], [ %.052, %23 ], [ %.052, %20 ], [ %.052, %19 ], [ %.052, %16 ], [ %.052, %15 ], [ %.052, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ 1938308916, %293 ], [ 492780000, %292 ], [ -1675494390, %290 ], [ 330809674, %289 ], [ -1297951364, %288 ], [ -1423832706, %287 ], [ -1366990288, %286 ], [ -1896578621, %280 ], [ -821499194, %275 ], [ -923388834, %273 ], [ -1291446, %272 ], [ 1537433710, %263 ], [ %262, %259 ], [ -1291446, %258 ], [ 969816249, %257 ], [ %256, %246 ], [ %245, %236 ], [ 8595732, %235 ], [ %234, %225 ], [ %224, %215 ], [ 986241064, %214 ], [ %213, %203 ], [ %202, %193 ], [ 1372248198, %192 ], [ %191, %182 ], [ %181, %172 ], [ 1498378238, %167 ], [ %166, %165 ], [ %164, %155 ], [ %154, %152 ], [ 986241064, %151 ], [ %150, %141 ], [ %140, %131 ], [ %130, %127 ], [ 969816249, %119 ], [ %118, %116 ], [ -821499194, %115 ], [ 2084140579, %113 ], [ 944515497, %112 ], [ 1351678197, %111 ], [ 851931343, %106 ], [ %105, %104 ], [ %103, %93 ], [ %92, %83 ], [ 1351678197, %82 ], [ %81, %78 ], [ 2084140579, %77 ], [ -648562584, %75 ], [ -1483237930, %74 ], [ %73, %64 ], [ %63, %54 ], [ -1611889806, %52 ], [ -1737847348, %51 ], [ 1264050403, %49 ], [ -621758133, %48 ], [ %47, %33 ], [ %32, %23 ], [ %22, %20 ], [ 1264050403, %19 ], [ %18, %16 ], [ -1611889806, %15 ], [ %14, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %.058, %12
  %14 = select i1 %13, i32 -353987441, i32 -938287692
  br label %.backedge

15:                                               ; preds = %10
  br label %.backedge

16:                                               ; preds = %10
  %17 = icmp slt i32 %.076, 5
  %18 = select i1 %17, i32 1118922704, i32 1933775288
  br label %.backedge

19:                                               ; preds = %10
  br label %.backedge

20:                                               ; preds = %10
  %21 = icmp slt i32 %.074, 2
  %22 = select i1 %21, i32 980643560, i32 -88428421
  br label %.backedge

23:                                               ; preds = %10
  %24 = load i32, i32* @x.3, align 4
  %25 = load i32, i32* @y.4, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -1896578621, i32 -832139554
  br label %.backedge

33:                                               ; preds = %10
  %34 = sext i32 %.058 to i64
  %35 = sext i32 %.076 to i64
  %36 = sext i32 %.074 to i64
  %37 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %8, i64 %34, i64 %35, i64 %36
  %38 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %37)
  %39 = load i32, i32* @x.3, align 4
  %40 = load i32, i32* @y.4, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 -1038389463, i32 -832139554
  br label %.backedge

48:                                               ; preds = %10
  br label %.backedge

49:                                               ; preds = %10
  %50 = add i32 %.074, 1
  br label %.backedge

51:                                               ; preds = %10
  br label %.backedge

52:                                               ; preds = %10
  %53 = add i32 %.076, 1
  br label %.backedge

54:                                               ; preds = %10
  %55 = load i32, i32* @x.3, align 4
  %56 = load i32, i32* @y.4, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 -1366990288, i32 -787386213
  br label %.backedge

64:                                               ; preds = %10
  %65 = load i32, i32* @x.3, align 4
  %66 = load i32, i32* @y.4, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 -1896841127, i32 -787386213
  br label %.backedge

74:                                               ; preds = %10
  br label %.backedge

75:                                               ; preds = %10
  %76 = add i32 %.058, 1
  br label %.backedge

77:                                               ; preds = %10
  br label %.backedge

78:                                               ; preds = %10
  %79 = load i32, i32* %3, align 4
  %80 = icmp slt i32 %.072, %79
  %81 = select i1 %80, i32 1746503584, i32 -687367572
  br label %.backedge

82:                                               ; preds = %10
  br label %.backedge

83:                                               ; preds = %10
  %84 = load i32, i32* @x.3, align 4
  %85 = load i32, i32* @y.4, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 -1423832706, i32 -1700835596
  br label %.backedge

93:                                               ; preds = %10
  %94 = icmp slt i32 %.070, 11
  store i1 %94, i1* %2, align 1
  %95 = load i32, i32* @x.3, align 4
  %96 = load i32, i32* @y.4, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 1906401811, i32 -1700835596
  br label %.backedge

104:                                              ; preds = %10
  %.0..0..0.47 = load volatile i1, i1* %2, align 1
  %105 = select i1 %.0..0..0.47, i32 -246312709, i32 1679032405
  br label %.backedge

106:                                              ; preds = %10
  %107 = sext i32 %.072 to i64
  %108 = sext i32 %.070 to i64
  %109 = getelementptr inbounds [11 x i32], [11 x i32]* %9, i64 %107, i64 %108
  %110 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %109)
  br label %.backedge

111:                                              ; preds = %10
  %.neg80 = add i32 %.070, 1
  br label %.backedge

112:                                              ; preds = %10
  br label %.backedge

113:                                              ; preds = %10
  %114 = add i32 %.072, 1
  br label %.backedge

115:                                              ; preds = %10
  br label %.backedge

116:                                              ; preds = %10
  %117 = icmp slt i32 %.066, 1024
  %118 = select i1 %117, i32 -9442542, i32 828636134
  br label %.backedge

119:                                              ; preds = %10
  %120 = load i32, i32* %3, align 4
  %121 = zext i32 %120 to i64
  %122 = call i8* @llvm.stacksave()
  %123 = alloca i32, i64 %121, align 16
  store i32* %123, i32** %1, align 8
  %124 = load i32, i32* %3, align 4
  %125 = sext i32 %124 to i64
  %.0..0..0.48 = load volatile i32*, i32** %1, align 8
  %126 = getelementptr inbounds i32, i32* %.0..0..0.48, i64 %125
  store i32 0, i32* %4, align 4
  %.0..0..0.49 = load volatile i32*, i32** %1, align 8
  call void @_ZSt4fillIPiiEvT_S1_RKT0_(i32* %.0..0..0.49, i32* %126, i32* nonnull dereferenceable(4) %4)
  br label %.backedge

127:                                              ; preds = %10
  %128 = load i32, i32* %3, align 4
  %129 = icmp slt i32 %.062, %128
  %130 = select i1 %129, i32 2043444686, i32 -1861739686
  br label %.backedge

131:                                              ; preds = %10
  %132 = load i32, i32* @x.3, align 4
  %133 = load i32, i32* @y.4, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 -1297951364, i32 724799497
  br label %.backedge

141:                                              ; preds = %10
  %142 = load i32, i32* @x.3, align 4
  %143 = load i32, i32* @y.4, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -1106682329, i32 724799497
  br label %.backedge

151:                                              ; preds = %10
  br label %.backedge

152:                                              ; preds = %10
  %153 = icmp slt i32 %.060, 10
  %154 = select i1 %153, i32 1008057870, i32 1809961130
  br label %.backedge

155:                                              ; preds = %10
  %156 = sdiv i32 %.060, 2
  %157 = srem i32 %.060, 2
  %158 = shl nuw i32 1, %.060
  %.demorgan = and i32 %158, %.066
  %159 = sext i32 %.062 to i64
  %160 = sext i32 %156 to i64
  %161 = sext i32 %157 to i64
  %162 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %8, i64 %159, i64 %160, i64 %161
  %163 = load i32, i32* %162, align 4
  %.not79 = icmp eq i32 %163, 0
  %164 = select i1 %.not79, i32 1498378238, i32 1832001404
  br label %.backedge

165:                                              ; preds = %10
  %.not = icmp eq i32 %.056, 0
  %166 = select i1 %.not, i32 1498378238, i32 88420788
  br label %.backedge

167:                                              ; preds = %10
  %168 = sext i32 %.062 to i64
  %.0..0..0.50 = load volatile i32*, i32** %1, align 8
  %169 = getelementptr inbounds i32, i32* %.0..0..0.50, i64 %168
  %170 = load i32, i32* %169, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %169, align 4
  br label %.backedge

172:                                              ; preds = %10
  %173 = load i32, i32* @x.3, align 4
  %174 = load i32, i32* @y.4, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 330809674, i32 357054878
  br label %.backedge

182:                                              ; preds = %10
  %183 = load i32, i32* @x.3, align 4
  %184 = load i32, i32* @y.4, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 1703316110, i32 357054878
  br label %.backedge

192:                                              ; preds = %10
  br label %.backedge

193:                                              ; preds = %10
  %194 = load i32, i32* @x.3, align 4
  %195 = load i32, i32* @y.4, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 -1675494390, i32 390964796
  br label %.backedge

203:                                              ; preds = %10
  %204 = add i32 %.060, 1
  %205 = load i32, i32* @x.3, align 4
  %206 = load i32, i32* @y.4, align 4
  %207 = add i32 %205, -1
  %208 = mul i32 %207, %205
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %211, %210
  %213 = select i1 %212, i32 -1579825004, i32 390964796
  br label %.backedge

214:                                              ; preds = %10
  br label %.backedge

215:                                              ; preds = %10
  %216 = load i32, i32* @x.3, align 4
  %217 = load i32, i32* @y.4, align 4
  %218 = add i32 %216, -1
  %219 = mul i32 %218, %216
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %222, %221
  %224 = select i1 %223, i32 492780000, i32 1271142415
  br label %.backedge

225:                                              ; preds = %10
  %226 = load i32, i32* @x.3, align 4
  %227 = load i32, i32* @y.4, align 4
  %228 = add i32 %226, -1
  %229 = mul i32 %228, %226
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %232, %231
  %234 = select i1 %233, i32 -915475637, i32 1271142415
  br label %.backedge

235:                                              ; preds = %10
  br label %.backedge

236:                                              ; preds = %10
  %237 = load i32, i32* @x.3, align 4
  %238 = load i32, i32* @y.4, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 1938308916, i32 -1063195346
  br label %.backedge

246:                                              ; preds = %10
  %247 = add i32 %.062, 1
  %248 = load i32, i32* @x.3, align 4
  %249 = load i32, i32* @y.4, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 -422327699, i32 -1063195346
  br label %.backedge

257:                                              ; preds = %10
  br label %.backedge

258:                                              ; preds = %10
  br label %.backedge

259:                                              ; preds = %10
  %260 = load i32, i32* %3, align 4
  %261 = icmp slt i32 %.052, %260
  %262 = select i1 %261, i32 -109261117, i32 -1127130157
  br label %.backedge

263:                                              ; preds = %10
  %264 = sext i32 %.052 to i64
  %.0..0..0.51 = load volatile i32*, i32** %1, align 8
  %265 = getelementptr inbounds i32, i32* %.0..0..0.51, i64 %264
  %266 = load i32, i32* %265, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [11 x i32], [11 x i32]* %9, i64 %264, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = sext i32 %269 to i64
  %271 = add i64 %.054, %270
  br label %.backedge

272:                                              ; preds = %10
  %.neg78 = add i32 %.052, 1
  br label %.backedge

273:                                              ; preds = %10
  %274 = call i64 @_Z3maxxx(i64 %.068, i64 %.054)
  call void @llvm.stackrestore(i8* %.064)
  br label %.backedge

275:                                              ; preds = %10
  %276 = add i32 %.066, 1
  br label %.backedge

277:                                              ; preds = %10
  %278 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.068)
  %279 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %278, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0

280:                                              ; preds = %10
  %281 = sext i32 %.058 to i64
  %282 = sext i32 %.076 to i64
  %283 = sext i32 %.074 to i64
  %284 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %8, i64 %281, i64 %282, i64 %283
  %285 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %284)
  br label %.backedge

286:                                              ; preds = %10
  br label %.backedge

287:                                              ; preds = %10
  br label %.backedge

288:                                              ; preds = %10
  br label %.backedge

289:                                              ; preds = %10
  br label %.backedge

290:                                              ; preds = %10
  %291 = add i32 %.060, 1
  br label %.backedge

292:                                              ; preds = %10
  br label %.backedge

293:                                              ; preds = %10
  %.neg = add i32 %.062, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #6

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPiiEvT_S1_RKT0_(i32* %0, i32* %1, i32* dereferenceable(4) %2) local_unnamed_addr #0 comdat {
  %4 = tail call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %0)
  %5 = tail call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %1)
  tail call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %4, i32* %5, i32* nonnull dereferenceable(4) %2)
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #6

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %0, i32* %1, i32* dereferenceable(4) %2) local_unnamed_addr #7 comdat {
  %4 = alloca i1, align 1
  %5 = load i32, i32* %2, align 4
  br label %6

6:                                                ; preds = %.backedge, %3
  %.011 = phi i32* [ %0, %3 ], [ %.011.be, %.backedge ]
  %.0 = phi i32 [ -736310844, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -736310844, label %7
    i32 1885546997, label %17
    i32 -1497552063, label %28
    i32 162827366, label %30
    i32 -1213878129, label %40
    i32 2145647547, label %50
    i32 -655966095, label %51
    i32 -1652314994, label %53
    i32 2112692770, label %63
    i32 -269812039, label %73
    i32 1994545956, label %74
    i32 -1004999328, label %75
    i32 -936463181, label %76
  ]

.backedge:                                        ; preds = %6, %76, %75, %74, %63, %53, %51, %50, %40, %30, %28, %17, %7
  %.011.be = phi i32* [ %.011, %6 ], [ %.011, %76 ], [ %.011, %75 ], [ %.011, %74 ], [ %.011, %63 ], [ %.011, %53 ], [ %52, %51 ], [ %.011, %50 ], [ %.011, %40 ], [ %.011, %30 ], [ %.011, %28 ], [ %.011, %17 ], [ %.011, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ 2112692770, %76 ], [ -1213878129, %75 ], [ 1885546997, %74 ], [ %72, %63 ], [ %62, %53 ], [ -736310844, %51 ], [ -655966095, %50 ], [ %49, %40 ], [ %39, %30 ], [ %29, %28 ], [ %27, %17 ], [ %16, %7 ]
  br label %6

7:                                                ; preds = %6
  %8 = load i32, i32* @x.7, align 4
  %9 = load i32, i32* @y.8, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 1885546997, i32 1994545956
  br label %.backedge

17:                                               ; preds = %6
  %18 = icmp ne i32* %.011, %1
  store i1 %18, i1* %4, align 1
  %19 = load i32, i32* @x.7, align 4
  %20 = load i32, i32* @y.8, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 -1497552063, i32 1994545956
  br label %.backedge

28:                                               ; preds = %6
  %.0..0..0.10 = load volatile i1, i1* %4, align 1
  %29 = select i1 %.0..0..0.10, i32 162827366, i32 -1652314994
  br label %.backedge

30:                                               ; preds = %6
  %31 = load i32, i32* @x.7, align 4
  %32 = load i32, i32* @y.8, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 -1213878129, i32 -1004999328
  br label %.backedge

40:                                               ; preds = %6
  store i32 %5, i32* %.011, align 4
  %41 = load i32, i32* @x.7, align 4
  %42 = load i32, i32* @y.8, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 2145647547, i32 -1004999328
  br label %.backedge

50:                                               ; preds = %6
  br label %.backedge

51:                                               ; preds = %6
  %52 = getelementptr inbounds i32, i32* %.011, i64 1
  br label %.backedge

53:                                               ; preds = %6
  %54 = load i32, i32* @x.7, align 4
  %55 = load i32, i32* @y.8, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 2112692770, i32 -936463181
  br label %.backedge

63:                                               ; preds = %6
  %64 = load i32, i32* @x.7, align 4
  %65 = load i32, i32* @y.8, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 -269812039, i32 -936463181
  br label %.backedge

73:                                               ; preds = %6
  ret void

74:                                               ; preds = %6
  br label %.backedge

75:                                               ; preds = %6
  store i32 %5, i32* %.011, align 4
  br label %.backedge

76:                                               ; preds = %6
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %0) local_unnamed_addr #0 comdat {
  %2 = tail call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %0)
  ret i32* %2
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %0) local_unnamed_addr #7 comdat align 2 {
  ret i32* %0
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s049314707.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { mustprogress nofree nosync nounwind willreturn }
attributes #7 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
