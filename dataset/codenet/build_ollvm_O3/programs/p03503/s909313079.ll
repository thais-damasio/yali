; ModuleID = 'build_ollvm/programs/p03503/s909313079.ll'
source_filename = "Project_CodeNet_C++1400/p03503/s909313079.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@N = global i32 0, align 4
@F = global [100 x [14 x i32]] zeroinitializer, align 16
@P = global [100 x [15 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull @N)
  br label %5

5:                                                ; preds = %.backedge, %0
  %.059 = phi i32 [ 0, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.045 = phi i32 [ undef, %0 ], [ %.045.be, %.backedge ]
  %.043 = phi i32 [ undef, %0 ], [ %.043.be, %.backedge ]
  %.041 = phi i32 [ undef, %0 ], [ %.041.be, %.backedge ]
  %.0 = phi i32 [ 1586120239, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1586120239, label %6
    i32 2043384606, label %10
    i32 1235451488, label %20
    i32 1909679401, label %30
    i32 -1788437897, label %31
    i32 440935584, label %34
    i32 -770142161, label %39
    i32 509457972, label %41
    i32 893716001, label %42
    i32 398299335, label %52
    i32 -1192844552, label %63
    i32 703900003, label %64
    i32 105046330, label %74
    i32 -1918455144, label %84
    i32 425351283, label %85
    i32 -928707252, label %89
    i32 131646537, label %99
    i32 -1308982964, label %109
    i32 -31918718, label %110
    i32 2096963154, label %120
    i32 1448890737, label %131
    i32 -216556407, label %133
    i32 -1923512878, label %138
    i32 -1720885489, label %140
    i32 -1060534079, label %141
    i32 1056759640, label %151
    i32 -1346054167, label %162
    i32 -414117573, label %163
    i32 -723394996, label %164
    i32 177780691, label %174
    i32 1862043744, label %185
    i32 -1778984768, label %187
    i32 94510448, label %188
    i32 1631308716, label %192
    i32 -9570083, label %202
    i32 857606697, label %212
    i32 1674455687, label %213
    i32 -1197651373, label %216
    i32 -2077622749, label %220
    i32 1542085725, label %230
    i32 -763452392, label %245
    i32 1812602399, label %247
    i32 -1807660967, label %249
    i32 890533237, label %250
    i32 -1111743872, label %252
    i32 454570602, label %258
    i32 -812395904, label %268
    i32 -1125569166, label %278
    i32 -653415871, label %279
    i32 -1078141945, label %282
    i32 -1595961282, label %283
    i32 936744050, label %284
    i32 -943172528, label %286
    i32 602488107, label %288
    i32 -1979775240, label %289
    i32 1169831269, label %291
    i32 739502830, label %292
    i32 -861763486, label %293
    i32 1436880550, label %294
    i32 -1908520239, label %296
    i32 1735629652, label %297
    i32 504003530, label %298
    i32 -1820609567, label %299
  ]

.backedge:                                        ; preds = %5, %299, %298, %297, %296, %294, %293, %292, %291, %289, %288, %284, %283, %282, %279, %278, %268, %258, %252, %250, %249, %247, %245, %230, %220, %216, %213, %212, %202, %192, %188, %187, %185, %174, %164, %163, %162, %151, %141, %140, %138, %133, %131, %120, %110, %109, %99, %89, %85, %84, %74, %64, %63, %52, %42, %41, %39, %34, %31, %30, %20, %10, %6
  %.059.be = phi i32 [ %.059, %5 ], [ %.059, %299 ], [ %.059, %298 ], [ %.059, %297 ], [ %.059, %296 ], [ %.059, %294 ], [ %.059, %293 ], [ %.059, %292 ], [ %.059, %291 ], [ %290, %289 ], [ %.059, %288 ], [ %.059, %284 ], [ %.059, %283 ], [ %.059, %282 ], [ %.059, %279 ], [ %.059, %278 ], [ %.059, %268 ], [ %.059, %258 ], [ %.059, %252 ], [ %.059, %250 ], [ %.059, %249 ], [ %.059, %247 ], [ %.059, %245 ], [ %.059, %230 ], [ %.059, %220 ], [ %.059, %216 ], [ %.059, %213 ], [ %.059, %212 ], [ %.059, %202 ], [ %.059, %192 ], [ %.059, %188 ], [ %.059, %187 ], [ %.059, %185 ], [ %.059, %174 ], [ %.059, %164 ], [ %.059, %163 ], [ %.059, %162 ], [ %.059, %151 ], [ %.059, %141 ], [ %.059, %140 ], [ %.059, %138 ], [ %.059, %133 ], [ %.059, %131 ], [ %.059, %120 ], [ %.059, %110 ], [ %.059, %109 ], [ %.059, %99 ], [ %.059, %89 ], [ %.059, %85 ], [ %.059, %84 ], [ %.059, %74 ], [ %.059, %64 ], [ %.059, %63 ], [ %53, %52 ], [ %.059, %42 ], [ %.059, %41 ], [ %.059, %39 ], [ %.059, %34 ], [ %.059, %31 ], [ %.059, %30 ], [ %.059, %20 ], [ %.059, %10 ], [ %.059, %6 ]
  %.057.be = phi i32 [ %.057, %5 ], [ %.057, %299 ], [ %.057, %298 ], [ %.057, %297 ], [ %.057, %296 ], [ %.057, %294 ], [ %.057, %293 ], [ %.057, %292 ], [ %.057, %291 ], [ %.057, %289 ], [ 0, %288 ], [ %.057, %284 ], [ %.057, %283 ], [ %.057, %282 ], [ %.057, %279 ], [ %.057, %278 ], [ %.057, %268 ], [ %.057, %258 ], [ %.057, %252 ], [ %.057, %250 ], [ %.057, %249 ], [ %.057, %247 ], [ %.057, %245 ], [ %.057, %230 ], [ %.057, %220 ], [ %.057, %216 ], [ %.057, %213 ], [ %.057, %212 ], [ %.057, %202 ], [ %.057, %192 ], [ %.057, %188 ], [ %.057, %187 ], [ %.057, %185 ], [ %.057, %174 ], [ %.057, %164 ], [ %.057, %163 ], [ %.057, %162 ], [ %.057, %151 ], [ %.057, %141 ], [ %.057, %140 ], [ %.057, %138 ], [ %.057, %133 ], [ %.057, %131 ], [ %.057, %120 ], [ %.057, %110 ], [ %.057, %109 ], [ %.057, %99 ], [ %.057, %89 ], [ %.057, %85 ], [ %.057, %84 ], [ %.057, %74 ], [ %.057, %64 ], [ %.057, %63 ], [ %.057, %52 ], [ %.057, %42 ], [ %.057, %41 ], [ %40, %39 ], [ %.057, %34 ], [ %.057, %31 ], [ %.057, %30 ], [ 0, %20 ], [ %.057, %10 ], [ %.057, %6 ]
  %.055.be = phi i32 [ %.055, %5 ], [ %.055, %299 ], [ %.055, %298 ], [ %.055, %297 ], [ %.055, %296 ], [ %295, %294 ], [ %.055, %293 ], [ %.055, %292 ], [ 0, %291 ], [ %.055, %289 ], [ %.055, %288 ], [ %.055, %284 ], [ %.055, %283 ], [ %.055, %282 ], [ %.055, %279 ], [ %.055, %278 ], [ %.055, %268 ], [ %.055, %258 ], [ %.055, %252 ], [ %.055, %250 ], [ %.055, %249 ], [ %.055, %247 ], [ %.055, %245 ], [ %.055, %230 ], [ %.055, %220 ], [ %.055, %216 ], [ %.055, %213 ], [ %.055, %212 ], [ %.055, %202 ], [ %.055, %192 ], [ %.055, %188 ], [ %.055, %187 ], [ %.055, %185 ], [ %.055, %174 ], [ %.055, %164 ], [ %.055, %163 ], [ %.055, %162 ], [ %152, %151 ], [ %.055, %141 ], [ %.055, %140 ], [ %.055, %138 ], [ %.055, %133 ], [ %.055, %131 ], [ %.055, %120 ], [ %.055, %110 ], [ %.055, %109 ], [ %.055, %99 ], [ %.055, %89 ], [ %.055, %85 ], [ %.055, %84 ], [ 0, %74 ], [ %.055, %64 ], [ %.055, %63 ], [ %.055, %52 ], [ %.055, %42 ], [ %.055, %41 ], [ %.055, %39 ], [ %.055, %34 ], [ %.055, %31 ], [ %.055, %30 ], [ %.055, %20 ], [ %.055, %10 ], [ %.055, %6 ]
  %.053.be = phi i32 [ %.053, %5 ], [ %.053, %299 ], [ %.053, %298 ], [ %.053, %297 ], [ %.053, %296 ], [ %.053, %294 ], [ %.053, %293 ], [ 0, %292 ], [ %.053, %291 ], [ %.053, %289 ], [ %.053, %288 ], [ %.053, %284 ], [ %.053, %283 ], [ %.053, %282 ], [ %.053, %279 ], [ %.053, %278 ], [ %.053, %268 ], [ %.053, %258 ], [ %.053, %252 ], [ %.053, %250 ], [ %.053, %249 ], [ %.053, %247 ], [ %.053, %245 ], [ %.053, %230 ], [ %.053, %220 ], [ %.053, %216 ], [ %.053, %213 ], [ %.053, %212 ], [ %.053, %202 ], [ %.053, %192 ], [ %.053, %188 ], [ %.053, %187 ], [ %.053, %185 ], [ %.053, %174 ], [ %.053, %164 ], [ %.053, %163 ], [ %.053, %162 ], [ %.053, %151 ], [ %.053, %141 ], [ %.053, %140 ], [ %139, %138 ], [ %.053, %133 ], [ %.053, %131 ], [ %.053, %120 ], [ %.053, %110 ], [ %.053, %109 ], [ 0, %99 ], [ %.053, %89 ], [ %.053, %85 ], [ %.053, %84 ], [ %.053, %74 ], [ %.053, %64 ], [ %.053, %63 ], [ %.053, %52 ], [ %.053, %42 ], [ %.053, %41 ], [ %.053, %39 ], [ %.053, %34 ], [ %.053, %31 ], [ %.053, %30 ], [ %.053, %20 ], [ %.053, %10 ], [ %.053, %6 ]
  %.051.be = phi i32 [ %.051, %5 ], [ %.051, %299 ], [ %.051, %298 ], [ %.051, %297 ], [ %.051, %296 ], [ %.051, %294 ], [ %.051, %293 ], [ %.051, %292 ], [ %.051, %291 ], [ %.051, %289 ], [ %.051, %288 ], [ %.051, %284 ], [ %.051, %283 ], [ %.047, %282 ], [ %.051, %279 ], [ %.051, %278 ], [ %.051, %268 ], [ %.051, %258 ], [ %.051, %252 ], [ %.051, %250 ], [ %.051, %249 ], [ %.051, %247 ], [ %.051, %245 ], [ %.051, %230 ], [ %.051, %220 ], [ %.051, %216 ], [ %.051, %213 ], [ %.051, %212 ], [ %.051, %202 ], [ %.051, %192 ], [ %.051, %188 ], [ %.051, %187 ], [ %.051, %185 ], [ %.051, %174 ], [ %.051, %164 ], [ -1073741824, %163 ], [ %.051, %162 ], [ %.051, %151 ], [ %.051, %141 ], [ %.051, %140 ], [ %.051, %138 ], [ %.051, %133 ], [ %.051, %131 ], [ %.051, %120 ], [ %.051, %110 ], [ %.051, %109 ], [ %.051, %99 ], [ %.051, %89 ], [ %.051, %85 ], [ %.051, %84 ], [ %.051, %74 ], [ %.051, %64 ], [ %.051, %63 ], [ %.051, %52 ], [ %.051, %42 ], [ %.051, %41 ], [ %.051, %39 ], [ %.051, %34 ], [ %.051, %31 ], [ %.051, %30 ], [ %.051, %20 ], [ %.051, %10 ], [ %.051, %6 ]
  %.049.be = phi i32 [ %.049, %5 ], [ %.049, %299 ], [ %.049, %298 ], [ %.049, %297 ], [ %.049, %296 ], [ %.049, %294 ], [ %.049, %293 ], [ %.049, %292 ], [ %.049, %291 ], [ %.049, %289 ], [ %.049, %288 ], [ %285, %284 ], [ %.049, %283 ], [ %.049, %282 ], [ %.049, %279 ], [ %.049, %278 ], [ %.049, %268 ], [ %.049, %258 ], [ %.049, %252 ], [ %.049, %250 ], [ %.049, %249 ], [ %.049, %247 ], [ %.049, %245 ], [ %.049, %230 ], [ %.049, %220 ], [ %.049, %216 ], [ %.049, %213 ], [ %.049, %212 ], [ %.049, %202 ], [ %.049, %192 ], [ %.049, %188 ], [ %.049, %187 ], [ %.049, %185 ], [ %.049, %174 ], [ %.049, %164 ], [ 1, %163 ], [ %.049, %162 ], [ %.049, %151 ], [ %.049, %141 ], [ %.049, %140 ], [ %.049, %138 ], [ %.049, %133 ], [ %.049, %131 ], [ %.049, %120 ], [ %.049, %110 ], [ %.049, %109 ], [ %.049, %99 ], [ %.049, %89 ], [ %.049, %85 ], [ %.049, %84 ], [ %.049, %74 ], [ %.049, %64 ], [ %.049, %63 ], [ %.049, %52 ], [ %.049, %42 ], [ %.049, %41 ], [ %.049, %39 ], [ %.049, %34 ], [ %.049, %31 ], [ %.049, %30 ], [ %.049, %20 ], [ %.049, %10 ], [ %.049, %6 ]
  %.047.be = phi i32 [ %.047, %5 ], [ %.047, %299 ], [ %.047, %298 ], [ %.047, %297 ], [ %.047, %296 ], [ %.047, %294 ], [ %.047, %293 ], [ %.047, %292 ], [ %.047, %291 ], [ %.047, %289 ], [ %.047, %288 ], [ %.047, %284 ], [ %.047, %283 ], [ %.047, %282 ], [ %.047, %279 ], [ %.047, %278 ], [ %.047, %268 ], [ %.047, %258 ], [ %257, %252 ], [ %.047, %250 ], [ %.047, %249 ], [ %.047, %247 ], [ %.047, %245 ], [ %.047, %230 ], [ %.047, %220 ], [ %.047, %216 ], [ %.047, %213 ], [ %.047, %212 ], [ %.047, %202 ], [ %.047, %192 ], [ %.047, %188 ], [ 0, %187 ], [ %.047, %185 ], [ %.047, %174 ], [ %.047, %164 ], [ %.047, %163 ], [ %.047, %162 ], [ %.047, %151 ], [ %.047, %141 ], [ %.047, %140 ], [ %.047, %138 ], [ %.047, %133 ], [ %.047, %131 ], [ %.047, %120 ], [ %.047, %110 ], [ %.047, %109 ], [ %.047, %99 ], [ %.047, %89 ], [ %.047, %85 ], [ %.047, %84 ], [ %.047, %74 ], [ %.047, %64 ], [ %.047, %63 ], [ %.047, %52 ], [ %.047, %42 ], [ %.047, %41 ], [ %.047, %39 ], [ %.047, %34 ], [ %.047, %31 ], [ %.047, %30 ], [ %.047, %20 ], [ %.047, %10 ], [ %.047, %6 ]
  %.045.be = phi i32 [ %.045, %5 ], [ %300, %299 ], [ %.045, %298 ], [ %.045, %297 ], [ %.045, %296 ], [ %.045, %294 ], [ %.045, %293 ], [ %.045, %292 ], [ %.045, %291 ], [ %.045, %289 ], [ %.045, %288 ], [ %.045, %284 ], [ %.045, %283 ], [ %.045, %282 ], [ %.045, %279 ], [ %.045, %278 ], [ %.neg, %268 ], [ %.045, %258 ], [ %.045, %252 ], [ %.045, %250 ], [ %.045, %249 ], [ %.045, %247 ], [ %.045, %245 ], [ %.045, %230 ], [ %.045, %220 ], [ %.045, %216 ], [ %.045, %213 ], [ %.045, %212 ], [ %.045, %202 ], [ %.045, %192 ], [ %.045, %188 ], [ 0, %187 ], [ %.045, %185 ], [ %.045, %174 ], [ %.045, %164 ], [ %.045, %163 ], [ %.045, %162 ], [ %.045, %151 ], [ %.045, %141 ], [ %.045, %140 ], [ %.045, %138 ], [ %.045, %133 ], [ %.045, %131 ], [ %.045, %120 ], [ %.045, %110 ], [ %.045, %109 ], [ %.045, %99 ], [ %.045, %89 ], [ %.045, %85 ], [ %.045, %84 ], [ %.045, %74 ], [ %.045, %64 ], [ %.045, %63 ], [ %.045, %52 ], [ %.045, %42 ], [ %.045, %41 ], [ %.045, %39 ], [ %.045, %34 ], [ %.045, %31 ], [ %.045, %30 ], [ %.045, %20 ], [ %.045, %10 ], [ %.045, %6 ]
  %.043.be = phi i32 [ %.043, %5 ], [ %.043, %299 ], [ %.043, %298 ], [ 0, %297 ], [ %.043, %296 ], [ %.043, %294 ], [ %.043, %293 ], [ %.043, %292 ], [ %.043, %291 ], [ %.043, %289 ], [ %.043, %288 ], [ %.043, %284 ], [ %.043, %283 ], [ %.043, %282 ], [ %.043, %279 ], [ %.043, %278 ], [ %.043, %268 ], [ %.043, %258 ], [ %.043, %252 ], [ %.043, %250 ], [ %.043, %249 ], [ %248, %247 ], [ %.043, %245 ], [ %.043, %230 ], [ %.043, %220 ], [ %.043, %216 ], [ %.043, %213 ], [ %.043, %212 ], [ 0, %202 ], [ %.043, %192 ], [ %.043, %188 ], [ %.043, %187 ], [ %.043, %185 ], [ %.043, %174 ], [ %.043, %164 ], [ %.043, %163 ], [ %.043, %162 ], [ %.043, %151 ], [ %.043, %141 ], [ %.043, %140 ], [ %.043, %138 ], [ %.043, %133 ], [ %.043, %131 ], [ %.043, %120 ], [ %.043, %110 ], [ %.043, %109 ], [ %.043, %99 ], [ %.043, %89 ], [ %.043, %85 ], [ %.043, %84 ], [ %.043, %74 ], [ %.043, %64 ], [ %.043, %63 ], [ %.043, %52 ], [ %.043, %42 ], [ %.043, %41 ], [ %.043, %39 ], [ %.043, %34 ], [ %.043, %31 ], [ %.043, %30 ], [ %.043, %20 ], [ %.043, %10 ], [ %.043, %6 ]
  %.041.be = phi i32 [ %.041, %5 ], [ %.041, %299 ], [ %.041, %298 ], [ 0, %297 ], [ %.041, %296 ], [ %.041, %294 ], [ %.041, %293 ], [ %.041, %292 ], [ %.041, %291 ], [ %.041, %289 ], [ %.041, %288 ], [ %.041, %284 ], [ %.041, %283 ], [ %.041, %282 ], [ %.041, %279 ], [ %.041, %278 ], [ %.041, %268 ], [ %.041, %258 ], [ %.041, %252 ], [ %251, %250 ], [ %.041, %249 ], [ %.041, %247 ], [ %.041, %245 ], [ %.041, %230 ], [ %.041, %220 ], [ %.041, %216 ], [ %.041, %213 ], [ %.041, %212 ], [ 0, %202 ], [ %.041, %192 ], [ %.041, %188 ], [ %.041, %187 ], [ %.041, %185 ], [ %.041, %174 ], [ %.041, %164 ], [ %.041, %163 ], [ %.041, %162 ], [ %.041, %151 ], [ %.041, %141 ], [ %.041, %140 ], [ %.041, %138 ], [ %.041, %133 ], [ %.041, %131 ], [ %.041, %120 ], [ %.041, %110 ], [ %.041, %109 ], [ %.041, %99 ], [ %.041, %89 ], [ %.041, %85 ], [ %.041, %84 ], [ %.041, %74 ], [ %.041, %64 ], [ %.041, %63 ], [ %.041, %52 ], [ %.041, %42 ], [ %.041, %41 ], [ %.041, %39 ], [ %.041, %34 ], [ %.041, %31 ], [ %.041, %30 ], [ %.041, %20 ], [ %.041, %10 ], [ %.041, %6 ]
  %.0.be = phi i32 [ %.0, %5 ], [ -812395904, %299 ], [ 1542085725, %298 ], [ -9570083, %297 ], [ 177780691, %296 ], [ 1056759640, %294 ], [ 2096963154, %293 ], [ 131646537, %292 ], [ 105046330, %291 ], [ 398299335, %289 ], [ 1235451488, %288 ], [ -723394996, %284 ], [ 936744050, %283 ], [ -1595961282, %282 ], [ %281, %279 ], [ 94510448, %278 ], [ %277, %268 ], [ %267, %258 ], [ 454570602, %252 ], [ 1674455687, %250 ], [ 890533237, %249 ], [ -1807660967, %247 ], [ %246, %245 ], [ %244, %230 ], [ %229, %220 ], [ %219, %216 ], [ %215, %213 ], [ 1674455687, %212 ], [ %211, %202 ], [ %201, %192 ], [ %191, %188 ], [ 94510448, %187 ], [ %186, %185 ], [ %184, %174 ], [ %173, %164 ], [ -723394996, %163 ], [ 425351283, %162 ], [ %161, %151 ], [ %150, %141 ], [ -1060534079, %140 ], [ -31918718, %138 ], [ -1923512878, %133 ], [ %132, %131 ], [ %130, %120 ], [ %119, %110 ], [ -31918718, %109 ], [ %108, %99 ], [ %98, %89 ], [ %88, %85 ], [ 425351283, %84 ], [ %83, %74 ], [ %73, %64 ], [ 1586120239, %63 ], [ %62, %52 ], [ %51, %42 ], [ 893716001, %41 ], [ -1788437897, %39 ], [ -770142161, %34 ], [ %33, %31 ], [ -1788437897, %30 ], [ %29, %20 ], [ %19, %10 ], [ %9, %6 ]
  br label %5

6:                                                ; preds = %5
  %7 = load i32, i32* @N, align 4
  %8 = icmp slt i32 %.059, %7
  %9 = select i1 %8, i32 2043384606, i32 703900003
  br label %.backedge

10:                                               ; preds = %5
  %11 = load i32, i32* @x, align 4
  %12 = load i32, i32* @y, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 1235451488, i32 602488107
  br label %.backedge

20:                                               ; preds = %5
  %21 = load i32, i32* @x, align 4
  %22 = load i32, i32* @y, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 1909679401, i32 602488107
  br label %.backedge

30:                                               ; preds = %5
  br label %.backedge

31:                                               ; preds = %5
  %32 = icmp slt i32 %.057, 10
  %33 = select i1 %32, i32 440935584, i32 509457972
  br label %.backedge

34:                                               ; preds = %5
  %35 = sext i32 %.059 to i64
  %36 = sext i32 %.057 to i64
  %37 = getelementptr inbounds [100 x [14 x i32]], [100 x [14 x i32]]* @F, i64 0, i64 %35, i64 %36
  %38 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %37)
  br label %.backedge

39:                                               ; preds = %5
  %40 = add i32 %.057, 1
  br label %.backedge

41:                                               ; preds = %5
  br label %.backedge

42:                                               ; preds = %5
  %43 = load i32, i32* @x, align 4
  %44 = load i32, i32* @y, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 398299335, i32 -1979775240
  br label %.backedge

52:                                               ; preds = %5
  %53 = add i32 %.059, 1
  %54 = load i32, i32* @x, align 4
  %55 = load i32, i32* @y, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -1192844552, i32 -1979775240
  br label %.backedge

63:                                               ; preds = %5
  br label %.backedge

64:                                               ; preds = %5
  %65 = load i32, i32* @x, align 4
  %66 = load i32, i32* @y, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 105046330, i32 1169831269
  br label %.backedge

74:                                               ; preds = %5
  %75 = load i32, i32* @x, align 4
  %76 = load i32, i32* @y, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 -1918455144, i32 1169831269
  br label %.backedge

84:                                               ; preds = %5
  br label %.backedge

85:                                               ; preds = %5
  %86 = load i32, i32* @N, align 4
  %87 = icmp slt i32 %.055, %86
  %88 = select i1 %87, i32 -928707252, i32 -414117573
  br label %.backedge

89:                                               ; preds = %5
  %90 = load i32, i32* @x, align 4
  %91 = load i32, i32* @y, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 131646537, i32 739502830
  br label %.backedge

99:                                               ; preds = %5
  %100 = load i32, i32* @x, align 4
  %101 = load i32, i32* @y, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 -1308982964, i32 739502830
  br label %.backedge

109:                                              ; preds = %5
  br label %.backedge

110:                                              ; preds = %5
  %111 = load i32, i32* @x, align 4
  %112 = load i32, i32* @y, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 2096963154, i32 -861763486
  br label %.backedge

120:                                              ; preds = %5
  %121 = icmp slt i32 %.053, 11
  store i1 %121, i1* %3, align 1
  %122 = load i32, i32* @x, align 4
  %123 = load i32, i32* @y, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 1448890737, i32 -861763486
  br label %.backedge

131:                                              ; preds = %5
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %132 = select i1 %.0..0..0., i32 -216556407, i32 -1720885489
  br label %.backedge

133:                                              ; preds = %5
  %134 = sext i32 %.055 to i64
  %135 = sext i32 %.053 to i64
  %136 = getelementptr inbounds [100 x [15 x i32]], [100 x [15 x i32]]* @P, i64 0, i64 %134, i64 %135
  %137 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %136)
  br label %.backedge

138:                                              ; preds = %5
  %139 = add i32 %.053, 1
  br label %.backedge

140:                                              ; preds = %5
  br label %.backedge

141:                                              ; preds = %5
  %142 = load i32, i32* @x, align 4
  %143 = load i32, i32* @y, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 1056759640, i32 1436880550
  br label %.backedge

151:                                              ; preds = %5
  %152 = add i32 %.055, 1
  %153 = load i32, i32* @x, align 4
  %154 = load i32, i32* @y, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 -1346054167, i32 1436880550
  br label %.backedge

162:                                              ; preds = %5
  br label %.backedge

163:                                              ; preds = %5
  br label %.backedge

164:                                              ; preds = %5
  %165 = load i32, i32* @x, align 4
  %166 = load i32, i32* @y, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 177780691, i32 -1908520239
  br label %.backedge

174:                                              ; preds = %5
  %175 = icmp slt i32 %.049, 1024
  store i1 %175, i1* %2, align 1
  %176 = load i32, i32* @x, align 4
  %177 = load i32, i32* @y, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 1862043744, i32 -1908520239
  br label %.backedge

185:                                              ; preds = %5
  %.0..0..0.39 = load volatile i1, i1* %2, align 1
  %186 = select i1 %.0..0..0.39, i32 -1778984768, i32 -943172528
  br label %.backedge

187:                                              ; preds = %5
  br label %.backedge

188:                                              ; preds = %5
  %189 = load i32, i32* @N, align 4
  %190 = icmp slt i32 %.045, %189
  %191 = select i1 %190, i32 1631308716, i32 -653415871
  br label %.backedge

192:                                              ; preds = %5
  %193 = load i32, i32* @x, align 4
  %194 = load i32, i32* @y, align 4
  %195 = add i32 %193, -1
  %196 = mul i32 %195, %193
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %199, %198
  %201 = select i1 %200, i32 -9570083, i32 1735629652
  br label %.backedge

202:                                              ; preds = %5
  %203 = load i32, i32* @x, align 4
  %204 = load i32, i32* @y, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 857606697, i32 1735629652
  br label %.backedge

212:                                              ; preds = %5
  br label %.backedge

213:                                              ; preds = %5
  %214 = icmp slt i32 %.041, 10
  %215 = select i1 %214, i32 -1197651373, i32 -1111743872
  br label %.backedge

216:                                              ; preds = %5
  %217 = shl nuw i32 1, %.041
  %218 = and i32 %217, %.049
  %.not = icmp eq i32 %218, 0
  %219 = select i1 %.not, i32 -1807660967, i32 -2077622749
  br label %.backedge

220:                                              ; preds = %5
  %221 = load i32, i32* @x, align 4
  %222 = load i32, i32* @y, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 1542085725, i32 504003530
  br label %.backedge

230:                                              ; preds = %5
  %231 = sext i32 %.045 to i64
  %232 = sext i32 %.041 to i64
  %233 = getelementptr inbounds [100 x [14 x i32]], [100 x [14 x i32]]* @F, i64 0, i64 %231, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = icmp ne i32 %234, 0
  store i1 %235, i1* %1, align 1
  %236 = load i32, i32* @x, align 4
  %237 = load i32, i32* @y, align 4
  %238 = add i32 %236, -1
  %239 = mul i32 %238, %236
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %242, %241
  %244 = select i1 %243, i32 -763452392, i32 504003530
  br label %.backedge

245:                                              ; preds = %5
  %.0..0..0.40 = load volatile i1, i1* %1, align 1
  %246 = select i1 %.0..0..0.40, i32 1812602399, i32 -1807660967
  br label %.backedge

247:                                              ; preds = %5
  %248 = add i32 %.043, 1
  br label %.backedge

249:                                              ; preds = %5
  br label %.backedge

250:                                              ; preds = %5
  %251 = add i32 %.041, 1
  br label %.backedge

252:                                              ; preds = %5
  %253 = sext i32 %.045 to i64
  %254 = sext i32 %.043 to i64
  %255 = getelementptr inbounds [100 x [15 x i32]], [100 x [15 x i32]]* @P, i64 0, i64 %253, i64 %254
  %256 = load i32, i32* %255, align 4
  %257 = add i32 %256, %.047
  br label %.backedge

258:                                              ; preds = %5
  %259 = load i32, i32* @x, align 4
  %260 = load i32, i32* @y, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 -812395904, i32 -1820609567
  br label %.backedge

268:                                              ; preds = %5
  %.neg = add i32 %.045, 1
  %269 = load i32, i32* @x, align 4
  %270 = load i32, i32* @y, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 -1125569166, i32 -1820609567
  br label %.backedge

278:                                              ; preds = %5
  br label %.backedge

279:                                              ; preds = %5
  %280 = icmp slt i32 %.051, %.047
  %281 = select i1 %280, i32 -1078141945, i32 -1595961282
  br label %.backedge

282:                                              ; preds = %5
  br label %.backedge

283:                                              ; preds = %5
  br label %.backedge

284:                                              ; preds = %5
  %285 = add i32 %.049, 1
  br label %.backedge

286:                                              ; preds = %5
  %287 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %.051)
  ret i32 0

288:                                              ; preds = %5
  br label %.backedge

289:                                              ; preds = %5
  %290 = add i32 %.059, 1
  br label %.backedge

291:                                              ; preds = %5
  br label %.backedge

292:                                              ; preds = %5
  br label %.backedge

293:                                              ; preds = %5
  br label %.backedge

294:                                              ; preds = %5
  %295 = add i32 %.055, 1
  br label %.backedge

296:                                              ; preds = %5
  br label %.backedge

297:                                              ; preds = %5
  br label %.backedge

298:                                              ; preds = %5
  br label %.backedge

299:                                              ; preds = %5
  %300 = add i32 %.045, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
