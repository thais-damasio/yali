; ModuleID = 'build_ollvm/programs/p03503/s615679331.ll'
source_filename = "Project_CodeNet_C++1400/p03503/s615679331.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3maxIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s615679331.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %10 = load i32, i32* %6, align 4
  %11 = zext i32 %10 to i64
  %12 = call i8* @llvm.stacksave()
  %13 = alloca [5 x [2 x i32]], i64 %11, align 16
  %14 = load i32, i32* %6, align 4
  %15 = zext i32 %14 to i64
  %16 = alloca [11 x i32], i64 %15, align 16
  br label %17

17:                                               ; preds = %.backedge, %0
  %.066 = phi i32 [ 0, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.0 = phi i32 [ 1875830306, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1875830306, label %18
    i32 175901542, label %22
    i32 1594677419, label %23
    i32 459798837, label %33
    i32 -1741155616, label %44
    i32 -783575318, label %46
    i32 941536743, label %47
    i32 -431689815, label %50
    i32 -2095604712, label %60
    i32 -1835396735, label %75
    i32 -1439998760, label %76
    i32 1374059873, label %78
    i32 -74182316, label %88
    i32 1722317637, label %98
    i32 -470382546, label %99
    i32 1999842414, label %109
    i32 453494010, label %120
    i32 -1014983838, label %121
    i32 -2062105230, label %122
    i32 -712489013, label %124
    i32 -987236010, label %125
    i32 609409865, label %135
    i32 -910335306, label %147
    i32 -206211977, label %149
    i32 -802332431, label %159
    i32 895040512, label %169
    i32 1768738602, label %170
    i32 -1307078962, label %173
    i32 -1819702465, label %178
    i32 -1920524295, label %180
    i32 -2037111716, label %181
    i32 760072432, label %183
    i32 642266235, label %193
    i32 1323693063, label %203
    i32 -1265624444, label %204
    i32 1511488621, label %207
    i32 2023253168, label %208
    i32 1129754123, label %218
    i32 -1426400743, label %230
    i32 2097878271, label %232
    i32 -1838324235, label %233
    i32 1434827532, label %236
    i32 -1861439138, label %246
    i32 -294131343, label %259
    i32 209106536, label %261
    i32 452742886, label %270
    i32 -1401616284, label %272
    i32 -1130353651, label %273
    i32 -1464824768, label %275
    i32 1913292814, label %285
    i32 -1913761062, label %301
    i32 324715927, label %302
    i32 1989774680, label %304
    i32 -1620913410, label %314
    i32 -1699886043, label %326
    i32 -843113226, label %327
    i32 -2101820299, label %337
    i32 -1706550023, label %348
    i32 1856287697, label %349
    i32 -1170134373, label %359
    i32 415478114, label %371
    i32 -427034068, label %372
    i32 -421576036, label %373
    i32 -1818160423, label %379
    i32 1499535370, label %380
    i32 -1206639224, label %382
    i32 1233219017, label %383
    i32 1051825930, label %384
    i32 -783826959, label %385
    i32 728675906, label %386
    i32 -1262273150, label %387
    i32 -1670885554, label %394
    i32 409558145, label %397
    i32 -1586880434, label %399
  ]

.backedge:                                        ; preds = %17, %399, %397, %394, %387, %386, %385, %384, %383, %382, %380, %379, %373, %372, %359, %349, %348, %337, %327, %326, %314, %304, %302, %301, %285, %275, %273, %272, %270, %261, %259, %246, %236, %233, %232, %230, %218, %208, %207, %204, %203, %193, %183, %181, %180, %178, %173, %170, %169, %159, %149, %147, %135, %125, %124, %122, %121, %120, %109, %99, %98, %88, %78, %76, %75, %60, %50, %47, %46, %44, %33, %23, %22, %18
  %.066.be = phi i32 [ %.066, %17 ], [ %.066, %399 ], [ %.066, %397 ], [ %.066, %394 ], [ %.066, %387 ], [ %.066, %386 ], [ %.066, %385 ], [ %.066, %384 ], [ %.066, %383 ], [ %.066, %382 ], [ %.066, %380 ], [ %.066, %379 ], [ %.066, %373 ], [ %.066, %372 ], [ %.066, %359 ], [ %.066, %349 ], [ %.066, %348 ], [ %.066, %337 ], [ %.066, %327 ], [ %.066, %326 ], [ %.066, %314 ], [ %.066, %304 ], [ %.066, %302 ], [ %.066, %301 ], [ %.066, %285 ], [ %.066, %275 ], [ %.066, %273 ], [ %.066, %272 ], [ %.066, %270 ], [ %.066, %261 ], [ %.066, %259 ], [ %.066, %246 ], [ %.066, %236 ], [ %.066, %233 ], [ %.066, %232 ], [ %.066, %230 ], [ %.066, %218 ], [ %.066, %208 ], [ %.066, %207 ], [ %.066, %204 ], [ %.066, %203 ], [ %.066, %193 ], [ %.066, %183 ], [ %.066, %181 ], [ %.066, %180 ], [ %.066, %178 ], [ %.066, %173 ], [ %.066, %170 ], [ %.066, %169 ], [ %.066, %159 ], [ %.066, %149 ], [ %.066, %147 ], [ %.066, %135 ], [ %.066, %125 ], [ %.066, %124 ], [ %123, %122 ], [ %.066, %121 ], [ %.066, %120 ], [ %.066, %109 ], [ %.066, %99 ], [ %.066, %98 ], [ %.066, %88 ], [ %.066, %78 ], [ %.066, %76 ], [ %.066, %75 ], [ %.066, %60 ], [ %.066, %50 ], [ %.066, %47 ], [ %.066, %46 ], [ %.066, %44 ], [ %.066, %33 ], [ %.066, %23 ], [ %.066, %22 ], [ %.066, %18 ]
  %.064.be = phi i32 [ %.064, %17 ], [ %.064, %399 ], [ %.064, %397 ], [ %.064, %394 ], [ %.064, %387 ], [ %.064, %386 ], [ %.064, %385 ], [ %.064, %384 ], [ %.064, %383 ], [ %.064, %382 ], [ %381, %380 ], [ %.064, %379 ], [ %.064, %373 ], [ %.064, %372 ], [ %.064, %359 ], [ %.064, %349 ], [ %.064, %348 ], [ %.064, %337 ], [ %.064, %327 ], [ %.064, %326 ], [ %.064, %314 ], [ %.064, %304 ], [ %.064, %302 ], [ %.064, %301 ], [ %.064, %285 ], [ %.064, %275 ], [ %.064, %273 ], [ %.064, %272 ], [ %.064, %270 ], [ %.064, %261 ], [ %.064, %259 ], [ %.064, %246 ], [ %.064, %236 ], [ %.064, %233 ], [ %.064, %232 ], [ %.064, %230 ], [ %.064, %218 ], [ %.064, %208 ], [ %.064, %207 ], [ %.064, %204 ], [ %.064, %203 ], [ %.064, %193 ], [ %.064, %183 ], [ %.064, %181 ], [ %.064, %180 ], [ %.064, %178 ], [ %.064, %173 ], [ %.064, %170 ], [ %.064, %169 ], [ %.064, %159 ], [ %.064, %149 ], [ %.064, %147 ], [ %.064, %135 ], [ %.064, %125 ], [ %.064, %124 ], [ %.064, %122 ], [ %.064, %121 ], [ %.064, %120 ], [ %110, %109 ], [ %.064, %99 ], [ %.064, %98 ], [ %.064, %88 ], [ %.064, %78 ], [ %.064, %76 ], [ %.064, %75 ], [ %.064, %60 ], [ %.064, %50 ], [ %.064, %47 ], [ %.064, %46 ], [ %.064, %44 ], [ %.064, %33 ], [ %.064, %23 ], [ 0, %22 ], [ %.064, %18 ]
  %.062.be = phi i32 [ %.062, %17 ], [ %.062, %399 ], [ %.062, %397 ], [ %.062, %394 ], [ %.062, %387 ], [ %.062, %386 ], [ %.062, %385 ], [ %.062, %384 ], [ %.062, %383 ], [ %.062, %382 ], [ %.062, %380 ], [ %.062, %379 ], [ %.062, %373 ], [ %.062, %372 ], [ %.062, %359 ], [ %.062, %349 ], [ %.062, %348 ], [ %.062, %337 ], [ %.062, %327 ], [ %.062, %326 ], [ %.062, %314 ], [ %.062, %304 ], [ %.062, %302 ], [ %.062, %301 ], [ %.062, %285 ], [ %.062, %275 ], [ %.062, %273 ], [ %.062, %272 ], [ %.062, %270 ], [ %.062, %261 ], [ %.062, %259 ], [ %.062, %246 ], [ %.062, %236 ], [ %.062, %233 ], [ %.062, %232 ], [ %.062, %230 ], [ %.062, %218 ], [ %.062, %208 ], [ %.062, %207 ], [ %.062, %204 ], [ %.062, %203 ], [ %.062, %193 ], [ %.062, %183 ], [ %.062, %181 ], [ %.062, %180 ], [ %.062, %178 ], [ %.062, %173 ], [ %.062, %170 ], [ %.062, %169 ], [ %.062, %159 ], [ %.062, %149 ], [ %.062, %147 ], [ %.062, %135 ], [ %.062, %125 ], [ %.062, %124 ], [ %.062, %122 ], [ %.062, %121 ], [ %.062, %120 ], [ %.062, %109 ], [ %.062, %99 ], [ %.062, %98 ], [ %.062, %88 ], [ %.062, %78 ], [ %77, %76 ], [ %.062, %75 ], [ %.062, %60 ], [ %.062, %50 ], [ %.062, %47 ], [ 0, %46 ], [ %.062, %44 ], [ %.062, %33 ], [ %.062, %23 ], [ %.062, %22 ], [ %.062, %18 ]
  %.060.be = phi i32 [ %.060, %17 ], [ %.060, %399 ], [ %.060, %397 ], [ %.060, %394 ], [ %.060, %387 ], [ %.060, %386 ], [ %.060, %385 ], [ %.060, %384 ], [ %.060, %383 ], [ %.060, %382 ], [ %.060, %380 ], [ %.060, %379 ], [ %.060, %373 ], [ %.060, %372 ], [ %.060, %359 ], [ %.060, %349 ], [ %.060, %348 ], [ %.060, %337 ], [ %.060, %327 ], [ %.060, %326 ], [ %.060, %314 ], [ %.060, %304 ], [ %.060, %302 ], [ %.060, %301 ], [ %.060, %285 ], [ %.060, %275 ], [ %.060, %273 ], [ %.060, %272 ], [ %.060, %270 ], [ %.060, %261 ], [ %.060, %259 ], [ %.060, %246 ], [ %.060, %236 ], [ %.060, %233 ], [ %.060, %232 ], [ %.060, %230 ], [ %.060, %218 ], [ %.060, %208 ], [ %.060, %207 ], [ %.060, %204 ], [ %.060, %203 ], [ %.060, %193 ], [ %.060, %183 ], [ %182, %181 ], [ %.060, %180 ], [ %.060, %178 ], [ %.060, %173 ], [ %.060, %170 ], [ %.060, %169 ], [ %.060, %159 ], [ %.060, %149 ], [ %.060, %147 ], [ %.060, %135 ], [ %.060, %125 ], [ 0, %124 ], [ %.060, %122 ], [ %.060, %121 ], [ %.060, %120 ], [ %.060, %109 ], [ %.060, %99 ], [ %.060, %98 ], [ %.060, %88 ], [ %.060, %78 ], [ %.060, %76 ], [ %.060, %75 ], [ %.060, %60 ], [ %.060, %50 ], [ %.060, %47 ], [ %.060, %46 ], [ %.060, %44 ], [ %.060, %33 ], [ %.060, %23 ], [ %.060, %22 ], [ %.060, %18 ]
  %.058.be = phi i32 [ %.058, %17 ], [ %.058, %399 ], [ %.058, %397 ], [ %.058, %394 ], [ %.058, %387 ], [ %.058, %386 ], [ %.058, %385 ], [ %.058, %384 ], [ 0, %383 ], [ %.058, %382 ], [ %.058, %380 ], [ %.058, %379 ], [ %.058, %373 ], [ %.058, %372 ], [ %.058, %359 ], [ %.058, %349 ], [ %.058, %348 ], [ %.058, %337 ], [ %.058, %327 ], [ %.058, %326 ], [ %.058, %314 ], [ %.058, %304 ], [ %.058, %302 ], [ %.058, %301 ], [ %.058, %285 ], [ %.058, %275 ], [ %.058, %273 ], [ %.058, %272 ], [ %.058, %270 ], [ %.058, %261 ], [ %.058, %259 ], [ %.058, %246 ], [ %.058, %236 ], [ %.058, %233 ], [ %.058, %232 ], [ %.058, %230 ], [ %.058, %218 ], [ %.058, %208 ], [ %.058, %207 ], [ %.058, %204 ], [ %.058, %203 ], [ %.058, %193 ], [ %.058, %183 ], [ %.058, %181 ], [ %.058, %180 ], [ %179, %178 ], [ %.058, %173 ], [ %.058, %170 ], [ %.058, %169 ], [ 0, %159 ], [ %.058, %149 ], [ %.058, %147 ], [ %.058, %135 ], [ %.058, %125 ], [ %.058, %124 ], [ %.058, %122 ], [ %.058, %121 ], [ %.058, %120 ], [ %.058, %109 ], [ %.058, %99 ], [ %.058, %98 ], [ %.058, %88 ], [ %.058, %78 ], [ %.058, %76 ], [ %.058, %75 ], [ %.058, %60 ], [ %.058, %50 ], [ %.058, %47 ], [ %.058, %46 ], [ %.058, %44 ], [ %.058, %33 ], [ %.058, %23 ], [ %.058, %22 ], [ %.058, %18 ]
  %.056.be = phi i32 [ %.056, %17 ], [ %.056, %399 ], [ %398, %397 ], [ %.056, %394 ], [ %.056, %387 ], [ %.056, %386 ], [ %.056, %385 ], [ 1, %384 ], [ %.056, %383 ], [ %.056, %382 ], [ %.056, %380 ], [ %.056, %379 ], [ %.056, %373 ], [ %.056, %372 ], [ %.056, %359 ], [ %.056, %349 ], [ %.056, %348 ], [ %338, %337 ], [ %.056, %327 ], [ %.056, %326 ], [ %.056, %314 ], [ %.056, %304 ], [ %.056, %302 ], [ %.056, %301 ], [ %.056, %285 ], [ %.056, %275 ], [ %.056, %273 ], [ %.056, %272 ], [ %.056, %270 ], [ %.056, %261 ], [ %.056, %259 ], [ %.056, %246 ], [ %.056, %236 ], [ %.056, %233 ], [ %.056, %232 ], [ %.056, %230 ], [ %.056, %218 ], [ %.056, %208 ], [ %.056, %207 ], [ %.056, %204 ], [ %.056, %203 ], [ 1, %193 ], [ %.056, %183 ], [ %.056, %181 ], [ %.056, %180 ], [ %.056, %178 ], [ %.056, %173 ], [ %.056, %170 ], [ %.056, %169 ], [ %.056, %159 ], [ %.056, %149 ], [ %.056, %147 ], [ %.056, %135 ], [ %.056, %125 ], [ %.056, %124 ], [ %.056, %122 ], [ %.056, %121 ], [ %.056, %120 ], [ %.056, %109 ], [ %.056, %99 ], [ %.056, %98 ], [ %.056, %88 ], [ %.056, %78 ], [ %.056, %76 ], [ %.056, %75 ], [ %.056, %60 ], [ %.056, %50 ], [ %.056, %47 ], [ %.056, %46 ], [ %.056, %44 ], [ %.056, %33 ], [ %.056, %23 ], [ %.056, %22 ], [ %.056, %18 ]
  %.054.be = phi i32 [ %.054, %17 ], [ %.054, %399 ], [ %.054, %397 ], [ %.054, %394 ], [ %.054, %387 ], [ %.054, %386 ], [ %.054, %385 ], [ %.054, %384 ], [ %.054, %383 ], [ %.054, %382 ], [ %.054, %380 ], [ %.054, %379 ], [ %.054, %373 ], [ %.054, %372 ], [ %.054, %359 ], [ %.054, %349 ], [ %.054, %348 ], [ %.054, %337 ], [ %.054, %327 ], [ %.054, %326 ], [ %.054, %314 ], [ %.054, %304 ], [ %303, %302 ], [ %.054, %301 ], [ %.054, %285 ], [ %.054, %275 ], [ %.054, %273 ], [ %.054, %272 ], [ %.054, %270 ], [ %.054, %261 ], [ %.054, %259 ], [ %.054, %246 ], [ %.054, %236 ], [ %.054, %233 ], [ %.054, %232 ], [ %.054, %230 ], [ %.054, %218 ], [ %.054, %208 ], [ 0, %207 ], [ %.054, %204 ], [ %.054, %203 ], [ %.054, %193 ], [ %.054, %183 ], [ %.054, %181 ], [ %.054, %180 ], [ %.054, %178 ], [ %.054, %173 ], [ %.054, %170 ], [ %.054, %169 ], [ %.054, %159 ], [ %.054, %149 ], [ %.054, %147 ], [ %.054, %135 ], [ %.054, %125 ], [ %.054, %124 ], [ %.054, %122 ], [ %.054, %121 ], [ %.054, %120 ], [ %.054, %109 ], [ %.054, %99 ], [ %.054, %98 ], [ %.054, %88 ], [ %.054, %78 ], [ %.054, %76 ], [ %.054, %75 ], [ %.054, %60 ], [ %.054, %50 ], [ %.054, %47 ], [ %.054, %46 ], [ %.054, %44 ], [ %.054, %33 ], [ %.054, %23 ], [ %.054, %22 ], [ %.054, %18 ]
  %.052.be = phi i32 [ %.052, %17 ], [ %.052, %399 ], [ %.052, %397 ], [ %.052, %394 ], [ %.052, %387 ], [ %.052, %386 ], [ %.052, %385 ], [ %.052, %384 ], [ %.052, %383 ], [ %.052, %382 ], [ %.052, %380 ], [ %.052, %379 ], [ %.052, %373 ], [ %.052, %372 ], [ %.052, %359 ], [ %.052, %349 ], [ %.052, %348 ], [ %.052, %337 ], [ %.052, %327 ], [ %.052, %326 ], [ %.052, %314 ], [ %.052, %304 ], [ %.052, %302 ], [ %.052, %301 ], [ %.052, %285 ], [ %.052, %275 ], [ %.052, %273 ], [ %.052, %272 ], [ %271, %270 ], [ %.052, %261 ], [ %.052, %259 ], [ %.052, %246 ], [ %.052, %236 ], [ %.052, %233 ], [ 0, %232 ], [ %.052, %230 ], [ %.052, %218 ], [ %.052, %208 ], [ %.052, %207 ], [ %.052, %204 ], [ %.052, %203 ], [ %.052, %193 ], [ %.052, %183 ], [ %.052, %181 ], [ %.052, %180 ], [ %.052, %178 ], [ %.052, %173 ], [ %.052, %170 ], [ %.052, %169 ], [ %.052, %159 ], [ %.052, %149 ], [ %.052, %147 ], [ %.052, %135 ], [ %.052, %125 ], [ %.052, %124 ], [ %.052, %122 ], [ %.052, %121 ], [ %.052, %120 ], [ %.052, %109 ], [ %.052, %99 ], [ %.052, %98 ], [ %.052, %88 ], [ %.052, %78 ], [ %.052, %76 ], [ %.052, %75 ], [ %.052, %60 ], [ %.052, %50 ], [ %.052, %47 ], [ %.052, %46 ], [ %.052, %44 ], [ %.052, %33 ], [ %.052, %23 ], [ %.052, %22 ], [ %.052, %18 ]
  %.050.be = phi i32 [ %.050, %17 ], [ %.050, %399 ], [ %.050, %397 ], [ %.050, %394 ], [ %.050, %387 ], [ %.050, %386 ], [ %.050, %385 ], [ %.050, %384 ], [ %.050, %383 ], [ %.050, %382 ], [ %.050, %380 ], [ %.050, %379 ], [ %.050, %373 ], [ %.050, %372 ], [ %.050, %359 ], [ %.050, %349 ], [ %.050, %348 ], [ %.050, %337 ], [ %.050, %327 ], [ %.050, %326 ], [ %.050, %314 ], [ %.050, %304 ], [ %.050, %302 ], [ %.050, %301 ], [ %.050, %285 ], [ %.050, %275 ], [ %274, %273 ], [ %.050, %272 ], [ %.050, %270 ], [ %.050, %261 ], [ %.050, %259 ], [ %.050, %246 ], [ %.050, %236 ], [ %.050, %233 ], [ 0, %232 ], [ %.050, %230 ], [ %.050, %218 ], [ %.050, %208 ], [ %.050, %207 ], [ %.050, %204 ], [ %.050, %203 ], [ %.050, %193 ], [ %.050, %183 ], [ %.050, %181 ], [ %.050, %180 ], [ %.050, %178 ], [ %.050, %173 ], [ %.050, %170 ], [ %.050, %169 ], [ %.050, %159 ], [ %.050, %149 ], [ %.050, %147 ], [ %.050, %135 ], [ %.050, %125 ], [ %.050, %124 ], [ %.050, %122 ], [ %.050, %121 ], [ %.050, %120 ], [ %.050, %109 ], [ %.050, %99 ], [ %.050, %98 ], [ %.050, %88 ], [ %.050, %78 ], [ %.050, %76 ], [ %.050, %75 ], [ %.050, %60 ], [ %.050, %50 ], [ %.050, %47 ], [ %.050, %46 ], [ %.050, %44 ], [ %.050, %33 ], [ %.050, %23 ], [ %.050, %22 ], [ %.050, %18 ]
  %.0.be = phi i32 [ %.0, %17 ], [ -1170134373, %399 ], [ -2101820299, %397 ], [ -1620913410, %394 ], [ 1913292814, %387 ], [ -1861439138, %386 ], [ 1129754123, %385 ], [ 642266235, %384 ], [ -802332431, %383 ], [ 609409865, %382 ], [ 1999842414, %380 ], [ -74182316, %379 ], [ -2095604712, %373 ], [ 459798837, %372 ], [ %370, %359 ], [ %358, %349 ], [ -1265624444, %348 ], [ %347, %337 ], [ %336, %327 ], [ -843113226, %326 ], [ %325, %314 ], [ %313, %304 ], [ 2023253168, %302 ], [ 324715927, %301 ], [ %300, %285 ], [ %284, %275 ], [ -1838324235, %273 ], [ -1130353651, %272 ], [ -1401616284, %270 ], [ %269, %261 ], [ %260, %259 ], [ %258, %246 ], [ %245, %236 ], [ %235, %233 ], [ -1838324235, %232 ], [ %231, %230 ], [ %229, %218 ], [ %217, %208 ], [ 2023253168, %207 ], [ %206, %204 ], [ -1265624444, %203 ], [ %202, %193 ], [ %192, %183 ], [ -987236010, %181 ], [ -2037111716, %180 ], [ 1768738602, %178 ], [ -1819702465, %173 ], [ %172, %170 ], [ 1768738602, %169 ], [ %168, %159 ], [ %158, %149 ], [ %148, %147 ], [ %146, %135 ], [ %134, %125 ], [ -987236010, %124 ], [ 1875830306, %122 ], [ -2062105230, %121 ], [ 1594677419, %120 ], [ %119, %109 ], [ %108, %99 ], [ -470382546, %98 ], [ %97, %88 ], [ %87, %78 ], [ 941536743, %76 ], [ -1439998760, %75 ], [ %74, %60 ], [ %59, %50 ], [ %49, %47 ], [ 941536743, %46 ], [ %45, %44 ], [ %43, %33 ], [ %32, %23 ], [ 1594677419, %22 ], [ %21, %18 ]
  br label %17

18:                                               ; preds = %17
  %19 = load i32, i32* %6, align 4
  %20 = icmp slt i32 %.066, %19
  %21 = select i1 %20, i32 175901542, i32 -712489013
  br label %.backedge

22:                                               ; preds = %17
  br label %.backedge

23:                                               ; preds = %17
  %24 = load i32, i32* @x.1, align 4
  %25 = load i32, i32* @y.2, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 459798837, i32 -427034068
  br label %.backedge

33:                                               ; preds = %17
  %34 = icmp slt i32 %.064, 5
  store i1 %34, i1* %5, align 1
  %35 = load i32, i32* @x.1, align 4
  %36 = load i32, i32* @y.2, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -1741155616, i32 -427034068
  br label %.backedge

44:                                               ; preds = %17
  %.0..0..0.45 = load volatile i1, i1* %5, align 1
  %45 = select i1 %.0..0..0.45, i32 -783575318, i32 -1014983838
  br label %.backedge

46:                                               ; preds = %17
  br label %.backedge

47:                                               ; preds = %17
  %48 = icmp slt i32 %.062, 2
  %49 = select i1 %48, i32 -431689815, i32 1374059873
  br label %.backedge

50:                                               ; preds = %17
  %51 = load i32, i32* @x.1, align 4
  %52 = load i32, i32* @y.2, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 -2095604712, i32 -421576036
  br label %.backedge

60:                                               ; preds = %17
  %61 = sext i32 %.066 to i64
  %62 = sext i32 %.064 to i64
  %63 = sext i32 %.062 to i64
  %64 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %13, i64 %61, i64 %62, i64 %63
  %65 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %64)
  %66 = load i32, i32* @x.1, align 4
  %67 = load i32, i32* @y.2, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 -1835396735, i32 -421576036
  br label %.backedge

75:                                               ; preds = %17
  br label %.backedge

76:                                               ; preds = %17
  %77 = add i32 %.062, 1
  br label %.backedge

78:                                               ; preds = %17
  %79 = load i32, i32* @x.1, align 4
  %80 = load i32, i32* @y.2, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 -74182316, i32 -1818160423
  br label %.backedge

88:                                               ; preds = %17
  %89 = load i32, i32* @x.1, align 4
  %90 = load i32, i32* @y.2, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 1722317637, i32 -1818160423
  br label %.backedge

98:                                               ; preds = %17
  br label %.backedge

99:                                               ; preds = %17
  %100 = load i32, i32* @x.1, align 4
  %101 = load i32, i32* @y.2, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 1999842414, i32 1499535370
  br label %.backedge

109:                                              ; preds = %17
  %110 = add i32 %.064, 1
  %111 = load i32, i32* @x.1, align 4
  %112 = load i32, i32* @y.2, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 453494010, i32 1499535370
  br label %.backedge

120:                                              ; preds = %17
  br label %.backedge

121:                                              ; preds = %17
  br label %.backedge

122:                                              ; preds = %17
  %123 = add i32 %.066, 1
  br label %.backedge

124:                                              ; preds = %17
  br label %.backedge

125:                                              ; preds = %17
  %126 = load i32, i32* @x.1, align 4
  %127 = load i32, i32* @y.2, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 609409865, i32 -1206639224
  br label %.backedge

135:                                              ; preds = %17
  %136 = load i32, i32* %6, align 4
  %137 = icmp slt i32 %.060, %136
  store i1 %137, i1* %4, align 1
  %138 = load i32, i32* @x.1, align 4
  %139 = load i32, i32* @y.2, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 -910335306, i32 -1206639224
  br label %.backedge

147:                                              ; preds = %17
  %.0..0..0.46 = load volatile i1, i1* %4, align 1
  %148 = select i1 %.0..0..0.46, i32 -206211977, i32 760072432
  br label %.backedge

149:                                              ; preds = %17
  %150 = load i32, i32* @x.1, align 4
  %151 = load i32, i32* @y.2, align 4
  %152 = add i32 %150, -1
  %153 = mul i32 %152, %150
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %156, %155
  %158 = select i1 %157, i32 -802332431, i32 1233219017
  br label %.backedge

159:                                              ; preds = %17
  %160 = load i32, i32* @x.1, align 4
  %161 = load i32, i32* @y.2, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 895040512, i32 1233219017
  br label %.backedge

169:                                              ; preds = %17
  br label %.backedge

170:                                              ; preds = %17
  %171 = icmp slt i32 %.058, 11
  %172 = select i1 %171, i32 -1307078962, i32 -1920524295
  br label %.backedge

173:                                              ; preds = %17
  %174 = sext i32 %.060 to i64
  %175 = sext i32 %.058 to i64
  %176 = getelementptr inbounds [11 x i32], [11 x i32]* %16, i64 %174, i64 %175
  %177 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %176)
  br label %.backedge

178:                                              ; preds = %17
  %179 = add i32 %.058, 1
  br label %.backedge

180:                                              ; preds = %17
  br label %.backedge

181:                                              ; preds = %17
  %182 = add i32 %.060, 1
  br label %.backedge

183:                                              ; preds = %17
  %184 = load i32, i32* @x.1, align 4
  %185 = load i32, i32* @y.2, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 642266235, i32 1051825930
  br label %.backedge

193:                                              ; preds = %17
  store i32 -1000000000, i32* %7, align 4
  %194 = load i32, i32* @x.1, align 4
  %195 = load i32, i32* @y.2, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 1323693063, i32 1051825930
  br label %.backedge

203:                                              ; preds = %17
  br label %.backedge

204:                                              ; preds = %17
  %205 = icmp slt i32 %.056, 1024
  %206 = select i1 %205, i32 1511488621, i32 1856287697
  br label %.backedge

207:                                              ; preds = %17
  store i32 0, i32* %8, align 4
  br label %.backedge

208:                                              ; preds = %17
  %209 = load i32, i32* @x.1, align 4
  %210 = load i32, i32* @y.2, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 1129754123, i32 -783826959
  br label %.backedge

218:                                              ; preds = %17
  %219 = load i32, i32* %6, align 4
  %220 = icmp slt i32 %.054, %219
  store i1 %220, i1* %3, align 1
  %221 = load i32, i32* @x.1, align 4
  %222 = load i32, i32* @y.2, align 4
  %223 = add i32 %221, -1
  %224 = mul i32 %223, %221
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %227, %226
  %229 = select i1 %228, i32 -1426400743, i32 -783826959
  br label %.backedge

230:                                              ; preds = %17
  %.0..0..0.47 = load volatile i1, i1* %3, align 1
  %231 = select i1 %.0..0..0.47, i32 2097878271, i32 1989774680
  br label %.backedge

232:                                              ; preds = %17
  br label %.backedge

233:                                              ; preds = %17
  %234 = icmp slt i32 %.050, 10
  %235 = select i1 %234, i32 1434827532, i32 -1464824768
  br label %.backedge

236:                                              ; preds = %17
  %237 = load i32, i32* @x.1, align 4
  %238 = load i32, i32* @y.2, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -1861439138, i32 728675906
  br label %.backedge

246:                                              ; preds = %17
  %247 = shl nuw i32 1, %.050
  %248 = and i32 %247, %.056
  %249 = icmp sgt i32 %248, 0
  store i1 %249, i1* %2, align 1
  %250 = load i32, i32* @x.1, align 4
  %251 = load i32, i32* @y.2, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 -294131343, i32 728675906
  br label %.backedge

259:                                              ; preds = %17
  %.0..0..0.48 = load volatile i1, i1* %2, align 1
  %260 = select i1 %.0..0..0.48, i32 209106536, i32 -1401616284
  br label %.backedge

261:                                              ; preds = %17
  %262 = sext i32 %.054 to i64
  %263 = sdiv i32 %.050, 2
  %264 = sext i32 %263 to i64
  %265 = srem i32 %.050, 2
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %13, i64 %262, i64 %264, i64 %266
  %268 = load i32, i32* %267, align 4
  %.not = icmp eq i32 %268, 0
  %269 = select i1 %.not, i32 -1401616284, i32 452742886
  br label %.backedge

270:                                              ; preds = %17
  %271 = add i32 %.052, 1
  br label %.backedge

272:                                              ; preds = %17
  br label %.backedge

273:                                              ; preds = %17
  %274 = add i32 %.050, 1
  br label %.backedge

275:                                              ; preds = %17
  %276 = load i32, i32* @x.1, align 4
  %277 = load i32, i32* @y.2, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 1913292814, i32 -1262273150
  br label %.backedge

285:                                              ; preds = %17
  %286 = sext i32 %.054 to i64
  %287 = sext i32 %.052 to i64
  %288 = getelementptr inbounds [11 x i32], [11 x i32]* %16, i64 %286, i64 %287
  %289 = load i32, i32* %288, align 4
  %290 = load i32, i32* %8, align 4
  %291 = add i32 %290, %289
  store i32 %291, i32* %8, align 4
  %292 = load i32, i32* @x.1, align 4
  %293 = load i32, i32* @y.2, align 4
  %294 = add i32 %292, -1
  %295 = mul i32 %294, %292
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %298, %297
  %300 = select i1 %299, i32 -1913761062, i32 -1262273150
  br label %.backedge

301:                                              ; preds = %17
  br label %.backedge

302:                                              ; preds = %17
  %303 = add i32 %.054, 1
  br label %.backedge

304:                                              ; preds = %17
  %305 = load i32, i32* @x.1, align 4
  %306 = load i32, i32* @y.2, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 -1620913410, i32 -1670885554
  br label %.backedge

314:                                              ; preds = %17
  %315 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8)
  %316 = load i32, i32* %315, align 4
  store i32 %316, i32* %7, align 4
  %317 = load i32, i32* @x.1, align 4
  %318 = load i32, i32* @y.2, align 4
  %319 = add i32 %317, -1
  %320 = mul i32 %319, %317
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %323, %322
  %325 = select i1 %324, i32 -1699886043, i32 -1670885554
  br label %.backedge

326:                                              ; preds = %17
  br label %.backedge

327:                                              ; preds = %17
  %328 = load i32, i32* @x.1, align 4
  %329 = load i32, i32* @y.2, align 4
  %330 = add i32 %328, -1
  %331 = mul i32 %330, %328
  %332 = and i32 %331, 1
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %334, %333
  %336 = select i1 %335, i32 -2101820299, i32 409558145
  br label %.backedge

337:                                              ; preds = %17
  %338 = add i32 %.056, 1
  %339 = load i32, i32* @x.1, align 4
  %340 = load i32, i32* @y.2, align 4
  %341 = add i32 %339, -1
  %342 = mul i32 %341, %339
  %343 = and i32 %342, 1
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %345, %344
  %347 = select i1 %346, i32 -1706550023, i32 409558145
  br label %.backedge

348:                                              ; preds = %17
  br label %.backedge

349:                                              ; preds = %17
  %350 = load i32, i32* @x.1, align 4
  %351 = load i32, i32* @y.2, align 4
  %352 = add i32 %350, -1
  %353 = mul i32 %352, %350
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %356, %355
  %358 = select i1 %357, i32 -1170134373, i32 -1586880434
  br label %.backedge

359:                                              ; preds = %17
  %360 = load i32, i32* %7, align 4
  %361 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %360)
  call void @llvm.stackrestore(i8* %12)
  store i32 0, i32* %1, align 4
  %362 = load i32, i32* @x.1, align 4
  %363 = load i32, i32* @y.2, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 415478114, i32 -1586880434
  br label %.backedge

371:                                              ; preds = %17
  %.0..0..0.49 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.49

372:                                              ; preds = %17
  br label %.backedge

373:                                              ; preds = %17
  %374 = sext i32 %.066 to i64
  %375 = sext i32 %.064 to i64
  %376 = sext i32 %.062 to i64
  %377 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %13, i64 %374, i64 %375, i64 %376
  %378 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %377)
  br label %.backedge

379:                                              ; preds = %17
  br label %.backedge

380:                                              ; preds = %17
  %381 = add i32 %.064, 1
  br label %.backedge

382:                                              ; preds = %17
  br label %.backedge

383:                                              ; preds = %17
  br label %.backedge

384:                                              ; preds = %17
  store i32 -1000000000, i32* %7, align 4
  br label %.backedge

385:                                              ; preds = %17
  br label %.backedge

386:                                              ; preds = %17
  br label %.backedge

387:                                              ; preds = %17
  %388 = sext i32 %.054 to i64
  %389 = sext i32 %.052 to i64
  %390 = getelementptr inbounds [11 x i32], [11 x i32]* %16, i64 %388, i64 %389
  %391 = load i32, i32* %390, align 4
  %392 = load i32, i32* %8, align 4
  %393 = add i32 %392, %391
  store i32 %393, i32* %8, align 4
  br label %.backedge

394:                                              ; preds = %17
  %395 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8)
  %396 = load i32, i32* %395, align 4
  store i32 %396, i32* %7, align 4
  br label %.backedge

397:                                              ; preds = %17
  %398 = add i32 %.056, 1
  br label %.backedge

399:                                              ; preds = %17
  %400 = load i32, i32* %7, align 4
  %401 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %400)
  call void @llvm.stackrestore(i8* %12)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.3, align 4
  %11 = load i32, i32* @y.4, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 2107412126, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 2107412126, label %18
    i32 -1948045072, label %21
    i32 -978142215, label %39
    i32 1562519206, label %41
    i32 993995647, label %43
    i32 -1394459858, label %53
    i32 1369619350, label %64
    i32 1524508646, label %65
    i32 1726546665, label %75
    i32 1559197196, label %86
    i32 835507494, label %87
    i32 -716271077, label %88
    i32 987471419, label %90
  ]

.backedge:                                        ; preds = %17, %90, %88, %87, %75, %65, %64, %53, %43, %41, %39, %21, %18
  %.0.be = phi i32 [ %.0, %17 ], [ 1726546665, %90 ], [ -1394459858, %88 ], [ -1948045072, %87 ], [ %85, %75 ], [ %74, %65 ], [ 1524508646, %64 ], [ %63, %53 ], [ %52, %43 ], [ 1524508646, %41 ], [ %40, %39 ], [ %38, %21 ], [ %20, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %.0..0..0.1 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0., %.0..0..0.1
  %20 = select i1 %19, i32 -1948045072, i32 835507494
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i32*, align 8
  store i32** %22, i32*** %7, align 8
  %23 = alloca i32*, align 8
  store i32** %23, i32*** %6, align 8
  %24 = alloca i32*, align 8
  store i32** %24, i32*** %5, align 8
  %.0..0..0.7 = load volatile i32**, i32*** %6, align 8
  store i32* %0, i32** %.0..0..0.7, align 8
  %.0..0..0.11 = load volatile i32**, i32*** %5, align 8
  store i32* %1, i32** %.0..0..0.11, align 8
  %.0..0..0.8 = load volatile i32**, i32*** %6, align 8
  %25 = load i32*, i32** %.0..0..0.8, align 8
  %26 = load i32, i32* %25, align 4
  %.0..0..0.12 = load volatile i32**, i32*** %5, align 8
  %27 = load i32*, i32** %.0..0..0.12, align 8
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %26, %28
  store i1 %29, i1* %4, align 1
  %30 = load i32, i32* @x.3, align 4
  %31 = load i32, i32* @y.4, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 -978142215, i32 835507494
  br label %.backedge

39:                                               ; preds = %17
  %.0..0..0.14 = load volatile i1, i1* %4, align 1
  %40 = select i1 %.0..0..0.14, i32 1562519206, i32 993995647
  br label %.backedge

41:                                               ; preds = %17
  %.0..0..0.13 = load volatile i32**, i32*** %5, align 8
  %42 = load i32*, i32** %.0..0..0.13, align 8
  %.0..0..0.2 = load volatile i32**, i32*** %7, align 8
  store i32* %42, i32** %.0..0..0.2, align 8
  br label %.backedge

43:                                               ; preds = %17
  %44 = load i32, i32* @x.3, align 4
  %45 = load i32, i32* @y.4, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 -1394459858, i32 -716271077
  br label %.backedge

53:                                               ; preds = %17
  %.0..0..0.9 = load volatile i32**, i32*** %6, align 8
  %54 = load i32*, i32** %.0..0..0.9, align 8
  %.0..0..0.3 = load volatile i32**, i32*** %7, align 8
  store i32* %54, i32** %.0..0..0.3, align 8
  %55 = load i32, i32* @x.3, align 4
  %56 = load i32, i32* @y.4, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 1369619350, i32 -716271077
  br label %.backedge

64:                                               ; preds = %17
  br label %.backedge

65:                                               ; preds = %17
  %66 = load i32, i32* @x.3, align 4
  %67 = load i32, i32* @y.4, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 1726546665, i32 987471419
  br label %.backedge

75:                                               ; preds = %17
  %.0..0..0.4 = load volatile i32**, i32*** %7, align 8
  %76 = load i32*, i32** %.0..0..0.4, align 8
  store i32* %76, i32** %3, align 8
  %77 = load i32, i32* @x.3, align 4
  %78 = load i32, i32* @y.4, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 1559197196, i32 987471419
  br label %.backedge

86:                                               ; preds = %17
  %.0..0..0.15 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.15

87:                                               ; preds = %17
  br label %.backedge

88:                                               ; preds = %17
  %.0..0..0.10 = load volatile i32**, i32*** %6, align 8
  %89 = load i32*, i32** %.0..0..0.10, align 8
  %.0..0..0.5 = load volatile i32**, i32*** %7, align 8
  store i32* %89, i32** %.0..0..0.5, align 8
  br label %.backedge

90:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32**, i32*** %7, align 8
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s615679331.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
