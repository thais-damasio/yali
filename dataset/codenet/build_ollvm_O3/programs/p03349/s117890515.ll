; ModuleID = 'build_ollvm/programs/p03349/s117890515.ll'
source_filename = "Project_CodeNet_C++1400/p03349/s117890515.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@C = local_unnamed_addr global [400 x [400 x i64]] zeroinitializer, align 16
@dp = local_unnamed_addr global [400 x [400 x i64]] zeroinitializer, align 16
@sum = local_unnamed_addr global [400 x [400 x i64]] zeroinitializer, align 16
@n = global i32 0, align 4
@K = global i32 0, align 4
@mod = global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull @K, i32* nonnull @mod)
  store i64 1, i64* getelementptr inbounds ([400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 0, i64 0), align 16
  br label %9

9:                                                ; preds = %.backedge, %0
  %.091 = phi i32 [ 1, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.0 = phi i32 [ -1473220423, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1473220423, label %10
    i32 -1293299812, label %20
    i32 -1765362230, label %32
    i32 -1560060866, label %34
    i32 -1982400066, label %37
    i32 1808717659, label %47
    i32 319531486, label %58
    i32 200370235, label %60
    i32 698805931, label %70
    i32 -1954146735, label %95
    i32 627069207, label %96
    i32 -1196966684, label %98
    i32 1327455127, label %99
    i32 -450664041, label %101
    i32 -998061869, label %102
    i32 1299103218, label %112
    i32 1777412558, label %124
    i32 2118479137, label %126
    i32 421106096, label %134
    i32 2030846674, label %144
    i32 -1529618607, label %155
    i32 -1388906824, label %156
    i32 -1358401905, label %166
    i32 -91606131, label %176
    i32 -453619251, label %177
    i32 1258061142, label %187
    i32 -573065176, label %200
    i32 -777519807, label %202
    i32 -732557113, label %212
    i32 980639285, label %222
    i32 -1702134427, label %223
    i32 -1595377702, label %226
    i32 431625078, label %236
    i32 -959943846, label %246
    i32 285576216, label %247
    i32 -547142026, label %257
    i32 -64984147, label %268
    i32 2116606029, label %270
    i32 1724338089, label %280
    i32 135991272, label %316
    i32 -864296998, label %317
    i32 1764909951, label %319
    i32 1322954655, label %320
    i32 -51305656, label %322
    i32 1453411060, label %332
    i32 852098705, label %343
    i32 126396448, label %344
    i32 816813813, label %354
    i32 -95054520, label %365
    i32 2046438459, label %367
    i32 -1967218655, label %381
    i32 -1294939374, label %391
    i32 1073298895, label %401
    i32 -1946823203, label %402
    i32 160926498, label %412
    i32 1802243551, label %422
    i32 -241575707, label %423
    i32 -1167010953, label %424
    i32 -1532021450, label %434
    i32 1510671783, label %449
    i32 1666628962, label %450
    i32 2031551380, label %451
    i32 -559762252, label %452
    i32 -306359473, label %468
    i32 981999979, label %469
    i32 51559040, label %470
    i32 818212454, label %471
    i32 -1215258198, label %472
    i32 566822887, label %473
    i32 2085421269, label %474
    i32 1894639073, label %475
    i32 797707646, label %502
    i32 1394487783, label %504
    i32 895228874, label %505
    i32 -1392777236, label %506
    i32 -1741135104, label %507
  ]

.backedge:                                        ; preds = %9, %507, %506, %505, %504, %502, %475, %474, %473, %472, %471, %470, %469, %468, %452, %451, %450, %434, %424, %423, %422, %412, %402, %401, %391, %381, %367, %365, %354, %344, %343, %332, %322, %320, %319, %317, %316, %280, %270, %268, %257, %247, %246, %236, %226, %223, %222, %212, %202, %200, %187, %177, %176, %166, %156, %155, %144, %134, %126, %124, %112, %102, %101, %99, %98, %96, %95, %70, %60, %58, %47, %37, %34, %32, %20, %10
  %.091.be = phi i32 [ %.091, %9 ], [ %.091, %507 ], [ %.091, %506 ], [ %.091, %505 ], [ %.091, %504 ], [ %.091, %502 ], [ %.091, %475 ], [ %.091, %474 ], [ %.091, %473 ], [ %.091, %472 ], [ %.091, %471 ], [ %.091, %470 ], [ %.091, %469 ], [ %.091, %468 ], [ %.091, %452 ], [ %.091, %451 ], [ %.091, %450 ], [ %.091, %434 ], [ %.091, %424 ], [ %.091, %423 ], [ %.091, %422 ], [ %.091, %412 ], [ %.091, %402 ], [ %.091, %401 ], [ %.091, %391 ], [ %.091, %381 ], [ %.091, %367 ], [ %.091, %365 ], [ %.091, %354 ], [ %.091, %344 ], [ %.091, %343 ], [ %.091, %332 ], [ %.091, %322 ], [ %.091, %320 ], [ %.091, %319 ], [ %.091, %317 ], [ %.091, %316 ], [ %.091, %280 ], [ %.091, %270 ], [ %.091, %268 ], [ %.091, %257 ], [ %.091, %247 ], [ %.091, %246 ], [ %.091, %236 ], [ %.091, %226 ], [ %.091, %223 ], [ %.091, %222 ], [ %.091, %212 ], [ %.091, %202 ], [ %.091, %200 ], [ %.091, %187 ], [ %.091, %177 ], [ %.091, %176 ], [ %.091, %166 ], [ %.091, %156 ], [ %.091, %155 ], [ %.091, %144 ], [ %.091, %134 ], [ %.091, %126 ], [ %.091, %124 ], [ %.091, %112 ], [ %.091, %102 ], [ %.091, %101 ], [ %100, %99 ], [ %.091, %98 ], [ %.091, %96 ], [ %.091, %95 ], [ %.091, %70 ], [ %.091, %60 ], [ %.091, %58 ], [ %.091, %47 ], [ %.091, %37 ], [ %.091, %34 ], [ %.091, %32 ], [ %.091, %20 ], [ %.091, %10 ]
  %.089.be = phi i32 [ %.089, %9 ], [ %.089, %507 ], [ %.089, %506 ], [ %.089, %505 ], [ %.089, %504 ], [ %.089, %502 ], [ %.089, %475 ], [ %.089, %474 ], [ %.089, %473 ], [ %.089, %472 ], [ %.089, %471 ], [ %.089, %470 ], [ %.089, %469 ], [ %.089, %468 ], [ %.089, %452 ], [ %.089, %451 ], [ %.089, %450 ], [ %.089, %434 ], [ %.089, %424 ], [ %.089, %423 ], [ %.089, %422 ], [ %.089, %412 ], [ %.089, %402 ], [ %.089, %401 ], [ %.089, %391 ], [ %.089, %381 ], [ %.089, %367 ], [ %.089, %365 ], [ %.089, %354 ], [ %.089, %344 ], [ %.089, %343 ], [ %.089, %332 ], [ %.089, %322 ], [ %.089, %320 ], [ %.089, %319 ], [ %.089, %317 ], [ %.089, %316 ], [ %.089, %280 ], [ %.089, %270 ], [ %.089, %268 ], [ %.089, %257 ], [ %.089, %247 ], [ %.089, %246 ], [ %.089, %236 ], [ %.089, %226 ], [ %.089, %223 ], [ %.089, %222 ], [ %.089, %212 ], [ %.089, %202 ], [ %.089, %200 ], [ %.089, %187 ], [ %.089, %177 ], [ %.089, %176 ], [ %.089, %166 ], [ %.089, %156 ], [ %.089, %155 ], [ %.089, %144 ], [ %.089, %134 ], [ %.089, %126 ], [ %.089, %124 ], [ %.089, %112 ], [ %.089, %102 ], [ %.089, %101 ], [ %.089, %99 ], [ %.089, %98 ], [ %97, %96 ], [ %.089, %95 ], [ %.089, %70 ], [ %.089, %60 ], [ %.089, %58 ], [ %.089, %47 ], [ %.089, %37 ], [ 1, %34 ], [ %.089, %32 ], [ %.089, %20 ], [ %.089, %10 ]
  %.087.be = phi i32 [ %.087, %9 ], [ %.087, %507 ], [ %.087, %506 ], [ %.087, %505 ], [ %.087, %504 ], [ %.087, %502 ], [ %.087, %475 ], [ %.087, %474 ], [ %.087, %473 ], [ %.087, %472 ], [ %.087, %471 ], [ %.087, %470 ], [ %.neg94, %469 ], [ %.087, %468 ], [ %.087, %452 ], [ %.087, %451 ], [ %.087, %450 ], [ %.087, %434 ], [ %.087, %424 ], [ %.087, %423 ], [ %.087, %422 ], [ %.087, %412 ], [ %.087, %402 ], [ %.087, %401 ], [ %.087, %391 ], [ %.087, %381 ], [ %.087, %367 ], [ %.087, %365 ], [ %.087, %354 ], [ %.087, %344 ], [ %.087, %343 ], [ %.087, %332 ], [ %.087, %322 ], [ %.087, %320 ], [ %.087, %319 ], [ %.087, %317 ], [ %.087, %316 ], [ %.087, %280 ], [ %.087, %270 ], [ %.087, %268 ], [ %.087, %257 ], [ %.087, %247 ], [ %.087, %246 ], [ %.087, %236 ], [ %.087, %226 ], [ %.087, %223 ], [ %.087, %222 ], [ %.087, %212 ], [ %.087, %202 ], [ %.087, %200 ], [ %.087, %187 ], [ %.087, %177 ], [ %.087, %176 ], [ %.087, %166 ], [ %.087, %156 ], [ %.087, %155 ], [ %145, %144 ], [ %.087, %134 ], [ %.087, %126 ], [ %.087, %124 ], [ %.087, %112 ], [ %.087, %102 ], [ 0, %101 ], [ %.087, %99 ], [ %.087, %98 ], [ %.087, %96 ], [ %.087, %95 ], [ %.087, %70 ], [ %.087, %60 ], [ %.087, %58 ], [ %.087, %47 ], [ %.087, %37 ], [ %.087, %34 ], [ %.087, %32 ], [ %.087, %20 ], [ %.087, %10 ]
  %.085.be = phi i32 [ %.085, %9 ], [ %.085, %507 ], [ %.085, %506 ], [ %.085, %505 ], [ %.085, %504 ], [ %.085, %502 ], [ %.085, %475 ], [ %.085, %474 ], [ %.085, %473 ], [ %.085, %472 ], [ %.085, %471 ], [ 2, %470 ], [ %.085, %469 ], [ %.085, %468 ], [ %.085, %452 ], [ %.085, %451 ], [ %.085, %450 ], [ %.085, %434 ], [ %.085, %424 ], [ %.neg96, %423 ], [ %.085, %422 ], [ %.085, %412 ], [ %.085, %402 ], [ %.085, %401 ], [ %.085, %391 ], [ %.085, %381 ], [ %.085, %367 ], [ %.085, %365 ], [ %.085, %354 ], [ %.085, %344 ], [ %.085, %343 ], [ %.085, %332 ], [ %.085, %322 ], [ %.085, %320 ], [ %.085, %319 ], [ %.085, %317 ], [ %.085, %316 ], [ %.085, %280 ], [ %.085, %270 ], [ %.085, %268 ], [ %.085, %257 ], [ %.085, %247 ], [ %.085, %246 ], [ %.085, %236 ], [ %.085, %226 ], [ %.085, %223 ], [ %.085, %222 ], [ %.085, %212 ], [ %.085, %202 ], [ %.085, %200 ], [ %.085, %187 ], [ %.085, %177 ], [ %.085, %176 ], [ 2, %166 ], [ %.085, %156 ], [ %.085, %155 ], [ %.085, %144 ], [ %.085, %134 ], [ %.085, %126 ], [ %.085, %124 ], [ %.085, %112 ], [ %.085, %102 ], [ %.085, %101 ], [ %.085, %99 ], [ %.085, %98 ], [ %.085, %96 ], [ %.085, %95 ], [ %.085, %70 ], [ %.085, %60 ], [ %.085, %58 ], [ %.085, %47 ], [ %.085, %37 ], [ %.085, %34 ], [ %.085, %32 ], [ %.085, %20 ], [ %.085, %10 ]
  %.083.be = phi i32 [ %.083, %9 ], [ %.083, %507 ], [ %.083, %506 ], [ %.083, %505 ], [ %.083, %504 ], [ %.083, %502 ], [ %.083, %475 ], [ %.083, %474 ], [ %.083, %473 ], [ 0, %472 ], [ %.083, %471 ], [ %.083, %470 ], [ %.083, %469 ], [ %.083, %468 ], [ %.083, %452 ], [ %.083, %451 ], [ %.083, %450 ], [ %.083, %434 ], [ %.083, %424 ], [ %.083, %423 ], [ %.083, %422 ], [ %.083, %412 ], [ %.083, %402 ], [ %.083, %401 ], [ %.083, %391 ], [ %.083, %381 ], [ %.083, %367 ], [ %.083, %365 ], [ %.083, %354 ], [ %.083, %344 ], [ %.083, %343 ], [ %.083, %332 ], [ %.083, %322 ], [ %321, %320 ], [ %.083, %319 ], [ %.083, %317 ], [ %.083, %316 ], [ %.083, %280 ], [ %.083, %270 ], [ %.083, %268 ], [ %.083, %257 ], [ %.083, %247 ], [ %.083, %246 ], [ %.083, %236 ], [ %.083, %226 ], [ %.083, %223 ], [ %.083, %222 ], [ 0, %212 ], [ %.083, %202 ], [ %.083, %200 ], [ %.083, %187 ], [ %.083, %177 ], [ %.083, %176 ], [ %.083, %166 ], [ %.083, %156 ], [ %.083, %155 ], [ %.083, %144 ], [ %.083, %134 ], [ %.083, %126 ], [ %.083, %124 ], [ %.083, %112 ], [ %.083, %102 ], [ %.083, %101 ], [ %.083, %99 ], [ %.083, %98 ], [ %.083, %96 ], [ %.083, %95 ], [ %.083, %70 ], [ %.083, %60 ], [ %.083, %58 ], [ %.083, %47 ], [ %.083, %37 ], [ %.083, %34 ], [ %.083, %32 ], [ %.083, %20 ], [ %.083, %10 ]
  %.081.be = phi i32 [ %.081, %9 ], [ %.081, %507 ], [ %.081, %506 ], [ %.081, %505 ], [ %.081, %504 ], [ %.081, %502 ], [ %.081, %475 ], [ %.081, %474 ], [ 1, %473 ], [ %.081, %472 ], [ %.081, %471 ], [ %.081, %470 ], [ %.081, %469 ], [ %.081, %468 ], [ %.081, %452 ], [ %.081, %451 ], [ %.081, %450 ], [ %.081, %434 ], [ %.081, %424 ], [ %.081, %423 ], [ %.081, %422 ], [ %.081, %412 ], [ %.081, %402 ], [ %.081, %401 ], [ %.081, %391 ], [ %.081, %381 ], [ %.081, %367 ], [ %.081, %365 ], [ %.081, %354 ], [ %.081, %344 ], [ %.081, %343 ], [ %.081, %332 ], [ %.081, %322 ], [ %.081, %320 ], [ %.081, %319 ], [ %318, %317 ], [ %.081, %316 ], [ %.081, %280 ], [ %.081, %270 ], [ %.081, %268 ], [ %.081, %257 ], [ %.081, %247 ], [ %.081, %246 ], [ 1, %236 ], [ %.081, %226 ], [ %.081, %223 ], [ %.081, %222 ], [ %.081, %212 ], [ %.081, %202 ], [ %.081, %200 ], [ %.081, %187 ], [ %.081, %177 ], [ %.081, %176 ], [ %.081, %166 ], [ %.081, %156 ], [ %.081, %155 ], [ %.081, %144 ], [ %.081, %134 ], [ %.081, %126 ], [ %.081, %124 ], [ %.081, %112 ], [ %.081, %102 ], [ %.081, %101 ], [ %.081, %99 ], [ %.081, %98 ], [ %.081, %96 ], [ %.081, %95 ], [ %.081, %70 ], [ %.081, %60 ], [ %.081, %58 ], [ %.081, %47 ], [ %.081, %37 ], [ %.081, %34 ], [ %.081, %32 ], [ %.081, %20 ], [ %.081, %10 ]
  %.079.be = phi i32 [ %.079, %9 ], [ %.079, %507 ], [ %.079, %506 ], [ %.neg93, %505 ], [ %.079, %504 ], [ %503, %502 ], [ %.079, %475 ], [ %.079, %474 ], [ %.079, %473 ], [ %.079, %472 ], [ %.079, %471 ], [ %.079, %470 ], [ %.079, %469 ], [ %.079, %468 ], [ %.079, %452 ], [ %.079, %451 ], [ %.079, %450 ], [ %.079, %434 ], [ %.079, %424 ], [ %.079, %423 ], [ %.079, %422 ], [ %.079, %412 ], [ %.079, %402 ], [ %.079, %401 ], [ %.neg97, %391 ], [ %.079, %381 ], [ %.079, %367 ], [ %.079, %365 ], [ %.079, %354 ], [ %.079, %344 ], [ %.079, %343 ], [ %333, %332 ], [ %.079, %322 ], [ %.079, %320 ], [ %.079, %319 ], [ %.079, %317 ], [ %.079, %316 ], [ %.079, %280 ], [ %.079, %270 ], [ %.079, %268 ], [ %.079, %257 ], [ %.079, %247 ], [ %.079, %246 ], [ %.079, %236 ], [ %.079, %226 ], [ %.079, %223 ], [ %.079, %222 ], [ %.079, %212 ], [ %.079, %202 ], [ %.079, %200 ], [ %.079, %187 ], [ %.079, %177 ], [ %.079, %176 ], [ %.079, %166 ], [ %.079, %156 ], [ %.079, %155 ], [ %.079, %144 ], [ %.079, %134 ], [ %.079, %126 ], [ %.079, %124 ], [ %.079, %112 ], [ %.079, %102 ], [ %.079, %101 ], [ %.079, %99 ], [ %.079, %98 ], [ %.079, %96 ], [ %.079, %95 ], [ %.079, %70 ], [ %.079, %60 ], [ %.079, %58 ], [ %.079, %47 ], [ %.079, %37 ], [ %.079, %34 ], [ %.079, %32 ], [ %.079, %20 ], [ %.079, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ -1532021450, %507 ], [ 160926498, %506 ], [ -1294939374, %505 ], [ 816813813, %504 ], [ 1453411060, %502 ], [ 1724338089, %475 ], [ -547142026, %474 ], [ 431625078, %473 ], [ -732557113, %472 ], [ 1258061142, %471 ], [ -1358401905, %470 ], [ 2030846674, %469 ], [ 1299103218, %468 ], [ 698805931, %452 ], [ 1808717659, %451 ], [ -1293299812, %450 ], [ %448, %434 ], [ %433, %424 ], [ -453619251, %423 ], [ -241575707, %422 ], [ %421, %412 ], [ %411, %402 ], [ 126396448, %401 ], [ %400, %391 ], [ %390, %381 ], [ -1967218655, %367 ], [ %366, %365 ], [ %364, %354 ], [ %353, %344 ], [ 126396448, %343 ], [ %342, %332 ], [ %331, %322 ], [ -1702134427, %320 ], [ 1322954655, %319 ], [ 285576216, %317 ], [ -864296998, %316 ], [ %315, %280 ], [ %279, %270 ], [ %269, %268 ], [ %267, %257 ], [ %256, %247 ], [ 285576216, %246 ], [ %245, %236 ], [ %235, %226 ], [ %225, %223 ], [ -1702134427, %222 ], [ %221, %212 ], [ %211, %202 ], [ %201, %200 ], [ %199, %187 ], [ %186, %177 ], [ -453619251, %176 ], [ %175, %166 ], [ %165, %156 ], [ -998061869, %155 ], [ %154, %144 ], [ %143, %134 ], [ 421106096, %126 ], [ %125, %124 ], [ %123, %112 ], [ %111, %102 ], [ -998061869, %101 ], [ -1473220423, %99 ], [ 1327455127, %98 ], [ -1982400066, %96 ], [ 627069207, %95 ], [ %94, %70 ], [ %69, %60 ], [ %59, %58 ], [ %57, %47 ], [ %46, %37 ], [ -1982400066, %34 ], [ %33, %32 ], [ %31, %20 ], [ %19, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @x, align 4
  %12 = load i32, i32* @y, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 -1293299812, i32 1666628962
  br label %.backedge

20:                                               ; preds = %9
  %21 = load i32, i32* @n, align 4
  %22 = icmp sle i32 %.091, %21
  store i1 %22, i1* %7, align 1
  %23 = load i32, i32* @x, align 4
  %24 = load i32, i32* @y, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 -1765362230, i32 1666628962
  br label %.backedge

32:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %7, align 1
  %33 = select i1 %.0..0..0., i32 -1560060866, i32 -450664041
  br label %.backedge

34:                                               ; preds = %9
  %35 = sext i32 %.091 to i64
  %36 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 %35, i64 0
  store i64 1, i64* %36, align 16
  br label %.backedge

37:                                               ; preds = %9
  %38 = load i32, i32* @x, align 4
  %39 = load i32, i32* @y, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 1808717659, i32 2031551380
  br label %.backedge

47:                                               ; preds = %9
  %48 = icmp sle i32 %.089, %.091
  store i1 %48, i1* %6, align 1
  %49 = load i32, i32* @x, align 4
  %50 = load i32, i32* @y, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 319531486, i32 2031551380
  br label %.backedge

58:                                               ; preds = %9
  %.0..0..0.73 = load volatile i1, i1* %6, align 1
  %59 = select i1 %.0..0..0.73, i32 200370235, i32 -1196966684
  br label %.backedge

60:                                               ; preds = %9
  %61 = load i32, i32* @x, align 4
  %62 = load i32, i32* @y, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 698805931, i32 -559762252
  br label %.backedge

70:                                               ; preds = %9
  %71 = add i32 %.091, -1
  %72 = sext i32 %71 to i64
  %73 = sext i32 %.089 to i64
  %74 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 %72, i64 %73
  %75 = load i64, i64* %74, align 8
  %76 = add i32 %.089, -1
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 %72, i64 %77
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, %75
  %81 = load i32, i32* @mod, align 4
  %82 = sext i32 %81 to i64
  %83 = srem i64 %80, %82
  %84 = sext i32 %.091 to i64
  %85 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 %84, i64 %73
  store i64 %83, i64* %85, align 8
  %86 = load i32, i32* @x, align 4
  %87 = load i32, i32* @y, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 -1954146735, i32 -559762252
  br label %.backedge

95:                                               ; preds = %9
  br label %.backedge

96:                                               ; preds = %9
  %97 = add i32 %.089, 1
  br label %.backedge

98:                                               ; preds = %9
  br label %.backedge

99:                                               ; preds = %9
  %100 = add i32 %.091, 1
  br label %.backedge

101:                                              ; preds = %9
  br label %.backedge

102:                                              ; preds = %9
  %103 = load i32, i32* @x, align 4
  %104 = load i32, i32* @y, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 1299103218, i32 -306359473
  br label %.backedge

112:                                              ; preds = %9
  %113 = load i32, i32* @K, align 4
  %114 = icmp sle i32 %.087, %113
  store i1 %114, i1* %5, align 1
  %115 = load i32, i32* @x, align 4
  %116 = load i32, i32* @y, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 1777412558, i32 -306359473
  br label %.backedge

124:                                              ; preds = %9
  %.0..0..0.74 = load volatile i1, i1* %5, align 1
  %125 = select i1 %.0..0..0.74, i32 2118479137, i32 -1388906824
  br label %.backedge

126:                                              ; preds = %9
  %127 = sext i32 %.087 to i64
  %128 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @dp, i64 0, i64 1, i64 %127
  store i64 1, i64* %128, align 8
  %129 = load i32, i32* @K, align 4
  %130 = sub i32 1, %.087
  %131 = add i32 %130, %129
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @sum, i64 0, i64 1, i64 %127
  store i64 %132, i64* %133, align 8
  br label %.backedge

134:                                              ; preds = %9
  %135 = load i32, i32* @x, align 4
  %136 = load i32, i32* @y, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 2030846674, i32 981999979
  br label %.backedge

144:                                              ; preds = %9
  %145 = add i32 %.087, 1
  %146 = load i32, i32* @x, align 4
  %147 = load i32, i32* @y, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -1529618607, i32 981999979
  br label %.backedge

155:                                              ; preds = %9
  br label %.backedge

156:                                              ; preds = %9
  %157 = load i32, i32* @x, align 4
  %158 = load i32, i32* @y, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 -1358401905, i32 51559040
  br label %.backedge

166:                                              ; preds = %9
  %167 = load i32, i32* @x, align 4
  %168 = load i32, i32* @y, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 -91606131, i32 51559040
  br label %.backedge

176:                                              ; preds = %9
  br label %.backedge

177:                                              ; preds = %9
  %178 = load i32, i32* @x, align 4
  %179 = load i32, i32* @y, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 1258061142, i32 818212454
  br label %.backedge

187:                                              ; preds = %9
  %188 = load i32, i32* @n, align 4
  %189 = add i32 %188, 1
  %190 = icmp sle i32 %.085, %189
  store i1 %190, i1* %4, align 1
  %191 = load i32, i32* @x, align 4
  %192 = load i32, i32* @y, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -573065176, i32 818212454
  br label %.backedge

200:                                              ; preds = %9
  %.0..0..0.75 = load volatile i1, i1* %4, align 1
  %201 = select i1 %.0..0..0.75, i32 -777519807, i32 -1167010953
  br label %.backedge

202:                                              ; preds = %9
  %203 = load i32, i32* @x, align 4
  %204 = load i32, i32* @y, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 -732557113, i32 -1215258198
  br label %.backedge

212:                                              ; preds = %9
  %213 = load i32, i32* @x, align 4
  %214 = load i32, i32* @y, align 4
  %215 = add i32 %213, -1
  %216 = mul i32 %215, %213
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %219, %218
  %221 = select i1 %220, i32 980639285, i32 -1215258198
  br label %.backedge

222:                                              ; preds = %9
  br label %.backedge

223:                                              ; preds = %9
  %224 = load i32, i32* @K, align 4
  %.not = icmp sgt i32 %.083, %224
  %225 = select i1 %.not, i32 -51305656, i32 -1595377702
  br label %.backedge

226:                                              ; preds = %9
  %227 = load i32, i32* @x, align 4
  %228 = load i32, i32* @y, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 431625078, i32 566822887
  br label %.backedge

236:                                              ; preds = %9
  %237 = load i32, i32* @x, align 4
  %238 = load i32, i32* @y, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -959943846, i32 566822887
  br label %.backedge

246:                                              ; preds = %9
  br label %.backedge

247:                                              ; preds = %9
  %248 = load i32, i32* @x, align 4
  %249 = load i32, i32* @y, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 -547142026, i32 2085421269
  br label %.backedge

257:                                              ; preds = %9
  %258 = icmp sgt i32 %.085, %.081
  store i1 %258, i1* %3, align 1
  %259 = load i32, i32* @x, align 4
  %260 = load i32, i32* @y, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 -64984147, i32 2085421269
  br label %.backedge

268:                                              ; preds = %9
  %.0..0..0.76 = load volatile i1, i1* %3, align 1
  %269 = select i1 %.0..0..0.76, i32 2116606029, i32 1764909951
  br label %.backedge

270:                                              ; preds = %9
  %271 = load i32, i32* @x, align 4
  %272 = load i32, i32* @y, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 1724338089, i32 1894639073
  br label %.backedge

280:                                              ; preds = %9
  %281 = sext i32 %.085 to i64
  %282 = sext i32 %.083 to i64
  %283 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @dp, i64 0, i64 %281, i64 %282
  %284 = load i64, i64* %283, align 8
  %285 = sub i32 %.085, %.081
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @dp, i64 0, i64 %286, i64 %282
  %288 = load i64, i64* %287, align 8
  %289 = sext i32 %.081 to i64
  %290 = add i32 %.083, 1
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @sum, i64 0, i64 %289, i64 %291
  %293 = load i64, i64* %292, align 8
  %294 = mul nsw i64 %293, %288
  %295 = load i32, i32* @mod, align 4
  %296 = sext i32 %295 to i64
  %297 = srem i64 %294, %296
  %298 = add i32 %.085, -2
  %299 = sext i32 %298 to i64
  %300 = add i32 %.081, -1
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 %299, i64 %301
  %303 = load i64, i64* %302, align 8
  %304 = mul nsw i64 %303, %297
  %305 = add i64 %304, %284
  %306 = srem i64 %305, %296
  store i64 %306, i64* %283, align 8
  %307 = load i32, i32* @x, align 4
  %308 = load i32, i32* @y, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 135991272, i32 1894639073
  br label %.backedge

316:                                              ; preds = %9
  br label %.backedge

317:                                              ; preds = %9
  %318 = add i32 %.081, 1
  br label %.backedge

319:                                              ; preds = %9
  br label %.backedge

320:                                              ; preds = %9
  %321 = add i32 %.083, 1
  br label %.backedge

322:                                              ; preds = %9
  %323 = load i32, i32* @x, align 4
  %324 = load i32, i32* @y, align 4
  %325 = add i32 %323, -1
  %326 = mul i32 %325, %323
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %329, %328
  %331 = select i1 %330, i32 1453411060, i32 797707646
  br label %.backedge

332:                                              ; preds = %9
  %333 = load i32, i32* @K, align 4
  %334 = load i32, i32* @x, align 4
  %335 = load i32, i32* @y, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 852098705, i32 797707646
  br label %.backedge

343:                                              ; preds = %9
  br label %.backedge

344:                                              ; preds = %9
  %345 = load i32, i32* @x, align 4
  %346 = load i32, i32* @y, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 816813813, i32 1394487783
  br label %.backedge

354:                                              ; preds = %9
  %355 = icmp sgt i32 %.079, -1
  store i1 %355, i1* %2, align 1
  %356 = load i32, i32* @x, align 4
  %357 = load i32, i32* @y, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 -95054520, i32 1394487783
  br label %.backedge

365:                                              ; preds = %9
  %.0..0..0.77 = load volatile i1, i1* %2, align 1
  %366 = select i1 %.0..0..0.77, i32 2046438459, i32 -1946823203
  br label %.backedge

367:                                              ; preds = %9
  %368 = sext i32 %.085 to i64
  %369 = add i32 %.079, 1
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @sum, i64 0, i64 %368, i64 %370
  %372 = load i64, i64* %371, align 8
  %373 = sext i32 %.079 to i64
  %374 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @dp, i64 0, i64 %368, i64 %373
  %375 = load i64, i64* %374, align 8
  %376 = add i64 %375, %372
  %377 = load i32, i32* @mod, align 4
  %378 = sext i32 %377 to i64
  %379 = srem i64 %376, %378
  %380 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @sum, i64 0, i64 %368, i64 %373
  store i64 %379, i64* %380, align 8
  br label %.backedge

381:                                              ; preds = %9
  %382 = load i32, i32* @x, align 4
  %383 = load i32, i32* @y, align 4
  %384 = add i32 %382, -1
  %385 = mul i32 %384, %382
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %388, %387
  %390 = select i1 %389, i32 -1294939374, i32 895228874
  br label %.backedge

391:                                              ; preds = %9
  %.neg97 = add i32 %.079, -1
  %392 = load i32, i32* @x, align 4
  %393 = load i32, i32* @y, align 4
  %394 = add i32 %392, -1
  %395 = mul i32 %394, %392
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %398, %397
  %400 = select i1 %399, i32 1073298895, i32 895228874
  br label %.backedge

401:                                              ; preds = %9
  br label %.backedge

402:                                              ; preds = %9
  %403 = load i32, i32* @x, align 4
  %404 = load i32, i32* @y, align 4
  %405 = add i32 %403, -1
  %406 = mul i32 %405, %403
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %409, %408
  %411 = select i1 %410, i32 160926498, i32 -1392777236
  br label %.backedge

412:                                              ; preds = %9
  %413 = load i32, i32* @x, align 4
  %414 = load i32, i32* @y, align 4
  %415 = add i32 %413, -1
  %416 = mul i32 %415, %413
  %417 = and i32 %416, 1
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %419, %418
  %421 = select i1 %420, i32 1802243551, i32 -1392777236
  br label %.backedge

422:                                              ; preds = %9
  br label %.backedge

423:                                              ; preds = %9
  %.neg96 = add i32 %.085, 1
  br label %.backedge

424:                                              ; preds = %9
  %425 = load i32, i32* @x, align 4
  %426 = load i32, i32* @y, align 4
  %427 = add i32 %425, -1
  %428 = mul i32 %427, %425
  %429 = and i32 %428, 1
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %431, %430
  %433 = select i1 %432, i32 -1532021450, i32 -1741135104
  br label %.backedge

434:                                              ; preds = %9
  %435 = load i32, i32* @n, align 4
  %.neg95 = add i32 %435, 1
  %436 = sext i32 %.neg95 to i64
  %437 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @dp, i64 0, i64 %436, i64 0
  %438 = load i64, i64* %437, align 16
  %439 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 %438)
  %440 = load i32, i32* @x, align 4
  %441 = load i32, i32* @y, align 4
  %442 = add i32 %440, -1
  %443 = mul i32 %442, %440
  %444 = and i32 %443, 1
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %446, %445
  %448 = select i1 %447, i32 1510671783, i32 -1741135104
  br label %.backedge

449:                                              ; preds = %9
  store i32 0, i32* %1, align 4
  %.0..0..0.78 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.78

450:                                              ; preds = %9
  br label %.backedge

451:                                              ; preds = %9
  br label %.backedge

452:                                              ; preds = %9
  %453 = add i32 %.091, -1
  %454 = sext i32 %453 to i64
  %455 = sext i32 %.089 to i64
  %456 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 %454, i64 %455
  %457 = load i64, i64* %456, align 8
  %458 = add i32 %.089, -1
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 %454, i64 %459
  %461 = load i64, i64* %460, align 8
  %462 = add i64 %461, %457
  %463 = load i32, i32* @mod, align 4
  %464 = sext i32 %463 to i64
  %465 = srem i64 %462, %464
  %466 = sext i32 %.091 to i64
  %467 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 %466, i64 %455
  store i64 %465, i64* %467, align 8
  br label %.backedge

468:                                              ; preds = %9
  br label %.backedge

469:                                              ; preds = %9
  %.neg94 = add i32 %.087, 1
  br label %.backedge

470:                                              ; preds = %9
  br label %.backedge

471:                                              ; preds = %9
  br label %.backedge

472:                                              ; preds = %9
  br label %.backedge

473:                                              ; preds = %9
  br label %.backedge

474:                                              ; preds = %9
  br label %.backedge

475:                                              ; preds = %9
  %476 = sext i32 %.085 to i64
  %477 = sext i32 %.083 to i64
  %478 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @dp, i64 0, i64 %476, i64 %477
  %479 = load i64, i64* %478, align 8
  %480 = sub i32 %.085, %.081
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @dp, i64 0, i64 %481, i64 %477
  %483 = load i64, i64* %482, align 8
  %484 = sext i32 %.081 to i64
  %485 = add i32 %.083, 1
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @sum, i64 0, i64 %484, i64 %486
  %488 = load i64, i64* %487, align 8
  %489 = mul nsw i64 %488, %483
  %490 = load i32, i32* @mod, align 4
  %491 = sext i32 %490 to i64
  %492 = srem i64 %489, %491
  %493 = add i32 %.085, -2
  %494 = sext i32 %493 to i64
  %495 = add i32 %.081, -1
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @C, i64 0, i64 %494, i64 %496
  %498 = load i64, i64* %497, align 8
  %499 = mul nsw i64 %498, %492
  %500 = add i64 %499, %479
  %501 = srem i64 %500, %491
  store i64 %501, i64* %478, align 8
  br label %.backedge

502:                                              ; preds = %9
  %503 = load i32, i32* @K, align 4
  br label %.backedge

504:                                              ; preds = %9
  br label %.backedge

505:                                              ; preds = %9
  %.neg93 = add i32 %.079, -1
  br label %.backedge

506:                                              ; preds = %9
  br label %.backedge

507:                                              ; preds = %9
  %508 = load i32, i32* @n, align 4
  %.neg = add i32 %508, 1
  %509 = sext i32 %.neg to i64
  %510 = getelementptr inbounds [400 x [400 x i64]], [400 x [400 x i64]]* @dp, i64 0, i64 %509, i64 0
  %511 = load i64, i64* %510, align 16
  %512 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 %511)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
