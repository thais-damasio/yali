; ModuleID = 'build_ollvm/programs/p03349/s873004307.ll'
source_filename = "Project_CodeNet_C++1400/p03349/s873004307.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@n = global i32 0, align 4
@k = global i32 0, align 4
@lbt = global i32 0, align 4
@dp = local_unnamed_addr global [302 x [302 x i32]] zeroinitializer, align 16
@sdp = local_unnamed_addr global [302 x [302 x i32]] zeroinitializer, align 16
@c = local_unnamed_addr global [302 x [302 x i32]] zeroinitializer, align 16
@ans = local_unnamed_addr global [302 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32* nonnull @n, i32* nonnull @k, i32* nonnull @lbt)
  br label %6

6:                                                ; preds = %.backedge, %0
  %.084 = phi i32 [ 0, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.0 = phi i32 [ -638975461, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -638975461, label %7
    i32 -2012985409, label %10
    i32 552728691, label %20
    i32 671584535, label %32
    i32 -1341611138, label %33
    i32 -1503946602, label %35
    i32 -602488656, label %45
    i32 -2124082094, label %69
    i32 -454651992, label %70
    i32 -2049910344, label %72
    i32 -571706983, label %82
    i32 -1951742895, label %92
    i32 510385610, label %93
    i32 454590214, label %94
    i32 -463772377, label %95
    i32 1569639406, label %105
    i32 -566678334, label %117
    i32 338180888, label %119
    i32 1897250906, label %125
    i32 -1551047965, label %135
    i32 446033393, label %146
    i32 -1761246339, label %147
    i32 1821083506, label %148
    i32 1849470568, label %151
    i32 -1434134374, label %161
    i32 1693172219, label %171
    i32 -538140327, label %172
    i32 -1150126015, label %182
    i32 923387168, label %194
    i32 -1798831490, label %196
    i32 1753406971, label %197
    i32 775077337, label %207
    i32 1599791468, label %218
    i32 85736551, label %220
    i32 625585167, label %252
    i32 811084692, label %254
    i32 653865202, label %267
    i32 -1071635238, label %269
    i32 981027105, label %270
    i32 -1082019771, label %271
    i32 1545692782, label %281
    i32 1758275301, label %291
    i32 -651905119, label %292
    i32 -1508634567, label %302
    i32 84452128, label %314
    i32 1528474642, label %316
    i32 -925025569, label %317
    i32 1793216976, label %319
    i32 437735405, label %350
    i32 209705382, label %352
    i32 -1890709901, label %362
    i32 -824145396, label %372
    i32 1530969924, label %373
    i32 1392802069, label %375
    i32 -585056668, label %385
    i32 2012216627, label %400
    i32 -1276148638, label %401
    i32 1920733711, label %404
    i32 -422702615, label %419
    i32 -1065965174, label %420
    i32 1847486304, label %421
    i32 -467796502, label %423
    i32 1534889936, label %424
    i32 1864589133, label %425
    i32 -353014439, label %426
    i32 -1427736112, label %427
    i32 633476353, label %428
    i32 1207455613, label %429
  ]

.backedge:                                        ; preds = %6, %429, %428, %427, %426, %425, %424, %423, %421, %420, %419, %404, %401, %385, %375, %373, %372, %362, %352, %350, %319, %317, %316, %314, %302, %292, %291, %281, %271, %270, %269, %267, %254, %252, %220, %218, %207, %197, %196, %194, %182, %172, %171, %161, %151, %148, %147, %146, %135, %125, %119, %117, %105, %95, %94, %93, %92, %82, %72, %70, %69, %45, %35, %33, %32, %20, %10, %7
  %.084.be = phi i32 [ %.084, %6 ], [ %.084, %429 ], [ %.084, %428 ], [ %.084, %427 ], [ %.084, %426 ], [ %.084, %425 ], [ %.084, %424 ], [ %.084, %423 ], [ %.084, %421 ], [ %.084, %420 ], [ %.084, %419 ], [ %.084, %404 ], [ %.084, %401 ], [ %.084, %385 ], [ %.084, %375 ], [ %.084, %373 ], [ %.084, %372 ], [ %.084, %362 ], [ %.084, %352 ], [ %.084, %350 ], [ %.084, %319 ], [ %.084, %317 ], [ %.084, %316 ], [ %.084, %314 ], [ %.084, %302 ], [ %.084, %292 ], [ %.084, %291 ], [ %.084, %281 ], [ %.084, %271 ], [ %.084, %270 ], [ %.084, %269 ], [ %.084, %267 ], [ %.084, %254 ], [ %.084, %252 ], [ %.084, %220 ], [ %.084, %218 ], [ %.084, %207 ], [ %.084, %197 ], [ %.084, %196 ], [ %.084, %194 ], [ %.084, %182 ], [ %.084, %172 ], [ %.084, %171 ], [ %.084, %161 ], [ %.084, %151 ], [ %.084, %148 ], [ %.084, %147 ], [ %.084, %146 ], [ %.084, %135 ], [ %.084, %125 ], [ %.084, %119 ], [ %.084, %117 ], [ %.084, %105 ], [ %.084, %95 ], [ %.084, %94 ], [ %.neg87, %93 ], [ %.084, %92 ], [ %.084, %82 ], [ %.084, %72 ], [ %.084, %70 ], [ %.084, %69 ], [ %.084, %45 ], [ %.084, %35 ], [ %.084, %33 ], [ %.084, %32 ], [ %.084, %20 ], [ %.084, %10 ], [ %.084, %7 ]
  %.082.be = phi i32 [ %.082, %6 ], [ %.082, %429 ], [ %.082, %428 ], [ %.082, %427 ], [ %.082, %426 ], [ %.082, %425 ], [ %.082, %424 ], [ %.082, %423 ], [ %.082, %421 ], [ %.082, %420 ], [ %.082, %419 ], [ %.082, %404 ], [ 1, %401 ], [ %.082, %385 ], [ %.082, %375 ], [ %.082, %373 ], [ %.082, %372 ], [ %.082, %362 ], [ %.082, %352 ], [ %.082, %350 ], [ %.082, %319 ], [ %.082, %317 ], [ %.082, %316 ], [ %.082, %314 ], [ %.082, %302 ], [ %.082, %292 ], [ %.082, %291 ], [ %.082, %281 ], [ %.082, %271 ], [ %.082, %270 ], [ %.082, %269 ], [ %.082, %267 ], [ %.082, %254 ], [ %.082, %252 ], [ %.082, %220 ], [ %.082, %218 ], [ %.082, %207 ], [ %.082, %197 ], [ %.082, %196 ], [ %.082, %194 ], [ %.082, %182 ], [ %.082, %172 ], [ %.082, %171 ], [ %.082, %161 ], [ %.082, %151 ], [ %.082, %148 ], [ %.082, %147 ], [ %.082, %146 ], [ %.082, %135 ], [ %.082, %125 ], [ %.082, %119 ], [ %.082, %117 ], [ %.082, %105 ], [ %.082, %95 ], [ %.082, %94 ], [ %.082, %93 ], [ %.082, %92 ], [ %.082, %82 ], [ %.082, %72 ], [ %71, %70 ], [ %.082, %69 ], [ %.082, %45 ], [ %.082, %35 ], [ %.082, %33 ], [ %.082, %32 ], [ 1, %20 ], [ %.082, %10 ], [ %.082, %7 ]
  %.080.be = phi i32 [ %.080, %6 ], [ %.080, %429 ], [ %.080, %428 ], [ %.080, %427 ], [ %.080, %426 ], [ %.080, %425 ], [ %.080, %424 ], [ %.080, %423 ], [ %422, %421 ], [ %.080, %420 ], [ %.080, %419 ], [ %.080, %404 ], [ %.080, %401 ], [ %.080, %385 ], [ %.080, %375 ], [ %.080, %373 ], [ %.080, %372 ], [ %.080, %362 ], [ %.080, %352 ], [ %.080, %350 ], [ %.080, %319 ], [ %.080, %317 ], [ %.080, %316 ], [ %.080, %314 ], [ %.080, %302 ], [ %.080, %292 ], [ %.080, %291 ], [ %.080, %281 ], [ %.080, %271 ], [ %.080, %270 ], [ %.080, %269 ], [ %.080, %267 ], [ %.080, %254 ], [ %.080, %252 ], [ %.080, %220 ], [ %.080, %218 ], [ %.080, %207 ], [ %.080, %197 ], [ %.080, %196 ], [ %.080, %194 ], [ %.080, %182 ], [ %.080, %172 ], [ %.080, %171 ], [ %.080, %161 ], [ %.080, %151 ], [ %.080, %148 ], [ %.080, %147 ], [ %.080, %146 ], [ %136, %135 ], [ %.080, %125 ], [ %.080, %119 ], [ %.080, %117 ], [ %.080, %105 ], [ %.080, %95 ], [ 1, %94 ], [ %.080, %93 ], [ %.080, %92 ], [ %.080, %82 ], [ %.080, %72 ], [ %.080, %70 ], [ %.080, %69 ], [ %.080, %45 ], [ %.080, %35 ], [ %.080, %33 ], [ %.080, %32 ], [ %.080, %20 ], [ %.080, %10 ], [ %.080, %7 ]
  %.078.be = phi i32 [ %.078, %6 ], [ %.078, %429 ], [ %.078, %428 ], [ %.078, %427 ], [ %.078, %426 ], [ %.078, %425 ], [ %.078, %424 ], [ %.078, %423 ], [ %.078, %421 ], [ %.078, %420 ], [ %.078, %419 ], [ %.078, %404 ], [ %.078, %401 ], [ %.078, %385 ], [ %.078, %375 ], [ %.078, %373 ], [ %.078, %372 ], [ %.078, %362 ], [ %.078, %352 ], [ %.078, %350 ], [ %.078, %319 ], [ %.078, %317 ], [ %.078, %316 ], [ %.078, %314 ], [ %.078, %302 ], [ %.078, %292 ], [ %.078, %291 ], [ %.078, %281 ], [ %.078, %271 ], [ %.neg, %270 ], [ %.078, %269 ], [ %.078, %267 ], [ %.078, %254 ], [ %.078, %252 ], [ %.078, %220 ], [ %.078, %218 ], [ %.078, %207 ], [ %.078, %197 ], [ %.078, %196 ], [ %.078, %194 ], [ %.078, %182 ], [ %.078, %172 ], [ %.078, %171 ], [ %.078, %161 ], [ %.078, %151 ], [ %.078, %148 ], [ 2, %147 ], [ %.078, %146 ], [ %.078, %135 ], [ %.078, %125 ], [ %.078, %119 ], [ %.078, %117 ], [ %.078, %105 ], [ %.078, %95 ], [ %.078, %94 ], [ %.078, %93 ], [ %.078, %92 ], [ %.078, %82 ], [ %.078, %72 ], [ %.078, %70 ], [ %.078, %69 ], [ %.078, %45 ], [ %.078, %35 ], [ %.078, %33 ], [ %.078, %32 ], [ %.078, %20 ], [ %.078, %10 ], [ %.078, %7 ]
  %.076.be = phi i32 [ %.076, %6 ], [ %.076, %429 ], [ %.076, %428 ], [ %.076, %427 ], [ %.076, %426 ], [ %.076, %425 ], [ %.076, %424 ], [ 1, %423 ], [ %.076, %421 ], [ %.076, %420 ], [ %.076, %419 ], [ %.076, %404 ], [ %.076, %401 ], [ %.076, %385 ], [ %.076, %375 ], [ %.076, %373 ], [ %.076, %372 ], [ %.076, %362 ], [ %.076, %352 ], [ %.076, %350 ], [ %.076, %319 ], [ %.076, %317 ], [ %.076, %316 ], [ %.076, %314 ], [ %.076, %302 ], [ %.076, %292 ], [ %.076, %291 ], [ %.076, %281 ], [ %.076, %271 ], [ %.076, %270 ], [ %.076, %269 ], [ %268, %267 ], [ %.076, %254 ], [ %.076, %252 ], [ %.076, %220 ], [ %.076, %218 ], [ %.076, %207 ], [ %.076, %197 ], [ %.076, %196 ], [ %.076, %194 ], [ %.076, %182 ], [ %.076, %172 ], [ %.076, %171 ], [ 1, %161 ], [ %.076, %151 ], [ %.076, %148 ], [ %.076, %147 ], [ %.076, %146 ], [ %.076, %135 ], [ %.076, %125 ], [ %.076, %119 ], [ %.076, %117 ], [ %.076, %105 ], [ %.076, %95 ], [ %.076, %94 ], [ %.076, %93 ], [ %.076, %92 ], [ %.076, %82 ], [ %.076, %72 ], [ %.076, %70 ], [ %.076, %69 ], [ %.076, %45 ], [ %.076, %35 ], [ %.076, %33 ], [ %.076, %32 ], [ %.076, %20 ], [ %.076, %10 ], [ %.076, %7 ]
  %.074.be = phi i32 [ %.074, %6 ], [ %.074, %429 ], [ %.074, %428 ], [ %.074, %427 ], [ %.074, %426 ], [ %.074, %425 ], [ %.074, %424 ], [ %.074, %423 ], [ %.074, %421 ], [ %.074, %420 ], [ %.074, %419 ], [ %.074, %404 ], [ %.074, %401 ], [ %.074, %385 ], [ %.074, %375 ], [ %.074, %373 ], [ %.074, %372 ], [ %.074, %362 ], [ %.074, %352 ], [ %.074, %350 ], [ %.074, %319 ], [ %.074, %317 ], [ %.074, %316 ], [ %.074, %314 ], [ %.074, %302 ], [ %.074, %292 ], [ %.074, %291 ], [ %.074, %281 ], [ %.074, %271 ], [ %.074, %270 ], [ %.074, %269 ], [ %.074, %267 ], [ %.074, %254 ], [ %253, %252 ], [ %.074, %220 ], [ %.074, %218 ], [ %.074, %207 ], [ %.074, %197 ], [ 1, %196 ], [ %.074, %194 ], [ %.074, %182 ], [ %.074, %172 ], [ %.074, %171 ], [ %.074, %161 ], [ %.074, %151 ], [ %.074, %148 ], [ %.074, %147 ], [ %.074, %146 ], [ %.074, %135 ], [ %.074, %125 ], [ %.074, %119 ], [ %.074, %117 ], [ %.074, %105 ], [ %.074, %95 ], [ %.074, %94 ], [ %.074, %93 ], [ %.074, %92 ], [ %.074, %82 ], [ %.074, %72 ], [ %.074, %70 ], [ %.074, %69 ], [ %.074, %45 ], [ %.074, %35 ], [ %.074, %33 ], [ %.074, %32 ], [ %.074, %20 ], [ %.074, %10 ], [ %.074, %7 ]
  %.072.be = phi i32 [ %.072, %6 ], [ %.072, %429 ], [ %.072, %428 ], [ %.072, %427 ], [ 1, %426 ], [ %.072, %425 ], [ %.072, %424 ], [ %.072, %423 ], [ %.072, %421 ], [ %.072, %420 ], [ %.072, %419 ], [ %.072, %404 ], [ %.072, %401 ], [ %.072, %385 ], [ %.072, %375 ], [ %374, %373 ], [ %.072, %372 ], [ %.072, %362 ], [ %.072, %352 ], [ %.072, %350 ], [ %.072, %319 ], [ %.072, %317 ], [ %.072, %316 ], [ %.072, %314 ], [ %.072, %302 ], [ %.072, %292 ], [ %.072, %291 ], [ 1, %281 ], [ %.072, %271 ], [ %.072, %270 ], [ %.072, %269 ], [ %.072, %267 ], [ %.072, %254 ], [ %.072, %252 ], [ %.072, %220 ], [ %.072, %218 ], [ %.072, %207 ], [ %.072, %197 ], [ %.072, %196 ], [ %.072, %194 ], [ %.072, %182 ], [ %.072, %172 ], [ %.072, %171 ], [ %.072, %161 ], [ %.072, %151 ], [ %.072, %148 ], [ %.072, %147 ], [ %.072, %146 ], [ %.072, %135 ], [ %.072, %125 ], [ %.072, %119 ], [ %.072, %117 ], [ %.072, %105 ], [ %.072, %95 ], [ %.072, %94 ], [ %.072, %93 ], [ %.072, %92 ], [ %.072, %82 ], [ %.072, %72 ], [ %.072, %70 ], [ %.072, %69 ], [ %.072, %45 ], [ %.072, %35 ], [ %.072, %33 ], [ %.072, %32 ], [ %.072, %20 ], [ %.072, %10 ], [ %.072, %7 ]
  %.070.be = phi i32 [ %.070, %6 ], [ %.070, %429 ], [ %.070, %428 ], [ %.070, %427 ], [ %.070, %426 ], [ %.070, %425 ], [ %.070, %424 ], [ %.070, %423 ], [ %.070, %421 ], [ %.070, %420 ], [ %.070, %419 ], [ %.070, %404 ], [ %.070, %401 ], [ %.070, %385 ], [ %.070, %375 ], [ %.070, %373 ], [ %.070, %372 ], [ %.070, %362 ], [ %.070, %352 ], [ %351, %350 ], [ %.070, %319 ], [ %.070, %317 ], [ 1, %316 ], [ %.070, %314 ], [ %.070, %302 ], [ %.070, %292 ], [ %.070, %291 ], [ %.070, %281 ], [ %.070, %271 ], [ %.070, %270 ], [ %.070, %269 ], [ %.070, %267 ], [ %.070, %254 ], [ %.070, %252 ], [ %.070, %220 ], [ %.070, %218 ], [ %.070, %207 ], [ %.070, %197 ], [ %.070, %196 ], [ %.070, %194 ], [ %.070, %182 ], [ %.070, %172 ], [ %.070, %171 ], [ %.070, %161 ], [ %.070, %151 ], [ %.070, %148 ], [ %.070, %147 ], [ %.070, %146 ], [ %.070, %135 ], [ %.070, %125 ], [ %.070, %119 ], [ %.070, %117 ], [ %.070, %105 ], [ %.070, %95 ], [ %.070, %94 ], [ %.070, %93 ], [ %.070, %92 ], [ %.070, %82 ], [ %.070, %72 ], [ %.070, %70 ], [ %.070, %69 ], [ %.070, %45 ], [ %.070, %35 ], [ %.070, %33 ], [ %.070, %32 ], [ %.070, %20 ], [ %.070, %10 ], [ %.070, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ -585056668, %429 ], [ -1890709901, %428 ], [ -1508634567, %427 ], [ 1545692782, %426 ], [ 775077337, %425 ], [ -1150126015, %424 ], [ -1434134374, %423 ], [ -1551047965, %421 ], [ 1569639406, %420 ], [ -571706983, %419 ], [ -602488656, %404 ], [ 552728691, %401 ], [ %399, %385 ], [ %384, %375 ], [ -651905119, %373 ], [ 1530969924, %372 ], [ %371, %362 ], [ %361, %352 ], [ -925025569, %350 ], [ 437735405, %319 ], [ %318, %317 ], [ -925025569, %316 ], [ %315, %314 ], [ %313, %302 ], [ %301, %292 ], [ -651905119, %291 ], [ %290, %281 ], [ %280, %271 ], [ 1821083506, %270 ], [ 981027105, %269 ], [ -538140327, %267 ], [ 653865202, %254 ], [ 1753406971, %252 ], [ 625585167, %220 ], [ %219, %218 ], [ %217, %207 ], [ %206, %197 ], [ 1753406971, %196 ], [ %195, %194 ], [ %193, %182 ], [ %181, %172 ], [ -538140327, %171 ], [ %170, %161 ], [ %160, %151 ], [ %150, %148 ], [ 1821083506, %147 ], [ -463772377, %146 ], [ %145, %135 ], [ %134, %125 ], [ 1897250906, %119 ], [ %118, %117 ], [ %116, %105 ], [ %104, %95 ], [ -463772377, %94 ], [ -638975461, %93 ], [ 510385610, %92 ], [ %91, %82 ], [ %81, %72 ], [ -1341611138, %70 ], [ -454651992, %69 ], [ %68, %45 ], [ %44, %35 ], [ %34, %33 ], [ -1341611138, %32 ], [ %31, %20 ], [ %19, %10 ], [ %9, %7 ]
  br label %6

7:                                                ; preds = %6
  %8 = load i32, i32* @n, align 4
  %.not89 = icmp sgt i32 %.084, %8
  %9 = select i1 %.not89, i32 454590214, i32 -2012985409
  br label %.backedge

10:                                               ; preds = %6
  %11 = load i32, i32* @x, align 4
  %12 = load i32, i32* @y, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %17, %16
  %19 = select i1 %18, i32 552728691, i32 -1276148638
  br label %.backedge

20:                                               ; preds = %6
  %21 = sext i32 %.084 to i64
  %22 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %21, i64 0
  store i32 1, i32* %22, align 8
  %23 = load i32, i32* @x, align 4
  %24 = load i32, i32* @y, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 671584535, i32 -1276148638
  br label %.backedge

32:                                               ; preds = %6
  br label %.backedge

33:                                               ; preds = %6
  %.not88 = icmp sgt i32 %.082, %.084
  %34 = select i1 %.not88, i32 -2049910344, i32 -1503946602
  br label %.backedge

35:                                               ; preds = %6
  %36 = load i32, i32* @x, align 4
  %37 = load i32, i32* @y, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 -602488656, i32 1920733711
  br label %.backedge

45:                                               ; preds = %6
  %46 = add i32 %.084, -1
  %47 = sext i32 %46 to i64
  %48 = sext i32 %.082 to i64
  %49 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %47, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %.082, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %47, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = add i32 %54, %50
  %56 = load i32, i32* @lbt, align 4
  %57 = srem i32 %55, %56
  %58 = sext i32 %.084 to i64
  %59 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %58, i64 %48
  store i32 %57, i32* %59, align 4
  %60 = load i32, i32* @x, align 4
  %61 = load i32, i32* @y, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 -2124082094, i32 1920733711
  br label %.backedge

69:                                               ; preds = %6
  br label %.backedge

70:                                               ; preds = %6
  %71 = add i32 %.082, 1
  br label %.backedge

72:                                               ; preds = %6
  %73 = load i32, i32* @x, align 4
  %74 = load i32, i32* @y, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -571706983, i32 -422702615
  br label %.backedge

82:                                               ; preds = %6
  %83 = load i32, i32* @x, align 4
  %84 = load i32, i32* @y, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -1951742895, i32 -422702615
  br label %.backedge

92:                                               ; preds = %6
  br label %.backedge

93:                                               ; preds = %6
  %.neg87 = add i32 %.084, 1
  br label %.backedge

94:                                               ; preds = %6
  br label %.backedge

95:                                               ; preds = %6
  %96 = load i32, i32* @x, align 4
  %97 = load i32, i32* @y, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 1569639406, i32 -1065965174
  br label %.backedge

105:                                              ; preds = %6
  %106 = load i32, i32* @k, align 4
  %107 = icmp sle i32 %.080, %106
  store i1 %107, i1* %4, align 1
  %108 = load i32, i32* @x, align 4
  %109 = load i32, i32* @y, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -566678334, i32 -1065965174
  br label %.backedge

117:                                              ; preds = %6
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %118 = select i1 %.0..0..0., i32 338180888, i32 -1761246339
  br label %.backedge

119:                                              ; preds = %6
  %120 = sext i32 %.080 to i64
  %121 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @dp, i64 0, i64 1, i64 %120
  store i32 1, i32* %121, align 4
  %122 = load i32, i32* @lbt, align 4
  %123 = srem i32 %.080, %122
  %124 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @sdp, i64 0, i64 1, i64 %120
  store i32 %123, i32* %124, align 4
  br label %.backedge

125:                                              ; preds = %6
  %126 = load i32, i32* @x, align 4
  %127 = load i32, i32* @y, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 -1551047965, i32 1847486304
  br label %.backedge

135:                                              ; preds = %6
  %136 = add i32 %.080, 1
  %137 = load i32, i32* @x, align 4
  %138 = load i32, i32* @y, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 446033393, i32 1847486304
  br label %.backedge

146:                                              ; preds = %6
  br label %.backedge

147:                                              ; preds = %6
  br label %.backedge

148:                                              ; preds = %6
  %149 = load i32, i32* @n, align 4
  %.not86 = icmp sgt i32 %.078, %149
  %150 = select i1 %.not86, i32 -1082019771, i32 1849470568
  br label %.backedge

151:                                              ; preds = %6
  %152 = load i32, i32* @x, align 4
  %153 = load i32, i32* @y, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 -1434134374, i32 -467796502
  br label %.backedge

161:                                              ; preds = %6
  %162 = load i32, i32* @x, align 4
  %163 = load i32, i32* @y, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 1693172219, i32 -467796502
  br label %.backedge

171:                                              ; preds = %6
  br label %.backedge

172:                                              ; preds = %6
  %173 = load i32, i32* @x, align 4
  %174 = load i32, i32* @y, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 -1150126015, i32 1534889936
  br label %.backedge

182:                                              ; preds = %6
  %183 = load i32, i32* @k, align 4
  %184 = icmp sle i32 %.076, %183
  store i1 %184, i1* %3, align 1
  %185 = load i32, i32* @x, align 4
  %186 = load i32, i32* @y, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 923387168, i32 1534889936
  br label %.backedge

194:                                              ; preds = %6
  %.0..0..0.67 = load volatile i1, i1* %3, align 1
  %195 = select i1 %.0..0..0.67, i32 -1798831490, i32 -1071635238
  br label %.backedge

196:                                              ; preds = %6
  br label %.backedge

197:                                              ; preds = %6
  %198 = load i32, i32* @x, align 4
  %199 = load i32, i32* @y, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 775077337, i32 1864589133
  br label %.backedge

207:                                              ; preds = %6
  %208 = icmp sgt i32 %.078, %.074
  store i1 %208, i1* %2, align 1
  %209 = load i32, i32* @x, align 4
  %210 = load i32, i32* @y, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 1599791468, i32 1864589133
  br label %.backedge

218:                                              ; preds = %6
  %.0..0..0.68 = load volatile i1, i1* %2, align 1
  %219 = select i1 %.0..0..0.68, i32 85736551, i32 811084692
  br label %.backedge

220:                                              ; preds = %6
  %221 = sext i32 %.078 to i64
  %222 = sext i32 %.076 to i64
  %223 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @dp, i64 0, i64 %221, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = sext i32 %224 to i64
  %226 = add i32 %.078, -2
  %227 = sext i32 %226 to i64
  %228 = add i32 %.074, -1
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %227, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = sext i32 %.074 to i64
  %234 = add i32 %.076, -1
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @sdp, i64 0, i64 %233, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = sext i32 %237 to i64
  %239 = mul nsw i64 %238, %232
  %240 = load i32, i32* @lbt, align 4
  %241 = sext i32 %240 to i64
  %242 = srem i64 %239, %241
  %243 = sub i32 %.078, %.074
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @dp, i64 0, i64 %244, i64 %222
  %246 = load i32, i32* %245, align 4
  %247 = sext i32 %246 to i64
  %248 = mul nsw i64 %242, %247
  %249 = add nsw i64 %248, %225
  %250 = srem i64 %249, %241
  %251 = trunc i64 %250 to i32
  store i32 %251, i32* %223, align 4
  br label %.backedge

252:                                              ; preds = %6
  %253 = add i32 %.074, 1
  br label %.backedge

254:                                              ; preds = %6
  %255 = sext i32 %.078 to i64
  %256 = add i32 %.076, -1
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @sdp, i64 0, i64 %255, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = sext i32 %.076 to i64
  %261 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @dp, i64 0, i64 %255, i64 %260
  %262 = load i32, i32* %261, align 4
  %263 = add i32 %262, %259
  %264 = load i32, i32* @lbt, align 4
  %265 = srem i32 %263, %264
  %266 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @sdp, i64 0, i64 %255, i64 %260
  store i32 %265, i32* %266, align 4
  br label %.backedge

267:                                              ; preds = %6
  %268 = add i32 %.076, 1
  br label %.backedge

269:                                              ; preds = %6
  br label %.backedge

270:                                              ; preds = %6
  %.neg = add i32 %.078, 1
  br label %.backedge

271:                                              ; preds = %6
  %272 = load i32, i32* @x, align 4
  %273 = load i32, i32* @y, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 1545692782, i32 -353014439
  br label %.backedge

281:                                              ; preds = %6
  store i32 1, i32* getelementptr inbounds ([302 x i32], [302 x i32]* @ans, i64 0, i64 0), align 16
  %282 = load i32, i32* @x, align 4
  %283 = load i32, i32* @y, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 1758275301, i32 -353014439
  br label %.backedge

291:                                              ; preds = %6
  br label %.backedge

292:                                              ; preds = %6
  %293 = load i32, i32* @x, align 4
  %294 = load i32, i32* @y, align 4
  %295 = add i32 %293, -1
  %296 = mul i32 %295, %293
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %299, %298
  %301 = select i1 %300, i32 -1508634567, i32 -1427736112
  br label %.backedge

302:                                              ; preds = %6
  %303 = load i32, i32* @n, align 4
  %304 = icmp sle i32 %.072, %303
  store i1 %304, i1* %1, align 1
  %305 = load i32, i32* @x, align 4
  %306 = load i32, i32* @y, align 4
  %307 = add i32 %305, -1
  %308 = mul i32 %307, %305
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %311, %310
  %313 = select i1 %312, i32 84452128, i32 -1427736112
  br label %.backedge

314:                                              ; preds = %6
  %.0..0..0.69 = load volatile i1, i1* %1, align 1
  %315 = select i1 %.0..0..0.69, i32 1528474642, i32 1392802069
  br label %.backedge

316:                                              ; preds = %6
  br label %.backedge

317:                                              ; preds = %6
  %.not = icmp slt i32 %.072, %.070
  %318 = select i1 %.not, i32 209705382, i32 1793216976
  br label %.backedge

319:                                              ; preds = %6
  %320 = sext i32 %.072 to i64
  %321 = getelementptr inbounds [302 x i32], [302 x i32]* @ans, i64 0, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = sext i32 %322 to i64
  %324 = add i32 %.072, -1
  %325 = sext i32 %324 to i64
  %326 = add i32 %.070, -1
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %325, i64 %327
  %329 = load i32, i32* %328, align 4
  %330 = sext i32 %329 to i64
  %331 = sext i32 %.070 to i64
  %332 = load i32, i32* @k, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @sdp, i64 0, i64 %331, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = sext i32 %335 to i64
  %337 = mul nsw i64 %336, %330
  %338 = load i32, i32* @lbt, align 4
  %339 = sext i32 %338 to i64
  %340 = srem i64 %337, %339
  %341 = sub i32 %.072, %.070
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [302 x i32], [302 x i32]* @ans, i64 0, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = sext i32 %344 to i64
  %346 = mul nsw i64 %340, %345
  %347 = add nsw i64 %346, %323
  %348 = srem i64 %347, %339
  %349 = trunc i64 %348 to i32
  store i32 %349, i32* %321, align 4
  br label %.backedge

350:                                              ; preds = %6
  %351 = add i32 %.070, 1
  br label %.backedge

352:                                              ; preds = %6
  %353 = load i32, i32* @x, align 4
  %354 = load i32, i32* @y, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 -1890709901, i32 633476353
  br label %.backedge

362:                                              ; preds = %6
  %363 = load i32, i32* @x, align 4
  %364 = load i32, i32* @y, align 4
  %365 = add i32 %363, -1
  %366 = mul i32 %365, %363
  %367 = and i32 %366, 1
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %369, %368
  %371 = select i1 %370, i32 -824145396, i32 633476353
  br label %.backedge

372:                                              ; preds = %6
  br label %.backedge

373:                                              ; preds = %6
  %374 = add i32 %.072, 1
  br label %.backedge

375:                                              ; preds = %6
  %376 = load i32, i32* @x, align 4
  %377 = load i32, i32* @y, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 -585056668, i32 1207455613
  br label %.backedge

385:                                              ; preds = %6
  %386 = load i32, i32* @n, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [302 x i32], [302 x i32]* @ans, i64 0, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %389)
  %391 = load i32, i32* @x, align 4
  %392 = load i32, i32* @y, align 4
  %393 = add i32 %391, -1
  %394 = mul i32 %393, %391
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %397, %396
  %399 = select i1 %398, i32 2012216627, i32 1207455613
  br label %.backedge

400:                                              ; preds = %6
  ret i32 0

401:                                              ; preds = %6
  %402 = sext i32 %.084 to i64
  %403 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %402, i64 0
  store i32 1, i32* %403, align 8
  br label %.backedge

404:                                              ; preds = %6
  %405 = add i32 %.084, -1
  %406 = sext i32 %405 to i64
  %407 = sext i32 %.082 to i64
  %408 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %406, i64 %407
  %409 = load i32, i32* %408, align 4
  %410 = add i32 %.082, -1
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %406, i64 %411
  %413 = load i32, i32* %412, align 4
  %414 = add i32 %413, %409
  %415 = load i32, i32* @lbt, align 4
  %416 = srem i32 %414, %415
  %417 = sext i32 %.084 to i64
  %418 = getelementptr inbounds [302 x [302 x i32]], [302 x [302 x i32]]* @c, i64 0, i64 %417, i64 %407
  store i32 %416, i32* %418, align 4
  br label %.backedge

419:                                              ; preds = %6
  br label %.backedge

420:                                              ; preds = %6
  br label %.backedge

421:                                              ; preds = %6
  %422 = add i32 %.080, 1
  br label %.backedge

423:                                              ; preds = %6
  br label %.backedge

424:                                              ; preds = %6
  br label %.backedge

425:                                              ; preds = %6
  br label %.backedge

426:                                              ; preds = %6
  store i32 1, i32* getelementptr inbounds ([302 x i32], [302 x i32]* @ans, i64 0, i64 0), align 16
  br label %.backedge

427:                                              ; preds = %6
  br label %.backedge

428:                                              ; preds = %6
  br label %.backedge

429:                                              ; preds = %6
  %430 = load i32, i32* @n, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [302 x i32], [302 x i32]* @ans, i64 0, i64 %431
  %433 = load i32, i32* %432, align 4
  %434 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %433)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
