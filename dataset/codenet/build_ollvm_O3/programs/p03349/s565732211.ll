; ModuleID = 'build_ollvm/programs/p03349/s565732211.ll'
source_filename = "Project_CodeNet_C++1400/p03349/s565732211.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@n = local_unnamed_addr global i64 0, align 8
@m = local_unnamed_addr global i64 0, align 8
@mod = local_unnamed_addr global i64 0, align 8
@f = local_unnamed_addr global [310 x [310 x i64]] zeroinitializer, align 16
@F = local_unnamed_addr global [310 x [310 x i64]] zeroinitializer, align 16
@ans = local_unnamed_addr global i64 0, align 8
@C = local_unnamed_addr global [310 x [310 x i64]] zeroinitializer, align 16
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline nounwind uwtable
define i32 @_Z4readv() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = tail call i32 @getchar()
  br label %5

5:                                                ; preds = %.backedge, %0
  %6 = phi i32 [ undef, %0 ], [ %.be, %.backedge ]
  %.027 = phi i32 [ 0, %0 ], [ %.027.be, %.backedge ]
  %.025 = phi i32 [ 1, %0 ], [ %.025.be, %.backedge ]
  %.023 = phi i32 [ %4, %0 ], [ %.023.be, %.backedge ]
  %.021 = phi i32 [ 1690891688, %0 ], [ %.021.be, %.backedge ]
  %.019 = phi i1 [ undef, %0 ], [ %.019.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.021, label %.backedge [
    i32 1690891688, label %7
    i32 694189725, label %10
    i32 -2124213551, label %12
    i32 -1852284019, label %14
    i32 666431721, label %18
    i32 -355700121, label %19
    i32 -429316941, label %29
    i32 327029601, label %40
    i32 -380280260, label %42
    i32 79321504, label %52
    i32 572114084, label %63
    i32 -1196762150, label %64
    i32 1843206823, label %66
    i32 425531919, label %68
    i32 588966248, label %78
    i32 178104391, label %89
    i32 1608868361, label %90
    i32 1584062982, label %91
    i32 747466101, label %92
  ]

.backedge:                                        ; preds = %5, %92, %91, %90, %78, %68, %66, %64, %63, %52, %42, %40, %29, %19, %18, %14, %12, %10, %7
  %.be = phi i32 [ %6, %5 ], [ %6, %92 ], [ %6, %91 ], [ %6, %90 ], [ %79, %78 ], [ %6, %68 ], [ %6, %66 ], [ %6, %64 ], [ %6, %63 ], [ %6, %52 ], [ %6, %42 ], [ %6, %40 ], [ %6, %29 ], [ %6, %19 ], [ %6, %18 ], [ %6, %14 ], [ %6, %12 ], [ %6, %10 ], [ %6, %7 ]
  %.027.be = phi i32 [ %.027, %5 ], [ %.027, %92 ], [ %.027, %91 ], [ %.027, %90 ], [ %.027, %78 ], [ %.027, %68 ], [ %.neg30, %66 ], [ %.027, %64 ], [ %.027, %63 ], [ %.027, %52 ], [ %.027, %42 ], [ %.027, %40 ], [ %.027, %29 ], [ %.027, %19 ], [ %.027, %18 ], [ %.027, %14 ], [ %.027, %12 ], [ %.027, %10 ], [ %.027, %7 ]
  %.025.be = phi i32 [ %.025, %5 ], [ %.025, %92 ], [ %.025, %91 ], [ %.025, %90 ], [ %.025, %78 ], [ %.025, %68 ], [ %.025, %66 ], [ %.025, %64 ], [ %.025, %63 ], [ %.025, %52 ], [ %.025, %42 ], [ %.025, %40 ], [ %.025, %29 ], [ %.025, %19 ], [ %.025, %18 ], [ %16, %14 ], [ %.025, %12 ], [ %.025, %10 ], [ %.025, %7 ]
  %.023.be = phi i32 [ %.023, %5 ], [ %.023, %92 ], [ %.023, %91 ], [ %.023, %90 ], [ %.023, %78 ], [ %.023, %68 ], [ %67, %66 ], [ %.023, %64 ], [ %.023, %63 ], [ %.023, %52 ], [ %.023, %42 ], [ %.023, %40 ], [ %.023, %29 ], [ %.023, %19 ], [ %.023, %18 ], [ %17, %14 ], [ %.023, %12 ], [ %.023, %10 ], [ %.023, %7 ]
  %.021.be = phi i32 [ %.021, %5 ], [ 588966248, %92 ], [ 79321504, %91 ], [ -429316941, %90 ], [ %88, %78 ], [ %77, %68 ], [ -355700121, %66 ], [ %65, %64 ], [ -1196762150, %63 ], [ %62, %52 ], [ %51, %42 ], [ %41, %40 ], [ %39, %29 ], [ %28, %19 ], [ -355700121, %18 ], [ 1690891688, %14 ], [ %13, %12 ], [ -2124213551, %10 ], [ %9, %7 ]
  %.019.be = phi i1 [ %.019, %5 ], [ %.019, %92 ], [ %.019, %91 ], [ %.019, %90 ], [ %.019, %78 ], [ %.019, %68 ], [ %.019, %66 ], [ %.019, %64 ], [ %.019, %63 ], [ %.019, %52 ], [ %.019, %42 ], [ %.019, %40 ], [ %.019, %29 ], [ %.019, %19 ], [ %.019, %18 ], [ %.019, %14 ], [ %.019, %12 ], [ %11, %10 ], [ true, %7 ]
  %.0.be = phi i1 [ %.0, %5 ], [ %.0, %92 ], [ %.0, %91 ], [ %.0, %90 ], [ %.0, %78 ], [ %.0, %68 ], [ %.0, %66 ], [ %.0, %64 ], [ %.0..0..0.17, %63 ], [ %.0, %52 ], [ %.0, %42 ], [ false, %40 ], [ %.0, %29 ], [ %.0, %19 ], [ %.0, %18 ], [ %.0, %14 ], [ %.0, %12 ], [ %.0, %10 ], [ %.0, %7 ]
  br label %5

7:                                                ; preds = %5
  %8 = icmp slt i32 %.023, 48
  %9 = select i1 %8, i32 -2124213551, i32 694189725
  br label %.backedge

10:                                               ; preds = %5
  %11 = icmp sgt i32 %.023, 57
  br label %.backedge

12:                                               ; preds = %5
  %13 = select i1 %.019, i32 -1852284019, i32 666431721
  br label %.backedge

14:                                               ; preds = %5
  %15 = icmp eq i32 %.023, 45
  %16 = select i1 %15, i32 -1, i32 1
  %17 = tail call i32 @getchar()
  br label %.backedge

18:                                               ; preds = %5
  br label %.backedge

19:                                               ; preds = %5
  %20 = load i32, i32* @x, align 4
  %21 = load i32, i32* @y, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -429316941, i32 1608868361
  br label %.backedge

29:                                               ; preds = %5
  %30 = icmp sgt i32 %.023, 47
  store i1 %30, i1* %3, align 1
  %31 = load i32, i32* @x, align 4
  %32 = load i32, i32* @y, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 327029601, i32 1608868361
  br label %.backedge

40:                                               ; preds = %5
  %.0..0..0.16 = load volatile i1, i1* %3, align 1
  %41 = select i1 %.0..0..0.16, i32 -380280260, i32 -1196762150
  br label %.backedge

42:                                               ; preds = %5
  %43 = load i32, i32* @x, align 4
  %44 = load i32, i32* @y, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 79321504, i32 1584062982
  br label %.backedge

52:                                               ; preds = %5
  %53 = icmp slt i32 %.023, 58
  store i1 %53, i1* %2, align 1
  %54 = load i32, i32* @x, align 4
  %55 = load i32, i32* @y, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 572114084, i32 1584062982
  br label %.backedge

63:                                               ; preds = %5
  %.0..0..0.17 = load volatile i1, i1* %2, align 1
  br label %.backedge

64:                                               ; preds = %5
  %65 = select i1 %.0, i32 1843206823, i32 425531919
  br label %.backedge

66:                                               ; preds = %5
  %.neg.neg = mul i32 %.027, 10
  %.neg29.neg = xor i32 %.023, 48
  %.neg30 = add i32 %.neg29.neg, %.neg.neg
  %67 = tail call i32 @getchar()
  br label %.backedge

68:                                               ; preds = %5
  %69 = load i32, i32* @x, align 4
  %70 = load i32, i32* @y, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 588966248, i32 747466101
  br label %.backedge

78:                                               ; preds = %5
  %79 = mul nsw i32 %.025, %.027
  %80 = load i32, i32* @x, align 4
  %81 = load i32, i32* @y, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 178104391, i32 747466101
  br label %.backedge

89:                                               ; preds = %5
  store i32 %6, i32* %1, align 4
  %.0..0..0.18 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.18

90:                                               ; preds = %5
  br label %.backedge

91:                                               ; preds = %5
  br label %.backedge

92:                                               ; preds = %5
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #1

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #2 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = tail call i32 @_Z4readv()
  %.neg = add i32 %3, 1
  %4 = sext i32 %.neg to i64
  store i64 %4, i64* @n, align 8
  %5 = tail call i32 @_Z4readv()
  %6 = add i32 %5, 1
  %7 = sext i32 %6 to i64
  store i64 %7, i64* @m, align 8
  %8 = tail call i32 @_Z4readv()
  %9 = sext i32 %8 to i64
  store i64 %9, i64* @mod, align 8
  %10 = load i64, i64* @m, align 8
  %11 = trunc i64 %10 to i32
  %12 = load i32, i32* @x.1, align 4
  %13 = load i32, i32* @y.2, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 286502917, i32 676470510
  %21 = select i1 %19, i32 -1121494978, i32 676470510
  %22 = select i1 %19, i32 -2053243280, i32 -1177280983
  %23 = select i1 %19, i32 -979536677, i32 -1177280983
  %24 = select i1 %19, i32 2058350345, i32 350295765
  %25 = select i1 %19, i32 558459177, i32 350295765
  %26 = select i1 %19, i32 540639266, i32 -1409876339
  %27 = select i1 %19, i32 1847092870, i32 -1409876339
  %28 = select i1 %19, i32 1337268036, i32 770342599
  %29 = select i1 %19, i32 -1251995427, i32 770342599
  %30 = load i64, i64* @n, align 8
  %31 = trunc i64 %30 to i32
  %32 = select i1 %19, i32 -2068649236, i32 -942962044
  %33 = select i1 %19, i32 1481893596, i32 -942962044
  br label %34

34:                                               ; preds = %.backedge, %0
  %.0106 = phi i32 [ 1, %0 ], [ %.0106.be, %.backedge ]
  %.0104 = phi i32 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0100 = phi i32 [ undef, %0 ], [ %.0100.be, %.backedge ]
  %.096 = phi i32 [ undef, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i32 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i32 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.0 = phi i32 [ -990825880, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -990825880, label %35
    i32 1928972081, label %37
    i32 99946939, label %46
    i32 401175430, label %48
    i32 1847036597, label %49
    i32 57293349, label %51
    i32 -442052598, label %55
    i32 -1661490513, label %56
    i32 -241743398, label %57
    i32 -1404703641, label %59
    i32 -991220584, label %61
    i32 1722841399, label %63
    i32 1481893596, label %64
    i32 -2068649236, label %78
    i32 -543814435, label %79
    i32 -1997228272, label %80
    i32 159503166, label %81
    i32 2121020783, label %82
    i32 268543018, label %83
    i32 -1251995427, label %84
    i32 1337268036, label %86
    i32 1615898633, label %88
    i32 2139505879, label %90
    i32 1539780212, label %92
    i32 306805836, label %93
    i32 -927818096, label %95
    i32 1847092870, label %96
    i32 540639266, label %103
    i32 -578509089, label %105
    i32 -786865941, label %130
    i32 -900842367, label %131
    i32 -297519101, label %132
    i32 -2085502977, label %133
    i32 558459177, label %134
    i32 2058350345, label %135
    i32 -156261714, label %136
    i32 -979536677, label %137
    i32 -2053243280, label %138
    i32 -2050699137, label %139
    i32 -1758314119, label %141
    i32 -1121494978, label %142
    i32 286502917, label %154
    i32 1046789179, label %155
    i32 2010591362, label %157
    i32 570076141, label %158
    i32 1674239271, label %160
    i32 -942962044, label %165
    i32 770342599, label %179
    i32 -1409876339, label %180
    i32 350295765, label %181
    i32 -1177280983, label %183
    i32 676470510, label %184
  ]

.backedge:                                        ; preds = %34, %184, %183, %181, %180, %179, %165, %158, %157, %155, %154, %142, %141, %139, %138, %137, %136, %135, %134, %133, %132, %131, %130, %105, %103, %96, %95, %93, %92, %90, %88, %86, %84, %83, %82, %81, %80, %79, %78, %64, %63, %61, %59, %57, %56, %55, %51, %49, %48, %46, %37, %35
  %.0106.be = phi i32 [ %.0106, %34 ], [ %.0106, %184 ], [ %.0106, %183 ], [ %.0106, %181 ], [ %.0106, %180 ], [ %.0106, %179 ], [ %.0106, %165 ], [ %.0106, %158 ], [ %.0106, %157 ], [ %.0106, %155 ], [ %.0106, %154 ], [ %.0106, %142 ], [ %.0106, %141 ], [ %.0106, %139 ], [ %.0106, %138 ], [ %.0106, %137 ], [ %.0106, %136 ], [ %.0106, %135 ], [ %.0106, %134 ], [ %.0106, %133 ], [ %.0106, %132 ], [ %.0106, %131 ], [ %.0106, %130 ], [ %.0106, %105 ], [ %.0106, %103 ], [ %.0106, %96 ], [ %.0106, %95 ], [ %.0106, %93 ], [ %.0106, %92 ], [ %.0106, %90 ], [ %.0106, %88 ], [ %.0106, %86 ], [ %.0106, %84 ], [ %.0106, %83 ], [ %.0106, %82 ], [ %.0106, %81 ], [ %.0106, %80 ], [ %.0106, %79 ], [ %.0106, %78 ], [ %.0106, %64 ], [ %.0106, %63 ], [ %.0106, %61 ], [ %.0106, %59 ], [ %.0106, %57 ], [ %.0106, %56 ], [ %.0106, %55 ], [ %.0106, %51 ], [ %.0106, %49 ], [ %.0106, %48 ], [ %47, %46 ], [ %.0106, %37 ], [ %.0106, %35 ]
  %.0104.be = phi i32 [ %.0104, %34 ], [ %.0104, %184 ], [ %.0104, %183 ], [ %.0104, %181 ], [ %.0104, %180 ], [ %.0104, %179 ], [ %.0104, %165 ], [ %.0104, %158 ], [ %.0104, %157 ], [ %.0104, %155 ], [ %.0104, %154 ], [ %.0104, %142 ], [ %.0104, %141 ], [ %.0104, %139 ], [ %.0104, %138 ], [ %.0104, %137 ], [ %.0104, %136 ], [ %.0104, %135 ], [ %.0104, %134 ], [ %.0104, %133 ], [ %.0104, %132 ], [ %.0104, %131 ], [ %.0104, %130 ], [ %.0104, %105 ], [ %.0104, %103 ], [ %.0104, %96 ], [ %.0104, %95 ], [ %.0104, %93 ], [ %.0104, %92 ], [ %.0104, %90 ], [ %.0104, %88 ], [ %.0104, %86 ], [ %.0104, %84 ], [ %.0104, %83 ], [ %.0104, %82 ], [ %.0104, %81 ], [ %.0104, %80 ], [ %.0104, %79 ], [ %.0104, %78 ], [ %.0104, %64 ], [ %.0104, %63 ], [ %.0104, %61 ], [ %.0104, %59 ], [ %.0104, %57 ], [ %.0104, %56 ], [ %.neg116, %55 ], [ %.0104, %51 ], [ %.0104, %49 ], [ 0, %48 ], [ %.0104, %46 ], [ %.0104, %37 ], [ %.0104, %35 ]
  %.0100.be = phi i32 [ %.0100, %34 ], [ %.0100, %184 ], [ %.0100, %183 ], [ %.0100, %181 ], [ %.0100, %180 ], [ %.0100, %179 ], [ %.0100, %165 ], [ %.0100, %158 ], [ %.0100, %157 ], [ %.0100, %155 ], [ %.0100, %154 ], [ %.0100, %142 ], [ %.0100, %141 ], [ %.0100, %139 ], [ %.0100, %138 ], [ %.0100, %137 ], [ %.0100, %136 ], [ %.0100, %135 ], [ %.0100, %134 ], [ %.0100, %133 ], [ %.0100, %132 ], [ %.0100, %131 ], [ %.0100, %130 ], [ %.0100, %105 ], [ %.0100, %103 ], [ %.0100, %96 ], [ %.0100, %95 ], [ %.0100, %93 ], [ %.0100, %92 ], [ %.0100, %90 ], [ %.0100, %88 ], [ %.0100, %86 ], [ %.0100, %84 ], [ %.0100, %83 ], [ %.0100, %82 ], [ %.neg112, %81 ], [ %.0100, %80 ], [ %.0100, %79 ], [ %.0100, %78 ], [ %.0100, %64 ], [ %.0100, %63 ], [ %.0100, %61 ], [ %.0100, %59 ], [ %.0100, %57 ], [ 1, %56 ], [ %.0100, %55 ], [ %.0100, %51 ], [ %.0100, %49 ], [ %.0100, %48 ], [ %.0100, %46 ], [ %.0100, %37 ], [ %.0100, %35 ]
  %.096.be = phi i32 [ %.096, %34 ], [ %.096, %184 ], [ %.096, %183 ], [ %.096, %181 ], [ %.096, %180 ], [ %.096, %179 ], [ %.096, %165 ], [ %.096, %158 ], [ %.096, %157 ], [ %.096, %155 ], [ %.096, %154 ], [ %.096, %142 ], [ %.096, %141 ], [ %.096, %139 ], [ %.096, %138 ], [ %.096, %137 ], [ %.096, %136 ], [ %.096, %135 ], [ %.096, %134 ], [ %.096, %133 ], [ %.096, %132 ], [ %.096, %131 ], [ %.096, %130 ], [ %.096, %105 ], [ %.096, %103 ], [ %.096, %96 ], [ %.096, %95 ], [ %.096, %93 ], [ %.096, %92 ], [ %.096, %90 ], [ %.096, %88 ], [ %.096, %86 ], [ %.096, %84 ], [ %.096, %83 ], [ %.096, %82 ], [ %.096, %81 ], [ %.096, %80 ], [ %.neg113, %79 ], [ %.096, %78 ], [ %.096, %64 ], [ %.096, %63 ], [ %.096, %61 ], [ 1, %59 ], [ %.096, %57 ], [ %.096, %56 ], [ %.096, %55 ], [ %.096, %51 ], [ %.096, %49 ], [ %.096, %48 ], [ %.096, %46 ], [ %.096, %37 ], [ %.096, %35 ]
  %.094.be = phi i32 [ %.094, %34 ], [ %.094, %184 ], [ %.094, %183 ], [ %.094, %181 ], [ %.094, %180 ], [ %.094, %179 ], [ %.094, %165 ], [ %.094, %158 ], [ %.094, %157 ], [ %.094, %155 ], [ %.094, %154 ], [ %.094, %142 ], [ %.094, %141 ], [ %.094, %139 ], [ %.094, %138 ], [ %.094, %137 ], [ %.094, %136 ], [ %.094, %135 ], [ %.094, %134 ], [ %.094, %133 ], [ %.094, %132 ], [ %.094, %131 ], [ %.094, %130 ], [ %.094, %105 ], [ %.094, %103 ], [ %.094, %96 ], [ %.094, %95 ], [ %.094, %93 ], [ %.094, %92 ], [ %.094, %90 ], [ %.094, %88 ], [ %.094, %86 ], [ %.094, %84 ], [ %.094, %83 ], [ %.094, %82 ], [ %.094, %81 ], [ %.094, %80 ], [ %.094, %79 ], [ %.094, %78 ], [ %.094, %64 ], [ %.094, %63 ], [ %.094, %61 ], [ %60, %59 ], [ %.094, %57 ], [ %.094, %56 ], [ %.094, %55 ], [ %.094, %51 ], [ %.094, %49 ], [ %.094, %48 ], [ %.094, %46 ], [ %.094, %37 ], [ %.094, %35 ]
  %.092.be = phi i32 [ %.092, %34 ], [ %.092, %184 ], [ %.092, %183 ], [ %.092, %181 ], [ %.092, %180 ], [ %.092, %179 ], [ %.092, %165 ], [ %159, %158 ], [ %.092, %157 ], [ %.092, %155 ], [ %.092, %154 ], [ %.092, %142 ], [ %.092, %141 ], [ %.092, %139 ], [ %.092, %138 ], [ %.092, %137 ], [ %.092, %136 ], [ %.092, %135 ], [ %.092, %134 ], [ %.092, %133 ], [ %.092, %132 ], [ %.092, %131 ], [ %.092, %130 ], [ %.092, %105 ], [ %.092, %103 ], [ %.092, %96 ], [ %.092, %95 ], [ %.092, %93 ], [ %.092, %92 ], [ %.092, %90 ], [ %.092, %88 ], [ %.092, %86 ], [ %.092, %84 ], [ %.092, %83 ], [ 2, %82 ], [ %.092, %81 ], [ %.092, %80 ], [ %.092, %79 ], [ %.092, %78 ], [ %.092, %64 ], [ %.092, %63 ], [ %.092, %61 ], [ %.092, %59 ], [ %.092, %57 ], [ %.092, %56 ], [ %.092, %55 ], [ %.092, %51 ], [ %.092, %49 ], [ %.092, %48 ], [ %.092, %46 ], [ %.092, %37 ], [ %.092, %35 ]
  %.088.be = phi i32 [ %.088, %34 ], [ %.088, %184 ], [ %.088, %183 ], [ %182, %181 ], [ %.088, %180 ], [ %.088, %179 ], [ %.088, %165 ], [ %.088, %158 ], [ %.088, %157 ], [ %.088, %155 ], [ %.088, %154 ], [ %.088, %142 ], [ %.088, %141 ], [ %.088, %139 ], [ %.088, %138 ], [ %.088, %137 ], [ %.088, %136 ], [ %.088, %135 ], [ %.neg108, %134 ], [ %.088, %133 ], [ %.088, %132 ], [ %.088, %131 ], [ %.088, %130 ], [ %.088, %105 ], [ %.088, %103 ], [ %.088, %96 ], [ %.088, %95 ], [ %.088, %93 ], [ %.088, %92 ], [ %.088, %90 ], [ 1, %88 ], [ %.088, %86 ], [ %.088, %84 ], [ %.088, %83 ], [ %.088, %82 ], [ %.088, %81 ], [ %.088, %80 ], [ %.088, %79 ], [ %.088, %78 ], [ %.088, %64 ], [ %.088, %63 ], [ %.088, %61 ], [ %.088, %59 ], [ %.088, %57 ], [ %.088, %56 ], [ %.088, %55 ], [ %.088, %51 ], [ %.088, %49 ], [ %.088, %48 ], [ %.088, %46 ], [ %.088, %37 ], [ %.088, %35 ]
  %.086.be = phi i32 [ %.086, %34 ], [ %.086, %184 ], [ %.086, %183 ], [ %.086, %181 ], [ %.086, %180 ], [ %.086, %179 ], [ %.086, %165 ], [ %.086, %158 ], [ %.086, %157 ], [ %.086, %155 ], [ %.086, %154 ], [ %.086, %142 ], [ %.086, %141 ], [ %.086, %139 ], [ %.086, %138 ], [ %.086, %137 ], [ %.086, %136 ], [ %.086, %135 ], [ %.086, %134 ], [ %.086, %133 ], [ %.086, %132 ], [ %.086, %131 ], [ %.086, %130 ], [ %.086, %105 ], [ %.086, %103 ], [ %.086, %96 ], [ %.086, %95 ], [ %.086, %93 ], [ %.086, %92 ], [ %.086, %90 ], [ %89, %88 ], [ %.086, %86 ], [ %.086, %84 ], [ %.086, %83 ], [ %.086, %82 ], [ %.086, %81 ], [ %.086, %80 ], [ %.086, %79 ], [ %.086, %78 ], [ %.086, %64 ], [ %.086, %63 ], [ %.086, %61 ], [ %.086, %59 ], [ %.086, %57 ], [ %.086, %56 ], [ %.086, %55 ], [ %.086, %51 ], [ %.086, %49 ], [ %.086, %48 ], [ %.086, %46 ], [ %.086, %37 ], [ %.086, %35 ]
  %.084.be = phi i32 [ %.084, %34 ], [ %.084, %184 ], [ %.084, %183 ], [ %.084, %181 ], [ %.084, %180 ], [ %.084, %179 ], [ %.084, %165 ], [ %.084, %158 ], [ %.084, %157 ], [ %.084, %155 ], [ %.084, %154 ], [ %.084, %142 ], [ %.084, %141 ], [ %.084, %139 ], [ %.084, %138 ], [ %.084, %137 ], [ %.084, %136 ], [ %.084, %135 ], [ %.084, %134 ], [ %.084, %133 ], [ %.084, %132 ], [ %.neg109, %131 ], [ %.084, %130 ], [ %.084, %105 ], [ %.084, %103 ], [ %.084, %96 ], [ %.084, %95 ], [ %.084, %93 ], [ 1, %92 ], [ %.084, %90 ], [ %.084, %88 ], [ %.084, %86 ], [ %.084, %84 ], [ %.084, %83 ], [ %.084, %82 ], [ %.084, %81 ], [ %.084, %80 ], [ %.084, %79 ], [ %.084, %78 ], [ %.084, %64 ], [ %.084, %63 ], [ %.084, %61 ], [ %.084, %59 ], [ %.084, %57 ], [ %.084, %56 ], [ %.084, %55 ], [ %.084, %51 ], [ %.084, %49 ], [ %.084, %48 ], [ %.084, %46 ], [ %.084, %37 ], [ %.084, %35 ]
  %.080.be = phi i32 [ %.080, %34 ], [ %.080, %184 ], [ 1, %183 ], [ %.080, %181 ], [ %.080, %180 ], [ %.080, %179 ], [ %.080, %165 ], [ %.080, %158 ], [ %.080, %157 ], [ %156, %155 ], [ %.080, %154 ], [ %.080, %142 ], [ %.080, %141 ], [ %.080, %139 ], [ %.080, %138 ], [ 1, %137 ], [ %.080, %136 ], [ %.080, %135 ], [ %.080, %134 ], [ %.080, %133 ], [ %.080, %132 ], [ %.080, %131 ], [ %.080, %130 ], [ %.080, %105 ], [ %.080, %103 ], [ %.080, %96 ], [ %.080, %95 ], [ %.080, %93 ], [ %.080, %92 ], [ %.080, %90 ], [ %.080, %88 ], [ %.080, %86 ], [ %.080, %84 ], [ %.080, %83 ], [ %.080, %82 ], [ %.080, %81 ], [ %.080, %80 ], [ %.080, %79 ], [ %.080, %78 ], [ %.080, %64 ], [ %.080, %63 ], [ %.080, %61 ], [ %.080, %59 ], [ %.080, %57 ], [ %.080, %56 ], [ %.080, %55 ], [ %.080, %51 ], [ %.080, %49 ], [ %.080, %48 ], [ %.080, %46 ], [ %.080, %37 ], [ %.080, %35 ]
  %.0.be = phi i32 [ %.0, %34 ], [ -1121494978, %184 ], [ -979536677, %183 ], [ 558459177, %181 ], [ 1847092870, %180 ], [ -1251995427, %179 ], [ 1481893596, %165 ], [ 268543018, %158 ], [ 570076141, %157 ], [ -2050699137, %155 ], [ 1046789179, %154 ], [ %20, %142 ], [ %21, %141 ], [ %140, %139 ], [ -2050699137, %138 ], [ %22, %137 ], [ %23, %136 ], [ 2139505879, %135 ], [ %24, %134 ], [ %25, %133 ], [ -2085502977, %132 ], [ 306805836, %131 ], [ -900842367, %130 ], [ -786865941, %105 ], [ %104, %103 ], [ %26, %96 ], [ %27, %95 ], [ %94, %93 ], [ 306805836, %92 ], [ %91, %90 ], [ 2139505879, %88 ], [ %87, %86 ], [ %28, %84 ], [ %29, %83 ], [ 268543018, %82 ], [ -241743398, %81 ], [ 159503166, %80 ], [ -991220584, %79 ], [ -543814435, %78 ], [ %32, %64 ], [ %33, %63 ], [ %62, %61 ], [ -991220584, %59 ], [ %58, %57 ], [ -241743398, %56 ], [ 1847036597, %55 ], [ -442052598, %51 ], [ %50, %49 ], [ 1847036597, %48 ], [ -990825880, %46 ], [ 99946939, %37 ], [ %36, %35 ]
  br label %34

35:                                               ; preds = %34
  %.not118 = icmp sgt i32 %.0106, %11
  %36 = select i1 %.not118, i32 401175430, i32 1928972081
  br label %.backedge

37:                                               ; preds = %34
  %38 = add i32 %.0106, -1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @F, i64 0, i64 1, i64 %39
  %41 = load i64, i64* %40, align 8
  %42 = sext i32 %.0106 to i64
  %43 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @f, i64 0, i64 1, i64 %42
  store i64 1, i64* %43, align 8
  %44 = add i64 %41, 1
  %45 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @F, i64 0, i64 1, i64 %42
  store i64 %44, i64* %45, align 8
  br label %.backedge

46:                                               ; preds = %34
  %47 = add i32 %.0106, 1
  br label %.backedge

48:                                               ; preds = %34
  br label %.backedge

49:                                               ; preds = %34
  %.not117 = icmp sgt i32 %.0104, %31
  %50 = select i1 %.not117, i32 -1661490513, i32 57293349
  br label %.backedge

51:                                               ; preds = %34
  %52 = sext i32 %.0104 to i64
  %53 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @C, i64 0, i64 %52, i64 %52
  store i64 1, i64* %53, align 8
  %54 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @C, i64 0, i64 %52, i64 0
  store i64 1, i64* %54, align 16
  br label %.backedge

55:                                               ; preds = %34
  %.neg116 = add i32 %.0104, 1
  br label %.backedge

56:                                               ; preds = %34
  br label %.backedge

57:                                               ; preds = %34
  %.not115 = icmp sgt i32 %.0100, %31
  %58 = select i1 %.not115, i32 2121020783, i32 -1404703641
  br label %.backedge

59:                                               ; preds = %34
  %60 = add i32 %.0100, -1
  br label %.backedge

61:                                               ; preds = %34
  %.not114 = icmp sgt i32 %.096, %.094
  %62 = select i1 %.not114, i32 -1997228272, i32 1722841399
  br label %.backedge

63:                                               ; preds = %34
  br label %.backedge

64:                                               ; preds = %34
  %65 = add i32 %.0100, -1
  %66 = sext i32 %65 to i64
  %67 = add i32 %.096, -1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @C, i64 0, i64 %66, i64 %68
  %70 = load i64, i64* %69, align 8
  %71 = sext i32 %.096 to i64
  %72 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @C, i64 0, i64 %66, i64 %71
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, %70
  %75 = srem i64 %74, %9
  %76 = sext i32 %.0100 to i64
  %77 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @C, i64 0, i64 %76, i64 %71
  store i64 %75, i64* %77, align 8
  br label %.backedge

78:                                               ; preds = %34
  br label %.backedge

79:                                               ; preds = %34
  %.neg113 = add i32 %.096, 1
  br label %.backedge

80:                                               ; preds = %34
  br label %.backedge

81:                                               ; preds = %34
  %.neg112 = add i32 %.0100, 1
  br label %.backedge

82:                                               ; preds = %34
  br label %.backedge

83:                                               ; preds = %34
  br label %.backedge

84:                                               ; preds = %34
  %85 = icmp sle i32 %.092, %31
  store i1 %85, i1* %2, align 1
  br label %.backedge

86:                                               ; preds = %34
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %87 = select i1 %.0..0..0., i32 1615898633, i32 1674239271
  br label %.backedge

88:                                               ; preds = %34
  %89 = add i32 %.092, -1
  br label %.backedge

90:                                               ; preds = %34
  %.not111 = icmp sgt i32 %.088, %.086
  %91 = select i1 %.not111, i32 -156261714, i32 1539780212
  br label %.backedge

92:                                               ; preds = %34
  br label %.backedge

93:                                               ; preds = %34
  %.not110 = icmp sgt i32 %.084, %11
  %94 = select i1 %.not110, i32 -297519101, i32 -927818096
  br label %.backedge

95:                                               ; preds = %34
  br label %.backedge

96:                                               ; preds = %34
  %97 = sub i32 %.092, %.088
  %98 = sext i32 %97 to i64
  %99 = sext i32 %.084 to i64
  %100 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @f, i64 0, i64 %98, i64 %99
  %101 = load i64, i64* %100, align 8
  %102 = icmp ne i64 %101, 0
  store i1 %102, i1* %1, align 1
  br label %.backedge

103:                                              ; preds = %34
  %.0..0..0.77 = load volatile i1, i1* %1, align 1
  %104 = select i1 %.0..0..0.77, i32 -578509089, i32 -786865941
  br label %.backedge

105:                                              ; preds = %34
  %106 = sext i32 %.092 to i64
  %107 = sext i32 %.084 to i64
  %108 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @f, i64 0, i64 %106, i64 %107
  %109 = load i64, i64* %108, align 8
  %110 = sub i32 %.092, %.088
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @f, i64 0, i64 %111, i64 %107
  %113 = load i64, i64* %112, align 8
  %114 = sext i32 %.088 to i64
  %115 = add i32 %.084, -1
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @F, i64 0, i64 %114, i64 %116
  %118 = load i64, i64* %117, align 8
  %119 = mul nsw i64 %118, %113
  %120 = srem i64 %119, %9
  %121 = add i32 %.092, -2
  %122 = sext i32 %121 to i64
  %123 = add i32 %.088, -1
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @C, i64 0, i64 %122, i64 %124
  %126 = load i64, i64* %125, align 8
  %127 = mul nsw i64 %126, %120
  %128 = add i64 %127, %109
  %129 = srem i64 %128, %9
  store i64 %129, i64* %108, align 8
  br label %.backedge

130:                                              ; preds = %34
  br label %.backedge

131:                                              ; preds = %34
  %.neg109 = add i32 %.084, 1
  br label %.backedge

132:                                              ; preds = %34
  br label %.backedge

133:                                              ; preds = %34
  br label %.backedge

134:                                              ; preds = %34
  %.neg108 = add i32 %.088, 1
  br label %.backedge

135:                                              ; preds = %34
  br label %.backedge

136:                                              ; preds = %34
  br label %.backedge

137:                                              ; preds = %34
  br label %.backedge

138:                                              ; preds = %34
  br label %.backedge

139:                                              ; preds = %34
  %.not = icmp sgt i32 %.080, %11
  %140 = select i1 %.not, i32 2010591362, i32 -1758314119
  br label %.backedge

141:                                              ; preds = %34
  br label %.backedge

142:                                              ; preds = %34
  %143 = sext i32 %.092 to i64
  %144 = add i32 %.080, -1
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @F, i64 0, i64 %143, i64 %145
  %147 = load i64, i64* %146, align 8
  %148 = sext i32 %.080 to i64
  %149 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @f, i64 0, i64 %143, i64 %148
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, %147
  %152 = srem i64 %151, %9
  %153 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @F, i64 0, i64 %143, i64 %148
  store i64 %152, i64* %153, align 8
  br label %.backedge

154:                                              ; preds = %34
  br label %.backedge

155:                                              ; preds = %34
  %156 = add i32 %.080, 1
  br label %.backedge

157:                                              ; preds = %34
  br label %.backedge

158:                                              ; preds = %34
  %159 = add i32 %.092, 1
  br label %.backedge

160:                                              ; preds = %34
  %161 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @f, i64 0, i64 %30, i64 %10
  %162 = load i64, i64* %161, align 8
  %163 = trunc i64 %162 to i32
  %164 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %163)
  ret i32 0

165:                                              ; preds = %34
  %166 = add i32 %.0100, -1
  %167 = sext i32 %166 to i64
  %168 = add i32 %.096, -1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @C, i64 0, i64 %167, i64 %169
  %171 = load i64, i64* %170, align 8
  %172 = sext i32 %.096 to i64
  %173 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @C, i64 0, i64 %167, i64 %172
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, %171
  %176 = srem i64 %175, %9
  %177 = sext i32 %.0100 to i64
  %178 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @C, i64 0, i64 %177, i64 %172
  store i64 %176, i64* %178, align 8
  br label %.backedge

179:                                              ; preds = %34
  br label %.backedge

180:                                              ; preds = %34
  br label %.backedge

181:                                              ; preds = %34
  %182 = add i32 %.088, 1
  br label %.backedge

183:                                              ; preds = %34
  br label %.backedge

184:                                              ; preds = %34
  %185 = sext i32 %.092 to i64
  %186 = add i32 %.080, -1
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @F, i64 0, i64 %185, i64 %187
  %189 = load i64, i64* %188, align 8
  %190 = sext i32 %.080 to i64
  %191 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @f, i64 0, i64 %185, i64 %190
  %192 = load i64, i64* %191, align 8
  %193 = add i64 %192, %189
  %194 = srem i64 %193, %9
  %195 = getelementptr inbounds [310 x [310 x i64]], [310 x [310 x i64]]* @F, i64 0, i64 %185, i64 %190
  store i64 %194, i64* %195, align 8
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
