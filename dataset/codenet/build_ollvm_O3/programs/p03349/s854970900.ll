; ModuleID = 'build_ollvm/programs/p03349/s854970900.ll'
source_filename = "Project_CodeNet_C++1400/p03349/s854970900.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@q = local_unnamed_addr global [303 x [303 x [303 x i32]]] zeroinitializer, align 16
@f = local_unnamed_addr global [303 x [303 x i32]] zeroinitializer, align 16
@g = local_unnamed_addr global [303 x i32] zeroinitializer, align 16
@nck = local_unnamed_addr global [303 x [303 x i32]] zeroinitializer, align 16
@n = global i32 0, align 4
@k = global i32 0, align 4
@m = global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s854970900.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 899665948, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 899665948, label %11
    i32 1760618662, label %14
    i32 1586322624, label %25
    i32 -70822660, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1760618662, i32 -70822660
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 1586322624, i32 -70822660
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1760618662, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %8 = getelementptr i8, i8* %7, i64 -24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %10
  %12 = bitcast i8* %11 to %"class.std::basic_ios"*
  %13 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %12, %"class.std::basic_ostream"* null)
  %14 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %15 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  %16 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %15, i32* nonnull dereferenceable(4) @k)
  %17 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %16, i32* nonnull dereferenceable(4) @m)
  %18 = load i32, i32* @n, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* @n, align 4
  br label %20

20:                                               ; preds = %.backedge, %0
  %.0125 = phi i32 [ 0, %0 ], [ %.0125.be, %.backedge ]
  %.0123 = phi i32 [ undef, %0 ], [ %.0123.be, %.backedge ]
  %.0121 = phi i32 [ undef, %0 ], [ %.0121.be, %.backedge ]
  %.0119 = phi i32 [ undef, %0 ], [ %.0119.be, %.backedge ]
  %.0117 = phi i32 [ undef, %0 ], [ %.0117.be, %.backedge ]
  %.0115 = phi i32 [ undef, %0 ], [ %.0115.be, %.backedge ]
  %.0113 = phi i32 [ undef, %0 ], [ %.0113.be, %.backedge ]
  %.0111 = phi i32 [ undef, %0 ], [ %.0111.be, %.backedge ]
  %.0109 = phi i32 [ undef, %0 ], [ %.0109.be, %.backedge ]
  %.0107 = phi i32 [ undef, %0 ], [ %.0107.be, %.backedge ]
  %.0105 = phi i32 [ undef, %0 ], [ %.0105.be, %.backedge ]
  %.0103 = phi i32 [ undef, %0 ], [ %.0103.be, %.backedge ]
  %.0 = phi i32 [ 1569073253, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1569073253, label %21
    i32 -1070625497, label %24
    i32 -1213077510, label %25
    i32 289058131, label %28
    i32 -245648652, label %31
    i32 -1426852824, label %35
    i32 1335609246, label %37
    i32 212932594, label %41
    i32 1313803974, label %56
    i32 -703049498, label %57
    i32 -5917325, label %58
    i32 -1051896954, label %60
    i32 -2099825963, label %61
    i32 104548211, label %63
    i32 -1688551809, label %64
    i32 -346296022, label %74
    i32 -1473615744, label %86
    i32 194680091, label %88
    i32 1773400087, label %98
    i32 1393094293, label %108
    i32 1386393527, label %109
    i32 1859064799, label %112
    i32 947676901, label %113
    i32 -1228515741, label %118
    i32 -1111956840, label %128
    i32 -405687160, label %166
    i32 -777482842, label %167
    i32 720803409, label %168
    i32 -53430663, label %169
    i32 -1916854699, label %171
    i32 958370081, label %172
    i32 2067146824, label %174
    i32 1561875612, label %175
    i32 1632480383, label %178
    i32 817304660, label %181
    i32 122361692, label %184
    i32 1274998333, label %194
    i32 608980194, label %205
    i32 -523374777, label %206
    i32 360871051, label %216
    i32 315438034, label %227
    i32 584500139, label %229
    i32 -1640113023, label %239
    i32 -581673127, label %254
    i32 1683429543, label %256
    i32 1745538501, label %257
    i32 -938361949, label %262
    i32 -499045674, label %267
    i32 -1617744984, label %294
    i32 -1085432377, label %296
    i32 1763253839, label %306
    i32 1126697538, label %316
    i32 -1111569026, label %317
    i32 -2089034162, label %319
    i32 1870103868, label %329
    i32 591913821, label %339
    i32 -328648856, label %340
    i32 616339745, label %342
    i32 -921004179, label %343
    i32 -1981521868, label %353
    i32 -1014799954, label %365
    i32 1401623782, label %367
    i32 1771553409, label %377
    i32 -1206355288, label %396
    i32 -427121838, label %398
    i32 -504635107, label %404
    i32 -642983899, label %405
    i32 -2073653519, label %415
    i32 -1017643934, label %426
    i32 -725252042, label %427
    i32 -1720228044, label %437
    i32 -1161554756, label %447
    i32 502303300, label %448
    i32 -1103086531, label %450
    i32 357119502, label %460
    i32 128256766, label %478
    i32 1234892512, label %479
    i32 -767862777, label %480
    i32 1851774654, label %481
    i32 1557222027, label %510
    i32 1837412470, label %512
    i32 1202135218, label %513
    i32 1948292915, label %514
    i32 -832845770, label %515
    i32 1833168765, label %516
    i32 1946076382, label %517
    i32 -893719159, label %525
    i32 -718909673, label %527
    i32 1006268103, label %528
  ]

.backedge:                                        ; preds = %20, %528, %527, %525, %517, %516, %515, %514, %513, %512, %510, %481, %480, %479, %460, %450, %448, %447, %437, %427, %426, %415, %405, %404, %398, %396, %377, %367, %365, %353, %343, %342, %340, %339, %329, %319, %317, %316, %306, %296, %294, %267, %262, %257, %256, %254, %239, %229, %227, %216, %206, %205, %194, %184, %181, %178, %175, %174, %172, %171, %169, %168, %167, %166, %128, %118, %113, %112, %109, %108, %98, %88, %86, %74, %64, %63, %61, %60, %58, %57, %56, %41, %37, %35, %31, %28, %25, %24, %21
  %.0125.be = phi i32 [ %.0125, %20 ], [ %.0125, %528 ], [ %.0125, %527 ], [ %.0125, %525 ], [ %.0125, %517 ], [ %.0125, %516 ], [ %.0125, %515 ], [ %.0125, %514 ], [ %.0125, %513 ], [ %.0125, %512 ], [ %.0125, %510 ], [ %.0125, %481 ], [ %.0125, %480 ], [ %.0125, %479 ], [ %.0125, %460 ], [ %.0125, %450 ], [ %.0125, %448 ], [ %.0125, %447 ], [ %.0125, %437 ], [ %.0125, %427 ], [ %.0125, %426 ], [ %.0125, %415 ], [ %.0125, %405 ], [ %.0125, %404 ], [ %.0125, %398 ], [ %.0125, %396 ], [ %.0125, %377 ], [ %.0125, %367 ], [ %.0125, %365 ], [ %.0125, %353 ], [ %.0125, %343 ], [ %.0125, %342 ], [ %.0125, %340 ], [ %.0125, %339 ], [ %.0125, %329 ], [ %.0125, %319 ], [ %.0125, %317 ], [ %.0125, %316 ], [ %.0125, %306 ], [ %.0125, %296 ], [ %.0125, %294 ], [ %.0125, %267 ], [ %.0125, %262 ], [ %.0125, %257 ], [ %.0125, %256 ], [ %.0125, %254 ], [ %.0125, %239 ], [ %.0125, %229 ], [ %.0125, %227 ], [ %.0125, %216 ], [ %.0125, %206 ], [ %.0125, %205 ], [ %.0125, %194 ], [ %.0125, %184 ], [ %.0125, %181 ], [ %.0125, %178 ], [ %.0125, %175 ], [ %.0125, %174 ], [ %.0125, %172 ], [ %.0125, %171 ], [ %.0125, %169 ], [ %.0125, %168 ], [ %.0125, %167 ], [ %.0125, %166 ], [ %.0125, %128 ], [ %.0125, %118 ], [ %.0125, %113 ], [ %.0125, %112 ], [ %.0125, %109 ], [ %.0125, %108 ], [ %.0125, %98 ], [ %.0125, %88 ], [ %.0125, %86 ], [ %.0125, %74 ], [ %.0125, %64 ], [ %.0125, %63 ], [ %62, %61 ], [ %.0125, %60 ], [ %.0125, %58 ], [ %.0125, %57 ], [ %.0125, %56 ], [ %.0125, %41 ], [ %.0125, %37 ], [ %.0125, %35 ], [ %.0125, %31 ], [ %.0125, %28 ], [ %.0125, %25 ], [ %.0125, %24 ], [ %.0125, %21 ]
  %.0123.be = phi i32 [ %.0123, %20 ], [ %.0123, %528 ], [ %.0123, %527 ], [ %.0123, %525 ], [ %.0123, %517 ], [ %.0123, %516 ], [ %.0123, %515 ], [ %.0123, %514 ], [ %.0123, %513 ], [ %.0123, %512 ], [ %.0123, %510 ], [ %.0123, %481 ], [ %.0123, %480 ], [ %.0123, %479 ], [ %.0123, %460 ], [ %.0123, %450 ], [ %.0123, %448 ], [ %.0123, %447 ], [ %.0123, %437 ], [ %.0123, %427 ], [ %.0123, %426 ], [ %.0123, %415 ], [ %.0123, %405 ], [ %.0123, %404 ], [ %.0123, %398 ], [ %.0123, %396 ], [ %.0123, %377 ], [ %.0123, %367 ], [ %.0123, %365 ], [ %.0123, %353 ], [ %.0123, %343 ], [ %.0123, %342 ], [ %.0123, %340 ], [ %.0123, %339 ], [ %.0123, %329 ], [ %.0123, %319 ], [ %.0123, %317 ], [ %.0123, %316 ], [ %.0123, %306 ], [ %.0123, %296 ], [ %.0123, %294 ], [ %.0123, %267 ], [ %.0123, %262 ], [ %.0123, %257 ], [ %.0123, %256 ], [ %.0123, %254 ], [ %.0123, %239 ], [ %.0123, %229 ], [ %.0123, %227 ], [ %.0123, %216 ], [ %.0123, %206 ], [ %.0123, %205 ], [ %.0123, %194 ], [ %.0123, %184 ], [ %.0123, %181 ], [ %.0123, %178 ], [ %.0123, %175 ], [ %.0123, %174 ], [ %.0123, %172 ], [ %.0123, %171 ], [ %.0123, %169 ], [ %.0123, %168 ], [ %.0123, %167 ], [ %.0123, %166 ], [ %.0123, %128 ], [ %.0123, %118 ], [ %.0123, %113 ], [ %.0123, %112 ], [ %.0123, %109 ], [ %.0123, %108 ], [ %.0123, %98 ], [ %.0123, %88 ], [ %.0123, %86 ], [ %.0123, %74 ], [ %.0123, %64 ], [ %.0123, %63 ], [ %.0123, %61 ], [ %.0123, %60 ], [ %59, %58 ], [ %.0123, %57 ], [ %.0123, %56 ], [ %.0123, %41 ], [ %.0123, %37 ], [ %.0123, %35 ], [ %.0123, %31 ], [ %.0123, %28 ], [ %.0123, %25 ], [ 0, %24 ], [ %.0123, %21 ]
  %.0121.be = phi i32 [ %.0121, %20 ], [ %.0121, %528 ], [ %.0121, %527 ], [ %.0121, %525 ], [ %.0121, %517 ], [ %.0121, %516 ], [ %.0121, %515 ], [ %.0121, %514 ], [ %.0121, %513 ], [ %.0121, %512 ], [ %.0121, %510 ], [ %.0121, %481 ], [ %.0121, %480 ], [ %.0121, %479 ], [ %.0121, %460 ], [ %.0121, %450 ], [ %.0121, %448 ], [ %.0121, %447 ], [ %.0121, %437 ], [ %.0121, %427 ], [ %.0121, %426 ], [ %.0121, %415 ], [ %.0121, %405 ], [ %.0121, %404 ], [ %.0121, %398 ], [ %.0121, %396 ], [ %.0121, %377 ], [ %.0121, %367 ], [ %.0121, %365 ], [ %.0121, %353 ], [ %.0121, %343 ], [ %.0121, %342 ], [ %.0121, %340 ], [ %.0121, %339 ], [ %.0121, %329 ], [ %.0121, %319 ], [ %.0121, %317 ], [ %.0121, %316 ], [ %.0121, %306 ], [ %.0121, %296 ], [ %.0121, %294 ], [ %.0121, %267 ], [ %.0121, %262 ], [ %.0121, %257 ], [ %.0121, %256 ], [ %.0121, %254 ], [ %.0121, %239 ], [ %.0121, %229 ], [ %.0121, %227 ], [ %.0121, %216 ], [ %.0121, %206 ], [ %.0121, %205 ], [ %.0121, %194 ], [ %.0121, %184 ], [ %.0121, %181 ], [ %.0121, %178 ], [ %.0121, %175 ], [ %.0121, %174 ], [ %173, %172 ], [ %.0121, %171 ], [ %.0121, %169 ], [ %.0121, %168 ], [ %.0121, %167 ], [ %.0121, %166 ], [ %.0121, %128 ], [ %.0121, %118 ], [ %.0121, %113 ], [ %.0121, %112 ], [ %.0121, %109 ], [ %.0121, %108 ], [ %.0121, %98 ], [ %.0121, %88 ], [ %.0121, %86 ], [ %.0121, %74 ], [ %.0121, %64 ], [ 1, %63 ], [ %.0121, %61 ], [ %.0121, %60 ], [ %.0121, %58 ], [ %.0121, %57 ], [ %.0121, %56 ], [ %.0121, %41 ], [ %.0121, %37 ], [ %.0121, %35 ], [ %.0121, %31 ], [ %.0121, %28 ], [ %.0121, %25 ], [ %.0121, %24 ], [ %.0121, %21 ]
  %.0119.be = phi i32 [ %.0119, %20 ], [ %.0119, %528 ], [ %.0119, %527 ], [ %.0119, %525 ], [ %.0119, %517 ], [ %.0119, %516 ], [ %.0119, %515 ], [ %.0119, %514 ], [ %.0119, %513 ], [ %.0119, %512 ], [ %.0119, %510 ], [ %.0119, %481 ], [ 1, %480 ], [ %.0119, %479 ], [ %.0119, %460 ], [ %.0119, %450 ], [ %.0119, %448 ], [ %.0119, %447 ], [ %.0119, %437 ], [ %.0119, %427 ], [ %.0119, %426 ], [ %.0119, %415 ], [ %.0119, %405 ], [ %.0119, %404 ], [ %.0119, %398 ], [ %.0119, %396 ], [ %.0119, %377 ], [ %.0119, %367 ], [ %.0119, %365 ], [ %.0119, %353 ], [ %.0119, %343 ], [ %.0119, %342 ], [ %.0119, %340 ], [ %.0119, %339 ], [ %.0119, %329 ], [ %.0119, %319 ], [ %.0119, %317 ], [ %.0119, %316 ], [ %.0119, %306 ], [ %.0119, %296 ], [ %.0119, %294 ], [ %.0119, %267 ], [ %.0119, %262 ], [ %.0119, %257 ], [ %.0119, %256 ], [ %.0119, %254 ], [ %.0119, %239 ], [ %.0119, %229 ], [ %.0119, %227 ], [ %.0119, %216 ], [ %.0119, %206 ], [ %.0119, %205 ], [ %.0119, %194 ], [ %.0119, %184 ], [ %.0119, %181 ], [ %.0119, %178 ], [ %.0119, %175 ], [ %.0119, %174 ], [ %.0119, %172 ], [ %.0119, %171 ], [ %170, %169 ], [ %.0119, %168 ], [ %.0119, %167 ], [ %.0119, %166 ], [ %.0119, %128 ], [ %.0119, %118 ], [ %.0119, %113 ], [ %.0119, %112 ], [ %.0119, %109 ], [ %.0119, %108 ], [ 1, %98 ], [ %.0119, %88 ], [ %.0119, %86 ], [ %.0119, %74 ], [ %.0119, %64 ], [ %.0119, %63 ], [ %.0119, %61 ], [ %.0119, %60 ], [ %.0119, %58 ], [ %.0119, %57 ], [ %.0119, %56 ], [ %.0119, %41 ], [ %.0119, %37 ], [ %.0119, %35 ], [ %.0119, %31 ], [ %.0119, %28 ], [ %.0119, %25 ], [ %.0119, %24 ], [ %.0119, %21 ]
  %.0117.be = phi i32 [ %.0117, %20 ], [ %.0117, %528 ], [ %.0117, %527 ], [ %.0117, %525 ], [ %.0117, %517 ], [ %.0117, %516 ], [ %.0117, %515 ], [ %.0117, %514 ], [ %.0117, %513 ], [ %.0117, %512 ], [ %.0117, %510 ], [ %495, %481 ], [ %.0117, %480 ], [ %.0117, %479 ], [ %.0117, %460 ], [ %.0117, %450 ], [ %.0117, %448 ], [ %.0117, %447 ], [ %.0117, %437 ], [ %.0117, %427 ], [ %.0117, %426 ], [ %.0117, %415 ], [ %.0117, %405 ], [ %.0117, %404 ], [ %.0117, %398 ], [ %.0117, %396 ], [ %.0117, %377 ], [ %.0117, %367 ], [ %.0117, %365 ], [ %.0117, %353 ], [ %.0117, %343 ], [ %.0117, %342 ], [ %.0117, %340 ], [ %.0117, %339 ], [ %.0117, %329 ], [ %.0117, %319 ], [ %.0117, %317 ], [ %.0117, %316 ], [ %.0117, %306 ], [ %.0117, %296 ], [ %.0117, %294 ], [ %.0117, %267 ], [ %.0117, %262 ], [ %.0117, %257 ], [ %.0117, %256 ], [ %.0117, %254 ], [ %.0117, %239 ], [ %.0117, %229 ], [ %.0117, %227 ], [ %.0117, %216 ], [ %.0117, %206 ], [ %.0117, %205 ], [ %.0117, %194 ], [ %.0117, %184 ], [ %.0117, %181 ], [ %.0117, %178 ], [ %.0117, %175 ], [ %.0117, %174 ], [ %.0117, %172 ], [ %.0117, %171 ], [ %.0117, %169 ], [ %.0117, %168 ], [ %.0117, %167 ], [ %.0117, %166 ], [ %142, %128 ], [ %.0117, %118 ], [ %.0117, %113 ], [ 1, %112 ], [ %.0117, %109 ], [ %.0117, %108 ], [ %.0117, %98 ], [ %.0117, %88 ], [ %.0117, %86 ], [ %.0117, %74 ], [ %.0117, %64 ], [ %.0117, %63 ], [ %.0117, %61 ], [ %.0117, %60 ], [ %.0117, %58 ], [ %.0117, %57 ], [ %.0117, %56 ], [ %.0117, %41 ], [ %.0117, %37 ], [ %.0117, %35 ], [ %.0117, %31 ], [ %.0117, %28 ], [ %.0117, %25 ], [ %.0117, %24 ], [ %.0117, %21 ]
  %.0115.be = phi i32 [ %.0115, %20 ], [ %.0115, %528 ], [ %.0115, %527 ], [ %.0115, %525 ], [ %.0115, %517 ], [ %.0115, %516 ], [ %.0115, %515 ], [ %.0115, %514 ], [ %.0115, %513 ], [ %.0115, %512 ], [ %.0115, %510 ], [ %.0115, %481 ], [ %.0115, %480 ], [ %.0115, %479 ], [ %.0115, %460 ], [ %.0115, %450 ], [ %.0115, %448 ], [ %.0115, %447 ], [ %.0115, %437 ], [ %.0115, %427 ], [ %.0115, %426 ], [ %.0115, %415 ], [ %.0115, %405 ], [ %.0115, %404 ], [ %.0115, %398 ], [ %.0115, %396 ], [ %.0115, %377 ], [ %.0115, %367 ], [ %.0115, %365 ], [ %.0115, %353 ], [ %.0115, %343 ], [ %.0115, %342 ], [ %.0115, %340 ], [ %.0115, %339 ], [ %.0115, %329 ], [ %.0115, %319 ], [ %.0115, %317 ], [ %.0115, %316 ], [ %.0115, %306 ], [ %.0115, %296 ], [ %.0115, %294 ], [ %.0115, %267 ], [ %.0115, %262 ], [ %.0115, %257 ], [ %.0115, %256 ], [ %.0115, %254 ], [ %.0115, %239 ], [ %.0115, %229 ], [ %.0115, %227 ], [ %.0115, %216 ], [ %.0115, %206 ], [ %.0115, %205 ], [ %.0115, %194 ], [ %.0115, %184 ], [ %.0115, %181 ], [ %.0115, %178 ], [ %.0115, %175 ], [ %.0115, %174 ], [ %.0115, %172 ], [ %.0115, %171 ], [ %.0115, %169 ], [ %.0115, %168 ], [ %.neg, %167 ], [ %.0115, %166 ], [ %.0115, %128 ], [ %.0115, %118 ], [ %.0115, %113 ], [ 1, %112 ], [ %.0115, %109 ], [ %.0115, %108 ], [ %.0115, %98 ], [ %.0115, %88 ], [ %.0115, %86 ], [ %.0115, %74 ], [ %.0115, %64 ], [ %.0115, %63 ], [ %.0115, %61 ], [ %.0115, %60 ], [ %.0115, %58 ], [ %.0115, %57 ], [ %.0115, %56 ], [ %.0115, %41 ], [ %.0115, %37 ], [ %.0115, %35 ], [ %.0115, %31 ], [ %.0115, %28 ], [ %.0115, %25 ], [ %.0115, %24 ], [ %.0115, %21 ]
  %.0113.be = phi i32 [ %.0113, %20 ], [ %.0113, %528 ], [ %.0113, %527 ], [ %.0113, %525 ], [ %.0113, %517 ], [ %.0113, %516 ], [ %.0113, %515 ], [ %.0113, %514 ], [ %.0113, %513 ], [ %.0113, %512 ], [ %.0113, %510 ], [ %.0113, %481 ], [ %.0113, %480 ], [ %.0113, %479 ], [ %.0113, %460 ], [ %.0113, %450 ], [ %449, %448 ], [ %.0113, %447 ], [ %.0113, %437 ], [ %.0113, %427 ], [ %.0113, %426 ], [ %.0113, %415 ], [ %.0113, %405 ], [ %.0113, %404 ], [ %.0113, %398 ], [ %.0113, %396 ], [ %.0113, %377 ], [ %.0113, %367 ], [ %.0113, %365 ], [ %.0113, %353 ], [ %.0113, %343 ], [ %.0113, %342 ], [ %.0113, %340 ], [ %.0113, %339 ], [ %.0113, %329 ], [ %.0113, %319 ], [ %.0113, %317 ], [ %.0113, %316 ], [ %.0113, %306 ], [ %.0113, %296 ], [ %.0113, %294 ], [ %.0113, %267 ], [ %.0113, %262 ], [ %.0113, %257 ], [ %.0113, %256 ], [ %.0113, %254 ], [ %.0113, %239 ], [ %.0113, %229 ], [ %.0113, %227 ], [ %.0113, %216 ], [ %.0113, %206 ], [ %.0113, %205 ], [ %.0113, %194 ], [ %.0113, %184 ], [ %.0113, %181 ], [ %.0113, %178 ], [ %.0113, %175 ], [ 1, %174 ], [ %.0113, %172 ], [ %.0113, %171 ], [ %.0113, %169 ], [ %.0113, %168 ], [ %.0113, %167 ], [ %.0113, %166 ], [ %.0113, %128 ], [ %.0113, %118 ], [ %.0113, %113 ], [ %.0113, %112 ], [ %.0113, %109 ], [ %.0113, %108 ], [ %.0113, %98 ], [ %.0113, %88 ], [ %.0113, %86 ], [ %.0113, %74 ], [ %.0113, %64 ], [ %.0113, %63 ], [ %.0113, %61 ], [ %.0113, %60 ], [ %.0113, %58 ], [ %.0113, %57 ], [ %.0113, %56 ], [ %.0113, %41 ], [ %.0113, %37 ], [ %.0113, %35 ], [ %.0113, %31 ], [ %.0113, %28 ], [ %.0113, %25 ], [ %.0113, %24 ], [ %.0113, %21 ]
  %.0111.be = phi i32 [ %.0111, %20 ], [ %.0111, %528 ], [ %.0111, %527 ], [ %.0111, %525 ], [ %.0111, %517 ], [ %.0111, %516 ], [ %.0111, %515 ], [ %.0111, %514 ], [ %.0111, %513 ], [ %.0111, %512 ], [ %.0111, %510 ], [ %.0111, %481 ], [ %.0111, %480 ], [ %.0111, %479 ], [ %.0111, %460 ], [ %.0111, %450 ], [ %.0111, %448 ], [ %.0111, %447 ], [ %.0111, %437 ], [ %.0111, %427 ], [ %.0111, %426 ], [ %.0111, %415 ], [ %.0111, %405 ], [ %.0111, %404 ], [ %.0111, %398 ], [ %.0111, %396 ], [ %.0111, %377 ], [ %.0111, %367 ], [ %.0111, %365 ], [ %.0111, %353 ], [ %.0111, %343 ], [ %.0111, %342 ], [ %341, %340 ], [ %.0111, %339 ], [ %.0111, %329 ], [ %.0111, %319 ], [ %.0111, %317 ], [ %.0111, %316 ], [ %.0111, %306 ], [ %.0111, %296 ], [ %.0111, %294 ], [ %.0111, %267 ], [ %.0111, %262 ], [ %.0111, %257 ], [ %.0111, %256 ], [ %.0111, %254 ], [ %.0111, %239 ], [ %.0111, %229 ], [ %.0111, %227 ], [ %.0111, %216 ], [ %.0111, %206 ], [ %.0111, %205 ], [ %.0111, %194 ], [ %.0111, %184 ], [ %.0111, %181 ], [ 1, %178 ], [ %.0111, %175 ], [ %.0111, %174 ], [ %.0111, %172 ], [ %.0111, %171 ], [ %.0111, %169 ], [ %.0111, %168 ], [ %.0111, %167 ], [ %.0111, %166 ], [ %.0111, %128 ], [ %.0111, %118 ], [ %.0111, %113 ], [ %.0111, %112 ], [ %.0111, %109 ], [ %.0111, %108 ], [ %.0111, %98 ], [ %.0111, %88 ], [ %.0111, %86 ], [ %.0111, %74 ], [ %.0111, %64 ], [ %.0111, %63 ], [ %.0111, %61 ], [ %.0111, %60 ], [ %.0111, %58 ], [ %.0111, %57 ], [ %.0111, %56 ], [ %.0111, %41 ], [ %.0111, %37 ], [ %.0111, %35 ], [ %.0111, %31 ], [ %.0111, %28 ], [ %.0111, %25 ], [ %.0111, %24 ], [ %.0111, %21 ]
  %.0109.be = phi i32 [ %.0109, %20 ], [ %.0109, %528 ], [ %.0109, %527 ], [ %.0109, %525 ], [ %.0109, %517 ], [ %.0109, %516 ], [ %.0109, %515 ], [ %.0109, %514 ], [ %.0109, %513 ], [ %.0109, %512 ], [ %511, %510 ], [ %.0109, %481 ], [ %.0109, %480 ], [ %.0109, %479 ], [ %.0109, %460 ], [ %.0109, %450 ], [ %.0109, %448 ], [ %.0109, %447 ], [ %.0109, %437 ], [ %.0109, %427 ], [ %.0109, %426 ], [ %.0109, %415 ], [ %.0109, %405 ], [ %.0109, %404 ], [ %.0109, %398 ], [ %.0109, %396 ], [ %.0109, %377 ], [ %.0109, %367 ], [ %.0109, %365 ], [ %.0109, %353 ], [ %.0109, %343 ], [ %.0109, %342 ], [ %.0109, %340 ], [ %.0109, %339 ], [ %.0109, %329 ], [ %.0109, %319 ], [ %318, %317 ], [ %.0109, %316 ], [ %.0109, %306 ], [ %.0109, %296 ], [ %.0109, %294 ], [ %.0109, %267 ], [ %.0109, %262 ], [ %.0109, %257 ], [ %.0109, %256 ], [ %.0109, %254 ], [ %.0109, %239 ], [ %.0109, %229 ], [ %.0109, %227 ], [ %.0109, %216 ], [ %.0109, %206 ], [ %.0109, %205 ], [ %195, %194 ], [ %.0109, %184 ], [ %.0109, %181 ], [ %.0109, %178 ], [ %.0109, %175 ], [ %.0109, %174 ], [ %.0109, %172 ], [ %.0109, %171 ], [ %.0109, %169 ], [ %.0109, %168 ], [ %.0109, %167 ], [ %.0109, %166 ], [ %.0109, %128 ], [ %.0109, %118 ], [ %.0109, %113 ], [ %.0109, %112 ], [ %.0109, %109 ], [ %.0109, %108 ], [ %.0109, %98 ], [ %.0109, %88 ], [ %.0109, %86 ], [ %.0109, %74 ], [ %.0109, %64 ], [ %.0109, %63 ], [ %.0109, %61 ], [ %.0109, %60 ], [ %.0109, %58 ], [ %.0109, %57 ], [ %.0109, %56 ], [ %.0109, %41 ], [ %.0109, %37 ], [ %.0109, %35 ], [ %.0109, %31 ], [ %.0109, %28 ], [ %.0109, %25 ], [ %.0109, %24 ], [ %.0109, %21 ]
  %.0107.be = phi i32 [ %.0107, %20 ], [ %.0107, %528 ], [ %.0107, %527 ], [ %.0107, %525 ], [ %.0107, %517 ], [ %.0107, %516 ], [ %.0107, %515 ], [ %.0107, %514 ], [ %.0107, %513 ], [ %.0107, %512 ], [ %.0107, %510 ], [ %.0107, %481 ], [ %.0107, %480 ], [ %.0107, %479 ], [ %.0107, %460 ], [ %.0107, %450 ], [ %.0107, %448 ], [ %.0107, %447 ], [ %.0107, %437 ], [ %.0107, %427 ], [ %.0107, %426 ], [ %.0107, %415 ], [ %.0107, %405 ], [ %.0107, %404 ], [ %.0107, %398 ], [ %.0107, %396 ], [ %.0107, %377 ], [ %.0107, %367 ], [ %.0107, %365 ], [ %.0107, %353 ], [ %.0107, %343 ], [ %.0107, %342 ], [ %.0107, %340 ], [ %.0107, %339 ], [ %.0107, %329 ], [ %.0107, %319 ], [ %.0107, %317 ], [ %.0107, %316 ], [ %.0107, %306 ], [ %.0107, %296 ], [ %.0107, %294 ], [ %277, %267 ], [ %.0107, %262 ], [ %261, %257 ], [ %.0107, %256 ], [ %.0107, %254 ], [ %.0107, %239 ], [ %.0107, %229 ], [ %.0107, %227 ], [ %.0107, %216 ], [ %.0107, %206 ], [ %.0107, %205 ], [ %.0107, %194 ], [ %.0107, %184 ], [ %.0107, %181 ], [ %.0107, %178 ], [ %.0107, %175 ], [ %.0107, %174 ], [ %.0107, %172 ], [ %.0107, %171 ], [ %.0107, %169 ], [ %.0107, %168 ], [ %.0107, %167 ], [ %.0107, %166 ], [ %.0107, %128 ], [ %.0107, %118 ], [ %.0107, %113 ], [ %.0107, %112 ], [ %.0107, %109 ], [ %.0107, %108 ], [ %.0107, %98 ], [ %.0107, %88 ], [ %.0107, %86 ], [ %.0107, %74 ], [ %.0107, %64 ], [ %.0107, %63 ], [ %.0107, %61 ], [ %.0107, %60 ], [ %.0107, %58 ], [ %.0107, %57 ], [ %.0107, %56 ], [ %.0107, %41 ], [ %.0107, %37 ], [ %.0107, %35 ], [ %.0107, %31 ], [ %.0107, %28 ], [ %.0107, %25 ], [ %.0107, %24 ], [ %.0107, %21 ]
  %.0105.be = phi i32 [ %.0105, %20 ], [ %.0105, %528 ], [ %.0105, %527 ], [ %.0105, %525 ], [ %.0105, %517 ], [ %.0105, %516 ], [ %.0105, %515 ], [ %.0105, %514 ], [ %.0105, %513 ], [ %.0105, %512 ], [ %.0105, %510 ], [ %.0105, %481 ], [ %.0105, %480 ], [ %.0105, %479 ], [ %.0105, %460 ], [ %.0105, %450 ], [ %.0105, %448 ], [ %.0105, %447 ], [ %.0105, %437 ], [ %.0105, %427 ], [ %.0105, %426 ], [ %.0105, %415 ], [ %.0105, %405 ], [ %.0105, %404 ], [ %.0105, %398 ], [ %.0105, %396 ], [ %.0105, %377 ], [ %.0105, %367 ], [ %.0105, %365 ], [ %.0105, %353 ], [ %.0105, %343 ], [ %.0105, %342 ], [ %.0105, %340 ], [ %.0105, %339 ], [ %.0105, %329 ], [ %.0105, %319 ], [ %.0105, %317 ], [ %.0105, %316 ], [ %.0105, %306 ], [ %.0105, %296 ], [ %295, %294 ], [ %.0105, %267 ], [ %.0105, %262 ], [ 1, %257 ], [ %.0105, %256 ], [ %.0105, %254 ], [ %.0105, %239 ], [ %.0105, %229 ], [ %.0105, %227 ], [ %.0105, %216 ], [ %.0105, %206 ], [ %.0105, %205 ], [ %.0105, %194 ], [ %.0105, %184 ], [ %.0105, %181 ], [ %.0105, %178 ], [ %.0105, %175 ], [ %.0105, %174 ], [ %.0105, %172 ], [ %.0105, %171 ], [ %.0105, %169 ], [ %.0105, %168 ], [ %.0105, %167 ], [ %.0105, %166 ], [ %.0105, %128 ], [ %.0105, %118 ], [ %.0105, %113 ], [ %.0105, %112 ], [ %.0105, %109 ], [ %.0105, %108 ], [ %.0105, %98 ], [ %.0105, %88 ], [ %.0105, %86 ], [ %.0105, %74 ], [ %.0105, %64 ], [ %.0105, %63 ], [ %.0105, %61 ], [ %.0105, %60 ], [ %.0105, %58 ], [ %.0105, %57 ], [ %.0105, %56 ], [ %.0105, %41 ], [ %.0105, %37 ], [ %.0105, %35 ], [ %.0105, %31 ], [ %.0105, %28 ], [ %.0105, %25 ], [ %.0105, %24 ], [ %.0105, %21 ]
  %.0103.be = phi i32 [ %.0103, %20 ], [ %.0103, %528 ], [ %.0103, %527 ], [ %526, %525 ], [ %.0103, %517 ], [ %.0103, %516 ], [ %.0103, %515 ], [ %.0103, %514 ], [ %.0103, %513 ], [ %.0103, %512 ], [ %.0103, %510 ], [ %.0103, %481 ], [ %.0103, %480 ], [ %.0103, %479 ], [ %.0103, %460 ], [ %.0103, %450 ], [ %.0103, %448 ], [ %.0103, %447 ], [ %.0103, %437 ], [ %.0103, %427 ], [ %.0103, %426 ], [ %416, %415 ], [ %.0103, %405 ], [ %.0103, %404 ], [ %.0103, %398 ], [ %.0103, %396 ], [ %.0103, %377 ], [ %.0103, %367 ], [ %.0103, %365 ], [ %.0103, %353 ], [ %.0103, %343 ], [ 1, %342 ], [ %.0103, %340 ], [ %.0103, %339 ], [ %.0103, %329 ], [ %.0103, %319 ], [ %.0103, %317 ], [ %.0103, %316 ], [ %.0103, %306 ], [ %.0103, %296 ], [ %.0103, %294 ], [ %.0103, %267 ], [ %.0103, %262 ], [ %.0103, %257 ], [ %.0103, %256 ], [ %.0103, %254 ], [ %.0103, %239 ], [ %.0103, %229 ], [ %.0103, %227 ], [ %.0103, %216 ], [ %.0103, %206 ], [ %.0103, %205 ], [ %.0103, %194 ], [ %.0103, %184 ], [ %.0103, %181 ], [ %.0103, %178 ], [ %.0103, %175 ], [ %.0103, %174 ], [ %.0103, %172 ], [ %.0103, %171 ], [ %.0103, %169 ], [ %.0103, %168 ], [ %.0103, %167 ], [ %.0103, %166 ], [ %.0103, %128 ], [ %.0103, %118 ], [ %.0103, %113 ], [ %.0103, %112 ], [ %.0103, %109 ], [ %.0103, %108 ], [ %.0103, %98 ], [ %.0103, %88 ], [ %.0103, %86 ], [ %.0103, %74 ], [ %.0103, %64 ], [ %.0103, %63 ], [ %.0103, %61 ], [ %.0103, %60 ], [ %.0103, %58 ], [ %.0103, %57 ], [ %.0103, %56 ], [ %.0103, %41 ], [ %.0103, %37 ], [ %.0103, %35 ], [ %.0103, %31 ], [ %.0103, %28 ], [ %.0103, %25 ], [ %.0103, %24 ], [ %.0103, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 357119502, %528 ], [ -1720228044, %527 ], [ -2073653519, %525 ], [ 1771553409, %517 ], [ -1981521868, %516 ], [ 1870103868, %515 ], [ 1763253839, %514 ], [ -1640113023, %513 ], [ 360871051, %512 ], [ 1274998333, %510 ], [ -1111956840, %481 ], [ 1773400087, %480 ], [ -346296022, %479 ], [ %477, %460 ], [ %459, %450 ], [ 1561875612, %448 ], [ 502303300, %447 ], [ %446, %437 ], [ %436, %427 ], [ -921004179, %426 ], [ %425, %415 ], [ %414, %405 ], [ -642983899, %404 ], [ -504635107, %398 ], [ %397, %396 ], [ %395, %377 ], [ %376, %367 ], [ %366, %365 ], [ %364, %353 ], [ %352, %343 ], [ -921004179, %342 ], [ 817304660, %340 ], [ -328648856, %339 ], [ %338, %329 ], [ %328, %319 ], [ -523374777, %317 ], [ -1111569026, %316 ], [ %315, %306 ], [ %305, %296 ], [ -938361949, %294 ], [ -1617744984, %267 ], [ %266, %262 ], [ -938361949, %257 ], [ -1111569026, %256 ], [ %255, %254 ], [ %253, %239 ], [ %238, %229 ], [ %228, %227 ], [ %226, %216 ], [ %215, %206 ], [ -523374777, %205 ], [ %204, %194 ], [ %193, %184 ], [ %183, %181 ], [ 817304660, %178 ], [ %177, %175 ], [ 1561875612, %174 ], [ -1688551809, %172 ], [ 958370081, %171 ], [ 1386393527, %169 ], [ -53430663, %168 ], [ 947676901, %167 ], [ -777482842, %166 ], [ %165, %128 ], [ %127, %118 ], [ %117, %113 ], [ 947676901, %112 ], [ %111, %109 ], [ 1386393527, %108 ], [ %107, %98 ], [ %97, %88 ], [ %87, %86 ], [ %85, %74 ], [ %73, %64 ], [ -1688551809, %63 ], [ 1569073253, %61 ], [ -2099825963, %60 ], [ -1213077510, %58 ], [ -5917325, %57 ], [ -703049498, %56 ], [ 1313803974, %41 ], [ 1313803974, %37 ], [ %36, %35 ], [ -703049498, %31 ], [ %30, %28 ], [ %27, %25 ], [ -1213077510, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %22 = icmp slt i32 %.0125, 303
  %23 = select i1 %22, i32 -1070625497, i32 104548211
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  %26 = icmp slt i32 %.0123, 303
  %27 = select i1 %26, i32 289058131, i32 -1051896954
  br label %.backedge

28:                                               ; preds = %20
  %29 = icmp slt i32 %.0123, %.0125
  %30 = select i1 %29, i32 -245648652, i32 -1426852824
  br label %.backedge

31:                                               ; preds = %20
  %32 = sext i32 %.0123 to i64
  %33 = sext i32 %.0125 to i64
  %34 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @nck, i64 0, i64 %32, i64 %33
  store i32 0, i32* %34, align 4
  br label %.backedge

35:                                               ; preds = %20
  %.not133 = icmp eq i32 %.0125, 0
  %36 = select i1 %.not133, i32 1335609246, i32 212932594
  br label %.backedge

37:                                               ; preds = %20
  %38 = sext i32 %.0123 to i64
  %39 = sext i32 %.0125 to i64
  %40 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @nck, i64 0, i64 %38, i64 %39
  store i32 1, i32* %40, align 4
  br label %.backedge

41:                                               ; preds = %20
  %42 = add i32 %.0123, -1
  %43 = sext i32 %42 to i64
  %44 = add i32 %.0125, -1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @nck, i64 0, i64 %43, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %.0125 to i64
  %49 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @nck, i64 0, i64 %43, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, %47
  %52 = load i32, i32* @m, align 4
  %53 = srem i32 %51, %52
  %54 = sext i32 %.0123 to i64
  %55 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @nck, i64 0, i64 %54, i64 %48
  store i32 %53, i32* %55, align 4
  br label %.backedge

56:                                               ; preds = %20
  br label %.backedge

57:                                               ; preds = %20
  br label %.backedge

58:                                               ; preds = %20
  %59 = add i32 %.0123, 1
  br label %.backedge

60:                                               ; preds = %20
  br label %.backedge

61:                                               ; preds = %20
  %62 = add i32 %.0125, 1
  br label %.backedge

63:                                               ; preds = %20
  br label %.backedge

64:                                               ; preds = %20
  %65 = load i32, i32* @x.1, align 4
  %66 = load i32, i32* @y.2, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 -346296022, i32 1234892512
  br label %.backedge

74:                                               ; preds = %20
  %75 = load i32, i32* @n, align 4
  %76 = icmp sle i32 %.0121, %75
  store i1 %76, i1* %6, align 1
  %77 = load i32, i32* @x.1, align 4
  %78 = load i32, i32* @y.2, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 -1473615744, i32 1234892512
  br label %.backedge

86:                                               ; preds = %20
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %87 = select i1 %.0..0..0., i32 194680091, i32 2067146824
  br label %.backedge

88:                                               ; preds = %20
  %89 = load i32, i32* @x.1, align 4
  %90 = load i32, i32* @y.2, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 1773400087, i32 -767862777
  br label %.backedge

98:                                               ; preds = %20
  %99 = load i32, i32* @x.1, align 4
  %100 = load i32, i32* @y.2, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 1393094293, i32 -767862777
  br label %.backedge

108:                                              ; preds = %20
  br label %.backedge

109:                                              ; preds = %20
  %110 = load i32, i32* @n, align 4
  %.not132 = icmp sgt i32 %.0119, %110
  %111 = select i1 %.not132, i32 -1916854699, i32 1859064799
  br label %.backedge

112:                                              ; preds = %20
  br label %.backedge

113:                                              ; preds = %20
  %114 = mul nsw i32 %.0115, %.0121
  %115 = add i32 %114, %.0119
  %116 = load i32, i32* @n, align 4
  %.not131 = icmp sgt i32 %115, %116
  %117 = select i1 %.not131, i32 720803409, i32 -1228515741
  br label %.backedge

118:                                              ; preds = %20
  %119 = load i32, i32* @x.1, align 4
  %120 = load i32, i32* @y.2, align 4
  %121 = add i32 %119, -1
  %122 = mul i32 %121, %119
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %125, %124
  %127 = select i1 %126, i32 -1111956840, i32 1851774654
  br label %.backedge

128:                                              ; preds = %20
  %129 = sext i32 %.0117 to i64
  %130 = mul nsw i32 %.0115, %.0121
  %131 = add i32 %130, -1
  %132 = sext i32 %131 to i64
  %133 = add i32 %.0121, -1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @nck, i64 0, i64 %132, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %137, %129
  %139 = load i32, i32* @m, align 4
  %140 = sext i32 %139 to i64
  %141 = srem i64 %138, %140
  %142 = trunc i64 %141 to i32
  %143 = add i32 %.0119, -1
  %144 = add i32 %143, %130
  %145 = sext i32 %144 to i64
  %146 = sext i32 %143 to i64
  %147 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @nck, i64 0, i64 %145, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = mul nsw i64 %141, %149
  %151 = srem i64 %150, %140
  %152 = trunc i64 %151 to i32
  %153 = sext i32 %.0121 to i64
  %154 = sext i32 %.0119 to i64
  %155 = sext i32 %.0115 to i64
  %156 = getelementptr inbounds [303 x [303 x [303 x i32]]], [303 x [303 x [303 x i32]]]* @q, i64 0, i64 %153, i64 %154, i64 %155
  store i32 %152, i32* %156, align 4
  %157 = load i32, i32* @x.1, align 4
  %158 = load i32, i32* @y.2, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 -405687160, i32 1851774654
  br label %.backedge

166:                                              ; preds = %20
  br label %.backedge

167:                                              ; preds = %20
  %.neg = add i32 %.0115, 1
  br label %.backedge

168:                                              ; preds = %20
  br label %.backedge

169:                                              ; preds = %20
  %170 = add i32 %.0119, 1
  br label %.backedge

171:                                              ; preds = %20
  br label %.backedge

172:                                              ; preds = %20
  %173 = add i32 %.0121, 1
  br label %.backedge

174:                                              ; preds = %20
  store i32 1, i32* getelementptr inbounds ([303 x i32], [303 x i32]* @g, i64 0, i64 1), align 4
  store i32 1, i32* getelementptr inbounds ([303 x [303 x i32]], [303 x [303 x i32]]* @f, i64 0, i64 0, i64 1), align 4
  br label %.backedge

175:                                              ; preds = %20
  %176 = load i32, i32* @k, align 4
  %.not129 = icmp sgt i32 %.0113, %176
  %177 = select i1 %.not129, i32 -1103086531, i32 1632480383
  br label %.backedge

178:                                              ; preds = %20
  %179 = sext i32 %.0113 to i64
  %180 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @f, i64 0, i64 %179, i64 1
  store i32 1, i32* %180, align 4
  br label %.backedge

181:                                              ; preds = %20
  %182 = load i32, i32* @n, align 4
  %.not128 = icmp sgt i32 %.0111, %182
  %183 = select i1 %.not128, i32 616339745, i32 122361692
  br label %.backedge

184:                                              ; preds = %20
  %185 = load i32, i32* @x.1, align 4
  %186 = load i32, i32* @y.2, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 1274998333, i32 1557222027
  br label %.backedge

194:                                              ; preds = %20
  %195 = load i32, i32* @n, align 4
  %196 = load i32, i32* @x.1, align 4
  %197 = load i32, i32* @y.2, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 608980194, i32 1557222027
  br label %.backedge

205:                                              ; preds = %20
  br label %.backedge

206:                                              ; preds = %20
  %207 = load i32, i32* @x.1, align 4
  %208 = load i32, i32* @y.2, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 360871051, i32 1837412470
  br label %.backedge

216:                                              ; preds = %20
  %217 = icmp ne i32 %.0109, 0
  store i1 %217, i1* %5, align 1
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 315438034, i32 1837412470
  br label %.backedge

227:                                              ; preds = %20
  %.0..0..0.98 = load volatile i1, i1* %5, align 1
  %228 = select i1 %.0..0..0.98, i32 584500139, i32 -2089034162
  br label %.backedge

229:                                              ; preds = %20
  %230 = load i32, i32* @x.1, align 4
  %231 = load i32, i32* @y.2, align 4
  %232 = add i32 %230, -1
  %233 = mul i32 %232, %230
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %236, %235
  %238 = select i1 %237, i32 -1640113023, i32 1202135218
  br label %.backedge

239:                                              ; preds = %20
  %240 = sext i32 %.0113 to i64
  %241 = sext i32 %.0109 to i64
  %242 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @f, i64 0, i64 %240, i64 %241
  %243 = load i32, i32* %242, align 4
  %244 = icmp ne i32 %243, 0
  store i1 %244, i1* %4, align 1
  %245 = load i32, i32* @x.1, align 4
  %246 = load i32, i32* @y.2, align 4
  %247 = add i32 %245, -1
  %248 = mul i32 %247, %245
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %251, %250
  %253 = select i1 %252, i32 -581673127, i32 1202135218
  br label %.backedge

254:                                              ; preds = %20
  %.0..0..0.99 = load volatile i1, i1* %4, align 1
  %255 = select i1 %.0..0..0.99, i32 1745538501, i32 1683429543
  br label %.backedge

256:                                              ; preds = %20
  br label %.backedge

257:                                              ; preds = %20
  %258 = sext i32 %.0113 to i64
  %259 = sext i32 %.0109 to i64
  %260 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @f, i64 0, i64 %258, i64 %259
  %261 = load i32, i32* %260, align 4
  br label %.backedge

262:                                              ; preds = %20
  %263 = mul nsw i32 %.0105, %.0111
  %264 = add i32 %263, %.0109
  %265 = load i32, i32* @n, align 4
  %.not = icmp sgt i32 %264, %265
  %266 = select i1 %.not, i32 -1085432377, i32 -499045674
  br label %.backedge

267:                                              ; preds = %20
  %268 = sext i32 %.0107 to i64
  %269 = sext i32 %.0111 to i64
  %270 = getelementptr inbounds [303 x i32], [303 x i32]* @g, i64 0, i64 %269
  %271 = load i32, i32* %270, align 4
  %272 = sext i32 %271 to i64
  %273 = mul nsw i64 %272, %268
  %274 = load i32, i32* @m, align 4
  %275 = sext i32 %274 to i64
  %276 = srem i64 %273, %275
  %277 = trunc i64 %276 to i32
  %278 = sext i32 %.0113 to i64
  %279 = mul nsw i32 %.0105, %.0111
  %280 = add i32 %279, %.0109
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @f, i64 0, i64 %278, i64 %281
  %283 = load i32, i32* %282, align 4
  %284 = sext i32 %283 to i64
  %285 = sext i32 %.0109 to i64
  %286 = sext i32 %.0105 to i64
  %287 = getelementptr inbounds [303 x [303 x [303 x i32]]], [303 x [303 x [303 x i32]]]* @q, i64 0, i64 %269, i64 %285, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = mul nsw i64 %276, %289
  %291 = add nsw i64 %290, %284
  %292 = srem i64 %291, %275
  %293 = trunc i64 %292 to i32
  store i32 %293, i32* %282, align 4
  br label %.backedge

294:                                              ; preds = %20
  %295 = add i32 %.0105, 1
  br label %.backedge

296:                                              ; preds = %20
  %297 = load i32, i32* @x.1, align 4
  %298 = load i32, i32* @y.2, align 4
  %299 = add i32 %297, -1
  %300 = mul i32 %299, %297
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %303, %302
  %305 = select i1 %304, i32 1763253839, i32 1948292915
  br label %.backedge

306:                                              ; preds = %20
  %307 = load i32, i32* @x.1, align 4
  %308 = load i32, i32* @y.2, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 1126697538, i32 1948292915
  br label %.backedge

316:                                              ; preds = %20
  br label %.backedge

317:                                              ; preds = %20
  %318 = add i32 %.0109, -1
  br label %.backedge

319:                                              ; preds = %20
  %320 = load i32, i32* @x.1, align 4
  %321 = load i32, i32* @y.2, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 1870103868, i32 -832845770
  br label %.backedge

329:                                              ; preds = %20
  %330 = load i32, i32* @x.1, align 4
  %331 = load i32, i32* @y.2, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 591913821, i32 -832845770
  br label %.backedge

339:                                              ; preds = %20
  br label %.backedge

340:                                              ; preds = %20
  %341 = add i32 %.0111, 1
  br label %.backedge

342:                                              ; preds = %20
  br label %.backedge

343:                                              ; preds = %20
  %344 = load i32, i32* @x.1, align 4
  %345 = load i32, i32* @y.2, align 4
  %346 = add i32 %344, -1
  %347 = mul i32 %346, %344
  %348 = and i32 %347, 1
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %350, %349
  %352 = select i1 %351, i32 -1981521868, i32 1833168765
  br label %.backedge

353:                                              ; preds = %20
  %354 = load i32, i32* @n, align 4
  %355 = icmp sle i32 %.0103, %354
  store i1 %355, i1* %3, align 1
  %356 = load i32, i32* @x.1, align 4
  %357 = load i32, i32* @y.2, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 -1014799954, i32 1833168765
  br label %.backedge

365:                                              ; preds = %20
  %.0..0..0.100 = load volatile i1, i1* %3, align 1
  %366 = select i1 %.0..0..0.100, i32 1401623782, i32 -725252042
  br label %.backedge

367:                                              ; preds = %20
  %368 = load i32, i32* @x.1, align 4
  %369 = load i32, i32* @y.2, align 4
  %370 = add i32 %368, -1
  %371 = mul i32 %370, %368
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %374, %373
  %376 = select i1 %375, i32 1771553409, i32 1946076382
  br label %.backedge

377:                                              ; preds = %20
  %378 = sext i32 %.0113 to i64
  %379 = sext i32 %.0103 to i64
  %380 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @f, i64 0, i64 %378, i64 %379
  %381 = load i32, i32* %380, align 4
  %382 = getelementptr inbounds [303 x i32], [303 x i32]* @g, i64 0, i64 %379
  %383 = load i32, i32* %382, align 4
  %384 = add i32 %383, %381
  store i32 %384, i32* %382, align 4
  %385 = load i32, i32* @m, align 4
  %386 = icmp sge i32 %384, %385
  store i1 %386, i1* %2, align 1
  %387 = load i32, i32* @x.1, align 4
  %388 = load i32, i32* @y.2, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 -1206355288, i32 1946076382
  br label %.backedge

396:                                              ; preds = %20
  %.0..0..0.101 = load volatile i1, i1* %2, align 1
  %397 = select i1 %.0..0..0.101, i32 -427121838, i32 -504635107
  br label %.backedge

398:                                              ; preds = %20
  %399 = load i32, i32* @m, align 4
  %400 = sext i32 %.0103 to i64
  %401 = getelementptr inbounds [303 x i32], [303 x i32]* @g, i64 0, i64 %400
  %402 = load i32, i32* %401, align 4
  %403 = sub i32 %402, %399
  store i32 %403, i32* %401, align 4
  br label %.backedge

404:                                              ; preds = %20
  br label %.backedge

405:                                              ; preds = %20
  %406 = load i32, i32* @x.1, align 4
  %407 = load i32, i32* @y.2, align 4
  %408 = add i32 %406, -1
  %409 = mul i32 %408, %406
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %412, %411
  %414 = select i1 %413, i32 -2073653519, i32 -893719159
  br label %.backedge

415:                                              ; preds = %20
  %416 = add i32 %.0103, 1
  %417 = load i32, i32* @x.1, align 4
  %418 = load i32, i32* @y.2, align 4
  %419 = add i32 %417, -1
  %420 = mul i32 %419, %417
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %423, %422
  %425 = select i1 %424, i32 -1017643934, i32 -893719159
  br label %.backedge

426:                                              ; preds = %20
  br label %.backedge

427:                                              ; preds = %20
  %428 = load i32, i32* @x.1, align 4
  %429 = load i32, i32* @y.2, align 4
  %430 = add i32 %428, -1
  %431 = mul i32 %430, %428
  %432 = and i32 %431, 1
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %434, %433
  %436 = select i1 %435, i32 -1720228044, i32 -718909673
  br label %.backedge

437:                                              ; preds = %20
  %438 = load i32, i32* @x.1, align 4
  %439 = load i32, i32* @y.2, align 4
  %440 = add i32 %438, -1
  %441 = mul i32 %440, %438
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %444, %443
  %446 = select i1 %445, i32 -1161554756, i32 -718909673
  br label %.backedge

447:                                              ; preds = %20
  br label %.backedge

448:                                              ; preds = %20
  %449 = add i32 %.0113, 1
  br label %.backedge

450:                                              ; preds = %20
  %451 = load i32, i32* @x.1, align 4
  %452 = load i32, i32* @y.2, align 4
  %453 = add i32 %451, -1
  %454 = mul i32 %453, %451
  %455 = and i32 %454, 1
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %457, %456
  %459 = select i1 %458, i32 357119502, i32 1006268103
  br label %.backedge

460:                                              ; preds = %20
  %461 = load i32, i32* @k, align 4
  %462 = sext i32 %461 to i64
  %463 = load i32, i32* @n, align 4
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @f, i64 0, i64 %462, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %466)
  %468 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %467, i8 signext 10)
  %469 = load i32, i32* @x.1, align 4
  %470 = load i32, i32* @y.2, align 4
  %471 = add i32 %469, -1
  %472 = mul i32 %471, %469
  %473 = and i32 %472, 1
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %475, %474
  %477 = select i1 %476, i32 128256766, i32 1006268103
  br label %.backedge

478:                                              ; preds = %20
  store i32 0, i32* %1, align 4
  %.0..0..0.102 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.102

479:                                              ; preds = %20
  br label %.backedge

480:                                              ; preds = %20
  br label %.backedge

481:                                              ; preds = %20
  %482 = sext i32 %.0117 to i64
  %483 = mul nsw i32 %.0115, %.0121
  %484 = add i32 %483, -1
  %485 = sext i32 %484 to i64
  %486 = add i32 %.0121, -1
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @nck, i64 0, i64 %485, i64 %487
  %489 = load i32, i32* %488, align 4
  %490 = sext i32 %489 to i64
  %491 = mul nsw i64 %490, %482
  %492 = load i32, i32* @m, align 4
  %493 = sext i32 %492 to i64
  %494 = srem i64 %491, %493
  %495 = trunc i64 %494 to i32
  %496 = add i32 %.0119, -1
  %497 = add i32 %496, %483
  %498 = sext i32 %497 to i64
  %499 = sext i32 %496 to i64
  %500 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @nck, i64 0, i64 %498, i64 %499
  %501 = load i32, i32* %500, align 4
  %502 = sext i32 %501 to i64
  %503 = mul nsw i64 %494, %502
  %504 = srem i64 %503, %493
  %505 = trunc i64 %504 to i32
  %506 = sext i32 %.0121 to i64
  %507 = sext i32 %.0119 to i64
  %508 = sext i32 %.0115 to i64
  %509 = getelementptr inbounds [303 x [303 x [303 x i32]]], [303 x [303 x [303 x i32]]]* @q, i64 0, i64 %506, i64 %507, i64 %508
  store i32 %505, i32* %509, align 4
  br label %.backedge

510:                                              ; preds = %20
  %511 = load i32, i32* @n, align 4
  br label %.backedge

512:                                              ; preds = %20
  br label %.backedge

513:                                              ; preds = %20
  br label %.backedge

514:                                              ; preds = %20
  br label %.backedge

515:                                              ; preds = %20
  br label %.backedge

516:                                              ; preds = %20
  br label %.backedge

517:                                              ; preds = %20
  %518 = sext i32 %.0113 to i64
  %519 = sext i32 %.0103 to i64
  %520 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @f, i64 0, i64 %518, i64 %519
  %521 = load i32, i32* %520, align 4
  %522 = getelementptr inbounds [303 x i32], [303 x i32]* @g, i64 0, i64 %519
  %523 = load i32, i32* %522, align 4
  %524 = add i32 %523, %521
  store i32 %524, i32* %522, align 4
  br label %.backedge

525:                                              ; preds = %20
  %526 = add i32 %.0103, 1
  br label %.backedge

527:                                              ; preds = %20
  br label %.backedge

528:                                              ; preds = %20
  %529 = load i32, i32* @k, align 4
  %530 = sext i32 %529 to i64
  %531 = load i32, i32* @n, align 4
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @f, i64 0, i64 %530, i64 %532
  %534 = load i32, i32* %533, align 4
  %535 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %534)
  %536 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %535, i8 signext 10)
  br label %.backedge
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s854970900.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 2098082577, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 2098082577, label %11
    i32 660836103, label %14
    i32 1458413172, label %24
    i32 1417383647, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 660836103, i32 1417383647
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1458413172, i32 1417383647
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 660836103, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
