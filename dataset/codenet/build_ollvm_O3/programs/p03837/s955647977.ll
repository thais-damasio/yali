; ModuleID = 'build_ollvm/programs/p03837/s955647977.ll'
source_filename = "Project_CodeNet_C++1400/p03837/s955647977.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct.Edge = type { i32, i32, i32 }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@N = global i32 0, align 4
@M = global i32 0, align 4
@min_dist = global [105 x [105 x i32]] zeroinitializer, align 16
@edge = global [1005 x %struct.Edge] zeroinitializer, align 16
@.str = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s955647977.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @N, i32* nonnull @M)
  br label %7

7:                                                ; preds = %.backedge, %0
  %.0105 = phi i32 [ 0, %0 ], [ %.0105.be, %.backedge ]
  %.0103 = phi i32 [ undef, %0 ], [ %.0103.be, %.backedge ]
  %.0101 = phi i32 [ undef, %0 ], [ %.0101.be, %.backedge ]
  %.099 = phi i32 [ undef, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i32 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i8 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.0 = phi i32 [ -1040347878, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1040347878, label %8
    i32 2102234633, label %12
    i32 -779110950, label %22
    i32 189303697, label %32
    i32 725942232, label %33
    i32 1004764396, label %43
    i32 1360798509, label %55
    i32 -243703315, label %57
    i32 -1422671760, label %60
    i32 -2103649233, label %64
    i32 227200808, label %74
    i32 444159023, label %87
    i32 474008294, label %88
    i32 1164154257, label %98
    i32 -1740785878, label %108
    i32 -1951765307, label %109
    i32 -1595006138, label %119
    i32 1358423236, label %130
    i32 -1626865978, label %131
    i32 262757387, label %132
    i32 -1651694603, label %134
    i32 1425178243, label %144
    i32 253333988, label %154
    i32 -2061457275, label %155
    i32 -1333250393, label %165
    i32 1040824359, label %177
    i32 304803923, label %179
    i32 -282563506, label %206
    i32 1200225898, label %208
    i32 1312680382, label %209
    i32 1472654344, label %219
    i32 -623388029, label %231
    i32 848522570, label %233
    i32 -71059357, label %234
    i32 688127709, label %238
    i32 939641217, label %245
    i32 -2084844442, label %255
    i32 -1220001923, label %265
    i32 2147414621, label %266
    i32 -805096716, label %267
    i32 732140351, label %271
    i32 -1894976182, label %278
    i32 1236079026, label %279
    i32 -312847486, label %291
    i32 577613145, label %301
    i32 1942767839, label %312
    i32 1515732985, label %313
    i32 1272187895, label %323
    i32 -1557783313, label %333
    i32 361921364, label %334
    i32 1765664933, label %336
    i32 1721901814, label %346
    i32 -213555084, label %356
    i32 -247800811, label %357
    i32 1916096546, label %367
    i32 1384780566, label %378
    i32 -186212615, label %379
    i32 1742983196, label %380
    i32 1505084564, label %384
    i32 -970495193, label %385
    i32 722430280, label %395
    i32 -374798048, label %407
    i32 -1815574755, label %409
    i32 1538873207, label %410
    i32 -252189754, label %414
    i32 1099860879, label %417
    i32 -310224160, label %418
    i32 -1184666332, label %440
    i32 -1007760607, label %462
    i32 889667208, label %472
    i32 533370657, label %482
    i32 -485282160, label %483
    i32 810646761, label %484
    i32 1354034885, label %485
    i32 1253295808, label %488
    i32 -1223963608, label %498
    i32 -1039080027, label %508
    i32 -1996426477, label %509
    i32 2098904410, label %510
    i32 514168171, label %520
    i32 838156237, label %531
    i32 -1711742191, label %532
    i32 -1443192361, label %535
    i32 -1028566778, label %537
    i32 111295355, label %538
    i32 1248068764, label %540
    i32 -1801360244, label %542
    i32 343625918, label %543
    i32 1718732804, label %544
    i32 -794058547, label %548
    i32 518097515, label %549
    i32 -1280338366, label %550
    i32 -233839380, label %551
    i32 -1458914999, label %552
    i32 -922753290, label %553
    i32 749696333, label %554
    i32 -526887739, label %555
    i32 1040430968, label %556
    i32 412874004, label %557
    i32 691527168, label %559
    i32 946031245, label %560
    i32 710267833, label %561
    i32 -150036254, label %562
  ]

.backedge:                                        ; preds = %7, %562, %561, %560, %559, %557, %556, %555, %554, %553, %552, %551, %550, %549, %548, %544, %543, %542, %538, %537, %535, %532, %531, %520, %510, %509, %508, %498, %488, %485, %484, %483, %482, %472, %462, %440, %418, %417, %414, %410, %409, %407, %395, %385, %384, %380, %379, %378, %367, %357, %356, %346, %336, %334, %333, %323, %313, %312, %301, %291, %279, %278, %271, %267, %266, %265, %255, %245, %238, %234, %233, %231, %219, %209, %208, %206, %179, %177, %165, %155, %154, %144, %134, %132, %131, %130, %119, %109, %108, %98, %88, %87, %74, %64, %60, %57, %55, %43, %33, %32, %22, %12, %8
  %.0105.be = phi i32 [ %.0105, %7 ], [ %.0105, %562 ], [ %.0105, %561 ], [ %.0105, %560 ], [ %.0105, %559 ], [ %.0105, %557 ], [ %.0105, %556 ], [ %.0105, %555 ], [ %.0105, %554 ], [ %.0105, %553 ], [ %.0105, %552 ], [ %.0105, %551 ], [ %.0105, %550 ], [ %.0105, %549 ], [ %.0105, %548 ], [ %.0105, %544 ], [ %.0105, %543 ], [ %.0105, %542 ], [ %.0105, %538 ], [ %.0105, %537 ], [ %.0105, %535 ], [ %.0105, %532 ], [ %.0105, %531 ], [ %.0105, %520 ], [ %.0105, %510 ], [ %.0105, %509 ], [ %.0105, %508 ], [ %.0105, %498 ], [ %.0105, %488 ], [ %.0105, %485 ], [ %.0105, %484 ], [ %.0105, %483 ], [ %.0105, %482 ], [ %.0105, %472 ], [ %.0105, %462 ], [ %.0105, %440 ], [ %.0105, %418 ], [ %.0105, %417 ], [ %.0105, %414 ], [ %.0105, %410 ], [ %.0105, %409 ], [ %.0105, %407 ], [ %.0105, %395 ], [ %.0105, %385 ], [ %.0105, %384 ], [ %.0105, %380 ], [ %.0105, %379 ], [ %.0105, %378 ], [ %.0105, %367 ], [ %.0105, %357 ], [ %.0105, %356 ], [ %.0105, %346 ], [ %.0105, %336 ], [ %.0105, %334 ], [ %.0105, %333 ], [ %.0105, %323 ], [ %.0105, %313 ], [ %.0105, %312 ], [ %.0105, %301 ], [ %.0105, %291 ], [ %.0105, %279 ], [ %.0105, %278 ], [ %.0105, %271 ], [ %.0105, %267 ], [ %.0105, %266 ], [ %.0105, %265 ], [ %.0105, %255 ], [ %.0105, %245 ], [ %.0105, %238 ], [ %.0105, %234 ], [ %.0105, %233 ], [ %.0105, %231 ], [ %.0105, %219 ], [ %.0105, %209 ], [ %.0105, %208 ], [ %.0105, %206 ], [ %.0105, %179 ], [ %.0105, %177 ], [ %.0105, %165 ], [ %.0105, %155 ], [ %.0105, %154 ], [ %.0105, %144 ], [ %.0105, %134 ], [ %133, %132 ], [ %.0105, %131 ], [ %.0105, %130 ], [ %.0105, %119 ], [ %.0105, %109 ], [ %.0105, %108 ], [ %.0105, %98 ], [ %.0105, %88 ], [ %.0105, %87 ], [ %.0105, %74 ], [ %.0105, %64 ], [ %.0105, %60 ], [ %.0105, %57 ], [ %.0105, %55 ], [ %.0105, %43 ], [ %.0105, %33 ], [ %.0105, %32 ], [ %.0105, %22 ], [ %.0105, %12 ], [ %.0105, %8 ]
  %.0103.be = phi i32 [ %.0103, %7 ], [ %.0103, %562 ], [ %.0103, %561 ], [ %.0103, %560 ], [ %.0103, %559 ], [ %.0103, %557 ], [ %.0103, %556 ], [ %.0103, %555 ], [ %.0103, %554 ], [ %.0103, %553 ], [ %.0103, %552 ], [ %.0103, %551 ], [ %.0103, %550 ], [ %.neg107, %549 ], [ %.0103, %548 ], [ %.0103, %544 ], [ %.0103, %543 ], [ 0, %542 ], [ %.0103, %538 ], [ %.0103, %537 ], [ %.0103, %535 ], [ %.0103, %532 ], [ %.0103, %531 ], [ %.0103, %520 ], [ %.0103, %510 ], [ %.0103, %509 ], [ %.0103, %508 ], [ %.0103, %498 ], [ %.0103, %488 ], [ %.0103, %485 ], [ %.0103, %484 ], [ %.0103, %483 ], [ %.0103, %482 ], [ %.0103, %472 ], [ %.0103, %462 ], [ %.0103, %440 ], [ %.0103, %418 ], [ %.0103, %417 ], [ %.0103, %414 ], [ %.0103, %410 ], [ %.0103, %409 ], [ %.0103, %407 ], [ %.0103, %395 ], [ %.0103, %385 ], [ %.0103, %384 ], [ %.0103, %380 ], [ %.0103, %379 ], [ %.0103, %378 ], [ %.0103, %367 ], [ %.0103, %357 ], [ %.0103, %356 ], [ %.0103, %346 ], [ %.0103, %336 ], [ %.0103, %334 ], [ %.0103, %333 ], [ %.0103, %323 ], [ %.0103, %313 ], [ %.0103, %312 ], [ %.0103, %301 ], [ %.0103, %291 ], [ %.0103, %279 ], [ %.0103, %278 ], [ %.0103, %271 ], [ %.0103, %267 ], [ %.0103, %266 ], [ %.0103, %265 ], [ %.0103, %255 ], [ %.0103, %245 ], [ %.0103, %238 ], [ %.0103, %234 ], [ %.0103, %233 ], [ %.0103, %231 ], [ %.0103, %219 ], [ %.0103, %209 ], [ %.0103, %208 ], [ %.0103, %206 ], [ %.0103, %179 ], [ %.0103, %177 ], [ %.0103, %165 ], [ %.0103, %155 ], [ %.0103, %154 ], [ %.0103, %144 ], [ %.0103, %134 ], [ %.0103, %132 ], [ %.0103, %131 ], [ %.0103, %130 ], [ %120, %119 ], [ %.0103, %109 ], [ %.0103, %108 ], [ %.0103, %98 ], [ %.0103, %88 ], [ %.0103, %87 ], [ %.0103, %74 ], [ %.0103, %64 ], [ %.0103, %60 ], [ %.0103, %57 ], [ %.0103, %55 ], [ %.0103, %43 ], [ %.0103, %33 ], [ %.0103, %32 ], [ 0, %22 ], [ %.0103, %12 ], [ %.0103, %8 ]
  %.0101.be = phi i32 [ %.0101, %7 ], [ %.0101, %562 ], [ %.0101, %561 ], [ %.0101, %560 ], [ %.0101, %559 ], [ %.0101, %557 ], [ %.0101, %556 ], [ %.0101, %555 ], [ %.0101, %554 ], [ %.0101, %553 ], [ %.0101, %552 ], [ %.0101, %551 ], [ 0, %550 ], [ %.0101, %549 ], [ %.0101, %548 ], [ %.0101, %544 ], [ %.0101, %543 ], [ %.0101, %542 ], [ %.0101, %538 ], [ %.0101, %537 ], [ %.0101, %535 ], [ %.0101, %532 ], [ %.0101, %531 ], [ %.0101, %520 ], [ %.0101, %510 ], [ %.0101, %509 ], [ %.0101, %508 ], [ %.0101, %498 ], [ %.0101, %488 ], [ %.0101, %485 ], [ %.0101, %484 ], [ %.0101, %483 ], [ %.0101, %482 ], [ %.0101, %472 ], [ %.0101, %462 ], [ %.0101, %440 ], [ %.0101, %418 ], [ %.0101, %417 ], [ %.0101, %414 ], [ %.0101, %410 ], [ %.0101, %409 ], [ %.0101, %407 ], [ %.0101, %395 ], [ %.0101, %385 ], [ %.0101, %384 ], [ %.0101, %380 ], [ %.0101, %379 ], [ %.0101, %378 ], [ %.0101, %367 ], [ %.0101, %357 ], [ %.0101, %356 ], [ %.0101, %346 ], [ %.0101, %336 ], [ %.0101, %334 ], [ %.0101, %333 ], [ %.0101, %323 ], [ %.0101, %313 ], [ %.0101, %312 ], [ %.0101, %301 ], [ %.0101, %291 ], [ %.0101, %279 ], [ %.0101, %278 ], [ %.0101, %271 ], [ %.0101, %267 ], [ %.0101, %266 ], [ %.0101, %265 ], [ %.0101, %255 ], [ %.0101, %245 ], [ %.0101, %238 ], [ %.0101, %234 ], [ %.0101, %233 ], [ %.0101, %231 ], [ %.0101, %219 ], [ %.0101, %209 ], [ %.0101, %208 ], [ %207, %206 ], [ %.0101, %179 ], [ %.0101, %177 ], [ %.0101, %165 ], [ %.0101, %155 ], [ %.0101, %154 ], [ 0, %144 ], [ %.0101, %134 ], [ %.0101, %132 ], [ %.0101, %131 ], [ %.0101, %130 ], [ %.0101, %119 ], [ %.0101, %109 ], [ %.0101, %108 ], [ %.0101, %98 ], [ %.0101, %88 ], [ %.0101, %87 ], [ %.0101, %74 ], [ %.0101, %64 ], [ %.0101, %60 ], [ %.0101, %57 ], [ %.0101, %55 ], [ %.0101, %43 ], [ %.0101, %33 ], [ %.0101, %32 ], [ %.0101, %22 ], [ %.0101, %12 ], [ %.0101, %8 ]
  %.099.be = phi i32 [ %.099, %7 ], [ %.099, %562 ], [ %.099, %561 ], [ %.099, %560 ], [ %.099, %559 ], [ %558, %557 ], [ %.099, %556 ], [ %.099, %555 ], [ %.099, %554 ], [ %.099, %553 ], [ %.099, %552 ], [ %.099, %551 ], [ %.099, %550 ], [ %.099, %549 ], [ %.099, %548 ], [ %.099, %544 ], [ %.099, %543 ], [ %.099, %542 ], [ %.099, %538 ], [ %.099, %537 ], [ %.099, %535 ], [ %.099, %532 ], [ %.099, %531 ], [ %.099, %520 ], [ %.099, %510 ], [ %.099, %509 ], [ %.099, %508 ], [ %.099, %498 ], [ %.099, %488 ], [ %.099, %485 ], [ %.099, %484 ], [ %.099, %483 ], [ %.099, %482 ], [ %.099, %472 ], [ %.099, %462 ], [ %.099, %440 ], [ %.099, %418 ], [ %.099, %417 ], [ %.099, %414 ], [ %.099, %410 ], [ %.099, %409 ], [ %.099, %407 ], [ %.099, %395 ], [ %.099, %385 ], [ %.099, %384 ], [ %.099, %380 ], [ %.099, %379 ], [ %.099, %378 ], [ %368, %367 ], [ %.099, %357 ], [ %.099, %356 ], [ %.099, %346 ], [ %.099, %336 ], [ %.099, %334 ], [ %.099, %333 ], [ %.099, %323 ], [ %.099, %313 ], [ %.099, %312 ], [ %.099, %301 ], [ %.099, %291 ], [ %.099, %279 ], [ %.099, %278 ], [ %.099, %271 ], [ %.099, %267 ], [ %.099, %266 ], [ %.099, %265 ], [ %.099, %255 ], [ %.099, %245 ], [ %.099, %238 ], [ %.099, %234 ], [ %.099, %233 ], [ %.099, %231 ], [ %.099, %219 ], [ %.099, %209 ], [ 0, %208 ], [ %.099, %206 ], [ %.099, %179 ], [ %.099, %177 ], [ %.099, %165 ], [ %.099, %155 ], [ %.099, %154 ], [ %.099, %144 ], [ %.099, %134 ], [ %.099, %132 ], [ %.099, %131 ], [ %.099, %130 ], [ %.099, %119 ], [ %.099, %109 ], [ %.099, %108 ], [ %.099, %98 ], [ %.099, %88 ], [ %.099, %87 ], [ %.099, %74 ], [ %.099, %64 ], [ %.099, %60 ], [ %.099, %57 ], [ %.099, %55 ], [ %.099, %43 ], [ %.099, %33 ], [ %.099, %32 ], [ %.099, %22 ], [ %.099, %12 ], [ %.099, %8 ]
  %.097.be = phi i32 [ %.097, %7 ], [ %.097, %562 ], [ %.097, %561 ], [ %.097, %560 ], [ %.097, %559 ], [ %.097, %557 ], [ %.097, %556 ], [ %.097, %555 ], [ %.097, %554 ], [ %.097, %553 ], [ %.097, %552 ], [ %.097, %551 ], [ %.097, %550 ], [ %.097, %549 ], [ %.097, %548 ], [ %.097, %544 ], [ %.097, %543 ], [ %.097, %542 ], [ %.097, %538 ], [ %.097, %537 ], [ %.097, %535 ], [ %.097, %532 ], [ %.097, %531 ], [ %.097, %520 ], [ %.097, %510 ], [ %.097, %509 ], [ %.097, %508 ], [ %.097, %498 ], [ %.097, %488 ], [ %.097, %485 ], [ %.097, %484 ], [ %.097, %483 ], [ %.097, %482 ], [ %.097, %472 ], [ %.097, %462 ], [ %.097, %440 ], [ %.097, %418 ], [ %.097, %417 ], [ %.097, %414 ], [ %.097, %410 ], [ %.097, %409 ], [ %.097, %407 ], [ %.097, %395 ], [ %.097, %385 ], [ %.097, %384 ], [ %.097, %380 ], [ %.097, %379 ], [ %.097, %378 ], [ %.097, %367 ], [ %.097, %357 ], [ %.097, %356 ], [ %.097, %346 ], [ %.097, %336 ], [ %335, %334 ], [ %.097, %333 ], [ %.097, %323 ], [ %.097, %313 ], [ %.097, %312 ], [ %.097, %301 ], [ %.097, %291 ], [ %.097, %279 ], [ %.097, %278 ], [ %.097, %271 ], [ %.097, %267 ], [ %.097, %266 ], [ %.097, %265 ], [ %.097, %255 ], [ %.097, %245 ], [ %.097, %238 ], [ %.097, %234 ], [ 0, %233 ], [ %.097, %231 ], [ %.097, %219 ], [ %.097, %209 ], [ %.097, %208 ], [ %.097, %206 ], [ %.097, %179 ], [ %.097, %177 ], [ %.097, %165 ], [ %.097, %155 ], [ %.097, %154 ], [ %.097, %144 ], [ %.097, %134 ], [ %.097, %132 ], [ %.097, %131 ], [ %.097, %130 ], [ %.097, %119 ], [ %.097, %109 ], [ %.097, %108 ], [ %.097, %98 ], [ %.097, %88 ], [ %.097, %87 ], [ %.097, %74 ], [ %.097, %64 ], [ %.097, %60 ], [ %.097, %57 ], [ %.097, %55 ], [ %.097, %43 ], [ %.097, %33 ], [ %.097, %32 ], [ %.097, %22 ], [ %.097, %12 ], [ %.097, %8 ]
  %.095.be = phi i32 [ %.095, %7 ], [ %.095, %562 ], [ %.095, %561 ], [ %.095, %560 ], [ %.095, %559 ], [ %.095, %557 ], [ %.095, %556 ], [ %.095, %555 ], [ %.neg, %554 ], [ %.095, %553 ], [ %.095, %552 ], [ %.095, %551 ], [ %.095, %550 ], [ %.095, %549 ], [ %.095, %548 ], [ %.095, %544 ], [ %.095, %543 ], [ %.095, %542 ], [ %.095, %538 ], [ %.095, %537 ], [ %.095, %535 ], [ %.095, %532 ], [ %.095, %531 ], [ %.095, %520 ], [ %.095, %510 ], [ %.095, %509 ], [ %.095, %508 ], [ %.095, %498 ], [ %.095, %488 ], [ %.095, %485 ], [ %.095, %484 ], [ %.095, %483 ], [ %.095, %482 ], [ %.095, %472 ], [ %.095, %462 ], [ %.095, %440 ], [ %.095, %418 ], [ %.095, %417 ], [ %.095, %414 ], [ %.095, %410 ], [ %.095, %409 ], [ %.095, %407 ], [ %.095, %395 ], [ %.095, %385 ], [ %.095, %384 ], [ %.095, %380 ], [ %.095, %379 ], [ %.095, %378 ], [ %.095, %367 ], [ %.095, %357 ], [ %.095, %356 ], [ %.095, %346 ], [ %.095, %336 ], [ %.095, %334 ], [ %.095, %333 ], [ %.095, %323 ], [ %.095, %313 ], [ %.095, %312 ], [ %302, %301 ], [ %.095, %291 ], [ %.095, %279 ], [ %.095, %278 ], [ %.095, %271 ], [ %.095, %267 ], [ 0, %266 ], [ %.095, %265 ], [ %.095, %255 ], [ %.095, %245 ], [ %.095, %238 ], [ %.095, %234 ], [ %.095, %233 ], [ %.095, %231 ], [ %.095, %219 ], [ %.095, %209 ], [ %.095, %208 ], [ %.095, %206 ], [ %.095, %179 ], [ %.095, %177 ], [ %.095, %165 ], [ %.095, %155 ], [ %.095, %154 ], [ %.095, %144 ], [ %.095, %134 ], [ %.095, %132 ], [ %.095, %131 ], [ %.095, %130 ], [ %.095, %119 ], [ %.095, %109 ], [ %.095, %108 ], [ %.095, %98 ], [ %.095, %88 ], [ %.095, %87 ], [ %.095, %74 ], [ %.095, %64 ], [ %.095, %60 ], [ %.095, %57 ], [ %.095, %55 ], [ %.095, %43 ], [ %.095, %33 ], [ %.095, %32 ], [ %.095, %22 ], [ %.095, %12 ], [ %.095, %8 ]
  %.093.be = phi i32 [ %.093, %7 ], [ %.093, %562 ], [ %.093, %561 ], [ %.093, %560 ], [ %.093, %559 ], [ %.093, %557 ], [ %.093, %556 ], [ %.093, %555 ], [ %.093, %554 ], [ %.093, %553 ], [ %.093, %552 ], [ %.093, %551 ], [ %.093, %550 ], [ %.093, %549 ], [ %.093, %548 ], [ %.093, %544 ], [ %.093, %543 ], [ %.093, %542 ], [ %.093, %538 ], [ %.093, %537 ], [ %536, %535 ], [ %.093, %532 ], [ %.093, %531 ], [ %.093, %520 ], [ %.093, %510 ], [ %.093, %509 ], [ %.093, %508 ], [ %.093, %498 ], [ %.093, %488 ], [ %.093, %485 ], [ %.093, %484 ], [ %.093, %483 ], [ %.093, %482 ], [ %.093, %472 ], [ %.093, %462 ], [ %.093, %440 ], [ %.093, %418 ], [ %.093, %417 ], [ %.093, %414 ], [ %.093, %410 ], [ %.093, %409 ], [ %.093, %407 ], [ %.093, %395 ], [ %.093, %385 ], [ %.093, %384 ], [ %.093, %380 ], [ 0, %379 ], [ %.093, %378 ], [ %.093, %367 ], [ %.093, %357 ], [ %.093, %356 ], [ %.093, %346 ], [ %.093, %336 ], [ %.093, %334 ], [ %.093, %333 ], [ %.093, %323 ], [ %.093, %313 ], [ %.093, %312 ], [ %.093, %301 ], [ %.093, %291 ], [ %.093, %279 ], [ %.093, %278 ], [ %.093, %271 ], [ %.093, %267 ], [ %.093, %266 ], [ %.093, %265 ], [ %.093, %255 ], [ %.093, %245 ], [ %.093, %238 ], [ %.093, %234 ], [ %.093, %233 ], [ %.093, %231 ], [ %.093, %219 ], [ %.093, %209 ], [ %.093, %208 ], [ %.093, %206 ], [ %.093, %179 ], [ %.093, %177 ], [ %.093, %165 ], [ %.093, %155 ], [ %.093, %154 ], [ %.093, %144 ], [ %.093, %134 ], [ %.093, %132 ], [ %.093, %131 ], [ %.093, %130 ], [ %.093, %119 ], [ %.093, %109 ], [ %.093, %108 ], [ %.093, %98 ], [ %.093, %88 ], [ %.093, %87 ], [ %.093, %74 ], [ %.093, %64 ], [ %.093, %60 ], [ %.093, %57 ], [ %.093, %55 ], [ %.093, %43 ], [ %.093, %33 ], [ %.093, %32 ], [ %.093, %22 ], [ %.093, %12 ], [ %.093, %8 ]
  %.091.be = phi i32 [ %.091, %7 ], [ %.091, %562 ], [ %.091, %561 ], [ %.091, %560 ], [ %.091, %559 ], [ %.091, %557 ], [ %.091, %556 ], [ %.091, %555 ], [ %.091, %554 ], [ %.091, %553 ], [ %.091, %552 ], [ %.091, %551 ], [ %.091, %550 ], [ %.091, %549 ], [ %.091, %548 ], [ %.091, %544 ], [ %.091, %543 ], [ %.091, %542 ], [ %539, %538 ], [ %.091, %537 ], [ %.091, %535 ], [ %.091, %532 ], [ %.091, %531 ], [ %.091, %520 ], [ %.091, %510 ], [ %.091, %509 ], [ %.091, %508 ], [ %.091, %498 ], [ %.091, %488 ], [ %.091, %485 ], [ %.091, %484 ], [ %.091, %483 ], [ %.091, %482 ], [ %.091, %472 ], [ %.091, %462 ], [ %.091, %440 ], [ %.091, %418 ], [ %.091, %417 ], [ %.091, %414 ], [ %.091, %410 ], [ %.091, %409 ], [ %.091, %407 ], [ %.091, %395 ], [ %.091, %385 ], [ %.091, %384 ], [ %.091, %380 ], [ 0, %379 ], [ %.091, %378 ], [ %.091, %367 ], [ %.091, %357 ], [ %.091, %356 ], [ %.091, %346 ], [ %.091, %336 ], [ %.091, %334 ], [ %.091, %333 ], [ %.091, %323 ], [ %.091, %313 ], [ %.091, %312 ], [ %.091, %301 ], [ %.091, %291 ], [ %.091, %279 ], [ %.091, %278 ], [ %.091, %271 ], [ %.091, %267 ], [ %.091, %266 ], [ %.091, %265 ], [ %.091, %255 ], [ %.091, %245 ], [ %.091, %238 ], [ %.091, %234 ], [ %.091, %233 ], [ %.091, %231 ], [ %.091, %219 ], [ %.091, %209 ], [ %.091, %208 ], [ %.091, %206 ], [ %.091, %179 ], [ %.091, %177 ], [ %.091, %165 ], [ %.091, %155 ], [ %.091, %154 ], [ %.091, %144 ], [ %.091, %134 ], [ %.091, %132 ], [ %.091, %131 ], [ %.091, %130 ], [ %.091, %119 ], [ %.091, %109 ], [ %.091, %108 ], [ %.091, %98 ], [ %.091, %88 ], [ %.091, %87 ], [ %.091, %74 ], [ %.091, %64 ], [ %.091, %60 ], [ %.091, %57 ], [ %.091, %55 ], [ %.091, %43 ], [ %.091, %33 ], [ %.091, %32 ], [ %.091, %22 ], [ %.091, %12 ], [ %.091, %8 ]
  %.089.be = phi i8 [ %.089, %7 ], [ %.089, %562 ], [ %.089, %561 ], [ 1, %560 ], [ %.089, %559 ], [ %.089, %557 ], [ %.089, %556 ], [ %.089, %555 ], [ %.089, %554 ], [ %.089, %553 ], [ %.089, %552 ], [ %.089, %551 ], [ %.089, %550 ], [ %.089, %549 ], [ %.089, %548 ], [ %.089, %544 ], [ %.089, %543 ], [ %.089, %542 ], [ %.089, %538 ], [ %.089, %537 ], [ %.089, %535 ], [ %.089, %532 ], [ %.089, %531 ], [ %.089, %520 ], [ %.089, %510 ], [ %.089, %509 ], [ %.089, %508 ], [ %.089, %498 ], [ %.089, %488 ], [ %.089, %485 ], [ %.089, %484 ], [ %.089, %483 ], [ %.089, %482 ], [ 1, %472 ], [ %.089, %462 ], [ %.089, %440 ], [ %.089, %418 ], [ %.089, %417 ], [ %.089, %414 ], [ %.089, %410 ], [ %.089, %409 ], [ %.089, %407 ], [ %.089, %395 ], [ %.089, %385 ], [ 0, %384 ], [ %.089, %380 ], [ %.089, %379 ], [ %.089, %378 ], [ %.089, %367 ], [ %.089, %357 ], [ %.089, %356 ], [ %.089, %346 ], [ %.089, %336 ], [ %.089, %334 ], [ %.089, %333 ], [ %.089, %323 ], [ %.089, %313 ], [ %.089, %312 ], [ %.089, %301 ], [ %.089, %291 ], [ %.089, %279 ], [ %.089, %278 ], [ %.089, %271 ], [ %.089, %267 ], [ %.089, %266 ], [ %.089, %265 ], [ %.089, %255 ], [ %.089, %245 ], [ %.089, %238 ], [ %.089, %234 ], [ %.089, %233 ], [ %.089, %231 ], [ %.089, %219 ], [ %.089, %209 ], [ %.089, %208 ], [ %.089, %206 ], [ %.089, %179 ], [ %.089, %177 ], [ %.089, %165 ], [ %.089, %155 ], [ %.089, %154 ], [ %.089, %144 ], [ %.089, %134 ], [ %.089, %132 ], [ %.089, %131 ], [ %.089, %130 ], [ %.089, %119 ], [ %.089, %109 ], [ %.089, %108 ], [ %.089, %98 ], [ %.089, %88 ], [ %.089, %87 ], [ %.089, %74 ], [ %.089, %64 ], [ %.089, %60 ], [ %.089, %57 ], [ %.089, %55 ], [ %.089, %43 ], [ %.089, %33 ], [ %.089, %32 ], [ %.089, %22 ], [ %.089, %12 ], [ %.089, %8 ]
  %.087.be = phi i32 [ %.087, %7 ], [ %563, %562 ], [ %.087, %561 ], [ %.087, %560 ], [ %.087, %559 ], [ %.087, %557 ], [ %.087, %556 ], [ %.087, %555 ], [ %.087, %554 ], [ %.087, %553 ], [ %.087, %552 ], [ %.087, %551 ], [ %.087, %550 ], [ %.087, %549 ], [ %.087, %548 ], [ %.087, %544 ], [ %.087, %543 ], [ %.087, %542 ], [ %.087, %538 ], [ %.087, %537 ], [ %.087, %535 ], [ %.087, %532 ], [ %.087, %531 ], [ %521, %520 ], [ %.087, %510 ], [ %.087, %509 ], [ %.087, %508 ], [ %.087, %498 ], [ %.087, %488 ], [ %.087, %485 ], [ %.087, %484 ], [ %.087, %483 ], [ %.087, %482 ], [ %.087, %472 ], [ %.087, %462 ], [ %.087, %440 ], [ %.087, %418 ], [ %.087, %417 ], [ %.087, %414 ], [ %.087, %410 ], [ %.087, %409 ], [ %.087, %407 ], [ %.087, %395 ], [ %.087, %385 ], [ 0, %384 ], [ %.087, %380 ], [ %.087, %379 ], [ %.087, %378 ], [ %.087, %367 ], [ %.087, %357 ], [ %.087, %356 ], [ %.087, %346 ], [ %.087, %336 ], [ %.087, %334 ], [ %.087, %333 ], [ %.087, %323 ], [ %.087, %313 ], [ %.087, %312 ], [ %.087, %301 ], [ %.087, %291 ], [ %.087, %279 ], [ %.087, %278 ], [ %.087, %271 ], [ %.087, %267 ], [ %.087, %266 ], [ %.087, %265 ], [ %.087, %255 ], [ %.087, %245 ], [ %.087, %238 ], [ %.087, %234 ], [ %.087, %233 ], [ %.087, %231 ], [ %.087, %219 ], [ %.087, %209 ], [ %.087, %208 ], [ %.087, %206 ], [ %.087, %179 ], [ %.087, %177 ], [ %.087, %165 ], [ %.087, %155 ], [ %.087, %154 ], [ %.087, %144 ], [ %.087, %134 ], [ %.087, %132 ], [ %.087, %131 ], [ %.087, %130 ], [ %.087, %119 ], [ %.087, %109 ], [ %.087, %108 ], [ %.087, %98 ], [ %.087, %88 ], [ %.087, %87 ], [ %.087, %74 ], [ %.087, %64 ], [ %.087, %60 ], [ %.087, %57 ], [ %.087, %55 ], [ %.087, %43 ], [ %.087, %33 ], [ %.087, %32 ], [ %.087, %22 ], [ %.087, %12 ], [ %.087, %8 ]
  %.085.be = phi i32 [ %.085, %7 ], [ %.085, %562 ], [ %.085, %561 ], [ %.085, %560 ], [ %.085, %559 ], [ %.085, %557 ], [ %.085, %556 ], [ %.085, %555 ], [ %.085, %554 ], [ %.085, %553 ], [ %.085, %552 ], [ %.085, %551 ], [ %.085, %550 ], [ %.085, %549 ], [ %.085, %548 ], [ %.085, %544 ], [ %.085, %543 ], [ %.085, %542 ], [ %.085, %538 ], [ %.085, %537 ], [ %.085, %535 ], [ %.085, %532 ], [ %.085, %531 ], [ %.085, %520 ], [ %.085, %510 ], [ %.085, %509 ], [ %.085, %508 ], [ %.085, %498 ], [ %.085, %488 ], [ %.085, %485 ], [ %.neg109, %484 ], [ %.085, %483 ], [ %.085, %482 ], [ %.085, %472 ], [ %.085, %462 ], [ %.085, %440 ], [ %.085, %418 ], [ %.085, %417 ], [ %.085, %414 ], [ %.085, %410 ], [ 0, %409 ], [ %.085, %407 ], [ %.085, %395 ], [ %.085, %385 ], [ %.085, %384 ], [ %.085, %380 ], [ %.085, %379 ], [ %.085, %378 ], [ %.085, %367 ], [ %.085, %357 ], [ %.085, %356 ], [ %.085, %346 ], [ %.085, %336 ], [ %.085, %334 ], [ %.085, %333 ], [ %.085, %323 ], [ %.085, %313 ], [ %.085, %312 ], [ %.085, %301 ], [ %.085, %291 ], [ %.085, %279 ], [ %.085, %278 ], [ %.085, %271 ], [ %.085, %267 ], [ %.085, %266 ], [ %.085, %265 ], [ %.085, %255 ], [ %.085, %245 ], [ %.085, %238 ], [ %.085, %234 ], [ %.085, %233 ], [ %.085, %231 ], [ %.085, %219 ], [ %.085, %209 ], [ %.085, %208 ], [ %.085, %206 ], [ %.085, %179 ], [ %.085, %177 ], [ %.085, %165 ], [ %.085, %155 ], [ %.085, %154 ], [ %.085, %144 ], [ %.085, %134 ], [ %.085, %132 ], [ %.085, %131 ], [ %.085, %130 ], [ %.085, %119 ], [ %.085, %109 ], [ %.085, %108 ], [ %.085, %98 ], [ %.085, %88 ], [ %.085, %87 ], [ %.085, %74 ], [ %.085, %64 ], [ %.085, %60 ], [ %.085, %57 ], [ %.085, %55 ], [ %.085, %43 ], [ %.085, %33 ], [ %.085, %32 ], [ %.085, %22 ], [ %.085, %12 ], [ %.085, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ 514168171, %562 ], [ -1223963608, %561 ], [ 889667208, %560 ], [ 722430280, %559 ], [ 1916096546, %557 ], [ 1721901814, %556 ], [ 1272187895, %555 ], [ 577613145, %554 ], [ -2084844442, %553 ], [ 1472654344, %552 ], [ -1333250393, %551 ], [ 1425178243, %550 ], [ -1595006138, %549 ], [ 1164154257, %548 ], [ 227200808, %544 ], [ 1004764396, %543 ], [ -779110950, %542 ], [ 1742983196, %538 ], [ 111295355, %537 ], [ -1028566778, %535 ], [ %534, %532 ], [ -970495193, %531 ], [ %530, %520 ], [ %519, %510 ], [ 2098904410, %509 ], [ -1711742191, %508 ], [ %507, %498 ], [ %497, %488 ], [ %487, %485 ], [ 1538873207, %484 ], [ 810646761, %483 ], [ 1354034885, %482 ], [ %481, %472 ], [ %471, %462 ], [ %461, %440 ], [ %439, %418 ], [ 810646761, %417 ], [ %416, %414 ], [ %413, %410 ], [ 1538873207, %409 ], [ %408, %407 ], [ %406, %395 ], [ %394, %385 ], [ -970495193, %384 ], [ %383, %380 ], [ 1742983196, %379 ], [ 1312680382, %378 ], [ %377, %367 ], [ %366, %357 ], [ -247800811, %356 ], [ %355, %346 ], [ %345, %336 ], [ -71059357, %334 ], [ 361921364, %333 ], [ %332, %323 ], [ %322, %313 ], [ -805096716, %312 ], [ %311, %301 ], [ %300, %291 ], [ -312847486, %279 ], [ -312847486, %278 ], [ %277, %271 ], [ %270, %267 ], [ -805096716, %266 ], [ 361921364, %265 ], [ %264, %255 ], [ %254, %245 ], [ %244, %238 ], [ %237, %234 ], [ -71059357, %233 ], [ %232, %231 ], [ %230, %219 ], [ %218, %209 ], [ 1312680382, %208 ], [ -2061457275, %206 ], [ -282563506, %179 ], [ %178, %177 ], [ %176, %165 ], [ %164, %155 ], [ -2061457275, %154 ], [ %153, %144 ], [ %143, %134 ], [ -1040347878, %132 ], [ 262757387, %131 ], [ 725942232, %130 ], [ %129, %119 ], [ %118, %109 ], [ -1951765307, %108 ], [ %107, %98 ], [ %97, %88 ], [ 474008294, %87 ], [ %86, %74 ], [ %73, %64 ], [ 474008294, %60 ], [ %59, %57 ], [ %56, %55 ], [ %54, %43 ], [ %42, %33 ], [ 725942232, %32 ], [ %31, %22 ], [ %21, %12 ], [ %11, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = load i32, i32* @N, align 4
  %10 = icmp slt i32 %.0105, %9
  %11 = select i1 %10, i32 2102234633, i32 -1651694603
  br label %.backedge

12:                                               ; preds = %7
  %13 = load i32, i32* @x.3, align 4
  %14 = load i32, i32* @y.4, align 4
  %15 = add i32 %13, -1
  %16 = mul i32 %15, %13
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %19, %18
  %21 = select i1 %20, i32 -779110950, i32 -1801360244
  br label %.backedge

22:                                               ; preds = %7
  %23 = load i32, i32* @x.3, align 4
  %24 = load i32, i32* @y.4, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 189303697, i32 -1801360244
  br label %.backedge

32:                                               ; preds = %7
  br label %.backedge

33:                                               ; preds = %7
  %34 = load i32, i32* @x.3, align 4
  %35 = load i32, i32* @y.4, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 1004764396, i32 343625918
  br label %.backedge

43:                                               ; preds = %7
  %44 = load i32, i32* @N, align 4
  %45 = icmp slt i32 %.0103, %44
  store i1 %45, i1* %4, align 1
  %46 = load i32, i32* @x.3, align 4
  %47 = load i32, i32* @y.4, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 1360798509, i32 343625918
  br label %.backedge

55:                                               ; preds = %7
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %56 = select i1 %.0..0..0., i32 -243703315, i32 -1626865978
  br label %.backedge

57:                                               ; preds = %7
  %58 = icmp eq i32 %.0103, %.0105
  %59 = select i1 %58, i32 -1422671760, i32 -2103649233
  br label %.backedge

60:                                               ; preds = %7
  %61 = sext i32 %.0105 to i64
  %62 = sext i32 %.0103 to i64
  %63 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %61, i64 %62
  store i32 0, i32* %63, align 4
  br label %.backedge

64:                                               ; preds = %7
  %65 = load i32, i32* @x.3, align 4
  %66 = load i32, i32* @y.4, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 227200808, i32 1718732804
  br label %.backedge

74:                                               ; preds = %7
  %75 = sext i32 %.0105 to i64
  %76 = sext i32 %.0103 to i64
  %77 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %75, i64 %76
  store i32 2000000000, i32* %77, align 4
  %78 = load i32, i32* @x.3, align 4
  %79 = load i32, i32* @y.4, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 444159023, i32 1718732804
  br label %.backedge

87:                                               ; preds = %7
  br label %.backedge

88:                                               ; preds = %7
  %89 = load i32, i32* @x.3, align 4
  %90 = load i32, i32* @y.4, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 1164154257, i32 -794058547
  br label %.backedge

98:                                               ; preds = %7
  %99 = load i32, i32* @x.3, align 4
  %100 = load i32, i32* @y.4, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 -1740785878, i32 -794058547
  br label %.backedge

108:                                              ; preds = %7
  br label %.backedge

109:                                              ; preds = %7
  %110 = load i32, i32* @x.3, align 4
  %111 = load i32, i32* @y.4, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 -1595006138, i32 518097515
  br label %.backedge

119:                                              ; preds = %7
  %120 = add i32 %.0103, 1
  %121 = load i32, i32* @x.3, align 4
  %122 = load i32, i32* @y.4, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 1358423236, i32 518097515
  br label %.backedge

130:                                              ; preds = %7
  br label %.backedge

131:                                              ; preds = %7
  br label %.backedge

132:                                              ; preds = %7
  %133 = add i32 %.0105, 1
  br label %.backedge

134:                                              ; preds = %7
  %135 = load i32, i32* @x.3, align 4
  %136 = load i32, i32* @y.4, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 1425178243, i32 -1280338366
  br label %.backedge

144:                                              ; preds = %7
  %145 = load i32, i32* @x.3, align 4
  %146 = load i32, i32* @y.4, align 4
  %147 = add i32 %145, -1
  %148 = mul i32 %147, %145
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %151, %150
  %153 = select i1 %152, i32 253333988, i32 -1280338366
  br label %.backedge

154:                                              ; preds = %7
  br label %.backedge

155:                                              ; preds = %7
  %156 = load i32, i32* @x.3, align 4
  %157 = load i32, i32* @y.4, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 -1333250393, i32 -233839380
  br label %.backedge

165:                                              ; preds = %7
  %166 = load i32, i32* @M, align 4
  %167 = icmp slt i32 %.0101, %166
  store i1 %167, i1* %3, align 1
  %168 = load i32, i32* @x.3, align 4
  %169 = load i32, i32* @y.4, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 1040824359, i32 -233839380
  br label %.backedge

177:                                              ; preds = %7
  %.0..0..0.82 = load volatile i1, i1* %3, align 1
  %178 = select i1 %.0..0..0.82, i32 304803923, i32 1200225898
  br label %.backedge

179:                                              ; preds = %7
  %180 = sext i32 %.0101 to i64
  %181 = getelementptr inbounds [1005 x %struct.Edge], [1005 x %struct.Edge]* @edge, i64 0, i64 %180, i32 0
  %182 = getelementptr inbounds [1005 x %struct.Edge], [1005 x %struct.Edge]* @edge, i64 0, i64 %180, i32 1
  %183 = getelementptr inbounds [1005 x %struct.Edge], [1005 x %struct.Edge]* @edge, i64 0, i64 %180, i32 2
  %184 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %181, i32* nonnull %182, i32* nonnull %183)
  %185 = load i32, i32* %181, align 4
  %186 = add i32 %185, -1
  store i32 %186, i32* %181, align 4
  %187 = load i32, i32* %182, align 4
  %.neg110 = add i32 %187, -1
  store i32 %.neg110, i32* %182, align 4
  %188 = sext i32 %186 to i64
  %189 = sext i32 %.neg110 to i64
  %190 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %188, i64 %189
  %191 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %190, i32* nonnull dereferenceable(4) %183)
  %192 = load i32, i32* %191, align 4
  %193 = load i32, i32* %181, align 4
  %194 = sext i32 %193 to i64
  %195 = load i32, i32* %182, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %194, i64 %196
  store i32 %192, i32* %197, align 4
  %198 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %196, i64 %194
  %199 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %198, i32* nonnull dereferenceable(4) %183)
  %200 = load i32, i32* %199, align 4
  %201 = load i32, i32* %182, align 4
  %202 = sext i32 %201 to i64
  %203 = load i32, i32* %181, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %202, i64 %204
  store i32 %200, i32* %205, align 4
  br label %.backedge

206:                                              ; preds = %7
  %207 = add i32 %.0101, 1
  br label %.backedge

208:                                              ; preds = %7
  br label %.backedge

209:                                              ; preds = %7
  %210 = load i32, i32* @x.3, align 4
  %211 = load i32, i32* @y.4, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 1472654344, i32 -1458914999
  br label %.backedge

219:                                              ; preds = %7
  %220 = load i32, i32* @N, align 4
  %221 = icmp slt i32 %.099, %220
  store i1 %221, i1* %2, align 1
  %222 = load i32, i32* @x.3, align 4
  %223 = load i32, i32* @y.4, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 -623388029, i32 -1458914999
  br label %.backedge

231:                                              ; preds = %7
  %.0..0..0.83 = load volatile i1, i1* %2, align 1
  %232 = select i1 %.0..0..0.83, i32 848522570, i32 -186212615
  br label %.backedge

233:                                              ; preds = %7
  br label %.backedge

234:                                              ; preds = %7
  %235 = load i32, i32* @N, align 4
  %236 = icmp slt i32 %.097, %235
  %237 = select i1 %236, i32 688127709, i32 1765664933
  br label %.backedge

238:                                              ; preds = %7
  %239 = sext i32 %.097 to i64
  %240 = sext i32 %.099 to i64
  %241 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %239, i64 %240
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, 2000000000
  %244 = select i1 %243, i32 939641217, i32 2147414621
  br label %.backedge

245:                                              ; preds = %7
  %246 = load i32, i32* @x.3, align 4
  %247 = load i32, i32* @y.4, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 -2084844442, i32 -922753290
  br label %.backedge

255:                                              ; preds = %7
  %256 = load i32, i32* @x.3, align 4
  %257 = load i32, i32* @y.4, align 4
  %258 = add i32 %256, -1
  %259 = mul i32 %258, %256
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %262, %261
  %264 = select i1 %263, i32 -1220001923, i32 -922753290
  br label %.backedge

265:                                              ; preds = %7
  br label %.backedge

266:                                              ; preds = %7
  br label %.backedge

267:                                              ; preds = %7
  %268 = load i32, i32* @N, align 4
  %269 = icmp slt i32 %.095, %268
  %270 = select i1 %269, i32 732140351, i32 1515732985
  br label %.backedge

271:                                              ; preds = %7
  %272 = sext i32 %.099 to i64
  %273 = sext i32 %.095 to i64
  %274 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %272, i64 %273
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %275, 2000000000
  %277 = select i1 %276, i32 -1894976182, i32 1236079026
  br label %.backedge

278:                                              ; preds = %7
  br label %.backedge

279:                                              ; preds = %7
  %280 = sext i32 %.097 to i64
  %281 = sext i32 %.095 to i64
  %282 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %280, i64 %281
  %283 = sext i32 %.099 to i64
  %284 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %280, i64 %283
  %285 = load i32, i32* %284, align 4
  %286 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %283, i64 %281
  %287 = load i32, i32* %286, align 4
  %288 = add i32 %287, %285
  store i32 %288, i32* %5, align 4
  %289 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %282, i32* nonnull dereferenceable(4) %5)
  %290 = load i32, i32* %289, align 4
  store i32 %290, i32* %282, align 4
  br label %.backedge

291:                                              ; preds = %7
  %292 = load i32, i32* @x.3, align 4
  %293 = load i32, i32* @y.4, align 4
  %294 = add i32 %292, -1
  %295 = mul i32 %294, %292
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %298, %297
  %300 = select i1 %299, i32 577613145, i32 749696333
  br label %.backedge

301:                                              ; preds = %7
  %302 = add i32 %.095, 1
  %303 = load i32, i32* @x.3, align 4
  %304 = load i32, i32* @y.4, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 1942767839, i32 749696333
  br label %.backedge

312:                                              ; preds = %7
  br label %.backedge

313:                                              ; preds = %7
  %314 = load i32, i32* @x.3, align 4
  %315 = load i32, i32* @y.4, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 1272187895, i32 -526887739
  br label %.backedge

323:                                              ; preds = %7
  %324 = load i32, i32* @x.3, align 4
  %325 = load i32, i32* @y.4, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 -1557783313, i32 -526887739
  br label %.backedge

333:                                              ; preds = %7
  br label %.backedge

334:                                              ; preds = %7
  %335 = add i32 %.097, 1
  br label %.backedge

336:                                              ; preds = %7
  %337 = load i32, i32* @x.3, align 4
  %338 = load i32, i32* @y.4, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 1721901814, i32 1040430968
  br label %.backedge

346:                                              ; preds = %7
  %347 = load i32, i32* @x.3, align 4
  %348 = load i32, i32* @y.4, align 4
  %349 = add i32 %347, -1
  %350 = mul i32 %349, %347
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %353, %352
  %355 = select i1 %354, i32 -213555084, i32 1040430968
  br label %.backedge

356:                                              ; preds = %7
  br label %.backedge

357:                                              ; preds = %7
  %358 = load i32, i32* @x.3, align 4
  %359 = load i32, i32* @y.4, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 1916096546, i32 412874004
  br label %.backedge

367:                                              ; preds = %7
  %368 = add i32 %.099, 1
  %369 = load i32, i32* @x.3, align 4
  %370 = load i32, i32* @y.4, align 4
  %371 = add i32 %369, -1
  %372 = mul i32 %371, %369
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %375, %374
  %377 = select i1 %376, i32 1384780566, i32 412874004
  br label %.backedge

378:                                              ; preds = %7
  br label %.backedge

379:                                              ; preds = %7
  br label %.backedge

380:                                              ; preds = %7
  %381 = load i32, i32* @M, align 4
  %382 = icmp slt i32 %.091, %381
  %383 = select i1 %382, i32 1505084564, i32 1248068764
  br label %.backedge

384:                                              ; preds = %7
  br label %.backedge

385:                                              ; preds = %7
  %386 = load i32, i32* @x.3, align 4
  %387 = load i32, i32* @y.4, align 4
  %388 = add i32 %386, -1
  %389 = mul i32 %388, %386
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %392, %391
  %394 = select i1 %393, i32 722430280, i32 691527168
  br label %.backedge

395:                                              ; preds = %7
  %396 = load i32, i32* @N, align 4
  %397 = icmp slt i32 %.087, %396
  store i1 %397, i1* %1, align 1
  %398 = load i32, i32* @x.3, align 4
  %399 = load i32, i32* @y.4, align 4
  %400 = add i32 %398, -1
  %401 = mul i32 %400, %398
  %402 = and i32 %401, 1
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %404, %403
  %406 = select i1 %405, i32 -374798048, i32 691527168
  br label %.backedge

407:                                              ; preds = %7
  %.0..0..0.84 = load volatile i1, i1* %1, align 1
  %408 = select i1 %.0..0..0.84, i32 -1815574755, i32 -1711742191
  br label %.backedge

409:                                              ; preds = %7
  br label %.backedge

410:                                              ; preds = %7
  %411 = load i32, i32* @N, align 4
  %412 = icmp slt i32 %.085, %411
  %413 = select i1 %412, i32 -252189754, i32 1354034885
  br label %.backedge

414:                                              ; preds = %7
  %415 = icmp eq i32 %.085, %.087
  %416 = select i1 %415, i32 1099860879, i32 -310224160
  br label %.backedge

417:                                              ; preds = %7
  br label %.backedge

418:                                              ; preds = %7
  %419 = sext i32 %.087 to i64
  %420 = sext i32 %.085 to i64
  %421 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %419, i64 %420
  %422 = load i32, i32* %421, align 4
  %423 = sext i32 %.091 to i64
  %424 = getelementptr inbounds [1005 x %struct.Edge], [1005 x %struct.Edge]* @edge, i64 0, i64 %423, i32 0
  %425 = load i32, i32* %424, align 4
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %419, i64 %426
  %428 = load i32, i32* %427, align 4
  %429 = getelementptr inbounds [1005 x %struct.Edge], [1005 x %struct.Edge]* @edge, i64 0, i64 %423, i32 2
  %430 = load i32, i32* %429, align 4
  %431 = add i32 %430, %428
  %432 = getelementptr inbounds [1005 x %struct.Edge], [1005 x %struct.Edge]* @edge, i64 0, i64 %423, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %434, i64 %420
  %436 = load i32, i32* %435, align 4
  %437 = add i32 %431, %436
  %438 = icmp eq i32 %422, %437
  %439 = select i1 %438, i32 -1007760607, i32 -1184666332
  br label %.backedge

440:                                              ; preds = %7
  %441 = sext i32 %.087 to i64
  %442 = sext i32 %.085 to i64
  %443 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %441, i64 %442
  %444 = load i32, i32* %443, align 4
  %445 = sext i32 %.091 to i64
  %446 = getelementptr inbounds [1005 x %struct.Edge], [1005 x %struct.Edge]* @edge, i64 0, i64 %445, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %441, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = getelementptr inbounds [1005 x %struct.Edge], [1005 x %struct.Edge]* @edge, i64 0, i64 %445, i32 2
  %452 = load i32, i32* %451, align 4
  %453 = add i32 %452, %450
  %454 = getelementptr inbounds [1005 x %struct.Edge], [1005 x %struct.Edge]* @edge, i64 0, i64 %445, i32 0
  %455 = load i32, i32* %454, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %456, i64 %442
  %458 = load i32, i32* %457, align 4
  %459 = add i32 %453, %458
  %460 = icmp eq i32 %444, %459
  %461 = select i1 %460, i32 -1007760607, i32 -485282160
  br label %.backedge

462:                                              ; preds = %7
  %463 = load i32, i32* @x.3, align 4
  %464 = load i32, i32* @y.4, align 4
  %465 = add i32 %463, -1
  %466 = mul i32 %465, %463
  %467 = and i32 %466, 1
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %469, %468
  %471 = select i1 %470, i32 889667208, i32 946031245
  br label %.backedge

472:                                              ; preds = %7
  %473 = load i32, i32* @x.3, align 4
  %474 = load i32, i32* @y.4, align 4
  %475 = add i32 %473, -1
  %476 = mul i32 %475, %473
  %477 = and i32 %476, 1
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %479, %478
  %481 = select i1 %480, i32 533370657, i32 946031245
  br label %.backedge

482:                                              ; preds = %7
  br label %.backedge

483:                                              ; preds = %7
  br label %.backedge

484:                                              ; preds = %7
  %.neg109 = add i32 %.085, 1
  br label %.backedge

485:                                              ; preds = %7
  %486 = and i8 %.089, 1
  %.not108 = icmp eq i8 %486, 0
  %487 = select i1 %.not108, i32 -1996426477, i32 1253295808
  br label %.backedge

488:                                              ; preds = %7
  %489 = load i32, i32* @x.3, align 4
  %490 = load i32, i32* @y.4, align 4
  %491 = add i32 %489, -1
  %492 = mul i32 %491, %489
  %493 = and i32 %492, 1
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %495, %494
  %497 = select i1 %496, i32 -1223963608, i32 710267833
  br label %.backedge

498:                                              ; preds = %7
  %499 = load i32, i32* @x.3, align 4
  %500 = load i32, i32* @y.4, align 4
  %501 = add i32 %499, -1
  %502 = mul i32 %501, %499
  %503 = and i32 %502, 1
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %505, %504
  %507 = select i1 %506, i32 -1039080027, i32 710267833
  br label %.backedge

508:                                              ; preds = %7
  br label %.backedge

509:                                              ; preds = %7
  br label %.backedge

510:                                              ; preds = %7
  %511 = load i32, i32* @x.3, align 4
  %512 = load i32, i32* @y.4, align 4
  %513 = add i32 %511, -1
  %514 = mul i32 %513, %511
  %515 = and i32 %514, 1
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %517, %516
  %519 = select i1 %518, i32 514168171, i32 -150036254
  br label %.backedge

520:                                              ; preds = %7
  %521 = add i32 %.087, 1
  %522 = load i32, i32* @x.3, align 4
  %523 = load i32, i32* @y.4, align 4
  %524 = add i32 %522, -1
  %525 = mul i32 %524, %522
  %526 = and i32 %525, 1
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %528, %527
  %530 = select i1 %529, i32 838156237, i32 -150036254
  br label %.backedge

531:                                              ; preds = %7
  br label %.backedge

532:                                              ; preds = %7
  %533 = and i8 %.089, 1
  %.not = icmp eq i8 %533, 0
  %534 = select i1 %.not, i32 -1443192361, i32 -1028566778
  br label %.backedge

535:                                              ; preds = %7
  %536 = add i32 %.093, 1
  br label %.backedge

537:                                              ; preds = %7
  br label %.backedge

538:                                              ; preds = %7
  %539 = add i32 %.091, 1
  br label %.backedge

540:                                              ; preds = %7
  %541 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %.093)
  ret i32 0

542:                                              ; preds = %7
  br label %.backedge

543:                                              ; preds = %7
  br label %.backedge

544:                                              ; preds = %7
  %545 = sext i32 %.0105 to i64
  %546 = sext i32 %.0103 to i64
  %547 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @min_dist, i64 0, i64 %545, i64 %546
  store i32 2000000000, i32* %547, align 4
  br label %.backedge

548:                                              ; preds = %7
  br label %.backedge

549:                                              ; preds = %7
  %.neg107 = add i32 %.0103, 1
  br label %.backedge

550:                                              ; preds = %7
  br label %.backedge

551:                                              ; preds = %7
  br label %.backedge

552:                                              ; preds = %7
  br label %.backedge

553:                                              ; preds = %7
  br label %.backedge

554:                                              ; preds = %7
  %.neg = add i32 %.095, 1
  br label %.backedge

555:                                              ; preds = %7
  br label %.backedge

556:                                              ; preds = %7
  br label %.backedge

557:                                              ; preds = %7
  %558 = add i32 %.099, 1
  br label %.backedge

559:                                              ; preds = %7
  br label %.backedge

560:                                              ; preds = %7
  br label %.backedge

561:                                              ; preds = %7
  br label %.backedge

562:                                              ; preds = %7
  %563 = add i32 %.087, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.5, align 4
  %9 = load i32, i32* @y.6, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 1409669965, i32 1389901348
  %17 = select i1 %15, i32 -2135028539, i32 1389901348
  %18 = select i1 %15, i32 2061662604, i32 699792329
  %19 = select i1 %15, i32 1206305111, i32 699792329
  %20 = select i1 %15, i32 -484274913, i32 -459652921
  %21 = select i1 %15, i32 1849415090, i32 -459652921
  br label %22

22:                                               ; preds = %.backedge, %2
  %.01114 = phi i32* [ undef, %2 ], [ %.01114.be, %.backedge ]
  %.011 = phi i32* [ undef, %2 ], [ %.011.be, %.backedge ]
  %.0 = phi i32 [ 542870376, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 542870376, label %23
    i32 81512982, label %26
    i32 1849415090, label %27
    i32 -484274913, label %28
    i32 1278920878, label %29
    i32 1206305111, label %30
    i32 2061662604, label %31
    i32 582728855, label %32
    i32 -2135028539, label %33
    i32 1409669965, label %34
    i32 -459652921, label %35
    i32 699792329, label %36
    i32 1389901348, label %37
  ]

.backedge:                                        ; preds = %22, %37, %36, %35, %33, %32, %31, %30, %29, %28, %27, %26, %23
  %.01114.be = phi i32* [ %.01114, %22 ], [ %.01114, %37 ], [ %.01114, %36 ], [ %.01114, %35 ], [ %.011, %33 ], [ %.01114, %32 ], [ %.01114, %31 ], [ %.01114, %30 ], [ %.01114, %29 ], [ %.01114, %28 ], [ %.01114, %27 ], [ %.01114, %26 ], [ %.01114, %23 ]
  %.011.be = phi i32* [ %.011, %22 ], [ %.011, %37 ], [ %0, %36 ], [ %1, %35 ], [ %.011, %33 ], [ %.011, %32 ], [ %.011, %31 ], [ %0, %30 ], [ %.011, %29 ], [ %.011, %28 ], [ %1, %27 ], [ %.011, %26 ], [ %.011, %23 ]
  %.0.be = phi i32 [ %.0, %22 ], [ -2135028539, %37 ], [ 1206305111, %36 ], [ 1849415090, %35 ], [ %16, %33 ], [ %17, %32 ], [ 582728855, %31 ], [ %18, %30 ], [ %19, %29 ], [ 582728855, %28 ], [ %20, %27 ], [ %21, %26 ], [ %25, %23 ]
  br label %22

23:                                               ; preds = %22
  %.0..0..0.8 = load volatile i32, i32* %5, align 4
  %.0..0..0.9 = load volatile i32, i32* %4, align 4
  %24 = icmp slt i32 %.0..0..0.8, %.0..0..0.9
  %25 = select i1 %24, i32 81512982, i32 1278920878
  br label %.backedge

26:                                               ; preds = %22
  br label %.backedge

27:                                               ; preds = %22
  br label %.backedge

28:                                               ; preds = %22
  br label %.backedge

29:                                               ; preds = %22
  br label %.backedge

30:                                               ; preds = %22
  br label %.backedge

31:                                               ; preds = %22
  br label %.backedge

32:                                               ; preds = %22
  br label %.backedge

33:                                               ; preds = %22
  br label %.backedge

34:                                               ; preds = %22
  store i32* %.01114, i32** %3, align 8
  %.0..0..0.10 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.10

35:                                               ; preds = %22
  br label %.backedge

36:                                               ; preds = %22
  br label %.backedge

37:                                               ; preds = %22
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s955647977.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
