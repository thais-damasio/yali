; ModuleID = 'build_ollvm/programs/p03837/s253343089.ll'
source_filename = "Project_CodeNet_C++1400/p03837/s253343089.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dist = global [105 x [105 x i32]] zeroinitializer, align 16
@A = local_unnamed_addr global [1005 x i32] zeroinitializer, align 16
@B = local_unnamed_addr global [1005 x i32] zeroinitializer, align 16
@C = local_unnamed_addr global [1005 x i32] zeroinitializer, align 16
@ans = local_unnamed_addr global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s253343089.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %3)
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %9, i32* nonnull dereferenceable(4) %4)
  br label %11

11:                                               ; preds = %.backedge, %0
  %.080 = phi i32 [ 0, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i8 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.0 = phi i32 [ -1487713699, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1487713699, label %12
    i32 -369061485, label %15
    i32 925457094, label %25
    i32 -1043329027, label %35
    i32 128274226, label %36
    i32 114056173, label %46
    i32 -957562652, label %57
    i32 -1009237023, label %59
    i32 -235916095, label %62
    i32 -684684431, label %72
    i32 -111945269, label %85
    i32 882284941, label %86
    i32 646008983, label %90
    i32 -1068905730, label %91
    i32 1329364900, label %93
    i32 1321119687, label %103
    i32 -1139879565, label %113
    i32 1024764302, label %114
    i32 -159626444, label %115
    i32 1312615750, label %116
    i32 1071811986, label %120
    i32 -1724123798, label %130
    i32 1941044833, label %155
    i32 -800652939, label %156
    i32 1568908929, label %166
    i32 -1162477919, label %177
    i32 1768686450, label %178
    i32 725132808, label %179
    i32 -247890144, label %183
    i32 553606065, label %184
    i32 1834840955, label %188
    i32 1355189683, label %189
    i32 1183622722, label %193
    i32 -283456564, label %205
    i32 -852711352, label %206
    i32 -1743443029, label %216
    i32 1582818072, label %226
    i32 765222459, label %227
    i32 -1546362114, label %229
    i32 -1866814487, label %230
    i32 561019413, label %232
    i32 -1220219304, label %233
    i32 -344636685, label %237
    i32 1118920883, label %245
    i32 -1226143489, label %255
    i32 1246359847, label %267
    i32 -983217576, label %269
    i32 2075035471, label %270
    i32 539952621, label %274
    i32 -1288931889, label %289
    i32 677758958, label %299
    i32 -1066914797, label %309
    i32 -1971302558, label %310
    i32 -1499537575, label %311
    i32 234685578, label %313
    i32 905167757, label %323
    i32 -862151765, label %333
    i32 -1289869876, label %334
    i32 1925303385, label %336
    i32 1995236706, label %339
    i32 944893136, label %349
    i32 -495593084, label %361
    i32 -787195578, label %362
    i32 -793218391, label %363
    i32 997603302, label %365
    i32 -827556652, label %369
    i32 740193094, label %370
    i32 -1288182100, label %371
    i32 1281179913, label %375
    i32 -1679842613, label %376
    i32 501369464, label %392
    i32 4053644, label %393
    i32 -361784343, label %394
    i32 -395688471, label %395
    i32 1682158976, label %396
    i32 595747976, label %397
  ]

.backedge:                                        ; preds = %11, %397, %396, %395, %394, %393, %392, %376, %375, %371, %370, %369, %363, %362, %361, %349, %339, %336, %334, %333, %323, %313, %311, %310, %309, %299, %289, %274, %270, %269, %267, %255, %245, %237, %233, %232, %230, %229, %227, %226, %216, %206, %205, %193, %189, %188, %184, %183, %179, %178, %177, %166, %156, %155, %130, %120, %116, %115, %114, %113, %103, %93, %91, %90, %86, %85, %72, %62, %59, %57, %46, %36, %35, %25, %15, %12
  %.080.be = phi i32 [ %.080, %11 ], [ %.080, %397 ], [ %.080, %396 ], [ %.080, %395 ], [ %.080, %394 ], [ %.080, %393 ], [ %.080, %392 ], [ %.080, %376 ], [ %.080, %375 ], [ %.080, %371 ], [ %.080, %370 ], [ %.080, %369 ], [ %.080, %363 ], [ %.080, %362 ], [ %.080, %361 ], [ %.080, %349 ], [ %.080, %339 ], [ %.080, %336 ], [ %.080, %334 ], [ %.080, %333 ], [ %.080, %323 ], [ %.080, %313 ], [ %.080, %311 ], [ %.080, %310 ], [ %.080, %309 ], [ %.080, %299 ], [ %.080, %289 ], [ %.080, %274 ], [ %.080, %270 ], [ %.080, %269 ], [ %.080, %267 ], [ %.080, %255 ], [ %.080, %245 ], [ %.080, %237 ], [ %.080, %233 ], [ %.080, %232 ], [ %.080, %230 ], [ %.080, %229 ], [ %.080, %227 ], [ %.080, %226 ], [ %.080, %216 ], [ %.080, %206 ], [ %.080, %205 ], [ %.080, %193 ], [ %.080, %189 ], [ %.080, %188 ], [ %.080, %184 ], [ %.080, %183 ], [ %.080, %179 ], [ %.080, %178 ], [ %.080, %177 ], [ %.080, %166 ], [ %.080, %156 ], [ %.080, %155 ], [ %.080, %130 ], [ %.080, %120 ], [ %.080, %116 ], [ %.080, %115 ], [ %.neg85, %114 ], [ %.080, %113 ], [ %.080, %103 ], [ %.080, %93 ], [ %.080, %91 ], [ %.080, %90 ], [ %.080, %86 ], [ %.080, %85 ], [ %.080, %72 ], [ %.080, %62 ], [ %.080, %59 ], [ %.080, %57 ], [ %.080, %46 ], [ %.080, %36 ], [ %.080, %35 ], [ %.080, %25 ], [ %.080, %15 ], [ %.080, %12 ]
  %.078.be = phi i32 [ %.078, %11 ], [ %.078, %397 ], [ %.078, %396 ], [ %.078, %395 ], [ %.078, %394 ], [ %.078, %393 ], [ %.078, %392 ], [ %.078, %376 ], [ %.078, %375 ], [ %.078, %371 ], [ %.078, %370 ], [ 0, %369 ], [ %.078, %363 ], [ %.078, %362 ], [ %.078, %361 ], [ %.078, %349 ], [ %.078, %339 ], [ %.078, %336 ], [ %.078, %334 ], [ %.078, %333 ], [ %.078, %323 ], [ %.078, %313 ], [ %.078, %311 ], [ %.078, %310 ], [ %.078, %309 ], [ %.078, %299 ], [ %.078, %289 ], [ %.078, %274 ], [ %.078, %270 ], [ %.078, %269 ], [ %.078, %267 ], [ %.078, %255 ], [ %.078, %245 ], [ %.078, %237 ], [ %.078, %233 ], [ %.078, %232 ], [ %.078, %230 ], [ %.078, %229 ], [ %.078, %227 ], [ %.078, %226 ], [ %.078, %216 ], [ %.078, %206 ], [ %.078, %205 ], [ %.078, %193 ], [ %.078, %189 ], [ %.078, %188 ], [ %.078, %184 ], [ %.078, %183 ], [ %.078, %179 ], [ %.078, %178 ], [ %.078, %177 ], [ %.078, %166 ], [ %.078, %156 ], [ %.078, %155 ], [ %.078, %130 ], [ %.078, %120 ], [ %.078, %116 ], [ %.078, %115 ], [ %.078, %114 ], [ %.078, %113 ], [ %.078, %103 ], [ %.078, %93 ], [ %92, %91 ], [ %.078, %90 ], [ %.078, %86 ], [ %.078, %85 ], [ %.078, %72 ], [ %.078, %62 ], [ %.078, %59 ], [ %.078, %57 ], [ %.078, %46 ], [ %.078, %36 ], [ %.078, %35 ], [ 0, %25 ], [ %.078, %15 ], [ %.078, %12 ]
  %.076.be = phi i32 [ %.076, %11 ], [ %.076, %397 ], [ %.076, %396 ], [ %.076, %395 ], [ %.076, %394 ], [ %.076, %393 ], [ %.neg, %392 ], [ %.076, %376 ], [ %.076, %375 ], [ %.076, %371 ], [ %.076, %370 ], [ %.076, %369 ], [ %.076, %363 ], [ %.076, %362 ], [ %.076, %361 ], [ %.076, %349 ], [ %.076, %339 ], [ %.076, %336 ], [ %.076, %334 ], [ %.076, %333 ], [ %.076, %323 ], [ %.076, %313 ], [ %.076, %311 ], [ %.076, %310 ], [ %.076, %309 ], [ %.076, %299 ], [ %.076, %289 ], [ %.076, %274 ], [ %.076, %270 ], [ %.076, %269 ], [ %.076, %267 ], [ %.076, %255 ], [ %.076, %245 ], [ %.076, %237 ], [ %.076, %233 ], [ %.076, %232 ], [ %.076, %230 ], [ %.076, %229 ], [ %.076, %227 ], [ %.076, %226 ], [ %.076, %216 ], [ %.076, %206 ], [ %.076, %205 ], [ %.076, %193 ], [ %.076, %189 ], [ %.076, %188 ], [ %.076, %184 ], [ %.076, %183 ], [ %.076, %179 ], [ %.076, %178 ], [ %.076, %177 ], [ %167, %166 ], [ %.076, %156 ], [ %.076, %155 ], [ %.076, %130 ], [ %.076, %120 ], [ %.076, %116 ], [ 0, %115 ], [ %.076, %114 ], [ %.076, %113 ], [ %.076, %103 ], [ %.076, %93 ], [ %.076, %91 ], [ %.076, %90 ], [ %.076, %86 ], [ %.076, %85 ], [ %.076, %72 ], [ %.076, %62 ], [ %.076, %59 ], [ %.076, %57 ], [ %.076, %46 ], [ %.076, %36 ], [ %.076, %35 ], [ %.076, %25 ], [ %.076, %15 ], [ %.076, %12 ]
  %.074.be = phi i32 [ %.074, %11 ], [ %.074, %397 ], [ %.074, %396 ], [ %.074, %395 ], [ %.074, %394 ], [ %.074, %393 ], [ %.074, %392 ], [ %.074, %376 ], [ %.074, %375 ], [ %.074, %371 ], [ %.074, %370 ], [ %.074, %369 ], [ %.074, %363 ], [ %.074, %362 ], [ %.074, %361 ], [ %.074, %349 ], [ %.074, %339 ], [ %.074, %336 ], [ %.074, %334 ], [ %.074, %333 ], [ %.074, %323 ], [ %.074, %313 ], [ %.074, %311 ], [ %.074, %310 ], [ %.074, %309 ], [ %.074, %299 ], [ %.074, %289 ], [ %.074, %274 ], [ %.074, %270 ], [ %.074, %269 ], [ %.074, %267 ], [ %.074, %255 ], [ %.074, %245 ], [ %.074, %237 ], [ %.074, %233 ], [ %.074, %232 ], [ %231, %230 ], [ %.074, %229 ], [ %.074, %227 ], [ %.074, %226 ], [ %.074, %216 ], [ %.074, %206 ], [ %.074, %205 ], [ %.074, %193 ], [ %.074, %189 ], [ %.074, %188 ], [ %.074, %184 ], [ %.074, %183 ], [ %.074, %179 ], [ 0, %178 ], [ %.074, %177 ], [ %.074, %166 ], [ %.074, %156 ], [ %.074, %155 ], [ %.074, %130 ], [ %.074, %120 ], [ %.074, %116 ], [ %.074, %115 ], [ %.074, %114 ], [ %.074, %113 ], [ %.074, %103 ], [ %.074, %93 ], [ %.074, %91 ], [ %.074, %90 ], [ %.074, %86 ], [ %.074, %85 ], [ %.074, %72 ], [ %.074, %62 ], [ %.074, %59 ], [ %.074, %57 ], [ %.074, %46 ], [ %.074, %36 ], [ %.074, %35 ], [ %.074, %25 ], [ %.074, %15 ], [ %.074, %12 ]
  %.072.be = phi i32 [ %.072, %11 ], [ %.072, %397 ], [ %.072, %396 ], [ %.072, %395 ], [ %.072, %394 ], [ %.072, %393 ], [ %.072, %392 ], [ %.072, %376 ], [ %.072, %375 ], [ %.072, %371 ], [ %.072, %370 ], [ %.072, %369 ], [ %.072, %363 ], [ %.072, %362 ], [ %.072, %361 ], [ %.072, %349 ], [ %.072, %339 ], [ %.072, %336 ], [ %.072, %334 ], [ %.072, %333 ], [ %.072, %323 ], [ %.072, %313 ], [ %.072, %311 ], [ %.072, %310 ], [ %.072, %309 ], [ %.072, %299 ], [ %.072, %289 ], [ %.072, %274 ], [ %.072, %270 ], [ %.072, %269 ], [ %.072, %267 ], [ %.072, %255 ], [ %.072, %245 ], [ %.072, %237 ], [ %.072, %233 ], [ %.072, %232 ], [ %.072, %230 ], [ %.072, %229 ], [ %228, %227 ], [ %.072, %226 ], [ %.072, %216 ], [ %.072, %206 ], [ %.072, %205 ], [ %.072, %193 ], [ %.072, %189 ], [ %.072, %188 ], [ %.072, %184 ], [ 0, %183 ], [ %.072, %179 ], [ %.072, %178 ], [ %.072, %177 ], [ %.072, %166 ], [ %.072, %156 ], [ %.072, %155 ], [ %.072, %130 ], [ %.072, %120 ], [ %.072, %116 ], [ %.072, %115 ], [ %.072, %114 ], [ %.072, %113 ], [ %.072, %103 ], [ %.072, %93 ], [ %.072, %91 ], [ %.072, %90 ], [ %.072, %86 ], [ %.072, %85 ], [ %.072, %72 ], [ %.072, %62 ], [ %.072, %59 ], [ %.072, %57 ], [ %.072, %46 ], [ %.072, %36 ], [ %.072, %35 ], [ %.072, %25 ], [ %.072, %15 ], [ %.072, %12 ]
  %.070.be = phi i32 [ %.070, %11 ], [ %.070, %397 ], [ %.070, %396 ], [ %.070, %395 ], [ %.070, %394 ], [ %.070, %393 ], [ %.070, %392 ], [ %.070, %376 ], [ %.070, %375 ], [ %.070, %371 ], [ %.070, %370 ], [ %.070, %369 ], [ %.070, %363 ], [ %.070, %362 ], [ %.070, %361 ], [ %.070, %349 ], [ %.070, %339 ], [ %.070, %336 ], [ %.070, %334 ], [ %.070, %333 ], [ %.070, %323 ], [ %.070, %313 ], [ %.070, %311 ], [ %.070, %310 ], [ %.070, %309 ], [ %.070, %299 ], [ %.070, %289 ], [ %.070, %274 ], [ %.070, %270 ], [ %.070, %269 ], [ %.070, %267 ], [ %.070, %255 ], [ %.070, %245 ], [ %.070, %237 ], [ %.070, %233 ], [ %.070, %232 ], [ %.070, %230 ], [ %.070, %229 ], [ %.070, %227 ], [ %.070, %226 ], [ %.070, %216 ], [ %.070, %206 ], [ %.neg83, %205 ], [ %.070, %193 ], [ %.070, %189 ], [ 0, %188 ], [ %.070, %184 ], [ %.070, %183 ], [ %.070, %179 ], [ %.070, %178 ], [ %.070, %177 ], [ %.070, %166 ], [ %.070, %156 ], [ %.070, %155 ], [ %.070, %130 ], [ %.070, %120 ], [ %.070, %116 ], [ %.070, %115 ], [ %.070, %114 ], [ %.070, %113 ], [ %.070, %103 ], [ %.070, %93 ], [ %.070, %91 ], [ %.070, %90 ], [ %.070, %86 ], [ %.070, %85 ], [ %.070, %72 ], [ %.070, %62 ], [ %.070, %59 ], [ %.070, %57 ], [ %.070, %46 ], [ %.070, %36 ], [ %.070, %35 ], [ %.070, %25 ], [ %.070, %15 ], [ %.070, %12 ]
  %.068.be = phi i32 [ %.068, %11 ], [ %.068, %397 ], [ %.068, %396 ], [ %.068, %395 ], [ %.068, %394 ], [ %.068, %393 ], [ %.068, %392 ], [ %.068, %376 ], [ %.068, %375 ], [ %.068, %371 ], [ %.068, %370 ], [ %.068, %369 ], [ %364, %363 ], [ %.068, %362 ], [ %.068, %361 ], [ %.068, %349 ], [ %.068, %339 ], [ %.068, %336 ], [ %.068, %334 ], [ %.068, %333 ], [ %.068, %323 ], [ %.068, %313 ], [ %.068, %311 ], [ %.068, %310 ], [ %.068, %309 ], [ %.068, %299 ], [ %.068, %289 ], [ %.068, %274 ], [ %.068, %270 ], [ %.068, %269 ], [ %.068, %267 ], [ %.068, %255 ], [ %.068, %245 ], [ %.068, %237 ], [ %.068, %233 ], [ 0, %232 ], [ %.068, %230 ], [ %.068, %229 ], [ %.068, %227 ], [ %.068, %226 ], [ %.068, %216 ], [ %.068, %206 ], [ %.068, %205 ], [ %.068, %193 ], [ %.068, %189 ], [ %.068, %188 ], [ %.068, %184 ], [ %.068, %183 ], [ %.068, %179 ], [ %.068, %178 ], [ %.068, %177 ], [ %.068, %166 ], [ %.068, %156 ], [ %.068, %155 ], [ %.068, %130 ], [ %.068, %120 ], [ %.068, %116 ], [ %.068, %115 ], [ %.068, %114 ], [ %.068, %113 ], [ %.068, %103 ], [ %.068, %93 ], [ %.068, %91 ], [ %.068, %90 ], [ %.068, %86 ], [ %.068, %85 ], [ %.068, %72 ], [ %.068, %62 ], [ %.068, %59 ], [ %.068, %57 ], [ %.068, %46 ], [ %.068, %36 ], [ %.068, %35 ], [ %.068, %25 ], [ %.068, %15 ], [ %.068, %12 ]
  %.066.be = phi i8 [ %.066, %11 ], [ %.066, %397 ], [ %.066, %396 ], [ 1, %395 ], [ %.066, %394 ], [ %.066, %393 ], [ %.066, %392 ], [ %.066, %376 ], [ %.066, %375 ], [ %.066, %371 ], [ %.066, %370 ], [ %.066, %369 ], [ %.066, %363 ], [ %.066, %362 ], [ %.066, %361 ], [ %.066, %349 ], [ %.066, %339 ], [ %.066, %336 ], [ %.066, %334 ], [ %.066, %333 ], [ %.066, %323 ], [ %.066, %313 ], [ %.066, %311 ], [ %.066, %310 ], [ %.066, %309 ], [ 1, %299 ], [ %.066, %289 ], [ %.066, %274 ], [ %.066, %270 ], [ %.066, %269 ], [ %.066, %267 ], [ %.066, %255 ], [ %.066, %245 ], [ 0, %237 ], [ %.066, %233 ], [ %.066, %232 ], [ %.066, %230 ], [ %.066, %229 ], [ %.066, %227 ], [ %.066, %226 ], [ %.066, %216 ], [ %.066, %206 ], [ %.066, %205 ], [ %.066, %193 ], [ %.066, %189 ], [ %.066, %188 ], [ %.066, %184 ], [ %.066, %183 ], [ %.066, %179 ], [ %.066, %178 ], [ %.066, %177 ], [ %.066, %166 ], [ %.066, %156 ], [ %.066, %155 ], [ %.066, %130 ], [ %.066, %120 ], [ %.066, %116 ], [ %.066, %115 ], [ %.066, %114 ], [ %.066, %113 ], [ %.066, %103 ], [ %.066, %93 ], [ %.066, %91 ], [ %.066, %90 ], [ %.066, %86 ], [ %.066, %85 ], [ %.066, %72 ], [ %.066, %62 ], [ %.066, %59 ], [ %.066, %57 ], [ %.066, %46 ], [ %.066, %36 ], [ %.066, %35 ], [ %.066, %25 ], [ %.066, %15 ], [ %.066, %12 ]
  %.064.be = phi i32 [ %.064, %11 ], [ %.064, %397 ], [ %.064, %396 ], [ %.064, %395 ], [ %.064, %394 ], [ %.064, %393 ], [ %.064, %392 ], [ %.064, %376 ], [ %.064, %375 ], [ %.064, %371 ], [ %.064, %370 ], [ %.064, %369 ], [ %.064, %363 ], [ %.064, %362 ], [ %.064, %361 ], [ %.064, %349 ], [ %.064, %339 ], [ %.064, %336 ], [ %.064, %334 ], [ %.064, %333 ], [ %.064, %323 ], [ %.064, %313 ], [ %.064, %311 ], [ %.064, %310 ], [ %.064, %309 ], [ %.064, %299 ], [ %.064, %289 ], [ %.064, %274 ], [ %.064, %270 ], [ %.064, %269 ], [ %.064, %267 ], [ %.064, %255 ], [ %.064, %245 ], [ %240, %237 ], [ %.064, %233 ], [ %.064, %232 ], [ %.064, %230 ], [ %.064, %229 ], [ %.064, %227 ], [ %.064, %226 ], [ %.064, %216 ], [ %.064, %206 ], [ %.064, %205 ], [ %.064, %193 ], [ %.064, %189 ], [ %.064, %188 ], [ %.064, %184 ], [ %.064, %183 ], [ %.064, %179 ], [ %.064, %178 ], [ %.064, %177 ], [ %.064, %166 ], [ %.064, %156 ], [ %.064, %155 ], [ %.064, %130 ], [ %.064, %120 ], [ %.064, %116 ], [ %.064, %115 ], [ %.064, %114 ], [ %.064, %113 ], [ %.064, %103 ], [ %.064, %93 ], [ %.064, %91 ], [ %.064, %90 ], [ %.064, %86 ], [ %.064, %85 ], [ %.064, %72 ], [ %.064, %62 ], [ %.064, %59 ], [ %.064, %57 ], [ %.064, %46 ], [ %.064, %36 ], [ %.064, %35 ], [ %.064, %25 ], [ %.064, %15 ], [ %.064, %12 ]
  %.062.be = phi i32 [ %.062, %11 ], [ %.062, %397 ], [ %.062, %396 ], [ %.062, %395 ], [ %.062, %394 ], [ %.062, %393 ], [ %.062, %392 ], [ %.062, %376 ], [ %.062, %375 ], [ %.062, %371 ], [ %.062, %370 ], [ %.062, %369 ], [ %.062, %363 ], [ %.062, %362 ], [ %.062, %361 ], [ %.062, %349 ], [ %.062, %339 ], [ %.062, %336 ], [ %.062, %334 ], [ %.062, %333 ], [ %.062, %323 ], [ %.062, %313 ], [ %.062, %311 ], [ %.062, %310 ], [ %.062, %309 ], [ %.062, %299 ], [ %.062, %289 ], [ %.062, %274 ], [ %.062, %270 ], [ %.062, %269 ], [ %.062, %267 ], [ %.062, %255 ], [ %.062, %245 ], [ %242, %237 ], [ %.062, %233 ], [ %.062, %232 ], [ %.062, %230 ], [ %.062, %229 ], [ %.062, %227 ], [ %.062, %226 ], [ %.062, %216 ], [ %.062, %206 ], [ %.062, %205 ], [ %.062, %193 ], [ %.062, %189 ], [ %.062, %188 ], [ %.062, %184 ], [ %.062, %183 ], [ %.062, %179 ], [ %.062, %178 ], [ %.062, %177 ], [ %.062, %166 ], [ %.062, %156 ], [ %.062, %155 ], [ %.062, %130 ], [ %.062, %120 ], [ %.062, %116 ], [ %.062, %115 ], [ %.062, %114 ], [ %.062, %113 ], [ %.062, %103 ], [ %.062, %93 ], [ %.062, %91 ], [ %.062, %90 ], [ %.062, %86 ], [ %.062, %85 ], [ %.062, %72 ], [ %.062, %62 ], [ %.062, %59 ], [ %.062, %57 ], [ %.062, %46 ], [ %.062, %36 ], [ %.062, %35 ], [ %.062, %25 ], [ %.062, %15 ], [ %.062, %12 ]
  %.060.be = phi i32 [ %.060, %11 ], [ %.060, %397 ], [ %.060, %396 ], [ %.060, %395 ], [ %.060, %394 ], [ %.060, %393 ], [ %.060, %392 ], [ %.060, %376 ], [ %.060, %375 ], [ %.060, %371 ], [ %.060, %370 ], [ %.060, %369 ], [ %.060, %363 ], [ %.060, %362 ], [ %.060, %361 ], [ %.060, %349 ], [ %.060, %339 ], [ %.060, %336 ], [ %.060, %334 ], [ %.060, %333 ], [ %.060, %323 ], [ %.060, %313 ], [ %.060, %311 ], [ %.060, %310 ], [ %.060, %309 ], [ %.060, %299 ], [ %.060, %289 ], [ %.060, %274 ], [ %.060, %270 ], [ %.060, %269 ], [ %.060, %267 ], [ %.060, %255 ], [ %.060, %245 ], [ %244, %237 ], [ %.060, %233 ], [ %.060, %232 ], [ %.060, %230 ], [ %.060, %229 ], [ %.060, %227 ], [ %.060, %226 ], [ %.060, %216 ], [ %.060, %206 ], [ %.060, %205 ], [ %.060, %193 ], [ %.060, %189 ], [ %.060, %188 ], [ %.060, %184 ], [ %.060, %183 ], [ %.060, %179 ], [ %.060, %178 ], [ %.060, %177 ], [ %.060, %166 ], [ %.060, %156 ], [ %.060, %155 ], [ %.060, %130 ], [ %.060, %120 ], [ %.060, %116 ], [ %.060, %115 ], [ %.060, %114 ], [ %.060, %113 ], [ %.060, %103 ], [ %.060, %93 ], [ %.060, %91 ], [ %.060, %90 ], [ %.060, %86 ], [ %.060, %85 ], [ %.060, %72 ], [ %.060, %62 ], [ %.060, %59 ], [ %.060, %57 ], [ %.060, %46 ], [ %.060, %36 ], [ %.060, %35 ], [ %.060, %25 ], [ %.060, %15 ], [ %.060, %12 ]
  %.058.be = phi i32 [ %.058, %11 ], [ %.058, %397 ], [ %.058, %396 ], [ %.058, %395 ], [ %.058, %394 ], [ %.058, %393 ], [ %.058, %392 ], [ %.058, %376 ], [ %.058, %375 ], [ %.058, %371 ], [ %.058, %370 ], [ %.058, %369 ], [ %.058, %363 ], [ %.058, %362 ], [ %.058, %361 ], [ %.058, %349 ], [ %.058, %339 ], [ %.058, %336 ], [ %335, %334 ], [ %.058, %333 ], [ %.058, %323 ], [ %.058, %313 ], [ %.058, %311 ], [ %.058, %310 ], [ %.058, %309 ], [ %.058, %299 ], [ %.058, %289 ], [ %.058, %274 ], [ %.058, %270 ], [ %.058, %269 ], [ %.058, %267 ], [ %.058, %255 ], [ %.058, %245 ], [ 0, %237 ], [ %.058, %233 ], [ %.058, %232 ], [ %.058, %230 ], [ %.058, %229 ], [ %.058, %227 ], [ %.058, %226 ], [ %.058, %216 ], [ %.058, %206 ], [ %.058, %205 ], [ %.058, %193 ], [ %.058, %189 ], [ %.058, %188 ], [ %.058, %184 ], [ %.058, %183 ], [ %.058, %179 ], [ %.058, %178 ], [ %.058, %177 ], [ %.058, %166 ], [ %.058, %156 ], [ %.058, %155 ], [ %.058, %130 ], [ %.058, %120 ], [ %.058, %116 ], [ %.058, %115 ], [ %.058, %114 ], [ %.058, %113 ], [ %.058, %103 ], [ %.058, %93 ], [ %.058, %91 ], [ %.058, %90 ], [ %.058, %86 ], [ %.058, %85 ], [ %.058, %72 ], [ %.058, %62 ], [ %.058, %59 ], [ %.058, %57 ], [ %.058, %46 ], [ %.058, %36 ], [ %.058, %35 ], [ %.058, %25 ], [ %.058, %15 ], [ %.058, %12 ]
  %.056.be = phi i32 [ %.056, %11 ], [ %.056, %397 ], [ %.056, %396 ], [ %.056, %395 ], [ %.056, %394 ], [ %.056, %393 ], [ %.056, %392 ], [ %.056, %376 ], [ %.056, %375 ], [ %.056, %371 ], [ %.056, %370 ], [ %.056, %369 ], [ %.056, %363 ], [ %.056, %362 ], [ %.056, %361 ], [ %.056, %349 ], [ %.056, %339 ], [ %.056, %336 ], [ %.056, %334 ], [ %.056, %333 ], [ %.056, %323 ], [ %.056, %313 ], [ %312, %311 ], [ %.056, %310 ], [ %.056, %309 ], [ %.056, %299 ], [ %.056, %289 ], [ %.056, %274 ], [ %.056, %270 ], [ 0, %269 ], [ %.056, %267 ], [ %.056, %255 ], [ %.056, %245 ], [ %.056, %237 ], [ %.056, %233 ], [ %.056, %232 ], [ %.056, %230 ], [ %.056, %229 ], [ %.056, %227 ], [ %.056, %226 ], [ %.056, %216 ], [ %.056, %206 ], [ %.056, %205 ], [ %.056, %193 ], [ %.056, %189 ], [ %.056, %188 ], [ %.056, %184 ], [ %.056, %183 ], [ %.056, %179 ], [ %.056, %178 ], [ %.056, %177 ], [ %.056, %166 ], [ %.056, %156 ], [ %.056, %155 ], [ %.056, %130 ], [ %.056, %120 ], [ %.056, %116 ], [ %.056, %115 ], [ %.056, %114 ], [ %.056, %113 ], [ %.056, %103 ], [ %.056, %93 ], [ %.056, %91 ], [ %.056, %90 ], [ %.056, %86 ], [ %.056, %85 ], [ %.056, %72 ], [ %.056, %62 ], [ %.056, %59 ], [ %.056, %57 ], [ %.056, %46 ], [ %.056, %36 ], [ %.056, %35 ], [ %.056, %25 ], [ %.056, %15 ], [ %.056, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ 944893136, %397 ], [ 905167757, %396 ], [ 677758958, %395 ], [ -1226143489, %394 ], [ -1743443029, %393 ], [ 1568908929, %392 ], [ -1724123798, %376 ], [ 1321119687, %375 ], [ -684684431, %371 ], [ 114056173, %370 ], [ 925457094, %369 ], [ -1220219304, %363 ], [ -793218391, %362 ], [ -787195578, %361 ], [ %360, %349 ], [ %348, %339 ], [ %338, %336 ], [ 1118920883, %334 ], [ -1289869876, %333 ], [ %332, %323 ], [ %322, %313 ], [ 2075035471, %311 ], [ -1499537575, %310 ], [ -1971302558, %309 ], [ %308, %299 ], [ %298, %289 ], [ %288, %274 ], [ %273, %270 ], [ 2075035471, %269 ], [ %268, %267 ], [ %266, %255 ], [ %254, %245 ], [ 1118920883, %237 ], [ %236, %233 ], [ -1220219304, %232 ], [ 725132808, %230 ], [ -1866814487, %229 ], [ 553606065, %227 ], [ 765222459, %226 ], [ %225, %216 ], [ %215, %206 ], [ 1355189683, %205 ], [ -283456564, %193 ], [ %192, %189 ], [ 1355189683, %188 ], [ %187, %184 ], [ 553606065, %183 ], [ %182, %179 ], [ 725132808, %178 ], [ 1312615750, %177 ], [ %176, %166 ], [ %165, %156 ], [ -800652939, %155 ], [ %154, %130 ], [ %129, %120 ], [ %119, %116 ], [ 1312615750, %115 ], [ -1487713699, %114 ], [ 1024764302, %113 ], [ %112, %103 ], [ %102, %93 ], [ 128274226, %91 ], [ -1068905730, %90 ], [ 646008983, %86 ], [ 646008983, %85 ], [ %84, %72 ], [ %71, %62 ], [ %61, %59 ], [ %58, %57 ], [ %56, %46 ], [ %45, %36 ], [ 128274226, %35 ], [ %34, %25 ], [ %24, %15 ], [ %14, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = icmp slt i32 %.080, 105
  %14 = select i1 %13, i32 -369061485, i32 -159626444
  br label %.backedge

15:                                               ; preds = %11
  %16 = load i32, i32* @x.1, align 4
  %17 = load i32, i32* @y.2, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 925457094, i32 -827556652
  br label %.backedge

25:                                               ; preds = %11
  %26 = load i32, i32* @x.1, align 4
  %27 = load i32, i32* @y.2, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 -1043329027, i32 -827556652
  br label %.backedge

35:                                               ; preds = %11
  br label %.backedge

36:                                               ; preds = %11
  %37 = load i32, i32* @x.1, align 4
  %38 = load i32, i32* @y.2, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 114056173, i32 740193094
  br label %.backedge

46:                                               ; preds = %11
  %47 = icmp slt i32 %.078, 105
  store i1 %47, i1* %2, align 1
  %48 = load i32, i32* @x.1, align 4
  %49 = load i32, i32* @y.2, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 -957562652, i32 740193094
  br label %.backedge

57:                                               ; preds = %11
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %58 = select i1 %.0..0..0., i32 -1009237023, i32 1329364900
  br label %.backedge

59:                                               ; preds = %11
  %60 = icmp eq i32 %.080, %.078
  %61 = select i1 %60, i32 -235916095, i32 882284941
  br label %.backedge

62:                                               ; preds = %11
  %63 = load i32, i32* @x.1, align 4
  %64 = load i32, i32* @y.2, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -684684431, i32 -1288182100
  br label %.backedge

72:                                               ; preds = %11
  %73 = sext i32 %.080 to i64
  %74 = sext i32 %.078 to i64
  %75 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %73, i64 %74
  store i32 0, i32* %75, align 4
  %76 = load i32, i32* @x.1, align 4
  %77 = load i32, i32* @y.2, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 -111945269, i32 -1288182100
  br label %.backedge

85:                                               ; preds = %11
  br label %.backedge

86:                                               ; preds = %11
  %87 = sext i32 %.080 to i64
  %88 = sext i32 %.078 to i64
  %89 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %87, i64 %88
  store i32 1000000099, i32* %89, align 4
  br label %.backedge

90:                                               ; preds = %11
  br label %.backedge

91:                                               ; preds = %11
  %92 = add i32 %.078, 1
  br label %.backedge

93:                                               ; preds = %11
  %94 = load i32, i32* @x.1, align 4
  %95 = load i32, i32* @y.2, align 4
  %96 = add i32 %94, -1
  %97 = mul i32 %96, %94
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %100, %99
  %102 = select i1 %101, i32 1321119687, i32 1281179913
  br label %.backedge

103:                                              ; preds = %11
  %104 = load i32, i32* @x.1, align 4
  %105 = load i32, i32* @y.2, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 -1139879565, i32 1281179913
  br label %.backedge

113:                                              ; preds = %11
  br label %.backedge

114:                                              ; preds = %11
  %.neg85 = add i32 %.080, 1
  br label %.backedge

115:                                              ; preds = %11
  br label %.backedge

116:                                              ; preds = %11
  %117 = load i32, i32* %4, align 4
  %118 = icmp slt i32 %.076, %117
  %119 = select i1 %118, i32 1071811986, i32 1768686450
  br label %.backedge

120:                                              ; preds = %11
  %121 = load i32, i32* @x.1, align 4
  %122 = load i32, i32* @y.2, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 -1724123798, i32 -1679842613
  br label %.backedge

130:                                              ; preds = %11
  %131 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %132 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %131, i32* nonnull dereferenceable(4) %6)
  %133 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %132, i32* nonnull dereferenceable(4) %7)
  %134 = load i32, i32* %5, align 4
  %.neg84 = add i32 %134, -1
  store i32 %.neg84, i32* %5, align 4
  %135 = load i32, i32* %6, align 4
  %136 = add i32 %135, -1
  store i32 %136, i32* %6, align 4
  %137 = load i32, i32* %7, align 4
  %138 = sext i32 %136 to i64
  %139 = sext i32 %.neg84 to i64
  %140 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %138, i64 %139
  store i32 %137, i32* %140, align 4
  %141 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %139, i64 %138
  store i32 %137, i32* %141, align 4
  %142 = sext i32 %.076 to i64
  %143 = getelementptr inbounds [1005 x i32], [1005 x i32]* @A, i64 0, i64 %142
  store i32 %.neg84, i32* %143, align 4
  %144 = getelementptr inbounds [1005 x i32], [1005 x i32]* @B, i64 0, i64 %142
  store i32 %136, i32* %144, align 4
  %145 = getelementptr inbounds [1005 x i32], [1005 x i32]* @C, i64 0, i64 %142
  store i32 %137, i32* %145, align 4
  %146 = load i32, i32* @x.1, align 4
  %147 = load i32, i32* @y.2, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 1941044833, i32 -1679842613
  br label %.backedge

155:                                              ; preds = %11
  br label %.backedge

156:                                              ; preds = %11
  %157 = load i32, i32* @x.1, align 4
  %158 = load i32, i32* @y.2, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 1568908929, i32 501369464
  br label %.backedge

166:                                              ; preds = %11
  %167 = add i32 %.076, 1
  %168 = load i32, i32* @x.1, align 4
  %169 = load i32, i32* @y.2, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -1162477919, i32 501369464
  br label %.backedge

177:                                              ; preds = %11
  br label %.backedge

178:                                              ; preds = %11
  br label %.backedge

179:                                              ; preds = %11
  %180 = load i32, i32* %3, align 4
  %181 = icmp slt i32 %.074, %180
  %182 = select i1 %181, i32 -247890144, i32 561019413
  br label %.backedge

183:                                              ; preds = %11
  br label %.backedge

184:                                              ; preds = %11
  %185 = load i32, i32* %3, align 4
  %186 = icmp slt i32 %.072, %185
  %187 = select i1 %186, i32 1834840955, i32 -1546362114
  br label %.backedge

188:                                              ; preds = %11
  br label %.backedge

189:                                              ; preds = %11
  %190 = load i32, i32* %3, align 4
  %191 = icmp slt i32 %.070, %190
  %192 = select i1 %191, i32 1183622722, i32 -852711352
  br label %.backedge

193:                                              ; preds = %11
  %194 = sext i32 %.072 to i64
  %195 = sext i32 %.070 to i64
  %196 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %194, i64 %195
  %197 = sext i32 %.074 to i64
  %198 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %194, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %197, i64 %195
  %201 = load i32, i32* %200, align 4
  %202 = add i32 %201, %199
  store i32 %202, i32* %8, align 4
  %203 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %196, i32* nonnull dereferenceable(4) %8)
  %204 = load i32, i32* %203, align 4
  store i32 %204, i32* %196, align 4
  br label %.backedge

205:                                              ; preds = %11
  %.neg83 = add i32 %.070, 1
  br label %.backedge

206:                                              ; preds = %11
  %207 = load i32, i32* @x.1, align 4
  %208 = load i32, i32* @y.2, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1743443029, i32 4053644
  br label %.backedge

216:                                              ; preds = %11
  %217 = load i32, i32* @x.1, align 4
  %218 = load i32, i32* @y.2, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 1582818072, i32 4053644
  br label %.backedge

226:                                              ; preds = %11
  br label %.backedge

227:                                              ; preds = %11
  %228 = add i32 %.072, 1
  br label %.backedge

229:                                              ; preds = %11
  br label %.backedge

230:                                              ; preds = %11
  %231 = add i32 %.074, 1
  br label %.backedge

232:                                              ; preds = %11
  br label %.backedge

233:                                              ; preds = %11
  %234 = load i32, i32* %4, align 4
  %235 = icmp slt i32 %.068, %234
  %236 = select i1 %235, i32 -344636685, i32 997603302
  br label %.backedge

237:                                              ; preds = %11
  %238 = sext i32 %.068 to i64
  %239 = getelementptr inbounds [1005 x i32], [1005 x i32]* @A, i64 0, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds [1005 x i32], [1005 x i32]* @B, i64 0, i64 %238
  %242 = load i32, i32* %241, align 4
  %243 = getelementptr inbounds [1005 x i32], [1005 x i32]* @C, i64 0, i64 %238
  %244 = load i32, i32* %243, align 4
  br label %.backedge

245:                                              ; preds = %11
  %246 = load i32, i32* @x.1, align 4
  %247 = load i32, i32* @y.2, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 -1226143489, i32 -361784343
  br label %.backedge

255:                                              ; preds = %11
  %256 = load i32, i32* %3, align 4
  %257 = icmp slt i32 %.058, %256
  store i1 %257, i1* %1, align 1
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 1246359847, i32 -361784343
  br label %.backedge

267:                                              ; preds = %11
  %.0..0..0.55 = load volatile i1, i1* %1, align 1
  %268 = select i1 %.0..0..0.55, i32 -983217576, i32 1925303385
  br label %.backedge

269:                                              ; preds = %11
  br label %.backedge

270:                                              ; preds = %11
  %271 = load i32, i32* %3, align 4
  %272 = icmp slt i32 %.056, %271
  %273 = select i1 %272, i32 539952621, i32 234685578
  br label %.backedge

274:                                              ; preds = %11
  %275 = sext i32 %.058 to i64
  %276 = sext i32 %.056 to i64
  %277 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %275, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = sext i32 %.064 to i64
  %280 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %275, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = sext i32 %.062 to i64
  %283 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %282, i64 %276
  %284 = load i32, i32* %283, align 4
  %285 = add i32 %281, %.060
  %286 = add i32 %285, %284
  %287 = icmp eq i32 %278, %286
  %288 = select i1 %287, i32 -1288931889, i32 -1971302558
  br label %.backedge

289:                                              ; preds = %11
  %290 = load i32, i32* @x.1, align 4
  %291 = load i32, i32* @y.2, align 4
  %292 = add i32 %290, -1
  %293 = mul i32 %292, %290
  %294 = and i32 %293, 1
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %296, %295
  %298 = select i1 %297, i32 677758958, i32 -395688471
  br label %.backedge

299:                                              ; preds = %11
  %300 = load i32, i32* @x.1, align 4
  %301 = load i32, i32* @y.2, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 -1066914797, i32 -395688471
  br label %.backedge

309:                                              ; preds = %11
  br label %.backedge

310:                                              ; preds = %11
  br label %.backedge

311:                                              ; preds = %11
  %312 = add i32 %.056, 1
  br label %.backedge

313:                                              ; preds = %11
  %314 = load i32, i32* @x.1, align 4
  %315 = load i32, i32* @y.2, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 905167757, i32 1682158976
  br label %.backedge

323:                                              ; preds = %11
  %324 = load i32, i32* @x.1, align 4
  %325 = load i32, i32* @y.2, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 -862151765, i32 1682158976
  br label %.backedge

333:                                              ; preds = %11
  br label %.backedge

334:                                              ; preds = %11
  %335 = add i32 %.058, 1
  br label %.backedge

336:                                              ; preds = %11
  %337 = and i8 %.066, 1
  %.not = icmp eq i8 %337, 0
  %338 = select i1 %.not, i32 1995236706, i32 -787195578
  br label %.backedge

339:                                              ; preds = %11
  %340 = load i32, i32* @x.1, align 4
  %341 = load i32, i32* @y.2, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 944893136, i32 595747976
  br label %.backedge

349:                                              ; preds = %11
  %350 = load i32, i32* @ans, align 4
  %351 = add i32 %350, 1
  store i32 %351, i32* @ans, align 4
  %352 = load i32, i32* @x.1, align 4
  %353 = load i32, i32* @y.2, align 4
  %354 = add i32 %352, -1
  %355 = mul i32 %354, %352
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %358, %357
  %360 = select i1 %359, i32 -495593084, i32 595747976
  br label %.backedge

361:                                              ; preds = %11
  br label %.backedge

362:                                              ; preds = %11
  br label %.backedge

363:                                              ; preds = %11
  %364 = add i32 %.068, 1
  br label %.backedge

365:                                              ; preds = %11
  %366 = load i32, i32* @ans, align 4
  %367 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %366)
  %368 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %367, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0

369:                                              ; preds = %11
  br label %.backedge

370:                                              ; preds = %11
  br label %.backedge

371:                                              ; preds = %11
  %372 = sext i32 %.080 to i64
  %373 = sext i32 %.078 to i64
  %374 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %372, i64 %373
  store i32 0, i32* %374, align 4
  br label %.backedge

375:                                              ; preds = %11
  br label %.backedge

376:                                              ; preds = %11
  %377 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %378 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %377, i32* nonnull dereferenceable(4) %6)
  %379 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %378, i32* nonnull dereferenceable(4) %7)
  %380 = load i32, i32* %5, align 4
  %381 = add i32 %380, -1
  store i32 %381, i32* %5, align 4
  %382 = load i32, i32* %6, align 4
  %.neg82 = add i32 %382, -1
  store i32 %.neg82, i32* %6, align 4
  %383 = load i32, i32* %7, align 4
  %384 = sext i32 %.neg82 to i64
  %385 = sext i32 %381 to i64
  %386 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %384, i64 %385
  store i32 %383, i32* %386, align 4
  %387 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %385, i64 %384
  store i32 %383, i32* %387, align 4
  %388 = sext i32 %.076 to i64
  %389 = getelementptr inbounds [1005 x i32], [1005 x i32]* @A, i64 0, i64 %388
  store i32 %381, i32* %389, align 4
  %390 = getelementptr inbounds [1005 x i32], [1005 x i32]* @B, i64 0, i64 %388
  store i32 %.neg82, i32* %390, align 4
  %391 = getelementptr inbounds [1005 x i32], [1005 x i32]* @C, i64 0, i64 %388
  store i32 %383, i32* %391, align 4
  br label %.backedge

392:                                              ; preds = %11
  %.neg = add i32 %.076, 1
  br label %.backedge

393:                                              ; preds = %11
  br label %.backedge

394:                                              ; preds = %11
  br label %.backedge

395:                                              ; preds = %11
  br label %.backedge

396:                                              ; preds = %11
  br label %.backedge

397:                                              ; preds = %11
  %398 = load i32, i32* @ans, align 4
  %399 = add i32 %398, 1
  store i32 %399, i32* @ans, align 4
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.3, align 4
  %10 = load i32, i32* @y.4, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 1549138043, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1549138043, label %17
    i32 761099567, label %20
    i32 -498656877, label %38
    i32 -1627232633, label %40
    i32 -1212576485, label %50
    i32 703770505, label %61
    i32 -1400763627, label %62
    i32 21145529, label %64
    i32 1033624913, label %66
    i32 2097711985, label %67
  ]

.backedge:                                        ; preds = %16, %67, %66, %62, %61, %50, %40, %38, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ -1212576485, %67 ], [ 761099567, %66 ], [ 21145529, %62 ], [ 21145529, %61 ], [ %60, %50 ], [ %49, %40 ], [ %39, %38 ], [ %37, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 761099567, i32 1033624913
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i32*, align 8
  store i32** %21, i32*** %6, align 8
  %22 = alloca i32*, align 8
  store i32** %22, i32*** %5, align 8
  %23 = alloca i32*, align 8
  store i32** %23, i32*** %4, align 8
  %.0..0..0.6 = load volatile i32**, i32*** %5, align 8
  store i32* %0, i32** %.0..0..0.6, align 8
  %.0..0..0.9 = load volatile i32**, i32*** %4, align 8
  store i32* %1, i32** %.0..0..0.9, align 8
  %.0..0..0.10 = load volatile i32**, i32*** %4, align 8
  %24 = load i32*, i32** %.0..0..0.10, align 8
  %25 = load i32, i32* %24, align 4
  %.0..0..0.7 = load volatile i32**, i32*** %5, align 8
  %26 = load i32*, i32** %.0..0..0.7, align 8
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.3, align 4
  %30 = load i32, i32* @y.4, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -498656877, i32 1033624913
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0.13 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.13, i32 -1627232633, i32 -1400763627
  br label %.backedge

40:                                               ; preds = %16
  %41 = load i32, i32* @x.3, align 4
  %42 = load i32, i32* @y.4, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 -1212576485, i32 2097711985
  br label %.backedge

50:                                               ; preds = %16
  %.0..0..0.11 = load volatile i32**, i32*** %4, align 8
  %51 = load i32*, i32** %.0..0..0.11, align 8
  %.0..0..0.2 = load volatile i32**, i32*** %6, align 8
  store i32* %51, i32** %.0..0..0.2, align 8
  %52 = load i32, i32* @x.3, align 4
  %53 = load i32, i32* @y.4, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 703770505, i32 2097711985
  br label %.backedge

61:                                               ; preds = %16
  br label %.backedge

62:                                               ; preds = %16
  %.0..0..0.8 = load volatile i32**, i32*** %5, align 8
  %63 = load i32*, i32** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i32**, i32*** %6, align 8
  store i32* %63, i32** %.0..0..0.3, align 8
  br label %.backedge

64:                                               ; preds = %16
  %.0..0..0.4 = load volatile i32**, i32*** %6, align 8
  %65 = load i32*, i32** %.0..0..0.4, align 8
  ret i32* %65

66:                                               ; preds = %16
  br label %.backedge

67:                                               ; preds = %16
  %.0..0..0.12 = load volatile i32**, i32*** %4, align 8
  %68 = load i32*, i32** %.0..0..0.12, align 8
  %.0..0..0.5 = load volatile i32**, i32*** %6, align 8
  store i32* %68, i32** %.0..0..0.5, align 8
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s253343089.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
