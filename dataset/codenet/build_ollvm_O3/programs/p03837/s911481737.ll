; ModuleID = 'build_ollvm/programs/p03837/s911481737.ll'
source_filename = "Project_CodeNet_C++1400/p03837/s911481737.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dp = global [105 x [105 x i32]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s911481737.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [1005 x i32], align 16
  %6 = alloca [1005 x i32], align 16
  %7 = alloca [1005 x i32], align 16
  %8 = alloca i32, align 4
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %3)
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %9, i32* nonnull dereferenceable(4) %4)
  br label %11

11:                                               ; preds = %.backedge, %0
  %.085 = phi i32 [ 0, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i8 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.0 = phi i32 [ -604586891, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -604586891, label %12
    i32 825954201, label %15
    i32 -1803161197, label %16
    i32 -705826992, label %19
    i32 1472676339, label %22
    i32 1708330572, label %26
    i32 127978255, label %30
    i32 1098689728, label %31
    i32 -588025476, label %33
    i32 -2078559016, label %43
    i32 -1887717338, label %53
    i32 -880770513, label %54
    i32 -684459121, label %64
    i32 943858491, label %74
    i32 -1049264032, label %75
    i32 -1423471691, label %85
    i32 154053150, label %95
    i32 -824144486, label %96
    i32 -815232106, label %100
    i32 1409602555, label %110
    i32 -1571142965, label %134
    i32 390698034, label %135
    i32 522263383, label %137
    i32 526601689, label %147
    i32 1623328475, label %157
    i32 1104026679, label %158
    i32 332865655, label %161
    i32 -344555667, label %162
    i32 1642161821, label %165
    i32 -1626042995, label %166
    i32 -1752577978, label %169
    i32 1154323105, label %181
    i32 -1620515366, label %183
    i32 1236713573, label %193
    i32 -386141082, label %203
    i32 2068163445, label %204
    i32 693995555, label %206
    i32 -1132462959, label %216
    i32 -1121508066, label %226
    i32 -1178116405, label %227
    i32 924484661, label %237
    i32 1076520271, label %248
    i32 -628246531, label %249
    i32 528683107, label %259
    i32 636712158, label %270
    i32 900147879, label %271
    i32 -1085667984, label %275
    i32 1987448469, label %276
    i32 1229482802, label %279
    i32 323080581, label %289
    i32 1628273485, label %315
    i32 1536803088, label %317
    i32 1794920015, label %318
    i32 959085371, label %319
    i32 -1739069067, label %320
    i32 -1399055287, label %330
    i32 -1250396829, label %342
    i32 -1600261110, label %344
    i32 925270809, label %346
    i32 182989268, label %347
    i32 845986647, label %349
    i32 939216191, label %351
    i32 -803235898, label %352
    i32 -558806829, label %354
    i32 -535377747, label %355
    i32 2079890547, label %370
    i32 -318015001, label %371
    i32 -2050870333, label %372
    i32 329855225, label %373
    i32 2006910552, label %375
    i32 -1904878283, label %377
    i32 81615676, label %378
  ]

.backedge:                                        ; preds = %11, %378, %377, %375, %373, %372, %371, %370, %355, %354, %352, %351, %347, %346, %344, %342, %330, %320, %319, %318, %317, %315, %289, %279, %276, %275, %271, %270, %259, %249, %248, %237, %227, %226, %216, %206, %204, %203, %193, %183, %181, %169, %166, %165, %162, %161, %158, %157, %147, %137, %135, %134, %110, %100, %96, %95, %85, %75, %74, %64, %54, %53, %43, %33, %31, %30, %26, %22, %19, %16, %15, %12
  %.085.be = phi i32 [ %.085, %11 ], [ %.085, %378 ], [ %.085, %377 ], [ %.085, %375 ], [ %.085, %373 ], [ %.085, %372 ], [ %.085, %371 ], [ %.085, %370 ], [ %.085, %355 ], [ %.085, %354 ], [ %353, %352 ], [ %.085, %351 ], [ %.085, %347 ], [ %.085, %346 ], [ %.085, %344 ], [ %.085, %342 ], [ %.085, %330 ], [ %.085, %320 ], [ %.085, %319 ], [ %.085, %318 ], [ %.085, %317 ], [ %.085, %315 ], [ %.085, %289 ], [ %.085, %279 ], [ %.085, %276 ], [ %.085, %275 ], [ %.085, %271 ], [ %.085, %270 ], [ %.085, %259 ], [ %.085, %249 ], [ %.085, %248 ], [ %.085, %237 ], [ %.085, %227 ], [ %.085, %226 ], [ %.085, %216 ], [ %.085, %206 ], [ %.085, %204 ], [ %.085, %203 ], [ %.085, %193 ], [ %.085, %183 ], [ %.085, %181 ], [ %.085, %169 ], [ %.085, %166 ], [ %.085, %165 ], [ %.085, %162 ], [ %.085, %161 ], [ %.085, %158 ], [ %.085, %157 ], [ %.085, %147 ], [ %.085, %137 ], [ %.085, %135 ], [ %.085, %134 ], [ %.085, %110 ], [ %.085, %100 ], [ %.085, %96 ], [ %.085, %95 ], [ %.085, %85 ], [ %.085, %75 ], [ %.085, %74 ], [ %.neg90, %64 ], [ %.085, %54 ], [ %.085, %53 ], [ %.085, %43 ], [ %.085, %33 ], [ %.085, %31 ], [ %.085, %30 ], [ %.085, %26 ], [ %.085, %22 ], [ %.085, %19 ], [ %.085, %16 ], [ %.085, %15 ], [ %.085, %12 ]
  %.083.be = phi i32 [ %.083, %11 ], [ %.083, %378 ], [ %.083, %377 ], [ %.083, %375 ], [ %.083, %373 ], [ %.083, %372 ], [ %.083, %371 ], [ %.083, %370 ], [ %.083, %355 ], [ %.083, %354 ], [ %.083, %352 ], [ %.083, %351 ], [ %.083, %347 ], [ %.083, %346 ], [ %.083, %344 ], [ %.083, %342 ], [ %.083, %330 ], [ %.083, %320 ], [ %.083, %319 ], [ %.083, %318 ], [ %.083, %317 ], [ %.083, %315 ], [ %.083, %289 ], [ %.083, %279 ], [ %.083, %276 ], [ %.083, %275 ], [ %.083, %271 ], [ %.083, %270 ], [ %.083, %259 ], [ %.083, %249 ], [ %.083, %248 ], [ %.083, %237 ], [ %.083, %227 ], [ %.083, %226 ], [ %.083, %216 ], [ %.083, %206 ], [ %.083, %204 ], [ %.083, %203 ], [ %.083, %193 ], [ %.083, %183 ], [ %.083, %181 ], [ %.083, %169 ], [ %.083, %166 ], [ %.083, %165 ], [ %.083, %162 ], [ %.083, %161 ], [ %.083, %158 ], [ %.083, %157 ], [ %.083, %147 ], [ %.083, %137 ], [ %.083, %135 ], [ %.083, %134 ], [ %.083, %110 ], [ %.083, %100 ], [ %.083, %96 ], [ %.083, %95 ], [ %.083, %85 ], [ %.083, %75 ], [ %.083, %74 ], [ %.083, %64 ], [ %.083, %54 ], [ %.083, %53 ], [ %.083, %43 ], [ %.083, %33 ], [ %32, %31 ], [ %.083, %30 ], [ %.083, %26 ], [ %.083, %22 ], [ %.083, %19 ], [ %.083, %16 ], [ 0, %15 ], [ %.083, %12 ]
  %.081.be = phi i32 [ %.081, %11 ], [ %.081, %378 ], [ %.081, %377 ], [ %.081, %375 ], [ %.081, %373 ], [ %.081, %372 ], [ %.081, %371 ], [ %.081, %370 ], [ %.081, %355 ], [ 0, %354 ], [ %.081, %352 ], [ %.081, %351 ], [ %.081, %347 ], [ %.081, %346 ], [ %.081, %344 ], [ %.081, %342 ], [ %.081, %330 ], [ %.081, %320 ], [ %.081, %319 ], [ %.081, %318 ], [ %.081, %317 ], [ %.081, %315 ], [ %.081, %289 ], [ %.081, %279 ], [ %.081, %276 ], [ %.081, %275 ], [ %.081, %271 ], [ %.081, %270 ], [ %.081, %259 ], [ %.081, %249 ], [ %.081, %248 ], [ %.081, %237 ], [ %.081, %227 ], [ %.081, %226 ], [ %.081, %216 ], [ %.081, %206 ], [ %.081, %204 ], [ %.081, %203 ], [ %.081, %193 ], [ %.081, %183 ], [ %.081, %181 ], [ %.081, %169 ], [ %.081, %166 ], [ %.081, %165 ], [ %.081, %162 ], [ %.081, %161 ], [ %.081, %158 ], [ %.081, %157 ], [ %.081, %147 ], [ %.081, %137 ], [ %136, %135 ], [ %.081, %134 ], [ %.081, %110 ], [ %.081, %100 ], [ %.081, %96 ], [ %.081, %95 ], [ 0, %85 ], [ %.081, %75 ], [ %.081, %74 ], [ %.081, %64 ], [ %.081, %54 ], [ %.081, %53 ], [ %.081, %43 ], [ %.081, %33 ], [ %.081, %31 ], [ %.081, %30 ], [ %.081, %26 ], [ %.081, %22 ], [ %.081, %19 ], [ %.081, %16 ], [ %.081, %15 ], [ %.081, %12 ]
  %.079.be = phi i32 [ %.079, %11 ], [ %.079, %378 ], [ %.079, %377 ], [ %.079, %375 ], [ %374, %373 ], [ %.079, %372 ], [ %.079, %371 ], [ 1, %370 ], [ %.079, %355 ], [ %.079, %354 ], [ %.079, %352 ], [ %.079, %351 ], [ %.079, %347 ], [ %.079, %346 ], [ %.079, %344 ], [ %.079, %342 ], [ %.079, %330 ], [ %.079, %320 ], [ %.079, %319 ], [ %.079, %318 ], [ %.079, %317 ], [ %.079, %315 ], [ %.079, %289 ], [ %.079, %279 ], [ %.079, %276 ], [ %.079, %275 ], [ %.079, %271 ], [ %.079, %270 ], [ %.079, %259 ], [ %.079, %249 ], [ %.079, %248 ], [ %238, %237 ], [ %.079, %227 ], [ %.079, %226 ], [ %.079, %216 ], [ %.079, %206 ], [ %.079, %204 ], [ %.079, %203 ], [ %.079, %193 ], [ %.079, %183 ], [ %.079, %181 ], [ %.079, %169 ], [ %.079, %166 ], [ %.079, %165 ], [ %.079, %162 ], [ %.079, %161 ], [ %.079, %158 ], [ %.079, %157 ], [ 1, %147 ], [ %.079, %137 ], [ %.079, %135 ], [ %.079, %134 ], [ %.079, %110 ], [ %.079, %100 ], [ %.079, %96 ], [ %.079, %95 ], [ %.079, %85 ], [ %.079, %75 ], [ %.079, %74 ], [ %.079, %64 ], [ %.079, %54 ], [ %.079, %53 ], [ %.079, %43 ], [ %.079, %33 ], [ %.079, %31 ], [ %.079, %30 ], [ %.079, %26 ], [ %.079, %22 ], [ %.079, %19 ], [ %.079, %16 ], [ %.079, %15 ], [ %.079, %12 ]
  %.077.be = phi i32 [ %.077, %11 ], [ %.077, %378 ], [ %.077, %377 ], [ %.077, %375 ], [ %.077, %373 ], [ %.077, %372 ], [ %.077, %371 ], [ %.077, %370 ], [ %.077, %355 ], [ %.077, %354 ], [ %.077, %352 ], [ %.077, %351 ], [ %.077, %347 ], [ %.077, %346 ], [ %.077, %344 ], [ %.077, %342 ], [ %.077, %330 ], [ %.077, %320 ], [ %.077, %319 ], [ %.077, %318 ], [ %.077, %317 ], [ %.077, %315 ], [ %.077, %289 ], [ %.077, %279 ], [ %.077, %276 ], [ %.077, %275 ], [ %.077, %271 ], [ %.077, %270 ], [ %.077, %259 ], [ %.077, %249 ], [ %.077, %248 ], [ %.077, %237 ], [ %.077, %227 ], [ %.077, %226 ], [ %.077, %216 ], [ %.077, %206 ], [ %205, %204 ], [ %.077, %203 ], [ %.077, %193 ], [ %.077, %183 ], [ %.077, %181 ], [ %.077, %169 ], [ %.077, %166 ], [ %.077, %165 ], [ %.077, %162 ], [ 1, %161 ], [ %.077, %158 ], [ %.077, %157 ], [ %.077, %147 ], [ %.077, %137 ], [ %.077, %135 ], [ %.077, %134 ], [ %.077, %110 ], [ %.077, %100 ], [ %.077, %96 ], [ %.077, %95 ], [ %.077, %85 ], [ %.077, %75 ], [ %.077, %74 ], [ %.077, %64 ], [ %.077, %54 ], [ %.077, %53 ], [ %.077, %43 ], [ %.077, %33 ], [ %.077, %31 ], [ %.077, %30 ], [ %.077, %26 ], [ %.077, %22 ], [ %.077, %19 ], [ %.077, %16 ], [ %.077, %15 ], [ %.077, %12 ]
  %.075.be = phi i32 [ %.075, %11 ], [ %.075, %378 ], [ %.075, %377 ], [ %.075, %375 ], [ %.075, %373 ], [ %.075, %372 ], [ %.075, %371 ], [ %.075, %370 ], [ %.075, %355 ], [ %.075, %354 ], [ %.075, %352 ], [ %.075, %351 ], [ %.075, %347 ], [ %.075, %346 ], [ %.075, %344 ], [ %.075, %342 ], [ %.075, %330 ], [ %.075, %320 ], [ %.075, %319 ], [ %.075, %318 ], [ %.075, %317 ], [ %.075, %315 ], [ %.075, %289 ], [ %.075, %279 ], [ %.075, %276 ], [ %.075, %275 ], [ %.075, %271 ], [ %.075, %270 ], [ %.075, %259 ], [ %.075, %249 ], [ %.075, %248 ], [ %.075, %237 ], [ %.075, %227 ], [ %.075, %226 ], [ %.075, %216 ], [ %.075, %206 ], [ %.075, %204 ], [ %.075, %203 ], [ %.075, %193 ], [ %.075, %183 ], [ %182, %181 ], [ %.075, %169 ], [ %.075, %166 ], [ 1, %165 ], [ %.075, %162 ], [ %.075, %161 ], [ %.075, %158 ], [ %.075, %157 ], [ %.075, %147 ], [ %.075, %137 ], [ %.075, %135 ], [ %.075, %134 ], [ %.075, %110 ], [ %.075, %100 ], [ %.075, %96 ], [ %.075, %95 ], [ %.075, %85 ], [ %.075, %75 ], [ %.075, %74 ], [ %.075, %64 ], [ %.075, %54 ], [ %.075, %53 ], [ %.075, %43 ], [ %.075, %33 ], [ %.075, %31 ], [ %.075, %30 ], [ %.075, %26 ], [ %.075, %22 ], [ %.075, %19 ], [ %.075, %16 ], [ %.075, %15 ], [ %.075, %12 ]
  %.073.be = phi i32 [ %.073, %11 ], [ %.073, %378 ], [ %.073, %377 ], [ %376, %375 ], [ %.073, %373 ], [ %.073, %372 ], [ %.073, %371 ], [ %.073, %370 ], [ %.073, %355 ], [ %.073, %354 ], [ %.073, %352 ], [ %.073, %351 ], [ %.073, %347 ], [ %.073, %346 ], [ %345, %344 ], [ %.073, %342 ], [ %.073, %330 ], [ %.073, %320 ], [ %.073, %319 ], [ %.073, %318 ], [ %.073, %317 ], [ %.073, %315 ], [ %.073, %289 ], [ %.073, %279 ], [ %.073, %276 ], [ %.073, %275 ], [ %.073, %271 ], [ %.073, %270 ], [ %260, %259 ], [ %.073, %249 ], [ %.073, %248 ], [ %.073, %237 ], [ %.073, %227 ], [ %.073, %226 ], [ %.073, %216 ], [ %.073, %206 ], [ %.073, %204 ], [ %.073, %203 ], [ %.073, %193 ], [ %.073, %183 ], [ %.073, %181 ], [ %.073, %169 ], [ %.073, %166 ], [ %.073, %165 ], [ %.073, %162 ], [ %.073, %161 ], [ %.073, %158 ], [ %.073, %157 ], [ %.073, %147 ], [ %.073, %137 ], [ %.073, %135 ], [ %.073, %134 ], [ %.073, %110 ], [ %.073, %100 ], [ %.073, %96 ], [ %.073, %95 ], [ %.073, %85 ], [ %.073, %75 ], [ %.073, %74 ], [ %.073, %64 ], [ %.073, %54 ], [ %.073, %53 ], [ %.073, %43 ], [ %.073, %33 ], [ %.073, %31 ], [ %.073, %30 ], [ %.073, %26 ], [ %.073, %22 ], [ %.073, %19 ], [ %.073, %16 ], [ %.073, %15 ], [ %.073, %12 ]
  %.071.be = phi i32 [ %.071, %11 ], [ %.071, %378 ], [ %.071, %377 ], [ 0, %375 ], [ %.071, %373 ], [ %.071, %372 ], [ %.071, %371 ], [ %.071, %370 ], [ %.071, %355 ], [ %.071, %354 ], [ %.071, %352 ], [ %.071, %351 ], [ %348, %347 ], [ %.071, %346 ], [ %.071, %344 ], [ %.071, %342 ], [ %.071, %330 ], [ %.071, %320 ], [ %.071, %319 ], [ %.071, %318 ], [ %.071, %317 ], [ %.071, %315 ], [ %.071, %289 ], [ %.071, %279 ], [ %.071, %276 ], [ %.071, %275 ], [ %.071, %271 ], [ %.071, %270 ], [ 0, %259 ], [ %.071, %249 ], [ %.071, %248 ], [ %.071, %237 ], [ %.071, %227 ], [ %.071, %226 ], [ %.071, %216 ], [ %.071, %206 ], [ %.071, %204 ], [ %.071, %203 ], [ %.071, %193 ], [ %.071, %183 ], [ %.071, %181 ], [ %.071, %169 ], [ %.071, %166 ], [ %.071, %165 ], [ %.071, %162 ], [ %.071, %161 ], [ %.071, %158 ], [ %.071, %157 ], [ %.071, %147 ], [ %.071, %137 ], [ %.071, %135 ], [ %.071, %134 ], [ %.071, %110 ], [ %.071, %100 ], [ %.071, %96 ], [ %.071, %95 ], [ %.071, %85 ], [ %.071, %75 ], [ %.071, %74 ], [ %.071, %64 ], [ %.071, %54 ], [ %.071, %53 ], [ %.071, %43 ], [ %.071, %33 ], [ %.071, %31 ], [ %.071, %30 ], [ %.071, %26 ], [ %.071, %22 ], [ %.071, %19 ], [ %.071, %16 ], [ %.071, %15 ], [ %.071, %12 ]
  %.069.be = phi i8 [ %.069, %11 ], [ %.069, %378 ], [ %.069, %377 ], [ %.069, %375 ], [ %.069, %373 ], [ %.069, %372 ], [ %.069, %371 ], [ %.069, %370 ], [ %.069, %355 ], [ %.069, %354 ], [ %.069, %352 ], [ %.069, %351 ], [ %.069, %347 ], [ %.069, %346 ], [ %.069, %344 ], [ %.069, %342 ], [ %.069, %330 ], [ %.069, %320 ], [ %.069, %319 ], [ %.069, %318 ], [ 1, %317 ], [ %.069, %315 ], [ %.069, %289 ], [ %.069, %279 ], [ %.069, %276 ], [ 0, %275 ], [ %.069, %271 ], [ %.069, %270 ], [ %.069, %259 ], [ %.069, %249 ], [ %.069, %248 ], [ %.069, %237 ], [ %.069, %227 ], [ %.069, %226 ], [ %.069, %216 ], [ %.069, %206 ], [ %.069, %204 ], [ %.069, %203 ], [ %.069, %193 ], [ %.069, %183 ], [ %.069, %181 ], [ %.069, %169 ], [ %.069, %166 ], [ %.069, %165 ], [ %.069, %162 ], [ %.069, %161 ], [ %.069, %158 ], [ %.069, %157 ], [ %.069, %147 ], [ %.069, %137 ], [ %.069, %135 ], [ %.069, %134 ], [ %.069, %110 ], [ %.069, %100 ], [ %.069, %96 ], [ %.069, %95 ], [ %.069, %85 ], [ %.069, %75 ], [ %.069, %74 ], [ %.069, %64 ], [ %.069, %54 ], [ %.069, %53 ], [ %.069, %43 ], [ %.069, %33 ], [ %.069, %31 ], [ %.069, %30 ], [ %.069, %26 ], [ %.069, %22 ], [ %.069, %19 ], [ %.069, %16 ], [ %.069, %15 ], [ %.069, %12 ]
  %.067.be = phi i32 [ %.067, %11 ], [ %.067, %378 ], [ %.067, %377 ], [ %.067, %375 ], [ %.067, %373 ], [ %.067, %372 ], [ %.067, %371 ], [ %.067, %370 ], [ %.067, %355 ], [ %.067, %354 ], [ %.067, %352 ], [ %.067, %351 ], [ %.067, %347 ], [ %.067, %346 ], [ %.067, %344 ], [ %.067, %342 ], [ %.067, %330 ], [ %.067, %320 ], [ %.neg, %319 ], [ %.067, %318 ], [ %.067, %317 ], [ %.067, %315 ], [ %.067, %289 ], [ %.067, %279 ], [ %.067, %276 ], [ 1, %275 ], [ %.067, %271 ], [ %.067, %270 ], [ %.067, %259 ], [ %.067, %249 ], [ %.067, %248 ], [ %.067, %237 ], [ %.067, %227 ], [ %.067, %226 ], [ %.067, %216 ], [ %.067, %206 ], [ %.067, %204 ], [ %.067, %203 ], [ %.067, %193 ], [ %.067, %183 ], [ %.067, %181 ], [ %.067, %169 ], [ %.067, %166 ], [ %.067, %165 ], [ %.067, %162 ], [ %.067, %161 ], [ %.067, %158 ], [ %.067, %157 ], [ %.067, %147 ], [ %.067, %137 ], [ %.067, %135 ], [ %.067, %134 ], [ %.067, %110 ], [ %.067, %100 ], [ %.067, %96 ], [ %.067, %95 ], [ %.067, %85 ], [ %.067, %75 ], [ %.067, %74 ], [ %.067, %64 ], [ %.067, %54 ], [ %.067, %53 ], [ %.067, %43 ], [ %.067, %33 ], [ %.067, %31 ], [ %.067, %30 ], [ %.067, %26 ], [ %.067, %22 ], [ %.067, %19 ], [ %.067, %16 ], [ %.067, %15 ], [ %.067, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ -1399055287, %378 ], [ 323080581, %377 ], [ 528683107, %375 ], [ 924484661, %373 ], [ -1132462959, %372 ], [ 1236713573, %371 ], [ 526601689, %370 ], [ 1409602555, %355 ], [ -1423471691, %354 ], [ -684459121, %352 ], [ -2078559016, %351 ], [ 900147879, %347 ], [ 182989268, %346 ], [ 925270809, %344 ], [ %343, %342 ], [ %341, %330 ], [ %329, %320 ], [ 1987448469, %319 ], [ 959085371, %318 ], [ 1794920015, %317 ], [ %316, %315 ], [ %314, %289 ], [ %288, %279 ], [ %278, %276 ], [ 1987448469, %275 ], [ %274, %271 ], [ 900147879, %270 ], [ %269, %259 ], [ %258, %249 ], [ 1104026679, %248 ], [ %247, %237 ], [ %236, %227 ], [ -1178116405, %226 ], [ %225, %216 ], [ %215, %206 ], [ -344555667, %204 ], [ 2068163445, %203 ], [ %202, %193 ], [ %192, %183 ], [ -1626042995, %181 ], [ 1154323105, %169 ], [ %168, %166 ], [ -1626042995, %165 ], [ %164, %162 ], [ -344555667, %161 ], [ %160, %158 ], [ 1104026679, %157 ], [ %156, %147 ], [ %146, %137 ], [ -824144486, %135 ], [ 390698034, %134 ], [ %133, %110 ], [ %109, %100 ], [ %99, %96 ], [ -824144486, %95 ], [ %94, %85 ], [ %84, %75 ], [ -604586891, %74 ], [ %73, %64 ], [ %63, %54 ], [ -880770513, %53 ], [ %52, %43 ], [ %42, %33 ], [ -1803161197, %31 ], [ 1098689728, %30 ], [ 127978255, %26 ], [ 127978255, %22 ], [ %21, %19 ], [ %18, %16 ], [ -1803161197, %15 ], [ %14, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = load i32, i32* %3, align 4
  %.not92 = icmp sgt i32 %.085, %13
  %14 = select i1 %.not92, i32 -1049264032, i32 825954201
  br label %.backedge

15:                                               ; preds = %11
  br label %.backedge

16:                                               ; preds = %11
  %17 = load i32, i32* %3, align 4
  %.not91 = icmp sgt i32 %.083, %17
  %18 = select i1 %.not91, i32 -588025476, i32 -705826992
  br label %.backedge

19:                                               ; preds = %11
  %20 = icmp eq i32 %.085, %.083
  %21 = select i1 %20, i32 1472676339, i32 1708330572
  br label %.backedge

22:                                               ; preds = %11
  %23 = sext i32 %.085 to i64
  %24 = sext i32 %.083 to i64
  %25 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %23, i64 %24
  store i32 0, i32* %25, align 4
  br label %.backedge

26:                                               ; preds = %11
  %27 = sext i32 %.085 to i64
  %28 = sext i32 %.083 to i64
  %29 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %27, i64 %28
  store i32 1000000000, i32* %29, align 4
  br label %.backedge

30:                                               ; preds = %11
  br label %.backedge

31:                                               ; preds = %11
  %32 = add i32 %.083, 1
  br label %.backedge

33:                                               ; preds = %11
  %34 = load i32, i32* @x.1, align 4
  %35 = load i32, i32* @y.2, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 -2078559016, i32 939216191
  br label %.backedge

43:                                               ; preds = %11
  %44 = load i32, i32* @x.1, align 4
  %45 = load i32, i32* @y.2, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 -1887717338, i32 939216191
  br label %.backedge

53:                                               ; preds = %11
  br label %.backedge

54:                                               ; preds = %11
  %55 = load i32, i32* @x.1, align 4
  %56 = load i32, i32* @y.2, align 4
  %57 = add i32 %55, -1
  %58 = mul i32 %57, %55
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %61, %60
  %63 = select i1 %62, i32 -684459121, i32 -803235898
  br label %.backedge

64:                                               ; preds = %11
  %.neg90 = add i32 %.085, 1
  %65 = load i32, i32* @x.1, align 4
  %66 = load i32, i32* @y.2, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 943858491, i32 -803235898
  br label %.backedge

74:                                               ; preds = %11
  br label %.backedge

75:                                               ; preds = %11
  %76 = load i32, i32* @x.1, align 4
  %77 = load i32, i32* @y.2, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 -1423471691, i32 -558806829
  br label %.backedge

85:                                               ; preds = %11
  %86 = load i32, i32* @x.1, align 4
  %87 = load i32, i32* @y.2, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 154053150, i32 -558806829
  br label %.backedge

95:                                               ; preds = %11
  br label %.backedge

96:                                               ; preds = %11
  %97 = load i32, i32* %4, align 4
  %98 = icmp slt i32 %.081, %97
  %99 = select i1 %98, i32 -815232106, i32 522263383
  br label %.backedge

100:                                              ; preds = %11
  %101 = load i32, i32* @x.1, align 4
  %102 = load i32, i32* @y.2, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 1409602555, i32 -535377747
  br label %.backedge

110:                                              ; preds = %11
  %111 = sext i32 %.081 to i64
  %112 = getelementptr inbounds [1005 x i32], [1005 x i32]* %5, i64 0, i64 %111
  %113 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %112)
  %114 = getelementptr inbounds [1005 x i32], [1005 x i32]* %6, i64 0, i64 %111
  %115 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %113, i32* nonnull dereferenceable(4) %114)
  %116 = getelementptr inbounds [1005 x i32], [1005 x i32]* %7, i64 0, i64 %111
  %117 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %115, i32* nonnull dereferenceable(4) %116)
  %118 = load i32, i32* %116, align 4
  %119 = load i32, i32* %112, align 4
  %120 = sext i32 %119 to i64
  %121 = load i32, i32* %114, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %120, i64 %122
  store i32 %118, i32* %123, align 4
  %124 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %122, i64 %120
  store i32 %118, i32* %124, align 4
  %125 = load i32, i32* @x.1, align 4
  %126 = load i32, i32* @y.2, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 -1571142965, i32 -535377747
  br label %.backedge

134:                                              ; preds = %11
  br label %.backedge

135:                                              ; preds = %11
  %136 = add i32 %.081, 1
  br label %.backedge

137:                                              ; preds = %11
  %138 = load i32, i32* @x.1, align 4
  %139 = load i32, i32* @y.2, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 526601689, i32 2079890547
  br label %.backedge

147:                                              ; preds = %11
  %148 = load i32, i32* @x.1, align 4
  %149 = load i32, i32* @y.2, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 1623328475, i32 2079890547
  br label %.backedge

157:                                              ; preds = %11
  br label %.backedge

158:                                              ; preds = %11
  %159 = load i32, i32* %3, align 4
  %.not89 = icmp sgt i32 %.079, %159
  %160 = select i1 %.not89, i32 -628246531, i32 332865655
  br label %.backedge

161:                                              ; preds = %11
  br label %.backedge

162:                                              ; preds = %11
  %163 = load i32, i32* %3, align 4
  %.not88 = icmp sgt i32 %.077, %163
  %164 = select i1 %.not88, i32 693995555, i32 1642161821
  br label %.backedge

165:                                              ; preds = %11
  br label %.backedge

166:                                              ; preds = %11
  %167 = load i32, i32* %3, align 4
  %.not87 = icmp sgt i32 %.075, %167
  %168 = select i1 %.not87, i32 -1620515366, i32 -1752577978
  br label %.backedge

169:                                              ; preds = %11
  %170 = sext i32 %.077 to i64
  %171 = sext i32 %.075 to i64
  %172 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %170, i64 %171
  %173 = sext i32 %.079 to i64
  %174 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %170, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %173, i64 %171
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %177, %175
  store i32 %178, i32* %8, align 4
  %179 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %172, i32* nonnull dereferenceable(4) %8)
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %172, align 4
  br label %.backedge

181:                                              ; preds = %11
  %182 = add i32 %.075, 1
  br label %.backedge

183:                                              ; preds = %11
  %184 = load i32, i32* @x.1, align 4
  %185 = load i32, i32* @y.2, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 1236713573, i32 -318015001
  br label %.backedge

193:                                              ; preds = %11
  %194 = load i32, i32* @x.1, align 4
  %195 = load i32, i32* @y.2, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 -386141082, i32 -318015001
  br label %.backedge

203:                                              ; preds = %11
  br label %.backedge

204:                                              ; preds = %11
  %205 = add i32 %.077, 1
  br label %.backedge

206:                                              ; preds = %11
  %207 = load i32, i32* @x.1, align 4
  %208 = load i32, i32* @y.2, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 -1132462959, i32 -2050870333
  br label %.backedge

216:                                              ; preds = %11
  %217 = load i32, i32* @x.1, align 4
  %218 = load i32, i32* @y.2, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 -1121508066, i32 -2050870333
  br label %.backedge

226:                                              ; preds = %11
  br label %.backedge

227:                                              ; preds = %11
  %228 = load i32, i32* @x.1, align 4
  %229 = load i32, i32* @y.2, align 4
  %230 = add i32 %228, -1
  %231 = mul i32 %230, %228
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %234, %233
  %236 = select i1 %235, i32 924484661, i32 329855225
  br label %.backedge

237:                                              ; preds = %11
  %238 = add i32 %.079, 1
  %239 = load i32, i32* @x.1, align 4
  %240 = load i32, i32* @y.2, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 1076520271, i32 329855225
  br label %.backedge

248:                                              ; preds = %11
  br label %.backedge

249:                                              ; preds = %11
  %250 = load i32, i32* @x.1, align 4
  %251 = load i32, i32* @y.2, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 528683107, i32 2006910552
  br label %.backedge

259:                                              ; preds = %11
  %260 = load i32, i32* %4, align 4
  %261 = load i32, i32* @x.1, align 4
  %262 = load i32, i32* @y.2, align 4
  %263 = add i32 %261, -1
  %264 = mul i32 %263, %261
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %267, %266
  %269 = select i1 %268, i32 636712158, i32 2006910552
  br label %.backedge

270:                                              ; preds = %11
  br label %.backedge

271:                                              ; preds = %11
  %272 = load i32, i32* %4, align 4
  %273 = icmp slt i32 %.071, %272
  %274 = select i1 %273, i32 -1085667984, i32 845986647
  br label %.backedge

275:                                              ; preds = %11
  br label %.backedge

276:                                              ; preds = %11
  %277 = load i32, i32* %3, align 4
  %.not = icmp sgt i32 %.067, %277
  %278 = select i1 %.not, i32 -1739069067, i32 1229482802
  br label %.backedge

279:                                              ; preds = %11
  %280 = load i32, i32* @x.1, align 4
  %281 = load i32, i32* @y.2, align 4
  %282 = add i32 %280, -1
  %283 = mul i32 %282, %280
  %284 = and i32 %283, 1
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %286, %285
  %288 = select i1 %287, i32 323080581, i32 -1904878283
  br label %.backedge

289:                                              ; preds = %11
  %290 = sext i32 %.067 to i64
  %291 = sext i32 %.071 to i64
  %292 = getelementptr inbounds [1005 x i32], [1005 x i32]* %5, i64 0, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %290, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = getelementptr inbounds [1005 x i32], [1005 x i32]* %7, i64 0, i64 %291
  %298 = load i32, i32* %297, align 4
  %299 = add i32 %298, %296
  %300 = getelementptr inbounds [1005 x i32], [1005 x i32]* %6, i64 0, i64 %291
  %301 = load i32, i32* %300, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %290, i64 %302
  %304 = load i32, i32* %303, align 4
  %305 = icmp eq i32 %299, %304
  store i1 %305, i1* %2, align 1
  %306 = load i32, i32* @x.1, align 4
  %307 = load i32, i32* @y.2, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 1628273485, i32 -1904878283
  br label %.backedge

315:                                              ; preds = %11
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %316 = select i1 %.0..0..0., i32 1536803088, i32 1794920015
  br label %.backedge

317:                                              ; preds = %11
  br label %.backedge

318:                                              ; preds = %11
  br label %.backedge

319:                                              ; preds = %11
  %.neg = add i32 %.067, 1
  br label %.backedge

320:                                              ; preds = %11
  %321 = load i32, i32* @x.1, align 4
  %322 = load i32, i32* @y.2, align 4
  %323 = add i32 %321, -1
  %324 = mul i32 %323, %321
  %325 = and i32 %324, 1
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %327, %326
  %329 = select i1 %328, i32 -1399055287, i32 81615676
  br label %.backedge

330:                                              ; preds = %11
  %331 = and i8 %.069, 1
  %332 = icmp ne i8 %331, 0
  store i1 %332, i1* %1, align 1
  %333 = load i32, i32* @x.1, align 4
  %334 = load i32, i32* @y.2, align 4
  %335 = add i32 %333, -1
  %336 = mul i32 %335, %333
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %339, %338
  %341 = select i1 %340, i32 -1250396829, i32 81615676
  br label %.backedge

342:                                              ; preds = %11
  %.0..0..0.66 = load volatile i1, i1* %1, align 1
  %343 = select i1 %.0..0..0.66, i32 -1600261110, i32 925270809
  br label %.backedge

344:                                              ; preds = %11
  %345 = add i32 %.073, -1
  br label %.backedge

346:                                              ; preds = %11
  br label %.backedge

347:                                              ; preds = %11
  %348 = add i32 %.071, 1
  br label %.backedge

349:                                              ; preds = %11
  %350 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.073)
  ret i32 0

351:                                              ; preds = %11
  br label %.backedge

352:                                              ; preds = %11
  %353 = add i32 %.085, 1
  br label %.backedge

354:                                              ; preds = %11
  br label %.backedge

355:                                              ; preds = %11
  %356 = sext i32 %.081 to i64
  %357 = getelementptr inbounds [1005 x i32], [1005 x i32]* %5, i64 0, i64 %356
  %358 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %357)
  %359 = getelementptr inbounds [1005 x i32], [1005 x i32]* %6, i64 0, i64 %356
  %360 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %358, i32* nonnull dereferenceable(4) %359)
  %361 = getelementptr inbounds [1005 x i32], [1005 x i32]* %7, i64 0, i64 %356
  %362 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %360, i32* nonnull dereferenceable(4) %361)
  %363 = load i32, i32* %361, align 4
  %364 = load i32, i32* %357, align 4
  %365 = sext i32 %364 to i64
  %366 = load i32, i32* %359, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %365, i64 %367
  store i32 %363, i32* %368, align 4
  %369 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dp, i64 0, i64 %367, i64 %365
  store i32 %363, i32* %369, align 4
  br label %.backedge

370:                                              ; preds = %11
  br label %.backedge

371:                                              ; preds = %11
  br label %.backedge

372:                                              ; preds = %11
  br label %.backedge

373:                                              ; preds = %11
  %374 = add i32 %.079, 1
  br label %.backedge

375:                                              ; preds = %11
  %376 = load i32, i32* %4, align 4
  br label %.backedge

377:                                              ; preds = %11
  br label %.backedge

378:                                              ; preds = %11
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i32* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1976877687, %2 ], [ -396415669, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 1976877687, label %8
    i32 -1096485348, label %.outer.backedge
    i32 247692548, label %11
    i32 -396415669, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i32, i32* %4, align 4
  %.0..0..0.6 = load volatile i32, i32* %3, align 4
  %9 = icmp slt i32 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 -1096485348, i32 247692548
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i32* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i32* %.07.ph
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s911481737.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
