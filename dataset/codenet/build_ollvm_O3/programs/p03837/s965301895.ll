; ModuleID = 'build_ollvm/programs/p03837/s965301895.ll'
source_filename = "Project_CodeNet_C++1400/p03837/s965301895.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dist = global [105 x [105 x i32]] zeroinitializer, align 16
@A = local_unnamed_addr global [1005 x i32] zeroinitializer, align 16
@B = local_unnamed_addr global [1005 x i32] zeroinitializer, align 16
@C = local_unnamed_addr global [1005 x i32] zeroinitializer, align 16
@ans = local_unnamed_addr global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s965301895.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %3)
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %9, i32* nonnull dereferenceable(4) %4)
  br label %11

11:                                               ; preds = %.backedge, %0
  %.090 = phi i32 [ 0, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i8 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.0 = phi i32 [ 1117981633, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1117981633, label %12
    i32 -289866861, label %15
    i32 551230520, label %16
    i32 -1741628361, label %19
    i32 927622635, label %22
    i32 1384278746, label %32
    i32 2103273385, label %45
    i32 -2121407762, label %46
    i32 1298061729, label %50
    i32 -32164969, label %51
    i32 -194457955, label %53
    i32 -1207242647, label %54
    i32 -658301818, label %55
    i32 1874446028, label %65
    i32 -26125558, label %75
    i32 303930859, label %76
    i32 863819198, label %86
    i32 792728481, label %98
    i32 921065444, label %100
    i32 -1416190427, label %110
    i32 1359553874, label %135
    i32 -2063129027, label %136
    i32 1148378130, label %146
    i32 1263005679, label %157
    i32 -68773071, label %158
    i32 349300865, label %159
    i32 -482898858, label %163
    i32 1786594392, label %164
    i32 -1417585594, label %168
    i32 1983163227, label %169
    i32 1124024104, label %173
    i32 526037867, label %185
    i32 -587340839, label %186
    i32 330473339, label %196
    i32 -1363965860, label %206
    i32 -1988843314, label %207
    i32 1004942140, label %217
    i32 1086382261, label %227
    i32 1665290135, label %228
    i32 -1259815462, label %238
    i32 -11582714, label %248
    i32 -1525993502, label %249
    i32 -2014035258, label %251
    i32 -1977086912, label %252
    i32 -1822605357, label %256
    i32 395517666, label %264
    i32 -513620042, label %268
    i32 -669405668, label %269
    i32 -1340356112, label %279
    i32 -2057626211, label %291
    i32 2014963470, label %293
    i32 739174755, label %308
    i32 -557994096, label %323
    i32 2066647774, label %324
    i32 -517324915, label %325
    i32 -1856469393, label %327
    i32 -1979209371, label %328
    i32 -76508206, label %338
    i32 52806694, label %348
    i32 1368657951, label %349
    i32 -791493959, label %352
    i32 296865650, label %355
    i32 824307969, label %356
    i32 1311319376, label %366
    i32 -486592283, label %376
    i32 -1421117839, label %377
    i32 110299615, label %387
    i32 1711057547, label %400
    i32 -1716683562, label %401
    i32 -129757910, label %405
    i32 -1406574402, label %406
    i32 -667134853, label %407
    i32 94302851, label %424
    i32 1356869737, label %425
    i32 1490764454, label %426
    i32 -1133464373, label %428
    i32 -1897153159, label %429
    i32 -9926086, label %430
    i32 653247639, label %432
    i32 1898551116, label %434
  ]

.backedge:                                        ; preds = %11, %434, %432, %430, %429, %428, %426, %425, %424, %407, %406, %405, %401, %387, %377, %376, %366, %356, %355, %352, %349, %348, %338, %328, %327, %325, %324, %323, %308, %293, %291, %279, %269, %268, %264, %256, %252, %251, %249, %248, %238, %228, %227, %217, %207, %206, %196, %186, %185, %173, %169, %168, %164, %163, %159, %158, %157, %146, %136, %135, %110, %100, %98, %86, %76, %75, %65, %55, %54, %53, %51, %50, %46, %45, %32, %22, %19, %16, %15, %12
  %.090.be = phi i32 [ %.090, %11 ], [ %.090, %434 ], [ %.090, %432 ], [ %.090, %430 ], [ %.090, %429 ], [ %.090, %428 ], [ %.090, %426 ], [ %.090, %425 ], [ %.090, %424 ], [ %.090, %407 ], [ %.090, %406 ], [ %.090, %405 ], [ %.090, %401 ], [ %.090, %387 ], [ %.090, %377 ], [ %.090, %376 ], [ %.090, %366 ], [ %.090, %356 ], [ %.090, %355 ], [ %.090, %352 ], [ %.090, %349 ], [ %.090, %348 ], [ %.090, %338 ], [ %.090, %328 ], [ %.090, %327 ], [ %.090, %325 ], [ %.090, %324 ], [ %.090, %323 ], [ %.090, %308 ], [ %.090, %293 ], [ %.090, %291 ], [ %.090, %279 ], [ %.090, %269 ], [ %.090, %268 ], [ %.090, %264 ], [ %.090, %256 ], [ %.090, %252 ], [ %.090, %251 ], [ %.090, %249 ], [ %.090, %248 ], [ %.090, %238 ], [ %.090, %228 ], [ %.090, %227 ], [ %.090, %217 ], [ %.090, %207 ], [ %.090, %206 ], [ %.090, %196 ], [ %.090, %186 ], [ %.090, %185 ], [ %.090, %173 ], [ %.090, %169 ], [ %.090, %168 ], [ %.090, %164 ], [ %.090, %163 ], [ %.090, %159 ], [ %.090, %158 ], [ %.090, %157 ], [ %.090, %146 ], [ %.090, %136 ], [ %.090, %135 ], [ %.090, %110 ], [ %.090, %100 ], [ %.090, %98 ], [ %.090, %86 ], [ %.090, %76 ], [ %.090, %75 ], [ %.090, %65 ], [ %.090, %55 ], [ %.neg97, %54 ], [ %.090, %53 ], [ %.090, %51 ], [ %.090, %50 ], [ %.090, %46 ], [ %.090, %45 ], [ %.090, %32 ], [ %.090, %22 ], [ %.090, %19 ], [ %.090, %16 ], [ %.090, %15 ], [ %.090, %12 ]
  %.088.be = phi i32 [ %.088, %11 ], [ %.088, %434 ], [ %.088, %432 ], [ %.088, %430 ], [ %.088, %429 ], [ %.088, %428 ], [ %.088, %426 ], [ %.088, %425 ], [ %.088, %424 ], [ %.088, %407 ], [ %.088, %406 ], [ %.088, %405 ], [ %.088, %401 ], [ %.088, %387 ], [ %.088, %377 ], [ %.088, %376 ], [ %.088, %366 ], [ %.088, %356 ], [ %.088, %355 ], [ %.088, %352 ], [ %.088, %349 ], [ %.088, %348 ], [ %.088, %338 ], [ %.088, %328 ], [ %.088, %327 ], [ %.088, %325 ], [ %.088, %324 ], [ %.088, %323 ], [ %.088, %308 ], [ %.088, %293 ], [ %.088, %291 ], [ %.088, %279 ], [ %.088, %269 ], [ %.088, %268 ], [ %.088, %264 ], [ %.088, %256 ], [ %.088, %252 ], [ %.088, %251 ], [ %.088, %249 ], [ %.088, %248 ], [ %.088, %238 ], [ %.088, %228 ], [ %.088, %227 ], [ %.088, %217 ], [ %.088, %207 ], [ %.088, %206 ], [ %.088, %196 ], [ %.088, %186 ], [ %.088, %185 ], [ %.088, %173 ], [ %.088, %169 ], [ %.088, %168 ], [ %.088, %164 ], [ %.088, %163 ], [ %.088, %159 ], [ %.088, %158 ], [ %.088, %157 ], [ %.088, %146 ], [ %.088, %136 ], [ %.088, %135 ], [ %.088, %110 ], [ %.088, %100 ], [ %.088, %98 ], [ %.088, %86 ], [ %.088, %76 ], [ %.088, %75 ], [ %.088, %65 ], [ %.088, %55 ], [ %.088, %54 ], [ %.088, %53 ], [ %52, %51 ], [ %.088, %50 ], [ %.088, %46 ], [ %.088, %45 ], [ %.088, %32 ], [ %.088, %22 ], [ %.088, %19 ], [ %.088, %16 ], [ 0, %15 ], [ %.088, %12 ]
  %.086.be = phi i32 [ %.086, %11 ], [ %.086, %434 ], [ %.086, %432 ], [ %.086, %430 ], [ %.086, %429 ], [ %.086, %428 ], [ %.086, %426 ], [ %.086, %425 ], [ %.neg, %424 ], [ %.086, %407 ], [ %.086, %406 ], [ 0, %405 ], [ %.086, %401 ], [ %.086, %387 ], [ %.086, %377 ], [ %.086, %376 ], [ %.086, %366 ], [ %.086, %356 ], [ %.086, %355 ], [ %.086, %352 ], [ %.086, %349 ], [ %.086, %348 ], [ %.086, %338 ], [ %.086, %328 ], [ %.086, %327 ], [ %.086, %325 ], [ %.086, %324 ], [ %.086, %323 ], [ %.086, %308 ], [ %.086, %293 ], [ %.086, %291 ], [ %.086, %279 ], [ %.086, %269 ], [ %.086, %268 ], [ %.086, %264 ], [ %.086, %256 ], [ %.086, %252 ], [ %.086, %251 ], [ %.086, %249 ], [ %.086, %248 ], [ %.086, %238 ], [ %.086, %228 ], [ %.086, %227 ], [ %.086, %217 ], [ %.086, %207 ], [ %.086, %206 ], [ %.086, %196 ], [ %.086, %186 ], [ %.086, %185 ], [ %.086, %173 ], [ %.086, %169 ], [ %.086, %168 ], [ %.086, %164 ], [ %.086, %163 ], [ %.086, %159 ], [ %.086, %158 ], [ %.086, %157 ], [ %147, %146 ], [ %.086, %136 ], [ %.086, %135 ], [ %.086, %110 ], [ %.086, %100 ], [ %.086, %98 ], [ %.086, %86 ], [ %.086, %76 ], [ %.086, %75 ], [ 0, %65 ], [ %.086, %55 ], [ %.086, %54 ], [ %.086, %53 ], [ %.086, %51 ], [ %.086, %50 ], [ %.086, %46 ], [ %.086, %45 ], [ %.086, %32 ], [ %.086, %22 ], [ %.086, %19 ], [ %.086, %16 ], [ %.086, %15 ], [ %.086, %12 ]
  %.084.be = phi i32 [ %.084, %11 ], [ %.084, %434 ], [ %.084, %432 ], [ %.084, %430 ], [ %.084, %429 ], [ %.084, %428 ], [ %.084, %426 ], [ %.084, %425 ], [ %.084, %424 ], [ %.084, %407 ], [ %.084, %406 ], [ %.084, %405 ], [ %.084, %401 ], [ %.084, %387 ], [ %.084, %377 ], [ %.084, %376 ], [ %.084, %366 ], [ %.084, %356 ], [ %.084, %355 ], [ %.084, %352 ], [ %.084, %349 ], [ %.084, %348 ], [ %.084, %338 ], [ %.084, %328 ], [ %.084, %327 ], [ %.084, %325 ], [ %.084, %324 ], [ %.084, %323 ], [ %.084, %308 ], [ %.084, %293 ], [ %.084, %291 ], [ %.084, %279 ], [ %.084, %269 ], [ %.084, %268 ], [ %.084, %264 ], [ %.084, %256 ], [ %.084, %252 ], [ %.084, %251 ], [ %250, %249 ], [ %.084, %248 ], [ %.084, %238 ], [ %.084, %228 ], [ %.084, %227 ], [ %.084, %217 ], [ %.084, %207 ], [ %.084, %206 ], [ %.084, %196 ], [ %.084, %186 ], [ %.084, %185 ], [ %.084, %173 ], [ %.084, %169 ], [ %.084, %168 ], [ %.084, %164 ], [ %.084, %163 ], [ %.084, %159 ], [ 0, %158 ], [ %.084, %157 ], [ %.084, %146 ], [ %.084, %136 ], [ %.084, %135 ], [ %.084, %110 ], [ %.084, %100 ], [ %.084, %98 ], [ %.084, %86 ], [ %.084, %76 ], [ %.084, %75 ], [ %.084, %65 ], [ %.084, %55 ], [ %.084, %54 ], [ %.084, %53 ], [ %.084, %51 ], [ %.084, %50 ], [ %.084, %46 ], [ %.084, %45 ], [ %.084, %32 ], [ %.084, %22 ], [ %.084, %19 ], [ %.084, %16 ], [ %.084, %15 ], [ %.084, %12 ]
  %.082.be = phi i32 [ %.082, %11 ], [ %.082, %434 ], [ %.082, %432 ], [ %.082, %430 ], [ %.082, %429 ], [ %.082, %428 ], [ %427, %426 ], [ %.082, %425 ], [ %.082, %424 ], [ %.082, %407 ], [ %.082, %406 ], [ %.082, %405 ], [ %.082, %401 ], [ %.082, %387 ], [ %.082, %377 ], [ %.082, %376 ], [ %.082, %366 ], [ %.082, %356 ], [ %.082, %355 ], [ %.082, %352 ], [ %.082, %349 ], [ %.082, %348 ], [ %.082, %338 ], [ %.082, %328 ], [ %.082, %327 ], [ %.082, %325 ], [ %.082, %324 ], [ %.082, %323 ], [ %.082, %308 ], [ %.082, %293 ], [ %.082, %291 ], [ %.082, %279 ], [ %.082, %269 ], [ %.082, %268 ], [ %.082, %264 ], [ %.082, %256 ], [ %.082, %252 ], [ %.082, %251 ], [ %.082, %249 ], [ %.082, %248 ], [ %.082, %238 ], [ %.082, %228 ], [ %.082, %227 ], [ %.neg94, %217 ], [ %.082, %207 ], [ %.082, %206 ], [ %.082, %196 ], [ %.082, %186 ], [ %.082, %185 ], [ %.082, %173 ], [ %.082, %169 ], [ %.082, %168 ], [ %.082, %164 ], [ 0, %163 ], [ %.082, %159 ], [ %.082, %158 ], [ %.082, %157 ], [ %.082, %146 ], [ %.082, %136 ], [ %.082, %135 ], [ %.082, %110 ], [ %.082, %100 ], [ %.082, %98 ], [ %.082, %86 ], [ %.082, %76 ], [ %.082, %75 ], [ %.082, %65 ], [ %.082, %55 ], [ %.082, %54 ], [ %.082, %53 ], [ %.082, %51 ], [ %.082, %50 ], [ %.082, %46 ], [ %.082, %45 ], [ %.082, %32 ], [ %.082, %22 ], [ %.082, %19 ], [ %.082, %16 ], [ %.082, %15 ], [ %.082, %12 ]
  %.080.be = phi i32 [ %.080, %11 ], [ %.080, %434 ], [ %.080, %432 ], [ %.080, %430 ], [ %.080, %429 ], [ %.080, %428 ], [ %.080, %426 ], [ %.080, %425 ], [ %.080, %424 ], [ %.080, %407 ], [ %.080, %406 ], [ %.080, %405 ], [ %.080, %401 ], [ %.080, %387 ], [ %.080, %377 ], [ %.080, %376 ], [ %.080, %366 ], [ %.080, %356 ], [ %.080, %355 ], [ %.080, %352 ], [ %.080, %349 ], [ %.080, %348 ], [ %.080, %338 ], [ %.080, %328 ], [ %.080, %327 ], [ %.080, %325 ], [ %.080, %324 ], [ %.080, %323 ], [ %.080, %308 ], [ %.080, %293 ], [ %.080, %291 ], [ %.080, %279 ], [ %.080, %269 ], [ %.080, %268 ], [ %.080, %264 ], [ %.080, %256 ], [ %.080, %252 ], [ %.080, %251 ], [ %.080, %249 ], [ %.080, %248 ], [ %.080, %238 ], [ %.080, %228 ], [ %.080, %227 ], [ %.080, %217 ], [ %.080, %207 ], [ %.080, %206 ], [ %.080, %196 ], [ %.080, %186 ], [ %.neg95, %185 ], [ %.080, %173 ], [ %.080, %169 ], [ 0, %168 ], [ %.080, %164 ], [ %.080, %163 ], [ %.080, %159 ], [ %.080, %158 ], [ %.080, %157 ], [ %.080, %146 ], [ %.080, %136 ], [ %.080, %135 ], [ %.080, %110 ], [ %.080, %100 ], [ %.080, %98 ], [ %.080, %86 ], [ %.080, %76 ], [ %.080, %75 ], [ %.080, %65 ], [ %.080, %55 ], [ %.080, %54 ], [ %.080, %53 ], [ %.080, %51 ], [ %.080, %50 ], [ %.080, %46 ], [ %.080, %45 ], [ %.080, %32 ], [ %.080, %22 ], [ %.080, %19 ], [ %.080, %16 ], [ %.080, %15 ], [ %.080, %12 ]
  %.078.be = phi i32 [ %.078, %11 ], [ %.078, %434 ], [ %433, %432 ], [ %.078, %430 ], [ %.078, %429 ], [ %.078, %428 ], [ %.078, %426 ], [ %.078, %425 ], [ %.078, %424 ], [ %.078, %407 ], [ %.078, %406 ], [ %.078, %405 ], [ %.078, %401 ], [ %.078, %387 ], [ %.078, %377 ], [ %.078, %376 ], [ %.neg92, %366 ], [ %.078, %356 ], [ %.078, %355 ], [ %.078, %352 ], [ %.078, %349 ], [ %.078, %348 ], [ %.078, %338 ], [ %.078, %328 ], [ %.078, %327 ], [ %.078, %325 ], [ %.078, %324 ], [ %.078, %323 ], [ %.078, %308 ], [ %.078, %293 ], [ %.078, %291 ], [ %.078, %279 ], [ %.078, %269 ], [ %.078, %268 ], [ %.078, %264 ], [ %.078, %256 ], [ %.078, %252 ], [ 0, %251 ], [ %.078, %249 ], [ %.078, %248 ], [ %.078, %238 ], [ %.078, %228 ], [ %.078, %227 ], [ %.078, %217 ], [ %.078, %207 ], [ %.078, %206 ], [ %.078, %196 ], [ %.078, %186 ], [ %.078, %185 ], [ %.078, %173 ], [ %.078, %169 ], [ %.078, %168 ], [ %.078, %164 ], [ %.078, %163 ], [ %.078, %159 ], [ %.078, %158 ], [ %.078, %157 ], [ %.078, %146 ], [ %.078, %136 ], [ %.078, %135 ], [ %.078, %110 ], [ %.078, %100 ], [ %.078, %98 ], [ %.078, %86 ], [ %.078, %76 ], [ %.078, %75 ], [ %.078, %65 ], [ %.078, %55 ], [ %.078, %54 ], [ %.078, %53 ], [ %.078, %51 ], [ %.078, %50 ], [ %.078, %46 ], [ %.078, %45 ], [ %.078, %32 ], [ %.078, %22 ], [ %.078, %19 ], [ %.078, %16 ], [ %.078, %15 ], [ %.078, %12 ]
  %.076.be = phi i8 [ %.076, %11 ], [ %.076, %434 ], [ %.076, %432 ], [ %.076, %430 ], [ %.076, %429 ], [ %.076, %428 ], [ %.076, %426 ], [ %.076, %425 ], [ %.076, %424 ], [ %.076, %407 ], [ %.076, %406 ], [ %.076, %405 ], [ %.076, %401 ], [ %.076, %387 ], [ %.076, %377 ], [ %.076, %376 ], [ %.076, %366 ], [ %.076, %356 ], [ %.076, %355 ], [ %.076, %352 ], [ %.076, %349 ], [ %.076, %348 ], [ %.076, %338 ], [ %.076, %328 ], [ %.076, %327 ], [ %.076, %325 ], [ %.076, %324 ], [ 1, %323 ], [ %.076, %308 ], [ %.076, %293 ], [ %.076, %291 ], [ %.076, %279 ], [ %.076, %269 ], [ %.076, %268 ], [ %.076, %264 ], [ 0, %256 ], [ %.076, %252 ], [ %.076, %251 ], [ %.076, %249 ], [ %.076, %248 ], [ %.076, %238 ], [ %.076, %228 ], [ %.076, %227 ], [ %.076, %217 ], [ %.076, %207 ], [ %.076, %206 ], [ %.076, %196 ], [ %.076, %186 ], [ %.076, %185 ], [ %.076, %173 ], [ %.076, %169 ], [ %.076, %168 ], [ %.076, %164 ], [ %.076, %163 ], [ %.076, %159 ], [ %.076, %158 ], [ %.076, %157 ], [ %.076, %146 ], [ %.076, %136 ], [ %.076, %135 ], [ %.076, %110 ], [ %.076, %100 ], [ %.076, %98 ], [ %.076, %86 ], [ %.076, %76 ], [ %.076, %75 ], [ %.076, %65 ], [ %.076, %55 ], [ %.076, %54 ], [ %.076, %53 ], [ %.076, %51 ], [ %.076, %50 ], [ %.076, %46 ], [ %.076, %45 ], [ %.076, %32 ], [ %.076, %22 ], [ %.076, %19 ], [ %.076, %16 ], [ %.076, %15 ], [ %.076, %12 ]
  %.074.be = phi i32 [ %.074, %11 ], [ %.074, %434 ], [ %.074, %432 ], [ %.074, %430 ], [ %.074, %429 ], [ %.074, %428 ], [ %.074, %426 ], [ %.074, %425 ], [ %.074, %424 ], [ %.074, %407 ], [ %.074, %406 ], [ %.074, %405 ], [ %.074, %401 ], [ %.074, %387 ], [ %.074, %377 ], [ %.074, %376 ], [ %.074, %366 ], [ %.074, %356 ], [ %.074, %355 ], [ %.074, %352 ], [ %.074, %349 ], [ %.074, %348 ], [ %.074, %338 ], [ %.074, %328 ], [ %.074, %327 ], [ %.074, %325 ], [ %.074, %324 ], [ %.074, %323 ], [ %.074, %308 ], [ %.074, %293 ], [ %.074, %291 ], [ %.074, %279 ], [ %.074, %269 ], [ %.074, %268 ], [ %.074, %264 ], [ %259, %256 ], [ %.074, %252 ], [ %.074, %251 ], [ %.074, %249 ], [ %.074, %248 ], [ %.074, %238 ], [ %.074, %228 ], [ %.074, %227 ], [ %.074, %217 ], [ %.074, %207 ], [ %.074, %206 ], [ %.074, %196 ], [ %.074, %186 ], [ %.074, %185 ], [ %.074, %173 ], [ %.074, %169 ], [ %.074, %168 ], [ %.074, %164 ], [ %.074, %163 ], [ %.074, %159 ], [ %.074, %158 ], [ %.074, %157 ], [ %.074, %146 ], [ %.074, %136 ], [ %.074, %135 ], [ %.074, %110 ], [ %.074, %100 ], [ %.074, %98 ], [ %.074, %86 ], [ %.074, %76 ], [ %.074, %75 ], [ %.074, %65 ], [ %.074, %55 ], [ %.074, %54 ], [ %.074, %53 ], [ %.074, %51 ], [ %.074, %50 ], [ %.074, %46 ], [ %.074, %45 ], [ %.074, %32 ], [ %.074, %22 ], [ %.074, %19 ], [ %.074, %16 ], [ %.074, %15 ], [ %.074, %12 ]
  %.072.be = phi i32 [ %.072, %11 ], [ %.072, %434 ], [ %.072, %432 ], [ %.072, %430 ], [ %.072, %429 ], [ %.072, %428 ], [ %.072, %426 ], [ %.072, %425 ], [ %.072, %424 ], [ %.072, %407 ], [ %.072, %406 ], [ %.072, %405 ], [ %.072, %401 ], [ %.072, %387 ], [ %.072, %377 ], [ %.072, %376 ], [ %.072, %366 ], [ %.072, %356 ], [ %.072, %355 ], [ %.072, %352 ], [ %.072, %349 ], [ %.072, %348 ], [ %.072, %338 ], [ %.072, %328 ], [ %.072, %327 ], [ %.072, %325 ], [ %.072, %324 ], [ %.072, %323 ], [ %.072, %308 ], [ %.072, %293 ], [ %.072, %291 ], [ %.072, %279 ], [ %.072, %269 ], [ %.072, %268 ], [ %.072, %264 ], [ %261, %256 ], [ %.072, %252 ], [ %.072, %251 ], [ %.072, %249 ], [ %.072, %248 ], [ %.072, %238 ], [ %.072, %228 ], [ %.072, %227 ], [ %.072, %217 ], [ %.072, %207 ], [ %.072, %206 ], [ %.072, %196 ], [ %.072, %186 ], [ %.072, %185 ], [ %.072, %173 ], [ %.072, %169 ], [ %.072, %168 ], [ %.072, %164 ], [ %.072, %163 ], [ %.072, %159 ], [ %.072, %158 ], [ %.072, %157 ], [ %.072, %146 ], [ %.072, %136 ], [ %.072, %135 ], [ %.072, %110 ], [ %.072, %100 ], [ %.072, %98 ], [ %.072, %86 ], [ %.072, %76 ], [ %.072, %75 ], [ %.072, %65 ], [ %.072, %55 ], [ %.072, %54 ], [ %.072, %53 ], [ %.072, %51 ], [ %.072, %50 ], [ %.072, %46 ], [ %.072, %45 ], [ %.072, %32 ], [ %.072, %22 ], [ %.072, %19 ], [ %.072, %16 ], [ %.072, %15 ], [ %.072, %12 ]
  %.070.be = phi i32 [ %.070, %11 ], [ %.070, %434 ], [ %.070, %432 ], [ %.070, %430 ], [ %.070, %429 ], [ %.070, %428 ], [ %.070, %426 ], [ %.070, %425 ], [ %.070, %424 ], [ %.070, %407 ], [ %.070, %406 ], [ %.070, %405 ], [ %.070, %401 ], [ %.070, %387 ], [ %.070, %377 ], [ %.070, %376 ], [ %.070, %366 ], [ %.070, %356 ], [ %.070, %355 ], [ %.070, %352 ], [ %.070, %349 ], [ %.070, %348 ], [ %.070, %338 ], [ %.070, %328 ], [ %.070, %327 ], [ %.070, %325 ], [ %.070, %324 ], [ %.070, %323 ], [ %.070, %308 ], [ %.070, %293 ], [ %.070, %291 ], [ %.070, %279 ], [ %.070, %269 ], [ %.070, %268 ], [ %.070, %264 ], [ %263, %256 ], [ %.070, %252 ], [ %.070, %251 ], [ %.070, %249 ], [ %.070, %248 ], [ %.070, %238 ], [ %.070, %228 ], [ %.070, %227 ], [ %.070, %217 ], [ %.070, %207 ], [ %.070, %206 ], [ %.070, %196 ], [ %.070, %186 ], [ %.070, %185 ], [ %.070, %173 ], [ %.070, %169 ], [ %.070, %168 ], [ %.070, %164 ], [ %.070, %163 ], [ %.070, %159 ], [ %.070, %158 ], [ %.070, %157 ], [ %.070, %146 ], [ %.070, %136 ], [ %.070, %135 ], [ %.070, %110 ], [ %.070, %100 ], [ %.070, %98 ], [ %.070, %86 ], [ %.070, %76 ], [ %.070, %75 ], [ %.070, %65 ], [ %.070, %55 ], [ %.070, %54 ], [ %.070, %53 ], [ %.070, %51 ], [ %.070, %50 ], [ %.070, %46 ], [ %.070, %45 ], [ %.070, %32 ], [ %.070, %22 ], [ %.070, %19 ], [ %.070, %16 ], [ %.070, %15 ], [ %.070, %12 ]
  %.068.be = phi i32 [ %.068, %11 ], [ %.068, %434 ], [ %.068, %432 ], [ %431, %430 ], [ %.068, %429 ], [ %.068, %428 ], [ %.068, %426 ], [ %.068, %425 ], [ %.068, %424 ], [ %.068, %407 ], [ %.068, %406 ], [ %.068, %405 ], [ %.068, %401 ], [ %.068, %387 ], [ %.068, %377 ], [ %.068, %376 ], [ %.068, %366 ], [ %.068, %356 ], [ %.068, %355 ], [ %.068, %352 ], [ %.068, %349 ], [ %.068, %348 ], [ %.neg93, %338 ], [ %.068, %328 ], [ %.068, %327 ], [ %.068, %325 ], [ %.068, %324 ], [ %.068, %323 ], [ %.068, %308 ], [ %.068, %293 ], [ %.068, %291 ], [ %.068, %279 ], [ %.068, %269 ], [ %.068, %268 ], [ %.068, %264 ], [ 0, %256 ], [ %.068, %252 ], [ %.068, %251 ], [ %.068, %249 ], [ %.068, %248 ], [ %.068, %238 ], [ %.068, %228 ], [ %.068, %227 ], [ %.068, %217 ], [ %.068, %207 ], [ %.068, %206 ], [ %.068, %196 ], [ %.068, %186 ], [ %.068, %185 ], [ %.068, %173 ], [ %.068, %169 ], [ %.068, %168 ], [ %.068, %164 ], [ %.068, %163 ], [ %.068, %159 ], [ %.068, %158 ], [ %.068, %157 ], [ %.068, %146 ], [ %.068, %136 ], [ %.068, %135 ], [ %.068, %110 ], [ %.068, %100 ], [ %.068, %98 ], [ %.068, %86 ], [ %.068, %76 ], [ %.068, %75 ], [ %.068, %65 ], [ %.068, %55 ], [ %.068, %54 ], [ %.068, %53 ], [ %.068, %51 ], [ %.068, %50 ], [ %.068, %46 ], [ %.068, %45 ], [ %.068, %32 ], [ %.068, %22 ], [ %.068, %19 ], [ %.068, %16 ], [ %.068, %15 ], [ %.068, %12 ]
  %.066.be = phi i32 [ %.066, %11 ], [ %.066, %434 ], [ %.066, %432 ], [ %.066, %430 ], [ %.066, %429 ], [ %.066, %428 ], [ %.066, %426 ], [ %.066, %425 ], [ %.066, %424 ], [ %.066, %407 ], [ %.066, %406 ], [ %.066, %405 ], [ %.066, %401 ], [ %.066, %387 ], [ %.066, %377 ], [ %.066, %376 ], [ %.066, %366 ], [ %.066, %356 ], [ %.066, %355 ], [ %.066, %352 ], [ %.066, %349 ], [ %.066, %348 ], [ %.066, %338 ], [ %.066, %328 ], [ %.066, %327 ], [ %326, %325 ], [ %.066, %324 ], [ %.066, %323 ], [ %.066, %308 ], [ %.066, %293 ], [ %.066, %291 ], [ %.066, %279 ], [ %.066, %269 ], [ 0, %268 ], [ %.066, %264 ], [ %.066, %256 ], [ %.066, %252 ], [ %.066, %251 ], [ %.066, %249 ], [ %.066, %248 ], [ %.066, %238 ], [ %.066, %228 ], [ %.066, %227 ], [ %.066, %217 ], [ %.066, %207 ], [ %.066, %206 ], [ %.066, %196 ], [ %.066, %186 ], [ %.066, %185 ], [ %.066, %173 ], [ %.066, %169 ], [ %.066, %168 ], [ %.066, %164 ], [ %.066, %163 ], [ %.066, %159 ], [ %.066, %158 ], [ %.066, %157 ], [ %.066, %146 ], [ %.066, %136 ], [ %.066, %135 ], [ %.066, %110 ], [ %.066, %100 ], [ %.066, %98 ], [ %.066, %86 ], [ %.066, %76 ], [ %.066, %75 ], [ %.066, %65 ], [ %.066, %55 ], [ %.066, %54 ], [ %.066, %53 ], [ %.066, %51 ], [ %.066, %50 ], [ %.066, %46 ], [ %.066, %45 ], [ %.066, %32 ], [ %.066, %22 ], [ %.066, %19 ], [ %.066, %16 ], [ %.066, %15 ], [ %.066, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ 110299615, %434 ], [ 1311319376, %432 ], [ -76508206, %430 ], [ -1340356112, %429 ], [ -1259815462, %428 ], [ 1004942140, %426 ], [ 330473339, %425 ], [ 1148378130, %424 ], [ -1416190427, %407 ], [ 863819198, %406 ], [ 1874446028, %405 ], [ 1384278746, %401 ], [ %399, %387 ], [ %386, %377 ], [ -1977086912, %376 ], [ %375, %366 ], [ %365, %356 ], [ 824307969, %355 ], [ 296865650, %352 ], [ %351, %349 ], [ 395517666, %348 ], [ %347, %338 ], [ %337, %328 ], [ -1979209371, %327 ], [ -669405668, %325 ], [ -517324915, %324 ], [ 2066647774, %323 ], [ %322, %308 ], [ %307, %293 ], [ %292, %291 ], [ %290, %279 ], [ %278, %269 ], [ -669405668, %268 ], [ %267, %264 ], [ 395517666, %256 ], [ %255, %252 ], [ -1977086912, %251 ], [ 349300865, %249 ], [ -1525993502, %248 ], [ %247, %238 ], [ %237, %228 ], [ 1786594392, %227 ], [ %226, %217 ], [ %216, %207 ], [ -1988843314, %206 ], [ %205, %196 ], [ %195, %186 ], [ 1983163227, %185 ], [ 526037867, %173 ], [ %172, %169 ], [ 1983163227, %168 ], [ %167, %164 ], [ 1786594392, %163 ], [ %162, %159 ], [ 349300865, %158 ], [ 303930859, %157 ], [ %156, %146 ], [ %145, %136 ], [ -2063129027, %135 ], [ %134, %110 ], [ %109, %100 ], [ %99, %98 ], [ %97, %86 ], [ %85, %76 ], [ 303930859, %75 ], [ %74, %65 ], [ %64, %55 ], [ 1117981633, %54 ], [ -1207242647, %53 ], [ 551230520, %51 ], [ -32164969, %50 ], [ 1298061729, %46 ], [ 1298061729, %45 ], [ %44, %32 ], [ %31, %22 ], [ %21, %19 ], [ %18, %16 ], [ 551230520, %15 ], [ %14, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = icmp slt i32 %.090, 105
  %14 = select i1 %13, i32 -289866861, i32 -658301818
  br label %.backedge

15:                                               ; preds = %11
  br label %.backedge

16:                                               ; preds = %11
  %17 = icmp slt i32 %.088, 105
  %18 = select i1 %17, i32 -1741628361, i32 -194457955
  br label %.backedge

19:                                               ; preds = %11
  %20 = icmp eq i32 %.090, %.088
  %21 = select i1 %20, i32 927622635, i32 -2121407762
  br label %.backedge

22:                                               ; preds = %11
  %23 = load i32, i32* @x.1, align 4
  %24 = load i32, i32* @y.2, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 1384278746, i32 -1716683562
  br label %.backedge

32:                                               ; preds = %11
  %33 = sext i32 %.090 to i64
  %34 = sext i32 %.088 to i64
  %35 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %33, i64 %34
  store i32 0, i32* %35, align 4
  %36 = load i32, i32* @x.1, align 4
  %37 = load i32, i32* @y.2, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 2103273385, i32 -1716683562
  br label %.backedge

45:                                               ; preds = %11
  br label %.backedge

46:                                               ; preds = %11
  %47 = sext i32 %.090 to i64
  %48 = sext i32 %.088 to i64
  %49 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %47, i64 %48
  store i32 1000000099, i32* %49, align 4
  br label %.backedge

50:                                               ; preds = %11
  br label %.backedge

51:                                               ; preds = %11
  %52 = add i32 %.088, 1
  br label %.backedge

53:                                               ; preds = %11
  br label %.backedge

54:                                               ; preds = %11
  %.neg97 = add i32 %.090, 1
  br label %.backedge

55:                                               ; preds = %11
  %56 = load i32, i32* @x.1, align 4
  %57 = load i32, i32* @y.2, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 1874446028, i32 -129757910
  br label %.backedge

65:                                               ; preds = %11
  %66 = load i32, i32* @x.1, align 4
  %67 = load i32, i32* @y.2, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 -26125558, i32 -129757910
  br label %.backedge

75:                                               ; preds = %11
  br label %.backedge

76:                                               ; preds = %11
  %77 = load i32, i32* @x.1, align 4
  %78 = load i32, i32* @y.2, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 863819198, i32 -1406574402
  br label %.backedge

86:                                               ; preds = %11
  %87 = load i32, i32* %4, align 4
  %88 = icmp slt i32 %.086, %87
  store i1 %88, i1* %2, align 1
  %89 = load i32, i32* @x.1, align 4
  %90 = load i32, i32* @y.2, align 4
  %91 = add i32 %89, -1
  %92 = mul i32 %91, %89
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %95, %94
  %97 = select i1 %96, i32 792728481, i32 -1406574402
  br label %.backedge

98:                                               ; preds = %11
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %99 = select i1 %.0..0..0., i32 921065444, i32 -68773071
  br label %.backedge

100:                                              ; preds = %11
  %101 = load i32, i32* @x.1, align 4
  %102 = load i32, i32* @y.2, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 -1416190427, i32 -667134853
  br label %.backedge

110:                                              ; preds = %11
  %111 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %112 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %111, i32* nonnull dereferenceable(4) %6)
  %113 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %112, i32* nonnull dereferenceable(4) %7)
  %114 = load i32, i32* %5, align 4
  %.neg96 = add i32 %114, -1
  store i32 %.neg96, i32* %5, align 4
  %115 = load i32, i32* %6, align 4
  %116 = add i32 %115, -1
  store i32 %116, i32* %6, align 4
  %117 = load i32, i32* %7, align 4
  %118 = sext i32 %116 to i64
  %119 = sext i32 %.neg96 to i64
  %120 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %118, i64 %119
  store i32 %117, i32* %120, align 4
  %121 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %119, i64 %118
  store i32 %117, i32* %121, align 4
  %122 = sext i32 %.086 to i64
  %123 = getelementptr inbounds [1005 x i32], [1005 x i32]* @A, i64 0, i64 %122
  store i32 %.neg96, i32* %123, align 4
  %124 = getelementptr inbounds [1005 x i32], [1005 x i32]* @B, i64 0, i64 %122
  store i32 %116, i32* %124, align 4
  %125 = getelementptr inbounds [1005 x i32], [1005 x i32]* @C, i64 0, i64 %122
  store i32 %117, i32* %125, align 4
  %126 = load i32, i32* @x.1, align 4
  %127 = load i32, i32* @y.2, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 1359553874, i32 -667134853
  br label %.backedge

135:                                              ; preds = %11
  br label %.backedge

136:                                              ; preds = %11
  %137 = load i32, i32* @x.1, align 4
  %138 = load i32, i32* @y.2, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 1148378130, i32 94302851
  br label %.backedge

146:                                              ; preds = %11
  %147 = add i32 %.086, 1
  %148 = load i32, i32* @x.1, align 4
  %149 = load i32, i32* @y.2, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 1263005679, i32 94302851
  br label %.backedge

157:                                              ; preds = %11
  br label %.backedge

158:                                              ; preds = %11
  br label %.backedge

159:                                              ; preds = %11
  %160 = load i32, i32* %3, align 4
  %161 = icmp slt i32 %.084, %160
  %162 = select i1 %161, i32 -482898858, i32 -2014035258
  br label %.backedge

163:                                              ; preds = %11
  br label %.backedge

164:                                              ; preds = %11
  %165 = load i32, i32* %3, align 4
  %166 = icmp slt i32 %.082, %165
  %167 = select i1 %166, i32 -1417585594, i32 1665290135
  br label %.backedge

168:                                              ; preds = %11
  br label %.backedge

169:                                              ; preds = %11
  %170 = load i32, i32* %3, align 4
  %171 = icmp slt i32 %.080, %170
  %172 = select i1 %171, i32 1124024104, i32 -587340839
  br label %.backedge

173:                                              ; preds = %11
  %174 = sext i32 %.082 to i64
  %175 = sext i32 %.080 to i64
  %176 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %174, i64 %175
  %177 = sext i32 %.084 to i64
  %178 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %174, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %177, i64 %175
  %181 = load i32, i32* %180, align 4
  %182 = add i32 %181, %179
  store i32 %182, i32* %8, align 4
  %183 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %176, i32* nonnull dereferenceable(4) %8)
  %184 = load i32, i32* %183, align 4
  store i32 %184, i32* %176, align 4
  br label %.backedge

185:                                              ; preds = %11
  %.neg95 = add i32 %.080, 1
  br label %.backedge

186:                                              ; preds = %11
  %187 = load i32, i32* @x.1, align 4
  %188 = load i32, i32* @y.2, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 330473339, i32 1356869737
  br label %.backedge

196:                                              ; preds = %11
  %197 = load i32, i32* @x.1, align 4
  %198 = load i32, i32* @y.2, align 4
  %199 = add i32 %197, -1
  %200 = mul i32 %199, %197
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %203, %202
  %205 = select i1 %204, i32 -1363965860, i32 1356869737
  br label %.backedge

206:                                              ; preds = %11
  br label %.backedge

207:                                              ; preds = %11
  %208 = load i32, i32* @x.1, align 4
  %209 = load i32, i32* @y.2, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 1004942140, i32 1490764454
  br label %.backedge

217:                                              ; preds = %11
  %.neg94 = add i32 %.082, 1
  %218 = load i32, i32* @x.1, align 4
  %219 = load i32, i32* @y.2, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 1086382261, i32 1490764454
  br label %.backedge

227:                                              ; preds = %11
  br label %.backedge

228:                                              ; preds = %11
  %229 = load i32, i32* @x.1, align 4
  %230 = load i32, i32* @y.2, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 -1259815462, i32 -1133464373
  br label %.backedge

238:                                              ; preds = %11
  %239 = load i32, i32* @x.1, align 4
  %240 = load i32, i32* @y.2, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 -11582714, i32 -1133464373
  br label %.backedge

248:                                              ; preds = %11
  br label %.backedge

249:                                              ; preds = %11
  %250 = add i32 %.084, 1
  br label %.backedge

251:                                              ; preds = %11
  br label %.backedge

252:                                              ; preds = %11
  %253 = load i32, i32* %4, align 4
  %254 = icmp slt i32 %.078, %253
  %255 = select i1 %254, i32 -1822605357, i32 -1421117839
  br label %.backedge

256:                                              ; preds = %11
  %257 = sext i32 %.078 to i64
  %258 = getelementptr inbounds [1005 x i32], [1005 x i32]* @A, i64 0, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = getelementptr inbounds [1005 x i32], [1005 x i32]* @B, i64 0, i64 %257
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds [1005 x i32], [1005 x i32]* @C, i64 0, i64 %257
  %263 = load i32, i32* %262, align 4
  br label %.backedge

264:                                              ; preds = %11
  %265 = load i32, i32* %3, align 4
  %266 = icmp slt i32 %.068, %265
  %267 = select i1 %266, i32 -513620042, i32 1368657951
  br label %.backedge

268:                                              ; preds = %11
  br label %.backedge

269:                                              ; preds = %11
  %270 = load i32, i32* @x.1, align 4
  %271 = load i32, i32* @y.2, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 -1340356112, i32 -1897153159
  br label %.backedge

279:                                              ; preds = %11
  %280 = load i32, i32* %3, align 4
  %281 = icmp slt i32 %.066, %280
  store i1 %281, i1* %1, align 1
  %282 = load i32, i32* @x.1, align 4
  %283 = load i32, i32* @y.2, align 4
  %284 = add i32 %282, -1
  %285 = mul i32 %284, %282
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %288, %287
  %290 = select i1 %289, i32 -2057626211, i32 -1897153159
  br label %.backedge

291:                                              ; preds = %11
  %.0..0..0.65 = load volatile i1, i1* %1, align 1
  %292 = select i1 %.0..0..0.65, i32 2014963470, i32 -1856469393
  br label %.backedge

293:                                              ; preds = %11
  %294 = sext i32 %.068 to i64
  %295 = sext i32 %.066 to i64
  %296 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %294, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = sext i32 %.074 to i64
  %299 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %294, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = sext i32 %.072 to i64
  %302 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %301, i64 %295
  %303 = load i32, i32* %302, align 4
  %304 = add i32 %300, %.070
  %305 = add i32 %304, %303
  %306 = icmp eq i32 %297, %305
  %307 = select i1 %306, i32 -557994096, i32 739174755
  br label %.backedge

308:                                              ; preds = %11
  %309 = sext i32 %.068 to i64
  %310 = sext i32 %.066 to i64
  %311 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %309, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = sext i32 %.072 to i64
  %314 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %309, i64 %313
  %315 = load i32, i32* %314, align 4
  %316 = sext i32 %.074 to i64
  %317 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %316, i64 %310
  %318 = load i32, i32* %317, align 4
  %319 = add i32 %315, %.070
  %320 = add i32 %319, %318
  %321 = icmp eq i32 %312, %320
  %322 = select i1 %321, i32 -557994096, i32 2066647774
  br label %.backedge

323:                                              ; preds = %11
  br label %.backedge

324:                                              ; preds = %11
  br label %.backedge

325:                                              ; preds = %11
  %326 = add i32 %.066, 1
  br label %.backedge

327:                                              ; preds = %11
  br label %.backedge

328:                                              ; preds = %11
  %329 = load i32, i32* @x.1, align 4
  %330 = load i32, i32* @y.2, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 -76508206, i32 -9926086
  br label %.backedge

338:                                              ; preds = %11
  %.neg93 = add i32 %.068, 1
  %339 = load i32, i32* @x.1, align 4
  %340 = load i32, i32* @y.2, align 4
  %341 = add i32 %339, -1
  %342 = mul i32 %341, %339
  %343 = and i32 %342, 1
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %345, %344
  %347 = select i1 %346, i32 52806694, i32 -9926086
  br label %.backedge

348:                                              ; preds = %11
  br label %.backedge

349:                                              ; preds = %11
  %350 = and i8 %.076, 1
  %.not = icmp eq i8 %350, 0
  %351 = select i1 %.not, i32 -791493959, i32 296865650
  br label %.backedge

352:                                              ; preds = %11
  %353 = load i32, i32* @ans, align 4
  %354 = add i32 %353, 1
  store i32 %354, i32* @ans, align 4
  br label %.backedge

355:                                              ; preds = %11
  br label %.backedge

356:                                              ; preds = %11
  %357 = load i32, i32* @x.1, align 4
  %358 = load i32, i32* @y.2, align 4
  %359 = add i32 %357, -1
  %360 = mul i32 %359, %357
  %361 = and i32 %360, 1
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %363, %362
  %365 = select i1 %364, i32 1311319376, i32 653247639
  br label %.backedge

366:                                              ; preds = %11
  %.neg92 = add i32 %.078, 1
  %367 = load i32, i32* @x.1, align 4
  %368 = load i32, i32* @y.2, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 -486592283, i32 653247639
  br label %.backedge

376:                                              ; preds = %11
  br label %.backedge

377:                                              ; preds = %11
  %378 = load i32, i32* @x.1, align 4
  %379 = load i32, i32* @y.2, align 4
  %380 = add i32 %378, -1
  %381 = mul i32 %380, %378
  %382 = and i32 %381, 1
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %384, %383
  %386 = select i1 %385, i32 110299615, i32 1898551116
  br label %.backedge

387:                                              ; preds = %11
  %388 = load i32, i32* @ans, align 4
  %389 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %388)
  %390 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %389, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %391 = load i32, i32* @x.1, align 4
  %392 = load i32, i32* @y.2, align 4
  %393 = add i32 %391, -1
  %394 = mul i32 %393, %391
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %397, %396
  %399 = select i1 %398, i32 1711057547, i32 1898551116
  br label %.backedge

400:                                              ; preds = %11
  ret i32 0

401:                                              ; preds = %11
  %402 = sext i32 %.090 to i64
  %403 = sext i32 %.088 to i64
  %404 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %402, i64 %403
  store i32 0, i32* %404, align 4
  br label %.backedge

405:                                              ; preds = %11
  br label %.backedge

406:                                              ; preds = %11
  br label %.backedge

407:                                              ; preds = %11
  %408 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %409 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %408, i32* nonnull dereferenceable(4) %6)
  %410 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %409, i32* nonnull dereferenceable(4) %7)
  %411 = load i32, i32* %5, align 4
  %412 = add i32 %411, -1
  store i32 %412, i32* %5, align 4
  %413 = load i32, i32* %6, align 4
  %414 = add i32 %413, -1
  store i32 %414, i32* %6, align 4
  %415 = load i32, i32* %7, align 4
  %416 = sext i32 %414 to i64
  %417 = sext i32 %412 to i64
  %418 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %416, i64 %417
  store i32 %415, i32* %418, align 4
  %419 = getelementptr inbounds [105 x [105 x i32]], [105 x [105 x i32]]* @dist, i64 0, i64 %417, i64 %416
  store i32 %415, i32* %419, align 4
  %420 = sext i32 %.086 to i64
  %421 = getelementptr inbounds [1005 x i32], [1005 x i32]* @A, i64 0, i64 %420
  store i32 %412, i32* %421, align 4
  %422 = getelementptr inbounds [1005 x i32], [1005 x i32]* @B, i64 0, i64 %420
  store i32 %414, i32* %422, align 4
  %423 = getelementptr inbounds [1005 x i32], [1005 x i32]* @C, i64 0, i64 %420
  store i32 %415, i32* %423, align 4
  br label %.backedge

424:                                              ; preds = %11
  %.neg = add i32 %.086, 1
  br label %.backedge

425:                                              ; preds = %11
  br label %.backedge

426:                                              ; preds = %11
  %427 = add i32 %.082, 1
  br label %.backedge

428:                                              ; preds = %11
  br label %.backedge

429:                                              ; preds = %11
  br label %.backedge

430:                                              ; preds = %11
  %431 = add i32 %.068, 1
  br label %.backedge

432:                                              ; preds = %11
  %433 = add i32 %.078, 1
  br label %.backedge

434:                                              ; preds = %11
  %435 = load i32, i32* @ans, align 4
  %436 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %435)
  %437 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %436, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.3, align 4
  %9 = load i32, i32* @y.4, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 1322824056, i32 -64280438
  %17 = select i1 %15, i32 317754403, i32 -64280438
  br label %.outer

.outer:                                           ; preds = %18, %2
  %.09.ph = phi i32* [ undef, %2 ], [ %.09.ph14, %18 ]
  %.0.ph = phi i32 [ -1844946053, %2 ], [ %16, %18 ]
  br label %.outer13

.outer13:                                         ; preds = %.outer13.backedge, %.outer
  %.09.ph14 = phi i32* [ %.09.ph, %.outer ], [ %.09.ph14.be, %.outer13.backedge ]
  %.0.ph15 = phi i32 [ %.0.ph, %.outer ], [ 697208035, %.outer13.backedge ]
  br label %.outer16

.outer16:                                         ; preds = %.outer16.backedge, %.outer13
  %.0.ph17 = phi i32 [ %.0.ph15, %.outer13 ], [ %.0.ph17.be, %.outer16.backedge ]
  br label %18

18:                                               ; preds = %.outer16, %18
  switch i32 %.0.ph17, label %18 [
    i32 -1844946053, label %19
    i32 1668606494, label %.outer13.backedge
    i32 1202295831, label %22
    i32 697208035, label %.outer16.backedge
    i32 317754403, label %.outer
    i32 1322824056, label %23
    i32 -64280438, label %24
  ]

19:                                               ; preds = %18
  %.0..0..0.6 = load volatile i32, i32* %5, align 4
  %.0..0..0.7 = load volatile i32, i32* %4, align 4
  %20 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %21 = select i1 %20, i32 1668606494, i32 1202295831
  br label %.outer16.backedge

22:                                               ; preds = %18
  br label %.outer13.backedge

.outer13.backedge:                                ; preds = %18, %22
  %.09.ph14.be = phi i32* [ %0, %22 ], [ %1, %18 ]
  br label %.outer13

23:                                               ; preds = %18
  store i32* %.09.ph, i32** %3, align 8
  %.0..0..0.8 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.8

24:                                               ; preds = %18
  br label %.outer16.backedge

.outer16.backedge:                                ; preds = %18, %24, %19
  %.0.ph17.be = phi i32 [ %21, %19 ], [ 317754403, %24 ], [ %17, %18 ]
  br label %.outer16
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s965301895.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
