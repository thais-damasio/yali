; ModuleID = 'build_ollvm/programs/p03837/s264781882.ll'
source_filename = "Project_CodeNet_C++1400/p03837/s264781882.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_ = comdat any

$_Z5chminIiEbRT_S0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dx = local_unnamed_addr global [8 x i32] [i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1], align 16
@dy = local_unnamed_addr global [8 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1], align 16
@dist = global [110 x [110 x i32]] zeroinitializer, align 16
@a = global [1000 x i32] zeroinitializer, align 16
@b = global [1000 x i32] zeroinitializer, align 16
@c = global [1000 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s264781882.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @__cxx_global_var_init.1() unnamed_addr #4 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.2, align 4
  %4 = load i32, i32* @y.3, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1003848155, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1003848155, label %11
    i32 -20894856, label %14
    i32 -569781575, label %25
    i32 1002837648, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -20894856, i32 1002837648
  br label %.outer.backedge

14:                                               ; preds = %10
  %15 = tail call double @_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 -1)
  %16 = load i32, i32* @x.2, align 4
  %17 = load i32, i32* @y.3, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -569781575, i32 1002837648
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  %27 = tail call double @_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 -1)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -20894856, %26 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 %0) local_unnamed_addr #4 comdat {
  %2 = alloca double, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.4, align 4
  %6 = load i32, i32* @y.5, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = sitofp i32 %0 to double
  %13 = or i1 %11, %10
  %14 = select i1 %13, i32 1020776299, i32 311583648
  br label %.outer

.outer:                                           ; preds = %19, %1
  %.ph = phi double [ %20, %19 ], [ undef, %1 ]
  %.0.ph = phi i32 [ %14, %19 ], [ -776275265, %1 ]
  br label %.outer3

.outer3:                                          ; preds = %.outer3.backedge, %.outer
  %.0.ph4 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph4.be, %.outer3.backedge ]
  br label %15

15:                                               ; preds = %.outer3, %15
  switch i32 %.0.ph4, label %15 [
    i32 -776275265, label %16
    i32 -859063215, label %19
    i32 1020776299, label %21
    i32 311583648, label %.outer3.backedge
  ]

16:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %17 = or i1 %.0..0..0., %.0..0..0.1
  %18 = select i1 %17, i32 -859063215, i32 311583648
  br label %.outer3.backedge

19:                                               ; preds = %15
  %20 = tail call double @acos(double %12) #8
  br label %.outer

21:                                               ; preds = %15
  store double %.ph, double* %2, align 8
  %.0..0..0.2 = load volatile double, double* %2, align 8
  ret double %.0..0..0.2

.outer3.backedge:                                 ; preds = %15, %16
  %.0.ph4.be = phi i32 [ %18, %16 ], [ -859063215, %15 ]
  br label %.outer3
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %9
  %11 = bitcast i8* %10 to %"class.std::basic_ios"*
  %12 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %11, %"class.std::basic_ostream"* null)
  %13 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %4)
  %15 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %14, i32* nonnull dereferenceable(4) %5)
  br label %16

16:                                               ; preds = %.backedge, %0
  %.089 = phi i64 [ 0, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i64 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i64 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i64 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i64 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i64 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i64 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i64 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i8 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i64 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.0 = phi i32 [ -342609091, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -342609091, label %17
    i32 -1443308014, label %22
    i32 149654426, label %23
    i32 1516570074, label %33
    i32 69278650, label %46
    i32 402624800, label %48
    i32 433102203, label %50
    i32 958990592, label %60
    i32 -1327167083, label %70
    i32 1469301468, label %71
    i32 1764511618, label %72
    i32 -454901199, label %74
    i32 -612086876, label %75
    i32 569248081, label %80
    i32 -657269114, label %82
    i32 2112247704, label %84
    i32 -1307222070, label %94
    i32 1890759689, label %104
    i32 -1689257462, label %105
    i32 877425670, label %110
    i32 -1599867741, label %120
    i32 813992658, label %152
    i32 -981291502, label %153
    i32 1572937638, label %163
    i32 1021149947, label %174
    i32 -1671769141, label %175
    i32 1722281542, label %176
    i32 -18303548, label %181
    i32 1743013616, label %182
    i32 1881940344, label %192
    i32 2138625241, label %205
    i32 1788252864, label %207
    i32 662812503, label %208
    i32 1039700488, label %213
    i32 -2127297750, label %221
    i32 -1551229517, label %231
    i32 740545711, label %241
    i32 5242392, label %242
    i32 -1970238418, label %252
    i32 1026061546, label %262
    i32 -1064104305, label %263
    i32 1950415726, label %265
    i32 329552950, label %266
    i32 1997426414, label %276
    i32 -149436612, label %286
    i32 -414275905, label %287
    i32 -1388555757, label %297
    i32 1589954086, label %308
    i32 -675313154, label %309
    i32 638016577, label %314
    i32 -659222803, label %324
    i32 -572333197, label %334
    i32 507204463, label %335
    i32 -417438752, label %345
    i32 -1102959539, label %358
    i32 -1082609987, label %360
    i32 -652007655, label %376
    i32 2119209379, label %377
    i32 1232856126, label %378
    i32 -469915518, label %380
    i32 260925354, label %383
    i32 -2053938107, label %385
    i32 1744045130, label %395
    i32 1417982532, label %405
    i32 -152495360, label %406
    i32 -1550957277, label %416
    i32 1647488983, label %427
    i32 -2061021450, label %428
    i32 -756901287, label %431
    i32 285633482, label %432
    i32 -1965740183, label %434
    i32 -569748250, label %435
    i32 1018366517, label %458
    i32 -247244539, label %460
    i32 340081175, label %461
    i32 -698306595, label %463
    i32 -87584927, label %464
    i32 -701835495, label %465
    i32 -716480774, label %467
    i32 -544495766, label %468
    i32 465233094, label %469
    i32 817023207, label %470
  ]

.backedge:                                        ; preds = %16, %470, %469, %468, %467, %465, %464, %463, %461, %460, %458, %435, %434, %432, %431, %427, %416, %406, %405, %395, %385, %383, %380, %378, %377, %376, %360, %358, %345, %335, %334, %324, %314, %309, %308, %297, %287, %286, %276, %266, %265, %263, %262, %252, %242, %241, %231, %221, %213, %208, %207, %205, %192, %182, %181, %176, %175, %174, %163, %153, %152, %120, %110, %105, %104, %94, %84, %82, %80, %75, %74, %72, %71, %70, %60, %50, %48, %46, %33, %23, %22, %17
  %.089.be = phi i64 [ %.089, %16 ], [ %.089, %470 ], [ %.089, %469 ], [ %.089, %468 ], [ %.089, %467 ], [ %.089, %465 ], [ %.089, %464 ], [ %.089, %463 ], [ %.089, %461 ], [ %.089, %460 ], [ %.089, %458 ], [ %.089, %435 ], [ %.089, %434 ], [ %.089, %432 ], [ %.089, %431 ], [ %.089, %427 ], [ %.089, %416 ], [ %.089, %406 ], [ %.089, %405 ], [ %.089, %395 ], [ %.089, %385 ], [ %.089, %383 ], [ %.089, %380 ], [ %.089, %378 ], [ %.089, %377 ], [ %.089, %376 ], [ %.089, %360 ], [ %.089, %358 ], [ %.089, %345 ], [ %.089, %335 ], [ %.089, %334 ], [ %.089, %324 ], [ %.089, %314 ], [ %.089, %309 ], [ %.089, %308 ], [ %.089, %297 ], [ %.089, %287 ], [ %.089, %286 ], [ %.089, %276 ], [ %.089, %266 ], [ %.089, %265 ], [ %.089, %263 ], [ %.089, %262 ], [ %.089, %252 ], [ %.089, %242 ], [ %.089, %241 ], [ %.089, %231 ], [ %.089, %221 ], [ %.089, %213 ], [ %.089, %208 ], [ %.089, %207 ], [ %.089, %205 ], [ %.089, %192 ], [ %.089, %182 ], [ %.089, %181 ], [ %.089, %176 ], [ %.089, %175 ], [ %.089, %174 ], [ %.089, %163 ], [ %.089, %153 ], [ %.089, %152 ], [ %.089, %120 ], [ %.089, %110 ], [ %.089, %105 ], [ %.089, %104 ], [ %.089, %94 ], [ %.089, %84 ], [ %.089, %82 ], [ %.089, %80 ], [ %.089, %75 ], [ %.089, %74 ], [ %73, %72 ], [ %.089, %71 ], [ %.089, %70 ], [ %.089, %60 ], [ %.089, %50 ], [ %.089, %48 ], [ %.089, %46 ], [ %.089, %33 ], [ %.089, %23 ], [ %.089, %22 ], [ %.089, %17 ]
  %.087.be = phi i64 [ %.087, %16 ], [ %.087, %470 ], [ %.087, %469 ], [ %.087, %468 ], [ %.087, %467 ], [ %.087, %465 ], [ %.087, %464 ], [ %.087, %463 ], [ %.087, %461 ], [ %.087, %460 ], [ %.087, %458 ], [ %.087, %435 ], [ %.087, %434 ], [ %433, %432 ], [ %.087, %431 ], [ %.087, %427 ], [ %.087, %416 ], [ %.087, %406 ], [ %.087, %405 ], [ %.087, %395 ], [ %.087, %385 ], [ %.087, %383 ], [ %.087, %380 ], [ %.087, %378 ], [ %.087, %377 ], [ %.087, %376 ], [ %.087, %360 ], [ %.087, %358 ], [ %.087, %345 ], [ %.087, %335 ], [ %.087, %334 ], [ %.087, %324 ], [ %.087, %314 ], [ %.087, %309 ], [ %.087, %308 ], [ %.087, %297 ], [ %.087, %287 ], [ %.087, %286 ], [ %.087, %276 ], [ %.087, %266 ], [ %.087, %265 ], [ %.087, %263 ], [ %.087, %262 ], [ %.087, %252 ], [ %.087, %242 ], [ %.087, %241 ], [ %.087, %231 ], [ %.087, %221 ], [ %.087, %213 ], [ %.087, %208 ], [ %.087, %207 ], [ %.087, %205 ], [ %.087, %192 ], [ %.087, %182 ], [ %.087, %181 ], [ %.087, %176 ], [ %.087, %175 ], [ %.087, %174 ], [ %.087, %163 ], [ %.087, %153 ], [ %.087, %152 ], [ %.087, %120 ], [ %.087, %110 ], [ %.087, %105 ], [ %.087, %104 ], [ %.087, %94 ], [ %.087, %84 ], [ %.087, %82 ], [ %.087, %80 ], [ %.087, %75 ], [ %.087, %74 ], [ %.087, %72 ], [ %.087, %71 ], [ %.087, %70 ], [ %.neg93, %60 ], [ %.087, %50 ], [ %.087, %48 ], [ %.087, %46 ], [ %.087, %33 ], [ %.087, %23 ], [ 0, %22 ], [ %.087, %17 ]
  %.085.be = phi i64 [ %.085, %16 ], [ %.085, %470 ], [ %.085, %469 ], [ %.085, %468 ], [ %.085, %467 ], [ %.085, %465 ], [ %.085, %464 ], [ %.085, %463 ], [ %.085, %461 ], [ %.085, %460 ], [ %.085, %458 ], [ %.085, %435 ], [ %.085, %434 ], [ %.085, %432 ], [ %.085, %431 ], [ %.085, %427 ], [ %.085, %416 ], [ %.085, %406 ], [ %.085, %405 ], [ %.085, %395 ], [ %.085, %385 ], [ %.085, %383 ], [ %.085, %380 ], [ %.085, %378 ], [ %.085, %377 ], [ %.085, %376 ], [ %.085, %360 ], [ %.085, %358 ], [ %.085, %345 ], [ %.085, %335 ], [ %.085, %334 ], [ %.085, %324 ], [ %.085, %314 ], [ %.085, %309 ], [ %.085, %308 ], [ %.085, %297 ], [ %.085, %287 ], [ %.085, %286 ], [ %.085, %276 ], [ %.085, %266 ], [ %.085, %265 ], [ %.085, %263 ], [ %.085, %262 ], [ %.085, %252 ], [ %.085, %242 ], [ %.085, %241 ], [ %.085, %231 ], [ %.085, %221 ], [ %.085, %213 ], [ %.085, %208 ], [ %.085, %207 ], [ %.085, %205 ], [ %.085, %192 ], [ %.085, %182 ], [ %.085, %181 ], [ %.085, %176 ], [ %.085, %175 ], [ %.085, %174 ], [ %.085, %163 ], [ %.085, %153 ], [ %.085, %152 ], [ %.085, %120 ], [ %.085, %110 ], [ %.085, %105 ], [ %.085, %104 ], [ %.085, %94 ], [ %.085, %84 ], [ %83, %82 ], [ %.085, %80 ], [ %.085, %75 ], [ 0, %74 ], [ %.085, %72 ], [ %.085, %71 ], [ %.085, %70 ], [ %.085, %60 ], [ %.085, %50 ], [ %.085, %48 ], [ %.085, %46 ], [ %.085, %33 ], [ %.085, %23 ], [ %.085, %22 ], [ %.085, %17 ]
  %.083.be = phi i64 [ %.083, %16 ], [ %.083, %470 ], [ %.083, %469 ], [ %.083, %468 ], [ %.083, %467 ], [ %.083, %465 ], [ %.083, %464 ], [ %.083, %463 ], [ %.083, %461 ], [ %.083, %460 ], [ %459, %458 ], [ %.083, %435 ], [ 0, %434 ], [ %.083, %432 ], [ %.083, %431 ], [ %.083, %427 ], [ %.083, %416 ], [ %.083, %406 ], [ %.083, %405 ], [ %.083, %395 ], [ %.083, %385 ], [ %.083, %383 ], [ %.083, %380 ], [ %.083, %378 ], [ %.083, %377 ], [ %.083, %376 ], [ %.083, %360 ], [ %.083, %358 ], [ %.083, %345 ], [ %.083, %335 ], [ %.083, %334 ], [ %.083, %324 ], [ %.083, %314 ], [ %.083, %309 ], [ %.083, %308 ], [ %.083, %297 ], [ %.083, %287 ], [ %.083, %286 ], [ %.083, %276 ], [ %.083, %266 ], [ %.083, %265 ], [ %.083, %263 ], [ %.083, %262 ], [ %.083, %252 ], [ %.083, %242 ], [ %.083, %241 ], [ %.083, %231 ], [ %.083, %221 ], [ %.083, %213 ], [ %.083, %208 ], [ %.083, %207 ], [ %.083, %205 ], [ %.083, %192 ], [ %.083, %182 ], [ %.083, %181 ], [ %.083, %176 ], [ %.083, %175 ], [ %.083, %174 ], [ %164, %163 ], [ %.083, %153 ], [ %.083, %152 ], [ %.083, %120 ], [ %.083, %110 ], [ %.083, %105 ], [ %.083, %104 ], [ 0, %94 ], [ %.083, %84 ], [ %.083, %82 ], [ %.083, %80 ], [ %.083, %75 ], [ %.083, %74 ], [ %.083, %72 ], [ %.083, %71 ], [ %.083, %70 ], [ %.083, %60 ], [ %.083, %50 ], [ %.083, %48 ], [ %.083, %46 ], [ %.083, %33 ], [ %.083, %23 ], [ %.083, %22 ], [ %.083, %17 ]
  %.081.be = phi i64 [ %.081, %16 ], [ %.081, %470 ], [ %.081, %469 ], [ %.081, %468 ], [ %.081, %467 ], [ %.081, %465 ], [ %.neg, %464 ], [ %.081, %463 ], [ %.081, %461 ], [ %.081, %460 ], [ %.081, %458 ], [ %.081, %435 ], [ %.081, %434 ], [ %.081, %432 ], [ %.081, %431 ], [ %.081, %427 ], [ %.081, %416 ], [ %.081, %406 ], [ %.081, %405 ], [ %.081, %395 ], [ %.081, %385 ], [ %.081, %383 ], [ %.081, %380 ], [ %.081, %378 ], [ %.081, %377 ], [ %.081, %376 ], [ %.081, %360 ], [ %.081, %358 ], [ %.081, %345 ], [ %.081, %335 ], [ %.081, %334 ], [ %.081, %324 ], [ %.081, %314 ], [ %.081, %309 ], [ %.081, %308 ], [ %.081, %297 ], [ %.081, %287 ], [ %.081, %286 ], [ %.neg91, %276 ], [ %.081, %266 ], [ %.081, %265 ], [ %.081, %263 ], [ %.081, %262 ], [ %.081, %252 ], [ %.081, %242 ], [ %.081, %241 ], [ %.081, %231 ], [ %.081, %221 ], [ %.081, %213 ], [ %.081, %208 ], [ %.081, %207 ], [ %.081, %205 ], [ %.081, %192 ], [ %.081, %182 ], [ %.081, %181 ], [ %.081, %176 ], [ 0, %175 ], [ %.081, %174 ], [ %.081, %163 ], [ %.081, %153 ], [ %.081, %152 ], [ %.081, %120 ], [ %.081, %110 ], [ %.081, %105 ], [ %.081, %104 ], [ %.081, %94 ], [ %.081, %84 ], [ %.081, %82 ], [ %.081, %80 ], [ %.081, %75 ], [ %.081, %74 ], [ %.081, %72 ], [ %.081, %71 ], [ %.081, %70 ], [ %.081, %60 ], [ %.081, %50 ], [ %.081, %48 ], [ %.081, %46 ], [ %.081, %33 ], [ %.081, %23 ], [ %.081, %22 ], [ %.081, %17 ]
  %.079.be = phi i64 [ %.079, %16 ], [ %.079, %470 ], [ %.079, %469 ], [ %.079, %468 ], [ %.079, %467 ], [ %.079, %465 ], [ %.079, %464 ], [ %.079, %463 ], [ %.079, %461 ], [ %.079, %460 ], [ %.079, %458 ], [ %.079, %435 ], [ %.079, %434 ], [ %.079, %432 ], [ %.079, %431 ], [ %.079, %427 ], [ %.079, %416 ], [ %.079, %406 ], [ %.079, %405 ], [ %.079, %395 ], [ %.079, %385 ], [ %.079, %383 ], [ %.079, %380 ], [ %.079, %378 ], [ %.079, %377 ], [ %.079, %376 ], [ %.079, %360 ], [ %.079, %358 ], [ %.079, %345 ], [ %.079, %335 ], [ %.079, %334 ], [ %.079, %324 ], [ %.079, %314 ], [ %.079, %309 ], [ %.079, %308 ], [ %.079, %297 ], [ %.079, %287 ], [ %.079, %286 ], [ %.079, %276 ], [ %.079, %266 ], [ %.079, %265 ], [ %264, %263 ], [ %.079, %262 ], [ %.079, %252 ], [ %.079, %242 ], [ %.079, %241 ], [ %.079, %231 ], [ %.079, %221 ], [ %.079, %213 ], [ %.079, %208 ], [ %.079, %207 ], [ %.079, %205 ], [ %.079, %192 ], [ %.079, %182 ], [ 0, %181 ], [ %.079, %176 ], [ %.079, %175 ], [ %.079, %174 ], [ %.079, %163 ], [ %.079, %153 ], [ %.079, %152 ], [ %.079, %120 ], [ %.079, %110 ], [ %.079, %105 ], [ %.079, %104 ], [ %.079, %94 ], [ %.079, %84 ], [ %.079, %82 ], [ %.079, %80 ], [ %.079, %75 ], [ %.079, %74 ], [ %.079, %72 ], [ %.079, %71 ], [ %.079, %70 ], [ %.079, %60 ], [ %.079, %50 ], [ %.079, %48 ], [ %.079, %46 ], [ %.079, %33 ], [ %.079, %23 ], [ %.079, %22 ], [ %.079, %17 ]
  %.077.be = phi i64 [ %.077, %16 ], [ %.077, %470 ], [ %.077, %469 ], [ %.077, %468 ], [ %.077, %467 ], [ %.077, %465 ], [ %.077, %464 ], [ %.077, %463 ], [ %462, %461 ], [ %.077, %460 ], [ %.077, %458 ], [ %.077, %435 ], [ %.077, %434 ], [ %.077, %432 ], [ %.077, %431 ], [ %.077, %427 ], [ %.077, %416 ], [ %.077, %406 ], [ %.077, %405 ], [ %.077, %395 ], [ %.077, %385 ], [ %.077, %383 ], [ %.077, %380 ], [ %.077, %378 ], [ %.077, %377 ], [ %.077, %376 ], [ %.077, %360 ], [ %.077, %358 ], [ %.077, %345 ], [ %.077, %335 ], [ %.077, %334 ], [ %.077, %324 ], [ %.077, %314 ], [ %.077, %309 ], [ %.077, %308 ], [ %.077, %297 ], [ %.077, %287 ], [ %.077, %286 ], [ %.077, %276 ], [ %.077, %266 ], [ %.077, %265 ], [ %.077, %263 ], [ %.077, %262 ], [ %.077, %252 ], [ %.077, %242 ], [ %.077, %241 ], [ %.neg92, %231 ], [ %.077, %221 ], [ %.077, %213 ], [ %.077, %208 ], [ 0, %207 ], [ %.077, %205 ], [ %.077, %192 ], [ %.077, %182 ], [ %.077, %181 ], [ %.077, %176 ], [ %.077, %175 ], [ %.077, %174 ], [ %.077, %163 ], [ %.077, %153 ], [ %.077, %152 ], [ %.077, %120 ], [ %.077, %110 ], [ %.077, %105 ], [ %.077, %104 ], [ %.077, %94 ], [ %.077, %84 ], [ %.077, %82 ], [ %.077, %80 ], [ %.077, %75 ], [ %.077, %74 ], [ %.077, %72 ], [ %.077, %71 ], [ %.077, %70 ], [ %.077, %60 ], [ %.077, %50 ], [ %.077, %48 ], [ %.077, %46 ], [ %.077, %33 ], [ %.077, %23 ], [ %.077, %22 ], [ %.077, %17 ]
  %.075.be = phi i32 [ %.075, %16 ], [ %.075, %470 ], [ %.075, %469 ], [ %.075, %468 ], [ %.075, %467 ], [ %466, %465 ], [ %.075, %464 ], [ %.075, %463 ], [ %.075, %461 ], [ %.075, %460 ], [ %.075, %458 ], [ %.075, %435 ], [ %.075, %434 ], [ %.075, %432 ], [ %.075, %431 ], [ %.075, %427 ], [ %.075, %416 ], [ %.075, %406 ], [ %.075, %405 ], [ %.075, %395 ], [ %.075, %385 ], [ %384, %383 ], [ %.075, %380 ], [ %.075, %378 ], [ %.075, %377 ], [ %.075, %376 ], [ %.075, %360 ], [ %.075, %358 ], [ %.075, %345 ], [ %.075, %335 ], [ %.075, %334 ], [ %.075, %324 ], [ %.075, %314 ], [ %.075, %309 ], [ %.075, %308 ], [ %298, %297 ], [ %.075, %287 ], [ %.075, %286 ], [ %.075, %276 ], [ %.075, %266 ], [ %.075, %265 ], [ %.075, %263 ], [ %.075, %262 ], [ %.075, %252 ], [ %.075, %242 ], [ %.075, %241 ], [ %.075, %231 ], [ %.075, %221 ], [ %.075, %213 ], [ %.075, %208 ], [ %.075, %207 ], [ %.075, %205 ], [ %.075, %192 ], [ %.075, %182 ], [ %.075, %181 ], [ %.075, %176 ], [ %.075, %175 ], [ %.075, %174 ], [ %.075, %163 ], [ %.075, %153 ], [ %.075, %152 ], [ %.075, %120 ], [ %.075, %110 ], [ %.075, %105 ], [ %.075, %104 ], [ %.075, %94 ], [ %.075, %84 ], [ %.075, %82 ], [ %.075, %80 ], [ %.075, %75 ], [ %.075, %74 ], [ %.075, %72 ], [ %.075, %71 ], [ %.075, %70 ], [ %.075, %60 ], [ %.075, %50 ], [ %.075, %48 ], [ %.075, %46 ], [ %.075, %33 ], [ %.075, %23 ], [ %.075, %22 ], [ %.075, %17 ]
  %.073.be = phi i64 [ %.073, %16 ], [ %471, %470 ], [ %.073, %469 ], [ %.073, %468 ], [ %.073, %467 ], [ 0, %465 ], [ %.073, %464 ], [ %.073, %463 ], [ %.073, %461 ], [ %.073, %460 ], [ %.073, %458 ], [ %.073, %435 ], [ %.073, %434 ], [ %.073, %432 ], [ %.073, %431 ], [ %.073, %427 ], [ %417, %416 ], [ %.073, %406 ], [ %.073, %405 ], [ %.073, %395 ], [ %.073, %385 ], [ %.073, %383 ], [ %.073, %380 ], [ %.073, %378 ], [ %.073, %377 ], [ %.073, %376 ], [ %.073, %360 ], [ %.073, %358 ], [ %.073, %345 ], [ %.073, %335 ], [ %.073, %334 ], [ %.073, %324 ], [ %.073, %314 ], [ %.073, %309 ], [ %.073, %308 ], [ 0, %297 ], [ %.073, %287 ], [ %.073, %286 ], [ %.073, %276 ], [ %.073, %266 ], [ %.073, %265 ], [ %.073, %263 ], [ %.073, %262 ], [ %.073, %252 ], [ %.073, %242 ], [ %.073, %241 ], [ %.073, %231 ], [ %.073, %221 ], [ %.073, %213 ], [ %.073, %208 ], [ %.073, %207 ], [ %.073, %205 ], [ %.073, %192 ], [ %.073, %182 ], [ %.073, %181 ], [ %.073, %176 ], [ %.073, %175 ], [ %.073, %174 ], [ %.073, %163 ], [ %.073, %153 ], [ %.073, %152 ], [ %.073, %120 ], [ %.073, %110 ], [ %.073, %105 ], [ %.073, %104 ], [ %.073, %94 ], [ %.073, %84 ], [ %.073, %82 ], [ %.073, %80 ], [ %.073, %75 ], [ %.073, %74 ], [ %.073, %72 ], [ %.073, %71 ], [ %.073, %70 ], [ %.073, %60 ], [ %.073, %50 ], [ %.073, %48 ], [ %.073, %46 ], [ %.073, %33 ], [ %.073, %23 ], [ %.073, %22 ], [ %.073, %17 ]
  %.071.be = phi i8 [ %.071, %16 ], [ %.071, %470 ], [ %.071, %469 ], [ %.071, %468 ], [ 0, %467 ], [ %.071, %465 ], [ %.071, %464 ], [ %.071, %463 ], [ %.071, %461 ], [ %.071, %460 ], [ %.071, %458 ], [ %.071, %435 ], [ %.071, %434 ], [ %.071, %432 ], [ %.071, %431 ], [ %.071, %427 ], [ %.071, %416 ], [ %.071, %406 ], [ %.071, %405 ], [ %.071, %395 ], [ %.071, %385 ], [ %.071, %383 ], [ %.071, %380 ], [ %.071, %378 ], [ %.071, %377 ], [ 1, %376 ], [ %.071, %360 ], [ %.071, %358 ], [ %.071, %345 ], [ %.071, %335 ], [ %.071, %334 ], [ 0, %324 ], [ %.071, %314 ], [ %.071, %309 ], [ %.071, %308 ], [ %.071, %297 ], [ %.071, %287 ], [ %.071, %286 ], [ %.071, %276 ], [ %.071, %266 ], [ %.071, %265 ], [ %.071, %263 ], [ %.071, %262 ], [ %.071, %252 ], [ %.071, %242 ], [ %.071, %241 ], [ %.071, %231 ], [ %.071, %221 ], [ %.071, %213 ], [ %.071, %208 ], [ %.071, %207 ], [ %.071, %205 ], [ %.071, %192 ], [ %.071, %182 ], [ %.071, %181 ], [ %.071, %176 ], [ %.071, %175 ], [ %.071, %174 ], [ %.071, %163 ], [ %.071, %153 ], [ %.071, %152 ], [ %.071, %120 ], [ %.071, %110 ], [ %.071, %105 ], [ %.071, %104 ], [ %.071, %94 ], [ %.071, %84 ], [ %.071, %82 ], [ %.071, %80 ], [ %.071, %75 ], [ %.071, %74 ], [ %.071, %72 ], [ %.071, %71 ], [ %.071, %70 ], [ %.071, %60 ], [ %.071, %50 ], [ %.071, %48 ], [ %.071, %46 ], [ %.071, %33 ], [ %.071, %23 ], [ %.071, %22 ], [ %.071, %17 ]
  %.069.be = phi i64 [ %.069, %16 ], [ %.069, %470 ], [ %.069, %469 ], [ %.069, %468 ], [ 0, %467 ], [ %.069, %465 ], [ %.069, %464 ], [ %.069, %463 ], [ %.069, %461 ], [ %.069, %460 ], [ %.069, %458 ], [ %.069, %435 ], [ %.069, %434 ], [ %.069, %432 ], [ %.069, %431 ], [ %.069, %427 ], [ %.069, %416 ], [ %.069, %406 ], [ %.069, %405 ], [ %.069, %395 ], [ %.069, %385 ], [ %.069, %383 ], [ %.069, %380 ], [ %379, %378 ], [ %.069, %377 ], [ %.069, %376 ], [ %.069, %360 ], [ %.069, %358 ], [ %.069, %345 ], [ %.069, %335 ], [ %.069, %334 ], [ 0, %324 ], [ %.069, %314 ], [ %.069, %309 ], [ %.069, %308 ], [ %.069, %297 ], [ %.069, %287 ], [ %.069, %286 ], [ %.069, %276 ], [ %.069, %266 ], [ %.069, %265 ], [ %.069, %263 ], [ %.069, %262 ], [ %.069, %252 ], [ %.069, %242 ], [ %.069, %241 ], [ %.069, %231 ], [ %.069, %221 ], [ %.069, %213 ], [ %.069, %208 ], [ %.069, %207 ], [ %.069, %205 ], [ %.069, %192 ], [ %.069, %182 ], [ %.069, %181 ], [ %.069, %176 ], [ %.069, %175 ], [ %.069, %174 ], [ %.069, %163 ], [ %.069, %153 ], [ %.069, %152 ], [ %.069, %120 ], [ %.069, %110 ], [ %.069, %105 ], [ %.069, %104 ], [ %.069, %94 ], [ %.069, %84 ], [ %.069, %82 ], [ %.069, %80 ], [ %.069, %75 ], [ %.069, %74 ], [ %.069, %72 ], [ %.069, %71 ], [ %.069, %70 ], [ %.069, %60 ], [ %.069, %50 ], [ %.069, %48 ], [ %.069, %46 ], [ %.069, %33 ], [ %.069, %23 ], [ %.069, %22 ], [ %.069, %17 ]
  %.0.be = phi i32 [ %.0, %16 ], [ -1550957277, %470 ], [ 1744045130, %469 ], [ -417438752, %468 ], [ -659222803, %467 ], [ -1388555757, %465 ], [ 1997426414, %464 ], [ -1970238418, %463 ], [ -1551229517, %461 ], [ 1881940344, %460 ], [ 1572937638, %458 ], [ -1599867741, %435 ], [ -1307222070, %434 ], [ 958990592, %432 ], [ 1516570074, %431 ], [ -675313154, %427 ], [ %426, %416 ], [ %415, %406 ], [ -152495360, %405 ], [ %404, %395 ], [ %394, %385 ], [ -2053938107, %383 ], [ %382, %380 ], [ 507204463, %378 ], [ 1232856126, %377 ], [ 2119209379, %376 ], [ %375, %360 ], [ %359, %358 ], [ %357, %345 ], [ %344, %335 ], [ 507204463, %334 ], [ %333, %324 ], [ %323, %314 ], [ %313, %309 ], [ -675313154, %308 ], [ %307, %297 ], [ %296, %287 ], [ 1722281542, %286 ], [ %285, %276 ], [ %275, %266 ], [ 329552950, %265 ], [ 1743013616, %263 ], [ -1064104305, %262 ], [ %261, %252 ], [ %251, %242 ], [ 662812503, %241 ], [ %240, %231 ], [ %230, %221 ], [ -2127297750, %213 ], [ %212, %208 ], [ 662812503, %207 ], [ %206, %205 ], [ %204, %192 ], [ %191, %182 ], [ 1743013616, %181 ], [ %180, %176 ], [ 1722281542, %175 ], [ -1689257462, %174 ], [ %173, %163 ], [ %162, %153 ], [ -981291502, %152 ], [ %151, %120 ], [ %119, %110 ], [ %109, %105 ], [ -1689257462, %104 ], [ %103, %94 ], [ %93, %84 ], [ -612086876, %82 ], [ -657269114, %80 ], [ %79, %75 ], [ -612086876, %74 ], [ -342609091, %72 ], [ 1764511618, %71 ], [ 149654426, %70 ], [ %69, %60 ], [ %59, %50 ], [ 433102203, %48 ], [ %47, %46 ], [ %45, %33 ], [ %32, %23 ], [ 149654426, %22 ], [ %21, %17 ]
  br label %16

17:                                               ; preds = %16
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = icmp slt i64 %.089, %19
  %21 = select i1 %20, i32 -1443308014, i32 -454901199
  br label %.backedge

22:                                               ; preds = %16
  br label %.backedge

23:                                               ; preds = %16
  %24 = load i32, i32* @x.6, align 4
  %25 = load i32, i32* @y.7, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 1516570074, i32 -756901287
  br label %.backedge

33:                                               ; preds = %16
  %34 = load i32, i32* %4, align 4
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %.087, %35
  store i1 %36, i1* %3, align 1
  %37 = load i32, i32* @x.6, align 4
  %38 = load i32, i32* @y.7, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 69278650, i32 -756901287
  br label %.backedge

46:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %47 = select i1 %.0..0..0., i32 402624800, i32 1469301468
  br label %.backedge

48:                                               ; preds = %16
  %49 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %.089, i64 %.087
  store i32 1000000007, i32* %49, align 4
  br label %.backedge

50:                                               ; preds = %16
  %51 = load i32, i32* @x.6, align 4
  %52 = load i32, i32* @y.7, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 958990592, i32 285633482
  br label %.backedge

60:                                               ; preds = %16
  %.neg93 = add i64 %.087, 1
  %61 = load i32, i32* @x.6, align 4
  %62 = load i32, i32* @y.7, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 -1327167083, i32 285633482
  br label %.backedge

70:                                               ; preds = %16
  br label %.backedge

71:                                               ; preds = %16
  br label %.backedge

72:                                               ; preds = %16
  %73 = add i64 %.089, 1
  br label %.backedge

74:                                               ; preds = %16
  br label %.backedge

75:                                               ; preds = %16
  %76 = load i32, i32* %4, align 4
  %77 = sext i32 %76 to i64
  %78 = icmp slt i64 %.085, %77
  %79 = select i1 %78, i32 569248081, i32 2112247704
  br label %.backedge

80:                                               ; preds = %16
  %81 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %.085, i64 %.085
  store i32 0, i32* %81, align 4
  br label %.backedge

82:                                               ; preds = %16
  %83 = add i64 %.085, 1
  br label %.backedge

84:                                               ; preds = %16
  %85 = load i32, i32* @x.6, align 4
  %86 = load i32, i32* @y.7, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 -1307222070, i32 -1965740183
  br label %.backedge

94:                                               ; preds = %16
  %95 = load i32, i32* @x.6, align 4
  %96 = load i32, i32* @y.7, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 1890759689, i32 -1965740183
  br label %.backedge

104:                                              ; preds = %16
  br label %.backedge

105:                                              ; preds = %16
  %106 = load i32, i32* %5, align 4
  %107 = sext i32 %106 to i64
  %108 = icmp slt i64 %.083, %107
  %109 = select i1 %108, i32 877425670, i32 -1671769141
  br label %.backedge

110:                                              ; preds = %16
  %111 = load i32, i32* @x.6, align 4
  %112 = load i32, i32* @y.7, align 4
  %113 = add i32 %111, -1
  %114 = mul i32 %113, %111
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %117, %116
  %119 = select i1 %118, i32 -1599867741, i32 -569748250
  br label %.backedge

120:                                              ; preds = %16
  %121 = getelementptr inbounds [1000 x i32], [1000 x i32]* @a, i64 0, i64 %.083
  %122 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %121)
  %123 = getelementptr inbounds [1000 x i32], [1000 x i32]* @b, i64 0, i64 %.083
  %124 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %122, i32* nonnull dereferenceable(4) %123)
  %125 = getelementptr inbounds [1000 x i32], [1000 x i32]* @c, i64 0, i64 %.083
  %126 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %124, i32* nonnull dereferenceable(4) %125)
  %127 = load i32, i32* %121, align 4
  %128 = add i32 %127, -1
  store i32 %128, i32* %121, align 4
  %129 = load i32, i32* %123, align 4
  %130 = add i32 %129, -1
  store i32 %130, i32* %123, align 4
  %131 = sext i32 %128 to i64
  %132 = sext i32 %130 to i64
  %133 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %131, i64 %132
  %134 = load i32, i32* %125, align 4
  %135 = call zeroext i1 @_Z5chminIiEbRT_S0_(i32* nonnull dereferenceable(4) %133, i32 %134)
  %136 = load i32, i32* %123, align 4
  %137 = sext i32 %136 to i64
  %138 = load i32, i32* %121, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %137, i64 %139
  %141 = load i32, i32* %125, align 4
  %142 = call zeroext i1 @_Z5chminIiEbRT_S0_(i32* nonnull dereferenceable(4) %140, i32 %141)
  %143 = load i32, i32* @x.6, align 4
  %144 = load i32, i32* @y.7, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 813992658, i32 -569748250
  br label %.backedge

152:                                              ; preds = %16
  br label %.backedge

153:                                              ; preds = %16
  %154 = load i32, i32* @x.6, align 4
  %155 = load i32, i32* @y.7, align 4
  %156 = add i32 %154, -1
  %157 = mul i32 %156, %154
  %158 = and i32 %157, 1
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %160, %159
  %162 = select i1 %161, i32 1572937638, i32 1018366517
  br label %.backedge

163:                                              ; preds = %16
  %164 = add i64 %.083, 1
  %165 = load i32, i32* @x.6, align 4
  %166 = load i32, i32* @y.7, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 1021149947, i32 1018366517
  br label %.backedge

174:                                              ; preds = %16
  br label %.backedge

175:                                              ; preds = %16
  br label %.backedge

176:                                              ; preds = %16
  %177 = load i32, i32* %4, align 4
  %178 = sext i32 %177 to i64
  %179 = icmp slt i64 %.081, %178
  %180 = select i1 %179, i32 -18303548, i32 -414275905
  br label %.backedge

181:                                              ; preds = %16
  br label %.backedge

182:                                              ; preds = %16
  %183 = load i32, i32* @x.6, align 4
  %184 = load i32, i32* @y.7, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 1881940344, i32 -247244539
  br label %.backedge

192:                                              ; preds = %16
  %193 = load i32, i32* %4, align 4
  %194 = sext i32 %193 to i64
  %195 = icmp slt i64 %.079, %194
  store i1 %195, i1* %2, align 1
  %196 = load i32, i32* @x.6, align 4
  %197 = load i32, i32* @y.7, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 2138625241, i32 -247244539
  br label %.backedge

205:                                              ; preds = %16
  %.0..0..0.67 = load volatile i1, i1* %2, align 1
  %206 = select i1 %.0..0..0.67, i32 1788252864, i32 1950415726
  br label %.backedge

207:                                              ; preds = %16
  br label %.backedge

208:                                              ; preds = %16
  %209 = load i32, i32* %4, align 4
  %210 = sext i32 %209 to i64
  %211 = icmp slt i64 %.077, %210
  %212 = select i1 %211, i32 1039700488, i32 5242392
  br label %.backedge

213:                                              ; preds = %16
  %214 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %.079, i64 %.077
  %215 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %.079, i64 %.081
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %.081, i64 %.077
  %218 = load i32, i32* %217, align 4
  %219 = add i32 %218, %216
  %220 = call zeroext i1 @_Z5chminIiEbRT_S0_(i32* nonnull dereferenceable(4) %214, i32 %219)
  br label %.backedge

221:                                              ; preds = %16
  %222 = load i32, i32* @x.6, align 4
  %223 = load i32, i32* @y.7, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 -1551229517, i32 340081175
  br label %.backedge

231:                                              ; preds = %16
  %.neg92 = add i64 %.077, 1
  %232 = load i32, i32* @x.6, align 4
  %233 = load i32, i32* @y.7, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 740545711, i32 340081175
  br label %.backedge

241:                                              ; preds = %16
  br label %.backedge

242:                                              ; preds = %16
  %243 = load i32, i32* @x.6, align 4
  %244 = load i32, i32* @y.7, align 4
  %245 = add i32 %243, -1
  %246 = mul i32 %245, %243
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %249, %248
  %251 = select i1 %250, i32 -1970238418, i32 -698306595
  br label %.backedge

252:                                              ; preds = %16
  %253 = load i32, i32* @x.6, align 4
  %254 = load i32, i32* @y.7, align 4
  %255 = add i32 %253, -1
  %256 = mul i32 %255, %253
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %259, %258
  %261 = select i1 %260, i32 1026061546, i32 -698306595
  br label %.backedge

262:                                              ; preds = %16
  br label %.backedge

263:                                              ; preds = %16
  %264 = add i64 %.079, 1
  br label %.backedge

265:                                              ; preds = %16
  br label %.backedge

266:                                              ; preds = %16
  %267 = load i32, i32* @x.6, align 4
  %268 = load i32, i32* @y.7, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 1997426414, i32 -87584927
  br label %.backedge

276:                                              ; preds = %16
  %.neg91 = add i64 %.081, 1
  %277 = load i32, i32* @x.6, align 4
  %278 = load i32, i32* @y.7, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 -149436612, i32 -87584927
  br label %.backedge

286:                                              ; preds = %16
  br label %.backedge

287:                                              ; preds = %16
  %288 = load i32, i32* @x.6, align 4
  %289 = load i32, i32* @y.7, align 4
  %290 = add i32 %288, -1
  %291 = mul i32 %290, %288
  %292 = and i32 %291, 1
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %294, %293
  %296 = select i1 %295, i32 -1388555757, i32 -701835495
  br label %.backedge

297:                                              ; preds = %16
  %298 = load i32, i32* %5, align 4
  %299 = load i32, i32* @x.6, align 4
  %300 = load i32, i32* @y.7, align 4
  %301 = add i32 %299, -1
  %302 = mul i32 %301, %299
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %305, %304
  %307 = select i1 %306, i32 1589954086, i32 -701835495
  br label %.backedge

308:                                              ; preds = %16
  br label %.backedge

309:                                              ; preds = %16
  %310 = load i32, i32* %5, align 4
  %311 = sext i32 %310 to i64
  %312 = icmp slt i64 %.073, %311
  %313 = select i1 %312, i32 638016577, i32 -2061021450
  br label %.backedge

314:                                              ; preds = %16
  %315 = load i32, i32* @x.6, align 4
  %316 = load i32, i32* @y.7, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 -659222803, i32 -716480774
  br label %.backedge

324:                                              ; preds = %16
  %325 = load i32, i32* @x.6, align 4
  %326 = load i32, i32* @y.7, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 -572333197, i32 -716480774
  br label %.backedge

334:                                              ; preds = %16
  br label %.backedge

335:                                              ; preds = %16
  %336 = load i32, i32* @x.6, align 4
  %337 = load i32, i32* @y.7, align 4
  %338 = add i32 %336, -1
  %339 = mul i32 %338, %336
  %340 = and i32 %339, 1
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %342, %341
  %344 = select i1 %343, i32 -417438752, i32 -544495766
  br label %.backedge

345:                                              ; preds = %16
  %346 = load i32, i32* %4, align 4
  %347 = sext i32 %346 to i64
  %348 = icmp slt i64 %.069, %347
  store i1 %348, i1* %1, align 1
  %349 = load i32, i32* @x.6, align 4
  %350 = load i32, i32* @y.7, align 4
  %351 = add i32 %349, -1
  %352 = mul i32 %351, %349
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %355, %354
  %357 = select i1 %356, i32 -1102959539, i32 -544495766
  br label %.backedge

358:                                              ; preds = %16
  %.0..0..0.68 = load volatile i1, i1* %1, align 1
  %359 = select i1 %.0..0..0.68, i32 -1082609987, i32 -469915518
  br label %.backedge

360:                                              ; preds = %16
  %361 = getelementptr inbounds [1000 x i32], [1000 x i32]* @a, i64 0, i64 %.073
  %362 = load i32, i32* %361, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %.069, i64 %363
  %365 = load i32, i32* %364, align 4
  %366 = getelementptr inbounds [1000 x i32], [1000 x i32]* @c, i64 0, i64 %.073
  %367 = load i32, i32* %366, align 4
  %368 = add i32 %367, %365
  %369 = getelementptr inbounds [1000 x i32], [1000 x i32]* @b, i64 0, i64 %.073
  %370 = load i32, i32* %369, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %.069, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %368, %373
  %375 = select i1 %374, i32 -652007655, i32 2119209379
  br label %.backedge

376:                                              ; preds = %16
  br label %.backedge

377:                                              ; preds = %16
  br label %.backedge

378:                                              ; preds = %16
  %379 = add i64 %.069, 1
  br label %.backedge

380:                                              ; preds = %16
  %381 = and i8 %.071, 1
  %.not = icmp eq i8 %381, 0
  %382 = select i1 %.not, i32 -2053938107, i32 260925354
  br label %.backedge

383:                                              ; preds = %16
  %384 = add i32 %.075, -1
  br label %.backedge

385:                                              ; preds = %16
  %386 = load i32, i32* @x.6, align 4
  %387 = load i32, i32* @y.7, align 4
  %388 = add i32 %386, -1
  %389 = mul i32 %388, %386
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %392, %391
  %394 = select i1 %393, i32 1744045130, i32 465233094
  br label %.backedge

395:                                              ; preds = %16
  %396 = load i32, i32* @x.6, align 4
  %397 = load i32, i32* @y.7, align 4
  %398 = add i32 %396, -1
  %399 = mul i32 %398, %396
  %400 = and i32 %399, 1
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %402, %401
  %404 = select i1 %403, i32 1417982532, i32 465233094
  br label %.backedge

405:                                              ; preds = %16
  br label %.backedge

406:                                              ; preds = %16
  %407 = load i32, i32* @x.6, align 4
  %408 = load i32, i32* @y.7, align 4
  %409 = add i32 %407, -1
  %410 = mul i32 %409, %407
  %411 = and i32 %410, 1
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %413, %412
  %415 = select i1 %414, i32 -1550957277, i32 817023207
  br label %.backedge

416:                                              ; preds = %16
  %417 = add i64 %.073, 1
  %418 = load i32, i32* @x.6, align 4
  %419 = load i32, i32* @y.7, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 1647488983, i32 817023207
  br label %.backedge

427:                                              ; preds = %16
  br label %.backedge

428:                                              ; preds = %16
  %429 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.075)
  %430 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %429, i8 signext 10)
  ret i32 0

431:                                              ; preds = %16
  br label %.backedge

432:                                              ; preds = %16
  %433 = add i64 %.087, 1
  br label %.backedge

434:                                              ; preds = %16
  br label %.backedge

435:                                              ; preds = %16
  %436 = getelementptr inbounds [1000 x i32], [1000 x i32]* @a, i64 0, i64 %.083
  %437 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %436)
  %438 = getelementptr inbounds [1000 x i32], [1000 x i32]* @b, i64 0, i64 %.083
  %439 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %437, i32* nonnull dereferenceable(4) %438)
  %440 = getelementptr inbounds [1000 x i32], [1000 x i32]* @c, i64 0, i64 %.083
  %441 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %439, i32* nonnull dereferenceable(4) %440)
  %442 = load i32, i32* %436, align 4
  %443 = add i32 %442, -1
  store i32 %443, i32* %436, align 4
  %444 = load i32, i32* %438, align 4
  %445 = add i32 %444, -1
  store i32 %445, i32* %438, align 4
  %446 = sext i32 %443 to i64
  %447 = sext i32 %445 to i64
  %448 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %446, i64 %447
  %449 = load i32, i32* %440, align 4
  %450 = call zeroext i1 @_Z5chminIiEbRT_S0_(i32* nonnull dereferenceable(4) %448, i32 %449)
  %451 = load i32, i32* %438, align 4
  %452 = sext i32 %451 to i64
  %453 = load i32, i32* %436, align 4
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds [110 x [110 x i32]], [110 x [110 x i32]]* @dist, i64 0, i64 %452, i64 %454
  %456 = load i32, i32* %440, align 4
  %457 = call zeroext i1 @_Z5chminIiEbRT_S0_(i32* nonnull dereferenceable(4) %455, i32 %456)
  br label %.backedge

458:                                              ; preds = %16
  %459 = add i64 %.083, 1
  br label %.backedge

460:                                              ; preds = %16
  br label %.backedge

461:                                              ; preds = %16
  %462 = add i64 %.077, 1
  br label %.backedge

463:                                              ; preds = %16
  br label %.backedge

464:                                              ; preds = %16
  %.neg = add i64 %.081, 1
  br label %.backedge

465:                                              ; preds = %16
  %466 = load i32, i32* %5, align 4
  br label %.backedge

467:                                              ; preds = %16
  br label %.backedge

468:                                              ; preds = %16
  br label %.backedge

469:                                              ; preds = %16
  br label %.backedge

470:                                              ; preds = %16
  %471 = add i64 %.073, 1
  br label %.backedge
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_Z5chminIiEbRT_S0_(i32* dereferenceable(4) %0, i32 %1) local_unnamed_addr #4 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i32*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i1*, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.8, align 4
  %10 = load i32, i32* @y.9, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ -174334615, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %16

16:                                               ; preds = %.outer, %16
  switch i32 %.0.ph, label %16 [
    i32 -174334615, label %17
    i32 170039335, label %20
    i32 981329721, label %37
    i32 815001347, label %39
    i32 -689358660, label %42
    i32 1810212537, label %43
    i32 -21656347, label %.outer.backedge
  ]

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 170039335, i32 -21656347
  br label %.outer.backedge

20:                                               ; preds = %16
  %21 = alloca i1, align 1
  store i1* %21, i1** %6, align 8
  %22 = alloca i32*, align 8
  store i32** %22, i32*** %5, align 8
  %23 = alloca i32, align 4
  store i32* %23, i32** %4, align 8
  %.0..0..0.5 = load volatile i32**, i32*** %5, align 8
  store i32* %0, i32** %.0..0..0.5, align 8
  %.0..0..0.8 = load volatile i32*, i32** %4, align 8
  store i32 %1, i32* %.0..0..0.8, align 4
  %.0..0..0.6 = load volatile i32**, i32*** %5, align 8
  %24 = load i32*, i32** %.0..0..0.6, align 8
  %25 = load i32, i32* %24, align 4
  %.0..0..0.9 = load volatile i32*, i32** %4, align 8
  %26 = load i32, i32* %.0..0..0.9, align 4
  %27 = icmp sgt i32 %25, %26
  store i1 %27, i1* %3, align 1
  %28 = load i32, i32* @x.8, align 4
  %29 = load i32, i32* @y.9, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 981329721, i32 -21656347
  br label %.outer.backedge

37:                                               ; preds = %16
  %.0..0..0.11 = load volatile i1, i1* %3, align 1
  %38 = select i1 %.0..0..0.11, i32 815001347, i32 -689358660
  br label %.outer.backedge

39:                                               ; preds = %16
  %.0..0..0.10 = load volatile i32*, i32** %4, align 8
  %40 = load i32, i32* %.0..0..0.10, align 4
  %.0..0..0.7 = load volatile i32**, i32*** %5, align 8
  %41 = load i32*, i32** %.0..0..0.7, align 8
  store i32 %40, i32* %41, align 4
  %.0..0..0.2 = load volatile i1*, i1** %6, align 8
  store i1 true, i1* %.0..0..0.2, align 1
  br label %.outer.backedge

42:                                               ; preds = %16
  %.0..0..0.3 = load volatile i1*, i1** %6, align 8
  store i1 false, i1* %.0..0..0.3, align 1
  br label %.outer.backedge

43:                                               ; preds = %16
  %.0..0..0.4 = load volatile i1*, i1** %6, align 8
  %44 = load i1, i1* %.0..0..0.4, align 1
  ret i1 %44

.outer.backedge:                                  ; preds = %16, %42, %39, %37, %20, %17
  %.0.ph.be = phi i32 [ %19, %17 ], [ %36, %20 ], [ %38, %37 ], [ 1810212537, %39 ], [ 1810212537, %42 ], [ 170039335, %16 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare double @acos(double) local_unnamed_addr #6

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s264781882.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  tail call fastcc void @__cxx_global_var_init.1()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { mustprogress nofree nosync nounwind readnone willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
