; ModuleID = 'build_ollvm/programs/p03837/s393531645.ll'
source_filename = "Project_CodeNet_C++1400/p03837/s393531645.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s393531645.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1385899850, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1385899850, label %11
    i32 -1089646853, label %14
    i32 -181374938, label %25
    i32 -1281545018, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1089646853, i32 -1281545018
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -181374938, i32 -1281545018
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1089646853, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline uwtable
define void @_Z5solvev() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %12, i32* nonnull dereferenceable(4) %10)
  %14 = load i32, i32* %10, align 4
  %15 = zext i32 %14 to i64
  %16 = call i8* @llvm.stacksave()
  %17 = alloca i32, i64 %15, align 16
  %18 = load i32, i32* %10, align 4
  %19 = zext i32 %18 to i64
  %20 = alloca i32, i64 %19, align 16
  %21 = alloca i32, i64 %19, align 16
  br label %22

22:                                               ; preds = %.backedge, %0
  %.0178 = phi i32 [ 0, %0 ], [ %.0178.be, %.backedge ]
  %.0176 = phi i32 [ undef, %0 ], [ %.0176.be, %.backedge ]
  %.0174 = phi i32 [ undef, %0 ], [ %.0174.be, %.backedge ]
  %.0172 = phi i32 [ undef, %0 ], [ %.0172.be, %.backedge ]
  %.0170 = phi i32 [ undef, %0 ], [ %.0170.be, %.backedge ]
  %.0168 = phi i32 [ undef, %0 ], [ %.0168.be, %.backedge ]
  %.0166 = phi i32 [ undef, %0 ], [ %.0166.be, %.backedge ]
  %.0164 = phi i32 [ undef, %0 ], [ %.0164.be, %.backedge ]
  %.0162 = phi i32 [ undef, %0 ], [ %.0162.be, %.backedge ]
  %.0160 = phi i8 [ undef, %0 ], [ %.0160.be, %.backedge ]
  %.0158 = phi i32 [ undef, %0 ], [ %.0158.be, %.backedge ]
  %.0 = phi i32 [ 1935780779, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1935780779, label %23
    i32 -399870842, label %27
    i32 -20380008, label %37
    i32 -1946338885, label %38
    i32 -1279115049, label %44
    i32 -1037885170, label %54
    i32 600653665, label %66
    i32 -324312688, label %68
    i32 -626766611, label %69
    i32 -1162625080, label %73
    i32 -1952971073, label %76
    i32 1686004332, label %81
    i32 1787016926, label %86
    i32 1368080473, label %96
    i32 -863218534, label %106
    i32 -326939205, label %107
    i32 -804648486, label %109
    i32 -738592694, label %119
    i32 1925998121, label %129
    i32 1731743767, label %130
    i32 546397364, label %140
    i32 -1968751761, label %151
    i32 2054479734, label %152
    i32 1869530506, label %153
    i32 -243755772, label %157
    i32 527383608, label %190
    i32 -1066143755, label %200
    i32 -1422740378, label %211
    i32 -58578956, label %212
    i32 -1449127965, label %213
    i32 -418772084, label %223
    i32 1265231199, label %235
    i32 930431948, label %237
    i32 685820013, label %238
    i32 -804774010, label %242
    i32 -545155724, label %243
    i32 -1662740251, label %247
    i32 956424566, label %257
    i32 1492147469, label %283
    i32 -1594044067, label %284
    i32 1674345609, label %285
    i32 -958500619, label %286
    i32 -1884735590, label %288
    i32 1716565432, label %298
    i32 -1931031913, label %308
    i32 2084469583, label %309
    i32 -1055435214, label %311
    i32 1709061142, label %313
    i32 -1269339809, label %323
    i32 1879059011, label %335
    i32 -1648613174, label %337
    i32 1793691570, label %338
    i32 -934183530, label %348
    i32 -2138287154, label %360
    i32 635565834, label %362
    i32 -1841888143, label %372
    i32 1003969079, label %400
    i32 491533139, label %402
    i32 1696865049, label %412
    i32 -597865032, label %422
    i32 -2048029396, label %423
    i32 1374171274, label %424
    i32 61507402, label %425
    i32 1493064546, label %435
    i32 1304873337, label %447
    i32 -1909402326, label %449
    i32 214226543, label %451
    i32 573170044, label %452
    i32 -1424757914, label %454
    i32 -1319587845, label %464
    i32 -1246021482, label %476
    i32 -319169978, label %477
    i32 -896679382, label %478
    i32 1243208786, label %479
    i32 -1903760667, label %480
    i32 1308273267, label %481
    i32 1341592854, label %483
    i32 -1874207686, label %484
    i32 -1304631803, label %501
    i32 -1262888969, label %502
    i32 -326874869, label %503
    i32 -263861524, label %504
    i32 1580487382, label %505
    i32 205193664, label %506
    i32 1854432350, label %507
  ]

.backedge:                                        ; preds = %22, %507, %506, %505, %504, %503, %502, %501, %484, %483, %481, %480, %479, %478, %477, %464, %454, %452, %451, %449, %447, %435, %425, %424, %423, %422, %412, %402, %400, %372, %362, %360, %348, %338, %337, %335, %323, %313, %311, %309, %308, %298, %288, %286, %285, %284, %283, %257, %247, %243, %242, %238, %237, %235, %223, %213, %212, %211, %200, %190, %157, %153, %152, %151, %140, %130, %129, %119, %109, %107, %106, %96, %86, %81, %76, %73, %69, %68, %66, %54, %44, %38, %37, %27, %23
  %.0178.be = phi i32 [ %.0178, %22 ], [ %.0178, %507 ], [ %.0178, %506 ], [ %.0178, %505 ], [ %.0178, %504 ], [ %.0178, %503 ], [ %.0178, %502 ], [ %.0178, %501 ], [ %.0178, %484 ], [ %.0178, %483 ], [ %.0178, %481 ], [ %.0178, %480 ], [ %.0178, %479 ], [ %.0178, %478 ], [ %.0178, %477 ], [ %.0178, %464 ], [ %.0178, %454 ], [ %.0178, %452 ], [ %.0178, %451 ], [ %.0178, %449 ], [ %.0178, %447 ], [ %.0178, %435 ], [ %.0178, %425 ], [ %.0178, %424 ], [ %.0178, %423 ], [ %.0178, %422 ], [ %.0178, %412 ], [ %.0178, %402 ], [ %.0178, %400 ], [ %.0178, %372 ], [ %.0178, %362 ], [ %.0178, %360 ], [ %.0178, %348 ], [ %.0178, %338 ], [ %.0178, %337 ], [ %.0178, %335 ], [ %.0178, %323 ], [ %.0178, %313 ], [ %.0178, %311 ], [ %.0178, %309 ], [ %.0178, %308 ], [ %.0178, %298 ], [ %.0178, %288 ], [ %.0178, %286 ], [ %.0178, %285 ], [ %.0178, %284 ], [ %.0178, %283 ], [ %.0178, %257 ], [ %.0178, %247 ], [ %.0178, %243 ], [ %.0178, %242 ], [ %.0178, %238 ], [ %.0178, %237 ], [ %.0178, %235 ], [ %.0178, %223 ], [ %.0178, %213 ], [ %.0178, %212 ], [ %.0178, %211 ], [ %.0178, %200 ], [ %.0178, %190 ], [ %.0178, %157 ], [ %.0178, %153 ], [ %.0178, %152 ], [ %.0178, %151 ], [ %.0178, %140 ], [ %.0178, %130 ], [ %.0178, %129 ], [ %.0178, %119 ], [ %.0178, %109 ], [ %.0178, %107 ], [ %.0178, %106 ], [ %.0178, %96 ], [ %.0178, %86 ], [ %.0178, %81 ], [ %.0178, %76 ], [ %.0178, %73 ], [ %.0178, %69 ], [ %.0178, %68 ], [ %.0178, %66 ], [ %.0178, %54 ], [ %.0178, %44 ], [ %.0178, %38 ], [ %.neg198, %37 ], [ %.0178, %27 ], [ %.0178, %23 ]
  %.0176.be = phi i32 [ %.0176, %22 ], [ %.0176, %507 ], [ %.0176, %506 ], [ %.0176, %505 ], [ %.0176, %504 ], [ %.0176, %503 ], [ %.0176, %502 ], [ %.0176, %501 ], [ %.0176, %484 ], [ %.0176, %483 ], [ %.0176, %481 ], [ %.neg, %480 ], [ %.0176, %479 ], [ %.0176, %478 ], [ %.0176, %477 ], [ %.0176, %464 ], [ %.0176, %454 ], [ %.0176, %452 ], [ %.0176, %451 ], [ %.0176, %449 ], [ %.0176, %447 ], [ %.0176, %435 ], [ %.0176, %425 ], [ %.0176, %424 ], [ %.0176, %423 ], [ %.0176, %422 ], [ %.0176, %412 ], [ %.0176, %402 ], [ %.0176, %400 ], [ %.0176, %372 ], [ %.0176, %362 ], [ %.0176, %360 ], [ %.0176, %348 ], [ %.0176, %338 ], [ %.0176, %337 ], [ %.0176, %335 ], [ %.0176, %323 ], [ %.0176, %313 ], [ %.0176, %311 ], [ %.0176, %309 ], [ %.0176, %308 ], [ %.0176, %298 ], [ %.0176, %288 ], [ %.0176, %286 ], [ %.0176, %285 ], [ %.0176, %284 ], [ %.0176, %283 ], [ %.0176, %257 ], [ %.0176, %247 ], [ %.0176, %243 ], [ %.0176, %242 ], [ %.0176, %238 ], [ %.0176, %237 ], [ %.0176, %235 ], [ %.0176, %223 ], [ %.0176, %213 ], [ %.0176, %212 ], [ %.0176, %211 ], [ %.0176, %200 ], [ %.0176, %190 ], [ %.0176, %157 ], [ %.0176, %153 ], [ %.0176, %152 ], [ %.0176, %151 ], [ %141, %140 ], [ %.0176, %130 ], [ %.0176, %129 ], [ %.0176, %119 ], [ %.0176, %109 ], [ %.0176, %107 ], [ %.0176, %106 ], [ %.0176, %96 ], [ %.0176, %86 ], [ %.0176, %81 ], [ %.0176, %76 ], [ %.0176, %73 ], [ %.0176, %69 ], [ %.0176, %68 ], [ %.0176, %66 ], [ %.0176, %54 ], [ %.0176, %44 ], [ 0, %38 ], [ %.0176, %37 ], [ %.0176, %27 ], [ %.0176, %23 ]
  %.0174.be = phi i32 [ %.0174, %22 ], [ %.0174, %507 ], [ %.0174, %506 ], [ %.0174, %505 ], [ %.0174, %504 ], [ %.0174, %503 ], [ %.0174, %502 ], [ %.0174, %501 ], [ %.0174, %484 ], [ %.0174, %483 ], [ %.0174, %481 ], [ %.0174, %480 ], [ %.0174, %479 ], [ %.0174, %478 ], [ %.0174, %477 ], [ %.0174, %464 ], [ %.0174, %454 ], [ %.0174, %452 ], [ %.0174, %451 ], [ %.0174, %449 ], [ %.0174, %447 ], [ %.0174, %435 ], [ %.0174, %425 ], [ %.0174, %424 ], [ %.0174, %423 ], [ %.0174, %422 ], [ %.0174, %412 ], [ %.0174, %402 ], [ %.0174, %400 ], [ %.0174, %372 ], [ %.0174, %362 ], [ %.0174, %360 ], [ %.0174, %348 ], [ %.0174, %338 ], [ %.0174, %337 ], [ %.0174, %335 ], [ %.0174, %323 ], [ %.0174, %313 ], [ %.0174, %311 ], [ %.0174, %309 ], [ %.0174, %308 ], [ %.0174, %298 ], [ %.0174, %288 ], [ %.0174, %286 ], [ %.0174, %285 ], [ %.0174, %284 ], [ %.0174, %283 ], [ %.0174, %257 ], [ %.0174, %247 ], [ %.0174, %243 ], [ %.0174, %242 ], [ %.0174, %238 ], [ %.0174, %237 ], [ %.0174, %235 ], [ %.0174, %223 ], [ %.0174, %213 ], [ %.0174, %212 ], [ %.0174, %211 ], [ %.0174, %200 ], [ %.0174, %190 ], [ %.0174, %157 ], [ %.0174, %153 ], [ %.0174, %152 ], [ %.0174, %151 ], [ %.0174, %140 ], [ %.0174, %130 ], [ %.0174, %129 ], [ %.0174, %119 ], [ %.0174, %109 ], [ %108, %107 ], [ %.0174, %106 ], [ %.0174, %96 ], [ %.0174, %86 ], [ %.0174, %81 ], [ %.0174, %76 ], [ %.0174, %73 ], [ %.0174, %69 ], [ 0, %68 ], [ %.0174, %66 ], [ %.0174, %54 ], [ %.0174, %44 ], [ %.0174, %38 ], [ %.0174, %37 ], [ %.0174, %27 ], [ %.0174, %23 ]
  %.0172.be = phi i32 [ %.0172, %22 ], [ %.0172, %507 ], [ %.0172, %506 ], [ %.0172, %505 ], [ %.0172, %504 ], [ %.0172, %503 ], [ %.0172, %502 ], [ %.0172, %501 ], [ %.0172, %484 ], [ %.0172, %483 ], [ %482, %481 ], [ %.0172, %480 ], [ %.0172, %479 ], [ %.0172, %478 ], [ %.0172, %477 ], [ %.0172, %464 ], [ %.0172, %454 ], [ %.0172, %452 ], [ %.0172, %451 ], [ %.0172, %449 ], [ %.0172, %447 ], [ %.0172, %435 ], [ %.0172, %425 ], [ %.0172, %424 ], [ %.0172, %423 ], [ %.0172, %422 ], [ %.0172, %412 ], [ %.0172, %402 ], [ %.0172, %400 ], [ %.0172, %372 ], [ %.0172, %362 ], [ %.0172, %360 ], [ %.0172, %348 ], [ %.0172, %338 ], [ %.0172, %337 ], [ %.0172, %335 ], [ %.0172, %323 ], [ %.0172, %313 ], [ %.0172, %311 ], [ %.0172, %309 ], [ %.0172, %308 ], [ %.0172, %298 ], [ %.0172, %288 ], [ %.0172, %286 ], [ %.0172, %285 ], [ %.0172, %284 ], [ %.0172, %283 ], [ %.0172, %257 ], [ %.0172, %247 ], [ %.0172, %243 ], [ %.0172, %242 ], [ %.0172, %238 ], [ %.0172, %237 ], [ %.0172, %235 ], [ %.0172, %223 ], [ %.0172, %213 ], [ %.0172, %212 ], [ %.0172, %211 ], [ %201, %200 ], [ %.0172, %190 ], [ %.0172, %157 ], [ %.0172, %153 ], [ 0, %152 ], [ %.0172, %151 ], [ %.0172, %140 ], [ %.0172, %130 ], [ %.0172, %129 ], [ %.0172, %119 ], [ %.0172, %109 ], [ %.0172, %107 ], [ %.0172, %106 ], [ %.0172, %96 ], [ %.0172, %86 ], [ %.0172, %81 ], [ %.0172, %76 ], [ %.0172, %73 ], [ %.0172, %69 ], [ %.0172, %68 ], [ %.0172, %66 ], [ %.0172, %54 ], [ %.0172, %44 ], [ %.0172, %38 ], [ %.0172, %37 ], [ %.0172, %27 ], [ %.0172, %23 ]
  %.0170.be = phi i32 [ %.0170, %22 ], [ %.0170, %507 ], [ %.0170, %506 ], [ %.0170, %505 ], [ %.0170, %504 ], [ %.0170, %503 ], [ %.0170, %502 ], [ %.0170, %501 ], [ %.0170, %484 ], [ %.0170, %483 ], [ %.0170, %481 ], [ %.0170, %480 ], [ %.0170, %479 ], [ %.0170, %478 ], [ %.0170, %477 ], [ %.0170, %464 ], [ %.0170, %454 ], [ %.0170, %452 ], [ %.0170, %451 ], [ %.0170, %449 ], [ %.0170, %447 ], [ %.0170, %435 ], [ %.0170, %425 ], [ %.0170, %424 ], [ %.0170, %423 ], [ %.0170, %422 ], [ %.0170, %412 ], [ %.0170, %402 ], [ %.0170, %400 ], [ %.0170, %372 ], [ %.0170, %362 ], [ %.0170, %360 ], [ %.0170, %348 ], [ %.0170, %338 ], [ %.0170, %337 ], [ %.0170, %335 ], [ %.0170, %323 ], [ %.0170, %313 ], [ %.0170, %311 ], [ %310, %309 ], [ %.0170, %308 ], [ %.0170, %298 ], [ %.0170, %288 ], [ %.0170, %286 ], [ %.0170, %285 ], [ %.0170, %284 ], [ %.0170, %283 ], [ %.0170, %257 ], [ %.0170, %247 ], [ %.0170, %243 ], [ %.0170, %242 ], [ %.0170, %238 ], [ %.0170, %237 ], [ %.0170, %235 ], [ %.0170, %223 ], [ %.0170, %213 ], [ 0, %212 ], [ %.0170, %211 ], [ %.0170, %200 ], [ %.0170, %190 ], [ %.0170, %157 ], [ %.0170, %153 ], [ %.0170, %152 ], [ %.0170, %151 ], [ %.0170, %140 ], [ %.0170, %130 ], [ %.0170, %129 ], [ %.0170, %119 ], [ %.0170, %109 ], [ %.0170, %107 ], [ %.0170, %106 ], [ %.0170, %96 ], [ %.0170, %86 ], [ %.0170, %81 ], [ %.0170, %76 ], [ %.0170, %73 ], [ %.0170, %69 ], [ %.0170, %68 ], [ %.0170, %66 ], [ %.0170, %54 ], [ %.0170, %44 ], [ %.0170, %38 ], [ %.0170, %37 ], [ %.0170, %27 ], [ %.0170, %23 ]
  %.0168.be = phi i32 [ %.0168, %22 ], [ %.0168, %507 ], [ %.0168, %506 ], [ %.0168, %505 ], [ %.0168, %504 ], [ %.0168, %503 ], [ %.0168, %502 ], [ %.0168, %501 ], [ %.0168, %484 ], [ %.0168, %483 ], [ %.0168, %481 ], [ %.0168, %480 ], [ %.0168, %479 ], [ %.0168, %478 ], [ %.0168, %477 ], [ %.0168, %464 ], [ %.0168, %454 ], [ %.0168, %452 ], [ %.0168, %451 ], [ %.0168, %449 ], [ %.0168, %447 ], [ %.0168, %435 ], [ %.0168, %425 ], [ %.0168, %424 ], [ %.0168, %423 ], [ %.0168, %422 ], [ %.0168, %412 ], [ %.0168, %402 ], [ %.0168, %400 ], [ %.0168, %372 ], [ %.0168, %362 ], [ %.0168, %360 ], [ %.0168, %348 ], [ %.0168, %338 ], [ %.0168, %337 ], [ %.0168, %335 ], [ %.0168, %323 ], [ %.0168, %313 ], [ %.0168, %311 ], [ %.0168, %309 ], [ %.0168, %308 ], [ %.0168, %298 ], [ %.0168, %288 ], [ %287, %286 ], [ %.0168, %285 ], [ %.0168, %284 ], [ %.0168, %283 ], [ %.0168, %257 ], [ %.0168, %247 ], [ %.0168, %243 ], [ %.0168, %242 ], [ %.0168, %238 ], [ 0, %237 ], [ %.0168, %235 ], [ %.0168, %223 ], [ %.0168, %213 ], [ %.0168, %212 ], [ %.0168, %211 ], [ %.0168, %200 ], [ %.0168, %190 ], [ %.0168, %157 ], [ %.0168, %153 ], [ %.0168, %152 ], [ %.0168, %151 ], [ %.0168, %140 ], [ %.0168, %130 ], [ %.0168, %129 ], [ %.0168, %119 ], [ %.0168, %109 ], [ %.0168, %107 ], [ %.0168, %106 ], [ %.0168, %96 ], [ %.0168, %86 ], [ %.0168, %81 ], [ %.0168, %76 ], [ %.0168, %73 ], [ %.0168, %69 ], [ %.0168, %68 ], [ %.0168, %66 ], [ %.0168, %54 ], [ %.0168, %44 ], [ %.0168, %38 ], [ %.0168, %37 ], [ %.0168, %27 ], [ %.0168, %23 ]
  %.0166.be = phi i32 [ %.0166, %22 ], [ %.0166, %507 ], [ %.0166, %506 ], [ %.0166, %505 ], [ %.0166, %504 ], [ %.0166, %503 ], [ %.0166, %502 ], [ %.0166, %501 ], [ %.0166, %484 ], [ %.0166, %483 ], [ %.0166, %481 ], [ %.0166, %480 ], [ %.0166, %479 ], [ %.0166, %478 ], [ %.0166, %477 ], [ %.0166, %464 ], [ %.0166, %454 ], [ %.0166, %452 ], [ %.0166, %451 ], [ %.0166, %449 ], [ %.0166, %447 ], [ %.0166, %435 ], [ %.0166, %425 ], [ %.0166, %424 ], [ %.0166, %423 ], [ %.0166, %422 ], [ %.0166, %412 ], [ %.0166, %402 ], [ %.0166, %400 ], [ %.0166, %372 ], [ %.0166, %362 ], [ %.0166, %360 ], [ %.0166, %348 ], [ %.0166, %338 ], [ %.0166, %337 ], [ %.0166, %335 ], [ %.0166, %323 ], [ %.0166, %313 ], [ %.0166, %311 ], [ %.0166, %309 ], [ %.0166, %308 ], [ %.0166, %298 ], [ %.0166, %288 ], [ %.0166, %286 ], [ %.0166, %285 ], [ %.neg186, %284 ], [ %.0166, %283 ], [ %.0166, %257 ], [ %.0166, %247 ], [ %.0166, %243 ], [ 0, %242 ], [ %.0166, %238 ], [ %.0166, %237 ], [ %.0166, %235 ], [ %.0166, %223 ], [ %.0166, %213 ], [ %.0166, %212 ], [ %.0166, %211 ], [ %.0166, %200 ], [ %.0166, %190 ], [ %.0166, %157 ], [ %.0166, %153 ], [ %.0166, %152 ], [ %.0166, %151 ], [ %.0166, %140 ], [ %.0166, %130 ], [ %.0166, %129 ], [ %.0166, %119 ], [ %.0166, %109 ], [ %.0166, %107 ], [ %.0166, %106 ], [ %.0166, %96 ], [ %.0166, %86 ], [ %.0166, %81 ], [ %.0166, %76 ], [ %.0166, %73 ], [ %.0166, %69 ], [ %.0166, %68 ], [ %.0166, %66 ], [ %.0166, %54 ], [ %.0166, %44 ], [ %.0166, %38 ], [ %.0166, %37 ], [ %.0166, %27 ], [ %.0166, %23 ]
  %.0164.be = phi i32 [ %.0164, %22 ], [ %.0164, %507 ], [ %.0164, %506 ], [ %.0164, %505 ], [ %.0164, %504 ], [ %.0164, %503 ], [ %.0164, %502 ], [ %.0164, %501 ], [ %.0164, %484 ], [ %.0164, %483 ], [ %.0164, %481 ], [ %.0164, %480 ], [ %.0164, %479 ], [ %.0164, %478 ], [ %.0164, %477 ], [ %.0164, %464 ], [ %.0164, %454 ], [ %.0164, %452 ], [ %.0164, %451 ], [ %450, %449 ], [ %.0164, %447 ], [ %.0164, %435 ], [ %.0164, %425 ], [ %.0164, %424 ], [ %.0164, %423 ], [ %.0164, %422 ], [ %.0164, %412 ], [ %.0164, %402 ], [ %.0164, %400 ], [ %.0164, %372 ], [ %.0164, %362 ], [ %.0164, %360 ], [ %.0164, %348 ], [ %.0164, %338 ], [ %.0164, %337 ], [ %.0164, %335 ], [ %.0164, %323 ], [ %.0164, %313 ], [ %312, %311 ], [ %.0164, %309 ], [ %.0164, %308 ], [ %.0164, %298 ], [ %.0164, %288 ], [ %.0164, %286 ], [ %.0164, %285 ], [ %.0164, %284 ], [ %.0164, %283 ], [ %.0164, %257 ], [ %.0164, %247 ], [ %.0164, %243 ], [ %.0164, %242 ], [ %.0164, %238 ], [ %.0164, %237 ], [ %.0164, %235 ], [ %.0164, %223 ], [ %.0164, %213 ], [ %.0164, %212 ], [ %.0164, %211 ], [ %.0164, %200 ], [ %.0164, %190 ], [ %.0164, %157 ], [ %.0164, %153 ], [ %.0164, %152 ], [ %.0164, %151 ], [ %.0164, %140 ], [ %.0164, %130 ], [ %.0164, %129 ], [ %.0164, %119 ], [ %.0164, %109 ], [ %.0164, %107 ], [ %.0164, %106 ], [ %.0164, %96 ], [ %.0164, %86 ], [ %.0164, %81 ], [ %.0164, %76 ], [ %.0164, %73 ], [ %.0164, %69 ], [ %.0164, %68 ], [ %.0164, %66 ], [ %.0164, %54 ], [ %.0164, %44 ], [ %.0164, %38 ], [ %.0164, %37 ], [ %.0164, %27 ], [ %.0164, %23 ]
  %.0162.be = phi i32 [ %.0162, %22 ], [ %.0162, %507 ], [ %.0162, %506 ], [ %.0162, %505 ], [ %.0162, %504 ], [ %.0162, %503 ], [ %.0162, %502 ], [ %.0162, %501 ], [ %.0162, %484 ], [ %.0162, %483 ], [ %.0162, %481 ], [ %.0162, %480 ], [ %.0162, %479 ], [ %.0162, %478 ], [ %.0162, %477 ], [ %.0162, %464 ], [ %.0162, %454 ], [ %453, %452 ], [ %.0162, %451 ], [ %.0162, %449 ], [ %.0162, %447 ], [ %.0162, %435 ], [ %.0162, %425 ], [ %.0162, %424 ], [ %.0162, %423 ], [ %.0162, %422 ], [ %.0162, %412 ], [ %.0162, %402 ], [ %.0162, %400 ], [ %.0162, %372 ], [ %.0162, %362 ], [ %.0162, %360 ], [ %.0162, %348 ], [ %.0162, %338 ], [ %.0162, %337 ], [ %.0162, %335 ], [ %.0162, %323 ], [ %.0162, %313 ], [ 0, %311 ], [ %.0162, %309 ], [ %.0162, %308 ], [ %.0162, %298 ], [ %.0162, %288 ], [ %.0162, %286 ], [ %.0162, %285 ], [ %.0162, %284 ], [ %.0162, %283 ], [ %.0162, %257 ], [ %.0162, %247 ], [ %.0162, %243 ], [ %.0162, %242 ], [ %.0162, %238 ], [ %.0162, %237 ], [ %.0162, %235 ], [ %.0162, %223 ], [ %.0162, %213 ], [ %.0162, %212 ], [ %.0162, %211 ], [ %.0162, %200 ], [ %.0162, %190 ], [ %.0162, %157 ], [ %.0162, %153 ], [ %.0162, %152 ], [ %.0162, %151 ], [ %.0162, %140 ], [ %.0162, %130 ], [ %.0162, %129 ], [ %.0162, %119 ], [ %.0162, %109 ], [ %.0162, %107 ], [ %.0162, %106 ], [ %.0162, %96 ], [ %.0162, %86 ], [ %.0162, %81 ], [ %.0162, %76 ], [ %.0162, %73 ], [ %.0162, %69 ], [ %.0162, %68 ], [ %.0162, %66 ], [ %.0162, %54 ], [ %.0162, %44 ], [ %.0162, %38 ], [ %.0162, %37 ], [ %.0162, %27 ], [ %.0162, %23 ]
  %.0160.be = phi i8 [ %.0160, %22 ], [ %.0160, %507 ], [ %.0160, %506 ], [ 1, %505 ], [ %.0160, %504 ], [ %.0160, %503 ], [ %.0160, %502 ], [ %.0160, %501 ], [ %.0160, %484 ], [ %.0160, %483 ], [ %.0160, %481 ], [ %.0160, %480 ], [ %.0160, %479 ], [ %.0160, %478 ], [ %.0160, %477 ], [ %.0160, %464 ], [ %.0160, %454 ], [ %.0160, %452 ], [ %.0160, %451 ], [ %.0160, %449 ], [ %.0160, %447 ], [ %.0160, %435 ], [ %.0160, %425 ], [ %.0160, %424 ], [ %.0160, %423 ], [ %.0160, %422 ], [ 1, %412 ], [ %.0160, %402 ], [ %.0160, %400 ], [ %.0160, %372 ], [ %.0160, %362 ], [ %.0160, %360 ], [ %.0160, %348 ], [ %.0160, %338 ], [ 0, %337 ], [ %.0160, %335 ], [ %.0160, %323 ], [ %.0160, %313 ], [ %.0160, %311 ], [ %.0160, %309 ], [ %.0160, %308 ], [ %.0160, %298 ], [ %.0160, %288 ], [ %.0160, %286 ], [ %.0160, %285 ], [ %.0160, %284 ], [ %.0160, %283 ], [ %.0160, %257 ], [ %.0160, %247 ], [ %.0160, %243 ], [ %.0160, %242 ], [ %.0160, %238 ], [ %.0160, %237 ], [ %.0160, %235 ], [ %.0160, %223 ], [ %.0160, %213 ], [ %.0160, %212 ], [ %.0160, %211 ], [ %.0160, %200 ], [ %.0160, %190 ], [ %.0160, %157 ], [ %.0160, %153 ], [ %.0160, %152 ], [ %.0160, %151 ], [ %.0160, %140 ], [ %.0160, %130 ], [ %.0160, %129 ], [ %.0160, %119 ], [ %.0160, %109 ], [ %.0160, %107 ], [ %.0160, %106 ], [ %.0160, %96 ], [ %.0160, %86 ], [ %.0160, %81 ], [ %.0160, %76 ], [ %.0160, %73 ], [ %.0160, %69 ], [ %.0160, %68 ], [ %.0160, %66 ], [ %.0160, %54 ], [ %.0160, %44 ], [ %.0160, %38 ], [ %.0160, %37 ], [ %.0160, %27 ], [ %.0160, %23 ]
  %.0158.be = phi i32 [ %.0158, %22 ], [ %.0158, %507 ], [ %.0158, %506 ], [ %.0158, %505 ], [ %.0158, %504 ], [ %.0158, %503 ], [ %.0158, %502 ], [ %.0158, %501 ], [ %.0158, %484 ], [ %.0158, %483 ], [ %.0158, %481 ], [ %.0158, %480 ], [ %.0158, %479 ], [ %.0158, %478 ], [ %.0158, %477 ], [ %.0158, %464 ], [ %.0158, %454 ], [ %.0158, %452 ], [ %.0158, %451 ], [ %.0158, %449 ], [ %.0158, %447 ], [ %.0158, %435 ], [ %.0158, %425 ], [ %.neg183, %424 ], [ %.0158, %423 ], [ %.0158, %422 ], [ %.0158, %412 ], [ %.0158, %402 ], [ %.0158, %400 ], [ %.0158, %372 ], [ %.0158, %362 ], [ %.0158, %360 ], [ %.0158, %348 ], [ %.0158, %338 ], [ 0, %337 ], [ %.0158, %335 ], [ %.0158, %323 ], [ %.0158, %313 ], [ %.0158, %311 ], [ %.0158, %309 ], [ %.0158, %308 ], [ %.0158, %298 ], [ %.0158, %288 ], [ %.0158, %286 ], [ %.0158, %285 ], [ %.0158, %284 ], [ %.0158, %283 ], [ %.0158, %257 ], [ %.0158, %247 ], [ %.0158, %243 ], [ %.0158, %242 ], [ %.0158, %238 ], [ %.0158, %237 ], [ %.0158, %235 ], [ %.0158, %223 ], [ %.0158, %213 ], [ %.0158, %212 ], [ %.0158, %211 ], [ %.0158, %200 ], [ %.0158, %190 ], [ %.0158, %157 ], [ %.0158, %153 ], [ %.0158, %152 ], [ %.0158, %151 ], [ %.0158, %140 ], [ %.0158, %130 ], [ %.0158, %129 ], [ %.0158, %119 ], [ %.0158, %109 ], [ %.0158, %107 ], [ %.0158, %106 ], [ %.0158, %96 ], [ %.0158, %86 ], [ %.0158, %81 ], [ %.0158, %76 ], [ %.0158, %73 ], [ %.0158, %69 ], [ %.0158, %68 ], [ %.0158, %66 ], [ %.0158, %54 ], [ %.0158, %44 ], [ %.0158, %38 ], [ %.0158, %37 ], [ %.0158, %27 ], [ %.0158, %23 ]
  %.0.be = phi i32 [ %.0, %22 ], [ -1319587845, %507 ], [ 1493064546, %506 ], [ 1696865049, %505 ], [ -1841888143, %504 ], [ -934183530, %503 ], [ -1269339809, %502 ], [ 1716565432, %501 ], [ 956424566, %484 ], [ -418772084, %483 ], [ -1066143755, %481 ], [ 546397364, %480 ], [ -738592694, %479 ], [ 1368080473, %478 ], [ -1037885170, %477 ], [ %475, %464 ], [ %463, %454 ], [ 1709061142, %452 ], [ 573170044, %451 ], [ 214226543, %449 ], [ %448, %447 ], [ %446, %435 ], [ %434, %425 ], [ 1793691570, %424 ], [ 1374171274, %423 ], [ -2048029396, %422 ], [ %421, %412 ], [ %411, %402 ], [ %401, %400 ], [ %399, %372 ], [ %371, %362 ], [ %361, %360 ], [ %359, %348 ], [ %347, %338 ], [ 1793691570, %337 ], [ %336, %335 ], [ %334, %323 ], [ %322, %313 ], [ 1709061142, %311 ], [ -1449127965, %309 ], [ 2084469583, %308 ], [ %307, %298 ], [ %297, %288 ], [ 685820013, %286 ], [ -958500619, %285 ], [ -545155724, %284 ], [ -1594044067, %283 ], [ %282, %257 ], [ %256, %247 ], [ %246, %243 ], [ -545155724, %242 ], [ %241, %238 ], [ 685820013, %237 ], [ %236, %235 ], [ %234, %223 ], [ %222, %213 ], [ -1449127965, %212 ], [ 1869530506, %211 ], [ %210, %200 ], [ %199, %190 ], [ 527383608, %157 ], [ %156, %153 ], [ 1869530506, %152 ], [ -1279115049, %151 ], [ %150, %140 ], [ %139, %130 ], [ 1731743767, %129 ], [ %128, %119 ], [ %118, %109 ], [ -626766611, %107 ], [ -326939205, %106 ], [ %105, %96 ], [ %95, %86 ], [ 1787016926, %81 ], [ 1787016926, %76 ], [ %75, %73 ], [ %72, %69 ], [ -626766611, %68 ], [ %67, %66 ], [ %65, %54 ], [ %53, %44 ], [ -1279115049, %38 ], [ 1935780779, %37 ], [ -20380008, %27 ], [ %26, %23 ]
  br label %22

23:                                               ; preds = %22
  %24 = load i32, i32* %10, align 4
  %25 = icmp slt i32 %.0178, %24
  %26 = select i1 %25, i32 -399870842, i32 -1946338885
  br label %.backedge

27:                                               ; preds = %22
  %28 = sext i32 %.0178 to i64
  %29 = getelementptr inbounds i32, i32* %17, i64 %28
  %30 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %29)
  %31 = getelementptr inbounds i32, i32* %20, i64 %28
  %32 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %30, i32* nonnull dereferenceable(4) %31)
  %33 = getelementptr inbounds i32, i32* %21, i64 %28
  %34 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %32, i32* nonnull dereferenceable(4) %33)
  %35 = load i32, i32* %29, align 4
  %.neg199 = add i32 %35, -1
  store i32 %.neg199, i32* %29, align 4
  %36 = load i32, i32* %31, align 4
  %.neg200 = add i32 %36, -1
  store i32 %.neg200, i32* %31, align 4
  br label %.backedge

37:                                               ; preds = %22
  %.neg198 = add i32 %.0178, 1
  br label %.backedge

38:                                               ; preds = %22
  %39 = load i32, i32* %9, align 4
  %40 = add i32 %39, 1
  %41 = zext i32 %40 to i64
  store i64 %41, i64* %8, align 8
  %.0..0..0.78 = load volatile i64, i64* %8, align 8
  %42 = mul nuw i64 %.0..0..0.78, %41
  %43 = alloca i32, i64 %42, align 16
  store i32* %43, i32** %7, align 8
  br label %.backedge

44:                                               ; preds = %22
  %45 = load i32, i32* @x.1, align 4
  %46 = load i32, i32* @y.2, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 -1037885170, i32 -319169978
  br label %.backedge

54:                                               ; preds = %22
  %55 = load i32, i32* %9, align 4
  %56 = icmp slt i32 %.0176, %55
  store i1 %56, i1* %6, align 1
  %57 = load i32, i32* @x.1, align 4
  %58 = load i32, i32* @y.2, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 600653665, i32 -319169978
  br label %.backedge

66:                                               ; preds = %22
  %.0..0..0.152 = load volatile i1, i1* %6, align 1
  %67 = select i1 %.0..0..0.152, i32 -324312688, i32 2054479734
  br label %.backedge

68:                                               ; preds = %22
  br label %.backedge

69:                                               ; preds = %22
  %70 = load i32, i32* %9, align 4
  %71 = icmp slt i32 %.0174, %70
  %72 = select i1 %71, i32 -1162625080, i32 -804648486
  br label %.backedge

73:                                               ; preds = %22
  %74 = icmp eq i32 %.0176, %.0174
  %75 = select i1 %74, i32 -1952971073, i32 1686004332
  br label %.backedge

76:                                               ; preds = %22
  %77 = sext i32 %.0176 to i64
  %.0..0..0.79 = load volatile i64, i64* %8, align 8
  %78 = mul nsw i64 %.0..0..0.79, %77
  %.0..0..0.134 = load volatile i32*, i32** %7, align 8
  %79 = sext i32 %.0174 to i64
  %.idx196 = add nsw i64 %78, %79
  %80 = getelementptr inbounds i32, i32* %.0..0..0.134, i64 %.idx196
  store i32 0, i32* %80, align 4
  br label %.backedge

81:                                               ; preds = %22
  %82 = sext i32 %.0176 to i64
  %.0..0..0.80 = load volatile i64, i64* %8, align 8
  %83 = mul nsw i64 %.0..0..0.80, %82
  %.0..0..0.135 = load volatile i32*, i32** %7, align 8
  %84 = sext i32 %.0174 to i64
  %.idx195 = add nsw i64 %83, %84
  %85 = getelementptr inbounds i32, i32* %.0..0..0.135, i64 %.idx195
  store i32 1000000010, i32* %85, align 4
  br label %.backedge

86:                                               ; preds = %22
  %87 = load i32, i32* @x.1, align 4
  %88 = load i32, i32* @y.2, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 1368080473, i32 -896679382
  br label %.backedge

96:                                               ; preds = %22
  %97 = load i32, i32* @x.1, align 4
  %98 = load i32, i32* @y.2, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 -863218534, i32 -896679382
  br label %.backedge

106:                                              ; preds = %22
  br label %.backedge

107:                                              ; preds = %22
  %108 = add i32 %.0174, 1
  br label %.backedge

109:                                              ; preds = %22
  %110 = load i32, i32* @x.1, align 4
  %111 = load i32, i32* @y.2, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 -738592694, i32 1243208786
  br label %.backedge

119:                                              ; preds = %22
  %120 = load i32, i32* @x.1, align 4
  %121 = load i32, i32* @y.2, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 1925998121, i32 1243208786
  br label %.backedge

129:                                              ; preds = %22
  br label %.backedge

130:                                              ; preds = %22
  %131 = load i32, i32* @x.1, align 4
  %132 = load i32, i32* @y.2, align 4
  %133 = add i32 %131, -1
  %134 = mul i32 %133, %131
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %137, %136
  %139 = select i1 %138, i32 546397364, i32 -1903760667
  br label %.backedge

140:                                              ; preds = %22
  %141 = add i32 %.0176, 1
  %142 = load i32, i32* @x.1, align 4
  %143 = load i32, i32* @y.2, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 -1968751761, i32 -1903760667
  br label %.backedge

151:                                              ; preds = %22
  br label %.backedge

152:                                              ; preds = %22
  br label %.backedge

153:                                              ; preds = %22
  %154 = load i32, i32* %10, align 4
  %155 = icmp slt i32 %.0172, %154
  %156 = select i1 %155, i32 -243755772, i32 -58578956
  br label %.backedge

157:                                              ; preds = %22
  %158 = sext i32 %.0172 to i64
  %159 = getelementptr inbounds i32, i32* %20, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %.0..0..0.81 = load volatile i64, i64* %8, align 8
  %162 = mul nsw i64 %.0..0..0.81, %161
  %.0..0..0.136 = load volatile i32*, i32** %7, align 8
  %163 = getelementptr inbounds i32, i32* %17, i64 %158
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %.idx191 = add nsw i64 %162, %165
  %166 = getelementptr inbounds i32, i32* %.0..0..0.136, i64 %.idx191
  %167 = getelementptr inbounds i32, i32* %21, i64 %158
  %168 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %166, i32* nonnull dereferenceable(4) %167)
  %169 = load i32, i32* %168, align 4
  %170 = load i32, i32* %159, align 4
  %171 = sext i32 %170 to i64
  %.0..0..0.82 = load volatile i64, i64* %8, align 8
  %172 = mul nsw i64 %.0..0..0.82, %171
  %.0..0..0.137 = load volatile i32*, i32** %7, align 8
  %173 = load i32, i32* %163, align 4
  %174 = sext i32 %173 to i64
  %.idx192 = add nsw i64 %172, %174
  %175 = getelementptr inbounds i32, i32* %.0..0..0.137, i64 %.idx192
  store i32 %169, i32* %175, align 4
  %176 = load i32, i32* %163, align 4
  %177 = sext i32 %176 to i64
  %.0..0..0.83 = load volatile i64, i64* %8, align 8
  %178 = mul nsw i64 %.0..0..0.83, %177
  %.0..0..0.138 = load volatile i32*, i32** %7, align 8
  %179 = load i32, i32* %159, align 4
  %180 = sext i32 %179 to i64
  %.idx193 = add nsw i64 %178, %180
  %181 = getelementptr inbounds i32, i32* %.0..0..0.138, i64 %.idx193
  %182 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %181, i32* nonnull dereferenceable(4) %167)
  %183 = load i32, i32* %182, align 4
  %184 = load i32, i32* %163, align 4
  %185 = sext i32 %184 to i64
  %.0..0..0.84 = load volatile i64, i64* %8, align 8
  %186 = mul nsw i64 %.0..0..0.84, %185
  %.0..0..0.139 = load volatile i32*, i32** %7, align 8
  %187 = load i32, i32* %159, align 4
  %188 = sext i32 %187 to i64
  %.idx194 = add nsw i64 %186, %188
  %189 = getelementptr inbounds i32, i32* %.0..0..0.139, i64 %.idx194
  store i32 %183, i32* %189, align 4
  br label %.backedge

190:                                              ; preds = %22
  %191 = load i32, i32* @x.1, align 4
  %192 = load i32, i32* @y.2, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -1066143755, i32 1308273267
  br label %.backedge

200:                                              ; preds = %22
  %201 = add i32 %.0172, 1
  %202 = load i32, i32* @x.1, align 4
  %203 = load i32, i32* @y.2, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 -1422740378, i32 1308273267
  br label %.backedge

211:                                              ; preds = %22
  br label %.backedge

212:                                              ; preds = %22
  br label %.backedge

213:                                              ; preds = %22
  %214 = load i32, i32* @x.1, align 4
  %215 = load i32, i32* @y.2, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 -418772084, i32 1341592854
  br label %.backedge

223:                                              ; preds = %22
  %224 = load i32, i32* %9, align 4
  %225 = icmp slt i32 %.0170, %224
  store i1 %225, i1* %5, align 1
  %226 = load i32, i32* @x.1, align 4
  %227 = load i32, i32* @y.2, align 4
  %228 = add i32 %226, -1
  %229 = mul i32 %228, %226
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %232, %231
  %234 = select i1 %233, i32 1265231199, i32 1341592854
  br label %.backedge

235:                                              ; preds = %22
  %.0..0..0.153 = load volatile i1, i1* %5, align 1
  %236 = select i1 %.0..0..0.153, i32 930431948, i32 -1055435214
  br label %.backedge

237:                                              ; preds = %22
  br label %.backedge

238:                                              ; preds = %22
  %239 = load i32, i32* %9, align 4
  %240 = icmp slt i32 %.0168, %239
  %241 = select i1 %240, i32 -804774010, i32 -1884735590
  br label %.backedge

242:                                              ; preds = %22
  br label %.backedge

243:                                              ; preds = %22
  %244 = load i32, i32* %9, align 4
  %245 = icmp slt i32 %.0166, %244
  %246 = select i1 %245, i32 -1662740251, i32 1674345609
  br label %.backedge

247:                                              ; preds = %22
  %248 = load i32, i32* @x.1, align 4
  %249 = load i32, i32* @y.2, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 956424566, i32 -1874207686
  br label %.backedge

257:                                              ; preds = %22
  %258 = sext i32 %.0168 to i64
  %.0..0..0.85 = load volatile i64, i64* %8, align 8
  %259 = mul nsw i64 %.0..0..0.85, %258
  %.0..0..0.140 = load volatile i32*, i32** %7, align 8
  %260 = sext i32 %.0166 to i64
  %.idx187 = add nsw i64 %259, %260
  %261 = getelementptr inbounds i32, i32* %.0..0..0.140, i64 %.idx187
  %.0..0..0.86 = load volatile i64, i64* %8, align 8
  %262 = mul nsw i64 %.0..0..0.86, %258
  %.0..0..0.141 = load volatile i32*, i32** %7, align 8
  %263 = sext i32 %.0170 to i64
  %.idx188 = add nsw i64 %262, %263
  %264 = getelementptr inbounds i32, i32* %.0..0..0.141, i64 %.idx188
  %265 = load i32, i32* %264, align 4
  %.0..0..0.87 = load volatile i64, i64* %8, align 8
  %266 = mul nsw i64 %.0..0..0.87, %263
  %.0..0..0.142 = load volatile i32*, i32** %7, align 8
  %.idx189 = add nsw i64 %266, %260
  %267 = getelementptr inbounds i32, i32* %.0..0..0.142, i64 %.idx189
  %268 = load i32, i32* %267, align 4
  %269 = add i32 %268, %265
  store i32 %269, i32* %11, align 4
  %270 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %261, i32* nonnull dereferenceable(4) %11)
  %271 = load i32, i32* %270, align 4
  %.0..0..0.88 = load volatile i64, i64* %8, align 8
  %272 = mul nsw i64 %.0..0..0.88, %258
  %.0..0..0.143 = load volatile i32*, i32** %7, align 8
  %.idx190 = add nsw i64 %272, %260
  %273 = getelementptr inbounds i32, i32* %.0..0..0.143, i64 %.idx190
  store i32 %271, i32* %273, align 4
  %274 = load i32, i32* @x.1, align 4
  %275 = load i32, i32* @y.2, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 1492147469, i32 -1874207686
  br label %.backedge

283:                                              ; preds = %22
  br label %.backedge

284:                                              ; preds = %22
  %.neg186 = add i32 %.0166, 1
  br label %.backedge

285:                                              ; preds = %22
  br label %.backedge

286:                                              ; preds = %22
  %287 = add i32 %.0168, 1
  br label %.backedge

288:                                              ; preds = %22
  %289 = load i32, i32* @x.1, align 4
  %290 = load i32, i32* @y.2, align 4
  %291 = add i32 %289, -1
  %292 = mul i32 %291, %289
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %295, %294
  %297 = select i1 %296, i32 1716565432, i32 -1304631803
  br label %.backedge

298:                                              ; preds = %22
  %299 = load i32, i32* @x.1, align 4
  %300 = load i32, i32* @y.2, align 4
  %301 = add i32 %299, -1
  %302 = mul i32 %301, %299
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %305, %304
  %307 = select i1 %306, i32 -1931031913, i32 -1304631803
  br label %.backedge

308:                                              ; preds = %22
  br label %.backedge

309:                                              ; preds = %22
  %310 = add i32 %.0170, 1
  br label %.backedge

311:                                              ; preds = %22
  %312 = load i32, i32* %10, align 4
  br label %.backedge

313:                                              ; preds = %22
  %314 = load i32, i32* @x.1, align 4
  %315 = load i32, i32* @y.2, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 -1269339809, i32 -1262888969
  br label %.backedge

323:                                              ; preds = %22
  %324 = load i32, i32* %10, align 4
  %325 = icmp slt i32 %.0162, %324
  store i1 %325, i1* %4, align 1
  %326 = load i32, i32* @x.1, align 4
  %327 = load i32, i32* @y.2, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 1879059011, i32 -1262888969
  br label %.backedge

335:                                              ; preds = %22
  %.0..0..0.154 = load volatile i1, i1* %4, align 1
  %336 = select i1 %.0..0..0.154, i32 -1648613174, i32 -1424757914
  br label %.backedge

337:                                              ; preds = %22
  br label %.backedge

338:                                              ; preds = %22
  %339 = load i32, i32* @x.1, align 4
  %340 = load i32, i32* @y.2, align 4
  %341 = add i32 %339, -1
  %342 = mul i32 %341, %339
  %343 = and i32 %342, 1
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %345, %344
  %347 = select i1 %346, i32 -934183530, i32 -326874869
  br label %.backedge

348:                                              ; preds = %22
  %349 = load i32, i32* %9, align 4
  %350 = icmp slt i32 %.0158, %349
  store i1 %350, i1* %3, align 1
  %351 = load i32, i32* @x.1, align 4
  %352 = load i32, i32* @y.2, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 -2138287154, i32 -326874869
  br label %.backedge

360:                                              ; preds = %22
  %.0..0..0.155 = load volatile i1, i1* %3, align 1
  %361 = select i1 %.0..0..0.155, i32 635565834, i32 61507402
  br label %.backedge

362:                                              ; preds = %22
  %363 = load i32, i32* @x.1, align 4
  %364 = load i32, i32* @y.2, align 4
  %365 = add i32 %363, -1
  %366 = mul i32 %365, %363
  %367 = and i32 %366, 1
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %369, %368
  %371 = select i1 %370, i32 -1841888143, i32 -263861524
  br label %.backedge

372:                                              ; preds = %22
  %373 = sext i32 %.0158 to i64
  %.0..0..0.89 = load volatile i64, i64* %8, align 8
  %374 = mul nsw i64 %.0..0..0.89, %373
  %.0..0..0.144 = load volatile i32*, i32** %7, align 8
  %375 = sext i32 %.0162 to i64
  %376 = getelementptr inbounds i32, i32* %17, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = sext i32 %377 to i64
  %.idx184 = add nsw i64 %374, %378
  %379 = getelementptr inbounds i32, i32* %.0..0..0.144, i64 %.idx184
  %380 = load i32, i32* %379, align 4
  %381 = getelementptr inbounds i32, i32* %21, i64 %375
  %382 = load i32, i32* %381, align 4
  %383 = add i32 %382, %380
  %.0..0..0.90 = load volatile i64, i64* %8, align 8
  %384 = mul nsw i64 %.0..0..0.90, %373
  %.0..0..0.145 = load volatile i32*, i32** %7, align 8
  %385 = getelementptr inbounds i32, i32* %20, i64 %375
  %386 = load i32, i32* %385, align 4
  %387 = sext i32 %386 to i64
  %.idx185 = add nsw i64 %384, %387
  %388 = getelementptr inbounds i32, i32* %.0..0..0.145, i64 %.idx185
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %383, %389
  store i1 %390, i1* %2, align 1
  %391 = load i32, i32* @x.1, align 4
  %392 = load i32, i32* @y.2, align 4
  %393 = add i32 %391, -1
  %394 = mul i32 %393, %391
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %397, %396
  %399 = select i1 %398, i32 1003969079, i32 -263861524
  br label %.backedge

400:                                              ; preds = %22
  %.0..0..0.156 = load volatile i1, i1* %2, align 1
  %401 = select i1 %.0..0..0.156, i32 491533139, i32 -2048029396
  br label %.backedge

402:                                              ; preds = %22
  %403 = load i32, i32* @x.1, align 4
  %404 = load i32, i32* @y.2, align 4
  %405 = add i32 %403, -1
  %406 = mul i32 %405, %403
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %409, %408
  %411 = select i1 %410, i32 1696865049, i32 1580487382
  br label %.backedge

412:                                              ; preds = %22
  %413 = load i32, i32* @x.1, align 4
  %414 = load i32, i32* @y.2, align 4
  %415 = add i32 %413, -1
  %416 = mul i32 %415, %413
  %417 = and i32 %416, 1
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %419, %418
  %421 = select i1 %420, i32 -597865032, i32 1580487382
  br label %.backedge

422:                                              ; preds = %22
  br label %.backedge

423:                                              ; preds = %22
  br label %.backedge

424:                                              ; preds = %22
  %.neg183 = add i32 %.0158, 1
  br label %.backedge

425:                                              ; preds = %22
  %426 = load i32, i32* @x.1, align 4
  %427 = load i32, i32* @y.2, align 4
  %428 = add i32 %426, -1
  %429 = mul i32 %428, %426
  %430 = and i32 %429, 1
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %432, %431
  %434 = select i1 %433, i32 1493064546, i32 205193664
  br label %.backedge

435:                                              ; preds = %22
  %436 = and i8 %.0160, 1
  %437 = icmp ne i8 %436, 0
  store i1 %437, i1* %1, align 1
  %438 = load i32, i32* @x.1, align 4
  %439 = load i32, i32* @y.2, align 4
  %440 = add i32 %438, -1
  %441 = mul i32 %440, %438
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %444, %443
  %446 = select i1 %445, i32 1304873337, i32 205193664
  br label %.backedge

447:                                              ; preds = %22
  %.0..0..0.157 = load volatile i1, i1* %1, align 1
  %448 = select i1 %.0..0..0.157, i32 -1909402326, i32 214226543
  br label %.backedge

449:                                              ; preds = %22
  %450 = add i32 %.0164, -1
  br label %.backedge

451:                                              ; preds = %22
  br label %.backedge

452:                                              ; preds = %22
  %453 = add i32 %.0162, 1
  br label %.backedge

454:                                              ; preds = %22
  %455 = load i32, i32* @x.1, align 4
  %456 = load i32, i32* @y.2, align 4
  %457 = add i32 %455, -1
  %458 = mul i32 %457, %455
  %459 = and i32 %458, 1
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %461, %460
  %463 = select i1 %462, i32 -1319587845, i32 1854432350
  br label %.backedge

464:                                              ; preds = %22
  %465 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.0164)
  %466 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %465, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  call void @llvm.stackrestore(i8* %16)
  %467 = load i32, i32* @x.1, align 4
  %468 = load i32, i32* @y.2, align 4
  %469 = add i32 %467, -1
  %470 = mul i32 %469, %467
  %471 = and i32 %470, 1
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %473, %472
  %475 = select i1 %474, i32 -1246021482, i32 1854432350
  br label %.backedge

476:                                              ; preds = %22
  ret void

477:                                              ; preds = %22
  br label %.backedge

478:                                              ; preds = %22
  br label %.backedge

479:                                              ; preds = %22
  br label %.backedge

480:                                              ; preds = %22
  %.neg = add i32 %.0176, 1
  br label %.backedge

481:                                              ; preds = %22
  %482 = add i32 %.0172, 1
  br label %.backedge

483:                                              ; preds = %22
  br label %.backedge

484:                                              ; preds = %22
  %485 = sext i32 %.0168 to i64
  %.0..0..0.91 = load volatile i64, i64* %8, align 8
  %.0..0..0.92 = load volatile i64, i64* %8, align 8
  %.0..0..0.93 = load volatile i64, i64* %8, align 8
  %.0..0..0.94 = load volatile i64, i64* %8, align 8
  %.0..0..0.95 = load volatile i64, i64* %8, align 8
  %.0..0..0.96 = load volatile i64, i64* %8, align 8
  %.0..0..0.97 = load volatile i64, i64* %8, align 8
  %.0..0..0.98 = load volatile i64, i64* %8, align 8
  %.0..0..0.99 = load volatile i64, i64* %8, align 8
  %.0..0..0.100 = load volatile i64, i64* %8, align 8
  %.0..0..0.101 = load volatile i64, i64* %8, align 8
  %.0..0..0.102 = load volatile i64, i64* %8, align 8
  %.0..0..0.103 = load volatile i64, i64* %8, align 8
  %.0..0..0.104 = load volatile i64, i64* %8, align 8
  %486 = mul nsw i64 %.0..0..0.104, %485
  %.0..0..0.146 = load volatile i32*, i32** %7, align 8
  %487 = sext i32 %.0166 to i64
  %.idx = add nsw i64 %486, %487
  %488 = getelementptr inbounds i32, i32* %.0..0..0.146, i64 %.idx
  %.0..0..0.105 = load volatile i64, i64* %8, align 8
  %.0..0..0.106 = load volatile i64, i64* %8, align 8
  %.0..0..0.107 = load volatile i64, i64* %8, align 8
  %489 = mul nsw i64 %.0..0..0.107, %485
  %.0..0..0.147 = load volatile i32*, i32** %7, align 8
  %490 = sext i32 %.0170 to i64
  %.idx180 = add nsw i64 %489, %490
  %491 = getelementptr inbounds i32, i32* %.0..0..0.147, i64 %.idx180
  %492 = load i32, i32* %491, align 4
  %.0..0..0.108 = load volatile i64, i64* %8, align 8
  %.0..0..0.109 = load volatile i64, i64* %8, align 8
  %.0..0..0.110 = load volatile i64, i64* %8, align 8
  %.0..0..0.111 = load volatile i64, i64* %8, align 8
  %.0..0..0.112 = load volatile i64, i64* %8, align 8
  %.0..0..0.113 = load volatile i64, i64* %8, align 8
  %.0..0..0.114 = load volatile i64, i64* %8, align 8
  %.0..0..0.115 = load volatile i64, i64* %8, align 8
  %.0..0..0.116 = load volatile i64, i64* %8, align 8
  %.0..0..0.117 = load volatile i64, i64* %8, align 8
  %.0..0..0.118 = load volatile i64, i64* %8, align 8
  %493 = mul nsw i64 %.0..0..0.118, %490
  %.0..0..0.148 = load volatile i32*, i32** %7, align 8
  %.idx181 = add nsw i64 %493, %487
  %494 = getelementptr inbounds i32, i32* %.0..0..0.148, i64 %.idx181
  %495 = load i32, i32* %494, align 4
  %496 = add i32 %495, %492
  store i32 %496, i32* %11, align 4
  %497 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %488, i32* nonnull dereferenceable(4) %11)
  %498 = load i32, i32* %497, align 4
  %.0..0..0.119 = load volatile i64, i64* %8, align 8
  %.0..0..0.120 = load volatile i64, i64* %8, align 8
  %.0..0..0.121 = load volatile i64, i64* %8, align 8
  %.0..0..0.122 = load volatile i64, i64* %8, align 8
  %499 = mul nsw i64 %.0..0..0.122, %485
  %.0..0..0.149 = load volatile i32*, i32** %7, align 8
  %.idx182 = add nsw i64 %499, %487
  %500 = getelementptr inbounds i32, i32* %.0..0..0.149, i64 %.idx182
  store i32 %498, i32* %500, align 4
  br label %.backedge

501:                                              ; preds = %22
  br label %.backedge

502:                                              ; preds = %22
  br label %.backedge

503:                                              ; preds = %22
  br label %.backedge

504:                                              ; preds = %22
  %.0..0..0.123 = load volatile i64, i64* %8, align 8
  %.0..0..0.124 = load volatile i64, i64* %8, align 8
  %.0..0..0.125 = load volatile i64, i64* %8, align 8
  %.0..0..0.126 = load volatile i64, i64* %8, align 8
  %.0..0..0.127 = load volatile i64, i64* %8, align 8
  %.0..0..0.150 = load volatile i32*, i32** %7, align 8
  %.0..0..0.128 = load volatile i64, i64* %8, align 8
  %.0..0..0.129 = load volatile i64, i64* %8, align 8
  %.0..0..0.130 = load volatile i64, i64* %8, align 8
  %.0..0..0.131 = load volatile i64, i64* %8, align 8
  %.0..0..0.132 = load volatile i64, i64* %8, align 8
  %.0..0..0.133 = load volatile i64, i64* %8, align 8
  %.0..0..0.151 = load volatile i32*, i32** %7, align 8
  br label %.backedge

505:                                              ; preds = %22
  br label %.backedge

506:                                              ; preds = %22
  br label %.backedge

507:                                              ; preds = %22
  %508 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.0164)
  %509 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %508, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  call void @llvm.stackrestore(i8* %16)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.3, align 4
  %8 = load i32, i32* @y.4, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 334286206, i32 1419700075
  %16 = select i1 %14, i32 1330082534, i32 1419700075
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -857437453, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 -857437453, label %18
    i32 -1347819107, label %.outer10.backedge
    i32 1330082534, label %.outer.backedge
    i32 334286206, label %21
    i32 -188393846, label %22
    i32 1355216989, label %23
    i32 1419700075, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -1347819107, i32 -188393846
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 1355216989, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 1355216989, %22 ], [ 1330082534, %24 ], [ %15, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #4

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #6 {
  %1 = alloca i1, align 1
  %2 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %3 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %4 = getelementptr i8, i8* %3, i64 -24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %6
  %8 = bitcast i8* %7 to %"class.std::basic_ios"*
  %9 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %8, %"class.std::basic_ostream"* null)
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.03.ph = phi i32 [ 1, %0 ], [ %.03.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -1945140293, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer5

.outer5:                                          ; preds = %.outer5.backedge, %.outer
  %.0.ph6 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph6.be, %.outer5.backedge ]
  br label %10

10:                                               ; preds = %.outer5, %10
  switch i32 %.0.ph6, label %10 [
    i32 -1945140293, label %11
    i32 2064037116, label %21
    i32 -526464822, label %32
    i32 -2050279124, label %34
    i32 2041102122, label %35
    i32 309034810, label %.outer.backedge
  ]

11:                                               ; preds = %10
  %12 = load i32, i32* @x.5, align 4
  %13 = load i32, i32* @y.6, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 2064037116, i32 309034810
  br label %.outer5.backedge

21:                                               ; preds = %10
  %22 = icmp ne i32 %.03.ph, 0
  store i1 %22, i1* %1, align 1
  %23 = load i32, i32* @x.5, align 4
  %24 = load i32, i32* @y.6, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 -526464822, i32 309034810
  br label %.outer.backedge

32:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %1, align 1
  %33 = select i1 %.0..0..0., i32 -2050279124, i32 2041102122
  br label %.outer5.backedge

34:                                               ; preds = %10
  tail call void @_Z5solvev()
  br label %.outer5.backedge

.outer5.backedge:                                 ; preds = %34, %32, %11
  %.0.ph6.be = phi i32 [ %20, %11 ], [ %33, %32 ], [ -1945140293, %34 ]
  br label %.outer5

35:                                               ; preds = %10
  ret i32 0

.outer.backedge:                                  ; preds = %10, %21
  %.0.ph.be = phi i32 [ %31, %21 ], [ 2064037116, %10 ]
  %.03.ph.be = add i32 %.03.ph, -1
  br label %.outer
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s393531645.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { mustprogress nofree nosync nounwind willreturn }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
