; ModuleID = 'build_ollvm/programs/p03837/s961351656.ll'
source_filename = "Project_CodeNet_C++1400/p03837/s961351656.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s961351656.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  br label %11

11:                                               ; preds = %.backedge, %0
  %.0193 = phi i8* [ undef, %0 ], [ %.0193.be, %.backedge ]
  %.0191 = phi i32 [ undef, %0 ], [ %.0191.be, %.backedge ]
  %.0189 = phi i32 [ undef, %0 ], [ %.0189.be, %.backedge ]
  %.0187 = phi i32 [ undef, %0 ], [ %.0187.be, %.backedge ]
  %.0185 = phi i32 [ undef, %0 ], [ %.0185.be, %.backedge ]
  %.0183 = phi i32 [ undef, %0 ], [ %.0183.be, %.backedge ]
  %.0181 = phi i32 [ undef, %0 ], [ %.0181.be, %.backedge ]
  %.0179 = phi i32 [ undef, %0 ], [ %.0179.be, %.backedge ]
  %.0177 = phi i32 [ undef, %0 ], [ %.0177.be, %.backedge ]
  %.0175 = phi i32 [ undef, %0 ], [ %.0175.be, %.backedge ]
  %.0173 = phi i8 [ undef, %0 ], [ %.0173.be, %.backedge ]
  %.0171 = phi i32 [ undef, %0 ], [ %.0171.be, %.backedge ]
  %.0 = phi i32 [ 1401878328, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1401878328, label %12
    i32 668709171, label %15
    i32 -1497243530, label %29
    i32 -203244675, label %32
    i32 545375816, label %33
    i32 136542991, label %43
    i32 -539385536, label %55
    i32 -345020120, label %57
    i32 -76366693, label %60
    i32 -245886517, label %70
    i32 124976325, label %84
    i32 1266758903, label %85
    i32 648303226, label %95
    i32 1772267075, label %109
    i32 -823349802, label %110
    i32 -930709397, label %111
    i32 885301966, label %121
    i32 -937348452, label %131
    i32 236856286, label %132
    i32 -1566433391, label %142
    i32 -1087547750, label %152
    i32 1024661526, label %153
    i32 834320978, label %155
    i32 1375736075, label %156
    i32 -1334752578, label %159
    i32 2088767479, label %165
    i32 -641754680, label %167
    i32 1498164636, label %177
    i32 201728038, label %187
    i32 401460213, label %188
    i32 481756294, label %191
    i32 -477192204, label %231
    i32 -1480951937, label %233
    i32 1330773675, label %243
    i32 -1479642320, label %253
    i32 -795831887, label %254
    i32 -1067510982, label %257
    i32 -1871590412, label %267
    i32 -946591188, label %277
    i32 -844771627, label %278
    i32 1184002837, label %281
    i32 1718106336, label %282
    i32 284045548, label %285
    i32 1095615388, label %295
    i32 -1067460689, label %321
    i32 1715406558, label %322
    i32 1879461408, label %324
    i32 -1263525769, label %334
    i32 -1119413583, label %344
    i32 387055521, label %345
    i32 1577302543, label %355
    i32 -348760923, label %366
    i32 -612391335, label %367
    i32 -1778739990, label %377
    i32 590390059, label %387
    i32 -1101151167, label %388
    i32 835600641, label %398
    i32 -296294444, label %409
    i32 -1354774442, label %410
    i32 1317672600, label %412
    i32 -1610716256, label %415
    i32 -2050080729, label %416
    i32 -1174597760, label %426
    i32 610070441, label %438
    i32 -655098680, label %440
    i32 940568706, label %460
    i32 234035710, label %461
    i32 497738996, label %462
    i32 543090745, label %464
    i32 1062854905, label %467
    i32 -1831007814, label %469
    i32 -157185837, label %470
    i32 1087088334, label %472
    i32 -831169715, label %482
    i32 -1617645879, label %493
    i32 1260102704, label %494
    i32 -684666067, label %495
    i32 1944841604, label %496
    i32 35226801, label %501
    i32 -171281694, label %506
    i32 -617495599, label %508
    i32 -1618924716, label %509
    i32 528192225, label %510
    i32 1889343544, label %511
    i32 -474228881, label %512
    i32 -1696499487, label %529
    i32 -560303925, label %530
    i32 1520948838, label %532
    i32 -1044654965, label %533
    i32 -889963988, label %535
    i32 2113878630, label %536
  ]

.backedge:                                        ; preds = %11, %536, %535, %533, %532, %530, %529, %512, %511, %510, %509, %508, %506, %501, %496, %495, %493, %482, %472, %470, %469, %467, %464, %462, %461, %460, %440, %438, %426, %416, %415, %412, %410, %409, %398, %388, %387, %377, %367, %366, %355, %345, %344, %334, %324, %322, %321, %295, %285, %282, %281, %278, %277, %267, %257, %254, %253, %243, %233, %231, %191, %188, %187, %177, %167, %165, %159, %156, %155, %153, %152, %142, %132, %131, %121, %111, %110, %109, %95, %85, %84, %70, %60, %57, %55, %43, %33, %32, %29, %15, %12
  %.0193.be = phi i8* [ %.0193, %11 ], [ %.0193, %536 ], [ %.0193, %535 ], [ %.0193, %533 ], [ %.0193, %532 ], [ %.0193, %530 ], [ %.0193, %529 ], [ %.0193, %512 ], [ %.0193, %511 ], [ %.0193, %510 ], [ %.0193, %509 ], [ %.0193, %508 ], [ %.0193, %506 ], [ %.0193, %501 ], [ %.0193, %496 ], [ %.0193, %495 ], [ %.0193, %493 ], [ %.0193, %482 ], [ %.0193, %472 ], [ %.0193, %470 ], [ %.0193, %469 ], [ %.0193, %467 ], [ %.0193, %464 ], [ %.0193, %462 ], [ %.0193, %461 ], [ %.0193, %460 ], [ %.0193, %440 ], [ %.0193, %438 ], [ %.0193, %426 ], [ %.0193, %416 ], [ %.0193, %415 ], [ %.0193, %412 ], [ %.0193, %410 ], [ %.0193, %409 ], [ %.0193, %398 ], [ %.0193, %388 ], [ %.0193, %387 ], [ %.0193, %377 ], [ %.0193, %367 ], [ %.0193, %366 ], [ %.0193, %355 ], [ %.0193, %345 ], [ %.0193, %344 ], [ %.0193, %334 ], [ %.0193, %324 ], [ %.0193, %322 ], [ %.0193, %321 ], [ %.0193, %295 ], [ %.0193, %285 ], [ %.0193, %282 ], [ %.0193, %281 ], [ %.0193, %278 ], [ %.0193, %277 ], [ %.0193, %267 ], [ %.0193, %257 ], [ %.0193, %254 ], [ %.0193, %253 ], [ %.0193, %243 ], [ %.0193, %233 ], [ %.0193, %231 ], [ %.0193, %191 ], [ %.0193, %188 ], [ %.0193, %187 ], [ %.0193, %177 ], [ %.0193, %167 ], [ %.0193, %165 ], [ %.0193, %159 ], [ %.0193, %156 ], [ %.0193, %155 ], [ %.0193, %153 ], [ %.0193, %152 ], [ %.0193, %142 ], [ %.0193, %132 ], [ %.0193, %131 ], [ %.0193, %121 ], [ %.0193, %111 ], [ %.0193, %110 ], [ %.0193, %109 ], [ %.0193, %95 ], [ %.0193, %85 ], [ %.0193, %84 ], [ %.0193, %70 ], [ %.0193, %60 ], [ %.0193, %57 ], [ %.0193, %55 ], [ %.0193, %43 ], [ %.0193, %33 ], [ %.0193, %32 ], [ %.0193, %29 ], [ %18, %15 ], [ %.0193, %12 ]
  %.0191.be = phi i32 [ %.0191, %11 ], [ %.0191, %536 ], [ %.0191, %535 ], [ %.0191, %533 ], [ %.0191, %532 ], [ %.0191, %530 ], [ %.0191, %529 ], [ %.0191, %512 ], [ %.0191, %511 ], [ %.0191, %510 ], [ %.0191, %509 ], [ %.0191, %508 ], [ %.0191, %506 ], [ %.0191, %501 ], [ %.0191, %496 ], [ %.0191, %495 ], [ %.0191, %493 ], [ %.0191, %482 ], [ %.0191, %472 ], [ %.0191, %470 ], [ %.0191, %469 ], [ %.0191, %467 ], [ %.0191, %464 ], [ %.0191, %462 ], [ %.0191, %461 ], [ %.0191, %460 ], [ %.0191, %440 ], [ %.0191, %438 ], [ %.0191, %426 ], [ %.0191, %416 ], [ %.0191, %415 ], [ %.0191, %412 ], [ %.0191, %410 ], [ %.0191, %409 ], [ %.0191, %398 ], [ %.0191, %388 ], [ %.0191, %387 ], [ %.0191, %377 ], [ %.0191, %367 ], [ %.0191, %366 ], [ %.0191, %355 ], [ %.0191, %345 ], [ %.0191, %344 ], [ %.0191, %334 ], [ %.0191, %324 ], [ %.0191, %322 ], [ %.0191, %321 ], [ %.0191, %295 ], [ %.0191, %285 ], [ %.0191, %282 ], [ %.0191, %281 ], [ %.0191, %278 ], [ %.0191, %277 ], [ %.0191, %267 ], [ %.0191, %257 ], [ %.0191, %254 ], [ %.0191, %253 ], [ %.0191, %243 ], [ %.0191, %233 ], [ %.0191, %231 ], [ %.0191, %191 ], [ %.0191, %188 ], [ %.0191, %187 ], [ %.0191, %177 ], [ %.0191, %167 ], [ %.0191, %165 ], [ %.0191, %159 ], [ %.0191, %156 ], [ %.0191, %155 ], [ %154, %153 ], [ %.0191, %152 ], [ %.0191, %142 ], [ %.0191, %132 ], [ %.0191, %131 ], [ %.0191, %121 ], [ %.0191, %111 ], [ %.0191, %110 ], [ %.0191, %109 ], [ %.0191, %95 ], [ %.0191, %85 ], [ %.0191, %84 ], [ %.0191, %70 ], [ %.0191, %60 ], [ %.0191, %57 ], [ %.0191, %55 ], [ %.0191, %43 ], [ %.0191, %33 ], [ %.0191, %32 ], [ %.0191, %29 ], [ 1, %15 ], [ %.0191, %12 ]
  %.0189.be = phi i32 [ %.0189, %11 ], [ %.0189, %536 ], [ %.0189, %535 ], [ %.0189, %533 ], [ %.0189, %532 ], [ %.0189, %530 ], [ %.0189, %529 ], [ %.0189, %512 ], [ %.0189, %511 ], [ %.0189, %510 ], [ %.0189, %509 ], [ %.0189, %508 ], [ %507, %506 ], [ %.0189, %501 ], [ %.0189, %496 ], [ %.0189, %495 ], [ %.0189, %493 ], [ %.0189, %482 ], [ %.0189, %472 ], [ %.0189, %470 ], [ %.0189, %469 ], [ %.0189, %467 ], [ %.0189, %464 ], [ %.0189, %462 ], [ %.0189, %461 ], [ %.0189, %460 ], [ %.0189, %440 ], [ %.0189, %438 ], [ %.0189, %426 ], [ %.0189, %416 ], [ %.0189, %415 ], [ %.0189, %412 ], [ %.0189, %410 ], [ %.0189, %409 ], [ %.0189, %398 ], [ %.0189, %388 ], [ %.0189, %387 ], [ %.0189, %377 ], [ %.0189, %367 ], [ %.0189, %366 ], [ %.0189, %355 ], [ %.0189, %345 ], [ %.0189, %344 ], [ %.0189, %334 ], [ %.0189, %324 ], [ %.0189, %322 ], [ %.0189, %321 ], [ %.0189, %295 ], [ %.0189, %285 ], [ %.0189, %282 ], [ %.0189, %281 ], [ %.0189, %278 ], [ %.0189, %277 ], [ %.0189, %267 ], [ %.0189, %257 ], [ %.0189, %254 ], [ %.0189, %253 ], [ %.0189, %243 ], [ %.0189, %233 ], [ %.0189, %231 ], [ %.0189, %191 ], [ %.0189, %188 ], [ %.0189, %187 ], [ %.0189, %177 ], [ %.0189, %167 ], [ %.0189, %165 ], [ %.0189, %159 ], [ %.0189, %156 ], [ %.0189, %155 ], [ %.0189, %153 ], [ %.0189, %152 ], [ %.0189, %142 ], [ %.0189, %132 ], [ %.0189, %131 ], [ %.neg, %121 ], [ %.0189, %111 ], [ %.0189, %110 ], [ %.0189, %109 ], [ %.0189, %95 ], [ %.0189, %85 ], [ %.0189, %84 ], [ %.0189, %70 ], [ %.0189, %60 ], [ %.0189, %57 ], [ %.0189, %55 ], [ %.0189, %43 ], [ %.0189, %33 ], [ 1, %32 ], [ %.0189, %29 ], [ %.0189, %15 ], [ %.0189, %12 ]
  %.0187.be = phi i32 [ %.0187, %11 ], [ %.0187, %536 ], [ %.0187, %535 ], [ %.0187, %533 ], [ %.0187, %532 ], [ %.0187, %530 ], [ %.0187, %529 ], [ %.0187, %512 ], [ %.0187, %511 ], [ %.0187, %510 ], [ %.0187, %509 ], [ %.0187, %508 ], [ %.0187, %506 ], [ %.0187, %501 ], [ %.0187, %496 ], [ %.0187, %495 ], [ %.0187, %493 ], [ %.0187, %482 ], [ %.0187, %472 ], [ %.0187, %470 ], [ %.0187, %469 ], [ %.0187, %467 ], [ %.0187, %464 ], [ %.0187, %462 ], [ %.0187, %461 ], [ %.0187, %460 ], [ %.0187, %440 ], [ %.0187, %438 ], [ %.0187, %426 ], [ %.0187, %416 ], [ %.0187, %415 ], [ %.0187, %412 ], [ %.0187, %410 ], [ %.0187, %409 ], [ %.0187, %398 ], [ %.0187, %388 ], [ %.0187, %387 ], [ %.0187, %377 ], [ %.0187, %367 ], [ %.0187, %366 ], [ %.0187, %355 ], [ %.0187, %345 ], [ %.0187, %344 ], [ %.0187, %334 ], [ %.0187, %324 ], [ %.0187, %322 ], [ %.0187, %321 ], [ %.0187, %295 ], [ %.0187, %285 ], [ %.0187, %282 ], [ %.0187, %281 ], [ %.0187, %278 ], [ %.0187, %277 ], [ %.0187, %267 ], [ %.0187, %257 ], [ %.0187, %254 ], [ %.0187, %253 ], [ %.0187, %243 ], [ %.0187, %233 ], [ %.0187, %231 ], [ %.0187, %191 ], [ %.0187, %188 ], [ %.0187, %187 ], [ %.0187, %177 ], [ %.0187, %167 ], [ %166, %165 ], [ %.0187, %159 ], [ %.0187, %156 ], [ 1, %155 ], [ %.0187, %153 ], [ %.0187, %152 ], [ %.0187, %142 ], [ %.0187, %132 ], [ %.0187, %131 ], [ %.0187, %121 ], [ %.0187, %111 ], [ %.0187, %110 ], [ %.0187, %109 ], [ %.0187, %95 ], [ %.0187, %85 ], [ %.0187, %84 ], [ %.0187, %70 ], [ %.0187, %60 ], [ %.0187, %57 ], [ %.0187, %55 ], [ %.0187, %43 ], [ %.0187, %33 ], [ %.0187, %32 ], [ %.0187, %29 ], [ %.0187, %15 ], [ %.0187, %12 ]
  %.0185.be = phi i32 [ %.0185, %11 ], [ %.0185, %536 ], [ %.0185, %535 ], [ %.0185, %533 ], [ %.0185, %532 ], [ %.0185, %530 ], [ %.0185, %529 ], [ %.0185, %512 ], [ %.0185, %511 ], [ %.0185, %510 ], [ 1, %509 ], [ %.0185, %508 ], [ %.0185, %506 ], [ %.0185, %501 ], [ %.0185, %496 ], [ %.0185, %495 ], [ %.0185, %493 ], [ %.0185, %482 ], [ %.0185, %472 ], [ %.0185, %470 ], [ %.0185, %469 ], [ %.0185, %467 ], [ %.0185, %464 ], [ %.0185, %462 ], [ %.0185, %461 ], [ %.0185, %460 ], [ %.0185, %440 ], [ %.0185, %438 ], [ %.0185, %426 ], [ %.0185, %416 ], [ %.0185, %415 ], [ %.0185, %412 ], [ %.0185, %410 ], [ %.0185, %409 ], [ %.0185, %398 ], [ %.0185, %388 ], [ %.0185, %387 ], [ %.0185, %377 ], [ %.0185, %367 ], [ %.0185, %366 ], [ %.0185, %355 ], [ %.0185, %345 ], [ %.0185, %344 ], [ %.0185, %334 ], [ %.0185, %324 ], [ %.0185, %322 ], [ %.0185, %321 ], [ %.0185, %295 ], [ %.0185, %285 ], [ %.0185, %282 ], [ %.0185, %281 ], [ %.0185, %278 ], [ %.0185, %277 ], [ %.0185, %267 ], [ %.0185, %257 ], [ %.0185, %254 ], [ %.0185, %253 ], [ %.0185, %243 ], [ %.0185, %233 ], [ %232, %231 ], [ %.0185, %191 ], [ %.0185, %188 ], [ %.0185, %187 ], [ 1, %177 ], [ %.0185, %167 ], [ %.0185, %165 ], [ %.0185, %159 ], [ %.0185, %156 ], [ %.0185, %155 ], [ %.0185, %153 ], [ %.0185, %152 ], [ %.0185, %142 ], [ %.0185, %132 ], [ %.0185, %131 ], [ %.0185, %121 ], [ %.0185, %111 ], [ %.0185, %110 ], [ %.0185, %109 ], [ %.0185, %95 ], [ %.0185, %85 ], [ %.0185, %84 ], [ %.0185, %70 ], [ %.0185, %60 ], [ %.0185, %57 ], [ %.0185, %55 ], [ %.0185, %43 ], [ %.0185, %33 ], [ %.0185, %32 ], [ %.0185, %29 ], [ %.0185, %15 ], [ %.0185, %12 ]
  %.0183.be = phi i32 [ %.0183, %11 ], [ %.0183, %536 ], [ %.0183, %535 ], [ %534, %533 ], [ %.0183, %532 ], [ %.0183, %530 ], [ %.0183, %529 ], [ %.0183, %512 ], [ %.0183, %511 ], [ 1, %510 ], [ %.0183, %509 ], [ %.0183, %508 ], [ %.0183, %506 ], [ %.0183, %501 ], [ %.0183, %496 ], [ %.0183, %495 ], [ %.0183, %493 ], [ %.0183, %482 ], [ %.0183, %472 ], [ %.0183, %470 ], [ %.0183, %469 ], [ %.0183, %467 ], [ %.0183, %464 ], [ %.0183, %462 ], [ %.0183, %461 ], [ %.0183, %460 ], [ %.0183, %440 ], [ %.0183, %438 ], [ %.0183, %426 ], [ %.0183, %416 ], [ %.0183, %415 ], [ %.0183, %412 ], [ %.0183, %410 ], [ %.0183, %409 ], [ %399, %398 ], [ %.0183, %388 ], [ %.0183, %387 ], [ %.0183, %377 ], [ %.0183, %367 ], [ %.0183, %366 ], [ %.0183, %355 ], [ %.0183, %345 ], [ %.0183, %344 ], [ %.0183, %334 ], [ %.0183, %324 ], [ %.0183, %322 ], [ %.0183, %321 ], [ %.0183, %295 ], [ %.0183, %285 ], [ %.0183, %282 ], [ %.0183, %281 ], [ %.0183, %278 ], [ %.0183, %277 ], [ %.0183, %267 ], [ %.0183, %257 ], [ %.0183, %254 ], [ %.0183, %253 ], [ 1, %243 ], [ %.0183, %233 ], [ %.0183, %231 ], [ %.0183, %191 ], [ %.0183, %188 ], [ %.0183, %187 ], [ %.0183, %177 ], [ %.0183, %167 ], [ %.0183, %165 ], [ %.0183, %159 ], [ %.0183, %156 ], [ %.0183, %155 ], [ %.0183, %153 ], [ %.0183, %152 ], [ %.0183, %142 ], [ %.0183, %132 ], [ %.0183, %131 ], [ %.0183, %121 ], [ %.0183, %111 ], [ %.0183, %110 ], [ %.0183, %109 ], [ %.0183, %95 ], [ %.0183, %85 ], [ %.0183, %84 ], [ %.0183, %70 ], [ %.0183, %60 ], [ %.0183, %57 ], [ %.0183, %55 ], [ %.0183, %43 ], [ %.0183, %33 ], [ %.0183, %32 ], [ %.0183, %29 ], [ %.0183, %15 ], [ %.0183, %12 ]
  %.0181.be = phi i32 [ %.0181, %11 ], [ %.0181, %536 ], [ %.0181, %535 ], [ %.0181, %533 ], [ %.0181, %532 ], [ %531, %530 ], [ %.0181, %529 ], [ %.0181, %512 ], [ 1, %511 ], [ %.0181, %510 ], [ %.0181, %509 ], [ %.0181, %508 ], [ %.0181, %506 ], [ %.0181, %501 ], [ %.0181, %496 ], [ %.0181, %495 ], [ %.0181, %493 ], [ %.0181, %482 ], [ %.0181, %472 ], [ %.0181, %470 ], [ %.0181, %469 ], [ %.0181, %467 ], [ %.0181, %464 ], [ %.0181, %462 ], [ %.0181, %461 ], [ %.0181, %460 ], [ %.0181, %440 ], [ %.0181, %438 ], [ %.0181, %426 ], [ %.0181, %416 ], [ %.0181, %415 ], [ %.0181, %412 ], [ %.0181, %410 ], [ %.0181, %409 ], [ %.0181, %398 ], [ %.0181, %388 ], [ %.0181, %387 ], [ %.0181, %377 ], [ %.0181, %367 ], [ %.0181, %366 ], [ %356, %355 ], [ %.0181, %345 ], [ %.0181, %344 ], [ %.0181, %334 ], [ %.0181, %324 ], [ %.0181, %322 ], [ %.0181, %321 ], [ %.0181, %295 ], [ %.0181, %285 ], [ %.0181, %282 ], [ %.0181, %281 ], [ %.0181, %278 ], [ %.0181, %277 ], [ 1, %267 ], [ %.0181, %257 ], [ %.0181, %254 ], [ %.0181, %253 ], [ %.0181, %243 ], [ %.0181, %233 ], [ %.0181, %231 ], [ %.0181, %191 ], [ %.0181, %188 ], [ %.0181, %187 ], [ %.0181, %177 ], [ %.0181, %167 ], [ %.0181, %165 ], [ %.0181, %159 ], [ %.0181, %156 ], [ %.0181, %155 ], [ %.0181, %153 ], [ %.0181, %152 ], [ %.0181, %142 ], [ %.0181, %132 ], [ %.0181, %131 ], [ %.0181, %121 ], [ %.0181, %111 ], [ %.0181, %110 ], [ %.0181, %109 ], [ %.0181, %95 ], [ %.0181, %85 ], [ %.0181, %84 ], [ %.0181, %70 ], [ %.0181, %60 ], [ %.0181, %57 ], [ %.0181, %55 ], [ %.0181, %43 ], [ %.0181, %33 ], [ %.0181, %32 ], [ %.0181, %29 ], [ %.0181, %15 ], [ %.0181, %12 ]
  %.0179.be = phi i32 [ %.0179, %11 ], [ %.0179, %536 ], [ %.0179, %535 ], [ %.0179, %533 ], [ %.0179, %532 ], [ %.0179, %530 ], [ %.0179, %529 ], [ %.0179, %512 ], [ %.0179, %511 ], [ %.0179, %510 ], [ %.0179, %509 ], [ %.0179, %508 ], [ %.0179, %506 ], [ %.0179, %501 ], [ %.0179, %496 ], [ %.0179, %495 ], [ %.0179, %493 ], [ %.0179, %482 ], [ %.0179, %472 ], [ %.0179, %470 ], [ %.0179, %469 ], [ %.0179, %467 ], [ %.0179, %464 ], [ %.0179, %462 ], [ %.0179, %461 ], [ %.0179, %460 ], [ %.0179, %440 ], [ %.0179, %438 ], [ %.0179, %426 ], [ %.0179, %416 ], [ %.0179, %415 ], [ %.0179, %412 ], [ %.0179, %410 ], [ %.0179, %409 ], [ %.0179, %398 ], [ %.0179, %388 ], [ %.0179, %387 ], [ %.0179, %377 ], [ %.0179, %367 ], [ %.0179, %366 ], [ %.0179, %355 ], [ %.0179, %345 ], [ %.0179, %344 ], [ %.0179, %334 ], [ %.0179, %324 ], [ %323, %322 ], [ %.0179, %321 ], [ %.0179, %295 ], [ %.0179, %285 ], [ %.0179, %282 ], [ 1, %281 ], [ %.0179, %278 ], [ %.0179, %277 ], [ %.0179, %267 ], [ %.0179, %257 ], [ %.0179, %254 ], [ %.0179, %253 ], [ %.0179, %243 ], [ %.0179, %233 ], [ %.0179, %231 ], [ %.0179, %191 ], [ %.0179, %188 ], [ %.0179, %187 ], [ %.0179, %177 ], [ %.0179, %167 ], [ %.0179, %165 ], [ %.0179, %159 ], [ %.0179, %156 ], [ %.0179, %155 ], [ %.0179, %153 ], [ %.0179, %152 ], [ %.0179, %142 ], [ %.0179, %132 ], [ %.0179, %131 ], [ %.0179, %121 ], [ %.0179, %111 ], [ %.0179, %110 ], [ %.0179, %109 ], [ %.0179, %95 ], [ %.0179, %85 ], [ %.0179, %84 ], [ %.0179, %70 ], [ %.0179, %60 ], [ %.0179, %57 ], [ %.0179, %55 ], [ %.0179, %43 ], [ %.0179, %33 ], [ %.0179, %32 ], [ %.0179, %29 ], [ %.0179, %15 ], [ %.0179, %12 ]
  %.0177.be = phi i32 [ %.0177, %11 ], [ %.0177, %536 ], [ %.0177, %535 ], [ %.0177, %533 ], [ %.0177, %532 ], [ %.0177, %530 ], [ %.0177, %529 ], [ %.0177, %512 ], [ %.0177, %511 ], [ %.0177, %510 ], [ %.0177, %509 ], [ %.0177, %508 ], [ %.0177, %506 ], [ %.0177, %501 ], [ %.0177, %496 ], [ %.0177, %495 ], [ %.0177, %493 ], [ %.0177, %482 ], [ %.0177, %472 ], [ %.0177, %470 ], [ %.0177, %469 ], [ %468, %467 ], [ %.0177, %464 ], [ %.0177, %462 ], [ %.0177, %461 ], [ %.0177, %460 ], [ %.0177, %440 ], [ %.0177, %438 ], [ %.0177, %426 ], [ %.0177, %416 ], [ %.0177, %415 ], [ %.0177, %412 ], [ %411, %410 ], [ %.0177, %409 ], [ %.0177, %398 ], [ %.0177, %388 ], [ %.0177, %387 ], [ %.0177, %377 ], [ %.0177, %367 ], [ %.0177, %366 ], [ %.0177, %355 ], [ %.0177, %345 ], [ %.0177, %344 ], [ %.0177, %334 ], [ %.0177, %324 ], [ %.0177, %322 ], [ %.0177, %321 ], [ %.0177, %295 ], [ %.0177, %285 ], [ %.0177, %282 ], [ %.0177, %281 ], [ %.0177, %278 ], [ %.0177, %277 ], [ %.0177, %267 ], [ %.0177, %257 ], [ %.0177, %254 ], [ %.0177, %253 ], [ %.0177, %243 ], [ %.0177, %233 ], [ %.0177, %231 ], [ %.0177, %191 ], [ %.0177, %188 ], [ %.0177, %187 ], [ %.0177, %177 ], [ %.0177, %167 ], [ %.0177, %165 ], [ %.0177, %159 ], [ %.0177, %156 ], [ %.0177, %155 ], [ %.0177, %153 ], [ %.0177, %152 ], [ %.0177, %142 ], [ %.0177, %132 ], [ %.0177, %131 ], [ %.0177, %121 ], [ %.0177, %111 ], [ %.0177, %110 ], [ %.0177, %109 ], [ %.0177, %95 ], [ %.0177, %85 ], [ %.0177, %84 ], [ %.0177, %70 ], [ %.0177, %60 ], [ %.0177, %57 ], [ %.0177, %55 ], [ %.0177, %43 ], [ %.0177, %33 ], [ %.0177, %32 ], [ %.0177, %29 ], [ %.0177, %15 ], [ %.0177, %12 ]
  %.0175.be = phi i32 [ %.0175, %11 ], [ %.0175, %536 ], [ %.0175, %535 ], [ %.0175, %533 ], [ %.0175, %532 ], [ %.0175, %530 ], [ %.0175, %529 ], [ %.0175, %512 ], [ %.0175, %511 ], [ %.0175, %510 ], [ %.0175, %509 ], [ %.0175, %508 ], [ %.0175, %506 ], [ %.0175, %501 ], [ %.0175, %496 ], [ %.0175, %495 ], [ %.0175, %493 ], [ %.0175, %482 ], [ %.0175, %472 ], [ %471, %470 ], [ %.0175, %469 ], [ %.0175, %467 ], [ %.0175, %464 ], [ %.0175, %462 ], [ %.0175, %461 ], [ %.0175, %460 ], [ %.0175, %440 ], [ %.0175, %438 ], [ %.0175, %426 ], [ %.0175, %416 ], [ %.0175, %415 ], [ %.0175, %412 ], [ 1, %410 ], [ %.0175, %409 ], [ %.0175, %398 ], [ %.0175, %388 ], [ %.0175, %387 ], [ %.0175, %377 ], [ %.0175, %367 ], [ %.0175, %366 ], [ %.0175, %355 ], [ %.0175, %345 ], [ %.0175, %344 ], [ %.0175, %334 ], [ %.0175, %324 ], [ %.0175, %322 ], [ %.0175, %321 ], [ %.0175, %295 ], [ %.0175, %285 ], [ %.0175, %282 ], [ %.0175, %281 ], [ %.0175, %278 ], [ %.0175, %277 ], [ %.0175, %267 ], [ %.0175, %257 ], [ %.0175, %254 ], [ %.0175, %253 ], [ %.0175, %243 ], [ %.0175, %233 ], [ %.0175, %231 ], [ %.0175, %191 ], [ %.0175, %188 ], [ %.0175, %187 ], [ %.0175, %177 ], [ %.0175, %167 ], [ %.0175, %165 ], [ %.0175, %159 ], [ %.0175, %156 ], [ %.0175, %155 ], [ %.0175, %153 ], [ %.0175, %152 ], [ %.0175, %142 ], [ %.0175, %132 ], [ %.0175, %131 ], [ %.0175, %121 ], [ %.0175, %111 ], [ %.0175, %110 ], [ %.0175, %109 ], [ %.0175, %95 ], [ %.0175, %85 ], [ %.0175, %84 ], [ %.0175, %70 ], [ %.0175, %60 ], [ %.0175, %57 ], [ %.0175, %55 ], [ %.0175, %43 ], [ %.0175, %33 ], [ %.0175, %32 ], [ %.0175, %29 ], [ %.0175, %15 ], [ %.0175, %12 ]
  %.0173.be = phi i8 [ %.0173, %11 ], [ %.0173, %536 ], [ %.0173, %535 ], [ %.0173, %533 ], [ %.0173, %532 ], [ %.0173, %530 ], [ %.0173, %529 ], [ %.0173, %512 ], [ %.0173, %511 ], [ %.0173, %510 ], [ %.0173, %509 ], [ %.0173, %508 ], [ %.0173, %506 ], [ %.0173, %501 ], [ %.0173, %496 ], [ %.0173, %495 ], [ %.0173, %493 ], [ %.0173, %482 ], [ %.0173, %472 ], [ %.0173, %470 ], [ %.0173, %469 ], [ %.0173, %467 ], [ %.0173, %464 ], [ %.0173, %462 ], [ %.0173, %461 ], [ 1, %460 ], [ %.0173, %440 ], [ %.0173, %438 ], [ %.0173, %426 ], [ %.0173, %416 ], [ 0, %415 ], [ %.0173, %412 ], [ %.0173, %410 ], [ %.0173, %409 ], [ %.0173, %398 ], [ %.0173, %388 ], [ %.0173, %387 ], [ %.0173, %377 ], [ %.0173, %367 ], [ %.0173, %366 ], [ %.0173, %355 ], [ %.0173, %345 ], [ %.0173, %344 ], [ %.0173, %334 ], [ %.0173, %324 ], [ %.0173, %322 ], [ %.0173, %321 ], [ %.0173, %295 ], [ %.0173, %285 ], [ %.0173, %282 ], [ %.0173, %281 ], [ %.0173, %278 ], [ %.0173, %277 ], [ %.0173, %267 ], [ %.0173, %257 ], [ %.0173, %254 ], [ %.0173, %253 ], [ %.0173, %243 ], [ %.0173, %233 ], [ %.0173, %231 ], [ %.0173, %191 ], [ %.0173, %188 ], [ %.0173, %187 ], [ %.0173, %177 ], [ %.0173, %167 ], [ %.0173, %165 ], [ %.0173, %159 ], [ %.0173, %156 ], [ %.0173, %155 ], [ %.0173, %153 ], [ %.0173, %152 ], [ %.0173, %142 ], [ %.0173, %132 ], [ %.0173, %131 ], [ %.0173, %121 ], [ %.0173, %111 ], [ %.0173, %110 ], [ %.0173, %109 ], [ %.0173, %95 ], [ %.0173, %85 ], [ %.0173, %84 ], [ %.0173, %70 ], [ %.0173, %60 ], [ %.0173, %57 ], [ %.0173, %55 ], [ %.0173, %43 ], [ %.0173, %33 ], [ %.0173, %32 ], [ %.0173, %29 ], [ %.0173, %15 ], [ %.0173, %12 ]
  %.0171.be = phi i32 [ %.0171, %11 ], [ %.0171, %536 ], [ %.0171, %535 ], [ %.0171, %533 ], [ %.0171, %532 ], [ %.0171, %530 ], [ %.0171, %529 ], [ %.0171, %512 ], [ %.0171, %511 ], [ %.0171, %510 ], [ %.0171, %509 ], [ %.0171, %508 ], [ %.0171, %506 ], [ %.0171, %501 ], [ %.0171, %496 ], [ %.0171, %495 ], [ %.0171, %493 ], [ %.0171, %482 ], [ %.0171, %472 ], [ %.0171, %470 ], [ %.0171, %469 ], [ %.0171, %467 ], [ %.0171, %464 ], [ %463, %462 ], [ %.0171, %461 ], [ %.0171, %460 ], [ %.0171, %440 ], [ %.0171, %438 ], [ %.0171, %426 ], [ %.0171, %416 ], [ 1, %415 ], [ %.0171, %412 ], [ %.0171, %410 ], [ %.0171, %409 ], [ %.0171, %398 ], [ %.0171, %388 ], [ %.0171, %387 ], [ %.0171, %377 ], [ %.0171, %367 ], [ %.0171, %366 ], [ %.0171, %355 ], [ %.0171, %345 ], [ %.0171, %344 ], [ %.0171, %334 ], [ %.0171, %324 ], [ %.0171, %322 ], [ %.0171, %321 ], [ %.0171, %295 ], [ %.0171, %285 ], [ %.0171, %282 ], [ %.0171, %281 ], [ %.0171, %278 ], [ %.0171, %277 ], [ %.0171, %267 ], [ %.0171, %257 ], [ %.0171, %254 ], [ %.0171, %253 ], [ %.0171, %243 ], [ %.0171, %233 ], [ %.0171, %231 ], [ %.0171, %191 ], [ %.0171, %188 ], [ %.0171, %187 ], [ %.0171, %177 ], [ %.0171, %167 ], [ %.0171, %165 ], [ %.0171, %159 ], [ %.0171, %156 ], [ %.0171, %155 ], [ %.0171, %153 ], [ %.0171, %152 ], [ %.0171, %142 ], [ %.0171, %132 ], [ %.0171, %131 ], [ %.0171, %121 ], [ %.0171, %111 ], [ %.0171, %110 ], [ %.0171, %109 ], [ %.0171, %95 ], [ %.0171, %85 ], [ %.0171, %84 ], [ %.0171, %70 ], [ %.0171, %60 ], [ %.0171, %57 ], [ %.0171, %55 ], [ %.0171, %43 ], [ %.0171, %33 ], [ %.0171, %32 ], [ %.0171, %29 ], [ %.0171, %15 ], [ %.0171, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ -831169715, %536 ], [ -1174597760, %535 ], [ 835600641, %533 ], [ -1778739990, %532 ], [ 1577302543, %530 ], [ -1263525769, %529 ], [ 1095615388, %512 ], [ -1871590412, %511 ], [ 1330773675, %510 ], [ 1498164636, %509 ], [ -1566433391, %508 ], [ 885301966, %506 ], [ 648303226, %501 ], [ -245886517, %496 ], [ 136542991, %495 ], [ 1401878328, %493 ], [ %492, %482 ], [ %481, %472 ], [ 1317672600, %470 ], [ -157185837, %469 ], [ -1831007814, %467 ], [ %466, %464 ], [ -2050080729, %462 ], [ 497738996, %461 ], [ 234035710, %460 ], [ %459, %440 ], [ %439, %438 ], [ %437, %426 ], [ %425, %416 ], [ -2050080729, %415 ], [ %414, %412 ], [ 1317672600, %410 ], [ -795831887, %409 ], [ %408, %398 ], [ %397, %388 ], [ -1101151167, %387 ], [ %386, %377 ], [ %376, %367 ], [ -844771627, %366 ], [ %365, %355 ], [ %354, %345 ], [ 387055521, %344 ], [ %343, %334 ], [ %333, %324 ], [ 1718106336, %322 ], [ 1715406558, %321 ], [ %320, %295 ], [ %294, %285 ], [ %284, %282 ], [ 1718106336, %281 ], [ %280, %278 ], [ -844771627, %277 ], [ %276, %267 ], [ %266, %257 ], [ %256, %254 ], [ -795831887, %253 ], [ %252, %243 ], [ %242, %233 ], [ 401460213, %231 ], [ -477192204, %191 ], [ %190, %188 ], [ 401460213, %187 ], [ %186, %177 ], [ %176, %167 ], [ 1375736075, %165 ], [ 2088767479, %159 ], [ %158, %156 ], [ 1375736075, %155 ], [ -1497243530, %153 ], [ 1024661526, %152 ], [ %151, %142 ], [ %141, %132 ], [ 545375816, %131 ], [ %130, %121 ], [ %120, %111 ], [ -930709397, %110 ], [ -823349802, %109 ], [ %108, %95 ], [ %94, %85 ], [ -823349802, %84 ], [ %83, %70 ], [ %69, %60 ], [ %59, %57 ], [ %56, %55 ], [ %54, %43 ], [ %42, %33 ], [ 545375816, %32 ], [ %31, %29 ], [ -1497243530, %15 ], [ %14, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull %8, i32* nonnull %9)
  %.not221 = icmp eq i32 %13, -1
  %14 = select i1 %.not221, i32 1260102704, i32 668709171
  br label %.backedge

15:                                               ; preds = %11
  %16 = load i32, i32* %9, align 4
  %.neg219 = add i32 %16, 5
  %17 = zext i32 %.neg219 to i64
  %18 = call i8* @llvm.stacksave()
  %19 = alloca i32, i64 %17, align 16
  store i32* %19, i32** %7, align 8
  %20 = load i32, i32* %9, align 4
  %.neg220 = add i32 %20, 5
  %21 = zext i32 %.neg220 to i64
  %22 = alloca i32, i64 %21, align 16
  store i32* %22, i32** %6, align 8
  %23 = alloca i32, i64 %21, align 16
  store i32* %23, i32** %5, align 8
  %24 = load i32, i32* %8, align 4
  %25 = add i32 %24, 5
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %4, align 8
  %.0..0..0.89 = load volatile i64, i64* %4, align 8
  %27 = mul nuw i64 %.0..0..0.89, %26
  %28 = alloca i32, i64 %27, align 16
  store i32* %28, i32** %3, align 8
  br label %.backedge

29:                                               ; preds = %11
  %30 = load i32, i32* %8, align 4
  %.not218 = icmp sgt i32 %.0191, %30
  %31 = select i1 %.not218, i32 834320978, i32 -203244675
  br label %.backedge

32:                                               ; preds = %11
  br label %.backedge

33:                                               ; preds = %11
  %34 = load i32, i32* @x.3, align 4
  %35 = load i32, i32* @y.4, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 136542991, i32 -684666067
  br label %.backedge

43:                                               ; preds = %11
  %44 = load i32, i32* %8, align 4
  %45 = icmp sle i32 %.0189, %44
  store i1 %45, i1* %2, align 1
  %46 = load i32, i32* @x.3, align 4
  %47 = load i32, i32* @y.4, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -539385536, i32 -684666067
  br label %.backedge

55:                                               ; preds = %11
  %.0..0..0.169 = load volatile i1, i1* %2, align 1
  %56 = select i1 %.0..0..0.169, i32 -345020120, i32 236856286
  br label %.backedge

57:                                               ; preds = %11
  %58 = icmp eq i32 %.0191, %.0189
  %59 = select i1 %58, i32 -76366693, i32 1266758903
  br label %.backedge

60:                                               ; preds = %11
  %61 = load i32, i32* @x.3, align 4
  %62 = load i32, i32* @y.4, align 4
  %63 = add i32 %61, -1
  %64 = mul i32 %63, %61
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %67, %66
  %69 = select i1 %68, i32 -245886517, i32 1944841604
  br label %.backedge

70:                                               ; preds = %11
  %71 = sext i32 %.0191 to i64
  %.0..0..0.90 = load volatile i64, i64* %4, align 8
  %72 = mul nsw i64 %.0..0..0.90, %71
  %.0..0..0.151 = load volatile i32*, i32** %3, align 8
  %73 = sext i32 %.0189 to i64
  %.idx217 = add nsw i64 %72, %73
  %74 = getelementptr inbounds i32, i32* %.0..0..0.151, i64 %.idx217
  store i32 0, i32* %74, align 4
  %75 = load i32, i32* @x.3, align 4
  %76 = load i32, i32* @y.4, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 124976325, i32 1944841604
  br label %.backedge

84:                                               ; preds = %11
  br label %.backedge

85:                                               ; preds = %11
  %86 = load i32, i32* @x.3, align 4
  %87 = load i32, i32* @y.4, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 648303226, i32 35226801
  br label %.backedge

95:                                               ; preds = %11
  %96 = sext i32 %.0191 to i64
  %.0..0..0.91 = load volatile i64, i64* %4, align 8
  %97 = mul nsw i64 %.0..0..0.91, %96
  %.0..0..0.152 = load volatile i32*, i32** %3, align 8
  %98 = sext i32 %.0189 to i64
  %.idx216 = add nsw i64 %97, %98
  %99 = getelementptr inbounds i32, i32* %.0..0..0.152, i64 %.idx216
  store i32 100000000, i32* %99, align 4
  %100 = load i32, i32* @x.3, align 4
  %101 = load i32, i32* @y.4, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 1772267075, i32 35226801
  br label %.backedge

109:                                              ; preds = %11
  br label %.backedge

110:                                              ; preds = %11
  br label %.backedge

111:                                              ; preds = %11
  %112 = load i32, i32* @x.3, align 4
  %113 = load i32, i32* @y.4, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 885301966, i32 -171281694
  br label %.backedge

121:                                              ; preds = %11
  %.neg = add i32 %.0189, 1
  %122 = load i32, i32* @x.3, align 4
  %123 = load i32, i32* @y.4, align 4
  %124 = add i32 %122, -1
  %125 = mul i32 %124, %122
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %128, %127
  %130 = select i1 %129, i32 -937348452, i32 -171281694
  br label %.backedge

131:                                              ; preds = %11
  br label %.backedge

132:                                              ; preds = %11
  %133 = load i32, i32* @x.3, align 4
  %134 = load i32, i32* @y.4, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 -1566433391, i32 -617495599
  br label %.backedge

142:                                              ; preds = %11
  %143 = load i32, i32* @x.3, align 4
  %144 = load i32, i32* @y.4, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 -1087547750, i32 -617495599
  br label %.backedge

152:                                              ; preds = %11
  br label %.backedge

153:                                              ; preds = %11
  %154 = add i32 %.0191, 1
  br label %.backedge

155:                                              ; preds = %11
  br label %.backedge

156:                                              ; preds = %11
  %157 = load i32, i32* %9, align 4
  %.not215 = icmp sgt i32 %.0187, %157
  %158 = select i1 %.not215, i32 -641754680, i32 -1334752578
  br label %.backedge

159:                                              ; preds = %11
  %160 = sext i32 %.0187 to i64
  %.0..0..0.73 = load volatile i32*, i32** %7, align 8
  %161 = getelementptr inbounds i32, i32* %.0..0..0.73, i64 %160
  %.0..0..0.79 = load volatile i32*, i32** %6, align 8
  %162 = getelementptr inbounds i32, i32* %.0..0..0.79, i64 %160
  %.0..0..0.85 = load volatile i32*, i32** %5, align 8
  %163 = getelementptr inbounds i32, i32* %.0..0..0.85, i64 %160
  %164 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32* %161, i32* %162, i32* %163)
  br label %.backedge

165:                                              ; preds = %11
  %166 = add i32 %.0187, 1
  br label %.backedge

167:                                              ; preds = %11
  %168 = load i32, i32* @x.3, align 4
  %169 = load i32, i32* @y.4, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 1498164636, i32 -1618924716
  br label %.backedge

177:                                              ; preds = %11
  %178 = load i32, i32* @x.3, align 4
  %179 = load i32, i32* @y.4, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 201728038, i32 -1618924716
  br label %.backedge

187:                                              ; preds = %11
  br label %.backedge

188:                                              ; preds = %11
  %189 = load i32, i32* %9, align 4
  %.not214 = icmp sgt i32 %.0185, %189
  %190 = select i1 %.not214, i32 -1480951937, i32 481756294
  br label %.backedge

191:                                              ; preds = %11
  %192 = sext i32 %.0185 to i64
  %.0..0..0.74 = load volatile i32*, i32** %7, align 8
  %193 = getelementptr inbounds i32, i32* %.0..0..0.74, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %.0..0..0.92 = load volatile i64, i64* %4, align 8
  %196 = mul nsw i64 %.0..0..0.92, %195
  %.0..0..0.153 = load volatile i32*, i32** %3, align 8
  %.0..0..0.80 = load volatile i32*, i32** %6, align 8
  %197 = getelementptr inbounds i32, i32* %.0..0..0.80, i64 %192
  %198 = load i32, i32* %197, align 4
  %199 = sext i32 %198 to i64
  %.idx210 = add nsw i64 %196, %199
  %200 = getelementptr inbounds i32, i32* %.0..0..0.153, i64 %.idx210
  %.0..0..0.86 = load volatile i32*, i32** %5, align 8
  %201 = getelementptr inbounds i32, i32* %.0..0..0.86, i64 %192
  %202 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %200, i32* dereferenceable(4) %201)
  %203 = load i32, i32* %202, align 4
  %.0..0..0.75 = load volatile i32*, i32** %7, align 8
  %204 = getelementptr inbounds i32, i32* %.0..0..0.75, i64 %192
  %205 = load i32, i32* %204, align 4
  %206 = sext i32 %205 to i64
  %.0..0..0.93 = load volatile i64, i64* %4, align 8
  %207 = mul nsw i64 %.0..0..0.93, %206
  %.0..0..0.154 = load volatile i32*, i32** %3, align 8
  %.0..0..0.81 = load volatile i32*, i32** %6, align 8
  %208 = getelementptr inbounds i32, i32* %.0..0..0.81, i64 %192
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %209 to i64
  %.idx211 = add nsw i64 %207, %210
  %211 = getelementptr inbounds i32, i32* %.0..0..0.154, i64 %.idx211
  store i32 %203, i32* %211, align 4
  %.0..0..0.82 = load volatile i32*, i32** %6, align 8
  %212 = getelementptr inbounds i32, i32* %.0..0..0.82, i64 %192
  %213 = load i32, i32* %212, align 4
  %214 = sext i32 %213 to i64
  %.0..0..0.94 = load volatile i64, i64* %4, align 8
  %215 = mul nsw i64 %.0..0..0.94, %214
  %.0..0..0.155 = load volatile i32*, i32** %3, align 8
  %.0..0..0.76 = load volatile i32*, i32** %7, align 8
  %216 = getelementptr inbounds i32, i32* %.0..0..0.76, i64 %192
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %.idx212 = add nsw i64 %215, %218
  %219 = getelementptr inbounds i32, i32* %.0..0..0.155, i64 %.idx212
  %.0..0..0.87 = load volatile i32*, i32** %5, align 8
  %220 = getelementptr inbounds i32, i32* %.0..0..0.87, i64 %192
  %221 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %219, i32* dereferenceable(4) %220)
  %222 = load i32, i32* %221, align 4
  %.0..0..0.83 = load volatile i32*, i32** %6, align 8
  %223 = getelementptr inbounds i32, i32* %.0..0..0.83, i64 %192
  %224 = load i32, i32* %223, align 4
  %225 = sext i32 %224 to i64
  %.0..0..0.95 = load volatile i64, i64* %4, align 8
  %226 = mul nsw i64 %.0..0..0.95, %225
  %.0..0..0.156 = load volatile i32*, i32** %3, align 8
  %.0..0..0.77 = load volatile i32*, i32** %7, align 8
  %227 = getelementptr inbounds i32, i32* %.0..0..0.77, i64 %192
  %228 = load i32, i32* %227, align 4
  %229 = sext i32 %228 to i64
  %.idx213 = add nsw i64 %226, %229
  %230 = getelementptr inbounds i32, i32* %.0..0..0.156, i64 %.idx213
  store i32 %222, i32* %230, align 4
  br label %.backedge

231:                                              ; preds = %11
  %232 = add i32 %.0185, 1
  br label %.backedge

233:                                              ; preds = %11
  %234 = load i32, i32* @x.3, align 4
  %235 = load i32, i32* @y.4, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 1330773675, i32 528192225
  br label %.backedge

243:                                              ; preds = %11
  %244 = load i32, i32* @x.3, align 4
  %245 = load i32, i32* @y.4, align 4
  %246 = add i32 %244, -1
  %247 = mul i32 %246, %244
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %250, %249
  %252 = select i1 %251, i32 -1479642320, i32 528192225
  br label %.backedge

253:                                              ; preds = %11
  br label %.backedge

254:                                              ; preds = %11
  %255 = load i32, i32* %8, align 4
  %.not209 = icmp sgt i32 %.0183, %255
  %256 = select i1 %.not209, i32 -1354774442, i32 -1067510982
  br label %.backedge

257:                                              ; preds = %11
  %258 = load i32, i32* @x.3, align 4
  %259 = load i32, i32* @y.4, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 -1871590412, i32 1889343544
  br label %.backedge

267:                                              ; preds = %11
  %268 = load i32, i32* @x.3, align 4
  %269 = load i32, i32* @y.4, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 -946591188, i32 1889343544
  br label %.backedge

277:                                              ; preds = %11
  br label %.backedge

278:                                              ; preds = %11
  %279 = load i32, i32* %8, align 4
  %.not208 = icmp sgt i32 %.0181, %279
  %280 = select i1 %.not208, i32 -612391335, i32 1184002837
  br label %.backedge

281:                                              ; preds = %11
  br label %.backedge

282:                                              ; preds = %11
  %283 = load i32, i32* %8, align 4
  %.not207 = icmp sgt i32 %.0179, %283
  %284 = select i1 %.not207, i32 1879461408, i32 284045548
  br label %.backedge

285:                                              ; preds = %11
  %286 = load i32, i32* @x.3, align 4
  %287 = load i32, i32* @y.4, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 1095615388, i32 -474228881
  br label %.backedge

295:                                              ; preds = %11
  %296 = sext i32 %.0181 to i64
  %.0..0..0.96 = load volatile i64, i64* %4, align 8
  %297 = mul nsw i64 %.0..0..0.96, %296
  %.0..0..0.157 = load volatile i32*, i32** %3, align 8
  %298 = sext i32 %.0179 to i64
  %.idx203 = add nsw i64 %297, %298
  %299 = getelementptr inbounds i32, i32* %.0..0..0.157, i64 %.idx203
  %.0..0..0.97 = load volatile i64, i64* %4, align 8
  %300 = mul nsw i64 %.0..0..0.97, %296
  %.0..0..0.158 = load volatile i32*, i32** %3, align 8
  %301 = sext i32 %.0183 to i64
  %.idx204 = add nsw i64 %300, %301
  %302 = getelementptr inbounds i32, i32* %.0..0..0.158, i64 %.idx204
  %303 = load i32, i32* %302, align 4
  %.0..0..0.98 = load volatile i64, i64* %4, align 8
  %304 = mul nsw i64 %.0..0..0.98, %301
  %.0..0..0.159 = load volatile i32*, i32** %3, align 8
  %.idx205 = add nsw i64 %304, %298
  %305 = getelementptr inbounds i32, i32* %.0..0..0.159, i64 %.idx205
  %306 = load i32, i32* %305, align 4
  %307 = add i32 %306, %303
  store i32 %307, i32* %10, align 4
  %308 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %299, i32* nonnull dereferenceable(4) %10)
  %309 = load i32, i32* %308, align 4
  %.0..0..0.99 = load volatile i64, i64* %4, align 8
  %310 = mul nsw i64 %.0..0..0.99, %296
  %.0..0..0.160 = load volatile i32*, i32** %3, align 8
  %.idx206 = add nsw i64 %310, %298
  %311 = getelementptr inbounds i32, i32* %.0..0..0.160, i64 %.idx206
  store i32 %309, i32* %311, align 4
  %312 = load i32, i32* @x.3, align 4
  %313 = load i32, i32* @y.4, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 -1067460689, i32 -474228881
  br label %.backedge

321:                                              ; preds = %11
  br label %.backedge

322:                                              ; preds = %11
  %323 = add i32 %.0179, 1
  br label %.backedge

324:                                              ; preds = %11
  %325 = load i32, i32* @x.3, align 4
  %326 = load i32, i32* @y.4, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 -1263525769, i32 -1696499487
  br label %.backedge

334:                                              ; preds = %11
  %335 = load i32, i32* @x.3, align 4
  %336 = load i32, i32* @y.4, align 4
  %337 = add i32 %335, -1
  %338 = mul i32 %337, %335
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %341, %340
  %343 = select i1 %342, i32 -1119413583, i32 -1696499487
  br label %.backedge

344:                                              ; preds = %11
  br label %.backedge

345:                                              ; preds = %11
  %346 = load i32, i32* @x.3, align 4
  %347 = load i32, i32* @y.4, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 1577302543, i32 -560303925
  br label %.backedge

355:                                              ; preds = %11
  %356 = add i32 %.0181, 1
  %357 = load i32, i32* @x.3, align 4
  %358 = load i32, i32* @y.4, align 4
  %359 = add i32 %357, -1
  %360 = mul i32 %359, %357
  %361 = and i32 %360, 1
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %363, %362
  %365 = select i1 %364, i32 -348760923, i32 -560303925
  br label %.backedge

366:                                              ; preds = %11
  br label %.backedge

367:                                              ; preds = %11
  %368 = load i32, i32* @x.3, align 4
  %369 = load i32, i32* @y.4, align 4
  %370 = add i32 %368, -1
  %371 = mul i32 %370, %368
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %374, %373
  %376 = select i1 %375, i32 -1778739990, i32 1520948838
  br label %.backedge

377:                                              ; preds = %11
  %378 = load i32, i32* @x.3, align 4
  %379 = load i32, i32* @y.4, align 4
  %380 = add i32 %378, -1
  %381 = mul i32 %380, %378
  %382 = and i32 %381, 1
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %384, %383
  %386 = select i1 %385, i32 590390059, i32 1520948838
  br label %.backedge

387:                                              ; preds = %11
  br label %.backedge

388:                                              ; preds = %11
  %389 = load i32, i32* @x.3, align 4
  %390 = load i32, i32* @y.4, align 4
  %391 = add i32 %389, -1
  %392 = mul i32 %391, %389
  %393 = and i32 %392, 1
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %395, %394
  %397 = select i1 %396, i32 835600641, i32 -1044654965
  br label %.backedge

398:                                              ; preds = %11
  %399 = add i32 %.0183, 1
  %400 = load i32, i32* @x.3, align 4
  %401 = load i32, i32* @y.4, align 4
  %402 = add i32 %400, -1
  %403 = mul i32 %402, %400
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %406, %405
  %408 = select i1 %407, i32 -296294444, i32 -1044654965
  br label %.backedge

409:                                              ; preds = %11
  br label %.backedge

410:                                              ; preds = %11
  %411 = load i32, i32* %9, align 4
  br label %.backedge

412:                                              ; preds = %11
  %413 = load i32, i32* %9, align 4
  %.not202 = icmp sgt i32 %.0175, %413
  %414 = select i1 %.not202, i32 1087088334, i32 -1610716256
  br label %.backedge

415:                                              ; preds = %11
  br label %.backedge

416:                                              ; preds = %11
  %417 = load i32, i32* @x.3, align 4
  %418 = load i32, i32* @y.4, align 4
  %419 = add i32 %417, -1
  %420 = mul i32 %419, %417
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %423, %422
  %425 = select i1 %424, i32 -1174597760, i32 -889963988
  br label %.backedge

426:                                              ; preds = %11
  %427 = load i32, i32* %8, align 4
  %428 = icmp sle i32 %.0171, %427
  store i1 %428, i1* %1, align 1
  %429 = load i32, i32* @x.3, align 4
  %430 = load i32, i32* @y.4, align 4
  %431 = add i32 %429, -1
  %432 = mul i32 %431, %429
  %433 = and i32 %432, 1
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %435, %434
  %437 = select i1 %436, i32 610070441, i32 -889963988
  br label %.backedge

438:                                              ; preds = %11
  %.0..0..0.170 = load volatile i1, i1* %1, align 1
  %439 = select i1 %.0..0..0.170, i32 -655098680, i32 543090745
  br label %.backedge

440:                                              ; preds = %11
  %441 = sext i32 %.0171 to i64
  %.0..0..0.100 = load volatile i64, i64* %4, align 8
  %442 = mul nsw i64 %.0..0..0.100, %441
  %.0..0..0.161 = load volatile i32*, i32** %3, align 8
  %443 = sext i32 %.0175 to i64
  %.0..0..0.78 = load volatile i32*, i32** %7, align 8
  %444 = getelementptr inbounds i32, i32* %.0..0..0.78, i64 %443
  %445 = load i32, i32* %444, align 4
  %446 = sext i32 %445 to i64
  %.idx200 = add nsw i64 %442, %446
  %447 = getelementptr inbounds i32, i32* %.0..0..0.161, i64 %.idx200
  %448 = load i32, i32* %447, align 4
  %.0..0..0.88 = load volatile i32*, i32** %5, align 8
  %449 = getelementptr inbounds i32, i32* %.0..0..0.88, i64 %443
  %450 = load i32, i32* %449, align 4
  %451 = add i32 %450, %448
  %.0..0..0.101 = load volatile i64, i64* %4, align 8
  %452 = mul nsw i64 %.0..0..0.101, %441
  %.0..0..0.162 = load volatile i32*, i32** %3, align 8
  %.0..0..0.84 = load volatile i32*, i32** %6, align 8
  %453 = getelementptr inbounds i32, i32* %.0..0..0.84, i64 %443
  %454 = load i32, i32* %453, align 4
  %455 = sext i32 %454 to i64
  %.idx201 = add nsw i64 %452, %455
  %456 = getelementptr inbounds i32, i32* %.0..0..0.162, i64 %.idx201
  %457 = load i32, i32* %456, align 4
  %458 = icmp eq i32 %451, %457
  %459 = select i1 %458, i32 940568706, i32 234035710
  br label %.backedge

460:                                              ; preds = %11
  br label %.backedge

461:                                              ; preds = %11
  br label %.backedge

462:                                              ; preds = %11
  %463 = add i32 %.0171, 1
  br label %.backedge

464:                                              ; preds = %11
  %465 = and i8 %.0173, 1
  %.not = icmp eq i8 %465, 0
  %466 = select i1 %.not, i32 -1831007814, i32 1062854905
  br label %.backedge

467:                                              ; preds = %11
  %468 = add i32 %.0177, -1
  br label %.backedge

469:                                              ; preds = %11
  br label %.backedge

470:                                              ; preds = %11
  %471 = add i32 %.0175, 1
  br label %.backedge

472:                                              ; preds = %11
  %473 = load i32, i32* @x.3, align 4
  %474 = load i32, i32* @y.4, align 4
  %475 = add i32 %473, -1
  %476 = mul i32 %475, %473
  %477 = and i32 %476, 1
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %479, %478
  %481 = select i1 %480, i32 -831169715, i32 2113878630
  br label %.backedge

482:                                              ; preds = %11
  %483 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %.0177)
  call void @llvm.stackrestore(i8* %.0193)
  %484 = load i32, i32* @x.3, align 4
  %485 = load i32, i32* @y.4, align 4
  %486 = add i32 %484, -1
  %487 = mul i32 %486, %484
  %488 = and i32 %487, 1
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %485, 10
  %491 = or i1 %490, %489
  %492 = select i1 %491, i32 -1617645879, i32 2113878630
  br label %.backedge

493:                                              ; preds = %11
  br label %.backedge

494:                                              ; preds = %11
  ret i32 0

495:                                              ; preds = %11
  br label %.backedge

496:                                              ; preds = %11
  %497 = sext i32 %.0191 to i64
  %.0..0..0.102 = load volatile i64, i64* %4, align 8
  %.0..0..0.103 = load volatile i64, i64* %4, align 8
  %.0..0..0.104 = load volatile i64, i64* %4, align 8
  %.0..0..0.105 = load volatile i64, i64* %4, align 8
  %.0..0..0.106 = load volatile i64, i64* %4, align 8
  %.0..0..0.107 = load volatile i64, i64* %4, align 8
  %.0..0..0.108 = load volatile i64, i64* %4, align 8
  %.0..0..0.109 = load volatile i64, i64* %4, align 8
  %.0..0..0.110 = load volatile i64, i64* %4, align 8
  %.0..0..0.111 = load volatile i64, i64* %4, align 8
  %.0..0..0.112 = load volatile i64, i64* %4, align 8
  %.0..0..0.113 = load volatile i64, i64* %4, align 8
  %498 = mul nsw i64 %.0..0..0.113, %497
  %.0..0..0.163 = load volatile i32*, i32** %3, align 8
  %499 = sext i32 %.0189 to i64
  %.idx199 = add nsw i64 %498, %499
  %500 = getelementptr inbounds i32, i32* %.0..0..0.163, i64 %.idx199
  store i32 0, i32* %500, align 4
  br label %.backedge

501:                                              ; preds = %11
  %502 = sext i32 %.0191 to i64
  %.0..0..0.114 = load volatile i64, i64* %4, align 8
  %.0..0..0.115 = load volatile i64, i64* %4, align 8
  %.0..0..0.116 = load volatile i64, i64* %4, align 8
  %503 = mul nsw i64 %.0..0..0.116, %502
  %.0..0..0.164 = load volatile i32*, i32** %3, align 8
  %504 = sext i32 %.0189 to i64
  %.idx198 = add nsw i64 %503, %504
  %505 = getelementptr inbounds i32, i32* %.0..0..0.164, i64 %.idx198
  store i32 100000000, i32* %505, align 4
  br label %.backedge

506:                                              ; preds = %11
  %507 = add i32 %.0189, 1
  br label %.backedge

508:                                              ; preds = %11
  br label %.backedge

509:                                              ; preds = %11
  br label %.backedge

510:                                              ; preds = %11
  br label %.backedge

511:                                              ; preds = %11
  br label %.backedge

512:                                              ; preds = %11
  %513 = sext i32 %.0181 to i64
  %.0..0..0.117 = load volatile i64, i64* %4, align 8
  %.0..0..0.118 = load volatile i64, i64* %4, align 8
  %.0..0..0.119 = load volatile i64, i64* %4, align 8
  %.0..0..0.120 = load volatile i64, i64* %4, align 8
  %.0..0..0.121 = load volatile i64, i64* %4, align 8
  %.0..0..0.122 = load volatile i64, i64* %4, align 8
  %.0..0..0.123 = load volatile i64, i64* %4, align 8
  %.0..0..0.124 = load volatile i64, i64* %4, align 8
  %.0..0..0.125 = load volatile i64, i64* %4, align 8
  %.0..0..0.126 = load volatile i64, i64* %4, align 8
  %.0..0..0.127 = load volatile i64, i64* %4, align 8
  %.0..0..0.128 = load volatile i64, i64* %4, align 8
  %.0..0..0.129 = load volatile i64, i64* %4, align 8
  %.0..0..0.130 = load volatile i64, i64* %4, align 8
  %.0..0..0.131 = load volatile i64, i64* %4, align 8
  %.0..0..0.132 = load volatile i64, i64* %4, align 8
  %514 = mul nsw i64 %.0..0..0.132, %513
  %.0..0..0.165 = load volatile i32*, i32** %3, align 8
  %515 = sext i32 %.0179 to i64
  %.idx = add nsw i64 %514, %515
  %516 = getelementptr inbounds i32, i32* %.0..0..0.165, i64 %.idx
  %.0..0..0.133 = load volatile i64, i64* %4, align 8
  %.0..0..0.134 = load volatile i64, i64* %4, align 8
  %.0..0..0.135 = load volatile i64, i64* %4, align 8
  %.0..0..0.136 = load volatile i64, i64* %4, align 8
  %.0..0..0.137 = load volatile i64, i64* %4, align 8
  %.0..0..0.138 = load volatile i64, i64* %4, align 8
  %.0..0..0.139 = load volatile i64, i64* %4, align 8
  %517 = mul nsw i64 %.0..0..0.139, %513
  %.0..0..0.166 = load volatile i32*, i32** %3, align 8
  %518 = sext i32 %.0183 to i64
  %.idx195 = add nsw i64 %517, %518
  %519 = getelementptr inbounds i32, i32* %.0..0..0.166, i64 %.idx195
  %520 = load i32, i32* %519, align 4
  %.0..0..0.140 = load volatile i64, i64* %4, align 8
  %.0..0..0.141 = load volatile i64, i64* %4, align 8
  %.0..0..0.142 = load volatile i64, i64* %4, align 8
  %.0..0..0.143 = load volatile i64, i64* %4, align 8
  %521 = mul nsw i64 %.0..0..0.143, %518
  %.0..0..0.167 = load volatile i32*, i32** %3, align 8
  %.idx196 = add nsw i64 %521, %515
  %522 = getelementptr inbounds i32, i32* %.0..0..0.167, i64 %.idx196
  %523 = load i32, i32* %522, align 4
  %524 = add i32 %523, %520
  store i32 %524, i32* %10, align 4
  %525 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %516, i32* nonnull dereferenceable(4) %10)
  %526 = load i32, i32* %525, align 4
  %.0..0..0.144 = load volatile i64, i64* %4, align 8
  %.0..0..0.145 = load volatile i64, i64* %4, align 8
  %.0..0..0.146 = load volatile i64, i64* %4, align 8
  %.0..0..0.147 = load volatile i64, i64* %4, align 8
  %.0..0..0.148 = load volatile i64, i64* %4, align 8
  %.0..0..0.149 = load volatile i64, i64* %4, align 8
  %.0..0..0.150 = load volatile i64, i64* %4, align 8
  %527 = mul nsw i64 %.0..0..0.150, %513
  %.0..0..0.168 = load volatile i32*, i32** %3, align 8
  %.idx197 = add nsw i64 %527, %515
  %528 = getelementptr inbounds i32, i32* %.0..0..0.168, i64 %.idx197
  store i32 %526, i32* %528, align 4
  br label %.backedge

529:                                              ; preds = %11
  br label %.backedge

530:                                              ; preds = %11
  %531 = add i32 %.0181, 1
  br label %.backedge

532:                                              ; preds = %11
  br label %.backedge

533:                                              ; preds = %11
  %534 = add i32 %.0183, 1
  br label %.backedge

535:                                              ; preds = %11
  br label %.backedge

536:                                              ; preds = %11
  %537 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %.0177)
  call void @llvm.stackrestore(i8* %.0193)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #7 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.5, align 4
  %8 = load i32, i32* @y.6, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -1785840846, i32 646266871
  %16 = select i1 %14, i32 -1562796476, i32 646266871
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1697132506, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 1697132506, label %18
    i32 95923052, label %.outer10.backedge
    i32 -1562796476, label %.outer.backedge
    i32 -1785840846, label %21
    i32 -1378054213, label %22
    i32 -1132771504, label %23
    i32 646266871, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 95923052, i32 -1378054213
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -1132771504, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ -1132771504, %22 ], [ -1562796476, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #6

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s961351656.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.7, align 4
  %4 = load i32, i32* @y.8, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1743690579, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1743690579, label %11
    i32 1964317609, label %14
    i32 -1470690378, label %24
    i32 -1824598063, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1964317609, i32 -1824598063
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1470690378, i32 -1824598063
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 1964317609, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { mustprogress nofree nosync nounwind willreturn }
attributes #7 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
