; ModuleID = 'build_ollvm/programs/p03837/s317583989.ll'
source_filename = "Project_CodeNet_C++1400/p03837/s317583989.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@adj = global [105 x [105 x i64]] zeroinitializer, align 16
@wt = local_unnamed_addr global [105 x [105 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s317583989.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -184124861, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -184124861, label %11
    i32 -1712854851, label %14
    i32 -315638727, label %25
    i32 112728315, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1712854851, i32 112728315
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -315638727, i32 112728315
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1712854851, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline uwtable
define void @_Z5solvev() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %3)
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %9, i64* nonnull dereferenceable(8) %4)
  br label %11

11:                                               ; preds = %.backedge, %0
  %.077 = phi i64 [ 1, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i64 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i64 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i64 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i64 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i64 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i64 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i64 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i64 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i8 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i64 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i64 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.0 = phi i32 [ -946002018, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -946002018, label %12
    i32 -1672944468, label %15
    i32 -1003568141, label %25
    i32 1123745997, label %35
    i32 185592843, label %36
    i32 342374755, label %46
    i32 1494625213, label %58
    i32 1881286230, label %60
    i32 34159012, label %62
    i32 1317457323, label %64
    i32 1383918277, label %74
    i32 511477404, label %85
    i32 2143391430, label %86
    i32 -231967692, label %88
    i32 660707348, label %89
    i32 -137260420, label %92
    i32 709213933, label %102
    i32 1582324447, label %122
    i32 -1581771126, label %123
    i32 -1287812848, label %125
    i32 -1248637299, label %126
    i32 2129437213, label %129
    i32 1881229476, label %130
    i32 616459357, label %133
    i32 551705717, label %143
    i32 -1018097551, label %153
    i32 528099567, label %154
    i32 1475994025, label %157
    i32 -2061596594, label %166
    i32 1614668352, label %168
    i32 -1776360277, label %178
    i32 -1150784511, label %188
    i32 1534595533, label %189
    i32 775605921, label %199
    i32 2087989486, label %210
    i32 273914213, label %211
    i32 -2075179818, label %221
    i32 2036790586, label %231
    i32 1419936168, label %232
    i32 726556475, label %242
    i32 -886797452, label %253
    i32 573439081, label %254
    i32 -1452331328, label %255
    i32 95290105, label %258
    i32 -661136089, label %259
    i32 1114598458, label %262
    i32 1440618090, label %267
    i32 105685804, label %268
    i32 -2100210951, label %269
    i32 469330011, label %272
    i32 -1829125364, label %273
    i32 -338180095, label %283
    i32 -687726141, label %295
    i32 168324877, label %297
    i32 -1600589902, label %310
    i32 -255217854, label %311
    i32 922691693, label %312
    i32 -1857025718, label %314
    i32 -155117926, label %315
    i32 1068223056, label %317
    i32 -1438466064, label %320
    i32 -2030520097, label %330
    i32 -1762842416, label %341
    i32 892765875, label %342
    i32 -296888729, label %352
    i32 -1472018005, label %362
    i32 -816849190, label %363
    i32 2033641130, label %365
    i32 -1162333867, label %375
    i32 2129240204, label %385
    i32 -525992014, label %386
    i32 -2106785245, label %388
    i32 -1055871339, label %393
    i32 1412467836, label %394
    i32 -1225060306, label %395
    i32 -1013087187, label %397
    i32 666591799, label %408
    i32 -512732692, label %409
    i32 -767041027, label %410
    i32 1294291119, label %412
    i32 -1619988980, label %413
    i32 473647042, label %415
    i32 353244848, label %416
    i32 469468690, label %418
    i32 1551575964, label %419
  ]

.backedge:                                        ; preds = %11, %419, %418, %416, %415, %413, %412, %410, %409, %408, %397, %395, %394, %393, %386, %385, %375, %365, %363, %362, %352, %342, %341, %330, %320, %317, %315, %314, %312, %311, %310, %297, %295, %283, %273, %272, %269, %268, %267, %262, %259, %258, %255, %254, %253, %242, %232, %231, %221, %211, %210, %199, %189, %188, %178, %168, %166, %157, %154, %153, %143, %133, %130, %129, %126, %125, %123, %122, %102, %92, %89, %88, %86, %85, %74, %64, %62, %60, %58, %46, %36, %35, %25, %15, %12
  %.077.be = phi i64 [ %.077, %11 ], [ %.077, %419 ], [ %.077, %418 ], [ %.077, %416 ], [ %.077, %415 ], [ %.077, %413 ], [ %.077, %412 ], [ %.077, %410 ], [ %.077, %409 ], [ %.077, %408 ], [ %.077, %397 ], [ %.077, %395 ], [ %.077, %394 ], [ %.077, %393 ], [ %.077, %386 ], [ %.077, %385 ], [ %.077, %375 ], [ %.077, %365 ], [ %.077, %363 ], [ %.077, %362 ], [ %.077, %352 ], [ %.077, %342 ], [ %.077, %341 ], [ %.077, %330 ], [ %.077, %320 ], [ %.077, %317 ], [ %.077, %315 ], [ %.077, %314 ], [ %.077, %312 ], [ %.077, %311 ], [ %.077, %310 ], [ %.077, %297 ], [ %.077, %295 ], [ %.077, %283 ], [ %.077, %273 ], [ %.077, %272 ], [ %.077, %269 ], [ %.077, %268 ], [ %.077, %267 ], [ %.077, %262 ], [ %.077, %259 ], [ %.077, %258 ], [ %.077, %255 ], [ %.077, %254 ], [ %.077, %253 ], [ %.077, %242 ], [ %.077, %232 ], [ %.077, %231 ], [ %.077, %221 ], [ %.077, %211 ], [ %.077, %210 ], [ %.077, %199 ], [ %.077, %189 ], [ %.077, %188 ], [ %.077, %178 ], [ %.077, %168 ], [ %.077, %166 ], [ %.077, %157 ], [ %.077, %154 ], [ %.077, %153 ], [ %.077, %143 ], [ %.077, %133 ], [ %.077, %130 ], [ %.077, %129 ], [ %.077, %126 ], [ %.077, %125 ], [ %.077, %123 ], [ %.077, %122 ], [ %.077, %102 ], [ %.077, %92 ], [ %.077, %89 ], [ %.077, %88 ], [ %87, %86 ], [ %.077, %85 ], [ %.077, %74 ], [ %.077, %64 ], [ %.077, %62 ], [ %.077, %60 ], [ %.077, %58 ], [ %.077, %46 ], [ %.077, %36 ], [ %.077, %35 ], [ %.077, %25 ], [ %.077, %15 ], [ %.077, %12 ]
  %.075.be = phi i64 [ %.075, %11 ], [ %.075, %419 ], [ %.075, %418 ], [ %.075, %416 ], [ %.075, %415 ], [ %.075, %413 ], [ %.075, %412 ], [ %.075, %410 ], [ %.075, %409 ], [ %.075, %408 ], [ %.075, %397 ], [ %.075, %395 ], [ %.075, %394 ], [ 1, %393 ], [ %.075, %386 ], [ %.075, %385 ], [ %.075, %375 ], [ %.075, %365 ], [ %.075, %363 ], [ %.075, %362 ], [ %.075, %352 ], [ %.075, %342 ], [ %.075, %341 ], [ %.075, %330 ], [ %.075, %320 ], [ %.075, %317 ], [ %.075, %315 ], [ %.075, %314 ], [ %.075, %312 ], [ %.075, %311 ], [ %.075, %310 ], [ %.075, %297 ], [ %.075, %295 ], [ %.075, %283 ], [ %.075, %273 ], [ %.075, %272 ], [ %.075, %269 ], [ %.075, %268 ], [ %.075, %267 ], [ %.075, %262 ], [ %.075, %259 ], [ %.075, %258 ], [ %.075, %255 ], [ %.075, %254 ], [ %.075, %253 ], [ %.075, %242 ], [ %.075, %232 ], [ %.075, %231 ], [ %.075, %221 ], [ %.075, %211 ], [ %.075, %210 ], [ %.075, %199 ], [ %.075, %189 ], [ %.075, %188 ], [ %.075, %178 ], [ %.075, %168 ], [ %.075, %166 ], [ %.075, %157 ], [ %.075, %154 ], [ %.075, %153 ], [ %.075, %143 ], [ %.075, %133 ], [ %.075, %130 ], [ %.075, %129 ], [ %.075, %126 ], [ %.075, %125 ], [ %.075, %123 ], [ %.075, %122 ], [ %.075, %102 ], [ %.075, %92 ], [ %.075, %89 ], [ %.075, %88 ], [ %.075, %86 ], [ %.075, %85 ], [ %.075, %74 ], [ %.075, %64 ], [ %63, %62 ], [ %.075, %60 ], [ %.075, %58 ], [ %.075, %46 ], [ %.075, %36 ], [ %.075, %35 ], [ 1, %25 ], [ %.075, %15 ], [ %.075, %12 ]
  %.073.be = phi i64 [ %.073, %11 ], [ %.073, %419 ], [ %.073, %418 ], [ %.073, %416 ], [ %.073, %415 ], [ %.073, %413 ], [ %.073, %412 ], [ %.073, %410 ], [ %.073, %409 ], [ %.073, %408 ], [ %.073, %397 ], [ %.073, %395 ], [ %.073, %394 ], [ %.073, %393 ], [ %.073, %386 ], [ %.073, %385 ], [ %.073, %375 ], [ %.073, %365 ], [ %.073, %363 ], [ %.073, %362 ], [ %.073, %352 ], [ %.073, %342 ], [ %.073, %341 ], [ %.073, %330 ], [ %.073, %320 ], [ %.073, %317 ], [ %.073, %315 ], [ %.073, %314 ], [ %.073, %312 ], [ %.073, %311 ], [ %.073, %310 ], [ %.073, %297 ], [ %.073, %295 ], [ %.073, %283 ], [ %.073, %273 ], [ %.073, %272 ], [ %.073, %269 ], [ %.073, %268 ], [ %.073, %267 ], [ %.073, %262 ], [ %.073, %259 ], [ %.073, %258 ], [ %.073, %255 ], [ %.073, %254 ], [ %.073, %253 ], [ %.073, %242 ], [ %.073, %232 ], [ %.073, %231 ], [ %.073, %221 ], [ %.073, %211 ], [ %.073, %210 ], [ %.073, %199 ], [ %.073, %189 ], [ %.073, %188 ], [ %.073, %178 ], [ %.073, %168 ], [ %.073, %166 ], [ %.073, %157 ], [ %.073, %154 ], [ %.073, %153 ], [ %.073, %143 ], [ %.073, %133 ], [ %.073, %130 ], [ %.073, %129 ], [ %.073, %126 ], [ %.073, %125 ], [ %124, %123 ], [ %.073, %122 ], [ %.073, %102 ], [ %.073, %92 ], [ %.073, %89 ], [ 1, %88 ], [ %.073, %86 ], [ %.073, %85 ], [ %.073, %74 ], [ %.073, %64 ], [ %.073, %62 ], [ %.073, %60 ], [ %.073, %58 ], [ %.073, %46 ], [ %.073, %36 ], [ %.073, %35 ], [ %.073, %25 ], [ %.073, %15 ], [ %.073, %12 ]
  %.071.be = phi i64 [ %.071, %11 ], [ %.071, %419 ], [ %.071, %418 ], [ %.071, %416 ], [ %.071, %415 ], [ %414, %413 ], [ %.071, %412 ], [ %.071, %410 ], [ %.071, %409 ], [ %.071, %408 ], [ %.071, %397 ], [ %.071, %395 ], [ %.071, %394 ], [ %.071, %393 ], [ %.071, %386 ], [ %.071, %385 ], [ %.071, %375 ], [ %.071, %365 ], [ %.071, %363 ], [ %.071, %362 ], [ %.071, %352 ], [ %.071, %342 ], [ %.071, %341 ], [ %.071, %330 ], [ %.071, %320 ], [ %.071, %317 ], [ %.071, %315 ], [ %.071, %314 ], [ %.071, %312 ], [ %.071, %311 ], [ %.071, %310 ], [ %.071, %297 ], [ %.071, %295 ], [ %.071, %283 ], [ %.071, %273 ], [ %.071, %272 ], [ %.071, %269 ], [ %.071, %268 ], [ %.071, %267 ], [ %.071, %262 ], [ %.071, %259 ], [ %.071, %258 ], [ %.071, %255 ], [ %.071, %254 ], [ %.071, %253 ], [ %243, %242 ], [ %.071, %232 ], [ %.071, %231 ], [ %.071, %221 ], [ %.071, %211 ], [ %.071, %210 ], [ %.071, %199 ], [ %.071, %189 ], [ %.071, %188 ], [ %.071, %178 ], [ %.071, %168 ], [ %.071, %166 ], [ %.071, %157 ], [ %.071, %154 ], [ %.071, %153 ], [ %.071, %143 ], [ %.071, %133 ], [ %.071, %130 ], [ %.071, %129 ], [ %.071, %126 ], [ 1, %125 ], [ %.071, %123 ], [ %.071, %122 ], [ %.071, %102 ], [ %.071, %92 ], [ %.071, %89 ], [ %.071, %88 ], [ %.071, %86 ], [ %.071, %85 ], [ %.071, %74 ], [ %.071, %64 ], [ %.071, %62 ], [ %.071, %60 ], [ %.071, %58 ], [ %.071, %46 ], [ %.071, %36 ], [ %.071, %35 ], [ %.071, %25 ], [ %.071, %15 ], [ %.071, %12 ]
  %.069.be = phi i64 [ %.069, %11 ], [ %.069, %419 ], [ %.069, %418 ], [ %.069, %416 ], [ %.069, %415 ], [ %.069, %413 ], [ %.069, %412 ], [ %411, %410 ], [ %.069, %409 ], [ %.069, %408 ], [ %.069, %397 ], [ %.069, %395 ], [ %.069, %394 ], [ %.069, %393 ], [ %.069, %386 ], [ %.069, %385 ], [ %.069, %375 ], [ %.069, %365 ], [ %.069, %363 ], [ %.069, %362 ], [ %.069, %352 ], [ %.069, %342 ], [ %.069, %341 ], [ %.069, %330 ], [ %.069, %320 ], [ %.069, %317 ], [ %.069, %315 ], [ %.069, %314 ], [ %.069, %312 ], [ %.069, %311 ], [ %.069, %310 ], [ %.069, %297 ], [ %.069, %295 ], [ %.069, %283 ], [ %.069, %273 ], [ %.069, %272 ], [ %.069, %269 ], [ %.069, %268 ], [ %.069, %267 ], [ %.069, %262 ], [ %.069, %259 ], [ %.069, %258 ], [ %.069, %255 ], [ %.069, %254 ], [ %.069, %253 ], [ %.069, %242 ], [ %.069, %232 ], [ %.069, %231 ], [ %.069, %221 ], [ %.069, %211 ], [ %.069, %210 ], [ %200, %199 ], [ %.069, %189 ], [ %.069, %188 ], [ %.069, %178 ], [ %.069, %168 ], [ %.069, %166 ], [ %.069, %157 ], [ %.069, %154 ], [ %.069, %153 ], [ %.069, %143 ], [ %.069, %133 ], [ %.069, %130 ], [ 1, %129 ], [ %.069, %126 ], [ %.069, %125 ], [ %.069, %123 ], [ %.069, %122 ], [ %.069, %102 ], [ %.069, %92 ], [ %.069, %89 ], [ %.069, %88 ], [ %.069, %86 ], [ %.069, %85 ], [ %.069, %74 ], [ %.069, %64 ], [ %.069, %62 ], [ %.069, %60 ], [ %.069, %58 ], [ %.069, %46 ], [ %.069, %36 ], [ %.069, %35 ], [ %.069, %25 ], [ %.069, %15 ], [ %.069, %12 ]
  %.067.be = phi i64 [ %.067, %11 ], [ %.067, %419 ], [ %.067, %418 ], [ %.067, %416 ], [ %.067, %415 ], [ %.067, %413 ], [ %.067, %412 ], [ %.067, %410 ], [ %.067, %409 ], [ 1, %408 ], [ %.067, %397 ], [ %.067, %395 ], [ %.067, %394 ], [ %.067, %393 ], [ %.067, %386 ], [ %.067, %385 ], [ %.067, %375 ], [ %.067, %365 ], [ %.067, %363 ], [ %.067, %362 ], [ %.067, %352 ], [ %.067, %342 ], [ %.067, %341 ], [ %.067, %330 ], [ %.067, %320 ], [ %.067, %317 ], [ %.067, %315 ], [ %.067, %314 ], [ %.067, %312 ], [ %.067, %311 ], [ %.067, %310 ], [ %.067, %297 ], [ %.067, %295 ], [ %.067, %283 ], [ %.067, %273 ], [ %.067, %272 ], [ %.067, %269 ], [ %.067, %268 ], [ %.067, %267 ], [ %.067, %262 ], [ %.067, %259 ], [ %.067, %258 ], [ %.067, %255 ], [ %.067, %254 ], [ %.067, %253 ], [ %.067, %242 ], [ %.067, %232 ], [ %.067, %231 ], [ %.067, %221 ], [ %.067, %211 ], [ %.067, %210 ], [ %.067, %199 ], [ %.067, %189 ], [ %.067, %188 ], [ %.067, %178 ], [ %.067, %168 ], [ %167, %166 ], [ %.067, %157 ], [ %.067, %154 ], [ %.067, %153 ], [ 1, %143 ], [ %.067, %133 ], [ %.067, %130 ], [ %.067, %129 ], [ %.067, %126 ], [ %.067, %125 ], [ %.067, %123 ], [ %.067, %122 ], [ %.067, %102 ], [ %.067, %92 ], [ %.067, %89 ], [ %.067, %88 ], [ %.067, %86 ], [ %.067, %85 ], [ %.067, %74 ], [ %.067, %64 ], [ %.067, %62 ], [ %.067, %60 ], [ %.067, %58 ], [ %.067, %46 ], [ %.067, %36 ], [ %.067, %35 ], [ %.067, %25 ], [ %.067, %15 ], [ %.067, %12 ]
  %.065.be = phi i64 [ %.065, %11 ], [ %.065, %419 ], [ %.065, %418 ], [ %417, %416 ], [ %.065, %415 ], [ %.065, %413 ], [ %.065, %412 ], [ %.065, %410 ], [ %.065, %409 ], [ %.065, %408 ], [ %.065, %397 ], [ %.065, %395 ], [ %.065, %394 ], [ %.065, %393 ], [ %.065, %386 ], [ %.065, %385 ], [ %.065, %375 ], [ %.065, %365 ], [ %.065, %363 ], [ %.065, %362 ], [ %.065, %352 ], [ %.065, %342 ], [ %.065, %341 ], [ %331, %330 ], [ %.065, %320 ], [ %.065, %317 ], [ %.065, %315 ], [ %.065, %314 ], [ %.065, %312 ], [ %.065, %311 ], [ %.065, %310 ], [ %.065, %297 ], [ %.065, %295 ], [ %.065, %283 ], [ %.065, %273 ], [ %.065, %272 ], [ %.065, %269 ], [ %.065, %268 ], [ %.065, %267 ], [ %.065, %262 ], [ %.065, %259 ], [ %.065, %258 ], [ %.065, %255 ], [ 0, %254 ], [ %.065, %253 ], [ %.065, %242 ], [ %.065, %232 ], [ %.065, %231 ], [ %.065, %221 ], [ %.065, %211 ], [ %.065, %210 ], [ %.065, %199 ], [ %.065, %189 ], [ %.065, %188 ], [ %.065, %178 ], [ %.065, %168 ], [ %.065, %166 ], [ %.065, %157 ], [ %.065, %154 ], [ %.065, %153 ], [ %.065, %143 ], [ %.065, %133 ], [ %.065, %130 ], [ %.065, %129 ], [ %.065, %126 ], [ %.065, %125 ], [ %.065, %123 ], [ %.065, %122 ], [ %.065, %102 ], [ %.065, %92 ], [ %.065, %89 ], [ %.065, %88 ], [ %.065, %86 ], [ %.065, %85 ], [ %.065, %74 ], [ %.065, %64 ], [ %.065, %62 ], [ %.065, %60 ], [ %.065, %58 ], [ %.065, %46 ], [ %.065, %36 ], [ %.065, %35 ], [ %.065, %25 ], [ %.065, %15 ], [ %.065, %12 ]
  %.063.be = phi i64 [ %.063, %11 ], [ %.063, %419 ], [ %.063, %418 ], [ %.063, %416 ], [ %.063, %415 ], [ %.063, %413 ], [ %.063, %412 ], [ %.063, %410 ], [ %.063, %409 ], [ %.063, %408 ], [ %.063, %397 ], [ %.063, %395 ], [ %.063, %394 ], [ %.063, %393 ], [ %387, %386 ], [ %.063, %385 ], [ %.063, %375 ], [ %.063, %365 ], [ %.063, %363 ], [ %.063, %362 ], [ %.063, %352 ], [ %.063, %342 ], [ %.063, %341 ], [ %.063, %330 ], [ %.063, %320 ], [ %.063, %317 ], [ %.063, %315 ], [ %.063, %314 ], [ %.063, %312 ], [ %.063, %311 ], [ %.063, %310 ], [ %.063, %297 ], [ %.063, %295 ], [ %.063, %283 ], [ %.063, %273 ], [ %.063, %272 ], [ %.063, %269 ], [ %.063, %268 ], [ %.063, %267 ], [ %.063, %262 ], [ %.063, %259 ], [ %.063, %258 ], [ %.063, %255 ], [ 1, %254 ], [ %.063, %253 ], [ %.063, %242 ], [ %.063, %232 ], [ %.063, %231 ], [ %.063, %221 ], [ %.063, %211 ], [ %.063, %210 ], [ %.063, %199 ], [ %.063, %189 ], [ %.063, %188 ], [ %.063, %178 ], [ %.063, %168 ], [ %.063, %166 ], [ %.063, %157 ], [ %.063, %154 ], [ %.063, %153 ], [ %.063, %143 ], [ %.063, %133 ], [ %.063, %130 ], [ %.063, %129 ], [ %.063, %126 ], [ %.063, %125 ], [ %.063, %123 ], [ %.063, %122 ], [ %.063, %102 ], [ %.063, %92 ], [ %.063, %89 ], [ %.063, %88 ], [ %.063, %86 ], [ %.063, %85 ], [ %.063, %74 ], [ %.063, %64 ], [ %.063, %62 ], [ %.063, %60 ], [ %.063, %58 ], [ %.063, %46 ], [ %.063, %36 ], [ %.063, %35 ], [ %.063, %25 ], [ %.063, %15 ], [ %.063, %12 ]
  %.061.be = phi i64 [ %.061, %11 ], [ %.061, %419 ], [ %.061, %418 ], [ %.061, %416 ], [ %.061, %415 ], [ %.061, %413 ], [ %.061, %412 ], [ %.061, %410 ], [ %.061, %409 ], [ %.061, %408 ], [ %.061, %397 ], [ %.061, %395 ], [ %.061, %394 ], [ %.061, %393 ], [ %.061, %386 ], [ %.061, %385 ], [ %.061, %375 ], [ %.061, %365 ], [ %364, %363 ], [ %.061, %362 ], [ %.061, %352 ], [ %.061, %342 ], [ %.061, %341 ], [ %.061, %330 ], [ %.061, %320 ], [ %.061, %317 ], [ %.061, %315 ], [ %.061, %314 ], [ %.061, %312 ], [ %.061, %311 ], [ %.061, %310 ], [ %.061, %297 ], [ %.061, %295 ], [ %.061, %283 ], [ %.061, %273 ], [ %.061, %272 ], [ %.061, %269 ], [ %.061, %268 ], [ %.061, %267 ], [ %.061, %262 ], [ %.061, %259 ], [ %.neg, %258 ], [ %.061, %255 ], [ %.061, %254 ], [ %.061, %253 ], [ %.061, %242 ], [ %.061, %232 ], [ %.061, %231 ], [ %.061, %221 ], [ %.061, %211 ], [ %.061, %210 ], [ %.061, %199 ], [ %.061, %189 ], [ %.061, %188 ], [ %.061, %178 ], [ %.061, %168 ], [ %.061, %166 ], [ %.061, %157 ], [ %.061, %154 ], [ %.061, %153 ], [ %.061, %143 ], [ %.061, %133 ], [ %.061, %130 ], [ %.061, %129 ], [ %.061, %126 ], [ %.061, %125 ], [ %.061, %123 ], [ %.061, %122 ], [ %.061, %102 ], [ %.061, %92 ], [ %.061, %89 ], [ %.061, %88 ], [ %.061, %86 ], [ %.061, %85 ], [ %.061, %74 ], [ %.061, %64 ], [ %.061, %62 ], [ %.061, %60 ], [ %.061, %58 ], [ %.061, %46 ], [ %.061, %36 ], [ %.061, %35 ], [ %.061, %25 ], [ %.061, %15 ], [ %.061, %12 ]
  %.059.be = phi i8 [ %.059, %11 ], [ %.059, %419 ], [ %.059, %418 ], [ %.059, %416 ], [ %.059, %415 ], [ %.059, %413 ], [ %.059, %412 ], [ %.059, %410 ], [ %.059, %409 ], [ %.059, %408 ], [ %.059, %397 ], [ %.059, %395 ], [ %.059, %394 ], [ %.059, %393 ], [ %.059, %386 ], [ %.059, %385 ], [ %.059, %375 ], [ %.059, %365 ], [ %.059, %363 ], [ %.059, %362 ], [ %.059, %352 ], [ %.059, %342 ], [ %.059, %341 ], [ %.059, %330 ], [ %.059, %320 ], [ %.059, %317 ], [ %.059, %315 ], [ %.059, %314 ], [ %.059, %312 ], [ %.059, %311 ], [ 1, %310 ], [ %.059, %297 ], [ %.059, %295 ], [ %.059, %283 ], [ %.059, %273 ], [ %.059, %272 ], [ %.059, %269 ], [ 0, %268 ], [ %.059, %267 ], [ %.059, %262 ], [ %.059, %259 ], [ %.059, %258 ], [ %.059, %255 ], [ %.059, %254 ], [ %.059, %253 ], [ %.059, %242 ], [ %.059, %232 ], [ %.059, %231 ], [ %.059, %221 ], [ %.059, %211 ], [ %.059, %210 ], [ %.059, %199 ], [ %.059, %189 ], [ %.059, %188 ], [ %.059, %178 ], [ %.059, %168 ], [ %.059, %166 ], [ %.059, %157 ], [ %.059, %154 ], [ %.059, %153 ], [ %.059, %143 ], [ %.059, %133 ], [ %.059, %130 ], [ %.059, %129 ], [ %.059, %126 ], [ %.059, %125 ], [ %.059, %123 ], [ %.059, %122 ], [ %.059, %102 ], [ %.059, %92 ], [ %.059, %89 ], [ %.059, %88 ], [ %.059, %86 ], [ %.059, %85 ], [ %.059, %74 ], [ %.059, %64 ], [ %.059, %62 ], [ %.059, %60 ], [ %.059, %58 ], [ %.059, %46 ], [ %.059, %36 ], [ %.059, %35 ], [ %.059, %25 ], [ %.059, %15 ], [ %.059, %12 ]
  %.057.be = phi i64 [ %.057, %11 ], [ %.057, %419 ], [ %.057, %418 ], [ %.057, %416 ], [ %.057, %415 ], [ %.057, %413 ], [ %.057, %412 ], [ %.057, %410 ], [ %.057, %409 ], [ %.057, %408 ], [ %.057, %397 ], [ %.057, %395 ], [ %.057, %394 ], [ %.057, %393 ], [ %.057, %386 ], [ %.057, %385 ], [ %.057, %375 ], [ %.057, %365 ], [ %.057, %363 ], [ %.057, %362 ], [ %.057, %352 ], [ %.057, %342 ], [ %.057, %341 ], [ %.057, %330 ], [ %.057, %320 ], [ %.057, %317 ], [ %316, %315 ], [ %.057, %314 ], [ %.057, %312 ], [ %.057, %311 ], [ %.057, %310 ], [ %.057, %297 ], [ %.057, %295 ], [ %.057, %283 ], [ %.057, %273 ], [ %.057, %272 ], [ %.057, %269 ], [ 1, %268 ], [ %.057, %267 ], [ %.057, %262 ], [ %.057, %259 ], [ %.057, %258 ], [ %.057, %255 ], [ %.057, %254 ], [ %.057, %253 ], [ %.057, %242 ], [ %.057, %232 ], [ %.057, %231 ], [ %.057, %221 ], [ %.057, %211 ], [ %.057, %210 ], [ %.057, %199 ], [ %.057, %189 ], [ %.057, %188 ], [ %.057, %178 ], [ %.057, %168 ], [ %.057, %166 ], [ %.057, %157 ], [ %.057, %154 ], [ %.057, %153 ], [ %.057, %143 ], [ %.057, %133 ], [ %.057, %130 ], [ %.057, %129 ], [ %.057, %126 ], [ %.057, %125 ], [ %.057, %123 ], [ %.057, %122 ], [ %.057, %102 ], [ %.057, %92 ], [ %.057, %89 ], [ %.057, %88 ], [ %.057, %86 ], [ %.057, %85 ], [ %.057, %74 ], [ %.057, %64 ], [ %.057, %62 ], [ %.057, %60 ], [ %.057, %58 ], [ %.057, %46 ], [ %.057, %36 ], [ %.057, %35 ], [ %.057, %25 ], [ %.057, %15 ], [ %.057, %12 ]
  %.055.be = phi i64 [ %.055, %11 ], [ %.055, %419 ], [ %.055, %418 ], [ %.055, %416 ], [ %.055, %415 ], [ %.055, %413 ], [ %.055, %412 ], [ %.055, %410 ], [ %.055, %409 ], [ %.055, %408 ], [ %.055, %397 ], [ %.055, %395 ], [ %.055, %394 ], [ %.055, %393 ], [ %.055, %386 ], [ %.055, %385 ], [ %.055, %375 ], [ %.055, %365 ], [ %.055, %363 ], [ %.055, %362 ], [ %.055, %352 ], [ %.055, %342 ], [ %.055, %341 ], [ %.055, %330 ], [ %.055, %320 ], [ %.055, %317 ], [ %.055, %315 ], [ %.055, %314 ], [ %313, %312 ], [ %.055, %311 ], [ %.055, %310 ], [ %.055, %297 ], [ %.055, %295 ], [ %.055, %283 ], [ %.055, %273 ], [ 1, %272 ], [ %.055, %269 ], [ %.055, %268 ], [ %.055, %267 ], [ %.055, %262 ], [ %.055, %259 ], [ %.055, %258 ], [ %.055, %255 ], [ %.055, %254 ], [ %.055, %253 ], [ %.055, %242 ], [ %.055, %232 ], [ %.055, %231 ], [ %.055, %221 ], [ %.055, %211 ], [ %.055, %210 ], [ %.055, %199 ], [ %.055, %189 ], [ %.055, %188 ], [ %.055, %178 ], [ %.055, %168 ], [ %.055, %166 ], [ %.055, %157 ], [ %.055, %154 ], [ %.055, %153 ], [ %.055, %143 ], [ %.055, %133 ], [ %.055, %130 ], [ %.055, %129 ], [ %.055, %126 ], [ %.055, %125 ], [ %.055, %123 ], [ %.055, %122 ], [ %.055, %102 ], [ %.055, %92 ], [ %.055, %89 ], [ %.055, %88 ], [ %.055, %86 ], [ %.055, %85 ], [ %.055, %74 ], [ %.055, %64 ], [ %.055, %62 ], [ %.055, %60 ], [ %.055, %58 ], [ %.055, %46 ], [ %.055, %36 ], [ %.055, %35 ], [ %.055, %25 ], [ %.055, %15 ], [ %.055, %12 ]
  %.0.be = phi i32 [ %.0, %11 ], [ -1162333867, %419 ], [ -296888729, %418 ], [ -2030520097, %416 ], [ -338180095, %415 ], [ 726556475, %413 ], [ -2075179818, %412 ], [ 775605921, %410 ], [ -1776360277, %409 ], [ 551705717, %408 ], [ 709213933, %397 ], [ 1383918277, %395 ], [ 342374755, %394 ], [ -1003568141, %393 ], [ -1452331328, %386 ], [ -525992014, %385 ], [ %384, %375 ], [ %374, %365 ], [ -661136089, %363 ], [ -816849190, %362 ], [ %361, %352 ], [ %351, %342 ], [ 892765875, %341 ], [ %340, %330 ], [ %329, %320 ], [ %319, %317 ], [ -2100210951, %315 ], [ -155117926, %314 ], [ -1829125364, %312 ], [ 922691693, %311 ], [ -255217854, %310 ], [ %309, %297 ], [ %296, %295 ], [ %294, %283 ], [ %282, %273 ], [ -1829125364, %272 ], [ %271, %269 ], [ -2100210951, %268 ], [ -816849190, %267 ], [ %266, %262 ], [ %261, %259 ], [ -661136089, %258 ], [ %257, %255 ], [ -1452331328, %254 ], [ -1248637299, %253 ], [ %252, %242 ], [ %241, %232 ], [ 1419936168, %231 ], [ %230, %221 ], [ %220, %211 ], [ 1881229476, %210 ], [ %209, %199 ], [ %198, %189 ], [ 1534595533, %188 ], [ %187, %178 ], [ %177, %168 ], [ 528099567, %166 ], [ -2061596594, %157 ], [ %156, %154 ], [ 528099567, %153 ], [ %152, %143 ], [ %142, %133 ], [ %132, %130 ], [ 1881229476, %129 ], [ %128, %126 ], [ -1248637299, %125 ], [ 660707348, %123 ], [ -1581771126, %122 ], [ %121, %102 ], [ %101, %92 ], [ %91, %89 ], [ 660707348, %88 ], [ -946002018, %86 ], [ 2143391430, %85 ], [ %84, %74 ], [ %73, %64 ], [ 185592843, %62 ], [ 34159012, %60 ], [ %59, %58 ], [ %57, %46 ], [ %45, %36 ], [ 185592843, %35 ], [ %34, %25 ], [ %24, %15 ], [ %14, %12 ]
  br label %11

12:                                               ; preds = %11
  %13 = load i64, i64* %3, align 8
  %.not86 = icmp sgt i64 %.077, %13
  %14 = select i1 %.not86, i32 -231967692, i32 -1672944468
  br label %.backedge

15:                                               ; preds = %11
  %16 = load i32, i32* @x.1, align 4
  %17 = load i32, i32* @y.2, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1003568141, i32 -1055871339
  br label %.backedge

25:                                               ; preds = %11
  %26 = load i32, i32* @x.1, align 4
  %27 = load i32, i32* @y.2, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 1123745997, i32 -1055871339
  br label %.backedge

35:                                               ; preds = %11
  br label %.backedge

36:                                               ; preds = %11
  %37 = load i32, i32* @x.1, align 4
  %38 = load i32, i32* @y.2, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 342374755, i32 1412467836
  br label %.backedge

46:                                               ; preds = %11
  %47 = load i64, i64* %3, align 8
  %48 = icmp sle i64 %.075, %47
  store i1 %48, i1* %2, align 1
  %49 = load i32, i32* @x.1, align 4
  %50 = load i32, i32* @y.2, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 1494625213, i32 1412467836
  br label %.backedge

58:                                               ; preds = %11
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %59 = select i1 %.0..0..0., i32 1881286230, i32 1317457323
  br label %.backedge

60:                                               ; preds = %11
  %61 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %.077, i64 %.075
  store i64 1001001001, i64* %61, align 8
  br label %.backedge

62:                                               ; preds = %11
  %63 = add i64 %.075, 1
  br label %.backedge

64:                                               ; preds = %11
  %65 = load i32, i32* @x.1, align 4
  %66 = load i32, i32* @y.2, align 4
  %67 = add i32 %65, -1
  %68 = mul i32 %67, %65
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %71, %70
  %73 = select i1 %72, i32 1383918277, i32 -1225060306
  br label %.backedge

74:                                               ; preds = %11
  %75 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %.077, i64 %.077
  store i64 0, i64* %75, align 8
  %76 = load i32, i32* @x.1, align 4
  %77 = load i32, i32* @y.2, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 511477404, i32 -1225060306
  br label %.backedge

85:                                               ; preds = %11
  br label %.backedge

86:                                               ; preds = %11
  %87 = add i64 %.077, 1
  br label %.backedge

88:                                               ; preds = %11
  br label %.backedge

89:                                               ; preds = %11
  %90 = load i64, i64* %4, align 8
  %.not85 = icmp sgt i64 %.073, %90
  %91 = select i1 %.not85, i32 -1287812848, i32 -137260420
  br label %.backedge

92:                                               ; preds = %11
  %93 = load i32, i32* @x.1, align 4
  %94 = load i32, i32* @y.2, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 709213933, i32 -1013087187
  br label %.backedge

102:                                              ; preds = %11
  %103 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %5)
  %104 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %103, i64* nonnull dereferenceable(8) %6)
  %105 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %104, i64* nonnull dereferenceable(8) %7)
  %106 = load i64, i64* %7, align 8
  %107 = load i64, i64* %5, align 8
  %108 = load i64, i64* %6, align 8
  %109 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %107, i64 %108
  store i64 %106, i64* %109, align 8
  %110 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %108, i64 %107
  store i64 %106, i64* %110, align 8
  %111 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @wt, i64 0, i64 %107, i64 %108
  store i64 %106, i64* %111, align 8
  %112 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @wt, i64 0, i64 %108, i64 %107
  store i64 %106, i64* %112, align 8
  %113 = load i32, i32* @x.1, align 4
  %114 = load i32, i32* @y.2, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 1582324447, i32 -1013087187
  br label %.backedge

122:                                              ; preds = %11
  br label %.backedge

123:                                              ; preds = %11
  %124 = add i64 %.073, 1
  br label %.backedge

125:                                              ; preds = %11
  br label %.backedge

126:                                              ; preds = %11
  %127 = load i64, i64* %3, align 8
  %.not84 = icmp sgt i64 %.071, %127
  %128 = select i1 %.not84, i32 573439081, i32 2129437213
  br label %.backedge

129:                                              ; preds = %11
  br label %.backedge

130:                                              ; preds = %11
  %131 = load i64, i64* %3, align 8
  %.not83 = icmp sgt i64 %.069, %131
  %132 = select i1 %.not83, i32 273914213, i32 616459357
  br label %.backedge

133:                                              ; preds = %11
  %134 = load i32, i32* @x.1, align 4
  %135 = load i32, i32* @y.2, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 551705717, i32 666591799
  br label %.backedge

143:                                              ; preds = %11
  %144 = load i32, i32* @x.1, align 4
  %145 = load i32, i32* @y.2, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 -1018097551, i32 666591799
  br label %.backedge

153:                                              ; preds = %11
  br label %.backedge

154:                                              ; preds = %11
  %155 = load i64, i64* %3, align 8
  %.not82 = icmp sgt i64 %.067, %155
  %156 = select i1 %.not82, i32 1614668352, i32 1475994025
  br label %.backedge

157:                                              ; preds = %11
  %158 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %.069, i64 %.067
  %159 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %.069, i64 %.071
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %.071, i64 %.067
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, %160
  store i64 %163, i64* %8, align 8
  %164 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %158, i64* nonnull dereferenceable(8) %8)
  %165 = load i64, i64* %164, align 8
  store i64 %165, i64* %158, align 8
  br label %.backedge

166:                                              ; preds = %11
  %167 = add i64 %.067, 1
  br label %.backedge

168:                                              ; preds = %11
  %169 = load i32, i32* @x.1, align 4
  %170 = load i32, i32* @y.2, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 -1776360277, i32 -512732692
  br label %.backedge

178:                                              ; preds = %11
  %179 = load i32, i32* @x.1, align 4
  %180 = load i32, i32* @y.2, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 -1150784511, i32 -512732692
  br label %.backedge

188:                                              ; preds = %11
  br label %.backedge

189:                                              ; preds = %11
  %190 = load i32, i32* @x.1, align 4
  %191 = load i32, i32* @y.2, align 4
  %192 = add i32 %190, -1
  %193 = mul i32 %192, %190
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %196, %195
  %198 = select i1 %197, i32 775605921, i32 -767041027
  br label %.backedge

199:                                              ; preds = %11
  %200 = add i64 %.069, 1
  %201 = load i32, i32* @x.1, align 4
  %202 = load i32, i32* @y.2, align 4
  %203 = add i32 %201, -1
  %204 = mul i32 %203, %201
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %207, %206
  %209 = select i1 %208, i32 2087989486, i32 -767041027
  br label %.backedge

210:                                              ; preds = %11
  br label %.backedge

211:                                              ; preds = %11
  %212 = load i32, i32* @x.1, align 4
  %213 = load i32, i32* @y.2, align 4
  %214 = add i32 %212, -1
  %215 = mul i32 %214, %212
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %218, %217
  %220 = select i1 %219, i32 -2075179818, i32 1294291119
  br label %.backedge

221:                                              ; preds = %11
  %222 = load i32, i32* @x.1, align 4
  %223 = load i32, i32* @y.2, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 2036790586, i32 1294291119
  br label %.backedge

231:                                              ; preds = %11
  br label %.backedge

232:                                              ; preds = %11
  %233 = load i32, i32* @x.1, align 4
  %234 = load i32, i32* @y.2, align 4
  %235 = add i32 %233, -1
  %236 = mul i32 %235, %233
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %239, %238
  %241 = select i1 %240, i32 726556475, i32 -1619988980
  br label %.backedge

242:                                              ; preds = %11
  %243 = add i64 %.071, 1
  %244 = load i32, i32* @x.1, align 4
  %245 = load i32, i32* @y.2, align 4
  %246 = add i32 %244, -1
  %247 = mul i32 %246, %244
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %250, %249
  %252 = select i1 %251, i32 -886797452, i32 -1619988980
  br label %.backedge

253:                                              ; preds = %11
  br label %.backedge

254:                                              ; preds = %11
  br label %.backedge

255:                                              ; preds = %11
  %256 = load i64, i64* %3, align 8
  %.not81 = icmp sgt i64 %.063, %256
  %257 = select i1 %.not81, i32 -2106785245, i32 95290105
  br label %.backedge

258:                                              ; preds = %11
  %.neg = add i64 %.063, 1
  br label %.backedge

259:                                              ; preds = %11
  %260 = load i64, i64* %3, align 8
  %.not80 = icmp sgt i64 %.061, %260
  %261 = select i1 %.not80, i32 2033641130, i32 1114598458
  br label %.backedge

262:                                              ; preds = %11
  %263 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @wt, i64 0, i64 %.063, i64 %.061
  %264 = load i64, i64* %263, align 8
  %265 = icmp eq i64 %264, 0
  %266 = select i1 %265, i32 1440618090, i32 105685804
  br label %.backedge

267:                                              ; preds = %11
  br label %.backedge

268:                                              ; preds = %11
  br label %.backedge

269:                                              ; preds = %11
  %270 = load i64, i64* %3, align 8
  %.not79 = icmp sgt i64 %.057, %270
  %271 = select i1 %.not79, i32 1068223056, i32 469330011
  br label %.backedge

272:                                              ; preds = %11
  br label %.backedge

273:                                              ; preds = %11
  %274 = load i32, i32* @x.1, align 4
  %275 = load i32, i32* @y.2, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 -338180095, i32 473647042
  br label %.backedge

283:                                              ; preds = %11
  %284 = load i64, i64* %3, align 8
  %285 = icmp sle i64 %.055, %284
  store i1 %285, i1* %1, align 1
  %286 = load i32, i32* @x.1, align 4
  %287 = load i32, i32* @y.2, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 -687726141, i32 473647042
  br label %.backedge

295:                                              ; preds = %11
  %.0..0..0.54 = load volatile i1, i1* %1, align 1
  %296 = select i1 %.0..0..0.54, i32 168324877, i32 -1857025718
  br label %.backedge

297:                                              ; preds = %11
  %298 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %.057, i64 %.055
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %.057, i64 %.063
  %301 = load i64, i64* %300, align 8
  %302 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %.061, i64 %.055
  %303 = load i64, i64* %302, align 8
  %304 = add i64 %303, %301
  %305 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @wt, i64 0, i64 %.063, i64 %.061
  %306 = load i64, i64* %305, align 8
  %307 = add i64 %304, %306
  %308 = icmp eq i64 %299, %307
  %309 = select i1 %308, i32 -1600589902, i32 -255217854
  br label %.backedge

310:                                              ; preds = %11
  br label %.backedge

311:                                              ; preds = %11
  br label %.backedge

312:                                              ; preds = %11
  %313 = add i64 %.055, 1
  br label %.backedge

314:                                              ; preds = %11
  br label %.backedge

315:                                              ; preds = %11
  %316 = add i64 %.057, 1
  br label %.backedge

317:                                              ; preds = %11
  %318 = and i8 %.059, 1
  %.not = icmp eq i8 %318, 0
  %319 = select i1 %.not, i32 892765875, i32 -1438466064
  br label %.backedge

320:                                              ; preds = %11
  %321 = load i32, i32* @x.1, align 4
  %322 = load i32, i32* @y.2, align 4
  %323 = add i32 %321, -1
  %324 = mul i32 %323, %321
  %325 = and i32 %324, 1
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %327, %326
  %329 = select i1 %328, i32 -2030520097, i32 353244848
  br label %.backedge

330:                                              ; preds = %11
  %331 = add i64 %.065, 1
  %332 = load i32, i32* @x.1, align 4
  %333 = load i32, i32* @y.2, align 4
  %334 = add i32 %332, -1
  %335 = mul i32 %334, %332
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %338, %337
  %340 = select i1 %339, i32 -1762842416, i32 353244848
  br label %.backedge

341:                                              ; preds = %11
  br label %.backedge

342:                                              ; preds = %11
  %343 = load i32, i32* @x.1, align 4
  %344 = load i32, i32* @y.2, align 4
  %345 = add i32 %343, -1
  %346 = mul i32 %345, %343
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %349, %348
  %351 = select i1 %350, i32 -296888729, i32 469468690
  br label %.backedge

352:                                              ; preds = %11
  %353 = load i32, i32* @x.1, align 4
  %354 = load i32, i32* @y.2, align 4
  %355 = add i32 %353, -1
  %356 = mul i32 %355, %353
  %357 = and i32 %356, 1
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %359, %358
  %361 = select i1 %360, i32 -1472018005, i32 469468690
  br label %.backedge

362:                                              ; preds = %11
  br label %.backedge

363:                                              ; preds = %11
  %364 = add i64 %.061, 1
  br label %.backedge

365:                                              ; preds = %11
  %366 = load i32, i32* @x.1, align 4
  %367 = load i32, i32* @y.2, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 -1162333867, i32 1551575964
  br label %.backedge

375:                                              ; preds = %11
  %376 = load i32, i32* @x.1, align 4
  %377 = load i32, i32* @y.2, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 2129240204, i32 1551575964
  br label %.backedge

385:                                              ; preds = %11
  br label %.backedge

386:                                              ; preds = %11
  %387 = add i64 %.063, 1
  br label %.backedge

388:                                              ; preds = %11
  %389 = load i64, i64* %4, align 8
  %390 = sub i64 %389, %.065
  %391 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %390)
  %392 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %391, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void

393:                                              ; preds = %11
  br label %.backedge

394:                                              ; preds = %11
  br label %.backedge

395:                                              ; preds = %11
  %396 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %.077, i64 %.077
  store i64 0, i64* %396, align 8
  br label %.backedge

397:                                              ; preds = %11
  %398 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %5)
  %399 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %398, i64* nonnull dereferenceable(8) %6)
  %400 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %399, i64* nonnull dereferenceable(8) %7)
  %401 = load i64, i64* %7, align 8
  %402 = load i64, i64* %5, align 8
  %403 = load i64, i64* %6, align 8
  %404 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %402, i64 %403
  store i64 %401, i64* %404, align 8
  %405 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @adj, i64 0, i64 %403, i64 %402
  store i64 %401, i64* %405, align 8
  %406 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @wt, i64 0, i64 %402, i64 %403
  store i64 %401, i64* %406, align 8
  %407 = getelementptr inbounds [105 x [105 x i64]], [105 x [105 x i64]]* @wt, i64 0, i64 %403, i64 %402
  store i64 %401, i64* %407, align 8
  br label %.backedge

408:                                              ; preds = %11
  br label %.backedge

409:                                              ; preds = %11
  br label %.backedge

410:                                              ; preds = %11
  %411 = add i64 %.069, 1
  br label %.backedge

412:                                              ; preds = %11
  br label %.backedge

413:                                              ; preds = %11
  %414 = add i64 %.071, 1
  br label %.backedge

415:                                              ; preds = %11
  br label %.backedge

416:                                              ; preds = %11
  %417 = add i64 %.065, 1
  br label %.backedge

418:                                              ; preds = %11
  br label %.backedge

419:                                              ; preds = %11
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.3, align 4
  %8 = load i32, i32* @y.4, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1020749163, i32 1942987742
  %16 = select i1 %14, i32 -78028143, i32 1942987742
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -705464651, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 -705464651, label %18
    i32 1015563957, label %.outer10.backedge
    i32 -78028143, label %.outer.backedge
    i32 1020749163, label %21
    i32 -1993435688, label %22
    i32 -1800380785, label %23
    i32 1942987742, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 1015563957, i32 -1993435688
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -1800380785, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i64* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ -1800380785, %22 ], [ -78028143, %24 ], [ %15, %17 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %3 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %4 = getelementptr i8, i8* %3, i64 -24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %6
  %8 = bitcast i8* %7 to %"class.std::basic_ios"*
  %9 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %8, %"class.std::basic_ostream"* null)
  br label %10

10:                                               ; preds = %.backedge, %0
  %.04 = phi i64 [ 1, %0 ], [ %.04.be, %.backedge ]
  %.0 = phi i32 [ -964173590, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -964173590, label %11
    i32 1571372983, label %21
    i32 -601984492, label %32
    i32 556940462, label %34
    i32 -112188346, label %44
    i32 201071758, label %54
    i32 -1133358789, label %55
    i32 -1323546045, label %56
    i32 1448999028, label %57
  ]

.backedge:                                        ; preds = %10, %57, %56, %54, %44, %34, %32, %21, %11
  %.04.be = phi i64 [ %.04, %10 ], [ %.04, %57 ], [ %.neg, %56 ], [ %.04, %54 ], [ %.04, %44 ], [ %.04, %34 ], [ %.04, %32 ], [ %.neg6, %21 ], [ %.04, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ -112188346, %57 ], [ 1571372983, %56 ], [ -964173590, %54 ], [ %53, %44 ], [ %43, %34 ], [ %33, %32 ], [ %31, %21 ], [ %20, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* @x.5, align 4
  %13 = load i32, i32* @y.6, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 1571372983, i32 -1323546045
  br label %.backedge

21:                                               ; preds = %10
  %.neg6 = add i64 %.04, -1
  %22 = icmp ne i64 %.04, 0
  store i1 %22, i1* %1, align 1
  %23 = load i32, i32* @x.5, align 4
  %24 = load i32, i32* @y.6, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 -601984492, i32 -1323546045
  br label %.backedge

32:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %1, align 1
  %33 = select i1 %.0..0..0., i32 556940462, i32 -1133358789
  br label %.backedge

34:                                               ; preds = %10
  %35 = load i32, i32* @x.5, align 4
  %36 = load i32, i32* @y.6, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -112188346, i32 1448999028
  br label %.backedge

44:                                               ; preds = %10
  tail call void @_Z5solvev()
  %45 = load i32, i32* @x.5, align 4
  %46 = load i32, i32* @y.6, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 201071758, i32 1448999028
  br label %.backedge

54:                                               ; preds = %10
  br label %.backedge

55:                                               ; preds = %10
  ret i32 0

56:                                               ; preds = %10
  %.neg = add i64 %.04, -1
  br label %.backedge

57:                                               ; preds = %10
  tail call void @_Z5solvev()
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s317583989.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
