; ModuleID = 'build_ollvm/programs/p03421/s841498437.ll'
source_filename = "Project_CodeNet_C++1400/p03421/s841498437.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s841498437.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %10 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %13
  %15 = bitcast i8* %14 to %"class.std::basic_ios"*
  %16 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %15, %"class.std::basic_ostream"* null)
  %17 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %6)
  %18 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %17, i64* nonnull dereferenceable(8) %7)
  %19 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %18, i64* nonnull dereferenceable(8) %8)
  %20 = load i64, i64* %6, align 8
  store i64 %20, i64* %5, align 8
  %21 = load i64, i64* %7, align 8
  %22 = load i64, i64* %8, align 8
  %23 = mul nsw i64 %22, %21
  store i64 %23, i64* %4, align 8
  br label %24

24:                                               ; preds = %.backedge, %0
  %.081 = phi i64 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i64 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i64 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i64 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i64 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i64 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i64 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i64 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i64 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.0 = phi i32 [ -17077938, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -17077938, label %25
    i32 -1730754390, label %28
    i32 455019883, label %36
    i32 1222596329, label %46
    i32 -307717073, label %58
    i32 -872602296, label %59
    i32 -767064742, label %63
    i32 2051350139, label %64
    i32 -1392176665, label %68
    i32 540398323, label %72
    i32 -1418454848, label %82
    i32 9342818, label %94
    i32 451446034, label %95
    i32 -317710076, label %105
    i32 -631937808, label %117
    i32 852539916, label %118
    i32 -1623028391, label %119
    i32 1004078765, label %129
    i32 375608559, label %139
    i32 -583052418, label %140
    i32 628369496, label %141
    i32 1055822290, label %153
    i32 -2922068, label %156
    i32 -716335984, label %166
    i32 51720908, label %176
    i32 1943781747, label %177
    i32 652293867, label %181
    i32 1628196831, label %185
    i32 1581703789, label %195
    i32 378907616, label %208
    i32 162512204, label %210
    i32 -885951202, label %213
    i32 621151642, label %220
    i32 1876047010, label %227
    i32 -1137245739, label %228
    i32 1547703208, label %230
    i32 633300274, label %231
    i32 272987609, label %241
    i32 1147213505, label %251
    i32 1949789238, label %252
    i32 1982291034, label %255
    i32 919663513, label %256
    i32 -1583320351, label %266
    i32 -1072964769, label %277
    i32 1559248429, label %279
    i32 991563859, label %286
    i32 2073601409, label %288
    i32 -1378155394, label %289
    i32 612630135, label %292
    i32 -1367677167, label %296
    i32 -94677150, label %304
    i32 -1783243907, label %310
    i32 -1889930034, label %311
    i32 -1642039077, label %321
    i32 254074590, label %331
    i32 -357834894, label %332
    i32 -1647532235, label %333
    i32 -1825666704, label %343
    i32 -326358985, label %354
    i32 1971747611, label %356
    i32 -1137729209, label %357
    i32 1090859215, label %360
    i32 -1685560457, label %364
    i32 1519436270, label %371
    i32 -1272098693, label %378
    i32 -1224686231, label %379
    i32 891713007, label %381
    i32 -1395524465, label %382
    i32 928812683, label %383
    i32 -697073280, label %393
    i32 1683039936, label %403
    i32 438936896, label %404
    i32 -1339653326, label %405
    i32 -661185830, label %408
    i32 -59686103, label %411
    i32 198027095, label %414
    i32 -806667418, label %416
    i32 1202888894, label %417
    i32 -384300698, label %418
    i32 1071425799, label %420
    i32 524874973, label %421
    i32 610943696, label %423
    i32 -752905383, label %424
  ]

.backedge:                                        ; preds = %24, %424, %423, %421, %420, %418, %417, %416, %414, %411, %408, %405, %403, %393, %383, %382, %381, %379, %378, %371, %364, %360, %357, %356, %354, %343, %333, %332, %331, %321, %311, %310, %304, %296, %292, %289, %288, %286, %279, %277, %266, %256, %255, %252, %251, %241, %231, %230, %228, %227, %220, %213, %210, %208, %195, %185, %181, %177, %176, %166, %156, %153, %141, %140, %139, %129, %119, %118, %117, %105, %95, %94, %82, %72, %68, %64, %63, %59, %58, %46, %36, %28, %25
  %.081.be = phi i64 [ %.081, %24 ], [ %.081, %424 ], [ %.081, %423 ], [ %.081, %421 ], [ %.081, %420 ], [ %.081, %418 ], [ %.081, %417 ], [ %.081, %416 ], [ %415, %414 ], [ %.081, %411 ], [ %.081, %408 ], [ %.081, %405 ], [ %.081, %403 ], [ %.081, %393 ], [ %.081, %383 ], [ %.081, %382 ], [ %.081, %381 ], [ %.081, %379 ], [ %.081, %378 ], [ %.081, %371 ], [ %.081, %364 ], [ %.081, %360 ], [ %.081, %357 ], [ %.081, %356 ], [ %.081, %354 ], [ %.081, %343 ], [ %.081, %333 ], [ %.081, %332 ], [ %.081, %331 ], [ %.081, %321 ], [ %.081, %311 ], [ %.081, %310 ], [ %.081, %304 ], [ %.081, %296 ], [ %.081, %292 ], [ %.081, %289 ], [ %.081, %288 ], [ %.081, %286 ], [ %.081, %279 ], [ %.081, %277 ], [ %.081, %266 ], [ %.081, %256 ], [ %.081, %255 ], [ %.081, %252 ], [ %.081, %251 ], [ %.081, %241 ], [ %.081, %231 ], [ %.081, %230 ], [ %.081, %228 ], [ %.081, %227 ], [ %.081, %220 ], [ %.081, %213 ], [ %.081, %210 ], [ %.081, %208 ], [ %.081, %195 ], [ %.081, %185 ], [ %.081, %181 ], [ %.081, %177 ], [ %.081, %176 ], [ %.081, %166 ], [ %.081, %156 ], [ %.081, %153 ], [ %.081, %141 ], [ %.081, %140 ], [ %.081, %139 ], [ %.neg86, %129 ], [ %.081, %119 ], [ %.081, %118 ], [ %.081, %117 ], [ %.081, %105 ], [ %.081, %95 ], [ %.081, %94 ], [ %.081, %82 ], [ %.081, %72 ], [ %.081, %68 ], [ %.081, %64 ], [ 1, %63 ], [ %.081, %59 ], [ %.081, %58 ], [ %.081, %46 ], [ %.081, %36 ], [ %.081, %28 ], [ %.081, %25 ]
  %.079.be = phi i64 [ %.079, %24 ], [ %.079, %424 ], [ %.079, %423 ], [ %.079, %421 ], [ %.079, %420 ], [ %.079, %418 ], [ %.079, %417 ], [ %.079, %416 ], [ %.079, %414 ], [ %.079, %411 ], [ %.079, %408 ], [ %.079, %405 ], [ %.079, %403 ], [ %.079, %393 ], [ %.079, %383 ], [ %.079, %382 ], [ %.079, %381 ], [ %.079, %379 ], [ %.079, %378 ], [ %.079, %371 ], [ %.079, %364 ], [ %.079, %360 ], [ %.079, %357 ], [ %.079, %356 ], [ %.079, %354 ], [ %.079, %343 ], [ %.079, %333 ], [ %.079, %332 ], [ %.079, %331 ], [ %.079, %321 ], [ %.079, %311 ], [ %.079, %310 ], [ %.079, %304 ], [ %.079, %296 ], [ %.079, %292 ], [ %.079, %289 ], [ %.079, %288 ], [ %.079, %286 ], [ %.079, %279 ], [ %.079, %277 ], [ %.079, %266 ], [ %.079, %256 ], [ %.079, %255 ], [ %.079, %252 ], [ %.079, %251 ], [ %.079, %241 ], [ %.079, %231 ], [ %.079, %230 ], [ %.079, %228 ], [ %.079, %227 ], [ %.079, %220 ], [ %.079, %213 ], [ %.079, %210 ], [ %.079, %208 ], [ %.079, %195 ], [ %.079, %185 ], [ %.079, %181 ], [ %.079, %177 ], [ %.079, %176 ], [ %.079, %166 ], [ %.079, %156 ], [ %.079, %153 ], [ %147, %141 ], [ %.079, %140 ], [ %.079, %139 ], [ %.079, %129 ], [ %.079, %119 ], [ %.079, %118 ], [ %.079, %117 ], [ %.079, %105 ], [ %.079, %95 ], [ %.079, %94 ], [ %.079, %82 ], [ %.079, %72 ], [ %.079, %68 ], [ %.079, %64 ], [ %.079, %63 ], [ %.079, %59 ], [ %.079, %58 ], [ %.079, %46 ], [ %.079, %36 ], [ %.079, %28 ], [ %.079, %25 ]
  %.077.be = phi i64 [ %.077, %24 ], [ %.077, %424 ], [ %.077, %423 ], [ %.077, %421 ], [ %.077, %420 ], [ %.077, %418 ], [ %.077, %417 ], [ %.077, %416 ], [ %.077, %414 ], [ %.077, %411 ], [ %.077, %408 ], [ %.077, %405 ], [ %.077, %403 ], [ %.077, %393 ], [ %.077, %383 ], [ %.077, %382 ], [ %.077, %381 ], [ %.077, %379 ], [ %.077, %378 ], [ %.077, %371 ], [ %.077, %364 ], [ %.077, %360 ], [ %.077, %357 ], [ %.077, %356 ], [ %.077, %354 ], [ %.077, %343 ], [ %.077, %333 ], [ %.077, %332 ], [ %.077, %331 ], [ %.077, %321 ], [ %.077, %311 ], [ %.077, %310 ], [ %.077, %304 ], [ %.077, %296 ], [ %.077, %292 ], [ %.077, %289 ], [ %.077, %288 ], [ %.077, %286 ], [ %.077, %279 ], [ %.077, %277 ], [ %.077, %266 ], [ %.077, %256 ], [ %.077, %255 ], [ %.077, %252 ], [ %.077, %251 ], [ %.077, %241 ], [ %.077, %231 ], [ %.077, %230 ], [ %.077, %228 ], [ %.077, %227 ], [ %.077, %220 ], [ %.077, %213 ], [ %.077, %210 ], [ %.077, %208 ], [ %.077, %195 ], [ %.077, %185 ], [ %.077, %181 ], [ %.077, %177 ], [ %.077, %176 ], [ %.077, %166 ], [ %.077, %156 ], [ %.077, %153 ], [ %149, %141 ], [ %.077, %140 ], [ %.077, %139 ], [ %.077, %129 ], [ %.077, %119 ], [ %.077, %118 ], [ %.077, %117 ], [ %.077, %105 ], [ %.077, %95 ], [ %.077, %94 ], [ %.077, %82 ], [ %.077, %72 ], [ %.077, %68 ], [ %.077, %64 ], [ %.077, %63 ], [ %.077, %59 ], [ %.077, %58 ], [ %.077, %46 ], [ %.077, %36 ], [ %.077, %28 ], [ %.077, %25 ]
  %.075.be = phi i64 [ %.075, %24 ], [ %.075, %424 ], [ %.075, %423 ], [ %.075, %421 ], [ %.075, %420 ], [ %.075, %418 ], [ %.075, %417 ], [ %.075, %416 ], [ %.075, %414 ], [ %.075, %411 ], [ %.075, %408 ], [ %.075, %405 ], [ %.075, %403 ], [ %.075, %393 ], [ %.075, %383 ], [ %.075, %382 ], [ %.075, %381 ], [ %.075, %379 ], [ %.075, %378 ], [ %.075, %371 ], [ %.075, %364 ], [ %.075, %360 ], [ %.075, %357 ], [ %.075, %356 ], [ %.075, %354 ], [ %.075, %343 ], [ %.075, %333 ], [ %.075, %332 ], [ %.075, %331 ], [ %.075, %321 ], [ %.075, %311 ], [ %.075, %310 ], [ %.075, %304 ], [ %.075, %296 ], [ %.075, %292 ], [ %.075, %289 ], [ %.075, %288 ], [ %.075, %286 ], [ %.075, %279 ], [ %.075, %277 ], [ %.075, %266 ], [ %.075, %256 ], [ %.075, %255 ], [ %.075, %252 ], [ %.075, %251 ], [ %.075, %241 ], [ %.075, %231 ], [ %.075, %230 ], [ %.075, %228 ], [ %.075, %227 ], [ %.075, %220 ], [ %.075, %213 ], [ %.075, %210 ], [ %.075, %208 ], [ %.075, %195 ], [ %.075, %185 ], [ %.075, %181 ], [ %.075, %177 ], [ %.075, %176 ], [ %.075, %166 ], [ %.075, %156 ], [ %.075, %153 ], [ %152, %141 ], [ %.075, %140 ], [ %.075, %139 ], [ %.075, %129 ], [ %.075, %119 ], [ %.075, %118 ], [ %.075, %117 ], [ %.075, %105 ], [ %.075, %95 ], [ %.075, %94 ], [ %.075, %82 ], [ %.075, %72 ], [ %.075, %68 ], [ %.075, %64 ], [ %.075, %63 ], [ %.075, %59 ], [ %.075, %58 ], [ %.075, %46 ], [ %.075, %36 ], [ %.075, %28 ], [ %.075, %25 ]
  %.073.be = phi i64 [ %.073, %24 ], [ %.073, %424 ], [ %.073, %423 ], [ %.073, %421 ], [ %.073, %420 ], [ %419, %418 ], [ %.073, %417 ], [ %.073, %416 ], [ %.073, %414 ], [ %.073, %411 ], [ %.073, %408 ], [ %.073, %405 ], [ %.073, %403 ], [ %.073, %393 ], [ %.073, %383 ], [ %.073, %382 ], [ %.073, %381 ], [ %.073, %379 ], [ %.073, %378 ], [ %.073, %371 ], [ %.073, %364 ], [ %.073, %360 ], [ %.073, %357 ], [ %.073, %356 ], [ %.073, %354 ], [ %.073, %343 ], [ %.073, %333 ], [ %.073, %332 ], [ %.073, %331 ], [ %.073, %321 ], [ %.073, %311 ], [ %.073, %310 ], [ %.073, %304 ], [ %.073, %296 ], [ %.073, %292 ], [ %.073, %289 ], [ %.073, %288 ], [ %.073, %286 ], [ %.073, %279 ], [ %.073, %277 ], [ %.073, %266 ], [ %.073, %256 ], [ %.073, %255 ], [ %.073, %252 ], [ %.073, %251 ], [ %.neg85, %241 ], [ %.073, %231 ], [ %.073, %230 ], [ %.073, %228 ], [ %.073, %227 ], [ %.073, %220 ], [ %.073, %213 ], [ %.073, %210 ], [ %.073, %208 ], [ %.073, %195 ], [ %.073, %185 ], [ %.073, %181 ], [ %.073, %177 ], [ %.073, %176 ], [ %.073, %166 ], [ %.073, %156 ], [ %.073, %153 ], [ 0, %141 ], [ %.073, %140 ], [ %.073, %139 ], [ %.073, %129 ], [ %.073, %119 ], [ %.073, %118 ], [ %.073, %117 ], [ %.073, %105 ], [ %.073, %95 ], [ %.073, %94 ], [ %.073, %82 ], [ %.073, %72 ], [ %.073, %68 ], [ %.073, %64 ], [ %.073, %63 ], [ %.073, %59 ], [ %.073, %58 ], [ %.073, %46 ], [ %.073, %36 ], [ %.073, %28 ], [ %.073, %25 ]
  %.071.be = phi i64 [ %.071, %24 ], [ %.071, %424 ], [ %.071, %423 ], [ %.071, %421 ], [ %.071, %420 ], [ %.071, %418 ], [ %.071, %417 ], [ 0, %416 ], [ %.071, %414 ], [ %.071, %411 ], [ %.071, %408 ], [ %.071, %405 ], [ %.071, %403 ], [ %.071, %393 ], [ %.071, %383 ], [ %.071, %382 ], [ %.071, %381 ], [ %.071, %379 ], [ %.071, %378 ], [ %.071, %371 ], [ %.071, %364 ], [ %.071, %360 ], [ %.071, %357 ], [ %.071, %356 ], [ %.071, %354 ], [ %.071, %343 ], [ %.071, %333 ], [ %.071, %332 ], [ %.071, %331 ], [ %.071, %321 ], [ %.071, %311 ], [ %.071, %310 ], [ %.071, %304 ], [ %.071, %296 ], [ %.071, %292 ], [ %.071, %289 ], [ %.071, %288 ], [ %.071, %286 ], [ %.071, %279 ], [ %.071, %277 ], [ %.071, %266 ], [ %.071, %256 ], [ %.071, %255 ], [ %.071, %252 ], [ %.071, %251 ], [ %.071, %241 ], [ %.071, %231 ], [ %.071, %230 ], [ %229, %228 ], [ %.071, %227 ], [ %.071, %220 ], [ %.071, %213 ], [ %.071, %210 ], [ %.071, %208 ], [ %.071, %195 ], [ %.071, %185 ], [ %.071, %181 ], [ %.071, %177 ], [ %.071, %176 ], [ 0, %166 ], [ %.071, %156 ], [ %.071, %153 ], [ %.071, %141 ], [ %.071, %140 ], [ %.071, %139 ], [ %.071, %129 ], [ %.071, %119 ], [ %.071, %118 ], [ %.071, %117 ], [ %.071, %105 ], [ %.071, %95 ], [ %.071, %94 ], [ %.071, %82 ], [ %.071, %72 ], [ %.071, %68 ], [ %.071, %64 ], [ %.071, %63 ], [ %.071, %59 ], [ %.071, %58 ], [ %.071, %46 ], [ %.071, %36 ], [ %.071, %28 ], [ %.071, %25 ]
  %.069.be = phi i64 [ %.069, %24 ], [ %.069, %424 ], [ %.069, %423 ], [ %.069, %421 ], [ %.069, %420 ], [ %.069, %418 ], [ %.069, %417 ], [ %.069, %416 ], [ %.069, %414 ], [ %.069, %411 ], [ %.069, %408 ], [ %.069, %405 ], [ %.069, %403 ], [ %.069, %393 ], [ %.069, %383 ], [ %.069, %382 ], [ %.069, %381 ], [ %.069, %379 ], [ %.069, %378 ], [ %.069, %371 ], [ %.069, %364 ], [ %.069, %360 ], [ %.069, %357 ], [ %.069, %356 ], [ %.069, %354 ], [ %.069, %343 ], [ %.069, %333 ], [ %.069, %332 ], [ %.069, %331 ], [ %.069, %321 ], [ %.069, %311 ], [ %.069, %310 ], [ %.069, %304 ], [ %.069, %296 ], [ %.069, %292 ], [ %.069, %289 ], [ %.069, %288 ], [ %287, %286 ], [ %.069, %279 ], [ %.069, %277 ], [ %.069, %266 ], [ %.069, %256 ], [ 0, %255 ], [ %.069, %252 ], [ %.069, %251 ], [ %.069, %241 ], [ %.069, %231 ], [ %.069, %230 ], [ %.069, %228 ], [ %.069, %227 ], [ %.069, %220 ], [ %.069, %213 ], [ %.069, %210 ], [ %.069, %208 ], [ %.069, %195 ], [ %.069, %185 ], [ %.069, %181 ], [ %.069, %177 ], [ %.069, %176 ], [ %.069, %166 ], [ %.069, %156 ], [ %.069, %153 ], [ %.069, %141 ], [ %.069, %140 ], [ %.069, %139 ], [ %.069, %129 ], [ %.069, %119 ], [ %.069, %118 ], [ %.069, %117 ], [ %.069, %105 ], [ %.069, %95 ], [ %.069, %94 ], [ %.069, %82 ], [ %.069, %72 ], [ %.069, %68 ], [ %.069, %64 ], [ %.069, %63 ], [ %.069, %59 ], [ %.069, %58 ], [ %.069, %46 ], [ %.069, %36 ], [ %.069, %28 ], [ %.069, %25 ]
  %.067.be = phi i64 [ %.067, %24 ], [ %.067, %424 ], [ %.067, %423 ], [ %422, %421 ], [ %.067, %420 ], [ %.067, %418 ], [ %.067, %417 ], [ %.067, %416 ], [ %.067, %414 ], [ %.067, %411 ], [ %.067, %408 ], [ %.067, %405 ], [ %.067, %403 ], [ %.067, %393 ], [ %.067, %383 ], [ %.067, %382 ], [ %.067, %381 ], [ %.067, %379 ], [ %.067, %378 ], [ %.067, %371 ], [ %.067, %364 ], [ %.067, %360 ], [ %.067, %357 ], [ %.067, %356 ], [ %.067, %354 ], [ %.067, %343 ], [ %.067, %333 ], [ %.067, %332 ], [ %.067, %331 ], [ %.neg, %321 ], [ %.067, %311 ], [ %.067, %310 ], [ %.067, %304 ], [ %.067, %296 ], [ %.067, %292 ], [ %.067, %289 ], [ 0, %288 ], [ %.067, %286 ], [ %.067, %279 ], [ %.067, %277 ], [ %.067, %266 ], [ %.067, %256 ], [ %.067, %255 ], [ %.067, %252 ], [ %.067, %251 ], [ %.067, %241 ], [ %.067, %231 ], [ %.067, %230 ], [ %.067, %228 ], [ %.067, %227 ], [ %.067, %220 ], [ %.067, %213 ], [ %.067, %210 ], [ %.067, %208 ], [ %.067, %195 ], [ %.067, %185 ], [ %.067, %181 ], [ %.067, %177 ], [ %.067, %176 ], [ %.067, %166 ], [ %.067, %156 ], [ %.067, %153 ], [ %.067, %141 ], [ %.067, %140 ], [ %.067, %139 ], [ %.067, %129 ], [ %.067, %119 ], [ %.067, %118 ], [ %.067, %117 ], [ %.067, %105 ], [ %.067, %95 ], [ %.067, %94 ], [ %.067, %82 ], [ %.067, %72 ], [ %.067, %68 ], [ %.067, %64 ], [ %.067, %63 ], [ %.067, %59 ], [ %.067, %58 ], [ %.067, %46 ], [ %.067, %36 ], [ %.067, %28 ], [ %.067, %25 ]
  %.065.be = phi i64 [ %.065, %24 ], [ %.065, %424 ], [ %.065, %423 ], [ %.065, %421 ], [ %.065, %420 ], [ %.065, %418 ], [ %.065, %417 ], [ %.065, %416 ], [ %.065, %414 ], [ %.065, %411 ], [ %.065, %408 ], [ %.065, %405 ], [ %.065, %403 ], [ %.065, %393 ], [ %.065, %383 ], [ %.065, %382 ], [ %.065, %381 ], [ %380, %379 ], [ %.065, %378 ], [ %.065, %371 ], [ %.065, %364 ], [ %.065, %360 ], [ %.065, %357 ], [ 0, %356 ], [ %.065, %354 ], [ %.065, %343 ], [ %.065, %333 ], [ %.065, %332 ], [ %.065, %331 ], [ %.065, %321 ], [ %.065, %311 ], [ %.065, %310 ], [ %.065, %304 ], [ %.065, %296 ], [ %.065, %292 ], [ %.065, %289 ], [ %.065, %288 ], [ %.065, %286 ], [ %.065, %279 ], [ %.065, %277 ], [ %.065, %266 ], [ %.065, %256 ], [ %.065, %255 ], [ %.065, %252 ], [ %.065, %251 ], [ %.065, %241 ], [ %.065, %231 ], [ %.065, %230 ], [ %.065, %228 ], [ %.065, %227 ], [ %.065, %220 ], [ %.065, %213 ], [ %.065, %210 ], [ %.065, %208 ], [ %.065, %195 ], [ %.065, %185 ], [ %.065, %181 ], [ %.065, %177 ], [ %.065, %176 ], [ %.065, %166 ], [ %.065, %156 ], [ %.065, %153 ], [ %.065, %141 ], [ %.065, %140 ], [ %.065, %139 ], [ %.065, %129 ], [ %.065, %119 ], [ %.065, %118 ], [ %.065, %117 ], [ %.065, %105 ], [ %.065, %95 ], [ %.065, %94 ], [ %.065, %82 ], [ %.065, %72 ], [ %.065, %68 ], [ %.065, %64 ], [ %.065, %63 ], [ %.065, %59 ], [ %.065, %58 ], [ %.065, %46 ], [ %.065, %36 ], [ %.065, %28 ], [ %.065, %25 ]
  %.0.be = phi i32 [ %.0, %24 ], [ -697073280, %424 ], [ -1825666704, %423 ], [ -1642039077, %421 ], [ -1583320351, %420 ], [ 272987609, %418 ], [ 1581703789, %417 ], [ -716335984, %416 ], [ 1004078765, %414 ], [ -317710076, %411 ], [ -1418454848, %408 ], [ 1222596329, %405 ], [ 438936896, %403 ], [ %402, %393 ], [ %392, %383 ], [ 928812683, %382 ], [ -1395524465, %381 ], [ -1137729209, %379 ], [ -1224686231, %378 ], [ -1272098693, %371 ], [ -1272098693, %364 ], [ %363, %360 ], [ %359, %357 ], [ -1137729209, %356 ], [ %355, %354 ], [ %353, %343 ], [ %342, %333 ], [ -1647532235, %332 ], [ -1378155394, %331 ], [ %330, %321 ], [ %320, %311 ], [ -1889930034, %310 ], [ -1783243907, %304 ], [ -1783243907, %296 ], [ %295, %292 ], [ %291, %289 ], [ -1378155394, %288 ], [ 919663513, %286 ], [ 991563859, %279 ], [ %278, %277 ], [ %276, %266 ], [ %265, %256 ], [ 919663513, %255 ], [ %254, %252 ], [ 1055822290, %251 ], [ %250, %241 ], [ %240, %231 ], [ 633300274, %230 ], [ 1943781747, %228 ], [ -1137245739, %227 ], [ 1876047010, %220 ], [ 1876047010, %213 ], [ %212, %210 ], [ %209, %208 ], [ %207, %195 ], [ %194, %185 ], [ %184, %181 ], [ %180, %177 ], [ 1943781747, %176 ], [ %175, %166 ], [ %165, %156 ], [ %155, %153 ], [ 1055822290, %141 ], [ 928812683, %140 ], [ 2051350139, %139 ], [ %138, %129 ], [ %128, %119 ], [ -1623028391, %118 ], [ 852539916, %117 ], [ %116, %105 ], [ %104, %95 ], [ 852539916, %94 ], [ %93, %82 ], [ %81, %72 ], [ %71, %68 ], [ %67, %64 ], [ 2051350139, %63 ], [ %62, %59 ], [ 438936896, %58 ], [ %57, %46 ], [ %45, %36 ], [ %35, %28 ], [ %27, %25 ]
  br label %24

25:                                               ; preds = %24
  %.0..0..0. = load volatile i64, i64* %5, align 8
  %.0..0..0.61 = load volatile i64, i64* %4, align 8
  %26 = icmp sgt i64 %.0..0..0., %.0..0..0.61
  %27 = select i1 %26, i32 455019883, i32 -1730754390
  br label %.backedge

28:                                               ; preds = %24
  %29 = load i64, i64* %6, align 8
  %30 = load i64, i64* %7, align 8
  %31 = load i64, i64* %8, align 8
  %32 = add i64 %30, -1
  %33 = add i64 %32, %31
  %34 = icmp slt i64 %29, %33
  %35 = select i1 %34, i32 455019883, i32 -872602296
  br label %.backedge

36:                                               ; preds = %24
  %37 = load i32, i32* @x.2, align 4
  %38 = load i32, i32* @y.3, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 1222596329, i32 -1339653326
  br label %.backedge

46:                                               ; preds = %24
  %47 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 -1)
  %48 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %49 = load i32, i32* @x.2, align 4
  %50 = load i32, i32* @y.3, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 -307717073, i32 -1339653326
  br label %.backedge

58:                                               ; preds = %24
  br label %.backedge

59:                                               ; preds = %24
  %60 = load i64, i64* %8, align 8
  %61 = icmp eq i64 %60, 1
  %62 = select i1 %61, i32 -767064742, i32 628369496
  br label %.backedge

63:                                               ; preds = %24
  br label %.backedge

64:                                               ; preds = %24
  %65 = load i64, i64* %6, align 8
  %.neg87 = add i64 %65, 1
  %66 = icmp slt i64 %.081, %.neg87
  %67 = select i1 %66, i32 -1392176665, i32 -583052418
  br label %.backedge

68:                                               ; preds = %24
  %69 = load i64, i64* %6, align 8
  %70 = icmp eq i64 %.081, %69
  %71 = select i1 %70, i32 540398323, i32 451446034
  br label %.backedge

72:                                               ; preds = %24
  %73 = load i32, i32* @x.2, align 4
  %74 = load i32, i32* @y.3, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -1418454848, i32 -661185830
  br label %.backedge

82:                                               ; preds = %24
  %83 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.081)
  %84 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %85 = load i32, i32* @x.2, align 4
  %86 = load i32, i32* @y.3, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 9342818, i32 -661185830
  br label %.backedge

94:                                               ; preds = %24
  br label %.backedge

95:                                               ; preds = %24
  %96 = load i32, i32* @x.2, align 4
  %97 = load i32, i32* @y.3, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 -317710076, i32 -59686103
  br label %.backedge

105:                                              ; preds = %24
  %106 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.081)
  %107 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %108 = load i32, i32* @x.2, align 4
  %109 = load i32, i32* @y.3, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -631937808, i32 -59686103
  br label %.backedge

117:                                              ; preds = %24
  br label %.backedge

118:                                              ; preds = %24
  br label %.backedge

119:                                              ; preds = %24
  %120 = load i32, i32* @x.2, align 4
  %121 = load i32, i32* @y.3, align 4
  %122 = add i32 %120, -1
  %123 = mul i32 %122, %120
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %126, %125
  %128 = select i1 %127, i32 1004078765, i32 198027095
  br label %.backedge

129:                                              ; preds = %24
  %.neg86 = add i64 %.081, 1
  %130 = load i32, i32* @x.2, align 4
  %131 = load i32, i32* @y.3, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 375608559, i32 198027095
  br label %.backedge

139:                                              ; preds = %24
  br label %.backedge

140:                                              ; preds = %24
  br label %.backedge

141:                                              ; preds = %24
  %142 = load i64, i64* %6, align 8
  %143 = load i64, i64* %7, align 8
  %144 = sub i64 %142, %143
  %145 = load i64, i64* %8, align 8
  %146 = add i64 %145, -1
  %147 = sdiv i64 %144, %146
  %148 = srem i64 %144, %146
  %149 = add i64 %148, 1
  %150 = mul nsw i64 %147, %145
  %.neg89 = xor i64 %148, -1
  %151 = sub i64 %142, %150
  %152 = add i64 %151, %.neg89
  br label %.backedge

153:                                              ; preds = %24
  %154 = icmp slt i64 %.073, %.079
  %155 = select i1 %154, i32 -2922068, i32 1949789238
  br label %.backedge

156:                                              ; preds = %24
  %157 = load i32, i32* @x.2, align 4
  %158 = load i32, i32* @y.3, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 -716335984, i32 -806667418
  br label %.backedge

166:                                              ; preds = %24
  %167 = load i32, i32* @x.2, align 4
  %168 = load i32, i32* @y.3, align 4
  %169 = add i32 %167, -1
  %170 = mul i32 %169, %167
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %173, %172
  %175 = select i1 %174, i32 51720908, i32 -806667418
  br label %.backedge

176:                                              ; preds = %24
  br label %.backedge

177:                                              ; preds = %24
  %178 = load i64, i64* %8, align 8
  %179 = icmp slt i64 %.071, %178
  %180 = select i1 %179, i32 652293867, i32 1547703208
  br label %.backedge

181:                                              ; preds = %24
  %182 = add i64 %.079, -1
  %183 = icmp eq i64 %.073, %182
  %184 = select i1 %183, i32 1628196831, i32 621151642
  br label %.backedge

185:                                              ; preds = %24
  %186 = load i32, i32* @x.2, align 4
  %187 = load i32, i32* @y.3, align 4
  %188 = add i32 %186, -1
  %189 = mul i32 %188, %186
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %192, %191
  %194 = select i1 %193, i32 1581703789, i32 1202888894
  br label %.backedge

195:                                              ; preds = %24
  %196 = load i64, i64* %8, align 8
  %197 = add i64 %196, -1
  %198 = icmp eq i64 %.071, %197
  store i1 %198, i1* %3, align 1
  %199 = load i32, i32* @x.2, align 4
  %200 = load i32, i32* @y.3, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 378907616, i32 1202888894
  br label %.backedge

208:                                              ; preds = %24
  %.0..0..0.62 = load volatile i1, i1* %3, align 1
  %209 = select i1 %.0..0..0.62, i32 162512204, i32 621151642
  br label %.backedge

210:                                              ; preds = %24
  %211 = icmp slt i64 %.075, 0
  %212 = select i1 %211, i32 -885951202, i32 621151642
  br label %.backedge

213:                                              ; preds = %24
  %214 = load i64, i64* %8, align 8
  %215 = mul nsw i64 %214, %.073
  %216 = sub i64 %214, %.071
  %217 = add i64 %216, %215
  %218 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %217)
  %219 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %218, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

220:                                              ; preds = %24
  %221 = load i64, i64* %8, align 8
  %222 = mul nsw i64 %221, %.073
  %223 = sub i64 %221, %.071
  %224 = add i64 %223, %222
  %225 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %224)
  %226 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %225, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

227:                                              ; preds = %24
  br label %.backedge

228:                                              ; preds = %24
  %229 = add i64 %.071, 1
  br label %.backedge

230:                                              ; preds = %24
  br label %.backedge

231:                                              ; preds = %24
  %232 = load i32, i32* @x.2, align 4
  %233 = load i32, i32* @y.3, align 4
  %234 = add i32 %232, -1
  %235 = mul i32 %234, %232
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %238, %237
  %240 = select i1 %239, i32 272987609, i32 -384300698
  br label %.backedge

241:                                              ; preds = %24
  %.neg85 = add i64 %.073, 1
  %242 = load i32, i32* @x.2, align 4
  %243 = load i32, i32* @y.3, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 1147213505, i32 -384300698
  br label %.backedge

251:                                              ; preds = %24
  br label %.backedge

252:                                              ; preds = %24
  %253 = icmp sgt i64 %.075, 0
  %254 = select i1 %253, i32 1982291034, i32 -1647532235
  br label %.backedge

255:                                              ; preds = %24
  br label %.backedge

256:                                              ; preds = %24
  %257 = load i32, i32* @x.2, align 4
  %258 = load i32, i32* @y.3, align 4
  %259 = add i32 %257, -1
  %260 = mul i32 %259, %257
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %263, %262
  %265 = select i1 %264, i32 -1583320351, i32 1071425799
  br label %.backedge

266:                                              ; preds = %24
  %267 = icmp sgt i64 %.077, %.069
  store i1 %267, i1* %2, align 1
  %268 = load i32, i32* @x.2, align 4
  %269 = load i32, i32* @y.3, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 -1072964769, i32 1071425799
  br label %.backedge

277:                                              ; preds = %24
  %.0..0..0.63 = load volatile i1, i1* %2, align 1
  %278 = select i1 %.0..0..0.63, i32 1559248429, i32 2073601409
  br label %.backedge

279:                                              ; preds = %24
  %280 = load i64, i64* %8, align 8
  %281 = mul nsw i64 %280, %.079
  %282 = sub i64 %.077, %.069
  %283 = add i64 %282, %281
  %284 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %283)
  %285 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %284, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

286:                                              ; preds = %24
  %287 = add i64 %.069, 1
  br label %.backedge

288:                                              ; preds = %24
  br label %.backedge

289:                                              ; preds = %24
  %290 = icmp slt i64 %.067, %.075
  %291 = select i1 %290, i32 612630135, i32 -357834894
  br label %.backedge

292:                                              ; preds = %24
  %293 = add i64 %.075, -1
  %294 = icmp slt i64 %.067, %293
  %295 = select i1 %294, i32 -1367677167, i32 -94677150
  br label %.backedge

296:                                              ; preds = %24
  %297 = load i64, i64* %8, align 8
  %298 = mul nsw i64 %297, %.079
  %299 = add i64 %.067, 1
  %300 = add i64 %299, %.077
  %301 = add i64 %300, %298
  %302 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %301)
  %303 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %302, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

304:                                              ; preds = %24
  %305 = load i64, i64* %8, align 8
  %306 = mul nsw i64 %305, %.079
  %307 = add i64 %.067, 1
  %.neg84 = add i64 %307, %.077
  %.neg83 = add i64 %.neg84, %306
  %308 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.neg83)
  %309 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %308, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

310:                                              ; preds = %24
  br label %.backedge

311:                                              ; preds = %24
  %312 = load i32, i32* @x.2, align 4
  %313 = load i32, i32* @y.3, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 -1642039077, i32 524874973
  br label %.backedge

321:                                              ; preds = %24
  %.neg = add i64 %.067, 1
  %322 = load i32, i32* @x.2, align 4
  %323 = load i32, i32* @y.3, align 4
  %324 = add i32 %322, -1
  %325 = mul i32 %324, %322
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %328, %327
  %330 = select i1 %329, i32 254074590, i32 524874973
  br label %.backedge

331:                                              ; preds = %24
  br label %.backedge

332:                                              ; preds = %24
  br label %.backedge

333:                                              ; preds = %24
  %334 = load i32, i32* @x.2, align 4
  %335 = load i32, i32* @y.3, align 4
  %336 = add i32 %334, -1
  %337 = mul i32 %336, %334
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %340, %339
  %342 = select i1 %341, i32 -1825666704, i32 610943696
  br label %.backedge

343:                                              ; preds = %24
  %344 = icmp eq i64 %.075, 0
  store i1 %344, i1* %1, align 1
  %345 = load i32, i32* @x.2, align 4
  %346 = load i32, i32* @y.3, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 -326358985, i32 610943696
  br label %.backedge

354:                                              ; preds = %24
  %.0..0..0.64 = load volatile i1, i1* %1, align 1
  %355 = select i1 %.0..0..0.64, i32 1971747611, i32 -1395524465
  br label %.backedge

356:                                              ; preds = %24
  br label %.backedge

357:                                              ; preds = %24
  %358 = icmp sgt i64 %.077, %.065
  %359 = select i1 %358, i32 1090859215, i32 891713007
  br label %.backedge

360:                                              ; preds = %24
  %361 = add i64 %.077, -1
  %362 = icmp slt i64 %.065, %361
  %363 = select i1 %362, i32 -1685560457, i32 1519436270
  br label %.backedge

364:                                              ; preds = %24
  %365 = load i64, i64* %8, align 8
  %366 = mul nsw i64 %365, %.079
  %367 = sub i64 %.077, %.065
  %368 = add i64 %367, %366
  %369 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %368)
  %370 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %369, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

371:                                              ; preds = %24
  %372 = load i64, i64* %8, align 8
  %373 = mul nsw i64 %372, %.079
  %374 = sub i64 %.077, %.065
  %375 = add i64 %374, %373
  %376 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %375)
  %377 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %376, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

378:                                              ; preds = %24
  br label %.backedge

379:                                              ; preds = %24
  %380 = add i64 %.065, 1
  br label %.backedge

381:                                              ; preds = %24
  br label %.backedge

382:                                              ; preds = %24
  br label %.backedge

383:                                              ; preds = %24
  %384 = load i32, i32* @x.2, align 4
  %385 = load i32, i32* @y.3, align 4
  %386 = add i32 %384, -1
  %387 = mul i32 %386, %384
  %388 = and i32 %387, 1
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %390, %389
  %392 = select i1 %391, i32 -697073280, i32 -752905383
  br label %.backedge

393:                                              ; preds = %24
  %394 = load i32, i32* @x.2, align 4
  %395 = load i32, i32* @y.3, align 4
  %396 = add i32 %394, -1
  %397 = mul i32 %396, %394
  %398 = and i32 %397, 1
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %400, %399
  %402 = select i1 %401, i32 1683039936, i32 -752905383
  br label %.backedge

403:                                              ; preds = %24
  br label %.backedge

404:                                              ; preds = %24
  ret i32 0

405:                                              ; preds = %24
  %406 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 -1)
  %407 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %406, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

408:                                              ; preds = %24
  %409 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.081)
  %410 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %409, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

411:                                              ; preds = %24
  %412 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.081)
  %413 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %412, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

414:                                              ; preds = %24
  %415 = add i64 %.081, 1
  br label %.backedge

416:                                              ; preds = %24
  br label %.backedge

417:                                              ; preds = %24
  br label %.backedge

418:                                              ; preds = %24
  %419 = add i64 %.073, 1
  br label %.backedge

420:                                              ; preds = %24
  br label %.backedge

421:                                              ; preds = %24
  %422 = add i64 %.067, 1
  br label %.backedge

423:                                              ; preds = %24
  br label %.backedge

424:                                              ; preds = %24
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s841498437.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
