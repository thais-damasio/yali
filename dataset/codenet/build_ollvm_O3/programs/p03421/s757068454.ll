; ModuleID = 'build_ollvm/programs/p03421/s757068454.ll'
source_filename = "Project_CodeNet_C++1400/p03421/s757068454.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_ZSt3minIiERKT_S2_S2_ = comdat any

$_ZSt3maxIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@ans = local_unnamed_addr global [300010 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s757068454.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@str = private unnamed_addr constant [3 x i8] c"-1\00", align 1

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i32, align 4
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32* nonnull %11, i32* nonnull %12, i32* nonnull %13)
  %20 = load i32, i32* %12, align 4
  store i32 %20, i32* %10, align 4
  %21 = load i32, i32* %11, align 4
  store i32 %21, i32* %9, align 4
  br label %22

22:                                               ; preds = %.backedge, %0
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ -1761164882, %0 ], [ %.054.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.054, label %.backedge [
    i32 -1761164882, label %23
    i32 1077606528, label %26
    i32 1141169468, label %31
    i32 -1641635060, label %40
    i32 -2030363485, label %50
    i32 630123407, label %66
    i32 768381951, label %68
    i32 1524178628, label %69
    i32 -1788299982, label %71
    i32 -1248042069, label %81
    i32 4180774, label %93
    i32 984216564, label %95
    i32 1161702967, label %101
    i32 215384557, label %111
    i32 1174034200, label %122
    i32 -1712047699, label %124
    i32 -1315875045, label %128
    i32 298447427, label %130
    i32 635429941, label %133
    i32 -2085535187, label %143
    i32 -921624259, label %155
    i32 412874271, label %156
    i32 -502668819, label %160
    i32 -1840856059, label %164
    i32 -538802085, label %174
    i32 -455031871, label %186
    i32 862162183, label %187
    i32 -400691623, label %197
    i32 1007014660, label %207
    i32 -61661899, label %209
    i32 1116536677, label %228
    i32 382696648, label %238
    i32 220382623, label %251
    i32 1544514583, label %253
    i32 499432362, label %257
    i32 -464548769, label %259
    i32 -311669654, label %261
    i32 1063588434, label %264
    i32 957311265, label %270
    i32 555208301, label %272
    i32 -1379851096, label %275
    i32 -138985338, label %279
    i32 -1636568621, label %280
    i32 2036812849, label %283
    i32 -27163489, label %293
    i32 -584577394, label %309
    i32 -656914640, label %311
    i32 1006676531, label %312
    i32 404405056, label %313
    i32 356620194, label %323
    i32 830610652, label %333
    i32 -758304605, label %334
    i32 1128840265, label %336
    i32 -1966793954, label %337
    i32 -1239315010, label %347
    i32 495040184, label %357
    i32 336561604, label %358
    i32 437137192, label %359
    i32 -801499087, label %360
    i32 1747282035, label %361
    i32 176329205, label %364
    i32 71968966, label %365
    i32 -571411495, label %366
    i32 188593191, label %367
    i32 -392534464, label %372
    i32 1751274189, label %373
  ]

.backedge:                                        ; preds = %22, %373, %372, %367, %366, %365, %364, %361, %360, %359, %358, %347, %337, %336, %334, %333, %323, %313, %312, %311, %309, %293, %283, %280, %279, %275, %272, %270, %264, %261, %259, %257, %253, %251, %238, %228, %209, %207, %197, %187, %186, %174, %164, %160, %156, %155, %143, %133, %130, %128, %124, %122, %111, %101, %95, %93, %81, %71, %69, %68, %66, %50, %40, %31, %26, %23
  %.074.be = phi i32 [ %.074, %22 ], [ %.074, %373 ], [ %.074, %372 ], [ %.074, %367 ], [ %.074, %366 ], [ %.074, %365 ], [ %.074, %364 ], [ %.074, %361 ], [ %.074, %360 ], [ %.074, %359 ], [ %.074, %358 ], [ %.074, %347 ], [ %.074, %337 ], [ %.074, %336 ], [ %.074, %334 ], [ %.074, %333 ], [ %.074, %323 ], [ %.074, %313 ], [ %.074, %312 ], [ %.074, %311 ], [ %.074, %309 ], [ %.074, %293 ], [ %.074, %283 ], [ %.074, %280 ], [ %.074, %279 ], [ %.074, %275 ], [ %.074, %272 ], [ %.074, %270 ], [ %.074, %264 ], [ %.074, %261 ], [ %.074, %259 ], [ %.074, %257 ], [ %.074, %253 ], [ %.074, %251 ], [ %.074, %238 ], [ %.074, %228 ], [ %.074, %209 ], [ %.074, %207 ], [ %.074, %197 ], [ %.074, %187 ], [ %.074, %186 ], [ %.074, %174 ], [ %.074, %164 ], [ %.074, %160 ], [ %.074, %156 ], [ %.074, %155 ], [ %.074, %143 ], [ %.074, %133 ], [ %.074, %130 ], [ %.074, %128 ], [ %125, %124 ], [ %.074, %122 ], [ %.074, %111 ], [ %.074, %101 ], [ %.074, %95 ], [ %.074, %93 ], [ %.074, %81 ], [ %.074, %71 ], [ %70, %69 ], [ %.074, %68 ], [ %.074, %66 ], [ %.074, %50 ], [ %.074, %40 ], [ %.074, %31 ], [ %.074, %26 ], [ %.074, %23 ]
  %.072.be = phi i32 [ %.072, %22 ], [ %.072, %373 ], [ %.072, %372 ], [ %.072, %367 ], [ %.072, %366 ], [ %.072, %365 ], [ %.072, %364 ], [ %.072, %361 ], [ %.072, %360 ], [ %.072, %359 ], [ %.072, %358 ], [ %.072, %347 ], [ %.072, %337 ], [ %.072, %336 ], [ %.072, %334 ], [ %.072, %333 ], [ %.072, %323 ], [ %.072, %313 ], [ %.072, %312 ], [ %.072, %311 ], [ %.072, %309 ], [ %.072, %293 ], [ %.072, %283 ], [ %.072, %280 ], [ %.072, %279 ], [ %.072, %275 ], [ %.072, %272 ], [ %.072, %270 ], [ %.072, %264 ], [ %.072, %261 ], [ %.072, %259 ], [ %.072, %257 ], [ %.072, %253 ], [ %.072, %251 ], [ %.072, %238 ], [ %.072, %228 ], [ %214, %209 ], [ %.072, %207 ], [ %.072, %197 ], [ %.072, %187 ], [ %.072, %186 ], [ %.072, %174 ], [ %.072, %164 ], [ %.072, %160 ], [ %.072, %156 ], [ %.072, %155 ], [ %.072, %143 ], [ %.072, %133 ], [ %.072, %130 ], [ %.072, %128 ], [ %.072, %124 ], [ %.072, %122 ], [ %.072, %111 ], [ %.072, %101 ], [ %.072, %95 ], [ %.072, %93 ], [ %.072, %81 ], [ %.072, %71 ], [ %.072, %69 ], [ %.072, %68 ], [ %.072, %66 ], [ %.072, %50 ], [ %.072, %40 ], [ %.072, %31 ], [ %.072, %26 ], [ %.072, %23 ]
  %.070.be = phi i32 [ %.070, %22 ], [ %.070, %373 ], [ %.070, %372 ], [ %.070, %367 ], [ %.070, %366 ], [ %.070, %365 ], [ %.070, %364 ], [ %.070, %361 ], [ %.070, %360 ], [ %.070, %359 ], [ %.070, %358 ], [ %.070, %347 ], [ %.070, %337 ], [ %.070, %336 ], [ %.070, %334 ], [ %.070, %333 ], [ %.070, %323 ], [ %.070, %313 ], [ %.070, %312 ], [ %.070, %311 ], [ %.070, %309 ], [ %.070, %293 ], [ %.070, %283 ], [ %.070, %280 ], [ %.070, %279 ], [ %.070, %275 ], [ %.070, %272 ], [ %.070, %270 ], [ %.070, %264 ], [ %.070, %261 ], [ %.070, %259 ], [ %.070, %257 ], [ %.070, %253 ], [ %.070, %251 ], [ %.070, %238 ], [ %.070, %228 ], [ %220, %209 ], [ %.070, %207 ], [ %.070, %197 ], [ %.070, %187 ], [ %.070, %186 ], [ %.070, %174 ], [ %.070, %164 ], [ %.070, %160 ], [ %.070, %156 ], [ %.070, %155 ], [ %.070, %143 ], [ %.070, %133 ], [ %.070, %130 ], [ %.070, %128 ], [ %.070, %124 ], [ %.070, %122 ], [ %.070, %111 ], [ %.070, %101 ], [ %.070, %95 ], [ %.070, %93 ], [ %.070, %81 ], [ %.070, %71 ], [ %.070, %69 ], [ %.070, %68 ], [ %.070, %66 ], [ %.070, %50 ], [ %.070, %40 ], [ %.070, %31 ], [ %.070, %26 ], [ %.070, %23 ]
  %.068.be = phi i32 [ %.068, %22 ], [ %.068, %373 ], [ %.068, %372 ], [ %.068, %367 ], [ %.068, %366 ], [ %.068, %365 ], [ %.068, %364 ], [ %.068, %361 ], [ %.068, %360 ], [ %.068, %359 ], [ %.068, %358 ], [ %.068, %347 ], [ %.068, %337 ], [ %.068, %336 ], [ %.068, %334 ], [ %.068, %333 ], [ %.068, %323 ], [ %.068, %313 ], [ %.068, %312 ], [ %.068, %311 ], [ %.068, %309 ], [ %.068, %293 ], [ %.068, %283 ], [ %.068, %280 ], [ %.068, %279 ], [ %.068, %275 ], [ %.068, %272 ], [ %.068, %270 ], [ %.068, %264 ], [ %.068, %261 ], [ %.068, %259 ], [ %.068, %257 ], [ %.068, %253 ], [ %.068, %251 ], [ %.068, %238 ], [ %.068, %228 ], [ %223, %209 ], [ %.068, %207 ], [ %.068, %197 ], [ %.068, %187 ], [ %.068, %186 ], [ %.068, %174 ], [ %.068, %164 ], [ %.068, %160 ], [ %.068, %156 ], [ %.068, %155 ], [ %.068, %143 ], [ %.068, %133 ], [ %.068, %130 ], [ %.068, %128 ], [ %.068, %124 ], [ %.068, %122 ], [ %.068, %111 ], [ %.068, %101 ], [ %.068, %95 ], [ %.068, %93 ], [ %.068, %81 ], [ %.068, %71 ], [ %.068, %69 ], [ %.068, %68 ], [ %.068, %66 ], [ %.068, %50 ], [ %.068, %40 ], [ %.068, %31 ], [ %.068, %26 ], [ %.068, %23 ]
  %.066.be = phi i32 [ %.066, %22 ], [ %.066, %373 ], [ %.066, %372 ], [ %.066, %367 ], [ %.066, %366 ], [ %.066, %365 ], [ %.066, %364 ], [ %.066, %361 ], [ %.066, %360 ], [ %.066, %359 ], [ %.066, %358 ], [ %.066, %347 ], [ %.066, %337 ], [ %.066, %336 ], [ %.066, %334 ], [ %.066, %333 ], [ %.066, %323 ], [ %.066, %313 ], [ %.066, %312 ], [ %.066, %311 ], [ %.066, %309 ], [ %.066, %293 ], [ %.066, %283 ], [ %.066, %280 ], [ %.066, %279 ], [ %.066, %275 ], [ %.066, %272 ], [ %.066, %270 ], [ %.066, %264 ], [ %.066, %261 ], [ %.066, %259 ], [ %.066, %257 ], [ %.066, %253 ], [ %.066, %251 ], [ %.066, %238 ], [ %.066, %228 ], [ %227, %209 ], [ %.066, %207 ], [ %.066, %197 ], [ %.066, %187 ], [ %.066, %186 ], [ %.066, %174 ], [ %.066, %164 ], [ %.066, %160 ], [ %.066, %156 ], [ %.066, %155 ], [ %.066, %143 ], [ %.066, %133 ], [ %.066, %130 ], [ %.066, %128 ], [ %.066, %124 ], [ %.066, %122 ], [ %.066, %111 ], [ %.066, %101 ], [ %.066, %95 ], [ %.066, %93 ], [ %.066, %81 ], [ %.066, %71 ], [ %.066, %69 ], [ %.066, %68 ], [ %.066, %66 ], [ %.066, %50 ], [ %.066, %40 ], [ %.066, %31 ], [ %.066, %26 ], [ %.066, %23 ]
  %.064.be = phi i32 [ %.064, %22 ], [ %.064, %373 ], [ %.064, %372 ], [ %.064, %367 ], [ %.064, %366 ], [ %.064, %365 ], [ %.064, %364 ], [ %363, %361 ], [ %.064, %360 ], [ %.064, %359 ], [ %.064, %358 ], [ %.064, %347 ], [ %.064, %337 ], [ %.064, %336 ], [ %.064, %334 ], [ %.064, %333 ], [ %.064, %323 ], [ %.064, %313 ], [ %.064, %312 ], [ %.064, %311 ], [ %.064, %309 ], [ %.064, %293 ], [ %.064, %283 ], [ %.064, %280 ], [ %.064, %279 ], [ %.064, %275 ], [ %.064, %272 ], [ %.064, %270 ], [ %.064, %264 ], [ %.064, %261 ], [ %.064, %259 ], [ %.064, %257 ], [ %.064, %253 ], [ %.064, %251 ], [ %.064, %238 ], [ %.064, %228 ], [ %.064, %209 ], [ %.064, %207 ], [ %.064, %197 ], [ %.064, %187 ], [ %.064, %186 ], [ %.064, %174 ], [ %.064, %164 ], [ %.064, %160 ], [ %.064, %156 ], [ %.064, %155 ], [ %145, %143 ], [ %.064, %133 ], [ %.064, %130 ], [ %.064, %128 ], [ %.064, %124 ], [ %.064, %122 ], [ %.064, %111 ], [ %.064, %101 ], [ %.064, %95 ], [ %.064, %93 ], [ %.064, %81 ], [ %.064, %71 ], [ 1, %69 ], [ %.064, %68 ], [ %.064, %66 ], [ %.064, %50 ], [ %.064, %40 ], [ %.064, %31 ], [ %.064, %26 ], [ %.064, %23 ]
  %.062.be = phi i32 [ %.062, %22 ], [ %.062, %373 ], [ %.062, %372 ], [ %.062, %367 ], [ %.062, %366 ], [ %.062, %365 ], [ %.062, %364 ], [ %.062, %361 ], [ %.062, %360 ], [ %.062, %359 ], [ %.062, %358 ], [ %.062, %347 ], [ %.062, %337 ], [ %.062, %336 ], [ %.062, %334 ], [ %.062, %333 ], [ %.062, %323 ], [ %.062, %313 ], [ %.062, %312 ], [ %.062, %311 ], [ %.062, %309 ], [ %.062, %293 ], [ %.062, %283 ], [ %.062, %280 ], [ %.062, %279 ], [ %.062, %275 ], [ %.062, %272 ], [ %.062, %270 ], [ %.062, %264 ], [ %.062, %261 ], [ %.062, %259 ], [ %.062, %257 ], [ %.062, %253 ], [ %.062, %251 ], [ %.062, %238 ], [ %.062, %228 ], [ %.062, %209 ], [ %.062, %207 ], [ %.062, %197 ], [ %.062, %187 ], [ %.062, %186 ], [ %.062, %174 ], [ %.062, %164 ], [ %.062, %160 ], [ %.062, %156 ], [ %.062, %155 ], [ %.062, %143 ], [ %.062, %133 ], [ %.062, %130 ], [ %129, %128 ], [ %.062, %124 ], [ %.062, %122 ], [ %.062, %111 ], [ %.062, %101 ], [ %100, %95 ], [ %.062, %93 ], [ %.062, %81 ], [ %.062, %71 ], [ %.062, %69 ], [ %.062, %68 ], [ %.062, %66 ], [ %.062, %50 ], [ %.062, %40 ], [ %.062, %31 ], [ %.062, %26 ], [ %.062, %23 ]
  %.060.be = phi i32 [ %.060, %22 ], [ %.060, %373 ], [ %.060, %372 ], [ %.060, %367 ], [ %.060, %366 ], [ %.060, %365 ], [ %.060, %364 ], [ %.060, %361 ], [ %.060, %360 ], [ %.060, %359 ], [ %.060, %358 ], [ %.060, %347 ], [ %.060, %337 ], [ %.060, %336 ], [ %.060, %334 ], [ %.060, %333 ], [ %.060, %323 ], [ %.060, %313 ], [ %.060, %312 ], [ %.060, %311 ], [ %.060, %309 ], [ %.060, %293 ], [ %.060, %283 ], [ %.060, %280 ], [ %.060, %279 ], [ %.060, %275 ], [ %.060, %272 ], [ %.060, %270 ], [ %.060, %264 ], [ %.060, %261 ], [ %.060, %259 ], [ %258, %257 ], [ %.060, %253 ], [ %.060, %251 ], [ %.060, %238 ], [ %.060, %228 ], [ %220, %209 ], [ %.060, %207 ], [ %.060, %197 ], [ %.060, %187 ], [ %.060, %186 ], [ %.060, %174 ], [ %.060, %164 ], [ %.060, %160 ], [ %.060, %156 ], [ %.060, %155 ], [ %.060, %143 ], [ %.060, %133 ], [ %.060, %130 ], [ %.060, %128 ], [ %.060, %124 ], [ %.060, %122 ], [ %.060, %111 ], [ %.060, %101 ], [ %.060, %95 ], [ %.060, %93 ], [ %.060, %81 ], [ %.060, %71 ], [ %.060, %69 ], [ %.060, %68 ], [ %.060, %66 ], [ %.060, %50 ], [ %.060, %40 ], [ %.060, %31 ], [ %.060, %26 ], [ %.060, %23 ]
  %.058.be = phi i32 [ %.058, %22 ], [ %.058, %373 ], [ %.058, %372 ], [ %.058, %367 ], [ %.058, %366 ], [ %.058, %365 ], [ %.058, %364 ], [ %.058, %361 ], [ %.058, %360 ], [ %.058, %359 ], [ %.058, %358 ], [ %.058, %347 ], [ %.058, %337 ], [ %.058, %336 ], [ %.058, %334 ], [ %.058, %333 ], [ %.058, %323 ], [ %.058, %313 ], [ %.058, %312 ], [ %.058, %311 ], [ %.058, %309 ], [ %.058, %293 ], [ %.058, %283 ], [ %.058, %280 ], [ %.058, %279 ], [ %.058, %275 ], [ %.058, %272 ], [ %271, %270 ], [ %.058, %264 ], [ %.058, %261 ], [ %260, %259 ], [ %.058, %257 ], [ %.058, %253 ], [ %.058, %251 ], [ %.058, %238 ], [ %.058, %228 ], [ %.058, %209 ], [ %.058, %207 ], [ %.058, %197 ], [ %.058, %187 ], [ %.058, %186 ], [ %.058, %174 ], [ %.058, %164 ], [ %.058, %160 ], [ %.058, %156 ], [ %.058, %155 ], [ %.058, %143 ], [ %.058, %133 ], [ %.058, %130 ], [ %.058, %128 ], [ %.058, %124 ], [ %.058, %122 ], [ %.058, %111 ], [ %.058, %101 ], [ %.058, %95 ], [ %.058, %93 ], [ %.058, %81 ], [ %.058, %71 ], [ %.058, %69 ], [ %.058, %68 ], [ %.058, %66 ], [ %.058, %50 ], [ %.058, %40 ], [ %.058, %31 ], [ %.058, %26 ], [ %.058, %23 ]
  %.056.be = phi i32 [ %.056, %22 ], [ %.056, %373 ], [ %.056, %372 ], [ %.056, %367 ], [ %.056, %366 ], [ %.056, %365 ], [ %.056, %364 ], [ %.056, %361 ], [ %.056, %360 ], [ %.056, %359 ], [ %.056, %358 ], [ %.056, %347 ], [ %.056, %337 ], [ %.056, %336 ], [ %335, %334 ], [ %.056, %333 ], [ %.056, %323 ], [ %.056, %313 ], [ %.056, %312 ], [ %.056, %311 ], [ %.056, %309 ], [ %.056, %293 ], [ %.056, %283 ], [ %.056, %280 ], [ 1, %279 ], [ %.056, %275 ], [ %.056, %272 ], [ %.056, %270 ], [ %.056, %264 ], [ %.056, %261 ], [ %.056, %259 ], [ %.056, %257 ], [ %.056, %253 ], [ %.056, %251 ], [ %.056, %238 ], [ %.056, %228 ], [ %.056, %209 ], [ %.056, %207 ], [ %.056, %197 ], [ %.056, %187 ], [ %.056, %186 ], [ %.056, %174 ], [ %.056, %164 ], [ %.056, %160 ], [ %.056, %156 ], [ %.056, %155 ], [ %.056, %143 ], [ %.056, %133 ], [ %.056, %130 ], [ %.056, %128 ], [ %.056, %124 ], [ %.056, %122 ], [ %.056, %111 ], [ %.056, %101 ], [ %.056, %95 ], [ %.056, %93 ], [ %.056, %81 ], [ %.056, %71 ], [ %.056, %69 ], [ %.056, %68 ], [ %.056, %66 ], [ %.056, %50 ], [ %.056, %40 ], [ %.056, %31 ], [ %.056, %26 ], [ %.056, %23 ]
  %.054.be = phi i32 [ %.054, %22 ], [ -1239315010, %373 ], [ 356620194, %372 ], [ -27163489, %367 ], [ 382696648, %366 ], [ -400691623, %365 ], [ -538802085, %364 ], [ -2085535187, %361 ], [ 215384557, %360 ], [ -1248042069, %359 ], [ -2030363485, %358 ], [ %356, %347 ], [ %346, %337 ], [ -1966793954, %336 ], [ -1636568621, %334 ], [ -758304605, %333 ], [ %332, %323 ], [ %322, %313 ], [ 404405056, %312 ], [ 404405056, %311 ], [ %310, %309 ], [ %308, %293 ], [ %292, %283 ], [ %282, %280 ], [ -1636568621, %279 ], [ -502668819, %275 ], [ -1379851096, %272 ], [ -311669654, %270 ], [ 957311265, %264 ], [ %263, %261 ], [ -311669654, %259 ], [ 1116536677, %257 ], [ 499432362, %253 ], [ %252, %251 ], [ %250, %238 ], [ %237, %228 ], [ 1116536677, %209 ], [ %208, %207 ], [ %206, %197 ], [ %196, %187 ], [ 862162183, %186 ], [ %185, %174 ], [ %173, %164 ], [ %163, %160 ], [ -502668819, %156 ], [ -1788299982, %155 ], [ %154, %143 ], [ %142, %133 ], [ 635429941, %130 ], [ 1161702967, %128 ], [ -1315875045, %124 ], [ %123, %122 ], [ %121, %111 ], [ %110, %101 ], [ 1161702967, %95 ], [ %94, %93 ], [ %92, %81 ], [ %80, %71 ], [ -1788299982, %69 ], [ -1966793954, %68 ], [ %67, %66 ], [ %65, %50 ], [ %49, %40 ], [ %39, %31 ], [ %30, %26 ], [ %25, %23 ]
  %.0.be = phi i1 [ %.0, %22 ], [ %.0, %373 ], [ %.0, %372 ], [ %.0, %367 ], [ %.0, %366 ], [ %.0, %365 ], [ %.0, %364 ], [ %.0, %361 ], [ %.0, %360 ], [ %.0, %359 ], [ %.0, %358 ], [ %.0, %347 ], [ %.0, %337 ], [ %.0, %336 ], [ %.0, %334 ], [ %.0, %333 ], [ %.0, %323 ], [ %.0, %313 ], [ %.0, %312 ], [ %.0, %311 ], [ %.0, %309 ], [ %.0, %293 ], [ %.0, %283 ], [ %.0, %280 ], [ %.0, %279 ], [ %.0, %275 ], [ %.0, %272 ], [ %.0, %270 ], [ %.0, %264 ], [ %.0, %261 ], [ %.0, %259 ], [ %.0, %257 ], [ %.0, %253 ], [ %.0, %251 ], [ %.0, %238 ], [ %.0, %228 ], [ %.0, %209 ], [ %.0, %207 ], [ %.0, %197 ], [ %.0, %187 ], [ %.0..0..0.49, %186 ], [ %.0, %174 ], [ %.0, %164 ], [ false, %160 ], [ %.0, %156 ], [ %.0, %155 ], [ %.0, %143 ], [ %.0, %133 ], [ %.0, %130 ], [ %.0, %128 ], [ %.0, %124 ], [ %.0, %122 ], [ %.0, %111 ], [ %.0, %101 ], [ %.0, %95 ], [ %.0, %93 ], [ %.0, %81 ], [ %.0, %71 ], [ %.0, %69 ], [ %.0, %68 ], [ %.0, %66 ], [ %.0, %50 ], [ %.0, %40 ], [ %.0, %31 ], [ %.0, %26 ], [ %.0, %23 ]
  br label %22

23:                                               ; preds = %22
  %.0..0..0.44 = load volatile i32, i32* %10, align 4
  %.0..0..0.45 = load volatile i32, i32* %9, align 4
  %24 = icmp sgt i32 %.0..0..0.44, %.0..0..0.45
  %25 = select i1 %24, i32 768381951, i32 1077606528
  br label %.backedge

26:                                               ; preds = %22
  %27 = load i32, i32* %13, align 4
  %28 = load i32, i32* %11, align 4
  %29 = icmp sgt i32 %27, %28
  %30 = select i1 %29, i32 768381951, i32 1141169468
  br label %.backedge

31:                                               ; preds = %22
  %32 = load i32, i32* %11, align 4
  %33 = add i32 %32, -1
  %34 = load i32, i32* %12, align 4
  %35 = sdiv i32 %33, %34
  %36 = add i32 %35, 1
  %37 = load i32, i32* %13, align 4
  %38 = icmp sgt i32 %36, %37
  %39 = select i1 %38, i32 768381951, i32 -1641635060
  br label %.backedge

40:                                               ; preds = %22
  %41 = load i32, i32* @x.5, align 4
  %42 = load i32, i32* @y.6, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 -2030363485, i32 336561604
  br label %.backedge

50:                                               ; preds = %22
  %51 = load i32, i32* %12, align 4
  %52 = load i32, i32* %13, align 4
  %53 = add i32 %52, %51
  %54 = load i32, i32* %11, align 4
  %55 = add i32 %54, 1
  %56 = icmp sgt i32 %53, %55
  store i1 %56, i1* %8, align 1
  %57 = load i32, i32* @x.5, align 4
  %58 = load i32, i32* @y.6, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 630123407, i32 336561604
  br label %.backedge

66:                                               ; preds = %22
  %.0..0..0.46 = load volatile i1, i1* %8, align 1
  %67 = select i1 %.0..0..0.46, i32 768381951, i32 1524178628
  br label %.backedge

68:                                               ; preds = %22
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str, i64 0, i64 0))
  br label %.backedge

69:                                               ; preds = %22
  %70 = load i32, i32* %11, align 4
  br label %.backedge

71:                                               ; preds = %22
  %72 = load i32, i32* @x.5, align 4
  %73 = load i32, i32* @y.6, align 4
  %74 = add i32 %72, -1
  %75 = mul i32 %74, %72
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %78, %77
  %80 = select i1 %79, i32 -1248042069, i32 437137192
  br label %.backedge

81:                                               ; preds = %22
  %82 = load i32, i32* %11, align 4
  %83 = icmp sle i32 %.064, %82
  store i1 %83, i1* %7, align 1
  %84 = load i32, i32* @x.5, align 4
  %85 = load i32, i32* @y.6, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 4180774, i32 437137192
  br label %.backedge

93:                                               ; preds = %22
  %.0..0..0.47 = load volatile i1, i1* %7, align 1
  %94 = select i1 %.0..0..0.47, i32 984216564, i32 412874271
  br label %.backedge

95:                                               ; preds = %22
  %96 = load i32, i32* %12, align 4
  %97 = add i32 %.064, -1
  %98 = add i32 %97, %96
  store i32 %98, i32* %14, align 4
  %99 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %11, i32* nonnull dereferenceable(4) %14)
  %100 = load i32, i32* %99, align 4
  br label %.backedge

101:                                              ; preds = %22
  %102 = load i32, i32* @x.5, align 4
  %103 = load i32, i32* @y.6, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 215384557, i32 -801499087
  br label %.backedge

111:                                              ; preds = %22
  %112 = icmp sge i32 %.062, %.064
  store i1 %112, i1* %6, align 1
  %113 = load i32, i32* @x.5, align 4
  %114 = load i32, i32* @y.6, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 1174034200, i32 -801499087
  br label %.backedge

122:                                              ; preds = %22
  %.0..0..0.48 = load volatile i1, i1* %6, align 1
  %123 = select i1 %.0..0..0.48, i32 -1712047699, i32 298447427
  br label %.backedge

124:                                              ; preds = %22
  %125 = add i32 %.074, -1
  %126 = sext i32 %.074 to i64
  %127 = getelementptr inbounds [300010 x i32], [300010 x i32]* @ans, i64 0, i64 %126
  store i32 %.062, i32* %127, align 4
  br label %.backedge

128:                                              ; preds = %22
  %129 = add i32 %.062, -1
  br label %.backedge

130:                                              ; preds = %22
  %131 = load i32, i32* %13, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %13, align 4
  br label %.backedge

133:                                              ; preds = %22
  %134 = load i32, i32* @x.5, align 4
  %135 = load i32, i32* @y.6, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 -2085535187, i32 1747282035
  br label %.backedge

143:                                              ; preds = %22
  %144 = load i32, i32* %12, align 4
  %145 = add i32 %144, %.064
  %146 = load i32, i32* @x.5, align 4
  %147 = load i32, i32* @y.6, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -921624259, i32 1747282035
  br label %.backedge

155:                                              ; preds = %22
  br label %.backedge

156:                                              ; preds = %22
  %157 = load i32, i32* %11, align 4
  %158 = load i32, i32* %12, align 4
  %159 = sub i32 %157, %158
  store i32 %159, i32* %15, align 4
  br label %.backedge

160:                                              ; preds = %22
  %161 = load i32, i32* %15, align 4
  %162 = icmp sgt i32 %161, 0
  %163 = select i1 %162, i32 -1840856059, i32 862162183
  br label %.backedge

164:                                              ; preds = %22
  %165 = load i32, i32* @x.5, align 4
  %166 = load i32, i32* @y.6, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 -538802085, i32 176329205
  br label %.backedge

174:                                              ; preds = %22
  %175 = load i32, i32* %13, align 4
  %176 = icmp sgt i32 %175, 0
  store i1 %176, i1* %5, align 1
  %177 = load i32, i32* @x.5, align 4
  %178 = load i32, i32* @y.6, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 -455031871, i32 176329205
  br label %.backedge

186:                                              ; preds = %22
  %.0..0..0.49 = load volatile i1, i1* %5, align 1
  br label %.backedge

187:                                              ; preds = %22
  store i1 %.0, i1* %1, align 1
  %188 = load i32, i32* @x.5, align 4
  %189 = load i32, i32* @y.6, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 -400691623, i32 71968966
  br label %.backedge

197:                                              ; preds = %22
  %198 = load i32, i32* @x.5, align 4
  %199 = load i32, i32* @y.6, align 4
  %200 = add i32 %198, -1
  %201 = mul i32 %200, %198
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %204, %203
  %206 = select i1 %205, i32 1007014660, i32 71968966
  br label %.backedge

207:                                              ; preds = %22
  %.0..0..0.53 = load volatile i1, i1* %1, align 1
  %208 = select i1 %.0..0..0.53, i32 -61661899, i32 -138985338
  br label %.backedge

209:                                              ; preds = %22
  %210 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %15, i32* nonnull dereferenceable(4) %12)
  %211 = load i32, i32* %210, align 4
  %212 = add i32 %211, -1
  store i32 %212, i32* %16, align 4
  %213 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %16)
  %214 = load i32, i32* %213, align 4
  %215 = load i32, i32* %15, align 4
  %216 = load i32, i32* %12, align 4
  %217 = add i32 %215, 1
  %218 = sub i32 %217, %216
  store i32 %218, i32* %17, align 4
  store i32 1, i32* %18, align 4
  %219 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %18)
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [300010 x i32], [300010 x i32]* @ans, i64 0, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = load i32, i32* %15, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [300010 x i32], [300010 x i32]* @ans, i64 0, i64 %225
  %227 = load i32, i32* %226, align 4
  br label %.backedge

228:                                              ; preds = %22
  %229 = load i32, i32* @x.5, align 4
  %230 = load i32, i32* @y.6, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 382696648, i32 -571411495
  br label %.backedge

238:                                              ; preds = %22
  %239 = add i32 %.070, %.072
  %240 = add i32 %239, -1
  %241 = icmp sle i32 %.060, %240
  store i1 %241, i1* %4, align 1
  %242 = load i32, i32* @x.5, align 4
  %243 = load i32, i32* @y.6, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 220382623, i32 -571411495
  br label %.backedge

251:                                              ; preds = %22
  %.0..0..0.50 = load volatile i1, i1* %4, align 1
  %252 = select i1 %.0..0..0.50, i32 1544514583, i32 -464548769
  br label %.backedge

253:                                              ; preds = %22
  %254 = add i32 %.066, %.070
  %.neg = sub i32 %254, %.060
  %255 = sext i32 %.060 to i64
  %256 = getelementptr inbounds [300010 x i32], [300010 x i32]* @ans, i64 0, i64 %255
  store i32 %.neg, i32* %256, align 4
  br label %.backedge

257:                                              ; preds = %22
  %258 = add i32 %.060, 1
  br label %.backedge

259:                                              ; preds = %22
  %260 = add i32 %.070, %.072
  br label %.backedge

261:                                              ; preds = %22
  %262 = load i32, i32* %15, align 4
  %.not79 = icmp sgt i32 %.058, %262
  %263 = select i1 %.not79, i32 555208301, i32 1063588434
  br label %.backedge

264:                                              ; preds = %22
  %265 = add i32 %.070, %.072
  %266 = sub i32 %.068, %265
  %267 = add i32 %266, %.058
  %268 = sext i32 %.058 to i64
  %269 = getelementptr inbounds [300010 x i32], [300010 x i32]* @ans, i64 0, i64 %268
  store i32 %267, i32* %269, align 4
  br label %.backedge

270:                                              ; preds = %22
  %271 = add i32 %.058, 1
  br label %.backedge

272:                                              ; preds = %22
  %273 = load i32, i32* %13, align 4
  %274 = sub i32 %273, %.072
  store i32 %274, i32* %13, align 4
  br label %.backedge

275:                                              ; preds = %22
  %276 = load i32, i32* %12, align 4
  %277 = load i32, i32* %15, align 4
  %278 = sub i32 %277, %276
  store i32 %278, i32* %15, align 4
  br label %.backedge

279:                                              ; preds = %22
  br label %.backedge

280:                                              ; preds = %22
  %281 = load i32, i32* %11, align 4
  %.not = icmp sgt i32 %.056, %281
  %282 = select i1 %.not, i32 1128840265, i32 2036812849
  br label %.backedge

283:                                              ; preds = %22
  %284 = load i32, i32* @x.5, align 4
  %285 = load i32, i32* @y.6, align 4
  %286 = add i32 %284, -1
  %287 = mul i32 %286, %284
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %290, %289
  %292 = select i1 %291, i32 -27163489, i32 188593191
  br label %.backedge

293:                                              ; preds = %22
  %294 = sext i32 %.056 to i64
  %295 = getelementptr inbounds [300010 x i32], [300010 x i32]* @ans, i64 0, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 %296)
  %298 = load i32, i32* %11, align 4
  %299 = icmp slt i32 %.056, %298
  store i1 %299, i1* %3, align 1
  %300 = load i32, i32* @x.5, align 4
  %301 = load i32, i32* @y.6, align 4
  %302 = add i32 %300, -1
  %303 = mul i32 %302, %300
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %306, %305
  %308 = select i1 %307, i32 -584577394, i32 188593191
  br label %.backedge

309:                                              ; preds = %22
  %.0..0..0.51 = load volatile i1, i1* %3, align 1
  %310 = select i1 %.0..0..0.51, i32 -656914640, i32 1006676531
  br label %.backedge

311:                                              ; preds = %22
  %putchar78 = call i32 @putchar(i32 32)
  br label %.backedge

312:                                              ; preds = %22
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

313:                                              ; preds = %22
  %314 = load i32, i32* @x.5, align 4
  %315 = load i32, i32* @y.6, align 4
  %316 = add i32 %314, -1
  %317 = mul i32 %316, %314
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %320, %319
  %322 = select i1 %321, i32 356620194, i32 -392534464
  br label %.backedge

323:                                              ; preds = %22
  %324 = load i32, i32* @x.5, align 4
  %325 = load i32, i32* @y.6, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 830610652, i32 -392534464
  br label %.backedge

333:                                              ; preds = %22
  br label %.backedge

334:                                              ; preds = %22
  %335 = add i32 %.056, 1
  br label %.backedge

336:                                              ; preds = %22
  br label %.backedge

337:                                              ; preds = %22
  %338 = load i32, i32* @x.5, align 4
  %339 = load i32, i32* @y.6, align 4
  %340 = add i32 %338, -1
  %341 = mul i32 %340, %338
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %344, %343
  %346 = select i1 %345, i32 -1239315010, i32 1751274189
  br label %.backedge

347:                                              ; preds = %22
  store i32 0, i32* %2, align 4
  %348 = load i32, i32* @x.5, align 4
  %349 = load i32, i32* @y.6, align 4
  %350 = add i32 %348, -1
  %351 = mul i32 %350, %348
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %354, %353
  %356 = select i1 %355, i32 495040184, i32 1751274189
  br label %.backedge

357:                                              ; preds = %22
  %.0..0..0.52 = load volatile i32, i32* %2, align 4
  ret i32 %.0..0..0.52

358:                                              ; preds = %22
  br label %.backedge

359:                                              ; preds = %22
  br label %.backedge

360:                                              ; preds = %22
  br label %.backedge

361:                                              ; preds = %22
  %362 = load i32, i32* %12, align 4
  %363 = add i32 %362, %.064
  br label %.backedge

364:                                              ; preds = %22
  br label %.backedge

365:                                              ; preds = %22
  br label %.backedge

366:                                              ; preds = %22
  br label %.backedge

367:                                              ; preds = %22
  %368 = sext i32 %.056 to i64
  %369 = getelementptr inbounds [300010 x i32], [300010 x i32]* @ans, i64 0, i64 %368
  %370 = load i32, i32* %369, align 4
  %371 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 %370)
  br label %.backedge

372:                                              ; preds = %22
  br label %.backedge

373:                                              ; preds = %22
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.7, align 4
  %10 = load i32, i32* @y.8, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 1151929199, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1151929199, label %17
    i32 -1706631882, label %20
    i32 -496578145, label %38
    i32 -2122729066, label %40
    i32 1885386710, label %50
    i32 -268639729, label %61
    i32 -383774176, label %62
    i32 1997209003, label %64
    i32 1147354303, label %66
    i32 -484024051, label %67
  ]

.backedge:                                        ; preds = %16, %67, %66, %62, %61, %50, %40, %38, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ 1885386710, %67 ], [ -1706631882, %66 ], [ 1997209003, %62 ], [ 1997209003, %61 ], [ %60, %50 ], [ %49, %40 ], [ %39, %38 ], [ %37, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 -1706631882, i32 1147354303
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i32*, align 8
  store i32** %21, i32*** %6, align 8
  %22 = alloca i32*, align 8
  store i32** %22, i32*** %5, align 8
  %23 = alloca i32*, align 8
  store i32** %23, i32*** %4, align 8
  %.0..0..0.6 = load volatile i32**, i32*** %5, align 8
  store i32* %0, i32** %.0..0..0.6, align 8
  %.0..0..0.9 = load volatile i32**, i32*** %4, align 8
  store i32* %1, i32** %.0..0..0.9, align 8
  %.0..0..0.10 = load volatile i32**, i32*** %4, align 8
  %24 = load i32*, i32** %.0..0..0.10, align 8
  %25 = load i32, i32* %24, align 4
  %.0..0..0.7 = load volatile i32**, i32*** %5, align 8
  %26 = load i32*, i32** %.0..0..0.7, align 8
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.7, align 4
  %30 = load i32, i32* @y.8, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -496578145, i32 1147354303
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0.13 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.13, i32 -2122729066, i32 -383774176
  br label %.backedge

40:                                               ; preds = %16
  %41 = load i32, i32* @x.7, align 4
  %42 = load i32, i32* @y.8, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1885386710, i32 -484024051
  br label %.backedge

50:                                               ; preds = %16
  %.0..0..0.11 = load volatile i32**, i32*** %4, align 8
  %51 = load i32*, i32** %.0..0..0.11, align 8
  %.0..0..0.2 = load volatile i32**, i32*** %6, align 8
  store i32* %51, i32** %.0..0..0.2, align 8
  %52 = load i32, i32* @x.7, align 4
  %53 = load i32, i32* @y.8, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 -268639729, i32 -484024051
  br label %.backedge

61:                                               ; preds = %16
  br label %.backedge

62:                                               ; preds = %16
  %.0..0..0.8 = load volatile i32**, i32*** %5, align 8
  %63 = load i32*, i32** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i32**, i32*** %6, align 8
  store i32* %63, i32** %.0..0..0.3, align 8
  br label %.backedge

64:                                               ; preds = %16
  %.0..0..0.4 = load volatile i32**, i32*** %6, align 8
  %65 = load i32*, i32** %.0..0..0.4, align 8
  ret i32* %65

66:                                               ; preds = %16
  br label %.backedge

67:                                               ; preds = %16
  %.0..0..0.12 = load volatile i32**, i32*** %4, align 8
  %68 = load i32*, i32** %.0..0..0.12, align 8
  %.0..0..0.5 = load volatile i32**, i32*** %6, align 8
  store i32* %68, i32** %.0..0..0.5, align 8
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.9, align 4
  %10 = load i32, i32* @y.10, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %16

16:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 948448086, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 948448086, label %17
    i32 -1532894671, label %20
    i32 -640640357, label %38
    i32 1718246894, label %40
    i32 -2052583286, label %42
    i32 -856910560, label %52
    i32 -1203864953, label %63
    i32 -482672416, label %64
    i32 -1528337797, label %66
    i32 2117935792, label %67
  ]

.backedge:                                        ; preds = %16, %67, %66, %63, %52, %42, %40, %38, %20, %17
  %.0.be = phi i32 [ %.0, %16 ], [ -856910560, %67 ], [ -1532894671, %66 ], [ -482672416, %63 ], [ %62, %52 ], [ %51, %42 ], [ -482672416, %40 ], [ %39, %38 ], [ %37, %20 ], [ %19, %17 ]
  br label %16

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 -1532894671, i32 -1528337797
  br label %.backedge

20:                                               ; preds = %16
  %21 = alloca i32*, align 8
  store i32** %21, i32*** %6, align 8
  %22 = alloca i32*, align 8
  store i32** %22, i32*** %5, align 8
  %23 = alloca i32*, align 8
  store i32** %23, i32*** %4, align 8
  %.0..0..0.6 = load volatile i32**, i32*** %5, align 8
  store i32* %0, i32** %.0..0..0.6, align 8
  %.0..0..0.10 = load volatile i32**, i32*** %4, align 8
  store i32* %1, i32** %.0..0..0.10, align 8
  %.0..0..0.7 = load volatile i32**, i32*** %5, align 8
  %24 = load i32*, i32** %.0..0..0.7, align 8
  %25 = load i32, i32* %24, align 4
  %.0..0..0.11 = load volatile i32**, i32*** %4, align 8
  %26 = load i32*, i32** %.0..0..0.11, align 8
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.9, align 4
  %30 = load i32, i32* @y.10, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -640640357, i32 -1528337797
  br label %.backedge

38:                                               ; preds = %16
  %.0..0..0.13 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.13, i32 1718246894, i32 -2052583286
  br label %.backedge

40:                                               ; preds = %16
  %.0..0..0.12 = load volatile i32**, i32*** %4, align 8
  %41 = load i32*, i32** %.0..0..0.12, align 8
  %.0..0..0.2 = load volatile i32**, i32*** %6, align 8
  store i32* %41, i32** %.0..0..0.2, align 8
  br label %.backedge

42:                                               ; preds = %16
  %43 = load i32, i32* @x.9, align 4
  %44 = load i32, i32* @y.10, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 -856910560, i32 2117935792
  br label %.backedge

52:                                               ; preds = %16
  %.0..0..0.8 = load volatile i32**, i32*** %5, align 8
  %53 = load i32*, i32** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i32**, i32*** %6, align 8
  store i32* %53, i32** %.0..0..0.3, align 8
  %54 = load i32, i32* @x.9, align 4
  %55 = load i32, i32* @y.10, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 -1203864953, i32 2117935792
  br label %.backedge

63:                                               ; preds = %16
  br label %.backedge

64:                                               ; preds = %16
  %.0..0..0.4 = load volatile i32**, i32*** %6, align 8
  %65 = load i32*, i32** %.0..0..0.4, align 8
  ret i32* %65

66:                                               ; preds = %16
  br label %.backedge

67:                                               ; preds = %16
  %.0..0..0.9 = load volatile i32**, i32*** %5, align 8
  %68 = load i32*, i32** %.0..0..0.9, align 8
  %.0..0..0.5 = load volatile i32**, i32*** %6, align 8
  store i32* %68, i32** %.0..0..0.5, align 8
  br label %.backedge
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s757068454.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
