; ModuleID = 'build_ollvm/programs/p03421/s381711681.ll'
source_filename = "Project_CodeNet_C++1400/p03421/s381711681.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s381711681.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1037878279, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1037878279, label %11
    i32 2132958217, label %14
    i32 531944041, label %25
    i32 -1566275774, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 2132958217, i32 -1566275774
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 531944041, i32 -1566275774
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 2132958217, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %8)
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %11, i64* nonnull dereferenceable(8) %9)
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %12, i64* nonnull dereferenceable(8) %10)
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %7, align 8
  %15 = load i64, i64* %9, align 8
  %16 = load i64, i64* %10, align 8
  %17 = add i64 %15, -1
  %18 = add i64 %17, %16
  store i64 %18, i64* %6, align 8
  br label %19

19:                                               ; preds = %.backedge, %0
  %.053 = phi i64 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i64 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i64 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i64 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.045 = phi i64 [ undef, %0 ], [ %.045.be, %.backedge ]
  %.043 = phi i64 [ undef, %0 ], [ %.043.be, %.backedge ]
  %.041 = phi i64 [ undef, %0 ], [ %.041.be, %.backedge ]
  %.039 = phi i64 [ undef, %0 ], [ %.039.be, %.backedge ]
  %.0 = phi i32 [ -1381831699, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1381831699, label %20
    i32 -72106424, label %23
    i32 -1617952439, label %33
    i32 248129859, label %48
    i32 1566211828, label %50
    i32 -1968682237, label %60
    i32 1769374397, label %71
    i32 597223541, label %72
    i32 -1750166131, label %76
    i32 -1518459660, label %86
    i32 1218935722, label %96
    i32 -290439019, label %97
    i32 -216757102, label %107
    i32 -1615261838, label %119
    i32 -1908055266, label %121
    i32 -639180243, label %124
    i32 -769064783, label %126
    i32 1708536875, label %136
    i32 754932505, label %146
    i32 610010826, label %147
    i32 -1382288857, label %151
    i32 570214298, label %152
    i32 -1258305628, label %162
    i32 -2116664918, label %174
    i32 205210082, label %176
    i32 -1465342032, label %186
    i32 1602044108, label %201
    i32 457348805, label %202
    i32 -1313228653, label %212
    i32 -1896907358, label %222
    i32 -1498798221, label %223
    i32 829632035, label %224
    i32 -938770535, label %232
    i32 -803853741, label %235
    i32 -229237961, label %237
    i32 1526658565, label %240
    i32 -1579102688, label %246
    i32 -1421833796, label %256
    i32 1261356720, label %267
    i32 -2060900516, label %268
    i32 -476118365, label %278
    i32 -9165601, label %288
    i32 2001427010, label %289
    i32 -2089761123, label %291
    i32 -1330471492, label %297
    i32 1713566653, label %307
    i32 1226577121, label %318
    i32 -1930755362, label %319
    i32 -1309973156, label %329
    i32 1542623236, label %340
    i32 -1124817869, label %342
    i32 -1588139868, label %348
    i32 1037388044, label %350
    i32 -961821894, label %354
    i32 -148050035, label %364
    i32 412133668, label %375
    i32 -2089916119, label %377
    i32 -2094734857, label %387
    i32 354944731, label %401
    i32 -1905614977, label %402
    i32 -513049040, label %403
    i32 1047524983, label %413
    i32 -1358394398, label %423
    i32 -1688586830, label %424
    i32 -2071392705, label %425
    i32 -2021027664, label %426
    i32 832146817, label %427
    i32 936567067, label %429
    i32 533600245, label %430
    i32 1721874505, label %431
    i32 739683962, label %432
    i32 1987463667, label %433
    i32 -201554592, label %439
    i32 83935945, label %441
    i32 1869839547, label %442
    i32 1045856707, label %443
    i32 117960179, label %445
    i32 -366627230, label %446
    i32 -1810630784, label %447
    i32 1185073964, label %453
  ]

.backedge:                                        ; preds = %19, %453, %447, %446, %445, %443, %442, %441, %439, %433, %432, %431, %430, %429, %427, %426, %424, %423, %413, %403, %402, %401, %387, %377, %375, %364, %354, %350, %348, %342, %340, %329, %319, %318, %307, %297, %291, %289, %288, %278, %268, %267, %256, %246, %240, %237, %235, %232, %224, %223, %222, %212, %202, %201, %186, %176, %174, %162, %152, %151, %147, %146, %136, %126, %124, %121, %119, %107, %97, %96, %86, %76, %72, %71, %60, %50, %48, %33, %23, %20
  %.053.be = phi i64 [ %.053, %19 ], [ %.053, %453 ], [ %.053, %447 ], [ %.053, %446 ], [ %.053, %445 ], [ %.053, %443 ], [ %.053, %442 ], [ %.053, %441 ], [ %.053, %439 ], [ %.053, %433 ], [ %.053, %432 ], [ %.053, %431 ], [ %.053, %430 ], [ 1, %429 ], [ %.053, %427 ], [ %.053, %426 ], [ %.053, %424 ], [ %.053, %423 ], [ %.053, %413 ], [ %.053, %403 ], [ %.053, %402 ], [ %.053, %401 ], [ %.053, %387 ], [ %.053, %377 ], [ %.053, %375 ], [ %.053, %364 ], [ %.053, %354 ], [ %.053, %350 ], [ %.053, %348 ], [ %.053, %342 ], [ %.053, %340 ], [ %.053, %329 ], [ %.053, %319 ], [ %.053, %318 ], [ %.053, %307 ], [ %.053, %297 ], [ %.053, %291 ], [ %.053, %289 ], [ %.053, %288 ], [ %.053, %278 ], [ %.053, %268 ], [ %.053, %267 ], [ %.053, %256 ], [ %.053, %246 ], [ %.053, %240 ], [ %.053, %237 ], [ %.053, %235 ], [ %.053, %232 ], [ %.053, %224 ], [ %.053, %223 ], [ %.053, %222 ], [ %.053, %212 ], [ %.053, %202 ], [ %.053, %201 ], [ %.053, %186 ], [ %.053, %176 ], [ %.053, %174 ], [ %.053, %162 ], [ %.053, %152 ], [ %.053, %151 ], [ %.053, %147 ], [ %.053, %146 ], [ %.053, %136 ], [ %.053, %126 ], [ %125, %124 ], [ %.053, %121 ], [ %.053, %119 ], [ %.053, %107 ], [ %.053, %97 ], [ %.053, %96 ], [ 1, %86 ], [ %.053, %76 ], [ %.053, %72 ], [ %.053, %71 ], [ %.053, %60 ], [ %.053, %50 ], [ %.053, %48 ], [ %.053, %33 ], [ %.053, %23 ], [ %.053, %20 ]
  %.051.be = phi i64 [ %.051, %19 ], [ %.051, %453 ], [ %.051, %447 ], [ %.051, %446 ], [ %.051, %445 ], [ %.051, %443 ], [ %.051, %442 ], [ %.051, %441 ], [ %440, %439 ], [ %.051, %433 ], [ %.051, %432 ], [ %.051, %431 ], [ %.051, %430 ], [ %.051, %429 ], [ %.051, %427 ], [ %.051, %426 ], [ %.051, %424 ], [ %.051, %423 ], [ %.051, %413 ], [ %.051, %403 ], [ %.051, %402 ], [ %.051, %401 ], [ %.051, %387 ], [ %.051, %377 ], [ %.051, %375 ], [ %.051, %364 ], [ %.051, %354 ], [ %.051, %350 ], [ %.051, %348 ], [ %.051, %342 ], [ %.051, %340 ], [ %.051, %329 ], [ %.051, %319 ], [ %.051, %318 ], [ %.051, %307 ], [ %.051, %297 ], [ %.051, %291 ], [ %.051, %289 ], [ %.051, %288 ], [ %.051, %278 ], [ %.051, %268 ], [ %.051, %267 ], [ %.051, %256 ], [ %.051, %246 ], [ %.051, %240 ], [ %.051, %237 ], [ %.051, %235 ], [ %.051, %232 ], [ %.051, %224 ], [ %.051, %223 ], [ %.051, %222 ], [ %.neg60, %212 ], [ %.051, %202 ], [ %.051, %201 ], [ %.051, %186 ], [ %.051, %176 ], [ %.051, %174 ], [ %.051, %162 ], [ %.051, %152 ], [ 1, %151 ], [ %.051, %147 ], [ %.051, %146 ], [ %.051, %136 ], [ %.051, %126 ], [ %.051, %124 ], [ %.051, %121 ], [ %.051, %119 ], [ %.051, %107 ], [ %.051, %97 ], [ %.051, %96 ], [ %.051, %86 ], [ %.051, %76 ], [ %.051, %72 ], [ %.051, %71 ], [ %.051, %60 ], [ %.051, %50 ], [ %.051, %48 ], [ %.051, %33 ], [ %.051, %23 ], [ %.051, %20 ]
  %.049.be = phi i64 [ %.049, %19 ], [ %.049, %453 ], [ %.049, %447 ], [ %.049, %446 ], [ %.049, %445 ], [ %.049, %443 ], [ %.049, %442 ], [ %.049, %441 ], [ %.049, %439 ], [ %.049, %433 ], [ %.049, %432 ], [ %.049, %431 ], [ %.049, %430 ], [ %.049, %429 ], [ %.049, %427 ], [ %.049, %426 ], [ %.049, %424 ], [ %.049, %423 ], [ %.049, %413 ], [ %.049, %403 ], [ %.049, %402 ], [ %.049, %401 ], [ %.049, %387 ], [ %.049, %377 ], [ %.049, %375 ], [ %.049, %364 ], [ %.049, %354 ], [ %.049, %350 ], [ %.049, %348 ], [ %.049, %342 ], [ %.049, %340 ], [ %.049, %329 ], [ %.049, %319 ], [ %.049, %318 ], [ %.049, %307 ], [ %.049, %297 ], [ %.049, %291 ], [ %.049, %289 ], [ %.049, %288 ], [ %.049, %278 ], [ %.049, %268 ], [ %.049, %267 ], [ %.049, %256 ], [ %.049, %246 ], [ %.049, %240 ], [ %.049, %237 ], [ %.049, %235 ], [ %.049, %232 ], [ %230, %224 ], [ %.049, %223 ], [ %.049, %222 ], [ %.049, %212 ], [ %.049, %202 ], [ %.049, %201 ], [ %.049, %186 ], [ %.049, %176 ], [ %.049, %174 ], [ %.049, %162 ], [ %.049, %152 ], [ %.049, %151 ], [ %.049, %147 ], [ %.049, %146 ], [ %.049, %136 ], [ %.049, %126 ], [ %.049, %124 ], [ %.049, %121 ], [ %.049, %119 ], [ %.049, %107 ], [ %.049, %97 ], [ %.049, %96 ], [ %.049, %86 ], [ %.049, %76 ], [ %.049, %72 ], [ %.049, %71 ], [ %.049, %60 ], [ %.049, %50 ], [ %.049, %48 ], [ %.049, %33 ], [ %.049, %23 ], [ %.049, %20 ]
  %.047.be = phi i64 [ %.047, %19 ], [ %.047, %453 ], [ %.047, %447 ], [ %.047, %446 ], [ %.047, %445 ], [ %.047, %443 ], [ %.047, %442 ], [ %.047, %441 ], [ %.047, %439 ], [ %.047, %433 ], [ %.047, %432 ], [ %.047, %431 ], [ %.047, %430 ], [ %.047, %429 ], [ %.047, %427 ], [ %.047, %426 ], [ %.047, %424 ], [ %.047, %423 ], [ %.047, %413 ], [ %.047, %403 ], [ %.047, %402 ], [ %.047, %401 ], [ %.047, %387 ], [ %.047, %377 ], [ %.047, %375 ], [ %.047, %364 ], [ %.047, %354 ], [ %.047, %350 ], [ %.047, %348 ], [ %.047, %342 ], [ %.047, %340 ], [ %.047, %329 ], [ %.047, %319 ], [ %.047, %318 ], [ %.047, %307 ], [ %.047, %297 ], [ %.047, %291 ], [ %.047, %289 ], [ %.047, %288 ], [ %.047, %278 ], [ %.047, %268 ], [ %.047, %267 ], [ %.047, %256 ], [ %.047, %246 ], [ %.047, %240 ], [ %.047, %237 ], [ %.047, %235 ], [ %.047, %232 ], [ %231, %224 ], [ %.047, %223 ], [ %.047, %222 ], [ %.047, %212 ], [ %.047, %202 ], [ %.047, %201 ], [ %.047, %186 ], [ %.047, %176 ], [ %.047, %174 ], [ %.047, %162 ], [ %.047, %152 ], [ %.047, %151 ], [ %.047, %147 ], [ %.047, %146 ], [ %.047, %136 ], [ %.047, %126 ], [ %.047, %124 ], [ %.047, %121 ], [ %.047, %119 ], [ %.047, %107 ], [ %.047, %97 ], [ %.047, %96 ], [ %.047, %86 ], [ %.047, %76 ], [ %.047, %72 ], [ %.047, %71 ], [ %.047, %60 ], [ %.047, %50 ], [ %.047, %48 ], [ %.047, %33 ], [ %.047, %23 ], [ %.047, %20 ]
  %.045.be = phi i64 [ %.045, %19 ], [ %.045, %453 ], [ %.045, %447 ], [ %.045, %446 ], [ %.045, %445 ], [ %.045, %443 ], [ %.045, %442 ], [ %.045, %441 ], [ %.045, %439 ], [ %.045, %433 ], [ %.045, %432 ], [ %.045, %431 ], [ %.045, %430 ], [ %.045, %429 ], [ %.045, %427 ], [ %.045, %426 ], [ %.045, %424 ], [ %.045, %423 ], [ %.045, %413 ], [ %.045, %403 ], [ %.045, %402 ], [ %.045, %401 ], [ %.045, %387 ], [ %.045, %377 ], [ %.045, %375 ], [ %.045, %364 ], [ %.045, %354 ], [ %.045, %350 ], [ %.045, %348 ], [ %.045, %342 ], [ %.045, %340 ], [ %.045, %329 ], [ %.045, %319 ], [ %.045, %318 ], [ %.045, %307 ], [ %.045, %297 ], [ %.045, %291 ], [ %290, %289 ], [ %.045, %288 ], [ %.045, %278 ], [ %.045, %268 ], [ %.045, %267 ], [ %.045, %256 ], [ %.045, %246 ], [ %.045, %240 ], [ %.045, %237 ], [ %.045, %235 ], [ %.045, %232 ], [ 0, %224 ], [ %.045, %223 ], [ %.045, %222 ], [ %.045, %212 ], [ %.045, %202 ], [ %.045, %201 ], [ %.045, %186 ], [ %.045, %176 ], [ %.045, %174 ], [ %.045, %162 ], [ %.045, %152 ], [ %.045, %151 ], [ %.045, %147 ], [ %.045, %146 ], [ %.045, %136 ], [ %.045, %126 ], [ %.045, %124 ], [ %.045, %121 ], [ %.045, %119 ], [ %.045, %107 ], [ %.045, %97 ], [ %.045, %96 ], [ %.045, %86 ], [ %.045, %76 ], [ %.045, %72 ], [ %.045, %71 ], [ %.045, %60 ], [ %.045, %50 ], [ %.045, %48 ], [ %.045, %33 ], [ %.045, %23 ], [ %.045, %20 ]
  %.043.be = phi i64 [ %.043, %19 ], [ %.043, %453 ], [ %.043, %447 ], [ %.043, %446 ], [ %.043, %445 ], [ %.043, %443 ], [ %.043, %442 ], [ %.neg, %441 ], [ %.043, %439 ], [ %.043, %433 ], [ %.043, %432 ], [ %.043, %431 ], [ %.043, %430 ], [ %.043, %429 ], [ %.043, %427 ], [ %.043, %426 ], [ %.043, %424 ], [ %.043, %423 ], [ %.043, %413 ], [ %.043, %403 ], [ %.043, %402 ], [ %.043, %401 ], [ %.043, %387 ], [ %.043, %377 ], [ %.043, %375 ], [ %.043, %364 ], [ %.043, %354 ], [ %.043, %350 ], [ %.043, %348 ], [ %.043, %342 ], [ %.043, %340 ], [ %.043, %329 ], [ %.043, %319 ], [ %.043, %318 ], [ %.043, %307 ], [ %.043, %297 ], [ %.043, %291 ], [ %.043, %289 ], [ %.043, %288 ], [ %.043, %278 ], [ %.043, %268 ], [ %.043, %267 ], [ %257, %256 ], [ %.043, %246 ], [ %.043, %240 ], [ %.043, %237 ], [ %236, %235 ], [ %.043, %232 ], [ %.043, %224 ], [ %.043, %223 ], [ %.043, %222 ], [ %.043, %212 ], [ %.043, %202 ], [ %.043, %201 ], [ %.043, %186 ], [ %.043, %176 ], [ %.043, %174 ], [ %.043, %162 ], [ %.043, %152 ], [ %.043, %151 ], [ %.043, %147 ], [ %.043, %146 ], [ %.043, %136 ], [ %.043, %126 ], [ %.043, %124 ], [ %.043, %121 ], [ %.043, %119 ], [ %.043, %107 ], [ %.043, %97 ], [ %.043, %96 ], [ %.043, %86 ], [ %.043, %76 ], [ %.043, %72 ], [ %.043, %71 ], [ %.043, %60 ], [ %.043, %50 ], [ %.043, %48 ], [ %.043, %33 ], [ %.043, %23 ], [ %.043, %20 ]
  %.041.be = phi i64 [ %.041, %19 ], [ %.041, %453 ], [ %.041, %447 ], [ %.041, %446 ], [ %.041, %445 ], [ %444, %443 ], [ %.041, %442 ], [ %.041, %441 ], [ %.041, %439 ], [ %.041, %433 ], [ %.041, %432 ], [ %.041, %431 ], [ %.041, %430 ], [ %.041, %429 ], [ %.041, %427 ], [ %.041, %426 ], [ %.041, %424 ], [ %.041, %423 ], [ %.041, %413 ], [ %.041, %403 ], [ %.041, %402 ], [ %.041, %401 ], [ %.041, %387 ], [ %.041, %377 ], [ %.041, %375 ], [ %.041, %364 ], [ %.041, %354 ], [ %.041, %350 ], [ %349, %348 ], [ %.041, %342 ], [ %.041, %340 ], [ %.041, %329 ], [ %.041, %319 ], [ %.041, %318 ], [ %308, %307 ], [ %.041, %297 ], [ %.041, %291 ], [ %.041, %289 ], [ %.041, %288 ], [ %.041, %278 ], [ %.041, %268 ], [ %.041, %267 ], [ %.041, %256 ], [ %.041, %246 ], [ %.041, %240 ], [ %.041, %237 ], [ %.041, %235 ], [ %.041, %232 ], [ %.041, %224 ], [ %.041, %223 ], [ %.041, %222 ], [ %.041, %212 ], [ %.041, %202 ], [ %.041, %201 ], [ %.041, %186 ], [ %.041, %176 ], [ %.041, %174 ], [ %.041, %162 ], [ %.041, %152 ], [ %.041, %151 ], [ %.041, %147 ], [ %.041, %146 ], [ %.041, %136 ], [ %.041, %126 ], [ %.041, %124 ], [ %.041, %121 ], [ %.041, %119 ], [ %.041, %107 ], [ %.041, %97 ], [ %.041, %96 ], [ %.041, %86 ], [ %.041, %76 ], [ %.041, %72 ], [ %.041, %71 ], [ %.041, %60 ], [ %.041, %50 ], [ %.041, %48 ], [ %.041, %33 ], [ %.041, %23 ], [ %.041, %20 ]
  %.039.be = phi i64 [ %.039, %19 ], [ %.039, %453 ], [ %.039, %447 ], [ %.039, %446 ], [ %.039, %445 ], [ %.039, %443 ], [ %.039, %442 ], [ %.039, %441 ], [ %.039, %439 ], [ %.039, %433 ], [ %.039, %432 ], [ %.039, %431 ], [ %.039, %430 ], [ %.039, %429 ], [ %.039, %427 ], [ %.039, %426 ], [ %.039, %424 ], [ %.039, %423 ], [ %.039, %413 ], [ %.039, %403 ], [ %.neg58, %402 ], [ %.039, %401 ], [ %.039, %387 ], [ %.039, %377 ], [ %.039, %375 ], [ %.039, %364 ], [ %.039, %354 ], [ %353, %350 ], [ %.039, %348 ], [ %.039, %342 ], [ %.039, %340 ], [ %.039, %329 ], [ %.039, %319 ], [ %.039, %318 ], [ %.039, %307 ], [ %.039, %297 ], [ %.039, %291 ], [ %.039, %289 ], [ %.039, %288 ], [ %.039, %278 ], [ %.039, %268 ], [ %.039, %267 ], [ %.039, %256 ], [ %.039, %246 ], [ %.039, %240 ], [ %.039, %237 ], [ %.039, %235 ], [ %.039, %232 ], [ %.039, %224 ], [ %.039, %223 ], [ %.039, %222 ], [ %.039, %212 ], [ %.039, %202 ], [ %.039, %201 ], [ %.039, %186 ], [ %.039, %176 ], [ %.039, %174 ], [ %.039, %162 ], [ %.039, %152 ], [ %.039, %151 ], [ %.039, %147 ], [ %.039, %146 ], [ %.039, %136 ], [ %.039, %126 ], [ %.039, %124 ], [ %.039, %121 ], [ %.039, %119 ], [ %.039, %107 ], [ %.039, %97 ], [ %.039, %96 ], [ %.039, %86 ], [ %.039, %76 ], [ %.039, %72 ], [ %.039, %71 ], [ %.039, %60 ], [ %.039, %50 ], [ %.039, %48 ], [ %.039, %33 ], [ %.039, %23 ], [ %.039, %20 ]
  %.0.be = phi i32 [ %.0, %19 ], [ 1047524983, %453 ], [ -2094734857, %447 ], [ -148050035, %446 ], [ -1309973156, %445 ], [ 1713566653, %443 ], [ -476118365, %442 ], [ -1421833796, %441 ], [ -1313228653, %439 ], [ -1465342032, %433 ], [ -1258305628, %432 ], [ 1708536875, %431 ], [ -216757102, %430 ], [ -1518459660, %429 ], [ -1968682237, %427 ], [ -1617952439, %426 ], [ -2071392705, %424 ], [ -1688586830, %423 ], [ %422, %413 ], [ %412, %403 ], [ -961821894, %402 ], [ -1905614977, %401 ], [ %400, %387 ], [ %386, %377 ], [ %376, %375 ], [ %374, %364 ], [ %363, %354 ], [ -961821894, %350 ], [ -1930755362, %348 ], [ -1588139868, %342 ], [ %341, %340 ], [ %339, %329 ], [ %328, %319 ], [ -1930755362, %318 ], [ %317, %307 ], [ %306, %297 ], [ %296, %291 ], [ -938770535, %289 ], [ 2001427010, %288 ], [ %287, %278 ], [ %277, %268 ], [ -229237961, %267 ], [ %266, %256 ], [ %255, %246 ], [ -1579102688, %240 ], [ %239, %237 ], [ -229237961, %235 ], [ %234, %232 ], [ -938770535, %224 ], [ -2071392705, %223 ], [ 570214298, %222 ], [ %221, %212 ], [ %211, %202 ], [ 457348805, %201 ], [ %200, %186 ], [ %185, %176 ], [ %175, %174 ], [ %173, %162 ], [ %161, %152 ], [ 570214298, %151 ], [ %150, %147 ], [ -2071392705, %146 ], [ %145, %136 ], [ %135, %126 ], [ -290439019, %124 ], [ -639180243, %121 ], [ %120, %119 ], [ %118, %107 ], [ %106, %97 ], [ -290439019, %96 ], [ %95, %86 ], [ %85, %76 ], [ %75, %72 ], [ -2071392705, %71 ], [ %70, %60 ], [ %59, %50 ], [ %49, %48 ], [ %47, %33 ], [ %32, %23 ], [ %22, %20 ]
  br label %19

20:                                               ; preds = %19
  %.0..0..0. = load volatile i64, i64* %7, align 8
  %.0..0..0.33 = load volatile i64, i64* %6, align 8
  %21 = icmp slt i64 %.0..0..0., %.0..0..0.33
  %22 = select i1 %21, i32 1566211828, i32 -72106424
  br label %.backedge

23:                                               ; preds = %19
  %24 = load i32, i32* @x.1, align 4
  %25 = load i32, i32* @y.2, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -1617952439, i32 -2021027664
  br label %.backedge

33:                                               ; preds = %19
  %34 = load i64, i64* %8, align 8
  %35 = load i64, i64* %9, align 8
  %36 = load i64, i64* %10, align 8
  %37 = mul nsw i64 %36, %35
  %38 = icmp sgt i64 %34, %37
  store i1 %38, i1* %5, align 1
  %39 = load i32, i32* @x.1, align 4
  %40 = load i32, i32* @y.2, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 248129859, i32 -2021027664
  br label %.backedge

48:                                               ; preds = %19
  %.0..0..0.34 = load volatile i1, i1* %5, align 1
  %49 = select i1 %.0..0..0.34, i32 1566211828, i32 597223541
  br label %.backedge

50:                                               ; preds = %19
  %51 = load i32, i32* @x.1, align 4
  %52 = load i32, i32* @y.2, align 4
  %53 = add i32 %51, -1
  %54 = mul i32 %53, %51
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %57, %56
  %59 = select i1 %58, i32 -1968682237, i32 832146817
  br label %.backedge

60:                                               ; preds = %19
  %61 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 -1)
  %62 = load i32, i32* @x.1, align 4
  %63 = load i32, i32* @y.2, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 1769374397, i32 832146817
  br label %.backedge

71:                                               ; preds = %19
  br label %.backedge

72:                                               ; preds = %19
  %73 = load i64, i64* %10, align 8
  %74 = icmp eq i64 %73, 1
  %75 = select i1 %74, i32 -1750166131, i32 610010826
  br label %.backedge

76:                                               ; preds = %19
  %77 = load i32, i32* @x.1, align 4
  %78 = load i32, i32* @y.2, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 -1518459660, i32 936567067
  br label %.backedge

86:                                               ; preds = %19
  %87 = load i32, i32* @x.1, align 4
  %88 = load i32, i32* @y.2, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 1218935722, i32 936567067
  br label %.backedge

96:                                               ; preds = %19
  br label %.backedge

97:                                               ; preds = %19
  %98 = load i32, i32* @x.1, align 4
  %99 = load i32, i32* @y.2, align 4
  %100 = add i32 %98, -1
  %101 = mul i32 %100, %98
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %104, %103
  %106 = select i1 %105, i32 -216757102, i32 533600245
  br label %.backedge

107:                                              ; preds = %19
  %108 = load i64, i64* %8, align 8
  %109 = icmp sle i64 %.053, %108
  store i1 %109, i1* %4, align 1
  %110 = load i32, i32* @x.1, align 4
  %111 = load i32, i32* @y.2, align 4
  %112 = add i32 %110, -1
  %113 = mul i32 %112, %110
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %116, %115
  %118 = select i1 %117, i32 -1615261838, i32 533600245
  br label %.backedge

119:                                              ; preds = %19
  %.0..0..0.35 = load volatile i1, i1* %4, align 1
  %120 = select i1 %.0..0..0.35, i32 -1908055266, i32 -769064783
  br label %.backedge

121:                                              ; preds = %19
  %122 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %.053)
  %123 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %122, i8 signext 32)
  br label %.backedge

124:                                              ; preds = %19
  %125 = add i64 %.053, 1
  br label %.backedge

126:                                              ; preds = %19
  %127 = load i32, i32* @x.1, align 4
  %128 = load i32, i32* @y.2, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 1708536875, i32 1721874505
  br label %.backedge

136:                                              ; preds = %19
  %137 = load i32, i32* @x.1, align 4
  %138 = load i32, i32* @y.2, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 754932505, i32 1721874505
  br label %.backedge

146:                                              ; preds = %19
  br label %.backedge

147:                                              ; preds = %19
  %148 = load i64, i64* %9, align 8
  %149 = icmp eq i64 %148, 1
  %150 = select i1 %149, i32 -1382288857, i32 829632035
  br label %.backedge

151:                                              ; preds = %19
  br label %.backedge

152:                                              ; preds = %19
  %153 = load i32, i32* @x.1, align 4
  %154 = load i32, i32* @y.2, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 -1258305628, i32 739683962
  br label %.backedge

162:                                              ; preds = %19
  %163 = load i64, i64* %8, align 8
  %164 = icmp sle i64 %.051, %163
  store i1 %164, i1* %3, align 1
  %165 = load i32, i32* @x.1, align 4
  %166 = load i32, i32* @y.2, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 -2116664918, i32 739683962
  br label %.backedge

174:                                              ; preds = %19
  %.0..0..0.36 = load volatile i1, i1* %3, align 1
  %175 = select i1 %.0..0..0.36, i32 205210082, i32 -1498798221
  br label %.backedge

176:                                              ; preds = %19
  %177 = load i32, i32* @x.1, align 4
  %178 = load i32, i32* @y.2, align 4
  %179 = add i32 %177, -1
  %180 = mul i32 %179, %177
  %181 = and i32 %180, 1
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %183, %182
  %185 = select i1 %184, i32 -1465342032, i32 1987463667
  br label %.backedge

186:                                              ; preds = %19
  %187 = load i64, i64* %8, align 8
  %188 = sub i64 1, %.051
  %189 = add i64 %188, %187
  %190 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %189)
  %191 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %190, i8 signext 32)
  %192 = load i32, i32* @x.1, align 4
  %193 = load i32, i32* @y.2, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 1602044108, i32 1987463667
  br label %.backedge

201:                                              ; preds = %19
  br label %.backedge

202:                                              ; preds = %19
  %203 = load i32, i32* @x.1, align 4
  %204 = load i32, i32* @y.2, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 -1313228653, i32 -201554592
  br label %.backedge

212:                                              ; preds = %19
  %.neg60 = add i64 %.051, 1
  %213 = load i32, i32* @x.1, align 4
  %214 = load i32, i32* @y.2, align 4
  %215 = add i32 %213, -1
  %216 = mul i32 %215, %213
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %219, %218
  %221 = select i1 %220, i32 -1896907358, i32 -201554592
  br label %.backedge

222:                                              ; preds = %19
  br label %.backedge

223:                                              ; preds = %19
  br label %.backedge

224:                                              ; preds = %19
  %225 = load i64, i64* %8, align 8
  %226 = load i64, i64* %9, align 8
  %227 = sub i64 %225, %226
  %228 = load i64, i64* %10, align 8
  %229 = add i64 %228, -1
  %230 = sdiv i64 %227, %229
  %231 = srem i64 %227, %229
  br label %.backedge

232:                                              ; preds = %19
  %233 = icmp slt i64 %.045, %.049
  %234 = select i1 %233, i32 -803853741, i32 -2089761123
  br label %.backedge

235:                                              ; preds = %19
  %236 = load i64, i64* %10, align 8
  br label %.backedge

237:                                              ; preds = %19
  %238 = icmp sgt i64 %.043, 0
  %239 = select i1 %238, i32 1526658565, i32 -2060900516
  br label %.backedge

240:                                              ; preds = %19
  %241 = load i64, i64* %10, align 8
  %242 = mul nsw i64 %241, %.045
  %243 = add i64 %242, %.043
  %244 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %243)
  %245 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %244, i8 signext 32)
  br label %.backedge

246:                                              ; preds = %19
  %247 = load i32, i32* @x.1, align 4
  %248 = load i32, i32* @y.2, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 -1421833796, i32 83935945
  br label %.backedge

256:                                              ; preds = %19
  %257 = add i64 %.043, -1
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 1261356720, i32 83935945
  br label %.backedge

267:                                              ; preds = %19
  br label %.backedge

268:                                              ; preds = %19
  %269 = load i32, i32* @x.1, align 4
  %270 = load i32, i32* @y.2, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 -476118365, i32 1869839547
  br label %.backedge

278:                                              ; preds = %19
  %279 = load i32, i32* @x.1, align 4
  %280 = load i32, i32* @y.2, align 4
  %281 = add i32 %279, -1
  %282 = mul i32 %281, %279
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %285, %284
  %287 = select i1 %286, i32 -9165601, i32 1869839547
  br label %.backedge

288:                                              ; preds = %19
  br label %.backedge

289:                                              ; preds = %19
  %290 = add i64 %.045, 1
  br label %.backedge

291:                                              ; preds = %19
  %292 = load i64, i64* %8, align 8
  %293 = load i64, i64* %9, align 8
  %294 = load i64, i64* %10, align 8
  %295 = mul nsw i64 %294, %293
  %.not = icmp eq i64 %292, %295
  %296 = select i1 %.not, i32 -1688586830, i32 -1330471492
  br label %.backedge

297:                                              ; preds = %19
  %298 = load i32, i32* @x.1, align 4
  %299 = load i32, i32* @y.2, align 4
  %300 = add i32 %298, -1
  %301 = mul i32 %300, %298
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %304, %303
  %306 = select i1 %305, i32 1713566653, i32 1045856707
  br label %.backedge

307:                                              ; preds = %19
  %308 = add i64 %.047, 1
  %309 = load i32, i32* @x.1, align 4
  %310 = load i32, i32* @y.2, align 4
  %311 = add i32 %309, -1
  %312 = mul i32 %311, %309
  %313 = and i32 %312, 1
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %315, %314
  %317 = select i1 %316, i32 1226577121, i32 1045856707
  br label %.backedge

318:                                              ; preds = %19
  br label %.backedge

319:                                              ; preds = %19
  %320 = load i32, i32* @x.1, align 4
  %321 = load i32, i32* @y.2, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 -1309973156, i32 117960179
  br label %.backedge

329:                                              ; preds = %19
  %330 = icmp sgt i64 %.041, 0
  store i1 %330, i1* %2, align 1
  %331 = load i32, i32* @x.1, align 4
  %332 = load i32, i32* @y.2, align 4
  %333 = add i32 %331, -1
  %334 = mul i32 %333, %331
  %335 = and i32 %334, 1
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %337, %336
  %339 = select i1 %338, i32 1542623236, i32 117960179
  br label %.backedge

340:                                              ; preds = %19
  %.0..0..0.37 = load volatile i1, i1* %2, align 1
  %341 = select i1 %.0..0..0.37, i32 -1124817869, i32 1037388044
  br label %.backedge

342:                                              ; preds = %19
  %343 = load i64, i64* %10, align 8
  %344 = mul nsw i64 %343, %.049
  %345 = add i64 %344, %.041
  %346 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %345)
  %347 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %346, i8 signext 32)
  br label %.backedge

348:                                              ; preds = %19
  %349 = add i64 %.041, -1
  br label %.backedge

350:                                              ; preds = %19
  %351 = load i64, i64* %9, align 8
  %352 = xor i64 %.049, -1
  %353 = add i64 %351, %352
  br label %.backedge

354:                                              ; preds = %19
  %355 = load i32, i32* @x.1, align 4
  %356 = load i32, i32* @y.2, align 4
  %357 = add i32 %355, -1
  %358 = mul i32 %357, %355
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %361, %360
  %363 = select i1 %362, i32 -148050035, i32 -366627230
  br label %.backedge

364:                                              ; preds = %19
  %365 = icmp sgt i64 %.039, 0
  store i1 %365, i1* %1, align 1
  %366 = load i32, i32* @x.1, align 4
  %367 = load i32, i32* @y.2, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 412133668, i32 -366627230
  br label %.backedge

375:                                              ; preds = %19
  %.0..0..0.38 = load volatile i1, i1* %1, align 1
  %376 = select i1 %.0..0..0.38, i32 -2089916119, i32 -513049040
  br label %.backedge

377:                                              ; preds = %19
  %378 = load i32, i32* @x.1, align 4
  %379 = load i32, i32* @y.2, align 4
  %380 = add i32 %378, -1
  %381 = mul i32 %380, %378
  %382 = and i32 %381, 1
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %384, %383
  %386 = select i1 %385, i32 -2094734857, i32 -1810630784
  br label %.backedge

387:                                              ; preds = %19
  %388 = load i64, i64* %8, align 8
  %.neg59 = sub i64 1, %.039
  %389 = add i64 %.neg59, %388
  %390 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %389)
  %391 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %390, i8 signext 32)
  %392 = load i32, i32* @x.1, align 4
  %393 = load i32, i32* @y.2, align 4
  %394 = add i32 %392, -1
  %395 = mul i32 %394, %392
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %398, %397
  %400 = select i1 %399, i32 354944731, i32 -1810630784
  br label %.backedge

401:                                              ; preds = %19
  br label %.backedge

402:                                              ; preds = %19
  %.neg58 = add i64 %.039, -1
  br label %.backedge

403:                                              ; preds = %19
  %404 = load i32, i32* @x.1, align 4
  %405 = load i32, i32* @y.2, align 4
  %406 = add i32 %404, -1
  %407 = mul i32 %406, %404
  %408 = and i32 %407, 1
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %410, %409
  %412 = select i1 %411, i32 1047524983, i32 1185073964
  br label %.backedge

413:                                              ; preds = %19
  %414 = load i32, i32* @x.1, align 4
  %415 = load i32, i32* @y.2, align 4
  %416 = add i32 %414, -1
  %417 = mul i32 %416, %414
  %418 = and i32 %417, 1
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %420, %419
  %422 = select i1 %421, i32 -1358394398, i32 1185073964
  br label %.backedge

423:                                              ; preds = %19
  br label %.backedge

424:                                              ; preds = %19
  br label %.backedge

425:                                              ; preds = %19
  ret i32 0

426:                                              ; preds = %19
  br label %.backedge

427:                                              ; preds = %19
  %428 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 -1)
  br label %.backedge

429:                                              ; preds = %19
  br label %.backedge

430:                                              ; preds = %19
  br label %.backedge

431:                                              ; preds = %19
  br label %.backedge

432:                                              ; preds = %19
  br label %.backedge

433:                                              ; preds = %19
  %434 = load i64, i64* %8, align 8
  %435 = sub i64 1, %.051
  %436 = add i64 %435, %434
  %437 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %436)
  %438 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %437, i8 signext 32)
  br label %.backedge

439:                                              ; preds = %19
  %440 = add i64 %.051, 1
  br label %.backedge

441:                                              ; preds = %19
  %.neg = add i64 %.043, -1
  br label %.backedge

442:                                              ; preds = %19
  br label %.backedge

443:                                              ; preds = %19
  %444 = add i64 %.047, 1
  br label %.backedge

445:                                              ; preds = %19
  br label %.backedge

446:                                              ; preds = %19
  br label %.backedge

447:                                              ; preds = %19
  %448 = load i64, i64* %8, align 8
  %449 = sub i64 1, %.039
  %450 = add i64 %449, %448
  %451 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %450)
  %452 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %451, i8 signext 32)
  br label %.backedge

453:                                              ; preds = %19
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s381711681.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
