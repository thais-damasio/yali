; ModuleID = 'build_ollvm/programs/p03421/s178730977.ll'
source_filename = "Project_CodeNet_C++1400/p03421/s178730977.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = local_unnamed_addr global i64 0, align 8
@a = local_unnamed_addr global i64 0, align 8
@b = local_unnamed_addr global i64 0, align 8
@.str = private unnamed_addr constant [3 x i8] c"-1\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s178730977.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline nounwind uwtable
define i32 @_Z4readv() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = load i32, i32* @x.2, align 4
  %9 = load i32, i32* @y.3, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %7, align 1
  %14 = icmp slt i32 %9, 10
  store i1 %14, i1* %6, align 1
  br label %15

15:                                               ; preds = %.backedge, %0
  %.029 = phi i32 [ -152418135, %0 ], [ %.029.be, %.backedge ]
  %.027 = phi i1 [ undef, %0 ], [ %.027.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.029, label %.backedge [
    i32 -152418135, label %16
    i32 -1842188741, label %19
    i32 1539019363, label %34
    i32 -533182605, label %35
    i32 1365658949, label %39
    i32 -775413265, label %49
    i32 315898011, label %61
    i32 -618399133, label %62
    i32 -1229395349, label %64
    i32 1384542182, label %68
    i32 182197127, label %69
    i32 -1958181114, label %79
    i32 813889149, label %91
    i32 -1992894465, label %92
    i32 -72004947, label %93
    i32 -492971888, label %97
    i32 -2110758008, label %100
    i32 1327819275, label %102
    i32 -1309417424, label %113
    i32 -2050196061, label %123
    i32 -1130148348, label %136
    i32 1149986747, label %137
    i32 -2014993011, label %139
    i32 -2084782245, label %140
    i32 -888845468, label %143
  ]

.backedge:                                        ; preds = %15, %143, %140, %139, %137, %123, %113, %102, %100, %97, %93, %92, %91, %79, %69, %68, %64, %62, %61, %49, %39, %35, %34, %19, %16
  %.029.be = phi i32 [ %.029, %15 ], [ -2050196061, %143 ], [ -1958181114, %140 ], [ -775413265, %139 ], [ -1842188741, %137 ], [ %135, %123 ], [ %122, %113 ], [ -72004947, %102 ], [ %101, %100 ], [ -2110758008, %97 ], [ %96, %93 ], [ -72004947, %92 ], [ -533182605, %91 ], [ %90, %79 ], [ %78, %69 ], [ 182197127, %68 ], [ %67, %64 ], [ %63, %62 ], [ -618399133, %61 ], [ %60, %49 ], [ %48, %39 ], [ %38, %35 ], [ -533182605, %34 ], [ %33, %19 ], [ %18, %16 ]
  %.027.be = phi i1 [ %.027, %15 ], [ %.027, %143 ], [ %.027, %140 ], [ %.027, %139 ], [ %.027, %137 ], [ %.027, %123 ], [ %.027, %113 ], [ %.027, %102 ], [ %.027, %100 ], [ %.027, %97 ], [ %.027, %93 ], [ %.027, %92 ], [ %.027, %91 ], [ %.027, %79 ], [ %.027, %69 ], [ %.027, %68 ], [ %.027, %64 ], [ %.027, %62 ], [ %.0..0..0.25, %61 ], [ %.027, %49 ], [ %.027, %39 ], [ true, %35 ], [ %.027, %34 ], [ %.027, %19 ], [ %.027, %16 ]
  %.0.be = phi i1 [ %.0, %15 ], [ %.0, %143 ], [ %.0, %140 ], [ %.0, %139 ], [ %.0, %137 ], [ %.0, %123 ], [ %.0, %113 ], [ %.0, %102 ], [ %.0, %100 ], [ %99, %97 ], [ false, %93 ], [ %.0, %92 ], [ %.0, %91 ], [ %.0, %79 ], [ %.0, %69 ], [ %.0, %68 ], [ %.0, %64 ], [ %.0, %62 ], [ %.0, %61 ], [ %.0, %49 ], [ %.0, %39 ], [ %.0, %35 ], [ %.0, %34 ], [ %.0, %19 ], [ %.0, %16 ]
  br label %15

16:                                               ; preds = %15
  %.0..0..0.2 = load volatile i1, i1* %7, align 1
  %.0..0..0.3 = load volatile i1, i1* %6, align 1
  %17 = or i1 %.0..0..0.2, %.0..0..0.3
  %18 = select i1 %17, i32 -1842188741, i32 1149986747
  br label %.backedge

19:                                               ; preds = %15
  %20 = alloca i32, align 4
  store i32* %20, i32** %5, align 8
  %21 = alloca i32, align 4
  store i32* %21, i32** %4, align 8
  %22 = alloca i8, align 1
  store i8* %22, i8** %3, align 8
  %.0..0..0.4 = load volatile i32*, i32** %5, align 8
  store i32 0, i32* %.0..0..0.4, align 4
  %.0..0..0.10 = load volatile i32*, i32** %4, align 8
  store i32 1, i32* %.0..0..0.10, align 4
  %23 = call i32 @getchar()
  %24 = trunc i32 %23 to i8
  %.0..0..0.14 = load volatile i8*, i8** %3, align 8
  store i8 %24, i8* %.0..0..0.14, align 1
  %25 = load i32, i32* @x.2, align 4
  %26 = load i32, i32* @y.3, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 1539019363, i32 1149986747
  br label %.backedge

34:                                               ; preds = %15
  br label %.backedge

35:                                               ; preds = %15
  %.0..0..0.15 = load volatile i8*, i8** %3, align 8
  %36 = load i8, i8* %.0..0..0.15, align 1
  %37 = icmp slt i8 %36, 48
  %38 = select i1 %37, i32 -618399133, i32 1365658949
  br label %.backedge

39:                                               ; preds = %15
  %40 = load i32, i32* @x.2, align 4
  %41 = load i32, i32* @y.3, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 -775413265, i32 -2014993011
  br label %.backedge

49:                                               ; preds = %15
  %.0..0..0.16 = load volatile i8*, i8** %3, align 8
  %50 = load i8, i8* %.0..0..0.16, align 1
  %51 = icmp sgt i8 %50, 57
  store i1 %51, i1* %2, align 1
  %52 = load i32, i32* @x.2, align 4
  %53 = load i32, i32* @y.3, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 315898011, i32 -2014993011
  br label %.backedge

61:                                               ; preds = %15
  %.0..0..0.25 = load volatile i1, i1* %2, align 1
  br label %.backedge

62:                                               ; preds = %15
  %63 = select i1 %.027, i32 -1229395349, i32 -1992894465
  br label %.backedge

64:                                               ; preds = %15
  %.0..0..0.17 = load volatile i8*, i8** %3, align 8
  %65 = load i8, i8* %.0..0..0.17, align 1
  %66 = icmp eq i8 %65, 45
  %67 = select i1 %66, i32 1384542182, i32 182197127
  br label %.backedge

68:                                               ; preds = %15
  %.0..0..0.11 = load volatile i32*, i32** %4, align 8
  store i32 -1, i32* %.0..0..0.11, align 4
  br label %.backedge

69:                                               ; preds = %15
  %70 = load i32, i32* @x.2, align 4
  %71 = load i32, i32* @y.3, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -1958181114, i32 -2084782245
  br label %.backedge

79:                                               ; preds = %15
  %80 = call i32 @getchar()
  %81 = trunc i32 %80 to i8
  %.0..0..0.18 = load volatile i8*, i8** %3, align 8
  store i8 %81, i8* %.0..0..0.18, align 1
  %82 = load i32, i32* @x.2, align 4
  %83 = load i32, i32* @y.3, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 813889149, i32 -2084782245
  br label %.backedge

91:                                               ; preds = %15
  br label %.backedge

92:                                               ; preds = %15
  br label %.backedge

93:                                               ; preds = %15
  %.0..0..0.19 = load volatile i8*, i8** %3, align 8
  %94 = load i8, i8* %.0..0..0.19, align 1
  %95 = icmp sgt i8 %94, 47
  %96 = select i1 %95, i32 -492971888, i32 -2110758008
  br label %.backedge

97:                                               ; preds = %15
  %.0..0..0.20 = load volatile i8*, i8** %3, align 8
  %98 = load i8, i8* %.0..0..0.20, align 1
  %99 = icmp slt i8 %98, 58
  br label %.backedge

100:                                              ; preds = %15
  %101 = select i1 %.0, i32 1327819275, i32 -1309417424
  br label %.backedge

102:                                              ; preds = %15
  %.0..0..0.5 = load volatile i32*, i32** %5, align 8
  %103 = load i32, i32* %.0..0..0.5, align 4
  %104 = shl i32 %103, 3
  %.0..0..0.6 = load volatile i32*, i32** %5, align 8
  %105 = load i32, i32* %.0..0..0.6, align 4
  %.neg.neg = shl i32 %105, 1
  %106 = add i32 %.neg.neg, %104
  %.0..0..0.21 = load volatile i8*, i8** %3, align 8
  %107 = load i8, i8* %.0..0..0.21, align 1
  %108 = xor i8 %107, 48
  %109 = sext i8 %108 to i32
  %110 = add i32 %106, %109
  %.0..0..0.7 = load volatile i32*, i32** %5, align 8
  store i32 %110, i32* %.0..0..0.7, align 4
  %111 = call i32 @getchar()
  %112 = trunc i32 %111 to i8
  %.0..0..0.22 = load volatile i8*, i8** %3, align 8
  store i8 %112, i8* %.0..0..0.22, align 1
  br label %.backedge

113:                                              ; preds = %15
  %114 = load i32, i32* @x.2, align 4
  %115 = load i32, i32* @y.3, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 -2050196061, i32 -888845468
  br label %.backedge

123:                                              ; preds = %15
  %.0..0..0.8 = load volatile i32*, i32** %5, align 8
  %124 = load i32, i32* %.0..0..0.8, align 4
  %.0..0..0.12 = load volatile i32*, i32** %4, align 8
  %125 = load i32, i32* %.0..0..0.12, align 4
  %126 = mul nsw i32 %125, %124
  store i32 %126, i32* %1, align 4
  %127 = load i32, i32* @x.2, align 4
  %128 = load i32, i32* @y.3, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 -1130148348, i32 -888845468
  br label %.backedge

136:                                              ; preds = %15
  %.0..0..0.26 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.26

137:                                              ; preds = %15
  %138 = call i32 @getchar()
  br label %.backedge

139:                                              ; preds = %15
  %.0..0..0.23 = load volatile i8*, i8** %3, align 8
  br label %.backedge

140:                                              ; preds = %15
  %141 = call i32 @getchar()
  %142 = trunc i32 %141 to i8
  %.0..0..0.24 = load volatile i8*, i8** %3, align 8
  store i8 %142, i8* %.0..0..0.24, align 1
  br label %.backedge

143:                                              ; preds = %15
  %.0..0..0.9 = load volatile i32*, i32** %5, align 8
  %.0..0..0.13 = load volatile i32*, i32** %4, align 8
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #5

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #6 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = tail call i32 @_Z4readv()
  %9 = sext i32 %8 to i64
  store i64 %9, i64* @n, align 8
  %10 = tail call i32 @_Z4readv()
  %11 = sext i32 %10 to i64
  store i64 %11, i64* @a, align 8
  %12 = tail call i32 @_Z4readv()
  %13 = sext i32 %12 to i64
  store i64 %13, i64* @b, align 8
  %14 = load i64, i64* @a, align 8
  %15 = add i64 %14, %13
  store i64 %15, i64* %7, align 8
  %16 = load i64, i64* @n, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %6, align 8
  br label %18

18:                                               ; preds = %.backedge, %0
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.046 = phi i32 [ undef, %0 ], [ %.046.be, %.backedge ]
  %.044 = phi i32 [ undef, %0 ], [ %.044.be, %.backedge ]
  %.042 = phi i32 [ undef, %0 ], [ %.042.be, %.backedge ]
  %.040 = phi i32 [ undef, %0 ], [ %.040.be, %.backedge ]
  %.038 = phi i32 [ undef, %0 ], [ %.038.be, %.backedge ]
  %.036 = phi i32 [ 1347309401, %0 ], [ %.036.be, %.backedge ]
  %.0 = phi i32 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.036, label %.backedge [
    i32 1347309401, label %19
    i32 1493269328, label %22
    i32 1794287438, label %24
    i32 -1829298018, label %33
    i32 -442873955, label %35
    i32 -1608046709, label %39
    i32 1507321500, label %49
    i32 -534926746, label %62
    i32 307760093, label %64
    i32 -1103483488, label %66
    i32 123963381, label %76
    i32 -151785571, label %86
    i32 -2002951950, label %87
    i32 1876196167, label %97
    i32 1342530023, label %110
    i32 1400298579, label %112
    i32 1054873021, label %114
    i32 39160368, label %124
    i32 -272619381, label %135
    i32 979623690, label %136
    i32 -1460184497, label %146
    i32 -1086930374, label %156
    i32 -1398960542, label %157
    i32 2126770544, label %167
    i32 -352848216, label %187
    i32 1215332925, label %188
    i32 1726062311, label %192
    i32 1211578154, label %202
    i32 1294625927, label %218
    i32 1967485282, label %219
    i32 -1335805715, label %221
    i32 1505756971, label %222
    i32 -280174355, label %227
    i32 1045177567, label %237
    i32 1659722809, label %248
    i32 1134982379, label %250
    i32 -1557593116, label %260
    i32 -1884596201, label %271
    i32 725095122, label %272
    i32 1078031264, label %282
    i32 1563305030, label %292
    i32 1705415783, label %293
    i32 -2032577589, label %294
    i32 -2074162113, label %296
    i32 -39214653, label %300
    i32 1029011321, label %302
    i32 -997689532, label %304
    i32 319828223, label %305
    i32 -2065320859, label %306
    i32 -165760316, label %307
    i32 176942907, label %308
    i32 586004754, label %309
    i32 1871828160, label %311
    i32 244009930, label %312
    i32 -1496302493, label %323
    i32 -123920644, label %329
    i32 -1267074144, label %330
    i32 1634021238, label %331
  ]

.backedge:                                        ; preds = %18, %331, %330, %329, %323, %312, %311, %309, %308, %307, %306, %304, %302, %300, %296, %294, %293, %292, %282, %272, %271, %260, %250, %248, %237, %227, %222, %221, %219, %218, %202, %192, %188, %187, %167, %157, %156, %146, %136, %135, %124, %114, %112, %110, %97, %87, %86, %76, %66, %64, %62, %49, %39, %35, %33, %24, %22, %19
  %.052.be = phi i32 [ %.052, %18 ], [ %.052, %331 ], [ %.052, %330 ], [ %.052, %329 ], [ %.052, %323 ], [ %.052, %312 ], [ %.052, %311 ], [ %310, %309 ], [ %.052, %308 ], [ 1, %307 ], [ %.052, %306 ], [ %.052, %304 ], [ %.052, %302 ], [ %.052, %300 ], [ %.052, %296 ], [ %.052, %294 ], [ %.052, %293 ], [ %.052, %292 ], [ %.052, %282 ], [ %.052, %272 ], [ %.052, %271 ], [ %.052, %260 ], [ %.052, %250 ], [ %.052, %248 ], [ %.052, %237 ], [ %.052, %227 ], [ %.052, %222 ], [ %.052, %221 ], [ %.052, %219 ], [ %.052, %218 ], [ %.052, %202 ], [ %.052, %192 ], [ %.052, %188 ], [ %.052, %187 ], [ %.052, %167 ], [ %.052, %157 ], [ %.052, %156 ], [ %.052, %146 ], [ %.052, %136 ], [ %.052, %135 ], [ %125, %124 ], [ %.052, %114 ], [ %.052, %112 ], [ %.052, %110 ], [ %.052, %97 ], [ %.052, %87 ], [ %.052, %86 ], [ 1, %76 ], [ %.052, %66 ], [ %.052, %64 ], [ %.052, %62 ], [ %.052, %49 ], [ %.052, %39 ], [ %.052, %35 ], [ %.052, %33 ], [ %.052, %24 ], [ %.052, %22 ], [ %.052, %19 ]
  %.050.be = phi i32 [ %.050, %18 ], [ %.050, %331 ], [ %.050, %330 ], [ %.050, %329 ], [ %.050, %323 ], [ %319, %312 ], [ %.050, %311 ], [ %.050, %309 ], [ %.050, %308 ], [ %.050, %307 ], [ %.050, %306 ], [ %.050, %304 ], [ %.050, %302 ], [ %.050, %300 ], [ %.050, %296 ], [ %.050, %294 ], [ %.050, %293 ], [ %.050, %292 ], [ %.050, %282 ], [ %.050, %272 ], [ %.050, %271 ], [ %.050, %260 ], [ %.050, %250 ], [ %.050, %248 ], [ %.050, %237 ], [ %.050, %227 ], [ %.050, %222 ], [ %.050, %221 ], [ %.050, %219 ], [ %.050, %218 ], [ %.050, %202 ], [ %.050, %192 ], [ %.050, %188 ], [ %.050, %187 ], [ %174, %167 ], [ %.050, %157 ], [ %.050, %156 ], [ %.050, %146 ], [ %.050, %136 ], [ %.050, %135 ], [ %.050, %124 ], [ %.050, %114 ], [ %.050, %112 ], [ %.050, %110 ], [ %.050, %97 ], [ %.050, %87 ], [ %.050, %86 ], [ %.050, %76 ], [ %.050, %66 ], [ %.050, %64 ], [ %.050, %62 ], [ %.050, %49 ], [ %.050, %39 ], [ %.050, %35 ], [ %.050, %33 ], [ %.050, %24 ], [ %.050, %22 ], [ %.050, %19 ]
  %.048.be = phi i32 [ %.048, %18 ], [ %.048, %331 ], [ %.048, %330 ], [ %.048, %329 ], [ %.048, %323 ], [ %321, %312 ], [ %.048, %311 ], [ %.048, %309 ], [ %.048, %308 ], [ %.048, %307 ], [ %.048, %306 ], [ %.048, %304 ], [ %.048, %302 ], [ %.048, %300 ], [ %.048, %296 ], [ %.048, %294 ], [ %.048, %293 ], [ %.048, %292 ], [ %.048, %282 ], [ %.048, %272 ], [ %.048, %271 ], [ %.048, %260 ], [ %.048, %250 ], [ %.048, %248 ], [ %.048, %237 ], [ %.048, %227 ], [ %.048, %222 ], [ %.048, %221 ], [ %.048, %219 ], [ %.048, %218 ], [ %.048, %202 ], [ %.048, %192 ], [ %.048, %188 ], [ %.048, %187 ], [ %176, %167 ], [ %.048, %157 ], [ %.048, %156 ], [ %.048, %146 ], [ %.048, %136 ], [ %.048, %135 ], [ %.048, %124 ], [ %.048, %114 ], [ %.048, %112 ], [ %.048, %110 ], [ %.048, %97 ], [ %.048, %87 ], [ %.048, %86 ], [ %.048, %76 ], [ %.048, %66 ], [ %.048, %64 ], [ %.048, %62 ], [ %.048, %49 ], [ %.048, %39 ], [ %.048, %35 ], [ %.048, %33 ], [ %.048, %24 ], [ %.048, %22 ], [ %.048, %19 ]
  %.046.be = phi i32 [ %.046, %18 ], [ %.046, %331 ], [ %.046, %330 ], [ %.046, %329 ], [ %.046, %323 ], [ %322, %312 ], [ %.046, %311 ], [ %.046, %309 ], [ %.046, %308 ], [ %.046, %307 ], [ %.046, %306 ], [ %.046, %304 ], [ %303, %302 ], [ %.046, %300 ], [ %.046, %296 ], [ %.046, %294 ], [ %.046, %293 ], [ %.046, %292 ], [ %.046, %282 ], [ %.046, %272 ], [ %.046, %271 ], [ %.046, %260 ], [ %.046, %250 ], [ %.046, %248 ], [ %.046, %237 ], [ %.046, %227 ], [ %.046, %222 ], [ %.046, %221 ], [ %.046, %219 ], [ %.046, %218 ], [ %.046, %202 ], [ %.046, %192 ], [ %.046, %188 ], [ %.046, %187 ], [ %177, %167 ], [ %.046, %157 ], [ %.046, %156 ], [ %.046, %146 ], [ %.046, %136 ], [ %.046, %135 ], [ %.046, %124 ], [ %.046, %114 ], [ %.046, %112 ], [ %.046, %110 ], [ %.046, %97 ], [ %.046, %87 ], [ %.046, %86 ], [ %.046, %76 ], [ %.046, %66 ], [ %.046, %64 ], [ %.046, %62 ], [ %.046, %49 ], [ %.046, %39 ], [ %.046, %35 ], [ %.046, %33 ], [ %.046, %24 ], [ %.046, %22 ], [ %.046, %19 ]
  %.044.be = phi i32 [ %.044, %18 ], [ %.044, %331 ], [ %.044, %330 ], [ %.044, %329 ], [ %.044, %323 ], [ 1, %312 ], [ %.044, %311 ], [ %.044, %309 ], [ %.044, %308 ], [ %.044, %307 ], [ %.044, %306 ], [ %.044, %304 ], [ %.044, %302 ], [ %.044, %300 ], [ %.044, %296 ], [ %.044, %294 ], [ %.044, %293 ], [ %.044, %292 ], [ %.044, %282 ], [ %.044, %272 ], [ %.044, %271 ], [ %.044, %260 ], [ %.044, %250 ], [ %.044, %248 ], [ %.044, %237 ], [ %.044, %227 ], [ %.044, %222 ], [ %.044, %221 ], [ %220, %219 ], [ %.044, %218 ], [ %.044, %202 ], [ %.044, %192 ], [ %.044, %188 ], [ %.044, %187 ], [ 1, %167 ], [ %.044, %157 ], [ %.044, %156 ], [ %.044, %146 ], [ %.044, %136 ], [ %.044, %135 ], [ %.044, %124 ], [ %.044, %114 ], [ %.044, %112 ], [ %.044, %110 ], [ %.044, %97 ], [ %.044, %87 ], [ %.044, %86 ], [ %.044, %76 ], [ %.044, %66 ], [ %.044, %64 ], [ %.044, %62 ], [ %.044, %49 ], [ %.044, %39 ], [ %.044, %35 ], [ %.044, %33 ], [ %.044, %24 ], [ %.044, %22 ], [ %.044, %19 ]
  %.042.be = phi i32 [ %.042, %18 ], [ %.042, %331 ], [ %.042, %330 ], [ %.042, %329 ], [ %.042, %323 ], [ %.042, %312 ], [ %.042, %311 ], [ %.042, %309 ], [ %.042, %308 ], [ %.042, %307 ], [ %.042, %306 ], [ %.neg56, %304 ], [ %.042, %302 ], [ %.042, %300 ], [ %.042, %296 ], [ %.042, %294 ], [ %.042, %293 ], [ %.042, %292 ], [ %.042, %282 ], [ %.042, %272 ], [ %.042, %271 ], [ %.042, %260 ], [ %.042, %250 ], [ %.042, %248 ], [ %.042, %237 ], [ %.042, %227 ], [ %.042, %222 ], [ 1, %221 ], [ %.042, %219 ], [ %.042, %218 ], [ %.042, %202 ], [ %.042, %192 ], [ %.042, %188 ], [ %.042, %187 ], [ %.042, %167 ], [ %.042, %157 ], [ %.042, %156 ], [ %.042, %146 ], [ %.042, %136 ], [ %.042, %135 ], [ %.042, %124 ], [ %.042, %114 ], [ %.042, %112 ], [ %.042, %110 ], [ %.042, %97 ], [ %.042, %87 ], [ %.042, %86 ], [ %.042, %76 ], [ %.042, %66 ], [ %.042, %64 ], [ %.042, %62 ], [ %.042, %49 ], [ %.042, %39 ], [ %.042, %35 ], [ %.042, %33 ], [ %.042, %24 ], [ %.042, %22 ], [ %.042, %19 ]
  %.040.be = phi i32 [ %.040, %18 ], [ %.040, %331 ], [ %.040, %330 ], [ %.040, %329 ], [ %.040, %323 ], [ %.040, %312 ], [ %.040, %311 ], [ %.040, %309 ], [ %.040, %308 ], [ %.040, %307 ], [ %.040, %306 ], [ %.040, %304 ], [ %.040, %302 ], [ %.040, %300 ], [ %.040, %296 ], [ %.040, %294 ], [ %.0, %293 ], [ %.040, %292 ], [ %.040, %282 ], [ %.040, %272 ], [ %.040, %271 ], [ %.040, %260 ], [ %.040, %250 ], [ %.040, %248 ], [ %.040, %237 ], [ %.040, %227 ], [ %.040, %222 ], [ %.040, %221 ], [ %.040, %219 ], [ %.040, %218 ], [ %.040, %202 ], [ %.040, %192 ], [ %.040, %188 ], [ %.040, %187 ], [ %.040, %167 ], [ %.040, %157 ], [ %.040, %156 ], [ %.040, %146 ], [ %.040, %136 ], [ %.040, %135 ], [ %.040, %124 ], [ %.040, %114 ], [ %.040, %112 ], [ %.040, %110 ], [ %.040, %97 ], [ %.040, %87 ], [ %.040, %86 ], [ %.040, %76 ], [ %.040, %66 ], [ %.040, %64 ], [ %.040, %62 ], [ %.040, %49 ], [ %.040, %39 ], [ %.040, %35 ], [ %.040, %33 ], [ %.040, %24 ], [ %.040, %22 ], [ %.040, %19 ]
  %.038.be = phi i32 [ %.038, %18 ], [ %.038, %331 ], [ %.038, %330 ], [ %.038, %329 ], [ %.038, %323 ], [ %.038, %312 ], [ %.038, %311 ], [ %.038, %309 ], [ %.038, %308 ], [ %.038, %307 ], [ %.038, %306 ], [ %.038, %304 ], [ %.038, %302 ], [ %301, %300 ], [ %.038, %296 ], [ %.038, %294 ], [ 1, %293 ], [ %.038, %292 ], [ %.038, %282 ], [ %.038, %272 ], [ %.038, %271 ], [ %.038, %260 ], [ %.038, %250 ], [ %.038, %248 ], [ %.038, %237 ], [ %.038, %227 ], [ %.038, %222 ], [ %.038, %221 ], [ %.038, %219 ], [ %.038, %218 ], [ %.038, %202 ], [ %.038, %192 ], [ %.038, %188 ], [ %.038, %187 ], [ %.038, %167 ], [ %.038, %157 ], [ %.038, %156 ], [ %.038, %146 ], [ %.038, %136 ], [ %.038, %135 ], [ %.038, %124 ], [ %.038, %114 ], [ %.038, %112 ], [ %.038, %110 ], [ %.038, %97 ], [ %.038, %87 ], [ %.038, %86 ], [ %.038, %76 ], [ %.038, %66 ], [ %.038, %64 ], [ %.038, %62 ], [ %.038, %49 ], [ %.038, %39 ], [ %.038, %35 ], [ %.038, %33 ], [ %.038, %24 ], [ %.038, %22 ], [ %.038, %19 ]
  %.036.be = phi i32 [ %.036, %18 ], [ 1078031264, %331 ], [ -1557593116, %330 ], [ 1045177567, %329 ], [ 1211578154, %323 ], [ 2126770544, %312 ], [ -1460184497, %311 ], [ 39160368, %309 ], [ 1876196167, %308 ], [ 123963381, %307 ], [ 1507321500, %306 ], [ 1505756971, %304 ], [ -997689532, %302 ], [ -2032577589, %300 ], [ -39214653, %296 ], [ %295, %294 ], [ -2032577589, %293 ], [ 1705415783, %292 ], [ %291, %282 ], [ %281, %272 ], [ 1705415783, %271 ], [ %270, %260 ], [ %259, %250 ], [ %249, %248 ], [ %247, %237 ], [ %236, %227 ], [ %226, %222 ], [ 1505756971, %221 ], [ 1215332925, %219 ], [ 1967485282, %218 ], [ %217, %202 ], [ %201, %192 ], [ %191, %188 ], [ 1215332925, %187 ], [ %186, %167 ], [ %166, %157 ], [ 319828223, %156 ], [ %155, %146 ], [ %145, %136 ], [ -2002951950, %135 ], [ %134, %124 ], [ %123, %114 ], [ 1054873021, %112 ], [ %111, %110 ], [ %109, %97 ], [ %96, %87 ], [ -2002951950, %86 ], [ %85, %76 ], [ %75, %66 ], [ 319828223, %64 ], [ %63, %62 ], [ %61, %49 ], [ %48, %39 ], [ %38, %35 ], [ 319828223, %33 ], [ %32, %24 ], [ 319828223, %22 ], [ %21, %19 ]
  %.0.be = phi i32 [ %.0, %18 ], [ %.0, %331 ], [ %.0, %330 ], [ %.0, %329 ], [ %.0, %323 ], [ %.0, %312 ], [ %.0, %311 ], [ %.0, %309 ], [ %.0, %308 ], [ %.0, %307 ], [ %.0, %306 ], [ %.0, %304 ], [ %.0, %302 ], [ %.0, %300 ], [ %.0, %296 ], [ %.0, %294 ], [ %.0, %293 ], [ %.0..0..0.35, %292 ], [ %.0, %282 ], [ %.0, %272 ], [ %.0..0..0.34, %271 ], [ %.0, %260 ], [ %.0, %250 ], [ %.0, %248 ], [ %.0, %237 ], [ %.0, %227 ], [ %.0, %222 ], [ %.0, %221 ], [ %.0, %219 ], [ %.0, %218 ], [ %.0, %202 ], [ %.0, %192 ], [ %.0, %188 ], [ %.0, %187 ], [ %.0, %167 ], [ %.0, %157 ], [ %.0, %156 ], [ %.0, %146 ], [ %.0, %136 ], [ %.0, %135 ], [ %.0, %124 ], [ %.0, %114 ], [ %.0, %112 ], [ %.0, %110 ], [ %.0, %97 ], [ %.0, %87 ], [ %.0, %86 ], [ %.0, %76 ], [ %.0, %66 ], [ %.0, %64 ], [ %.0, %62 ], [ %.0, %49 ], [ %.0, %39 ], [ %.0, %35 ], [ %.0, %33 ], [ %.0, %24 ], [ %.0, %22 ], [ %.0, %19 ]
  br label %18

19:                                               ; preds = %18
  %.0..0..0. = load volatile i64, i64* %7, align 8
  %.0..0..0.30 = load volatile i64, i64* %6, align 8
  %20 = icmp sgt i64 %.0..0..0., %.0..0..0.30
  %21 = select i1 %20, i32 1493269328, i32 1794287438
  br label %.backedge

22:                                               ; preds = %18
  %23 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

24:                                               ; preds = %18
  %25 = load i64, i64* @b, align 8
  %26 = add i64 %25, -1
  %27 = load i64, i64* @a, align 8
  %28 = mul nsw i64 %26, %27
  %29 = load i64, i64* @n, align 8
  %30 = sub i64 %29, %27
  %31 = icmp slt i64 %28, %30
  %32 = select i1 %31, i32 -1829298018, i32 -442873955
  br label %.backedge

33:                                               ; preds = %18
  %34 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

35:                                               ; preds = %18
  %36 = load i64, i64* @b, align 8
  %37 = icmp eq i64 %36, 1
  %38 = select i1 %37, i32 -1608046709, i32 -1398960542
  br label %.backedge

39:                                               ; preds = %18
  %40 = load i32, i32* @x.4, align 4
  %41 = load i32, i32* @y.5, align 4
  %42 = add i32 %40, -1
  %43 = mul i32 %42, %40
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %46, %45
  %48 = select i1 %47, i32 1507321500, i32 -2065320859
  br label %.backedge

49:                                               ; preds = %18
  %50 = load i64, i64* @a, align 8
  %51 = load i64, i64* @n, align 8
  %52 = icmp ne i64 %50, %51
  store i1 %52, i1* %5, align 1
  %53 = load i32, i32* @x.4, align 4
  %54 = load i32, i32* @y.5, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -534926746, i32 -2065320859
  br label %.backedge

62:                                               ; preds = %18
  %.0..0..0.31 = load volatile i1, i1* %5, align 1
  %63 = select i1 %.0..0..0.31, i32 307760093, i32 -1103483488
  br label %.backedge

64:                                               ; preds = %18
  %65 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

66:                                               ; preds = %18
  %67 = load i32, i32* @x.4, align 4
  %68 = load i32, i32* @y.5, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 123963381, i32 -165760316
  br label %.backedge

76:                                               ; preds = %18
  %77 = load i32, i32* @x.4, align 4
  %78 = load i32, i32* @y.5, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 -151785571, i32 -165760316
  br label %.backedge

86:                                               ; preds = %18
  br label %.backedge

87:                                               ; preds = %18
  %88 = load i32, i32* @x.4, align 4
  %89 = load i32, i32* @y.5, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 1876196167, i32 176942907
  br label %.backedge

97:                                               ; preds = %18
  %98 = sext i32 %.052 to i64
  %99 = load i64, i64* @n, align 8
  %100 = icmp sge i64 %99, %98
  store i1 %100, i1* %4, align 1
  %101 = load i32, i32* @x.4, align 4
  %102 = load i32, i32* @y.5, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 1342530023, i32 176942907
  br label %.backedge

110:                                              ; preds = %18
  %.0..0..0.32 = load volatile i1, i1* %4, align 1
  %111 = select i1 %.0..0..0.32, i32 1400298579, i32 979623690
  br label %.backedge

112:                                              ; preds = %18
  %113 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %.052)
  br label %.backedge

114:                                              ; preds = %18
  %115 = load i32, i32* @x.4, align 4
  %116 = load i32, i32* @y.5, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 39160368, i32 586004754
  br label %.backedge

124:                                              ; preds = %18
  %125 = add i32 %.052, 1
  %126 = load i32, i32* @x.4, align 4
  %127 = load i32, i32* @y.5, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 -272619381, i32 586004754
  br label %.backedge

135:                                              ; preds = %18
  br label %.backedge

136:                                              ; preds = %18
  %137 = load i32, i32* @x.4, align 4
  %138 = load i32, i32* @y.5, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 -1460184497, i32 1871828160
  br label %.backedge

146:                                              ; preds = %18
  %147 = load i32, i32* @x.4, align 4
  %148 = load i32, i32* @y.5, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 -1086930374, i32 1871828160
  br label %.backedge

156:                                              ; preds = %18
  br label %.backedge

157:                                              ; preds = %18
  %158 = load i32, i32* @x.4, align 4
  %159 = load i32, i32* @y.5, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 2126770544, i32 244009930
  br label %.backedge

167:                                              ; preds = %18
  %168 = load i64, i64* @n, align 8
  %169 = load i64, i64* @a, align 8
  %170 = sub i64 %168, %169
  %171 = load i64, i64* @b, align 8
  %172 = add i64 %171, -1
  %173 = sdiv i64 %170, %172
  %174 = trunc i64 %173 to i32
  %175 = srem i64 %170, %172
  %176 = trunc i64 %175 to i32
  %177 = trunc i64 %170 to i32
  %178 = load i32, i32* @x.4, align 4
  %179 = load i32, i32* @y.5, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 -352848216, i32 244009930
  br label %.backedge

187:                                              ; preds = %18
  br label %.backedge

188:                                              ; preds = %18
  %189 = sext i32 %.044 to i64
  %190 = load i64, i64* @a, align 8
  %.not57 = icmp slt i64 %190, %189
  %191 = select i1 %.not57, i32 -1335805715, i32 1726062311
  br label %.backedge

192:                                              ; preds = %18
  %193 = load i32, i32* @x.4, align 4
  %194 = load i32, i32* @y.5, align 4
  %195 = add i32 %193, -1
  %196 = mul i32 %195, %193
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %199, %198
  %201 = select i1 %200, i32 1211578154, i32 -1496302493
  br label %.backedge

202:                                              ; preds = %18
  %203 = load i64, i64* @n, align 8
  %204 = load i64, i64* @a, align 8
  %205 = sext i32 %.044 to i64
  %206 = add i64 %203, %205
  %207 = sub i64 %206, %204
  %208 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %207)
  %209 = load i32, i32* @x.4, align 4
  %210 = load i32, i32* @y.5, align 4
  %211 = add i32 %209, -1
  %212 = mul i32 %211, %209
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %215, %214
  %217 = select i1 %216, i32 1294625927, i32 -1496302493
  br label %.backedge

218:                                              ; preds = %18
  br label %.backedge

219:                                              ; preds = %18
  %220 = add i32 %.044, 1
  br label %.backedge

221:                                              ; preds = %18
  br label %.backedge

222:                                              ; preds = %18
  %223 = sext i32 %.042 to i64
  %224 = load i64, i64* @b, align 8
  %225 = icmp sgt i64 %224, %223
  %226 = select i1 %225, i32 -280174355, i32 319828223
  br label %.backedge

227:                                              ; preds = %18
  %228 = load i32, i32* @x.4, align 4
  %229 = load i32, i32* @y.5, align 4
  %230 = add i32 %228, -1
  %231 = mul i32 %230, %228
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %234, %233
  %236 = select i1 %235, i32 1045177567, i32 -123920644
  br label %.backedge

237:                                              ; preds = %18
  %238 = icmp sle i32 %.042, %.048
  store i1 %238, i1* %3, align 1
  %239 = load i32, i32* @x.4, align 4
  %240 = load i32, i32* @y.5, align 4
  %241 = add i32 %239, -1
  %242 = mul i32 %241, %239
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %245, %244
  %247 = select i1 %246, i32 1659722809, i32 -123920644
  br label %.backedge

248:                                              ; preds = %18
  %.0..0..0.33 = load volatile i1, i1* %3, align 1
  %249 = select i1 %.0..0..0.33, i32 1134982379, i32 725095122
  br label %.backedge

250:                                              ; preds = %18
  %251 = load i32, i32* @x.4, align 4
  %252 = load i32, i32* @y.5, align 4
  %253 = add i32 %251, -1
  %254 = mul i32 %253, %251
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %257, %256
  %259 = select i1 %258, i32 -1557593116, i32 -1267074144
  br label %.backedge

260:                                              ; preds = %18
  %261 = add i32 %.050, 1
  store i32 %261, i32* %2, align 4
  %262 = load i32, i32* @x.4, align 4
  %263 = load i32, i32* @y.5, align 4
  %264 = add i32 %262, -1
  %265 = mul i32 %264, %262
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %268, %267
  %270 = select i1 %269, i32 -1884596201, i32 -1267074144
  br label %.backedge

271:                                              ; preds = %18
  %.0..0..0.34 = load volatile i32, i32* %2, align 4
  br label %.backedge

272:                                              ; preds = %18
  %273 = load i32, i32* @x.4, align 4
  %274 = load i32, i32* @y.5, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 1078031264, i32 1634021238
  br label %.backedge

282:                                              ; preds = %18
  store i32 %.050, i32* %1, align 4
  %283 = load i32, i32* @x.4, align 4
  %284 = load i32, i32* @y.5, align 4
  %285 = add i32 %283, -1
  %286 = mul i32 %285, %283
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %289, %288
  %291 = select i1 %290, i32 1563305030, i32 1634021238
  br label %.backedge

292:                                              ; preds = %18
  %.0..0..0.35 = load volatile i32, i32* %1, align 4
  br label %.backedge

293:                                              ; preds = %18
  br label %.backedge

294:                                              ; preds = %18
  %.not = icmp sgt i32 %.038, %.040
  %295 = select i1 %.not, i32 1029011321, i32 -2074162113
  br label %.backedge

296:                                              ; preds = %18
  %297 = sub i32 %.046, %.040
  %298 = add i32 %297, %.038
  %299 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %298)
  br label %.backedge

300:                                              ; preds = %18
  %301 = add i32 %.038, 1
  br label %.backedge

302:                                              ; preds = %18
  %303 = sub i32 %.046, %.040
  br label %.backedge

304:                                              ; preds = %18
  %.neg56 = add i32 %.042, 1
  br label %.backedge

305:                                              ; preds = %18
  ret i32 0

306:                                              ; preds = %18
  br label %.backedge

307:                                              ; preds = %18
  br label %.backedge

308:                                              ; preds = %18
  br label %.backedge

309:                                              ; preds = %18
  %310 = add i32 %.052, 1
  br label %.backedge

311:                                              ; preds = %18
  br label %.backedge

312:                                              ; preds = %18
  %313 = load i64, i64* @n, align 8
  %314 = load i64, i64* @a, align 8
  %315 = sub i64 %313, %314
  %316 = load i64, i64* @b, align 8
  %317 = add i64 %316, -1
  %318 = sdiv i64 %315, %317
  %319 = trunc i64 %318 to i32
  %320 = srem i64 %315, %317
  %321 = trunc i64 %320 to i32
  %322 = trunc i64 %315 to i32
  br label %.backedge

323:                                              ; preds = %18
  %324 = load i64, i64* @n, align 8
  %325 = load i64, i64* @a, align 8
  %326 = sext i32 %.044 to i64
  %327 = add i64 %324, %326
  %.neg = sub i64 %327, %325
  %328 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %.neg)
  br label %.backedge

329:                                              ; preds = %18
  br label %.backedge

330:                                              ; preds = %18
  br label %.backedge

331:                                              ; preds = %18
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s178730977.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
