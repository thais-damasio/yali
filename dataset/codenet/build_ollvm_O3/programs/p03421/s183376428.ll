; ModuleID = 'build_ollvm/programs/p03421/s183376428.ll'
source_filename = "Project_CodeNet_C++1400/p03421/s183376428.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_Z4readv = comdat any

$_Z3pr1i = comdat any

$_Z5writei = comdat any

@stack = local_unnamed_addr global [20 x i32] zeroinitializer, align 16
@n = local_unnamed_addr global i32 0, align 4
@A = local_unnamed_addr global i32 0, align 4
@B = local_unnamed_addr global i32 0, align 4
@a = local_unnamed_addr global [300005 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"-1\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = tail call i32 @_Z4readv()
  store i32 %5, i32* @n, align 4
  %6 = tail call i32 @_Z4readv()
  store i32 %6, i32* @A, align 4
  %7 = tail call i32 @_Z4readv()
  store i32 %7, i32* @B, align 4
  %8 = load i32, i32* @n, align 4
  %9 = load i32, i32* @A, align 4
  %10 = sdiv i32 %8, %9
  %11 = srem i32 %8, %9
  store i32 %11, i32* %4, align 4
  br label %12

12:                                               ; preds = %.backedge, %0
  %.070 = phi i32 [ %10, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.054 = phi i32 [ undef, %0 ], [ %.054.be, %.backedge ]
  %.052 = phi i32 [ undef, %0 ], [ %.052.be, %.backedge ]
  %.050 = phi i32 [ undef, %0 ], [ %.050.be, %.backedge ]
  %.048 = phi i32 [ undef, %0 ], [ %.048.be, %.backedge ]
  %.0 = phi i32 [ -1617944660, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1617944660, label %13
    i32 -1028122433, label %15
    i32 -131033662, label %17
    i32 -1653105741, label %23
    i32 -1167081355, label %25
    i32 -1430723160, label %29
    i32 520612443, label %33
    i32 -1992810596, label %43
    i32 468415172, label %58
    i32 1421033897, label %60
    i32 2108708834, label %62
    i32 11124172, label %72
    i32 -827868649, label %82
    i32 -2009003860, label %83
    i32 -1232899502, label %86
    i32 -1333340247, label %92
    i32 668144528, label %93
    i32 54429377, label %95
    i32 1094871235, label %98
    i32 510791344, label %107
    i32 -1777671995, label %111
    i32 1132702577, label %113
    i32 -1564135964, label %117
    i32 506268495, label %118
    i32 1896700183, label %119
    i32 1619166747, label %124
    i32 -1363674481, label %134
    i32 696307026, label %145
    i32 1094682215, label %147
    i32 643283834, label %151
    i32 529550943, label %153
    i32 -1679492399, label %163
    i32 289428810, label %174
    i32 -368814817, label %175
    i32 263809388, label %178
    i32 -1199992631, label %188
    i32 300765158, label %200
    i32 -1359730663, label %201
    i32 -823954944, label %203
    i32 -1475498132, label %205
    i32 650955799, label %206
    i32 -2095806461, label %208
    i32 1572099574, label %209
    i32 -2064983267, label %219
    i32 281833736, label %231
    i32 -1199674808, label %233
    i32 1864929742, label %237
    i32 -1537599767, label %239
    i32 922901018, label %249
    i32 -1248475762, label %259
    i32 1979152564, label %260
    i32 1576241081, label %261
    i32 249987742, label %262
    i32 1743349821, label %263
    i32 970268606, label %264
    i32 147743210, label %266
    i32 1939995322, label %269
    i32 2118211017, label %270
  ]

.backedge:                                        ; preds = %12, %270, %269, %266, %264, %263, %262, %261, %259, %249, %239, %237, %233, %231, %219, %209, %208, %206, %205, %203, %201, %200, %188, %178, %175, %174, %163, %153, %151, %147, %145, %134, %124, %119, %118, %117, %113, %111, %107, %98, %95, %93, %92, %86, %83, %82, %72, %62, %60, %58, %43, %33, %29, %25, %23, %17, %15, %13
  %.070.be = phi i32 [ %.070, %12 ], [ %.070, %270 ], [ %.070, %269 ], [ %.070, %266 ], [ %.070, %264 ], [ %.070, %263 ], [ %.070, %262 ], [ %.070, %261 ], [ %.070, %259 ], [ %.070, %249 ], [ %.070, %239 ], [ %.070, %237 ], [ %.070, %233 ], [ %.070, %231 ], [ %.070, %219 ], [ %.070, %209 ], [ %.070, %208 ], [ %.070, %206 ], [ %.070, %205 ], [ %.070, %203 ], [ %.070, %201 ], [ %.070, %200 ], [ %.070, %188 ], [ %.070, %178 ], [ %.070, %175 ], [ %.070, %174 ], [ %.070, %163 ], [ %.070, %153 ], [ %.070, %151 ], [ %.070, %147 ], [ %.070, %145 ], [ %.070, %134 ], [ %.070, %124 ], [ %.070, %119 ], [ %.070, %118 ], [ %.070, %117 ], [ %.070, %113 ], [ %.070, %111 ], [ %.070, %107 ], [ %.070, %98 ], [ %.070, %95 ], [ %.070, %93 ], [ %.070, %92 ], [ %.070, %86 ], [ %.070, %83 ], [ %.070, %82 ], [ %.070, %72 ], [ %.070, %62 ], [ %.070, %60 ], [ %.070, %58 ], [ %.070, %43 ], [ %.070, %33 ], [ %.070, %29 ], [ %.070, %25 ], [ %.070, %23 ], [ %.070, %17 ], [ %16, %15 ], [ %.070, %13 ]
  %.068.be = phi i32 [ %.068, %12 ], [ %.068, %270 ], [ %.068, %269 ], [ %.068, %266 ], [ %.068, %264 ], [ %.068, %263 ], [ %.068, %262 ], [ %.068, %261 ], [ %.068, %259 ], [ %.068, %249 ], [ %.068, %239 ], [ %.068, %237 ], [ %.068, %233 ], [ %.068, %231 ], [ %.068, %219 ], [ %.068, %209 ], [ %.068, %208 ], [ %.068, %206 ], [ %.068, %205 ], [ %.068, %203 ], [ %.068, %201 ], [ %.068, %200 ], [ %.068, %188 ], [ %.068, %178 ], [ %.068, %175 ], [ %.068, %174 ], [ %.068, %163 ], [ %.068, %153 ], [ %.068, %151 ], [ %.068, %147 ], [ %.068, %145 ], [ %.068, %134 ], [ %.068, %124 ], [ %.068, %119 ], [ %.068, %118 ], [ %.068, %117 ], [ %.068, %113 ], [ %.068, %111 ], [ %.068, %107 ], [ %.068, %98 ], [ %.068, %95 ], [ %.068, %93 ], [ %.068, %92 ], [ %.068, %86 ], [ %.068, %83 ], [ %.068, %82 ], [ %.068, %72 ], [ %.068, %62 ], [ %.068, %60 ], [ %.068, %58 ], [ %.068, %43 ], [ %.068, %33 ], [ %.068, %29 ], [ %.068, %25 ], [ %24, %23 ], [ %20, %17 ], [ %.068, %15 ], [ %.068, %13 ]
  %.066.be = phi i32 [ %.066, %12 ], [ %.066, %270 ], [ %.066, %269 ], [ %.066, %266 ], [ %.066, %264 ], [ %.066, %263 ], [ 1, %262 ], [ %.066, %261 ], [ %.066, %259 ], [ %.066, %249 ], [ %.066, %239 ], [ %.066, %237 ], [ %.066, %233 ], [ %.066, %231 ], [ %.066, %219 ], [ %.066, %209 ], [ %.066, %208 ], [ %.066, %206 ], [ %.066, %205 ], [ %.066, %203 ], [ %.066, %201 ], [ %.066, %200 ], [ %.066, %188 ], [ %.066, %178 ], [ %.066, %175 ], [ %.066, %174 ], [ %.066, %163 ], [ %.066, %153 ], [ %.066, %151 ], [ %.066, %147 ], [ %.066, %145 ], [ %.066, %134 ], [ %.066, %124 ], [ %.066, %119 ], [ %.066, %118 ], [ %.066, %117 ], [ %.066, %113 ], [ %.066, %111 ], [ %.066, %107 ], [ %.066, %98 ], [ %.066, %95 ], [ %.066, %93 ], [ %.neg83, %92 ], [ %.066, %86 ], [ %.066, %83 ], [ %.066, %82 ], [ 1, %72 ], [ %.066, %62 ], [ %.066, %60 ], [ %.066, %58 ], [ %.066, %43 ], [ %.066, %33 ], [ %.066, %29 ], [ %.066, %25 ], [ %.066, %23 ], [ %.066, %17 ], [ %.066, %15 ], [ %.066, %13 ]
  %.064.be = phi i32 [ %.064, %12 ], [ %.064, %270 ], [ %.064, %269 ], [ %.064, %266 ], [ %.064, %264 ], [ %.064, %263 ], [ %.064, %262 ], [ %.064, %261 ], [ %.064, %259 ], [ %.064, %249 ], [ %.064, %239 ], [ %.064, %237 ], [ %.064, %233 ], [ %.064, %231 ], [ %.064, %219 ], [ %.064, %209 ], [ %.064, %208 ], [ %207, %206 ], [ %.064, %205 ], [ %.064, %203 ], [ %.064, %201 ], [ %.064, %200 ], [ %.064, %188 ], [ %.064, %178 ], [ %.064, %175 ], [ %.064, %174 ], [ %.064, %163 ], [ %.064, %153 ], [ %.064, %151 ], [ %.064, %147 ], [ %.064, %145 ], [ %.064, %134 ], [ %.064, %124 ], [ %.064, %119 ], [ %.064, %118 ], [ %.064, %117 ], [ %.064, %113 ], [ %.064, %111 ], [ %.064, %107 ], [ %.064, %98 ], [ %.064, %95 ], [ %.neg82, %93 ], [ %.064, %92 ], [ %.064, %86 ], [ %.064, %83 ], [ %.064, %82 ], [ %.064, %72 ], [ %.064, %62 ], [ %.064, %60 ], [ %.064, %58 ], [ %.064, %43 ], [ %.064, %33 ], [ %.064, %29 ], [ %.064, %25 ], [ %.064, %23 ], [ %.064, %17 ], [ %.064, %15 ], [ %.064, %13 ]
  %.062.be = phi i32 [ %.062, %12 ], [ %.062, %270 ], [ %.062, %269 ], [ %.062, %266 ], [ %.062, %264 ], [ %.062, %263 ], [ %.062, %262 ], [ %.062, %261 ], [ %.062, %259 ], [ %.062, %249 ], [ %.062, %239 ], [ %.062, %237 ], [ %.062, %233 ], [ %.062, %231 ], [ %.062, %219 ], [ %.062, %209 ], [ %.062, %208 ], [ %.062, %206 ], [ %.062, %205 ], [ %204, %203 ], [ %.062, %201 ], [ %.062, %200 ], [ %.062, %188 ], [ %.062, %178 ], [ %.062, %175 ], [ %.062, %174 ], [ %.062, %163 ], [ %.062, %153 ], [ %.062, %151 ], [ %.062, %147 ], [ %.062, %145 ], [ %.062, %134 ], [ %.062, %124 ], [ %123, %119 ], [ %.062, %118 ], [ %.062, %117 ], [ %.062, %113 ], [ %.062, %111 ], [ %110, %107 ], [ %.062, %98 ], [ %.062, %95 ], [ 0, %93 ], [ %.062, %92 ], [ %.062, %86 ], [ %.062, %83 ], [ %.062, %82 ], [ %.062, %72 ], [ %.062, %62 ], [ %.062, %60 ], [ %.062, %58 ], [ %.062, %43 ], [ %.062, %33 ], [ %.062, %29 ], [ %.062, %25 ], [ %.062, %23 ], [ %.062, %17 ], [ %.062, %15 ], [ %.062, %13 ]
  %.060.be = phi i32 [ %.060, %12 ], [ %.060, %270 ], [ %.060, %269 ], [ %.060, %266 ], [ %.060, %264 ], [ %.060, %263 ], [ %.060, %262 ], [ %.060, %261 ], [ %.060, %259 ], [ %.060, %249 ], [ %.060, %239 ], [ %.060, %237 ], [ %.060, %233 ], [ %.060, %231 ], [ %.060, %219 ], [ %.060, %209 ], [ %.060, %208 ], [ %.060, %206 ], [ %.060, %205 ], [ %.060, %203 ], [ %.060, %201 ], [ %.060, %200 ], [ %.060, %188 ], [ %.060, %178 ], [ %.060, %175 ], [ %.060, %174 ], [ %.060, %163 ], [ %.060, %153 ], [ %.060, %151 ], [ %.060, %147 ], [ %.060, %145 ], [ %.060, %134 ], [ %.060, %124 ], [ %.060, %119 ], [ %.neg75, %118 ], [ %.060, %117 ], [ %.060, %113 ], [ %.060, %111 ], [ %.060, %107 ], [ %.060, %98 ], [ %.060, %95 ], [ 1, %93 ], [ %.060, %92 ], [ %.060, %86 ], [ %.060, %83 ], [ %.060, %82 ], [ %.060, %72 ], [ %.060, %62 ], [ %.060, %60 ], [ %.060, %58 ], [ %.060, %43 ], [ %.060, %33 ], [ %.060, %29 ], [ %.060, %25 ], [ %.060, %23 ], [ %.060, %17 ], [ %.060, %15 ], [ %.060, %13 ]
  %.058.be = phi i32 [ %.058, %12 ], [ %.058, %270 ], [ %.058, %269 ], [ %.058, %266 ], [ %.058, %264 ], [ %.058, %263 ], [ %.058, %262 ], [ %.058, %261 ], [ %.058, %259 ], [ %.058, %249 ], [ %.058, %239 ], [ %.058, %237 ], [ %.058, %233 ], [ %.058, %231 ], [ %.058, %219 ], [ %.058, %209 ], [ %.058, %208 ], [ %.058, %206 ], [ %.058, %205 ], [ %.058, %203 ], [ %.058, %201 ], [ %.058, %200 ], [ %.058, %188 ], [ %.058, %178 ], [ %.058, %175 ], [ %.058, %174 ], [ %.058, %163 ], [ %.058, %153 ], [ %.058, %151 ], [ %.058, %147 ], [ %.058, %145 ], [ %.058, %134 ], [ %.058, %124 ], [ %.058, %119 ], [ %.058, %118 ], [ %.neg76, %117 ], [ %.058, %113 ], [ %.058, %111 ], [ %.064, %107 ], [ %.058, %98 ], [ %.058, %95 ], [ %.058, %93 ], [ %.058, %92 ], [ %.058, %86 ], [ %.058, %83 ], [ %.058, %82 ], [ %.058, %72 ], [ %.058, %62 ], [ %.058, %60 ], [ %.058, %58 ], [ %.058, %43 ], [ %.058, %33 ], [ %.058, %29 ], [ %.058, %25 ], [ %.058, %23 ], [ %.058, %17 ], [ %.058, %15 ], [ %.058, %13 ]
  %.056.be = phi i32 [ %.056, %12 ], [ %.056, %270 ], [ %.056, %269 ], [ %.056, %266 ], [ %.056, %264 ], [ %.056, %263 ], [ %.056, %262 ], [ %.056, %261 ], [ %.056, %259 ], [ %.056, %249 ], [ %.056, %239 ], [ %.056, %237 ], [ %.056, %233 ], [ %.056, %231 ], [ %.056, %219 ], [ %.056, %209 ], [ %.056, %208 ], [ %.056, %206 ], [ %.056, %205 ], [ %.056, %203 ], [ %.056, %201 ], [ %.056, %200 ], [ %.056, %188 ], [ %.056, %178 ], [ %.056, %175 ], [ %.056, %174 ], [ %.056, %163 ], [ %.056, %153 ], [ %.056, %151 ], [ %.056, %147 ], [ %.056, %145 ], [ %.056, %134 ], [ %.056, %124 ], [ %.056, %119 ], [ %.056, %118 ], [ %.056, %117 ], [ %114, %113 ], [ %.056, %111 ], [ %110, %107 ], [ %.056, %98 ], [ %.056, %95 ], [ %.056, %93 ], [ %.056, %92 ], [ %.056, %86 ], [ %.056, %83 ], [ %.056, %82 ], [ %.056, %72 ], [ %.056, %62 ], [ %.056, %60 ], [ %.056, %58 ], [ %.056, %43 ], [ %.056, %33 ], [ %.056, %29 ], [ %.056, %25 ], [ %.056, %23 ], [ %.056, %17 ], [ %.056, %15 ], [ %.056, %13 ]
  %.054.be = phi i32 [ %.054, %12 ], [ %.054, %270 ], [ %.054, %269 ], [ %.054, %266 ], [ %.054, %264 ], [ %.054, %263 ], [ %.054, %262 ], [ %.054, %261 ], [ %.054, %259 ], [ %.054, %249 ], [ %.054, %239 ], [ %.054, %237 ], [ %.054, %233 ], [ %.054, %231 ], [ %.054, %219 ], [ %.054, %209 ], [ %.054, %208 ], [ %.054, %206 ], [ %.054, %205 ], [ %.054, %203 ], [ %.054, %201 ], [ %.054, %200 ], [ %.054, %188 ], [ %.054, %178 ], [ %.054, %175 ], [ %.054, %174 ], [ %.054, %163 ], [ %.054, %153 ], [ %152, %151 ], [ %.054, %147 ], [ %.054, %145 ], [ %.054, %134 ], [ %.054, %124 ], [ %.064, %119 ], [ %.054, %118 ], [ %.054, %117 ], [ %.054, %113 ], [ %.054, %111 ], [ %.054, %107 ], [ %.054, %98 ], [ %.054, %95 ], [ %.054, %93 ], [ %.054, %92 ], [ %.054, %86 ], [ %.054, %83 ], [ %.054, %82 ], [ %.054, %72 ], [ %.054, %62 ], [ %.054, %60 ], [ %.054, %58 ], [ %.054, %43 ], [ %.054, %33 ], [ %.054, %29 ], [ %.054, %25 ], [ %.054, %23 ], [ %.054, %17 ], [ %.054, %15 ], [ %.054, %13 ]
  %.052.be = phi i32 [ %.052, %12 ], [ %.052, %270 ], [ %.052, %269 ], [ %.052, %266 ], [ %.052, %264 ], [ %.052, %263 ], [ %.052, %262 ], [ %.052, %261 ], [ %.052, %259 ], [ %.052, %249 ], [ %.052, %239 ], [ %.052, %237 ], [ %.052, %233 ], [ %.052, %231 ], [ %.052, %219 ], [ %.052, %209 ], [ %.052, %208 ], [ %.052, %206 ], [ %.052, %205 ], [ %.052, %203 ], [ %.052, %201 ], [ %.052, %200 ], [ %.052, %188 ], [ %.052, %178 ], [ %.052, %175 ], [ %.052, %174 ], [ %.052, %163 ], [ %.052, %153 ], [ %.052, %151 ], [ %148, %147 ], [ %.052, %145 ], [ %.052, %134 ], [ %.052, %124 ], [ %123, %119 ], [ %.052, %118 ], [ %.052, %117 ], [ %.052, %113 ], [ %.052, %111 ], [ %.052, %107 ], [ %.052, %98 ], [ %.052, %95 ], [ %.052, %93 ], [ %.052, %92 ], [ %.052, %86 ], [ %.052, %83 ], [ %.052, %82 ], [ %.052, %72 ], [ %.052, %62 ], [ %.052, %60 ], [ %.052, %58 ], [ %.052, %43 ], [ %.052, %33 ], [ %.052, %29 ], [ %.052, %25 ], [ %.052, %23 ], [ %.052, %17 ], [ %.052, %15 ], [ %.052, %13 ]
  %.050.be = phi i32 [ %.050, %12 ], [ %.050, %270 ], [ %.050, %269 ], [ %.050, %266 ], [ %265, %264 ], [ %.050, %263 ], [ %.050, %262 ], [ %.050, %261 ], [ %.050, %259 ], [ %.050, %249 ], [ %.050, %239 ], [ %.050, %237 ], [ %.050, %233 ], [ %.050, %231 ], [ %.050, %219 ], [ %.050, %209 ], [ %.050, %208 ], [ %.050, %206 ], [ %.050, %205 ], [ %.050, %203 ], [ %202, %201 ], [ %.050, %200 ], [ %.050, %188 ], [ %.050, %178 ], [ %.050, %175 ], [ %.050, %174 ], [ %164, %163 ], [ %.050, %153 ], [ %.050, %151 ], [ %.050, %147 ], [ %.050, %145 ], [ %.050, %134 ], [ %.050, %124 ], [ %.050, %119 ], [ %.050, %118 ], [ %.050, %117 ], [ %.050, %113 ], [ %.050, %111 ], [ %.050, %107 ], [ %.050, %98 ], [ %.050, %95 ], [ %.050, %93 ], [ %.050, %92 ], [ %.050, %86 ], [ %.050, %83 ], [ %.050, %82 ], [ %.050, %72 ], [ %.050, %62 ], [ %.050, %60 ], [ %.050, %58 ], [ %.050, %43 ], [ %.050, %33 ], [ %.050, %29 ], [ %.050, %25 ], [ %.050, %23 ], [ %.050, %17 ], [ %.050, %15 ], [ %.050, %13 ]
  %.048.be = phi i32 [ %.048, %12 ], [ %.048, %270 ], [ %.048, %269 ], [ %.048, %266 ], [ %.048, %264 ], [ %.048, %263 ], [ %.048, %262 ], [ %.048, %261 ], [ %.048, %259 ], [ %.048, %249 ], [ %.048, %239 ], [ %238, %237 ], [ %.048, %233 ], [ %.048, %231 ], [ %.048, %219 ], [ %.048, %209 ], [ 1, %208 ], [ %.048, %206 ], [ %.048, %205 ], [ %.048, %203 ], [ %.048, %201 ], [ %.048, %200 ], [ %.048, %188 ], [ %.048, %178 ], [ %.048, %175 ], [ %.048, %174 ], [ %.048, %163 ], [ %.048, %153 ], [ %.048, %151 ], [ %.048, %147 ], [ %.048, %145 ], [ %.048, %134 ], [ %.048, %124 ], [ %.048, %119 ], [ %.048, %118 ], [ %.048, %117 ], [ %.048, %113 ], [ %.048, %111 ], [ %.048, %107 ], [ %.048, %98 ], [ %.048, %95 ], [ %.048, %93 ], [ %.048, %92 ], [ %.048, %86 ], [ %.048, %83 ], [ %.048, %82 ], [ %.048, %72 ], [ %.048, %62 ], [ %.048, %60 ], [ %.048, %58 ], [ %.048, %43 ], [ %.048, %33 ], [ %.048, %29 ], [ %.048, %25 ], [ %.048, %23 ], [ %.048, %17 ], [ %.048, %15 ], [ %.048, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ 922901018, %270 ], [ -2064983267, %269 ], [ -1199992631, %266 ], [ -1679492399, %264 ], [ -1363674481, %263 ], [ 11124172, %262 ], [ -1992810596, %261 ], [ 1979152564, %259 ], [ %258, %249 ], [ %248, %239 ], [ 1572099574, %237 ], [ 1864929742, %233 ], [ %232, %231 ], [ %230, %219 ], [ %218, %209 ], [ 1572099574, %208 ], [ 54429377, %206 ], [ 650955799, %205 ], [ -1475498132, %203 ], [ -368814817, %201 ], [ -1359730663, %200 ], [ %199, %188 ], [ %187, %178 ], [ %177, %175 ], [ -368814817, %174 ], [ %173, %163 ], [ %162, %153 ], [ 1619166747, %151 ], [ 643283834, %147 ], [ %146, %145 ], [ %144, %134 ], [ %133, %124 ], [ 1619166747, %119 ], [ -1475498132, %118 ], [ -1777671995, %117 ], [ -1564135964, %113 ], [ %112, %111 ], [ -1777671995, %107 ], [ %106, %98 ], [ %97, %95 ], [ 54429377, %93 ], [ -2009003860, %92 ], [ -1333340247, %86 ], [ %85, %83 ], [ -2009003860, %82 ], [ %81, %72 ], [ %71, %62 ], [ 1979152564, %60 ], [ %59, %58 ], [ %57, %43 ], [ %42, %33 ], [ %32, %29 ], [ %28, %25 ], [ -1167081355, %23 ], [ %22, %17 ], [ -131033662, %15 ], [ %14, %13 ]
  br label %12

13:                                               ; preds = %12
  %.0..0..0. = load volatile i32, i32* %4, align 4
  %.not87 = icmp eq i32 %.0..0..0., 0
  %14 = select i1 %.not87, i32 -131033662, i32 -1028122433
  br label %.backedge

15:                                               ; preds = %12
  %16 = add i32 %.070, 1
  br label %.backedge

17:                                               ; preds = %12
  %18 = load i32, i32* @n, align 4
  %19 = load i32, i32* @B, align 4
  %20 = sdiv i32 %18, %19
  %21 = srem i32 %18, %19
  %.not86 = icmp eq i32 %21, 0
  %22 = select i1 %.not86, i32 -1167081355, i32 -1653105741
  br label %.backedge

23:                                               ; preds = %12
  %24 = add i32 %.068, 1
  br label %.backedge

25:                                               ; preds = %12
  %26 = load i32, i32* @A, align 4
  %27 = icmp slt i32 %26, %.068
  %28 = select i1 %27, i32 1421033897, i32 -1430723160
  br label %.backedge

29:                                               ; preds = %12
  %30 = load i32, i32* @B, align 4
  %31 = icmp slt i32 %30, %.070
  %32 = select i1 %31, i32 1421033897, i32 520612443
  br label %.backedge

33:                                               ; preds = %12
  %34 = load i32, i32* @x, align 4
  %35 = load i32, i32* @y, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 -1992810596, i32 1576241081
  br label %.backedge

43:                                               ; preds = %12
  %44 = load i32, i32* @A, align 4
  %45 = load i32, i32* @B, align 4
  %46 = add i32 %45, %44
  %47 = load i32, i32* @n, align 4
  %.neg85 = add i32 %47, 1
  %48 = icmp sgt i32 %46, %.neg85
  store i1 %48, i1* %3, align 1
  %49 = load i32, i32* @x, align 4
  %50 = load i32, i32* @y, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 468415172, i32 1576241081
  br label %.backedge

58:                                               ; preds = %12
  %.0..0..0.45 = load volatile i1, i1* %3, align 1
  %59 = select i1 %.0..0..0.45, i32 1421033897, i32 2108708834
  br label %.backedge

60:                                               ; preds = %12
  %61 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

62:                                               ; preds = %12
  %63 = load i32, i32* @x, align 4
  %64 = load i32, i32* @y, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 11124172, i32 249987742
  br label %.backedge

72:                                               ; preds = %12
  %73 = load i32, i32* @x, align 4
  %74 = load i32, i32* @y, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -827868649, i32 249987742
  br label %.backedge

82:                                               ; preds = %12
  br label %.backedge

83:                                               ; preds = %12
  %84 = load i32, i32* @B, align 4
  %.not84 = icmp sgt i32 %.066, %84
  %85 = select i1 %.not84, i32 668144528, i32 -1232899502
  br label %.backedge

86:                                               ; preds = %12
  %87 = load i32, i32* @B, align 4
  %88 = sub i32 1, %.066
  %89 = add i32 %88, %87
  %90 = sext i32 %.066 to i64
  %91 = getelementptr inbounds [300005 x i32], [300005 x i32]* @a, i64 0, i64 %90
  store i32 %89, i32* %91, align 4
  br label %.backedge

92:                                               ; preds = %12
  %.neg83 = add i32 %.066, 1
  br label %.backedge

93:                                               ; preds = %12
  %94 = load i32, i32* @B, align 4
  %.neg82 = add i32 %94, 1
  br label %.backedge

95:                                               ; preds = %12
  %96 = load i32, i32* @n, align 4
  %.not81 = icmp sgt i32 %.064, %96
  %97 = select i1 %.not81, i32 -2095806461, i32 1094871235
  br label %.backedge

98:                                               ; preds = %12
  %99 = load i32, i32* @n, align 4
  %100 = load i32, i32* @B, align 4
  %101 = sub i32 2, %.064
  %.neg79.neg = add i32 %101, %.060
  %102 = add i32 %.neg79.neg, %99
  %103 = sub i32 %102, %100
  %104 = load i32, i32* @A, align 4
  %105 = icmp sgt i32 %103, %104
  %106 = select i1 %105, i32 510791344, i32 1896700183
  br label %.backedge

107:                                              ; preds = %12
  %108 = load i32, i32* @B, align 4
  %109 = add i32 %.064, -1
  %110 = add i32 %109, %108
  br label %.backedge

111:                                              ; preds = %12
  %.not77 = icmp sgt i32 %.058, %.062
  %112 = select i1 %.not77, i32 506268495, i32 1132702577
  br label %.backedge

113:                                              ; preds = %12
  %114 = add i32 %.056, -1
  %115 = sext i32 %.058 to i64
  %116 = getelementptr inbounds [300005 x i32], [300005 x i32]* @a, i64 0, i64 %115
  store i32 %.056, i32* %116, align 4
  br label %.backedge

117:                                              ; preds = %12
  %.neg76 = add i32 %.058, 1
  br label %.backedge

118:                                              ; preds = %12
  %.neg75 = add i32 %.060, 1
  br label %.backedge

119:                                              ; preds = %12
  %120 = load i32, i32* @n, align 4
  %121 = load i32, i32* @A, align 4
  %.neg = add i32 %.060, 1
  %122 = add i32 %.neg, %120
  %123 = sub i32 %122, %121
  br label %.backedge

124:                                              ; preds = %12
  %125 = load i32, i32* @x, align 4
  %126 = load i32, i32* @y, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 -1363674481, i32 1743349821
  br label %.backedge

134:                                              ; preds = %12
  %135 = icmp sle i32 %.054, %.062
  store i1 %135, i1* %2, align 1
  %136 = load i32, i32* @x, align 4
  %137 = load i32, i32* @y, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 696307026, i32 1743349821
  br label %.backedge

145:                                              ; preds = %12
  %.0..0..0.46 = load volatile i1, i1* %2, align 1
  %146 = select i1 %.0..0..0.46, i32 1094682215, i32 529550943
  br label %.backedge

147:                                              ; preds = %12
  %148 = add i32 %.052, -1
  %149 = sext i32 %.054 to i64
  %150 = getelementptr inbounds [300005 x i32], [300005 x i32]* @a, i64 0, i64 %149
  store i32 %.052, i32* %150, align 4
  br label %.backedge

151:                                              ; preds = %12
  %152 = add i32 %.054, 1
  br label %.backedge

153:                                              ; preds = %12
  %154 = load i32, i32* @x, align 4
  %155 = load i32, i32* @y, align 4
  %156 = add i32 %154, -1
  %157 = mul i32 %156, %154
  %158 = and i32 %157, 1
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %160, %159
  %162 = select i1 %161, i32 -1679492399, i32 970268606
  br label %.backedge

163:                                              ; preds = %12
  %164 = add i32 %.062, 1
  %165 = load i32, i32* @x, align 4
  %166 = load i32, i32* @y, align 4
  %167 = add i32 %165, -1
  %168 = mul i32 %167, %165
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %171, %170
  %173 = select i1 %172, i32 289428810, i32 970268606
  br label %.backedge

174:                                              ; preds = %12
  br label %.backedge

175:                                              ; preds = %12
  %176 = load i32, i32* @n, align 4
  %.not = icmp sgt i32 %.050, %176
  %177 = select i1 %.not, i32 -823954944, i32 263809388
  br label %.backedge

178:                                              ; preds = %12
  %179 = load i32, i32* @x, align 4
  %180 = load i32, i32* @y, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 -1199992631, i32 147743210
  br label %.backedge

188:                                              ; preds = %12
  %189 = sext i32 %.050 to i64
  %190 = getelementptr inbounds [300005 x i32], [300005 x i32]* @a, i64 0, i64 %189
  store i32 %.050, i32* %190, align 4
  %191 = load i32, i32* @x, align 4
  %192 = load i32, i32* @y, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 300765158, i32 147743210
  br label %.backedge

200:                                              ; preds = %12
  br label %.backedge

201:                                              ; preds = %12
  %202 = add i32 %.050, 1
  br label %.backedge

203:                                              ; preds = %12
  %204 = load i32, i32* @n, align 4
  br label %.backedge

205:                                              ; preds = %12
  br label %.backedge

206:                                              ; preds = %12
  %207 = add i32 %.062, 1
  br label %.backedge

208:                                              ; preds = %12
  br label %.backedge

209:                                              ; preds = %12
  %210 = load i32, i32* @x, align 4
  %211 = load i32, i32* @y, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 -2064983267, i32 1939995322
  br label %.backedge

219:                                              ; preds = %12
  %220 = load i32, i32* @n, align 4
  %221 = icmp sle i32 %.048, %220
  store i1 %221, i1* %1, align 1
  %222 = load i32, i32* @x, align 4
  %223 = load i32, i32* @y, align 4
  %224 = add i32 %222, -1
  %225 = mul i32 %224, %222
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %228, %227
  %230 = select i1 %229, i32 281833736, i32 1939995322
  br label %.backedge

231:                                              ; preds = %12
  %.0..0..0.47 = load volatile i1, i1* %1, align 1
  %232 = select i1 %.0..0..0.47, i32 -1199674808, i32 -1537599767
  br label %.backedge

233:                                              ; preds = %12
  %234 = sext i32 %.048 to i64
  %235 = getelementptr inbounds [300005 x i32], [300005 x i32]* @a, i64 0, i64 %234
  %236 = load i32, i32* %235, align 4
  tail call void @_Z3pr1i(i32 %236)
  br label %.backedge

237:                                              ; preds = %12
  %238 = add i32 %.048, 1
  br label %.backedge

239:                                              ; preds = %12
  %240 = load i32, i32* @x, align 4
  %241 = load i32, i32* @y, align 4
  %242 = add i32 %240, -1
  %243 = mul i32 %242, %240
  %244 = and i32 %243, 1
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %246, %245
  %248 = select i1 %247, i32 922901018, i32 2118211017
  br label %.backedge

249:                                              ; preds = %12
  %250 = load i32, i32* @x, align 4
  %251 = load i32, i32* @y, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 -1248475762, i32 2118211017
  br label %.backedge

259:                                              ; preds = %12
  br label %.backedge

260:                                              ; preds = %12
  ret i32 0

261:                                              ; preds = %12
  br label %.backedge

262:                                              ; preds = %12
  br label %.backedge

263:                                              ; preds = %12
  br label %.backedge

264:                                              ; preds = %12
  %265 = add i32 %.062, 1
  br label %.backedge

266:                                              ; preds = %12
  %267 = sext i32 %.050 to i64
  %268 = getelementptr inbounds [300005 x i32], [300005 x i32]* @a, i64 0, i64 %267
  store i32 %.050, i32* %268, align 4
  br label %.backedge

269:                                              ; preds = %12
  br label %.backedge

270:                                              ; preds = %12
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readv() local_unnamed_addr #1 comdat {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = load i32, i32* @x.1, align 4
  %9 = load i32, i32* @y.2, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %7, align 1
  %14 = icmp slt i32 %9, 10
  store i1 %14, i1* %6, align 1
  br label %15

15:                                               ; preds = %.backedge, %0
  %.024 = phi i32 [ -1447411746, %0 ], [ %.024.be, %.backedge ]
  %.022 = phi i1 [ undef, %0 ], [ %.022.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.024, label %.backedge [
    i32 -1447411746, label %16
    i32 1790647621, label %19
    i32 -1348383216, label %34
    i32 135623976, label %35
    i32 -1385379891, label %39
    i32 -1752362845, label %42
    i32 344892231, label %52
    i32 -2134356142, label %62
    i32 -1184408674, label %64
    i32 315961937, label %68
    i32 -448307363, label %69
    i32 121374613, label %72
    i32 -1784555215, label %73
    i32 197723857, label %77
    i32 835479700, label %80
    i32 -1455853354, label %90
    i32 -1117409156, label %100
    i32 -2041996312, label %102
    i32 1834455114, label %111
    i32 1388611978, label %115
    i32 1061513252, label %117
    i32 1284612227, label %118
  ]

.backedge:                                        ; preds = %15, %118, %117, %115, %102, %100, %90, %80, %77, %73, %72, %69, %68, %64, %62, %52, %42, %39, %35, %34, %19, %16
  %.024.be = phi i32 [ %.024, %15 ], [ -1455853354, %118 ], [ 344892231, %117 ], [ 1790647621, %115 ], [ -1784555215, %102 ], [ %101, %100 ], [ %99, %90 ], [ %89, %80 ], [ 835479700, %77 ], [ %76, %73 ], [ -1784555215, %72 ], [ 135623976, %69 ], [ -448307363, %68 ], [ %67, %64 ], [ %63, %62 ], [ %61, %52 ], [ %51, %42 ], [ -1752362845, %39 ], [ %38, %35 ], [ 135623976, %34 ], [ %33, %19 ], [ %18, %16 ]
  %.022.be = phi i1 [ %.022, %15 ], [ %.022, %118 ], [ %.022, %117 ], [ %.022, %115 ], [ %.022, %102 ], [ %.022, %100 ], [ %.022, %90 ], [ %.022, %80 ], [ %.022, %77 ], [ %.022, %73 ], [ %.022, %72 ], [ %.022, %69 ], [ %.022, %68 ], [ %.022, %64 ], [ %.022, %62 ], [ %.022, %52 ], [ %.022, %42 ], [ %41, %39 ], [ true, %35 ], [ %.022, %34 ], [ %.022, %19 ], [ %.022, %16 ]
  %.0.be = phi i1 [ %.0, %15 ], [ %.0, %118 ], [ %.0, %117 ], [ %.0, %115 ], [ %.0, %102 ], [ %.0, %100 ], [ %.0, %90 ], [ %.0, %80 ], [ %79, %77 ], [ false, %73 ], [ %.0, %72 ], [ %.0, %69 ], [ %.0, %68 ], [ %.0, %64 ], [ %.0, %62 ], [ %.0, %52 ], [ %.0, %42 ], [ %.0, %39 ], [ %.0, %35 ], [ %.0, %34 ], [ %.0, %19 ], [ %.0, %16 ]
  br label %15

16:                                               ; preds = %15
  %.0..0..0.2 = load volatile i1, i1* %7, align 1
  %.0..0..0.3 = load volatile i1, i1* %6, align 1
  %17 = or i1 %.0..0..0.2, %.0..0..0.3
  %18 = select i1 %17, i32 1790647621, i32 1388611978
  br label %.backedge

19:                                               ; preds = %15
  %20 = alloca i32, align 4
  store i32* %20, i32** %5, align 8
  %21 = alloca i32, align 4
  store i32* %21, i32** %4, align 8
  %22 = alloca i8, align 1
  store i8* %22, i8** %3, align 8
  %.0..0..0.4 = load volatile i32*, i32** %5, align 8
  store i32 1, i32* %.0..0..0.4, align 4
  %.0..0..0.7 = load volatile i32*, i32** %4, align 8
  store i32 0, i32* %.0..0..0.7, align 4
  %23 = call i32 @getchar()
  %24 = trunc i32 %23 to i8
  %.0..0..0.11 = load volatile i8*, i8** %3, align 8
  store i8 %24, i8* %.0..0..0.11, align 1
  %25 = load i32, i32* @x.1, align 4
  %26 = load i32, i32* @y.2, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 -1348383216, i32 1388611978
  br label %.backedge

34:                                               ; preds = %15
  br label %.backedge

35:                                               ; preds = %15
  %.0..0..0.12 = load volatile i8*, i8** %3, align 8
  %36 = load i8, i8* %.0..0..0.12, align 1
  %37 = icmp slt i8 %36, 48
  %38 = select i1 %37, i32 -1752362845, i32 -1385379891
  br label %.backedge

39:                                               ; preds = %15
  %.0..0..0.13 = load volatile i8*, i8** %3, align 8
  %40 = load i8, i8* %.0..0..0.13, align 1
  %41 = icmp sgt i8 %40, 57
  br label %.backedge

42:                                               ; preds = %15
  store i1 %.022, i1* %2, align 1
  %43 = load i32, i32* @x.1, align 4
  %44 = load i32, i32* @y.2, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 344892231, i32 1061513252
  br label %.backedge

52:                                               ; preds = %15
  %53 = load i32, i32* @x.1, align 4
  %54 = load i32, i32* @y.2, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -2134356142, i32 1061513252
  br label %.backedge

62:                                               ; preds = %15
  %.0..0..0.20 = load volatile i1, i1* %2, align 1
  %63 = select i1 %.0..0..0.20, i32 -1184408674, i32 121374613
  br label %.backedge

64:                                               ; preds = %15
  %.0..0..0.14 = load volatile i8*, i8** %3, align 8
  %65 = load i8, i8* %.0..0..0.14, align 1
  %66 = icmp eq i8 %65, 45
  %67 = select i1 %66, i32 315961937, i32 -448307363
  br label %.backedge

68:                                               ; preds = %15
  %.0..0..0.5 = load volatile i32*, i32** %5, align 8
  store i32 -1, i32* %.0..0..0.5, align 4
  br label %.backedge

69:                                               ; preds = %15
  %70 = call i32 @getchar()
  %71 = trunc i32 %70 to i8
  %.0..0..0.15 = load volatile i8*, i8** %3, align 8
  store i8 %71, i8* %.0..0..0.15, align 1
  br label %.backedge

72:                                               ; preds = %15
  br label %.backedge

73:                                               ; preds = %15
  %.0..0..0.16 = load volatile i8*, i8** %3, align 8
  %74 = load i8, i8* %.0..0..0.16, align 1
  %75 = icmp sgt i8 %74, 47
  %76 = select i1 %75, i32 197723857, i32 835479700
  br label %.backedge

77:                                               ; preds = %15
  %.0..0..0.17 = load volatile i8*, i8** %3, align 8
  %78 = load i8, i8* %.0..0..0.17, align 1
  %79 = icmp slt i8 %78, 58
  br label %.backedge

80:                                               ; preds = %15
  store i1 %.0, i1* %1, align 1
  %81 = load i32, i32* @x.1, align 4
  %82 = load i32, i32* @y.2, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 -1455853354, i32 1284612227
  br label %.backedge

90:                                               ; preds = %15
  %91 = load i32, i32* @x.1, align 4
  %92 = load i32, i32* @y.2, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -1117409156, i32 1284612227
  br label %.backedge

100:                                              ; preds = %15
  %.0..0..0.21 = load volatile i1, i1* %1, align 1
  %101 = select i1 %.0..0..0.21, i32 -2041996312, i32 1834455114
  br label %.backedge

102:                                              ; preds = %15
  %.0..0..0.8 = load volatile i32*, i32** %4, align 8
  %103 = load i32, i32* %.0..0..0.8, align 4
  %104 = mul nsw i32 %103, 10
  %.0..0..0.18 = load volatile i8*, i8** %3, align 8
  %105 = load i8, i8* %.0..0..0.18, align 1
  %106 = sext i8 %105 to i32
  %107 = add i32 %104, -48
  %108 = add i32 %107, %106
  %.0..0..0.9 = load volatile i32*, i32** %4, align 8
  store i32 %108, i32* %.0..0..0.9, align 4
  %109 = call i32 @getchar()
  %110 = trunc i32 %109 to i8
  %.0..0..0.19 = load volatile i8*, i8** %3, align 8
  store i8 %110, i8* %.0..0..0.19, align 1
  br label %.backedge

111:                                              ; preds = %15
  %.0..0..0.10 = load volatile i32*, i32** %4, align 8
  %112 = load i32, i32* %.0..0..0.10, align 4
  %.0..0..0.6 = load volatile i32*, i32** %5, align 8
  %113 = load i32, i32* %.0..0..0.6, align 4
  %114 = mul nsw i32 %113, %112
  ret i32 %114

115:                                              ; preds = %15
  %116 = call i32 @getchar()
  br label %.backedge

117:                                              ; preds = %15
  br label %.backedge

118:                                              ; preds = %15
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z3pr1i(i32 %0) local_unnamed_addr #1 comdat {
  tail call void @_Z5writei(i32 %0)
  %2 = tail call i32 @putchar(i32 32)
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z5writei(i32 %0) local_unnamed_addr #1 comdat {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  br label %4

4:                                                ; preds = %.backedge, %1
  %.014 = phi i32 [ %0, %1 ], [ %.014.be, %.backedge ]
  %.012 = phi i32 [ undef, %1 ], [ %.012.be, %.backedge ]
  %.0 = phi i32 [ 171323954, %1 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 171323954, label %5
    i32 967161819, label %8
    i32 -627807042, label %11
    i32 272989114, label %13
    i32 1867997837, label %23
    i32 1769821990, label %34
    i32 -262173668, label %35
    i32 1346453503, label %36
    i32 1793228874, label %38
    i32 1307007281, label %44
    i32 620557969, label %45
    i32 1071164969, label %55
    i32 -1825387189, label %66
    i32 -1734821018, label %68
    i32 2019519073, label %75
    i32 1408895483, label %76
    i32 1895601978, label %78
  ]

.backedge:                                        ; preds = %4, %78, %76, %68, %66, %55, %45, %44, %38, %36, %35, %34, %23, %13, %11, %8, %5
  %.014.be = phi i32 [ %.014, %4 ], [ %.014, %78 ], [ %.014, %76 ], [ %.014, %68 ], [ %.014, %66 ], [ %.014, %55 ], [ %.014, %45 ], [ %.014, %44 ], [ %43, %38 ], [ %.014, %36 ], [ %.014, %35 ], [ %.014, %34 ], [ %.014, %23 ], [ %.014, %13 ], [ %.014, %11 ], [ %10, %8 ], [ %.014, %5 ]
  %.012.be = phi i32 [ %.012, %4 ], [ %.012, %78 ], [ %.012, %76 ], [ %69, %68 ], [ %.012, %66 ], [ %.012, %55 ], [ %.012, %45 ], [ %.012, %44 ], [ %40, %38 ], [ %.012, %36 ], [ 0, %35 ], [ %.012, %34 ], [ %.012, %23 ], [ %.012, %13 ], [ %.012, %11 ], [ %.012, %8 ], [ %.012, %5 ]
  %.0.be = phi i32 [ %.0, %4 ], [ 1071164969, %78 ], [ 1867997837, %76 ], [ 620557969, %68 ], [ %67, %66 ], [ %65, %55 ], [ %54, %45 ], [ 620557969, %44 ], [ 1346453503, %38 ], [ %37, %36 ], [ 1346453503, %35 ], [ 2019519073, %34 ], [ %33, %23 ], [ %22, %13 ], [ %12, %11 ], [ -627807042, %8 ], [ %7, %5 ]
  br label %4

5:                                                ; preds = %4
  %.0..0..0. = load volatile i32, i32* %3, align 4
  %6 = icmp slt i32 %.0..0..0., 0
  %7 = select i1 %6, i32 967161819, i32 -627807042
  br label %.backedge

8:                                                ; preds = %4
  %9 = tail call i32 @putchar(i32 45)
  %10 = sub i32 0, %.014
  br label %.backedge

11:                                               ; preds = %4
  %.not16 = icmp eq i32 %.014, 0
  %12 = select i1 %.not16, i32 272989114, i32 -262173668
  br label %.backedge

13:                                               ; preds = %4
  %14 = load i32, i32* @x.5, align 4
  %15 = load i32, i32* @y.6, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 1867997837, i32 1408895483
  br label %.backedge

23:                                               ; preds = %4
  %24 = tail call i32 @putchar(i32 48)
  %25 = load i32, i32* @x.5, align 4
  %26 = load i32, i32* @y.6, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 1769821990, i32 1408895483
  br label %.backedge

34:                                               ; preds = %4
  br label %.backedge

35:                                               ; preds = %4
  br label %.backedge

36:                                               ; preds = %4
  %.not = icmp eq i32 %.014, 0
  %37 = select i1 %.not, i32 1307007281, i32 1793228874
  br label %.backedge

38:                                               ; preds = %4
  %39 = srem i32 %.014, 10
  %40 = add i32 %.012, 1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [20 x i32], [20 x i32]* @stack, i64 0, i64 %41
  store i32 %39, i32* %42, align 4
  %43 = sdiv i32 %.014, 10
  br label %.backedge

44:                                               ; preds = %4
  br label %.backedge

45:                                               ; preds = %4
  %46 = load i32, i32* @x.5, align 4
  %47 = load i32, i32* @y.6, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 1071164969, i32 1895601978
  br label %.backedge

55:                                               ; preds = %4
  %56 = icmp ne i32 %.012, 0
  store i1 %56, i1* %2, align 1
  %57 = load i32, i32* @x.5, align 4
  %58 = load i32, i32* @y.6, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 -1825387189, i32 1895601978
  br label %.backedge

66:                                               ; preds = %4
  %.0..0..0.11 = load volatile i1, i1* %2, align 1
  %67 = select i1 %.0..0..0.11, i32 -1734821018, i32 2019519073
  br label %.backedge

68:                                               ; preds = %4
  %69 = add i32 %.012, -1
  %70 = sext i32 %.012 to i64
  %71 = getelementptr inbounds [20 x i32], [20 x i32]* @stack, i64 0, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, 48
  %74 = tail call i32 @putchar(i32 %73)
  br label %.backedge

75:                                               ; preds = %4
  ret void

76:                                               ; preds = %4
  %77 = tail call i32 @putchar(i32 48)
  br label %.backedge

78:                                               ; preds = %4
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #2

attributes #0 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
