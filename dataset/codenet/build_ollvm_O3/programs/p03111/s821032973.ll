; ModuleID = 'build_ollvm/programs/p03111/s821032973.ll'
source_filename = "Project_CodeNet_C++1400/p03111/s821032973.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3absx = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@N = global i64 0, align 8
@A = global i64 0, align 8
@B = global i64 0, align 8
@C = global i64 0, align 8
@l = global [10 x i64] zeroinitializer, align 16
@bit = local_unnamed_addr global [10 x i64] zeroinitializer, align 16
@ans = global i64 3000000042000000147, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s821032973.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %9
  %11 = bitcast i8* %10 to %"class.std::basic_ios"*
  %12 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %11, %"class.std::basic_ostream"* null)
  %13 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %14 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) @N)
  %15 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %14, i64* nonnull dereferenceable(8) @A)
  %16 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %15, i64* nonnull dereferenceable(8) @B)
  %17 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull %16, i64* nonnull dereferenceable(8) @C)
  br label %18

18:                                               ; preds = %.backedge, %0
  %.0101 = phi i64 [ 0, %0 ], [ %.0101.be, %.backedge ]
  %.099 = phi i64 [ undef, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i64 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i64 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i64 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i64 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i64 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i64 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i64 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i64 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i64 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i64 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i64 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i64 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i64 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i64 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.0 = phi i32 [ 389202129, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 389202129, label %19
    i32 1512814437, label %23
    i32 762089234, label %26
    i32 -256261537, label %36
    i32 -1722367910, label %46
    i32 1015585965, label %47
    i32 -1144945934, label %48
    i32 181878712, label %51
    i32 -1656553246, label %52
    i32 -823512266, label %55
    i32 1740924920, label %56
    i32 2116916781, label %66
    i32 635859687, label %77
    i32 -1569723623, label %79
    i32 -1822813795, label %80
    i32 -857531585, label %90
    i32 -1791749145, label %101
    i32 -627919151, label %103
    i32 -1169425006, label %113
    i32 -1328574889, label %123
    i32 963593134, label %124
    i32 -634229765, label %127
    i32 -1837184748, label %128
    i32 1449111976, label %131
    i32 -1661796421, label %132
    i32 -1529686156, label %142
    i32 1223806583, label %153
    i32 -837775361, label %155
    i32 -1430996266, label %165
    i32 2046311487, label %175
    i32 -1439884496, label %176
    i32 -1692074421, label %179
    i32 1036424140, label %180
    i32 -40744215, label %184
    i32 -1990498400, label %189
    i32 2066196560, label %194
    i32 -2092520899, label %199
    i32 -1719374086, label %204
    i32 1542010420, label %209
    i32 -1240810264, label %213
    i32 -65790798, label %223
    i32 1951946134, label %233
    i32 -473181901, label %234
    i32 1865717352, label %244
    i32 -1440322963, label %255
    i32 1678929748, label %256
    i32 -858064835, label %266
    i32 -645825401, label %277
    i32 -1622395583, label %279
    i32 888403683, label %282
    i32 -1236068029, label %285
    i32 1711410171, label %286
    i32 -160889429, label %296
    i32 1491491984, label %324
    i32 478803211, label %325
    i32 -1356153629, label %327
    i32 1290949751, label %328
    i32 650208388, label %330
    i32 903184071, label %331
    i32 1454203869, label %333
    i32 1761333183, label %334
    i32 1107226908, label %344
    i32 -425078535, label %354
    i32 -146470667, label %355
    i32 1303377608, label %356
    i32 -158240904, label %366
    i32 -918283574, label %377
    i32 1279270377, label %378
    i32 933807616, label %388
    i32 -798717256, label %398
    i32 -371194817, label %399
    i32 536691263, label %409
    i32 -1695875733, label %419
    i32 -1077245838, label %420
    i32 -706038774, label %421
    i32 -574938622, label %431
    i32 -325135871, label %442
    i32 268739266, label %443
    i32 463674724, label %444
    i32 -1830407255, label %446
    i32 422598809, label %450
    i32 2069476242, label %452
    i32 1390445812, label %453
    i32 -887779938, label %454
    i32 -1664474168, label %455
    i32 -356486698, label %456
    i32 -83403341, label %457
    i32 -544862371, label %458
    i32 -1765993422, label %460
    i32 -173131714, label %461
    i32 1360759545, label %479
    i32 1263094608, label %481
    i32 -153205487, label %482
    i32 954650034, label %483
    i32 -1649062856, label %484
  ]

.backedge:                                        ; preds = %18, %484, %483, %482, %481, %479, %461, %460, %458, %457, %456, %455, %454, %453, %452, %450, %444, %443, %442, %431, %421, %420, %419, %409, %399, %398, %388, %378, %377, %366, %356, %355, %354, %344, %334, %333, %331, %330, %328, %327, %325, %324, %296, %286, %285, %282, %279, %277, %266, %256, %255, %244, %234, %233, %223, %213, %209, %204, %199, %194, %189, %184, %180, %179, %176, %175, %165, %155, %153, %142, %132, %131, %128, %127, %124, %123, %113, %103, %101, %90, %80, %79, %77, %66, %56, %55, %52, %51, %48, %47, %46, %36, %26, %23, %19
  %.0101.be = phi i64 [ %.0101, %18 ], [ %.0101, %484 ], [ %.0101, %483 ], [ %.0101, %482 ], [ %.0101, %481 ], [ %.0101, %479 ], [ %.0101, %461 ], [ %.0101, %460 ], [ %.0101, %458 ], [ %.0101, %457 ], [ %.0101, %456 ], [ %.0101, %455 ], [ %.0101, %454 ], [ %.0101, %453 ], [ %.0101, %452 ], [ %451, %450 ], [ %.0101, %444 ], [ %.0101, %443 ], [ %.0101, %442 ], [ %.0101, %431 ], [ %.0101, %421 ], [ %.0101, %420 ], [ %.0101, %419 ], [ %.0101, %409 ], [ %.0101, %399 ], [ %.0101, %398 ], [ %.0101, %388 ], [ %.0101, %378 ], [ %.0101, %377 ], [ %.0101, %366 ], [ %.0101, %356 ], [ %.0101, %355 ], [ %.0101, %354 ], [ %.0101, %344 ], [ %.0101, %334 ], [ %.0101, %333 ], [ %.0101, %331 ], [ %.0101, %330 ], [ %.0101, %328 ], [ %.0101, %327 ], [ %.0101, %325 ], [ %.0101, %324 ], [ %.0101, %296 ], [ %.0101, %286 ], [ %.0101, %285 ], [ %.0101, %282 ], [ %.0101, %279 ], [ %.0101, %277 ], [ %.0101, %266 ], [ %.0101, %256 ], [ %.0101, %255 ], [ %.0101, %244 ], [ %.0101, %234 ], [ %.0101, %233 ], [ %.0101, %223 ], [ %.0101, %213 ], [ %.0101, %209 ], [ %.0101, %204 ], [ %.0101, %199 ], [ %.0101, %194 ], [ %.0101, %189 ], [ %.0101, %184 ], [ %.0101, %180 ], [ %.0101, %179 ], [ %.0101, %176 ], [ %.0101, %175 ], [ %.0101, %165 ], [ %.0101, %155 ], [ %.0101, %153 ], [ %.0101, %142 ], [ %.0101, %132 ], [ %.0101, %131 ], [ %.0101, %128 ], [ %.0101, %127 ], [ %.0101, %124 ], [ %.0101, %123 ], [ %.0101, %113 ], [ %.0101, %103 ], [ %.0101, %101 ], [ %.0101, %90 ], [ %.0101, %80 ], [ %.0101, %79 ], [ %.0101, %77 ], [ %.0101, %66 ], [ %.0101, %56 ], [ %.0101, %55 ], [ %.0101, %52 ], [ %.0101, %51 ], [ %.0101, %48 ], [ %.0101, %47 ], [ %.0101, %46 ], [ %.neg117, %36 ], [ %.0101, %26 ], [ %.0101, %23 ], [ %.0101, %19 ]
  %.099.be = phi i64 [ %.099, %18 ], [ %.099, %484 ], [ %.099, %483 ], [ %.099, %482 ], [ %.099, %481 ], [ %.099, %479 ], [ %.099, %461 ], [ %.099, %460 ], [ %.099, %458 ], [ %.099, %457 ], [ %.099, %456 ], [ %.099, %455 ], [ %.099, %454 ], [ %.099, %453 ], [ %.099, %452 ], [ %.099, %450 ], [ %445, %444 ], [ %.099, %443 ], [ %.099, %442 ], [ %.099, %431 ], [ %.099, %421 ], [ %.099, %420 ], [ %.099, %419 ], [ %.099, %409 ], [ %.099, %399 ], [ %.099, %398 ], [ %.099, %388 ], [ %.099, %378 ], [ %.099, %377 ], [ %.099, %366 ], [ %.099, %356 ], [ %.099, %355 ], [ %.099, %354 ], [ %.099, %344 ], [ %.099, %334 ], [ %.099, %333 ], [ %.099, %331 ], [ %.099, %330 ], [ %.099, %328 ], [ %.099, %327 ], [ %.099, %325 ], [ %.099, %324 ], [ %.099, %296 ], [ %.099, %286 ], [ %.099, %285 ], [ %.099, %282 ], [ %.099, %279 ], [ %.099, %277 ], [ %.099, %266 ], [ %.099, %256 ], [ %.099, %255 ], [ %.099, %244 ], [ %.099, %234 ], [ %.099, %233 ], [ %.099, %223 ], [ %.099, %213 ], [ %.099, %209 ], [ %.099, %204 ], [ %.099, %199 ], [ %.099, %194 ], [ %.099, %189 ], [ %.099, %184 ], [ %.099, %180 ], [ %.099, %179 ], [ %.099, %176 ], [ %.099, %175 ], [ %.099, %165 ], [ %.099, %155 ], [ %.099, %153 ], [ %.099, %142 ], [ %.099, %132 ], [ %.099, %131 ], [ %.099, %128 ], [ %.099, %127 ], [ %.099, %124 ], [ %.099, %123 ], [ %.099, %113 ], [ %.099, %103 ], [ %.099, %101 ], [ %.099, %90 ], [ %.099, %80 ], [ %.099, %79 ], [ %.099, %77 ], [ %.099, %66 ], [ %.099, %56 ], [ %.099, %55 ], [ %.099, %52 ], [ %.099, %51 ], [ %.099, %48 ], [ 0, %47 ], [ %.099, %46 ], [ %.099, %36 ], [ %.099, %26 ], [ %.099, %23 ], [ %.099, %19 ]
  %.097.be = phi i64 [ %.097, %18 ], [ %485, %484 ], [ %.097, %483 ], [ %.097, %482 ], [ %.097, %481 ], [ %.097, %479 ], [ %.097, %461 ], [ %.097, %460 ], [ %.097, %458 ], [ %.097, %457 ], [ %.097, %456 ], [ %.097, %455 ], [ %.097, %454 ], [ %.097, %453 ], [ %.097, %452 ], [ %.097, %450 ], [ %.097, %444 ], [ %.097, %443 ], [ %.097, %442 ], [ %432, %431 ], [ %.097, %421 ], [ %.097, %420 ], [ %.097, %419 ], [ %.097, %409 ], [ %.097, %399 ], [ %.097, %398 ], [ %.097, %388 ], [ %.097, %378 ], [ %.097, %377 ], [ %.097, %366 ], [ %.097, %356 ], [ %.097, %355 ], [ %.097, %354 ], [ %.097, %344 ], [ %.097, %334 ], [ %.097, %333 ], [ %.097, %331 ], [ %.097, %330 ], [ %.097, %328 ], [ %.097, %327 ], [ %.097, %325 ], [ %.097, %324 ], [ %.097, %296 ], [ %.097, %286 ], [ %.097, %285 ], [ %.097, %282 ], [ %.097, %279 ], [ %.097, %277 ], [ %.097, %266 ], [ %.097, %256 ], [ %.097, %255 ], [ %.097, %244 ], [ %.097, %234 ], [ %.097, %233 ], [ %.097, %223 ], [ %.097, %213 ], [ %.097, %209 ], [ %.097, %204 ], [ %.097, %199 ], [ %.097, %194 ], [ %.097, %189 ], [ %.097, %184 ], [ %.097, %180 ], [ %.097, %179 ], [ %.097, %176 ], [ %.097, %175 ], [ %.097, %165 ], [ %.097, %155 ], [ %.097, %153 ], [ %.097, %142 ], [ %.097, %132 ], [ %.097, %131 ], [ %.097, %128 ], [ %.097, %127 ], [ %.097, %124 ], [ %.097, %123 ], [ %.097, %113 ], [ %.097, %103 ], [ %.097, %101 ], [ %.097, %90 ], [ %.097, %80 ], [ %.097, %79 ], [ %.097, %77 ], [ %.097, %66 ], [ %.097, %56 ], [ %.097, %55 ], [ %.097, %52 ], [ 0, %51 ], [ %.097, %48 ], [ %.097, %47 ], [ %.097, %46 ], [ %.097, %36 ], [ %.097, %26 ], [ %.097, %23 ], [ %.097, %19 ]
  %.095.be = phi i64 [ %.095, %18 ], [ %.095, %484 ], [ %.neg, %483 ], [ %.095, %482 ], [ %.095, %481 ], [ %.095, %479 ], [ %.095, %461 ], [ %.095, %460 ], [ %.095, %458 ], [ %.095, %457 ], [ %.095, %456 ], [ %.095, %455 ], [ %.095, %454 ], [ %.095, %453 ], [ %.095, %452 ], [ %.095, %450 ], [ %.095, %444 ], [ %.095, %443 ], [ %.095, %442 ], [ %.095, %431 ], [ %.095, %421 ], [ %.095, %420 ], [ %.095, %419 ], [ %.neg110, %409 ], [ %.095, %399 ], [ %.095, %398 ], [ %.095, %388 ], [ %.095, %378 ], [ %.095, %377 ], [ %.095, %366 ], [ %.095, %356 ], [ %.095, %355 ], [ %.095, %354 ], [ %.095, %344 ], [ %.095, %334 ], [ %.095, %333 ], [ %.095, %331 ], [ %.095, %330 ], [ %.095, %328 ], [ %.095, %327 ], [ %.095, %325 ], [ %.095, %324 ], [ %.095, %296 ], [ %.095, %286 ], [ %.095, %285 ], [ %.095, %282 ], [ %.095, %279 ], [ %.095, %277 ], [ %.095, %266 ], [ %.095, %256 ], [ %.095, %255 ], [ %.095, %244 ], [ %.095, %234 ], [ %.095, %233 ], [ %.095, %223 ], [ %.095, %213 ], [ %.095, %209 ], [ %.095, %204 ], [ %.095, %199 ], [ %.095, %194 ], [ %.095, %189 ], [ %.095, %184 ], [ %.095, %180 ], [ %.095, %179 ], [ %.095, %176 ], [ %.095, %175 ], [ %.095, %165 ], [ %.095, %155 ], [ %.095, %153 ], [ %.095, %142 ], [ %.095, %132 ], [ %.095, %131 ], [ %.095, %128 ], [ %.095, %127 ], [ %.095, %124 ], [ %.095, %123 ], [ %.095, %113 ], [ %.095, %103 ], [ %.095, %101 ], [ %.095, %90 ], [ %.095, %80 ], [ %.095, %79 ], [ %.095, %77 ], [ %.095, %66 ], [ %.095, %56 ], [ 0, %55 ], [ %.095, %52 ], [ %.095, %51 ], [ %.095, %48 ], [ %.095, %47 ], [ %.095, %46 ], [ %.095, %36 ], [ %.095, %26 ], [ %.095, %23 ], [ %.095, %19 ]
  %.093.be = phi i64 [ %.093, %18 ], [ %.093, %484 ], [ %.093, %483 ], [ %.093, %482 ], [ %.neg103, %481 ], [ %.093, %479 ], [ %.093, %461 ], [ %.093, %460 ], [ %.093, %458 ], [ %.093, %457 ], [ %.093, %456 ], [ %.093, %455 ], [ %.093, %454 ], [ %.093, %453 ], [ %.093, %452 ], [ %.093, %450 ], [ %.093, %444 ], [ %.093, %443 ], [ %.093, %442 ], [ %.093, %431 ], [ %.093, %421 ], [ %.093, %420 ], [ %.093, %419 ], [ %.093, %409 ], [ %.093, %399 ], [ %.093, %398 ], [ %.093, %388 ], [ %.093, %378 ], [ %.093, %377 ], [ %367, %366 ], [ %.093, %356 ], [ %.093, %355 ], [ %.093, %354 ], [ %.093, %344 ], [ %.093, %334 ], [ %.093, %333 ], [ %.093, %331 ], [ %.093, %330 ], [ %.093, %328 ], [ %.093, %327 ], [ %.093, %325 ], [ %.093, %324 ], [ %.093, %296 ], [ %.093, %286 ], [ %.093, %285 ], [ %.093, %282 ], [ %.093, %279 ], [ %.093, %277 ], [ %.093, %266 ], [ %.093, %256 ], [ %.093, %255 ], [ %.093, %244 ], [ %.093, %234 ], [ %.093, %233 ], [ %.093, %223 ], [ %.093, %213 ], [ %.093, %209 ], [ %.093, %204 ], [ %.093, %199 ], [ %.093, %194 ], [ %.093, %189 ], [ %.093, %184 ], [ %.093, %180 ], [ %.093, %179 ], [ %.093, %176 ], [ %.093, %175 ], [ %.093, %165 ], [ %.093, %155 ], [ %.093, %153 ], [ %.093, %142 ], [ %.093, %132 ], [ %.093, %131 ], [ %.093, %128 ], [ %.093, %127 ], [ %.093, %124 ], [ %.093, %123 ], [ %.093, %113 ], [ %.093, %103 ], [ %.093, %101 ], [ %.093, %90 ], [ %.093, %80 ], [ 0, %79 ], [ %.093, %77 ], [ %.093, %66 ], [ %.093, %56 ], [ %.093, %55 ], [ %.093, %52 ], [ %.093, %51 ], [ %.093, %48 ], [ %.093, %47 ], [ %.093, %46 ], [ %.093, %36 ], [ %.093, %26 ], [ %.093, %23 ], [ %.093, %19 ]
  %.091.be = phi i64 [ %.091, %18 ], [ %.091, %484 ], [ %.091, %483 ], [ %.091, %482 ], [ %.091, %481 ], [ %480, %479 ], [ %.091, %461 ], [ %.091, %460 ], [ %.091, %458 ], [ %.091, %457 ], [ %.091, %456 ], [ %.091, %455 ], [ 0, %454 ], [ %.091, %453 ], [ %.091, %452 ], [ %.091, %450 ], [ %.091, %444 ], [ %.091, %443 ], [ %.091, %442 ], [ %.091, %431 ], [ %.091, %421 ], [ %.091, %420 ], [ %.091, %419 ], [ %.091, %409 ], [ %.091, %399 ], [ %.091, %398 ], [ %.091, %388 ], [ %.091, %378 ], [ %.091, %377 ], [ %.091, %366 ], [ %.091, %356 ], [ %.091, %355 ], [ %.091, %354 ], [ %.neg111, %344 ], [ %.091, %334 ], [ %.091, %333 ], [ %.091, %331 ], [ %.091, %330 ], [ %.091, %328 ], [ %.091, %327 ], [ %.091, %325 ], [ %.091, %324 ], [ %.091, %296 ], [ %.091, %286 ], [ %.091, %285 ], [ %.091, %282 ], [ %.091, %279 ], [ %.091, %277 ], [ %.091, %266 ], [ %.091, %256 ], [ %.091, %255 ], [ %.091, %244 ], [ %.091, %234 ], [ %.091, %233 ], [ %.091, %223 ], [ %.091, %213 ], [ %.091, %209 ], [ %.091, %204 ], [ %.091, %199 ], [ %.091, %194 ], [ %.091, %189 ], [ %.091, %184 ], [ %.091, %180 ], [ %.091, %179 ], [ %.091, %176 ], [ %.091, %175 ], [ %.091, %165 ], [ %.091, %155 ], [ %.091, %153 ], [ %.091, %142 ], [ %.091, %132 ], [ %.091, %131 ], [ %.091, %128 ], [ %.091, %127 ], [ %.091, %124 ], [ %.091, %123 ], [ 0, %113 ], [ %.091, %103 ], [ %.091, %101 ], [ %.091, %90 ], [ %.091, %80 ], [ %.091, %79 ], [ %.091, %77 ], [ %.091, %66 ], [ %.091, %56 ], [ %.091, %55 ], [ %.091, %52 ], [ %.091, %51 ], [ %.091, %48 ], [ %.091, %47 ], [ %.091, %46 ], [ %.091, %36 ], [ %.091, %26 ], [ %.091, %23 ], [ %.091, %19 ]
  %.089.be = phi i64 [ %.089, %18 ], [ %.089, %484 ], [ %.089, %483 ], [ %.089, %482 ], [ %.089, %481 ], [ %.089, %479 ], [ %.089, %461 ], [ %.089, %460 ], [ %.089, %458 ], [ %.089, %457 ], [ %.089, %456 ], [ %.089, %455 ], [ %.089, %454 ], [ %.089, %453 ], [ %.089, %452 ], [ %.089, %450 ], [ %.089, %444 ], [ %.089, %443 ], [ %.089, %442 ], [ %.089, %431 ], [ %.089, %421 ], [ %.089, %420 ], [ %.089, %419 ], [ %.089, %409 ], [ %.089, %399 ], [ %.089, %398 ], [ %.089, %388 ], [ %.089, %378 ], [ %.089, %377 ], [ %.089, %366 ], [ %.089, %356 ], [ %.089, %355 ], [ %.089, %354 ], [ %.089, %344 ], [ %.089, %334 ], [ %.089, %333 ], [ %332, %331 ], [ %.089, %330 ], [ %.089, %328 ], [ %.089, %327 ], [ %.089, %325 ], [ %.089, %324 ], [ %.089, %296 ], [ %.089, %286 ], [ %.089, %285 ], [ %.089, %282 ], [ %.089, %279 ], [ %.089, %277 ], [ %.089, %266 ], [ %.089, %256 ], [ %.089, %255 ], [ %.089, %244 ], [ %.089, %234 ], [ %.089, %233 ], [ %.089, %223 ], [ %.089, %213 ], [ %.089, %209 ], [ %.089, %204 ], [ %.089, %199 ], [ %.089, %194 ], [ %.089, %189 ], [ %.089, %184 ], [ %.089, %180 ], [ %.089, %179 ], [ %.089, %176 ], [ %.089, %175 ], [ %.089, %165 ], [ %.089, %155 ], [ %.089, %153 ], [ %.089, %142 ], [ %.089, %132 ], [ %.089, %131 ], [ %.089, %128 ], [ 0, %127 ], [ %.089, %124 ], [ %.089, %123 ], [ %.089, %113 ], [ %.089, %103 ], [ %.089, %101 ], [ %.089, %90 ], [ %.089, %80 ], [ %.089, %79 ], [ %.089, %77 ], [ %.089, %66 ], [ %.089, %56 ], [ %.089, %55 ], [ %.089, %52 ], [ %.089, %51 ], [ %.089, %48 ], [ %.089, %47 ], [ %.089, %46 ], [ %.089, %36 ], [ %.089, %26 ], [ %.089, %23 ], [ %.089, %19 ]
  %.087.be = phi i64 [ %.087, %18 ], [ %.087, %484 ], [ %.087, %483 ], [ %.087, %482 ], [ %.087, %481 ], [ %.087, %479 ], [ %.087, %461 ], [ %.087, %460 ], [ %.087, %458 ], [ %.087, %457 ], [ %.087, %456 ], [ %.087, %455 ], [ %.087, %454 ], [ %.087, %453 ], [ %.087, %452 ], [ %.087, %450 ], [ %.087, %444 ], [ %.087, %443 ], [ %.087, %442 ], [ %.087, %431 ], [ %.087, %421 ], [ %.087, %420 ], [ %.087, %419 ], [ %.087, %409 ], [ %.087, %399 ], [ %.087, %398 ], [ %.087, %388 ], [ %.087, %378 ], [ %.087, %377 ], [ %.087, %366 ], [ %.087, %356 ], [ %.087, %355 ], [ %.087, %354 ], [ %.087, %344 ], [ %.087, %334 ], [ %.087, %333 ], [ %.087, %331 ], [ %.087, %330 ], [ %329, %328 ], [ %.087, %327 ], [ %.087, %325 ], [ %.087, %324 ], [ %.087, %296 ], [ %.087, %286 ], [ %.087, %285 ], [ %.087, %282 ], [ %.087, %279 ], [ %.087, %277 ], [ %.087, %266 ], [ %.087, %256 ], [ %.087, %255 ], [ %.087, %244 ], [ %.087, %234 ], [ %.087, %233 ], [ %.087, %223 ], [ %.087, %213 ], [ %.087, %209 ], [ %.087, %204 ], [ %.087, %199 ], [ %.087, %194 ], [ %.087, %189 ], [ %.087, %184 ], [ %.087, %180 ], [ %.087, %179 ], [ %.087, %176 ], [ %.087, %175 ], [ %.087, %165 ], [ %.087, %155 ], [ %.087, %153 ], [ %.087, %142 ], [ %.087, %132 ], [ 0, %131 ], [ %.087, %128 ], [ %.087, %127 ], [ %.087, %124 ], [ %.087, %123 ], [ %.087, %113 ], [ %.087, %103 ], [ %.087, %101 ], [ %.087, %90 ], [ %.087, %80 ], [ %.087, %79 ], [ %.087, %77 ], [ %.087, %66 ], [ %.087, %56 ], [ %.087, %55 ], [ %.087, %52 ], [ %.087, %51 ], [ %.087, %48 ], [ %.087, %47 ], [ %.087, %46 ], [ %.087, %36 ], [ %.087, %26 ], [ %.087, %23 ], [ %.087, %19 ]
  %.085.be = phi i64 [ %.085, %18 ], [ %.085, %484 ], [ %.085, %483 ], [ %.085, %482 ], [ %.085, %481 ], [ %.085, %479 ], [ %.085, %461 ], [ %.085, %460 ], [ %.085, %458 ], [ %.085, %457 ], [ 0, %456 ], [ %.085, %455 ], [ %.085, %454 ], [ %.085, %453 ], [ %.085, %452 ], [ %.085, %450 ], [ %.085, %444 ], [ %.085, %443 ], [ %.085, %442 ], [ %.085, %431 ], [ %.085, %421 ], [ %.085, %420 ], [ %.085, %419 ], [ %.085, %409 ], [ %.085, %399 ], [ %.085, %398 ], [ %.085, %388 ], [ %.085, %378 ], [ %.085, %377 ], [ %.085, %366 ], [ %.085, %356 ], [ %.085, %355 ], [ %.085, %354 ], [ %.085, %344 ], [ %.085, %334 ], [ %.085, %333 ], [ %.085, %331 ], [ %.085, %330 ], [ %.085, %328 ], [ %.085, %327 ], [ %326, %325 ], [ %.085, %324 ], [ %.085, %296 ], [ %.085, %286 ], [ %.085, %285 ], [ %.085, %282 ], [ %.085, %279 ], [ %.085, %277 ], [ %.085, %266 ], [ %.085, %256 ], [ %.085, %255 ], [ %.085, %244 ], [ %.085, %234 ], [ %.085, %233 ], [ %.085, %223 ], [ %.085, %213 ], [ %.085, %209 ], [ %.085, %204 ], [ %.085, %199 ], [ %.085, %194 ], [ %.085, %189 ], [ %.085, %184 ], [ %.085, %180 ], [ %.085, %179 ], [ %.085, %176 ], [ %.085, %175 ], [ 0, %165 ], [ %.085, %155 ], [ %.085, %153 ], [ %.085, %142 ], [ %.085, %132 ], [ %.085, %131 ], [ %.085, %128 ], [ %.085, %127 ], [ %.085, %124 ], [ %.085, %123 ], [ %.085, %113 ], [ %.085, %103 ], [ %.085, %101 ], [ %.085, %90 ], [ %.085, %80 ], [ %.085, %79 ], [ %.085, %77 ], [ %.085, %66 ], [ %.085, %56 ], [ %.085, %55 ], [ %.085, %52 ], [ %.085, %51 ], [ %.085, %48 ], [ %.085, %47 ], [ %.085, %46 ], [ %.085, %36 ], [ %.085, %26 ], [ %.085, %23 ], [ %.085, %19 ]
  %.083.be = phi i64 [ %.083, %18 ], [ %.083, %484 ], [ %.083, %483 ], [ %.083, %482 ], [ %.083, %481 ], [ %.083, %479 ], [ %.083, %461 ], [ %.083, %460 ], [ %.083, %458 ], [ %.083, %457 ], [ %.083, %456 ], [ %.083, %455 ], [ %.083, %454 ], [ %.083, %453 ], [ %.083, %452 ], [ %.083, %450 ], [ %.083, %444 ], [ %.083, %443 ], [ %.083, %442 ], [ %.083, %431 ], [ %.083, %421 ], [ %.083, %420 ], [ %.083, %419 ], [ %.083, %409 ], [ %.083, %399 ], [ %.083, %398 ], [ %.083, %388 ], [ %.083, %378 ], [ %.083, %377 ], [ %.083, %366 ], [ %.083, %356 ], [ %.083, %355 ], [ %.083, %354 ], [ %.083, %344 ], [ %.083, %334 ], [ %.083, %333 ], [ %.083, %331 ], [ %.083, %330 ], [ %.083, %328 ], [ %.083, %327 ], [ %.083, %325 ], [ %.083, %324 ], [ %.083, %296 ], [ %.083, %286 ], [ %.083, %285 ], [ %.083, %282 ], [ %.083, %279 ], [ %.083, %277 ], [ %.083, %266 ], [ %.083, %256 ], [ %.083, %255 ], [ %.083, %244 ], [ %.083, %234 ], [ %.083, %233 ], [ %.083, %223 ], [ %.083, %213 ], [ %.083, %209 ], [ %.083, %204 ], [ %.083, %199 ], [ %.083, %194 ], [ %192, %189 ], [ %.083, %184 ], [ %.083, %180 ], [ 0, %179 ], [ %.083, %176 ], [ %.083, %175 ], [ %.083, %165 ], [ %.083, %155 ], [ %.083, %153 ], [ %.083, %142 ], [ %.083, %132 ], [ %.083, %131 ], [ %.083, %128 ], [ %.083, %127 ], [ %.083, %124 ], [ %.083, %123 ], [ %.083, %113 ], [ %.083, %103 ], [ %.083, %101 ], [ %.083, %90 ], [ %.083, %80 ], [ %.083, %79 ], [ %.083, %77 ], [ %.083, %66 ], [ %.083, %56 ], [ %.083, %55 ], [ %.083, %52 ], [ %.083, %51 ], [ %.083, %48 ], [ %.083, %47 ], [ %.083, %46 ], [ %.083, %36 ], [ %.083, %26 ], [ %.083, %23 ], [ %.083, %19 ]
  %.081.be = phi i64 [ %.081, %18 ], [ %.081, %484 ], [ %.081, %483 ], [ %.081, %482 ], [ %.081, %481 ], [ %.081, %479 ], [ %.081, %461 ], [ %.081, %460 ], [ %.081, %458 ], [ %.081, %457 ], [ %.081, %456 ], [ %.081, %455 ], [ %.081, %454 ], [ %.081, %453 ], [ %.081, %452 ], [ %.081, %450 ], [ %.081, %444 ], [ %.081, %443 ], [ %.081, %442 ], [ %.081, %431 ], [ %.081, %421 ], [ %.081, %420 ], [ %.081, %419 ], [ %.081, %409 ], [ %.081, %399 ], [ %.081, %398 ], [ %.081, %388 ], [ %.081, %378 ], [ %.081, %377 ], [ %.081, %366 ], [ %.081, %356 ], [ %.081, %355 ], [ %.081, %354 ], [ %.081, %344 ], [ %.081, %334 ], [ %.081, %333 ], [ %.081, %331 ], [ %.081, %330 ], [ %.081, %328 ], [ %.081, %327 ], [ %.081, %325 ], [ %.081, %324 ], [ %.081, %296 ], [ %.081, %286 ], [ %.081, %285 ], [ %.081, %282 ], [ %.081, %279 ], [ %.081, %277 ], [ %.081, %266 ], [ %.081, %256 ], [ %.081, %255 ], [ %.081, %244 ], [ %.081, %234 ], [ %.081, %233 ], [ %.081, %223 ], [ %.081, %213 ], [ %.081, %209 ], [ %.081, %204 ], [ %.081, %199 ], [ %.081, %194 ], [ %193, %189 ], [ %.081, %184 ], [ %.081, %180 ], [ 0, %179 ], [ %.081, %176 ], [ %.081, %175 ], [ %.081, %165 ], [ %.081, %155 ], [ %.081, %153 ], [ %.081, %142 ], [ %.081, %132 ], [ %.081, %131 ], [ %.081, %128 ], [ %.081, %127 ], [ %.081, %124 ], [ %.081, %123 ], [ %.081, %113 ], [ %.081, %103 ], [ %.081, %101 ], [ %.081, %90 ], [ %.081, %80 ], [ %.081, %79 ], [ %.081, %77 ], [ %.081, %66 ], [ %.081, %56 ], [ %.081, %55 ], [ %.081, %52 ], [ %.081, %51 ], [ %.081, %48 ], [ %.081, %47 ], [ %.081, %46 ], [ %.081, %36 ], [ %.081, %26 ], [ %.081, %23 ], [ %.081, %19 ]
  %.079.be = phi i64 [ %.079, %18 ], [ %.079, %484 ], [ %.079, %483 ], [ %.079, %482 ], [ %.079, %481 ], [ %.079, %479 ], [ %.079, %461 ], [ %.079, %460 ], [ %.079, %458 ], [ %.079, %457 ], [ %.079, %456 ], [ %.079, %455 ], [ %.079, %454 ], [ %.079, %453 ], [ %.079, %452 ], [ %.079, %450 ], [ %.079, %444 ], [ %.079, %443 ], [ %.079, %442 ], [ %.079, %431 ], [ %.079, %421 ], [ %.079, %420 ], [ %.079, %419 ], [ %.079, %409 ], [ %.079, %399 ], [ %.079, %398 ], [ %.079, %388 ], [ %.079, %378 ], [ %.079, %377 ], [ %.079, %366 ], [ %.079, %356 ], [ %.079, %355 ], [ %.079, %354 ], [ %.079, %344 ], [ %.079, %334 ], [ %.079, %333 ], [ %.079, %331 ], [ %.079, %330 ], [ %.079, %328 ], [ %.079, %327 ], [ %.079, %325 ], [ %.079, %324 ], [ %.079, %296 ], [ %.079, %286 ], [ %.079, %285 ], [ %.079, %282 ], [ %.079, %279 ], [ %.079, %277 ], [ %.079, %266 ], [ %.079, %256 ], [ %.079, %255 ], [ %.079, %244 ], [ %.079, %234 ], [ %.079, %233 ], [ %.079, %223 ], [ %.079, %213 ], [ %.079, %209 ], [ %.079, %204 ], [ %202, %199 ], [ %.079, %194 ], [ %.079, %189 ], [ %.079, %184 ], [ %.079, %180 ], [ 0, %179 ], [ %.079, %176 ], [ %.079, %175 ], [ %.079, %165 ], [ %.079, %155 ], [ %.079, %153 ], [ %.079, %142 ], [ %.079, %132 ], [ %.079, %131 ], [ %.079, %128 ], [ %.079, %127 ], [ %.079, %124 ], [ %.079, %123 ], [ %.079, %113 ], [ %.079, %103 ], [ %.079, %101 ], [ %.079, %90 ], [ %.079, %80 ], [ %.079, %79 ], [ %.079, %77 ], [ %.079, %66 ], [ %.079, %56 ], [ %.079, %55 ], [ %.079, %52 ], [ %.079, %51 ], [ %.079, %48 ], [ %.079, %47 ], [ %.079, %46 ], [ %.079, %36 ], [ %.079, %26 ], [ %.079, %23 ], [ %.079, %19 ]
  %.077.be = phi i64 [ %.077, %18 ], [ %.077, %484 ], [ %.077, %483 ], [ %.077, %482 ], [ %.077, %481 ], [ %.077, %479 ], [ %.077, %461 ], [ %.077, %460 ], [ %.077, %458 ], [ %.077, %457 ], [ %.077, %456 ], [ %.077, %455 ], [ %.077, %454 ], [ %.077, %453 ], [ %.077, %452 ], [ %.077, %450 ], [ %.077, %444 ], [ %.077, %443 ], [ %.077, %442 ], [ %.077, %431 ], [ %.077, %421 ], [ %.077, %420 ], [ %.077, %419 ], [ %.077, %409 ], [ %.077, %399 ], [ %.077, %398 ], [ %.077, %388 ], [ %.077, %378 ], [ %.077, %377 ], [ %.077, %366 ], [ %.077, %356 ], [ %.077, %355 ], [ %.077, %354 ], [ %.077, %344 ], [ %.077, %334 ], [ %.077, %333 ], [ %.077, %331 ], [ %.077, %330 ], [ %.077, %328 ], [ %.077, %327 ], [ %.077, %325 ], [ %.077, %324 ], [ %.077, %296 ], [ %.077, %286 ], [ %.077, %285 ], [ %.077, %282 ], [ %.077, %279 ], [ %.077, %277 ], [ %.077, %266 ], [ %.077, %256 ], [ %.077, %255 ], [ %.077, %244 ], [ %.077, %234 ], [ %.077, %233 ], [ %.077, %223 ], [ %.077, %213 ], [ %.077, %209 ], [ %.077, %204 ], [ %203, %199 ], [ %.077, %194 ], [ %.077, %189 ], [ %.077, %184 ], [ %.077, %180 ], [ 0, %179 ], [ %.077, %176 ], [ %.077, %175 ], [ %.077, %165 ], [ %.077, %155 ], [ %.077, %153 ], [ %.077, %142 ], [ %.077, %132 ], [ %.077, %131 ], [ %.077, %128 ], [ %.077, %127 ], [ %.077, %124 ], [ %.077, %123 ], [ %.077, %113 ], [ %.077, %103 ], [ %.077, %101 ], [ %.077, %90 ], [ %.077, %80 ], [ %.077, %79 ], [ %.077, %77 ], [ %.077, %66 ], [ %.077, %56 ], [ %.077, %55 ], [ %.077, %52 ], [ %.077, %51 ], [ %.077, %48 ], [ %.077, %47 ], [ %.077, %46 ], [ %.077, %36 ], [ %.077, %26 ], [ %.077, %23 ], [ %.077, %19 ]
  %.075.be = phi i64 [ %.075, %18 ], [ %.075, %484 ], [ %.075, %483 ], [ %.075, %482 ], [ %.075, %481 ], [ %.075, %479 ], [ %.075, %461 ], [ %.075, %460 ], [ %.075, %458 ], [ %.075, %457 ], [ %.075, %456 ], [ %.075, %455 ], [ %.075, %454 ], [ %.075, %453 ], [ %.075, %452 ], [ %.075, %450 ], [ %.075, %444 ], [ %.075, %443 ], [ %.075, %442 ], [ %.075, %431 ], [ %.075, %421 ], [ %.075, %420 ], [ %.075, %419 ], [ %.075, %409 ], [ %.075, %399 ], [ %.075, %398 ], [ %.075, %388 ], [ %.075, %378 ], [ %.075, %377 ], [ %.075, %366 ], [ %.075, %356 ], [ %.075, %355 ], [ %.075, %354 ], [ %.075, %344 ], [ %.075, %334 ], [ %.075, %333 ], [ %.075, %331 ], [ %.075, %330 ], [ %.075, %328 ], [ %.075, %327 ], [ %.075, %325 ], [ %.075, %324 ], [ %.075, %296 ], [ %.075, %286 ], [ %.075, %285 ], [ %.075, %282 ], [ %.075, %279 ], [ %.075, %277 ], [ %.075, %266 ], [ %.075, %256 ], [ %.075, %255 ], [ %.075, %244 ], [ %.075, %234 ], [ %.075, %233 ], [ %.075, %223 ], [ %.075, %213 ], [ %212, %209 ], [ %.075, %204 ], [ %.075, %199 ], [ %.075, %194 ], [ %.075, %189 ], [ %.075, %184 ], [ %.075, %180 ], [ 0, %179 ], [ %.075, %176 ], [ %.075, %175 ], [ %.075, %165 ], [ %.075, %155 ], [ %.075, %153 ], [ %.075, %142 ], [ %.075, %132 ], [ %.075, %131 ], [ %.075, %128 ], [ %.075, %127 ], [ %.075, %124 ], [ %.075, %123 ], [ %.075, %113 ], [ %.075, %103 ], [ %.075, %101 ], [ %.075, %90 ], [ %.075, %80 ], [ %.075, %79 ], [ %.075, %77 ], [ %.075, %66 ], [ %.075, %56 ], [ %.075, %55 ], [ %.075, %52 ], [ %.075, %51 ], [ %.075, %48 ], [ %.075, %47 ], [ %.075, %46 ], [ %.075, %36 ], [ %.075, %26 ], [ %.075, %23 ], [ %.075, %19 ]
  %.073.be = phi i64 [ %.073, %18 ], [ %.073, %484 ], [ %.073, %483 ], [ %.073, %482 ], [ %.073, %481 ], [ %.073, %479 ], [ %.073, %461 ], [ %.073, %460 ], [ %.073, %458 ], [ %.073, %457 ], [ %.073, %456 ], [ %.073, %455 ], [ %.073, %454 ], [ %.073, %453 ], [ %.073, %452 ], [ %.073, %450 ], [ %.073, %444 ], [ %.073, %443 ], [ %.073, %442 ], [ %.073, %431 ], [ %.073, %421 ], [ %.073, %420 ], [ %.073, %419 ], [ %.073, %409 ], [ %.073, %399 ], [ %.073, %398 ], [ %.073, %388 ], [ %.073, %378 ], [ %.073, %377 ], [ %.073, %366 ], [ %.073, %356 ], [ %.073, %355 ], [ %.073, %354 ], [ %.073, %344 ], [ %.073, %334 ], [ %.073, %333 ], [ %.073, %331 ], [ %.073, %330 ], [ %.073, %328 ], [ %.073, %327 ], [ %.073, %325 ], [ %.073, %324 ], [ %.073, %296 ], [ %.073, %286 ], [ %.073, %285 ], [ %.073, %282 ], [ %.073, %279 ], [ %.073, %277 ], [ %.073, %266 ], [ %.073, %256 ], [ %.073, %255 ], [ %.073, %244 ], [ %.073, %234 ], [ %.073, %233 ], [ %.073, %223 ], [ %.073, %213 ], [ %.neg116, %209 ], [ %.073, %204 ], [ %.073, %199 ], [ %.073, %194 ], [ %.073, %189 ], [ %.073, %184 ], [ %.073, %180 ], [ 0, %179 ], [ %.073, %176 ], [ %.073, %175 ], [ %.073, %165 ], [ %.073, %155 ], [ %.073, %153 ], [ %.073, %142 ], [ %.073, %132 ], [ %.073, %131 ], [ %.073, %128 ], [ %.073, %127 ], [ %.073, %124 ], [ %.073, %123 ], [ %.073, %113 ], [ %.073, %103 ], [ %.073, %101 ], [ %.073, %90 ], [ %.073, %80 ], [ %.073, %79 ], [ %.073, %77 ], [ %.073, %66 ], [ %.073, %56 ], [ %.073, %55 ], [ %.073, %52 ], [ %.073, %51 ], [ %.073, %48 ], [ %.073, %47 ], [ %.073, %46 ], [ %.073, %36 ], [ %.073, %26 ], [ %.073, %23 ], [ %.073, %19 ]
  %.071.be = phi i64 [ %.071, %18 ], [ %.071, %484 ], [ %.071, %483 ], [ %.071, %482 ], [ %.071, %481 ], [ %.071, %479 ], [ %.071, %461 ], [ %.071, %460 ], [ %459, %458 ], [ %.071, %457 ], [ %.071, %456 ], [ %.071, %455 ], [ %.071, %454 ], [ %.071, %453 ], [ %.071, %452 ], [ %.071, %450 ], [ %.071, %444 ], [ %.071, %443 ], [ %.071, %442 ], [ %.071, %431 ], [ %.071, %421 ], [ %.071, %420 ], [ %.071, %419 ], [ %.071, %409 ], [ %.071, %399 ], [ %.071, %398 ], [ %.071, %388 ], [ %.071, %378 ], [ %.071, %377 ], [ %.071, %366 ], [ %.071, %356 ], [ %.071, %355 ], [ %.071, %354 ], [ %.071, %344 ], [ %.071, %334 ], [ %.071, %333 ], [ %.071, %331 ], [ %.071, %330 ], [ %.071, %328 ], [ %.071, %327 ], [ %.071, %325 ], [ %.071, %324 ], [ %.071, %296 ], [ %.071, %286 ], [ %.071, %285 ], [ %.071, %282 ], [ %.071, %279 ], [ %.071, %277 ], [ %.071, %266 ], [ %.071, %256 ], [ %.071, %255 ], [ %245, %244 ], [ %.071, %234 ], [ %.071, %233 ], [ %.071, %223 ], [ %.071, %213 ], [ %.071, %209 ], [ %.071, %204 ], [ %.071, %199 ], [ %.071, %194 ], [ %.071, %189 ], [ %.071, %184 ], [ %.071, %180 ], [ 0, %179 ], [ %.071, %176 ], [ %.071, %175 ], [ %.071, %165 ], [ %.071, %155 ], [ %.071, %153 ], [ %.071, %142 ], [ %.071, %132 ], [ %.071, %131 ], [ %.071, %128 ], [ %.071, %127 ], [ %.071, %124 ], [ %.071, %123 ], [ %.071, %113 ], [ %.071, %103 ], [ %.071, %101 ], [ %.071, %90 ], [ %.071, %80 ], [ %.071, %79 ], [ %.071, %77 ], [ %.071, %66 ], [ %.071, %56 ], [ %.071, %55 ], [ %.071, %52 ], [ %.071, %51 ], [ %.071, %48 ], [ %.071, %47 ], [ %.071, %46 ], [ %.071, %36 ], [ %.071, %26 ], [ %.071, %23 ], [ %.071, %19 ]
  %.0.be = phi i32 [ %.0, %18 ], [ -574938622, %484 ], [ 536691263, %483 ], [ 933807616, %482 ], [ -158240904, %481 ], [ 1107226908, %479 ], [ -160889429, %461 ], [ -858064835, %460 ], [ 1865717352, %458 ], [ -65790798, %457 ], [ -1430996266, %456 ], [ -1529686156, %455 ], [ -1169425006, %454 ], [ -857531585, %453 ], [ 2116916781, %452 ], [ -256261537, %450 ], [ -1144945934, %444 ], [ 463674724, %443 ], [ -1656553246, %442 ], [ %441, %431 ], [ %430, %421 ], [ -706038774, %420 ], [ 1740924920, %419 ], [ %418, %409 ], [ %408, %399 ], [ -371194817, %398 ], [ %397, %388 ], [ %387, %378 ], [ -1822813795, %377 ], [ %376, %366 ], [ %365, %356 ], [ 1303377608, %355 ], [ 963593134, %354 ], [ %353, %344 ], [ %343, %334 ], [ 1761333183, %333 ], [ -1837184748, %331 ], [ 903184071, %330 ], [ -1661796421, %328 ], [ 1290949751, %327 ], [ -1439884496, %325 ], [ 478803211, %324 ], [ %323, %296 ], [ %295, %286 ], [ 478803211, %285 ], [ %284, %282 ], [ %281, %279 ], [ %278, %277 ], [ %276, %266 ], [ %265, %256 ], [ 1036424140, %255 ], [ %254, %244 ], [ %243, %234 ], [ -473181901, %233 ], [ %232, %223 ], [ %222, %213 ], [ -1240810264, %209 ], [ %208, %204 ], [ -1719374086, %199 ], [ %198, %194 ], [ 2066196560, %189 ], [ %188, %184 ], [ %183, %180 ], [ 1036424140, %179 ], [ %178, %176 ], [ -1439884496, %175 ], [ %174, %165 ], [ %164, %155 ], [ %154, %153 ], [ %152, %142 ], [ %141, %132 ], [ -1661796421, %131 ], [ %130, %128 ], [ -1837184748, %127 ], [ %126, %124 ], [ 963593134, %123 ], [ %122, %113 ], [ %112, %103 ], [ %102, %101 ], [ %100, %90 ], [ %89, %80 ], [ -1822813795, %79 ], [ %78, %77 ], [ %76, %66 ], [ %65, %56 ], [ 1740924920, %55 ], [ %54, %52 ], [ -1656553246, %51 ], [ %50, %48 ], [ -1144945934, %47 ], [ 389202129, %46 ], [ %45, %36 ], [ %35, %26 ], [ 762089234, %23 ], [ %22, %19 ]
  br label %18

19:                                               ; preds = %18
  %20 = load i64, i64* @N, align 8
  %21 = icmp slt i64 %.0101, %20
  %22 = select i1 %21, i32 1512814437, i32 1015585965
  br label %.backedge

23:                                               ; preds = %18
  %24 = getelementptr inbounds [10 x i64], [10 x i64]* @l, i64 0, i64 %.0101
  %25 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %24)
  br label %.backedge

26:                                               ; preds = %18
  %27 = load i32, i32* @x.1, align 4
  %28 = load i32, i32* @y.2, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -256261537, i32 422598809
  br label %.backedge

36:                                               ; preds = %18
  %.neg117 = add i64 %.0101, 1
  %37 = load i32, i32* @x.1, align 4
  %38 = load i32, i32* @y.2, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 -1722367910, i32 422598809
  br label %.backedge

46:                                               ; preds = %18
  br label %.backedge

47:                                               ; preds = %18
  br label %.backedge

48:                                               ; preds = %18
  %49 = icmp slt i64 %.099, 4
  %50 = select i1 %49, i32 181878712, i32 -1830407255
  br label %.backedge

51:                                               ; preds = %18
  br label %.backedge

52:                                               ; preds = %18
  %53 = icmp slt i64 %.097, 4
  %54 = select i1 %53, i32 -823512266, i32 268739266
  br label %.backedge

55:                                               ; preds = %18
  br label %.backedge

56:                                               ; preds = %18
  %57 = load i32, i32* @x.1, align 4
  %58 = load i32, i32* @y.2, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 2116916781, i32 2069476242
  br label %.backedge

66:                                               ; preds = %18
  %67 = icmp slt i64 %.095, 4
  store i1 %67, i1* %4, align 1
  %68 = load i32, i32* @x.1, align 4
  %69 = load i32, i32* @y.2, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 635859687, i32 2069476242
  br label %.backedge

77:                                               ; preds = %18
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %78 = select i1 %.0..0..0., i32 -1569723623, i32 -1077245838
  br label %.backedge

79:                                               ; preds = %18
  br label %.backedge

80:                                               ; preds = %18
  %81 = load i32, i32* @x.1, align 4
  %82 = load i32, i32* @y.2, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 -857531585, i32 1390445812
  br label %.backedge

90:                                               ; preds = %18
  %91 = icmp slt i64 %.093, 4
  store i1 %91, i1* %3, align 1
  %92 = load i32, i32* @x.1, align 4
  %93 = load i32, i32* @y.2, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 -1791749145, i32 1390445812
  br label %.backedge

101:                                              ; preds = %18
  %.0..0..0.68 = load volatile i1, i1* %3, align 1
  %102 = select i1 %.0..0..0.68, i32 -627919151, i32 1279270377
  br label %.backedge

103:                                              ; preds = %18
  %104 = load i32, i32* @x.1, align 4
  %105 = load i32, i32* @y.2, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 -1169425006, i32 -887779938
  br label %.backedge

113:                                              ; preds = %18
  %114 = load i32, i32* @x.1, align 4
  %115 = load i32, i32* @y.2, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 -1328574889, i32 -887779938
  br label %.backedge

123:                                              ; preds = %18
  br label %.backedge

124:                                              ; preds = %18
  %125 = icmp slt i64 %.091, 4
  %126 = select i1 %125, i32 -634229765, i32 -146470667
  br label %.backedge

127:                                              ; preds = %18
  br label %.backedge

128:                                              ; preds = %18
  %129 = icmp slt i64 %.089, 4
  %130 = select i1 %129, i32 1449111976, i32 1454203869
  br label %.backedge

131:                                              ; preds = %18
  br label %.backedge

132:                                              ; preds = %18
  %133 = load i32, i32* @x.1, align 4
  %134 = load i32, i32* @y.2, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 -1529686156, i32 -1664474168
  br label %.backedge

142:                                              ; preds = %18
  %143 = icmp slt i64 %.087, 4
  store i1 %143, i1* %2, align 1
  %144 = load i32, i32* @x.1, align 4
  %145 = load i32, i32* @y.2, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 1223806583, i32 -1664474168
  br label %.backedge

153:                                              ; preds = %18
  %.0..0..0.69 = load volatile i1, i1* %2, align 1
  %154 = select i1 %.0..0..0.69, i32 -837775361, i32 650208388
  br label %.backedge

155:                                              ; preds = %18
  %156 = load i32, i32* @x.1, align 4
  %157 = load i32, i32* @y.2, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 -1430996266, i32 -356486698
  br label %.backedge

165:                                              ; preds = %18
  %166 = load i32, i32* @x.1, align 4
  %167 = load i32, i32* @y.2, align 4
  %168 = add i32 %166, -1
  %169 = mul i32 %168, %166
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 2046311487, i32 -356486698
  br label %.backedge

175:                                              ; preds = %18
  br label %.backedge

176:                                              ; preds = %18
  %177 = icmp slt i64 %.085, 4
  %178 = select i1 %177, i32 -1692074421, i32 -1356153629
  br label %.backedge

179:                                              ; preds = %18
  store i64 %.099, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @bit, i64 0, i64 0), align 16
  store i64 %.097, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @bit, i64 0, i64 1), align 8
  store i64 %.095, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @bit, i64 0, i64 2), align 16
  store i64 %.093, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @bit, i64 0, i64 3), align 8
  store i64 %.091, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @bit, i64 0, i64 4), align 16
  store i64 %.089, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @bit, i64 0, i64 5), align 8
  store i64 %.087, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @bit, i64 0, i64 6), align 16
  store i64 %.085, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @bit, i64 0, i64 7), align 8
  br label %.backedge

180:                                              ; preds = %18
  %181 = load i64, i64* @N, align 8
  %182 = icmp slt i64 %.071, %181
  %183 = select i1 %182, i32 -40744215, i32 1678929748
  br label %.backedge

184:                                              ; preds = %18
  %185 = getelementptr inbounds [10 x i64], [10 x i64]* @bit, i64 0, i64 %.071
  %186 = load i64, i64* %185, align 8
  %187 = icmp eq i64 %186, 0
  %188 = select i1 %187, i32 -1990498400, i32 2066196560
  br label %.backedge

189:                                              ; preds = %18
  %190 = getelementptr inbounds [10 x i64], [10 x i64]* @l, i64 0, i64 %.071
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, %.083
  %193 = add i64 %.081, 1
  br label %.backedge

194:                                              ; preds = %18
  %195 = getelementptr inbounds [10 x i64], [10 x i64]* @bit, i64 0, i64 %.071
  %196 = load i64, i64* %195, align 8
  %197 = icmp eq i64 %196, 1
  %198 = select i1 %197, i32 -2092520899, i32 -1719374086
  br label %.backedge

199:                                              ; preds = %18
  %200 = getelementptr inbounds [10 x i64], [10 x i64]* @l, i64 0, i64 %.071
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, %.079
  %203 = add i64 %.077, 1
  br label %.backedge

204:                                              ; preds = %18
  %205 = getelementptr inbounds [10 x i64], [10 x i64]* @bit, i64 0, i64 %.071
  %206 = load i64, i64* %205, align 8
  %207 = icmp eq i64 %206, 2
  %208 = select i1 %207, i32 1542010420, i32 -1240810264
  br label %.backedge

209:                                              ; preds = %18
  %210 = getelementptr inbounds [10 x i64], [10 x i64]* @l, i64 0, i64 %.071
  %211 = load i64, i64* %210, align 8
  %212 = add i64 %211, %.075
  %.neg116 = add i64 %.073, 1
  br label %.backedge

213:                                              ; preds = %18
  %214 = load i32, i32* @x.1, align 4
  %215 = load i32, i32* @y.2, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 -65790798, i32 -83403341
  br label %.backedge

223:                                              ; preds = %18
  %224 = load i32, i32* @x.1, align 4
  %225 = load i32, i32* @y.2, align 4
  %226 = add i32 %224, -1
  %227 = mul i32 %226, %224
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %230, %229
  %232 = select i1 %231, i32 1951946134, i32 -83403341
  br label %.backedge

233:                                              ; preds = %18
  br label %.backedge

234:                                              ; preds = %18
  %235 = load i32, i32* @x.1, align 4
  %236 = load i32, i32* @y.2, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 1865717352, i32 -544862371
  br label %.backedge

244:                                              ; preds = %18
  %245 = add i64 %.071, 1
  %246 = load i32, i32* @x.1, align 4
  %247 = load i32, i32* @y.2, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 -1440322963, i32 -544862371
  br label %.backedge

255:                                              ; preds = %18
  br label %.backedge

256:                                              ; preds = %18
  %257 = load i32, i32* @x.1, align 4
  %258 = load i32, i32* @y.2, align 4
  %259 = add i32 %257, -1
  %260 = mul i32 %259, %257
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %263, %262
  %265 = select i1 %264, i32 -858064835, i32 -1765993422
  br label %.backedge

266:                                              ; preds = %18
  %267 = icmp eq i64 %.081, 0
  store i1 %267, i1* %1, align 1
  %268 = load i32, i32* @x.1, align 4
  %269 = load i32, i32* @y.2, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 -645825401, i32 -1765993422
  br label %.backedge

277:                                              ; preds = %18
  %.0..0..0.70 = load volatile i1, i1* %1, align 1
  %278 = select i1 %.0..0..0.70, i32 -1236068029, i32 -1622395583
  br label %.backedge

279:                                              ; preds = %18
  %280 = icmp eq i64 %.077, 0
  %281 = select i1 %280, i32 -1236068029, i32 888403683
  br label %.backedge

282:                                              ; preds = %18
  %283 = icmp eq i64 %.073, 0
  %284 = select i1 %283, i32 -1236068029, i32 1711410171
  br label %.backedge

285:                                              ; preds = %18
  br label %.backedge

286:                                              ; preds = %18
  %287 = load i32, i32* @x.1, align 4
  %288 = load i32, i32* @y.2, align 4
  %289 = add i32 %287, -1
  %290 = mul i32 %289, %287
  %291 = and i32 %290, 1
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %293, %292
  %295 = select i1 %294, i32 -160889429, i32 -173131714
  br label %.backedge

296:                                              ; preds = %18
  store i64 0, i64* %5, align 8
  %297 = load i64, i64* @A, align 8
  %298 = sub i64 %297, %.083
  %299 = call i64 @_ZSt3absx(i64 %298)
  %300 = load i64, i64* %5, align 8
  %301 = add i64 %300, %299
  store i64 %301, i64* %5, align 8
  %302 = load i64, i64* @B, align 8
  %303 = sub i64 %302, %.079
  %304 = call i64 @_ZSt3absx(i64 %303)
  %305 = load i64, i64* %5, align 8
  %306 = add i64 %305, %304
  store i64 %306, i64* %5, align 8
  %307 = load i64, i64* @C, align 8
  %308 = sub i64 %307, %.075
  %309 = call i64 @_ZSt3absx(i64 %308)
  %310 = load i64, i64* %5, align 8
  %reass.add119 = add i64 %.077, %.081
  %reass.add120 = add i64 %reass.add119, %.073
  %reass.mul121 = mul i64 %reass.add120, 10
  %.neg114 = add i64 %reass.mul121, -30
  %311 = add i64 %.neg114, %309
  %312 = add i64 %311, %310
  store i64 %312, i64* %5, align 8
  %313 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) @ans, i64* nonnull dereferenceable(8) %5)
  %314 = load i64, i64* %313, align 8
  store i64 %314, i64* @ans, align 8
  %315 = load i32, i32* @x.1, align 4
  %316 = load i32, i32* @y.2, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 1491491984, i32 -173131714
  br label %.backedge

324:                                              ; preds = %18
  br label %.backedge

325:                                              ; preds = %18
  %326 = add i64 %.085, 1
  br label %.backedge

327:                                              ; preds = %18
  br label %.backedge

328:                                              ; preds = %18
  %329 = add i64 %.087, 1
  br label %.backedge

330:                                              ; preds = %18
  br label %.backedge

331:                                              ; preds = %18
  %332 = add i64 %.089, 1
  br label %.backedge

333:                                              ; preds = %18
  br label %.backedge

334:                                              ; preds = %18
  %335 = load i32, i32* @x.1, align 4
  %336 = load i32, i32* @y.2, align 4
  %337 = add i32 %335, -1
  %338 = mul i32 %337, %335
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %341, %340
  %343 = select i1 %342, i32 1107226908, i32 1360759545
  br label %.backedge

344:                                              ; preds = %18
  %.neg111 = add i64 %.091, 1
  %345 = load i32, i32* @x.1, align 4
  %346 = load i32, i32* @y.2, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 -425078535, i32 1360759545
  br label %.backedge

354:                                              ; preds = %18
  br label %.backedge

355:                                              ; preds = %18
  br label %.backedge

356:                                              ; preds = %18
  %357 = load i32, i32* @x.1, align 4
  %358 = load i32, i32* @y.2, align 4
  %359 = add i32 %357, -1
  %360 = mul i32 %359, %357
  %361 = and i32 %360, 1
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %363, %362
  %365 = select i1 %364, i32 -158240904, i32 1263094608
  br label %.backedge

366:                                              ; preds = %18
  %367 = add i64 %.093, 1
  %368 = load i32, i32* @x.1, align 4
  %369 = load i32, i32* @y.2, align 4
  %370 = add i32 %368, -1
  %371 = mul i32 %370, %368
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %374, %373
  %376 = select i1 %375, i32 -918283574, i32 1263094608
  br label %.backedge

377:                                              ; preds = %18
  br label %.backedge

378:                                              ; preds = %18
  %379 = load i32, i32* @x.1, align 4
  %380 = load i32, i32* @y.2, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 933807616, i32 -153205487
  br label %.backedge

388:                                              ; preds = %18
  %389 = load i32, i32* @x.1, align 4
  %390 = load i32, i32* @y.2, align 4
  %391 = add i32 %389, -1
  %392 = mul i32 %391, %389
  %393 = and i32 %392, 1
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %395, %394
  %397 = select i1 %396, i32 -798717256, i32 -153205487
  br label %.backedge

398:                                              ; preds = %18
  br label %.backedge

399:                                              ; preds = %18
  %400 = load i32, i32* @x.1, align 4
  %401 = load i32, i32* @y.2, align 4
  %402 = add i32 %400, -1
  %403 = mul i32 %402, %400
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %406, %405
  %408 = select i1 %407, i32 536691263, i32 954650034
  br label %.backedge

409:                                              ; preds = %18
  %.neg110 = add i64 %.095, 1
  %410 = load i32, i32* @x.1, align 4
  %411 = load i32, i32* @y.2, align 4
  %412 = add i32 %410, -1
  %413 = mul i32 %412, %410
  %414 = and i32 %413, 1
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %416, %415
  %418 = select i1 %417, i32 -1695875733, i32 954650034
  br label %.backedge

419:                                              ; preds = %18
  br label %.backedge

420:                                              ; preds = %18
  br label %.backedge

421:                                              ; preds = %18
  %422 = load i32, i32* @x.1, align 4
  %423 = load i32, i32* @y.2, align 4
  %424 = add i32 %422, -1
  %425 = mul i32 %424, %422
  %426 = and i32 %425, 1
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %428, %427
  %430 = select i1 %429, i32 -574938622, i32 -1649062856
  br label %.backedge

431:                                              ; preds = %18
  %432 = add i64 %.097, 1
  %433 = load i32, i32* @x.1, align 4
  %434 = load i32, i32* @y.2, align 4
  %435 = add i32 %433, -1
  %436 = mul i32 %435, %433
  %437 = and i32 %436, 1
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %439, %438
  %441 = select i1 %440, i32 -325135871, i32 -1649062856
  br label %.backedge

442:                                              ; preds = %18
  br label %.backedge

443:                                              ; preds = %18
  br label %.backedge

444:                                              ; preds = %18
  %445 = add i64 %.099, 1
  br label %.backedge

446:                                              ; preds = %18
  %447 = load i64, i64* @ans, align 8
  %448 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %447)
  %449 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %448, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0

450:                                              ; preds = %18
  %451 = add i64 %.0101, 1
  br label %.backedge

452:                                              ; preds = %18
  br label %.backedge

453:                                              ; preds = %18
  br label %.backedge

454:                                              ; preds = %18
  br label %.backedge

455:                                              ; preds = %18
  br label %.backedge

456:                                              ; preds = %18
  br label %.backedge

457:                                              ; preds = %18
  br label %.backedge

458:                                              ; preds = %18
  %459 = add i64 %.071, 1
  br label %.backedge

460:                                              ; preds = %18
  br label %.backedge

461:                                              ; preds = %18
  store i64 0, i64* %5, align 8
  %462 = load i64, i64* @A, align 8
  %463 = sub i64 %462, %.083
  %464 = call i64 @_ZSt3absx(i64 %463)
  %465 = load i64, i64* %5, align 8
  %466 = add i64 %465, %464
  store i64 %466, i64* %5, align 8
  %467 = load i64, i64* @B, align 8
  %468 = sub i64 %467, %.079
  %469 = call i64 @_ZSt3absx(i64 %468)
  %470 = load i64, i64* %5, align 8
  %471 = add i64 %470, %469
  store i64 %471, i64* %5, align 8
  %472 = load i64, i64* @C, align 8
  %473 = sub i64 %472, %.075
  %474 = call i64 @_ZSt3absx(i64 %473)
  %475 = load i64, i64* %5, align 8
  %reass.add = add i64 %.077, %.081
  %reass.add118 = add i64 %reass.add, %.073
  %reass.mul = mul i64 %reass.add118, 10
  %476 = add i64 %reass.mul, -30
  %.neg108 = add i64 %476, %474
  %.neg109 = add i64 %.neg108, %475
  store i64 %.neg109, i64* %5, align 8
  %477 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) @ans, i64* nonnull dereferenceable(8) %5)
  %478 = load i64, i64* %477, align 8
  store i64 %478, i64* @ans, align 8
  br label %.backedge

479:                                              ; preds = %18
  %480 = add i64 %.091, 1
  br label %.backedge

481:                                              ; preds = %18
  %.neg103 = add i64 %.093, 1
  br label %.backedge

482:                                              ; preds = %18
  br label %.backedge

483:                                              ; preds = %18
  %.neg = add i64 %.095, 1
  br label %.backedge

484:                                              ; preds = %18
  %485 = add i64 %.097, 1
  br label %.backedge
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt3absx(i64 %0) local_unnamed_addr #5 comdat {
  %2 = alloca i64, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.3, align 4
  %6 = load i32, i32* @y.4, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 637736780, i32 -1444002153
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %1
  %.0.ph = phi i32 [ -1321987073, %1 ], [ %.0.ph.be, %.outer.backedge ]
  br label %14

14:                                               ; preds = %.outer, %14
  switch i32 %.0.ph, label %14 [
    i32 -1321987073, label %15
    i32 1634377723, label %.outer.backedge
    i32 637736780, label %18
    i32 -1444002153, label %20
  ]

15:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %16 = or i1 %.0..0..0., %.0..0..0.1
  %17 = select i1 %16, i32 1634377723, i32 -1444002153
  br label %.outer.backedge

18:                                               ; preds = %14
  %19 = tail call i64 @llvm.abs.i64(i64 %0, i1 false)
  store i64 %19, i64* %2, align 8
  %.0..0..0.2 = load volatile i64, i64* %2, align 8
  ret i64 %.0..0..0.2

20:                                               ; preds = %14
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %14, %20, %15
  %.0.ph.be = phi i32 [ %17, %15 ], [ 1634377723, %20 ], [ %13, %14 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i64* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 53797451, %2 ], [ 1828507868, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 53797451, label %8
    i32 2122485591, label %.outer.backedge
    i32 -1179766193, label %11
    i32 1828507868, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %9 = icmp slt i64 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 2122485591, i32 -1179766193
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i64* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i64* %.07.ph
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s821032973.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.7, align 4
  %4 = load i32, i32* @y.8, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 146062454, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 146062454, label %11
    i32 406994692, label %14
    i32 162828448, label %24
    i32 1511703765, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 406994692, i32 1511703765
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.7, align 4
  %16 = load i32, i32* @y.8, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 162828448, i32 1511703765
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 406994692, %25 ]
  br label %.outer
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #6

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
