; ModuleID = 'build_ollvm/programs/p03111/s726007663.ll'
source_filename = "Project_CodeNet_C++1400/p03111/s726007663.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@l = global [10 x i32] zeroinitializer, align 16
@vis = local_unnamed_addr global [10 x i32] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s726007663.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1311674613, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1311674613, label %11
    i32 -2125883877, label %14
    i32 1225208046, label %25
    i32 1058429030, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -2125883877, i32 1058429030
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 1225208046, i32 1058429030
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -2125883877, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 1061109567, i32* %9, align 4
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %11, i32* nonnull dereferenceable(4) %6)
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %12, i32* nonnull dereferenceable(4) %7)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %13, i32* nonnull dereferenceable(4) %8)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.089 = phi i32 [ 0, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.0 = phi i32 [ 1030012577, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1030012577, label %16
    i32 -636676730, label %26
    i32 1989429206, label %38
    i32 1690806215, label %40
    i32 -1294122068, label %44
    i32 904643814, label %46
    i32 412707745, label %47
    i32 -296599663, label %52
    i32 -190761346, label %53
    i32 409471759, label %57
    i32 855241394, label %61
    i32 -1077263851, label %66
    i32 -348596672, label %67
    i32 826934931, label %77
    i32 1614154837, label %87
    i32 -1731342285, label %88
    i32 -510125636, label %95
    i32 -1448791142, label %105
    i32 -907117179, label %118
    i32 -1289353379, label %120
    i32 963805921, label %123
    i32 706073714, label %133
    i32 -771279196, label %144
    i32 596368476, label %146
    i32 1455270545, label %147
    i32 -1977470913, label %148
    i32 2126502491, label %152
    i32 -793028600, label %156
    i32 -205032450, label %162
    i32 8982413, label %172
    i32 2087679186, label %182
    i32 -1661848047, label %183
    i32 -2040242305, label %185
    i32 -594590569, label %192
    i32 -881036308, label %197
    i32 380368253, label %200
    i32 -276608209, label %202
    i32 -447808916, label %205
    i32 1329494990, label %206
    i32 515642696, label %207
    i32 442400875, label %217
    i32 1376114241, label %229
    i32 810179002, label %231
    i32 -1503744442, label %235
    i32 798552944, label %245
    i32 8893229, label %259
    i32 -97892391, label %260
    i32 -1860401249, label %261
    i32 -2015072931, label %263
    i32 -459226348, label %274
    i32 -1819390826, label %276
    i32 1422484403, label %277
    i32 -139818950, label %278
    i32 -519684007, label %279
    i32 2137741964, label %281
    i32 -1973075334, label %285
    i32 165186771, label %286
    i32 2019414818, label %288
    i32 -686447466, label %289
    i32 254532224, label %290
    i32 109383634, label %291
    i32 2006396503, label %292
  ]

.backedge:                                        ; preds = %15, %292, %291, %290, %289, %288, %286, %285, %279, %278, %277, %276, %274, %263, %261, %260, %259, %245, %235, %231, %229, %217, %207, %206, %205, %202, %200, %197, %192, %185, %183, %182, %172, %162, %156, %152, %148, %147, %146, %144, %133, %123, %120, %118, %105, %95, %88, %87, %77, %67, %66, %61, %57, %53, %52, %47, %46, %44, %40, %38, %26, %16
  %.089.be = phi i32 [ %.089, %15 ], [ %.089, %292 ], [ %.089, %291 ], [ %.089, %290 ], [ %.089, %289 ], [ %.089, %288 ], [ %.089, %286 ], [ %.089, %285 ], [ %.089, %279 ], [ %.089, %278 ], [ %.089, %277 ], [ %.089, %276 ], [ %.089, %274 ], [ %.089, %263 ], [ %.089, %261 ], [ %.089, %260 ], [ %.089, %259 ], [ %.089, %245 ], [ %.089, %235 ], [ %.089, %231 ], [ %.089, %229 ], [ %.089, %217 ], [ %.089, %207 ], [ %.089, %206 ], [ %.089, %205 ], [ %.089, %202 ], [ %.089, %200 ], [ %.089, %197 ], [ %.089, %192 ], [ %.089, %185 ], [ %.089, %183 ], [ %.089, %182 ], [ %.089, %172 ], [ %.089, %162 ], [ %.089, %156 ], [ %.089, %152 ], [ %.089, %148 ], [ %.089, %147 ], [ %.089, %146 ], [ %.089, %144 ], [ %.089, %133 ], [ %.089, %123 ], [ %.089, %120 ], [ %.089, %118 ], [ %.089, %105 ], [ %.089, %95 ], [ %.089, %88 ], [ %.089, %87 ], [ %.089, %77 ], [ %.089, %67 ], [ %.089, %66 ], [ %.089, %61 ], [ %.089, %57 ], [ %.089, %53 ], [ %.089, %52 ], [ %.089, %47 ], [ %.089, %46 ], [ %45, %44 ], [ %.089, %40 ], [ %.089, %38 ], [ %.089, %26 ], [ %.089, %16 ]
  %.087.be = phi i32 [ %.087, %15 ], [ %.087, %292 ], [ %.087, %291 ], [ %.087, %290 ], [ %.087, %289 ], [ %.087, %288 ], [ %.087, %286 ], [ %.087, %285 ], [ %280, %279 ], [ %.087, %278 ], [ %.087, %277 ], [ %.087, %276 ], [ %.087, %274 ], [ %.087, %263 ], [ %.087, %261 ], [ %.087, %260 ], [ %.087, %259 ], [ %.087, %245 ], [ %.087, %235 ], [ %.087, %231 ], [ %.087, %229 ], [ %.087, %217 ], [ %.087, %207 ], [ %.087, %206 ], [ %.087, %205 ], [ %.087, %202 ], [ %.087, %200 ], [ %.087, %197 ], [ %.087, %192 ], [ %.087, %185 ], [ %.087, %183 ], [ %.087, %182 ], [ %.087, %172 ], [ %.087, %162 ], [ %.087, %156 ], [ %.087, %152 ], [ %.087, %148 ], [ %.087, %147 ], [ %.087, %146 ], [ %.087, %144 ], [ %.087, %133 ], [ %.087, %123 ], [ %.087, %120 ], [ %.087, %118 ], [ %.087, %105 ], [ %.087, %95 ], [ %.087, %88 ], [ %.087, %87 ], [ %.087, %77 ], [ %.087, %67 ], [ %.087, %66 ], [ %.087, %61 ], [ %.087, %57 ], [ %.087, %53 ], [ %.087, %52 ], [ %.087, %47 ], [ 1, %46 ], [ %.087, %44 ], [ %.087, %40 ], [ %.087, %38 ], [ %.087, %26 ], [ %.087, %16 ]
  %.085.be = phi i32 [ %.085, %15 ], [ %.085, %292 ], [ %.085, %291 ], [ %.085, %290 ], [ %.085, %289 ], [ %.085, %288 ], [ %.085, %286 ], [ %.085, %285 ], [ %.085, %279 ], [ %.085, %278 ], [ %.085, %277 ], [ %.085, %276 ], [ %.085, %274 ], [ %.085, %263 ], [ %.085, %261 ], [ %.085, %260 ], [ %.085, %259 ], [ %.085, %245 ], [ %.085, %235 ], [ %.085, %231 ], [ %.085, %229 ], [ %.085, %217 ], [ %.085, %207 ], [ %.085, %206 ], [ %.085, %205 ], [ %.085, %202 ], [ %.085, %200 ], [ %.085, %197 ], [ %.085, %192 ], [ %.085, %185 ], [ %.085, %183 ], [ %.085, %182 ], [ %.085, %172 ], [ %.085, %162 ], [ %.085, %156 ], [ %.085, %152 ], [ %.085, %148 ], [ %.085, %147 ], [ %.085, %146 ], [ %.085, %144 ], [ %.085, %133 ], [ %.085, %123 ], [ %.085, %120 ], [ %.085, %118 ], [ %.085, %105 ], [ %.085, %95 ], [ %.085, %88 ], [ %.085, %87 ], [ %.085, %77 ], [ %.085, %67 ], [ %.085, %66 ], [ %.neg112, %61 ], [ %.085, %57 ], [ %.085, %53 ], [ 0, %52 ], [ %.085, %47 ], [ %.085, %46 ], [ %.085, %44 ], [ %.085, %40 ], [ %.085, %38 ], [ %.085, %26 ], [ %.085, %16 ]
  %.083.be = phi i32 [ %.083, %15 ], [ %.083, %292 ], [ %.083, %291 ], [ %.083, %290 ], [ %.083, %289 ], [ %.083, %288 ], [ %.083, %286 ], [ %.083, %285 ], [ %.083, %279 ], [ %.083, %278 ], [ %.083, %277 ], [ %.083, %276 ], [ %.083, %274 ], [ %.083, %263 ], [ %.083, %261 ], [ %.083, %260 ], [ %.083, %259 ], [ %.083, %245 ], [ %.083, %235 ], [ %.083, %231 ], [ %.083, %229 ], [ %.083, %217 ], [ %.083, %207 ], [ %.083, %206 ], [ %.083, %205 ], [ %.083, %202 ], [ %.083, %200 ], [ %.083, %197 ], [ %.083, %192 ], [ %.083, %185 ], [ %.083, %183 ], [ %.083, %182 ], [ %.083, %172 ], [ %.083, %162 ], [ %.083, %156 ], [ %.083, %152 ], [ %.083, %148 ], [ %.083, %147 ], [ %.083, %146 ], [ %.083, %144 ], [ %.083, %133 ], [ %.083, %123 ], [ %.083, %120 ], [ %.083, %118 ], [ %.083, %105 ], [ %.083, %95 ], [ %.083, %88 ], [ %.083, %87 ], [ %.083, %77 ], [ %.083, %67 ], [ %.083, %66 ], [ %65, %61 ], [ %.083, %57 ], [ %.083, %53 ], [ 0, %52 ], [ %.083, %47 ], [ %.083, %46 ], [ %.083, %44 ], [ %.083, %40 ], [ %.083, %38 ], [ %.083, %26 ], [ %.083, %16 ]
  %.081.be = phi i32 [ %.081, %15 ], [ %.081, %292 ], [ %.081, %291 ], [ %.081, %290 ], [ %.081, %289 ], [ %.081, %288 ], [ %.081, %286 ], [ %.081, %285 ], [ %.081, %279 ], [ %.081, %278 ], [ %.081, %277 ], [ %.081, %276 ], [ %.081, %274 ], [ %.081, %263 ], [ %.081, %261 ], [ %.081, %260 ], [ %.081, %259 ], [ %.081, %245 ], [ %.081, %235 ], [ %.081, %231 ], [ %.081, %229 ], [ %.081, %217 ], [ %.081, %207 ], [ %.081, %206 ], [ %.081, %205 ], [ %.081, %202 ], [ %.081, %200 ], [ %.081, %197 ], [ %.081, %192 ], [ %.081, %185 ], [ %.081, %183 ], [ %.081, %182 ], [ %.081, %172 ], [ %.081, %162 ], [ %.081, %156 ], [ %.081, %152 ], [ %.081, %148 ], [ %.081, %147 ], [ %.081, %146 ], [ %.081, %144 ], [ %.081, %133 ], [ %.081, %123 ], [ %.081, %120 ], [ %.081, %118 ], [ %.081, %105 ], [ %.081, %95 ], [ %.neg108, %88 ], [ %.081, %87 ], [ %.081, %77 ], [ %.081, %67 ], [ %.081, %66 ], [ %.081, %61 ], [ %.081, %57 ], [ %.081, %53 ], [ 0, %52 ], [ %.081, %47 ], [ %.081, %46 ], [ %.081, %44 ], [ %.081, %40 ], [ %.081, %38 ], [ %.081, %26 ], [ %.081, %16 ]
  %.079.be = phi i32 [ %.079, %15 ], [ %.079, %292 ], [ %.079, %291 ], [ %.079, %290 ], [ %.079, %289 ], [ %.079, %288 ], [ %287, %286 ], [ %.079, %285 ], [ %.079, %279 ], [ %.079, %278 ], [ %.079, %277 ], [ %.079, %276 ], [ %.079, %274 ], [ %.079, %263 ], [ %.079, %261 ], [ %.079, %260 ], [ %.079, %259 ], [ %.079, %245 ], [ %.079, %235 ], [ %.079, %231 ], [ %.079, %229 ], [ %.079, %217 ], [ %.079, %207 ], [ %.079, %206 ], [ %.079, %205 ], [ %.079, %202 ], [ %.079, %200 ], [ %.079, %197 ], [ %.079, %192 ], [ %.079, %185 ], [ %.079, %183 ], [ %.079, %182 ], [ %.079, %172 ], [ %.079, %162 ], [ %.079, %156 ], [ %.079, %152 ], [ %.079, %148 ], [ %.079, %147 ], [ %.079, %146 ], [ %.079, %144 ], [ %.079, %133 ], [ %.079, %123 ], [ %.079, %120 ], [ %.079, %118 ], [ %.079, %105 ], [ %.079, %95 ], [ %.079, %88 ], [ %.079, %87 ], [ %.neg110, %77 ], [ %.079, %67 ], [ %.079, %66 ], [ %.079, %61 ], [ %.079, %57 ], [ %.079, %53 ], [ 0, %52 ], [ %.079, %47 ], [ %.079, %46 ], [ %.079, %44 ], [ %.079, %40 ], [ %.079, %38 ], [ %.079, %26 ], [ %.079, %16 ]
  %.077.be = phi i32 [ %.077, %15 ], [ %.077, %292 ], [ %.077, %291 ], [ %.077, %290 ], [ %.077, %289 ], [ %.077, %288 ], [ %.077, %286 ], [ %.077, %285 ], [ %.077, %279 ], [ %.077, %278 ], [ %.neg, %277 ], [ %.077, %276 ], [ %.077, %274 ], [ %.077, %263 ], [ %.077, %261 ], [ %.077, %260 ], [ %.077, %259 ], [ %.077, %245 ], [ %.077, %235 ], [ %.077, %231 ], [ %.077, %229 ], [ %.077, %217 ], [ %.077, %207 ], [ %.077, %206 ], [ %.077, %205 ], [ %.077, %202 ], [ %.077, %200 ], [ %.077, %197 ], [ %.077, %192 ], [ %.077, %185 ], [ %.077, %183 ], [ %.077, %182 ], [ %.077, %172 ], [ %.077, %162 ], [ %.077, %156 ], [ %.077, %152 ], [ %.077, %148 ], [ %.077, %147 ], [ %.077, %146 ], [ %.077, %144 ], [ %.077, %133 ], [ %.077, %123 ], [ %.077, %120 ], [ %.077, %118 ], [ %.077, %105 ], [ %.077, %95 ], [ 0, %88 ], [ %.077, %87 ], [ %.077, %77 ], [ %.077, %67 ], [ %.077, %66 ], [ %.077, %61 ], [ %.077, %57 ], [ %.077, %53 ], [ %.077, %52 ], [ %.077, %47 ], [ %.077, %46 ], [ %.077, %44 ], [ %.077, %40 ], [ %.077, %38 ], [ %.077, %26 ], [ %.077, %16 ]
  %.075.be = phi i32 [ %.075, %15 ], [ %.075, %292 ], [ %.075, %291 ], [ %.075, %290 ], [ %.075, %289 ], [ %.075, %288 ], [ %.075, %286 ], [ %.075, %285 ], [ %.075, %279 ], [ %.075, %278 ], [ %.075, %277 ], [ %.075, %276 ], [ %.075, %274 ], [ %.075, %263 ], [ %.075, %261 ], [ %.075, %260 ], [ %.075, %259 ], [ %.075, %245 ], [ %.075, %235 ], [ %.075, %231 ], [ %.075, %229 ], [ %.075, %217 ], [ %.075, %207 ], [ %.075, %206 ], [ %.075, %205 ], [ %.075, %202 ], [ %.075, %200 ], [ %.075, %197 ], [ %.075, %192 ], [ %.075, %185 ], [ %.075, %183 ], [ %.075, %182 ], [ %.075, %172 ], [ %.075, %162 ], [ %157, %156 ], [ %.075, %152 ], [ %.075, %148 ], [ 0, %147 ], [ %.075, %146 ], [ %.075, %144 ], [ %.075, %133 ], [ %.075, %123 ], [ %.075, %120 ], [ %.075, %118 ], [ %.075, %105 ], [ %.075, %95 ], [ %.075, %88 ], [ %.075, %87 ], [ %.075, %77 ], [ %.075, %67 ], [ %.075, %66 ], [ %.075, %61 ], [ %.075, %57 ], [ %.075, %53 ], [ %.075, %52 ], [ %.075, %47 ], [ %.075, %46 ], [ %.075, %44 ], [ %.075, %40 ], [ %.075, %38 ], [ %.075, %26 ], [ %.075, %16 ]
  %.073.be = phi i32 [ %.073, %15 ], [ %.073, %292 ], [ %.073, %291 ], [ %.073, %290 ], [ %.073, %289 ], [ %.073, %288 ], [ %.073, %286 ], [ %.073, %285 ], [ %.073, %279 ], [ %.073, %278 ], [ %.073, %277 ], [ %.073, %276 ], [ %.073, %274 ], [ %.073, %263 ], [ %.073, %261 ], [ %.073, %260 ], [ %.073, %259 ], [ %.073, %245 ], [ %.073, %235 ], [ %.073, %231 ], [ %.073, %229 ], [ %.073, %217 ], [ %.073, %207 ], [ %.073, %206 ], [ %.073, %205 ], [ %.073, %202 ], [ %.073, %200 ], [ %.073, %197 ], [ %.073, %192 ], [ %.073, %185 ], [ %.073, %183 ], [ %.073, %182 ], [ %.073, %172 ], [ %.073, %162 ], [ %161, %156 ], [ %.073, %152 ], [ %.073, %148 ], [ 0, %147 ], [ %.073, %146 ], [ %.073, %144 ], [ %.073, %133 ], [ %.073, %123 ], [ %.073, %120 ], [ %.073, %118 ], [ %.073, %105 ], [ %.073, %95 ], [ %.073, %88 ], [ %.073, %87 ], [ %.073, %77 ], [ %.073, %67 ], [ %.073, %66 ], [ %.073, %61 ], [ %.073, %57 ], [ %.073, %53 ], [ %.073, %52 ], [ %.073, %47 ], [ %.073, %46 ], [ %.073, %44 ], [ %.073, %40 ], [ %.073, %38 ], [ %.073, %26 ], [ %.073, %16 ]
  %.071.be = phi i32 [ %.071, %15 ], [ %.071, %292 ], [ %.071, %291 ], [ %.071, %290 ], [ %.071, %289 ], [ %.071, %288 ], [ %.071, %286 ], [ %.071, %285 ], [ %.071, %279 ], [ %.071, %278 ], [ %.071, %277 ], [ %.071, %276 ], [ %.071, %274 ], [ %.071, %263 ], [ %.071, %261 ], [ %.071, %260 ], [ %.071, %259 ], [ %.071, %245 ], [ %.071, %235 ], [ %.071, %231 ], [ %.071, %229 ], [ %.071, %217 ], [ %.071, %207 ], [ %.071, %206 ], [ %.071, %205 ], [ %.071, %202 ], [ %.071, %200 ], [ %.071, %197 ], [ %.071, %192 ], [ %.neg101, %185 ], [ %.071, %183 ], [ %.071, %182 ], [ %.071, %172 ], [ %.071, %162 ], [ %.071, %156 ], [ %.071, %152 ], [ %.071, %148 ], [ 0, %147 ], [ %.071, %146 ], [ %.071, %144 ], [ %.071, %133 ], [ %.071, %123 ], [ %.071, %120 ], [ %.071, %118 ], [ %.071, %105 ], [ %.071, %95 ], [ %.071, %88 ], [ %.071, %87 ], [ %.071, %77 ], [ %.071, %67 ], [ %.071, %66 ], [ %.071, %61 ], [ %.071, %57 ], [ %.071, %53 ], [ %.071, %52 ], [ %.071, %47 ], [ %.071, %46 ], [ %.071, %44 ], [ %.071, %40 ], [ %.071, %38 ], [ %.071, %26 ], [ %.071, %16 ]
  %.069.be = phi i32 [ %.069, %15 ], [ %.069, %292 ], [ %.069, %291 ], [ %.069, %290 ], [ %.069, %289 ], [ %.069, %288 ], [ %.069, %286 ], [ %.069, %285 ], [ %.069, %279 ], [ %.069, %278 ], [ %.069, %277 ], [ %.069, %276 ], [ %.069, %274 ], [ %.069, %263 ], [ %.069, %261 ], [ %.069, %260 ], [ %.069, %259 ], [ %.069, %245 ], [ %.069, %235 ], [ %.069, %231 ], [ %.069, %229 ], [ %.069, %217 ], [ %.069, %207 ], [ %.069, %206 ], [ %.069, %205 ], [ %.069, %202 ], [ %.069, %200 ], [ %.069, %197 ], [ %.069, %192 ], [ %.069, %185 ], [ %184, %183 ], [ %.069, %182 ], [ %.069, %172 ], [ %.069, %162 ], [ %.069, %156 ], [ %.069, %152 ], [ %.069, %148 ], [ 0, %147 ], [ %.069, %146 ], [ %.069, %144 ], [ %.069, %133 ], [ %.069, %123 ], [ %.069, %120 ], [ %.069, %118 ], [ %.069, %105 ], [ %.069, %95 ], [ %.069, %88 ], [ %.069, %87 ], [ %.069, %77 ], [ %.069, %67 ], [ %.069, %66 ], [ %.069, %61 ], [ %.069, %57 ], [ %.069, %53 ], [ %.069, %52 ], [ %.069, %47 ], [ %.069, %46 ], [ %.069, %44 ], [ %.069, %40 ], [ %.069, %38 ], [ %.069, %26 ], [ %.069, %16 ]
  %.067.be = phi i32 [ %.067, %15 ], [ %.067, %292 ], [ %.067, %291 ], [ %.067, %290 ], [ %.067, %289 ], [ %.067, %288 ], [ %.067, %286 ], [ %.067, %285 ], [ %.067, %279 ], [ %.067, %278 ], [ %.067, %277 ], [ %.067, %276 ], [ %275, %274 ], [ %.067, %263 ], [ %.067, %261 ], [ %.067, %260 ], [ %.067, %259 ], [ %.067, %245 ], [ %.067, %235 ], [ %.067, %231 ], [ %.067, %229 ], [ %.067, %217 ], [ %.067, %207 ], [ %.067, %206 ], [ %.067, %205 ], [ %.067, %202 ], [ %.067, %200 ], [ %.067, %197 ], [ %.067, %192 ], [ 0, %185 ], [ %.067, %183 ], [ %.067, %182 ], [ %.067, %172 ], [ %.067, %162 ], [ %.067, %156 ], [ %.067, %152 ], [ %.067, %148 ], [ %.067, %147 ], [ %.067, %146 ], [ %.067, %144 ], [ %.067, %133 ], [ %.067, %123 ], [ %.067, %120 ], [ %.067, %118 ], [ %.067, %105 ], [ %.067, %95 ], [ %.067, %88 ], [ %.067, %87 ], [ %.067, %77 ], [ %.067, %67 ], [ %.067, %66 ], [ %.067, %61 ], [ %.067, %57 ], [ %.067, %53 ], [ %.067, %52 ], [ %.067, %47 ], [ %.067, %46 ], [ %.067, %44 ], [ %.067, %40 ], [ %.067, %38 ], [ %.067, %26 ], [ %.067, %16 ]
  %.065.be = phi i32 [ %.065, %15 ], [ %293, %292 ], [ %.065, %291 ], [ %.065, %290 ], [ %.065, %289 ], [ %.065, %288 ], [ %.065, %286 ], [ %.065, %285 ], [ %.065, %279 ], [ %.065, %278 ], [ %.065, %277 ], [ %.065, %276 ], [ %.065, %274 ], [ %.065, %263 ], [ %.065, %261 ], [ %.065, %260 ], [ %.065, %259 ], [ %.neg96, %245 ], [ %.065, %235 ], [ %.065, %231 ], [ %.065, %229 ], [ %.065, %217 ], [ %.065, %207 ], [ 0, %206 ], [ %.065, %205 ], [ %.065, %202 ], [ %.065, %200 ], [ %.065, %197 ], [ %.065, %192 ], [ %.065, %185 ], [ %.065, %183 ], [ %.065, %182 ], [ %.065, %172 ], [ %.065, %162 ], [ %.065, %156 ], [ %.065, %152 ], [ %.065, %148 ], [ %.065, %147 ], [ %.065, %146 ], [ %.065, %144 ], [ %.065, %133 ], [ %.065, %123 ], [ %.065, %120 ], [ %.065, %118 ], [ %.065, %105 ], [ %.065, %95 ], [ %.065, %88 ], [ %.065, %87 ], [ %.065, %77 ], [ %.065, %67 ], [ %.065, %66 ], [ %.065, %61 ], [ %.065, %57 ], [ %.065, %53 ], [ %.065, %52 ], [ %.065, %47 ], [ %.065, %46 ], [ %.065, %44 ], [ %.065, %40 ], [ %.065, %38 ], [ %.065, %26 ], [ %.065, %16 ]
  %.063.be = phi i32 [ %.063, %15 ], [ %297, %292 ], [ %.063, %291 ], [ %.063, %290 ], [ %.063, %289 ], [ %.063, %288 ], [ %.063, %286 ], [ %.063, %285 ], [ %.063, %279 ], [ %.063, %278 ], [ %.063, %277 ], [ %.063, %276 ], [ %.063, %274 ], [ %.063, %263 ], [ %.063, %261 ], [ %.063, %260 ], [ %.063, %259 ], [ %249, %245 ], [ %.063, %235 ], [ %.063, %231 ], [ %.063, %229 ], [ %.063, %217 ], [ %.063, %207 ], [ 0, %206 ], [ %.063, %205 ], [ %.063, %202 ], [ %.063, %200 ], [ %.063, %197 ], [ %.063, %192 ], [ %.063, %185 ], [ %.063, %183 ], [ %.063, %182 ], [ %.063, %172 ], [ %.063, %162 ], [ %.063, %156 ], [ %.063, %152 ], [ %.063, %148 ], [ %.063, %147 ], [ %.063, %146 ], [ %.063, %144 ], [ %.063, %133 ], [ %.063, %123 ], [ %.063, %120 ], [ %.063, %118 ], [ %.063, %105 ], [ %.063, %95 ], [ %.063, %88 ], [ %.063, %87 ], [ %.063, %77 ], [ %.063, %67 ], [ %.063, %66 ], [ %.063, %61 ], [ %.063, %57 ], [ %.063, %53 ], [ %.063, %52 ], [ %.063, %47 ], [ %.063, %46 ], [ %.063, %44 ], [ %.063, %40 ], [ %.063, %38 ], [ %.063, %26 ], [ %.063, %16 ]
  %.061.be = phi i32 [ %.061, %15 ], [ %.061, %292 ], [ %.061, %291 ], [ %.061, %290 ], [ %.061, %289 ], [ %.061, %288 ], [ %.061, %286 ], [ %.061, %285 ], [ %.061, %279 ], [ %.061, %278 ], [ %.061, %277 ], [ %.061, %276 ], [ %.061, %274 ], [ %.061, %263 ], [ %262, %261 ], [ %.061, %260 ], [ %.061, %259 ], [ %.061, %245 ], [ %.061, %235 ], [ %.061, %231 ], [ %.061, %229 ], [ %.061, %217 ], [ %.061, %207 ], [ 0, %206 ], [ %.061, %205 ], [ %.061, %202 ], [ %.061, %200 ], [ %.061, %197 ], [ %.061, %192 ], [ %.061, %185 ], [ %.061, %183 ], [ %.061, %182 ], [ %.061, %172 ], [ %.061, %162 ], [ %.061, %156 ], [ %.061, %152 ], [ %.061, %148 ], [ %.061, %147 ], [ %.061, %146 ], [ %.061, %144 ], [ %.061, %133 ], [ %.061, %123 ], [ %.061, %120 ], [ %.061, %118 ], [ %.061, %105 ], [ %.061, %95 ], [ %.061, %88 ], [ %.061, %87 ], [ %.061, %77 ], [ %.061, %67 ], [ %.061, %66 ], [ %.061, %61 ], [ %.061, %57 ], [ %.061, %53 ], [ %.061, %52 ], [ %.061, %47 ], [ %.061, %46 ], [ %.061, %44 ], [ %.061, %40 ], [ %.061, %38 ], [ %.061, %26 ], [ %.061, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ 798552944, %292 ], [ 442400875, %291 ], [ 8982413, %290 ], [ 706073714, %289 ], [ -1448791142, %288 ], [ 826934931, %286 ], [ -636676730, %285 ], [ 412707745, %279 ], [ -519684007, %278 ], [ -510125636, %277 ], [ 1422484403, %276 ], [ -594590569, %274 ], [ -459226348, %263 ], [ 515642696, %261 ], [ -1860401249, %260 ], [ -97892391, %259 ], [ %258, %245 ], [ %244, %235 ], [ %234, %231 ], [ %230, %229 ], [ %228, %217 ], [ %216, %207 ], [ 515642696, %206 ], [ -459226348, %205 ], [ %204, %202 ], [ %201, %200 ], [ %199, %197 ], [ %196, %192 ], [ -594590569, %185 ], [ -1977470913, %183 ], [ -1661848047, %182 ], [ %181, %172 ], [ %171, %162 ], [ -205032450, %156 ], [ %155, %152 ], [ %151, %148 ], [ -1977470913, %147 ], [ 1422484403, %146 ], [ %145, %144 ], [ %143, %133 ], [ %132, %123 ], [ %122, %120 ], [ %119, %118 ], [ %117, %105 ], [ %104, %95 ], [ -510125636, %88 ], [ -190761346, %87 ], [ %86, %77 ], [ %76, %67 ], [ -348596672, %66 ], [ -1077263851, %61 ], [ %60, %57 ], [ %56, %53 ], [ -190761346, %52 ], [ %51, %47 ], [ 412707745, %46 ], [ 1030012577, %44 ], [ -1294122068, %40 ], [ %39, %38 ], [ %37, %26 ], [ %25, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* @x.1, align 4
  %18 = load i32, i32* @y.2, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 -636676730, i32 -1973075334
  br label %.backedge

26:                                               ; preds = %15
  %27 = load i32, i32* %5, align 4
  %28 = icmp slt i32 %.089, %27
  store i1 %28, i1* %4, align 1
  %29 = load i32, i32* @x.1, align 4
  %30 = load i32, i32* @y.2, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 1989429206, i32 -1973075334
  br label %.backedge

38:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %39 = select i1 %.0..0..0., i32 1690806215, i32 904643814
  br label %.backedge

40:                                               ; preds = %15
  %41 = sext i32 %.089 to i64
  %42 = getelementptr inbounds [10 x i32], [10 x i32]* @l, i64 0, i64 %41
  %43 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %42)
  br label %.backedge

44:                                               ; preds = %15
  %45 = add i32 %.089, 1
  br label %.backedge

46:                                               ; preds = %15
  br label %.backedge

47:                                               ; preds = %15
  %48 = load i32, i32* %5, align 4
  %49 = shl nuw i32 1, %48
  %50 = icmp slt i32 %.087, %49
  %51 = select i1 %50, i32 -296599663, i32 2137741964
  br label %.backedge

52:                                               ; preds = %15
  br label %.backedge

53:                                               ; preds = %15
  %54 = load i32, i32* %5, align 4
  %55 = icmp slt i32 %.079, %54
  %56 = select i1 %55, i32 409471759, i32 -1731342285
  br label %.backedge

57:                                               ; preds = %15
  %58 = shl nuw i32 1, %.079
  %59 = and i32 %58, %.087
  %.not114 = icmp eq i32 %59, 0
  %60 = select i1 %.not114, i32 -1077263851, i32 855241394
  br label %.backedge

61:                                               ; preds = %15
  %.neg112 = add i32 %.085, 1
  %62 = sext i32 %.079 to i64
  %63 = getelementptr inbounds [10 x i32], [10 x i32]* @l, i64 0, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %64, %.083
  br label %.backedge

66:                                               ; preds = %15
  br label %.backedge

67:                                               ; preds = %15
  %68 = load i32, i32* @x.1, align 4
  %69 = load i32, i32* @y.2, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 826934931, i32 165186771
  br label %.backedge

77:                                               ; preds = %15
  %.neg110 = add i32 %.079, 1
  %78 = load i32, i32* @x.1, align 4
  %79 = load i32, i32* @y.2, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 1614154837, i32 165186771
  br label %.backedge

87:                                               ; preds = %15
  br label %.backedge

88:                                               ; preds = %15
  %.neg107.neg = mul i32 %.085, 10
  %89 = load i32, i32* %6, align 4
  %90 = add i32 %.083, 754154056
  %91 = sub i32 %90, %89
  %92 = add i32 %91, -754154056
  %93 = icmp slt i32 %92, 0
  %neg106 = sub i32 754154056, %91
  %94 = select i1 %93, i32 %neg106, i32 %92
  %.neg109 = add i32 %.neg107.neg, -10
  %.neg108 = add i32 %.neg109, %94
  br label %.backedge

95:                                               ; preds = %15
  %96 = load i32, i32* @x.1, align 4
  %97 = load i32, i32* @y.2, align 4
  %98 = add i32 %96, -1
  %99 = mul i32 %98, %96
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %102, %101
  %104 = select i1 %103, i32 -1448791142, i32 2019414818
  br label %.backedge

105:                                              ; preds = %15
  %106 = load i32, i32* %5, align 4
  %107 = shl nuw i32 1, %106
  %108 = icmp slt i32 %.077, %107
  store i1 %108, i1* %3, align 1
  %109 = load i32, i32* @x.1, align 4
  %110 = load i32, i32* @y.2, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 -907117179, i32 2019414818
  br label %.backedge

118:                                              ; preds = %15
  %.0..0..0.58 = load volatile i1, i1* %3, align 1
  %119 = select i1 %.0..0..0.58, i32 -1289353379, i32 -139818950
  br label %.backedge

120:                                              ; preds = %15
  %121 = and i32 %.077, %.087
  %.not104 = icmp eq i32 %121, 0
  %122 = select i1 %.not104, i32 963805921, i32 596368476
  br label %.backedge

123:                                              ; preds = %15
  %124 = load i32, i32* @x.1, align 4
  %125 = load i32, i32* @y.2, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 706073714, i32 -686447466
  br label %.backedge

133:                                              ; preds = %15
  %134 = icmp eq i32 %.077, 0
  store i1 %134, i1* %2, align 1
  %135 = load i32, i32* @x.1, align 4
  %136 = load i32, i32* @y.2, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 -771279196, i32 -686447466
  br label %.backedge

144:                                              ; preds = %15
  %.0..0..0.59 = load volatile i1, i1* %2, align 1
  %145 = select i1 %.0..0..0.59, i32 596368476, i32 1455270545
  br label %.backedge

146:                                              ; preds = %15
  br label %.backedge

147:                                              ; preds = %15
  br label %.backedge

148:                                              ; preds = %15
  %149 = load i32, i32* %5, align 4
  %150 = icmp slt i32 %.069, %149
  %151 = select i1 %150, i32 2126502491, i32 -2040242305
  br label %.backedge

152:                                              ; preds = %15
  %153 = shl nuw i32 1, %.069
  %154 = and i32 %153, %.077
  %.not103 = icmp eq i32 %154, 0
  %155 = select i1 %.not103, i32 -205032450, i32 -793028600
  br label %.backedge

156:                                              ; preds = %15
  %157 = add i32 %.075, 1
  %158 = sext i32 %.069 to i64
  %159 = getelementptr inbounds [10 x i32], [10 x i32]* @l, i64 0, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = add i32 %160, %.073
  br label %.backedge

162:                                              ; preds = %15
  %163 = load i32, i32* @x.1, align 4
  %164 = load i32, i32* @y.2, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 8982413, i32 254532224
  br label %.backedge

172:                                              ; preds = %15
  %173 = load i32, i32* @x.1, align 4
  %174 = load i32, i32* @y.2, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 2087679186, i32 254532224
  br label %.backedge

182:                                              ; preds = %15
  br label %.backedge

183:                                              ; preds = %15
  %184 = add i32 %.069, 1
  br label %.backedge

185:                                              ; preds = %15
  %.neg100.neg = mul i32 %.075, 10
  %186 = load i32, i32* %7, align 4
  %187 = add i32 %.073, 170018529
  %188 = sub i32 %187, %186
  %189 = add i32 %188, -170018529
  %190 = icmp slt i32 %189, 0
  %neg99 = sub i32 170018529, %188
  %191 = select i1 %190, i32 %neg99, i32 %189
  %.neg102 = add i32 %.neg100.neg, -10
  %.neg101 = add i32 %.neg102, %191
  br label %.backedge

192:                                              ; preds = %15
  %193 = load i32, i32* %5, align 4
  %194 = shl nuw i32 1, %193
  %195 = icmp slt i32 %.067, %194
  %196 = select i1 %195, i32 -881036308, i32 -1819390826
  br label %.backedge

197:                                              ; preds = %15
  %198 = and i32 %.067, %.087
  %.not98 = icmp eq i32 %198, 0
  %199 = select i1 %.not98, i32 380368253, i32 -447808916
  br label %.backedge

200:                                              ; preds = %15
  %.demorgan = and i32 %.067, %.077
  %.not97 = icmp eq i32 %.demorgan, 0
  %201 = select i1 %.not97, i32 -276608209, i32 -447808916
  br label %.backedge

202:                                              ; preds = %15
  %203 = icmp eq i32 %.067, 0
  %204 = select i1 %203, i32 -447808916, i32 1329494990
  br label %.backedge

205:                                              ; preds = %15
  br label %.backedge

206:                                              ; preds = %15
  br label %.backedge

207:                                              ; preds = %15
  %208 = load i32, i32* @x.1, align 4
  %209 = load i32, i32* @y.2, align 4
  %210 = add i32 %208, -1
  %211 = mul i32 %210, %208
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %214, %213
  %216 = select i1 %215, i32 442400875, i32 109383634
  br label %.backedge

217:                                              ; preds = %15
  %218 = load i32, i32* %5, align 4
  %219 = icmp slt i32 %.061, %218
  store i1 %219, i1* %1, align 1
  %220 = load i32, i32* @x.1, align 4
  %221 = load i32, i32* @y.2, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 1376114241, i32 109383634
  br label %.backedge

229:                                              ; preds = %15
  %.0..0..0.60 = load volatile i1, i1* %1, align 1
  %230 = select i1 %.0..0..0.60, i32 810179002, i32 -2015072931
  br label %.backedge

231:                                              ; preds = %15
  %232 = shl nuw i32 1, %.061
  %233 = and i32 %232, %.067
  %.not = icmp eq i32 %233, 0
  %234 = select i1 %.not, i32 -97892391, i32 -1503744442
  br label %.backedge

235:                                              ; preds = %15
  %236 = load i32, i32* @x.1, align 4
  %237 = load i32, i32* @y.2, align 4
  %238 = add i32 %236, -1
  %239 = mul i32 %238, %236
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %242, %241
  %244 = select i1 %243, i32 798552944, i32 2006396503
  br label %.backedge

245:                                              ; preds = %15
  %.neg96 = add i32 %.065, 1
  %246 = sext i32 %.061 to i64
  %247 = getelementptr inbounds [10 x i32], [10 x i32]* @l, i64 0, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = add i32 %248, %.063
  %250 = load i32, i32* @x.1, align 4
  %251 = load i32, i32* @y.2, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 8893229, i32 2006396503
  br label %.backedge

259:                                              ; preds = %15
  br label %.backedge

260:                                              ; preds = %15
  br label %.backedge

261:                                              ; preds = %15
  %262 = add i32 %.061, 1
  br label %.backedge

263:                                              ; preds = %15
  %.neg93.neg = mul i32 %.065, 10
  %264 = load i32, i32* %8, align 4
  %265 = add i32 %.063, 1751199875
  %266 = sub i32 %265, %264
  %267 = add i32 %266, -1751199875
  %268 = icmp slt i32 %267, 0
  %neg = sub i32 1751199875, %266
  %269 = select i1 %268, i32 %neg, i32 %267
  %270 = add i32 %.081, -10
  %271 = add i32 %270, %.071
  %.neg95 = add i32 %271, %.neg93.neg
  %.neg94 = add i32 %.neg95, %269
  store i32 %.neg94, i32* %10, align 4
  %272 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10)
  %273 = load i32, i32* %272, align 4
  store i32 %273, i32* %9, align 4
  br label %.backedge

274:                                              ; preds = %15
  %275 = add i32 %.067, 1
  br label %.backedge

276:                                              ; preds = %15
  br label %.backedge

277:                                              ; preds = %15
  %.neg = add i32 %.077, 1
  br label %.backedge

278:                                              ; preds = %15
  br label %.backedge

279:                                              ; preds = %15
  %280 = add i32 %.087, 1
  br label %.backedge

281:                                              ; preds = %15
  %282 = load i32, i32* %9, align 4
  %283 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %282)
  %284 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %283, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0

285:                                              ; preds = %15
  br label %.backedge

286:                                              ; preds = %15
  %287 = add i32 %.079, 1
  br label %.backedge

288:                                              ; preds = %15
  br label %.backedge

289:                                              ; preds = %15
  br label %.backedge

290:                                              ; preds = %15
  br label %.backedge

291:                                              ; preds = %15
  br label %.backedge

292:                                              ; preds = %15
  %293 = add i32 %.065, 1
  %294 = sext i32 %.061 to i64
  %295 = getelementptr inbounds [10 x i32], [10 x i32]* @l, i64 0, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = add i32 %296, %.063
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.3, align 4
  %9 = load i32, i32* @y.4, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -1206122618, i32 1102377877
  %17 = select i1 %15, i32 -1470270590, i32 1102377877
  br label %.outer

.outer:                                           ; preds = %18, %2
  %.09.ph = phi i32* [ undef, %2 ], [ %.09.ph14, %18 ]
  %.0.ph = phi i32 [ -2067806850, %2 ], [ %16, %18 ]
  br label %.outer13

.outer13:                                         ; preds = %.outer13.backedge, %.outer
  %.09.ph14 = phi i32* [ %.09.ph, %.outer ], [ %.09.ph14.be, %.outer13.backedge ]
  %.0.ph15 = phi i32 [ %.0.ph, %.outer ], [ 430908493, %.outer13.backedge ]
  br label %.outer16

.outer16:                                         ; preds = %.outer16.backedge, %.outer13
  %.0.ph17 = phi i32 [ %.0.ph15, %.outer13 ], [ %.0.ph17.be, %.outer16.backedge ]
  br label %18

18:                                               ; preds = %.outer16, %18
  switch i32 %.0.ph17, label %18 [
    i32 -2067806850, label %19
    i32 572914213, label %.outer13.backedge
    i32 1753639579, label %22
    i32 430908493, label %.outer16.backedge
    i32 -1470270590, label %.outer
    i32 -1206122618, label %23
    i32 1102377877, label %24
  ]

19:                                               ; preds = %18
  %.0..0..0.6 = load volatile i32, i32* %5, align 4
  %.0..0..0.7 = load volatile i32, i32* %4, align 4
  %20 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %21 = select i1 %20, i32 572914213, i32 1753639579
  br label %.outer16.backedge

22:                                               ; preds = %18
  br label %.outer13.backedge

.outer13.backedge:                                ; preds = %18, %22
  %.09.ph14.be = phi i32* [ %0, %22 ], [ %1, %18 ]
  br label %.outer13

23:                                               ; preds = %18
  store i32* %.09.ph, i32** %3, align 8
  %.0..0..0.8 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.8

24:                                               ; preds = %18
  br label %.outer16.backedge

.outer16.backedge:                                ; preds = %18, %24, %19
  %.0.ph17.be = phi i32 [ %21, %19 ], [ -1470270590, %24 ], [ %17, %18 ]
  br label %.outer16
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s726007663.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
