; ModuleID = 'build_ollvm/programs/p03111/s008919417.ll'
source_filename = "Project_CodeNet_C++1400/p03111/s008919417.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s008919417.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [10 x i32], align 16
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %5)
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %10, i32* nonnull dereferenceable(4) %6)
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %11, i32* nonnull dereferenceable(4) %7)
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %12, i32* nonnull dereferenceable(4) %8)
  br label %14

14:                                               ; preds = %.backedge, %0
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ 0, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.0 = phi i32 [ -1782175416, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1782175416, label %15
    i32 -1822366701, label %19
    i32 -1604127163, label %23
    i32 -1181296851, label %25
    i32 -1969653930, label %35
    i32 -1744850434, label %45
    i32 -1621237330, label %46
    i32 -1366271222, label %51
    i32 1674970666, label %52
    i32 1882353495, label %57
    i32 -1493335438, label %67
    i32 2019949787, label %77
    i32 126544364, label %78
    i32 1389656343, label %83
    i32 96359380, label %85
    i32 1749976447, label %87
    i32 -1697687915, label %97
    i32 -784459811, label %109
    i32 -1961799211, label %111
    i32 -1770581058, label %112
    i32 -270455451, label %113
    i32 2062029295, label %117
    i32 636168831, label %121
    i32 661572669, label %127
    i32 1648225326, label %128
    i32 1959271904, label %130
    i32 -21182479, label %133
    i32 1229600386, label %135
    i32 1702846127, label %140
    i32 -2134096296, label %144
    i32 -1426179115, label %148
    i32 -1463372551, label %154
    i32 -975116318, label %155
    i32 -91774489, label %165
    i32 472974323, label %175
    i32 983764238, label %176
    i32 -1391568797, label %179
    i32 -1566039333, label %189
    i32 -100897695, label %200
    i32 190008184, label %201
    i32 -1211755675, label %211
    i32 1199979074, label %228
    i32 1112770356, label %229
    i32 -942567355, label %233
    i32 -128304323, label %243
    i32 1595868349, label %256
    i32 -825092056, label %258
    i32 1017786434, label %264
    i32 1049651521, label %274
    i32 1644164623, label %284
    i32 -871542869, label %285
    i32 -759708423, label %295
    i32 -1479264201, label %306
    i32 -1541028086, label %307
    i32 1150307264, label %310
    i32 -1992064859, label %312
    i32 2067870587, label %322
    i32 352349376, label %340
    i32 1674256881, label %342
    i32 355018926, label %343
    i32 -1685565879, label %344
    i32 1955737423, label %354
    i32 -363213329, label %365
    i32 783402378, label %366
    i32 642709563, label %367
    i32 1776067089, label %369
    i32 670306032, label %370
    i32 -465402190, label %372
    i32 1991853591, label %382
    i32 460927985, label %394
    i32 228104489, label %395
    i32 -1903468781, label %396
    i32 -1226092492, label %397
    i32 -1842299108, label %398
    i32 -30801539, label %399
    i32 -907907077, label %401
    i32 -93251216, label %406
    i32 415198661, label %407
    i32 -1503552705, label %408
    i32 1013818299, label %410
    i32 1120302941, label %418
    i32 -1457794159, label %420
  ]

.backedge:                                        ; preds = %14, %420, %418, %410, %408, %407, %406, %401, %399, %398, %397, %396, %395, %382, %372, %370, %369, %367, %366, %365, %354, %344, %343, %342, %340, %322, %312, %310, %307, %306, %295, %285, %284, %274, %264, %258, %256, %243, %233, %229, %228, %211, %201, %200, %189, %179, %176, %175, %165, %155, %154, %148, %144, %140, %135, %133, %130, %128, %127, %121, %117, %113, %112, %111, %109, %97, %87, %85, %83, %78, %77, %67, %57, %52, %51, %46, %45, %35, %25, %23, %19, %15
  %.087.be = phi i32 [ %.087, %14 ], [ %.087, %420 ], [ %.087, %418 ], [ %.087, %410 ], [ %409, %408 ], [ %.087, %407 ], [ %.087, %406 ], [ 0, %401 ], [ %.087, %399 ], [ %.neg, %398 ], [ %.087, %397 ], [ %.087, %396 ], [ %.087, %395 ], [ %.087, %382 ], [ %.087, %372 ], [ %.087, %370 ], [ %.087, %369 ], [ %.087, %367 ], [ %.087, %366 ], [ %.087, %365 ], [ %.087, %354 ], [ %.087, %344 ], [ %.087, %343 ], [ %.087, %342 ], [ %.087, %340 ], [ %.087, %322 ], [ %.087, %312 ], [ %.087, %310 ], [ %.087, %307 ], [ %.087, %306 ], [ %296, %295 ], [ %.087, %285 ], [ %.087, %284 ], [ %.087, %274 ], [ %.087, %264 ], [ %.087, %258 ], [ %.087, %256 ], [ %.087, %243 ], [ %.087, %233 ], [ %.087, %229 ], [ %.087, %228 ], [ 0, %211 ], [ %.087, %201 ], [ %.087, %200 ], [ %.087, %189 ], [ %.087, %179 ], [ %.087, %176 ], [ %.087, %175 ], [ %.neg92, %165 ], [ %.087, %155 ], [ %.087, %154 ], [ %.087, %148 ], [ %.087, %144 ], [ %.087, %140 ], [ 0, %135 ], [ %.087, %133 ], [ %.087, %130 ], [ %129, %128 ], [ %.087, %127 ], [ %.087, %121 ], [ %.087, %117 ], [ %.087, %113 ], [ 0, %112 ], [ %.087, %111 ], [ %.087, %109 ], [ %.087, %97 ], [ %.087, %87 ], [ %.087, %85 ], [ %.087, %83 ], [ %.087, %78 ], [ %.087, %77 ], [ %.087, %67 ], [ %.087, %57 ], [ %.087, %52 ], [ %.087, %51 ], [ %.087, %46 ], [ %.087, %45 ], [ %.087, %35 ], [ %.087, %25 ], [ %.087, %23 ], [ %.087, %19 ], [ %.087, %15 ]
  %.085.be = phi i32 [ %.085, %14 ], [ %.085, %420 ], [ %.085, %418 ], [ %.085, %410 ], [ %.085, %408 ], [ %.085, %407 ], [ %.085, %406 ], [ %.085, %401 ], [ %.085, %399 ], [ %.085, %398 ], [ %.085, %397 ], [ %.085, %396 ], [ 1, %395 ], [ %.085, %382 ], [ %.085, %372 ], [ %371, %370 ], [ %.085, %369 ], [ %.085, %367 ], [ %.085, %366 ], [ %.085, %365 ], [ %.085, %354 ], [ %.085, %344 ], [ %.085, %343 ], [ %.085, %342 ], [ %.085, %340 ], [ %.085, %322 ], [ %.085, %312 ], [ %.085, %310 ], [ %.085, %307 ], [ %.085, %306 ], [ %.085, %295 ], [ %.085, %285 ], [ %.085, %284 ], [ %.085, %274 ], [ %.085, %264 ], [ %.085, %258 ], [ %.085, %256 ], [ %.085, %243 ], [ %.085, %233 ], [ %.085, %229 ], [ %.085, %228 ], [ %.085, %211 ], [ %.085, %201 ], [ %.085, %200 ], [ %.085, %189 ], [ %.085, %179 ], [ %.085, %176 ], [ %.085, %175 ], [ %.085, %165 ], [ %.085, %155 ], [ %.085, %154 ], [ %.085, %148 ], [ %.085, %144 ], [ %.085, %140 ], [ %.085, %135 ], [ %.085, %133 ], [ %.085, %130 ], [ %.085, %128 ], [ %.085, %127 ], [ %.085, %121 ], [ %.085, %117 ], [ %.085, %113 ], [ %.085, %112 ], [ %.085, %111 ], [ %.085, %109 ], [ %.085, %97 ], [ %.085, %87 ], [ %.085, %85 ], [ %.085, %83 ], [ %.085, %78 ], [ %.085, %77 ], [ %.085, %67 ], [ %.085, %57 ], [ %.085, %52 ], [ %.085, %51 ], [ %.085, %46 ], [ %.085, %45 ], [ 1, %35 ], [ %.085, %25 ], [ %24, %23 ], [ %.085, %19 ], [ %.085, %15 ]
  %.083.be = phi i32 [ %.083, %14 ], [ %.083, %420 ], [ %.083, %418 ], [ %.083, %410 ], [ %.083, %408 ], [ %.083, %407 ], [ %.083, %406 ], [ %.083, %401 ], [ %.083, %399 ], [ %.083, %398 ], [ %.083, %397 ], [ %.083, %396 ], [ %.083, %395 ], [ %.083, %382 ], [ %.083, %372 ], [ %.083, %370 ], [ %.083, %369 ], [ %368, %367 ], [ %.083, %366 ], [ %.083, %365 ], [ %.083, %354 ], [ %.083, %344 ], [ %.083, %343 ], [ %.083, %342 ], [ %.083, %340 ], [ %.083, %322 ], [ %.083, %312 ], [ %.083, %310 ], [ %.083, %307 ], [ %.083, %306 ], [ %.083, %295 ], [ %.083, %285 ], [ %.083, %284 ], [ %.083, %274 ], [ %.083, %264 ], [ %.083, %258 ], [ %.083, %256 ], [ %.083, %243 ], [ %.083, %233 ], [ %.083, %229 ], [ %.083, %228 ], [ %.083, %211 ], [ %.083, %201 ], [ %.083, %200 ], [ %.083, %189 ], [ %.083, %179 ], [ %.083, %176 ], [ %.083, %175 ], [ %.083, %165 ], [ %.083, %155 ], [ %.083, %154 ], [ %.083, %148 ], [ %.083, %144 ], [ %.083, %140 ], [ %.083, %135 ], [ %.083, %133 ], [ %.083, %130 ], [ %.083, %128 ], [ %.083, %127 ], [ %.083, %121 ], [ %.083, %117 ], [ %.083, %113 ], [ %.083, %112 ], [ %.083, %111 ], [ %.083, %109 ], [ %.083, %97 ], [ %.083, %87 ], [ %.083, %85 ], [ %.083, %83 ], [ %.083, %78 ], [ %.083, %77 ], [ %.083, %67 ], [ %.083, %57 ], [ %.083, %52 ], [ 1, %51 ], [ %.083, %46 ], [ %.083, %45 ], [ %.083, %35 ], [ %.083, %25 ], [ %.083, %23 ], [ %.083, %19 ], [ %.083, %15 ]
  %.081.be = phi i32 [ %.081, %14 ], [ %.081, %420 ], [ %419, %418 ], [ %.081, %410 ], [ %.081, %408 ], [ %.081, %407 ], [ %.081, %406 ], [ %.081, %401 ], [ %.081, %399 ], [ %.081, %398 ], [ %.081, %397 ], [ 1, %396 ], [ %.081, %395 ], [ %.081, %382 ], [ %.081, %372 ], [ %.081, %370 ], [ %.081, %369 ], [ %.081, %367 ], [ %.081, %366 ], [ %.081, %365 ], [ %355, %354 ], [ %.081, %344 ], [ %.081, %343 ], [ %.081, %342 ], [ %.081, %340 ], [ %.081, %322 ], [ %.081, %312 ], [ %.081, %310 ], [ %.081, %307 ], [ %.081, %306 ], [ %.081, %295 ], [ %.081, %285 ], [ %.081, %284 ], [ %.081, %274 ], [ %.081, %264 ], [ %.081, %258 ], [ %.081, %256 ], [ %.081, %243 ], [ %.081, %233 ], [ %.081, %229 ], [ %.081, %228 ], [ %.081, %211 ], [ %.081, %201 ], [ %.081, %200 ], [ %.081, %189 ], [ %.081, %179 ], [ %.081, %176 ], [ %.081, %175 ], [ %.081, %165 ], [ %.081, %155 ], [ %.081, %154 ], [ %.081, %148 ], [ %.081, %144 ], [ %.081, %140 ], [ %.081, %135 ], [ %.081, %133 ], [ %.081, %130 ], [ %.081, %128 ], [ %.081, %127 ], [ %.081, %121 ], [ %.081, %117 ], [ %.081, %113 ], [ %.081, %112 ], [ %.081, %111 ], [ %.081, %109 ], [ %.081, %97 ], [ %.081, %87 ], [ %.081, %85 ], [ %.081, %83 ], [ %.081, %78 ], [ %.081, %77 ], [ 1, %67 ], [ %.081, %57 ], [ %.081, %52 ], [ %.081, %51 ], [ %.081, %46 ], [ %.081, %45 ], [ %.081, %35 ], [ %.081, %25 ], [ %.081, %23 ], [ %.081, %19 ], [ %.081, %15 ]
  %.079.be = phi i32 [ %.079, %14 ], [ %.079, %420 ], [ %.079, %418 ], [ %.079, %410 ], [ %.079, %408 ], [ %.079, %407 ], [ %.079, %406 ], [ %.079, %401 ], [ %.079, %399 ], [ %.079, %398 ], [ %.079, %397 ], [ %.079, %396 ], [ 2000000000, %395 ], [ %.079, %382 ], [ %.079, %372 ], [ %.079, %370 ], [ %.079, %369 ], [ %.079, %367 ], [ %.079, %366 ], [ %.079, %365 ], [ %.079, %354 ], [ %.079, %344 ], [ %.079, %343 ], [ %.075, %342 ], [ %.079, %340 ], [ %.079, %322 ], [ %.079, %312 ], [ %.079, %310 ], [ %.079, %307 ], [ %.079, %306 ], [ %.079, %295 ], [ %.079, %285 ], [ %.079, %284 ], [ %.079, %274 ], [ %.079, %264 ], [ %.079, %258 ], [ %.079, %256 ], [ %.079, %243 ], [ %.079, %233 ], [ %.079, %229 ], [ %.079, %228 ], [ %.079, %211 ], [ %.079, %201 ], [ %.079, %200 ], [ %.079, %189 ], [ %.079, %179 ], [ %.079, %176 ], [ %.079, %175 ], [ %.079, %165 ], [ %.079, %155 ], [ %.079, %154 ], [ %.079, %148 ], [ %.079, %144 ], [ %.079, %140 ], [ %.079, %135 ], [ %.079, %133 ], [ %.079, %130 ], [ %.079, %128 ], [ %.079, %127 ], [ %.079, %121 ], [ %.079, %117 ], [ %.079, %113 ], [ %.079, %112 ], [ %.079, %111 ], [ %.079, %109 ], [ %.079, %97 ], [ %.079, %87 ], [ %.079, %85 ], [ %.079, %83 ], [ %.079, %78 ], [ %.079, %77 ], [ %.079, %67 ], [ %.079, %57 ], [ %.079, %52 ], [ %.079, %51 ], [ %.079, %46 ], [ %.079, %45 ], [ 2000000000, %35 ], [ %.079, %25 ], [ %.079, %23 ], [ %.079, %19 ], [ %.079, %15 ]
  %.077.be = phi i32 [ %.077, %14 ], [ %.077, %420 ], [ %.077, %418 ], [ %.077, %410 ], [ %.077, %408 ], [ %.077, %407 ], [ %.077, %406 ], [ 0, %401 ], [ %.077, %399 ], [ %.077, %398 ], [ %.077, %397 ], [ %.077, %396 ], [ %.077, %395 ], [ %.077, %382 ], [ %.077, %372 ], [ %.077, %370 ], [ %.077, %369 ], [ %.077, %367 ], [ %.077, %366 ], [ %.077, %365 ], [ %.077, %354 ], [ %.077, %344 ], [ %.077, %343 ], [ %.077, %342 ], [ %.077, %340 ], [ %.077, %322 ], [ %.077, %312 ], [ %.077, %310 ], [ %.077, %307 ], [ %.077, %306 ], [ %.077, %295 ], [ %.077, %285 ], [ %.077, %284 ], [ %.077, %274 ], [ %.077, %264 ], [ %263, %258 ], [ %.077, %256 ], [ %.077, %243 ], [ %.077, %233 ], [ %.077, %229 ], [ %.077, %228 ], [ 0, %211 ], [ %.077, %201 ], [ %.077, %200 ], [ %.077, %189 ], [ %.077, %179 ], [ %.077, %176 ], [ %.077, %175 ], [ %.077, %165 ], [ %.077, %155 ], [ %.077, %154 ], [ %153, %148 ], [ %.077, %144 ], [ %.077, %140 ], [ 0, %135 ], [ %.077, %133 ], [ %.077, %130 ], [ %.077, %128 ], [ %.077, %127 ], [ %126, %121 ], [ %.077, %117 ], [ %.077, %113 ], [ 0, %112 ], [ %.077, %111 ], [ %.077, %109 ], [ %.077, %97 ], [ %.077, %87 ], [ %.077, %85 ], [ %.077, %83 ], [ %.077, %78 ], [ %.077, %77 ], [ %.077, %67 ], [ %.077, %57 ], [ %.077, %52 ], [ %.077, %51 ], [ %.077, %46 ], [ %.077, %45 ], [ %.077, %35 ], [ %.077, %25 ], [ %.077, %23 ], [ %.077, %19 ], [ %.077, %15 ]
  %.075.be = phi i32 [ %.075, %14 ], [ %.075, %420 ], [ %.075, %418 ], [ %417, %410 ], [ %.075, %408 ], [ %.075, %407 ], [ %.075, %406 ], [ %405, %401 ], [ %400, %399 ], [ %.075, %398 ], [ %.075, %397 ], [ %.075, %396 ], [ %.075, %395 ], [ %.075, %382 ], [ %.075, %372 ], [ %.075, %370 ], [ %.075, %369 ], [ %.075, %367 ], [ %.075, %366 ], [ %.075, %365 ], [ %.075, %354 ], [ %.075, %344 ], [ %.075, %343 ], [ %.075, %342 ], [ %.075, %340 ], [ %329, %322 ], [ %.075, %312 ], [ %311, %310 ], [ %.075, %307 ], [ %.075, %306 ], [ %.075, %295 ], [ %.075, %285 ], [ %.075, %284 ], [ %.075, %274 ], [ %.075, %264 ], [ %259, %258 ], [ %.075, %256 ], [ %.075, %243 ], [ %.075, %233 ], [ %.075, %229 ], [ %.075, %228 ], [ %218, %211 ], [ %.075, %201 ], [ %.075, %200 ], [ %190, %189 ], [ %.075, %179 ], [ %.075, %176 ], [ %.075, %175 ], [ %.075, %165 ], [ %.075, %155 ], [ %.075, %154 ], [ %149, %148 ], [ %.075, %144 ], [ %.075, %140 ], [ %139, %135 ], [ %134, %133 ], [ %.075, %130 ], [ %.075, %128 ], [ %.075, %127 ], [ %122, %121 ], [ %.075, %117 ], [ %.075, %113 ], [ 0, %112 ], [ %.075, %111 ], [ %.075, %109 ], [ %.075, %97 ], [ %.075, %87 ], [ %.075, %85 ], [ %.075, %83 ], [ %.075, %78 ], [ %.075, %77 ], [ %.075, %67 ], [ %.075, %57 ], [ %.075, %52 ], [ %.075, %51 ], [ %.075, %46 ], [ %.075, %45 ], [ %.075, %35 ], [ %.075, %25 ], [ %.075, %23 ], [ %.075, %19 ], [ %.075, %15 ]
  %.073.be = phi i32 [ %.073, %14 ], [ %.073, %420 ], [ %.073, %418 ], [ %.073, %410 ], [ %.073, %408 ], [ %.073, %407 ], [ %.073, %406 ], [ 0, %401 ], [ %.073, %399 ], [ %.073, %398 ], [ %.073, %397 ], [ %.073, %396 ], [ %.073, %395 ], [ %.073, %382 ], [ %.073, %372 ], [ %.073, %370 ], [ %.073, %369 ], [ %.073, %367 ], [ %.073, %366 ], [ %.073, %365 ], [ %.073, %354 ], [ %.073, %344 ], [ %.073, %343 ], [ %.073, %342 ], [ %.073, %340 ], [ %.073, %322 ], [ %.073, %312 ], [ %.073, %310 ], [ %.073, %307 ], [ %.073, %306 ], [ %.073, %295 ], [ %.073, %285 ], [ %.073, %284 ], [ %.073, %274 ], [ %.073, %264 ], [ 1, %258 ], [ %.073, %256 ], [ %.073, %243 ], [ %.073, %233 ], [ %.073, %229 ], [ %.073, %228 ], [ 0, %211 ], [ %.073, %201 ], [ %.073, %200 ], [ %.073, %189 ], [ %.073, %179 ], [ %.073, %176 ], [ %.073, %175 ], [ %.073, %165 ], [ %.073, %155 ], [ %.073, %154 ], [ 1, %148 ], [ %.073, %144 ], [ %.073, %140 ], [ 0, %135 ], [ %.073, %133 ], [ %.073, %130 ], [ %.073, %128 ], [ %.073, %127 ], [ 1, %121 ], [ %.073, %117 ], [ %.073, %113 ], [ 0, %112 ], [ %.073, %111 ], [ %.073, %109 ], [ %.073, %97 ], [ %.073, %87 ], [ %.073, %85 ], [ %.073, %83 ], [ %.073, %78 ], [ %.073, %77 ], [ %.073, %67 ], [ %.073, %57 ], [ %.073, %52 ], [ %.073, %51 ], [ %.073, %46 ], [ %.073, %45 ], [ %.073, %35 ], [ %.073, %25 ], [ %.073, %23 ], [ %.073, %19 ], [ %.073, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ 1991853591, %420 ], [ 1955737423, %418 ], [ 2067870587, %410 ], [ -759708423, %408 ], [ 1049651521, %407 ], [ -128304323, %406 ], [ -1211755675, %401 ], [ -1566039333, %399 ], [ -91774489, %398 ], [ -1697687915, %397 ], [ -1493335438, %396 ], [ -1969653930, %395 ], [ %393, %382 ], [ %381, %372 ], [ -1621237330, %370 ], [ 670306032, %369 ], [ 1674970666, %367 ], [ 642709563, %366 ], [ 126544364, %365 ], [ %364, %354 ], [ %353, %344 ], [ -1685565879, %343 ], [ 355018926, %342 ], [ %341, %340 ], [ %339, %322 ], [ %321, %312 ], [ -1992064859, %310 ], [ %309, %307 ], [ 1112770356, %306 ], [ %305, %295 ], [ %294, %285 ], [ -871542869, %284 ], [ %283, %274 ], [ %273, %264 ], [ 1017786434, %258 ], [ %257, %256 ], [ %255, %243 ], [ %242, %233 ], [ %232, %229 ], [ 1112770356, %228 ], [ %227, %211 ], [ %210, %201 ], [ 190008184, %200 ], [ %199, %189 ], [ %188, %179 ], [ %178, %176 ], [ 1702846127, %175 ], [ %174, %165 ], [ %164, %155 ], [ -975116318, %154 ], [ -1463372551, %148 ], [ %147, %144 ], [ %143, %140 ], [ 1702846127, %135 ], [ 1229600386, %133 ], [ %132, %130 ], [ -270455451, %128 ], [ 1648225326, %127 ], [ 661572669, %121 ], [ %120, %117 ], [ %116, %113 ], [ -270455451, %112 ], [ -1685565879, %111 ], [ %110, %109 ], [ %108, %97 ], [ %96, %87 ], [ %86, %85 ], [ %84, %83 ], [ %82, %78 ], [ 126544364, %77 ], [ %76, %67 ], [ %66, %57 ], [ %56, %52 ], [ 1674970666, %51 ], [ %50, %46 ], [ -1621237330, %45 ], [ %44, %35 ], [ %34, %25 ], [ -1782175416, %23 ], [ -1604127163, %19 ], [ %18, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* %5, align 4
  %17 = icmp slt i32 %.085, %16
  %18 = select i1 %17, i32 -1822366701, i32 -1181296851
  br label %.backedge

19:                                               ; preds = %14
  %20 = sext i32 %.085 to i64
  %21 = getelementptr inbounds [10 x i32], [10 x i32]* %9, i64 0, i64 %20
  %22 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %21)
  br label %.backedge

23:                                               ; preds = %14
  %24 = add i32 %.085, 1
  br label %.backedge

25:                                               ; preds = %14
  %26 = load i32, i32* @x.1, align 4
  %27 = load i32, i32* @y.2, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 -1969653930, i32 228104489
  br label %.backedge

35:                                               ; preds = %14
  %36 = load i32, i32* @x.1, align 4
  %37 = load i32, i32* @y.2, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 -1744850434, i32 228104489
  br label %.backedge

45:                                               ; preds = %14
  br label %.backedge

46:                                               ; preds = %14
  %47 = load i32, i32* %5, align 4
  %48 = shl nuw i32 1, %47
  %49 = icmp slt i32 %.085, %48
  %50 = select i1 %49, i32 -1366271222, i32 -465402190
  br label %.backedge

51:                                               ; preds = %14
  br label %.backedge

52:                                               ; preds = %14
  %53 = load i32, i32* %5, align 4
  %54 = shl nuw i32 1, %53
  %55 = icmp slt i32 %.083, %54
  %56 = select i1 %55, i32 1882353495, i32 1776067089
  br label %.backedge

57:                                               ; preds = %14
  %58 = load i32, i32* @x.1, align 4
  %59 = load i32, i32* @y.2, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -1493335438, i32 -1903468781
  br label %.backedge

67:                                               ; preds = %14
  %68 = load i32, i32* @x.1, align 4
  %69 = load i32, i32* @y.2, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 2019949787, i32 -1903468781
  br label %.backedge

77:                                               ; preds = %14
  br label %.backedge

78:                                               ; preds = %14
  %79 = load i32, i32* %5, align 4
  %80 = shl nuw i32 1, %79
  %81 = icmp slt i32 %.081, %80
  %82 = select i1 %81, i32 1389656343, i32 783402378
  br label %.backedge

83:                                               ; preds = %14
  %.demorgan96 = and i32 %.083, %.085
  %.not97 = icmp eq i32 %.demorgan96, 0
  %84 = select i1 %.not97, i32 96359380, i32 -1961799211
  br label %.backedge

85:                                               ; preds = %14
  %.demorgan = and i32 %.081, %.083
  %.not95 = icmp eq i32 %.demorgan, 0
  %86 = select i1 %.not95, i32 1749976447, i32 -1961799211
  br label %.backedge

87:                                               ; preds = %14
  %88 = load i32, i32* @x.1, align 4
  %89 = load i32, i32* @y.2, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -1697687915, i32 -1226092492
  br label %.backedge

97:                                               ; preds = %14
  %98 = and i32 %.081, %.085
  %99 = icmp ne i32 %98, 0
  store i1 %99, i1* %4, align 1
  %100 = load i32, i32* @x.1, align 4
  %101 = load i32, i32* @y.2, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 -784459811, i32 -1226092492
  br label %.backedge

109:                                              ; preds = %14
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %110 = select i1 %.0..0..0., i32 -1961799211, i32 -1770581058
  br label %.backedge

111:                                              ; preds = %14
  br label %.backedge

112:                                              ; preds = %14
  br label %.backedge

113:                                              ; preds = %14
  %114 = load i32, i32* %5, align 4
  %115 = icmp slt i32 %.087, %114
  %116 = select i1 %115, i32 2062029295, i32 1959271904
  br label %.backedge

117:                                              ; preds = %14
  %118 = shl nuw i32 1, %.087
  %119 = and i32 %.085, %118
  %.not94 = icmp eq i32 %119, 0
  %120 = select i1 %.not94, i32 661572669, i32 636168831
  br label %.backedge

121:                                              ; preds = %14
  %122 = add i32 %.075, 10
  %123 = sext i32 %.087 to i64
  %124 = getelementptr inbounds [10 x i32], [10 x i32]* %9, i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, %.077
  br label %.backedge

127:                                              ; preds = %14
  br label %.backedge

128:                                              ; preds = %14
  %129 = add i32 %.087, 1
  br label %.backedge

130:                                              ; preds = %14
  %131 = icmp eq i32 %.073, 1
  %132 = select i1 %131, i32 -21182479, i32 1229600386
  br label %.backedge

133:                                              ; preds = %14
  %134 = add i32 %.075, -10
  br label %.backedge

135:                                              ; preds = %14
  %136 = load i32, i32* %6, align 4
  %137 = sub i32 %136, %.077
  %138 = call i32 @llvm.abs.i32(i32 %137, i1 true)
  %139 = add i32 %138, %.075
  br label %.backedge

140:                                              ; preds = %14
  %141 = load i32, i32* %5, align 4
  %142 = icmp slt i32 %.087, %141
  %143 = select i1 %142, i32 -2134096296, i32 983764238
  br label %.backedge

144:                                              ; preds = %14
  %145 = shl nuw i32 1, %.087
  %146 = and i32 %.083, %145
  %.not = icmp eq i32 %146, 0
  %147 = select i1 %.not, i32 -1463372551, i32 -1426179115
  br label %.backedge

148:                                              ; preds = %14
  %149 = add i32 %.075, 10
  %150 = sext i32 %.087 to i64
  %151 = getelementptr inbounds [10 x i32], [10 x i32]* %9, i64 0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = add i32 %152, %.077
  br label %.backedge

154:                                              ; preds = %14
  br label %.backedge

155:                                              ; preds = %14
  %156 = load i32, i32* @x.1, align 4
  %157 = load i32, i32* @y.2, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 -91774489, i32 -1842299108
  br label %.backedge

165:                                              ; preds = %14
  %.neg92 = add i32 %.087, 1
  %166 = load i32, i32* @x.1, align 4
  %167 = load i32, i32* @y.2, align 4
  %168 = add i32 %166, -1
  %169 = mul i32 %168, %166
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 472974323, i32 -1842299108
  br label %.backedge

175:                                              ; preds = %14
  br label %.backedge

176:                                              ; preds = %14
  %177 = icmp eq i32 %.073, 1
  %178 = select i1 %177, i32 -1391568797, i32 190008184
  br label %.backedge

179:                                              ; preds = %14
  %180 = load i32, i32* @x.1, align 4
  %181 = load i32, i32* @y.2, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 -1566039333, i32 -30801539
  br label %.backedge

189:                                              ; preds = %14
  %190 = add i32 %.075, -10
  %191 = load i32, i32* @x.1, align 4
  %192 = load i32, i32* @y.2, align 4
  %193 = add i32 %191, -1
  %194 = mul i32 %193, %191
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %197, %196
  %199 = select i1 %198, i32 -100897695, i32 -30801539
  br label %.backedge

200:                                              ; preds = %14
  br label %.backedge

201:                                              ; preds = %14
  %202 = load i32, i32* @x.1, align 4
  %203 = load i32, i32* @y.2, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 -1211755675, i32 -907907077
  br label %.backedge

211:                                              ; preds = %14
  %212 = load i32, i32* %7, align 4
  %213 = sub i32 2080324670, %.077
  %214 = add i32 %213, %212
  %215 = add i32 %214, -2080324670
  %216 = icmp slt i32 %215, 0
  %neg91 = sub i32 2080324670, %214
  %217 = select i1 %216, i32 %neg91, i32 %215
  %218 = add i32 %217, %.075
  %219 = load i32, i32* @x.1, align 4
  %220 = load i32, i32* @y.2, align 4
  %221 = add i32 %219, -1
  %222 = mul i32 %221, %219
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %225, %224
  %227 = select i1 %226, i32 1199979074, i32 -907907077
  br label %.backedge

228:                                              ; preds = %14
  br label %.backedge

229:                                              ; preds = %14
  %230 = load i32, i32* %5, align 4
  %231 = icmp slt i32 %.087, %230
  %232 = select i1 %231, i32 -942567355, i32 -1541028086
  br label %.backedge

233:                                              ; preds = %14
  %234 = load i32, i32* @x.1, align 4
  %235 = load i32, i32* @y.2, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 -128304323, i32 -93251216
  br label %.backedge

243:                                              ; preds = %14
  %244 = shl nuw i32 1, %.087
  %245 = and i32 %.081, %244
  %246 = icmp ne i32 %245, 0
  store i1 %246, i1* %3, align 1
  %247 = load i32, i32* @x.1, align 4
  %248 = load i32, i32* @y.2, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 1595868349, i32 -93251216
  br label %.backedge

256:                                              ; preds = %14
  %.0..0..0.70 = load volatile i1, i1* %3, align 1
  %257 = select i1 %.0..0..0.70, i32 -825092056, i32 1017786434
  br label %.backedge

258:                                              ; preds = %14
  %259 = add i32 %.075, 10
  %260 = sext i32 %.087 to i64
  %261 = getelementptr inbounds [10 x i32], [10 x i32]* %9, i64 0, i64 %260
  %262 = load i32, i32* %261, align 4
  %263 = add i32 %262, %.077
  br label %.backedge

264:                                              ; preds = %14
  %265 = load i32, i32* @x.1, align 4
  %266 = load i32, i32* @y.2, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 1049651521, i32 415198661
  br label %.backedge

274:                                              ; preds = %14
  %275 = load i32, i32* @x.1, align 4
  %276 = load i32, i32* @y.2, align 4
  %277 = add i32 %275, -1
  %278 = mul i32 %277, %275
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %281, %280
  %283 = select i1 %282, i32 1644164623, i32 415198661
  br label %.backedge

284:                                              ; preds = %14
  br label %.backedge

285:                                              ; preds = %14
  %286 = load i32, i32* @x.1, align 4
  %287 = load i32, i32* @y.2, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 -759708423, i32 -1503552705
  br label %.backedge

295:                                              ; preds = %14
  %296 = add i32 %.087, 1
  %297 = load i32, i32* @x.1, align 4
  %298 = load i32, i32* @y.2, align 4
  %299 = add i32 %297, -1
  %300 = mul i32 %299, %297
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %303, %302
  %305 = select i1 %304, i32 -1479264201, i32 -1503552705
  br label %.backedge

306:                                              ; preds = %14
  br label %.backedge

307:                                              ; preds = %14
  %308 = icmp eq i32 %.073, 1
  %309 = select i1 %308, i32 1150307264, i32 -1992064859
  br label %.backedge

310:                                              ; preds = %14
  %311 = add i32 %.075, -10
  br label %.backedge

312:                                              ; preds = %14
  %313 = load i32, i32* @x.1, align 4
  %314 = load i32, i32* @y.2, align 4
  %315 = add i32 %313, -1
  %316 = mul i32 %315, %313
  %317 = and i32 %316, 1
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %319, %318
  %321 = select i1 %320, i32 2067870587, i32 1013818299
  br label %.backedge

322:                                              ; preds = %14
  %323 = load i32, i32* %8, align 4
  %324 = sub i32 965798614, %.077
  %325 = add i32 %324, %323
  %326 = add i32 %325, -965798614
  %327 = icmp slt i32 %326, 0
  %neg90 = sub i32 965798614, %325
  %328 = select i1 %327, i32 %neg90, i32 %326
  %329 = add i32 %328, %.075
  %330 = icmp sgt i32 %.079, %329
  store i1 %330, i1* %2, align 1
  %331 = load i32, i32* @x.1, align 4
  %332 = load i32, i32* @y.2, align 4
  %333 = add i32 %331, -1
  %334 = mul i32 %333, %331
  %335 = and i32 %334, 1
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %337, %336
  %339 = select i1 %338, i32 352349376, i32 1013818299
  br label %.backedge

340:                                              ; preds = %14
  %.0..0..0.71 = load volatile i1, i1* %2, align 1
  %341 = select i1 %.0..0..0.71, i32 1674256881, i32 355018926
  br label %.backedge

342:                                              ; preds = %14
  br label %.backedge

343:                                              ; preds = %14
  br label %.backedge

344:                                              ; preds = %14
  %345 = load i32, i32* @x.1, align 4
  %346 = load i32, i32* @y.2, align 4
  %347 = add i32 %345, -1
  %348 = mul i32 %347, %345
  %349 = and i32 %348, 1
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %351, %350
  %353 = select i1 %352, i32 1955737423, i32 1120302941
  br label %.backedge

354:                                              ; preds = %14
  %355 = add i32 %.081, 1
  %356 = load i32, i32* @x.1, align 4
  %357 = load i32, i32* @y.2, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 -363213329, i32 1120302941
  br label %.backedge

365:                                              ; preds = %14
  br label %.backedge

366:                                              ; preds = %14
  br label %.backedge

367:                                              ; preds = %14
  %368 = add i32 %.083, 1
  br label %.backedge

369:                                              ; preds = %14
  br label %.backedge

370:                                              ; preds = %14
  %371 = add i32 %.085, 1
  br label %.backedge

372:                                              ; preds = %14
  %373 = load i32, i32* @x.1, align 4
  %374 = load i32, i32* @y.2, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 1991853591, i32 -1457794159
  br label %.backedge

382:                                              ; preds = %14
  %383 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.079)
  %384 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %383, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 0, i32* %1, align 4
  %385 = load i32, i32* @x.1, align 4
  %386 = load i32, i32* @y.2, align 4
  %387 = add i32 %385, -1
  %388 = mul i32 %387, %385
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %391, %390
  %393 = select i1 %392, i32 460927985, i32 -1457794159
  br label %.backedge

394:                                              ; preds = %14
  %.0..0..0.72 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.72

395:                                              ; preds = %14
  br label %.backedge

396:                                              ; preds = %14
  br label %.backedge

397:                                              ; preds = %14
  br label %.backedge

398:                                              ; preds = %14
  %.neg = add i32 %.087, 1
  br label %.backedge

399:                                              ; preds = %14
  %400 = add i32 %.075, -10
  br label %.backedge

401:                                              ; preds = %14
  %402 = load i32, i32* %7, align 4
  %403 = sub i32 %402, %.077
  %404 = call i32 @llvm.abs.i32(i32 %403, i1 true)
  %405 = add i32 %404, %.075
  br label %.backedge

406:                                              ; preds = %14
  br label %.backedge

407:                                              ; preds = %14
  br label %.backedge

408:                                              ; preds = %14
  %409 = add i32 %.087, 1
  br label %.backedge

410:                                              ; preds = %14
  %411 = load i32, i32* %8, align 4
  %412 = sub i32 2116044079, %.077
  %413 = add i32 %412, %411
  %414 = add i32 %413, -2116044079
  %415 = icmp slt i32 %414, 0
  %neg = sub i32 2116044079, %413
  %416 = select i1 %415, i32 %neg, i32 %414
  %417 = add i32 %416, %.075
  br label %.backedge

418:                                              ; preds = %14
  %419 = add i32 %.081, 1
  br label %.backedge

420:                                              ; preds = %14
  %421 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %.079)
  %422 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %421, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s008919417.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #5

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
