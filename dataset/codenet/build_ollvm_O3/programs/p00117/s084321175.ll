; ModuleID = 'build_ollvm/programs/p00117/s084321175.ll'
source_filename = "Project_CodeNet_C++1400/p00117/s084321175.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"struct.std::pair" = type { %"struct.std::pair.0", %"struct.std::pair.0" }
%"struct.std::pair.0" = type { i32, i32 }

$_ZNSt4pairIS_IiiES0_EC2Ev = comdat any

$_ZSt4fillIPiiEvT_S1_RKT0_ = comdat any

$_ZNSt4pairIiiEC2Ev = comdat any

$_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"%d,%d,%d,%d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s084321175.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0
@x.15 = common local_unnamed_addr global i32 0
@y.16 = common local_unnamed_addr global i32 0
@x.17 = common local_unnamed_addr global i32 0
@y.18 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [21 x [21 x i32]], align 16
  %14 = alloca [21 x i32], align 16
  %15 = alloca [21 x i32], align 16
  %16 = alloca [100 x %"struct.std::pair"], align 16
  %17 = alloca i32, align 4
  %18 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 0
  %19 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 100
  store %"struct.std::pair"* %19, %"struct.std::pair"** %6, align 8
  br label %20

20:                                               ; preds = %.backedge, %0
  %.0105 = phi i32 [ undef, %0 ], [ %.0105.be, %.backedge ]
  %.0103 = phi i32 [ undef, %0 ], [ %.0103.be, %.backedge ]
  %.0101 = phi i32 [ undef, %0 ], [ %.0101.be, %.backedge ]
  %.099 = phi i32 [ undef, %0 ], [ %.099.be, %.backedge ]
  %.097 = phi i32 [ undef, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ undef, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ 1710249938, %0 ], [ %.093.be, %.backedge ]
  %.0 = phi %"struct.std::pair"* [ %18, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.093, label %.backedge [
    i32 1710249938, label %21
    i32 1380704839, label %25
    i32 -1204168439, label %27
    i32 -687122387, label %31
    i32 -347857129, label %38
    i32 1521814030, label %48
    i32 -1933477886, label %59
    i32 135062032, label %60
    i32 1273666109, label %62
    i32 -807892738, label %72
    i32 -2140266232, label %84
    i32 1657146586, label %86
    i32 -1640913914, label %96
    i32 -457695851, label %112
    i32 1465499490, label %113
    i32 -2018711233, label %114
    i32 -1301493658, label %115
    i32 -142229641, label %119
    i32 1038475134, label %133
    i32 -1576306660, label %135
    i32 -719921576, label %145
    i32 1167902271, label %155
    i32 -79825883, label %156
    i32 849689396, label %159
    i32 -1463901981, label %169
    i32 1332258835, label %182
    i32 -1949097686, label %183
    i32 -2065015972, label %184
    i32 1451588433, label %188
    i32 -31283902, label %191
    i32 -148867012, label %201
    i32 -1497621073, label %211
    i32 1086357719, label %212
    i32 -972175578, label %215
    i32 -1503053800, label %221
    i32 -1458703592, label %227
    i32 725978902, label %231
    i32 417298359, label %232
    i32 -190203134, label %234
    i32 473528490, label %244
    i32 -870413818, label %256
    i32 -1115381654, label %257
    i32 645528289, label %267
    i32 -589190397, label %279
    i32 -1932859121, label %281
    i32 757730281, label %293
    i32 34086326, label %302
    i32 1946141773, label %312
    i32 1122661062, label %322
    i32 2087665240, label %323
    i32 351463693, label %324
    i32 -1713636250, label %334
    i32 -97751018, label %344
    i32 698570971, label %345
    i32 -742518203, label %346
    i32 950141044, label %356
    i32 -1680891631, label %371
    i32 1732710958, label %372
    i32 1906821903, label %375
    i32 -1098752285, label %385
    i32 1004441326, label %398
    i32 2016842335, label %399
    i32 1573077721, label %401
    i32 1300067336, label %411
    i32 769956, label %424
    i32 -1617317814, label %425
    i32 -1977194793, label %435
    i32 481397586, label %447
    i32 1297211597, label %449
    i32 137544760, label %450
    i32 867826084, label %453
    i32 -2018996812, label %463
    i32 -1781920348, label %477
    i32 2140700096, label %479
    i32 -1996713124, label %485
    i32 1571621543, label %489
    i32 83427921, label %499
    i32 535916525, label %509
    i32 1874629609, label %510
    i32 1002005897, label %512
    i32 -1634957163, label %515
    i32 1564010575, label %518
    i32 -1083641347, label %528
    i32 2024842608, label %548
    i32 1190908843, label %550
    i32 -685799674, label %559
    i32 972259237, label %560
    i32 551799237, label %562
    i32 1188593675, label %563
    i32 -1641019009, label %564
    i32 -2001747910, label %575
    i32 240241634, label %576
    i32 -1395805159, label %577
    i32 -2012167602, label %584
    i32 -1111917042, label %585
    i32 -805345201, label %589
    i32 1418081221, label %590
    i32 47576544, label %593
    i32 -1772649773, label %594
    i32 885492003, label %595
    i32 803765545, label %596
    i32 1838991901, label %602
    i32 -1729851558, label %606
    i32 1223722371, label %610
    i32 619305299, label %611
    i32 473318183, label %612
    i32 -10656391, label %613
  ]

.backedge:                                        ; preds = %20, %613, %612, %611, %610, %606, %602, %596, %595, %594, %593, %590, %589, %585, %584, %577, %576, %575, %563, %562, %560, %559, %550, %548, %528, %518, %515, %512, %510, %509, %499, %489, %485, %479, %477, %463, %453, %450, %449, %447, %435, %425, %424, %411, %401, %399, %398, %385, %375, %372, %371, %356, %346, %345, %344, %334, %324, %323, %322, %312, %302, %293, %281, %279, %267, %257, %256, %244, %234, %232, %231, %227, %221, %215, %212, %211, %201, %191, %188, %184, %183, %182, %169, %159, %156, %155, %145, %135, %133, %119, %115, %114, %113, %112, %96, %86, %84, %72, %62, %60, %59, %48, %38, %31, %27, %25, %21
  %.0105.be = phi i32 [ %.0105, %20 ], [ %.0105, %613 ], [ %.0105, %612 ], [ %.0105, %611 ], [ %.0105, %610 ], [ %.0105, %606 ], [ %.0105, %602 ], [ %.0105, %596 ], [ %.0105, %595 ], [ %.0105, %594 ], [ %.0105, %593 ], [ %.0105, %590 ], [ %.0105, %589 ], [ %.0105, %585 ], [ %.0105, %584 ], [ %.0105, %577 ], [ %.0105, %576 ], [ %.0105, %575 ], [ %.0105, %563 ], [ %.0105, %562 ], [ %.0105, %560 ], [ %.0105, %559 ], [ %.0105, %550 ], [ %.0105, %548 ], [ %.0105, %528 ], [ %.0105, %518 ], [ %.0105, %515 ], [ %.0105, %512 ], [ %.0105, %510 ], [ %.0105, %509 ], [ %.0105, %499 ], [ %.0105, %489 ], [ %.097, %485 ], [ %.0105, %479 ], [ %.0105, %477 ], [ %.0105, %463 ], [ %.0105, %453 ], [ %.0105, %450 ], [ %.0105, %449 ], [ %.0105, %447 ], [ %.0105, %435 ], [ %.0105, %425 ], [ %.0105, %424 ], [ %.0105, %411 ], [ %.0105, %401 ], [ %.0105, %399 ], [ %.0105, %398 ], [ %.0105, %385 ], [ %.0105, %375 ], [ %.0105, %372 ], [ %.0105, %371 ], [ %.0105, %356 ], [ %.0105, %346 ], [ %.0105, %345 ], [ %.0105, %344 ], [ %.0105, %334 ], [ %.0105, %324 ], [ %.0105, %323 ], [ %.0105, %322 ], [ %.0105, %312 ], [ %.0105, %302 ], [ %.0105, %293 ], [ %.0105, %281 ], [ %.0105, %279 ], [ %.0105, %267 ], [ %.0105, %257 ], [ %.0105, %256 ], [ %.0105, %244 ], [ %.0105, %234 ], [ %.0105, %232 ], [ %.0105, %231 ], [ %.097, %227 ], [ %.0105, %221 ], [ %.0105, %215 ], [ %.0105, %212 ], [ %.0105, %211 ], [ %.0105, %201 ], [ %.0105, %191 ], [ %.0105, %188 ], [ %.0105, %184 ], [ %.0105, %183 ], [ %.0105, %182 ], [ %.0105, %169 ], [ %.0105, %159 ], [ %.0105, %156 ], [ %.0105, %155 ], [ %.0105, %145 ], [ %.0105, %135 ], [ %.0105, %133 ], [ %.0105, %119 ], [ %.0105, %115 ], [ %.0105, %114 ], [ %.0105, %113 ], [ %.0105, %112 ], [ %.0105, %96 ], [ %.0105, %86 ], [ %.0105, %84 ], [ %.0105, %72 ], [ %.0105, %62 ], [ %.0105, %60 ], [ %.0105, %59 ], [ %.0105, %48 ], [ %.0105, %38 ], [ %.0105, %31 ], [ %.0105, %27 ], [ %.0105, %25 ], [ %.0105, %21 ]
  %.0103.be = phi i32 [ %.0103, %20 ], [ %.0103, %613 ], [ %.0103, %612 ], [ %.0103, %611 ], [ %.0103, %610 ], [ %.0103, %606 ], [ %.0103, %602 ], [ %601, %596 ], [ %.0103, %595 ], [ %.0103, %594 ], [ %.0103, %593 ], [ %.0103, %590 ], [ %.0103, %589 ], [ %.0103, %585 ], [ %.0103, %584 ], [ %.0103, %577 ], [ %.0103, %576 ], [ %.0103, %575 ], [ %.0103, %563 ], [ %.0103, %562 ], [ %.0103, %560 ], [ %.0103, %559 ], [ %.0103, %550 ], [ %.0103, %548 ], [ %.0103, %528 ], [ %.0103, %518 ], [ %.0103, %515 ], [ %.0103, %512 ], [ %.0103, %510 ], [ %.0103, %509 ], [ %.0103, %499 ], [ %.0103, %489 ], [ %.0103, %485 ], [ %.0103, %479 ], [ %.0103, %477 ], [ %.0103, %463 ], [ %.0103, %453 ], [ %.0103, %450 ], [ %.0103, %449 ], [ %.0103, %447 ], [ %.0103, %435 ], [ %.0103, %425 ], [ %.0103, %424 ], [ %.0103, %411 ], [ %.0103, %401 ], [ %.0103, %399 ], [ %.0103, %398 ], [ %.0103, %385 ], [ %.0103, %375 ], [ %.0103, %372 ], [ %.0103, %371 ], [ %361, %356 ], [ %.0103, %346 ], [ %.0103, %345 ], [ %.0103, %344 ], [ %.0103, %334 ], [ %.0103, %324 ], [ %.0103, %323 ], [ %.0103, %322 ], [ %.0103, %312 ], [ %.0103, %302 ], [ %.0103, %293 ], [ %.0103, %281 ], [ %.0103, %279 ], [ %.0103, %267 ], [ %.0103, %257 ], [ %.0103, %256 ], [ %.0103, %244 ], [ %.0103, %234 ], [ %.0103, %232 ], [ %.0103, %231 ], [ %.0103, %227 ], [ %.0103, %221 ], [ %.0103, %215 ], [ %.0103, %212 ], [ %.0103, %211 ], [ %.0103, %201 ], [ %.0103, %191 ], [ %.0103, %188 ], [ 0, %184 ], [ %.0103, %183 ], [ %.0103, %182 ], [ %.0103, %169 ], [ %.0103, %159 ], [ %.0103, %156 ], [ %.0103, %155 ], [ %.0103, %145 ], [ %.0103, %135 ], [ %.0103, %133 ], [ %.0103, %119 ], [ %.0103, %115 ], [ %.0103, %114 ], [ %.0103, %113 ], [ %.0103, %112 ], [ %.0103, %96 ], [ %.0103, %86 ], [ %.0103, %84 ], [ %.0103, %72 ], [ %.0103, %62 ], [ %.0103, %60 ], [ %.0103, %59 ], [ %.0103, %48 ], [ %.0103, %38 ], [ %.0103, %31 ], [ %.0103, %27 ], [ %.0103, %25 ], [ %.0103, %21 ]
  %.0101.be = phi i32 [ %.0101, %20 ], [ %.0101, %613 ], [ %.0101, %612 ], [ %.0101, %611 ], [ %.0101, %610 ], [ %.0101, %606 ], [ %.0101, %602 ], [ %.0101, %596 ], [ %.0101, %595 ], [ %.0101, %594 ], [ %.0101, %593 ], [ %.0101, %590 ], [ 1000000007, %589 ], [ %.0101, %585 ], [ %.0101, %584 ], [ %.0101, %577 ], [ %.0101, %576 ], [ %.0101, %575 ], [ %.0101, %563 ], [ %.0101, %562 ], [ %.0101, %560 ], [ %.0101, %559 ], [ %.0101, %550 ], [ %.0101, %548 ], [ %.0101, %528 ], [ %.0101, %518 ], [ %.0101, %515 ], [ %.0101, %512 ], [ %.0101, %510 ], [ %.0101, %509 ], [ %.0101, %499 ], [ %.0101, %489 ], [ %488, %485 ], [ %.0101, %479 ], [ %.0101, %477 ], [ %.0101, %463 ], [ %.0101, %453 ], [ %.0101, %450 ], [ 1000000007, %449 ], [ %.0101, %447 ], [ %.0101, %435 ], [ %.0101, %425 ], [ %.0101, %424 ], [ %.0101, %411 ], [ %.0101, %401 ], [ %.0101, %399 ], [ %.0101, %398 ], [ %.0101, %385 ], [ %.0101, %375 ], [ %.0101, %372 ], [ %.0101, %371 ], [ %.0101, %356 ], [ %.0101, %346 ], [ %.0101, %345 ], [ %.0101, %344 ], [ %.0101, %334 ], [ %.0101, %324 ], [ %.0101, %323 ], [ %.0101, %322 ], [ %.0101, %312 ], [ %.0101, %302 ], [ %.0101, %293 ], [ %.0101, %281 ], [ %.0101, %279 ], [ %.0101, %267 ], [ %.0101, %257 ], [ %.0101, %256 ], [ %.0101, %244 ], [ %.0101, %234 ], [ %.0101, %232 ], [ %.0101, %231 ], [ %230, %227 ], [ %.0101, %221 ], [ %.0101, %215 ], [ %.0101, %212 ], [ %.0101, %211 ], [ 1000000007, %201 ], [ %.0101, %191 ], [ %.0101, %188 ], [ %.0101, %184 ], [ %.0101, %183 ], [ %.0101, %182 ], [ %.0101, %169 ], [ %.0101, %159 ], [ %.0101, %156 ], [ %.0101, %155 ], [ %.0101, %145 ], [ %.0101, %135 ], [ %.0101, %133 ], [ %.0101, %119 ], [ %.0101, %115 ], [ %.0101, %114 ], [ %.0101, %113 ], [ %.0101, %112 ], [ %.0101, %96 ], [ %.0101, %86 ], [ %.0101, %84 ], [ %.0101, %72 ], [ %.0101, %62 ], [ %.0101, %60 ], [ %.0101, %59 ], [ %.0101, %48 ], [ %.0101, %38 ], [ %.0101, %31 ], [ %.0101, %27 ], [ %.0101, %25 ], [ %.0101, %21 ]
  %.099.be = phi i32 [ %.099, %20 ], [ %.099, %613 ], [ %.099, %612 ], [ %.099, %611 ], [ %.099, %610 ], [ 1, %606 ], [ %.099, %602 ], [ 1, %596 ], [ %.099, %595 ], [ %.099, %594 ], [ %.099, %593 ], [ %.099, %590 ], [ %.099, %589 ], [ %.099, %585 ], [ 1, %584 ], [ %.099, %577 ], [ %.099, %576 ], [ %.neg, %575 ], [ %.neg107, %563 ], [ %.099, %562 ], [ %.099, %560 ], [ %.099, %559 ], [ %.099, %550 ], [ %.099, %548 ], [ %.099, %528 ], [ %.099, %518 ], [ %.099, %515 ], [ %.099, %512 ], [ %.099, %510 ], [ %.099, %509 ], [ %.099, %499 ], [ %.099, %489 ], [ %.099, %485 ], [ %.099, %479 ], [ %.099, %477 ], [ %.099, %463 ], [ %.099, %453 ], [ %.099, %450 ], [ %.099, %449 ], [ %.099, %447 ], [ %.099, %435 ], [ %.099, %425 ], [ %.099, %424 ], [ 1, %411 ], [ %.099, %401 ], [ %400, %399 ], [ %.099, %398 ], [ %.099, %385 ], [ %.099, %375 ], [ %.099, %372 ], [ %.099, %371 ], [ 1, %356 ], [ %.099, %346 ], [ %.neg110, %345 ], [ %.099, %344 ], [ %.099, %334 ], [ %.099, %324 ], [ %.099, %323 ], [ %.099, %322 ], [ %.099, %312 ], [ %.099, %302 ], [ %.099, %293 ], [ %.099, %281 ], [ %.099, %279 ], [ %.099, %267 ], [ %.099, %257 ], [ %.099, %256 ], [ %.099, %244 ], [ %.099, %234 ], [ %.099, %232 ], [ %.099, %231 ], [ %.099, %227 ], [ %.099, %221 ], [ %.099, %215 ], [ %.099, %212 ], [ %.099, %211 ], [ %.099, %201 ], [ %.099, %191 ], [ %.099, %188 ], [ 1, %184 ], [ %.neg114, %183 ], [ %.099, %182 ], [ %.099, %169 ], [ %.099, %159 ], [ %.099, %156 ], [ %.099, %155 ], [ 1, %145 ], [ %.099, %135 ], [ %134, %133 ], [ %.099, %119 ], [ %.099, %115 ], [ 0, %114 ], [ %.neg116, %113 ], [ %.099, %112 ], [ %.099, %96 ], [ %.099, %86 ], [ %.099, %84 ], [ %.099, %72 ], [ %.099, %62 ], [ 0, %60 ], [ %.099, %59 ], [ %49, %48 ], [ %.099, %38 ], [ %.099, %31 ], [ %.099, %27 ], [ 0, %25 ], [ %.099, %21 ]
  %.097.be = phi i32 [ %.097, %20 ], [ %.097, %613 ], [ %.097, %612 ], [ %.097, %611 ], [ %.097, %610 ], [ %.097, %606 ], [ %.097, %602 ], [ %.097, %596 ], [ %.097, %595 ], [ %.097, %594 ], [ %.097, %593 ], [ %.097, %590 ], [ 1, %589 ], [ %.097, %585 ], [ %.097, %584 ], [ %.097, %577 ], [ %.097, %576 ], [ %.097, %575 ], [ %.097, %563 ], [ %.097, %562 ], [ %.097, %560 ], [ %.097, %559 ], [ %.097, %550 ], [ %.097, %548 ], [ %.097, %528 ], [ %.097, %518 ], [ %.097, %515 ], [ %.097, %512 ], [ %511, %510 ], [ %.097, %509 ], [ %.097, %499 ], [ %.097, %489 ], [ %.097, %485 ], [ %.097, %479 ], [ %.097, %477 ], [ %.097, %463 ], [ %.097, %453 ], [ %.097, %450 ], [ 1, %449 ], [ %.097, %447 ], [ %.097, %435 ], [ %.097, %425 ], [ %.097, %424 ], [ %.097, %411 ], [ %.097, %401 ], [ %.097, %399 ], [ %.097, %398 ], [ %.097, %385 ], [ %.097, %375 ], [ %.097, %372 ], [ %.097, %371 ], [ %.097, %356 ], [ %.097, %346 ], [ %.097, %345 ], [ %.097, %344 ], [ %.097, %334 ], [ %.097, %324 ], [ %.097, %323 ], [ %.097, %322 ], [ %.097, %312 ], [ %.097, %302 ], [ %.097, %293 ], [ %.097, %281 ], [ %.097, %279 ], [ %.097, %267 ], [ %.097, %257 ], [ %.097, %256 ], [ %.097, %244 ], [ %.097, %234 ], [ %233, %232 ], [ %.097, %231 ], [ %.097, %227 ], [ %.097, %221 ], [ %.097, %215 ], [ %.097, %212 ], [ %.097, %211 ], [ 1, %201 ], [ %.097, %191 ], [ %.097, %188 ], [ %.097, %184 ], [ %.097, %183 ], [ %.097, %182 ], [ %.097, %169 ], [ %.097, %159 ], [ %.097, %156 ], [ %.097, %155 ], [ %.097, %145 ], [ %.097, %135 ], [ %.097, %133 ], [ %.097, %119 ], [ %.097, %115 ], [ %.097, %114 ], [ %.097, %113 ], [ %.097, %112 ], [ %.097, %96 ], [ %.097, %86 ], [ %.097, %84 ], [ %.097, %72 ], [ %.097, %62 ], [ %.097, %60 ], [ %.097, %59 ], [ %.097, %48 ], [ %.097, %38 ], [ %.097, %31 ], [ %.097, %27 ], [ %.097, %25 ], [ %.097, %21 ]
  %.095.be = phi i32 [ %.095, %20 ], [ %.095, %613 ], [ %.095, %612 ], [ %.095, %611 ], [ %.095, %610 ], [ %.095, %606 ], [ %.095, %602 ], [ %.095, %596 ], [ %.095, %595 ], [ %.095, %594 ], [ %.095, %593 ], [ 1, %590 ], [ %.095, %589 ], [ %.095, %585 ], [ %.095, %584 ], [ %.095, %577 ], [ %.095, %576 ], [ %.095, %575 ], [ %.095, %563 ], [ %.095, %562 ], [ %561, %560 ], [ %.095, %559 ], [ %.095, %550 ], [ %.095, %548 ], [ %.095, %528 ], [ %.095, %518 ], [ %.095, %515 ], [ 1, %512 ], [ %.095, %510 ], [ %.095, %509 ], [ %.095, %499 ], [ %.095, %489 ], [ %.095, %485 ], [ %.095, %479 ], [ %.095, %477 ], [ %.095, %463 ], [ %.095, %453 ], [ %.095, %450 ], [ %.095, %449 ], [ %.095, %447 ], [ %.095, %435 ], [ %.095, %425 ], [ %.095, %424 ], [ %.095, %411 ], [ %.095, %401 ], [ %.095, %399 ], [ %.095, %398 ], [ %.095, %385 ], [ %.095, %375 ], [ %.095, %372 ], [ %.095, %371 ], [ %.095, %356 ], [ %.095, %346 ], [ %.095, %345 ], [ %.095, %344 ], [ %.095, %334 ], [ %.095, %324 ], [ %.neg111, %323 ], [ %.095, %322 ], [ %.095, %312 ], [ %.095, %302 ], [ %.095, %293 ], [ %.095, %281 ], [ %.095, %279 ], [ %.095, %267 ], [ %.095, %257 ], [ %.095, %256 ], [ 1, %244 ], [ %.095, %234 ], [ %.095, %232 ], [ %.095, %231 ], [ %.095, %227 ], [ %.095, %221 ], [ %.095, %215 ], [ %.095, %212 ], [ %.095, %211 ], [ %.095, %201 ], [ %.095, %191 ], [ %.095, %188 ], [ %.095, %184 ], [ %.095, %183 ], [ %.095, %182 ], [ %.095, %169 ], [ %.095, %159 ], [ %.095, %156 ], [ %.095, %155 ], [ %.095, %145 ], [ %.095, %135 ], [ %.095, %133 ], [ %.095, %119 ], [ %.095, %115 ], [ %.095, %114 ], [ %.095, %113 ], [ %.095, %112 ], [ %.095, %96 ], [ %.095, %86 ], [ %.095, %84 ], [ %.095, %72 ], [ %.095, %62 ], [ %.095, %60 ], [ %.095, %59 ], [ %.095, %48 ], [ %.095, %38 ], [ %.095, %31 ], [ %.095, %27 ], [ %.095, %25 ], [ %.095, %21 ]
  %.093.be = phi i32 [ %.093, %20 ], [ -1083641347, %613 ], [ 83427921, %612 ], [ -2018996812, %611 ], [ -1977194793, %610 ], [ 1300067336, %606 ], [ -1098752285, %602 ], [ 950141044, %596 ], [ -1713636250, %595 ], [ 1946141773, %594 ], [ 645528289, %593 ], [ 473528490, %590 ], [ -148867012, %589 ], [ -1463901981, %585 ], [ -719921576, %584 ], [ -1640913914, %577 ], [ -807892738, %576 ], [ 1521814030, %575 ], [ -1617317814, %563 ], [ 1188593675, %562 ], [ -1634957163, %560 ], [ 972259237, %559 ], [ -685799674, %550 ], [ %549, %548 ], [ %547, %528 ], [ %527, %518 ], [ %517, %515 ], [ -1634957163, %512 ], [ 137544760, %510 ], [ 1874629609, %509 ], [ %508, %499 ], [ %498, %489 ], [ 1571621543, %485 ], [ %484, %479 ], [ %478, %477 ], [ %476, %463 ], [ %462, %453 ], [ %452, %450 ], [ 137544760, %449 ], [ %448, %447 ], [ %446, %435 ], [ %434, %425 ], [ -1617317814, %424 ], [ %423, %411 ], [ %410, %401 ], [ 1732710958, %399 ], [ 2016842335, %398 ], [ %397, %385 ], [ %384, %375 ], [ %374, %372 ], [ 1732710958, %371 ], [ %370, %356 ], [ %355, %346 ], [ 1451588433, %345 ], [ 698570971, %344 ], [ %343, %334 ], [ %333, %324 ], [ -1115381654, %323 ], [ 2087665240, %322 ], [ %321, %312 ], [ %311, %302 ], [ 34086326, %293 ], [ %292, %281 ], [ %280, %279 ], [ %278, %267 ], [ %266, %257 ], [ -1115381654, %256 ], [ %255, %244 ], [ %243, %234 ], [ 1086357719, %232 ], [ 417298359, %231 ], [ 725978902, %227 ], [ %226, %221 ], [ %220, %215 ], [ %214, %212 ], [ 1086357719, %211 ], [ %210, %201 ], [ %200, %191 ], [ %190, %188 ], [ 1451588433, %184 ], [ -79825883, %183 ], [ -1949097686, %182 ], [ %181, %169 ], [ %168, %159 ], [ %158, %156 ], [ -79825883, %155 ], [ %154, %145 ], [ %144, %135 ], [ -1301493658, %133 ], [ 1038475134, %119 ], [ %118, %115 ], [ -1301493658, %114 ], [ 1273666109, %113 ], [ 1465499490, %112 ], [ %111, %96 ], [ %95, %86 ], [ %85, %84 ], [ %83, %72 ], [ %71, %62 ], [ 1273666109, %60 ], [ -1204168439, %59 ], [ %58, %48 ], [ %47, %38 ], [ -347857129, %31 ], [ %30, %27 ], [ -1204168439, %25 ], [ %24, %21 ]
  %.0.be = phi %"struct.std::pair"* [ %.0, %20 ], [ %.0, %613 ], [ %.0, %612 ], [ %.0, %611 ], [ %.0, %610 ], [ %.0, %606 ], [ %.0, %602 ], [ %.0, %596 ], [ %.0, %595 ], [ %.0, %594 ], [ %.0, %593 ], [ %.0, %590 ], [ %.0, %589 ], [ %.0, %585 ], [ %.0, %584 ], [ %.0, %577 ], [ %.0, %576 ], [ %.0, %575 ], [ %.0, %563 ], [ %.0, %562 ], [ %.0, %560 ], [ %.0, %559 ], [ %.0, %550 ], [ %.0, %548 ], [ %.0, %528 ], [ %.0, %518 ], [ %.0, %515 ], [ %.0, %512 ], [ %.0, %510 ], [ %.0, %509 ], [ %.0, %499 ], [ %.0, %489 ], [ %.0, %485 ], [ %.0, %479 ], [ %.0, %477 ], [ %.0, %463 ], [ %.0, %453 ], [ %.0, %450 ], [ %.0, %449 ], [ %.0, %447 ], [ %.0, %435 ], [ %.0, %425 ], [ %.0, %424 ], [ %.0, %411 ], [ %.0, %401 ], [ %.0, %399 ], [ %.0, %398 ], [ %.0, %385 ], [ %.0, %375 ], [ %.0, %372 ], [ %.0, %371 ], [ %.0, %356 ], [ %.0, %346 ], [ %.0, %345 ], [ %.0, %344 ], [ %.0, %334 ], [ %.0, %324 ], [ %.0, %323 ], [ %.0, %322 ], [ %.0, %312 ], [ %.0, %302 ], [ %.0, %293 ], [ %.0, %281 ], [ %.0, %279 ], [ %.0, %267 ], [ %.0, %257 ], [ %.0, %256 ], [ %.0, %244 ], [ %.0, %234 ], [ %.0, %232 ], [ %.0, %231 ], [ %.0, %227 ], [ %.0, %221 ], [ %.0, %215 ], [ %.0, %212 ], [ %.0, %211 ], [ %.0, %201 ], [ %.0, %191 ], [ %.0, %188 ], [ %.0, %184 ], [ %.0, %183 ], [ %.0, %182 ], [ %.0, %169 ], [ %.0, %159 ], [ %.0, %156 ], [ %.0, %155 ], [ %.0, %145 ], [ %.0, %135 ], [ %.0, %133 ], [ %.0, %119 ], [ %.0, %115 ], [ %.0, %114 ], [ %.0, %113 ], [ %.0, %112 ], [ %.0, %96 ], [ %.0, %86 ], [ %.0, %84 ], [ %.0, %72 ], [ %.0, %62 ], [ %.0, %60 ], [ %.0, %59 ], [ %.0, %48 ], [ %.0, %38 ], [ %.0, %31 ], [ %.0, %27 ], [ %.0, %25 ], [ %22, %21 ]
  br label %20

21:                                               ; preds = %20
  call void @_ZNSt4pairIS_IiiES0_EC2Ev(%"struct.std::pair"* %.0)
  %22 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.0, i64 1
  %.0..0..0.87 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %23 = icmp eq %"struct.std::pair"* %22, %.0..0..0.87
  %24 = select i1 %23, i32 1380704839, i32 1710249938
  br label %.backedge

25:                                               ; preds = %20
  %26 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull %7, i32* nonnull %8)
  br label %.backedge

27:                                               ; preds = %20
  %28 = load i32, i32* %8, align 4
  %29 = icmp slt i32 %.099, %28
  %30 = select i1 %29, i32 -687122387, i32 135062032
  br label %.backedge

31:                                               ; preds = %20
  %32 = sext i32 %.099 to i64
  %33 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 %32, i32 0, i32 0
  %34 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 %32, i32 0, i32 1
  %35 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 %32, i32 1, i32 0
  %36 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 %32, i32 1, i32 1
  %37 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %33, i32* nonnull %34, i32* nonnull %35, i32* nonnull %36)
  br label %.backedge

38:                                               ; preds = %20
  %39 = load i32, i32* @x.3, align 4
  %40 = load i32, i32* @y.4, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 1521814030, i32 -2001747910
  br label %.backedge

48:                                               ; preds = %20
  %49 = add i32 %.099, 1
  %50 = load i32, i32* @x.3, align 4
  %51 = load i32, i32* @y.4, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -1933477886, i32 -2001747910
  br label %.backedge

59:                                               ; preds = %20
  br label %.backedge

60:                                               ; preds = %20
  %61 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %9, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12)
  br label %.backedge

62:                                               ; preds = %20
  %63 = load i32, i32* @x.3, align 4
  %64 = load i32, i32* @y.4, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 -807892738, i32 240241634
  br label %.backedge

72:                                               ; preds = %20
  %73 = load i32, i32* %7, align 4
  %74 = icmp sle i32 %.099, %73
  store i1 %74, i1* %5, align 1
  %75 = load i32, i32* @x.3, align 4
  %76 = load i32, i32* @y.4, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 -2140266232, i32 240241634
  br label %.backedge

84:                                               ; preds = %20
  %.0..0..0.88 = load volatile i1, i1* %5, align 1
  %85 = select i1 %.0..0..0.88, i32 1657146586, i32 -2018711233
  br label %.backedge

86:                                               ; preds = %20
  %87 = load i32, i32* @x.3, align 4
  %88 = load i32, i32* @y.4, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 -1640913914, i32 -1395805159
  br label %.backedge

96:                                               ; preds = %20
  %97 = sext i32 %.099 to i64
  %98 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %97, i64 1
  %99 = load i32, i32* %7, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %97, i64 %100
  %102 = getelementptr inbounds i32, i32* %101, i64 1
  store i32 1000000007, i32* %17, align 4
  call void @_ZSt4fillIPiiEvT_S1_RKT0_(i32* nonnull %98, i32* nonnull %102, i32* nonnull dereferenceable(4) %17)
  %103 = load i32, i32* @x.3, align 4
  %104 = load i32, i32* @y.4, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -457695851, i32 -1395805159
  br label %.backedge

112:                                              ; preds = %20
  br label %.backedge

113:                                              ; preds = %20
  %.neg116 = add i32 %.099, 1
  br label %.backedge

114:                                              ; preds = %20
  br label %.backedge

115:                                              ; preds = %20
  %116 = load i32, i32* %8, align 4
  %117 = icmp slt i32 %.099, %116
  %118 = select i1 %117, i32 -142229641, i32 -1576306660
  br label %.backedge

119:                                              ; preds = %20
  %120 = sext i32 %.099 to i64
  %121 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 %120, i32 1, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 %120, i32 0, i32 0
  %124 = load i32, i32* %123, align 16
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 %120, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %125, i64 %128
  store i32 %122, i32* %129, align 4
  %130 = getelementptr inbounds [100 x %"struct.std::pair"], [100 x %"struct.std::pair"]* %16, i64 0, i64 %120, i32 1, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %128, i64 %125
  store i32 %131, i32* %132, align 4
  br label %.backedge

133:                                              ; preds = %20
  %134 = add i32 %.099, 1
  br label %.backedge

135:                                              ; preds = %20
  %136 = load i32, i32* @x.3, align 4
  %137 = load i32, i32* @y.4, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 -719921576, i32 -2012167602
  br label %.backedge

145:                                              ; preds = %20
  %146 = load i32, i32* @x.3, align 4
  %147 = load i32, i32* @y.4, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 1167902271, i32 -2012167602
  br label %.backedge

155:                                              ; preds = %20
  br label %.backedge

156:                                              ; preds = %20
  %157 = load i32, i32* %7, align 4
  %.not115 = icmp sgt i32 %.099, %157
  %158 = select i1 %.not115, i32 -2065015972, i32 849689396
  br label %.backedge

159:                                              ; preds = %20
  %160 = load i32, i32* @x.3, align 4
  %161 = load i32, i32* @y.4, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -1463901981, i32 -1111917042
  br label %.backedge

169:                                              ; preds = %20
  %170 = sext i32 %.099 to i64
  %171 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %170
  store i32 1000000007, i32* %171, align 4
  %172 = getelementptr inbounds [21 x i32], [21 x i32]* %15, i64 0, i64 %170
  store i32 0, i32* %172, align 4
  %173 = load i32, i32* @x.3, align 4
  %174 = load i32, i32* @y.4, align 4
  %175 = add i32 %173, -1
  %176 = mul i32 %175, %173
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %179, %178
  %181 = select i1 %180, i32 1332258835, i32 -1111917042
  br label %.backedge

182:                                              ; preds = %20
  br label %.backedge

183:                                              ; preds = %20
  %.neg114 = add i32 %.099, 1
  br label %.backedge

184:                                              ; preds = %20
  %185 = load i32, i32* %9, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %186
  store i32 0, i32* %187, align 4
  br label %.backedge

188:                                              ; preds = %20
  %189 = load i32, i32* %7, align 4
  %.not113 = icmp sgt i32 %.099, %189
  %190 = select i1 %.not113, i32 -742518203, i32 -31283902
  br label %.backedge

191:                                              ; preds = %20
  %192 = load i32, i32* @x.3, align 4
  %193 = load i32, i32* @y.4, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 -148867012, i32 -805345201
  br label %.backedge

201:                                              ; preds = %20
  %202 = load i32, i32* @x.3, align 4
  %203 = load i32, i32* @y.4, align 4
  %204 = add i32 %202, -1
  %205 = mul i32 %204, %202
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %208, %207
  %210 = select i1 %209, i32 -1497621073, i32 -805345201
  br label %.backedge

211:                                              ; preds = %20
  br label %.backedge

212:                                              ; preds = %20
  %213 = load i32, i32* %7, align 4
  %.not112 = icmp sgt i32 %.097, %213
  %214 = select i1 %.not112, i32 -190203134, i32 -972175578
  br label %.backedge

215:                                              ; preds = %20
  %216 = sext i32 %.097 to i64
  %217 = getelementptr inbounds [21 x i32], [21 x i32]* %15, i64 0, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %218, 0
  %220 = select i1 %219, i32 -1503053800, i32 725978902
  br label %.backedge

221:                                              ; preds = %20
  %222 = sext i32 %.097 to i64
  %223 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = icmp slt i32 %224, %.0101
  %226 = select i1 %225, i32 -1458703592, i32 725978902
  br label %.backedge

227:                                              ; preds = %20
  %228 = sext i32 %.097 to i64
  %229 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %228
  %230 = load i32, i32* %229, align 4
  br label %.backedge

231:                                              ; preds = %20
  br label %.backedge

232:                                              ; preds = %20
  %233 = add i32 %.097, 1
  br label %.backedge

234:                                              ; preds = %20
  %235 = load i32, i32* @x.3, align 4
  %236 = load i32, i32* @y.4, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 473528490, i32 1418081221
  br label %.backedge

244:                                              ; preds = %20
  %245 = sext i32 %.0105 to i64
  %246 = getelementptr inbounds [21 x i32], [21 x i32]* %15, i64 0, i64 %245
  store i32 1, i32* %246, align 4
  %247 = load i32, i32* @x.3, align 4
  %248 = load i32, i32* @y.4, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 -870413818, i32 1418081221
  br label %.backedge

256:                                              ; preds = %20
  br label %.backedge

257:                                              ; preds = %20
  %258 = load i32, i32* @x.3, align 4
  %259 = load i32, i32* @y.4, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 645528289, i32 47576544
  br label %.backedge

267:                                              ; preds = %20
  %268 = load i32, i32* %7, align 4
  %269 = icmp sle i32 %.095, %268
  store i1 %269, i1* %4, align 1
  %270 = load i32, i32* @x.3, align 4
  %271 = load i32, i32* @y.4, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 -589190397, i32 47576544
  br label %.backedge

279:                                              ; preds = %20
  %.0..0..0.89 = load volatile i1, i1* %4, align 1
  %280 = select i1 %.0..0..0.89, i32 -1932859121, i32 351463693
  br label %.backedge

281:                                              ; preds = %20
  %282 = sext i32 %.0105 to i64
  %283 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %282
  %284 = load i32, i32* %283, align 4
  %285 = sext i32 %.095 to i64
  %286 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %282, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = add i32 %287, %284
  %289 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %285
  %290 = load i32, i32* %289, align 4
  %291 = icmp slt i32 %288, %290
  %292 = select i1 %291, i32 757730281, i32 34086326
  br label %.backedge

293:                                              ; preds = %20
  %294 = sext i32 %.0105 to i64
  %295 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = sext i32 %.095 to i64
  %298 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %294, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = add i32 %299, %296
  %301 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %297
  store i32 %300, i32* %301, align 4
  br label %.backedge

302:                                              ; preds = %20
  %303 = load i32, i32* @x.3, align 4
  %304 = load i32, i32* @y.4, align 4
  %305 = add i32 %303, -1
  %306 = mul i32 %305, %303
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %309, %308
  %311 = select i1 %310, i32 1946141773, i32 -1772649773
  br label %.backedge

312:                                              ; preds = %20
  %313 = load i32, i32* @x.3, align 4
  %314 = load i32, i32* @y.4, align 4
  %315 = add i32 %313, -1
  %316 = mul i32 %315, %313
  %317 = and i32 %316, 1
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %319, %318
  %321 = select i1 %320, i32 1122661062, i32 -1772649773
  br label %.backedge

322:                                              ; preds = %20
  br label %.backedge

323:                                              ; preds = %20
  %.neg111 = add i32 %.095, 1
  br label %.backedge

324:                                              ; preds = %20
  %325 = load i32, i32* @x.3, align 4
  %326 = load i32, i32* @y.4, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 -1713636250, i32 885492003
  br label %.backedge

334:                                              ; preds = %20
  %335 = load i32, i32* @x.3, align 4
  %336 = load i32, i32* @y.4, align 4
  %337 = add i32 %335, -1
  %338 = mul i32 %337, %335
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %341, %340
  %343 = select i1 %342, i32 -97751018, i32 885492003
  br label %.backedge

344:                                              ; preds = %20
  br label %.backedge

345:                                              ; preds = %20
  %.neg110 = add i32 %.099, 1
  br label %.backedge

346:                                              ; preds = %20
  %347 = load i32, i32* @x.3, align 4
  %348 = load i32, i32* @y.4, align 4
  %349 = add i32 %347, -1
  %350 = mul i32 %349, %347
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %353, %352
  %355 = select i1 %354, i32 950141044, i32 803765545
  br label %.backedge

356:                                              ; preds = %20
  %357 = load i32, i32* %10, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = add i32 %360, %.0103
  %362 = load i32, i32* @x.3, align 4
  %363 = load i32, i32* @y.4, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 -1680891631, i32 803765545
  br label %.backedge

371:                                              ; preds = %20
  br label %.backedge

372:                                              ; preds = %20
  %373 = load i32, i32* %7, align 4
  %.not109 = icmp sgt i32 %.099, %373
  %374 = select i1 %.not109, i32 1573077721, i32 1906821903
  br label %.backedge

375:                                              ; preds = %20
  %376 = load i32, i32* @x.3, align 4
  %377 = load i32, i32* @y.4, align 4
  %378 = add i32 %376, -1
  %379 = mul i32 %378, %376
  %380 = and i32 %379, 1
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %382, %381
  %384 = select i1 %383, i32 -1098752285, i32 1838991901
  br label %.backedge

385:                                              ; preds = %20
  %386 = sext i32 %.099 to i64
  %387 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %386
  store i32 1000000007, i32* %387, align 4
  %388 = getelementptr inbounds [21 x i32], [21 x i32]* %15, i64 0, i64 %386
  store i32 0, i32* %388, align 4
  %389 = load i32, i32* @x.3, align 4
  %390 = load i32, i32* @y.4, align 4
  %391 = add i32 %389, -1
  %392 = mul i32 %391, %389
  %393 = and i32 %392, 1
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %395, %394
  %397 = select i1 %396, i32 1004441326, i32 1838991901
  br label %.backedge

398:                                              ; preds = %20
  br label %.backedge

399:                                              ; preds = %20
  %400 = add i32 %.099, 1
  br label %.backedge

401:                                              ; preds = %20
  %402 = load i32, i32* @x.3, align 4
  %403 = load i32, i32* @y.4, align 4
  %404 = add i32 %402, -1
  %405 = mul i32 %404, %402
  %406 = and i32 %405, 1
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %408, %407
  %410 = select i1 %409, i32 1300067336, i32 -1729851558
  br label %.backedge

411:                                              ; preds = %20
  %412 = load i32, i32* %10, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %413
  store i32 0, i32* %414, align 4
  %415 = load i32, i32* @x.3, align 4
  %416 = load i32, i32* @y.4, align 4
  %417 = add i32 %415, -1
  %418 = mul i32 %417, %415
  %419 = and i32 %418, 1
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %421, %420
  %423 = select i1 %422, i32 769956, i32 -1729851558
  br label %.backedge

424:                                              ; preds = %20
  br label %.backedge

425:                                              ; preds = %20
  %426 = load i32, i32* @x.3, align 4
  %427 = load i32, i32* @y.4, align 4
  %428 = add i32 %426, -1
  %429 = mul i32 %428, %426
  %430 = and i32 %429, 1
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %432, %431
  %434 = select i1 %433, i32 -1977194793, i32 1223722371
  br label %.backedge

435:                                              ; preds = %20
  %436 = load i32, i32* %7, align 4
  %437 = icmp sle i32 %.099, %436
  store i1 %437, i1* %3, align 1
  %438 = load i32, i32* @x.3, align 4
  %439 = load i32, i32* @y.4, align 4
  %440 = add i32 %438, -1
  %441 = mul i32 %440, %438
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %444, %443
  %446 = select i1 %445, i32 481397586, i32 1223722371
  br label %.backedge

447:                                              ; preds = %20
  %.0..0..0.90 = load volatile i1, i1* %3, align 1
  %448 = select i1 %.0..0..0.90, i32 1297211597, i32 -1641019009
  br label %.backedge

449:                                              ; preds = %20
  br label %.backedge

450:                                              ; preds = %20
  %451 = load i32, i32* %7, align 4
  %.not108 = icmp sgt i32 %.097, %451
  %452 = select i1 %.not108, i32 1002005897, i32 867826084
  br label %.backedge

453:                                              ; preds = %20
  %454 = load i32, i32* @x.3, align 4
  %455 = load i32, i32* @y.4, align 4
  %456 = add i32 %454, -1
  %457 = mul i32 %456, %454
  %458 = and i32 %457, 1
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %460, %459
  %462 = select i1 %461, i32 -2018996812, i32 619305299
  br label %.backedge

463:                                              ; preds = %20
  %464 = sext i32 %.097 to i64
  %465 = getelementptr inbounds [21 x i32], [21 x i32]* %15, i64 0, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = icmp eq i32 %466, 0
  store i1 %467, i1* %2, align 1
  %468 = load i32, i32* @x.3, align 4
  %469 = load i32, i32* @y.4, align 4
  %470 = add i32 %468, -1
  %471 = mul i32 %470, %468
  %472 = and i32 %471, 1
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %474, %473
  %476 = select i1 %475, i32 -1781920348, i32 619305299
  br label %.backedge

477:                                              ; preds = %20
  %.0..0..0.91 = load volatile i1, i1* %2, align 1
  %478 = select i1 %.0..0..0.91, i32 2140700096, i32 1571621543
  br label %.backedge

479:                                              ; preds = %20
  %480 = sext i32 %.097 to i64
  %481 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = icmp slt i32 %482, %.0101
  %484 = select i1 %483, i32 -1996713124, i32 1571621543
  br label %.backedge

485:                                              ; preds = %20
  %486 = sext i32 %.097 to i64
  %487 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  br label %.backedge

489:                                              ; preds = %20
  %490 = load i32, i32* @x.3, align 4
  %491 = load i32, i32* @y.4, align 4
  %492 = add i32 %490, -1
  %493 = mul i32 %492, %490
  %494 = and i32 %493, 1
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %496, %495
  %498 = select i1 %497, i32 83427921, i32 473318183
  br label %.backedge

499:                                              ; preds = %20
  %500 = load i32, i32* @x.3, align 4
  %501 = load i32, i32* @y.4, align 4
  %502 = add i32 %500, -1
  %503 = mul i32 %502, %500
  %504 = and i32 %503, 1
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %501, 10
  %507 = or i1 %506, %505
  %508 = select i1 %507, i32 535916525, i32 473318183
  br label %.backedge

509:                                              ; preds = %20
  br label %.backedge

510:                                              ; preds = %20
  %511 = add i32 %.097, 1
  br label %.backedge

512:                                              ; preds = %20
  %513 = sext i32 %.0105 to i64
  %514 = getelementptr inbounds [21 x i32], [21 x i32]* %15, i64 0, i64 %513
  store i32 1, i32* %514, align 4
  br label %.backedge

515:                                              ; preds = %20
  %516 = load i32, i32* %7, align 4
  %.not = icmp sgt i32 %.095, %516
  %517 = select i1 %.not, i32 551799237, i32 1564010575
  br label %.backedge

518:                                              ; preds = %20
  %519 = load i32, i32* @x.3, align 4
  %520 = load i32, i32* @y.4, align 4
  %521 = add i32 %519, -1
  %522 = mul i32 %521, %519
  %523 = and i32 %522, 1
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %525, %524
  %527 = select i1 %526, i32 -1083641347, i32 -10656391
  br label %.backedge

528:                                              ; preds = %20
  %529 = sext i32 %.0105 to i64
  %530 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %529
  %531 = load i32, i32* %530, align 4
  %532 = sext i32 %.095 to i64
  %533 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %529, i64 %532
  %534 = load i32, i32* %533, align 4
  %535 = add i32 %534, %531
  %536 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %532
  %537 = load i32, i32* %536, align 4
  %538 = icmp slt i32 %535, %537
  store i1 %538, i1* %1, align 1
  %539 = load i32, i32* @x.3, align 4
  %540 = load i32, i32* @y.4, align 4
  %541 = add i32 %539, -1
  %542 = mul i32 %541, %539
  %543 = and i32 %542, 1
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %545, %544
  %547 = select i1 %546, i32 2024842608, i32 -10656391
  br label %.backedge

548:                                              ; preds = %20
  %.0..0..0.92 = load volatile i1, i1* %1, align 1
  %549 = select i1 %.0..0..0.92, i32 1190908843, i32 -685799674
  br label %.backedge

550:                                              ; preds = %20
  %551 = sext i32 %.0105 to i64
  %552 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %551
  %553 = load i32, i32* %552, align 4
  %554 = sext i32 %.095 to i64
  %555 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %551, i64 %554
  %556 = load i32, i32* %555, align 4
  %557 = add i32 %556, %553
  %558 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %554
  store i32 %557, i32* %558, align 4
  br label %.backedge

559:                                              ; preds = %20
  br label %.backedge

560:                                              ; preds = %20
  %561 = add i32 %.095, 1
  br label %.backedge

562:                                              ; preds = %20
  br label %.backedge

563:                                              ; preds = %20
  %.neg107 = add i32 %.099, 1
  br label %.backedge

564:                                              ; preds = %20
  %565 = load i32, i32* %9, align 4
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %566
  %568 = load i32, i32* %567, align 4
  %569 = load i32, i32* %11, align 4
  %570 = load i32, i32* %12, align 4
  %571 = add i32 %568, %.0103
  %572 = add i32 %571, %570
  %573 = sub i32 %569, %572
  %574 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %573)
  ret i32 0

575:                                              ; preds = %20
  %.neg = add i32 %.099, 1
  br label %.backedge

576:                                              ; preds = %20
  br label %.backedge

577:                                              ; preds = %20
  %578 = sext i32 %.099 to i64
  %579 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %578, i64 1
  %580 = load i32, i32* %7, align 4
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* %13, i64 0, i64 %578, i64 %581
  %583 = getelementptr inbounds i32, i32* %582, i64 1
  store i32 1000000007, i32* %17, align 4
  call void @_ZSt4fillIPiiEvT_S1_RKT0_(i32* nonnull %579, i32* nonnull %583, i32* nonnull dereferenceable(4) %17)
  br label %.backedge

584:                                              ; preds = %20
  br label %.backedge

585:                                              ; preds = %20
  %586 = sext i32 %.099 to i64
  %587 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %586
  store i32 1000000007, i32* %587, align 4
  %588 = getelementptr inbounds [21 x i32], [21 x i32]* %15, i64 0, i64 %586
  store i32 0, i32* %588, align 4
  br label %.backedge

589:                                              ; preds = %20
  br label %.backedge

590:                                              ; preds = %20
  %591 = sext i32 %.0105 to i64
  %592 = getelementptr inbounds [21 x i32], [21 x i32]* %15, i64 0, i64 %591
  store i32 1, i32* %592, align 4
  br label %.backedge

593:                                              ; preds = %20
  br label %.backedge

594:                                              ; preds = %20
  br label %.backedge

595:                                              ; preds = %20
  br label %.backedge

596:                                              ; preds = %20
  %597 = load i32, i32* %10, align 4
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %598
  %600 = load i32, i32* %599, align 4
  %601 = add i32 %600, %.0103
  br label %.backedge

602:                                              ; preds = %20
  %603 = sext i32 %.099 to i64
  %604 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %603
  store i32 1000000007, i32* %604, align 4
  %605 = getelementptr inbounds [21 x i32], [21 x i32]* %15, i64 0, i64 %603
  store i32 0, i32* %605, align 4
  br label %.backedge

606:                                              ; preds = %20
  %607 = load i32, i32* %10, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds [21 x i32], [21 x i32]* %14, i64 0, i64 %608
  store i32 0, i32* %609, align 4
  br label %.backedge

610:                                              ; preds = %20
  br label %.backedge

611:                                              ; preds = %20
  br label %.backedge

612:                                              ; preds = %20
  br label %.backedge

613:                                              ; preds = %20
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIS_IiiES0_EC2Ev(%"struct.std::pair"* %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  tail call void @_ZNSt4pairIiiEC2Ev(%"struct.std::pair.0"* %2)
  %3 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1
  tail call void @_ZNSt4pairIiiEC2Ev(%"struct.std::pair.0"* nonnull %3)
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPiiEvT_S1_RKT0_(i32* %0, i32* %1, i32* dereferenceable(4) %2) local_unnamed_addr #0 comdat {
  %4 = tail call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %0)
  %5 = tail call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %1)
  tail call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %4, i32* %5, i32* nonnull dereferenceable(4) %2)
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2Ev(%"struct.std::pair.0"* %0) unnamed_addr #6 comdat align 2 {
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = load i32, i32* @x.9, align 4
  %5 = load i32, i32* @y.10, align 4
  %6 = add i32 %4, -1
  %7 = mul i32 %6, %4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  store i1 %9, i1* %3, align 1
  %10 = icmp slt i32 %5, 10
  store i1 %10, i1* %2, align 1
  %11 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %0, i64 0, i32 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %1
  %.0.ph = phi i32 [ -508833006, %1 ], [ %.0.ph.be, %.outer.backedge ]
  br label %13

13:                                               ; preds = %.outer, %13
  switch i32 %.0.ph, label %13 [
    i32 -508833006, label %14
    i32 1991993316, label %17
    i32 -664724403, label %27
    i32 95028772, label %28
  ]

14:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %.0..0..0.1 = load volatile i1, i1* %2, align 1
  %15 = or i1 %.0..0..0., %.0..0..0.1
  %16 = select i1 %15, i32 1991993316, i32 95028772
  br label %.outer.backedge

17:                                               ; preds = %13
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %18 = load i32, i32* @x.9, align 4
  %19 = load i32, i32* @y.10, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 -664724403, i32 95028772
  br label %.outer.backedge

27:                                               ; preds = %13
  ret void

28:                                               ; preds = %13
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %28, %17, %14
  %.0.ph.be = phi i32 [ %16, %14 ], [ %26, %17 ], [ 1991993316, %28 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %0, i32* %1, i32* dereferenceable(4) %2) local_unnamed_addr #6 comdat {
  %4 = load i32, i32* %2, align 4
  br label %5

5:                                                ; preds = %.backedge, %3
  %.07 = phi i32* [ %0, %3 ], [ %.07.be, %.backedge ]
  %.0 = phi i32 [ 747952597, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 747952597, label %6
    i32 1932118753, label %8
    i32 -1208309052, label %9
    i32 -1392863773, label %19
    i32 92323972, label %30
    i32 -1884247703, label %31
    i32 8509908, label %41
    i32 766938469, label %51
    i32 -215737189, label %52
    i32 2111187452, label %54
  ]

.backedge:                                        ; preds = %5, %54, %52, %41, %31, %30, %19, %9, %8, %6
  %.07.be = phi i32* [ %.07, %5 ], [ %.07, %54 ], [ %53, %52 ], [ %.07, %41 ], [ %.07, %31 ], [ %.07, %30 ], [ %20, %19 ], [ %.07, %9 ], [ %.07, %8 ], [ %.07, %6 ]
  %.0.be = phi i32 [ %.0, %5 ], [ 8509908, %54 ], [ -1392863773, %52 ], [ %50, %41 ], [ %40, %31 ], [ 747952597, %30 ], [ %29, %19 ], [ %18, %9 ], [ -1208309052, %8 ], [ %7, %6 ]
  br label %5

6:                                                ; preds = %5
  %.not = icmp eq i32* %.07, %1
  %7 = select i1 %.not, i32 -1884247703, i32 1932118753
  br label %.backedge

8:                                                ; preds = %5
  store i32 %4, i32* %.07, align 4
  br label %.backedge

9:                                                ; preds = %5
  %10 = load i32, i32* @x.11, align 4
  %11 = load i32, i32* @y.12, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %16, %15
  %18 = select i1 %17, i32 -1392863773, i32 -215737189
  br label %.backedge

19:                                               ; preds = %5
  %20 = getelementptr inbounds i32, i32* %.07, i64 1
  %21 = load i32, i32* @x.11, align 4
  %22 = load i32, i32* @y.12, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 92323972, i32 -215737189
  br label %.backedge

30:                                               ; preds = %5
  br label %.backedge

31:                                               ; preds = %5
  %32 = load i32, i32* @x.11, align 4
  %33 = load i32, i32* @y.12, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 8509908, i32 2111187452
  br label %.backedge

41:                                               ; preds = %5
  %42 = load i32, i32* @x.11, align 4
  %43 = load i32, i32* @y.12, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 766938469, i32 2111187452
  br label %.backedge

51:                                               ; preds = %5
  ret void

52:                                               ; preds = %5
  %53 = getelementptr inbounds i32, i32* %.07, i64 1
  br label %.backedge

54:                                               ; preds = %5
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %0) local_unnamed_addr #0 comdat {
  %2 = alloca i32*, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.13, align 4
  %6 = load i32, i32* @y.14, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  br label %.outer

.outer:                                           ; preds = %16, %1
  %.ph = phi i32* [ %17, %16 ], [ undef, %1 ]
  %.0.ph = phi i32 [ %26, %16 ], [ -1648763046, %1 ]
  br label %.outer3

.outer3:                                          ; preds = %.outer3.backedge, %.outer
  %.0.ph4 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph4.be, %.outer3.backedge ]
  br label %12

12:                                               ; preds = %.outer3, %12
  switch i32 %.0.ph4, label %12 [
    i32 -1648763046, label %13
    i32 869778319, label %16
    i32 -1650393801, label %27
    i32 484271499, label %28
  ]

13:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %14 = or i1 %.0..0..0., %.0..0..0.1
  %15 = select i1 %14, i32 869778319, i32 484271499
  br label %.outer3.backedge

16:                                               ; preds = %12
  %17 = tail call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %0)
  %18 = load i32, i32* @x.13, align 4
  %19 = load i32, i32* @y.14, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 -1650393801, i32 484271499
  br label %.outer

27:                                               ; preds = %12
  store i32* %.ph, i32** %2, align 8
  %.0..0..0.2 = load volatile i32*, i32** %2, align 8
  ret i32* %.0..0..0.2

28:                                               ; preds = %12
  %29 = tail call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %0)
  br label %.outer3.backedge

.outer3.backedge:                                 ; preds = %28, %13
  %.0.ph4.be = phi i32 [ %15, %13 ], [ 869778319, %28 ]
  br label %.outer3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %0) local_unnamed_addr #6 comdat align 2 {
  ret i32* %0
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s084321175.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.17, align 4
  %4 = load i32, i32* @y.18, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -1940478575, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -1940478575, label %11
    i32 -1004341884, label %14
    i32 1711982104, label %24
    i32 -1076331294, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1004341884, i32 -1076331294
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.17, align 4
  %16 = load i32, i32* @y.18, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 1711982104, i32 -1076331294
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -1004341884, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
