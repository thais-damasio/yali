; ModuleID = 'build_ollvm/programs/p00117/s802448216.ll'
source_filename = "Project_CodeNet_C++1400/p00117/s802448216.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = local_unnamed_addr global [20 x [20 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"%d,%d,%d,%d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %4, i32* nonnull %5)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.061 = phi i32 [ 0, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ -239465826, %0 ], [ %.047.be, %.backedge ]
  %.0 = phi i32 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.047, label %.backedge [
    i32 -239465826, label %16
    i32 -1254323638, label %20
    i32 -878611102, label %21
    i32 -740750611, label %31
    i32 -1001526640, label %43
    i32 1709917296, label %45
    i32 194767343, label %49
    i32 174586267, label %51
    i32 -1563080650, label %52
    i32 667208444, label %53
    i32 1508510159, label %54
    i32 -507118891, label %58
    i32 871671046, label %68
    i32 1786978608, label %89
    i32 -1372874075, label %90
    i32 -124520898, label %100
    i32 637304567, label %111
    i32 1025487253, label %112
    i32 -5024059, label %122
    i32 812822492, label %132
    i32 -1950717618, label %133
    i32 1021544131, label %137
    i32 1458391722, label %140
    i32 -1128226048, label %150
    i32 1906799591, label %160
    i32 -311231897, label %161
    i32 974125438, label %162
    i32 1946814439, label %172
    i32 -313999200, label %184
    i32 1370767278, label %186
    i32 1254831449, label %196
    i32 1175488883, label %206
    i32 560801200, label %207
    i32 424177898, label %211
    i32 -1062817188, label %212
    i32 538065847, label %216
    i32 320371268, label %226
    i32 862541290, label %247
    i32 -1545309114, label %249
    i32 636401838, label %254
    i32 1594262930, label %263
    i32 264917624, label %267
    i32 -103397034, label %277
    i32 237307289, label %287
    i32 835509810, label %288
    i32 -1540678795, label %298
    i32 798853126, label %308
    i32 -437047196, label %309
    i32 -734704901, label %311
    i32 1074142423, label %312
    i32 1957346735, label %314
    i32 -235762577, label %331
    i32 1472842493, label %332
    i32 672100836, label %344
    i32 -2117458712, label %346
    i32 -2105624733, label %347
    i32 2110105619, label %349
    i32 1161810464, label %350
    i32 -1614474252, label %351
    i32 -177559936, label %352
    i32 -148843930, label %353
  ]

.backedge:                                        ; preds = %15, %353, %352, %351, %350, %349, %347, %346, %344, %332, %331, %312, %311, %309, %308, %298, %288, %287, %277, %267, %263, %254, %249, %247, %226, %216, %212, %211, %207, %206, %196, %186, %184, %172, %162, %161, %160, %150, %140, %137, %133, %132, %122, %112, %111, %100, %90, %89, %68, %58, %54, %53, %52, %51, %49, %45, %43, %31, %21, %20, %16
  %.061.be = phi i32 [ %.061, %15 ], [ %.061, %353 ], [ %.061, %352 ], [ %.061, %351 ], [ %.061, %350 ], [ %.061, %349 ], [ %.061, %347 ], [ %.061, %346 ], [ %.061, %344 ], [ %.061, %332 ], [ %.061, %331 ], [ %.061, %312 ], [ %.061, %311 ], [ %.061, %309 ], [ %.061, %308 ], [ %.061, %298 ], [ %.061, %288 ], [ %.061, %287 ], [ %.061, %277 ], [ %.061, %267 ], [ %.061, %263 ], [ %.061, %254 ], [ %.061, %249 ], [ %.061, %247 ], [ %.061, %226 ], [ %.061, %216 ], [ %.061, %212 ], [ %.061, %211 ], [ %.061, %207 ], [ %.061, %206 ], [ %.061, %196 ], [ %.061, %186 ], [ %.061, %184 ], [ %.061, %172 ], [ %.061, %162 ], [ %.061, %161 ], [ %.061, %160 ], [ %.061, %150 ], [ %.061, %140 ], [ %.061, %137 ], [ %.061, %133 ], [ %.061, %132 ], [ %.061, %122 ], [ %.061, %112 ], [ %.061, %111 ], [ %.061, %100 ], [ %.061, %90 ], [ %.061, %89 ], [ %.061, %68 ], [ %.061, %58 ], [ %.061, %54 ], [ %.061, %53 ], [ %.neg66, %52 ], [ %.061, %51 ], [ %.061, %49 ], [ %.061, %45 ], [ %.061, %43 ], [ %.061, %31 ], [ %.061, %21 ], [ %.061, %20 ], [ %.061, %16 ]
  %.059.be = phi i32 [ %.059, %15 ], [ %.059, %353 ], [ %.059, %352 ], [ %.059, %351 ], [ %.059, %350 ], [ %.059, %349 ], [ %.059, %347 ], [ %.059, %346 ], [ %.059, %344 ], [ %.059, %332 ], [ %.059, %331 ], [ %.059, %312 ], [ %.059, %311 ], [ %.059, %309 ], [ %.059, %308 ], [ %.059, %298 ], [ %.059, %288 ], [ %.059, %287 ], [ %.059, %277 ], [ %.059, %267 ], [ %.059, %263 ], [ %.059, %254 ], [ %.059, %249 ], [ %.059, %247 ], [ %.059, %226 ], [ %.059, %216 ], [ %.059, %212 ], [ %.059, %211 ], [ %.059, %207 ], [ %.059, %206 ], [ %.059, %196 ], [ %.059, %186 ], [ %.059, %184 ], [ %.059, %172 ], [ %.059, %162 ], [ %.059, %161 ], [ %.059, %160 ], [ %.059, %150 ], [ %.059, %140 ], [ %.059, %137 ], [ %.059, %133 ], [ %.059, %132 ], [ %.059, %122 ], [ %.059, %112 ], [ %.059, %111 ], [ %.059, %100 ], [ %.059, %90 ], [ %.059, %89 ], [ %.059, %68 ], [ %.059, %58 ], [ %.059, %54 ], [ %.059, %53 ], [ %.059, %52 ], [ %.059, %51 ], [ %50, %49 ], [ %.059, %45 ], [ %.059, %43 ], [ %.059, %31 ], [ %.059, %21 ], [ 0, %20 ], [ %.059, %16 ]
  %.057.be = phi i32 [ %.057, %15 ], [ %.057, %353 ], [ %.057, %352 ], [ %.057, %351 ], [ %.057, %350 ], [ %.057, %349 ], [ %.057, %347 ], [ %.057, %346 ], [ %345, %344 ], [ %.057, %332 ], [ %.057, %331 ], [ %.057, %312 ], [ %.057, %311 ], [ %.057, %309 ], [ %.057, %308 ], [ %.057, %298 ], [ %.057, %288 ], [ %.057, %287 ], [ %.057, %277 ], [ %.057, %267 ], [ %.057, %263 ], [ %.057, %254 ], [ %.057, %249 ], [ %.057, %247 ], [ %.057, %226 ], [ %.057, %216 ], [ %.057, %212 ], [ %.057, %211 ], [ %.057, %207 ], [ %.057, %206 ], [ %.057, %196 ], [ %.057, %186 ], [ %.057, %184 ], [ %.057, %172 ], [ %.057, %162 ], [ %.057, %161 ], [ %.057, %160 ], [ %.057, %150 ], [ %.057, %140 ], [ %.057, %137 ], [ %.057, %133 ], [ %.057, %132 ], [ %.057, %122 ], [ %.057, %112 ], [ %.057, %111 ], [ %101, %100 ], [ %.057, %90 ], [ %.057, %89 ], [ %.057, %68 ], [ %.057, %58 ], [ %.057, %54 ], [ 0, %53 ], [ %.057, %52 ], [ %.057, %51 ], [ %.057, %49 ], [ %.057, %45 ], [ %.057, %43 ], [ %.057, %31 ], [ %.057, %21 ], [ %.057, %20 ], [ %.057, %16 ]
  %.055.be = phi i32 [ %.055, %15 ], [ %.055, %353 ], [ %.055, %352 ], [ %.055, %351 ], [ %.055, %350 ], [ %.055, %349 ], [ %348, %347 ], [ 0, %346 ], [ %.055, %344 ], [ %.055, %332 ], [ %.055, %331 ], [ %.055, %312 ], [ %.055, %311 ], [ %.055, %309 ], [ %.055, %308 ], [ %.055, %298 ], [ %.055, %288 ], [ %.055, %287 ], [ %.055, %277 ], [ %.055, %267 ], [ %.055, %263 ], [ %.055, %254 ], [ %.055, %249 ], [ %.055, %247 ], [ %.055, %226 ], [ %.055, %216 ], [ %.055, %212 ], [ %.055, %211 ], [ %.055, %207 ], [ %.055, %206 ], [ %.055, %196 ], [ %.055, %186 ], [ %.055, %184 ], [ %.055, %172 ], [ %.055, %162 ], [ %.055, %161 ], [ %.055, %160 ], [ %.neg65, %150 ], [ %.055, %140 ], [ %.055, %137 ], [ %.055, %133 ], [ %.055, %132 ], [ 0, %122 ], [ %.055, %112 ], [ %.055, %111 ], [ %.055, %100 ], [ %.055, %90 ], [ %.055, %89 ], [ %.055, %68 ], [ %.055, %58 ], [ %.055, %54 ], [ %.055, %53 ], [ %.055, %52 ], [ %.055, %51 ], [ %.055, %49 ], [ %.055, %45 ], [ %.055, %43 ], [ %.055, %31 ], [ %.055, %21 ], [ %.055, %20 ], [ %.055, %16 ]
  %.053.be = phi i32 [ %.053, %15 ], [ %.053, %353 ], [ %.053, %352 ], [ %.053, %351 ], [ %.053, %350 ], [ %.053, %349 ], [ %.053, %347 ], [ %.053, %346 ], [ %.053, %344 ], [ %.053, %332 ], [ %.053, %331 ], [ %313, %312 ], [ %.053, %311 ], [ %.053, %309 ], [ %.053, %308 ], [ %.053, %298 ], [ %.053, %288 ], [ %.053, %287 ], [ %.053, %277 ], [ %.053, %267 ], [ %.053, %263 ], [ %.053, %254 ], [ %.053, %249 ], [ %.053, %247 ], [ %.053, %226 ], [ %.053, %216 ], [ %.053, %212 ], [ %.053, %211 ], [ %.053, %207 ], [ %.053, %206 ], [ %.053, %196 ], [ %.053, %186 ], [ %.053, %184 ], [ %.053, %172 ], [ %.053, %162 ], [ 0, %161 ], [ %.053, %160 ], [ %.053, %150 ], [ %.053, %140 ], [ %.053, %137 ], [ %.053, %133 ], [ %.053, %132 ], [ %.053, %122 ], [ %.053, %112 ], [ %.053, %111 ], [ %.053, %100 ], [ %.053, %90 ], [ %.053, %89 ], [ %.053, %68 ], [ %.053, %58 ], [ %.053, %54 ], [ %.053, %53 ], [ %.053, %52 ], [ %.053, %51 ], [ %.053, %49 ], [ %.053, %45 ], [ %.053, %43 ], [ %.053, %31 ], [ %.053, %21 ], [ %.053, %20 ], [ %.053, %16 ]
  %.051.be = phi i32 [ %.051, %15 ], [ %.051, %353 ], [ %.051, %352 ], [ %.051, %351 ], [ 0, %350 ], [ %.051, %349 ], [ %.051, %347 ], [ %.051, %346 ], [ %.051, %344 ], [ %.051, %332 ], [ %.051, %331 ], [ %.051, %312 ], [ %.051, %311 ], [ %310, %309 ], [ %.051, %308 ], [ %.051, %298 ], [ %.051, %288 ], [ %.051, %287 ], [ %.051, %277 ], [ %.051, %267 ], [ %.051, %263 ], [ %.051, %254 ], [ %.051, %249 ], [ %.051, %247 ], [ %.051, %226 ], [ %.051, %216 ], [ %.051, %212 ], [ %.051, %211 ], [ %.051, %207 ], [ %.051, %206 ], [ 0, %196 ], [ %.051, %186 ], [ %.051, %184 ], [ %.051, %172 ], [ %.051, %162 ], [ %.051, %161 ], [ %.051, %160 ], [ %.051, %150 ], [ %.051, %140 ], [ %.051, %137 ], [ %.051, %133 ], [ %.051, %132 ], [ %.051, %122 ], [ %.051, %112 ], [ %.051, %111 ], [ %.051, %100 ], [ %.051, %90 ], [ %.051, %89 ], [ %.051, %68 ], [ %.051, %58 ], [ %.051, %54 ], [ %.051, %53 ], [ %.051, %52 ], [ %.051, %51 ], [ %.051, %49 ], [ %.051, %45 ], [ %.051, %43 ], [ %.051, %31 ], [ %.051, %21 ], [ %.051, %20 ], [ %.051, %16 ]
  %.049.be = phi i32 [ %.049, %15 ], [ %.049, %353 ], [ %.neg, %352 ], [ %.049, %351 ], [ %.049, %350 ], [ %.049, %349 ], [ %.049, %347 ], [ %.049, %346 ], [ %.049, %344 ], [ %.049, %332 ], [ %.049, %331 ], [ %.049, %312 ], [ %.049, %311 ], [ %.049, %309 ], [ %.049, %308 ], [ %.049, %298 ], [ %.049, %288 ], [ %.049, %287 ], [ %.neg64, %277 ], [ %.049, %267 ], [ %.049, %263 ], [ %.049, %254 ], [ %.049, %249 ], [ %.049, %247 ], [ %.049, %226 ], [ %.049, %216 ], [ %.049, %212 ], [ 0, %211 ], [ %.049, %207 ], [ %.049, %206 ], [ %.049, %196 ], [ %.049, %186 ], [ %.049, %184 ], [ %.049, %172 ], [ %.049, %162 ], [ %.049, %161 ], [ %.049, %160 ], [ %.049, %150 ], [ %.049, %140 ], [ %.049, %137 ], [ %.049, %133 ], [ %.049, %132 ], [ %.049, %122 ], [ %.049, %112 ], [ %.049, %111 ], [ %.049, %100 ], [ %.049, %90 ], [ %.049, %89 ], [ %.049, %68 ], [ %.049, %58 ], [ %.049, %54 ], [ %.049, %53 ], [ %.049, %52 ], [ %.049, %51 ], [ %.049, %49 ], [ %.049, %45 ], [ %.049, %43 ], [ %.049, %31 ], [ %.049, %21 ], [ %.049, %20 ], [ %.049, %16 ]
  %.047.be = phi i32 [ %.047, %15 ], [ -1540678795, %353 ], [ -103397034, %352 ], [ 320371268, %351 ], [ 1254831449, %350 ], [ 1946814439, %349 ], [ -1128226048, %347 ], [ -5024059, %346 ], [ -124520898, %344 ], [ 871671046, %332 ], [ -740750611, %331 ], [ 974125438, %312 ], [ 1074142423, %311 ], [ 560801200, %309 ], [ -437047196, %308 ], [ %307, %298 ], [ %297, %288 ], [ -1062817188, %287 ], [ %286, %277 ], [ %276, %267 ], [ 264917624, %263 ], [ 1594262930, %254 ], [ 1594262930, %249 ], [ %248, %247 ], [ %246, %226 ], [ %225, %216 ], [ %215, %212 ], [ -1062817188, %211 ], [ %210, %207 ], [ 560801200, %206 ], [ %205, %196 ], [ %195, %186 ], [ %185, %184 ], [ %183, %172 ], [ %171, %162 ], [ 974125438, %161 ], [ -1950717618, %160 ], [ %159, %150 ], [ %149, %140 ], [ 1458391722, %137 ], [ %136, %133 ], [ -1950717618, %132 ], [ %131, %122 ], [ %121, %112 ], [ 1508510159, %111 ], [ %110, %100 ], [ %99, %90 ], [ -1372874075, %89 ], [ %88, %68 ], [ %67, %58 ], [ %57, %54 ], [ 1508510159, %53 ], [ -239465826, %52 ], [ -1563080650, %51 ], [ -878611102, %49 ], [ 194767343, %45 ], [ %44, %43 ], [ %42, %31 ], [ %30, %21 ], [ -878611102, %20 ], [ %19, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ %.0, %353 ], [ %.0, %352 ], [ %.0, %351 ], [ %.0, %350 ], [ %.0, %349 ], [ %.0, %347 ], [ %.0, %346 ], [ %.0, %344 ], [ %.0, %332 ], [ %.0, %331 ], [ %.0, %312 ], [ %.0, %311 ], [ %.0, %309 ], [ %.0, %308 ], [ %.0, %298 ], [ %.0, %288 ], [ %.0, %287 ], [ %.0, %277 ], [ %.0, %267 ], [ %.0, %263 ], [ %262, %254 ], [ %253, %249 ], [ %.0, %247 ], [ %.0, %226 ], [ %.0, %216 ], [ %.0, %212 ], [ %.0, %211 ], [ %.0, %207 ], [ %.0, %206 ], [ %.0, %196 ], [ %.0, %186 ], [ %.0, %184 ], [ %.0, %172 ], [ %.0, %162 ], [ %.0, %161 ], [ %.0, %160 ], [ %.0, %150 ], [ %.0, %140 ], [ %.0, %137 ], [ %.0, %133 ], [ %.0, %132 ], [ %.0, %122 ], [ %.0, %112 ], [ %.0, %111 ], [ %.0, %100 ], [ %.0, %90 ], [ %.0, %89 ], [ %.0, %68 ], [ %.0, %58 ], [ %.0, %54 ], [ %.0, %53 ], [ %.0, %52 ], [ %.0, %51 ], [ %.0, %49 ], [ %.0, %45 ], [ %.0, %43 ], [ %.0, %31 ], [ %.0, %21 ], [ %.0, %20 ], [ %.0, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %.061, %17
  %19 = select i1 %18, i32 -1254323638, i32 667208444
  br label %.backedge

20:                                               ; preds = %15
  br label %.backedge

21:                                               ; preds = %15
  %22 = load i32, i32* @x, align 4
  %23 = load i32, i32* @y, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 -740750611, i32 -235762577
  br label %.backedge

31:                                               ; preds = %15
  %32 = load i32, i32* %4, align 4
  %33 = icmp slt i32 %.059, %32
  store i1 %33, i1* %3, align 1
  %34 = load i32, i32* @x, align 4
  %35 = load i32, i32* @y, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 -1001526640, i32 -235762577
  br label %.backedge

43:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %44 = select i1 %.0..0..0., i32 1709917296, i32 174586267
  br label %.backedge

45:                                               ; preds = %15
  %46 = sext i32 %.061 to i64
  %47 = sext i32 %.059 to i64
  %48 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %46, i64 %47
  store i32 1048576, i32* %48, align 4
  br label %.backedge

49:                                               ; preds = %15
  %50 = add i32 %.059, 1
  br label %.backedge

51:                                               ; preds = %15
  br label %.backedge

52:                                               ; preds = %15
  %.neg66 = add i32 %.061, 1
  br label %.backedge

53:                                               ; preds = %15
  br label %.backedge

54:                                               ; preds = %15
  %55 = load i32, i32* %5, align 4
  %56 = icmp slt i32 %.057, %55
  %57 = select i1 %56, i32 -507118891, i32 1025487253
  br label %.backedge

58:                                               ; preds = %15
  %59 = load i32, i32* @x, align 4
  %60 = load i32, i32* @y, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 871671046, i32 1472842493
  br label %.backedge

68:                                               ; preds = %15
  %69 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7, i32* nonnull %8, i32* nonnull %9)
  %70 = load i32, i32* %6, align 4
  %71 = add i32 %70, -1
  store i32 %71, i32* %6, align 4
  %72 = load i32, i32* %7, align 4
  %73 = add i32 %72, -1
  store i32 %73, i32* %7, align 4
  %74 = load i32, i32* %8, align 4
  %75 = sext i32 %71 to i64
  %76 = sext i32 %73 to i64
  %77 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %75, i64 %76
  store i32 %74, i32* %77, align 4
  %78 = load i32, i32* %9, align 4
  %79 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %76, i64 %75
  store i32 %78, i32* %79, align 4
  %80 = load i32, i32* @x, align 4
  %81 = load i32, i32* @y, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 1786978608, i32 1472842493
  br label %.backedge

89:                                               ; preds = %15
  br label %.backedge

90:                                               ; preds = %15
  %91 = load i32, i32* @x, align 4
  %92 = load i32, i32* @y, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -124520898, i32 672100836
  br label %.backedge

100:                                              ; preds = %15
  %101 = add i32 %.057, 1
  %102 = load i32, i32* @x, align 4
  %103 = load i32, i32* @y, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 637304567, i32 672100836
  br label %.backedge

111:                                              ; preds = %15
  br label %.backedge

112:                                              ; preds = %15
  %113 = load i32, i32* @x, align 4
  %114 = load i32, i32* @y, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 -5024059, i32 -2117458712
  br label %.backedge

122:                                              ; preds = %15
  %123 = load i32, i32* @x, align 4
  %124 = load i32, i32* @y, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 812822492, i32 -2117458712
  br label %.backedge

132:                                              ; preds = %15
  br label %.backedge

133:                                              ; preds = %15
  %134 = load i32, i32* %4, align 4
  %135 = icmp slt i32 %.055, %134
  %136 = select i1 %135, i32 1021544131, i32 -311231897
  br label %.backedge

137:                                              ; preds = %15
  %138 = sext i32 %.055 to i64
  %139 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %138, i64 %138
  store i32 0, i32* %139, align 4
  br label %.backedge

140:                                              ; preds = %15
  %141 = load i32, i32* @x, align 4
  %142 = load i32, i32* @y, align 4
  %143 = add i32 %141, -1
  %144 = mul i32 %143, %141
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %147, %146
  %149 = select i1 %148, i32 -1128226048, i32 -2105624733
  br label %.backedge

150:                                              ; preds = %15
  %.neg65 = add i32 %.055, 1
  %151 = load i32, i32* @x, align 4
  %152 = load i32, i32* @y, align 4
  %153 = add i32 %151, -1
  %154 = mul i32 %153, %151
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %157, %156
  %159 = select i1 %158, i32 1906799591, i32 -2105624733
  br label %.backedge

160:                                              ; preds = %15
  br label %.backedge

161:                                              ; preds = %15
  br label %.backedge

162:                                              ; preds = %15
  %163 = load i32, i32* @x, align 4
  %164 = load i32, i32* @y, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 1946814439, i32 2110105619
  br label %.backedge

172:                                              ; preds = %15
  %173 = load i32, i32* %4, align 4
  %174 = icmp slt i32 %.053, %173
  store i1 %174, i1* %2, align 1
  %175 = load i32, i32* @x, align 4
  %176 = load i32, i32* @y, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 -313999200, i32 2110105619
  br label %.backedge

184:                                              ; preds = %15
  %.0..0..0.45 = load volatile i1, i1* %2, align 1
  %185 = select i1 %.0..0..0.45, i32 1370767278, i32 1957346735
  br label %.backedge

186:                                              ; preds = %15
  %187 = load i32, i32* @x, align 4
  %188 = load i32, i32* @y, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 1254831449, i32 1161810464
  br label %.backedge

196:                                              ; preds = %15
  %197 = load i32, i32* @x, align 4
  %198 = load i32, i32* @y, align 4
  %199 = add i32 %197, -1
  %200 = mul i32 %199, %197
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %203, %202
  %205 = select i1 %204, i32 1175488883, i32 1161810464
  br label %.backedge

206:                                              ; preds = %15
  br label %.backedge

207:                                              ; preds = %15
  %208 = load i32, i32* %4, align 4
  %209 = icmp slt i32 %.051, %208
  %210 = select i1 %209, i32 424177898, i32 -734704901
  br label %.backedge

211:                                              ; preds = %15
  br label %.backedge

212:                                              ; preds = %15
  %213 = load i32, i32* %4, align 4
  %214 = icmp slt i32 %.049, %213
  %215 = select i1 %214, i32 538065847, i32 835509810
  br label %.backedge

216:                                              ; preds = %15
  %217 = load i32, i32* @x, align 4
  %218 = load i32, i32* @y, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 320371268, i32 -1614474252
  br label %.backedge

226:                                              ; preds = %15
  %227 = sext i32 %.051 to i64
  %228 = sext i32 %.049 to i64
  %229 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %227, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = sext i32 %.053 to i64
  %232 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %227, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %231, i64 %228
  %235 = load i32, i32* %234, align 4
  %236 = add i32 %235, %233
  %237 = icmp slt i32 %230, %236
  store i1 %237, i1* %1, align 1
  %238 = load i32, i32* @x, align 4
  %239 = load i32, i32* @y, align 4
  %240 = add i32 %238, -1
  %241 = mul i32 %240, %238
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %244, %243
  %246 = select i1 %245, i32 862541290, i32 -1614474252
  br label %.backedge

247:                                              ; preds = %15
  %.0..0..0.46 = load volatile i1, i1* %1, align 1
  %248 = select i1 %.0..0..0.46, i32 -1545309114, i32 636401838
  br label %.backedge

249:                                              ; preds = %15
  %250 = sext i32 %.051 to i64
  %251 = sext i32 %.049 to i64
  %252 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %250, i64 %251
  %253 = load i32, i32* %252, align 4
  br label %.backedge

254:                                              ; preds = %15
  %255 = sext i32 %.051 to i64
  %256 = sext i32 %.053 to i64
  %257 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %255, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = sext i32 %.049 to i64
  %260 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %256, i64 %259
  %261 = load i32, i32* %260, align 4
  %262 = add i32 %261, %258
  br label %.backedge

263:                                              ; preds = %15
  %264 = sext i32 %.051 to i64
  %265 = sext i32 %.049 to i64
  %266 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %264, i64 %265
  store i32 %.0, i32* %266, align 4
  br label %.backedge

267:                                              ; preds = %15
  %268 = load i32, i32* @x, align 4
  %269 = load i32, i32* @y, align 4
  %270 = add i32 %268, -1
  %271 = mul i32 %270, %268
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %274, %273
  %276 = select i1 %275, i32 -103397034, i32 -177559936
  br label %.backedge

277:                                              ; preds = %15
  %.neg64 = add i32 %.049, 1
  %278 = load i32, i32* @x, align 4
  %279 = load i32, i32* @y, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 237307289, i32 -177559936
  br label %.backedge

287:                                              ; preds = %15
  br label %.backedge

288:                                              ; preds = %15
  %289 = load i32, i32* @x, align 4
  %290 = load i32, i32* @y, align 4
  %291 = add i32 %289, -1
  %292 = mul i32 %291, %289
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %295, %294
  %297 = select i1 %296, i32 -1540678795, i32 -148843930
  br label %.backedge

298:                                              ; preds = %15
  %299 = load i32, i32* @x, align 4
  %300 = load i32, i32* @y, align 4
  %301 = add i32 %299, -1
  %302 = mul i32 %301, %299
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %305, %304
  %307 = select i1 %306, i32 798853126, i32 -148843930
  br label %.backedge

308:                                              ; preds = %15
  br label %.backedge

309:                                              ; preds = %15
  %310 = add i32 %.051, 1
  br label %.backedge

311:                                              ; preds = %15
  br label %.backedge

312:                                              ; preds = %15
  %313 = add i32 %.053, 1
  br label %.backedge

314:                                              ; preds = %15
  %315 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %10, i32* nonnull %11, i32* nonnull %12, i32* nonnull %13)
  %316 = load i32, i32* %10, align 4
  %317 = add i32 %316, -1
  store i32 %317, i32* %10, align 4
  %318 = load i32, i32* %11, align 4
  %.neg63 = add i32 %318, -1
  store i32 %.neg63, i32* %11, align 4
  %319 = load i32, i32* %12, align 4
  %320 = load i32, i32* %13, align 4
  %321 = sext i32 %317 to i64
  %322 = sext i32 %.neg63 to i64
  %323 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %321, i64 %322
  %324 = load i32, i32* %323, align 4
  %325 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %322, i64 %321
  %326 = load i32, i32* %325, align 4
  %327 = add i32 %320, %324
  %328 = add i32 %327, %326
  %329 = sub i32 %319, %328
  %330 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %329)
  ret i32 0

331:                                              ; preds = %15
  br label %.backedge

332:                                              ; preds = %15
  %333 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7, i32* nonnull %8, i32* nonnull %9)
  %334 = load i32, i32* %6, align 4
  %335 = add i32 %334, -1
  store i32 %335, i32* %6, align 4
  %336 = load i32, i32* %7, align 4
  %337 = add i32 %336, -1
  store i32 %337, i32* %7, align 4
  %338 = load i32, i32* %8, align 4
  %339 = sext i32 %335 to i64
  %340 = sext i32 %337 to i64
  %341 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %339, i64 %340
  store i32 %338, i32* %341, align 4
  %342 = load i32, i32* %9, align 4
  %343 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @g, i64 0, i64 %340, i64 %339
  store i32 %342, i32* %343, align 4
  br label %.backedge

344:                                              ; preds = %15
  %345 = add i32 %.057, 1
  br label %.backedge

346:                                              ; preds = %15
  br label %.backedge

347:                                              ; preds = %15
  %348 = add i32 %.055, 1
  br label %.backedge

349:                                              ; preds = %15
  br label %.backedge

350:                                              ; preds = %15
  br label %.backedge

351:                                              ; preds = %15
  br label %.backedge

352:                                              ; preds = %15
  %.neg = add i32 %.049, 1
  br label %.backedge

353:                                              ; preds = %15
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
