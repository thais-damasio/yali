; ModuleID = 'build_ollvm/programs/p00117/s943256765.ll'
source_filename = "Project_CodeNet_C++1400/p00117/s943256765.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@go = local_unnamed_addr global [32 x [32 x i32]] zeroinitializer, align 16
@dict = global [32 x i32] zeroinitializer, align 16
@node = local_unnamed_addr global [32 x i8] zeroinitializer, align 16
@cn1 = global i8 0, align 1
@cn2 = global i8 0, align 1
@cn3 = global i8 0, align 1
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s943256765.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %8)
  %20 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %19, i32* nonnull dereferenceable(4) %7)
  br label %21

21:                                               ; preds = %.backedge, %0
  %.090 = phi i32 [ 0, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.0 = phi i32 [ 295539734, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 295539734, label %22
    i32 -988345526, label %32
    i32 -712737318, label %44
    i32 1638460436, label %46
    i32 -1539008954, label %56
    i32 97117452, label %69
    i32 332934138, label %70
    i32 -385156805, label %80
    i32 -2031112468, label %92
    i32 -1584200281, label %94
    i32 422576573, label %104
    i32 -1707421493, label %117
    i32 9367200, label %118
    i32 -1973392722, label %120
    i32 801074041, label %121
    i32 1114682298, label %123
    i32 -1862058444, label %124
    i32 961047623, label %128
    i32 134413104, label %146
    i32 -1304289169, label %148
    i32 521148134, label %163
    i32 744175899, label %164
    i32 1424561798, label %168
    i32 -2022890160, label %174
    i32 1029024423, label %184
    i32 -822931155, label %195
    i32 -1796905889, label %197
    i32 -1713612433, label %206
    i32 939089770, label %216
    i32 1468167451, label %226
    i32 1262492346, label %227
    i32 1158497865, label %237
    i32 -1743292297, label %247
    i32 -552023653, label %248
    i32 -1204672951, label %258
    i32 1774221835, label %268
    i32 137637822, label %269
    i32 -457106277, label %272
    i32 -1179014960, label %273
    i32 1473214695, label %276
    i32 8888813, label %286
    i32 -1672851694, label %298
    i32 -1756913740, label %300
    i32 -541572199, label %311
    i32 -601469646, label %321
    i32 -948802899, label %331
    i32 -1504486586, label %332
    i32 272868770, label %333
    i32 474117354, label %341
    i32 1284090571, label %345
    i32 -1365623732, label %349
    i32 835289170, label %351
    i32 1298216755, label %356
    i32 815625069, label %357
    i32 -1835713061, label %361
    i32 701311727, label %367
    i32 638556177, label %377
    i32 -751377588, label %388
    i32 178606593, label %390
    i32 -1426566523, label %400
    i32 -137395131, label %417
    i32 -443362279, label %419
    i32 2061791506, label %420
    i32 1417935747, label %430
    i32 -547807683, label %440
    i32 1410997449, label %441
    i32 -44768110, label %443
    i32 -1951101689, label %446
    i32 -478809755, label %456
    i32 77123631, label %466
    i32 -1370554405, label %467
    i32 -1975099704, label %470
    i32 -1504455850, label %474
    i32 1095206382, label %484
    i32 -71347501, label %504
    i32 426128393, label %505
    i32 1553355508, label %507
    i32 1125227512, label %508
    i32 282913868, label %518
    i32 195781042, label %519
    i32 -66522635, label %523
    i32 -1290292125, label %524
    i32 549197851, label %528
    i32 -2119435585, label %529
    i32 654570982, label %530
    i32 -1181835959, label %531
    i32 -1283671041, label %533
    i32 -2070246388, label %534
    i32 -771357538, label %536
    i32 1361143194, label %537
    i32 -293304090, label %538
    i32 538811279, label %539
    i32 -1417901467, label %540
  ]

.backedge:                                        ; preds = %21, %540, %539, %538, %537, %536, %534, %533, %531, %530, %529, %528, %524, %523, %519, %518, %507, %505, %504, %484, %474, %470, %467, %466, %456, %446, %443, %441, %440, %430, %420, %419, %417, %400, %390, %388, %377, %367, %361, %357, %356, %351, %349, %345, %341, %333, %332, %331, %321, %311, %300, %298, %286, %276, %273, %272, %269, %268, %258, %248, %247, %237, %227, %226, %216, %206, %197, %195, %184, %174, %168, %164, %163, %148, %146, %128, %124, %123, %121, %120, %118, %117, %104, %94, %92, %80, %70, %69, %56, %46, %44, %32, %22
  %.090.be = phi i32 [ %.090, %21 ], [ %.090, %540 ], [ %.090, %539 ], [ %.090, %538 ], [ %.090, %537 ], [ %.090, %536 ], [ %.090, %534 ], [ %.090, %533 ], [ %.090, %531 ], [ %.090, %530 ], [ %.090, %529 ], [ %.090, %528 ], [ %.090, %524 ], [ %.090, %523 ], [ %.090, %519 ], [ %.090, %518 ], [ %.090, %507 ], [ %.090, %505 ], [ %.090, %504 ], [ %.090, %484 ], [ %.090, %474 ], [ %.090, %470 ], [ %.090, %467 ], [ %.090, %466 ], [ %.090, %456 ], [ %.090, %446 ], [ %.090, %443 ], [ %.090, %441 ], [ %.090, %440 ], [ %.090, %430 ], [ %.090, %420 ], [ %.090, %419 ], [ %.090, %417 ], [ %.090, %400 ], [ %.090, %390 ], [ %.090, %388 ], [ %.090, %377 ], [ %.090, %367 ], [ %.090, %361 ], [ %.090, %357 ], [ %.090, %356 ], [ %.090, %351 ], [ %.090, %349 ], [ %.090, %345 ], [ %.090, %341 ], [ %.090, %333 ], [ %.090, %332 ], [ %.090, %331 ], [ %.090, %321 ], [ %.090, %311 ], [ %.090, %300 ], [ %.090, %298 ], [ %.090, %286 ], [ %.090, %276 ], [ %.090, %273 ], [ %.090, %272 ], [ %.090, %269 ], [ %.090, %268 ], [ %.090, %258 ], [ %.090, %248 ], [ %.090, %247 ], [ %.090, %237 ], [ %.090, %227 ], [ %.090, %226 ], [ %.090, %216 ], [ %.090, %206 ], [ %.090, %197 ], [ %.090, %195 ], [ %.090, %184 ], [ %.090, %174 ], [ %.090, %168 ], [ %.090, %164 ], [ %.090, %163 ], [ %.090, %148 ], [ %.090, %146 ], [ %.090, %128 ], [ %.090, %124 ], [ %.090, %123 ], [ %122, %121 ], [ %.090, %120 ], [ %.090, %118 ], [ %.090, %117 ], [ %.090, %104 ], [ %.090, %94 ], [ %.090, %92 ], [ %.090, %80 ], [ %.090, %70 ], [ %.090, %69 ], [ %.090, %56 ], [ %.090, %46 ], [ %.090, %44 ], [ %.090, %32 ], [ %.090, %22 ]
  %.088.be = phi i32 [ %.088, %21 ], [ %.088, %540 ], [ %.088, %539 ], [ %.088, %538 ], [ %.088, %537 ], [ %.088, %536 ], [ %.088, %534 ], [ %.088, %533 ], [ %.088, %531 ], [ %.088, %530 ], [ %.088, %529 ], [ %.088, %528 ], [ %.088, %524 ], [ %.088, %523 ], [ 0, %519 ], [ %.088, %518 ], [ %.088, %507 ], [ %.088, %505 ], [ %.088, %504 ], [ %.088, %484 ], [ %.088, %474 ], [ %.088, %470 ], [ %.088, %467 ], [ %.088, %466 ], [ %.088, %456 ], [ %.088, %446 ], [ %.088, %443 ], [ %.088, %441 ], [ %.088, %440 ], [ %.088, %430 ], [ %.088, %420 ], [ %.088, %419 ], [ %.088, %417 ], [ %.088, %400 ], [ %.088, %390 ], [ %.088, %388 ], [ %.088, %377 ], [ %.088, %367 ], [ %.088, %361 ], [ %.088, %357 ], [ %.088, %356 ], [ %.088, %351 ], [ %.088, %349 ], [ %.088, %345 ], [ %.088, %341 ], [ %.088, %333 ], [ %.088, %332 ], [ %.088, %331 ], [ %.088, %321 ], [ %.088, %311 ], [ %.088, %300 ], [ %.088, %298 ], [ %.088, %286 ], [ %.088, %276 ], [ %.088, %273 ], [ %.088, %272 ], [ %.088, %269 ], [ %.088, %268 ], [ %.088, %258 ], [ %.088, %248 ], [ %.088, %247 ], [ %.088, %237 ], [ %.088, %227 ], [ %.088, %226 ], [ %.088, %216 ], [ %.088, %206 ], [ %.088, %197 ], [ %.088, %195 ], [ %.088, %184 ], [ %.088, %174 ], [ %.088, %168 ], [ %.088, %164 ], [ %.088, %163 ], [ %.088, %148 ], [ %.088, %146 ], [ %.088, %128 ], [ %.088, %124 ], [ %.088, %123 ], [ %.088, %121 ], [ %.088, %120 ], [ %119, %118 ], [ %.088, %117 ], [ %.088, %104 ], [ %.088, %94 ], [ %.088, %92 ], [ %.088, %80 ], [ %.088, %70 ], [ %.088, %69 ], [ 0, %56 ], [ %.088, %46 ], [ %.088, %44 ], [ %.088, %32 ], [ %.088, %22 ]
  %.086.be = phi i32 [ %.086, %21 ], [ %.086, %540 ], [ %.086, %539 ], [ %.086, %538 ], [ %.086, %537 ], [ %.086, %536 ], [ %.086, %534 ], [ %.086, %533 ], [ %.086, %531 ], [ %.086, %530 ], [ %.086, %529 ], [ %.086, %528 ], [ %.086, %524 ], [ %.086, %523 ], [ %.086, %519 ], [ %.086, %518 ], [ %.086, %507 ], [ %.086, %505 ], [ %.086, %504 ], [ %.086, %484 ], [ %.086, %474 ], [ %.086, %470 ], [ %.086, %467 ], [ %.086, %466 ], [ %.086, %456 ], [ %.086, %446 ], [ %.086, %443 ], [ %.086, %441 ], [ %.086, %440 ], [ %.086, %430 ], [ %.086, %420 ], [ %.086, %419 ], [ %.086, %417 ], [ %.086, %400 ], [ %.086, %390 ], [ %.086, %388 ], [ %.086, %377 ], [ %.086, %367 ], [ %.086, %361 ], [ %.086, %357 ], [ %.086, %356 ], [ %.086, %351 ], [ %.086, %349 ], [ %.086, %345 ], [ %.086, %341 ], [ %.086, %333 ], [ %.086, %332 ], [ %.086, %331 ], [ %.086, %321 ], [ %.086, %311 ], [ %.086, %300 ], [ %.086, %298 ], [ %.086, %286 ], [ %.086, %276 ], [ %.086, %273 ], [ %.086, %272 ], [ %.086, %269 ], [ %.086, %268 ], [ %.086, %258 ], [ %.086, %248 ], [ %.086, %247 ], [ %.086, %237 ], [ %.086, %227 ], [ %.086, %226 ], [ %.086, %216 ], [ %.086, %206 ], [ %.086, %197 ], [ %.086, %195 ], [ %.086, %184 ], [ %.086, %174 ], [ %.086, %168 ], [ %.086, %164 ], [ %.086, %163 ], [ %.086, %148 ], [ %147, %146 ], [ %.086, %128 ], [ %.086, %124 ], [ 0, %123 ], [ %.086, %121 ], [ %.086, %120 ], [ %.086, %118 ], [ %.086, %117 ], [ %.086, %104 ], [ %.086, %94 ], [ %.086, %92 ], [ %.086, %80 ], [ %.086, %70 ], [ %.086, %69 ], [ %.086, %56 ], [ %.086, %46 ], [ %.086, %44 ], [ %.086, %32 ], [ %.086, %22 ]
  %.084.be = phi i32 [ %.084, %21 ], [ %.084, %540 ], [ %.084, %539 ], [ %.084, %538 ], [ %.084, %537 ], [ %.084, %536 ], [ %.084, %534 ], [ %.084, %533 ], [ %.084, %531 ], [ %.084, %530 ], [ %.082, %529 ], [ %.084, %528 ], [ %.084, %524 ], [ %.084, %523 ], [ %.084, %519 ], [ %.084, %518 ], [ %.084, %507 ], [ %.084, %505 ], [ %.084, %504 ], [ %.084, %484 ], [ %.084, %474 ], [ %.084, %470 ], [ %.084, %467 ], [ %.084, %466 ], [ %.084, %456 ], [ %.084, %446 ], [ %.084, %443 ], [ %.084, %441 ], [ %.084, %440 ], [ %.084, %430 ], [ %.084, %420 ], [ %.084, %419 ], [ %.084, %417 ], [ %.084, %400 ], [ %.084, %390 ], [ %.084, %388 ], [ %.084, %377 ], [ %.084, %367 ], [ %.084, %361 ], [ %.084, %357 ], [ %.084, %356 ], [ %.084, %351 ], [ %.084, %349 ], [ %.084, %345 ], [ %.084, %341 ], [ %.084, %333 ], [ %.084, %332 ], [ %.084, %331 ], [ %.084, %321 ], [ %.084, %311 ], [ %.084, %300 ], [ %.084, %298 ], [ %.084, %286 ], [ %.084, %276 ], [ %.084, %273 ], [ %.084, %272 ], [ %.084, %269 ], [ %.084, %268 ], [ %.084, %258 ], [ %.084, %248 ], [ %.084, %247 ], [ %.084, %237 ], [ %.084, %227 ], [ %.084, %226 ], [ %.082, %216 ], [ %.084, %206 ], [ %.084, %197 ], [ %.084, %195 ], [ %.084, %184 ], [ %.084, %174 ], [ %.084, %168 ], [ %.084, %164 ], [ -1, %163 ], [ %.084, %148 ], [ %.084, %146 ], [ %.084, %128 ], [ %.084, %124 ], [ %.084, %123 ], [ %.084, %121 ], [ %.084, %120 ], [ %.084, %118 ], [ %.084, %117 ], [ %.084, %104 ], [ %.084, %94 ], [ %.084, %92 ], [ %.084, %80 ], [ %.084, %70 ], [ %.084, %69 ], [ %.084, %56 ], [ %.084, %46 ], [ %.084, %44 ], [ %.084, %32 ], [ %.084, %22 ]
  %.082.be = phi i32 [ %.082, %21 ], [ %.082, %540 ], [ %.082, %539 ], [ %.082, %538 ], [ %.082, %537 ], [ %.082, %536 ], [ %.082, %534 ], [ %.082, %533 ], [ %532, %531 ], [ %.082, %530 ], [ %.082, %529 ], [ %.082, %528 ], [ %.082, %524 ], [ %.082, %523 ], [ %.082, %519 ], [ %.082, %518 ], [ %.082, %507 ], [ %.082, %505 ], [ %.082, %504 ], [ %.082, %484 ], [ %.082, %474 ], [ %.082, %470 ], [ %.082, %467 ], [ %.082, %466 ], [ %.082, %456 ], [ %.082, %446 ], [ %.082, %443 ], [ %.082, %441 ], [ %.082, %440 ], [ %.082, %430 ], [ %.082, %420 ], [ %.082, %419 ], [ %.082, %417 ], [ %.082, %400 ], [ %.082, %390 ], [ %.082, %388 ], [ %.082, %377 ], [ %.082, %367 ], [ %.082, %361 ], [ %.082, %357 ], [ %.082, %356 ], [ %.082, %351 ], [ %.082, %349 ], [ %.082, %345 ], [ %.082, %341 ], [ %.082, %333 ], [ %.082, %332 ], [ %.082, %331 ], [ %.082, %321 ], [ %.082, %311 ], [ %.082, %300 ], [ %.082, %298 ], [ %.082, %286 ], [ %.082, %276 ], [ %.082, %273 ], [ %.082, %272 ], [ %.082, %269 ], [ %.082, %268 ], [ %.neg92, %258 ], [ %.082, %248 ], [ %.082, %247 ], [ %.082, %237 ], [ %.082, %227 ], [ %.082, %226 ], [ %.082, %216 ], [ %.082, %206 ], [ %.082, %197 ], [ %.082, %195 ], [ %.082, %184 ], [ %.082, %174 ], [ %.082, %168 ], [ %.082, %164 ], [ 0, %163 ], [ %.082, %148 ], [ %.082, %146 ], [ %.082, %128 ], [ %.082, %124 ], [ %.082, %123 ], [ %.082, %121 ], [ %.082, %120 ], [ %.082, %118 ], [ %.082, %117 ], [ %.082, %104 ], [ %.082, %94 ], [ %.082, %92 ], [ %.082, %80 ], [ %.082, %70 ], [ %.082, %69 ], [ %.082, %56 ], [ %.082, %46 ], [ %.082, %44 ], [ %.082, %32 ], [ %.082, %22 ]
  %.080.be = phi i32 [ %.080, %21 ], [ %.080, %540 ], [ %.080, %539 ], [ %.080, %538 ], [ %.080, %537 ], [ %.080, %536 ], [ %535, %534 ], [ %.080, %533 ], [ %.080, %531 ], [ %.080, %530 ], [ %.080, %529 ], [ %.080, %528 ], [ %.080, %524 ], [ %.080, %523 ], [ %.080, %519 ], [ %.080, %518 ], [ %.080, %507 ], [ %.080, %505 ], [ %.080, %504 ], [ %.080, %484 ], [ %.080, %474 ], [ %.080, %470 ], [ %.080, %467 ], [ %.080, %466 ], [ %.080, %456 ], [ %.080, %446 ], [ %.080, %443 ], [ %.080, %441 ], [ %.080, %440 ], [ %.080, %430 ], [ %.080, %420 ], [ %.080, %419 ], [ %.080, %417 ], [ %.080, %400 ], [ %.080, %390 ], [ %.080, %388 ], [ %.080, %377 ], [ %.080, %367 ], [ %.080, %361 ], [ %.080, %357 ], [ %.080, %356 ], [ %.080, %351 ], [ %.080, %349 ], [ %.080, %345 ], [ %.080, %341 ], [ %.080, %333 ], [ %.080, %332 ], [ %.080, %331 ], [ %.neg, %321 ], [ %.080, %311 ], [ %.080, %300 ], [ %.080, %298 ], [ %.080, %286 ], [ %.080, %276 ], [ 0, %273 ], [ %.080, %272 ], [ %.080, %269 ], [ %.080, %268 ], [ %.080, %258 ], [ %.080, %248 ], [ %.080, %247 ], [ %.080, %237 ], [ %.080, %227 ], [ %.080, %226 ], [ %.080, %216 ], [ %.080, %206 ], [ %.080, %197 ], [ %.080, %195 ], [ %.080, %184 ], [ %.080, %174 ], [ %.080, %168 ], [ %.080, %164 ], [ %.080, %163 ], [ %.080, %148 ], [ %.080, %146 ], [ %.080, %128 ], [ %.080, %124 ], [ %.080, %123 ], [ %.080, %121 ], [ %.080, %120 ], [ %.080, %118 ], [ %.080, %117 ], [ %.080, %104 ], [ %.080, %94 ], [ %.080, %92 ], [ %.080, %80 ], [ %.080, %70 ], [ %.080, %69 ], [ %.080, %56 ], [ %.080, %46 ], [ %.080, %44 ], [ %.080, %32 ], [ %.080, %22 ]
  %.078.be = phi i32 [ %.078, %21 ], [ %.078, %540 ], [ %.078, %539 ], [ %.078, %538 ], [ %.078, %537 ], [ %.078, %536 ], [ %.078, %534 ], [ %.078, %533 ], [ %.078, %531 ], [ %.078, %530 ], [ %.078, %529 ], [ %.078, %528 ], [ %.078, %524 ], [ %.078, %523 ], [ %.078, %519 ], [ %.078, %518 ], [ %.078, %507 ], [ %.078, %505 ], [ %.078, %504 ], [ %.078, %484 ], [ %.078, %474 ], [ %.078, %470 ], [ %.078, %467 ], [ %.078, %466 ], [ %.078, %456 ], [ %.078, %446 ], [ %.078, %443 ], [ %.078, %441 ], [ %.078, %440 ], [ %.078, %430 ], [ %.078, %420 ], [ %.078, %419 ], [ %.078, %417 ], [ %.078, %400 ], [ %.078, %390 ], [ %.078, %388 ], [ %.078, %377 ], [ %.078, %367 ], [ %.078, %361 ], [ %.078, %357 ], [ %.078, %356 ], [ %.078, %351 ], [ %350, %349 ], [ %.078, %345 ], [ %.078, %341 ], [ 0, %333 ], [ %.078, %332 ], [ %.078, %331 ], [ %.078, %321 ], [ %.078, %311 ], [ %.078, %300 ], [ %.078, %298 ], [ %.078, %286 ], [ %.078, %276 ], [ %.078, %273 ], [ %.078, %272 ], [ %.078, %269 ], [ %.078, %268 ], [ %.078, %258 ], [ %.078, %248 ], [ %.078, %247 ], [ %.078, %237 ], [ %.078, %227 ], [ %.078, %226 ], [ %.078, %216 ], [ %.078, %206 ], [ %.078, %197 ], [ %.078, %195 ], [ %.078, %184 ], [ %.078, %174 ], [ %.078, %168 ], [ %.078, %164 ], [ %.078, %163 ], [ %.078, %148 ], [ %.078, %146 ], [ %.078, %128 ], [ %.078, %124 ], [ %.078, %123 ], [ %.078, %121 ], [ %.078, %120 ], [ %.078, %118 ], [ %.078, %117 ], [ %.078, %104 ], [ %.078, %94 ], [ %.078, %92 ], [ %.078, %80 ], [ %.078, %70 ], [ %.078, %69 ], [ %.078, %56 ], [ %.078, %46 ], [ %.078, %44 ], [ %.078, %32 ], [ %.078, %22 ]
  %.076.be = phi i32 [ %.076, %21 ], [ %.076, %540 ], [ %.076, %539 ], [ %.076, %538 ], [ %.076, %537 ], [ %.076, %536 ], [ %.076, %534 ], [ %.076, %533 ], [ %.076, %531 ], [ %.076, %530 ], [ %.076, %529 ], [ %.076, %528 ], [ %.076, %524 ], [ %.076, %523 ], [ %.076, %519 ], [ %.076, %518 ], [ %.076, %507 ], [ %.076, %505 ], [ %.076, %504 ], [ %.076, %484 ], [ %.076, %474 ], [ %.076, %470 ], [ %.076, %467 ], [ %.076, %466 ], [ %.076, %456 ], [ %.076, %446 ], [ %.076, %443 ], [ %.076, %441 ], [ %.076, %440 ], [ %.076, %430 ], [ %.076, %420 ], [ %.074, %419 ], [ %.076, %417 ], [ %.076, %400 ], [ %.076, %390 ], [ %.076, %388 ], [ %.076, %377 ], [ %.076, %367 ], [ %.076, %361 ], [ %.076, %357 ], [ -1, %356 ], [ %.076, %351 ], [ %.076, %349 ], [ %.076, %345 ], [ %.076, %341 ], [ %.076, %333 ], [ %.076, %332 ], [ %.076, %331 ], [ %.076, %321 ], [ %.076, %311 ], [ %.076, %300 ], [ %.076, %298 ], [ %.076, %286 ], [ %.076, %276 ], [ %.076, %273 ], [ %.076, %272 ], [ %.076, %269 ], [ %.076, %268 ], [ %.076, %258 ], [ %.076, %248 ], [ %.076, %247 ], [ %.076, %237 ], [ %.076, %227 ], [ %.076, %226 ], [ %.076, %216 ], [ %.076, %206 ], [ %.076, %197 ], [ %.076, %195 ], [ %.076, %184 ], [ %.076, %174 ], [ %.076, %168 ], [ %.076, %164 ], [ %.076, %163 ], [ %.076, %148 ], [ %.076, %146 ], [ %.076, %128 ], [ %.076, %124 ], [ %.076, %123 ], [ %.076, %121 ], [ %.076, %120 ], [ %.076, %118 ], [ %.076, %117 ], [ %.076, %104 ], [ %.076, %94 ], [ %.076, %92 ], [ %.076, %80 ], [ %.076, %70 ], [ %.076, %69 ], [ %.076, %56 ], [ %.076, %46 ], [ %.076, %44 ], [ %.076, %32 ], [ %.076, %22 ]
  %.074.be = phi i32 [ %.074, %21 ], [ %.074, %540 ], [ %.074, %539 ], [ %.074, %538 ], [ %.074, %537 ], [ %.074, %536 ], [ %.074, %534 ], [ %.074, %533 ], [ %.074, %531 ], [ %.074, %530 ], [ %.074, %529 ], [ %.074, %528 ], [ %.074, %524 ], [ %.074, %523 ], [ %.074, %519 ], [ %.074, %518 ], [ %.074, %507 ], [ %.074, %505 ], [ %.074, %504 ], [ %.074, %484 ], [ %.074, %474 ], [ %.074, %470 ], [ %.074, %467 ], [ %.074, %466 ], [ %.074, %456 ], [ %.074, %446 ], [ %.074, %443 ], [ %442, %441 ], [ %.074, %440 ], [ %.074, %430 ], [ %.074, %420 ], [ %.074, %419 ], [ %.074, %417 ], [ %.074, %400 ], [ %.074, %390 ], [ %.074, %388 ], [ %.074, %377 ], [ %.074, %367 ], [ %.074, %361 ], [ %.074, %357 ], [ 0, %356 ], [ %.074, %351 ], [ %.074, %349 ], [ %.074, %345 ], [ %.074, %341 ], [ %.074, %333 ], [ %.074, %332 ], [ %.074, %331 ], [ %.074, %321 ], [ %.074, %311 ], [ %.074, %300 ], [ %.074, %298 ], [ %.074, %286 ], [ %.074, %276 ], [ %.074, %273 ], [ %.074, %272 ], [ %.074, %269 ], [ %.074, %268 ], [ %.074, %258 ], [ %.074, %248 ], [ %.074, %247 ], [ %.074, %237 ], [ %.074, %227 ], [ %.074, %226 ], [ %.074, %216 ], [ %.074, %206 ], [ %.074, %197 ], [ %.074, %195 ], [ %.074, %184 ], [ %.074, %174 ], [ %.074, %168 ], [ %.074, %164 ], [ %.074, %163 ], [ %.074, %148 ], [ %.074, %146 ], [ %.074, %128 ], [ %.074, %124 ], [ %.074, %123 ], [ %.074, %121 ], [ %.074, %120 ], [ %.074, %118 ], [ %.074, %117 ], [ %.074, %104 ], [ %.074, %94 ], [ %.074, %92 ], [ %.074, %80 ], [ %.074, %70 ], [ %.074, %69 ], [ %.074, %56 ], [ %.074, %46 ], [ %.074, %44 ], [ %.074, %32 ], [ %.074, %22 ]
  %.072.be = phi i32 [ %.072, %21 ], [ %.072, %540 ], [ %.072, %539 ], [ %.072, %538 ], [ %.072, %537 ], [ %.072, %536 ], [ %.072, %534 ], [ %.072, %533 ], [ %.072, %531 ], [ %.072, %530 ], [ %.072, %529 ], [ %.072, %528 ], [ %.072, %524 ], [ %.072, %523 ], [ %.072, %519 ], [ %.072, %518 ], [ %.072, %507 ], [ %506, %505 ], [ %.072, %504 ], [ %.072, %484 ], [ %.072, %474 ], [ %.072, %470 ], [ 0, %467 ], [ %.072, %466 ], [ %.072, %456 ], [ %.072, %446 ], [ %.072, %443 ], [ %.072, %441 ], [ %.072, %440 ], [ %.072, %430 ], [ %.072, %420 ], [ %.072, %419 ], [ %.072, %417 ], [ %.072, %400 ], [ %.072, %390 ], [ %.072, %388 ], [ %.072, %377 ], [ %.072, %367 ], [ %.072, %361 ], [ %.072, %357 ], [ %.072, %356 ], [ %.072, %351 ], [ %.072, %349 ], [ %.072, %345 ], [ %.072, %341 ], [ %.072, %333 ], [ %.072, %332 ], [ %.072, %331 ], [ %.072, %321 ], [ %.072, %311 ], [ %.072, %300 ], [ %.072, %298 ], [ %.072, %286 ], [ %.072, %276 ], [ %.072, %273 ], [ %.072, %272 ], [ %.072, %269 ], [ %.072, %268 ], [ %.072, %258 ], [ %.072, %248 ], [ %.072, %247 ], [ %.072, %237 ], [ %.072, %227 ], [ %.072, %226 ], [ %.072, %216 ], [ %.072, %206 ], [ %.072, %197 ], [ %.072, %195 ], [ %.072, %184 ], [ %.072, %174 ], [ %.072, %168 ], [ %.072, %164 ], [ %.072, %163 ], [ %.072, %148 ], [ %.072, %146 ], [ %.072, %128 ], [ %.072, %124 ], [ %.072, %123 ], [ %.072, %121 ], [ %.072, %120 ], [ %.072, %118 ], [ %.072, %117 ], [ %.072, %104 ], [ %.072, %94 ], [ %.072, %92 ], [ %.072, %80 ], [ %.072, %70 ], [ %.072, %69 ], [ %.072, %56 ], [ %.072, %46 ], [ %.072, %44 ], [ %.072, %32 ], [ %.072, %22 ]
  %.0.be = phi i32 [ %.0, %21 ], [ 1095206382, %540 ], [ -478809755, %539 ], [ 1417935747, %538 ], [ -1426566523, %537 ], [ 638556177, %536 ], [ -601469646, %534 ], [ 8888813, %533 ], [ -1204672951, %531 ], [ 1158497865, %530 ], [ 939089770, %529 ], [ 1029024423, %528 ], [ 422576573, %524 ], [ -385156805, %523 ], [ -1539008954, %519 ], [ -988345526, %518 ], [ 1298216755, %507 ], [ -1975099704, %505 ], [ 426128393, %504 ], [ %503, %484 ], [ %483, %474 ], [ %473, %470 ], [ -1975099704, %467 ], [ 1125227512, %466 ], [ %465, %456 ], [ %455, %446 ], [ %445, %443 ], [ 815625069, %441 ], [ 1410997449, %440 ], [ %439, %430 ], [ %429, %420 ], [ 2061791506, %419 ], [ %418, %417 ], [ %416, %400 ], [ %399, %390 ], [ %389, %388 ], [ %387, %377 ], [ %376, %367 ], [ %366, %361 ], [ %360, %357 ], [ 815625069, %356 ], [ 1298216755, %351 ], [ 474117354, %349 ], [ -1365623732, %345 ], [ %344, %341 ], [ 474117354, %333 ], [ 521148134, %332 ], [ 1473214695, %331 ], [ %330, %321 ], [ %320, %311 ], [ -541572199, %300 ], [ %299, %298 ], [ %297, %286 ], [ %285, %276 ], [ 1473214695, %273 ], [ 272868770, %272 ], [ %271, %269 ], [ 744175899, %268 ], [ %267, %258 ], [ %257, %248 ], [ -552023653, %247 ], [ %246, %237 ], [ %236, %227 ], [ 1262492346, %226 ], [ %225, %216 ], [ %215, %206 ], [ %205, %197 ], [ %196, %195 ], [ %194, %184 ], [ %183, %174 ], [ %173, %168 ], [ %167, %164 ], [ 744175899, %163 ], [ 521148134, %148 ], [ -1862058444, %146 ], [ 134413104, %128 ], [ %127, %124 ], [ -1862058444, %123 ], [ 295539734, %121 ], [ 801074041, %120 ], [ 332934138, %118 ], [ 9367200, %117 ], [ %116, %104 ], [ %103, %94 ], [ %93, %92 ], [ %91, %80 ], [ %79, %70 ], [ 332934138, %69 ], [ %68, %56 ], [ %55, %46 ], [ %45, %44 ], [ %43, %32 ], [ %31, %22 ]
  br label %21

22:                                               ; preds = %21
  %23 = load i32, i32* @x.1, align 4
  %24 = load i32, i32* @y.2, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 -988345526, i32 282913868
  br label %.backedge

32:                                               ; preds = %21
  %33 = load i32, i32* %8, align 4
  %34 = icmp slt i32 %.090, %33
  store i1 %34, i1* %6, align 1
  %35 = load i32, i32* @x.1, align 4
  %36 = load i32, i32* @y.2, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 -712737318, i32 282913868
  br label %.backedge

44:                                               ; preds = %21
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %45 = select i1 %.0..0..0., i32 1638460436, i32 1114682298
  br label %.backedge

46:                                               ; preds = %21
  %47 = load i32, i32* @x.1, align 4
  %48 = load i32, i32* @y.2, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 -1539008954, i32 195781042
  br label %.backedge

56:                                               ; preds = %21
  %57 = sext i32 %.090 to i64
  %58 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %57
  store i32 1048576, i32* %58, align 4
  %59 = getelementptr inbounds [32 x i8], [32 x i8]* @node, i64 0, i64 %57
  store i8 0, i8* %59, align 1
  %60 = load i32, i32* @x.1, align 4
  %61 = load i32, i32* @y.2, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 97117452, i32 195781042
  br label %.backedge

69:                                               ; preds = %21
  br label %.backedge

70:                                               ; preds = %21
  %71 = load i32, i32* @x.1, align 4
  %72 = load i32, i32* @y.2, align 4
  %73 = add i32 %71, -1
  %74 = mul i32 %73, %71
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %77, %76
  %79 = select i1 %78, i32 -385156805, i32 -66522635
  br label %.backedge

80:                                               ; preds = %21
  %81 = load i32, i32* %8, align 4
  %82 = icmp slt i32 %.088, %81
  store i1 %82, i1* %5, align 1
  %83 = load i32, i32* @x.1, align 4
  %84 = load i32, i32* @y.2, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -2031112468, i32 -66522635
  br label %.backedge

92:                                               ; preds = %21
  %.0..0..0.67 = load volatile i1, i1* %5, align 1
  %93 = select i1 %.0..0..0.67, i32 -1584200281, i32 -1973392722
  br label %.backedge

94:                                               ; preds = %21
  %95 = load i32, i32* @x.1, align 4
  %96 = load i32, i32* @y.2, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 422576573, i32 -1290292125
  br label %.backedge

104:                                              ; preds = %21
  %105 = sext i32 %.090 to i64
  %106 = sext i32 %.088 to i64
  %107 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* @go, i64 0, i64 %105, i64 %106
  store i32 1048576, i32* %107, align 4
  %108 = load i32, i32* @x.1, align 4
  %109 = load i32, i32* @y.2, align 4
  %110 = add i32 %108, -1
  %111 = mul i32 %110, %108
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %114, %113
  %116 = select i1 %115, i32 -1707421493, i32 -1290292125
  br label %.backedge

117:                                              ; preds = %21
  br label %.backedge

118:                                              ; preds = %21
  %119 = add i32 %.088, 1
  br label %.backedge

120:                                              ; preds = %21
  br label %.backedge

121:                                              ; preds = %21
  %122 = add i32 %.090, 1
  br label %.backedge

123:                                              ; preds = %21
  br label %.backedge

124:                                              ; preds = %21
  %125 = load i32, i32* %7, align 4
  %126 = icmp slt i32 %.086, %125
  %127 = select i1 %126, i32 961047623, i32 -1304289169
  br label %.backedge

128:                                              ; preds = %21
  %129 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %9)
  %130 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) %129, i8* nonnull dereferenceable(1) @cn1)
  %131 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %130, i32* nonnull dereferenceable(4) %10)
  %132 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) %131, i8* nonnull dereferenceable(1) @cn2)
  %133 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %132, i32* nonnull dereferenceable(4) %11)
  %134 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) %133, i8* nonnull dereferenceable(1) @cn3)
  %135 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %134, i32* nonnull dereferenceable(4) %12)
  %136 = load i32, i32* %11, align 4
  %137 = load i32, i32* %9, align 4
  %138 = add i32 %137, -1
  %139 = sext i32 %138 to i64
  %140 = load i32, i32* %10, align 4
  %141 = add i32 %140, -1
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* @go, i64 0, i64 %139, i64 %142
  store i32 %136, i32* %143, align 4
  %144 = load i32, i32* %12, align 4
  %145 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* @go, i64 0, i64 %142, i64 %139
  store i32 %144, i32* %145, align 4
  br label %.backedge

146:                                              ; preds = %21
  %147 = add i32 %.086, 1
  br label %.backedge

148:                                              ; preds = %21
  %149 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %13)
  %150 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) %149, i8* nonnull dereferenceable(1) @cn1)
  %151 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %150, i32* nonnull dereferenceable(4) %14)
  %152 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) %151, i8* nonnull dereferenceable(1) @cn2)
  %153 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %152, i32* nonnull dereferenceable(4) %16)
  %154 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) %153, i8* nonnull dereferenceable(1) @cn3)
  %155 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %154, i32* nonnull dereferenceable(4) %15)
  %156 = load i32, i32* %13, align 4
  %157 = add i32 %156, -1
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %158
  store i32 0, i32* %159, align 4
  %160 = load i32, i32* %15, align 4
  %161 = load i32, i32* %16, align 4
  %162 = sub i32 %161, %160
  store i32 %162, i32* %16, align 4
  br label %.backedge

163:                                              ; preds = %21
  br label %.backedge

164:                                              ; preds = %21
  %165 = load i32, i32* %8, align 4
  %166 = icmp slt i32 %.082, %165
  %167 = select i1 %166, i32 1424561798, i32 137637822
  br label %.backedge

168:                                              ; preds = %21
  %169 = sext i32 %.082 to i64
  %170 = getelementptr inbounds [32 x i8], [32 x i8]* @node, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = and i8 %171, 1
  %.not93 = icmp eq i8 %172, 0
  %173 = select i1 %.not93, i32 -2022890160, i32 1262492346
  br label %.backedge

174:                                              ; preds = %21
  %175 = load i32, i32* @x.1, align 4
  %176 = load i32, i32* @y.2, align 4
  %177 = add i32 %175, -1
  %178 = mul i32 %177, %175
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %181, %180
  %183 = select i1 %182, i32 1029024423, i32 549197851
  br label %.backedge

184:                                              ; preds = %21
  %185 = icmp eq i32 %.084, -1
  store i1 %185, i1* %4, align 1
  %186 = load i32, i32* @x.1, align 4
  %187 = load i32, i32* @y.2, align 4
  %188 = add i32 %186, -1
  %189 = mul i32 %188, %186
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %192, %191
  %194 = select i1 %193, i32 -822931155, i32 549197851
  br label %.backedge

195:                                              ; preds = %21
  %.0..0..0.68 = load volatile i1, i1* %4, align 1
  %196 = select i1 %.0..0..0.68, i32 -1713612433, i32 -1796905889
  br label %.backedge

197:                                              ; preds = %21
  %198 = sext i32 %.082 to i64
  %199 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = sext i32 %.084 to i64
  %202 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = icmp slt i32 %200, %203
  %205 = select i1 %204, i32 -1713612433, i32 1262492346
  br label %.backedge

206:                                              ; preds = %21
  %207 = load i32, i32* @x.1, align 4
  %208 = load i32, i32* @y.2, align 4
  %209 = add i32 %207, -1
  %210 = mul i32 %209, %207
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %213, %212
  %215 = select i1 %214, i32 939089770, i32 -2119435585
  br label %.backedge

216:                                              ; preds = %21
  %217 = load i32, i32* @x.1, align 4
  %218 = load i32, i32* @y.2, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 1468167451, i32 -2119435585
  br label %.backedge

226:                                              ; preds = %21
  br label %.backedge

227:                                              ; preds = %21
  %228 = load i32, i32* @x.1, align 4
  %229 = load i32, i32* @y.2, align 4
  %230 = add i32 %228, -1
  %231 = mul i32 %230, %228
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %234, %233
  %236 = select i1 %235, i32 1158497865, i32 654570982
  br label %.backedge

237:                                              ; preds = %21
  %238 = load i32, i32* @x.1, align 4
  %239 = load i32, i32* @y.2, align 4
  %240 = add i32 %238, -1
  %241 = mul i32 %240, %238
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %244, %243
  %246 = select i1 %245, i32 -1743292297, i32 654570982
  br label %.backedge

247:                                              ; preds = %21
  br label %.backedge

248:                                              ; preds = %21
  %249 = load i32, i32* @x.1, align 4
  %250 = load i32, i32* @y.2, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 -1204672951, i32 -1181835959
  br label %.backedge

258:                                              ; preds = %21
  %.neg92 = add i32 %.082, 1
  %259 = load i32, i32* @x.1, align 4
  %260 = load i32, i32* @y.2, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 1774221835, i32 -1181835959
  br label %.backedge

268:                                              ; preds = %21
  br label %.backedge

269:                                              ; preds = %21
  %270 = icmp eq i32 %.084, -1
  %271 = select i1 %270, i32 -457106277, i32 -1179014960
  br label %.backedge

272:                                              ; preds = %21
  br label %.backedge

273:                                              ; preds = %21
  %274 = sext i32 %.084 to i64
  %275 = getelementptr inbounds [32 x i8], [32 x i8]* @node, i64 0, i64 %274
  store i8 1, i8* %275, align 1
  br label %.backedge

276:                                              ; preds = %21
  %277 = load i32, i32* @x.1, align 4
  %278 = load i32, i32* @y.2, align 4
  %279 = add i32 %277, -1
  %280 = mul i32 %279, %277
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %283, %282
  %285 = select i1 %284, i32 8888813, i32 -1283671041
  br label %.backedge

286:                                              ; preds = %21
  %287 = load i32, i32* %8, align 4
  %288 = icmp slt i32 %.080, %287
  store i1 %288, i1* %3, align 1
  %289 = load i32, i32* @x.1, align 4
  %290 = load i32, i32* @y.2, align 4
  %291 = add i32 %289, -1
  %292 = mul i32 %291, %289
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %295, %294
  %297 = select i1 %296, i32 -1672851694, i32 -1283671041
  br label %.backedge

298:                                              ; preds = %21
  %.0..0..0.69 = load volatile i1, i1* %3, align 1
  %299 = select i1 %.0..0..0.69, i32 -1756913740, i32 -1504486586
  br label %.backedge

300:                                              ; preds = %21
  %301 = sext i32 %.080 to i64
  %302 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %301
  %303 = sext i32 %.084 to i64
  %304 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* @go, i64 0, i64 %303, i64 %301
  %307 = load i32, i32* %306, align 4
  %308 = add i32 %307, %305
  store i32 %308, i32* %17, align 4
  %309 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %302, i32* nonnull dereferenceable(4) %17)
  %310 = load i32, i32* %309, align 4
  store i32 %310, i32* %302, align 4
  br label %.backedge

311:                                              ; preds = %21
  %312 = load i32, i32* @x.1, align 4
  %313 = load i32, i32* @y.2, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 -601469646, i32 -2070246388
  br label %.backedge

321:                                              ; preds = %21
  %.neg = add i32 %.080, 1
  %322 = load i32, i32* @x.1, align 4
  %323 = load i32, i32* @y.2, align 4
  %324 = add i32 %322, -1
  %325 = mul i32 %324, %322
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %328, %327
  %330 = select i1 %329, i32 -948802899, i32 -2070246388
  br label %.backedge

331:                                              ; preds = %21
  br label %.backedge

332:                                              ; preds = %21
  br label %.backedge

333:                                              ; preds = %21
  %334 = load i32, i32* %14, align 4
  %335 = add i32 %334, -1
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %336
  %338 = load i32, i32* %337, align 4
  %339 = load i32, i32* %16, align 4
  %340 = sub i32 %339, %338
  store i32 %340, i32* %16, align 4
  br label %.backedge

341:                                              ; preds = %21
  %342 = load i32, i32* %8, align 4
  %343 = icmp slt i32 %.078, %342
  %344 = select i1 %343, i32 1284090571, i32 835289170
  br label %.backedge

345:                                              ; preds = %21
  %346 = sext i32 %.078 to i64
  %347 = getelementptr inbounds [32 x i8], [32 x i8]* @node, i64 0, i64 %346
  store i8 0, i8* %347, align 1
  %348 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %346
  store i32 1048576, i32* %348, align 4
  br label %.backedge

349:                                              ; preds = %21
  %350 = add i32 %.078, 1
  br label %.backedge

351:                                              ; preds = %21
  %352 = load i32, i32* %14, align 4
  %353 = add i32 %352, -1
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %354
  store i32 0, i32* %355, align 4
  br label %.backedge

356:                                              ; preds = %21
  br label %.backedge

357:                                              ; preds = %21
  %358 = load i32, i32* %8, align 4
  %359 = icmp slt i32 %.074, %358
  %360 = select i1 %359, i32 -1835713061, i32 -44768110
  br label %.backedge

361:                                              ; preds = %21
  %362 = sext i32 %.074 to i64
  %363 = getelementptr inbounds [32 x i8], [32 x i8]* @node, i64 0, i64 %362
  %364 = load i8, i8* %363, align 1
  %365 = and i8 %364, 1
  %.not = icmp eq i8 %365, 0
  %366 = select i1 %.not, i32 701311727, i32 2061791506
  br label %.backedge

367:                                              ; preds = %21
  %368 = load i32, i32* @x.1, align 4
  %369 = load i32, i32* @y.2, align 4
  %370 = add i32 %368, -1
  %371 = mul i32 %370, %368
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %374, %373
  %376 = select i1 %375, i32 638556177, i32 -771357538
  br label %.backedge

377:                                              ; preds = %21
  %378 = icmp eq i32 %.076, -1
  store i1 %378, i1* %2, align 1
  %379 = load i32, i32* @x.1, align 4
  %380 = load i32, i32* @y.2, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 -751377588, i32 -771357538
  br label %.backedge

388:                                              ; preds = %21
  %.0..0..0.70 = load volatile i1, i1* %2, align 1
  %389 = select i1 %.0..0..0.70, i32 -443362279, i32 178606593
  br label %.backedge

390:                                              ; preds = %21
  %391 = load i32, i32* @x.1, align 4
  %392 = load i32, i32* @y.2, align 4
  %393 = add i32 %391, -1
  %394 = mul i32 %393, %391
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %397, %396
  %399 = select i1 %398, i32 -1426566523, i32 1361143194
  br label %.backedge

400:                                              ; preds = %21
  %401 = sext i32 %.074 to i64
  %402 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = sext i32 %.076 to i64
  %405 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %404
  %406 = load i32, i32* %405, align 4
  %407 = icmp slt i32 %403, %406
  store i1 %407, i1* %1, align 1
  %408 = load i32, i32* @x.1, align 4
  %409 = load i32, i32* @y.2, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 -137395131, i32 1361143194
  br label %.backedge

417:                                              ; preds = %21
  %.0..0..0.71 = load volatile i1, i1* %1, align 1
  %418 = select i1 %.0..0..0.71, i32 -443362279, i32 2061791506
  br label %.backedge

419:                                              ; preds = %21
  br label %.backedge

420:                                              ; preds = %21
  %421 = load i32, i32* @x.1, align 4
  %422 = load i32, i32* @y.2, align 4
  %423 = add i32 %421, -1
  %424 = mul i32 %423, %421
  %425 = and i32 %424, 1
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %427, %426
  %429 = select i1 %428, i32 1417935747, i32 -293304090
  br label %.backedge

430:                                              ; preds = %21
  %431 = load i32, i32* @x.1, align 4
  %432 = load i32, i32* @y.2, align 4
  %433 = add i32 %431, -1
  %434 = mul i32 %433, %431
  %435 = and i32 %434, 1
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %437, %436
  %439 = select i1 %438, i32 -547807683, i32 -293304090
  br label %.backedge

440:                                              ; preds = %21
  br label %.backedge

441:                                              ; preds = %21
  %442 = add i32 %.074, 1
  br label %.backedge

443:                                              ; preds = %21
  %444 = icmp eq i32 %.076, -1
  %445 = select i1 %444, i32 -1951101689, i32 -1370554405
  br label %.backedge

446:                                              ; preds = %21
  %447 = load i32, i32* @x.1, align 4
  %448 = load i32, i32* @y.2, align 4
  %449 = add i32 %447, -1
  %450 = mul i32 %449, %447
  %451 = and i32 %450, 1
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %453, %452
  %455 = select i1 %454, i32 -478809755, i32 538811279
  br label %.backedge

456:                                              ; preds = %21
  %457 = load i32, i32* @x.1, align 4
  %458 = load i32, i32* @y.2, align 4
  %459 = add i32 %457, -1
  %460 = mul i32 %459, %457
  %461 = and i32 %460, 1
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %463, %462
  %465 = select i1 %464, i32 77123631, i32 538811279
  br label %.backedge

466:                                              ; preds = %21
  br label %.backedge

467:                                              ; preds = %21
  %468 = sext i32 %.076 to i64
  %469 = getelementptr inbounds [32 x i8], [32 x i8]* @node, i64 0, i64 %468
  store i8 1, i8* %469, align 1
  br label %.backedge

470:                                              ; preds = %21
  %471 = load i32, i32* %8, align 4
  %472 = icmp slt i32 %.072, %471
  %473 = select i1 %472, i32 -1504455850, i32 1553355508
  br label %.backedge

474:                                              ; preds = %21
  %475 = load i32, i32* @x.1, align 4
  %476 = load i32, i32* @y.2, align 4
  %477 = add i32 %475, -1
  %478 = mul i32 %477, %475
  %479 = and i32 %478, 1
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %481, %480
  %483 = select i1 %482, i32 1095206382, i32 -1417901467
  br label %.backedge

484:                                              ; preds = %21
  %485 = sext i32 %.072 to i64
  %486 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %485
  %487 = sext i32 %.076 to i64
  %488 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %487
  %489 = load i32, i32* %488, align 4
  %490 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* @go, i64 0, i64 %487, i64 %485
  %491 = load i32, i32* %490, align 4
  %492 = add i32 %491, %489
  store i32 %492, i32* %18, align 4
  %493 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %486, i32* nonnull dereferenceable(4) %18)
  %494 = load i32, i32* %493, align 4
  store i32 %494, i32* %486, align 4
  %495 = load i32, i32* @x.1, align 4
  %496 = load i32, i32* @y.2, align 4
  %497 = add i32 %495, -1
  %498 = mul i32 %497, %495
  %499 = and i32 %498, 1
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %501, %500
  %503 = select i1 %502, i32 -71347501, i32 -1417901467
  br label %.backedge

504:                                              ; preds = %21
  br label %.backedge

505:                                              ; preds = %21
  %506 = add i32 %.072, 1
  br label %.backedge

507:                                              ; preds = %21
  br label %.backedge

508:                                              ; preds = %21
  %509 = load i32, i32* %13, align 4
  %510 = add i32 %509, -1
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %511
  %513 = load i32, i32* %512, align 4
  %514 = load i32, i32* %16, align 4
  %515 = sub i32 %514, %513
  store i32 %515, i32* %16, align 4
  %516 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %515)
  %517 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %516, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0

518:                                              ; preds = %21
  br label %.backedge

519:                                              ; preds = %21
  %520 = sext i32 %.090 to i64
  %521 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %520
  store i32 1048576, i32* %521, align 4
  %522 = getelementptr inbounds [32 x i8], [32 x i8]* @node, i64 0, i64 %520
  store i8 0, i8* %522, align 1
  br label %.backedge

523:                                              ; preds = %21
  br label %.backedge

524:                                              ; preds = %21
  %525 = sext i32 %.090 to i64
  %526 = sext i32 %.088 to i64
  %527 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* @go, i64 0, i64 %525, i64 %526
  store i32 1048576, i32* %527, align 4
  br label %.backedge

528:                                              ; preds = %21
  br label %.backedge

529:                                              ; preds = %21
  br label %.backedge

530:                                              ; preds = %21
  br label %.backedge

531:                                              ; preds = %21
  %532 = add i32 %.082, 1
  br label %.backedge

533:                                              ; preds = %21
  br label %.backedge

534:                                              ; preds = %21
  %535 = add i32 %.080, 1
  br label %.backedge

536:                                              ; preds = %21
  br label %.backedge

537:                                              ; preds = %21
  br label %.backedge

538:                                              ; preds = %21
  br label %.backedge

539:                                              ; preds = %21
  br label %.backedge

540:                                              ; preds = %21
  %541 = sext i32 %.072 to i64
  %542 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %541
  %543 = sext i32 %.076 to i64
  %544 = getelementptr inbounds [32 x i32], [32 x i32]* @dict, i64 0, i64 %543
  %545 = load i32, i32* %544, align 4
  %546 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* @go, i64 0, i64 %543, i64 %541
  %547 = load i32, i32* %546, align 4
  %548 = add i32 %547, %545
  store i32 %548, i32* %18, align 4
  %549 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %542, i32* nonnull dereferenceable(4) %18)
  %550 = load i32, i32* %549, align 4
  store i32 %550, i32* %542, align 4
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i32* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 65803028, %2 ], [ -1867831819, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 65803028, label %8
    i32 842340735, label %.outer.backedge
    i32 -2128634945, label %11
    i32 -1867831819, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i32, i32* %4, align 4
  %.0..0..0.6 = load volatile i32, i32* %3, align 4
  %9 = icmp slt i32 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 842340735, i32 -2128634945
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i32* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i32* %.07.ph
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s943256765.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.5, align 4
  %4 = load i32, i32* @y.6, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1730929214, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1730929214, label %11
    i32 -569225404, label %14
    i32 -1228269499, label %24
    i32 1214613208, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -569225404, i32 1214613208
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.5, align 4
  %16 = load i32, i32* @y.6, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1228269499, i32 1214613208
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -569225404, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
